{
  "cve_id": "CVE-2018-7419",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.12 and 2.4.0 to 2.4.4, the NBAP dissector could crash. This was addressed in epan/dissectors/asn1/nbap/nbap.cnf by ensuring DCH ID initialization.",
  "repo": "wireshark/wireshark",
  "patch_hash": "47726eafe572686e5b36ea2e8798096cf1a07bf9",
  "patch_info": {
    "commit_hash": "47726eafe572686e5b36ea2e8798096cf1a07bf9",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/47726eafe572686e5b36ea2e8798096cf1a07bf9",
    "files": [
      "epan/dissectors/asn1/nbap/nbap.cnf",
      "epan/dissectors/packet-nbap.c",
      "epan/dissectors/packet-nbap.h"
    ],
    "message": "NBAP: check that DCH ID was initialized before using it\n\nBug: 14443\nChange-Id: I184ed60d09576c00133c74b4376b2cb7106e5f80\nReviewed-on: https://code.wireshark.org/review/25874\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
      "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c",
      "epan/dissectors/packet-nbap.h||epan/dissectors/packet-nbap.h"
    ]
  },
  "patch_diff": {
    "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf": [
      "File: epan/dissectors/asn1/nbap/nbap.cnf -> epan/dissectors/asn1/nbap/nbap.cnf",
      "--- Hunk 1 ---",
      "[Context before]",
      "907:   num_dch_in_flow = private_data_get_num_dch_in_flow(actx->pinfo);",
      "908:   private_data_set_dch_id(actx->pinfo, dch_id);",
      "909:   if(num_dch_in_flow>0){",
      "910:       nbap_dch_chnl_info[dch_id].next_dch = 0;",
      "913:       }",
      "914:   }",
      "",
      "[Removed Lines]",
      "911:       if(private_data_get_prev_dch_id(actx->pinfo) != 0){",
      "912:           nbap_dch_chnl_info[private_data_get_prev_dch_id(actx->pinfo)].next_dch = dch_id;",
      "",
      "[Added Lines]",
      "910:       guint32 prev_dch_id = private_data_get_prev_dch_id(actx->pinfo);",
      "912:       if(prev_dch_id != 0 && prev_dch_id != 0xffffffff){",
      "913:           nbap_dch_chnl_info[prev_dch_id].next_dch = dch_id;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1302:     private_data_set_prev_dch_id(actx->pinfo,private_data_get_dch_id(actx->pinfo));",
      "1304: #.FN_HDR DCH-Specific-FDD-Item/ul-TransportFormatSet",
      "1305:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "1306:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "1307:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_UL);",
      "1310: #.FN_HDR DCH-Specific-FDD-Item/dl-TransportFormatSet",
      "1311:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "1312:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "1313:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_DL);",
      "1316: #.FN_HDR DCH-ModifySpecificItem-FDD/ul-TransportFormatSet",
      "1317:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "1318:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "1319:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_UL);",
      "1322: #.FN_HDR DCH-ModifySpecificItem-FDD/dl-TransportFormatSet",
      "1323:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "1324:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "1325:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_DL);",
      "1328: #.FN_HDR PCH-ParametersItem-CTCH-SetupRqstFDD/transportFormatSet",
      "1329:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "",
      "[Removed Lines]",
      "1308:     nbap_dch_chnl_info[private_data_get_dch_id(actx->pinfo)].num_ul_chans = 0;",
      "1314:     nbap_dch_chnl_info[private_data_get_dch_id(actx->pinfo)].num_dl_chans = 0;",
      "1320:     nbap_dch_chnl_info[private_data_get_dch_id(actx->pinfo)].num_ul_chans = 0;",
      "1326:     nbap_dch_chnl_info[private_data_get_dch_id(actx->pinfo)].num_dl_chans = 0;",
      "",
      "[Added Lines]",
      "1306:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
      "1310:     if (dch_id != 0xffffffff) {",
      "1311:         nbap_dch_chnl_info[dch_id].num_ul_chans = 0;",
      "1312:     }",
      "1315:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
      "1319:     if (dch_id != 0xffffffff) {",
      "1320:         nbap_dch_chnl_info[dch_id].num_dl_chans = 0;",
      "1321:     }",
      "1324:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
      "1328:     if (dch_id != 0xffffffff) {",
      "1329:         nbap_dch_chnl_info[dch_id].num_ul_chans = 0;",
      "1330:     }",
      "1333:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
      "1337:     if (dch_id != 0xffffffff) {",
      "1338:         nbap_dch_chnl_info[dch_id].num_dl_chans = 0;",
      "1339:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1354:     if(private_data_get_num_items(actx->pinfo)>0){",
      "1355:         num_items = private_data_get_num_items(actx->pinfo);",
      "1356:         dch_id = private_data_get_dch_id(actx->pinfo);",
      "1382:         }",
      "1383:     }",
      "",
      "[Removed Lines]",
      "1357:         common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
      "1358:         common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
      "1359:         switch(private_data_get_transport_format_set_type(actx->pinfo)){",
      "1360:             case NBAP_DCH_UL:",
      "1361:                 nbap_dch_chnl_info[dch_id].num_ul_chans++;",
      "1362:                 nbap_dch_chnl_info[dch_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1363:                 break;",
      "1364:             case NBAP_DCH_DL:",
      "1365:                 nbap_dch_chnl_info[dch_id].num_dl_chans++;",
      "1366:                 nbap_dch_chnl_info[dch_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1367:                 break;",
      "1368:             case NBAP_CPCH:",
      "1369:                 nbap_dch_chnl_info[common_physical_channel_id].num_ul_chans++;",
      "1370:                 nbap_dch_chnl_info[common_physical_channel_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1371:                 nbap_dch_chnl_info[common_physical_channel_id].num_dl_chans++;",
      "1372:                 nbap_dch_chnl_info[common_physical_channel_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1373:                 break;",
      "1374:             case NBAP_PCH:",
      "1375:                 nbap_dch_chnl_info[common_transport_channel_id].num_ul_chans++;",
      "1376:                 nbap_dch_chnl_info[common_transport_channel_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1377:                 nbap_dch_chnl_info[common_transport_channel_id].num_dl_chans++;",
      "1378:                 nbap_dch_chnl_info[common_transport_channel_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1379:                 break;",
      "1380:             default:",
      "1381:                 break;",
      "",
      "[Added Lines]",
      "1370:         if (num_items > 0 && dch_id != 0xffffffff) {",
      "1371:             common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
      "1372:             common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
      "1373:             switch(private_data_get_transport_format_set_type(actx->pinfo)){",
      "1374:                 case NBAP_DCH_UL:",
      "1375:                     nbap_dch_chnl_info[dch_id].num_ul_chans++;",
      "1376:                     nbap_dch_chnl_info[dch_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1377:                     break;",
      "1378:                 case NBAP_DCH_DL:",
      "1379:                     nbap_dch_chnl_info[dch_id].num_dl_chans++;",
      "1380:                     nbap_dch_chnl_info[dch_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1381:                     break;",
      "1382:                 case NBAP_CPCH:",
      "1383:                     nbap_dch_chnl_info[common_physical_channel_id].num_ul_chans++;",
      "1384:                     nbap_dch_chnl_info[common_physical_channel_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1385:                     nbap_dch_chnl_info[common_physical_channel_id].num_dl_chans++;",
      "1386:                     nbap_dch_chnl_info[common_physical_channel_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1387:                     break;",
      "1388:                 case NBAP_PCH:",
      "1389:                     nbap_dch_chnl_info[common_transport_channel_id].num_ul_chans++;",
      "1390:                     nbap_dch_chnl_info[common_transport_channel_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1391:                     nbap_dch_chnl_info[common_transport_channel_id].num_dl_chans++;",
      "1392:                     nbap_dch_chnl_info[common_transport_channel_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "1393:                     break;",
      "1394:                 default:",
      "1395:                     break;",
      "1396:             }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1396:     if(private_data_get_num_items(actx->pinfo)>0){",
      "1397:         num_items = private_data_get_num_items(actx->pinfo);",
      "1398:         dch_id = private_data_get_dch_id(actx->pinfo);",
      "1418:         }",
      "1419:     }",
      "",
      "[Removed Lines]",
      "1399:         common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
      "1400:         common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
      "1401:         switch(private_data_get_transport_format_set_type(actx->pinfo)){",
      "1402:             case NBAP_DCH_UL:",
      "1403:                 nbap_dch_chnl_info[dch_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1404:                 break;",
      "1405:             case NBAP_DCH_DL:",
      "1406:                 nbap_dch_chnl_info[dch_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1407:                 break;",
      "1408:             case NBAP_CPCH:",
      "1409:                 nbap_dch_chnl_info[common_physical_channel_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1410:                 nbap_dch_chnl_info[common_physical_channel_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1411:                 break;",
      "1412:             case NBAP_PCH:",
      "1413:                 nbap_dch_chnl_info[common_transport_channel_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1414:                 nbap_dch_chnl_info[common_transport_channel_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1415:                 break;",
      "1416:             default:",
      "1417:                 break;",
      "",
      "[Added Lines]",
      "1414:         if (num_items > 0 && dch_id != 0xffffffff) {",
      "1415:             common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
      "1416:             common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
      "1417:             switch(private_data_get_transport_format_set_type(actx->pinfo)){",
      "1418:                 case NBAP_DCH_UL:",
      "1419:                     nbap_dch_chnl_info[dch_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1420:                     break;",
      "1421:                 case NBAP_DCH_DL:",
      "1422:                     nbap_dch_chnl_info[dch_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1423:                     break;",
      "1424:                 case NBAP_CPCH:",
      "1425:                     nbap_dch_chnl_info[common_physical_channel_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1426:                     nbap_dch_chnl_info[common_physical_channel_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1427:                     break;",
      "1428:                 case NBAP_PCH:",
      "1429:                     nbap_dch_chnl_info[common_transport_channel_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1430:                     nbap_dch_chnl_info[common_transport_channel_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "1431:                     break;",
      "1432:                 default:",
      "1433:                     break;",
      "1434:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1500:                 dch_id = private_data_get_dch_id(actx->pinfo);",
      "1527:                     for (j = 0; j < num_tf; j++) {",
      "1530:                     }",
      "1534:                     for (j = 0; j < num_tf; j++) {",
      "1537:                     }",
      "1539:                 }",
      "1543:             }",
      "1545:             nbap_debug(\"Frame %%u RL-Specific-DCH-Info-Item Start\", actx->pinfo->num);",
      "",
      "[Removed Lines]",
      "1501:                 umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[private_data_get_dch_id(actx->pinfo)].num_ul_chans;",
      "1502:                 for (j = 0; j < num_tf; j++) {",
      "1503:                     umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_tf_size[j] = nbap_dch_chnl_info[dch_id].ul_chan_tf_size[j];",
      "1504:                     umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_num_tbs[j] = nbap_dch_chnl_info[dch_id].ul_chan_num_tbs[j];",
      "1505:                 }",
      "1508:                 umts_fp_conversation_info->fp_dch_channel_info[0].num_dl_chans = num_tf = nbap_dch_chnl_info[dch_id].num_dl_chans;",
      "1509:                 for (j = 0; j < num_tf; j++) {",
      "1510:                     umts_fp_conversation_info->fp_dch_channel_info[0].dl_chan_tf_size[j] = nbap_dch_chnl_info[dch_id].dl_chan_tf_size[j];",
      "1511:                     umts_fp_conversation_info->fp_dch_channel_info[0].dl_chan_num_tbs[j] = nbap_dch_chnl_info[dch_id].dl_chan_num_tbs[j];",
      "1512:                 }",
      "1515:                 i = dch_id;",
      "1516:                 umts_fp_conversation_info->dch_ids_in_flow_list[0] = dch_id;",
      "1517:                 while(nbap_dch_chnl_info[i].next_dch != 0){",
      "1520:                     i = nbap_dch_chnl_info[i].next_dch;",
      "1521:                     umts_fp_conversation_info->num_dch_in_flow++;",
      "1526:                     umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].num_ul_chans = num_tf = nbap_dch_chnl_info[i].num_ul_chans;",
      "1528:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].ul_chan_tf_size[j] = nbap_dch_chnl_info[i].ul_chan_tf_size[j];",
      "1529:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].ul_chan_num_tbs[j] = nbap_dch_chnl_info[i].ul_chan_num_tbs[j];",
      "1533:                     umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].num_dl_chans = num_tf = nbap_dch_chnl_info[i].num_dl_chans;",
      "1535:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].dl_chan_tf_size[j] = nbap_dch_chnl_info[i].dl_chan_tf_size[j];",
      "1536:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].dl_chan_num_tbs[j] = nbap_dch_chnl_info[i].dl_chan_num_tbs[j];",
      "1540:                 umts_fp_conversation_info->num_dch_in_flow++;",
      "1541:                 umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
      "1542:                 set_umts_fp_conv_data(conversation, umts_fp_conversation_info);",
      "",
      "[Added Lines]",
      "1518:                 if (dch_id != 0xffffffff) {",
      "1519:                     umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[dch_id].num_ul_chans;",
      "1521:                         umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_tf_size[j] = nbap_dch_chnl_info[dch_id].ul_chan_tf_size[j];",
      "1522:                         umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_num_tbs[j] = nbap_dch_chnl_info[dch_id].ul_chan_num_tbs[j];",
      "1526:                     umts_fp_conversation_info->fp_dch_channel_info[0].num_dl_chans = num_tf = nbap_dch_chnl_info[dch_id].num_dl_chans;",
      "1528:                         umts_fp_conversation_info->fp_dch_channel_info[0].dl_chan_tf_size[j] = nbap_dch_chnl_info[dch_id].dl_chan_tf_size[j];",
      "1529:                         umts_fp_conversation_info->fp_dch_channel_info[0].dl_chan_num_tbs[j] = nbap_dch_chnl_info[dch_id].dl_chan_num_tbs[j];",
      "1533:                     i = dch_id;",
      "1534:                     umts_fp_conversation_info->dch_ids_in_flow_list[0] = dch_id;",
      "1535:                     while(nbap_dch_chnl_info[i].next_dch != 0){",
      "1536:                         i = nbap_dch_chnl_info[i].next_dch;",
      "1537:                         umts_fp_conversation_info->num_dch_in_flow++;",
      "1542:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].num_ul_chans = num_tf = nbap_dch_chnl_info[i].num_ul_chans;",
      "1543:                         for (j = 0; j < num_tf; j++) {",
      "1544:                                 umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].ul_chan_tf_size[j] = nbap_dch_chnl_info[i].ul_chan_tf_size[j];",
      "1545:                                 umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].ul_chan_num_tbs[j] = nbap_dch_chnl_info[i].ul_chan_num_tbs[j];",
      "1546:                         }",
      "1549:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].num_dl_chans = num_tf = nbap_dch_chnl_info[i].num_dl_chans;",
      "1550:                         for (j = 0; j < num_tf; j++) {",
      "1551:                                 umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].dl_chan_tf_size[j] = nbap_dch_chnl_info[i].dl_chan_tf_size[j];",
      "1552:                                 umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].dl_chan_num_tbs[j] = nbap_dch_chnl_info[i].dl_chan_num_tbs[j];",
      "1553:                         }",
      "1554:                     }",
      "1555:                     umts_fp_conversation_info->num_dch_in_flow++;",
      "1556:                     umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
      "1557:                     set_umts_fp_conv_data(conversation, umts_fp_conversation_info);",
      "",
      "---------------"
    ],
    "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c": [
      "File: epan/dissectors/packet-nbap.c -> epan/dissectors/packet-nbap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "8: #line 1 \"./asn1/Nbap/packet-nbap-template.c\"",
      "",
      "[Added Lines]",
      "8: #line 1 \"./asn1/nbap/packet-nbap-template.c\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "73: #define maxPrivateIEs                  65535",
      "74: #define maxProtocolExtensions          65535",
      "75: #define maxProtocolIEs                 65535",
      "",
      "[Removed Lines]",
      "72: #line 1 \"./asn1/Nbap/packet-nbap-val.h\"",
      "",
      "[Added Lines]",
      "72: #line 1 \"./asn1/nbap/packet-nbap-val.h\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1525: } ProtocolIE_ID_enum;",
      "1531: static int proto_nbap = -1;",
      "",
      "[Removed Lines]",
      "1528: #line 75 \"./asn1/Nbap/packet-nbap-template.c\"",
      "",
      "[Added Lines]",
      "1528: #line 63 \"./asn1/nbap/packet-nbap-template.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1539: #line 1 \"./asn1/Nbap/packet-nbap-hf.c\"",
      "",
      "[Added Lines]",
      "1539: #line 1 \"./asn1/nbap/packet-nbap-hf.c\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "4830: static int hf_nbap_RACH_SubChannelNumbers_subCh0 = -1;",
      "4836: static int ett_nbap = -1;",
      "",
      "[Removed Lines]",
      "4833: #line 84 \"./asn1/Nbap/packet-nbap-template.c\"",
      "",
      "[Added Lines]",
      "4833: #line 72 \"./asn1/nbap/packet-nbap-template.c\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "4844: static gint ett_nbap_PrivateIE_ID = -1;",
      "4845: static gint ett_nbap_ProcedureID = -1;",
      "4846: static gint ett_nbap_TransactionID = -1;",
      "",
      "[Removed Lines]",
      "4843: #line 1 \"./asn1/Nbap/packet-nbap-ett.c\"",
      "",
      "[Added Lines]",
      "4843: #line 1 \"./asn1/nbap/packet-nbap-ett.c\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "6469: static gint ett_nbap_Outcome = -1;",
      "6474: static expert_field ei_nbap_no_find_comm_context_id = EI_INIT;",
      "6475: static expert_field ei_nbap_no_find_port_info = EI_INIT;",
      "",
      "[Removed Lines]",
      "6472: #line 92 \"./asn1/Nbap/packet-nbap-template.c\"",
      "",
      "[Added Lines]",
      "6472: #line 80 \"./asn1/nbap/packet-nbap-template.c\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "7214: static const value_string nbap_Criticality_vals[] = {",
      "7215:   {   0, \"reject\" },",
      "",
      "[Removed Lines]",
      "7212: #line 1 \"./asn1/Nbap/packet-nbap-fn.c\"",
      "",
      "[Added Lines]",
      "7212: #line 1 \"./asn1/nbap/packet-nbap-fn.c\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "7349: static int",
      "7350: dissect_nbap_ProcedureCode(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "7352:   guint32 procedure_code;",
      "7353:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
      "7354:                                                             0U, 255U, &procedure_code, FALSE);",
      "",
      "[Removed Lines]",
      "7351: #line 94 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "7351: #line 94 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "7375: static int",
      "7376: dissect_nbap_DdMode(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "7378:   guint32 dd_mode;",
      "7379:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
      "7380:                                      3, &dd_mode, TRUE, 0, NULL);",
      "",
      "[Removed Lines]",
      "7377: #line 102 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "7377: #line 102 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "7397: static int",
      "7398: dissect_nbap_ProcedureID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "7400:   ProcedureID = NULL;",
      "7401:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
      "7402:                                    ett_nbap_ProcedureID, ProcedureID_sequence);",
      "",
      "[Removed Lines]",
      "7399: #line 108 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "7399: #line 108 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "8645: static int",
      "8646: dissect_nbap_ProtocolIE_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "8648:   guint32 protocol_ie_id;",
      "8649:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
      "8650:                                                             0U, maxProtocolIEs, &protocol_ie_id, FALSE);",
      "",
      "[Removed Lines]",
      "8647: #line 81 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "8647: #line 81 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "8663: static int",
      "8664: dissect_nbap_T_shortTransActionId(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "8666:   guint32 transaction_id;",
      "8667:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
      "8668:                                                             0U, 127U, &transaction_id, FALSE);",
      "",
      "[Removed Lines]",
      "8665: #line 116 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "8665: #line 116 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "8679: static int",
      "8680: dissect_nbap_T_longTransActionId(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "8682:   guint32 transaction_id;",
      "8683:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
      "8684:                                                             0U, 32767U, &transaction_id, FALSE);",
      "",
      "[Removed Lines]",
      "8681: #line 121 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "8681: #line 121 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "8952: static int",
      "8953: dissect_nbap_UL_ScramblingCodeNumber(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "8955:   guint32 ul_scrambling_code;",
      "8956:   guint32 com_context_id;",
      "8957:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
      "",
      "[Removed Lines]",
      "8954: #line 975 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "8954: #line 976 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "9222: static int",
      "9223: dissect_nbap_E_DCH_MACdFlow_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "9225:   guint32 e_dch_macdflow_id;",
      "9226:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
      "9227:                                                             0U, maxNrOfEDCHMACdFlows_1, &e_dch_macdflow_id, FALSE);",
      "",
      "[Removed Lines]",
      "9224: #line 940 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "9224: #line 941 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "9238: static int",
      "9239: dissect_nbap_BindingID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "9241:   tvbuff_t *parameter_tvb=NULL;",
      "9243:   offset = dissect_per_octet_string(tvb, offset, actx, tree, hf_index,",
      "",
      "[Removed Lines]",
      "9240: #line 959 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "9240: #line 960 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "9262: static int",
      "9263: dissect_nbap_TransportLayerAddress(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "9265:   tvbuff_t *parameter_tvb=NULL;",
      "9266:   proto_item *item;",
      "9267:   proto_tree *subtree, *nsap_tree;",
      "",
      "[Removed Lines]",
      "9264: #line 836 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "9264: #line 836 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "10832: static int",
      "10833: dissect_nbap_HSDSCH_RNTI(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "10835:   gint hrnti;",
      "10836: umts_fp_conversation_info_t *umts_fp_conversation_info = NULL;",
      "10837: fp_hsdsch_channel_info_t* fp_hsdsch_channel_info = NULL;",
      "",
      "[Removed Lines]",
      "10834: #line 2509 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "10834: #line 2525 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "11079: static int",
      "11080: dissect_nbap_CommonTransportChannelID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "11082:   guint32 commontransportchannelid;",
      "11083:   nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "11084:   nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "",
      "[Removed Lines]",
      "11081: #line 931 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "11081: #line 932 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "11894: static int",
      "11895: dissect_nbap_CommonPhysicalChannelID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "11897: guint32 commonphysicalchannelid;",
      "11898: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "11899: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "",
      "[Removed Lines]",
      "11896: #line 922 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "11896: #line 923 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "12068: static int",
      "12069: dissect_nbap_Common_MACFlow_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "12071: guint32 common_macdflow_id;",
      "12072:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
      "12073:                                                             0U, maxNrOfCommonMACFlows_1, &common_macdflow_id, FALSE);",
      "",
      "[Removed Lines]",
      "12070: #line 2343 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "12070: #line 2359 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "12151: static int",
      "12152: dissect_nbap_PayloadCRC_PresenceIndicator(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "12154: guint32 payload_crc_value;",
      "12156:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
      "",
      "[Removed Lines]",
      "12153: #line 884 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "12153: #line 884 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "12203: static int",
      "12204: dissect_nbap_LogicalChannelID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "12206:   guint32 logical_channel_id;",
      "12207:   guint num_items;",
      "12208:   nbap_edch_channel_info_t* nbap_edch_channel_info;",
      "",
      "[Removed Lines]",
      "12205: #line 1956 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "12205: #line 1972 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "12227: static int",
      "12228: dissect_nbap_MAC_PDU_SizeExtended(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "12230: guint32 hsdsch_macdflow_id;",
      "12231: nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
      "12232: nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
      "",
      "[Removed Lines]",
      "12229: #line 2074 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "12229: #line 2090 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "12654: static int",
      "12655: dissect_nbap_CommonMACFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "12657:     address     dst_addr;",
      "12658:     guint32 transportLayerAddress_ipv4;",
      "12659:     guint16 bindingID;",
      "",
      "[Removed Lines]",
      "12656: #line 2351 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "12656: #line 2367 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "12706: static int",
      "12707: dissect_nbap_MACdPDU_Size(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "12709: guint32 mac_d_pdu_size;",
      "12710: guint num_items;",
      "12711: nbap_edch_channel_info_t* nbap_edch_channel_info;",
      "",
      "[Removed Lines]",
      "12708: #line 1940 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "12708: #line 1956 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "13019: static int",
      "13020: dissect_nbap_CommonTransportChannel_InformationResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "13022: address dst_addr;",
      "13023: nbap_setup_conv_t *request_conv;",
      "13024: conversation_t *conv;",
      "",
      "[Removed Lines]",
      "13021: #line 184 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "13021: #line 184 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "13974: static int",
      "13975: dissect_nbap_CRNC_CommunicationContextID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "13977: guint32 com_context_id;",
      "13978:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
      "13979:                                                             0U, 1048575U, &com_context_id, FALSE);",
      "",
      "[Removed Lines]",
      "13976: #line 2469 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "13976: #line 2485 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "15361: static int",
      "15362: dissect_nbap_DCH_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "15364:   guint32 t_dch_id;",
      "15365:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
      "15366:                                                             0U, 255U, &t_dch_id, FALSE);",
      "",
      "[Removed Lines]",
      "15363: #line 895 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "15363: #line 895 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "15413: static int",
      "15414: dissect_nbap_T_dCH_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "15416:   guint32 dch_id;",
      "15417:   gint num_dch_in_flow;",
      "15418:   nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "",
      "[Removed Lines]",
      "15415: #line 900 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "15415: #line 900 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "15423:   num_dch_in_flow = private_data_get_num_dch_in_flow(actx->pinfo);",
      "15424:   private_data_set_dch_id(actx->pinfo, dch_id);",
      "15425:   if(num_dch_in_flow>0){",
      "15426:       nbap_dch_chnl_info[dch_id].next_dch = 0;",
      "15429:       }",
      "15430:   }",
      "",
      "[Removed Lines]",
      "15427:       if(private_data_get_prev_dch_id(actx->pinfo) != 0){",
      "15428:           nbap_dch_chnl_info[private_data_get_prev_dch_id(actx->pinfo)].next_dch = dch_id;",
      "",
      "[Added Lines]",
      "15426:       guint32 prev_dch_id = private_data_get_prev_dch_id(actx->pinfo);",
      "15428:       if(prev_dch_id != 0 && prev_dch_id != 0xffffffff){",
      "15429:           nbap_dch_chnl_info[prev_dch_id].next_dch = dch_id;",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "15439: static int",
      "15440: dissect_nbap_TransportFormatSet_NrOfTransportBlocks(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "15442: guint32 NrOfTransportBlocks;",
      "15443: guint num_items;",
      "15444: guint32 dch_id;",
      "",
      "[Removed Lines]",
      "15441: #line 1344 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "15442: #line 1357 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "15454:     if(private_data_get_num_items(actx->pinfo)>0){",
      "15455:         num_items = private_data_get_num_items(actx->pinfo);",
      "15456:         dch_id = private_data_get_dch_id(actx->pinfo);",
      "15482:         }",
      "15483:     }",
      "",
      "[Removed Lines]",
      "15457:         common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
      "15458:         common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
      "15459:         switch(private_data_get_transport_format_set_type(actx->pinfo)){",
      "15460:             case NBAP_DCH_UL:",
      "15461:                 nbap_dch_chnl_info[dch_id].num_ul_chans++;",
      "15462:                 nbap_dch_chnl_info[dch_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15463:                 break;",
      "15464:             case NBAP_DCH_DL:",
      "15465:                 nbap_dch_chnl_info[dch_id].num_dl_chans++;",
      "15466:                 nbap_dch_chnl_info[dch_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15467:                 break;",
      "15468:             case NBAP_CPCH:",
      "15469:                 nbap_dch_chnl_info[common_physical_channel_id].num_ul_chans++;",
      "15470:                 nbap_dch_chnl_info[common_physical_channel_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15471:                 nbap_dch_chnl_info[common_physical_channel_id].num_dl_chans++;",
      "15472:                 nbap_dch_chnl_info[common_physical_channel_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15473:                 break;",
      "15474:             case NBAP_PCH:",
      "15475:                 nbap_dch_chnl_info[common_transport_channel_id].num_ul_chans++;",
      "15476:                 nbap_dch_chnl_info[common_transport_channel_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15477:                 nbap_dch_chnl_info[common_transport_channel_id].num_dl_chans++;",
      "15478:                 nbap_dch_chnl_info[common_transport_channel_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15479:                 break;",
      "15480:             default:",
      "15481:                 break;",
      "",
      "[Added Lines]",
      "15458:         if (num_items > 0 && dch_id != 0xffffffff) {",
      "15459:             common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
      "15460:             common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
      "15461:             switch(private_data_get_transport_format_set_type(actx->pinfo)){",
      "15462:                 case NBAP_DCH_UL:",
      "15463:                     nbap_dch_chnl_info[dch_id].num_ul_chans++;",
      "15464:                     nbap_dch_chnl_info[dch_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15465:                     break;",
      "15466:                 case NBAP_DCH_DL:",
      "15467:                     nbap_dch_chnl_info[dch_id].num_dl_chans++;",
      "15468:                     nbap_dch_chnl_info[dch_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15469:                     break;",
      "15470:                 case NBAP_CPCH:",
      "15471:                     nbap_dch_chnl_info[common_physical_channel_id].num_ul_chans++;",
      "15472:                     nbap_dch_chnl_info[common_physical_channel_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15473:                     nbap_dch_chnl_info[common_physical_channel_id].num_dl_chans++;",
      "15474:                     nbap_dch_chnl_info[common_physical_channel_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15475:                     break;",
      "15476:                 case NBAP_PCH:",
      "15477:                     nbap_dch_chnl_info[common_transport_channel_id].num_ul_chans++;",
      "15478:                     nbap_dch_chnl_info[common_transport_channel_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15479:                     nbap_dch_chnl_info[common_transport_channel_id].num_dl_chans++;",
      "15480:                     nbap_dch_chnl_info[common_transport_channel_id].dl_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
      "15481:                     break;",
      "15482:                 default:",
      "15483:                     break;",
      "15484:             }",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "15492: static int",
      "15493: dissect_nbap_TransportFormatSet_TransportBlockSize(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "15495: guint32 TransportBlockSize;",
      "15496: guint num_items;",
      "15497: guint32 dch_id;",
      "",
      "[Removed Lines]",
      "15494: #line 1386 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "15497: #line 1401 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "15507:     if(private_data_get_num_items(actx->pinfo)>0){",
      "15508:         num_items = private_data_get_num_items(actx->pinfo);",
      "15509:         dch_id = private_data_get_dch_id(actx->pinfo);",
      "15529:         }",
      "15530:     }",
      "",
      "[Removed Lines]",
      "15510:         common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
      "15511:         common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
      "15512:         switch(private_data_get_transport_format_set_type(actx->pinfo)){",
      "15513:             case NBAP_DCH_UL:",
      "15514:                 nbap_dch_chnl_info[dch_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15515:                 break;",
      "15516:             case NBAP_DCH_DL:",
      "15517:                 nbap_dch_chnl_info[dch_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15518:                 break;",
      "15519:             case NBAP_CPCH:",
      "15520:                 nbap_dch_chnl_info[common_physical_channel_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15521:                 nbap_dch_chnl_info[common_physical_channel_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15522:                 break;",
      "15523:             case NBAP_PCH:",
      "15524:                 nbap_dch_chnl_info[common_transport_channel_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15525:                 nbap_dch_chnl_info[common_transport_channel_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15526:                 break;",
      "15527:             default:",
      "15528:                 break;",
      "",
      "[Added Lines]",
      "15513:         if (num_items > 0 && dch_id != 0xffffffff) {",
      "15514:             common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
      "15515:             common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
      "15516:             switch(private_data_get_transport_format_set_type(actx->pinfo)){",
      "15517:                 case NBAP_DCH_UL:",
      "15518:                     nbap_dch_chnl_info[dch_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15519:                     break;",
      "15520:                 case NBAP_DCH_DL:",
      "15521:                     nbap_dch_chnl_info[dch_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15522:                     break;",
      "15523:                 case NBAP_CPCH:",
      "15524:                     nbap_dch_chnl_info[common_physical_channel_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15525:                     nbap_dch_chnl_info[common_physical_channel_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15526:                     break;",
      "15527:                 case NBAP_PCH:",
      "15528:                     nbap_dch_chnl_info[common_transport_channel_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15529:                     nbap_dch_chnl_info[common_transport_channel_id].dl_chan_tf_size[num_items-1] = TransportBlockSize;",
      "15530:                     break;",
      "15531:                 default:",
      "15532:                     break;",
      "15533:             }",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "15630: static int",
      "15631: dissect_nbap_TransportFormatSet_DynamicPartList_item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "15633:     private_data_increment_num_items(actx->pinfo);",
      "",
      "[Removed Lines]",
      "15632: #line 1340 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "15637: #line 1353 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "15648: static int",
      "15649: dissect_nbap_TransportFormatSet_DynamicPartList(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "15651:     private_data_set_num_items(actx->pinfo, 0);",
      "",
      "[Removed Lines]",
      "15650: #line 1337 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "15655: #line 1350 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 39 ---",
      "[Context before]",
      "15819: static int",
      "15820: dissect_nbap_T_ul_TransportFormatSet(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "15822:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "15823:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "15824:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_UL);",
      "15828:   offset = dissect_nbap_TransportFormatSet(tvb, offset, actx, tree, hf_index);",
      "",
      "[Removed Lines]",
      "15821: #line 1305 \"./asn1/Nbap/nbap.cnf\"",
      "15825:     nbap_dch_chnl_info[private_data_get_dch_id(actx->pinfo)].num_ul_chans = 0;",
      "",
      "[Added Lines]",
      "15826: #line 1306 \"./asn1/nbap/nbap.cnf\"",
      "15827:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
      "15831:     if (dch_id != 0xffffffff) {",
      "15832:         nbap_dch_chnl_info[dch_id].num_ul_chans = 0;",
      "15833:     }",
      "",
      "---------------",
      "--- Hunk 40 ---",
      "[Context before]",
      "15835: static int",
      "15836: dissect_nbap_T_dl_TransportFormatSet(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "15838:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "15839:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "15840:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_DL);",
      "15844:   offset = dissect_nbap_TransportFormatSet(tvb, offset, actx, tree, hf_index);",
      "",
      "[Removed Lines]",
      "15837: #line 1311 \"./asn1/Nbap/nbap.cnf\"",
      "15841:     nbap_dch_chnl_info[private_data_get_dch_id(actx->pinfo)].num_dl_chans = 0;",
      "",
      "[Added Lines]",
      "15845: #line 1315 \"./asn1/nbap/nbap.cnf\"",
      "15846:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
      "15850:     if (dch_id != 0xffffffff) {",
      "15851:         nbap_dch_chnl_info[dch_id].num_dl_chans = 0;",
      "15852:     }",
      "",
      "---------------",
      "--- Hunk 41 ---",
      "[Context before]",
      "15887: static int",
      "15888: dissect_nbap_DCH_Specific_FDD_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "15890:     private_data_increment_num_dch_in_flow(actx->pinfo);",
      "15893:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
      "15894:                                    ett_nbap_DCH_Specific_FDD_Item, DCH_Specific_FDD_Item_sequence);",
      "15897:     private_data_set_prev_dch_id(actx->pinfo,private_data_get_dch_id(actx->pinfo));",
      "",
      "[Removed Lines]",
      "15889: #line 1299 \"./asn1/Nbap/nbap.cnf\"",
      "15896: #line 1302 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "15900: #line 1300 \"./asn1/nbap/nbap.cnf\"",
      "15907: #line 1303 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 42 ---",
      "[Context before]",
      "15908: static int",
      "15909: dissect_nbap_DCH_Specific_FDD_InformationList(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "15911:     private_data_set_num_dch_in_flow(actx->pinfo, 0);",
      "15912:     private_data_set_prev_dch_id(actx->pinfo, 0);",
      "",
      "[Removed Lines]",
      "15910: #line 1295 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "15921: #line 1296 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 43 ---",
      "[Context before]",
      "16187: static int",
      "16188: dissect_nbap_T_dCH_ID_01(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "16191:   offset = dissect_nbap_DCH_ID(tvb, offset, actx, tree, hf_index);",
      "",
      "[Removed Lines]",
      "16189: #line 917 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "16200: #line 918 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 44 ---",
      "[Context before]",
      "16202: static int",
      "16203: dissect_nbap_T_ul_TransportFormatSet_01(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "16205:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "16206:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "16207:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_UL);",
      "16211:   offset = dissect_nbap_TransportFormatSet(tvb, offset, actx, tree, hf_index);",
      "",
      "[Removed Lines]",
      "16204: #line 1317 \"./asn1/Nbap/nbap.cnf\"",
      "16208:     nbap_dch_chnl_info[private_data_get_dch_id(actx->pinfo)].num_ul_chans = 0;",
      "",
      "[Added Lines]",
      "16215: #line 1324 \"./asn1/nbap/nbap.cnf\"",
      "16216:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
      "16220:     if (dch_id != 0xffffffff) {",
      "16221:         nbap_dch_chnl_info[dch_id].num_ul_chans = 0;",
      "16222:     }",
      "",
      "---------------",
      "--- Hunk 45 ---",
      "[Context before]",
      "16218: static int",
      "16219: dissect_nbap_T_dl_TransportFormatSet_01(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "16221:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "16222:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "16223:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_DL);",
      "16227:   offset = dissect_nbap_TransportFormatSet(tvb, offset, actx, tree, hf_index);",
      "",
      "[Removed Lines]",
      "16220: #line 1323 \"./asn1/Nbap/nbap.cnf\"",
      "16224:     nbap_dch_chnl_info[private_data_get_dch_id(actx->pinfo)].num_dl_chans = 0;",
      "",
      "[Added Lines]",
      "16234: #line 1333 \"./asn1/nbap/nbap.cnf\"",
      "16235:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
      "16239:     if (dch_id != 0xffffffff) {",
      "16240:         nbap_dch_chnl_info[dch_id].num_dl_chans = 0;",
      "16241:     }",
      "",
      "---------------",
      "--- Hunk 46 ---",
      "[Context before]",
      "16276: static int",
      "16277: dissect_nbap_FDD_DCHs_to_ModifyItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "16280:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
      "16281:                                    ett_nbap_FDD_DCHs_to_ModifyItem, FDD_DCHs_to_ModifyItem_sequence);",
      "",
      "[Removed Lines]",
      "16278: #line 1423 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "16295: #line 1440 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 47 ---",
      "[Context before]",
      "18698: static int",
      "18699: dissect_nbap_E_DCH_DDI_Value(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "18701:   guint32 e_dch_ddi_value;",
      "18702:   guint num_items;",
      "18703:   nbap_edch_channel_info_t* nbap_edch_channel_info;",
      "",
      "[Removed Lines]",
      "18700: #line 1924 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "18717: #line 1940 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 48 ---",
      "[Context before]",
      "18838: static int",
      "18839: dissect_nbap_E_DCH_LogicalChannelInformationItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "18841:     private_data_increment_num_items(actx->pinfo);",
      "",
      "[Removed Lines]",
      "18840: #line 1921 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "18857: #line 1937 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 49 ---",
      "[Context before]",
      "18855: static int",
      "18856: dissect_nbap_E_DCH_LogicalChannelInformation(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "18858:     private_data_set_num_items(actx->pinfo, 0);",
      "18859:     nbap_edch_channel_info_t* nbap_edch_channel_info;",
      "18860:     nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
      "",
      "[Removed Lines]",
      "18857: #line 1912 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "18874: #line 1928 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 50 ---",
      "[Context before]",
      "18890: static int",
      "18891: dissect_nbap_E_DCH_MACdFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "18893: umts_fp_conversation_info_t *p_conv_data = NULL;",
      "18894: fp_edch_channel_info_t* fp_edch_channel_info = NULL;",
      "18895: address     null_addr;",
      "",
      "[Removed Lines]",
      "18892: #line 1670 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "18909: #line 1686 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 51 ---",
      "[Context before]",
      "19075: static int",
      "19076: dissect_nbap_E_DCH_LogicalChannelToModifyItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "19079:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
      "19080:                                    ett_nbap_E_DCH_LogicalChannelToModifyItem, E_DCH_LogicalChannelToModifyItem_sequence);",
      "",
      "[Removed Lines]",
      "19077: #line 1907 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "19094: #line 1923 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 52 ---",
      "[Context before]",
      "19150: static int",
      "19151: dissect_nbap_E_DCH_MACdFlow_Specific_InfoItem_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "19153: guint32 no_ddi_entries, i;",
      "19154: address     null_addr;",
      "19155: nbap_edch_port_info_t *old_info;",
      "",
      "[Removed Lines]",
      "19152: #line 1820 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "19169: #line 1836 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 53 ---",
      "[Context before]",
      "19287: static int",
      "19288: dissect_nbap_E_DCH_FDD_Information_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "19291: address     dst_addr, null_addr;",
      "19292: conversation_t *conversation,*old_conversation = NULL;",
      "",
      "[Removed Lines]",
      "19289: #line 1725 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "19306: #line 1741 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 54 ---",
      "[Context before]",
      "23881: static int",
      "23882: dissect_nbap_PICH_Mode(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "23884: guint32 PICH_Mode = 0;",
      "23885:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
      "23886:                                      4, &PICH_Mode, TRUE, 0, NULL);",
      "",
      "[Removed Lines]",
      "23883: #line 1063 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "23900: #line 1064 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 55 ---",
      "[Context before]",
      "23996: static int",
      "23997: dissect_nbap_HSDSCH_Common_System_InformationFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "",
      "[Removed Lines]",
      "23998: #line 2378 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24015: #line 2394 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 56 ---",
      "[Context before]",
      "24143: static int",
      "24144: dissect_nbap_HSDSCH_MACdFlow_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "24146:   guint32 hsdsch_macdflow_id;",
      "24147:   guint num_items;",
      "24148:   gint* hsdsch_macdflow_ids;",
      "",
      "[Removed Lines]",
      "24145: #line 945 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24162: #line 946 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 57 ---",
      "[Context before]",
      "24176: static int",
      "24177: dissect_nbap_HSDSCH_MACdFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "24179:     address     dst_addr;",
      "24180:     guint32 transportLayerAddress_ipv4;",
      "24181:     guint16 bindingID;",
      "",
      "[Removed Lines]",
      "24178: #line 2046 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24195: #line 2062 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 58 ---",
      "[Context before]",
      "24285: static int",
      "24286: dissect_nbap_RLC_Mode(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "24288:     guint32 rlc_mode;",
      "24289:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
      "24290:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
      "",
      "[Removed Lines]",
      "24287: #line 1969 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24304: #line 1985 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 59 ---",
      "[Context before]",
      "24327: static int",
      "24328: dissect_nbap_PriorityQueue_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "24330:     private_data_increment_num_items(actx->pinfo);",
      "",
      "[Removed Lines]",
      "24329: #line 2037 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24346: #line 2053 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 60 ---",
      "[Context before]",
      "24361: static int",
      "24362: dissect_nbap_HSDSCH_MACdFlows_Information(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "24364:     int protocol_ie_id;",
      "24365:     guint32 i;",
      "24366:     private_data_set_num_items(actx->pinfo,0);",
      "",
      "[Removed Lines]",
      "24363: #line 1996 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24380: #line 2012 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 61 ---",
      "[Context before]",
      "24406: static int",
      "24407: dissect_nbap_T_hSDSCH_Physical_Layer_Category(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "24409:     guint32 hsdsch_physical_layer_category;",
      "24410:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
      "24411:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
      "",
      "[Removed Lines]",
      "24408: #line 1987 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24425: #line 2003 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 62 ---",
      "[Context before]",
      "24476: static int",
      "24477: dissect_nbap_HSDSCH_FDD_Information(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "",
      "[Removed Lines]",
      "24478: #line 2108 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24495: #line 2124 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 63 ---",
      "[Context before]",
      "24621: static int",
      "24622: dissect_nbap_HSDSCH_MACdFlow_Specific_InfoItem_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "24624:     address     dst_addr;",
      "24625:     guint32 transportLayerAddress_ipv4;",
      "24626:     guint16 bindingID;",
      "",
      "[Removed Lines]",
      "24623: #line 2205 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24640: #line 2221 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 64 ---",
      "[Context before]",
      "24684: static int",
      "24685: dissect_nbap_PriorityQueue_InfoItem_to_Add(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "24687:     private_data_set_num_items(actx->pinfo,1);",
      "",
      "[Removed Lines]",
      "24686: #line 2040 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24703: #line 2056 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 65 ---",
      "[Context before]",
      "24819: static int",
      "24820: dissect_nbap_HSDSCH_Information_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "",
      "[Removed Lines]",
      "24821: #line 2230 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24838: #line 2246 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 66 ---",
      "[Context before]",
      "24949: static int",
      "24950: dissect_nbap_HSDSCH_MACdPDUSizeFormat(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "",
      "[Removed Lines]",
      "24951: #line 2085 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "24968: #line 2101 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 67 ---",
      "[Context before]",
      "25060: static int",
      "25061: dissect_nbap_HSDSCH_MACdFlow_Specific_InformationResp_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "25063:     private_data_increment_num_items(actx->pinfo);",
      "",
      "[Removed Lines]",
      "25062: #line 2043 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "25079: #line 2059 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 68 ---",
      "[Context before]",
      "25476: static int",
      "25477: dissect_nbap_HSDSCH_Paging_System_InformationFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "25480:   g_warning(\"HS-DSCH Type 3 NOT Implemented!\");",
      "",
      "[Removed Lines]",
      "25478: #line 2459 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "25495: #line 2475 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 69 ---",
      "[Context before]",
      "25670: static int",
      "25671: dissect_nbap_HSDSCH_MACdFlows_to_Delete_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "25673:     private_data_increment_num_items(actx->pinfo);",
      "",
      "[Removed Lines]",
      "25672: #line 2034 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "25689: #line 2050 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 70 ---",
      "[Context before]",
      "25687: static int",
      "25688: dissect_nbap_HSDSCH_MACdFlows_to_Delete(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "25690:     private_data_set_num_items(actx->pinfo,0);",
      "",
      "[Removed Lines]",
      "25689: #line 2029 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "25706: #line 2045 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 71 ---",
      "[Context before]",
      "27064: static int",
      "27065: dissect_nbap_IB_SG_DATA(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "27067:   tvbuff_t *parameter_tvb=NULL;",
      "27068:   tvbuff_t *final_tvb=NULL;",
      "27069:   proto_item *ti;",
      "",
      "[Removed Lines]",
      "27066: #line 618 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "27083: #line 618 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 72 ---",
      "[Context before]",
      "27373: static int",
      "27374: dissect_nbap_IB_Type(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "27376:   guint32 ib_type;",
      "27377:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
      "27378:                                      26, &ib_type, TRUE, 15, NULL);",
      "",
      "[Removed Lines]",
      "27375: #line 601 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "27392: #line 601 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 73 ---",
      "[Context before]",
      "28966: static int",
      "28967: dissect_nbap_NodeB_CommunicationContextID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "28969:   gboolean crnc_context_present;",
      "28970:   guint node_b_com_context_id;",
      "28971:   nbap_com_context_id_t *cur_val;",
      "",
      "[Removed Lines]",
      "28968: #line 2475 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "28985: #line 2491 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 74 ---",
      "[Context before]",
      "29543: static int",
      "29544: dissect_nbap_T_dCH_id(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "29547:   offset = dissect_nbap_DCH_ID(tvb, offset, actx, tree, hf_index);",
      "",
      "[Removed Lines]",
      "29545: #line 1429 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "29562: #line 1446 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 75 ---",
      "[Context before]",
      "29565: static int",
      "29566: dissect_nbap_RL_Specific_DCH_Info_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "29568: address     dst_addr, null_addr;",
      "29569: conversation_t *conversation = NULL;",
      "29570: umts_fp_conversation_info_t *umts_fp_conversation_info;",
      "",
      "[Removed Lines]",
      "29567: #line 1434 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "29584: #line 1451 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 76 ---",
      "[Context before]",
      "29636:                 dch_id = private_data_get_dch_id(actx->pinfo);",
      "29663:                     for (j = 0; j < num_tf; j++) {",
      "29666:                     }",
      "29670:                     for (j = 0; j < num_tf; j++) {",
      "29673:                     }",
      "29675:                 }",
      "29679:             }",
      "29681:             nbap_debug(\"Frame %u RL-Specific-DCH-Info-Item Start\", actx->pinfo->num);",
      "",
      "[Removed Lines]",
      "29637:                 umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[private_data_get_dch_id(actx->pinfo)].num_ul_chans;",
      "29638:                 for (j = 0; j < num_tf; j++) {",
      "29639:                     umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_tf_size[j] = nbap_dch_chnl_info[dch_id].ul_chan_tf_size[j];",
      "29640:                     umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_num_tbs[j] = nbap_dch_chnl_info[dch_id].ul_chan_num_tbs[j];",
      "29641:                 }",
      "29644:                 umts_fp_conversation_info->fp_dch_channel_info[0].num_dl_chans = num_tf = nbap_dch_chnl_info[dch_id].num_dl_chans;",
      "29645:                 for (j = 0; j < num_tf; j++) {",
      "29646:                     umts_fp_conversation_info->fp_dch_channel_info[0].dl_chan_tf_size[j] = nbap_dch_chnl_info[dch_id].dl_chan_tf_size[j];",
      "29647:                     umts_fp_conversation_info->fp_dch_channel_info[0].dl_chan_num_tbs[j] = nbap_dch_chnl_info[dch_id].dl_chan_num_tbs[j];",
      "29648:                 }",
      "29651:                 i = dch_id;",
      "29652:                 umts_fp_conversation_info->dch_ids_in_flow_list[0] = dch_id;",
      "29653:                 while(nbap_dch_chnl_info[i].next_dch != 0){",
      "29656:                     i = nbap_dch_chnl_info[i].next_dch;",
      "29657:                     umts_fp_conversation_info->num_dch_in_flow++;",
      "29662:                     umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].num_ul_chans = num_tf = nbap_dch_chnl_info[i].num_ul_chans;",
      "29664:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].ul_chan_tf_size[j] = nbap_dch_chnl_info[i].ul_chan_tf_size[j];",
      "29665:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].ul_chan_num_tbs[j] = nbap_dch_chnl_info[i].ul_chan_num_tbs[j];",
      "29669:                     umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].num_dl_chans = num_tf = nbap_dch_chnl_info[i].num_dl_chans;",
      "29671:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].dl_chan_tf_size[j] = nbap_dch_chnl_info[i].dl_chan_tf_size[j];",
      "29672:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].dl_chan_num_tbs[j] = nbap_dch_chnl_info[i].dl_chan_num_tbs[j];",
      "29676:                 umts_fp_conversation_info->num_dch_in_flow++;",
      "29677:                 umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
      "29678:                 set_umts_fp_conv_data(conversation, umts_fp_conversation_info);",
      "",
      "[Added Lines]",
      "29654:                 if (dch_id != 0xffffffff) {",
      "29655:                     umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[dch_id].num_ul_chans;",
      "29657:                         umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_tf_size[j] = nbap_dch_chnl_info[dch_id].ul_chan_tf_size[j];",
      "29658:                         umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_num_tbs[j] = nbap_dch_chnl_info[dch_id].ul_chan_num_tbs[j];",
      "29662:                     umts_fp_conversation_info->fp_dch_channel_info[0].num_dl_chans = num_tf = nbap_dch_chnl_info[dch_id].num_dl_chans;",
      "29664:                         umts_fp_conversation_info->fp_dch_channel_info[0].dl_chan_tf_size[j] = nbap_dch_chnl_info[dch_id].dl_chan_tf_size[j];",
      "29665:                         umts_fp_conversation_info->fp_dch_channel_info[0].dl_chan_num_tbs[j] = nbap_dch_chnl_info[dch_id].dl_chan_num_tbs[j];",
      "29669:                     i = dch_id;",
      "29670:                     umts_fp_conversation_info->dch_ids_in_flow_list[0] = dch_id;",
      "29671:                     while(nbap_dch_chnl_info[i].next_dch != 0){",
      "29672:                         i = nbap_dch_chnl_info[i].next_dch;",
      "29673:                         umts_fp_conversation_info->num_dch_in_flow++;",
      "29678:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].num_ul_chans = num_tf = nbap_dch_chnl_info[i].num_ul_chans;",
      "29679:                         for (j = 0; j < num_tf; j++) {",
      "29680:                                 umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].ul_chan_tf_size[j] = nbap_dch_chnl_info[i].ul_chan_tf_size[j];",
      "29681:                                 umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].ul_chan_num_tbs[j] = nbap_dch_chnl_info[i].ul_chan_num_tbs[j];",
      "29682:                         }",
      "29685:                         umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].num_dl_chans = num_tf = nbap_dch_chnl_info[i].num_dl_chans;",
      "29686:                         for (j = 0; j < num_tf; j++) {",
      "29687:                                 umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].dl_chan_tf_size[j] = nbap_dch_chnl_info[i].dl_chan_tf_size[j];",
      "29688:                                 umts_fp_conversation_info->fp_dch_channel_info[umts_fp_conversation_info->num_dch_in_flow].dl_chan_num_tbs[j] = nbap_dch_chnl_info[i].dl_chan_num_tbs[j];",
      "29689:                         }",
      "29690:                     }",
      "29691:                     umts_fp_conversation_info->num_dch_in_flow++;",
      "29692:                     umts_fp_conversation_info->dch_ids_in_flow_list[umts_fp_conversation_info->num_dch_in_flow] = i;",
      "29693:                     set_umts_fp_conv_data(conversation, umts_fp_conversation_info);",
      "",
      "---------------",
      "--- Hunk 77 ---",
      "[Context before]",
      "29718: static int",
      "29719: dissect_nbap_RL_Specific_E_DCH_Information_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "29721: address     dst_addr, null_addr;",
      "29722: conversation_t *conversation;",
      "29723: umts_fp_conversation_info_t *umts_fp_conversation_info = NULL;",
      "",
      "[Removed Lines]",
      "29720: #line 1557 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "29736: #line 1573 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 78 ---",
      "[Context before]",
      "30763: static int",
      "30764: dissect_nbap_Segment_Type(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "30766:   guint32 segment_type;",
      "30767:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
      "30768:                                      7, &segment_type, TRUE, 0, NULL);",
      "",
      "[Removed Lines]",
      "30765: #line 606 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "30781: #line 606 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 79 ---",
      "[Context before]",
      "33098: static int",
      "33099: dissect_nbap_CommonTransportChannelSetupRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "33101: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonTransportChannelSetupRequest(FDD) \");",
      "33103: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "33100: #line 162 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "33116: #line 162 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 80 ---",
      "[Context before]",
      "33288: static int",
      "33289: dissect_nbap_FACH_ParametersItem_CTCH_SetupRqstFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "33291: address dst_addr, null_addr;",
      "33292: conversation_t *conversation;",
      "",
      "[Removed Lines]",
      "33290: #line 1195 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "33306: #line 1196 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 81 ---",
      "[Context before]",
      "33413: static int",
      "33414: dissect_nbap_T_transportFormatSet(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "33416:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
      "33417:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
      "33418:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_PCH);",
      "",
      "[Removed Lines]",
      "33415: #line 1329 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "33431: #line 1342 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 82 ---",
      "[Context before]",
      "33460: static int",
      "33461: dissect_nbap_PCH_ParametersItem_CTCH_SetupRqstFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "33464: address dst_addr, null_addr;",
      "33465: conversation_t *conversation;",
      "",
      "[Removed Lines]",
      "33462: #line 1084 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "33478: #line 1085 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 83 ---",
      "[Context before]",
      "33607: static int",
      "33608: dissect_nbap_RACH_ParametersItem_CTCH_SetupRqstFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "33610: address dst_addr, null_addr;",
      "33611: conversation_t *conversation;",
      "33612: fp_rach_channel_info_t* fp_rach_channel_info;",
      "",
      "[Removed Lines]",
      "33609: #line 985 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "33625: #line 986 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 84 ---",
      "[Context before]",
      "34396: static int",
      "34397: dissect_nbap_CommonTransportChannelSetupResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "34399: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonTransportChannelSetupResponse \");",
      "34401: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "34398: #line 168 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "34414: #line 168 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 85 ---",
      "[Context before]",
      "34431: static int",
      "34432: dissect_nbap_CommonTransportChannelSetupFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "34434: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonTransportChannelSetupFailure \");",
      "34436: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "34433: #line 174 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "34449: #line 174 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 86 ---",
      "[Context before]",
      "35150: static int",
      "35151: dissect_nbap_UnblockResourceIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "35153: col_set_str(actx->pinfo->cinfo, COL_INFO,\"UnblockResourceIndication \");",
      "35155: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "35152: #line 559 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "35168: #line 559 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 87 ---",
      "[Context before]",
      "35171: static int",
      "35172: dissect_nbap_AuditRequiredIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "35174: col_set_str(actx->pinfo->cinfo, COL_INFO,\"AuditRequiredIndication \");",
      "35176: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "35173: #line 463 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "35189: #line 463 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 88 ---",
      "[Context before]",
      "35192: static int",
      "35193: dissect_nbap_AuditRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "35195: col_set_str(actx->pinfo->cinfo, COL_INFO,\"AuditRequest \");",
      "35197: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "35194: #line 233 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "35210: #line 233 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 89 ---",
      "[Context before]",
      "35213: static int",
      "35214: dissect_nbap_AuditResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "35216: col_set_str(actx->pinfo->cinfo, COL_INFO,\"AuditResponse \");",
      "35218: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "35215: #line 239 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "35231: #line 239 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 90 ---",
      "[Context before]",
      "35807: static int",
      "35808: dissect_nbap_AuditFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "35810: col_set_str(actx->pinfo->cinfo, COL_INFO,\"AuditFailure \");",
      "35812: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "35809: #line 245 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "35825: #line 245 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 91 ---",
      "[Context before]",
      "35829: static int",
      "35830: dissect_nbap_CommonMeasurementInitiationRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "35832: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementInitiationRequest \");",
      "35834: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "35831: #line 301 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "35847: #line 301 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 92 ---",
      "[Context before]",
      "35947: static int",
      "35948: dissect_nbap_CommonMeasurementInitiationResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "35950: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementInitiationResponse \");",
      "35952: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "35949: #line 307 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "35965: #line 307 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 93 ---",
      "[Context before]",
      "36063: static int",
      "36064: dissect_nbap_CommonMeasurementInitiationFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "36066: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementInitiationFailure \");",
      "36068: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "36065: #line 313 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "36081: #line 313 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 94 ---",
      "[Context before]",
      "36084: static int",
      "36085: dissect_nbap_CommonMeasurementReport(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "36087: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementReport \");",
      "36089: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "36086: #line 469 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "36102: #line 469 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 95 ---",
      "[Context before]",
      "36200: static int",
      "36201: dissect_nbap_CommonMeasurementTerminationRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "36203: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementTerminationRequest \");",
      "36205: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "36202: #line 475 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "36218: #line 475 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 96 ---",
      "[Context before]",
      "36221: static int",
      "36222: dissect_nbap_CommonMeasurementFailureIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "36224: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementFailureIndication \");",
      "36226: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "36223: #line 481 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "36239: #line 481 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 97 ---",
      "[Context before]",
      "36242: static int",
      "36243: dissect_nbap_CellSetupRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "36245: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CellSetupRequest(FDD) \");",
      "36247: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "36244: #line 134 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "36260: #line 134 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 98 ---",
      "[Context before]",
      "36774: static int",
      "36775: dissect_nbap_CellSetupResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "36777: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CellSetupResponse \");",
      "36779: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "36776: #line 140 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "36792: #line 140 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 99 ---",
      "[Context before]",
      "36795: static int",
      "36796: dissect_nbap_CellSetupFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "36798: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CellSetupFailure \");",
      "36800: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "36797: #line 146 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "36813: #line 146 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 100 ---",
      "[Context before]",
      "37338: static int",
      "37339: dissect_nbap_ResourceStatusIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "37341: col_set_str(actx->pinfo->cinfo, COL_INFO,\"ResourceStatusIndication \");",
      "37343: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "37340: #line 457 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "37356: #line 457 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 101 ---",
      "[Context before]",
      "38096: static int",
      "38097: dissect_nbap_SystemInformationUpdateRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "38099: col_set_str(actx->pinfo->cinfo, COL_INFO,\"SystemInformationUpdateRequest \");",
      "38101: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "38098: #line 280 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "38114: #line 280 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 102 ---",
      "[Context before]",
      "38167: static int",
      "38168: dissect_nbap_MIB_SB_SIB_InformationItem_SystemInfoUpdateRqst(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "38172:     private_data_set_segment_type(actx->pinfo, 0);",
      "",
      "[Removed Lines]",
      "38169: #line 611 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "38185: #line 611 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 103 ---",
      "[Context before]",
      "38235: static int",
      "38236: dissect_nbap_SystemInformationUpdateResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "38238: col_set_str(actx->pinfo->cinfo, COL_INFO,\"SystemInformationUpdateResponse \");",
      "38240: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "38237: #line 286 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "38253: #line 286 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 104 ---",
      "[Context before]",
      "38256: static int",
      "38257: dissect_nbap_SystemInformationUpdateFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "38259: col_set_str(actx->pinfo->cinfo, COL_INFO,\"SystemInformationUpdateFailure \");",
      "38261: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "38258: #line 292 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "38274: #line 292 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 105 ---",
      "[Context before]",
      "38278: static int",
      "38279: dissect_nbap_RadioLinkSetupRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "38282:     col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkSetupRequest(FDD) \");",
      "",
      "[Removed Lines]",
      "38280: #line 255 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "38296: #line 255 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 106 ---",
      "[Context before]",
      "38755: static int",
      "38756: dissect_nbap_RadioLinkSetupResponseFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "38759:     col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkSetupResponse(FDD) \");",
      "",
      "[Removed Lines]",
      "38757: #line 262 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "38773: #line 262 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 107 ---",
      "[Context before]",
      "38975: static int",
      "38976: dissect_nbap_RadioLinkSetupFailureFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "38978: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkSetupFailure(FDD) \");",
      "38980: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "38977: #line 269 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "38993: #line 269 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 108 ---",
      "[Context before]",
      "39260: static int",
      "39261: dissect_nbap_RadioLinkAdditionRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "39263: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkAdditionRequest(FDD) \");",
      "",
      "[Removed Lines]",
      "39262: #line 319 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "39278: #line 319 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 109 ---",
      "[Context before]",
      "39632: static int",
      "39633: dissect_nbap_RadioLinkAdditionResponseFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "39635: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkAdditionResponse(FDD) \");",
      "",
      "[Removed Lines]",
      "39634: #line 324 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "39650: #line 324 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 110 ---",
      "[Context before]",
      "39908: static int",
      "39909: dissect_nbap_RadioLinkAdditionFailureFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "39911: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkAdditionRequest(FDD) \");",
      "",
      "[Removed Lines]",
      "39910: #line 330 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "39926: #line 330 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 111 ---",
      "[Context before]",
      "40193: static int",
      "40194: dissect_nbap_RadioLinkReconfigurationPrepareFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "40196:     col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationPrepare(FDD) \");",
      "40198:     actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "40195: #line 357 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "40211: #line 357 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 112 ---",
      "[Context before]",
      "41811: static int",
      "41812: dissect_nbap_RadioLinkReconfigurationReady(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "41814: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationReady \");",
      "41816: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "41813: #line 363 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "41829: #line 363 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 113 ---",
      "[Context before]",
      "41893: static int",
      "41894: dissect_nbap_RadioLinkReconfigurationFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "41896: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationFailure \");",
      "41898: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "41895: #line 370 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "41911: #line 370 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 114 ---",
      "[Context before]",
      "42002: static int",
      "42003: dissect_nbap_RadioLinkReconfigurationCommit(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "42005: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationCommit \");",
      "42007: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "42004: #line 487 \"./asn1/Nbap/nbap.cnf\"",
      "42010: #line 2542 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "42020: #line 487 \"./asn1/nbap/nbap.cnf\"",
      "42026: #line 2558 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 115 ---",
      "[Context before]",
      "42032: static int",
      "42033: dissect_nbap_RadioLinkReconfigurationCancel(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "42035: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationCancel \");",
      "42037: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "42034: #line 493 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "42050: #line 493 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 116 ---",
      "[Context before]",
      "42053: static int",
      "42054: dissect_nbap_RadioLinkReconfigurationRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "42056: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationRequestFDD(FDD) \");",
      "42058: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "42055: #line 381 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "42071: #line 381 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 117 ---",
      "[Context before]",
      "42510: static int",
      "42511: dissect_nbap_RadioLinkReconfigurationResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "42513: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationResponse \");",
      "",
      "[Removed Lines]",
      "42512: #line 387 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "42528: #line 387 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 118 ---",
      "[Context before]",
      "42571: static int",
      "42572: dissect_nbap_RadioLinkDeletionRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "42574: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkDeletionRequest \");",
      "42576: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "42573: #line 343 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "42589: #line 343 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 119 ---",
      "[Context before]",
      "42622: static int",
      "42623: dissect_nbap_RadioLinkDeletionResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "42625: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkDeletionResponse \");",
      "42627: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "42624: #line 350 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "42640: #line 350 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 120 ---",
      "[Context before]",
      "42644: static int",
      "42645: dissect_nbap_DL_PowerControlRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "42647: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DL-PowerControlRequest \");",
      "42649: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "42646: #line 541 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "42662: #line 541 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 121 ---",
      "[Context before]",
      "42695: static int",
      "42696: dissect_nbap_DL_PowerTimeslotControlRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "42698: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DL-PowerTimeslotControlRequest \");",
      "42700: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "42697: #line 547 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "42713: #line 547 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 122 ---",
      "[Context before]",
      "42716: static int",
      "42717: dissect_nbap_DedicatedMeasurementInitiationRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "42719: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementInitiationRequest \");",
      "42721: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "42718: #line 403 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "42734: #line 403 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 123 ---",
      "[Context before]",
      "42912: static int",
      "42913: dissect_nbap_DedicatedMeasurementInitiationResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "42915: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementInitiationResponse \");",
      "42917: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "42914: #line 409 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "42930: #line 409 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 124 ---",
      "[Context before]",
      "43217: static int",
      "43218: dissect_nbap_DedicatedMeasurementInitiationFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43220: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementInitiationFailure \");",
      "43222: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "43219: #line 416 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43235: #line 416 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 125 ---",
      "[Context before]",
      "43239: static int",
      "43240: dissect_nbap_DedicatedMeasurementReport(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43242: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementReport \");",
      "43244: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "43241: #line 521 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43257: #line 521 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 126 ---",
      "[Context before]",
      "43422: static int",
      "43423: dissect_nbap_DedicatedMeasurementTerminationRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43425: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementTerminationRequest \");",
      "43427: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "43424: #line 528 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43440: #line 528 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 127 ---",
      "[Context before]",
      "43443: static int",
      "43444: dissect_nbap_DedicatedMeasurementFailureIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43446: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementFailureIndication \");",
      "43448: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "43445: #line 534 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43461: #line 534 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 128 ---",
      "[Context before]",
      "43465: static int",
      "43466: dissect_nbap_RadioLinkFailureIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43468: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkFailureIndication \");",
      "43470: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "43467: #line 499 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43483: #line 499 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 129 ---",
      "[Context before]",
      "43647: static int",
      "43648: dissect_nbap_RadioLinkPreemptionRequiredIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43650: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkPreemptionRequiredIndication \");",
      "43652: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "43649: #line 506 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43665: #line 506 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 130 ---",
      "[Context before]",
      "43698: static int",
      "43699: dissect_nbap_RadioLinkRestoreIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43701: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkRestoreIndication \");",
      "43703: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "43700: #line 513 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43716: #line 513 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 131 ---",
      "[Context before]",
      "43878: static int",
      "43879: dissect_nbap_CompressedModeCommand(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43881: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CompressedModeCommand \");",
      "43883: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "43880: #line 553 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43896: #line 553 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 132 ---",
      "[Context before]",
      "43899: static int",
      "43900: dissect_nbap_ErrorIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43902: col_set_str(actx->pinfo->cinfo, COL_INFO,\"ErrorIndication \");",
      "",
      "[Removed Lines]",
      "43901: #line 565 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43917: #line 565 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 133 ---",
      "[Context before]",
      "43919: static int",
      "43920: dissect_nbap_PrivateMessage(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43922: col_set_str(actx->pinfo->cinfo, COL_INFO,\"PrivateMessage \");",
      "",
      "[Removed Lines]",
      "43921: #line 574 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43937: #line 574 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 134 ---",
      "[Context before]",
      "43938: static int",
      "43939: dissect_nbap_PhysicalSharedChannelReconfigurationRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "43941: col_set_str(actx->pinfo->cinfo, COL_INFO,\"PhysicalSharedChannelReconfigurationRequest(FDD) \");",
      "43943: actx->pinfo->link_dir=P2P_DIR_DL;",
      "",
      "[Removed Lines]",
      "43940: #line 423 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "43956: #line 423 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 135 ---",
      "[Context before]",
      "46406: static int",
      "46407: dissect_nbap_PhysicalSharedChannelReconfigurationResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "46409: col_set_str(actx->pinfo->cinfo, COL_INFO,\"PhysicalSharedChannelReconfigurationResponse \");",
      "46411: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "46408: #line 429 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "46424: #line 429 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 136 ---",
      "[Context before]",
      "46457: static int",
      "46458: dissect_nbap_PhysicalSharedChannelReconfigurationFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "46460: col_set_str(actx->pinfo->cinfo, COL_INFO,\"PhysicalSharedChannelReconfigurationFailure \");",
      "46462: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "46459: #line 435 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "46475: #line 435 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 137 ---",
      "[Context before]",
      "47910: static int",
      "47911: dissect_nbap_BearerRearrangementIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "47913: col_set_str(actx->pinfo->cinfo, COL_INFO,\"BearerRearrangementIndication \");",
      "",
      "[Removed Lines]",
      "47912: #line 581 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "47928: #line 581 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 138 ---",
      "[Context before]",
      "48212: static int",
      "48213: dissect_nbap_RadioLinkParameterUpdateIndicationFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
      "48215: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkParameterUpdateIndication(FDD) \");",
      "48217: actx->pinfo->link_dir=P2P_DIR_UL;",
      "",
      "[Removed Lines]",
      "48214: #line 589 \"./asn1/Nbap/nbap.cnf\"",
      "",
      "[Added Lines]",
      "48230: #line 589 \"./asn1/nbap/nbap.cnf\"",
      "",
      "---------------",
      "--- Hunk 139 ---",
      "[Context before]",
      "56111: static int dissect_ProtocolIEFieldValue(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, void *data _U_)",
      "56112: {",
      "",
      "[Removed Lines]",
      "56109: #line 830 \"./asn1/Nbap/packet-nbap-template.c\"",
      "",
      "[Added Lines]",
      "56125: #line 818 \"./asn1/nbap/packet-nbap-template.c\"",
      "",
      "---------------",
      "--- Hunk 140 ---",
      "[Context before]",
      "56414:     NULL, HFILL }},",
      "56418:     { &hf_nbap_ActivationInformation_PDU,",
      "56419:       { \"ActivationInformation\", \"nbap.ActivationInformation\",",
      "56420:         FT_UINT32, BASE_DEC, NULL, 0,",
      "",
      "[Removed Lines]",
      "56417: #line 1 \"./asn1/Nbap/packet-nbap-hfarr.c\"",
      "",
      "[Added Lines]",
      "56433: #line 1 \"./asn1/nbap/packet-nbap-hfarr.c\"",
      "",
      "---------------",
      "--- Hunk 141 ---",
      "[Context before]",
      "69577:         NULL, HFILL }},",
      "69581:   };",
      "",
      "[Removed Lines]",
      "69580: #line 1136 \"./asn1/Nbap/packet-nbap-template.c\"",
      "",
      "[Added Lines]",
      "69596: #line 1124 \"./asn1/nbap/packet-nbap-template.c\"",
      "",
      "---------------",
      "--- Hunk 142 ---",
      "[Context before]",
      "69588:     &ett_nbap_ib_sg_data,",
      "69592:     &ett_nbap_PrivateIE_ID,",
      "69593:     &ett_nbap_ProcedureID,",
      "69594:     &ett_nbap_TransactionID,",
      "",
      "[Removed Lines]",
      "69591: #line 1 \"./asn1/Nbap/packet-nbap-ettarr.c\"",
      "",
      "[Added Lines]",
      "69607: #line 1 \"./asn1/nbap/packet-nbap-ettarr.c\"",
      "",
      "---------------",
      "--- Hunk 143 ---",
      "[Context before]",
      "71217:     &ett_nbap_Outcome,",
      "71221:   };",
      "71223:   static ei_register_info ei[] = {",
      "",
      "[Removed Lines]",
      "71220: #line 1145 \"./asn1/Nbap/packet-nbap-template.c\"",
      "",
      "[Added Lines]",
      "71236: #line 1133 \"./asn1/nbap/packet-nbap-template.c\"",
      "",
      "---------------",
      "--- Hunk 144 ---",
      "[Context before]",
      "71278:   dissector_add_uint(\"nbap.ies\", id_TUTRANGPSMeasurementValueInformation, create_dissector_handle(dissect_TUTRANGPSMeasurementValueInformation_PDU, proto_nbap));",
      "71279:   dissector_add_uint(\"nbap.ies\", id_SFNSFNMeasurementValueInformation, create_dissector_handle(dissect_SFNSFNMeasurementValueInformation_PDU, proto_nbap));",
      "71280:   dissector_add_uint(\"nbap.ies\", id_TransmittedCarrierPowerOfAllCodesNotUsedForHSTransmission, create_dissector_handle(dissect_TransmittedCarrierPowerOfAllCodesNotUsedForHSTransmissionValue_PDU, proto_nbap));",
      "",
      "[Removed Lines]",
      "71277: #line 1 \"./asn1/Nbap/packet-nbap-dis-tab.c\"",
      "",
      "[Added Lines]",
      "71293: #line 1 \"./asn1/nbap/packet-nbap-dis-tab.c\"",
      "",
      "---------------",
      "--- Hunk 145 ---",
      "[Context before]",
      "72373: }",
      "",
      "[Removed Lines]",
      "72372: #line 1200 \"./asn1/Nbap/packet-nbap-template.c\"",
      "",
      "[Added Lines]",
      "72388: #line 1188 \"./asn1/nbap/packet-nbap-template.c\"",
      "",
      "---------------"
    ],
    "epan/dissectors/packet-nbap.h||epan/dissectors/packet-nbap.h": [
      "File: epan/dissectors/packet-nbap.h -> epan/dissectors/packet-nbap.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "8: #line 1 \"./asn1/Nbap/packet-nbap-template.h\"",
      "",
      "[Added Lines]",
      "8: #line 1 \"./asn1/nbap/packet-nbap-template.h\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "249ce2f18302f432a067fecc14913ed10d137fb1",
      "candidate_info": {
        "commit_hash": "249ce2f18302f432a067fecc14913ed10d137fb1",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/249ce2f18302f432a067fecc14913ed10d137fb1",
        "files": [
          "epan/dissectors/asn1/nbap/nbap.cnf",
          "epan/dissectors/packet-nbap.c"
        ],
        "message": "NBAP: Create E-DCH channel info\n\nAdding missing creation and insertion of the E-DCH channel\ninfo the the FP conversation info struct\n\nChange-Id: Ic7dfb5b9579133ff84b2fc4fff73a3560055dcca\nReviewed-on: https://code.wireshark.org/review/21742\nReviewed-by: S. Shapira <sswsdev@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
          "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
          ],
          "candidate": [
            "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf": [
          "File: epan/dissectors/asn1/nbap/nbap.cnf -> epan/dissectors/asn1/nbap/nbap.cnf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1282: address     dst_addr, null_addr;",
          "1283: conversation_t *conversation;",
          "1284: umts_fp_conversation_info_t *umts_fp_conversation_info = NULL;",
          "1285: nbap_edch_port_info_t *old_info = NULL;",
          "1287: transportLayerAddress_ipv4 = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1285: fp_edch_channel_info_t* fp_edch_channel_info;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1334:                 umts_fp_conversation_info->rlc_mode          = FP_RLC_MODE_UNKNOWN;",
          "1337:                 if(crcn_context_present){",
          "1338:                     umts_fp_conversation_info->com_context_id = com_context_id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1337:                 fp_edch_channel_info = wmem_new0(wmem_file_scope(), fp_edch_channel_info_t);",
          "1338:                 umts_fp_conversation_info->channel_specific_info = (void*)fp_edch_channel_info;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1454: address     dst_addr, null_addr;",
          "1455: conversation_t *conversation,*old_conversation = NULL;",
          "1456: umts_fp_conversation_info_t *umts_fp_conversation_info _U_;",
          "1457: void *conv_proto_data = NULL;",
          "1459: transportLayerAddress_ipv4 = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1460: fp_edch_channel_info_t* fp_edch_channel_info;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1517:                 umts_fp_conversation_info->rlc_mode          = FP_RLC_MODE_UNKNOWN;",
          "1520:                 if(crcn_context_present){",
          "1521:                     umts_fp_conversation_info->com_context_id = com_context_id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1523:                 fp_edch_channel_info = wmem_new0(wmem_file_scope(), fp_edch_channel_info_t);",
          "1524:                 umts_fp_conversation_info->channel_specific_info = (void*)fp_edch_channel_info;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c": [
          "File: epan/dissectors/packet-nbap.c -> epan/dissectors/packet-nbap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10075: static int",
          "10076: dissect_nbap_CFN(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "10078:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "10079:                                                             0U, 255U, &cfn, FALSE);",
          "",
          "[Removed Lines]",
          "10077: #line 2213 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "10077: #line 2219 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10328: static int",
          "10329: dissect_nbap_HSDSCH_RNTI(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "10331: umts_fp_conversation_info_t *umts_fp_conversation_info = NULL;",
          "10332: fp_hsdsch_channel_info_t* fp_hsdsch_channel_info = NULL;",
          "10333: address     null_addr;",
          "",
          "[Removed Lines]",
          "10330: #line 2175 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "10330: #line 2181 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11553: static int",
          "11554: dissect_nbap_Common_MACFlow_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "11557:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "11558:                                                             0U, maxNrOfCommonMACFlows_1, &common_macdflow_id, FALSE);",
          "",
          "[Removed Lines]",
          "11555: #line 2032 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "11555: #line 2038 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "11687: static int",
          "11688: dissect_nbap_LogicalChannelID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "11691:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "11692:                                                             1U, 15U, &logical_channel_id, FALSE);",
          "",
          "[Removed Lines]",
          "11689: #line 1680 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "11689: #line 1686 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "11705: static int",
          "11706: dissect_nbap_MAC_PDU_SizeExtended(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "11708:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "11709:                                                             1U, 1504U, NULL, TRUE);",
          "",
          "[Removed Lines]",
          "11707: #line 1782 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "11707: #line 1788 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "12128: static int",
          "12129: dissect_nbap_CommonMACFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12131:     address     dst_addr;",
          "12132:     transportLayerAddress_ipv4 = 0;",
          "12133:     BindingID_port = 0;",
          "",
          "[Removed Lines]",
          "12130: #line 2039 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "12130: #line 2045 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "12173: static int",
          "12174: dissect_nbap_MACdPDU_Size(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12176:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "12177:                                                             1U, 5000U, &MACdPDU_Size, TRUE);",
          "",
          "[Removed Lines]",
          "12175: #line 1670 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "12175: #line 1676 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "13394: static int",
          "13395: dissect_nbap_CRNC_CommunicationContextID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "13397:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "13398:                                                             0U, 1048575U, &com_context_id, FALSE);",
          "",
          "[Removed Lines]",
          "13396: #line 2149 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "13396: #line 2155 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "18078: static int",
          "18079: dissect_nbap_E_DCH_DDI_Value(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18082:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "18083:                                                             0U, 62U, &e_dch_ddi_value, FALSE);",
          "",
          "[Removed Lines]",
          "18080: #line 1659 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18080: #line 1665 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "18213: static int",
          "18214: dissect_nbap_E_DCH_LogicalChannelInformationItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18216:     num_items++;",
          "",
          "[Removed Lines]",
          "18215: #line 1656 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18215: #line 1662 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "18230: static int",
          "18231: dissect_nbap_E_DCH_LogicalChannelInformation(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18233:     num_items = 0;",
          "18235:   offset = dissect_per_constrained_sequence_of(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "18232: #line 1649 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18232: #line 1655 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "18263: static int",
          "18264: dissect_nbap_E_DCH_MACdFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18266: umts_fp_conversation_info_t *p_conv_data = NULL;",
          "18267: fp_edch_channel_info_t* fp_edch_channel_info = NULL;",
          "18268: address     null_addr;",
          "",
          "[Removed Lines]",
          "18265: #line 1394 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18265: #line 1397 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "18452: static int",
          "18453: dissect_nbap_E_DCH_LogicalChannelToModifyItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18456:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "18457:                                    ett_nbap_E_DCH_LogicalChannelToModifyItem, E_DCH_LogicalChannelToModifyItem_sequence);",
          "",
          "[Removed Lines]",
          "18454: #line 1644 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18454: #line 1650 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "18527: static int",
          "18528: dissect_nbap_E_DCH_MACdFlow_Specific_InfoItem_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18530: guint32 no_ddi_entries, i;",
          "18531: address     null_addr;",
          "18532: nbap_edch_port_info_t *old_info;",
          "",
          "[Removed Lines]",
          "18529: #line 1546 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18529: #line 1552 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "18675: static int",
          "18676: dissect_nbap_E_DCH_FDD_Information_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18679: address     dst_addr, null_addr;",
          "18680: conversation_t *conversation,*old_conversation = NULL;",
          "18681: umts_fp_conversation_info_t *umts_fp_conversation_info _U_;",
          "18682: void *conv_proto_data = NULL;",
          "18684: transportLayerAddress_ipv4 = 0;",
          "",
          "[Removed Lines]",
          "18677: #line 1453 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18677: #line 1456 \"./asn1/Nbap/nbap.cnf\"",
          "18682: fp_edch_channel_info_t* fp_edch_channel_info;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "18744:                 umts_fp_conversation_info->rlc_mode          = FP_RLC_MODE_UNKNOWN;",
          "18747:                 if(crcn_context_present){",
          "18748:                     umts_fp_conversation_info->com_context_id = com_context_id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18747:                 fp_edch_channel_info = wmem_new0(wmem_file_scope(), fp_edch_channel_info_t);",
          "18748:                 umts_fp_conversation_info->channel_specific_info = (void*)fp_edch_channel_info;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "23372: static int",
          "23373: dissect_nbap_HSDSCH_Common_System_InformationFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "23374: #line 2059 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23377: #line 2065 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "23535: static int",
          "23536: dissect_nbap_HSDSCH_MACdFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "23540:     address     dst_addr;",
          "",
          "[Removed Lines]",
          "23537: #line 1760 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23540: #line 1766 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "23638: static int",
          "23639: dissect_nbap_RLC_Mode(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "23641:     guint32 rlc_mode;",
          "23643:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "23640: #line 1687 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23643: #line 1693 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "23679: static int",
          "23680: dissect_nbap_PriorityQueue_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "23682:     num_items++;",
          "",
          "[Removed Lines]",
          "23681: #line 1751 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23684: #line 1757 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "23713: static int",
          "23714: dissect_nbap_HSDSCH_MACdFlows_Information(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "23717:     int protocol_ie_id;",
          "23718:     guint32 i;",
          "",
          "[Removed Lines]",
          "23715: #line 1711 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23718: #line 1717 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "23757: static int",
          "23758: dissect_nbap_T_hSDSCH_Physical_Layer_Category(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "23760:     guint32 hsdsch_physical_layer_category;",
          "23762:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "23759: #line 1704 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23762: #line 1710 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "23825: static int",
          "23826: dissect_nbap_HSDSCH_FDD_Information(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "23827: #line 1812 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23830: #line 1818 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "23965: static int",
          "23966: dissect_nbap_HSDSCH_MACdFlow_Specific_InfoItem_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "23968:     address     dst_addr;",
          "23969:     transportLayerAddress_ipv4 = 0;",
          "23970:     BindingID_port = 0;",
          "",
          "[Removed Lines]",
          "23967: #line 1904 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23970: #line 1910 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "24023: static int",
          "24024: dissect_nbap_PriorityQueue_InfoItem_to_Add(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24026:     num_items = 1;",
          "",
          "[Removed Lines]",
          "24025: #line 1754 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24028: #line 1760 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "24158: static int",
          "24159: dissect_nbap_HSDSCH_Information_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "24160: #line 1924 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24163: #line 1930 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "24283: static int",
          "24284: dissect_nbap_HSDSCH_MACdPDUSizeFormat(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "24285: #line 1789 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24288: #line 1795 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "24394: static int",
          "24395: dissect_nbap_HSDSCH_MACdFlow_Specific_InformationResp_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24397:     num_items++;",
          "",
          "[Removed Lines]",
          "24396: #line 1757 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24399: #line 1763 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "24810: static int",
          "24811: dissect_nbap_HSDSCH_Paging_System_InformationFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24814:   g_warning(\"HS-DSCH Type 3 NOT Implemented!\");",
          "",
          "[Removed Lines]",
          "24812: #line 2139 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24815: #line 2145 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "25004: static int",
          "25005: dissect_nbap_HSDSCH_MACdFlows_to_Delete_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "25007:     num_items++;",
          "",
          "[Removed Lines]",
          "25006: #line 1748 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "25009: #line 1754 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "25021: static int",
          "25022: dissect_nbap_HSDSCH_MACdFlows_to_Delete(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "25024:     num_items = 0;",
          "",
          "[Removed Lines]",
          "25023: #line 1743 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "25026: #line 1749 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "28123: static int",
          "28124: dissect_nbap_NodeB_CommunicationContextID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "28127: nbap_com_context_id_t *cur_val;",
          "",
          "[Removed Lines]",
          "28125: #line 2153 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "28128: #line 2159 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "28858: address     dst_addr, null_addr;",
          "28859: conversation_t *conversation;",
          "28860: umts_fp_conversation_info_t *umts_fp_conversation_info = NULL;",
          "28861: nbap_edch_port_info_t *old_info = NULL;",
          "28863: transportLayerAddress_ipv4 = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28864: fp_edch_channel_info_t* fp_edch_channel_info;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "28912:                 umts_fp_conversation_info->rlc_mode          = FP_RLC_MODE_UNKNOWN;",
          "28915:                 if(crcn_context_present){",
          "28916:                     umts_fp_conversation_info->com_context_id = com_context_id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28918:                 fp_edch_channel_info = wmem_new0(wmem_file_scope(), fp_edch_channel_info_t);",
          "28919:                 umts_fp_conversation_info->channel_specific_info = (void*)fp_edch_channel_info;",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "41156: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "41159: #line 2205 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "41165: #line 2211 \"./asn1/Nbap/nbap.cnf\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b68744cfd8b5feb5576e441b314ad7319263e05",
      "candidate_info": {
        "commit_hash": "7b68744cfd8b5feb5576e441b314ad7319263e05",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/7b68744cfd8b5feb5576e441b314ad7319263e05",
        "files": [
          "epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "epan/dissectors/packet-nbap.c"
        ],
        "message": "NBAP: Moved all global variables together\n\nHopefully if they are in one place replacing them with a non-static alternative will be easier\n\nChange-Id: I91dd47ea51a1435cea4e68d88d6afe240153fe69\nReviewed-on: https://code.wireshark.org/review/22539\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/asn1/nbap/packet-nbap-template.c||epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/nbap/packet-nbap-template.c||epan/dissectors/asn1/nbap/packet-nbap-template.c": [
          "File: epan/dissectors/asn1/nbap/packet-nbap-template.c -> epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: void proto_register_nbap(void);",
          "68: void proto_reg_handoff_nbap(void);",
          "71: static dissector_handle_t fp_handle;",
          "81: #include \"packet-nbap-val.h\"",
          "",
          "[Removed Lines]",
          "72: static guint32 transportLayerAddress_ipv4;",
          "73: static guint16 BindingID_port;",
          "74: static guint32 ul_scrambling_code;",
          "75: static guint32 com_context_id;",
          "76: static int cfn;",
          "78: wmem_tree_t *nbap_scrambling_code_crncc_map = NULL;",
          "79: wmem_tree_t *nbap_crncc_urnti_map = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:   gint dl_chan_num_tbs[MAX_FP_CHANS];",
          "154: }nbap_dch_channel_info_t;",
          "",
          "[Removed Lines]",
          "156: nbap_dch_channel_info_t nbap_dch_chnl_info[256];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "172: } nbap_edch_channel_info_t;",
          "176: typedef struct",
          "177: {",
          "",
          "[Removed Lines]",
          "174: nbap_edch_channel_info_t nbap_edch_channel_info[maxNrOfEDCHMACdFlows];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "189: } nbap_hsdsch_channel_info_t;",
          "193: typedef struct",
          "194: {",
          "195:  address crnc_address;",
          "",
          "[Removed Lines]",
          "191: nbap_hsdsch_channel_info_t nbap_hsdsch_channel_info[maxNrOfMACdFlows];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "197:  enum fp_rlc_mode rlc_mode;",
          "198: } nbap_common_channel_info_t;",
          "215: typedef struct com_ctxt_{",
          "",
          "[Removed Lines]",
          "202: gint g_num_dch_in_flow;",
          "204: gint g_dch_ids_in_flow_list[maxNrOfTFs];",
          "206: gint hsdsch_macdflow_ids[maxNrOfMACdFlows];",
          "208: gint hrnti;",
          "210: guint node_b_com_context_id;",
          "212: static wmem_tree_t* edch_flow_port_map = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "218:   guint frame_num;",
          "219: }nbap_com_context_id_t;",
          "239: enum TransportFormatSet_type_enum",
          "240: {",
          "241:   NBAP_DCH_UL,",
          "",
          "[Removed Lines]",
          "221: gboolean crcn_context_present = FALSE;",
          "222: static wmem_tree_t* com_context_map;",
          "224: struct _nbap_msg_info_for_fp g_nbap_msg_info_for_fp;",
          "227: static guint32 ProcedureCode;",
          "228: static guint32 ProtocolIE_ID;",
          "229: static guint32 ddMode;",
          "230: static const gchar *ProcedureID;",
          "231: static guint32 TransactionID;",
          "232: static guint32 t_dch_id, dch_id, prev_dch_id, commonphysicalchannelid, e_dch_macdflow_id, hsdsch_macdflow_id=3,",
          "233:                 e_dch_ddi_value,logical_channel_id,common_macdflow_id;",
          "234: static guint32 MACdPDU_Size, commontransportchannelid;",
          "235: static guint num_items;",
          "236: static gint paging_indications;",
          "237: static guint32 ib_type, segment_type;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "245:   NBAP_PCH",
          "246: };",
          "248: enum TransportFormatSet_type_enum transportFormatSet_type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204: static guint32 transportLayerAddress_ipv4;",
          "205: static guint16 BindingID_port;",
          "206: static guint32 ul_scrambling_code;",
          "207: static guint32 com_context_id;",
          "208: static int cfn;",
          "209: gint g_num_dch_in_flow;",
          "210: gint g_dch_ids_in_flow_list[maxNrOfTFs];",
          "211: gint hsdsch_macdflow_ids[maxNrOfMACdFlows];",
          "212: gint hrnti;",
          "213: guint node_b_com_context_id;",
          "214: static wmem_tree_t* edch_flow_port_map = NULL;",
          "215: static guint32 ProcedureCode;",
          "216: static guint32 ProtocolIE_ID;",
          "217: static guint32 ddMode;",
          "218: static const gchar *ProcedureID;",
          "219: static guint32 TransactionID;",
          "220: static guint32 t_dch_id;",
          "221: static guint32 dch_id;",
          "222: static guint32 prev_dch_id;",
          "223: static guint32 commonphysicalchannelid;",
          "224: static guint32 e_dch_macdflow_id;",
          "225: static guint32 hsdsch_macdflow_id=3;",
          "226: static guint32 e_dch_ddi_value;",
          "227: static guint32 logical_channel_id;",
          "228: static guint32 common_macdflow_id;",
          "229: static guint32 MACdPDU_Size;",
          "230: static guint32 commontransportchannelid;",
          "231: static guint num_items;",
          "232: static gint paging_indications;",
          "233: static guint32 ib_type;",
          "234: static guint32 segment_type;",
          "235: wmem_tree_t *nbap_scrambling_code_crncc_map = NULL;",
          "236: wmem_tree_t *nbap_crncc_urnti_map = NULL;",
          "238: gboolean crcn_context_present = FALSE;",
          "239: static wmem_tree_t* com_context_map;",
          "240: nbap_dch_channel_info_t nbap_dch_chnl_info[256];",
          "241: nbap_edch_channel_info_t nbap_edch_channel_info[maxNrOfEDCHMACdFlows];",
          "242: nbap_hsdsch_channel_info_t nbap_hsdsch_channel_info[maxNrOfMACdFlows];",
          "244: struct _nbap_msg_info_for_fp g_nbap_msg_info_for_fp;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c": [
          "File: epan/dissectors/packet-nbap.c -> epan/dissectors/packet-nbap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75: void proto_register_nbap(void);",
          "76: void proto_reg_handoff_nbap(void);",
          "79: static dissector_handle_t fp_handle;",
          "",
          "[Removed Lines]",
          "80: static guint32 transportLayerAddress_ipv4;",
          "81: static guint16 BindingID_port;",
          "82: static guint32 ul_scrambling_code;",
          "83: static guint32 com_context_id;",
          "84: static int cfn;",
          "86: wmem_tree_t *nbap_scrambling_code_crncc_map = NULL;",
          "87: wmem_tree_t *nbap_crncc_urnti_map = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1544: } ProtocolIE_ID_enum;",
          "1550: static int proto_nbap = -1;",
          "",
          "[Removed Lines]",
          "1547: #line 82 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "1539: #line 74 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4848: static int hf_nbap_RACH_SubChannelNumbers_subCh0 = -1;",
          "4854: static int ett_nbap = -1;",
          "",
          "[Removed Lines]",
          "4851: #line 90 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "4843: #line 82 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6487: static gint ett_nbap_Outcome = -1;",
          "6492: static expert_field ei_nbap_no_find_comm_context_id = EI_INIT;",
          "6493: static expert_field ei_nbap_no_find_port_info = EI_INIT;",
          "",
          "[Removed Lines]",
          "6490: #line 98 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "6482: #line 90 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6546:   gint dl_chan_num_tbs[MAX_FP_CHANS];",
          "6547: }nbap_dch_channel_info_t;",
          "",
          "[Removed Lines]",
          "6549: nbap_dch_channel_info_t nbap_dch_chnl_info[256];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6565: } nbap_edch_channel_info_t;",
          "6569: typedef struct",
          "6570: {",
          "",
          "[Removed Lines]",
          "6567: nbap_edch_channel_info_t nbap_edch_channel_info[maxNrOfEDCHMACdFlows];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "6582: } nbap_hsdsch_channel_info_t;",
          "6586: typedef struct",
          "6587: {",
          "6588:  address crnc_address;",
          "",
          "[Removed Lines]",
          "6584: nbap_hsdsch_channel_info_t nbap_hsdsch_channel_info[maxNrOfMACdFlows];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "6590:  enum fp_rlc_mode rlc_mode;",
          "6591: } nbap_common_channel_info_t;",
          "6608: typedef struct com_ctxt_{",
          "",
          "[Removed Lines]",
          "6595: gint g_num_dch_in_flow;",
          "6597: gint g_dch_ids_in_flow_list[maxNrOfTFs];",
          "6599: gint hsdsch_macdflow_ids[maxNrOfMACdFlows];",
          "6601: gint hrnti;",
          "6603: guint node_b_com_context_id;",
          "6605: static wmem_tree_t* edch_flow_port_map = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "6611:   guint frame_num;",
          "6612: }nbap_com_context_id_t;",
          "6632: enum TransportFormatSet_type_enum",
          "6633: {",
          "6634:   NBAP_DCH_UL,",
          "",
          "[Removed Lines]",
          "6614: gboolean crcn_context_present = FALSE;",
          "6615: static wmem_tree_t* com_context_map;",
          "6617: struct _nbap_msg_info_for_fp g_nbap_msg_info_for_fp;",
          "6620: static guint32 ProcedureCode;",
          "6621: static guint32 ProtocolIE_ID;",
          "6622: static guint32 ddMode;",
          "6623: static const gchar *ProcedureID;",
          "6624: static guint32 TransactionID;",
          "6625: static guint32 t_dch_id, dch_id, prev_dch_id, commonphysicalchannelid, e_dch_macdflow_id, hsdsch_macdflow_id=3,",
          "6626:                 e_dch_ddi_value,logical_channel_id,common_macdflow_id;",
          "6627: static guint32 MACdPDU_Size, commontransportchannelid;",
          "6628: static guint num_items;",
          "6629: static gint paging_indications;",
          "6630: static guint32 ib_type, segment_type;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "6638:   NBAP_PCH",
          "6639: };",
          "6641: enum TransportFormatSet_type_enum transportFormatSet_type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6597: static guint32 transportLayerAddress_ipv4;",
          "6598: static guint16 BindingID_port;",
          "6599: static guint32 ul_scrambling_code;",
          "6600: static guint32 com_context_id;",
          "6601: static int cfn;",
          "6602: gint g_num_dch_in_flow;",
          "6603: gint g_dch_ids_in_flow_list[maxNrOfTFs];",
          "6604: gint hsdsch_macdflow_ids[maxNrOfMACdFlows];",
          "6605: gint hrnti;",
          "6606: guint node_b_com_context_id;",
          "6607: static wmem_tree_t* edch_flow_port_map = NULL;",
          "6608: static guint32 ProcedureCode;",
          "6609: static guint32 ProtocolIE_ID;",
          "6610: static guint32 ddMode;",
          "6611: static const gchar *ProcedureID;",
          "6612: static guint32 TransactionID;",
          "6613: static guint32 t_dch_id;",
          "6614: static guint32 dch_id;",
          "6615: static guint32 prev_dch_id;",
          "6616: static guint32 commonphysicalchannelid;",
          "6617: static guint32 e_dch_macdflow_id;",
          "6618: static guint32 hsdsch_macdflow_id=3;",
          "6619: static guint32 e_dch_ddi_value;",
          "6620: static guint32 logical_channel_id;",
          "6621: static guint32 common_macdflow_id;",
          "6622: static guint32 MACdPDU_Size;",
          "6623: static guint32 commontransportchannelid;",
          "6624: static guint num_items;",
          "6625: static gint paging_indications;",
          "6626: static guint32 ib_type;",
          "6627: static guint32 segment_type;",
          "6628: wmem_tree_t *nbap_scrambling_code_crncc_map = NULL;",
          "6629: wmem_tree_t *nbap_crncc_urnti_map = NULL;",
          "6631: gboolean crcn_context_present = FALSE;",
          "6632: static wmem_tree_t* com_context_map;",
          "6633: nbap_dch_channel_info_t nbap_dch_chnl_info[256];",
          "6634: nbap_edch_channel_info_t nbap_edch_channel_info[maxNrOfEDCHMACdFlows];",
          "6635: nbap_hsdsch_channel_info_t nbap_hsdsch_channel_info[maxNrOfMACdFlows];",
          "6637: struct _nbap_msg_info_for_fp g_nbap_msg_info_for_fp;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "55331: static int dissect_ProtocolIEFieldValue(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, void *data _U_)",
          "55332: {",
          "",
          "[Removed Lines]",
          "55329: #line 369 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "55325: #line 365 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "68719:         NULL, HFILL }},",
          "68723:   };",
          "",
          "[Removed Lines]",
          "68722: #line 597 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "68718: #line 593 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "70359:     &ett_nbap_Outcome,",
          "70363:   };",
          "70365:   static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "70362: #line 606 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "70358: #line 602 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "71514: }",
          "",
          "[Removed Lines]",
          "71513: #line 660 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "71509: #line 656 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "78ed5f34f574d6400e63b7f8c4f358c7c69a24fa",
      "candidate_info": {
        "commit_hash": "78ed5f34f574d6400e63b7f8c4f358c7c69a24fa",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/78ed5f34f574d6400e63b7f8c4f358c7c69a24fa",
        "files": [
          "epan/dissectors/asn1/nbap/nbap.cnf",
          "epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "epan/dissectors/packet-nbap.c"
        ],
        "message": "NBAP: Always map NB-CC to CRNC-CC\n\nNow maps for all channels and not only E-DCH\n\nChange-Id: I51099e887830e5142b58fd624775d395e354b012\nReviewed-on: https://code.wireshark.org/review/24572\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
          "epan/dissectors/asn1/nbap/packet-nbap-template.c||epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
          ],
          "candidate": [
            "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf": [
          "File: epan/dissectors/asn1/nbap/nbap.cnf -> epan/dissectors/asn1/nbap/nbap.cnf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1448:                 if(private_data_get_crnc_context_present(actx->pinfo)){",
          "1449:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "1450:                 }else{",
          "1457:                 }",
          "",
          "[Removed Lines]",
          "1451:                     nbap_com_context_id_t *cur_val;",
          "1452:                     if((cur_val=(nbap_com_context_id_t *)wmem_tree_lookup32(com_context_map,private_data_get_node_b_com_context_id(actx->pinfo))) != NULL){",
          "1453:                         umts_fp_conversation_info->com_context_id = cur_val->crnc_context;",
          "1454:                     }else{",
          "1455:                         expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "1456:                     }",
          "",
          "[Added Lines]",
          "1451:                     expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1631:                 if(private_data_get_crnc_context_present(actx->pinfo)){",
          "1632:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "1633:                 }else{",
          "1641:                 }",
          "",
          "[Removed Lines]",
          "1634:                     nbap_com_context_id_t * cur_val;",
          "1636:                     if((cur_val=(nbap_com_context_id_t *)wmem_tree_lookup32(com_context_map,private_data_get_node_b_com_context_id(actx->pinfo))) != NULL){",
          "1637:                         umts_fp_conversation_info->com_context_id = cur_val->crnc_context;",
          "1638:                     }else{",
          "1639:                         expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "1640:                     }",
          "",
          "[Added Lines]",
          "1629:                     expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1681:     if(private_data_get_crnc_context_present(actx->pinfo)){",
          "1683:     }else{",
          "1690:     }",
          "",
          "[Removed Lines]",
          "1684:         nbap_com_context_id_t * cur_val;",
          "1685:         if((cur_val=(nbap_com_context_id_t *)wmem_tree_lookup32(com_context_map,private_data_get_node_b_com_context_id(actx->pinfo))) != NULL){",
          "1686:             private_data_set_com_context_id(actx->pinfo, cur_val->crnc_context);",
          "1687:         }else{",
          "1688:             expert_add_info(actx->pinfo, NULL, &ei_nbap_no_find_comm_context_id);",
          "1689:         }",
          "",
          "[Added Lines]",
          "1673:         expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2315: private_data_set_crnc_context_present(actx->pinfo, TRUE);",
          "2317: #.FN_BODY NodeB-CommunicationContextID VAL_PTR = &node_b_com_context_id",
          "2318:   guint node_b_com_context_id;",
          "2320:   nbap_com_context_id_t *cur_val;",
          "2322: %(DEFAULT_BODY)s",
          "2333:        cur_val = wmem_new(wmem_file_scope(), nbap_com_context_id_t);",
          "2334:        cur_val->crnc_context = private_data_get_com_context_id(actx->pinfo);",
          "2335:        cur_val->frame_num = actx->pinfo->num;",
          "2336:        wmem_tree_insert32(com_context_map, node_b_com_context_id, cur_val);",
          "2338:     }",
          "2339:   }",
          "",
          "[Removed Lines]",
          "2324:   private_data_set_node_b_com_context_id(actx->pinfo, node_b_com_context_id);",
          "2325:   if (actx->pinfo->fd->flags.visited){",
          "2326:       return offset;",
          "2327:   }",
          "2330:   if(private_data_get_crnc_context_present(actx->pinfo)){",
          "2331:     if( wmem_tree_lookup32(com_context_map, node_b_com_context_id) == NULL ){",
          "2337:        private_data_set_com_context_id(actx->pinfo, -1);",
          "",
          "[Added Lines]",
          "2302:   gboolean crnc_context_present;",
          "2309:   crnc_context_present = private_data_get_crnc_context_present(actx->pinfo);",
          "2310:   if(crnc_context_present) {",
          "2312:     if (actx->pinfo->fd->flags.visited){",
          "2313:         return offset;",
          "2314:     }",
          "2317:     if(wmem_tree_lookup32(com_context_map, node_b_com_context_id) == NULL) {",
          "2323:     }",
          "2324:   }",
          "2325:   else {",
          "2327:     cur_val = (nbap_com_context_id_t *)wmem_tree_lookup32(com_context_map,node_b_com_context_id);",
          "2328:     if(cur_val != NULL){",
          "2330:       private_data_set_com_context_id(actx->pinfo,cur_val->crnc_context);",
          "2331:       private_data_set_crnc_context_present(actx->pinfo, TRUE);",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/nbap/packet-nbap-template.c||epan/dissectors/asn1/nbap/packet-nbap-template.c": [
          "File: epan/dissectors/asn1/nbap/packet-nbap-template.c -> epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:   guint32 com_context_id;",
          "209:   gint num_dch_in_flow;",
          "210:   gint hrnti;",
          "212:   guint32 protocol_ie_id;",
          "213:   guint32 dd_mode;",
          "214:   guint32 transaction_id;",
          "",
          "[Removed Lines]",
          "211:   guint node_b_com_context_id;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "396:   private_data->hrnti = hrnti;",
          "397: }",
          "411: static guint32 private_data_get_protocol_ie_id(packet_info *pinfo)",
          "412: {",
          "413:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "",
          "[Removed Lines]",
          "399: static guint private_data_get_node_b_com_context_id(packet_info *pinfo)",
          "400: {",
          "401:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "402:   return private_data->node_b_com_context_id;",
          "403: }",
          "405: static void private_data_set_node_b_com_context_id(packet_info *pinfo, guint node_b_com_context_id)",
          "406: {",
          "407:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "408:   private_data->node_b_com_context_id = node_b_com_context_id;",
          "409: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c": [
          "File: epan/dissectors/packet-nbap.c -> epan/dissectors/packet-nbap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6601:   guint32 com_context_id;",
          "6602:   gint num_dch_in_flow;",
          "6603:   gint hrnti;",
          "6605:   guint32 protocol_ie_id;",
          "6606:   guint32 dd_mode;",
          "6607:   guint32 transaction_id;",
          "",
          "[Removed Lines]",
          "6604:   guint node_b_com_context_id;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6789:   private_data->hrnti = hrnti;",
          "6790: }",
          "6804: static guint32 private_data_get_protocol_ie_id(packet_info *pinfo)",
          "6805: {",
          "6806:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "",
          "[Removed Lines]",
          "6792: static guint private_data_get_node_b_com_context_id(packet_info *pinfo)",
          "6793: {",
          "6794:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6795:   return private_data->node_b_com_context_id;",
          "6796: }",
          "6798: static void private_data_set_node_b_com_context_id(packet_info *pinfo, guint node_b_com_context_id)",
          "6799: {",
          "6800:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6801:   private_data->node_b_com_context_id = node_b_com_context_id;",
          "6802: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "10815: static int",
          "10816: dissect_nbap_HSDSCH_RNTI(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "10818:   gint hrnti;",
          "10819: umts_fp_conversation_info_t *umts_fp_conversation_info = NULL;",
          "10820: fp_hsdsch_channel_info_t* fp_hsdsch_channel_info = NULL;",
          "",
          "[Removed Lines]",
          "10817: #line 2342 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "10804: #line 2336 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "12051: static int",
          "12052: dissect_nbap_Common_MACFlow_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12054: guint32 common_macdflow_id;",
          "12055:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "12056:                                                             0U, maxNrOfCommonMACFlows_1, &common_macdflow_id, FALSE);",
          "",
          "[Removed Lines]",
          "12053: #line 2186 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "12040: #line 2170 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "12186: static int",
          "12187: dissect_nbap_LogicalChannelID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12189:   guint32 logical_channel_id;",
          "12190:   guint num_items;",
          "12191:   nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "",
          "[Removed Lines]",
          "12188: #line 1799 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "12175: #line 1783 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "12210: static int",
          "12211: dissect_nbap_MAC_PDU_SizeExtended(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12213: guint32 hsdsch_macdflow_id;",
          "12214: nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "12215: nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "",
          "[Removed Lines]",
          "12212: #line 1917 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "12199: #line 1901 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "12637: static int",
          "12638: dissect_nbap_CommonMACFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12640:     address     dst_addr;",
          "12641:     guint32 transportLayerAddress_ipv4;",
          "12642:     guint16 bindingID;",
          "",
          "[Removed Lines]",
          "12639: #line 2194 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "12626: #line 2178 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "12689: static int",
          "12690: dissect_nbap_MACdPDU_Size(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12692: guint32 mac_d_pdu_size;",
          "12693: guint num_items;",
          "12694: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "",
          "[Removed Lines]",
          "12691: #line 1783 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "12678: #line 1767 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "13957: static int",
          "13958: dissect_nbap_CRNC_CommunicationContextID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "13960: guint32 com_context_id;",
          "13961:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "13962:                                                             0U, 1048575U, &com_context_id, FALSE);",
          "",
          "[Removed Lines]",
          "13959: #line 2312 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "13946: #line 2296 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "18681: static int",
          "18682: dissect_nbap_E_DCH_DDI_Value(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18684:   guint32 e_dch_ddi_value;",
          "18685:   guint num_items;",
          "18686:   nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "",
          "[Removed Lines]",
          "18683: #line 1767 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18670: #line 1751 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "18821: static int",
          "18822: dissect_nbap_E_DCH_LogicalChannelInformationItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18824:     private_data_increment_num_items(actx->pinfo);",
          "",
          "[Removed Lines]",
          "18823: #line 1764 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18810: #line 1748 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "18838: static int",
          "18839: dissect_nbap_E_DCH_LogicalChannelInformation(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18841:     private_data_set_num_items(actx->pinfo, 0);",
          "18842:     nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "18843:     nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "",
          "[Removed Lines]",
          "18840: #line 1755 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18827: #line 1739 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "18873: static int",
          "18874: dissect_nbap_E_DCH_MACdFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18876: umts_fp_conversation_info_t *p_conv_data = NULL;",
          "18877: fp_edch_channel_info_t* fp_edch_channel_info = NULL;",
          "18878: address     null_addr;",
          "",
          "[Removed Lines]",
          "18875: #line 1502 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18862: #line 1497 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "19058: static int",
          "19059: dissect_nbap_E_DCH_LogicalChannelToModifyItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "19062:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "19063:                                    ett_nbap_E_DCH_LogicalChannelToModifyItem, E_DCH_LogicalChannelToModifyItem_sequence);",
          "",
          "[Removed Lines]",
          "19060: #line 1750 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "19047: #line 1734 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "19133: static int",
          "19134: dissect_nbap_E_DCH_MACdFlow_Specific_InfoItem_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "19136: guint32 no_ddi_entries, i;",
          "19137: address     null_addr;",
          "19138: nbap_edch_port_info_t *old_info;",
          "",
          "[Removed Lines]",
          "19135: #line 1658 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "19122: #line 1647 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "19161:     if(private_data_get_crnc_context_present(actx->pinfo)){",
          "19163:     }else{",
          "19170:     }",
          "",
          "[Removed Lines]",
          "19164:         nbap_com_context_id_t * cur_val;",
          "19165:         if((cur_val=(nbap_com_context_id_t *)wmem_tree_lookup32(com_context_map,private_data_get_node_b_com_context_id(actx->pinfo))) != NULL){",
          "19166:             private_data_set_com_context_id(actx->pinfo, cur_val->crnc_context);",
          "19167:         }else{",
          "19168:             expert_add_info(actx->pinfo, NULL, &ei_nbap_no_find_comm_context_id);",
          "19169:         }",
          "",
          "[Added Lines]",
          "19151:         expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "19275: static int",
          "19276: dissect_nbap_E_DCH_FDD_Information_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "19279: address     dst_addr, null_addr;",
          "19280: conversation_t *conversation,*old_conversation = NULL;",
          "",
          "[Removed Lines]",
          "19277: #line 1557 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "19259: #line 1552 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "19354:                 if(private_data_get_crnc_context_present(actx->pinfo)){",
          "19355:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "19356:                 }else{",
          "19364:                 }",
          "",
          "[Removed Lines]",
          "19357:                     nbap_com_context_id_t * cur_val;",
          "19359:                     if((cur_val=(nbap_com_context_id_t *)wmem_tree_lookup32(com_context_map,private_data_get_node_b_com_context_id(actx->pinfo))) != NULL){",
          "19360:                         umts_fp_conversation_info->com_context_id = cur_val->crnc_context;",
          "19361:                     }else{",
          "19362:                         expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "19363:                     }",
          "",
          "[Added Lines]",
          "19339:                     expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "23990: static int",
          "23991: dissect_nbap_HSDSCH_Common_System_InformationFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "23992: #line 2221 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23968: #line 2205 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "24170: static int",
          "24171: dissect_nbap_HSDSCH_MACdFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24173:     address     dst_addr;",
          "24174:     guint32 transportLayerAddress_ipv4;",
          "24175:     guint16 bindingID;",
          "",
          "[Removed Lines]",
          "24172: #line 1889 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24148: #line 1873 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "24279: static int",
          "24280: dissect_nbap_RLC_Mode(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24282:     guint32 rlc_mode;",
          "24283:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "24284:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "",
          "[Removed Lines]",
          "24281: #line 1812 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24257: #line 1796 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "24321: static int",
          "24322: dissect_nbap_PriorityQueue_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24324:     private_data_increment_num_items(actx->pinfo);",
          "",
          "[Removed Lines]",
          "24323: #line 1880 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24299: #line 1864 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "24355: static int",
          "24356: dissect_nbap_HSDSCH_MACdFlows_Information(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24358:     int protocol_ie_id;",
          "24359:     guint32 i;",
          "24360:     private_data_set_num_items(actx->pinfo,0);",
          "",
          "[Removed Lines]",
          "24357: #line 1839 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24333: #line 1823 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "24400: static int",
          "24401: dissect_nbap_T_hSDSCH_Physical_Layer_Category(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24403:     guint32 hsdsch_physical_layer_category;",
          "24404:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "24405:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "",
          "[Removed Lines]",
          "24402: #line 1830 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24378: #line 1814 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "24470: static int",
          "24471: dissect_nbap_HSDSCH_FDD_Information(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "24472: #line 1951 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24448: #line 1935 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "24615: static int",
          "24616: dissect_nbap_HSDSCH_MACdFlow_Specific_InfoItem_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24618:     address     dst_addr;",
          "24619:     guint32 transportLayerAddress_ipv4;",
          "24620:     guint16 bindingID;",
          "",
          "[Removed Lines]",
          "24617: #line 2048 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24593: #line 2032 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "24678: static int",
          "24679: dissect_nbap_PriorityQueue_InfoItem_to_Add(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24681:     private_data_set_num_items(actx->pinfo,1);",
          "",
          "[Removed Lines]",
          "24680: #line 1883 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24656: #line 1867 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "24813: static int",
          "24814: dissect_nbap_HSDSCH_Information_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "24815: #line 2073 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24791: #line 2057 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "24943: static int",
          "24944: dissect_nbap_HSDSCH_MACdPDUSizeFormat(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "24945: #line 1928 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24921: #line 1912 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "25054: static int",
          "25055: dissect_nbap_HSDSCH_MACdFlow_Specific_InformationResp_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "25057:     private_data_increment_num_items(actx->pinfo);",
          "",
          "[Removed Lines]",
          "25056: #line 1886 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "25032: #line 1870 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "25470: static int",
          "25471: dissect_nbap_HSDSCH_Paging_System_InformationFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "25474:   g_warning(\"HS-DSCH Type 3 NOT Implemented!\");",
          "",
          "[Removed Lines]",
          "25472: #line 2302 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "25448: #line 2286 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "25664: static int",
          "25665: dissect_nbap_HSDSCH_MACdFlows_to_Delete_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "25667:     private_data_increment_num_items(actx->pinfo);",
          "",
          "[Removed Lines]",
          "25666: #line 1877 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "25642: #line 1861 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "25681: static int",
          "25682: dissect_nbap_HSDSCH_MACdFlows_to_Delete(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "25684:     private_data_set_num_items(actx->pinfo,0);",
          "",
          "[Removed Lines]",
          "25683: #line 1872 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "25659: #line 1856 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "28787: static int",
          "28788: dissect_nbap_NodeB_CommunicationContextID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "28790:   guint node_b_com_context_id;",
          "28792:   nbap_com_context_id_t *cur_val;",
          "28794:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "28795:                                                             0U, 1048575U, &node_b_com_context_id, FALSE);",
          "28807:        cur_val = wmem_new(wmem_file_scope(), nbap_com_context_id_t);",
          "28808:        cur_val->crnc_context = private_data_get_com_context_id(actx->pinfo);",
          "28809:        cur_val->frame_num = actx->pinfo->num;",
          "28810:        wmem_tree_insert32(com_context_map, node_b_com_context_id, cur_val);",
          "28812:     }",
          "28813:   }",
          "",
          "[Removed Lines]",
          "28789: #line 2318 \"./asn1/nbap/nbap.cnf\"",
          "28798:   private_data_set_node_b_com_context_id(actx->pinfo, node_b_com_context_id);",
          "28799:   if (actx->pinfo->fd->flags.visited){",
          "28800:       return offset;",
          "28801:   }",
          "28804:   if(private_data_get_crnc_context_present(actx->pinfo)){",
          "28805:     if( wmem_tree_lookup32(com_context_map, node_b_com_context_id) == NULL ){",
          "28811:        private_data_set_com_context_id(actx->pinfo, -1);",
          "",
          "[Added Lines]",
          "28765: #line 2302 \"./asn1/nbap/nbap.cnf\"",
          "28766:   gboolean crnc_context_present;",
          "28775:   crnc_context_present = private_data_get_crnc_context_present(actx->pinfo);",
          "28776:   if(crnc_context_present) {",
          "28778:     if (actx->pinfo->fd->flags.visited){",
          "28779:         return offset;",
          "28780:     }",
          "28783:     if(wmem_tree_lookup32(com_context_map, node_b_com_context_id) == NULL) {",
          "28789:     }",
          "28790:   }",
          "28791:   else {",
          "28793:     cur_val = (nbap_com_context_id_t *)wmem_tree_lookup32(com_context_map,node_b_com_context_id);",
          "28794:     if(cur_val != NULL){",
          "28796:       private_data_set_com_context_id(actx->pinfo,cur_val->crnc_context);",
          "28797:       private_data_set_crnc_context_present(actx->pinfo, TRUE);",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "29598:                 if(private_data_get_crnc_context_present(actx->pinfo)){",
          "29599:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "29600:                 }else{",
          "29607:                 }",
          "",
          "[Removed Lines]",
          "29601:                     nbap_com_context_id_t *cur_val;",
          "29602:                     if((cur_val=(nbap_com_context_id_t *)wmem_tree_lookup32(com_context_map,private_data_get_node_b_com_context_id(actx->pinfo))) != NULL){",
          "29603:                         umts_fp_conversation_info->com_context_id = cur_val->crnc_context;",
          "29604:                     }else{",
          "29605:                         expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "29606:                     }",
          "",
          "[Added Lines]",
          "29587:                     expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "41823: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "41826: #line 2375 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "41807: #line 2369 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "55927: static int dissect_ProtocolIEFieldValue(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, void *data _U_)",
          "55928: {",
          "",
          "[Removed Lines]",
          "55925: #line 801 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "55906: #line 788 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "69389:         NULL, HFILL }},",
          "69393:   };",
          "",
          "[Removed Lines]",
          "69392: #line 1103 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "69373: #line 1090 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "71029:     &ett_nbap_Outcome,",
          "71033:   };",
          "71035:   static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "71032: #line 1112 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "71013: #line 1099 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "72185: }",
          "",
          "[Removed Lines]",
          "72184: #line 1167 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "72165: #line 1154 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ccac2b65af39fe778aec9a3ed83c502dc6023d3",
      "candidate_info": {
        "commit_hash": "5ccac2b65af39fe778aec9a3ed83c502dc6023d3",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/5ccac2b65af39fe778aec9a3ed83c502dc6023d3",
        "files": [
          "epan/dissectors/asn1/nbap/nbap.cnf",
          "epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "epan/dissectors/packet-nbap.c"
        ],
        "message": "NBAP: Simplify private data API\n\nExplicit getters/setters seems excessive and become\nunmaintainable when the private data struct gets big, like in NBAP\n\nChange-Id: I54d6eea327f1b393d9f80aafcbdd75080e10d50d\nReviewed-on: https://code.wireshark.org/review/27749\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Peter Wu <peter@lekensteyn.nl>",
        "before_after_code_files": [
          "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
          "epan/dissectors/asn1/nbap/packet-nbap-template.c||epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
          ],
          "candidate": [
            "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf",
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/nbap/nbap.cnf||epan/dissectors/asn1/nbap/nbap.cnf": [
          "File: epan/dissectors/asn1/nbap/nbap.cnf -> epan/dissectors/asn1/nbap/nbap.cnf",
          "--- Hunk 1 ---",
          "[Context before]",
          "93: #.FN_BODY ProcedureCode VAL_PTR = &procedure_code",
          "94:   guint32 procedure_code;",
          "95: %(DEFAULT_BODY)s",
          "97:   col_add_fstr(actx->pinfo->cinfo, COL_INFO, \"%%s \",",
          "98:                  val_to_str(procedure_code, nbap_ProcedureCode_vals,",
          "99:                             \"unknown message\"));",
          "107: #.FN_BODY ProcedureID",
          "108:   ProcedureID = NULL;",
          "109: %(DEFAULT_BODY)s",
          "110:   ProcedureID = wmem_strdup_printf(wmem_packet_scope(), \"%%s/%%s\",",
          "125: #.FN_PARS InitiatingMessage/value  FN_VARIANT=_pdu_new  TYPE_REF_FN=dissect_InitiatingMessageValue",
          "",
          "[Removed Lines]",
          "96:   private_data_set_procedure_code(actx->pinfo, procedure_code);",
          "101: #.FN_BODY ProcedureID/ddMode VAL_PTR = &dd_mode",
          "102:   guint32 dd_mode;",
          "103: %(DEFAULT_BODY)s",
          "104:   private_data_set_dd_mode(actx->pinfo, dd_mode);",
          "111:                                  val_to_str(private_data_get_procedure_code(actx->pinfo), VALS(nbap_ProcedureCode_vals), \"unknown(%%u)\"),",
          "112:                                  val_to_str(private_data_get_dd_mode(actx->pinfo), VALS(nbap_DdMode_vals), \"unknown(%%u)\"));",
          "115: #.FN_BODY TransactionID/shortTransActionId VAL_PTR = &transaction_id",
          "116:   guint32 transaction_id;",
          "117: %(DEFAULT_BODY)s",
          "118:   private_data_set_transaction_id(actx->pinfo, transaction_id);",
          "120: #.FN_BODY TransactionID/longTransActionId VAL_PTR = &transaction_id",
          "121:   guint32 transaction_id;",
          "122: %(DEFAULT_BODY)s",
          "123:   private_data_set_transaction_id(actx->pinfo, transaction_id);",
          "",
          "[Added Lines]",
          "96:   nbap_get_private_data(actx->pinfo)->procedure_code = procedure_code;",
          "101: #.FN_PARS ProcedureID/ddMode VAL_PTR = &nbap_get_private_data(actx->pinfo)->dd_mode",
          "106:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "109:                                  val_to_str(nbap_private_data->procedure_code, VALS(nbap_ProcedureCode_vals), \"unknown(%%u)\"),",
          "110:                                  val_to_str(nbap_private_data->dd_mode, VALS(nbap_DdMode_vals), \"unknown(%%u)\"));",
          "113: #.FN_PARS TransactionID/shortTransActionId VAL_PTR = &nbap_get_private_data(actx->pinfo)->transaction_id",
          "115: #.FN_PARS TransactionID/longTransActionId VAL_PTR = &nbap_get_private_data(actx->pinfo)->transaction_id",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186: conversation_t *conv;",
          "187: guint32 transportLayerAddress_ipv4;",
          "188: guint16 bindingID;",
          "190: nbap_debug(\"Frame %%u CommonTransportChannel-InformationResponse Start\", actx->pinfo->num);",
          "195: %(DEFAULT_BODY)s",
          "199:   if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "200:     return offset;",
          "201:   }",
          "203:   set_address(&dst_addr, AT_IPv4, 4, &transportLayerAddress_ipv4);",
          "207:   if(request_conv == NULL){",
          "208:     return offset;",
          "",
          "[Removed Lines]",
          "192: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "193: private_data_set_binding_id_port(actx->pinfo, 0);",
          "197:   transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "198:   bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "205:   request_conv = find_setup_conv(private_data_get_transaction_id(actx->pinfo),private_data_get_dd_mode(actx->pinfo),private_data_get_common_transport_channel_id(actx->pinfo));",
          "",
          "[Added Lines]",
          "181: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "185: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "186: nbap_private_data->binding_id_port = 0;",
          "190:   transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "191:   bindingID = nbap_private_data->binding_id_port;",
          "198:   request_conv = find_setup_conv(nbap_private_data->transaction_id,nbap_private_data->dd_mode,nbap_private_data->common_transport_channel_id);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "597: # SecondaryULFrequencyReport",
          "598: # SecondaryULFrequencyUpdateIndication",
          "617: #.FN_BODY IB-SG-DATA VAL_PTR = &parameter_tvb",
          "618:   tvbuff_t *parameter_tvb=NULL;",
          "",
          "[Removed Lines]",
          "600: #.FN_BODY IB-Type VAL_PTR = &ib_type",
          "601:   guint32 ib_type;",
          "602: %(DEFAULT_BODY)s",
          "603:   private_data_set_ib_type(actx->pinfo, ib_type);",
          "605: #.FN_BODY Segment-Type VAL_PTR = &segment_type",
          "606:   guint32 segment_type;",
          "607: %(DEFAULT_BODY)s",
          "608:   private_data_set_segment_type(actx->pinfo, segment_type);",
          "610: #.FN_BODY MIB-SB-SIB-InformationItem-SystemInfoUpdateRqst",
          "613:     private_data_set_segment_type(actx->pinfo, 0);",
          "615: %(DEFAULT_BODY)s",
          "",
          "[Added Lines]",
          "593: #.FN_PARS IB-Type VAL_PTR = &nbap_get_private_data(actx->pinfo)->ib_type",
          "595: #.FN_PARS Segment-Type VAL_PTR = &nbap_get_private_data(actx->pinfo)->segment_type",
          "597: #.FN_HDR MIB-SB-SIB-InformationItem-SystemInfoUpdateRqst",
          "599:     nbap_get_private_data(actx->pinfo)->segment_type = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "635:   guint32 byte_off = 0;",
          "636:   guint32 bit_off = 0x80;",
          "637:   guint32 sources_count;",
          "639: %(DEFAULT_BODY)s",
          "641:   if(!parameter_tvb)",
          "642:     return offset;",
          "644:   switch(segment_type) {",
          "646:       final_tvb = tvb_new_subset_length(parameter_tvb,0,tvb_captured_length (parameter_tvb)-1);",
          "",
          "[Removed Lines]",
          "643:   segment_type = private_data_get_segment_type(actx->pinfo);",
          "",
          "[Added Lines]",
          "622:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "628:   segment_type = nbap_private_data->segment_type;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "656:         return offset;",
          "657:       }",
          "659:       if (!list) {",
          "661:           list = wmem_list_new(wmem_packet_scope());",
          "663:         }",
          "664:         else {",
          "665:           return offset;",
          "",
          "[Removed Lines]",
          "658:       list = private_data_get_ib_segments(actx->pinfo);",
          "662:           private_data_set_ib_segments(actx->pinfo,list);",
          "",
          "[Added Lines]",
          "643:       list = nbap_private_data->ib_segments;",
          "647:           nbap_private_data->ib_segments = list;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "717:     add_new_data_source(actx->pinfo, final_tvb, \"Reassembled Information Block\");",
          "723:     ti = proto_tree_add_item(tree, hf_nbap_reassembled_information_block, final_tvb, 0, total_byte_size, ENC_NA);",
          "",
          "[Removed Lines]",
          "720:     private_data_set_ib_segments(actx->pinfo,NULL);",
          "",
          "[Added Lines]",
          "705:     nbap_private_data->ib_segments = NULL;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "727:   }",
          "729:   subtree = proto_item_add_subtree(ti, ett_nbap_ib_sg_data);",
          "731:     case 0:",
          "733:       dissect_rrc_MasterInformationBlock_PDU(final_tvb, actx->pinfo, subtree, NULL);",
          "",
          "[Removed Lines]",
          "730:   switch(private_data_get_ib_type(actx->pinfo)){",
          "",
          "[Added Lines]",
          "715:   switch(nbap_private_data->ib_type){",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "839:   guint8 *padded_nsap_bytes;",
          "840:   tvbuff_t *nsap_tvb;",
          "841:   gint tvb_len;",
          "843: %(DEFAULT_BODY)s",
          "844:   if (!parameter_tvb)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "827:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "851:     if (tvb_len==4){",
          "853:          proto_tree_add_item(subtree, hf_nbap_transportLayerAddress_ipv4, parameter_tvb, 0, tvb_len, ENC_BIG_ENDIAN);",
          "855:     }",
          "856:     if (tvb_len==16){",
          "",
          "[Removed Lines]",
          "854:          private_data_set_transportLayerAddress_ipv4(actx->pinfo, tvb_get_ipv4(parameter_tvb, 0));",
          "",
          "[Added Lines]",
          "840:          nbap_private_data->transportLayerAddress_ipv4 = tvb_get_ipv4(parameter_tvb, 0);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "874:         nsap_tree = proto_item_add_subtree(item, ett_nbap_TransportLayerAddress_nsap);",
          "875:         if(tvb_get_ntoh24(parameter_tvb,0) == 0x350001){",
          "878:         }",
          "879:         dissect_nsap(nsap_tvb, 0, 20, nsap_tree);",
          "880:     }",
          "",
          "[Removed Lines]",
          "877:             private_data_set_transportLayerAddress_ipv4(actx->pinfo, tvb_get_ipv4(parameter_tvb, 3));",
          "",
          "[Added Lines]",
          "863:             nbap_private_data->transportLayerAddress_ipv4 = tvb_get_ipv4(parameter_tvb, 3);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "886: %(DEFAULT_BODY)s",
          "888:     if(payload_crc_value == 0){",
          "890:     }else{",
          "892:     }",
          "899: #.FN_BODY DCH-Specific-FDD-Item/dCH-ID",
          "900:   guint32 dch_id;",
          "901:   gint num_dch_in_flow;",
          "902:   nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "904:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "905:                                                             0U, 255U, &dch_id, FALSE);",
          "909:   if(num_dch_in_flow>0){",
          "911:       nbap_dch_chnl_info[dch_id].next_dch = 0;",
          "912:       if(prev_dch_id != 0 && prev_dch_id != 0xffffffff && prev_dch_id != dch_id){",
          "913:           nbap_dch_chnl_info[prev_dch_id].next_dch = dch_id;",
          "914:       }",
          "915:   }",
          "922: #.FN_BODY CommonPhysicalChannelID VAL_PTR = &commonphysicalchannelid",
          "923: guint32 commonphysicalchannelid;",
          "924: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "926: %(DEFAULT_BODY)s",
          "928: if(commonphysicalchannelid<maxNrOfDCHs)",
          "929:   nbap_dch_chnl_info[commonphysicalchannelid].next_dch = 0;",
          "931: #.FN_BODY CommonTransportChannelID VAL_PTR = &commontransportchannelid",
          "932:   guint32 commontransportchannelid;",
          "933:   nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "935: %(DEFAULT_BODY)s",
          "937: if(commontransportchannelid<maxNrOfDCHs)",
          "938:   nbap_dch_chnl_info[commontransportchannelid].next_dch = 0;",
          "945: #.FN_BODY HSDSCH-MACdFlow-ID VAL_PTR = &hsdsch_macdflow_id",
          "946:   guint32 hsdsch_macdflow_id;",
          "947:   guint num_items;",
          "948:   gint* hsdsch_macdflow_ids;",
          "949: %(DEFAULT_BODY)s",
          "953: DISSECTOR_ASSERT(num_items < maxNrOfMACdFlows+1);",
          "954: DISSECTOR_ASSERT(num_items > 0);",
          "957: hsdsch_macdflow_ids[num_items-1] = hsdsch_macdflow_id;",
          "959: #.FN_BODY BindingID VAL_PTR = &parameter_tvb",
          "960:   tvbuff_t *parameter_tvb=NULL;",
          "962: %(DEFAULT_BODY)s",
          "",
          "[Removed Lines]",
          "889:         private_data_set_dch_crc_present(actx->pinfo, TRUE);",
          "891:         private_data_set_dch_crc_present(actx->pinfo, FALSE);",
          "894: #.FN_BODY DCH-ID VAL_PTR = &t_dch_id",
          "895:   guint32 t_dch_id;",
          "896: %(DEFAULT_BODY)s",
          "897:   private_data_set_t_dch_id(actx->pinfo, t_dch_id);",
          "903:   nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "907:   num_dch_in_flow = private_data_get_num_dch_in_flow(actx->pinfo);",
          "908:   private_data_set_dch_id(actx->pinfo, dch_id);",
          "910:       guint32 prev_dch_id = private_data_get_prev_dch_id(actx->pinfo);",
          "917: #.FN_BODY DCH-ModifySpecificItem-FDD/dCH-ID",
          "919: %(DEFAULT_BODY)s",
          "920:     private_data_set_dch_id(actx->pinfo, private_data_get_t_dch_id(actx->pinfo));",
          "925: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "927: private_data_set_common_physical_channel_id(actx->pinfo, commonphysicalchannelid);",
          "934:   nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "936: private_data_set_common_transport_channel_id(actx->pinfo, commontransportchannelid);",
          "940: #.FN_BODY E-DCH-MACdFlow-ID VAL_PTR = &e_dch_macdflow_id",
          "941:   guint32 e_dch_macdflow_id;",
          "942: %(DEFAULT_BODY)s",
          "943:   private_data_set_e_dch_macdflow_id(actx->pinfo, e_dch_macdflow_id);",
          "950:   private_data_set_hsdsch_macdflow_id(actx->pinfo, hsdsch_macdflow_id);",
          "952:   num_items = private_data_get_num_items(actx->pinfo);",
          "956: hsdsch_macdflow_ids = private_data_get_hsdsch_macdflow_ids(actx->pinfo);",
          "",
          "[Added Lines]",
          "875:         nbap_get_private_data(actx->pinfo)->dch_crc_present = TRUE;",
          "877:         nbap_get_private_data(actx->pinfo)->dch_crc_present = FALSE;",
          "880: #.FN_PARS DCH-ID VAL_PTR = &nbap_get_private_data(actx->pinfo)->t_dch_id",
          "886:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "887:   nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "891:   num_dch_in_flow = nbap_private_data->num_dch_in_flow;",
          "892:   nbap_private_data->dch_id = dch_id;",
          "894:       guint32 prev_dch_id = nbap_private_data->prev_dch_id;",
          "901: #.FN_FTR DCH-ModifySpecificItem-FDD/dCH-ID",
          "902:     nbap_get_private_data(actx->pinfo)->dch_id = nbap_get_private_data(actx->pinfo)->t_dch_id;",
          "907: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "908: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "910: nbap_private_data->common_physical_channel_id = commonphysicalchannelid;",
          "917:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "918:   nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "920: nbap_private_data->common_transport_channel_id = commontransportchannelid;",
          "924: #.FN_PARS E-DCH-MACdFlow-ID VAL_PTR = &nbap_get_private_data(actx->pinfo)->e_dch_macdflow_id",
          "930:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "932:   nbap_private_data->hsdsch_macdflow_id = hsdsch_macdflow_id;",
          "934:   num_items = nbap_private_data->num_items;",
          "938: hsdsch_macdflow_ids = nbap_private_data->hsdsch_macdflow_ids;",
          "943:   guint16 binding_id_port;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "968: # -- If the Binding ID includes a UDP port, the UDP port is included in octet 1 and 2.The first octet of",
          "969: # -- the UDP port field is included in the first octet of the Binding ID.",
          "970:   if(tvb_reported_length(parameter_tvb)>=2){",
          "973:   }",
          "975: #.FN_BODY UL-ScramblingCodeNumber VAL_PTR = &ul_scrambling_code",
          "976:   guint32 ul_scrambling_code;",
          "977:   guint32 com_context_id;",
          "978: %(DEFAULT_BODY)s",
          "981:   if(ul_scrambling_code != 0 && com_context_id != 0) {",
          "982:     wmem_tree_insert32(nbap_scrambling_code_crncc_map,ul_scrambling_code,GUINT_TO_POINTER(com_context_id));",
          "983:   }",
          "",
          "[Removed Lines]",
          "971:     private_data_set_binding_id_port(actx->pinfo, tvb_get_ntohs(parameter_tvb,0));",
          "972:     proto_item_append_text(actx->created_item, \" (%%u)\",private_data_get_binding_id_port(actx->pinfo));",
          "979:   private_data_set_ul_scrambling_code(actx->pinfo, ul_scrambling_code);",
          "980:   com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "954:     binding_id_port = tvb_get_ntohs(parameter_tvb,0);",
          "955:     nbap_get_private_data(actx->pinfo)->binding_id_port = binding_id_port;",
          "956:     proto_item_append_text(actx->created_item, \" (%%u)\",binding_id_port);",
          "963:   nbap_get_private_data(actx->pinfo)->ul_scrambling_code = ul_scrambling_code;",
          "964:   com_context_id = nbap_get_private_data(actx->pinfo)->com_context_id;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "992: guint16 bindingID;",
          "993: guint32 common_physical_channel_id;",
          "994: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1001: %(DEFAULT_BODY)s",
          "1006:   if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "1007:     return offset;",
          "1008:   }",
          "",
          "[Removed Lines]",
          "995: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "997: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "998: private_data_set_binding_id_port(actx->pinfo, 0);",
          "999: private_data_set_transport_format_set_type(actx->pinfo, NBAP_CPCH);",
          "1004:   transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "1005:   bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "979: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "980: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "982: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "983: nbap_private_data->binding_id_port = 0;",
          "984: nbap_private_data->transport_format_set_type = NBAP_CPCH;",
          "989:   transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "990:   bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1042:     umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[common_physical_channel_id].num_ul_chans;",
          "1043:     for (j = 0; j < num_tf; j++) {",
          "1044:       umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_tf_size[j] = nbap_dch_chnl_info[common_physical_channel_id].ul_chan_tf_size[j];",
          "",
          "[Removed Lines]",
          "1036:     umts_fp_conversation_info->com_context_id = private_data_get_crnc_context_present(actx->pinfo) ?  private_data_get_com_context_id(actx->pinfo) : 1;",
          "1039:     umts_fp_conversation_info->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "1041:     common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "1021:     umts_fp_conversation_info->com_context_id = nbap_private_data->crnc_context_present ? nbap_private_data->com_context_id : 1;",
          "1024:     umts_fp_conversation_info->dch_crc_present = nbap_private_data->dch_crc_present;",
          "1026:     common_physical_channel_id = nbap_private_data->common_physical_channel_id;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1057:     set_umts_fp_conv_data(conversation, umts_fp_conversation_info);",
          "1061:   }",
          "1063: #.FN_BODY PICH-Mode VAL_PTR = &PICH_Mode",
          "",
          "[Removed Lines]",
          "1060:     add_setup_conv(private_data_get_transaction_id(actx->pinfo),private_data_get_dd_mode(actx->pinfo),private_data_get_common_transport_channel_id(actx->pinfo), actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "",
          "[Added Lines]",
          "1045:     add_setup_conv(nbap_private_data->transaction_id,nbap_private_data->dd_mode,nbap_private_data->common_transport_channel_id, actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1067:     switch(PICH_Mode){",
          "1070:             break;",
          "1073:             break;",
          "1076:             break;",
          "1079:             break;",
          "1080:     }",
          "",
          "[Removed Lines]",
          "1069:             private_data_set_paging_indications(actx->pinfo, 18);",
          "1072:             private_data_set_paging_indications(actx->pinfo, 36);",
          "1075:             private_data_set_paging_indications(actx->pinfo, 72);",
          "1078:             private_data_set_paging_indications(actx->pinfo, 144);",
          "",
          "[Added Lines]",
          "1054:             nbap_get_private_data(actx->pinfo)->paging_indications = 18;",
          "1057:             nbap_get_private_data(actx->pinfo)->paging_indications = 36;",
          "1060:             nbap_get_private_data(actx->pinfo)->paging_indications = 72;",
          "1063:             nbap_get_private_data(actx->pinfo)->paging_indications = 144;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1093: guint16 bindingID;",
          "1094: guint32 common_transport_channel_id;",
          "1095: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1104: %(DEFAULT_BODY)s",
          "1108:   if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "1109:     return offset;",
          "1110:   }",
          "",
          "[Removed Lines]",
          "1096: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "1098: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "1099: private_data_set_binding_id_port(actx->pinfo, 0);",
          "1102: private_data_set_num_items(actx->pinfo, 1);",
          "1106:   transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "1107:   bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "1081: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1082: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "1084: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "1085: nbap_private_data->binding_id_port = 0;",
          "1088: nbap_private_data->num_items = 1;",
          "1092:   transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "1093:   bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1130:     umts_fp_conversation_info->rlc_mode           = FP_RLC_MODE_UNKNOWN;",
          "1132:     fp_pch_channel_info = wmem_new0(wmem_file_scope(), fp_pch_channel_info_t);",
          "1134:     umts_fp_conversation_info->channel_specific_info = (void*)fp_pch_channel_info;",
          "1140:     umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[common_transport_channel_id].num_ul_chans;",
          "1142:     nbap_debug(\"Frame %%u PCH-ParametersItem-CTCH-SetupRqstFDD Start: num_tf %%u\", actx->pinfo->num, num_tf);",
          "",
          "[Removed Lines]",
          "1133:     fp_pch_channel_info->paging_indications = private_data_get_paging_indications(actx->pinfo);",
          "1137:     umts_fp_conversation_info->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "1139:     common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "1119:     fp_pch_channel_info->paging_indications = nbap_private_data->paging_indications;",
          "1123:     umts_fp_conversation_info->dch_crc_present = nbap_private_data->dch_crc_present;",
          "1125:     common_transport_channel_id = nbap_private_data->common_transport_channel_id;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1187:     set_umts_fp_conv_data(conversation, umts_fp_conversation_info);",
          "1192:     nbap_debug(\"Frame %%u PCH-ParametersItem-CTCH-SetupRqstFDD End\", actx->pinfo->num);",
          "1193:   }",
          "",
          "[Removed Lines]",
          "1190:     add_setup_conv(private_data_get_transaction_id(actx->pinfo), private_data_get_dd_mode(actx->pinfo), common_transport_channel_id, actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "",
          "[Added Lines]",
          "1176:     add_setup_conv(nbap_private_data->transaction_id, nbap_private_data->dd_mode, common_transport_channel_id, actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1203: guint16 bindingID;",
          "1204: guint32 common_physical_channel_id;",
          "1205: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1214: %(DEFAULT_BODY)s",
          "1218:   if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "1219:     return offset;",
          "1220:   }",
          "",
          "[Removed Lines]",
          "1206: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "1208: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "1209: private_data_set_binding_id_port(actx->pinfo, 0);",
          "1212: private_data_set_transport_format_set_type(actx->pinfo, NBAP_CPCH);",
          "1216:   transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "1217:   bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "1192: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1193: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "1195: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "1196: nbap_private_data->binding_id_port = 0;",
          "1199: nbap_private_data->transport_format_set_type = NBAP_CPCH;",
          "1203:   transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "1204:   bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1239:     umts_fp_conversation_info->crnc_port         = bindingID;",
          "1240:     umts_fp_conversation_info->rlc_mode          = FP_RLC_MODE_UNKNOWN;",
          "1245:     fp_fach_channel_info = wmem_new0(wmem_file_scope(), fp_fach_channel_info_t);",
          "",
          "[Removed Lines]",
          "1242:     umts_fp_conversation_info->com_context_id = private_data_get_crnc_context_present(actx->pinfo) ? private_data_get_com_context_id(actx->pinfo) : 1;",
          "",
          "[Added Lines]",
          "1229:     umts_fp_conversation_info->com_context_id = nbap_private_data->crnc_context_present ? nbap_private_data->com_context_id : 1;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1247:     umts_fp_conversation_info->channel_specific_info = (void*)fp_fach_channel_info;",
          "1253:     umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[common_physical_channel_id].num_ul_chans;",
          "1254:     for (j = 0; j < num_tf; j++) {",
          "1255:       umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_tf_size[j] = nbap_dch_chnl_info[common_physical_channel_id].ul_chan_tf_size[j];",
          "",
          "[Removed Lines]",
          "1250:     umts_fp_conversation_info->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "1252:     common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "1237:     umts_fp_conversation_info->dch_crc_present = nbap_private_data->dch_crc_present;",
          "1239:     common_physical_channel_id = nbap_private_data->common_physical_channel_id;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1289:     set_umts_fp_conv_data(conversation, umts_fp_conversation_info);",
          "1293:   }",
          "1295: #.FN_HDR DCH-Specific-FDD-InformationList",
          "1299: #.FN_HDR DCH-Specific-FDD-Item",
          "1302: #.FN_FTR DCH-Specific-FDD-Item",
          "1305: #.FN_HDR DCH-Specific-FDD-Item/ul-TransportFormatSet",
          "1307:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1310:     if (dch_id != 0xffffffff) {",
          "1311:         nbap_dch_chnl_info[dch_id].num_ul_chans = 0;",
          "1312:     }",
          "1314: #.FN_HDR DCH-Specific-FDD-Item/dl-TransportFormatSet",
          "1316:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1319:     if (dch_id != 0xffffffff) {",
          "1320:         nbap_dch_chnl_info[dch_id].num_dl_chans = 0;",
          "1321:     }",
          "1323: #.FN_HDR DCH-ModifySpecificItem-FDD/ul-TransportFormatSet",
          "1325:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1328:     if (dch_id != 0xffffffff) {",
          "1329:         nbap_dch_chnl_info[dch_id].num_ul_chans = 0;",
          "1330:     }",
          "1332: #.FN_HDR DCH-ModifySpecificItem-FDD/dl-TransportFormatSet",
          "1334:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1337:     if (dch_id != 0xffffffff) {",
          "1338:         nbap_dch_chnl_info[dch_id].num_dl_chans = 0;",
          "1339:     }",
          "1341: #.FN_HDR PCH-ParametersItem-CTCH-SetupRqstFDD/transportFormatSet",
          "1342:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1349: #.FN_HDR TransportFormatSet-DynamicPartList",
          "1352: #.FN_HDR TransportFormatSet-DynamicPartList/_item",
          "1356: #.FN_BODY TransportFormatSet-NrOfTransportBlocks VAL_PTR = &NrOfTransportBlocks",
          "",
          "[Removed Lines]",
          "1292:     add_setup_conv(private_data_get_transaction_id(actx->pinfo),private_data_get_dd_mode(actx->pinfo),private_data_get_common_transport_channel_id(actx->pinfo), actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "1296:     private_data_set_num_dch_in_flow(actx->pinfo, 0);",
          "1297:     private_data_set_prev_dch_id(actx->pinfo, 0);",
          "1300:     private_data_increment_num_dch_in_flow(actx->pinfo);",
          "1303:     private_data_set_prev_dch_id(actx->pinfo,private_data_get_dch_id(actx->pinfo));",
          "1306:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
          "1308:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "1309:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_UL);",
          "1315:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
          "1317:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "1318:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_DL);",
          "1324:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
          "1326:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "1327:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_UL);",
          "1333:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
          "1335:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "1336:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_DL);",
          "1343:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "1344:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_PCH);",
          "1345:     nbap_dch_chnl_info[private_data_get_common_transport_channel_id(actx->pinfo)].num_dl_chans = 0;",
          "1346:     nbap_dch_chnl_info[private_data_get_common_transport_channel_id(actx->pinfo)].num_ul_chans = 0;",
          "1350:     private_data_set_num_items(actx->pinfo, 0);",
          "1353:     private_data_increment_num_items(actx->pinfo);",
          "",
          "[Added Lines]",
          "1279:     add_setup_conv(nbap_private_data->transaction_id,nbap_private_data->dd_mode,nbap_private_data->common_transport_channel_id, actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "1283:     nbap_get_private_data(actx->pinfo)->num_dch_in_flow = 0;",
          "1284:     nbap_get_private_data(actx->pinfo)->prev_dch_id = 0;",
          "1287:     nbap_get_private_data(actx->pinfo)->num_dch_in_flow++;",
          "1290:     nbap_get_private_data(actx->pinfo)->prev_dch_id = nbap_get_private_data(actx->pinfo)->dch_id;",
          "1293:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1294:     guint32 dch_id = nbap_private_data->dch_id;",
          "1296:     nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "1297:     nbap_private_data->transport_format_set_type = NBAP_DCH_UL;",
          "1303:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1304:     guint32 dch_id = nbap_private_data->dch_id;",
          "1306:     nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "1307:     nbap_private_data->transport_format_set_type = NBAP_DCH_DL;",
          "1313:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1314:     guint32 dch_id = nbap_private_data->dch_id;",
          "1316:     nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "1317:     nbap_private_data->transport_format_set_type = NBAP_DCH_UL;",
          "1323:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1324:     guint32 dch_id = nbap_private_data->dch_id;",
          "1326:     nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "1327:     nbap_private_data->transport_format_set_type = NBAP_DCH_DL;",
          "1333:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1335:     nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "1336:     nbap_private_data->transport_format_set_type = NBAP_PCH;",
          "1337:     nbap_dch_chnl_info[nbap_private_data->common_transport_channel_id].num_dl_chans = 0;",
          "1338:     nbap_dch_chnl_info[nbap_private_data->common_transport_channel_id].num_ul_chans = 0;",
          "1342:     nbap_get_private_data(actx->pinfo)->num_items = 0;",
          "1345:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1360: guint32 common_physical_channel_id;",
          "1361: guint32 common_transport_channel_id;",
          "1362: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1365: %(DEFAULT_BODY)s",
          "1370:         if (num_items > 0 && dch_id != 0xffffffff) {",
          "1374:                 case NBAP_DCH_UL:",
          "1375:                     nbap_dch_chnl_info[dch_id].num_ul_chans++;",
          "1376:                     nbap_dch_chnl_info[dch_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
          "",
          "[Removed Lines]",
          "1363: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "1367:     if(private_data_get_num_items(actx->pinfo)>0){",
          "1368:         num_items = private_data_get_num_items(actx->pinfo);",
          "1369:         dch_id = private_data_get_dch_id(actx->pinfo);",
          "1371:             common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
          "1372:             common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
          "1373:             switch(private_data_get_transport_format_set_type(actx->pinfo)){",
          "",
          "[Added Lines]",
          "1355: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1356: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "1360:     if(nbap_private_data->num_items>0){",
          "1361:         num_items = nbap_private_data->num_items;",
          "1362:         dch_id = nbap_private_data->dch_id;",
          "1364:             common_physical_channel_id = nbap_private_data->common_physical_channel_id;",
          "1365:             common_transport_channel_id = nbap_private_data->common_transport_channel_id;",
          "1366:             switch(nbap_private_data->transport_format_set_type){",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1404: guint32 common_physical_channel_id;",
          "1405: guint32 common_transport_channel_id;",
          "1406: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1409: %(DEFAULT_BODY)s",
          "1414:         if (num_items > 0 && dch_id != 0xffffffff) {",
          "1418:                 case NBAP_DCH_UL:",
          "1419:                     nbap_dch_chnl_info[dch_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
          "1420:                     break;",
          "",
          "[Removed Lines]",
          "1407: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "1411:     if(private_data_get_num_items(actx->pinfo)>0){",
          "1412:         num_items = private_data_get_num_items(actx->pinfo);",
          "1413:         dch_id = private_data_get_dch_id(actx->pinfo);",
          "1415:             common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
          "1416:             common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
          "1417:             switch(private_data_get_transport_format_set_type(actx->pinfo)){",
          "",
          "[Added Lines]",
          "1400: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1401: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "1405:     if(nbap_private_data->num_items>0){",
          "1406:         num_items = nbap_private_data->num_items;",
          "1407:         dch_id = nbap_private_data->dch_id;",
          "1409:             common_physical_channel_id = nbap_private_data->common_physical_channel_id;",
          "1410:             common_transport_channel_id = nbap_private_data->common_transport_channel_id;",
          "1411:             switch(nbap_private_data->transport_format_set_type){",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1435:         }",
          "1436:     }",
          "1450: #.FN_BODY RL-Specific-DCH-Info-Item",
          "1451: address     dst_addr, null_addr;",
          "",
          "[Removed Lines]",
          "1438: #Handle when DCHs get modified",
          "1439: #.FN_BODY FDD-DCHs-to-ModifyItem",
          "1441: %(DEFAULT_BODY)s",
          "1445: #.FN_BODY RL-Specific-DCH-Info-Item/dCH-id",
          "1447: %(DEFAULT_BODY)s",
          "1448:     private_data_set_dch_id(actx->pinfo, private_data_get_t_dch_id(actx->pinfo));",
          "",
          "[Added Lines]",
          "1432: #.FN_FTR RL-Specific-DCH-Info-Item/dCH-id",
          "1433:     nbap_get_private_data(actx->pinfo)->dch_id = nbap_get_private_data(actx->pinfo)->t_dch_id;",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1456: guint16 bindingID;",
          "1457: guint32 dch_id;",
          "1458: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "1465: %(DEFAULT_BODY)s",
          "1470:         if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "1471:             return offset;",
          "1472:         }",
          "",
          "[Removed Lines]",
          "1459: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "1461: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "1462: private_data_set_binding_id_port(actx->pinfo, 0);",
          "1463: private_data_set_dch_id(actx->pinfo, 0xFFFFFFFF);",
          "1468:         transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "1469:         bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "1444: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1445: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "1447: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "1448: nbap_private_data->binding_id_port = 0;",
          "1449: nbap_private_data->dch_id = 0xFFFFFFFF;",
          "1454:         transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "1455:         bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1481:         set_address(&dst_addr, AT_IPv4, 4, &transportLayerAddress_ipv4);",
          "1483:         conversation = find_conversation(actx->pinfo->num, &dst_addr,",
          "1485:             0, NO_ADDR_B|NO_PORT_B);",
          "1487:         if (conversation == NULL) {",
          "1489:             conversation = conversation_new(actx->pinfo->num, &dst_addr,",
          "1491:                 0, NO_ADDR2|NO_PORT2);",
          "",
          "[Removed Lines]",
          "1484:             &null_addr, ENDPOINT_UDP, private_data_get_binding_id_port(actx->pinfo),",
          "1490:                 &null_addr, ENDPOINT_UDP, private_data_get_binding_id_port(actx->pinfo),",
          "",
          "[Added Lines]",
          "1470:             &null_addr, ENDPOINT_UDP, nbap_private_data->binding_id_port,",
          "1476:                 &null_addr, ENDPOINT_UDP, nbap_private_data->binding_id_port,",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1503:                 umts_fp_conversation_info->ul_frame_number   = actx->pinfo->num;",
          "1504:                 copy_address_wmem(wmem_file_scope(), &(umts_fp_conversation_info->crnc_address), &dst_addr);",
          "1505:                 umts_fp_conversation_info->crnc_port         = bindingID;",
          "1507:                 umts_fp_conversation_info->rlc_mode          = FP_RLC_MODE_UNKNOWN;",
          "1518:                 if (dch_id != 0xffffffff) {",
          "1519:                     umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[dch_id].num_ul_chans;",
          "1520:                     for (j = 0; j < num_tf; j++) {",
          "",
          "[Removed Lines]",
          "1506:                 umts_fp_conversation_info->scrambling_code   = private_data_get_ul_scrambling_code(actx->pinfo);",
          "1510:                 umts_fp_conversation_info->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "1513:                 umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "1517:                 dch_id = private_data_get_dch_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "1492:                 umts_fp_conversation_info->scrambling_code   = nbap_private_data->ul_scrambling_code;",
          "1496:                 umts_fp_conversation_info->dch_crc_present = nbap_private_data->dch_crc_present;",
          "1499:                 umts_fp_conversation_info->com_context_id = nbap_private_data->com_context_id;",
          "1503:                 dch_id = nbap_private_data->dch_id;",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1579: guint16 bindingID;",
          "1580: guint32 e_dch_macdflow_id;",
          "1581: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "1588: %(DEFAULT_BODY)s",
          "1592:         if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "1593:             return offset;",
          "1594:         }",
          "",
          "[Removed Lines]",
          "1582: nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "1584: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "1585: private_data_set_binding_id_port(actx->pinfo, 0);",
          "1590:         transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "1591:         bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "1568: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1569: nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "1571: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "1572: nbap_private_data->binding_id_port = 0;",
          "1577:         transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "1578:         bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1634:                 fp_edch_channel_info = wmem_new0(wmem_file_scope(), fp_edch_channel_info_t);",
          "1635:                 umts_fp_conversation_info->channel_specific_info = (void*)fp_edch_channel_info;",
          "1639:                 }else{",
          "1640:                     expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "1641:                 }",
          "1647:                     nbap_edch_port_info_t * nbap_edch_port_info;",
          "1649:                     nbap_edch_port_info = wmem_new0(wmem_file_scope(), nbap_edch_port_info_t);",
          "",
          "[Removed Lines]",
          "1637:                 if(private_data_get_crnc_context_present(actx->pinfo)){",
          "1638:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "1645:                 e_dch_macdflow_id = private_data_get_e_dch_macdflow_id(actx->pinfo);",
          "1646:                 if( (old_info = (nbap_edch_port_info_t *)wmem_tree_lookup32(edch_flow_port_map,private_data_get_com_context_id(actx->pinfo))) == NULL ){",
          "",
          "[Added Lines]",
          "1624:                 if(nbap_private_data->crnc_context_present){",
          "1625:                     umts_fp_conversation_info->com_context_id = nbap_private_data->com_context_id;",
          "1632:                 e_dch_macdflow_id = nbap_private_data->e_dch_macdflow_id;",
          "1633:                 if( (old_info = (nbap_edch_port_info_t *)wmem_tree_lookup32(edch_flow_port_map,nbap_private_data->com_context_id)) == NULL ){",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1652:                     nbap_edch_port_info->crnc_port[e_dch_macdflow_id] = bindingID;",
          "1656:                     nbap_debug(\"Frame %%u RL-Specific-E-DCH-Information-Item Start\",",
          "1657:                         actx->pinfo->num);",
          "",
          "[Removed Lines]",
          "1654:                     nbap_edch_port_info->crnc_address = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "",
          "[Added Lines]",
          "1641:                     nbap_edch_port_info->crnc_address = nbap_private_data->transportLayerAddress_ipv4;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1690: guint32 no_ddi_entries, i;",
          "1691: guint32 e_dch_macdflow_id;",
          "1692: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "1695: %(DEFAULT_BODY)s",
          "1696:     if (actx->pinfo->fd->flags.visited)",
          "",
          "[Removed Lines]",
          "1693: nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "",
          "[Added Lines]",
          "1680: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1681: nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1699:     }",
          "1703:     clear_address(&null_addr);",
          "1704:     p_conv = find_conversation(actx->pinfo->num, &nbap_edch_channel_info[e_dch_macdflow_id].crnc_address, &null_addr,",
          "1705:                                ENDPOINT_UDP, nbap_edch_channel_info[e_dch_macdflow_id].crnc_port, 0, NO_ADDR_B);",
          "",
          "[Removed Lines]",
          "1702:     e_dch_macdflow_id = private_data_get_e_dch_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "1690:     e_dch_macdflow_id = nbap_private_data->e_dch_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1723:         fp_edch_channel_info->edch_lchId[i]          =  nbap_edch_channel_info[e_dch_macdflow_id].lchId[i];",
          "1724:     }",
          "1731:     }else{",
          "",
          "[Removed Lines]",
          "1726:     p_conv_data->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "1729:     if( 0 == private_data_get_e_dch_ddi_value(actx->pinfo) ){",
          "",
          "[Added Lines]",
          "1714:     p_conv_data->dch_crc_present = nbap_private_data->dch_crc_present;",
          "1717:     if( 0 == nbap_private_data->e_dch_ddi_value ){",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1734:     }",
          "1736:     p_conv_data->num_dch_in_flow = 1;",
          "1739: #Handle Modified E-DCH Flows",
          "1740: #.FN_BODY E-DCH-FDD-Information-to-Modify",
          "",
          "[Removed Lines]",
          "1737:     p_conv_data->dch_ids_in_flow_list[0] = private_data_get_e_dch_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "1725:     p_conv_data->dch_ids_in_flow_list[0] = nbap_private_data->e_dch_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1748: guint16 bindingID;",
          "1749: guint32 e_dch_macdflow_id;",
          "1750: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "1756:  %(DEFAULT_BODY)s",
          "1760:         if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "1761:             return offset;",
          "1762:         }",
          "",
          "[Removed Lines]",
          "1751: nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "1753: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "1754: private_data_set_binding_id_port(actx->pinfo, 0);",
          "1758:         transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "1759:         bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "1739: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1740: nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "1742: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "1743: nbap_private_data->binding_id_port = 0;",
          "1747:         transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "1748:         bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1812:                 fp_edch_channel_info = wmem_new0(wmem_file_scope(), fp_edch_channel_info_t);",
          "1813:                 umts_fp_conversation_info->channel_specific_info = (void*)fp_edch_channel_info;",
          "1817:                 }else{",
          "1818:                     expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "1819:                 }",
          "1823:                 copy_address_wmem(actx->pinfo->pool,&(nbap_edch_channel_info[e_dch_macdflow_id].crnc_address),&dst_addr);",
          "1824:                 nbap_edch_channel_info[e_dch_macdflow_id].crnc_port = bindingID;",
          "",
          "[Removed Lines]",
          "1815:                 if(private_data_get_crnc_context_present(actx->pinfo)){",
          "1816:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "1822:                 e_dch_macdflow_id = private_data_get_e_dch_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "1804:                 if(nbap_private_data->crnc_context_present){",
          "1805:                     umts_fp_conversation_info->com_context_id = nbap_private_data->com_context_id;",
          "1811:                 e_dch_macdflow_id = nbap_private_data->e_dch_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1841: conversation_t   *p_conv;",
          "1842: guint32 e_dch_macdflow_id;",
          "1843: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "1847:  %(DEFAULT_BODY)s",
          "1849:     if (actx->pinfo->fd->flags.visited)",
          "",
          "[Removed Lines]",
          "1844: nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "1846: private_data_set_num_items(actx->pinfo, 1);",
          "",
          "[Added Lines]",
          "1833: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1834: nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "1836: nbap_private_data->num_items = 1;",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1861:     }else{",
          "1862:         expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "1863:     }",
          "1867:         expert_add_info(actx->pinfo, NULL, &ei_nbap_no_find_port_info);",
          "1868:         return offset;",
          "1869:     }",
          "",
          "[Removed Lines]",
          "1859:     if(private_data_get_crnc_context_present(actx->pinfo)){",
          "1866:     if(( old_info = (nbap_edch_port_info_t *)wmem_tree_lookup32(edch_flow_port_map,private_data_get_com_context_id(actx->pinfo))) == NULL ){",
          "1870:     nbap_debug(\"    Found com_context_id %%u\",private_data_get_com_context_id(actx->pinfo));",
          "1873:     e_dch_macdflow_id = private_data_get_e_dch_macdflow_id(actx->pinfo);",
          "1874:     private_data_set_binding_id_port(actx->pinfo, old_info->crnc_port[e_dch_macdflow_id]);",
          "1876:     nbap_debug(\" Port %%u loaded from old_info->crnc_port[e_dch_macdflow_id %%u]\",private_data_get_binding_id_port(actx->pinfo), e_dch_macdflow_id);",
          "1879:     private_data_set_transportLayerAddress_ipv4(actx->pinfo, old_info->crnc_address);",
          "",
          "[Added Lines]",
          "1849:     if(nbap_private_data->crnc_context_present){",
          "1856:     if(( old_info = (nbap_edch_port_info_t *)wmem_tree_lookup32(edch_flow_port_map,nbap_private_data->com_context_id)) == NULL ){",
          "1860:     nbap_debug(\"    Found com_context_id %%u\",nbap_private_data->com_context_id);",
          "1863:     e_dch_macdflow_id = nbap_private_data->e_dch_macdflow_id;",
          "1864:     nbap_private_data->binding_id_port = old_info->crnc_port[e_dch_macdflow_id];",
          "1866:     nbap_debug(\" Port %%u loaded from old_info->crnc_port[e_dch_macdflow_id %%u]\",nbap_private_data->binding_id_port, e_dch_macdflow_id);",
          "1869:     nbap_private_data->transportLayerAddress_ipv4 = old_info->crnc_address;",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1903:         fp_edch_channel_info->edch_lchId[i]          =  nbap_edch_channel_info[e_dch_macdflow_id].lchId[i];",
          "1904:     }",
          "1911:     }else{",
          "",
          "[Removed Lines]",
          "1906:     p_conv_data->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "1909:     if( 0 == private_data_get_e_dch_ddi_value(actx->pinfo) ){",
          "",
          "[Added Lines]",
          "1896:     p_conv_data->dch_crc_present = nbap_private_data->dch_crc_present;",
          "1899:     if( 0 == nbap_private_data->e_dch_ddi_value ){",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1927: #.FN_BODY E-DCH-LogicalChannelInformation",
          "1929:     nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "1932: %(DEFAULT_BODY)s",
          "1936: #.FN_HDR E-DCH-LogicalChannelInformationItem",
          "1939: #.FN_BODY E-DCH-DDI-Value VAL_PTR = &e_dch_ddi_value",
          "1940:   guint32 e_dch_ddi_value;",
          "1941:   guint num_items;",
          "1942:   nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "1944: %(DEFAULT_BODY)s",
          "1947:   if (actx->pinfo->fd->flags.visited)",
          "1948:   {",
          "1949:       return offset;",
          "1950:   }",
          "1952:   if(num_items>0)",
          "1955: #.FN_BODY MACdPDU-Size VAL_PTR = &mac_d_pdu_size",
          "1956: guint32 mac_d_pdu_size;",
          "1957: guint num_items;",
          "1958: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "1960: %(DEFAULT_BODY)s",
          "1963:     if (actx->pinfo->fd->flags.visited)",
          "1964:     {",
          "1965:         return offset;",
          "1966:     }",
          "1968:     if(num_items>0)",
          "1971: #.FN_BODY LogicalChannelID VAL_PTR = &logical_channel_id",
          "1972:   guint32 logical_channel_id;",
          "1973:   guint num_items;",
          "1974:   nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "1977: %(DEFAULT_BODY)s",
          "1981:     if(num_items>0)",
          "1984: #.FN_BODY RLC-Mode VAL_PTR = &rlc_mode",
          "1985:     guint32 rlc_mode;",
          "1986:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "1988: %(DEFAULT_BODY)s",
          "1989:     switch(rlc_mode){",
          "1990:         case 0:",
          "1993:             break;",
          "1994:         case 1:",
          "1997:             break;",
          "1998:         default:",
          "1999:             break;",
          "",
          "[Removed Lines]",
          "1922: #.FN_BODY E-DCH-LogicalChannelToModifyItem",
          "1924: %(DEFAULT_BODY)s",
          "1925: private_data_increment_num_items(actx->pinfo);",
          "1928:     private_data_set_num_items(actx->pinfo, 0);",
          "1930:     nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "1934: nbap_edch_channel_info[private_data_get_e_dch_macdflow_id(actx->pinfo)].no_ddi_entries = private_data_get_num_items(actx->pinfo);",
          "1937:     private_data_increment_num_items(actx->pinfo);",
          "1943:   nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "1946:   private_data_set_e_dch_ddi_value(actx->pinfo, e_dch_ddi_value);",
          "1951:   num_items = private_data_get_num_items(actx->pinfo);",
          "1953:       nbap_edch_channel_info[private_data_get_e_dch_macdflow_id(actx->pinfo)].edch_ddi[num_items-1] = private_data_get_e_dch_ddi_value(actx->pinfo);",
          "1959: nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "1962:     private_data_set_mac_d_pdu_size(actx->pinfo, mac_d_pdu_size);",
          "1967:     num_items = private_data_get_num_items(actx->pinfo);",
          "1969:         nbap_edch_channel_info[private_data_get_e_dch_macdflow_id(actx->pinfo)].edch_macd_pdu_size[num_items-1] = private_data_get_mac_d_pdu_size(actx->pinfo);",
          "1975:   nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "1979:     private_data_set_logical_channel_id(actx->pinfo, logical_channel_id);",
          "1980:     num_items = private_data_get_num_items(actx->pinfo);",
          "1982:         nbap_edch_channel_info[private_data_get_e_dch_macdflow_id(actx->pinfo)].lchId[num_items-1] = private_data_get_logical_channel_id(actx->pinfo);",
          "1987:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "1992:             nbap_hsdsch_channel_info[private_data_get_hsdsch_macdflow_id(actx->pinfo)].rlc_mode = FP_RLC_AM;",
          "1996:             nbap_hsdsch_channel_info[private_data_get_hsdsch_macdflow_id(actx->pinfo)].rlc_mode = FP_RLC_UM;",
          "",
          "[Added Lines]",
          "1912: #.FN_FTR E-DCH-LogicalChannelToModifyItem",
          "1913:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "1916:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1917:     nbap_private_data->num_items = 0;",
          "1919:     nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "1923: nbap_edch_channel_info[nbap_private_data->e_dch_macdflow_id].no_ddi_entries = nbap_private_data->num_items;",
          "1926:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "1932:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1933:   nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "1936:   nbap_private_data->e_dch_ddi_value = e_dch_ddi_value;",
          "1941:   num_items = nbap_private_data->num_items;",
          "1943:       nbap_edch_channel_info[nbap_private_data->e_dch_macdflow_id].edch_ddi[num_items-1] = nbap_private_data->e_dch_ddi_value;",
          "1949: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1950: nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "1953:     nbap_private_data->mac_d_pdu_size = mac_d_pdu_size;",
          "1958:     num_items = nbap_private_data->num_items;",
          "1960:         nbap_edch_channel_info[nbap_private_data->e_dch_macdflow_id].edch_macd_pdu_size[num_items-1] = nbap_private_data->mac_d_pdu_size;",
          "1966:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1967:   nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "1971:     nbap_private_data->logical_channel_id = logical_channel_id;",
          "1972:     num_items = nbap_private_data->num_items;",
          "1974:         nbap_edch_channel_info[nbap_private_data->e_dch_macdflow_id].lchId[num_items-1] = nbap_private_data->logical_channel_id;",
          "1979:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1980:     nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "1985:             nbap_hsdsch_channel_info[nbap_private_data->hsdsch_macdflow_id].rlc_mode = FP_RLC_AM;",
          "1989:             nbap_hsdsch_channel_info[nbap_private_data->hsdsch_macdflow_id].rlc_mode = FP_RLC_UM;",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2002: #.FN_BODY UE-Capability-Information/hSDSCH-Physical-Layer-Category  VAL_PTR = &hsdsch_physical_layer_category",
          "2003:     guint32 hsdsch_physical_layer_category;",
          "2004:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "2007: %(DEFAULT_BODY)s",
          "2011: #.FN_BODY HSDSCH-MACdFlows-Information",
          "2012:     int protocol_ie_id;",
          "2013:     guint32 i;",
          "2016:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "",
          "[Removed Lines]",
          "2005:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "2009:     nbap_hsdsch_channel_info[private_data_get_hsdsch_macdflow_id(actx->pinfo)].hsdsch_physical_layer_category = hsdsch_physical_layer_category;",
          "2014:     private_data_set_num_items(actx->pinfo,0);",
          "2015:     protocol_ie_id = private_data_get_protocol_ie_id(actx->pinfo);",
          "2017:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "",
          "[Added Lines]",
          "1998:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "1999:     nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "2003:     nbap_hsdsch_channel_info[nbap_private_data->hsdsch_macdflow_id].hsdsch_physical_layer_category = hsdsch_physical_layer_category;",
          "2008:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "2009:     nbap_private_data->num_items = 0;",
          "2010:     protocol_ie_id = nbap_private_data->protocol_ie_id;",
          "2012:     nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2043: # Reset num_items before calling the sequence",
          "2044: #.FN_HDR HSDSCH-MACdFlows-to-Delete",
          "2047: # Make sure num_items isn't 0 when accessing HSDSCH-MACdFlow-ID",
          "2048: #",
          "2049: #.FN_HDR HSDSCH-MACdFlows-to-Delete-Item",
          "2052: #.FN_HDR PriorityQueue-InfoItem",
          "2055: #.FN_HDR PriorityQueue-InfoItem-to-Add",
          "2058: #.FN_HDR HSDSCH-MACdFlow-Specific-InformationResp-Item",
          "2061: #.FN_BODY HSDSCH-MACdFlow-Specific-InfoItem",
          "2062:     address     dst_addr;",
          "2063:     guint32 transportLayerAddress_ipv4;",
          "2064:     guint16 bindingID;",
          "2065:     guint32 hsdsch_macdflow_id;",
          "2066:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "2072: %(DEFAULT_BODY)s",
          "2077:     if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "2078:         return offset;",
          "2079:     }",
          "",
          "[Removed Lines]",
          "2045:     private_data_set_num_items(actx->pinfo,0);",
          "2050:     private_data_increment_num_items(actx->pinfo);",
          "2053:     private_data_increment_num_items(actx->pinfo);",
          "2056:     private_data_set_num_items(actx->pinfo,1);",
          "2059:     private_data_increment_num_items(actx->pinfo);",
          "2067:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "2069:     private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "2070:     private_data_set_binding_id_port(actx->pinfo, 0);",
          "2071:     private_data_increment_num_items(actx->pinfo);",
          "2075:     transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "2076:     bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "2040:     nbap_get_private_data(actx->pinfo)->num_items = 0;",
          "2045:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "2048:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "2051:     nbap_get_private_data(actx->pinfo)->num_items = 1;",
          "2054:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "2061:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "2063:     nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "2065:     nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "2066:     nbap_private_data->binding_id_port = 0;",
          "2067:     nbap_private_data->num_items++;",
          "2071:     transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "2072:     bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "2081:     set_address(&dst_addr, AT_IPv4, 4, &transportLayerAddress_ipv4);",
          "2085:     copy_address_wmem(actx->pinfo->pool,&(nbap_hsdsch_channel_info[hsdsch_macdflow_id].crnc_address),&dst_addr);",
          "2086:     nbap_hsdsch_channel_info[hsdsch_macdflow_id].crnc_port = bindingID;",
          "",
          "[Removed Lines]",
          "2084:     hsdsch_macdflow_id = private_data_get_hsdsch_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "2080:     hsdsch_macdflow_id = nbap_private_data->hsdsch_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "2089: #.FN_BODY MAC-PDU-SizeExtended",
          "2090: guint32 hsdsch_macdflow_id;",
          "2091: nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "2093: %(DEFAULT_BODY)s",
          "2095:     if(nbap_hsdsch_channel_info[hsdsch_macdflow_id].crnc_port != 0){",
          "2096:             nbap_hsdsch_channel_info[hsdsch_macdflow_id].entity = ehs;",
          "2097:     }",
          "2123: #.FN_BODY HSDSCH-FDD-Information",
          "",
          "[Removed Lines]",
          "2092: nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "2094:     hsdsch_macdflow_id = private_data_get_hsdsch_macdflow_id(actx->pinfo);",
          "2100: #.FN_BODY HSDSCH-MACdPDUSizeFormat",
          "2113: %(DEFAULT_BODY)s",
          "2115:         if (nbap_hsdsch_channel_info[i].crnc_port != 0){",
          "2116:             nbap_hsdsch_channel_info[i].entity = ehs;",
          "2117:         }",
          "",
          "[Added Lines]",
          "2088: nbap_hsdsch_channel_info = nbap_get_private_data(actx->pinfo)->nbap_hsdsch_channel_info;",
          "2090:     hsdsch_macdflow_id = nbap_get_private_data(actx->pinfo)->hsdsch_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "2130:     fp_hsdsch_channel_info_t* fp_hsdsch_channel_info = NULL;",
          "2131:     guint32 i;",
          "2132:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "2135:     if (!actx->pinfo->fd->flags.visited){",
          "",
          "[Removed Lines]",
          "2133:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "",
          "[Added Lines]",
          "2106:     nbap_hsdsch_channel_info = nbap_get_private_data(actx->pinfo)->nbap_hsdsch_channel_info;",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "2195:                     umts_fp_conversation_info->num_dch_in_flow++;",
          "",
          "[Removed Lines]",
          "2192:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "2165:                     umts_fp_conversation_info->com_context_id = nbap_get_private_data(actx->pinfo)->com_context_id;",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "2221:     address     dst_addr;",
          "2222:     guint32 transportLayerAddress_ipv4;",
          "2223:     guint16 bindingID;",
          "2227:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "2230: %(DEFAULT_BODY)s",
          "2234:     if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "2235:         return offset;",
          "2236:     }",
          "",
          "[Removed Lines]",
          "2224:     private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "2225:     private_data_set_binding_id_port(actx->pinfo, 0);",
          "2226:     private_data_increment_num_items(actx->pinfo);",
          "2228:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "2232:     transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "2233:     bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "2197:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "2198:     nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "2199:     nbap_private_data->binding_id_port = 0;",
          "2200:     nbap_private_data->num_items++;",
          "2202:     nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "2206:     transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "2207:     bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "2238:     set_address(&dst_addr, AT_IPv4, 4, &transportLayerAddress_ipv4);",
          "2245: #.FN_BODY HSDSCH-Information-to-Modify",
          "",
          "[Removed Lines]",
          "2241:     copy_address_wmem(actx->pinfo->pool,&(nbap_hsdsch_channel_info[private_data_get_hsdsch_macdflow_id(actx->pinfo)].crnc_address),&dst_addr);",
          "2242:     nbap_hsdsch_channel_info[private_data_get_hsdsch_macdflow_id(actx->pinfo)].crnc_port = bindingID;",
          "",
          "[Added Lines]",
          "2215:     copy_address_wmem(actx->pinfo->pool,&(nbap_hsdsch_channel_info[nbap_private_data->hsdsch_macdflow_id].crnc_address),&dst_addr);",
          "2216:     nbap_hsdsch_channel_info[nbap_private_data->hsdsch_macdflow_id].crnc_port = bindingID;",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "2256:     fp_hsdsch_channel_info_t* fp_hsdsch_channel_info = NULL;",
          "2257:     guint32 i;",
          "2258:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "2261:     if (!actx->pinfo->fd->flags.visited){",
          "",
          "[Removed Lines]",
          "2259:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "",
          "[Added Lines]",
          "2233:     nbap_hsdsch_channel_info = nbap_get_private_data(actx->pinfo)->nbap_hsdsch_channel_info;",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "2325:                     umts_fp_conversation_info->num_dch_in_flow++;",
          "",
          "[Removed Lines]",
          "2322:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "2296:                     umts_fp_conversation_info->com_context_id = nbap_get_private_data(actx->pinfo)->com_context_id;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "2356:     }",
          "2366: #.FN_BODY CommonMACFlow-Specific-InfoItem",
          "2367:     address     dst_addr;",
          "2368:     guint32 transportLayerAddress_ipv4;",
          "2369:     guint16 bindingID;",
          "2370:     guint32 common_macdflow_id;",
          "2374:     nbap_common_channel_info_t* nbap_common_channel_info;",
          "2377: %(DEFAULT_BODY)s",
          "2381:     if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "2382:         return offset;",
          "2383:     }",
          "",
          "[Removed Lines]",
          "2358: #.FN_BODY Common-MACFlow-ID VAL_PTR = &common_macdflow_id",
          "2359: guint32 common_macdflow_id;",
          "2360: %(DEFAULT_BODY)s",
          "2361: private_data_set_common_macdflow_id(actx->pinfo, common_macdflow_id);",
          "2371:     private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "2372:     private_data_set_binding_id_port(actx->pinfo, 0);",
          "2373:     private_data_increment_num_items(actx->pinfo);",
          "2375:     nbap_common_channel_info = private_data_get_nbap_common_channel_info(actx->pinfo);",
          "2379:     transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "2380:     bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "2332: #.FN_PARS Common-MACFlow-ID VAL_PTR = &nbap_get_private_data(actx->pinfo)->common_macdflow_id",
          "2341:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "2342:     nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "2343:     nbap_private_data->binding_id_port = 0;",
          "2344:     nbap_private_data->num_items++;",
          "2346:     nbap_common_channel_info = nbap_private_data->nbap_common_channel_info;",
          "2350:     transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "2351:     bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "2385:     set_address(&dst_addr, AT_IPv4, 4, &transportLayerAddress_ipv4);",
          "2389:     copy_address_wmem(actx->pinfo->pool,&(nbap_common_channel_info[common_macdflow_id].crnc_address),&dst_addr);",
          "2393: #.FN_BODY HSDSCH-Common-System-InformationFDD",
          "",
          "[Removed Lines]",
          "2388:     common_macdflow_id = private_data_get_common_macdflow_id(actx->pinfo);",
          "2390:     nbap_common_channel_info[common_macdflow_id].crnc_port = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "2359:     common_macdflow_id = nbap_private_data->common_macdflow_id;",
          "2361:     nbap_common_channel_info[common_macdflow_id].crnc_port = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "2406: address     null_addr;",
          "2407: conversation_t   *conversation = NULL;",
          "2408: nbap_common_channel_info_t* nbap_common_channel_info;",
          "2411: int i;",
          "",
          "[Removed Lines]",
          "2409: nbap_common_channel_info = private_data_get_nbap_common_channel_info(actx->pinfo);",
          "",
          "[Added Lines]",
          "2380: nbap_common_channel_info = nbap_get_private_data(actx->pinfo)->nbap_common_channel_info;",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "2455:                 fp_hsdsch_channel_info = wmem_new0(wmem_file_scope(), fp_hsdsch_channel_info_t);",
          "2456:                 umts_fp_conversation_info->channel_specific_info = (void*)fp_hsdsch_channel_info;",
          "2458:                 fp_hsdsch_channel_info->hsdsch_entity = ehs;",
          "",
          "[Removed Lines]",
          "2457:                 fp_hsdsch_channel_info->common_macdflow_id = private_data_get_common_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "2428:                 fp_hsdsch_channel_info->common_macdflow_id = nbap_get_private_data(actx->pinfo)->common_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "2484: #.FN_BODY CRNC-CommunicationContextID VAL_PTR = &com_context_id",
          "2485: guint32 com_context_id;",
          "2486: %(DEFAULT_BODY)s",
          "2490: #.FN_BODY NodeB-CommunicationContextID VAL_PTR = &node_b_com_context_id",
          "2491:   gboolean crnc_context_present;",
          "2492:   guint node_b_com_context_id;",
          "2493:   nbap_com_context_id_t *cur_val;",
          "2495: %(DEFAULT_BODY)s",
          "2499:   if(crnc_context_present) {",
          "2501:     if (actx->pinfo->fd->flags.visited){",
          "",
          "[Removed Lines]",
          "2487: private_data_set_com_context_id(actx->pinfo, com_context_id);",
          "2488: private_data_set_crnc_context_present(actx->pinfo, TRUE);",
          "2498:   crnc_context_present = private_data_get_crnc_context_present(actx->pinfo);",
          "",
          "[Added Lines]",
          "2458: nbap_get_private_data(actx->pinfo)->com_context_id = com_context_id;",
          "2459: nbap_get_private_data(actx->pinfo)->crnc_context_present = TRUE;",
          "2465:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "2470:   crnc_context_present = nbap_private_data->crnc_context_present;",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "2506:     if(wmem_tree_lookup32(com_context_map, node_b_com_context_id) == NULL) {",
          "2508:        cur_val = wmem_new(wmem_file_scope(), nbap_com_context_id_t);",
          "2510:        cur_val->frame_num = actx->pinfo->num;",
          "2511:        wmem_tree_insert32(com_context_map, node_b_com_context_id, cur_val);",
          "2512:     }",
          "",
          "[Removed Lines]",
          "2509:        cur_val->crnc_context = private_data_get_com_context_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "2481:        cur_val->crnc_context = nbap_private_data->com_context_id;",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "2516:     cur_val = (nbap_com_context_id_t *)wmem_tree_lookup32(com_context_map,node_b_com_context_id);",
          "2517:     if(cur_val != NULL){",
          "2521:     }",
          "2522:   }",
          "",
          "[Removed Lines]",
          "2519:       private_data_set_com_context_id(actx->pinfo,cur_val->crnc_context);",
          "2520:       private_data_set_crnc_context_present(actx->pinfo, TRUE);",
          "",
          "[Added Lines]",
          "2491:       nbap_private_data->com_context_id = cur_val->crnc_context;",
          "2492:       nbap_private_data->crnc_context_present = TRUE;",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "2528: address     null_addr;",
          "2529: conversation_t   *conversation = NULL;",
          "2530: int i;",
          "2531: nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "2534: %(DEFAULT_BODY)s",
          "2537:     if (actx->pinfo->fd->flags.visited){",
          "2538:         return offset;",
          "",
          "[Removed Lines]",
          "2532: nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "2535:   private_data_set_hrnti(actx->pinfo, hrnti);",
          "",
          "[Added Lines]",
          "2503: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "2505: nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "2508:   nbap_private_data->hrnti = hrnti;",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "2549:                 DISSECTOR_ASSERT(umts_fp_conversation_info != NULL);",
          "2550:                 fp_hsdsch_channel_info = (fp_hsdsch_channel_info_t*)umts_fp_conversation_info->channel_specific_info;",
          "2551:                 DISSECTOR_ASSERT(fp_hsdsch_channel_info != NULL);",
          "2553:             }",
          "2554:          }",
          "2555:      }",
          "2565: #.REGISTER",
          "2567: #NBAP-PROTOCOL-IES",
          "",
          "[Removed Lines]",
          "2552:                 fp_hsdsch_channel_info->hrnti = private_data_get_hrnti(actx->pinfo);",
          "2557: #.FN_BODY RadioLinkReconfigurationCommit",
          "2563: %(DEFAULT_BODY)s",
          "",
          "[Added Lines]",
          "2525:                 fp_hsdsch_channel_info->hrnti = nbap_private_data->hrnti;",
          "",
          "---------------"
        ],
        "epan/dissectors/asn1/nbap/packet-nbap-template.c||epan/dissectors/asn1/nbap/packet-nbap-template.c": [
          "File: epan/dissectors/asn1/nbap/packet-nbap-template.c -> epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:   p_remove_proto_data(pinfo->pool, pinfo, proto_nbap, 0);",
          "291: }",
          "",
          "[Removed Lines]",
          "293: static guint32 private_data_get_transportLayerAddress_ipv4(packet_info *pinfo)",
          "294: {",
          "295:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "296:   return private_data->transportLayerAddress_ipv4;",
          "297: }",
          "299: static void private_data_set_transportLayerAddress_ipv4(packet_info *pinfo, guint32 transportLayerAddress_ipv4)",
          "300: {",
          "301:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "302:   private_data->transportLayerAddress_ipv4 = transportLayerAddress_ipv4;",
          "303: }",
          "305: static guint16 private_data_get_binding_id_port(packet_info *pinfo)",
          "306: {",
          "307:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "308:   return private_data->binding_id_port;",
          "309: }",
          "311: static void private_data_set_binding_id_port(packet_info *pinfo, guint16 binding_id_port)",
          "312: {",
          "313:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "314:   private_data->binding_id_port = binding_id_port;",
          "315: }",
          "317: static guint32 private_data_get_ul_scrambling_code(packet_info *pinfo)",
          "318: {",
          "319:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "320:   return private_data->ul_scrambling_code;",
          "321: }",
          "323: static void private_data_set_ul_scrambling_code(packet_info *pinfo, guint32 ul_scrambling_code)",
          "324: {",
          "325:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "326:   private_data->ul_scrambling_code = ul_scrambling_code;",
          "327: }",
          "329: static enum TransportFormatSet_type_enum private_data_get_transport_format_set_type(packet_info *pinfo)",
          "330: {",
          "331:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "332:   return private_data->transport_format_set_type;",
          "333: }",
          "335: static void private_data_set_transport_format_set_type(packet_info *pinfo, enum TransportFormatSet_type_enum transport_format_set_type)",
          "336: {",
          "337:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "338:   private_data->transport_format_set_type = transport_format_set_type;",
          "339: }",
          "341: static guint32 private_data_get_procedure_code(packet_info *pinfo)",
          "342: {",
          "343:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "344:   return private_data->procedure_code;",
          "345: }",
          "347: static void private_data_set_procedure_code(packet_info *pinfo, guint32 procedure_code)",
          "348: {",
          "349:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "350:   private_data->procedure_code = procedure_code;",
          "351: }",
          "353: static guint private_data_get_num_items(packet_info *pinfo)",
          "354: {",
          "355:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "356:   return private_data->num_items;",
          "357: }",
          "359: static void private_data_set_num_items(packet_info *pinfo, guint num_items)",
          "360: {",
          "361:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "362:   private_data->num_items = num_items;",
          "363: }",
          "365: static guint private_data_increment_num_items(packet_info *pinfo)",
          "366: {",
          "367:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "368:   private_data->num_items++;",
          "369:   return private_data->num_items;",
          "370: }",
          "372: static guint32 private_data_get_com_context_id(packet_info *pinfo)",
          "373: {",
          "374:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "375:   return private_data->com_context_id;",
          "376: }",
          "378: static void private_data_set_com_context_id(packet_info *pinfo, guint32 com_context_id)",
          "379: {",
          "380:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "381:   private_data->com_context_id = com_context_id;",
          "382: }",
          "384: static gint private_data_get_num_dch_in_flow(packet_info *pinfo)",
          "385: {",
          "386:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "387:   return private_data->num_dch_in_flow;",
          "388: }",
          "390: static void private_data_set_num_dch_in_flow(packet_info *pinfo, gint num_dch_in_flow)",
          "391: {",
          "392:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "393:   private_data->num_dch_in_flow = num_dch_in_flow;",
          "394: }",
          "396: static gint private_data_increment_num_dch_in_flow(packet_info *pinfo)",
          "397: {",
          "398:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "399:   private_data->num_dch_in_flow++;",
          "400:   return private_data->num_dch_in_flow;",
          "401: }",
          "403: static gint private_data_get_hrnti(packet_info *pinfo)",
          "404: {",
          "405:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "406:   return private_data->hrnti;",
          "407: }",
          "409: static void private_data_set_hrnti(packet_info *pinfo, gint hrnti)",
          "410: {",
          "411:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "412:   private_data->hrnti = hrnti;",
          "413: }",
          "415: static guint32 private_data_get_protocol_ie_id(packet_info *pinfo)",
          "416: {",
          "417:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "418:   return private_data->protocol_ie_id;",
          "419: }",
          "421: static void private_data_set_protocol_ie_id(packet_info *pinfo, guint32 protocol_ie_id)",
          "422: {",
          "423:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "424:   private_data->protocol_ie_id = protocol_ie_id;",
          "425: }",
          "427: static guint32 private_data_get_dd_mode(packet_info *pinfo)",
          "428: {",
          "429:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "430:   return private_data->dd_mode;",
          "431: }",
          "433: static void private_data_set_dd_mode(packet_info *pinfo, guint32 dd_mode)",
          "434: {",
          "435:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "436:   private_data->dd_mode = dd_mode;",
          "437: }",
          "439: static guint32 private_data_get_transaction_id(packet_info *pinfo)",
          "440: {",
          "441:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "442:   return private_data->transaction_id;",
          "443: }",
          "445: static void private_data_set_transaction_id(packet_info *pinfo, guint32 transaction_id)",
          "446: {",
          "447:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "448:   private_data->transaction_id = transaction_id;",
          "449: }",
          "451: static guint32 private_data_get_t_dch_id(packet_info *pinfo)",
          "452: {",
          "453:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "454:   return private_data->t_dch_id;",
          "455: }",
          "457: static void private_data_set_t_dch_id(packet_info *pinfo, guint32 t_dch_id)",
          "458: {",
          "459:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "460:   private_data->t_dch_id = t_dch_id;",
          "461: }",
          "463: static guint32 private_data_get_dch_id(packet_info *pinfo)",
          "464: {",
          "465:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "466:   return private_data->dch_id;",
          "467: }",
          "469: static void private_data_set_dch_id(packet_info *pinfo, guint32 dch_id)",
          "470: {",
          "471:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "472:   private_data->dch_id = dch_id;",
          "473: }",
          "475: static guint32 private_data_get_prev_dch_id(packet_info *pinfo)",
          "476: {",
          "477:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "478:   return private_data->prev_dch_id;",
          "479: }",
          "481: static void private_data_set_prev_dch_id(packet_info *pinfo, guint32 prev_dch_id)",
          "482: {",
          "483:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "484:   private_data->prev_dch_id = prev_dch_id;",
          "485: }",
          "487: static guint32 private_data_get_common_physical_channel_id(packet_info *pinfo)",
          "488: {",
          "489:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "490:   return private_data->common_physical_channel_id;",
          "491: }",
          "493: static void private_data_set_common_physical_channel_id(packet_info *pinfo, guint32 common_physical_channel_id)",
          "494: {",
          "495:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "496:   private_data->common_physical_channel_id = common_physical_channel_id;",
          "497: }",
          "499: static guint32 private_data_get_e_dch_macdflow_id(packet_info *pinfo)",
          "500: {",
          "501:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "502:   return private_data->e_dch_macdflow_id;",
          "503: }",
          "505: static void private_data_set_e_dch_macdflow_id(packet_info *pinfo, guint32 e_dch_macdflow_id)",
          "506: {",
          "507:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "508:   private_data->e_dch_macdflow_id = e_dch_macdflow_id;",
          "509: }",
          "511: static guint32 private_data_get_hsdsch_macdflow_id(packet_info *pinfo)",
          "512: {",
          "513:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "514:   return private_data->hsdsch_macdflow_id;",
          "515: }",
          "517: static void private_data_set_hsdsch_macdflow_id(packet_info *pinfo, guint32 hsdsch_macdflow_id)",
          "518: {",
          "519:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "520:   private_data->hsdsch_macdflow_id = hsdsch_macdflow_id;",
          "521: }",
          "523: static guint32 private_data_get_e_dch_ddi_value(packet_info *pinfo)",
          "524: {",
          "525:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "526:   return private_data->e_dch_ddi_value;",
          "527: }",
          "529: static void private_data_set_e_dch_ddi_value(packet_info *pinfo, guint32 e_dch_ddi_value)",
          "530: {",
          "531:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "532:   private_data->e_dch_ddi_value = e_dch_ddi_value;",
          "533: }",
          "535: static guint32 private_data_get_logical_channel_id(packet_info *pinfo)",
          "536: {",
          "537:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "538:   return private_data->logical_channel_id;",
          "539: }",
          "541: static void private_data_set_logical_channel_id(packet_info *pinfo, guint32 logical_channel_id)",
          "542: {",
          "543:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "544:   private_data->logical_channel_id = logical_channel_id;",
          "545: }",
          "547: static guint32 private_data_get_common_macdflow_id(packet_info *pinfo)",
          "548: {",
          "549:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "550:   return private_data->common_macdflow_id;",
          "551: }",
          "553: static void private_data_set_common_macdflow_id(packet_info *pinfo, guint32 common_macdflow_id)",
          "554: {",
          "555:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "556:   private_data->common_macdflow_id = common_macdflow_id;",
          "557: }",
          "559: static guint32 private_data_get_mac_d_pdu_size(packet_info *pinfo)",
          "560: {",
          "561:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "562:   return private_data->mac_d_pdu_size;",
          "563: }",
          "565: static void private_data_set_mac_d_pdu_size(packet_info *pinfo, guint32 mac_d_pdu_size)",
          "566: {",
          "567:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "568:   private_data->mac_d_pdu_size = mac_d_pdu_size;",
          "569: }",
          "571: static guint32 private_data_get_common_transport_channel_id(packet_info *pinfo)",
          "572: {",
          "573:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "574:   return private_data->common_transport_channel_id;",
          "575: }",
          "577: static void private_data_set_common_transport_channel_id(packet_info *pinfo, guint32 common_transport_channel_id)",
          "578: {",
          "579:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "580:   private_data->common_transport_channel_id = common_transport_channel_id;",
          "581: }",
          "583: static gint private_data_get_paging_indications(packet_info *pinfo)",
          "584: {",
          "585:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "586:   return private_data->paging_indications;",
          "587: }",
          "589: static void private_data_set_paging_indications(packet_info *pinfo, gint paging_indications)",
          "590: {",
          "591:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "592:   private_data->paging_indications = paging_indications;",
          "593: }",
          "595: static guint32 private_data_get_ib_type(packet_info *pinfo)",
          "596: {",
          "597:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "598:   return private_data->ib_type;",
          "599: }",
          "601: static void private_data_set_ib_type(packet_info *pinfo, guint32 ib_type)",
          "602: {",
          "603:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "604:   private_data->ib_type = ib_type;",
          "605: }",
          "607: static guint32 private_data_get_segment_type(packet_info *pinfo)",
          "608: {",
          "609:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "610:   return private_data->segment_type;",
          "611: }",
          "613: static void private_data_set_segment_type(packet_info *pinfo, guint32 segment_type)",
          "614: {",
          "615:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "616:   private_data->segment_type = segment_type;",
          "617: }",
          "619: static gboolean private_data_get_crnc_context_present(packet_info *pinfo)",
          "620: {",
          "621:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "622:   return private_data->crnc_context_present;",
          "623: }",
          "625: static void private_data_set_crnc_context_present(packet_info *pinfo, gboolean crnc_context_present)",
          "626: {",
          "627:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "628:   private_data->crnc_context_present = crnc_context_present;",
          "629: }",
          "631: static guint8 private_data_get_dch_crc_present(packet_info *pinfo)",
          "632: {",
          "633:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "634:   return private_data->dch_crc_present;",
          "635: }",
          "637: static void private_data_set_dch_crc_present(packet_info *pinfo, guint8 dch_crc_present)",
          "638: {",
          "639:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "640:   private_data->dch_crc_present = dch_crc_present;",
          "641: }",
          "643: static nbap_dch_channel_info_t* private_data_get_nbap_dch_chnl_info(packet_info *pinfo)",
          "644: {",
          "645:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "646:   return private_data->nbap_dch_chnl_info;",
          "647: }",
          "649: static nbap_edch_channel_info_t* private_data_get_nbap_edch_channel_info(packet_info *pinfo)",
          "650: {",
          "651:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "652:   return private_data->nbap_edch_channel_info;",
          "653: }",
          "655: static gint* private_data_get_hsdsch_macdflow_ids(packet_info *pinfo)",
          "656: {",
          "657:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "658:   return private_data->hsdsch_macdflow_ids;",
          "659: }",
          "661: static nbap_hsdsch_channel_info_t* private_data_get_nbap_hsdsch_channel_info(packet_info *pinfo)",
          "662: {",
          "663:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "664:   return private_data->nbap_hsdsch_channel_info;",
          "665: }",
          "667: static nbap_common_channel_info_t* private_data_get_nbap_common_channel_info(packet_info *pinfo)",
          "668: {",
          "669:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "670:   return private_data->nbap_common_channel_info;",
          "671: }",
          "673: static wmem_list_t* private_data_get_ib_segments(packet_info *pinfo)",
          "674: {",
          "675:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "676:   return private_data->ib_segments;",
          "677: }",
          "679: static void private_data_set_ib_segments(packet_info *pinfo, wmem_list_t* ib_segments)",
          "680: {",
          "681:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "682:   private_data->ib_segments = ib_segments;",
          "683: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "818: static int dissect_ProtocolIEFieldValue(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, void *data _U_)",
          "819: {",
          "820:   guint32 protocol_ie_id;",
          "822:   return (dissector_try_uint_new(nbap_ies_dissector_table, protocol_ie_id, tvb, pinfo, tree, FALSE, NULL)) ? tvb_captured_length(tvb) : 0;",
          "823: }",
          "825: static int dissect_ProtocolExtensionFieldExtensionValue(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, void *data _U_)",
          "826: {",
          "827:   guint32 protocol_ie_id;",
          "829:   return (dissector_try_uint_new(nbap_extension_dissector_table, protocol_ie_id, tvb, pinfo, tree, FALSE, NULL)) ? tvb_captured_length(tvb) : 0;",
          "830: }",
          "",
          "[Removed Lines]",
          "821:   protocol_ie_id = private_data_get_protocol_ie_id(pinfo);",
          "828:   protocol_ie_id = private_data_get_protocol_ie_id(pinfo);",
          "",
          "[Added Lines]",
          "429:   protocol_ie_id = nbap_get_private_data(pinfo)->protocol_ie_id;",
          "436:   protocol_ie_id = nbap_get_private_data(pinfo)->protocol_ie_id;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "858:     return;",
          "859:   }",
          "863:   clear_address(&null_addr);",
          "864:   for (i = 0; i < maxNrOfMACdFlows; i++) {",
          "",
          "[Removed Lines]",
          "861:   nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(pinfo);",
          "",
          "[Added Lines]",
          "469:   nbap_hsdsch_channel_info = nbap_get_private_data(pinfo)->nbap_hsdsch_channel_info;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c": [
          "File: epan/dissectors/packet-nbap.c -> epan/dissectors/packet-nbap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6683:   p_remove_proto_data(pinfo->pool, pinfo, proto_nbap, 0);",
          "6684: }",
          "",
          "[Removed Lines]",
          "6686: static guint32 private_data_get_transportLayerAddress_ipv4(packet_info *pinfo)",
          "6687: {",
          "6688:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6689:   return private_data->transportLayerAddress_ipv4;",
          "6690: }",
          "6692: static void private_data_set_transportLayerAddress_ipv4(packet_info *pinfo, guint32 transportLayerAddress_ipv4)",
          "6693: {",
          "6694:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6695:   private_data->transportLayerAddress_ipv4 = transportLayerAddress_ipv4;",
          "6696: }",
          "6698: static guint16 private_data_get_binding_id_port(packet_info *pinfo)",
          "6699: {",
          "6700:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6701:   return private_data->binding_id_port;",
          "6702: }",
          "6704: static void private_data_set_binding_id_port(packet_info *pinfo, guint16 binding_id_port)",
          "6705: {",
          "6706:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6707:   private_data->binding_id_port = binding_id_port;",
          "6708: }",
          "6710: static guint32 private_data_get_ul_scrambling_code(packet_info *pinfo)",
          "6711: {",
          "6712:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6713:   return private_data->ul_scrambling_code;",
          "6714: }",
          "6716: static void private_data_set_ul_scrambling_code(packet_info *pinfo, guint32 ul_scrambling_code)",
          "6717: {",
          "6718:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6719:   private_data->ul_scrambling_code = ul_scrambling_code;",
          "6720: }",
          "6722: static enum TransportFormatSet_type_enum private_data_get_transport_format_set_type(packet_info *pinfo)",
          "6723: {",
          "6724:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6725:   return private_data->transport_format_set_type;",
          "6726: }",
          "6728: static void private_data_set_transport_format_set_type(packet_info *pinfo, enum TransportFormatSet_type_enum transport_format_set_type)",
          "6729: {",
          "6730:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6731:   private_data->transport_format_set_type = transport_format_set_type;",
          "6732: }",
          "6734: static guint32 private_data_get_procedure_code(packet_info *pinfo)",
          "6735: {",
          "6736:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6737:   return private_data->procedure_code;",
          "6738: }",
          "6740: static void private_data_set_procedure_code(packet_info *pinfo, guint32 procedure_code)",
          "6741: {",
          "6742:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6743:   private_data->procedure_code = procedure_code;",
          "6744: }",
          "6746: static guint private_data_get_num_items(packet_info *pinfo)",
          "6747: {",
          "6748:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6749:   return private_data->num_items;",
          "6750: }",
          "6752: static void private_data_set_num_items(packet_info *pinfo, guint num_items)",
          "6753: {",
          "6754:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6755:   private_data->num_items = num_items;",
          "6756: }",
          "6758: static guint private_data_increment_num_items(packet_info *pinfo)",
          "6759: {",
          "6760:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6761:   private_data->num_items++;",
          "6762:   return private_data->num_items;",
          "6763: }",
          "6765: static guint32 private_data_get_com_context_id(packet_info *pinfo)",
          "6766: {",
          "6767:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6768:   return private_data->com_context_id;",
          "6769: }",
          "6771: static void private_data_set_com_context_id(packet_info *pinfo, guint32 com_context_id)",
          "6772: {",
          "6773:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6774:   private_data->com_context_id = com_context_id;",
          "6775: }",
          "6777: static gint private_data_get_num_dch_in_flow(packet_info *pinfo)",
          "6778: {",
          "6779:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6780:   return private_data->num_dch_in_flow;",
          "6781: }",
          "6783: static void private_data_set_num_dch_in_flow(packet_info *pinfo, gint num_dch_in_flow)",
          "6784: {",
          "6785:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6786:   private_data->num_dch_in_flow = num_dch_in_flow;",
          "6787: }",
          "6789: static gint private_data_increment_num_dch_in_flow(packet_info *pinfo)",
          "6790: {",
          "6791:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6792:   private_data->num_dch_in_flow++;",
          "6793:   return private_data->num_dch_in_flow;",
          "6794: }",
          "6796: static gint private_data_get_hrnti(packet_info *pinfo)",
          "6797: {",
          "6798:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6799:   return private_data->hrnti;",
          "6800: }",
          "6802: static void private_data_set_hrnti(packet_info *pinfo, gint hrnti)",
          "6803: {",
          "6804:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6805:   private_data->hrnti = hrnti;",
          "6806: }",
          "6808: static guint32 private_data_get_protocol_ie_id(packet_info *pinfo)",
          "6809: {",
          "6810:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6811:   return private_data->protocol_ie_id;",
          "6812: }",
          "6814: static void private_data_set_protocol_ie_id(packet_info *pinfo, guint32 protocol_ie_id)",
          "6815: {",
          "6816:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6817:   private_data->protocol_ie_id = protocol_ie_id;",
          "6818: }",
          "6820: static guint32 private_data_get_dd_mode(packet_info *pinfo)",
          "6821: {",
          "6822:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6823:   return private_data->dd_mode;",
          "6824: }",
          "6826: static void private_data_set_dd_mode(packet_info *pinfo, guint32 dd_mode)",
          "6827: {",
          "6828:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6829:   private_data->dd_mode = dd_mode;",
          "6830: }",
          "6832: static guint32 private_data_get_transaction_id(packet_info *pinfo)",
          "6833: {",
          "6834:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6835:   return private_data->transaction_id;",
          "6836: }",
          "6838: static void private_data_set_transaction_id(packet_info *pinfo, guint32 transaction_id)",
          "6839: {",
          "6840:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6841:   private_data->transaction_id = transaction_id;",
          "6842: }",
          "6844: static guint32 private_data_get_t_dch_id(packet_info *pinfo)",
          "6845: {",
          "6846:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6847:   return private_data->t_dch_id;",
          "6848: }",
          "6850: static void private_data_set_t_dch_id(packet_info *pinfo, guint32 t_dch_id)",
          "6851: {",
          "6852:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6853:   private_data->t_dch_id = t_dch_id;",
          "6854: }",
          "6856: static guint32 private_data_get_dch_id(packet_info *pinfo)",
          "6857: {",
          "6858:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6859:   return private_data->dch_id;",
          "6860: }",
          "6862: static void private_data_set_dch_id(packet_info *pinfo, guint32 dch_id)",
          "6863: {",
          "6864:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6865:   private_data->dch_id = dch_id;",
          "6866: }",
          "6868: static guint32 private_data_get_prev_dch_id(packet_info *pinfo)",
          "6869: {",
          "6870:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6871:   return private_data->prev_dch_id;",
          "6872: }",
          "6874: static void private_data_set_prev_dch_id(packet_info *pinfo, guint32 prev_dch_id)",
          "6875: {",
          "6876:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6877:   private_data->prev_dch_id = prev_dch_id;",
          "6878: }",
          "6880: static guint32 private_data_get_common_physical_channel_id(packet_info *pinfo)",
          "6881: {",
          "6882:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6883:   return private_data->common_physical_channel_id;",
          "6884: }",
          "6886: static void private_data_set_common_physical_channel_id(packet_info *pinfo, guint32 common_physical_channel_id)",
          "6887: {",
          "6888:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6889:   private_data->common_physical_channel_id = common_physical_channel_id;",
          "6890: }",
          "6892: static guint32 private_data_get_e_dch_macdflow_id(packet_info *pinfo)",
          "6893: {",
          "6894:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6895:   return private_data->e_dch_macdflow_id;",
          "6896: }",
          "6898: static void private_data_set_e_dch_macdflow_id(packet_info *pinfo, guint32 e_dch_macdflow_id)",
          "6899: {",
          "6900:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6901:   private_data->e_dch_macdflow_id = e_dch_macdflow_id;",
          "6902: }",
          "6904: static guint32 private_data_get_hsdsch_macdflow_id(packet_info *pinfo)",
          "6905: {",
          "6906:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6907:   return private_data->hsdsch_macdflow_id;",
          "6908: }",
          "6910: static void private_data_set_hsdsch_macdflow_id(packet_info *pinfo, guint32 hsdsch_macdflow_id)",
          "6911: {",
          "6912:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6913:   private_data->hsdsch_macdflow_id = hsdsch_macdflow_id;",
          "6914: }",
          "6916: static guint32 private_data_get_e_dch_ddi_value(packet_info *pinfo)",
          "6917: {",
          "6918:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6919:   return private_data->e_dch_ddi_value;",
          "6920: }",
          "6922: static void private_data_set_e_dch_ddi_value(packet_info *pinfo, guint32 e_dch_ddi_value)",
          "6923: {",
          "6924:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6925:   private_data->e_dch_ddi_value = e_dch_ddi_value;",
          "6926: }",
          "6928: static guint32 private_data_get_logical_channel_id(packet_info *pinfo)",
          "6929: {",
          "6930:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6931:   return private_data->logical_channel_id;",
          "6932: }",
          "6934: static void private_data_set_logical_channel_id(packet_info *pinfo, guint32 logical_channel_id)",
          "6935: {",
          "6936:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6937:   private_data->logical_channel_id = logical_channel_id;",
          "6938: }",
          "6940: static guint32 private_data_get_common_macdflow_id(packet_info *pinfo)",
          "6941: {",
          "6942:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6943:   return private_data->common_macdflow_id;",
          "6944: }",
          "6946: static void private_data_set_common_macdflow_id(packet_info *pinfo, guint32 common_macdflow_id)",
          "6947: {",
          "6948:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6949:   private_data->common_macdflow_id = common_macdflow_id;",
          "6950: }",
          "6952: static guint32 private_data_get_mac_d_pdu_size(packet_info *pinfo)",
          "6953: {",
          "6954:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6955:   return private_data->mac_d_pdu_size;",
          "6956: }",
          "6958: static void private_data_set_mac_d_pdu_size(packet_info *pinfo, guint32 mac_d_pdu_size)",
          "6959: {",
          "6960:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6961:   private_data->mac_d_pdu_size = mac_d_pdu_size;",
          "6962: }",
          "6964: static guint32 private_data_get_common_transport_channel_id(packet_info *pinfo)",
          "6965: {",
          "6966:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6967:   return private_data->common_transport_channel_id;",
          "6968: }",
          "6970: static void private_data_set_common_transport_channel_id(packet_info *pinfo, guint32 common_transport_channel_id)",
          "6971: {",
          "6972:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6973:   private_data->common_transport_channel_id = common_transport_channel_id;",
          "6974: }",
          "6976: static gint private_data_get_paging_indications(packet_info *pinfo)",
          "6977: {",
          "6978:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6979:   return private_data->paging_indications;",
          "6980: }",
          "6982: static void private_data_set_paging_indications(packet_info *pinfo, gint paging_indications)",
          "6983: {",
          "6984:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6985:   private_data->paging_indications = paging_indications;",
          "6986: }",
          "6988: static guint32 private_data_get_ib_type(packet_info *pinfo)",
          "6989: {",
          "6990:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6991:   return private_data->ib_type;",
          "6992: }",
          "6994: static void private_data_set_ib_type(packet_info *pinfo, guint32 ib_type)",
          "6995: {",
          "6996:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "6997:   private_data->ib_type = ib_type;",
          "6998: }",
          "7000: static guint32 private_data_get_segment_type(packet_info *pinfo)",
          "7001: {",
          "7002:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7003:   return private_data->segment_type;",
          "7004: }",
          "7006: static void private_data_set_segment_type(packet_info *pinfo, guint32 segment_type)",
          "7007: {",
          "7008:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7009:   private_data->segment_type = segment_type;",
          "7010: }",
          "7012: static gboolean private_data_get_crnc_context_present(packet_info *pinfo)",
          "7013: {",
          "7014:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7015:   return private_data->crnc_context_present;",
          "7016: }",
          "7018: static void private_data_set_crnc_context_present(packet_info *pinfo, gboolean crnc_context_present)",
          "7019: {",
          "7020:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7021:   private_data->crnc_context_present = crnc_context_present;",
          "7022: }",
          "7024: static guint8 private_data_get_dch_crc_present(packet_info *pinfo)",
          "7025: {",
          "7026:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7027:   return private_data->dch_crc_present;",
          "7028: }",
          "7030: static void private_data_set_dch_crc_present(packet_info *pinfo, guint8 dch_crc_present)",
          "7031: {",
          "7032:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7033:   private_data->dch_crc_present = dch_crc_present;",
          "7034: }",
          "7036: static nbap_dch_channel_info_t* private_data_get_nbap_dch_chnl_info(packet_info *pinfo)",
          "7037: {",
          "7038:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7039:   return private_data->nbap_dch_chnl_info;",
          "7040: }",
          "7042: static nbap_edch_channel_info_t* private_data_get_nbap_edch_channel_info(packet_info *pinfo)",
          "7043: {",
          "7044:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7045:   return private_data->nbap_edch_channel_info;",
          "7046: }",
          "7048: static gint* private_data_get_hsdsch_macdflow_ids(packet_info *pinfo)",
          "7049: {",
          "7050:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7051:   return private_data->hsdsch_macdflow_ids;",
          "7052: }",
          "7054: static nbap_hsdsch_channel_info_t* private_data_get_nbap_hsdsch_channel_info(packet_info *pinfo)",
          "7055: {",
          "7056:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7057:   return private_data->nbap_hsdsch_channel_info;",
          "7058: }",
          "7060: static nbap_common_channel_info_t* private_data_get_nbap_common_channel_info(packet_info *pinfo)",
          "7061: {",
          "7062:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7063:   return private_data->nbap_common_channel_info;",
          "7064: }",
          "7066: static wmem_list_t* private_data_get_ib_segments(packet_info *pinfo)",
          "7067: {",
          "7068:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7069:   return private_data->ib_segments;",
          "7070: }",
          "7072: static void private_data_set_ib_segments(packet_info *pinfo, wmem_list_t* ib_segments)",
          "7073: {",
          "7074:   nbap_private_data_t *private_data = (nbap_private_data_t*)nbap_get_private_data(pinfo);",
          "7075:   private_data->ib_segments = ib_segments;",
          "7076: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7352:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "7353:                                                             0U, 255U, &procedure_code, FALSE);",
          "7356:   col_add_fstr(actx->pinfo->cinfo, COL_INFO, \"%s \",",
          "7357:                  val_to_str(procedure_code, nbap_ProcedureCode_vals,",
          "7358:                             \"unknown message\"));",
          "",
          "[Removed Lines]",
          "7355:   private_data_set_procedure_code(actx->pinfo, procedure_code);",
          "",
          "[Added Lines]",
          "6963:   nbap_get_private_data(actx->pinfo)->procedure_code = procedure_code;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7374: static int",
          "7375: dissect_nbap_DdMode(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "7378:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
          "7386:   return offset;",
          "7387: }",
          "",
          "[Removed Lines]",
          "7376: #line 102 \"./asn1/nbap/nbap.cnf\"",
          "7377:   guint32 dd_mode;",
          "7379:                                      3, &dd_mode, TRUE, 0, NULL);",
          "7381:   private_data_set_dd_mode(actx->pinfo, dd_mode);",
          "",
          "[Added Lines]",
          "6985:                                      3, &nbap_get_private_data(actx->pinfo)->dd_mode, TRUE, 0, NULL);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7396: static int",
          "7397: dissect_nbap_ProcedureID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "7399:   ProcedureID = NULL;",
          "7400:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "7401:                                    ett_nbap_ProcedureID, ProcedureID_sequence);",
          "7403:   ProcedureID = wmem_strdup_printf(wmem_packet_scope(), \"%s/%s\",",
          "",
          "[Removed Lines]",
          "7398: #line 108 \"./asn1/nbap/nbap.cnf\"",
          "7404:                                  val_to_str(private_data_get_procedure_code(actx->pinfo), VALS(nbap_ProcedureCode_vals), \"unknown(%u)\"),",
          "7405:                                  val_to_str(private_data_get_dd_mode(actx->pinfo), VALS(nbap_DdMode_vals), \"unknown(%u)\"));",
          "",
          "[Added Lines]",
          "6999: #line 105 \"./asn1/nbap/nbap.cnf\"",
          "7001:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "7006:                                  val_to_str(nbap_private_data->procedure_code, VALS(nbap_ProcedureCode_vals), \"unknown(%u)\"),",
          "7007:                                  val_to_str(nbap_private_data->dd_mode, VALS(nbap_DdMode_vals), \"unknown(%u)\"));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8662: static int",
          "8663: dissect_nbap_T_shortTransActionId(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "8666:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "8673:   return offset;",
          "8674: }",
          "",
          "[Removed Lines]",
          "8664: #line 116 \"./asn1/nbap/nbap.cnf\"",
          "8665:   guint32 transaction_id;",
          "8667:                                                             0U, 127U, &transaction_id, FALSE);",
          "8669:   private_data_set_transaction_id(actx->pinfo, transaction_id);",
          "",
          "[Added Lines]",
          "8267:                                                             0U, 127U, &nbap_get_private_data(actx->pinfo)->transaction_id, FALSE);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8678: static int",
          "8679: dissect_nbap_T_longTransActionId(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "8682:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "8689:   return offset;",
          "8690: }",
          "",
          "[Removed Lines]",
          "8680: #line 121 \"./asn1/nbap/nbap.cnf\"",
          "8681:   guint32 transaction_id;",
          "8683:                                                             0U, 32767U, &transaction_id, FALSE);",
          "8685:   private_data_set_transaction_id(actx->pinfo, transaction_id);",
          "",
          "[Added Lines]",
          "8277:                                                             0U, 32767U, &nbap_get_private_data(actx->pinfo)->transaction_id, FALSE);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8951: static int",
          "8952: dissect_nbap_UL_ScramblingCodeNumber(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "8954:   guint32 ul_scrambling_code;",
          "8955:   guint32 com_context_id;",
          "8956:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "8957:                                                             0U, 16777215U, &ul_scrambling_code, FALSE);",
          "8961:   if(ul_scrambling_code != 0 && com_context_id != 0) {",
          "8962:     wmem_tree_insert32(nbap_scrambling_code_crncc_map,ul_scrambling_code,GUINT_TO_POINTER(com_context_id));",
          "8963:   }",
          "",
          "[Removed Lines]",
          "8953: #line 976 \"./asn1/nbap/nbap.cnf\"",
          "8959:   private_data_set_ul_scrambling_code(actx->pinfo, ul_scrambling_code);",
          "8960:   com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "8543: #line 960 \"./asn1/nbap/nbap.cnf\"",
          "8549:   nbap_get_private_data(actx->pinfo)->ul_scrambling_code = ul_scrambling_code;",
          "8550:   com_context_id = nbap_get_private_data(actx->pinfo)->com_context_id;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "9221: static int",
          "9222: dissect_nbap_E_DCH_MACdFlow_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "9225:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "9232:   return offset;",
          "9233: }",
          "",
          "[Removed Lines]",
          "9223: #line 941 \"./asn1/nbap/nbap.cnf\"",
          "9224:   guint32 e_dch_macdflow_id;",
          "9226:                                                             0U, maxNrOfEDCHMACdFlows_1, &e_dch_macdflow_id, FALSE);",
          "9228:   private_data_set_e_dch_macdflow_id(actx->pinfo, e_dch_macdflow_id);",
          "",
          "[Added Lines]",
          "8814:                                                             0U, maxNrOfEDCHMACdFlows_1, &nbap_get_private_data(actx->pinfo)->e_dch_macdflow_id, FALSE);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "9237: static int",
          "9238: dissect_nbap_BindingID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "9240:   tvbuff_t *parameter_tvb=NULL;",
          "9242:   offset = dissect_per_octet_string(tvb, offset, actx, tree, hf_index,",
          "9243:                                        1, 4, TRUE, &parameter_tvb);",
          "",
          "[Removed Lines]",
          "9239: #line 960 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "8823: #line 942 \"./asn1/nbap/nbap.cnf\"",
          "8825:   guint16 binding_id_port;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "9247:     return offset;",
          "9249:   if(tvb_reported_length(parameter_tvb)>=2){",
          "9252:   }",
          "",
          "[Removed Lines]",
          "9250:     private_data_set_binding_id_port(actx->pinfo, tvb_get_ntohs(parameter_tvb,0));",
          "9251:     proto_item_append_text(actx->created_item, \" (%u)\",private_data_get_binding_id_port(actx->pinfo));",
          "",
          "[Added Lines]",
          "8835:     binding_id_port = tvb_get_ntohs(parameter_tvb,0);",
          "8836:     nbap_get_private_data(actx->pinfo)->binding_id_port = binding_id_port;",
          "8837:     proto_item_append_text(actx->created_item, \" (%u)\",binding_id_port);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "9261: static int",
          "9262: dissect_nbap_TransportLayerAddress(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "9264:   tvbuff_t *parameter_tvb=NULL;",
          "9265:   proto_item *item;",
          "9266:   proto_tree *subtree, *nsap_tree;",
          "9267:   guint8 *padded_nsap_bytes;",
          "9268:   tvbuff_t *nsap_tvb;",
          "9269:   gint tvb_len;",
          "9271:   offset = dissect_per_bit_string(tvb, offset, actx, tree, hf_index,",
          "9272:                                      1, 160, TRUE, &parameter_tvb, NULL);",
          "",
          "[Removed Lines]",
          "9263: #line 836 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "8849: #line 821 \"./asn1/nbap/nbap.cnf\"",
          "8856:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "9279:     if (tvb_len==4){",
          "9281:          proto_tree_add_item(subtree, hf_nbap_transportLayerAddress_ipv4, parameter_tvb, 0, tvb_len, ENC_BIG_ENDIAN);",
          "9283:     }",
          "9284:     if (tvb_len==16){",
          "",
          "[Removed Lines]",
          "9282:          private_data_set_transportLayerAddress_ipv4(actx->pinfo, tvb_get_ipv4(parameter_tvb, 0));",
          "",
          "[Added Lines]",
          "8869:          nbap_private_data->transportLayerAddress_ipv4 = tvb_get_ipv4(parameter_tvb, 0);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "9302:         nsap_tree = proto_item_add_subtree(item, ett_nbap_TransportLayerAddress_nsap);",
          "9303:         if(tvb_get_ntoh24(parameter_tvb,0) == 0x350001){",
          "9306:         }",
          "9307:         dissect_nsap(nsap_tvb, 0, 20, nsap_tree);",
          "9308:     }",
          "",
          "[Removed Lines]",
          "9305:             private_data_set_transportLayerAddress_ipv4(actx->pinfo, tvb_get_ipv4(parameter_tvb, 3));",
          "",
          "[Added Lines]",
          "8892:             nbap_private_data->transportLayerAddress_ipv4 = tvb_get_ipv4(parameter_tvb, 3);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "10831: static int",
          "10832: dissect_nbap_HSDSCH_RNTI(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "10834:   gint hrnti;",
          "10835: umts_fp_conversation_info_t *umts_fp_conversation_info = NULL;",
          "10836: fp_hsdsch_channel_info_t* fp_hsdsch_channel_info = NULL;",
          "10837: address     null_addr;",
          "10838: conversation_t   *conversation = NULL;",
          "10839: int i;",
          "10840: nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "10843:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "10844:                                                             0U, 65535U, &hrnti, FALSE);",
          "10848:     if (actx->pinfo->fd->flags.visited){",
          "10849:         return offset;",
          "",
          "[Removed Lines]",
          "10833: #line 2525 \"./asn1/nbap/nbap.cnf\"",
          "10841: nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "10846:   private_data_set_hrnti(actx->pinfo, hrnti);",
          "",
          "[Added Lines]",
          "10420: #line 2497 \"./asn1/nbap/nbap.cnf\"",
          "10427: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "10429: nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "10434:   nbap_private_data->hrnti = hrnti;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "10860:                 DISSECTOR_ASSERT(umts_fp_conversation_info != NULL);",
          "10861:                 fp_hsdsch_channel_info = (fp_hsdsch_channel_info_t*)umts_fp_conversation_info->channel_specific_info;",
          "10862:                 DISSECTOR_ASSERT(fp_hsdsch_channel_info != NULL);",
          "10864:             }",
          "10865:          }",
          "10866:      }",
          "",
          "[Removed Lines]",
          "10863:                 fp_hsdsch_channel_info->hrnti = private_data_get_hrnti(actx->pinfo);",
          "",
          "[Added Lines]",
          "10451:                 fp_hsdsch_channel_info->hrnti = nbap_private_data->hrnti;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "11078: static int",
          "11079: dissect_nbap_CommonTransportChannelID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "11081:   guint32 commontransportchannelid;",
          "11082:   nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "11084:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "11085:                                                             0U, 255U, &commontransportchannelid, FALSE);",
          "11088: if(commontransportchannelid<maxNrOfDCHs)",
          "11089:   nbap_dch_chnl_info[commontransportchannelid].next_dch = 0;",
          "",
          "[Removed Lines]",
          "11080: #line 932 \"./asn1/nbap/nbap.cnf\"",
          "11083:   nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "11087: private_data_set_common_transport_channel_id(actx->pinfo, commontransportchannelid);",
          "",
          "[Added Lines]",
          "10668: #line 915 \"./asn1/nbap/nbap.cnf\"",
          "10671:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "10672:   nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "10676: nbap_private_data->common_transport_channel_id = commontransportchannelid;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "11893: static int",
          "11894: dissect_nbap_CommonPhysicalChannelID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "11896: guint32 commonphysicalchannelid;",
          "11897: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "11899:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "11900:                                                             0U, 255U, &commonphysicalchannelid, FALSE);",
          "11903: if(commonphysicalchannelid<maxNrOfDCHs)",
          "11904:   nbap_dch_chnl_info[commonphysicalchannelid].next_dch = 0;",
          "",
          "[Removed Lines]",
          "11895: #line 923 \"./asn1/nbap/nbap.cnf\"",
          "11898: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "11902: private_data_set_common_physical_channel_id(actx->pinfo, commonphysicalchannelid);",
          "",
          "[Added Lines]",
          "11484: #line 905 \"./asn1/nbap/nbap.cnf\"",
          "11487: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "11488: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "11492: nbap_private_data->common_physical_channel_id = commonphysicalchannelid;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "12067: static int",
          "12068: dissect_nbap_Common_MACFlow_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12071:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "12081:   return offset;",
          "12082: }",
          "",
          "[Removed Lines]",
          "12069: #line 2359 \"./asn1/nbap/nbap.cnf\"",
          "12070: guint32 common_macdflow_id;",
          "12072:                                                             0U, maxNrOfCommonMACFlows_1, &common_macdflow_id, FALSE);",
          "12074: private_data_set_common_macdflow_id(actx->pinfo, common_macdflow_id);",
          "",
          "[Added Lines]",
          "11660:                                                             0U, maxNrOfCommonMACFlows_1, &nbap_get_private_data(actx->pinfo)->common_macdflow_id, FALSE);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "12150: static int",
          "12151: dissect_nbap_PayloadCRC_PresenceIndicator(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12153: guint32 payload_crc_value;",
          "12155:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "12152: #line 884 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "11733: #line 870 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "12159:     if(payload_crc_value == 0){",
          "12161:     }else{",
          "12163:     }",
          "",
          "[Removed Lines]",
          "12160:         private_data_set_dch_crc_present(actx->pinfo, TRUE);",
          "12162:         private_data_set_dch_crc_present(actx->pinfo, FALSE);",
          "",
          "[Added Lines]",
          "11741:         nbap_get_private_data(actx->pinfo)->dch_crc_present = TRUE;",
          "11743:         nbap_get_private_data(actx->pinfo)->dch_crc_present = FALSE;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "12202: static int",
          "12203: dissect_nbap_LogicalChannelID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12205:   guint32 logical_channel_id;",
          "12206:   guint num_items;",
          "12207:   nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "12210:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "12211:                                                             1U, 15U, &logical_channel_id, FALSE);",
          "12216:     if(num_items>0)",
          "",
          "[Removed Lines]",
          "12204: #line 1972 \"./asn1/nbap/nbap.cnf\"",
          "12208:   nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "12214:     private_data_set_logical_channel_id(actx->pinfo, logical_channel_id);",
          "12215:     num_items = private_data_get_num_items(actx->pinfo);",
          "12217:         nbap_edch_channel_info[private_data_get_e_dch_macdflow_id(actx->pinfo)].lchId[num_items-1] = private_data_get_logical_channel_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "11785: #line 1963 \"./asn1/nbap/nbap.cnf\"",
          "11789:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "11790:   nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "11796:     nbap_private_data->logical_channel_id = logical_channel_id;",
          "11797:     num_items = nbap_private_data->num_items;",
          "11799:         nbap_edch_channel_info[nbap_private_data->e_dch_macdflow_id].lchId[num_items-1] = nbap_private_data->logical_channel_id;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "12226: static int",
          "12227: dissect_nbap_MAC_PDU_SizeExtended(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12229: guint32 hsdsch_macdflow_id;",
          "12230: nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "12232:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "12233:                                                             1U, 1504U, NULL, TRUE);",
          "12236:     if(nbap_hsdsch_channel_info[hsdsch_macdflow_id].crnc_port != 0){",
          "12237:             nbap_hsdsch_channel_info[hsdsch_macdflow_id].entity = ehs;",
          "12238:     }",
          "",
          "[Removed Lines]",
          "12228: #line 2090 \"./asn1/nbap/nbap.cnf\"",
          "12231: nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "12235:     hsdsch_macdflow_id = private_data_get_hsdsch_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "11810: #line 2086 \"./asn1/nbap/nbap.cnf\"",
          "11813: nbap_hsdsch_channel_info = nbap_get_private_data(actx->pinfo)->nbap_hsdsch_channel_info;",
          "11817:     hsdsch_macdflow_id = nbap_get_private_data(actx->pinfo)->hsdsch_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "12653: static int",
          "12654: dissect_nbap_CommonMACFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12656:     address     dst_addr;",
          "12657:     guint32 transportLayerAddress_ipv4;",
          "12658:     guint16 bindingID;",
          "12659:     guint32 common_macdflow_id;",
          "12663:     nbap_common_channel_info_t* nbap_common_channel_info;",
          "12666:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "12667:                                    ett_nbap_CommonMACFlow_Specific_InfoItem, CommonMACFlow_Specific_InfoItem_sequence);",
          "12672:     if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "12673:         return offset;",
          "12674:     }",
          "",
          "[Removed Lines]",
          "12655: #line 2367 \"./asn1/nbap/nbap.cnf\"",
          "12660:     private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "12661:     private_data_set_binding_id_port(actx->pinfo, 0);",
          "12662:     private_data_increment_num_items(actx->pinfo);",
          "12664:     nbap_common_channel_info = private_data_get_nbap_common_channel_info(actx->pinfo);",
          "12670:     transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "12671:     bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "12237: #line 2337 \"./asn1/nbap/nbap.cnf\"",
          "12242:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "12243:     nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "12244:     nbap_private_data->binding_id_port = 0;",
          "12245:     nbap_private_data->num_items++;",
          "12247:     nbap_common_channel_info = nbap_private_data->nbap_common_channel_info;",
          "12253:     transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "12254:     bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "12676:     set_address(&dst_addr, AT_IPv4, 4, &transportLayerAddress_ipv4);",
          "12680:     copy_address_wmem(actx->pinfo->pool,&(nbap_common_channel_info[common_macdflow_id].crnc_address),&dst_addr);",
          "",
          "[Removed Lines]",
          "12679:     common_macdflow_id = private_data_get_common_macdflow_id(actx->pinfo);",
          "12681:     nbap_common_channel_info[common_macdflow_id].crnc_port = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "12262:     common_macdflow_id = nbap_private_data->common_macdflow_id;",
          "12264:     nbap_common_channel_info[common_macdflow_id].crnc_port = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "12705: static int",
          "12706: dissect_nbap_MACdPDU_Size(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "12708: guint32 mac_d_pdu_size;",
          "12709: guint num_items;",
          "12710: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "12712:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "12713:                                                             1U, 5000U, &mac_d_pdu_size, TRUE);",
          "12717:     if (actx->pinfo->fd->flags.visited)",
          "12718:     {",
          "12719:         return offset;",
          "12720:     }",
          "12722:     if(num_items>0)",
          "",
          "[Removed Lines]",
          "12707: #line 1956 \"./asn1/nbap/nbap.cnf\"",
          "12711: nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "12716:     private_data_set_mac_d_pdu_size(actx->pinfo, mac_d_pdu_size);",
          "12721:     num_items = private_data_get_num_items(actx->pinfo);",
          "12723:         nbap_edch_channel_info[private_data_get_e_dch_macdflow_id(actx->pinfo)].edch_macd_pdu_size[num_items-1] = private_data_get_mac_d_pdu_size(actx->pinfo);",
          "",
          "[Added Lines]",
          "12290: #line 1946 \"./asn1/nbap/nbap.cnf\"",
          "12294: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "12295: nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "12300:     nbap_private_data->mac_d_pdu_size = mac_d_pdu_size;",
          "12305:     num_items = nbap_private_data->num_items;",
          "12307:         nbap_edch_channel_info[nbap_private_data->e_dch_macdflow_id].edch_macd_pdu_size[num_items-1] = nbap_private_data->mac_d_pdu_size;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "13018: static int",
          "13019: dissect_nbap_CommonTransportChannel_InformationResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "13021: address dst_addr;",
          "13022: nbap_setup_conv_t *request_conv;",
          "13023: conversation_t *conv;",
          "13024: guint32 transportLayerAddress_ipv4;",
          "13025: guint16 bindingID;",
          "13027: nbap_debug(\"Frame %u CommonTransportChannel-InformationResponse Start\", actx->pinfo->num);",
          "13032:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "13033:                                    ett_nbap_CommonTransportChannel_InformationResponse, CommonTransportChannel_InformationResponse_sequence);",
          "13038:   if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "13039:     return offset;",
          "13040:   }",
          "13042:   set_address(&dst_addr, AT_IPv4, 4, &transportLayerAddress_ipv4);",
          "13046:   if(request_conv == NULL){",
          "13047:     return offset;",
          "",
          "[Removed Lines]",
          "13020: #line 184 \"./asn1/nbap/nbap.cnf\"",
          "13029: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "13030: private_data_set_binding_id_port(actx->pinfo, 0);",
          "13036:   transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "13037:   bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "13044:   request_conv = find_setup_conv(private_data_get_transaction_id(actx->pinfo),private_data_get_dd_mode(actx->pinfo),private_data_get_common_transport_channel_id(actx->pinfo));",
          "",
          "[Added Lines]",
          "12604: #line 176 \"./asn1/nbap/nbap.cnf\"",
          "12610: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "12614: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "12615: nbap_private_data->binding_id_port = 0;",
          "12621:   transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "12622:   bindingID = nbap_private_data->binding_id_port;",
          "12629:   request_conv = find_setup_conv(nbap_private_data->transaction_id,nbap_private_data->dd_mode,nbap_private_data->common_transport_channel_id);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "13973: static int",
          "13974: dissect_nbap_CRNC_CommunicationContextID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "13976: guint32 com_context_id;",
          "13977:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "13978:                                                             0U, 1048575U, &com_context_id, FALSE);",
          "",
          "[Removed Lines]",
          "13975: #line 2485 \"./asn1/nbap/nbap.cnf\"",
          "13980: private_data_set_com_context_id(actx->pinfo, com_context_id);",
          "13981: private_data_set_crnc_context_present(actx->pinfo, TRUE);",
          "",
          "[Added Lines]",
          "13560: #line 2456 \"./asn1/nbap/nbap.cnf\"",
          "13565: nbap_get_private_data(actx->pinfo)->com_context_id = com_context_id;",
          "13566: nbap_get_private_data(actx->pinfo)->crnc_context_present = TRUE;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "15360: static int",
          "15361: dissect_nbap_DCH_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "15364:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "15371:   return offset;",
          "15372: }",
          "",
          "[Removed Lines]",
          "15362: #line 895 \"./asn1/nbap/nbap.cnf\"",
          "15363:   guint32 t_dch_id;",
          "15365:                                                             0U, 255U, &t_dch_id, FALSE);",
          "15367:   private_data_set_t_dch_id(actx->pinfo, t_dch_id);",
          "",
          "[Added Lines]",
          "14948:                                                             0U, 255U, &nbap_get_private_data(actx->pinfo)->t_dch_id, FALSE);",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "15412: static int",
          "15413: dissect_nbap_T_dCH_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "15415:   guint32 dch_id;",
          "15416:   gint num_dch_in_flow;",
          "15417:   nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "15419:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "15420:                                                             0U, 255U, &dch_id, FALSE);",
          "15424:   if(num_dch_in_flow>0){",
          "15426:       nbap_dch_chnl_info[dch_id].next_dch = 0;",
          "15427:       if(prev_dch_id != 0 && prev_dch_id != 0xffffffff && prev_dch_id != dch_id){",
          "15428:           nbap_dch_chnl_info[prev_dch_id].next_dch = dch_id;",
          "",
          "[Removed Lines]",
          "15414: #line 900 \"./asn1/nbap/nbap.cnf\"",
          "15418:   nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "15422:   num_dch_in_flow = private_data_get_num_dch_in_flow(actx->pinfo);",
          "15423:   private_data_set_dch_id(actx->pinfo, dch_id);",
          "15425:       guint32 prev_dch_id = private_data_get_prev_dch_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "14993: #line 883 \"./asn1/nbap/nbap.cnf\"",
          "14997:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "14998:   nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "15002:   num_dch_in_flow = nbap_private_data->num_dch_in_flow;",
          "15003:   nbap_private_data->dch_id = dch_id;",
          "15005:       guint32 prev_dch_id = nbap_private_data->prev_dch_id;",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "15439: static int",
          "15440: dissect_nbap_TransportFormatSet_NrOfTransportBlocks(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "15442: guint32 NrOfTransportBlocks;",
          "15443: guint num_items;",
          "15444: guint32 dch_id;",
          "15445: guint32 common_physical_channel_id;",
          "15446: guint32 common_transport_channel_id;",
          "15447: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "15450:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "15451:                                                             0U, 512U, &NrOfTransportBlocks, FALSE);",
          "15457:         if (num_items > 0 && dch_id != 0xffffffff) {",
          "15461:                 case NBAP_DCH_UL:",
          "15462:                     nbap_dch_chnl_info[dch_id].num_ul_chans++;",
          "15463:                     nbap_dch_chnl_info[dch_id].ul_chan_num_tbs[num_items-1] = NrOfTransportBlocks;",
          "",
          "[Removed Lines]",
          "15441: #line 1357 \"./asn1/nbap/nbap.cnf\"",
          "15448: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "15454:     if(private_data_get_num_items(actx->pinfo)>0){",
          "15455:         num_items = private_data_get_num_items(actx->pinfo);",
          "15456:         dch_id = private_data_get_dch_id(actx->pinfo);",
          "15458:             common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
          "15459:             common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
          "15460:             switch(private_data_get_transport_format_set_type(actx->pinfo)){",
          "",
          "[Added Lines]",
          "15021: #line 1349 \"./asn1/nbap/nbap.cnf\"",
          "15028: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "15029: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "15035:     if(nbap_private_data->num_items>0){",
          "15036:         num_items = nbap_private_data->num_items;",
          "15037:         dch_id = nbap_private_data->dch_id;",
          "15039:             common_physical_channel_id = nbap_private_data->common_physical_channel_id;",
          "15040:             common_transport_channel_id = nbap_private_data->common_transport_channel_id;",
          "15041:             switch(nbap_private_data->transport_format_set_type){",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "15494: static int",
          "15495: dissect_nbap_TransportFormatSet_TransportBlockSize(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "15497: guint32 TransportBlockSize;",
          "15498: guint num_items;",
          "15499: guint32 dch_id;",
          "15500: guint32 common_physical_channel_id;",
          "15501: guint32 common_transport_channel_id;",
          "15502: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "15505:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "15506:                                                             0U, 5000U, &TransportBlockSize, FALSE);",
          "15512:         if (num_items > 0 && dch_id != 0xffffffff) {",
          "15516:                 case NBAP_DCH_UL:",
          "15517:                     nbap_dch_chnl_info[dch_id].ul_chan_tf_size[num_items-1] = TransportBlockSize;",
          "15518:                     break;",
          "",
          "[Removed Lines]",
          "15496: #line 1401 \"./asn1/nbap/nbap.cnf\"",
          "15503: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "15509:     if(private_data_get_num_items(actx->pinfo)>0){",
          "15510:         num_items = private_data_get_num_items(actx->pinfo);",
          "15511:         dch_id = private_data_get_dch_id(actx->pinfo);",
          "15513:             common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
          "15514:             common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
          "15515:             switch(private_data_get_transport_format_set_type(actx->pinfo)){",
          "",
          "[Added Lines]",
          "15077: #line 1394 \"./asn1/nbap/nbap.cnf\"",
          "15084: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "15085: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "15091:     if(nbap_private_data->num_items>0){",
          "15092:         num_items = nbap_private_data->num_items;",
          "15093:         dch_id = nbap_private_data->dch_id;",
          "15095:             common_physical_channel_id = nbap_private_data->common_physical_channel_id;",
          "15096:             common_transport_channel_id = nbap_private_data->common_transport_channel_id;",
          "15097:             switch(nbap_private_data->transport_format_set_type){",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "15634: static int",
          "15635: dissect_nbap_TransportFormatSet_DynamicPartList_item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "15636: #line 1353 \"./asn1/nbap/nbap.cnf\"",
          "15637:     private_data_increment_num_items(actx->pinfo);",
          "",
          "[Added Lines]",
          "15218: #line 1345 \"./asn1/nbap/nbap.cnf\"",
          "15219:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "15652: static int",
          "15653: dissect_nbap_TransportFormatSet_DynamicPartList(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "15658:   offset = dissect_per_constrained_sequence_of(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "15654: #line 1350 \"./asn1/nbap/nbap.cnf\"",
          "15655:     private_data_set_num_items(actx->pinfo, 0);",
          "",
          "[Added Lines]",
          "15236: #line 1342 \"./asn1/nbap/nbap.cnf\"",
          "15237:     nbap_get_private_data(actx->pinfo)->num_items = 0;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "15823: static int",
          "15824: dissect_nbap_T_ul_TransportFormatSet(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "15827:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "15830:     if (dch_id != 0xffffffff) {",
          "15831:         nbap_dch_chnl_info[dch_id].num_ul_chans = 0;",
          "15832:     }",
          "",
          "[Removed Lines]",
          "15825: #line 1306 \"./asn1/nbap/nbap.cnf\"",
          "15826:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
          "15828:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "15829:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_UL);",
          "",
          "[Added Lines]",
          "15407: #line 1293 \"./asn1/nbap/nbap.cnf\"",
          "15408:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "15409:     guint32 dch_id = nbap_private_data->dch_id;",
          "15411:     nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "15412:     nbap_private_data->transport_format_set_type = NBAP_DCH_UL;",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "15842: static int",
          "15843: dissect_nbap_T_dl_TransportFormatSet(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "15846:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "15849:     if (dch_id != 0xffffffff) {",
          "15850:         nbap_dch_chnl_info[dch_id].num_dl_chans = 0;",
          "15851:     }",
          "",
          "[Removed Lines]",
          "15844: #line 1315 \"./asn1/nbap/nbap.cnf\"",
          "15845:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
          "15847:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "15848:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_DL);",
          "",
          "[Added Lines]",
          "15427: #line 1303 \"./asn1/nbap/nbap.cnf\"",
          "15428:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "15429:     guint32 dch_id = nbap_private_data->dch_id;",
          "15431:     nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "15432:     nbap_private_data->transport_format_set_type = NBAP_DCH_DL;",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "15897: static int",
          "15898: dissect_nbap_DCH_Specific_FDD_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "15903:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "15904:                                    ett_nbap_DCH_Specific_FDD_Item, DCH_Specific_FDD_Item_sequence);",
          "15910:   return offset;",
          "",
          "[Removed Lines]",
          "15899: #line 1300 \"./asn1/nbap/nbap.cnf\"",
          "15900:     private_data_increment_num_dch_in_flow(actx->pinfo);",
          "15906: #line 1303 \"./asn1/nbap/nbap.cnf\"",
          "15907:     private_data_set_prev_dch_id(actx->pinfo,private_data_get_dch_id(actx->pinfo));",
          "",
          "[Added Lines]",
          "15483: #line 1287 \"./asn1/nbap/nbap.cnf\"",
          "15484:     nbap_get_private_data(actx->pinfo)->num_dch_in_flow++;",
          "15490: #line 1290 \"./asn1/nbap/nbap.cnf\"",
          "15491:     nbap_get_private_data(actx->pinfo)->prev_dch_id = nbap_get_private_data(actx->pinfo)->dch_id;",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "15918: static int",
          "15919: dissect_nbap_DCH_Specific_FDD_InformationList(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "15925:   offset = dissect_per_constrained_sequence_of(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "15920: #line 1296 \"./asn1/nbap/nbap.cnf\"",
          "15921:     private_data_set_num_dch_in_flow(actx->pinfo, 0);",
          "15922:     private_data_set_prev_dch_id(actx->pinfo, 0);",
          "",
          "[Added Lines]",
          "15504: #line 1283 \"./asn1/nbap/nbap.cnf\"",
          "15505:     nbap_get_private_data(actx->pinfo)->num_dch_in_flow = 0;",
          "15506:     nbap_get_private_data(actx->pinfo)->prev_dch_id = 0;",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "16197: static int",
          "16198: dissect_nbap_T_dCH_ID_01(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "16201:   offset = dissect_nbap_DCH_ID(tvb, offset, actx, tree, hf_index);",
          "16207:   return offset;",
          "",
          "[Removed Lines]",
          "16199: #line 918 \"./asn1/nbap/nbap.cnf\"",
          "16203:     private_data_set_dch_id(actx->pinfo, private_data_get_t_dch_id(actx->pinfo));",
          "",
          "[Added Lines]",
          "15785: #line 902 \"./asn1/nbap/nbap.cnf\"",
          "15786:     nbap_get_private_data(actx->pinfo)->dch_id = nbap_get_private_data(actx->pinfo)->t_dch_id;",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "16212: static int",
          "16213: dissect_nbap_T_ul_TransportFormatSet_01(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "16216:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "16219:     if (dch_id != 0xffffffff) {",
          "16220:         nbap_dch_chnl_info[dch_id].num_ul_chans = 0;",
          "16221:     }",
          "",
          "[Removed Lines]",
          "16214: #line 1324 \"./asn1/nbap/nbap.cnf\"",
          "16215:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
          "16217:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "16218:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_UL);",
          "",
          "[Added Lines]",
          "15796: #line 1313 \"./asn1/nbap/nbap.cnf\"",
          "15797:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "15798:     guint32 dch_id = nbap_private_data->dch_id;",
          "15800:     nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "15801:     nbap_private_data->transport_format_set_type = NBAP_DCH_UL;",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "16231: static int",
          "16232: dissect_nbap_T_dl_TransportFormatSet_01(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "16235:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "16238:     if (dch_id != 0xffffffff) {",
          "16239:         nbap_dch_chnl_info[dch_id].num_dl_chans = 0;",
          "16240:     }",
          "",
          "[Removed Lines]",
          "16233: #line 1333 \"./asn1/nbap/nbap.cnf\"",
          "16234:     guint32 dch_id = private_data_get_dch_id(actx->pinfo);",
          "16236:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "16237:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_DCH_DL);",
          "",
          "[Added Lines]",
          "15816: #line 1323 \"./asn1/nbap/nbap.cnf\"",
          "15817:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "15818:     guint32 dch_id = nbap_private_data->dch_id;",
          "15820:     nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "15821:     nbap_private_data->transport_format_set_type = NBAP_DCH_DL;",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "16292: static int",
          "16293: dissect_nbap_FDD_DCHs_to_ModifyItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "16296:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "16297:                                    ett_nbap_FDD_DCHs_to_ModifyItem, FDD_DCHs_to_ModifyItem_sequence);",
          "16304:   return offset;",
          "16305: }",
          "",
          "[Removed Lines]",
          "16294: #line 1440 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "18714: static int",
          "18715: dissect_nbap_E_DCH_DDI_Value(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18717:   guint32 e_dch_ddi_value;",
          "18718:   guint num_items;",
          "18719:   nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "18721:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "18722:                                                             0U, 62U, &e_dch_ddi_value, FALSE);",
          "18726:   if (actx->pinfo->fd->flags.visited)",
          "18727:   {",
          "18728:       return offset;",
          "18729:   }",
          "18731:   if(num_items>0)",
          "",
          "[Removed Lines]",
          "18716: #line 1940 \"./asn1/nbap/nbap.cnf\"",
          "18720:   nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "18725:   private_data_set_e_dch_ddi_value(actx->pinfo, e_dch_ddi_value);",
          "18730:   num_items = private_data_get_num_items(actx->pinfo);",
          "18732:       nbap_edch_channel_info[private_data_get_e_dch_macdflow_id(actx->pinfo)].edch_ddi[num_items-1] = private_data_get_e_dch_ddi_value(actx->pinfo);",
          "",
          "[Added Lines]",
          "18293: #line 1929 \"./asn1/nbap/nbap.cnf\"",
          "18297:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "18298:   nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "18303:   nbap_private_data->e_dch_ddi_value = e_dch_ddi_value;",
          "18308:   num_items = nbap_private_data->num_items;",
          "18310:       nbap_edch_channel_info[nbap_private_data->e_dch_macdflow_id].edch_ddi[num_items-1] = nbap_private_data->e_dch_ddi_value;",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "18854: static int",
          "18855: dissect_nbap_E_DCH_LogicalChannelInformationItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18860:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "18856: #line 1937 \"./asn1/nbap/nbap.cnf\"",
          "18857:     private_data_increment_num_items(actx->pinfo);",
          "",
          "[Added Lines]",
          "18434: #line 1926 \"./asn1/nbap/nbap.cnf\"",
          "18435:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "18871: static int",
          "18872: dissect_nbap_E_DCH_LogicalChannelInformation(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18875:     nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "18878:   offset = dissect_per_constrained_sequence_of(tvb, offset, actx, tree, hf_index,",
          "18879:                                                   ett_nbap_E_DCH_LogicalChannelInformation, E_DCH_LogicalChannelInformation_sequence_of,",
          "18880:                                                   1, maxNoOfLogicalChannels, FALSE);",
          "",
          "[Removed Lines]",
          "18873: #line 1928 \"./asn1/nbap/nbap.cnf\"",
          "18874:     private_data_set_num_items(actx->pinfo, 0);",
          "18876:     nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "18883: nbap_edch_channel_info[private_data_get_e_dch_macdflow_id(actx->pinfo)].no_ddi_entries = private_data_get_num_items(actx->pinfo);",
          "",
          "[Added Lines]",
          "18451: #line 1916 \"./asn1/nbap/nbap.cnf\"",
          "18452:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "18453:     nbap_private_data->num_items = 0;",
          "18455:     nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "18462: nbap_edch_channel_info[nbap_private_data->e_dch_macdflow_id].no_ddi_entries = nbap_private_data->num_items;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "18906: static int",
          "18907: dissect_nbap_E_DCH_MACdFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "18909: umts_fp_conversation_info_t *p_conv_data = NULL;",
          "18910: fp_edch_channel_info_t* fp_edch_channel_info = NULL;",
          "18911: address     null_addr;",
          "",
          "[Removed Lines]",
          "18908: #line 1686 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18487: #line 1673 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "18913: guint32 no_ddi_entries, i;",
          "18914: guint32 e_dch_macdflow_id;",
          "18915: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "18918:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "18919:                                    ett_nbap_E_DCH_MACdFlow_Specific_InfoItem, E_DCH_MACdFlow_Specific_InfoItem_sequence);",
          "",
          "[Removed Lines]",
          "18916: nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "",
          "[Added Lines]",
          "18495: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "18496: nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "18924:     }",
          "18928:     clear_address(&null_addr);",
          "18929:     p_conv = find_conversation(actx->pinfo->num, &nbap_edch_channel_info[e_dch_macdflow_id].crnc_address, &null_addr,",
          "18930:                                ENDPOINT_UDP, nbap_edch_channel_info[e_dch_macdflow_id].crnc_port, 0, NO_ADDR_B);",
          "",
          "[Removed Lines]",
          "18927:     e_dch_macdflow_id = private_data_get_e_dch_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "18507:     e_dch_macdflow_id = nbap_private_data->e_dch_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "18948:         fp_edch_channel_info->edch_lchId[i]          =  nbap_edch_channel_info[e_dch_macdflow_id].lchId[i];",
          "18949:     }",
          "18956:     }else{",
          "",
          "[Removed Lines]",
          "18951:     p_conv_data->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "18954:     if( 0 == private_data_get_e_dch_ddi_value(actx->pinfo) ){",
          "",
          "[Added Lines]",
          "18531:     p_conv_data->dch_crc_present = nbap_private_data->dch_crc_present;",
          "18534:     if( 0 == nbap_private_data->e_dch_ddi_value ){",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "18959:     }",
          "18961:     p_conv_data->num_dch_in_flow = 1;",
          "",
          "[Removed Lines]",
          "18962:     p_conv_data->dch_ids_in_flow_list[0] = private_data_get_e_dch_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "18542:     p_conv_data->dch_ids_in_flow_list[0] = nbap_private_data->e_dch_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "19091: static int",
          "19092: dissect_nbap_E_DCH_LogicalChannelToModifyItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "19095:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "19096:                                    ett_nbap_E_DCH_LogicalChannelToModifyItem, E_DCH_LogicalChannelToModifyItem_sequence);",
          "19102:   return offset;",
          "",
          "[Removed Lines]",
          "19093: #line 1923 \"./asn1/nbap/nbap.cnf\"",
          "19098: private_data_increment_num_items(actx->pinfo);",
          "",
          "[Added Lines]",
          "18676: #line 1913 \"./asn1/nbap/nbap.cnf\"",
          "18677:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "19166: static int",
          "19167: dissect_nbap_E_DCH_MACdFlow_Specific_InfoItem_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "19169: guint32 no_ddi_entries, i;",
          "19170: address     null_addr;",
          "19171: nbap_edch_port_info_t *old_info;",
          "",
          "[Removed Lines]",
          "19168: #line 1836 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18746: #line 1825 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "19174: conversation_t   *p_conv;",
          "19175: guint32 e_dch_macdflow_id;",
          "19176: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "19180:    offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "19181:                                    ett_nbap_E_DCH_MACdFlow_Specific_InfoItem_to_Modify, E_DCH_MACdFlow_Specific_InfoItem_to_Modify_sequence);",
          "",
          "[Removed Lines]",
          "19177: nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "19179: private_data_set_num_items(actx->pinfo, 1);",
          "",
          "[Added Lines]",
          "18755: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "18756: nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "18758: nbap_private_data->num_items = 1;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "19196:     }else{",
          "19197:         expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "19198:     }",
          "19202:         expert_add_info(actx->pinfo, NULL, &ei_nbap_no_find_port_info);",
          "19203:         return offset;",
          "19204:     }",
          "",
          "[Removed Lines]",
          "19194:     if(private_data_get_crnc_context_present(actx->pinfo)){",
          "19201:     if(( old_info = (nbap_edch_port_info_t *)wmem_tree_lookup32(edch_flow_port_map,private_data_get_com_context_id(actx->pinfo))) == NULL ){",
          "19205:     nbap_debug(\"    Found com_context_id %u\",private_data_get_com_context_id(actx->pinfo));",
          "19208:     e_dch_macdflow_id = private_data_get_e_dch_macdflow_id(actx->pinfo);",
          "19209:     private_data_set_binding_id_port(actx->pinfo, old_info->crnc_port[e_dch_macdflow_id]);",
          "19211:     nbap_debug(\" Port %u loaded from old_info->crnc_port[e_dch_macdflow_id %u]\",private_data_get_binding_id_port(actx->pinfo), e_dch_macdflow_id);",
          "19214:     private_data_set_transportLayerAddress_ipv4(actx->pinfo, old_info->crnc_address);",
          "",
          "[Added Lines]",
          "18773:     if(nbap_private_data->crnc_context_present){",
          "18780:     if(( old_info = (nbap_edch_port_info_t *)wmem_tree_lookup32(edch_flow_port_map,nbap_private_data->com_context_id)) == NULL ){",
          "18784:     nbap_debug(\"    Found com_context_id %u\",nbap_private_data->com_context_id);",
          "18787:     e_dch_macdflow_id = nbap_private_data->e_dch_macdflow_id;",
          "18788:     nbap_private_data->binding_id_port = old_info->crnc_port[e_dch_macdflow_id];",
          "18790:     nbap_debug(\" Port %u loaded from old_info->crnc_port[e_dch_macdflow_id %u]\",nbap_private_data->binding_id_port, e_dch_macdflow_id);",
          "18793:     nbap_private_data->transportLayerAddress_ipv4 = old_info->crnc_address;",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "19238:         fp_edch_channel_info->edch_lchId[i]          =  nbap_edch_channel_info[e_dch_macdflow_id].lchId[i];",
          "19239:     }",
          "19246:     }else{",
          "",
          "[Removed Lines]",
          "19241:     p_conv_data->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "19244:     if( 0 == private_data_get_e_dch_ddi_value(actx->pinfo) ){",
          "",
          "[Added Lines]",
          "18820:     p_conv_data->dch_crc_present = nbap_private_data->dch_crc_present;",
          "18823:     if( 0 == nbap_private_data->e_dch_ddi_value ){",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "19303: static int",
          "19304: dissect_nbap_E_DCH_FDD_Information_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "19307: address     dst_addr, null_addr;",
          "19308: conversation_t *conversation,*old_conversation = NULL;",
          "",
          "[Removed Lines]",
          "19305: #line 1741 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "18884: #line 1729 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "19313: guint16 bindingID;",
          "19314: guint32 e_dch_macdflow_id;",
          "19315: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "19321:    offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "19322:                                    ett_nbap_E_DCH_FDD_Information_to_Modify, E_DCH_FDD_Information_to_Modify_sequence);",
          "19327:         if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "19328:             return offset;",
          "19329:         }",
          "",
          "[Removed Lines]",
          "19316: nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "19318: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "19319: private_data_set_binding_id_port(actx->pinfo, 0);",
          "19325:         transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "19326:         bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "18895: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "18896: nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "18898: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "18899: nbap_private_data->binding_id_port = 0;",
          "18905:         transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "18906:         bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "19379:                 fp_edch_channel_info = wmem_new0(wmem_file_scope(), fp_edch_channel_info_t);",
          "19380:                 umts_fp_conversation_info->channel_specific_info = (void*)fp_edch_channel_info;",
          "19384:                 }else{",
          "19385:                     expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "19386:                 }",
          "19390:                 copy_address_wmem(actx->pinfo->pool,&(nbap_edch_channel_info[e_dch_macdflow_id].crnc_address),&dst_addr);",
          "19391:                 nbap_edch_channel_info[e_dch_macdflow_id].crnc_port = bindingID;",
          "",
          "[Removed Lines]",
          "19382:                 if(private_data_get_crnc_context_present(actx->pinfo)){",
          "19383:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "19389:                 e_dch_macdflow_id = private_data_get_e_dch_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "18962:                 if(nbap_private_data->crnc_context_present){",
          "18963:                     umts_fp_conversation_info->com_context_id = nbap_private_data->com_context_id;",
          "18969:                 e_dch_macdflow_id = nbap_private_data->e_dch_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "23897: static int",
          "23898: dissect_nbap_PICH_Mode(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "23900: guint32 PICH_Mode = 0;",
          "23901:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
          "23902:                                      4, &PICH_Mode, TRUE, 0, NULL);",
          "",
          "[Removed Lines]",
          "23899: #line 1064 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23479: #line 1049 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "23905:     switch(PICH_Mode){",
          "23908:             break;",
          "23911:             break;",
          "23914:             break;",
          "23917:             break;",
          "23918:     }",
          "",
          "[Removed Lines]",
          "23907:             private_data_set_paging_indications(actx->pinfo, 18);",
          "23910:             private_data_set_paging_indications(actx->pinfo, 36);",
          "23913:             private_data_set_paging_indications(actx->pinfo, 72);",
          "23916:             private_data_set_paging_indications(actx->pinfo, 144);",
          "",
          "[Added Lines]",
          "23487:             nbap_get_private_data(actx->pinfo)->paging_indications = 18;",
          "23490:             nbap_get_private_data(actx->pinfo)->paging_indications = 36;",
          "23493:             nbap_get_private_data(actx->pinfo)->paging_indications = 72;",
          "23496:             nbap_get_private_data(actx->pinfo)->paging_indications = 144;",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "24012: static int",
          "24013: dissect_nbap_HSDSCH_Common_System_InformationFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "24014: #line 2394 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "23594: #line 2365 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "24027: address     null_addr;",
          "24028: conversation_t   *conversation = NULL;",
          "24029: nbap_common_channel_info_t* nbap_common_channel_info;",
          "24032: int i;",
          "",
          "[Removed Lines]",
          "24030: nbap_common_channel_info = private_data_get_nbap_common_channel_info(actx->pinfo);",
          "",
          "[Added Lines]",
          "23610: nbap_common_channel_info = nbap_get_private_data(actx->pinfo)->nbap_common_channel_info;",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "24078:                 fp_hsdsch_channel_info = wmem_new0(wmem_file_scope(), fp_hsdsch_channel_info_t);",
          "24079:                 umts_fp_conversation_info->channel_specific_info = (void*)fp_hsdsch_channel_info;",
          "24081:                 fp_hsdsch_channel_info->hsdsch_entity = ehs;",
          "",
          "[Removed Lines]",
          "24080:                 fp_hsdsch_channel_info->common_macdflow_id = private_data_get_common_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "23660:                 fp_hsdsch_channel_info->common_macdflow_id = nbap_get_private_data(actx->pinfo)->common_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "24159: static int",
          "24160: dissect_nbap_HSDSCH_MACdFlow_ID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24162:   guint32 hsdsch_macdflow_id;",
          "24163:   guint num_items;",
          "24164:   gint* hsdsch_macdflow_ids;",
          "24165:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "24166:                                                             0U, maxNrOfMACdFlows_1, &hsdsch_macdflow_id, FALSE);",
          "24171: DISSECTOR_ASSERT(num_items < maxNrOfMACdFlows+1);",
          "24172: DISSECTOR_ASSERT(num_items > 0);",
          "24175: hsdsch_macdflow_ids[num_items-1] = hsdsch_macdflow_id;",
          "",
          "[Removed Lines]",
          "24161: #line 946 \"./asn1/nbap/nbap.cnf\"",
          "24168:   private_data_set_hsdsch_macdflow_id(actx->pinfo, hsdsch_macdflow_id);",
          "24170:   num_items = private_data_get_num_items(actx->pinfo);",
          "24174: hsdsch_macdflow_ids = private_data_get_hsdsch_macdflow_ids(actx->pinfo);",
          "",
          "[Added Lines]",
          "23741: #line 927 \"./asn1/nbap/nbap.cnf\"",
          "23745:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "23749:   nbap_private_data->hsdsch_macdflow_id = hsdsch_macdflow_id;",
          "23751:   num_items = nbap_private_data->num_items;",
          "23755: hsdsch_macdflow_ids = nbap_private_data->hsdsch_macdflow_ids;",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "24192: static int",
          "24193: dissect_nbap_HSDSCH_MACdFlow_Specific_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24195:     address     dst_addr;",
          "24196:     guint32 transportLayerAddress_ipv4;",
          "24197:     guint16 bindingID;",
          "24198:     guint32 hsdsch_macdflow_id;",
          "24199:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "24205:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "24206:                                    ett_nbap_HSDSCH_MACdFlow_Specific_InfoItem, HSDSCH_MACdFlow_Specific_InfoItem_sequence);",
          "24212:     if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "24213:         return offset;",
          "24214:     }",
          "",
          "[Removed Lines]",
          "24194: #line 2062 \"./asn1/nbap/nbap.cnf\"",
          "24200:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "24202:     private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "24203:     private_data_set_binding_id_port(actx->pinfo, 0);",
          "24204:     private_data_increment_num_items(actx->pinfo);",
          "24210:     transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "24211:     bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "23775: #line 2057 \"./asn1/nbap/nbap.cnf\"",
          "23780:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "23782:     nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "23784:     nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "23785:     nbap_private_data->binding_id_port = 0;",
          "23786:     nbap_private_data->num_items++;",
          "23792:     transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "23793:     bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "24216:     set_address(&dst_addr, AT_IPv4, 4, &transportLayerAddress_ipv4);",
          "24220:     copy_address_wmem(actx->pinfo->pool,&(nbap_hsdsch_channel_info[hsdsch_macdflow_id].crnc_address),&dst_addr);",
          "24221:     nbap_hsdsch_channel_info[hsdsch_macdflow_id].crnc_port = bindingID;",
          "",
          "[Removed Lines]",
          "24219:     hsdsch_macdflow_id = private_data_get_hsdsch_macdflow_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "23801:     hsdsch_macdflow_id = nbap_private_data->hsdsch_macdflow_id;",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "24301: static int",
          "24302: dissect_nbap_RLC_Mode(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24304:     guint32 rlc_mode;",
          "24305:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "24307:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
          "24308:                                      2, &rlc_mode, TRUE, 0, NULL);",
          "24310:     switch(rlc_mode){",
          "24311:         case 0:",
          "24314:             break;",
          "24315:         case 1:",
          "24318:             break;",
          "24319:         default:",
          "24320:             break;",
          "",
          "[Removed Lines]",
          "24303: #line 1985 \"./asn1/nbap/nbap.cnf\"",
          "24306:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "24313:             nbap_hsdsch_channel_info[private_data_get_hsdsch_macdflow_id(actx->pinfo)].rlc_mode = FP_RLC_AM;",
          "24317:             nbap_hsdsch_channel_info[private_data_get_hsdsch_macdflow_id(actx->pinfo)].rlc_mode = FP_RLC_UM;",
          "",
          "[Added Lines]",
          "23885: #line 1977 \"./asn1/nbap/nbap.cnf\"",
          "23888:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "23889:     nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "23896:             nbap_hsdsch_channel_info[nbap_private_data->hsdsch_macdflow_id].rlc_mode = FP_RLC_AM;",
          "23900:             nbap_hsdsch_channel_info[nbap_private_data->hsdsch_macdflow_id].rlc_mode = FP_RLC_UM;",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "24343: static int",
          "24344: dissect_nbap_PriorityQueue_InfoItem(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24349:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "24345: #line 2053 \"./asn1/nbap/nbap.cnf\"",
          "24346:     private_data_increment_num_items(actx->pinfo);",
          "",
          "[Added Lines]",
          "23928: #line 2048 \"./asn1/nbap/nbap.cnf\"",
          "23929:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "24377: static int",
          "24378: dissect_nbap_HSDSCH_MACdFlows_Information(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24380:     int protocol_ie_id;",
          "24381:     guint32 i;",
          "24384:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "",
          "[Removed Lines]",
          "24379: #line 2012 \"./asn1/nbap/nbap.cnf\"",
          "24382:     private_data_set_num_items(actx->pinfo,0);",
          "24383:     protocol_ie_id = private_data_get_protocol_ie_id(actx->pinfo);",
          "24385:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "",
          "[Added Lines]",
          "23962: #line 2006 \"./asn1/nbap/nbap.cnf\"",
          "23965:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "23966:     nbap_private_data->num_items = 0;",
          "23967:     protocol_ie_id = nbap_private_data->protocol_ie_id;",
          "23969:     nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "24422: static int",
          "24423: dissect_nbap_T_hSDSCH_Physical_Layer_Category(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24425:     guint32 hsdsch_physical_layer_category;",
          "24426:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "24429:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "24430:                                                             1U, 64U, &hsdsch_physical_layer_category, TRUE);",
          "",
          "[Removed Lines]",
          "24424: #line 2003 \"./asn1/nbap/nbap.cnf\"",
          "24427:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "24433:     nbap_hsdsch_channel_info[private_data_get_hsdsch_macdflow_id(actx->pinfo)].hsdsch_physical_layer_category = hsdsch_physical_layer_category;",
          "",
          "[Added Lines]",
          "24008: #line 1996 \"./asn1/nbap/nbap.cnf\"",
          "24011:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "24012:     nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "24018:     nbap_hsdsch_channel_info[nbap_private_data->hsdsch_macdflow_id].hsdsch_physical_layer_category = hsdsch_physical_layer_category;",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "24492: static int",
          "24493: dissect_nbap_HSDSCH_FDD_Information(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "24494: #line 2124 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24079: #line 2097 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "24501:     fp_hsdsch_channel_info_t* fp_hsdsch_channel_info = NULL;",
          "24502:     guint32 i;",
          "24503:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "24506:     if (!actx->pinfo->fd->flags.visited){",
          "",
          "[Removed Lines]",
          "24504:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "",
          "[Added Lines]",
          "24089:     nbap_hsdsch_channel_info = nbap_get_private_data(actx->pinfo)->nbap_hsdsch_channel_info;",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "24568:                     umts_fp_conversation_info->num_dch_in_flow++;",
          "",
          "[Removed Lines]",
          "24565:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "24150:                     umts_fp_conversation_info->com_context_id = nbap_get_private_data(actx->pinfo)->com_context_id;",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "24637: static int",
          "24638: dissect_nbap_HSDSCH_MACdFlow_Specific_InfoItem_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24640:     address     dst_addr;",
          "24641:     guint32 transportLayerAddress_ipv4;",
          "24642:     guint16 bindingID;",
          "24646:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "24649:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "24650:                                    ett_nbap_HSDSCH_MACdFlow_Specific_InfoItem_to_Modify, HSDSCH_MACdFlow_Specific_InfoItem_to_Modify_sequence);",
          "24655:     if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "24656:         return offset;",
          "24657:     }",
          "",
          "[Removed Lines]",
          "24639: #line 2221 \"./asn1/nbap/nbap.cnf\"",
          "24643:     private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "24644:     private_data_set_binding_id_port(actx->pinfo, 0);",
          "24645:     private_data_increment_num_items(actx->pinfo);",
          "24647:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "24653:     transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "24654:     bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "24224: #line 2194 \"./asn1/nbap/nbap.cnf\"",
          "24228:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "24229:     nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "24230:     nbap_private_data->binding_id_port = 0;",
          "24231:     nbap_private_data->num_items++;",
          "24233:     nbap_hsdsch_channel_info = nbap_private_data->nbap_hsdsch_channel_info;",
          "24239:     transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "24240:     bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "24659:     set_address(&dst_addr, AT_IPv4, 4, &transportLayerAddress_ipv4);",
          "",
          "[Removed Lines]",
          "24662:     copy_address_wmem(actx->pinfo->pool,&(nbap_hsdsch_channel_info[private_data_get_hsdsch_macdflow_id(actx->pinfo)].crnc_address),&dst_addr);",
          "24663:     nbap_hsdsch_channel_info[private_data_get_hsdsch_macdflow_id(actx->pinfo)].crnc_port = bindingID;",
          "",
          "[Added Lines]",
          "24248:     copy_address_wmem(actx->pinfo->pool,&(nbap_hsdsch_channel_info[nbap_private_data->hsdsch_macdflow_id].crnc_address),&dst_addr);",
          "24249:     nbap_hsdsch_channel_info[nbap_private_data->hsdsch_macdflow_id].crnc_port = bindingID;",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "24700: static int",
          "24701: dissect_nbap_PriorityQueue_InfoItem_to_Add(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24706:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "24702: #line 2056 \"./asn1/nbap/nbap.cnf\"",
          "24703:     private_data_set_num_items(actx->pinfo,1);",
          "",
          "[Added Lines]",
          "24288: #line 2051 \"./asn1/nbap/nbap.cnf\"",
          "24289:     nbap_get_private_data(actx->pinfo)->num_items = 1;",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "24835: static int",
          "24836: dissect_nbap_HSDSCH_Information_to_Modify(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "",
          "[Removed Lines]",
          "24837: #line 2246 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "24423: #line 2220 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "24848:     fp_hsdsch_channel_info_t* fp_hsdsch_channel_info = NULL;",
          "24849:     guint32 i;",
          "24850:     nbap_hsdsch_channel_info_t* nbap_hsdsch_channel_info;",
          "24853:     if (!actx->pinfo->fd->flags.visited){",
          "",
          "[Removed Lines]",
          "24851:     nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(actx->pinfo);",
          "",
          "[Added Lines]",
          "24437:     nbap_hsdsch_channel_info = nbap_get_private_data(actx->pinfo)->nbap_hsdsch_channel_info;",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "24919:                     umts_fp_conversation_info->num_dch_in_flow++;",
          "",
          "[Removed Lines]",
          "24916:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "24502:                     umts_fp_conversation_info->com_context_id = nbap_get_private_data(actx->pinfo)->com_context_id;",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "24965: static int",
          "24966: dissect_nbap_HSDSCH_MACdPDUSizeFormat(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "24980:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
          "24981:                                      2, NULL, FALSE, 0, NULL);",
          "24994:   return offset;",
          "24995: }",
          "",
          "[Removed Lines]",
          "24967: #line 2101 \"./asn1/nbap/nbap.cnf\"",
          "24984:         if (nbap_hsdsch_channel_info[i].crnc_port != 0){",
          "24985:             nbap_hsdsch_channel_info[i].entity = ehs;",
          "24986:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "25076: static int",
          "25077: dissect_nbap_HSDSCH_MACdFlow_Specific_InformationResp_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "25082:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "25078: #line 2059 \"./asn1/nbap/nbap.cnf\"",
          "25079:     private_data_increment_num_items(actx->pinfo);",
          "",
          "[Added Lines]",
          "24640: #line 2054 \"./asn1/nbap/nbap.cnf\"",
          "24641:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "25492: static int",
          "25493: dissect_nbap_HSDSCH_Paging_System_InformationFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "25496:   g_warning(\"HS-DSCH Type 3 NOT Implemented!\");",
          "",
          "[Removed Lines]",
          "25494: #line 2475 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "25056: #line 2446 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "25686: static int",
          "25687: dissect_nbap_HSDSCH_MACdFlows_to_Delete_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "25692:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "25688: #line 2050 \"./asn1/nbap/nbap.cnf\"",
          "25689:     private_data_increment_num_items(actx->pinfo);",
          "",
          "[Added Lines]",
          "25250: #line 2045 \"./asn1/nbap/nbap.cnf\"",
          "25251:     nbap_get_private_data(actx->pinfo)->num_items++;",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "25703: static int",
          "25704: dissect_nbap_HSDSCH_MACdFlows_to_Delete(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "25709:   offset = dissect_per_constrained_sequence_of(tvb, offset, actx, tree, hf_index,",
          "",
          "[Removed Lines]",
          "25705: #line 2045 \"./asn1/nbap/nbap.cnf\"",
          "25706:     private_data_set_num_items(actx->pinfo,0);",
          "",
          "[Added Lines]",
          "25267: #line 2040 \"./asn1/nbap/nbap.cnf\"",
          "25268:     nbap_get_private_data(actx->pinfo)->num_items = 0;",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "27080: static int",
          "27081: dissect_nbap_IB_SG_DATA(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "27083:   tvbuff_t *parameter_tvb=NULL;",
          "27084:   tvbuff_t *final_tvb=NULL;",
          "27085:   proto_item *ti;",
          "",
          "[Removed Lines]",
          "27082: #line 618 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "26644: #line 602 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "27100:   guint32 byte_off = 0;",
          "27101:   guint32 bit_off = 0x80;",
          "27102:   guint32 sources_count;",
          "27104:   offset = dissect_per_bit_string(tvb, offset, actx, tree, hf_index,",
          "27105:                                      NO_BOUND, NO_BOUND, FALSE, &parameter_tvb, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26665:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "27108:   if(!parameter_tvb)",
          "27109:     return offset;",
          "27111:   switch(segment_type) {",
          "27113:       final_tvb = tvb_new_subset_length(parameter_tvb,0,tvb_captured_length (parameter_tvb)-1);",
          "",
          "[Removed Lines]",
          "27110:   segment_type = private_data_get_segment_type(actx->pinfo);",
          "",
          "[Added Lines]",
          "26673:   segment_type = nbap_private_data->segment_type;",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "27123:         return offset;",
          "27124:       }",
          "27126:       if (!list) {",
          "27128:           list = wmem_list_new(wmem_packet_scope());",
          "27130:         }",
          "27131:         else {",
          "27132:           return offset;",
          "",
          "[Removed Lines]",
          "27125:       list = private_data_get_ib_segments(actx->pinfo);",
          "27129:           private_data_set_ib_segments(actx->pinfo,list);",
          "",
          "[Added Lines]",
          "26688:       list = nbap_private_data->ib_segments;",
          "26692:           nbap_private_data->ib_segments = list;",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "27184:     add_new_data_source(actx->pinfo, final_tvb, \"Reassembled Information Block\");",
          "27190:     ti = proto_tree_add_item(tree, hf_nbap_reassembled_information_block, final_tvb, 0, total_byte_size, ENC_NA);",
          "",
          "[Removed Lines]",
          "27187:     private_data_set_ib_segments(actx->pinfo,NULL);",
          "",
          "[Added Lines]",
          "26750:     nbap_private_data->ib_segments = NULL;",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "27194:   }",
          "27196:   subtree = proto_item_add_subtree(ti, ett_nbap_ib_sg_data);",
          "27198:     case 0:",
          "27200:       dissect_rrc_MasterInformationBlock_PDU(final_tvb, actx->pinfo, subtree, NULL);",
          "",
          "[Removed Lines]",
          "27197:   switch(private_data_get_ib_type(actx->pinfo)){",
          "",
          "[Added Lines]",
          "26760:   switch(nbap_private_data->ib_type){",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "27389: static int",
          "27390: dissect_nbap_IB_Type(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "27393:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
          "27400:   return offset;",
          "27401: }",
          "",
          "[Removed Lines]",
          "27391: #line 601 \"./asn1/nbap/nbap.cnf\"",
          "27392:   guint32 ib_type;",
          "27394:                                      26, &ib_type, TRUE, 15, NULL);",
          "27396:   private_data_set_ib_type(actx->pinfo, ib_type);",
          "",
          "[Added Lines]",
          "26955:                                      26, &nbap_get_private_data(actx->pinfo)->ib_type, TRUE, 15, NULL);",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "28982: static int",
          "28983: dissect_nbap_NodeB_CommunicationContextID(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "28985:   gboolean crnc_context_present;",
          "28986:   guint node_b_com_context_id;",
          "28987:   nbap_com_context_id_t *cur_val;",
          "28989:   offset = dissect_per_constrained_integer(tvb, offset, actx, tree, hf_index,",
          "28990:                                                             0U, 1048575U, &node_b_com_context_id, FALSE);",
          "28995:   if(crnc_context_present) {",
          "28997:     if (actx->pinfo->fd->flags.visited){",
          "",
          "[Removed Lines]",
          "28984: #line 2491 \"./asn1/nbap/nbap.cnf\"",
          "28994:   crnc_context_present = private_data_get_crnc_context_present(actx->pinfo);",
          "",
          "[Added Lines]",
          "28541: #line 2462 \"./asn1/nbap/nbap.cnf\"",
          "28545:   nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "28552:   crnc_context_present = nbap_private_data->crnc_context_present;",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "29002:     if(wmem_tree_lookup32(com_context_map, node_b_com_context_id) == NULL) {",
          "29004:        cur_val = wmem_new(wmem_file_scope(), nbap_com_context_id_t);",
          "29006:        cur_val->frame_num = actx->pinfo->num;",
          "29007:        wmem_tree_insert32(com_context_map, node_b_com_context_id, cur_val);",
          "29008:     }",
          "",
          "[Removed Lines]",
          "29005:        cur_val->crnc_context = private_data_get_com_context_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "28563:        cur_val->crnc_context = nbap_private_data->com_context_id;",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "29012:     cur_val = (nbap_com_context_id_t *)wmem_tree_lookup32(com_context_map,node_b_com_context_id);",
          "29013:     if(cur_val != NULL){",
          "29017:     }",
          "29018:   }",
          "",
          "[Removed Lines]",
          "29015:       private_data_set_com_context_id(actx->pinfo,cur_val->crnc_context);",
          "29016:       private_data_set_crnc_context_present(actx->pinfo, TRUE);",
          "",
          "[Added Lines]",
          "28573:       nbap_private_data->com_context_id = cur_val->crnc_context;",
          "28574:       nbap_private_data->crnc_context_present = TRUE;",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "29559: static int",
          "29560: dissect_nbap_T_dCH_id(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "29563:   offset = dissect_nbap_DCH_ID(tvb, offset, actx, tree, hf_index);",
          "29569:   return offset;",
          "",
          "[Removed Lines]",
          "29561: #line 1446 \"./asn1/nbap/nbap.cnf\"",
          "29565:     private_data_set_dch_id(actx->pinfo, private_data_get_t_dch_id(actx->pinfo));",
          "",
          "[Added Lines]",
          "29121: #line 1433 \"./asn1/nbap/nbap.cnf\"",
          "29122:     nbap_get_private_data(actx->pinfo)->dch_id = nbap_get_private_data(actx->pinfo)->t_dch_id;",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "29581: static int",
          "29582: dissect_nbap_RL_Specific_DCH_Info_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "29584: address     dst_addr, null_addr;",
          "29585: conversation_t *conversation = NULL;",
          "29586: umts_fp_conversation_info_t *umts_fp_conversation_info;",
          "",
          "[Removed Lines]",
          "29583: #line 1451 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "29139: #line 1436 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "29589: guint16 bindingID;",
          "29590: guint32 dch_id;",
          "29591: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "29598:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "29599:                                    ett_nbap_RL_Specific_DCH_Info_Item, RL_Specific_DCH_Info_Item_sequence);",
          "29605:         if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "29606:             return offset;",
          "29607:         }",
          "",
          "[Removed Lines]",
          "29592: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "29594: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "29595: private_data_set_binding_id_port(actx->pinfo, 0);",
          "29596: private_data_set_dch_id(actx->pinfo, 0xFFFFFFFF);",
          "29603:         transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "29604:         bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "29148: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "29149: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "29151: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "29152: nbap_private_data->binding_id_port = 0;",
          "29153: nbap_private_data->dch_id = 0xFFFFFFFF;",
          "29160:         transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "29161:         bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "29616:         set_address(&dst_addr, AT_IPv4, 4, &transportLayerAddress_ipv4);",
          "29618:         conversation = find_conversation(actx->pinfo->num, &dst_addr,",
          "29620:             0, NO_ADDR_B|NO_PORT_B);",
          "29622:         if (conversation == NULL) {",
          "29624:             conversation = conversation_new(actx->pinfo->num, &dst_addr,",
          "29626:                 0, NO_ADDR2|NO_PORT2);",
          "",
          "[Removed Lines]",
          "29619:             &null_addr, ENDPOINT_UDP, private_data_get_binding_id_port(actx->pinfo),",
          "29625:                 &null_addr, ENDPOINT_UDP, private_data_get_binding_id_port(actx->pinfo),",
          "",
          "[Added Lines]",
          "29176:             &null_addr, ENDPOINT_UDP, nbap_private_data->binding_id_port,",
          "29182:                 &null_addr, ENDPOINT_UDP, nbap_private_data->binding_id_port,",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "29638:                 umts_fp_conversation_info->ul_frame_number   = actx->pinfo->num;",
          "29639:                 copy_address_wmem(wmem_file_scope(), &(umts_fp_conversation_info->crnc_address), &dst_addr);",
          "29640:                 umts_fp_conversation_info->crnc_port         = bindingID;",
          "29642:                 umts_fp_conversation_info->rlc_mode          = FP_RLC_MODE_UNKNOWN;",
          "29653:                 if (dch_id != 0xffffffff) {",
          "29654:                     umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[dch_id].num_ul_chans;",
          "29655:                     for (j = 0; j < num_tf; j++) {",
          "",
          "[Removed Lines]",
          "29641:                 umts_fp_conversation_info->scrambling_code   = private_data_get_ul_scrambling_code(actx->pinfo);",
          "29645:                 umts_fp_conversation_info->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "29648:                 umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "29652:                 dch_id = private_data_get_dch_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "29198:                 umts_fp_conversation_info->scrambling_code   = nbap_private_data->ul_scrambling_code;",
          "29202:                 umts_fp_conversation_info->dch_crc_present = nbap_private_data->dch_crc_present;",
          "29205:                 umts_fp_conversation_info->com_context_id = nbap_private_data->com_context_id;",
          "29209:                 dch_id = nbap_private_data->dch_id;",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "29733: static int",
          "29734: dissect_nbap_RL_Specific_E_DCH_Information_Item(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "29736: address     dst_addr, null_addr;",
          "29737: conversation_t *conversation;",
          "29738: umts_fp_conversation_info_t *umts_fp_conversation_info = NULL;",
          "",
          "[Removed Lines]",
          "29735: #line 1573 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "29292: #line 1559 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "29742: guint16 bindingID;",
          "29743: guint32 e_dch_macdflow_id;",
          "29744: nbap_edch_channel_info_t* nbap_edch_channel_info;",
          "29751:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "29752:                                    ett_nbap_RL_Specific_E_DCH_Information_Item, RL_Specific_E_DCH_Information_Item_sequence);",
          "29757:         if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "29758:             return offset;",
          "29759:         }",
          "",
          "[Removed Lines]",
          "29745: nbap_edch_channel_info = private_data_get_nbap_edch_channel_info(actx->pinfo);",
          "29747: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "29748: private_data_set_binding_id_port(actx->pinfo, 0);",
          "29755:         transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "29756:         bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "29302: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "29303: nbap_edch_channel_info = nbap_private_data->nbap_edch_channel_info;",
          "29305: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "29306: nbap_private_data->binding_id_port = 0;",
          "29313:         transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "29314:         bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "29799:                 fp_edch_channel_info = wmem_new0(wmem_file_scope(), fp_edch_channel_info_t);",
          "29800:                 umts_fp_conversation_info->channel_specific_info = (void*)fp_edch_channel_info;",
          "29804:                 }else{",
          "29805:                     expert_add_info(actx->pinfo, NULL, &ei_nbap_no_set_comm_context_id);",
          "29806:                 }",
          "29812:                     nbap_edch_port_info_t * nbap_edch_port_info;",
          "29814:                     nbap_edch_port_info = wmem_new0(wmem_file_scope(), nbap_edch_port_info_t);",
          "",
          "[Removed Lines]",
          "29802:                 if(private_data_get_crnc_context_present(actx->pinfo)){",
          "29803:                     umts_fp_conversation_info->com_context_id = private_data_get_com_context_id(actx->pinfo);",
          "29810:                 e_dch_macdflow_id = private_data_get_e_dch_macdflow_id(actx->pinfo);",
          "29811:                 if( (old_info = (nbap_edch_port_info_t *)wmem_tree_lookup32(edch_flow_port_map,private_data_get_com_context_id(actx->pinfo))) == NULL ){",
          "",
          "[Added Lines]",
          "29360:                 if(nbap_private_data->crnc_context_present){",
          "29361:                     umts_fp_conversation_info->com_context_id = nbap_private_data->com_context_id;",
          "29368:                 e_dch_macdflow_id = nbap_private_data->e_dch_macdflow_id;",
          "29369:                 if( (old_info = (nbap_edch_port_info_t *)wmem_tree_lookup32(edch_flow_port_map,nbap_private_data->com_context_id)) == NULL ){",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "29817:                     nbap_edch_port_info->crnc_port[e_dch_macdflow_id] = bindingID;",
          "29821:                     nbap_debug(\"Frame %u RL-Specific-E-DCH-Information-Item Start\",",
          "29822:                         actx->pinfo->num);",
          "",
          "[Removed Lines]",
          "29819:                     nbap_edch_port_info->crnc_address = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "",
          "[Added Lines]",
          "29377:                     nbap_edch_port_info->crnc_address = nbap_private_data->transportLayerAddress_ipv4;",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "30778: static int",
          "30779: dissect_nbap_Segment_Type(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "30782:   offset = dissect_per_enumerated(tvb, offset, actx, tree, hf_index,",
          "30789:   return offset;",
          "30790: }",
          "",
          "[Removed Lines]",
          "30780: #line 606 \"./asn1/nbap/nbap.cnf\"",
          "30781:   guint32 segment_type;",
          "30783:                                      7, &segment_type, TRUE, 0, NULL);",
          "30785:   private_data_set_segment_type(actx->pinfo, segment_type);",
          "",
          "[Added Lines]",
          "30339:                                      7, &nbap_get_private_data(actx->pinfo)->segment_type, TRUE, 0, NULL);",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "33113: static int",
          "33114: dissect_nbap_CommonTransportChannelSetupRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "33116: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonTransportChannelSetupRequest(FDD) \");",
          "33118: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "33115: #line 162 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "32667: #line 154 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "33303: static int",
          "33304: dissect_nbap_FACH_ParametersItem_CTCH_SetupRqstFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "33306: address dst_addr, null_addr;",
          "33307: conversation_t *conversation;",
          "",
          "[Removed Lines]",
          "33305: #line 1196 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "32857: #line 1182 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "33313: guint16 bindingID;",
          "33314: guint32 common_physical_channel_id;",
          "33315: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "33324:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "33325:                                    ett_nbap_FACH_ParametersItem_CTCH_SetupRqstFDD, FACH_ParametersItem_CTCH_SetupRqstFDD_sequence);",
          "33330:   if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "33331:     return offset;",
          "33332:   }",
          "",
          "[Removed Lines]",
          "33316: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "33318: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "33319: private_data_set_binding_id_port(actx->pinfo, 0);",
          "33322: private_data_set_transport_format_set_type(actx->pinfo, NBAP_CPCH);",
          "33328:   transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "33329:   bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "32868: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "32869: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "32871: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "32872: nbap_private_data->binding_id_port = 0;",
          "32875: nbap_private_data->transport_format_set_type = NBAP_CPCH;",
          "32881:   transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "32882:   bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "33351:     umts_fp_conversation_info->crnc_port         = bindingID;",
          "33352:     umts_fp_conversation_info->rlc_mode          = FP_RLC_MODE_UNKNOWN;",
          "33357:     fp_fach_channel_info = wmem_new0(wmem_file_scope(), fp_fach_channel_info_t);",
          "",
          "[Removed Lines]",
          "33354:     umts_fp_conversation_info->com_context_id = private_data_get_crnc_context_present(actx->pinfo) ? private_data_get_com_context_id(actx->pinfo) : 1;",
          "",
          "[Added Lines]",
          "32907:     umts_fp_conversation_info->com_context_id = nbap_private_data->crnc_context_present ? nbap_private_data->com_context_id : 1;",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "33359:     umts_fp_conversation_info->channel_specific_info = (void*)fp_fach_channel_info;",
          "33365:     umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[common_physical_channel_id].num_ul_chans;",
          "33366:     for (j = 0; j < num_tf; j++) {",
          "33367:       umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_tf_size[j] = nbap_dch_chnl_info[common_physical_channel_id].ul_chan_tf_size[j];",
          "",
          "[Removed Lines]",
          "33362:     umts_fp_conversation_info->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "33364:     common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "32915:     umts_fp_conversation_info->dch_crc_present = nbap_private_data->dch_crc_present;",
          "32917:     common_physical_channel_id = nbap_private_data->common_physical_channel_id;",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "33401:     set_umts_fp_conv_data(conversation, umts_fp_conversation_info);",
          "33405:   }",
          "",
          "[Removed Lines]",
          "33404:     add_setup_conv(private_data_get_transaction_id(actx->pinfo),private_data_get_dd_mode(actx->pinfo),private_data_get_common_transport_channel_id(actx->pinfo), actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "",
          "[Added Lines]",
          "32957:     add_setup_conv(nbap_private_data->transaction_id,nbap_private_data->dd_mode,nbap_private_data->common_transport_channel_id, actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "33428: static int",
          "33429: dissect_nbap_T_transportFormatSet(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "33431:     nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "",
          "[Removed Lines]",
          "33430: #line 1342 \"./asn1/nbap/nbap.cnf\"",
          "33432:     nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "33433:     private_data_set_transport_format_set_type(actx->pinfo, NBAP_PCH);",
          "33434:     nbap_dch_chnl_info[private_data_get_common_transport_channel_id(actx->pinfo)].num_dl_chans = 0;",
          "33435:     nbap_dch_chnl_info[private_data_get_common_transport_channel_id(actx->pinfo)].num_ul_chans = 0;",
          "",
          "[Added Lines]",
          "32983: #line 1333 \"./asn1/nbap/nbap.cnf\"",
          "32984:     nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "32986:     nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "32987:     nbap_private_data->transport_format_set_type = NBAP_PCH;",
          "32988:     nbap_dch_chnl_info[nbap_private_data->common_transport_channel_id].num_dl_chans = 0;",
          "32989:     nbap_dch_chnl_info[nbap_private_data->common_transport_channel_id].num_ul_chans = 0;",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "33475: static int",
          "33476: dissect_nbap_PCH_ParametersItem_CTCH_SetupRqstFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "33479: address dst_addr, null_addr;",
          "33480: conversation_t *conversation;",
          "",
          "[Removed Lines]",
          "33477: #line 1085 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "33031: #line 1070 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "33486: guint16 bindingID;",
          "33487: guint32 common_transport_channel_id;",
          "33488: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "33497:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "33498:                                    ett_nbap_PCH_ParametersItem_CTCH_SetupRqstFDD, PCH_ParametersItem_CTCH_SetupRqstFDD_sequence);",
          "33503:   if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "33504:     return offset;",
          "33505:   }",
          "",
          "[Removed Lines]",
          "33489: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "33491: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "33492: private_data_set_binding_id_port(actx->pinfo, 0);",
          "33495: private_data_set_num_items(actx->pinfo, 1);",
          "33501:   transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "33502:   bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "33043: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "33044: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "33046: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "33047: nbap_private_data->binding_id_port = 0;",
          "33050: nbap_private_data->num_items = 1;",
          "33056:   transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "33057:   bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "33525:     umts_fp_conversation_info->rlc_mode           = FP_RLC_MODE_UNKNOWN;",
          "33527:     fp_pch_channel_info = wmem_new0(wmem_file_scope(), fp_pch_channel_info_t);",
          "33529:     umts_fp_conversation_info->channel_specific_info = (void*)fp_pch_channel_info;",
          "33535:     umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[common_transport_channel_id].num_ul_chans;",
          "33537:     nbap_debug(\"Frame %u PCH-ParametersItem-CTCH-SetupRqstFDD Start: num_tf %u\", actx->pinfo->num, num_tf);",
          "",
          "[Removed Lines]",
          "33528:     fp_pch_channel_info->paging_indications = private_data_get_paging_indications(actx->pinfo);",
          "33532:     umts_fp_conversation_info->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "33534:     common_transport_channel_id = private_data_get_common_transport_channel_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "33083:     fp_pch_channel_info->paging_indications = nbap_private_data->paging_indications;",
          "33087:     umts_fp_conversation_info->dch_crc_present = nbap_private_data->dch_crc_present;",
          "33089:     common_transport_channel_id = nbap_private_data->common_transport_channel_id;",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "33582:     set_umts_fp_conv_data(conversation, umts_fp_conversation_info);",
          "33587:     nbap_debug(\"Frame %u PCH-ParametersItem-CTCH-SetupRqstFDD End\", actx->pinfo->num);",
          "33588:   }",
          "",
          "[Removed Lines]",
          "33585:     add_setup_conv(private_data_get_transaction_id(actx->pinfo), private_data_get_dd_mode(actx->pinfo), common_transport_channel_id, actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "",
          "[Added Lines]",
          "33140:     add_setup_conv(nbap_private_data->transaction_id, nbap_private_data->dd_mode, common_transport_channel_id, actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "33622: static int",
          "33623: dissect_nbap_RACH_ParametersItem_CTCH_SetupRqstFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "33625: address dst_addr, null_addr;",
          "33626: conversation_t *conversation;",
          "33627: fp_rach_channel_info_t* fp_rach_channel_info;",
          "",
          "[Removed Lines]",
          "33624: #line 986 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "33179: #line 970 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 116 ---",
          "[Context before]",
          "33631: guint16 bindingID;",
          "33632: guint32 common_physical_channel_id;",
          "33633: nbap_dch_channel_info_t* nbap_dch_chnl_info;",
          "33640:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "33641:                                    ett_nbap_RACH_ParametersItem_CTCH_SetupRqstFDD, RACH_ParametersItem_CTCH_SetupRqstFDD_sequence);",
          "33647:   if (actx->pinfo->fd->flags.visited || transportLayerAddress_ipv4 == 0 || bindingID == 0){",
          "33648:     return offset;",
          "33649:   }",
          "",
          "[Removed Lines]",
          "33634: nbap_dch_chnl_info = private_data_get_nbap_dch_chnl_info(actx->pinfo);",
          "33636: private_data_set_transportLayerAddress_ipv4(actx->pinfo, 0);",
          "33637: private_data_set_binding_id_port(actx->pinfo, 0);",
          "33638: private_data_set_transport_format_set_type(actx->pinfo, NBAP_CPCH);",
          "33645:   transportLayerAddress_ipv4 = private_data_get_transportLayerAddress_ipv4(actx->pinfo);",
          "33646:   bindingID = private_data_get_binding_id_port(actx->pinfo);",
          "",
          "[Added Lines]",
          "33189: nbap_private_data_t* nbap_private_data = nbap_get_private_data(actx->pinfo);",
          "33190: nbap_dch_chnl_info = nbap_private_data->nbap_dch_chnl_info;",
          "33192: nbap_private_data->transportLayerAddress_ipv4 = 0;",
          "33193: nbap_private_data->binding_id_port = 0;",
          "33194: nbap_private_data->transport_format_set_type = NBAP_CPCH;",
          "33201:   transportLayerAddress_ipv4 = nbap_private_data->transportLayerAddress_ipv4;",
          "33202:   bindingID = nbap_private_data->binding_id_port;",
          "",
          "---------------",
          "--- Hunk 117 ---",
          "[Context before]",
          "33683:     umts_fp_conversation_info->fp_dch_channel_info[0].num_ul_chans = num_tf = nbap_dch_chnl_info[common_physical_channel_id].num_ul_chans;",
          "33684:     for (j = 0; j < num_tf; j++) {",
          "33685:       umts_fp_conversation_info->fp_dch_channel_info[0].ul_chan_tf_size[j] = nbap_dch_chnl_info[common_physical_channel_id].ul_chan_tf_size[j];",
          "",
          "[Removed Lines]",
          "33677:     umts_fp_conversation_info->com_context_id = private_data_get_crnc_context_present(actx->pinfo) ?  private_data_get_com_context_id(actx->pinfo) : 1;",
          "33680:     umts_fp_conversation_info->dch_crc_present = private_data_get_dch_crc_present(actx->pinfo);",
          "33682:     common_physical_channel_id = private_data_get_common_physical_channel_id(actx->pinfo);",
          "",
          "[Added Lines]",
          "33233:     umts_fp_conversation_info->com_context_id = nbap_private_data->crnc_context_present ? nbap_private_data->com_context_id : 1;",
          "33236:     umts_fp_conversation_info->dch_crc_present = nbap_private_data->dch_crc_present;",
          "33238:     common_physical_channel_id = nbap_private_data->common_physical_channel_id;",
          "",
          "---------------",
          "--- Hunk 118 ---",
          "[Context before]",
          "33698:     set_umts_fp_conv_data(conversation, umts_fp_conversation_info);",
          "33702:   }",
          "",
          "[Removed Lines]",
          "33701:     add_setup_conv(private_data_get_transaction_id(actx->pinfo),private_data_get_dd_mode(actx->pinfo),private_data_get_common_transport_channel_id(actx->pinfo), actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "",
          "[Added Lines]",
          "33257:     add_setup_conv(nbap_private_data->transaction_id,nbap_private_data->dd_mode,nbap_private_data->common_transport_channel_id, actx->pinfo->num, &dst_addr, bindingID, umts_fp_conversation_info, conversation);",
          "",
          "---------------",
          "--- Hunk 119 ---",
          "[Context before]",
          "34411: static int",
          "34412: dissect_nbap_CommonTransportChannelSetupResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "34414: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonTransportChannelSetupResponse \");",
          "34416: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "34413: #line 168 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "33969: #line 160 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 120 ---",
          "[Context before]",
          "34446: static int",
          "34447: dissect_nbap_CommonTransportChannelSetupFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "34449: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonTransportChannelSetupFailure \");",
          "34451: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "34448: #line 174 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "34004: #line 166 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 121 ---",
          "[Context before]",
          "35165: static int",
          "35166: dissect_nbap_UnblockResourceIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "35168: col_set_str(actx->pinfo->cinfo, COL_INFO,\"UnblockResourceIndication \");",
          "35170: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "35167: #line 559 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "34723: #line 552 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 122 ---",
          "[Context before]",
          "35186: static int",
          "35187: dissect_nbap_AuditRequiredIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "35189: col_set_str(actx->pinfo->cinfo, COL_INFO,\"AuditRequiredIndication \");",
          "35191: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "35188: #line 463 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "34744: #line 456 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 123 ---",
          "[Context before]",
          "35207: static int",
          "35208: dissect_nbap_AuditRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "35210: col_set_str(actx->pinfo->cinfo, COL_INFO,\"AuditRequest \");",
          "35212: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "35209: #line 233 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "34765: #line 226 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 124 ---",
          "[Context before]",
          "35228: static int",
          "35229: dissect_nbap_AuditResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "35231: col_set_str(actx->pinfo->cinfo, COL_INFO,\"AuditResponse \");",
          "35233: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "35230: #line 239 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "34786: #line 232 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 125 ---",
          "[Context before]",
          "35822: static int",
          "35823: dissect_nbap_AuditFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "35825: col_set_str(actx->pinfo->cinfo, COL_INFO,\"AuditFailure \");",
          "35827: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "35824: #line 245 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "35380: #line 238 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 126 ---",
          "[Context before]",
          "35844: static int",
          "35845: dissect_nbap_CommonMeasurementInitiationRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "35847: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementInitiationRequest \");",
          "35849: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "35846: #line 301 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "35402: #line 294 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 127 ---",
          "[Context before]",
          "35962: static int",
          "35963: dissect_nbap_CommonMeasurementInitiationResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "35965: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementInitiationResponse \");",
          "35967: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "35964: #line 307 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "35520: #line 300 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 128 ---",
          "[Context before]",
          "36078: static int",
          "36079: dissect_nbap_CommonMeasurementInitiationFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "36081: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementInitiationFailure \");",
          "36083: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "36080: #line 313 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "35636: #line 306 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 129 ---",
          "[Context before]",
          "36099: static int",
          "36100: dissect_nbap_CommonMeasurementReport(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "36102: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementReport \");",
          "36104: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "36101: #line 469 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "35657: #line 462 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 130 ---",
          "[Context before]",
          "36215: static int",
          "36216: dissect_nbap_CommonMeasurementTerminationRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "36218: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementTerminationRequest \");",
          "36220: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "36217: #line 475 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "35773: #line 468 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 131 ---",
          "[Context before]",
          "36236: static int",
          "36237: dissect_nbap_CommonMeasurementFailureIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "36239: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CommonMeasurementFailureIndication \");",
          "36241: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "36238: #line 481 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "35794: #line 474 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 132 ---",
          "[Context before]",
          "36257: static int",
          "36258: dissect_nbap_CellSetupRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "36260: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CellSetupRequest(FDD) \");",
          "36262: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "36259: #line 134 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "35815: #line 126 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 133 ---",
          "[Context before]",
          "36789: static int",
          "36790: dissect_nbap_CellSetupResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "36792: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CellSetupResponse \");",
          "36794: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "36791: #line 140 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "36347: #line 132 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 134 ---",
          "[Context before]",
          "36810: static int",
          "36811: dissect_nbap_CellSetupFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "36813: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CellSetupFailure \");",
          "36815: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "36812: #line 146 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "36368: #line 138 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 135 ---",
          "[Context before]",
          "37353: static int",
          "37354: dissect_nbap_ResourceStatusIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "37356: col_set_str(actx->pinfo->cinfo, COL_INFO,\"ResourceStatusIndication \");",
          "37358: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "37355: #line 457 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "36911: #line 450 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 136 ---",
          "[Context before]",
          "38111: static int",
          "38112: dissect_nbap_SystemInformationUpdateRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "38114: col_set_str(actx->pinfo->cinfo, COL_INFO,\"SystemInformationUpdateRequest \");",
          "38116: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "38113: #line 280 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "37669: #line 273 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 137 ---",
          "[Context before]",
          "38182: static int",
          "38183: dissect_nbap_MIB_SB_SIB_InformationItem_SystemInfoUpdateRqst(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "38189:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "38190:                                    ett_nbap_MIB_SB_SIB_InformationItem_SystemInfoUpdateRqst, MIB_SB_SIB_InformationItem_SystemInfoUpdateRqst_sequence);",
          "38195:   return offset;",
          "38196: }",
          "",
          "[Removed Lines]",
          "38184: #line 611 \"./asn1/nbap/nbap.cnf\"",
          "38187:     private_data_set_segment_type(actx->pinfo, 0);",
          "",
          "[Added Lines]",
          "37740: #line 598 \"./asn1/nbap/nbap.cnf\"",
          "37742:     nbap_get_private_data(actx->pinfo)->segment_type = 0;",
          "",
          "---------------",
          "--- Hunk 138 ---",
          "[Context before]",
          "38250: static int",
          "38251: dissect_nbap_SystemInformationUpdateResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "38253: col_set_str(actx->pinfo->cinfo, COL_INFO,\"SystemInformationUpdateResponse \");",
          "38255: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "38252: #line 286 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "37805: #line 279 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 139 ---",
          "[Context before]",
          "38271: static int",
          "38272: dissect_nbap_SystemInformationUpdateFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "38274: col_set_str(actx->pinfo->cinfo, COL_INFO,\"SystemInformationUpdateFailure \");",
          "38276: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "38273: #line 292 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "37826: #line 285 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 140 ---",
          "[Context before]",
          "38293: static int",
          "38294: dissect_nbap_RadioLinkSetupRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "38297:     col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkSetupRequest(FDD) \");",
          "",
          "[Removed Lines]",
          "38295: #line 255 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "37848: #line 248 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 141 ---",
          "[Context before]",
          "38770: static int",
          "38771: dissect_nbap_RadioLinkSetupResponseFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "38774:     col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkSetupResponse(FDD) \");",
          "",
          "[Removed Lines]",
          "38772: #line 262 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "38325: #line 255 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 142 ---",
          "[Context before]",
          "38990: static int",
          "38991: dissect_nbap_RadioLinkSetupFailureFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "38993: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkSetupFailure(FDD) \");",
          "38995: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "38992: #line 269 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "38545: #line 262 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 143 ---",
          "[Context before]",
          "39275: static int",
          "39276: dissect_nbap_RadioLinkAdditionRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "39278: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkAdditionRequest(FDD) \");",
          "",
          "[Removed Lines]",
          "39277: #line 319 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "38830: #line 312 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 144 ---",
          "[Context before]",
          "39647: static int",
          "39648: dissect_nbap_RadioLinkAdditionResponseFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "39650: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkAdditionResponse(FDD) \");",
          "",
          "[Removed Lines]",
          "39649: #line 324 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "39202: #line 317 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 145 ---",
          "[Context before]",
          "39923: static int",
          "39924: dissect_nbap_RadioLinkAdditionFailureFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "39926: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkAdditionRequest(FDD) \");",
          "",
          "[Removed Lines]",
          "39925: #line 330 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "39478: #line 323 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 146 ---",
          "[Context before]",
          "40208: static int",
          "40209: dissect_nbap_RadioLinkReconfigurationPrepareFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "40211:     col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationPrepare(FDD) \");",
          "40213:     actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "40210: #line 357 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "39763: #line 350 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 147 ---",
          "[Context before]",
          "41826: static int",
          "41827: dissect_nbap_RadioLinkReconfigurationReady(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "41829: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationReady \");",
          "41831: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "41828: #line 363 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "41381: #line 356 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 148 ---",
          "[Context before]",
          "41908: static int",
          "41909: dissect_nbap_RadioLinkReconfigurationFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "41911: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationFailure \");",
          "41913: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "41910: #line 370 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "41463: #line 363 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 149 ---",
          "[Context before]",
          "42017: static int",
          "42018: dissect_nbap_RadioLinkReconfigurationCommit(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "42020: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationCommit \");",
          "42022: actx->pinfo->link_dir=P2P_DIR_DL;",
          "42031:   offset = dissect_per_sequence(tvb, offset, actx, tree, hf_index,",
          "42032:                                    ett_nbap_RadioLinkReconfigurationCommit, RadioLinkReconfigurationCommit_sequence);",
          "42037:   return offset;",
          "42038: }",
          "",
          "[Removed Lines]",
          "42019: #line 487 \"./asn1/nbap/nbap.cnf\"",
          "42025: #line 2558 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "41572: #line 480 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 150 ---",
          "[Context before]",
          "42047: static int",
          "42048: dissect_nbap_RadioLinkReconfigurationCancel(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "42050: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationCancel \");",
          "42052: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "42049: #line 493 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "41593: #line 486 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 151 ---",
          "[Context before]",
          "42068: static int",
          "42069: dissect_nbap_RadioLinkReconfigurationRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "42071: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationRequestFDD(FDD) \");",
          "42073: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "42070: #line 381 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "41614: #line 374 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 152 ---",
          "[Context before]",
          "42525: static int",
          "42526: dissect_nbap_RadioLinkReconfigurationResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "42528: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkReconfigurationResponse \");",
          "",
          "[Removed Lines]",
          "42527: #line 387 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "42071: #line 380 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 153 ---",
          "[Context before]",
          "42586: static int",
          "42587: dissect_nbap_RadioLinkDeletionRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "42589: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkDeletionRequest \");",
          "42591: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "42588: #line 343 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "42132: #line 336 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 154 ---",
          "[Context before]",
          "42637: static int",
          "42638: dissect_nbap_RadioLinkDeletionResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "42640: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkDeletionResponse \");",
          "42642: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "42639: #line 350 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "42183: #line 343 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 155 ---",
          "[Context before]",
          "42659: static int",
          "42660: dissect_nbap_DL_PowerControlRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "42662: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DL-PowerControlRequest \");",
          "42664: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "42661: #line 541 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "42205: #line 534 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 156 ---",
          "[Context before]",
          "42710: static int",
          "42711: dissect_nbap_DL_PowerTimeslotControlRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "42713: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DL-PowerTimeslotControlRequest \");",
          "42715: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "42712: #line 547 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "42256: #line 540 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 157 ---",
          "[Context before]",
          "42731: static int",
          "42732: dissect_nbap_DedicatedMeasurementInitiationRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "42734: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementInitiationRequest \");",
          "42736: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "42733: #line 403 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "42277: #line 396 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 158 ---",
          "[Context before]",
          "42927: static int",
          "42928: dissect_nbap_DedicatedMeasurementInitiationResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "42930: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementInitiationResponse \");",
          "42932: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "42929: #line 409 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "42473: #line 402 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 159 ---",
          "[Context before]",
          "43232: static int",
          "43233: dissect_nbap_DedicatedMeasurementInitiationFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43235: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementInitiationFailure \");",
          "43237: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "43234: #line 416 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "42778: #line 409 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 160 ---",
          "[Context before]",
          "43254: static int",
          "43255: dissect_nbap_DedicatedMeasurementReport(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43257: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementReport \");",
          "43259: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "43256: #line 521 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "42800: #line 514 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 161 ---",
          "[Context before]",
          "43437: static int",
          "43438: dissect_nbap_DedicatedMeasurementTerminationRequest(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43440: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementTerminationRequest \");",
          "43442: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "43439: #line 528 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "42983: #line 521 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 162 ---",
          "[Context before]",
          "43458: static int",
          "43459: dissect_nbap_DedicatedMeasurementFailureIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43461: col_set_str(actx->pinfo->cinfo, COL_INFO,\"DedicatedMeasurementFailureIndication \");",
          "43463: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "43460: #line 534 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "43004: #line 527 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 163 ---",
          "[Context before]",
          "43480: static int",
          "43481: dissect_nbap_RadioLinkFailureIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43483: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkFailureIndication \");",
          "43485: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "43482: #line 499 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "43026: #line 492 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 164 ---",
          "[Context before]",
          "43662: static int",
          "43663: dissect_nbap_RadioLinkPreemptionRequiredIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43665: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkPreemptionRequiredIndication \");",
          "43667: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "43664: #line 506 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "43208: #line 499 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 165 ---",
          "[Context before]",
          "43713: static int",
          "43714: dissect_nbap_RadioLinkRestoreIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43716: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkRestoreIndication \");",
          "43718: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "43715: #line 513 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "43259: #line 506 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 166 ---",
          "[Context before]",
          "43893: static int",
          "43894: dissect_nbap_CompressedModeCommand(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43896: col_set_str(actx->pinfo->cinfo, COL_INFO,\"CompressedModeCommand \");",
          "43898: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "43895: #line 553 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "43439: #line 546 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 167 ---",
          "[Context before]",
          "43914: static int",
          "43915: dissect_nbap_ErrorIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43917: col_set_str(actx->pinfo->cinfo, COL_INFO,\"ErrorIndication \");",
          "",
          "[Removed Lines]",
          "43916: #line 565 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "43460: #line 558 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 168 ---",
          "[Context before]",
          "43934: static int",
          "43935: dissect_nbap_PrivateMessage(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43937: col_set_str(actx->pinfo->cinfo, COL_INFO,\"PrivateMessage \");",
          "",
          "[Removed Lines]",
          "43936: #line 574 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "43480: #line 567 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 169 ---",
          "[Context before]",
          "43953: static int",
          "43954: dissect_nbap_PhysicalSharedChannelReconfigurationRequestFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "43956: col_set_str(actx->pinfo->cinfo, COL_INFO,\"PhysicalSharedChannelReconfigurationRequest(FDD) \");",
          "43958: actx->pinfo->link_dir=P2P_DIR_DL;",
          "",
          "[Removed Lines]",
          "43955: #line 423 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "43499: #line 416 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 170 ---",
          "[Context before]",
          "46421: static int",
          "46422: dissect_nbap_PhysicalSharedChannelReconfigurationResponse(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "46424: col_set_str(actx->pinfo->cinfo, COL_INFO,\"PhysicalSharedChannelReconfigurationResponse \");",
          "46426: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "46423: #line 429 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "45967: #line 422 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 171 ---",
          "[Context before]",
          "46472: static int",
          "46473: dissect_nbap_PhysicalSharedChannelReconfigurationFailure(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "46475: col_set_str(actx->pinfo->cinfo, COL_INFO,\"PhysicalSharedChannelReconfigurationFailure \");",
          "46477: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "46474: #line 435 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "46018: #line 428 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 172 ---",
          "[Context before]",
          "47925: static int",
          "47926: dissect_nbap_BearerRearrangementIndication(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "47928: col_set_str(actx->pinfo->cinfo, COL_INFO,\"BearerRearrangementIndication \");",
          "",
          "[Removed Lines]",
          "47927: #line 581 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "47471: #line 574 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 173 ---",
          "[Context before]",
          "48227: static int",
          "48228: dissect_nbap_RadioLinkParameterUpdateIndicationFDD(tvbuff_t *tvb _U_, int offset _U_, asn1_ctx_t *actx _U_, proto_tree *tree _U_, int hf_index _U_) {",
          "48230: col_set_str(actx->pinfo->cinfo, COL_INFO,\"RadioLinkParameterUpdateIndication(FDD) \");",
          "48232: actx->pinfo->link_dir=P2P_DIR_UL;",
          "",
          "[Removed Lines]",
          "48229: #line 589 \"./asn1/nbap/nbap.cnf\"",
          "",
          "[Added Lines]",
          "47773: #line 582 \"./asn1/nbap/nbap.cnf\"",
          "",
          "---------------",
          "--- Hunk 174 ---",
          "[Context before]",
          "56126: static int dissect_ProtocolIEFieldValue(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, void *data _U_)",
          "56127: {",
          "56128:   guint32 protocol_ie_id;",
          "56130:   return (dissector_try_uint_new(nbap_ies_dissector_table, protocol_ie_id, tvb, pinfo, tree, FALSE, NULL)) ? tvb_captured_length(tvb) : 0;",
          "56131: }",
          "56133: static int dissect_ProtocolExtensionFieldExtensionValue(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, void *data _U_)",
          "56134: {",
          "56135:   guint32 protocol_ie_id;",
          "56137:   return (dissector_try_uint_new(nbap_extension_dissector_table, protocol_ie_id, tvb, pinfo, tree, FALSE, NULL)) ? tvb_captured_length(tvb) : 0;",
          "56138: }",
          "",
          "[Removed Lines]",
          "56124: #line 817 \"./asn1/nbap/packet-nbap-template.c\"",
          "56129:   protocol_ie_id = private_data_get_protocol_ie_id(pinfo);",
          "56136:   protocol_ie_id = private_data_get_protocol_ie_id(pinfo);",
          "",
          "[Added Lines]",
          "55668: #line 425 \"./asn1/nbap/packet-nbap-template.c\"",
          "55673:   protocol_ie_id = nbap_get_private_data(pinfo)->protocol_ie_id;",
          "55680:   protocol_ie_id = nbap_get_private_data(pinfo)->protocol_ie_id;",
          "",
          "---------------",
          "--- Hunk 175 ---",
          "[Context before]",
          "56166:     return;",
          "56167:   }",
          "56171:   clear_address(&null_addr);",
          "56172:   for (i = 0; i < maxNrOfMACdFlows; i++) {",
          "",
          "[Removed Lines]",
          "56169:   nbap_hsdsch_channel_info = private_data_get_nbap_hsdsch_channel_info(pinfo);",
          "",
          "[Added Lines]",
          "55713:   nbap_hsdsch_channel_info = nbap_get_private_data(pinfo)->nbap_hsdsch_channel_info;",
          "",
          "---------------",
          "--- Hunk 176 ---",
          "[Context before]",
          "69596:         NULL, HFILL }},",
          "69600:   };",
          "",
          "[Removed Lines]",
          "69599: #line 1127 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "69143: #line 735 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 177 ---",
          "[Context before]",
          "71236:     &ett_nbap_Outcome,",
          "71240:   };",
          "71242:   static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "71239: #line 1136 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "70783: #line 744 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 178 ---",
          "[Context before]",
          "72391: }",
          "",
          "[Removed Lines]",
          "72390: #line 1190 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "71934: #line 798 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ffca502cc95212e1224951537aa4bfcf4d7de8b",
      "candidate_info": {
        "commit_hash": "4ffca502cc95212e1224951537aa4bfcf4d7de8b",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/4ffca502cc95212e1224951537aa4bfcf4d7de8b",
        "files": [
          "epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "epan/dissectors/packet-nbap.c"
        ],
        "message": "NBAP: Simplify private data creation\n\nChange-Id: Ief23e5675f74564a3b303b5a13b4fcbd9e814c90\nReviewed-on: https://code.wireshark.org/review/28172\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/asn1/nbap/packet-nbap-template.c||epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/asn1/nbap/packet-nbap-template.c||epan/dissectors/asn1/nbap/packet-nbap-template.c": [
          "File: epan/dissectors/asn1/nbap/packet-nbap-template.c -> epan/dissectors/asn1/nbap/packet-nbap-template.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "267:   nbap_private_data_t *private_data = (nbap_private_data_t *)p_get_proto_data(pinfo->pool, pinfo, proto_nbap, 0);",
          "272:     private_data = wmem_new0(pinfo->pool, nbap_private_data_t);",
          "273:     p_add_proto_data(pinfo->pool, pinfo, proto_nbap, 0, private_data);",
          "",
          "[Removed Lines]",
          "268:   if(private_data != NULL ) {",
          "269:     return private_data;",
          "270:   }",
          "271:   else {",
          "",
          "[Added Lines]",
          "268:   if(private_data == NULL ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "280:     for (i = 0; i < maxNrOfMACdFlows; i++) {",
          "281:         private_data->nbap_hsdsch_channel_info[i].entity = hs;",
          "282:     }",
          "284:   }",
          "285: }",
          "",
          "[Removed Lines]",
          "283:     return private_data;",
          "",
          "[Added Lines]",
          "281:   return private_data;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-nbap.c||epan/dissectors/packet-nbap.c": [
          "File: epan/dissectors/packet-nbap.c -> epan/dissectors/packet-nbap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6660:   nbap_private_data_t *private_data = (nbap_private_data_t *)p_get_proto_data(pinfo->pool, pinfo, proto_nbap, 0);",
          "6665:     private_data = wmem_new0(pinfo->pool, nbap_private_data_t);",
          "6666:     p_add_proto_data(pinfo->pool, pinfo, proto_nbap, 0, private_data);",
          "",
          "[Removed Lines]",
          "6661:   if(private_data != NULL ) {",
          "6662:     return private_data;",
          "6663:   }",
          "6664:   else {",
          "",
          "[Added Lines]",
          "6661:   if(private_data == NULL ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6673:     for (i = 0; i < maxNrOfMACdFlows; i++) {",
          "6674:         private_data->nbap_hsdsch_channel_info[i].entity = hs;",
          "6675:     }",
          "6677:   }",
          "6678: }",
          "",
          "[Removed Lines]",
          "6676:     return private_data;",
          "",
          "[Added Lines]",
          "6674:   return private_data;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "55598: static int dissect_ProtocolIEFieldValue(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, void *data _U_)",
          "55599: {",
          "",
          "[Removed Lines]",
          "55596: #line 425 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "55593: #line 422 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "69068:         NULL, HFILL }},",
          "69072:   };",
          "",
          "[Removed Lines]",
          "69071: #line 735 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "69068: #line 732 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "70708:     &ett_nbap_Outcome,",
          "70712:   };",
          "70714:   static ei_register_info ei[] = {",
          "",
          "[Removed Lines]",
          "70711: #line 744 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "70708: #line 741 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "71863: }",
          "",
          "[Removed Lines]",
          "71862: #line 798 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "[Added Lines]",
          "71859: #line 795 \"./asn1/nbap/packet-nbap-template.c\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}