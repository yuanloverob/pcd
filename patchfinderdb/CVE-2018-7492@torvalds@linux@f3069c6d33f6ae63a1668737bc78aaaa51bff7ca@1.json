{
  "cve_id": "CVE-2018-7492",
  "cve_desc": "A NULL pointer dereference was found in the net/rds/rdma.c __rds_rdma_map() function in the Linux kernel before 4.14.7 allowing local attackers to cause a system panic and a denial-of-service, related to RDS_GET_MR and RDS_GET_MR_FOR_DEST.",
  "repo": "torvalds/linux",
  "patch_hash": "f3069c6d33f6ae63a1668737bc78aaaa51bff7ca",
  "patch_info": {
    "commit_hash": "f3069c6d33f6ae63a1668737bc78aaaa51bff7ca",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/f3069c6d33f6ae63a1668737bc78aaaa51bff7ca",
    "files": [
      "net/rds/rdma.c"
    ],
    "message": "rds: Fix NULL pointer dereference in __rds_rdma_map\n\nThis is a fix for syzkaller719569, where memory registration was\nattempted without any underlying transport being loaded.\n\nAnalysis of the case reveals that it is the setsockopt() RDS_GET_MR\n(2) and RDS_GET_MR_FOR_DEST (7) that are vulnerable.\n\nHere is an example stack trace when the bug is hit:\n\nBUG: unable to handle kernel NULL pointer dereference at 00000000000000c0\nIP: __rds_rdma_map+0x36/0x440 [rds]\nPGD 2f93d03067 P4D 2f93d03067 PUD 2f93d02067 PMD 0\nOops: 0000 [#1] SMP\nModules linked in: bridge stp llc tun rpcsec_gss_krb5 nfsv4\ndns_resolver nfs fscache rds binfmt_misc sb_edac intel_powerclamp\ncoretemp kvm_intel kvm irqbypass crct10dif_pclmul c rc32_pclmul\nghash_clmulni_intel pcbc aesni_intel crypto_simd glue_helper cryptd\niTCO_wdt mei_me sg iTCO_vendor_support ipmi_si mei ipmi_devintf nfsd\nshpchp pcspkr i2c_i801 ioatd ma ipmi_msghandler wmi lpc_ich mfd_core\nauth_rpcgss nfs_acl lockd grace sunrpc ip_tables ext4 mbcache jbd2\nmgag200 i2c_algo_bit drm_kms_helper ixgbe syscopyarea ahci sysfillrect\nsysimgblt libahci mdio fb_sys_fops ttm ptp libata sd_mod mlx4_core drm\ncrc32c_intel pps_core megaraid_sas i2c_core dca dm_mirror\ndm_region_hash dm_log dm_mod\nCPU: 48 PID: 45787 Comm: repro_set2 Not tainted 4.14.2-3.el7uek.x86_64 #2\nHardware name: Oracle Corporation ORACLE SERVER X5-2L/ASM,MOBO TRAY,2U, BIOS 31110000 03/03/2017\ntask: ffff882f9190db00 task.stack: ffffc9002b994000\nRIP: 0010:__rds_rdma_map+0x36/0x440 [rds]\nRSP: 0018:ffffc9002b997df0 EFLAGS: 00010202\nRAX: 0000000000000000 RBX: ffff882fa2182580 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffffc9002b997e40 RDI: ffff882fa2182580\nRBP: ffffc9002b997e30 R08: 0000000000000000 R09: 0000000000000002\nR10: ffff885fb29e3838 R11: 0000000000000000 R12: ffff882fa2182580\nR13: ffff882fa2182580 R14: 0000000000000002 R15: 0000000020000ffc\nFS:  00007fbffa20b700(0000) GS:ffff882fbfb80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000000000c0 CR3: 0000002f98a66006 CR4: 00000000001606e0\nCall Trace:\n rds_get_mr+0x56/0x80 [rds]\n rds_setsockopt+0x172/0x340 [rds]\n ? __fget_light+0x25/0x60\n ? __fdget+0x13/0x20\n SyS_setsockopt+0x80/0xe0\n do_syscall_64+0x67/0x1b0\n entry_SYSCALL64_slow_path+0x25/0x25\nRIP: 0033:0x7fbff9b117f9\nRSP: 002b:00007fbffa20aed8 EFLAGS: 00000293 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 00000000000c84a4 RCX: 00007fbff9b117f9\nRDX: 0000000000000002 RSI: 0000400000000114 RDI: 000000000000109b\nRBP: 00007fbffa20af10 R08: 0000000000000020 R09: 00007fbff9dd7860\nR10: 0000000020000ffc R11: 0000000000000293 R12: 0000000000000000\nR13: 00007fbffa20b9c0 R14: 00007fbffa20b700 R15: 0000000000000021\n\nCode: 41 56 41 55 49 89 fd 41 54 53 48 83 ec 18 8b 87 f0 02 00 00 48\n89 55 d0 48 89 4d c8 85 c0 0f 84 2d 03 00 00 48 8b 87 00 03 00 00 <48>\n83 b8 c0 00 00 00 00 0f 84 25 03 00 0 0 48 8b 06 48 8b 56 08\n\nThe fix is to check the existence of an underlying transport in\n__rds_rdma_map().\n\nSigned-off-by: H\u00e5kon Bugge <haakon.bugge@oracle.com>\nReported-by: syzbot <syzkaller@googlegroups.com>\nAcked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/rds/rdma.c||net/rds/rdma.c"
    ]
  },
  "patch_diff": {
    "net/rds/rdma.c||net/rds/rdma.c": [
      "File: net/rds/rdma.c -> net/rds/rdma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "183:  long i;",
      "184:  int ret;",
      "188:   goto out;",
      "189:  }",
      "",
      "[Removed Lines]",
      "186:  if (rs->rs_bound_addr == 0) {",
      "",
      "[Added Lines]",
      "186:  if (rs->rs_bound_addr == 0 || !rs->rs_transport) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "89452d4ab20745002e50ecf90979708f1ce1d077",
      "candidate_info": {
        "commit_hash": "89452d4ab20745002e50ecf90979708f1ce1d077",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/89452d4ab20745002e50ecf90979708f1ce1d077",
        "files": [
          "drivers/gpu/drm/exynos/exynos_drm_drv.c",
          "drivers/gpu/drm/exynos/exynos_drm_gem.c",
          "drivers/gpu/drm/exynos/exynos_drm_gem.h"
        ],
        "message": "drm/exynos: Fix dma-buf import\n\nWhen IOMMU support was enabled, dma-buf import in Exynos DRM was broken\nsince commit f43c35966a5a (\"drm/exynos: use real device for DMA-mapping\noperations\") due to using wrong struct device in drm_gem_prime_import()\nfunction. This patch fixes following kernel BUG caused by incorrect buffer\nmapping to DMA address space:\n\nexynos-sysmmu 14650000.sysmmu: 14450000.mixer: PAGE FAULT occurred at 0xb2e00000\n------------[ cut here ]------------\nkernel BUG at drivers/iommu/exynos-iommu.c:449!\nInternal error: Oops - BUG: 0 [#1] PREEMPT SMP ARM\nModules linked in:\nCPU: 0 PID: 0 Comm: swapper/0 Not tainted 4.14.0-rc4-next-20171016-00033-g990d723669fd #3165\nHardware name: SAMSUNG EXYNOS (Flattened Device Tree)\ntask: c0e0b7c0 task.stack: c0e00000\nPC is at exynos_sysmmu_irq+0x1d0/0x24c\nLR is at exynos_sysmmu_irq+0x154/0x24c\n------------[ cut here ]------------\n\nReported-by: Marian Mihailescu <mihailescu2m@gmail.com>\nFixes: f43c35966a5a (\"drm/exynos: use real device for DMA-mapping operations\")\nSigned-off-by: Marek Szyprowski <m.szyprowski@samsung.com>\nReviewed-by: Tobias Jakobi <tjakobi@math.uni-bielefeld.de>\nSigned-off-by: Inki Dae <inki.dae@samsung.com>",
        "before_after_code_files": [
          "drivers/gpu/drm/exynos/exynos_drm_drv.c||drivers/gpu/drm/exynos/exynos_drm_drv.c",
          "drivers/gpu/drm/exynos/exynos_drm_gem.c||drivers/gpu/drm/exynos/exynos_drm_gem.c",
          "drivers/gpu/drm/exynos/exynos_drm_gem.h||drivers/gpu/drm/exynos/exynos_drm_gem.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/exynos/exynos_drm_drv.c||drivers/gpu/drm/exynos/exynos_drm_drv.c": [
          "File: drivers/gpu/drm/exynos/exynos_drm_drv.c -> drivers/gpu/drm/exynos/exynos_drm_drv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:  .prime_handle_to_fd = drm_gem_prime_handle_to_fd,",
          "149:  .prime_fd_to_handle = drm_gem_prime_fd_to_handle,",
          "150:  .gem_prime_export = drm_gem_prime_export,",
          "152:  .gem_prime_get_sg_table = exynos_drm_gem_prime_get_sg_table,",
          "153:  .gem_prime_import_sg_table = exynos_drm_gem_prime_import_sg_table,",
          "154:  .gem_prime_vmap  = exynos_drm_gem_prime_vmap,",
          "",
          "[Removed Lines]",
          "151:  .gem_prime_import = drm_gem_prime_import,",
          "",
          "[Added Lines]",
          "151:  .gem_prime_import = exynos_drm_gem_prime_import,",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/exynos/exynos_drm_gem.c||drivers/gpu/drm/exynos/exynos_drm_gem.c": [
          "File: drivers/gpu/drm/exynos/exynos_drm_gem.c -> drivers/gpu/drm/exynos/exynos_drm_gem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "506: }",
          "509: struct sg_table *exynos_drm_gem_prime_get_sg_table(struct drm_gem_object *obj)",
          "510: {",
          "511:  struct exynos_drm_gem *exynos_gem = to_exynos_gem(obj);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "509: struct drm_gem_object *exynos_drm_gem_prime_import(struct drm_device *dev,",
          "510:          struct dma_buf *dma_buf)",
          "511: {",
          "512:  return drm_gem_prime_import_dev(dev, dma_buf, to_dma_dev(dev));",
          "513: }",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/exynos/exynos_drm_gem.h||drivers/gpu/drm/exynos/exynos_drm_gem.h": [
          "File: drivers/gpu/drm/exynos/exynos_drm_gem.h -> drivers/gpu/drm/exynos/exynos_drm_gem.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "117: int exynos_drm_gem_mmap(struct file *filp, struct vm_area_struct *vma);",
          "120: struct sg_table *exynos_drm_gem_prime_get_sg_table(struct drm_gem_object *obj);",
          "121: struct drm_gem_object *",
          "122: exynos_drm_gem_prime_import_sg_table(struct drm_device *dev,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120: struct drm_gem_object *exynos_drm_gem_prime_import(struct drm_device *dev,",
          "121:          struct dma_buf *dma_buf);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7bf7a7116ed313c601307f7e585419369926ab05",
      "candidate_info": {
        "commit_hash": "7bf7a7116ed313c601307f7e585419369926ab05",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7bf7a7116ed313c601307f7e585419369926ab05",
        "files": [
          "drivers/media/usb/dvb-usb-v2/lmedm04.c"
        ],
        "message": "media: dvb-usb-v2: lmedm04: move ts2020 attach to dm04_lme2510_tuner\n\nWhen the tuner was split from m88rs2000 the attach function is in wrong\nplace.\n\nMove to dm04_lme2510_tuner to trap errors on failure and removing\na call to lme_coldreset.\n\nPrevents driver starting up without any tuner connected.\n\nFixes to trap for ts2020 fail.\nLME2510(C): FE Found M88RS2000\nts2020: probe of 0-0060 failed with error -11\n...\nLME2510(C): TUN Found RS2000 tuner\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] PREEMPT SMP KASAN\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Malcolm Priestley <tvboxspy@gmail.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
        "before_after_code_files": [
          "drivers/mediusb/dvb-usb-v2/lmedm04.c||drivers/media/usdvb-usb-v2/lmedm04.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/mediusb/dvb-usb-v2/lmedm04.c||drivers/media/usdvb-usb-v2/lmedm04.c": [
          "File: drivers/mediusb/dvb-usb-v2/lmedm04.c -> drivers/media/usdvb-usb-v2/lmedm04.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d0e312fe3d34c1bc014a7f8ec6540d05e8077483",
      "candidate_info": {
        "commit_hash": "d0e312fe3d34c1bc014a7f8ec6540d05e8077483",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d0e312fe3d34c1bc014a7f8ec6540d05e8077483",
        "files": [
          "drivers/infiniband/core/cma.c",
          "drivers/infiniband/core/device.c",
          "drivers/infiniband/core/iwcm.c",
          "drivers/infiniband/core/nldev.c"
        ],
        "message": "RDMA/netlink: Fix general protection fault\n\nThe RDMA netlink core code checks validity of messages by ensuring\nthat type and operand are in range. It works well for almost all\nclients except NLDEV, which has cb_table less than number of operands.\n\nRequest to access such operand will trigger the following kernel panic.\n\nThis patch updates all places where cb_table is declared for the\nconsistency, but only NLDEV is actually need it.\n\ngeneral protection fault: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN\nModules linked in:\nCPU: 0 PID: 522 Comm: syz-executor6 Not tainted 4.13.0+ #4\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014\ntask: ffff8800657799c0 task.stack: ffff8800695d000\nRIP: 0010:rdma_nl_rcv_msg+0x13a/0x4c0\nRSP: 0018:ffff8800695d7838 EFLAGS: 00010207\nRAX: dffffc0000000000 RBX: 1ffff1000d2baf0b RCX: 00000000704ff4d7\nRDX: 0000000000000000 RSI: ffffffff81ddb03c RDI: 00000003827fa6bc\nRBP: ffff8800695d7900 R08: ffffffff82ec0578 R09: 0000000000000000\nR10: ffff8800695d7900 R11: 0000000000000001 R12: 000000000000001c\nR13: ffff880069d31e00 R14: 00000000ffffffff R15: ffff880069d357c0\nFS:  00007fee6acb8700(0000) GS:ffff88006ca00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000201a9000 CR3: 0000000059766000 CR4: 00000000000006b0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n ? rdma_nl_multicast+0x80/0x80\n rdma_nl_rcv+0x36b/0x4d0\n ? ibnl_put_attr+0xc0/0xc0\n netlink_unicast+0x4bd/0x6d0\n ? netlink_sendskb+0x50/0x50\n ? drop_futex_key_refs.isra.4+0x68/0xb0\n netlink_sendmsg+0x9ab/0xbd0\n ? nlmsg_notify+0x140/0x140\n ? wake_up_q+0xa1/0xf0\n ? drop_futex_key_refs.isra.4+0x68/0xb0\n sock_sendmsg+0x88/0xd0\n sock_write_iter+0x228/0x3c0\n ? sock_sendmsg+0xd0/0xd0\n ? do_futex+0x3e5/0xb20\n ? iov_iter_init+0xaf/0x1d0\n __vfs_write+0x46e/0x640\n ? sched_clock_cpu+0x1b/0x190\n ? __vfs_read+0x620/0x620\n ? __fget+0x23a/0x390\n ? rw_verify_area+0xca/0x290\n vfs_write+0x192/0x490\n SyS_write+0xde/0x1c0\n ? SyS_read+0x1c0/0x1c0\n ? trace_hardirqs_on_thunk+0x1a/0x1c\n entry_SYSCALL_64_fastpath+0x18/0xad\nRIP: 0033:0x7fee6a74a219\nRSP: 002b:00007fee6acb7d58 EFLAGS: 00000212 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 0000000000638000 RCX: 00007fee6a74a219\nRDX: 0000000000000078 RSI: 0000000020141000 RDI: 0000000000000006\nRBP: 0000000000000046 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000212 R12: ffff8800695d7f98\nR13: 0000000020141000 R14: 0000000000000006 R15: 00000000ffffffff\nCode: d6 48 b8 00 00 00 00 00 fc ff df 66 41 81 e4 ff 03 44 8d 72 ff 4a 8d 3c b5 c0 a6 7f 82 44 89 b5 4c ff ff ff 48 89 f9 48 c1 e9 03 <0f> b6 0c 01 48 89 f8 83 e0 07 83 c0 03 38 c8 7c 08 84 c9 0f 85\nRIP: rdma_nl_rcv_msg+0x13a/0x4c0 RSP: ffff8800695d7838\n---[ end trace ba085d123959c8ec ]---\nKernel panic - not syncing: Fatal exception\n\nCc: syzkaller <syzkaller@googlegroups.com>\nFixes: b4c598a67ea1 (\"RDMA/netlink: Implement nldev device dumpit calback\")\nReviewed-by: Mark Bloch <markb@mellanox.com>\nSigned-off-by: Leon Romanovsky <leonro@mellanox.com>\n\nSigned-off-by: Doug Ledford <dledford@redhat.com>",
        "before_after_code_files": [
          "drivers/infiniband/core/cma.c||drivers/infiniband/core/cma.c",
          "drivers/infiniband/core/device.c||drivers/infiniband/core/device.c",
          "drivers/infiniband/core/iwcm.c||drivers/infiniband/core/iwcm.c",
          "drivers/infiniband/core/nldev.c||drivers/infiniband/core/nldev.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/infiniband/core/cma.c||drivers/infiniband/core/cma.c": [
          "File: drivers/infiniband/core/cma.c -> drivers/infiniband/core/cma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4458:  return skb->len;",
          "4459: }",
          "4462:  [RDMA_NL_RDMA_CM_ID_STATS] = { .dump = cma_get_id_stats},",
          "4463: };",
          "",
          "[Removed Lines]",
          "4461: static const struct rdma_nl_cbs cma_cb_table[] = {",
          "",
          "[Added Lines]",
          "4461: static const struct rdma_nl_cbs cma_cb_table[RDMA_NL_RDMA_CM_NUM_OPS] = {",
          "",
          "---------------"
        ],
        "drivers/infiniband/core/device.c||drivers/infiniband/core/device.c": [
          "File: drivers/infiniband/core/device.c -> drivers/infiniband/core/device.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1146: }",
          "1147: EXPORT_SYMBOL(ib_get_net_dev_by_params);",
          "1150:  [RDMA_NL_LS_OP_RESOLVE] = {",
          "1151:   .doit = ib_nl_handle_resolve_resp,",
          "1152:   .flags = RDMA_NL_ADMIN_PERM,",
          "",
          "[Removed Lines]",
          "1149: static const struct rdma_nl_cbs ibnl_ls_cb_table[] = {",
          "",
          "[Added Lines]",
          "1149: static const struct rdma_nl_cbs ibnl_ls_cb_table[RDMA_NL_LS_NUM_OPS] = {",
          "",
          "---------------"
        ],
        "drivers/infiniband/core/iwcm.c||drivers/infiniband/core/iwcm.c": [
          "File: drivers/infiniband/core/iwcm.c -> drivers/infiniband/core/iwcm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: }",
          "81: EXPORT_SYMBOL(iwcm_reject_msg);",
          "84:  [RDMA_NL_IWPM_REG_PID] = {.dump = iwpm_register_pid_cb},",
          "85:  [RDMA_NL_IWPM_ADD_MAPPING] = {.dump = iwpm_add_mapping_cb},",
          "86:  [RDMA_NL_IWPM_QUERY_MAPPING] = {.dump = iwpm_add_and_query_mapping_cb},",
          "",
          "[Removed Lines]",
          "83: static struct rdma_nl_cbs iwcm_nl_cb_table[] = {",
          "",
          "[Added Lines]",
          "83: static struct rdma_nl_cbs iwcm_nl_cb_table[RDMA_NL_IWPM_NUM_OPS] = {",
          "",
          "---------------"
        ],
        "drivers/infiniband/core/nldev.c||drivers/infiniband/core/nldev.c": [
          "File: drivers/infiniband/core/nldev.c -> drivers/infiniband/core/nldev.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "303:  return skb->len;",
          "304: }",
          "307:  [RDMA_NLDEV_CMD_GET] = {",
          "308:   .doit = nldev_get_doit,",
          "309:   .dump = nldev_get_dumpit,",
          "",
          "[Removed Lines]",
          "306: static const struct rdma_nl_cbs nldev_cb_table[] = {",
          "",
          "[Added Lines]",
          "306: static const struct rdma_nl_cbs nldev_cb_table[RDMA_NLDEV_NUM_OPS] = {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "910b0797fa9e8af09c44a3fa36cb310ba7a7218d",
      "candidate_info": {
        "commit_hash": "910b0797fa9e8af09c44a3fa36cb310ba7a7218d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/910b0797fa9e8af09c44a3fa36cb310ba7a7218d",
        "files": [
          "drivers/media/usb/em28xx/em28xx-dvb.c"
        ],
        "message": "media: em28xx: Fix use-after-free when disconnecting\n\nFix bug by moving the i2c_unregister_device calls after deregistration\nof dvb frontend.\n\nThe new style i2c drivers already destroys the frontend object at\ni2c_unregister_device time.\nWhen the dvb frontend is unregistered afterwards it leads to this oops:\n\n  [ 6058.866459] BUG: unable to handle kernel NULL pointer dereference at 00000000000001f8\n  [ 6058.866578] IP: dvb_frontend_stop+0x30/0xd0 [dvb_core]\n  [ 6058.866644] PGD 0\n  [ 6058.866646] P4D 0\n\n  [ 6058.866726] Oops: 0000 [#1] SMP\n  [ 6058.866768] Modules linked in: rc_pinnacle_pctv_hd(O) em28xx_rc(O) si2157(O) si2168(O) em28xx_dvb(O) em28xx(O) si2165(O) a8293(O) tda10071(O) tea5767(O) tuner(O) cx23885(O) tda18271(O) videobuf2_dvb(O) videobuf2_dma_sg(O) m88ds3103(O) tveeprom(O) cx2341x(O) v4l2_common(O) dvb_core(O) rc_core(O) videobuf2_memops(O) videobuf2_v4l2(O) videobuf2_core(O) videodev(O) media(O) bluetooth ecdh_generic ums_realtek uas rtl8192cu rtl_usb rtl8192c_common rtlwifi usb_storage snd_hda_codec_realtek snd_hda_codec_hdmi snd_hda_codec_generic i2c_mux snd_hda_intel snd_hda_codec snd_hwdep x86_pkg_temp_thermal snd_hda_core kvm_intel kvm irqbypass [last unloaded: videobuf2_memops]\n  [ 6058.867497] CPU: 2 PID: 7349 Comm: kworker/2:0 Tainted: G        W  O    4.13.9-gentoo #1\n  [ 6058.867595] Hardware name: MEDION E2050 2391/H81H3-EM2, BIOS H81EM2W08.308 08/25/2014\n  [ 6058.867692] Workqueue: usb_hub_wq hub_event\n  [ 6058.867746] task: ffff88011a15e040 task.stack: ffffc90003074000\n  [ 6058.867825] RIP: 0010:dvb_frontend_stop+0x30/0xd0 [dvb_core]\n  [ 6058.867896] RSP: 0018:ffffc90003077b58 EFLAGS: 00010293\n  [ 6058.867964] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 000000010040001f\n  [ 6058.868056] RDX: ffff88011a15e040 RSI: ffffea000464e400 RDI: ffff88001cbe3028\n  [ 6058.868150] RBP: ffffc90003077b68 R08: ffff880119390380 R09: 000000010040001f\n  [ 6058.868241] R10: ffffc90003077b18 R11: 000000000001e200 R12: ffff88001cbe3028\n  [ 6058.868330] R13: ffff88001cbe68d0 R14: ffff8800cf734000 R15: ffff8800cf734098\n  [ 6058.868419] FS:  0000000000000000(0000) GS:ffff88011fb00000(0000) knlGS:0000000000000000\n  [ 6058.868511] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [ 6058.868578] CR2: 00000000000001f8 CR3: 00000001113c5000 CR4: 00000000001406e0\n  [ 6058.868662] Call Trace:\n  [ 6058.868705]  dvb_unregister_frontend+0x2a/0x80 [dvb_core]\n  [ 6058.868774]  em28xx_dvb_fini+0x132/0x220 [em28xx_dvb]\n  [ 6058.868840]  em28xx_close_extension+0x34/0x90 [em28xx]\n  [ 6058.868902]  em28xx_usb_disconnect+0x4e/0x70 [em28xx]\n  [ 6058.868968]  usb_unbind_interface+0x6d/0x260\n  [ 6058.869025]  device_release_driver_internal+0x150/0x210\n  [ 6058.869094]  device_release_driver+0xd/0x10\n  [ 6058.869150]  bus_remove_device+0xe4/0x160\n  [ 6058.869204]  device_del+0x1ce/0x2f0\n  [ 6058.869253]  usb_disable_device+0x99/0x270\n  [ 6058.869306]  usb_disconnect+0x8d/0x260\n  [ 6058.869359]  hub_event+0x93d/0x1520\n  [ 6058.869408]  ? dequeue_task_fair+0xae5/0xd20\n  [ 6058.869467]  process_one_work+0x1d9/0x3e0\n  [ 6058.869522]  worker_thread+0x43/0x3e0\n  [ 6058.869576]  kthread+0x104/0x140\n  [ 6058.869602]  ? trace_event_raw_event_workqueue_work+0x80/0x80\n  [ 6058.869640]  ? kthread_create_on_node+0x40/0x40\n  [ 6058.869673]  ret_from_fork+0x22/0x30\n  [ 6058.869698] Code: 54 49 89 fc 53 48 8b 9f 18 03 00 00 0f 1f 44 00 00 41 83 bc 24 04 05 00 00 02 74 0c 41 c7 84 24 04 05 00 00 01 00 00 00 0f ae f0 <48> 8b bb f8 01 00 00 48 85 ff 74 5c e8 df 40 f0 e0 48 8b 93 f8\n  [ 6058.869850] RIP: dvb_frontend_stop+0x30/0xd0 [dvb_core] RSP: ffffc90003077b58\n  [ 6058.869894] CR2: 00000000000001f8\n  [ 6058.875880] ---[ end trace 717eecf7193b3fc6 ]---\n\nSigned-off-by: Matthias Schwarzott <zzam@gentoo.org>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
        "before_after_code_files": [
          "drivers/mediusb/em28xx/em28xx-dvb.c||drivers/media/usem28xx/em28xx-dvb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/mediusb/em28xx/em28xx-dvb.c||drivers/media/usem28xx/em28xx-dvb.c": [
          "File: drivers/mediusb/em28xx/em28xx-dvb.c -> drivers/media/usem28xx/em28xx-dvb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ed11aeefda439c76ddae3ceebcfa4fad111f149",
      "candidate_info": {
        "commit_hash": "4ed11aeefda439c76ddae3ceebcfa4fad111f149",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/4ed11aeefda439c76ddae3ceebcfa4fad111f149",
        "files": [
          "arch/powerpc/kvm/book3s_64_mmu_hv.c"
        ],
        "message": "KVM: PPC: Book3S HV: Fix use after free in case of multiple resize requests\n\nWhen serving multiple resize requests following could happen:\n\n    CPU0                                    CPU1\n    ----                                    ----\n    kvm_vm_ioctl_resize_hpt_prepare(1);\n      -> schedule_work()\n                                            /* system_rq might be busy: delay */\n    kvm_vm_ioctl_resize_hpt_prepare(2);\n      mutex_lock();\n      if (resize) {\n         ...\n         release_hpt_resize();\n      }\n      ...                                   resize_hpt_prepare_work()\n      -> schedule_work()                    {\n      mutex_unlock()                           /* resize->kvm could be wrong */\n                                               struct kvm *kvm = resize->kvm;\n\n                                               mutex_lock(&kvm->lock);   <<<< UAF\n                                               ...\n                                            }\n\ni.e. a second resize request with different order could be started by\nkvm_vm_ioctl_resize_hpt_prepare(), causing the previous request to be\nfree()d when there's still an active worker thread which will try to\naccess it.  This leads to a use after free in point marked with UAF on\nthe diagram above.\n\nTo prevent this from happening, instead of unconditionally releasing a\npre-existing resize structure from the prepare ioctl(), we check if\nthe existing structure has an in-progress worker.  We do that by\nchecking if the resize->error == -EBUSY, which is safe because the\nresize->error field is protected by the kvm->lock.  If there is an\nactive worker, instead of releasing, we mark the structure as stale by\nunlinking it from kvm_struct.\n\nIn the worker thread we check for a stale structure (with kvm->lock\nheld), and in that case abort, releasing the stale structure ourself.\nWe make the check both before and the actual allocation.  Strictly,\nonly the check afterwards is needed, the check before is an\noptimization: if the structure happens to become stale before the\nworker thread is dispatched, rather than during the allocation, it\nmeans we can avoid allocating then immediately freeing a potentially\nsubstantial amount of memory.\n\nThis fixes following or similar host kernel crash message:\n\n[  635.277361] Unable to handle kernel paging request for data at address 0x00000000\n[  635.277438] Faulting instruction address: 0xc00000000052f568\n[  635.277446] Oops: Kernel access of bad area, sig: 11 [#1]\n[  635.277451] SMP NR_CPUS=2048 NUMA PowerNV\n[  635.277470] Modules linked in: xt_CHECKSUM iptable_mangle ipt_MASQUERADE\nnf_nat_masquerade_ipv4 iptable_nat nf_nat_ipv4 nf_nat nf_conntrack_ipv4\nnf_defrag_ipv4 xt_conntrack nf_conntrack ipt_REJECT nf_reject_ipv4 tun bridge stp llc\nebtable_filter ebtables ip6table_filter ip6_tables iptable_filter nfsv3 nfs_acl nfs\nlockd grace fscache kvm_hv kvm rpcrdma sunrpc ib_isert iscsi_target_mod ib_iser libiscsi\nscsi_transport_iscsi ib_srpt target_core_mod ext4 ib_srp scsi_transport_srp\nib_ipoib mbcache jbd2 rdma_ucm ib_ucm ib_uverbs ib_umad rdma_cm ib_cm iw_cm ocrdma(T)\nib_core ses enclosure scsi_transport_sas sg shpchp leds_powernv ibmpowernv i2c_opal\ni2c_core powernv_rng ipmi_powernv ipmi_devintf ipmi_msghandler ip_tables xfs\nlibcrc32c sr_mod sd_mod cdrom lpfc nvme_fc(T) nvme_fabrics nvme_core ipr nvmet_fc(T)\ntg3 nvmet libata be2net crc_t10dif crct10dif_generic scsi_transport_fc ptp scsi_tgt\npps_core crct10dif_common dm_mirror dm_region_hash dm_log dm_mod\n[  635.278687] CPU: 40 PID: 749 Comm: kworker/40:1 Tainted: G\n------------ T 3.10.0.bz1510771+ #1\n[  635.278782] Workqueue: events resize_hpt_prepare_work [kvm_hv]\n[  635.278851] task: c0000007e6840000 ti: c0000007e9180000 task.ti: c0000007e9180000\n[  635.278919] NIP: c00000000052f568 LR: c0000000009ea310 CTR: c0000000009ea4f0\n[  635.278988] REGS: c0000007e91837f0 TRAP: 0300   Tainted: G\n------------ T  (3.10.0.bz1510771+)\n[  635.279077] MSR: 9000000100009033 <SF,HV,EE,ME,IR,DR,RI,LE>  CR: 24002022  XER:\n00000000\n[  635.279248] CFAR: c000000000009368 DAR: 0000000000000000 DSISR: 40000000 SOFTE: 1\nGPR00: c0000000009ea310 c0000007e9183a70 c000000001250b00 c0000007e9183b10\nGPR04: 0000000000000000 0000000000000000 c0000007e9183650 0000000000000000\nGPR08: c0000007ffff7b80 00000000ffffffff 0000000080000028 d00000000d2529a0\nGPR12: 0000000000002200 c000000007b56800 c000000000120028 c0000007f135bb40\nGPR16: 0000000000000000 c000000005c1e018 c000000005c1e018 0000000000000000\nGPR20: 0000000000000001 c0000000011bf778 0000000000000001 fffffffffffffef7\nGPR24: 0000000000000000 c000000f1e262e50 0000000000000002 c0000007e9180000\nGPR28: c000000f1e262e4c c000000f1e262e50 0000000000000000 c0000007e9183b10\n[  635.280149] NIP [c00000000052f568] __list_add+0x38/0x110\n[  635.280197] LR [c0000000009ea310] __mutex_lock_slowpath+0xe0/0x2c0\n[  635.280253] Call Trace:\n[  635.280277] [c0000007e9183af0] [c0000000009ea310] __mutex_lock_slowpath+0xe0/0x2c0\n[  635.280356] [c0000007e9183b70] [c0000000009ea554] mutex_lock+0x64/0x70\n[  635.280426] [c0000007e9183ba0] [d00000000d24da04]\nresize_hpt_prepare_work+0xe4/0x1c0 [kvm_hv]\n[  635.280507] [c0000007e9183c40] [c000000000113c0c] process_one_work+0x1dc/0x680\n[  635.280587] [c0000007e9183ce0] [c000000000114250] worker_thread+0x1a0/0x520\n[  635.280655] [c0000007e9183d80] [c00000000012010c] kthread+0xec/0x100\n[  635.280724] [c0000007e9183e30] [c00000000000a4b8] ret_from_kernel_thread+0x5c/0xa4\n[  635.280814] Instruction dump:\n[  635.280880] 7c0802a6 fba1ffe8 fbc1fff0 7cbd2b78 fbe1fff8 7c9e2378 7c7f1b78\nf8010010\n[  635.281099] f821ff81 e8a50008 7fa52040 40de00b8 <e8be0000> 7fbd2840 40de008c\n7fbff040\n[  635.281324] ---[ end trace b628b73449719b9d ]---\n\nCc: stable@vger.kernel.org # v4.10+\nFixes: b5baa6877315 (\"KVM: PPC: Book3S HV: KVM-HV HPT resizing implementation\")\nSigned-off-by: Serhii Popovych <spopovyc@redhat.com>\n[dwg: Replaced BUG_ON()s with WARN_ONs() and reworded commit message\n for clarity]\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>\nSigned-off-by: Paul Mackerras <paulus@ozlabs.org>",
        "before_after_code_files": [
          "arch/powerpc/kvm/book3s_64_mmu_hv.c||arch/powerpc/kvm/book3s_64_mmu_hv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/powerpc/kvm/book3s_64_mmu_hv.c||arch/powerpc/kvm/book3s_64_mmu_hv.c": [
          "File: arch/powerpc/kvm/book3s_64_mmu_hv.c -> arch/powerpc/kvm/book3s_64_mmu_hv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1420: static void resize_hpt_release(struct kvm *kvm, struct kvm_resize_hpt *resize)",
          "1421: {",
          "1424:  if (!resize)",
          "1425:   return;",
          "1432: }",
          "1434: static void resize_hpt_prepare_work(struct work_struct *work)",
          "",
          "[Removed Lines]",
          "1422:  BUG_ON(kvm->arch.resize_hpt != resize);",
          "1427:  if (resize->hpt.virt)",
          "1428:   kvmppc_free_hpt(&resize->hpt);",
          "1430:  kvm->arch.resize_hpt = NULL;",
          "1431:  kfree(resize);",
          "",
          "[Added Lines]",
          "1422:  if (WARN_ON(!mutex_is_locked(&kvm->lock)))",
          "1423:   return;",
          "1428:  if (resize->error != -EBUSY) {",
          "1429:   if (resize->hpt.virt)",
          "1430:    kvmppc_free_hpt(&resize->hpt);",
          "1431:   kfree(resize);",
          "1432:  }",
          "1434:  if (kvm->arch.resize_hpt == resize)",
          "1435:   kvm->arch.resize_hpt = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1437:            struct kvm_resize_hpt,",
          "1438:            work);",
          "1439:  struct kvm *kvm = resize->kvm;",
          "1442:  if (WARN_ON(resize->error != -EBUSY))",
          "1443:   return;",
          "1458:  resize->error = err;",
          "1460:  mutex_unlock(&kvm->lock);",
          "1461: }",
          "",
          "[Removed Lines]",
          "1440:  int err;",
          "1445:  resize_hpt_debug(resize, \"resize_hpt_prepare_work(): order = %d\\n\",",
          "1446:     resize->order);",
          "1448:  err = resize_hpt_allocate(resize);",
          "1453:  if (WARN_ON(err == -EBUSY))",
          "1454:   err = -EINPROGRESS;",
          "1456:  mutex_lock(&kvm->lock);",
          "",
          "[Added Lines]",
          "1444:  int err = 0;",
          "1449:  mutex_lock(&kvm->lock);",
          "1452:  if (kvm->arch.resize_hpt == resize) {",
          "1456:   mutex_unlock(&kvm->lock);",
          "1458:   resize_hpt_debug(resize, \"resize_hpt_prepare_work(): order = %d\\n\",",
          "1459:      resize->order);",
          "1461:   err = resize_hpt_allocate(resize);",
          "1466:   if (WARN_ON(err == -EBUSY))",
          "1467:    err = -EINPROGRESS;",
          "1469:   mutex_lock(&kvm->lock);",
          "1473:  }",
          "1477:  if (kvm->arch.resize_hpt != resize)",
          "1478:   resize_hpt_release(kvm, resize);",
          "",
          "---------------"
        ]
      }
    }
  ]
}