{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0a48c05b5988aea84c605751900926fa25443b34",
      "candidate_info": {
        "commit_hash": "0a48c05b5988aea84c605751900926fa25443b34",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/0a48c05b5988aea84c605751900926fa25443b34",
        "files": [
          "ChangeLog",
          "src/version.c"
        ],
        "message": "2013.05.16, Version 0.11.3 (Unstable)\n\nChanges since version 0.11.2:\n\n* unix: clean up uv_accept() (Ben Noordhuis)\n\n* unix: remove errno preserving code (Ben Noordhuis)\n\n* darwin: fix ios build, don't require ApplicationServices (Ben\n  Noordhuis)\n\n* windows: kill child processes when the parent dies (Bert Belder)\n\n* build: set soname in shared library (Ben Noordhuis)\n\n* build: make `make test` link against .a again (Ben Noordhuis)\n\n* build: only set soname on shared object builds (Timothy J. Fontaine)\n\n* build: convert predefined $PLATFORM to lower case (Elliot Saba)\n\n* test: fix process_title failing on linux (Miroslav Bajto\u0161)\n\n* test, sunos: disable process_title test (Miroslav Bajto\u0161)\n\n* test: add error logging to tty unit test (Miroslav Bajto\u0161)",
        "before_after_code_files": [
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #define UV_VERSION_MAJOR 0",
          "33: #define UV_VERSION_MINOR 11",
          "34: #define UV_VERSION_PATCH 3",
          "38: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "",
          "[Removed Lines]",
          "35: #define UV_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "35: #define UV_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b4f2b84f10c96efa37910f324bc66e27aec3828",
      "candidate_info": {
        "commit_hash": "9b4f2b84f10c96efa37910f324bc66e27aec3828",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/9b4f2b84f10c96efa37910f324bc66e27aec3828",
        "files": [
          "src/unix/tcp.c",
          "src/win/tcp.c",
          "test/test-list.h",
          "test/test-tcp-bind-error.c"
        ],
        "message": "unix, windows: validate flags on uv_udp|tcp_bind\n\nfixes #1247",
        "before_after_code_files": [
          "src/unix/tcp.c||src/unix/tcp.c",
          "src/win/tcp.c||src/win/tcp.c",
          "test/test-list.h||test/test-list.h",
          "test/test-tcp-bind-error.c||test/test-tcp-bind-error.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/tcp.c||src/unix/tcp.c": [
          "File: src/unix/tcp.c -> src/unix/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:   int err;",
          "64:   int on;",
          "66:   err = maybe_new_socket(tcp,",
          "67:                          addr->sa_family,",
          "68:                          UV_STREAM_READABLE | UV_STREAM_WRITABLE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:   if ((flags & UV_TCP_IPV6ONLY) && addr->sa_family != AF_INET6)",
          "68:     return -EINVAL;",
          "",
          "---------------"
        ],
        "src/win/tcp.c||src/win/tcp.c": [
          "File: src/win/tcp.c -> src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "243:   int r;",
          "245:   if (handle->socket == INVALID_SOCKET) {",
          "246:     SOCKET sock = socket(addr->sa_family, SOCK_STREAM, 0);",
          "247:     if (sock == INVALID_SOCKET) {",
          "248:       return WSAGetLastError();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "247:     if ((flags & UV_TCP_IPV6ONLY) && addr->sa_family != AF_INET6)",
          "248:       return ERROR_INVALID_PARAMETER;",
          "",
          "---------------"
        ],
        "test/test-list.h||test/test-list.h": [
          "File: test/test-list.h -> test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: TEST_DECLARE   (tcp_bind_error_fault)",
          "66: TEST_DECLARE   (tcp_bind_error_inval)",
          "67: TEST_DECLARE   (tcp_bind_localhost_ok)",
          "68: TEST_DECLARE   (tcp_listen_without_bind)",
          "69: TEST_DECLARE   (tcp_connect_error_fault)",
          "70: TEST_DECLARE   (tcp_connect_timeout)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: TEST_DECLARE   (tcp_bind_invalid_flags)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "335:   TEST_ENTRY  (tcp_bind_error_fault)",
          "336:   TEST_ENTRY  (tcp_bind_error_inval)",
          "337:   TEST_ENTRY  (tcp_bind_localhost_ok)",
          "338:   TEST_ENTRY  (tcp_listen_without_bind)",
          "339:   TEST_ENTRY  (tcp_connect_error_fault)",
          "340:   TEST_ENTRY  (tcp_connect_timeout)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "339:   TEST_ENTRY  (tcp_bind_invalid_flags)",
          "",
          "---------------"
        ],
        "test/test-tcp-bind-error.c||test/test-tcp-bind-error.c": [
          "File: test/test-tcp-bind-error.c -> test/test-tcp-bind-error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "185: }",
          "188: TEST_IMPL(tcp_listen_without_bind) {",
          "189:   int r;",
          "190:   uv_tcp_t server;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "188: TEST_IMPL(tcp_bind_invalid_flags) {",
          "189:   struct sockaddr_in addr;",
          "190:   uv_tcp_t server;",
          "191:   int r;",
          "193:   ASSERT(0 == uv_ip4_addr(\"127.0.0.1\", TEST_PORT, &addr));",
          "195:   r = uv_tcp_init(uv_default_loop(), &server);",
          "196:   ASSERT(r == 0);",
          "197:   r = uv_tcp_bind(&server, (const struct sockaddr*) &addr, UV_TCP_IPV6ONLY);",
          "198:   ASSERT(r == UV_EINVAL);",
          "200:   MAKE_VALGRIND_HAPPY();",
          "201:   return 0;",
          "202: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "280469f4fe6fe9e971bcc50eadcc19bc9a4a102f",
      "candidate_info": {
        "commit_hash": "280469f4fe6fe9e971bcc50eadcc19bc9a4a102f",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/280469f4fe6fe9e971bcc50eadcc19bc9a4a102f",
        "files": [
          "test/test-list.h"
        ],
        "message": "test: build spawn_fs_open only on unixes",
        "before_after_code_files": [
          "test/test-list.h||test/test-list.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/test-list.h||test/test-list.h": [
          "File: test/test-list.h -> test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "225: TEST_DECLARE   (ip6_addr_link_local)",
          "226: #ifdef _WIN32",
          "227: TEST_DECLARE   (spawn_detect_pipe_name_collisions_on_windows)",
          "229: TEST_DECLARE   (argument_escaping)",
          "230: TEST_DECLARE   (environment_creation)",
          "231: TEST_DECLARE   (listen_with_simultaneous_accepts)",
          "",
          "[Removed Lines]",
          "228: TEST_DECLARE   (spawn_fs_open)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234: #else",
          "235: TEST_DECLARE   (emfile)",
          "236: TEST_DECLARE   (close_fd)",
          "237: TEST_DECLARE   (spawn_setuid_setgid)",
          "238: TEST_DECLARE   (we_get_signal)",
          "239: TEST_DECLARE   (we_get_signals)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236: TEST_DECLARE   (spawn_fs_open)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "467: #ifdef _WIN32",
          "468:   TEST_ENTRY  (spawn_detect_pipe_name_collisions_on_windows)",
          "470:   TEST_ENTRY  (argument_escaping)",
          "471:   TEST_ENTRY  (environment_creation)",
          "472:   TEST_ENTRY  (listen_with_simultaneous_accepts)",
          "",
          "[Removed Lines]",
          "469:   TEST_ENTRY  (spawn_fs_open)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "475: #else",
          "476:   TEST_ENTRY  (emfile)",
          "477:   TEST_ENTRY  (close_fd)",
          "478:   TEST_ENTRY  (spawn_setuid_setgid)",
          "479:   TEST_ENTRY  (we_get_signal)",
          "480:   TEST_ENTRY  (we_get_signals)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "477:   TEST_ENTRY  (spawn_fs_open)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e4f28adce4f63013c8a55b09bfaf16dbcfd6c242",
      "candidate_info": {
        "commit_hash": "e4f28adce4f63013c8a55b09bfaf16dbcfd6c242",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/e4f28adce4f63013c8a55b09bfaf16dbcfd6c242",
        "files": [
          "test/task.h"
        ],
        "message": "test: make sure all handles in the loop are closed",
        "before_after_code_files": [
          "test/task.h||test/task.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/task.h||test/task.h": [
          "File: test/task.h -> test/task.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #ifndef TASK_H_",
          "23: #define TASK_H_",
          "25: #include <stdio.h>",
          "26: #include <stddef.h>",
          "27: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #include \"uv.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119: #define TEST_IMPL(name)                                                       \\",
          "",
          "[Removed Lines]",
          "115: #define MAKE_VALGRIND_HAPPY()  \\",
          "116:   uv_loop_delete(uv_default_loop())",
          "",
          "[Added Lines]",
          "117: #define MAKE_VALGRIND_HAPPY()           \\",
          "118:   do {                                  \\",
          "119:     close_loop(uv_default_loop());      \\",
          "120:     uv_loop_delete(uv_default_loop());  \\",
          "121:   } while (0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "205: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213: static void close_walk_cb(uv_handle_t* handle, void* arg) {",
          "214:   if (!uv_is_closing(handle))",
          "215:     uv_close(handle, NULL);",
          "216: }",
          "218: static void close_loop(uv_loop_t* loop) {",
          "219:   uv_walk(loop, close_walk_cb, NULL);",
          "220:   uv_run(loop, UV_RUN_DEFAULT);",
          "221: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "333a5b730f794e9deb38912819266eb4e1e248a1",
      "candidate_info": {
        "commit_hash": "333a5b730f794e9deb38912819266eb4e1e248a1",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/333a5b730f794e9deb38912819266eb4e1e248a1",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/version.c"
        ],
        "message": "Now working on v0.11.17",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: # OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
          "15: AC_PREREQ(2.57)",
          "17: AC_CONFIG_MACRO_DIR([m4])",
          "18: m4_include([m4/libuv-extra-automake-flags.m4])",
          "19: AM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects] UV_EXTRA_AUTOMAKE_FLAGS)",
          "",
          "[Removed Lines]",
          "16: AC_INIT([libuv], [0.11.16], [https://github.com/joyent/libuv/issues])",
          "",
          "[Added Lines]",
          "16: AC_INIT([libuv], [0.11.17], [https://github.com/joyent/libuv/issues])",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #define UV_VERSION_MAJOR 0",
          "33: #define UV_VERSION_MINOR 11",
          "38: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "",
          "[Removed Lines]",
          "34: #define UV_VERSION_PATCH 16",
          "35: #define UV_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "34: #define UV_VERSION_PATCH 17",
          "35: #define UV_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    }
  ]
}