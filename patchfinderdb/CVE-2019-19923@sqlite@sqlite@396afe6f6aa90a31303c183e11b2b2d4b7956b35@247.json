{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d1c472dab66d0e583082d96a3f40630ac6a3529d",
      "candidate_info": {
        "commit_hash": "d1c472dab66d0e583082d96a3f40630ac6a3529d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d1c472dab66d0e583082d96a3f40630ac6a3529d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Increase the precision of floating point value display in VDBE debugging output.  No changes to normally deployed code.\n\nFossilOrigin-Name: a561a656ff50efc0103da3988626cea3ef05757403b83960f2aa6c0a48c2765e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3934d2d08ee14d644dc01f967c10f219b76b172c963c90a7a8141f2b08a7d5bf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "554:     printf(\" i:%lld\", p->u.i);",
          "555: #ifndef SQLITE_OMIT_FLOATING_POINT",
          "556:   }else if( p->flags & MEM_Real ){",
          "558: #endif",
          "559:   }else if( sqlite3VdbeMemIsRowSet(p) ){",
          "560:     printf(\" (rowset)\");",
          "",
          "[Removed Lines]",
          "557:     printf(\" r:%g\", p->u.r);",
          "",
          "[Added Lines]",
          "557:     printf(\" r:%.17g\", p->u.r);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21826f44bfe1551240713c0332f3db92de3fd80f",
      "candidate_info": {
        "commit_hash": "21826f44bfe1551240713c0332f3db92de3fd80f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/21826f44bfe1551240713c0332f3db92de3fd80f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Improved VDBE branch coverage in the run-time frame-spec error detection logic of window functions.\n\nFossilOrigin-Name: f56d305a7bad6608d51d8c8cef417ddb66cff50f0a75d28554ea669e47f3d90d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8681750e855a020ee374cb9f973f701a72068e33f97d0101a4fab3a228e5ebda",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1309:     int regString = sqlite3GetTempReg(pParse);",
          "1310:     sqlite3VdbeAddOp4(v, OP_String8, 0, regString, 0, \"\", P4_STATIC);",
          "1311:     sqlite3VdbeAddOp3(v, OP_Ge, regString, sqlite3VdbeCurrentAddr(v)+2, reg);",
          "1313:     VdbeCoverage(v);",
          "1314:     assert( eCond==3 || eCond==4 );",
          "1315:     VdbeCoverageIf(v, eCond==3);",
          "",
          "[Removed Lines]",
          "1312:     sqlite3VdbeChangeP5(v, SQLITE_AFF_NUMERIC);",
          "",
          "[Added Lines]",
          "1312:     sqlite3VdbeChangeP5(v, SQLITE_AFF_NUMERIC|SQLITE_JUMPIFNULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1323:     VdbeCoverageIf(v, eCond==2);",
          "1324:   }",
          "1325:   sqlite3VdbeAddOp3(v, aOp[eCond], regZero, sqlite3VdbeCurrentAddr(v)+2, reg);",
          "1331:   sqlite3MayAbort(pParse);",
          "1332:   sqlite3VdbeAddOp2(v, OP_Halt, SQLITE_ERROR, OE_Abort);",
          "1333:   sqlite3VdbeAppendP4(v, (void*)azErr[eCond], P4_STATIC);",
          "",
          "[Removed Lines]",
          "1326:   VdbeCoverageIf(v, eCond==0);",
          "1327:   VdbeCoverageIf(v, eCond==1);",
          "1328:   VdbeCoverageIf(v, eCond==2);",
          "1329:   VdbeCoverageIf(v, eCond==3);",
          "1330:   VdbeCoverageIf(v, eCond==4);",
          "",
          "[Added Lines]",
          "1328:   VdbeCoverageNeverNullIf(v, eCond==2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94f4f873b2bed7fac3df8e96125d087eb9de9532",
      "candidate_info": {
        "commit_hash": "94f4f873b2bed7fac3df8e96125d087eb9de9532",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/94f4f873b2bed7fac3df8e96125d087eb9de9532",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "test/misc1.test"
        ],
        "message": "Do not set the Cursor.seekOp test variable in the OP_NotExists opcode. This is a change to test logic only and does not affect deliverable builds.\n\nFossilOrigin-Name: 98f343077887c4d3fc2ca3bbc7f20c80ec37b0e521d70af9c986ab80bb2c7903",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "test/misc1.test||test/misc1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 16fff05347f42fe9fa0f3150290b98b59a9bb921e49dc07ca397aa1de7a7e17d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4342:   pC = p->apCsr[pOp->p1];",
          "4343:   assert( pC!=0 );",
          "4344: #ifdef SQLITE_DEBUG",
          "4346: #endif",
          "4347:   assert( pC->isTable );",
          "4348:   assert( pC->eCurType==CURTYPE_BTREE );",
          "",
          "[Removed Lines]",
          "4345:   pC->seekOp = OP_SeekRowid;",
          "",
          "[Added Lines]",
          "4345:   if( pOp->opcode==OP_SeekRowid ) pC->seekOp = OP_SeekRowid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5250:   assert( pOp->opcode!=OP_Next",
          "5251:        || pC->seekOp==OP_SeekGT || pC->seekOp==OP_SeekGE",
          "5252:        || pC->seekOp==OP_Rewind || pC->seekOp==OP_Found",
          "5254:   assert( pOp->opcode!=OP_Prev",
          "5255:        || pC->seekOp==OP_SeekLT || pC->seekOp==OP_SeekLE",
          "5256:        || pC->seekOp==OP_Last",
          "",
          "[Removed Lines]",
          "5253:        || pC->seekOp==OP_NullRow);",
          "",
          "[Added Lines]",
          "5253:        || pC->seekOp==OP_NullRow|| pC->seekOp==OP_SeekRowid);",
          "",
          "---------------"
        ],
        "test/misc1.test||test/misc1.test": [
          "File: test/misc1.test -> test/misc1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "744:   SELECT a,b,c FROM dup1;",
          "745: } {10 11 12}",
          "748: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "747: # 2018-12-20",
          "748: #",
          "749: # The Cursor.seekOp debugging value set incorrectly",
          "750: # in OP_NotExists.",
          "751: #",
          "752: sqlite3 db :memory:",
          "753: do_execsql_test misc1-28.0 {",
          "754:   CREATE TABLE t1(x);",
          "755:   CREATE UNIQUE INDEX t1x ON t1(x) WHERE x=1;",
          "756:   INSERT OR ABORT INTO t1 DEFAULT VALUES;",
          "757:   UPDATE OR REPLACE t1 SET x = 1;",
          "758:   PRAGMA integrity_check;",
          "759:   SELECT * FROM t1;",
          "760: } {ok 1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "49b0572302bd0117210dff47021077b72e8829a9",
      "candidate_info": {
        "commit_hash": "49b0572302bd0117210dff47021077b72e8829a9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/49b0572302bd0117210dff47021077b72e8829a9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/msvc.h"
        ],
        "message": "Fix for 8-byte alignment asserts that can trigger in some circumstances with 32-bit MSVC.\n\nFossilOrigin-Name: 4c02832e0c4351ced9d2391f09ee071c65a74b85a0509bf58f045afeb166f48c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/msvc.h||src/msvc.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 930842470da27d72650033ef2c1df413e70f7c40eb46f91027b35f5ee156af38",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/msvc.h||src/msvc.h": [
          "File: src/msvc.h -> src/msvc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #pragma warning(disable : 4706)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: #if !defined(_WIN64)",
          "37: #undef SQLITE_4_BYTE_ALIGNED_MALLOC",
          "38: #define SQLITE_4_BYTE_ALIGNED_MALLOC",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06baba54b4d097113e8a425010d31f044df57f4b",
      "candidate_info": {
        "commit_hash": "06baba54b4d097113e8a425010d31f044df57f4b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/06baba54b4d097113e8a425010d31f044df57f4b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c",
          "src/vdbe.h",
          "src/vdbeaux.c",
          "test/trigger1.test"
        ],
        "message": "Correction to check-in [bec5b6d4d083556d] so that it detects *all* triggers that might perturb the insertion cursor. Ticket [50c09fc2cf0d91ce].\n\nFossilOrigin-Name: 521f1d36282549488a47a434484a24924ee970d29f05a8ae499b7d536bcd692b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c",
          "src/vdbe.h||src/vdbe.h",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/trigger1.test||test/trigger1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1a6e009372cf9571e540812c8607e95a86740112a1091f03e3f632339eccb629",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1064:       sqlite3CompleteInsertion(pParse, pTab, iDataCur, iIdxCur,",
          "1065:           regIns, aRegIdx, 0, appendFlag, bUseSeek",
          "1066:       );",
          "",
          "[Removed Lines]",
          "1061:       bUseSeek = (isReplace==0 || (pTrigger==0 &&",
          "1062:           ((db->flags & SQLITE_ForeignKeys)==0 || sqlite3FkReferences(pTab)==0)",
          "1063:       ));",
          "",
          "[Added Lines]",
          "1061:       bUseSeek = (isReplace==0 || !sqlite3VdbeHasSubProgram(v));",
          "",
          "---------------"
        ],
        "src/vdbe.h||src/vdbe.h": [
          "File: src/vdbe.h -> src/vdbe.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "278: typedef int (*RecordCompare)(int,const void*,UnpackedRecord*);",
          "279: RecordCompare sqlite3VdbeFindCompare(UnpackedRecord*);",
          "282: void sqlite3VdbeLinkSubProgram(Vdbe *, SubProgram *);",
          "285: int sqlite3NotPureFunc(sqlite3_context*);",
          "",
          "[Removed Lines]",
          "281: #ifndef SQLITE_OMIT_TRIGGER",
          "283: #endif",
          "",
          "[Added Lines]",
          "282: int sqlite3VdbeHasSubProgram(Vdbe*);",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1098:   pVdbe->pProgram = p;",
          "1099: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1104: int sqlite3VdbeHasSubProgram(Vdbe *pVdbe){",
          "1105:   return pVdbe->pProgram!=0;",
          "1106: }",
          "",
          "---------------"
        ],
        "test/trigger1.test||test/trigger1.test": [
          "File: test/trigger1.test -> test/trigger1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "782:   DROP TRIGGER r20_3;",
          "783: } {}",
          "785: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "785: # 2019-10-24 ticket 50c09fc2cf0d91ce",
          "786: #",
          "787: db close",
          "788: sqlite3 db :memory:",
          "789: do_execsql_test trigger1-21.1 {",
          "790:   PRAGMA recursive_triggers = true;",
          "791:   CREATE TABLE t0(a, b, c UNIQUE);",
          "792:   CREATE UNIQUE INDEX i0 ON t0(b) WHERE a;",
          "793:   CREATE TRIGGER tr0 AFTER DELETE ON t0 BEGIN",
          "794:     DELETE FROM t0;",
          "795:   END;",
          "796:   INSERT INTO t0(a,b,c) VALUES(0,0,9),(1,1,1);",
          "797:   REPLACE INTO t0(a,b,c) VALUES(2,0,9);",
          "798:   SELECT * FROM t0;",
          "799: } {2 0 9}",
          "",
          "---------------"
        ]
      }
    }
  ]
}