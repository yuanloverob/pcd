{
  "cve_id": "CVE-2020-27673",
  "cve_desc": "An issue was discovered in the Linux kernel through 5.9.1, as used with Xen through 4.14.x. Guest OS users can cause a denial of service (host OS hang) via a high rate of events to dom0, aka CID-e99502f76271.",
  "repo": "torvalds/linux",
  "patch_hash": "e99502f76271d6bc4e374fe368c50c67a1fd3070",
  "patch_info": {
    "commit_hash": "e99502f76271d6bc4e374fe368c50c67a1fd3070",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/e99502f76271d6bc4e374fe368c50c67a1fd3070",
    "files": [
      "Documentation/admin-guide/kernel-parameters.txt",
      "drivers/xen/events/events_2l.c",
      "drivers/xen/events/events_base.c",
      "drivers/xen/events/events_fifo.c",
      "drivers/xen/events/events_internal.h"
    ],
    "message": "xen/events: defer eoi in case of excessive number of events\n\nIn case rogue guests are sending events at high frequency it might\nhappen that xen_evtchn_do_upcall() won't stop processing events in\ndom0. As this is done in irq handling a crash might be the result.\n\nIn order to avoid that, delay further inter-domain events after some\ntime in xen_evtchn_do_upcall() by forcing eoi processing into a\nworker on the same cpu, thus inhibiting new events coming in.\n\nThe time after which eoi processing is to be delayed is configurable\nvia a new module parameter \"event_loop_timeout\" which specifies the\nmaximum event loop time in jiffies (default: 2, the value was chosen\nafter some tests showing that a value of 2 was the lowest with an\nonly slight drop of dom0 network throughput while multiple guests\nperformed an event storm).\n\nHow long eoi processing will be delayed can be specified via another\nparameter \"event_eoi_delay\" (again in jiffies, default 10, again the\nvalue was chosen after testing with different delay values).\n\nThis is part of XSA-332.\n\nCc: stable@vger.kernel.org\nReported-by: Julien Grall <julien@xen.org>\nSigned-off-by: Juergen Gross <jgross@suse.com>\nReviewed-by: Stefano Stabellini <sstabellini@kernel.org>\nReviewed-by: Wei Liu <wl@xen.org>",
    "before_after_code_files": [
      "drivers/xen/events/events_2l.c||drivers/xen/events/events_2l.c",
      "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c",
      "drivers/xen/events/events_fifo.c||drivers/xen/events/events_fifo.c",
      "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h"
    ]
  },
  "patch_diff": {
    "drivers/xen/events/events_2l.c||drivers/xen/events/events_2l.c": [
      "File: drivers/xen/events/events_2l.c -> drivers/xen/events/events_2l.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "165: {",
      "166:  int irq;",
      "167:  xen_ulong_t pending_words;",
      "",
      "[Removed Lines]",
      "164: static void evtchn_2l_handle_events(unsigned cpu)",
      "",
      "[Added Lines]",
      "164: static void evtchn_2l_handle_events(unsigned cpu, struct evtchn_loop_ctrl *ctrl)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "244:    port = (word_idx * BITS_PER_EVTCHN_WORD) + bit_idx;",
      "250:    bit_idx = (bit_idx + 1) % BITS_PER_EVTCHN_WORD;",
      "",
      "[Removed Lines]",
      "245:    irq = get_evtchn_to_irq(port);",
      "247:    if (irq != -1)",
      "248:     generic_handle_irq(irq);",
      "",
      "[Added Lines]",
      "245:    handle_irq_for_port(port, ctrl);",
      "",
      "---------------"
    ],
    "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c": [
      "File: drivers/xen/events/events_base.c -> drivers/xen/events/events_base.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include <linux/pci.h>",
      "36: #include <linux/spinlock.h>",
      "37: #include <linux/cpuhotplug.h>",
      "39: #ifdef CONFIG_X86",
      "40: #include <asm/desc.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "38: #include <linux/atomic.h>",
      "39: #include <linux/ktime.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "66: #include \"events_internal.h\"",
      "68: const struct evtchn_ops *evtchn_ops;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "70: #undef MODULE_PARAM_PREFIX",
      "71: #define MODULE_PARAM_PREFIX \"xen.\"",
      "73: static uint __read_mostly event_loop_timeout = 2;",
      "74: module_param(event_loop_timeout, uint, 0644);",
      "76: static uint __read_mostly event_eoi_delay = 10;",
      "77: module_param(event_eoi_delay, uint, 0644);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "120: static void enable_dynirq(struct irq_data *data);",
      "121: static void disable_dynirq(struct irq_data *data);",
      "123: static void clear_evtchn_to_irq_row(unsigned row)",
      "124: {",
      "125:  unsigned col;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "135: static DEFINE_PER_CPU(unsigned int, irq_epoch);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "399: }",
      "400: EXPORT_SYMBOL_GPL(notify_remote_via_irq);",
      "402: static void xen_irq_lateeoi_locked(struct irq_info *info)",
      "403: {",
      "404:  evtchn_port_t evtchn;",
      "406:  evtchn = info->evtchn;",
      "408:   return;",
      "410:  unmask_evtchn(evtchn);",
      "411: }",
      "413: void xen_irq_lateeoi(unsigned int irq, unsigned int eoi_flags)",
      "414: {",
      "415:  struct irq_info *info;",
      "",
      "[Removed Lines]",
      "407:  if (!VALID_EVTCHN(evtchn))",
      "",
      "[Added Lines]",
      "416: struct lateeoi_work {",
      "417:  struct delayed_work delayed;",
      "418:  spinlock_t eoi_list_lock;",
      "419:  struct list_head eoi_list;",
      "420: };",
      "422: static DEFINE_PER_CPU(struct lateeoi_work, lateeoi);",
      "424: static void lateeoi_list_del(struct irq_info *info)",
      "425: {",
      "426:  struct lateeoi_work *eoi = &per_cpu(lateeoi, info->eoi_cpu);",
      "427:  unsigned long flags;",
      "429:  spin_lock_irqsave(&eoi->eoi_list_lock, flags);",
      "430:  list_del_init(&info->eoi_list);",
      "431:  spin_unlock_irqrestore(&eoi->eoi_list_lock, flags);",
      "432: }",
      "434: static void lateeoi_list_add(struct irq_info *info)",
      "435: {",
      "436:  struct lateeoi_work *eoi = &per_cpu(lateeoi, info->eoi_cpu);",
      "437:  struct irq_info *elem;",
      "438:  u64 now = get_jiffies_64();",
      "439:  unsigned long delay;",
      "440:  unsigned long flags;",
      "442:  if (now < info->eoi_time)",
      "443:   delay = info->eoi_time - now;",
      "444:  else",
      "445:   delay = 1;",
      "447:  spin_lock_irqsave(&eoi->eoi_list_lock, flags);",
      "449:  if (list_empty(&eoi->eoi_list)) {",
      "450:   list_add(&info->eoi_list, &eoi->eoi_list);",
      "451:   mod_delayed_work_on(info->eoi_cpu, system_wq,",
      "452:         &eoi->delayed, delay);",
      "453:  } else {",
      "454:   list_for_each_entry_reverse(elem, &eoi->eoi_list, eoi_list) {",
      "455:    if (elem->eoi_time <= info->eoi_time)",
      "456:     break;",
      "457:   }",
      "458:   list_add(&info->eoi_list, &elem->eoi_list);",
      "459:  }",
      "461:  spin_unlock_irqrestore(&eoi->eoi_list_lock, flags);",
      "462: }",
      "467:  unsigned int cpu;",
      "470:  if (!VALID_EVTCHN(evtchn) || !list_empty(&info->eoi_list))",
      "473:  cpu = info->eoi_cpu;",
      "474:  if (info->eoi_time && info->irq_epoch == per_cpu(irq_epoch, cpu)) {",
      "475:   lateeoi_list_add(info);",
      "476:   return;",
      "477:  }",
      "479:  info->eoi_time = 0;",
      "483: static void xen_irq_lateeoi_worker(struct work_struct *work)",
      "484: {",
      "485:  struct lateeoi_work *eoi;",
      "486:  struct irq_info *info;",
      "487:  u64 now = get_jiffies_64();",
      "488:  unsigned long flags;",
      "490:  eoi = container_of(to_delayed_work(work), struct lateeoi_work, delayed);",
      "492:  read_lock_irqsave(&evtchn_rwlock, flags);",
      "494:  while (true) {",
      "495:   spin_lock(&eoi->eoi_list_lock);",
      "497:   info = list_first_entry_or_null(&eoi->eoi_list, struct irq_info,",
      "498:       eoi_list);",
      "500:   if (info == NULL || now < info->eoi_time) {",
      "501:    spin_unlock(&eoi->eoi_list_lock);",
      "502:    break;",
      "503:   }",
      "505:   list_del_init(&info->eoi_list);",
      "507:   spin_unlock(&eoi->eoi_list_lock);",
      "509:   info->eoi_time = 0;",
      "511:   xen_irq_lateeoi_locked(info);",
      "512:  }",
      "514:  if (info)",
      "515:   mod_delayed_work_on(info->eoi_cpu, system_wq,",
      "516:         &eoi->delayed, info->eoi_time - now);",
      "518:  read_unlock_irqrestore(&evtchn_rwlock, flags);",
      "519: }",
      "521: static void xen_cpu_init_eoi(unsigned int cpu)",
      "522: {",
      "523:  struct lateeoi_work *eoi = &per_cpu(lateeoi, cpu);",
      "525:  INIT_DELAYED_WORK(&eoi->delayed, xen_irq_lateeoi_worker);",
      "526:  spin_lock_init(&eoi->eoi_list_lock);",
      "527:  INIT_LIST_HEAD(&eoi->eoi_list);",
      "528: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "444:  set_info_for_irq(irq, info);",
      "446:  list_add_tail(&info->list, &xen_irq_list_head);",
      "447: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "564:  INIT_LIST_HEAD(&info->eoi_list);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "499:  write_lock_irqsave(&evtchn_rwlock, flags);",
      "501:  list_del(&info->list);",
      "503:  set_info_for_irq(irq, NULL);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "620:  if (!list_empty(&info->eoi_list))",
      "621:   lateeoi_list_del(info);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1358:  notify_remote_via_irq(irq);",
      "1359: }",
      "1361: static void __xen_evtchn_do_upcall(void)",
      "1362: {",
      "1363:  struct vcpu_info *vcpu_info = __this_cpu_read(xen_vcpu);",
      "1364:  int cpu = smp_processor_id();",
      "1366:  read_lock(&evtchn_rwlock);",
      "1368:  do {",
      "1369:   vcpu_info->evtchn_upcall_pending = 0;",
      "1373:   BUG_ON(!irqs_disabled());",
      "",
      "[Removed Lines]",
      "1371:   xen_evtchn_handle_events(cpu);",
      "",
      "[Added Lines]",
      "1483: struct evtchn_loop_ctrl {",
      "1484:  ktime_t timeout;",
      "1485:  unsigned count;",
      "1486:  bool defer_eoi;",
      "1487: };",
      "1489: void handle_irq_for_port(evtchn_port_t port, struct evtchn_loop_ctrl *ctrl)",
      "1490: {",
      "1491:  int irq;",
      "1492:  struct irq_info *info;",
      "1494:  irq = get_evtchn_to_irq(port);",
      "1495:  if (irq == -1)",
      "1496:   return;",
      "1508:  if (!ctrl->defer_eoi && !(++ctrl->count & 0xff)) {",
      "1509:   ktime_t kt = ktime_get();",
      "1511:   if (!ctrl->timeout) {",
      "1512:    kt = ktime_add_ms(kt,",
      "1513:        jiffies_to_msecs(event_loop_timeout));",
      "1514:    ctrl->timeout = kt;",
      "1515:   } else if (kt > ctrl->timeout) {",
      "1516:    ctrl->defer_eoi = true;",
      "1517:   }",
      "1518:  }",
      "1520:  info = info_for_irq(irq);",
      "1522:  if (ctrl->defer_eoi) {",
      "1523:   info->eoi_cpu = smp_processor_id();",
      "1524:   info->irq_epoch = __this_cpu_read(irq_epoch);",
      "1525:   info->eoi_time = get_jiffies_64() + event_eoi_delay;",
      "1526:  }",
      "1528:  generic_handle_irq(irq);",
      "1529: }",
      "1535:  struct evtchn_loop_ctrl ctrl = { 0 };",
      "1542:   xen_evtchn_handle_events(cpu, &ctrl);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1377:  } while (vcpu_info->evtchn_upcall_pending);",
      "1379:  read_unlock(&evtchn_rwlock);",
      "1380: }",
      "1382: void xen_evtchn_do_upcall(struct pt_regs *regs)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1557:  __this_cpu_inc(irq_epoch);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1825: static inline void xen_alloc_callback_vector(void) {}",
      "1826: #endif",
      "1831: static bool fifo_events = true;",
      "1832: module_param(fifo_events, bool, 0);",
      "",
      "[Removed Lines]",
      "1828: #undef MODULE_PARAM_PREFIX",
      "1829: #define MODULE_PARAM_PREFIX \"xen.\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1835: {",
      "1836:  int ret = 0;",
      "1838:  if (evtchn_ops->percpu_init)",
      "1839:   ret = evtchn_ops->percpu_init(cpu);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2013:  xen_cpu_init_eoi(cpu);",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1861:  if (ret < 0)",
      "1862:   xen_evtchn_2l_init();",
      "1864:  cpuhp_setup_state_nocalls(CPUHP_XEN_EVTCHN_PREPARE,",
      "1865:       \"xen/evtchn:prepare\",",
      "1866:       xen_evtchn_cpu_prepare, xen_evtchn_cpu_dead);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2041:  xen_cpu_init_eoi(smp_processor_id());",
      "",
      "---------------"
    ],
    "drivers/xen/events/events_fifo.c||drivers/xen/events/events_fifo.c": [
      "File: drivers/xen/events/events_fifo.c -> drivers/xen/events/events_fifo.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "275:  return w & EVTCHN_FIFO_LINK_MASK;",
      "276: }",
      "288:          struct evtchn_fifo_control_block *control_block,",
      "291: {",
      "292:  struct evtchn_fifo_queue *q = &per_cpu(cpu_queue, cpu);",
      "293:  uint32_t head;",
      "",
      "[Removed Lines]",
      "278: static void handle_irq_for_port(evtchn_port_t port)",
      "279: {",
      "280:  int irq;",
      "282:  irq = get_evtchn_to_irq(port);",
      "283:  if (irq != -1)",
      "284:   generic_handle_irq(irq);",
      "285: }",
      "287: static void consume_one_event(unsigned cpu,",
      "289:          unsigned priority, unsigned long *ready,",
      "290:          bool drop)",
      "",
      "[Added Lines]",
      "278: static void consume_one_event(unsigned cpu, struct evtchn_loop_ctrl *ctrl,",
      "280:          unsigned priority, unsigned long *ready)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "320:   clear_bit(priority, ready);",
      "322:  if (evtchn_fifo_is_pending(port) && !evtchn_fifo_is_masked(port)) {",
      "324:    pr_warn(\"Dropping pending event for port %u\\n\", port);",
      "325:   else",
      "327:  }",
      "329:  q->head[priority] = head;",
      "330: }",
      "333: {",
      "334:  struct evtchn_fifo_control_block *control_block;",
      "335:  unsigned long ready;",
      "",
      "[Removed Lines]",
      "323:   if (unlikely(drop))",
      "326:    handle_irq_for_port(port);",
      "332: static void __evtchn_fifo_handle_events(unsigned cpu, bool drop)",
      "",
      "[Added Lines]",
      "313:   if (unlikely(!ctrl))",
      "316:    handle_irq_for_port(port, ctrl);",
      "322: static void __evtchn_fifo_handle_events(unsigned cpu,",
      "323:      struct evtchn_loop_ctrl *ctrl)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "342:  while (ready) {",
      "343:   q = find_first_bit(&ready, EVTCHN_FIFO_MAX_QUEUES);",
      "345:   ready |= xchg(&control_block->ready, 0);",
      "346:  }",
      "347: }",
      "350: {",
      "352: }",
      "354: static void evtchn_fifo_resume(void)",
      "",
      "[Removed Lines]",
      "344:   consume_one_event(cpu, control_block, q, &ready, drop);",
      "349: static void evtchn_fifo_handle_events(unsigned cpu)",
      "351:  __evtchn_fifo_handle_events(cpu, false);",
      "",
      "[Added Lines]",
      "335:   consume_one_event(cpu, ctrl, control_block, q, &ready);",
      "340: static void evtchn_fifo_handle_events(unsigned cpu,",
      "341:           struct evtchn_loop_ctrl *ctrl)",
      "343:  __evtchn_fifo_handle_events(cpu, ctrl);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "417: static int evtchn_fifo_percpu_deinit(unsigned int cpu)",
      "418: {",
      "420:  return 0;",
      "421: }",
      "",
      "[Removed Lines]",
      "419:  __evtchn_fifo_handle_events(cpu, true);",
      "",
      "[Added Lines]",
      "411:  __evtchn_fifo_handle_events(cpu, NULL);",
      "",
      "---------------"
    ],
    "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h": [
      "File: drivers/xen/events/events_internal.h -> drivers/xen/events/events_internal.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "31: struct irq_info {",
      "32:  struct list_head list;",
      "33:  int refcnt;",
      "35:  unsigned irq;",
      "39:  union {",
      "40:   unsigned short virq;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "33:  struct list_head eoi_list;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "53: #define PIRQ_SHAREABLE (1 << 1)",
      "54: #define PIRQ_MSI_GROUP (1 << 2)",
      "56: struct evtchn_ops {",
      "57:  unsigned (*max_channels)(void);",
      "58:  unsigned (*nr_channels)(void);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "60: struct evtchn_loop_ctrl;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "67:  void (*mask)(evtchn_port_t port);",
      "68:  void (*unmask)(evtchn_port_t port);",
      "71:  void (*resume)(void);",
      "73:  int (*percpu_init)(unsigned int cpu);",
      "",
      "[Removed Lines]",
      "70:  void (*handle_events)(unsigned cpu);",
      "",
      "[Added Lines]",
      "76:  void (*handle_events)(unsigned cpu, struct evtchn_loop_ctrl *ctrl);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "79: extern int **evtchn_to_irq;",
      "80: int get_evtchn_to_irq(evtchn_port_t evtchn);",
      "82: struct irq_info *info_for_irq(unsigned irq);",
      "83: unsigned cpu_from_irq(unsigned irq);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "87: void handle_irq_for_port(evtchn_port_t port, struct evtchn_loop_ctrl *ctrl);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "135:  return evtchn_ops->unmask(port);",
      "136: }",
      "139: {",
      "141: }",
      "143: static inline void xen_evtchn_resume(void)",
      "",
      "[Removed Lines]",
      "138: static inline void xen_evtchn_handle_events(unsigned cpu)",
      "140:  return evtchn_ops->handle_events(cpu);",
      "",
      "[Added Lines]",
      "145: static inline void xen_evtchn_handle_events(unsigned cpu,",
      "146:          struct evtchn_loop_ctrl *ctrl)",
      "148:  return evtchn_ops->handle_events(cpu, ctrl);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7beb290caa2adb0a399e735a1e175db9aae0523a",
      "candidate_info": {
        "commit_hash": "7beb290caa2adb0a399e735a1e175db9aae0523a",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7beb290caa2adb0a399e735a1e175db9aae0523a",
        "files": [
          "drivers/xen/events/events_base.c",
          "drivers/xen/events/events_fifo.c",
          "drivers/xen/events/events_internal.h"
        ],
        "message": "xen/events: use a common cpu hotplug hook for event channels\n\nToday only fifo event channels have a cpu hotplug callback. In order\nto prepare for more percpu (de)init work move that callback into\nevents_base.c and add percpu_init() and percpu_deinit() hooks to\nstruct evtchn_ops.\n\nThis is part of XSA-332.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Juergen Gross <jgross@suse.com>\nReviewed-by: Jan Beulich <jbeulich@suse.com>\nReviewed-by: Wei Liu <wl@xen.org>",
        "before_after_code_files": [
          "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c",
          "drivers/xen/events/events_fifo.c||drivers/xen/events/events_fifo.c",
          "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c",
            "drivers/xen/events/events_fifo.c||drivers/xen/events/events_fifo.c",
            "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h"
          ],
          "candidate": [
            "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c",
            "drivers/xen/events/events_fifo.c||drivers/xen/events/events_fifo.c",
            "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h"
          ]
        }
      },
      "candidate_diff": {
        "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c": [
          "File: drivers/xen/events/events_base.c -> drivers/xen/events/events_base.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: #include <linux/irqnr.h>",
          "35: #include <linux/pci.h>",
          "36: #include <linux/spinlock.h>",
          "38: #ifdef CONFIG_X86",
          "39: #include <asm/desc.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: #include <linux/cpuhotplug.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1830: static bool fifo_events = true;",
          "1831: module_param(fifo_events, bool, 0);",
          "1833: void __init xen_init_IRQ(void)",
          "1834: {",
          "1835:  int ret = -EINVAL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1834: static int xen_evtchn_cpu_prepare(unsigned int cpu)",
          "1835: {",
          "1836:  int ret = 0;",
          "1838:  if (evtchn_ops->percpu_init)",
          "1839:   ret = evtchn_ops->percpu_init(cpu);",
          "1841:  return ret;",
          "1842: }",
          "1844: static int xen_evtchn_cpu_dead(unsigned int cpu)",
          "1845: {",
          "1846:  int ret = 0;",
          "1848:  if (evtchn_ops->percpu_deinit)",
          "1849:   ret = evtchn_ops->percpu_deinit(cpu);",
          "1851:  return ret;",
          "1852: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1840:  if (ret < 0)",
          "1841:   xen_evtchn_2l_init();",
          "1843:  evtchn_to_irq = kcalloc(EVTCHN_ROW(xen_evtchn_max_channels()),",
          "1844:     sizeof(*evtchn_to_irq), GFP_KERNEL);",
          "1845:  BUG_ON(!evtchn_to_irq);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1864:  cpuhp_setup_state_nocalls(CPUHP_XEN_EVTCHN_PREPARE,",
          "1865:       \"xen/evtchn:prepare\",",
          "1866:       xen_evtchn_cpu_prepare, xen_evtchn_cpu_dead);",
          "",
          "---------------"
        ],
        "drivers/xen/events/events_fifo.c||drivers/xen/events/events_fifo.c": [
          "File: drivers/xen/events/events_fifo.c -> drivers/xen/events/events_fifo.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "385:  event_array_pages = 0;",
          "386: }",
          "403: static int evtchn_fifo_alloc_control_block(unsigned cpu)",
          "404: {",
          "405:  void *control_block = NULL;",
          "",
          "[Removed Lines]",
          "388: static const struct evtchn_ops evtchn_ops_fifo = {",
          "389:  .max_channels      = evtchn_fifo_max_channels,",
          "390:  .nr_channels       = evtchn_fifo_nr_channels,",
          "391:  .setup             = evtchn_fifo_setup,",
          "392:  .bind_to_cpu       = evtchn_fifo_bind_to_cpu,",
          "393:  .clear_pending     = evtchn_fifo_clear_pending,",
          "394:  .set_pending       = evtchn_fifo_set_pending,",
          "395:  .is_pending        = evtchn_fifo_is_pending,",
          "396:  .test_and_set_mask = evtchn_fifo_test_and_set_mask,",
          "397:  .mask              = evtchn_fifo_mask,",
          "398:  .unmask            = evtchn_fifo_unmask,",
          "399:  .handle_events     = evtchn_fifo_handle_events,",
          "400:  .resume            = evtchn_fifo_resume,",
          "401: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "422:  return ret;",
          "423: }",
          "426: {",
          "427:  if (!per_cpu(cpu_control_block, cpu))",
          "428:   return evtchn_fifo_alloc_control_block(cpu);",
          "429:  return 0;",
          "430: }",
          "433: {",
          "434:  __evtchn_fifo_handle_events(cpu, true);",
          "435:  return 0;",
          "436: }",
          "438: int __init xen_evtchn_fifo_init(void)",
          "439: {",
          "440:  int cpu = smp_processor_id();",
          "",
          "[Removed Lines]",
          "425: static int xen_evtchn_cpu_prepare(unsigned int cpu)",
          "432: static int xen_evtchn_cpu_dead(unsigned int cpu)",
          "",
          "[Added Lines]",
          "410: static int evtchn_fifo_percpu_init(unsigned int cpu)",
          "417: static int evtchn_fifo_percpu_deinit(unsigned int cpu)",
          "423: static const struct evtchn_ops evtchn_ops_fifo = {",
          "424:  .max_channels      = evtchn_fifo_max_channels,",
          "425:  .nr_channels       = evtchn_fifo_nr_channels,",
          "426:  .setup             = evtchn_fifo_setup,",
          "427:  .bind_to_cpu       = evtchn_fifo_bind_to_cpu,",
          "428:  .clear_pending     = evtchn_fifo_clear_pending,",
          "429:  .set_pending       = evtchn_fifo_set_pending,",
          "430:  .is_pending        = evtchn_fifo_is_pending,",
          "431:  .test_and_set_mask = evtchn_fifo_test_and_set_mask,",
          "432:  .mask              = evtchn_fifo_mask,",
          "433:  .unmask            = evtchn_fifo_unmask,",
          "434:  .handle_events     = evtchn_fifo_handle_events,",
          "435:  .resume            = evtchn_fifo_resume,",
          "436:  .percpu_init       = evtchn_fifo_percpu_init,",
          "437:  .percpu_deinit     = evtchn_fifo_percpu_deinit,",
          "438: };",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "449:  evtchn_ops = &evtchn_ops_fifo;",
          "455:  return ret;",
          "456: }",
          "",
          "[Removed Lines]",
          "451:  cpuhp_setup_state_nocalls(CPUHP_XEN_EVTCHN_PREPARE,",
          "452:       \"xen/evtchn:prepare\",",
          "453:       xen_evtchn_cpu_prepare, xen_evtchn_cpu_dead);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h": [
          "File: drivers/xen/events/events_internal.h -> drivers/xen/events/events_internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:  void (*handle_events)(unsigned cpu);",
          "71:  void (*resume)(void);",
          "72: };",
          "74: extern const struct evtchn_ops *evtchn_ops;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:  int (*percpu_init)(unsigned int cpu);",
          "74:  int (*percpu_deinit)(unsigned int cpu);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f7f77400ab5b357b5fdb7122c3442239672186c",
      "candidate_info": {
        "commit_hash": "5f7f77400ab5b357b5fdb7122c3442239672186c",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/5f7f77400ab5b357b5fdb7122c3442239672186c",
        "files": [
          "drivers/xen/events/events_base.c",
          "drivers/xen/events/events_internal.h"
        ],
        "message": "xen/events: block rogue events for some time\n\nIn order to avoid high dom0 load due to rogue guests sending events at\nhigh frequency, block those events in case there was no action needed\nin dom0 to handle the events.\n\nThis is done by adding a per-event counter, which set to zero in case\nan EOI without the XEN_EOI_FLAG_SPURIOUS is received from a backend\ndriver, and incremented when this flag has been set. In case the\ncounter is 2 or higher delay the EOI by 1 << (cnt - 2) jiffies, but\nnot more than 1 second.\n\nIn order not to waste memory shorten the per-event refcnt to two bytes\n(it should normally never exceed a value of 2). Add an overflow check\nto evtchn_get() to make sure the 2 bytes really won't overflow.\n\nThis is part of XSA-332.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Juergen Gross <jgross@suse.com>\nReviewed-by: Jan Beulich <jbeulich@suse.com>\nReviewed-by: Stefano Stabellini <sstabellini@kernel.org>\nReviewed-by: Wei Liu <wl@xen.org>",
        "before_after_code_files": [
          "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c",
          "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c",
            "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h"
          ],
          "candidate": [
            "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c",
            "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h"
          ]
        }
      },
      "candidate_diff": {
        "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c": [
          "File: drivers/xen/events/events_base.c -> drivers/xen/events/events_base.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "461:  spin_unlock_irqrestore(&eoi->eoi_list_lock, flags);",
          "462: }",
          "465: {",
          "466:  evtchn_port_t evtchn;",
          "467:  unsigned int cpu;",
          "469:  evtchn = info->evtchn;",
          "470:  if (!VALID_EVTCHN(evtchn) || !list_empty(&info->eoi_list))",
          "471:   return;",
          "473:  cpu = info->eoi_cpu;",
          "475:   lateeoi_list_add(info);",
          "476:   return;",
          "477:  }",
          "",
          "[Removed Lines]",
          "464: static void xen_irq_lateeoi_locked(struct irq_info *info)",
          "474:  if (info->eoi_time && info->irq_epoch == per_cpu(irq_epoch, cpu)) {",
          "",
          "[Added Lines]",
          "464: static void xen_irq_lateeoi_locked(struct irq_info *info, bool spurious)",
          "468:  unsigned int delay = 0;",
          "474:  if (spurious) {",
          "475:   if ((1 << info->spurious_cnt) < (HZ << 2))",
          "476:    info->spurious_cnt++;",
          "477:   if (info->spurious_cnt > 1) {",
          "478:    delay = 1 << (info->spurious_cnt - 2);",
          "479:    if (delay > HZ)",
          "480:     delay = HZ;",
          "481:    if (!info->eoi_time)",
          "482:     info->eoi_cpu = smp_processor_id();",
          "483:    info->eoi_time = get_jiffies_64() + delay;",
          "484:   }",
          "485:  } else {",
          "486:   info->spurious_cnt = 0;",
          "487:  }",
          "490:  if (info->eoi_time &&",
          "491:      (info->irq_epoch == per_cpu(irq_epoch, cpu) || delay)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "509:   info->eoi_time = 0;",
          "512:  }",
          "514:  if (info)",
          "",
          "[Removed Lines]",
          "511:   xen_irq_lateeoi_locked(info);",
          "",
          "[Added Lines]",
          "528:   xen_irq_lateeoi_locked(info, false);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "537:  info = info_for_irq(irq);",
          "539:  if (info)",
          "542:  read_unlock_irqrestore(&evtchn_rwlock, flags);",
          "543: }",
          "",
          "[Removed Lines]",
          "540:   xen_irq_lateeoi_locked(info);",
          "",
          "[Added Lines]",
          "557:   xen_irq_lateeoi_locked(info, eoi_flags & XEN_EOI_FLAG_SPURIOUS);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1441:   goto done;",
          "1443:  err = -EINVAL;",
          "1445:   goto done;",
          "1447:  info->refcnt++;",
          "",
          "[Removed Lines]",
          "1444:  if (info->refcnt <= 0)",
          "",
          "[Added Lines]",
          "1461:  if (info->refcnt <= 0 || info->refcnt == SHRT_MAX)",
          "",
          "---------------"
        ],
        "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h": [
          "File: drivers/xen/events/events_internal.h -> drivers/xen/events/events_internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: struct irq_info {",
          "32:  struct list_head list;",
          "33:  struct list_head eoi_list;",
          "36:  unsigned irq;",
          "",
          "[Removed Lines]",
          "34:  int refcnt;",
          "",
          "[Added Lines]",
          "34:  short refcnt;",
          "35:  short spurious_cnt;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0102e4efda76d0721bc744dd80258eb6cfa25fc3",
      "candidate_info": {
        "commit_hash": "0102e4efda76d0721bc744dd80258eb6cfa25fc3",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0102e4efda76d0721bc744dd80258eb6cfa25fc3",
        "files": [
          "drivers/xen/events/events_2l.c",
          "drivers/xen/events/events_base.c",
          "drivers/xen/events/events_fifo.c",
          "drivers/xen/events/events_internal.h",
          "drivers/xen/evtchn.c",
          "drivers/xen/gntdev-common.h",
          "drivers/xen/gntdev.c",
          "drivers/xen/pvcalls-back.c",
          "drivers/xen/pvcalls-front.c",
          "drivers/xen/xen-pciback/xenbus.c",
          "drivers/xen/xen-scsiback.c",
          "drivers/xen/xenbus/xenbus_client.c",
          "include/xen/events.h",
          "include/xen/interface/event_channel.h",
          "include/xen/xenbus.h"
        ],
        "message": "xen: Use evtchn_type_t as a type for event channels\n\nMake event channel functions pass event channel port using\nevtchn_port_t type. It eliminates signed <-> unsigned conversion.\n\nSigned-off-by: Yan Yankovskyi <yyankovskyi@gmail.com>\nReviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>\nLink: https://lore.kernel.org/r/20200323152343.GA28422@kbp1-lhp-F74019\nSigned-off-by: Juergen Gross <jgross@suse.com>",
        "before_after_code_files": [
          "drivers/xen/events/events_2l.c||drivers/xen/events/events_2l.c",
          "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c",
          "drivers/xen/events/events_fifo.c||drivers/xen/events/events_fifo.c",
          "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h",
          "drivers/xen/evtchn.c||drivers/xen/evtchn.c",
          "drivers/xen/gntdev-common.h||drivers/xen/gntdev-common.h",
          "drivers/xen/gntdev.c||drivers/xen/gntdev.c",
          "drivers/xen/pvcalls-back.c||drivers/xen/pvcalls-back.c",
          "drivers/xen/pvcalls-front.c||drivers/xen/pvcalls-front.c",
          "drivers/xen/xen-pciback/xenbus.c||drivers/xen/xen-pciback/xenbus.c",
          "drivers/xen/xen-scsiback.c||drivers/xen/xen-scsiback.c",
          "drivers/xen/xenbus/xenbus_client.c||drivers/xen/xenbus/xenbus_client.c",
          "include/xen/events.h||include/xen/events.h",
          "include/xen/interface/event_channel.h||include/xen/interface/event_channel.h",
          "include/xen/xenbus.h||include/xen/xenbus.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/xen/events/events_2l.c||drivers/xen/events/events_2l.c",
            "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c",
            "drivers/xen/events/events_fifo.c||drivers/xen/events/events_fifo.c",
            "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h"
          ],
          "candidate": [
            "drivers/xen/events/events_2l.c||drivers/xen/events/events_2l.c",
            "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c",
            "drivers/xen/events/events_fifo.c||drivers/xen/events/events_fifo.c",
            "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h"
          ]
        }
      },
      "candidate_diff": {
        "drivers/xen/events/events_2l.c||drivers/xen/events/events_2l.c": [
          "File: drivers/xen/events/events_2l.c -> drivers/xen/events/events_2l.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:  set_bit(info->evtchn, BM(per_cpu(cpu_evtchn_mask, cpu)));",
          "54: }",
          "57: {",
          "58:  struct shared_info *s = HYPERVISOR_shared_info;",
          "59:  sync_clear_bit(port, BM(&s->evtchn_pending[0]));",
          "60: }",
          "63: {",
          "64:  struct shared_info *s = HYPERVISOR_shared_info;",
          "65:  sync_set_bit(port, BM(&s->evtchn_pending[0]));",
          "66: }",
          "69: {",
          "70:  struct shared_info *s = HYPERVISOR_shared_info;",
          "71:  return sync_test_bit(port, BM(&s->evtchn_pending[0]));",
          "72: }",
          "75: {",
          "76:  struct shared_info *s = HYPERVISOR_shared_info;",
          "77:  return sync_test_and_set_bit(port, BM(&s->evtchn_mask[0]));",
          "78: }",
          "81: {",
          "82:  struct shared_info *s = HYPERVISOR_shared_info;",
          "83:  sync_set_bit(port, BM(&s->evtchn_mask[0]));",
          "84: }",
          "87: {",
          "88:  struct shared_info *s = HYPERVISOR_shared_info;",
          "89:  unsigned int cpu = get_cpu();",
          "",
          "[Removed Lines]",
          "56: static void evtchn_2l_clear_pending(unsigned port)",
          "62: static void evtchn_2l_set_pending(unsigned port)",
          "68: static bool evtchn_2l_is_pending(unsigned port)",
          "74: static bool evtchn_2l_test_and_set_mask(unsigned port)",
          "80: static void evtchn_2l_mask(unsigned port)",
          "86: static void evtchn_2l_unmask(unsigned port)",
          "",
          "[Added Lines]",
          "56: static void evtchn_2l_clear_pending(evtchn_port_t port)",
          "62: static void evtchn_2l_set_pending(evtchn_port_t port)",
          "68: static bool evtchn_2l_is_pending(evtchn_port_t port)",
          "74: static bool evtchn_2l_test_and_set_mask(evtchn_port_t port)",
          "80: static void evtchn_2l_mask(evtchn_port_t port)",
          "86: static void evtchn_2l_unmask(evtchn_port_t port)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "174:  irq = irq_from_virq(cpu, VIRQ_TIMER);",
          "175:  if (irq != -1) {",
          "177:   word_idx = evtchn / BITS_PER_LONG;",
          "178:   bit_idx = evtchn % BITS_PER_LONG;",
          "179:   if (active_evtchns(cpu, s, word_idx) & (1ULL << bit_idx))",
          "",
          "[Removed Lines]",
          "176:   unsigned int evtchn = evtchn_from_irq(irq);",
          "",
          "[Added Lines]",
          "176:   evtchn_port_t evtchn = evtchn_from_irq(irq);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "229:   do {",
          "230:    xen_ulong_t bits;",
          "233:    bits = MASK_LSBS(pending_bits, bit_idx);",
          "",
          "[Removed Lines]",
          "231:    int port;",
          "",
          "[Added Lines]",
          "231:    evtchn_port_t port;",
          "",
          "---------------"
        ],
        "drivers/xen/events/events_base.c||drivers/xen/events/events_base.c": [
          "File: drivers/xen/events/events_base.c -> drivers/xen/events/events_base.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:  }",
          "117: }",
          "120: {",
          "121:  unsigned row;",
          "122:  unsigned col;",
          "",
          "[Removed Lines]",
          "119: static int set_evtchn_to_irq(unsigned evtchn, unsigned irq)",
          "",
          "[Added Lines]",
          "119: static int set_evtchn_to_irq(evtchn_port_t evtchn, unsigned int irq)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:  return 0;",
          "144: }",
          "147: {",
          "148:  if (evtchn >= xen_evtchn_max_channels())",
          "149:   return -1;",
          "",
          "[Removed Lines]",
          "146: int get_evtchn_to_irq(unsigned evtchn)",
          "",
          "[Added Lines]",
          "146: int get_evtchn_to_irq(evtchn_port_t evtchn)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "162: static int xen_irq_info_common_setup(struct irq_info *info,",
          "163:          unsigned irq,",
          "164:          enum xen_irq_type type,",
          "166:          unsigned short cpu)",
          "167: {",
          "168:  int ret;",
          "",
          "[Removed Lines]",
          "165:          unsigned evtchn,",
          "",
          "[Added Lines]",
          "165:          evtchn_port_t evtchn,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "184: }",
          "186: static int xen_irq_info_evtchn_setup(unsigned irq,",
          "188: {",
          "189:  struct irq_info *info = info_for_irq(irq);",
          "",
          "[Removed Lines]",
          "187:          unsigned evtchn)",
          "",
          "[Added Lines]",
          "187:          evtchn_port_t evtchn)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "194: static int xen_irq_info_ipi_setup(unsigned cpu,",
          "195:       unsigned irq,",
          "197:       enum ipi_vector ipi)",
          "198: {",
          "199:  struct irq_info *info = info_for_irq(irq);",
          "",
          "[Removed Lines]",
          "196:       unsigned evtchn,",
          "",
          "[Added Lines]",
          "196:       evtchn_port_t evtchn,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "208: static int xen_irq_info_virq_setup(unsigned cpu,",
          "209:        unsigned irq,",
          "211:        unsigned virq)",
          "212: {",
          "213:  struct irq_info *info = info_for_irq(irq);",
          "",
          "[Removed Lines]",
          "210:        unsigned evtchn,",
          "",
          "[Added Lines]",
          "210:        evtchn_port_t evtchn,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "220: }",
          "222: static int xen_irq_info_pirq_setup(unsigned irq,",
          "224:        unsigned pirq,",
          "225:        unsigned gsi,",
          "226:        uint16_t domid,",
          "",
          "[Removed Lines]",
          "223:        unsigned evtchn,",
          "",
          "[Added Lines]",
          "223:        evtchn_port_t evtchn,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "249: {",
          "250:  if (WARN(irq >= nr_irqs, \"Invalid irq %d!\\n\", irq))",
          "251:   return 0;",
          "",
          "[Removed Lines]",
          "248: unsigned int evtchn_from_irq(unsigned irq)",
          "",
          "[Added Lines]",
          "248: evtchn_port_t evtchn_from_irq(unsigned irq)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "253:  return info_for_irq(irq)->evtchn;",
          "254: }",
          "257: {",
          "258:  return get_evtchn_to_irq(evtchn);",
          "259: }",
          "",
          "[Removed Lines]",
          "256: unsigned irq_from_evtchn(unsigned int evtchn)",
          "",
          "[Added Lines]",
          "256: unsigned int irq_from_evtchn(evtchn_port_t evtchn)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "304:  return info_for_irq(irq)->cpu;",
          "305: }",
          "308: {",
          "309:  int irq = get_evtchn_to_irq(evtchn);",
          "310:  unsigned ret = 0;",
          "",
          "[Removed Lines]",
          "307: unsigned int cpu_from_evtchn(unsigned int evtchn)",
          "",
          "[Added Lines]",
          "307: unsigned int cpu_from_evtchn(evtchn_port_t evtchn)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "330:  return info->u.pirq.flags & PIRQ_NEEDS_EOI;",
          "331: }",
          "334: {",
          "336:  struct irq_info *info = info_for_irq(irq);",
          "338:  BUG_ON(irq == -1);",
          "",
          "[Removed Lines]",
          "333: static void bind_evtchn_to_cpu(unsigned int chn, unsigned int cpu)",
          "335:  int irq = get_evtchn_to_irq(chn);",
          "",
          "[Added Lines]",
          "333: static void bind_evtchn_to_cpu(evtchn_port_t evtchn, unsigned int cpu)",
          "335:  int irq = get_evtchn_to_irq(evtchn);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "355: void notify_remote_via_irq(int irq)",
          "356: {",
          "359:  if (VALID_EVTCHN(evtchn))",
          "360:   notify_remote_via_evtchn(evtchn);",
          "",
          "[Removed Lines]",
          "357:  int evtchn = evtchn_from_irq(irq);",
          "",
          "[Added Lines]",
          "357:  evtchn_port_t evtchn = evtchn_from_irq(irq);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "445:  irq_free_desc(irq);",
          "446: }",
          "449: {",
          "450:  struct evtchn_close close;",
          "",
          "[Removed Lines]",
          "448: static void xen_evtchn_close(unsigned int port)",
          "",
          "[Added Lines]",
          "448: static void xen_evtchn_close(evtchn_port_t port)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "473: static void eoi_pirq(struct irq_data *data)",
          "474: {",
          "476:  struct physdev_eoi eoi = { .irq = pirq_from_irq(data->irq) };",
          "477:  int rc = 0;",
          "",
          "[Removed Lines]",
          "475:  int evtchn = evtchn_from_irq(data->irq);",
          "",
          "[Added Lines]",
          "475:  evtchn_port_t evtchn = evtchn_from_irq(data->irq);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "508: {",
          "509:  struct evtchn_bind_pirq bind_pirq;",
          "510:  struct irq_info *info = info_for_irq(irq);",
          "512:  int rc;",
          "514:  BUG_ON(info->type != IRQT_PIRQ);",
          "",
          "[Removed Lines]",
          "511:  int evtchn = evtchn_from_irq(irq);",
          "",
          "[Added Lines]",
          "511:  evtchn_port_t evtchn = evtchn_from_irq(irq);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "561: {",
          "562:  unsigned int irq = data->irq;",
          "563:  struct irq_info *info = info_for_irq(irq);",
          "566:  BUG_ON(info->type != IRQT_PIRQ);",
          "",
          "[Removed Lines]",
          "564:  unsigned evtchn = evtchn_from_irq(irq);",
          "",
          "[Added Lines]",
          "564:  evtchn_port_t evtchn = evtchn_from_irq(irq);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "602: static void __unbind_from_irq(unsigned int irq)",
          "603: {",
          "605:  struct irq_info *info = irq_get_handler_data(irq);",
          "607:  if (info->refcnt > 0) {",
          "",
          "[Removed Lines]",
          "604:  int evtchn = evtchn_from_irq(irq);",
          "",
          "[Added Lines]",
          "604:  evtchn_port_t evtchn = evtchn_from_irq(irq);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "827: }",
          "828: EXPORT_SYMBOL_GPL(xen_pirq_from_irq);",
          "831: {",
          "832:  int irq;",
          "833:  int ret;",
          "",
          "[Removed Lines]",
          "830: int bind_evtchn_to_irq(unsigned int evtchn)",
          "",
          "[Added Lines]",
          "830: int bind_evtchn_to_irq(evtchn_port_t evtchn)",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "870: static int bind_ipi_to_irq(unsigned int ipi, unsigned int cpu)",
          "871: {",
          "872:  struct evtchn_bind_ipi bind_ipi;",
          "876:  mutex_lock(&irq_mapping_update_lock);",
          "",
          "[Removed Lines]",
          "873:  int evtchn, irq;",
          "874:  int ret;",
          "",
          "[Added Lines]",
          "873:  evtchn_port_t evtchn;",
          "874:  int ret, irq;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "909: }",
          "911: int bind_interdomain_evtchn_to_irq(unsigned int remote_domain,",
          "913: {",
          "914:  struct evtchn_bind_interdomain bind_interdomain;",
          "915:  int err;",
          "",
          "[Removed Lines]",
          "912:        unsigned int remote_port)",
          "",
          "[Added Lines]",
          "912:        evtchn_port_t remote_port)",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "924: }",
          "925: EXPORT_SYMBOL_GPL(bind_interdomain_evtchn_to_irq);",
          "928: {",
          "929:  struct evtchn_status status;",
          "932:  memset(&status, 0, sizeof(status));",
          "933:  for (port = 0; port < xen_evtchn_max_channels(); port++) {",
          "",
          "[Removed Lines]",
          "927: static int find_virq(unsigned int virq, unsigned int cpu)",
          "930:  int port, rc = -ENOENT;",
          "",
          "[Added Lines]",
          "927: static int find_virq(unsigned int virq, unsigned int cpu, evtchn_port_t *evtchn)",
          "930:  evtchn_port_t port;",
          "931:  int rc = -ENOENT;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "939:   if (status.status != EVTCHNSTAT_virq)",
          "940:    continue;",
          "941:   if (status.u.virq == virq && status.vcpu == xen_vcpu_nr(cpu)) {",
          "943:    break;",
          "944:   }",
          "945:  }",
          "",
          "[Removed Lines]",
          "942:    rc = port;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "962: int bind_virq_to_irq(unsigned int virq, unsigned int cpu, bool percpu)",
          "963: {",
          "964:  struct evtchn_bind_virq bind_virq;",
          "967:  mutex_lock(&irq_mapping_update_lock);",
          "",
          "[Removed Lines]",
          "965:  int evtchn, irq, ret;",
          "",
          "[Added Lines]",
          "966:  evtchn_port_t evtchn = 0;",
          "967:  int irq, ret;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "988:    evtchn = bind_virq.port;",
          "989:   else {",
          "990:    if (ret == -EEXIST)",
          "992:    BUG_ON(ret < 0);",
          "994:   }",
          "996:   ret = xen_irq_info_virq_setup(cpu, irq, evtchn, virq);",
          "",
          "[Removed Lines]",
          "991:     ret = find_virq(virq, cpu);",
          "993:    evtchn = ret;",
          "",
          "[Added Lines]",
          "993:     ret = find_virq(virq, cpu, &evtchn);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1019:  mutex_unlock(&irq_mapping_update_lock);",
          "1020: }",
          "1023:          irq_handler_t handler,",
          "1024:          unsigned long irqflags,",
          "1025:          const char *devname, void *dev_id)",
          "",
          "[Removed Lines]",
          "1022: int bind_evtchn_to_irqhandler(unsigned int evtchn,",
          "",
          "[Added Lines]",
          "1023: int bind_evtchn_to_irqhandler(evtchn_port_t evtchn,",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1040: EXPORT_SYMBOL_GPL(bind_evtchn_to_irqhandler);",
          "1042: int bind_interdomain_evtchn_to_irqhandler(unsigned int remote_domain,",
          "1044:        irq_handler_t handler,",
          "1045:        unsigned long irqflags,",
          "1046:        const char *devname,",
          "",
          "[Removed Lines]",
          "1043:        unsigned int remote_port,",
          "",
          "[Added Lines]",
          "1044:        evtchn_port_t remote_port,",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1132: }",
          "1133: EXPORT_SYMBOL_GPL(xen_set_irq_priority);",
          "1136: {",
          "1137:  int irq = get_evtchn_to_irq(evtchn);",
          "1138:  struct irq_info *info;",
          "",
          "[Removed Lines]",
          "1135: int evtchn_make_refcounted(unsigned int evtchn)",
          "",
          "[Added Lines]",
          "1136: int evtchn_make_refcounted(evtchn_port_t evtchn)",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1153: }",
          "1154: EXPORT_SYMBOL_GPL(evtchn_make_refcounted);",
          "1157: {",
          "1158:  int irq;",
          "1159:  struct irq_info *info;",
          "",
          "[Removed Lines]",
          "1156: int evtchn_get(unsigned int evtchn)",
          "",
          "[Added Lines]",
          "1157: int evtchn_get(evtchn_port_t evtchn)",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1186: }",
          "1187: EXPORT_SYMBOL_GPL(evtchn_get);",
          "1190: {",
          "1191:  int irq = get_evtchn_to_irq(evtchn);",
          "1192:  if (WARN_ON(irq == -1))",
          "",
          "[Removed Lines]",
          "1189: void evtchn_put(unsigned int evtchn)",
          "",
          "[Added Lines]",
          "1190: void evtchn_put(evtchn_port_t evtchn)",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1252: EXPORT_SYMBOL_GPL(xen_hvm_evtchn_do_upcall);",
          "1256: {",
          "1257:  struct irq_info *info = info_for_irq(irq);",
          "",
          "[Removed Lines]",
          "1255: void rebind_evtchn_irq(int evtchn, int irq)",
          "",
          "[Added Lines]",
          "1256: void rebind_evtchn_irq(evtchn_port_t evtchn, int irq)",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1284: }",
          "1288: {",
          "1289:  struct evtchn_bind_vcpu bind_vcpu;",
          "1290:  int masked;",
          "",
          "[Removed Lines]",
          "1287: static int xen_rebind_evtchn_to_cpu(int evtchn, unsigned int tcpu)",
          "",
          "[Added Lines]",
          "1288: static int xen_rebind_evtchn_to_cpu(evtchn_port_t evtchn, unsigned int tcpu)",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1343: static void enable_dynirq(struct irq_data *data)",
          "1344: {",
          "1347:  if (VALID_EVTCHN(evtchn))",
          "1348:   unmask_evtchn(evtchn);",
          "",
          "[Removed Lines]",
          "1345:  int evtchn = evtchn_from_irq(data->irq);",
          "",
          "[Added Lines]",
          "1346:  evtchn_port_t evtchn = evtchn_from_irq(data->irq);",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1351: static void disable_dynirq(struct irq_data *data)",
          "1352: {",
          "1355:  if (VALID_EVTCHN(evtchn))",
          "1356:   mask_evtchn(evtchn);",
          "",
          "[Removed Lines]",
          "1353:  int evtchn = evtchn_from_irq(data->irq);",
          "",
          "[Added Lines]",
          "1354:  evtchn_port_t evtchn = evtchn_from_irq(data->irq);",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1359: static void ack_dynirq(struct irq_data *data)",
          "1360: {",
          "1363:  if (!VALID_EVTCHN(evtchn))",
          "1364:   return;",
          "",
          "[Removed Lines]",
          "1361:  int evtchn = evtchn_from_irq(data->irq);",
          "",
          "[Added Lines]",
          "1362:  evtchn_port_t evtchn = evtchn_from_irq(data->irq);",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1386: static int retrigger_dynirq(struct irq_data *data)",
          "1387: {",
          "1389:  int masked;",
          "1391:  if (!VALID_EVTCHN(evtchn))",
          "",
          "[Removed Lines]",
          "1388:  unsigned int evtchn = evtchn_from_irq(data->irq);",
          "",
          "[Added Lines]",
          "1389:  evtchn_port_t evtchn = evtchn_from_irq(data->irq);",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1440: static void restore_cpu_virqs(unsigned int cpu)",
          "1441: {",
          "1442:  struct evtchn_bind_virq bind_virq;",
          "1445:  for (virq = 0; virq < NR_VIRQS; virq++) {",
          "1446:   if ((irq = per_cpu(virq_to_irq, cpu)[virq]) == -1)",
          "",
          "[Removed Lines]",
          "1443:  int virq, irq, evtchn;",
          "",
          "[Added Lines]",
          "1444:  evtchn_port_t evtchn;",
          "1445:  int virq, irq;",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1465: static void restore_cpu_ipis(unsigned int cpu)",
          "1466: {",
          "1467:  struct evtchn_bind_ipi bind_ipi;",
          "1470:  for (ipi = 0; ipi < XEN_NR_IPIS; ipi++) {",
          "1471:   if ((irq = per_cpu(ipi_to_irq, cpu)[ipi]) == -1)",
          "",
          "[Removed Lines]",
          "1468:  int ipi, irq, evtchn;",
          "",
          "[Added Lines]",
          "1470:  evtchn_port_t evtchn;",
          "1471:  int ipi, irq;",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1490: void xen_clear_irq_pending(int irq)",
          "1491: {",
          "1494:  if (VALID_EVTCHN(evtchn))",
          "1495:   clear_evtchn(evtchn);",
          "",
          "[Removed Lines]",
          "1492:  int evtchn = evtchn_from_irq(irq);",
          "",
          "[Added Lines]",
          "1495:  evtchn_port_t evtchn = evtchn_from_irq(irq);",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1497: EXPORT_SYMBOL(xen_clear_irq_pending);",
          "1498: void xen_set_irq_pending(int irq)",
          "1499: {",
          "1502:  if (VALID_EVTCHN(evtchn))",
          "1503:   set_evtchn(evtchn);",
          "",
          "[Removed Lines]",
          "1500:  int evtchn = evtchn_from_irq(irq);",
          "",
          "[Added Lines]",
          "1503:  evtchn_port_t evtchn = evtchn_from_irq(irq);",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1506: bool xen_test_irq_pending(int irq)",
          "1507: {",
          "1509:  bool ret = false;",
          "1511:  if (VALID_EVTCHN(evtchn))",
          "",
          "[Removed Lines]",
          "1508:  int evtchn = evtchn_from_irq(irq);",
          "",
          "[Added Lines]",
          "1511:  evtchn_port_t evtchn = evtchn_from_irq(irq);",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1667: void __init xen_init_IRQ(void)",
          "1668: {",
          "1669:  int ret = -EINVAL;",
          "1672:  if (fifo_events)",
          "1673:   ret = xen_evtchn_fifo_init();",
          "",
          "[Removed Lines]",
          "1670:  unsigned int evtchn;",
          "",
          "[Added Lines]",
          "1673:  evtchn_port_t evtchn;",
          "",
          "---------------"
        ],
        "drivers/xen/events/events_fifo.c||drivers/xen/events/events_fifo.c": [
          "File: drivers/xen/events/events_fifo.c -> drivers/xen/events/events_fifo.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: #endif",
          "86: {",
          "87:  unsigned i = port / EVENT_WORDS_PER_PAGE;",
          "",
          "[Removed Lines]",
          "85: static inline event_word_t *event_word_from_port(unsigned port)",
          "",
          "[Added Lines]",
          "85: static inline event_word_t *event_word_from_port(evtchn_port_t port)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141: static int evtchn_fifo_setup(struct irq_info *info)",
          "142: {",
          "144:  unsigned new_array_pages;",
          "145:  int ret;",
          "",
          "[Removed Lines]",
          "143:  unsigned port = info->evtchn;",
          "",
          "[Added Lines]",
          "143:  evtchn_port_t port = info->evtchn;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "192: }",
          "195: {",
          "196:  event_word_t *word = event_word_from_port(port);",
          "197:  sync_clear_bit(EVTCHN_FIFO_BIT(PENDING, word), BM(word));",
          "198: }",
          "201: {",
          "202:  event_word_t *word = event_word_from_port(port);",
          "203:  sync_set_bit(EVTCHN_FIFO_BIT(PENDING, word), BM(word));",
          "204: }",
          "207: {",
          "208:  event_word_t *word = event_word_from_port(port);",
          "209:  return sync_test_bit(EVTCHN_FIFO_BIT(PENDING, word), BM(word));",
          "210: }",
          "213: {",
          "214:  event_word_t *word = event_word_from_port(port);",
          "215:  return sync_test_and_set_bit(EVTCHN_FIFO_BIT(MASKED, word), BM(word));",
          "216: }",
          "219: {",
          "220:  event_word_t *word = event_word_from_port(port);",
          "221:  sync_set_bit(EVTCHN_FIFO_BIT(MASKED, word), BM(word));",
          "222: }",
          "225: {",
          "226:  event_word_t *word = event_word_from_port(port);",
          "227:  return sync_test_bit(EVTCHN_FIFO_BIT(MASKED, word), BM(word));",
          "",
          "[Removed Lines]",
          "194: static void evtchn_fifo_clear_pending(unsigned port)",
          "200: static void evtchn_fifo_set_pending(unsigned port)",
          "206: static bool evtchn_fifo_is_pending(unsigned port)",
          "212: static bool evtchn_fifo_test_and_set_mask(unsigned port)",
          "218: static void evtchn_fifo_mask(unsigned port)",
          "224: static bool evtchn_fifo_is_masked(unsigned port)",
          "",
          "[Added Lines]",
          "194: static void evtchn_fifo_clear_pending(evtchn_port_t port)",
          "200: static void evtchn_fifo_set_pending(evtchn_port_t port)",
          "206: static bool evtchn_fifo_is_pending(evtchn_port_t port)",
          "212: static bool evtchn_fifo_test_and_set_mask(evtchn_port_t port)",
          "218: static void evtchn_fifo_mask(evtchn_port_t port)",
          "224: static bool evtchn_fifo_is_masked(evtchn_port_t port)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "242:  } while (w != old);",
          "243: }",
          "246: {",
          "247:  event_word_t *word = event_word_from_port(port);",
          "",
          "[Removed Lines]",
          "245: static void evtchn_fifo_unmask(unsigned port)",
          "",
          "[Added Lines]",
          "245: static void evtchn_fifo_unmask(evtchn_port_t port)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "270:  return w & EVTCHN_FIFO_LINK_MASK;",
          "271: }",
          "274: {",
          "275:  int irq;",
          "",
          "[Removed Lines]",
          "273: static void handle_irq_for_port(unsigned port)",
          "",
          "[Added Lines]",
          "273: static void handle_irq_for_port(evtchn_port_t port)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "286: {",
          "287:  struct evtchn_fifo_queue *q = &per_cpu(cpu_queue, cpu);",
          "288:  uint32_t head;",
          "290:  event_word_t *word;",
          "292:  head = q->head[priority];",
          "",
          "[Removed Lines]",
          "289:  unsigned port;",
          "",
          "[Added Lines]",
          "289:  evtchn_port_t port;",
          "",
          "---------------"
        ],
        "drivers/xen/events/events_internal.h||drivers/xen/events/events_internal.h": [
          "File: drivers/xen/events/events_internal.h -> drivers/xen/events/events_internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:  int (*setup)(struct irq_info *info);",
          "61:  void (*bind_to_cpu)(struct irq_info *info, unsigned cpu);",
          "70:  void (*handle_events)(unsigned cpu);",
          "71:  void (*resume)(void);",
          "",
          "[Removed Lines]",
          "63:  void (*clear_pending)(unsigned port);",
          "64:  void (*set_pending)(unsigned port);",
          "65:  bool (*is_pending)(unsigned port);",
          "66:  bool (*test_and_set_mask)(unsigned port);",
          "67:  void (*mask)(unsigned port);",
          "68:  void (*unmask)(unsigned port);",
          "",
          "[Added Lines]",
          "63:  void (*clear_pending)(evtchn_port_t port);",
          "64:  void (*set_pending)(evtchn_port_t port);",
          "65:  bool (*is_pending)(evtchn_port_t port);",
          "66:  bool (*test_and_set_mask)(evtchn_port_t port);",
          "67:  void (*mask)(evtchn_port_t port);",
          "68:  void (*unmask)(evtchn_port_t port);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74: extern const struct evtchn_ops *evtchn_ops;",
          "76: extern int **evtchn_to_irq;",
          "79: struct irq_info *info_for_irq(unsigned irq);",
          "80: unsigned cpu_from_irq(unsigned irq);",
          "83: static inline unsigned xen_evtchn_max_channels(void)",
          "84: {",
          "",
          "[Removed Lines]",
          "77: int get_evtchn_to_irq(unsigned int evtchn);",
          "81: unsigned cpu_from_evtchn(unsigned int evtchn);",
          "",
          "[Added Lines]",
          "77: int get_evtchn_to_irq(evtchn_port_t evtchn);",
          "81: unsigned int cpu_from_evtchn(evtchn_port_t evtchn);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:  evtchn_ops->bind_to_cpu(info, cpu);",
          "103: }",
          "106: {",
          "107:  evtchn_ops->clear_pending(port);",
          "108: }",
          "111: {",
          "112:  evtchn_ops->set_pending(port);",
          "113: }",
          "116: {",
          "117:  return evtchn_ops->is_pending(port);",
          "118: }",
          "121: {",
          "122:  return evtchn_ops->test_and_set_mask(port);",
          "123: }",
          "126: {",
          "127:  return evtchn_ops->mask(port);",
          "128: }",
          "131: {",
          "132:  return evtchn_ops->unmask(port);",
          "133: }",
          "",
          "[Removed Lines]",
          "105: static inline void clear_evtchn(unsigned port)",
          "110: static inline void set_evtchn(unsigned port)",
          "115: static inline bool test_evtchn(unsigned port)",
          "120: static inline bool test_and_set_mask(unsigned port)",
          "125: static inline void mask_evtchn(unsigned port)",
          "130: static inline void unmask_evtchn(unsigned port)",
          "",
          "[Added Lines]",
          "105: static inline void clear_evtchn(evtchn_port_t port)",
          "110: static inline void set_evtchn(evtchn_port_t port)",
          "115: static inline bool test_evtchn(evtchn_port_t port)",
          "120: static inline bool test_and_set_mask(evtchn_port_t port)",
          "125: static inline void mask_evtchn(evtchn_port_t port)",
          "130: static inline void unmask_evtchn(evtchn_port_t port)",
          "",
          "---------------"
        ],
        "drivers/xen/evtchn.c||drivers/xen/evtchn.c": [
          "File: drivers/xen/evtchn.c -> drivers/xen/evtchn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: struct user_evtchn {",
          "84:  struct rb_node node;",
          "85:  struct per_user_data *user;",
          "87:  bool enabled;",
          "88: };",
          "",
          "[Removed Lines]",
          "86:  unsigned port;",
          "",
          "[Added Lines]",
          "86:  evtchn_port_t port;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:  kfree(evtchn);",
          "139: }",
          "142: {",
          "143:  struct rb_node *node = u->evtchns.rb_node;",
          "",
          "[Removed Lines]",
          "141: static struct user_evtchn *find_evtchn(struct per_user_data *u, unsigned port)",
          "",
          "[Added Lines]",
          "141: static struct user_evtchn *find_evtchn(struct per_user_data *u,",
          "142:            evtchn_port_t port)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "163:  struct per_user_data *u = evtchn->user;",
          "165:  WARN(!evtchn->enabled,",
          "167:       evtchn->port, u);",
          "169:  disable_irq_nosync(irq);",
          "",
          "[Removed Lines]",
          "166:       \"Interrupt for port %d, but apparently not enabled; per-user %p\\n\",",
          "",
          "[Added Lines]",
          "167:       \"Interrupt for port %u, but apparently not enabled; per-user %p\\n\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "286:  mutex_lock(&u->bind_mutex);",
          "288:  for (i = 0; i < (count/sizeof(evtchn_port_t)); i++) {",
          "290:   struct user_evtchn *evtchn;",
          "292:   evtchn = find_evtchn(u, port);",
          "",
          "[Removed Lines]",
          "289:   unsigned port = kbuf[i];",
          "",
          "[Added Lines]",
          "290:   evtchn_port_t port = kbuf[i];",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "361:  return 0;",
          "362: }",
          "365: {",
          "366:  struct user_evtchn *evtchn;",
          "367:  struct evtchn_close close;",
          "",
          "[Removed Lines]",
          "364: static int evtchn_bind_to_user(struct per_user_data *u, int port)",
          "",
          "[Added Lines]",
          "365: static int evtchn_bind_to_user(struct per_user_data *u, evtchn_port_t port)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "424: static DEFINE_PER_CPU(int, bind_last_selected_cpu);",
          "427: {",
          "428:  unsigned int selected_cpu, irq;",
          "429:  struct irq_desc *desc;",
          "",
          "[Removed Lines]",
          "426: static void evtchn_bind_interdom_next_vcpu(int evtchn)",
          "",
          "[Added Lines]",
          "427: static void evtchn_bind_interdom_next_vcpu(evtchn_port_t evtchn)",
          "",
          "---------------"
        ],
        "drivers/xen/gntdev-common.h||drivers/xen/gntdev-common.h": [
          "File: drivers/xen/gntdev-common.h -> drivers/xen/gntdev-common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #include <linux/mman.h>",
          "16: #include <linux/mmu_notifier.h>",
          "17: #include <linux/types.h>",
          "19: struct gntdev_dmabuf_priv;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: #include <xen/interface/event_channel.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:  int flags;",
          "40:  int addr;",
          "42: };",
          "44: struct gntdev_grant_map {",
          "",
          "[Removed Lines]",
          "41:  int event;",
          "",
          "[Added Lines]",
          "42:  evtchn_port_t event;",
          "",
          "---------------"
        ],
        "drivers/xen/gntdev.c||drivers/xen/gntdev.c": [
          "File: drivers/xen/gntdev.c -> drivers/xen/gntdev.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "652:  struct gntdev_grant_map *map;",
          "653:  int rc;",
          "654:  int out_flags;",
          "657:  if (copy_from_user(&op, u, sizeof(op)))",
          "658:   return -EFAULT;",
          "",
          "[Removed Lines]",
          "655:  unsigned int out_event;",
          "",
          "[Added Lines]",
          "655:  evtchn_port_t out_event;",
          "",
          "---------------"
        ],
        "drivers/xen/pvcalls-back.c||drivers/xen/pvcalls-back.c": [
          "File: drivers/xen/pvcalls-back.c -> drivers/xen/pvcalls-back.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "300:   struct pvcalls_fedata *fedata,",
          "301:   uint64_t id,",
          "302:   grant_ref_t ref,",
          "304:   struct socket *sock)",
          "305: {",
          "306:  int ret;",
          "",
          "[Removed Lines]",
          "303:   uint32_t evtchn,",
          "",
          "[Added Lines]",
          "303:   evtchn_port_t evtchn,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "906: static int backend_connect(struct xenbus_device *dev)",
          "907: {",
          "909:  grant_ref_t ring_ref;",
          "910:  struct pvcalls_fedata *fedata = NULL;",
          "",
          "[Removed Lines]",
          "908:  int err, evtchn;",
          "",
          "[Added Lines]",
          "908:  int err;",
          "909:  evtchn_port_t evtchn;",
          "",
          "---------------"
        ],
        "drivers/xen/pvcalls-front.c||drivers/xen/pvcalls-front.c": [
          "File: drivers/xen/pvcalls-front.c -> drivers/xen/pvcalls-front.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "368:  return -ENOMEM;",
          "369: }",
          "372: {",
          "373:  void *bytes;",
          "374:  int ret = -ENOMEM, irq = -1, i;",
          "377:  init_waitqueue_head(&map->active.inflight_conn_req);",
          "379:  bytes = map->active.data.in;",
          "",
          "[Removed Lines]",
          "371: static int create_active(struct sock_mapping *map, int *evtchn)",
          "",
          "[Added Lines]",
          "371: static int create_active(struct sock_mapping *map, evtchn_port_t *evtchn)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "404:  return 0;",
          "406: out_error:",
          "408:   xenbus_free_evtchn(pvcalls_front_dev, *evtchn);",
          "409:  return ret;",
          "410: }",
          "",
          "[Removed Lines]",
          "407:  if (*evtchn >= 0)",
          "",
          "[Added Lines]",
          "407:  if (*evtchn > 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "415:  struct pvcalls_bedata *bedata;",
          "416:  struct sock_mapping *map = NULL;",
          "417:  struct xen_pvcalls_request *req;",
          "420:  if (addr->sa_family != AF_INET || sock->type != SOCK_STREAM)",
          "421:   return -EOPNOTSUPP;",
          "",
          "[Removed Lines]",
          "418:  int notify, req_id, ret, evtchn;",
          "",
          "[Added Lines]",
          "418:  int notify, req_id, ret;",
          "419:  evtchn_port_t evtchn;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "765:  struct sock_mapping *map;",
          "766:  struct sock_mapping *map2 = NULL;",
          "767:  struct xen_pvcalls_request *req;",
          "770:  map = pvcalls_enter_sock(sock);",
          "771:  if (IS_ERR(map))",
          "",
          "[Removed Lines]",
          "768:  int notify, req_id, ret, evtchn, nonblock;",
          "",
          "[Added Lines]",
          "769:  int notify, req_id, ret, nonblock;",
          "770:  evtchn_port_t evtchn;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1125: static int pvcalls_front_probe(struct xenbus_device *dev,",
          "1126:      const struct xenbus_device_id *id)",
          "1127: {",
          "1129:  unsigned int max_page_order, function_calls, len;",
          "1130:  char *versions;",
          "1131:  grant_ref_t gref_head = 0;",
          "",
          "[Removed Lines]",
          "1128:  int ret = -ENOMEM, evtchn, i;",
          "",
          "[Added Lines]",
          "1130:  int ret = -ENOMEM, i;",
          "1131:  evtchn_port_t evtchn;",
          "",
          "---------------"
        ],
        "drivers/xen/xen-pciback/xenbus.c||drivers/xen/xen-pciback/xenbus.c": [
          "File: drivers/xen/xen-pciback/xenbus.c -> drivers/xen/xen-pciback/xenbus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "105: }",
          "107: static int xen_pcibk_do_attach(struct xen_pcibk_device *pdev, int gnt_ref,",
          "109: {",
          "110:  int err = 0;",
          "111:  void *vaddr;",
          "113:  dev_dbg(&pdev->xdev->dev,",
          "115:   gnt_ref, remote_evtchn);",
          "117:  err = xenbus_map_ring_valloc(pdev->xdev, &gnt_ref, 1, &vaddr);",
          "",
          "[Removed Lines]",
          "108:         int remote_evtchn)",
          "114:   \"Attaching to frontend resources - gnt_ref=%d evtchn=%d\\n\",",
          "",
          "[Added Lines]",
          "108:         evtchn_port_t remote_evtchn)",
          "114:   \"Attaching to frontend resources - gnt_ref=%d evtchn=%u\\n\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142: static int xen_pcibk_attach(struct xen_pcibk_device *pdev)",
          "143: {",
          "144:  int err = 0;",
          "146:  char *magic = NULL;",
          "",
          "[Removed Lines]",
          "145:  int gnt_ref, remote_evtchn;",
          "",
          "[Added Lines]",
          "145:  int gnt_ref;",
          "146:  evtchn_port_t remote_evtchn;",
          "",
          "---------------"
        ],
        "drivers/xen/xen-scsiback.c||drivers/xen/xen-scsiback.c": [
          "File: drivers/xen/xen-scsiback.c -> drivers/xen/xen-scsiback.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "854: static int scsiback_map(struct vscsibk_info *info)",
          "855: {",
          "856:  struct xenbus_device *dev = info->dev;",
          "858:  int err;",
          "860:  err = xenbus_gather(XBT_NIL, dev->otherend,",
          "",
          "[Removed Lines]",
          "857:  unsigned int ring_ref, evtchn;",
          "",
          "[Added Lines]",
          "857:  unsigned int ring_ref;",
          "858:  evtchn_port_t evtchn;",
          "",
          "---------------"
        ],
        "drivers/xen/xenbus/xenbus_client.c||drivers/xen/xenbus/xenbus_client.c": [
          "File: drivers/xen/xenbus/xenbus_client.c -> drivers/xen/xenbus/xenbus_client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "395: {",
          "396:  struct evtchn_alloc_unbound alloc_unbound;",
          "397:  int err;",
          "",
          "[Removed Lines]",
          "394: int xenbus_alloc_evtchn(struct xenbus_device *dev, int *port)",
          "",
          "[Added Lines]",
          "394: int xenbus_alloc_evtchn(struct xenbus_device *dev, evtchn_port_t *port)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "418: {",
          "419:  struct evtchn_close close;",
          "420:  int err;",
          "",
          "[Removed Lines]",
          "417: int xenbus_free_evtchn(struct xenbus_device *dev, int port)",
          "",
          "[Added Lines]",
          "417: int xenbus_free_evtchn(struct xenbus_device *dev, evtchn_port_t port)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "424:  err = HYPERVISOR_event_channel_op(EVTCHNOP_close, &close);",
          "425:  if (err)",
          "428:  return err;",
          "429: }",
          "",
          "[Removed Lines]",
          "426:   xenbus_dev_error(dev, err, \"freeing event channel %d\", port);",
          "",
          "[Added Lines]",
          "426:   xenbus_dev_error(dev, err, \"freeing event channel %u\", port);",
          "",
          "---------------"
        ],
        "include/xen/events.h||include/xen/events.h": [
          "File: include/xen/events.h -> include/xen/events.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: unsigned xen_evtchn_nr_channels(void);",
          "19:          irq_handler_t handler,",
          "20:          unsigned long irqflags, const char *devname,",
          "21:          void *dev_id);",
          "",
          "[Removed Lines]",
          "17: int bind_evtchn_to_irq(unsigned int evtchn);",
          "18: int bind_evtchn_to_irqhandler(unsigned int evtchn,",
          "",
          "[Added Lines]",
          "17: int bind_evtchn_to_irq(evtchn_port_t evtchn);",
          "18: int bind_evtchn_to_irqhandler(evtchn_port_t evtchn,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:       const char *devname,",
          "32:       void *dev_id);",
          "33: int bind_interdomain_evtchn_to_irq(unsigned int remote_domain,",
          "35: int bind_interdomain_evtchn_to_irqhandler(unsigned int remote_domain,",
          "37:        irq_handler_t handler,",
          "38:        unsigned long irqflags,",
          "39:        const char *devname,",
          "",
          "[Removed Lines]",
          "34:        unsigned int remote_port);",
          "36:        unsigned int remote_port,",
          "",
          "[Added Lines]",
          "34:        evtchn_port_t remote_port);",
          "36:        evtchn_port_t remote_port,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "61: void xen_send_IPI_one(unsigned int cpu, enum ipi_vector vector);",
          "63: int xen_set_affinity_evtchn(struct irq_desc *desc, unsigned int tcpu);",
          "66: {",
          "67:  struct evtchn_send send = { .port = port };",
          "68:  (void)HYPERVISOR_event_channel_op(EVTCHNOP_send, &send);",
          "",
          "[Removed Lines]",
          "57: int evtchn_make_refcounted(unsigned int evtchn);",
          "58: int evtchn_get(unsigned int evtchn);",
          "59: void evtchn_put(unsigned int evtchn);",
          "62: void rebind_evtchn_irq(int evtchn, int irq);",
          "65: static inline void notify_remote_via_evtchn(int port)",
          "",
          "[Added Lines]",
          "57: int evtchn_make_refcounted(evtchn_port_t evtchn);",
          "58: int evtchn_get(evtchn_port_t evtchn);",
          "59: void evtchn_put(evtchn_port_t evtchn);",
          "62: void rebind_evtchn_irq(evtchn_port_t evtchn, int irq);",
          "65: static inline void notify_remote_via_evtchn(evtchn_port_t port)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "86: void xen_poll_irq_timeout(int irq, u64 timeout);",
          "90: int irq_from_virq(unsigned int cpu, unsigned int virq);",
          "93: #ifdef CONFIG_XEN_PVHVM",
          "",
          "[Removed Lines]",
          "89: unsigned irq_from_evtchn(unsigned int evtchn);",
          "91: unsigned int evtchn_from_irq(unsigned irq);",
          "",
          "[Added Lines]",
          "89: unsigned int irq_from_evtchn(evtchn_port_t evtchn);",
          "91: evtchn_port_t evtchn_from_irq(unsigned irq);",
          "",
          "---------------"
        ],
        "include/xen/interface/event_channel.h||include/xen/interface/event_channel.h": [
          "File: include/xen/interface/event_channel.h -> include/xen/interface/event_channel.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "220: #define EVTCHNOP_set_priority    13",
          "221: struct evtchn_set_priority {",
          "224:  uint32_t priority;",
          "225: };",
          "",
          "[Removed Lines]",
          "223:  uint32_t port;",
          "",
          "[Added Lines]",
          "223:  evtchn_port_t port;",
          "",
          "---------------"
        ],
        "include/xen/xenbus.h||include/xen/xenbus.h": [
          "File: include/xen/xenbus.h -> include/xen/xenbus.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: #include <xen/interface/grant_table.h>",
          "48: #include <xen/interface/io/xenbus.h>",
          "49: #include <xen/interface/io/xs_wire.h>",
          "51: #define XENBUS_MAX_RING_GRANT_ORDER 4",
          "52: #define XENBUS_MAX_RING_GRANTS      (1U << XENBUS_MAX_RING_GRANT_ORDER)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: #include <xen/interface/event_channel.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "213: int xenbus_unmap_ring_vfree(struct xenbus_device *dev, void *vaddr);",
          "218: enum xenbus_state xenbus_read_driver_state(const char *path);",
          "",
          "[Removed Lines]",
          "215: int xenbus_alloc_evtchn(struct xenbus_device *dev, int *port);",
          "216: int xenbus_free_evtchn(struct xenbus_device *dev, int port);",
          "",
          "[Added Lines]",
          "216: int xenbus_alloc_evtchn(struct xenbus_device *dev, evtchn_port_t *port);",
          "217: int xenbus_free_evtchn(struct xenbus_device *dev, evtchn_port_t port);",
          "",
          "---------------"
        ]
      }
    }
  ]
}