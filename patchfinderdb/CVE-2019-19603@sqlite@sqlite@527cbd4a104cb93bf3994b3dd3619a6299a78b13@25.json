{
  "cve_id": "CVE-2019-19603",
  "cve_desc": "SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.",
  "repo": "sqlite/sqlite",
  "patch_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
  "patch_info": {
    "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab.test"
    ],
    "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab.test||test/altertab.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:       }",
      "857:     }",
      "858:   }else{",
      "861:     ){",
      "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
      "863:                       zName);",
      "864:       return SQLITE_ERROR;",
      "865:     }",
      "866:   }",
      "867:   return SQLITE_OK;",
      "868: }",
      "",
      "[Removed Lines]",
      "859:     if( pParse->nested==0",
      "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
      "",
      "[Added Lines]",
      "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
      "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
      "",
      "[Added Lines]",
      "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
      "2148:   return pMod->pModule->xShadowName(zTail+1);",
      "2149: }",
      "",
      "[Removed Lines]",
      "2150: #else",
      "2151: # define isShadowTableName(x,y) 0",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2190:   p = pParse->pNewTable;",
      "2191:   if( p==0 ) return;",
      "2194:     p->tabFlags |= TF_Shadow;",
      "2195:   }",
      "",
      "[Removed Lines]",
      "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
      "",
      "[Added Lines]",
      "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
      "4549: #endif",
      "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
      "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
      "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
      "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
      "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
      "4553: #else",
      "4554: # define sqlite3ShadowTableName(A,B) 0",
      "4555: #endif",
      "",
      "---------------"
    ],
    "test/altertab.test||test/altertab.test": [
      "File: test/altertab.test -> test/altertab.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "547:   } {1 {table y1_segments may not be modified}}",
      "549:   do_catchsql_test 16.20 {",
      "554:     DROP TABLE y1_segments;",
      "555:   } {1 {table y1_segments may not be dropped}}",
      "557:   do_execsql_test 16.30 {",
      "558:     ALTER TABLE y1 RENAME TO z1;",
      "559:   }",
      "",
      "[Removed Lines]",
      "550:     ALTER TABLE y1_segments RENAME TO abc;",
      "551:   } {1 {table y1_segments may not be altered}}",
      "553:   do_catchsql_test 16.21 {",
      "",
      "[Added Lines]",
      "553:   do_catchsql_test 16.20 {",
      "554:     ALTER TABLE y1_segments RENAME TO abc;",
      "555:   } {1 {table y1_segments may not be altered}}",
      "556:   sqlite3_db_config db DEFENSIVE 0",
      "557:   do_catchsql_test 16.22 {",
      "558:     ALTER TABLE y1_segments RENAME TO abc;",
      "559:   } {0 {}}",
      "560:   sqlite3_db_config db DEFENSIVE 1",
      "561:   do_catchsql_test 16.23 {",
      "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
      "563:   } {1 {object name reserved for internal use: y1_segments}}",
      "564:   do_catchsql_test 16.24 {",
      "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
      "566:   } {1 {object name reserved for internal use: y1_segments}}",
      "567:   sqlite3_db_config db DEFENSIVE 0",
      "568:   do_catchsql_test 16.25 {",
      "569:     ALTER TABLE abc RENAME TO y1_segments;",
      "570:   } {0 {}}",
      "571:   sqlite3_db_config db DEFENSIVE 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "679c9613f61a9af9a2c6c5c9d8295ebe28b9d6c6",
      "candidate_info": {
        "commit_hash": "679c9613f61a9af9a2c6c5c9d8295ebe28b9d6c6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/679c9613f61a9af9a2c6c5c9d8295ebe28b9d6c6",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/view.test"
        ],
        "message": "Remove use of the affinity() function from view.test, as it is only available in SQLITE_DEBUG builds.\n\nFossilOrigin-Name: 7f2246a17be9915b3492624a3d8deff56694bdc372f7627e3f16c1869415b1a3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/view.test||test/view.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f5d0436d8dc650cadb61a5fe76fd1a0d68dabba54ff0c2a8c138f9dfbdab1c3f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/view.test||test/view.test": [
          "File: test/view.test -> test/view.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "733: }",
          "735: do_execsql_test view-27.1 {",
          "737: } {",
          "740: }",
          "742: do_execsql_test view-27.2 { SELECT c0<c1 FROM v0 } 1",
          "",
          "[Removed Lines]",
          "736:   SELECT c0, typeof(c0), affinity(c0), c1, typeof(c1), affinity(c1) FROM v0;",
          "738:   -1   text text",
          "739:    0.0 real none",
          "",
          "[Added Lines]",
          "736:   SELECT c0, typeof(c0), c1, typeof(c1) FROM v0;",
          "738:   -1   text",
          "739:    0.0 real",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd462bcc10bb1545d39359ff29cb521819ab656d",
      "candidate_info": {
        "commit_hash": "bd462bcc10bb1545d39359ff29cb521819ab656d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bd462bcc10bb1545d39359ff29cb521819ab656d",
        "files": [
          "ext/expert/expert1.test",
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/vdbe.h",
          "src/vdbeaux.c",
          "src/wherecode.c",
          "test/autoindex1.test",
          "test/bestindex3.test",
          "test/cost.test",
          "test/eqp.test",
          "test/join5.test",
          "test/tkt-80ba201079.test",
          "test/where7.test",
          "test/where9.test",
          "test/whereI.test",
          "test/with3.test"
        ],
        "message": "Improvements to EXPLAIN QUERY PLAN formatting.  The MULTI-INDEX OR now shows a separate \"INDEX\" subtree for each index.  SCALAR SUBQUERY entries provide a subquery number that is related back to the .selecttrace output.\n\nFossilOrigin-Name: 7153552bac51295c56a1c42ca79d57195851e232509f9e9610375692f48c7e86",
        "before_after_code_files": [
          "ext/expert/expert1.test||ext/expert/expert1.test",
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/vdbe.h||src/vdbe.h",
          "src/vdbeaux.c||src/vdbeaux.c",
          "src/wherecode.c||src/wherecode.c",
          "test/autoindex1.test||test/autoindex1.test",
          "test/bestindex3.test||test/bestindex3.test",
          "test/cost.test||test/cost.test",
          "test/eqp.test||test/eqp.test",
          "test/join5.test||test/join5.test",
          "test/tkt-80ba201079.test||test/tkt-80ba201079.test",
          "test/where7.test||test/where7.test",
          "test/where9.test||test/where9.test",
          "test/whereI.test||test/whereI.test",
          "test/with3.test||test/with3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/expert/expert1.test||ext/expert/expert1.test": [
          "File: ext/expert/expert1.test -> ext/expert/expert1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "243:   CREATE INDEX t7_idx_00000062 ON t7(b);",
          "244:   CREATE INDEX t7_idx_00000061 ON t7(a);",
          "245:   MULTI-INDEX OR",
          "248: }",
          "250: # rowid terms.",
          "",
          "[Removed Lines]",
          "246:     SEARCH TABLE t7 USING INDEX t7_idx_00000061 (a=?)",
          "247:     SEARCH TABLE t7 USING INDEX t7_idx_00000062 (b=?)",
          "",
          "[Added Lines]",
          "246:     INDEX 1",
          "247:       SEARCH TABLE t7 USING INDEX t7_idx_00000061 (a=?)",
          "248:     INDEX 2",
          "249:       SEARCH TABLE t7 USING INDEX t7_idx_00000062 (b=?)",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e53781f5bdf5c7b7d91ffe76565ea2fe5d1b3a9b162b3a88a7017bbe785d4c72",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2693:     if( ExprHasProperty(pExpr, EP_Subrtn) ){",
          "2695:       sqlite3VdbeAddOp2(v, OP_Gosub, pExpr->y.sub.regReturn,",
          "2696:                         pExpr->y.sub.iAddr);",
          "2697:       sqlite3VdbeAddOp2(v, OP_OpenDup, iTab, pExpr->iTable);",
          "2698:       return;",
          "2699:     }",
          "",
          "[Removed Lines]",
          "2694:       sqlite3VdbeAddOp2(v, OP_Once, 0, sqlite3VdbeCurrentAddr(v)+3);",
          "",
          "[Added Lines]",
          "2694:       int addr = sqlite3VdbeAddOp0(v, OP_Once); VdbeCoverage(v);",
          "2695:       if( ExprHasProperty(pExpr, EP_xIsSelect) ){",
          "2696:         ExplainQueryPlan((pParse, 0, \"REUSE LIST SUBQUERY %d\",",
          "2697:               pExpr->x.pSelect->selId));",
          "2698:       }",
          "2702:       sqlite3VdbeJumpHere(v, addr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2746:     if( ALWAYS(pEList->nExpr==nVal) ){",
          "2747:       SelectDest dest;",
          "2748:       int i;",
          "2750:       dest.zAffSdst = exprINAffinity(pParse, pExpr);",
          "2751:       pSelect->iLimit = 0;",
          "2752:       testcase( pSelect->selFlags & SF_Distinct );",
          "",
          "[Removed Lines]",
          "2749:       sqlite3SelectDestInit(&dest, SRT_Set, pExpr->iTable);",
          "",
          "[Added Lines]",
          "2754:       sqlite3SelectDestInit(&dest, SRT_Set, iTab);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2812:       if( isRowid && sqlite3ExprIsInteger(pE2, &iValToIns) ){",
          "2814:       }else{",
          "2815:         r3 = sqlite3ExprCodeTarget(pParse, pE2, r1);",
          "2816:         if( isRowid ){",
          "2817:           sqlite3VdbeAddOp2(v, OP_MustBeInt, r3,",
          "2818:                             sqlite3VdbeCurrentAddr(v)+2);",
          "2819:           VdbeCoverage(v);",
          "2821:         }else{",
          "2822:           sqlite3VdbeAddOp4(v, OP_MakeRecord, r3, 1, r2, &affinity, 1);",
          "2824:         }",
          "2825:       }",
          "2826:     }",
          "",
          "[Removed Lines]",
          "2813:         sqlite3VdbeAddOp3(v, OP_InsertInt, pExpr->iTable, r2, iValToIns);",
          "2820:           sqlite3VdbeAddOp3(v, OP_Insert, pExpr->iTable, r2, r3);",
          "2823:           sqlite3VdbeAddOp4Int(v, OP_IdxInsert, pExpr->iTable, r2, r3, 1);",
          "",
          "[Added Lines]",
          "2818:         sqlite3VdbeAddOp3(v, OP_InsertInt, iTab, r2, iValToIns);",
          "2825:           sqlite3VdbeAddOp3(v, OP_Insert, iTab, r2, r3);",
          "2828:           sqlite3VdbeAddOp4Int(v, OP_IdxInsert, iTab, r2, r3, 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2865:   Vdbe *v = pParse->pVdbe;",
          "2866:   assert( v!=0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2872:   testcase( pExpr->op==TK_EXISTS );",
          "2873:   testcase( pExpr->op==TK_SELECT );",
          "2874:   assert( pExpr->op==TK_EXISTS || pExpr->op==TK_SELECT );",
          "2875:   assert( ExprHasProperty(pExpr, EP_xIsSelect) );",
          "2876:   pSel = pExpr->x.pSelect;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2881:     if( ExprHasProperty(pExpr, EP_Subrtn) ){",
          "2882:       sqlite3VdbeAddOp2(v, OP_Gosub, pExpr->y.sub.regReturn,",
          "2883:                         pExpr->y.sub.iAddr);",
          "2884:       return pExpr->iTable;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2892:       ExplainQueryPlan((pParse, 0, \"REUSE SUBQUERY %d\", pSel->selId));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2915:   nReg = pExpr->op==TK_SELECT ? pSel->pEList->nExpr : 1;",
          "2916:   sqlite3SelectDestInit(&dest, 0, pParse->nMem+1);",
          "2917:   pParse->nMem += nReg;",
          "",
          "[Removed Lines]",
          "2907:   testcase( pExpr->op==TK_EXISTS );",
          "2908:   testcase( pExpr->op==TK_SELECT );",
          "2909:   assert( pExpr->op==TK_EXISTS || pExpr->op==TK_SELECT );",
          "2910:   assert( ExprHasProperty(pExpr, EP_xIsSelect) );",
          "2912:   pSel = pExpr->x.pSelect;",
          "2913:   ExplainQueryPlan((pParse, 1, \"%sSCALAR SUBQUERY\",",
          "2914:         addrOnce?\"\":\"CORRELATED \"));",
          "",
          "[Added Lines]",
          "2918:   ExplainQueryPlan((pParse, 1, \"%sSCALAR SUBQUERY %d\",",
          "2919:         addrOnce?\"\":\"CORRELATED \", pSel->selId));",
          "",
          "---------------"
        ],
        "src/vdbe.h||src/vdbe.h": [
          "File: src/vdbe.h -> src/vdbe.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:   void sqlite3VdbeExplain(Parse*,u8,const char*,...);",
          "209:   void sqlite3VdbeExplainPop(Parse*);",
          "210:   int sqlite3VdbeExplainParent(Parse*);",
          "211: # define ExplainQueryPlan(P)        sqlite3VdbeExplain P",
          "212: # define ExplainQueryPlanPop(P)     sqlite3VdbeExplainPop(P)",
          "213: # define ExplainQueryPlanParent(P)  sqlite3VdbeExplainParent(P)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211:   void sqlite3ExplainBreakpoint(const char*,const char*);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215: # define ExplainQueryPlan(P)",
          "216: # define ExplainQueryPlanPop(P)",
          "217: # define ExplainQueryPlanParent(P) 0",
          "218: #endif",
          "219: void sqlite3VdbeAddParseSchemaOp(Vdbe*,int,char*);",
          "220: void sqlite3VdbeChangeOpcode(Vdbe*, u32 addr, u8);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220: #endif",
          "221: #if defined(SQLITE_DEBUG) && !defined(SQLITE_OMIT_EXPLAIN)",
          "222:   void sqlite3ExplainBreakpoint(const char*,const char*);",
          "223: #else",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350: }",
          "358: void sqlite3VdbeExplain(Parse *pParse, u8 bPush, const char *zFmt, ...){",
          "360:     char *zMsg;",
          "361:     Vdbe *v;",
          "362:     va_list ap;",
          "",
          "[Removed Lines]",
          "359:   if( pParse->explain==2 ){",
          "",
          "[Added Lines]",
          "356: #if defined(SQLITE_DEBUG)",
          "357: void sqlite3ExplainBreakpoint(const char *z1, const char *z2){",
          "358:   (void)z1;",
          "359:   (void)z2;",
          "360: }",
          "361: #endif",
          "370: #if !defined(SQLITE_DEBUG)",
          "371:   if( pParse->explain==2 )",
          "372: #endif",
          "373:   {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368:     iThis = v->nOp;",
          "369:     sqlite3VdbeAddOp4(v, OP_Explain, iThis, pParse->addrExplain, 0,",
          "370:                       zMsg, P4_DYNAMIC);",
          "372:   }",
          "373: }",
          "",
          "[Removed Lines]",
          "371:     if( bPush) pParse->addrExplain = iThis;",
          "",
          "[Added Lines]",
          "385:     sqlite3ExplainBreakpoint(bPush?\"PUSH\":\"\", sqlite3VdbeGetOp(v,-1)->p4.z);",
          "386:     if( bPush){",
          "387:       pParse->addrExplain = iThis;",
          "388:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "378: void sqlite3VdbeExplainPop(Parse *pParse){",
          "379:   pParse->addrExplain = sqlite3VdbeExplainParent(pParse);",
          "380: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396:   sqlite3ExplainBreakpoint(\"POP\", 0);",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:     }",
          "214: #endif",
          "215:     zMsg = sqlite3StrAccumFinish(&str);",
          "216:     ret = sqlite3VdbeAddOp4(v, OP_Explain, sqlite3VdbeCurrentAddr(v),",
          "217:                             pParse->addrExplain, 0, zMsg,P4_DYNAMIC);",
          "218:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:     sqlite3ExplainBreakpoint(\"\",zMsg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1951:           pOrExpr = pAndExpr;",
          "1952:         }",
          "1954:         WHERETRACE(0xffff, (\"Subplan for OR-clause:\\n\"));",
          "1955:         pSubWInfo = sqlite3WhereBegin(pParse, pOrTab, pOrExpr, 0, 0,",
          "1956:                                       wctrlFlags, iCovCur);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1955:         ExplainQueryPlan((pParse, 1, \"INDEX %d\", ii+1));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2056:           sqlite3WhereEnd(pSubWInfo);",
          "2057:         }",
          "2058:       }",
          "2059:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2059:           ExplainQueryPlanPop(pParse);",
          "",
          "---------------"
        ],
        "test/autoindex1.test||test/autoindex1.test": [
          "File: test/autoindex1.test -> test/autoindex1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "280:   |--MATERIALIZE xxxxxx",
          "281:   |  |--SCAN TABLE sheep AS s",
          "282:   |  |--SEARCH TABLE flock_owner AS prev USING INDEX sqlite_autoindex_flock_owner_1 (flock_no=? AND owner_change_date<?)",
          "284:   |     `--SEARCH TABLE flock_owner AS later USING COVERING INDEX sqlite_autoindex_flock_owner_1 (flock_no=? AND owner_change_date>? AND owner_change_date<?)",
          "285:   |--SCAN TABLE sheep AS x USING INDEX sheep_reg_flock_index",
          "286:   `--SEARCH SUBQUERY xxxxxx AS y USING AUTOMATIC COVERING INDEX (sheep_no=?)",
          "",
          "[Removed Lines]",
          "283:   |  `--CORRELATED SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "283:   |  `--CORRELATED SCALAR SUBQUERY xxxxxx",
          "",
          "---------------"
        ],
        "test/bestindex3.test||test/bestindex3.test": [
          "File: test/bestindex3.test -> test/bestindex3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: } {",
          "91:   QUERY PLAN",
          "92:   `--MULTI-INDEX OR",
          "95: }",
          "97: do_eqp_test 1.4 {",
          "",
          "[Removed Lines]",
          "93:      |--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a EQ ?",
          "94:      `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "[Added Lines]",
          "93:      |--INDEX 1",
          "94:      |  `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a EQ ?",
          "95:      `--INDEX 2",
          "96:         `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99: } {",
          "100:   QUERY PLAN",
          "101:   `--MULTI-INDEX OR",
          "104: }",
          "106: do_execsql_test 1.5 {",
          "",
          "[Removed Lines]",
          "102:      |--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a LIKE ?",
          "103:      `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "[Added Lines]",
          "104:      |--INDEX 1",
          "105:      |  `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:a LIKE ?",
          "106:      `--INDEX 2",
          "107:         `--SCAN TABLE t1 VIRTUAL TABLE INDEX 0:b EQ ?",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:   } [string map {\"\\n  \" \\n} {",
          "151:     QUERY PLAN",
          "152:     `--MULTI-INDEX OR",
          "155:   }]",
          "156: }",
          "",
          "[Removed Lines]",
          "153:        |--SEARCH TABLE t2 USING INDEX t2x (x>? AND x<?)",
          "154:        `--SEARCH TABLE t2 USING INDEX t2y (y=?)",
          "",
          "[Added Lines]",
          "157:        |--INDEX 1",
          "158:        |  `--SEARCH TABLE t2 USING INDEX t2x (x>? AND x<?)",
          "159:        `--INDEX 2",
          "160:           `--SEARCH TABLE t2 USING INDEX t2y (y=?)",
          "",
          "---------------"
        ],
        "test/cost.test||test/cost.test": [
          "File: test/cost.test -> test/cost.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: } {",
          "59:   QUERY PLAN",
          "60:   |--MULTI-INDEX OR",
          "64:   `--USE TEMP B-TREE FOR ORDER BY",
          "65: }",
          "",
          "[Removed Lines]",
          "61:   |  |--SEARCH TABLE t5 USING INDEX t5b (b=?)",
          "62:   |  |--SEARCH TABLE t5 USING INDEX t5c (c=?)",
          "63:   |  `--SEARCH TABLE t5 USING INDEX t5d (d=?)",
          "",
          "[Added Lines]",
          "61:   |  |--INDEX 1",
          "62:   |  |  `--SEARCH TABLE t5 USING INDEX t5b (b=?)",
          "63:   |  |--INDEX 2",
          "64:   |  |  `--SEARCH TABLE t5 USING INDEX t5c (c=?)",
          "65:   |  `--INDEX 3",
          "66:   |     `--SEARCH TABLE t5 USING INDEX t5d (d=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124: } {",
          "125:   QUERY PLAN",
          "126:   |--MULTI-INDEX OR",
          "129:   `--USE TEMP B-TREE FOR ORDER BY",
          "130: }",
          "",
          "[Removed Lines]",
          "127:   |  |--SEARCH TABLE t3 USING INDEX t3i1 (b>? AND b<?)",
          "128:   |  `--SEARCH TABLE t3 USING INDEX t3i2 (c=?)",
          "",
          "[Added Lines]",
          "130:   |  |--INDEX 1",
          "131:   |  |  `--SEARCH TABLE t3 USING INDEX t3i1 (b>? AND b<?)",
          "132:   |  `--INDEX 2",
          "133:   |     `--SEARCH TABLE t3 USING INDEX t3i2 (c=?)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "149: } {",
          "150:   QUERY PLAN",
          "151:   |--MULTI-INDEX OR",
          "154:   `--USE TEMP B-TREE FOR ORDER BY",
          "155: }",
          "",
          "[Removed Lines]",
          "152:   |  |--SEARCH TABLE t1 USING INDEX t1b (b>? AND b<?)",
          "153:   |  `--SEARCH TABLE t1 USING INDEX t1b (b=?)",
          "",
          "[Added Lines]",
          "157:   |  |--INDEX 1",
          "158:   |  |  `--SEARCH TABLE t1 USING INDEX t1b (b>? AND b<?)",
          "159:   |  `--INDEX 2",
          "160:   |     `--SEARCH TABLE t1 USING INDEX t1b (b=?)",
          "",
          "---------------"
        ],
        "test/eqp.test||test/eqp.test": [
          "File: test/eqp.test -> test/eqp.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: } {",
          "46:   QUERY PLAN",
          "47:   |--MULTI-INDEX OR",
          "50:   `--SCAN TABLE t2",
          "51: }",
          "52: do_eqp_test 1.3 {",
          "",
          "[Removed Lines]",
          "48:   |  |--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "49:   |  `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "[Added Lines]",
          "48:   |  |--INDEX 1",
          "49:   |  |  `--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "50:   |  `--INDEX 2",
          "51:   |     `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:   QUERY PLAN",
          "56:   |--SCAN TABLE t2",
          "57:   `--MULTI-INDEX OR",
          "60: }",
          "61: do_eqp_test 1.3 {",
          "62:   SELECT a FROM t1 ORDER BY a",
          "",
          "[Removed Lines]",
          "58:      |--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "59:      `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "[Added Lines]",
          "60:      |--INDEX 1",
          "61:      |  `--SEARCH TABLE t1 USING INDEX i1 (a=?)",
          "62:      `--INDEX 2",
          "63:         `--SEARCH TABLE t1 USING INDEX i2 (b=?)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225: } {",
          "226:   QUERY PLAN",
          "227:   |--SCAN TABLE t1",
          "229:      `--SCAN TABLE t1 AS sub",
          "230: }",
          "231: do_eqp_test 3.1.2 {",
          "",
          "[Removed Lines]",
          "228:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "232:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "233: } {",
          "234:   QUERY PLAN",
          "235:   |--SCAN TABLE t1",
          "237:      `--SCAN TABLE t1 AS sub",
          "238: }",
          "239: do_eqp_test 3.1.3 {",
          "",
          "[Removed Lines]",
          "236:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "240:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "241: } {",
          "242:   QUERY PLAN",
          "243:   |--SCAN TABLE t1",
          "245:      |--SCAN TABLE t1 AS sub",
          "246:      `--USE TEMP B-TREE FOR ORDER BY",
          "247: }",
          "",
          "[Removed Lines]",
          "244:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "248:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "250: } {",
          "251:   QUERY PLAN",
          "252:   |--SCAN TABLE t1",
          "254:      `--SCAN TABLE t2 USING COVERING INDEX t2i1",
          "255: }",
          "",
          "[Removed Lines]",
          "253:   `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "257:   `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "302: } {",
          "303:   QUERY PLAN",
          "304:   |--SCAN TABLE t1",
          "306:      `--SCAN TABLE t2",
          "307: }",
          "",
          "[Removed Lines]",
          "305:   `--CORRELATED SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "309:   `--CORRELATED SCALAR SUBQUERY xxxxxx",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "813:   |--MATERIALIZE xxxxxx",
          "814:   |  |--SCAN TABLE forumpost AS x USING INDEX forumthread",
          "815:   |  |--USING ROWID SEARCH ON TABLE private FOR IN-OPERATOR",
          "817:   |  |  |--SEARCH TABLE forumpost USING COVERING INDEX forumthread (froot=?)",
          "818:   |  |  `--USING ROWID SEARCH ON TABLE private FOR IN-OPERATOR",
          "819:   |  `--USE TEMP B-TREE FOR ORDER BY",
          "",
          "[Removed Lines]",
          "816:   |  |--CORRELATED SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "820:   |  |--CORRELATED SCALAR SUBQUERY xxxxxx",
          "",
          "---------------"
        ],
        "test/join5.test||test/join5.test": [
          "File: test/join5.test -> test/join5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "267:   QUERY PLAN",
          "268:   |--SCAN TABLE t1",
          "269:   `--MULTI-INDEX OR",
          "272: }",
          "274: do_execsql_test 7.3 {",
          "",
          "[Removed Lines]",
          "270:      |--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "271:      `--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "",
          "[Added Lines]",
          "270:      |--INDEX 1",
          "271:      |  `--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "272:      `--INDEX 2",
          "273:         `--SEARCH TABLE t2 USING INDEX t2xy (x=? AND y=?)",
          "",
          "---------------"
        ],
        "test/tkt-80ba201079.test||test/tkt-80ba201079.test": [
          "File: test/tkt-80ba201079.test -> test/tkt-80ba201079.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "110: } {300 object_change 2048}",
          "111: do_test tkt-80ba2-201 {",
          "112:   db eval {",
          "113:     CREATE INDEX timeline_entry_id_idx on timeline(entry_id);",
          "114:     SELECT entry_type,",
          "115:            entry_types.name,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113: PRAGMA vdbe_debug=on;",
          "114: PRAGMA vdbe_addoptrace=on;",
          "",
          "---------------"
        ],
        "test/where7.test||test/where7.test": [
          "File: test/where7.test -> test/where7.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "23353: } {",
          "23354:   QUERY PLAN",
          "23355:   |--MULTI-INDEX OR",
          "23358:   |--SEARCH TABLE t302 USING INDEX t302_c8_c3 (c8=? AND c3>?)",
          "23359:   `--USE TEMP B-TREE FOR ORDER BY",
          "23360: }",
          "",
          "[Removed Lines]",
          "23356:   |  |--SEARCH TABLE t301 USING COVERING INDEX t301_c4 (c4=?)",
          "23357:   |  `--SEARCH TABLE t301 USING INTEGER PRIMARY KEY (rowid=?)",
          "",
          "[Added Lines]",
          "23356:   |  |--INDEX 1",
          "23357:   |  |  `--SEARCH TABLE t301 USING COVERING INDEX t301_c4 (c4=?)",
          "23358:   |  `--INDEX 2",
          "23359:   |     `--SEARCH TABLE t301 USING INTEGER PRIMARY KEY (rowid=?)",
          "",
          "---------------"
        ],
        "test/where9.test||test/where9.test": [
          "File: test/where9.test -> test/where9.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "364:     QUERY PLAN",
          "365:     |--SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?)",
          "366:     `--MULTI-INDEX OR",
          "369:   }]",
          "370:   do_eqp_test where9-3.2 {",
          "371:     SELECT coalesce(t2.a,9999)",
          "",
          "[Removed Lines]",
          "367:        |--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "368:        `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "[Added Lines]",
          "367:        |--INDEX 1",
          "368:        |  `--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "369:        `--INDEX 3",
          "370:           `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "375:     QUERY PLAN",
          "376:     |--SEARCH TABLE t1 USING INTEGER PRIMARY KEY (rowid=?)",
          "377:     `--MULTI-INDEX OR",
          "380:   }]",
          "381: }",
          "",
          "[Removed Lines]",
          "378:        |--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "379:        `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "[Added Lines]",
          "380:        |--INDEX 1",
          "381:        |  `--SEARCH TABLE t2 USING INDEX t2d (d=?)",
          "382:        `--INDEX 2",
          "383:           `--SEARCH TABLE t2 USING COVERING INDEX t2f (f=?)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "456: } {",
          "457:   QUERY PLAN",
          "458:   `--MULTI-INDEX OR",
          "461: }",
          "463: # In contrast, b=1000 is preferred over any OR-clause.",
          "",
          "[Removed Lines]",
          "459:      |--SEARCH TABLE t1 USING INDEX t1c (c=?)",
          "460:      `--SEARCH TABLE t1 USING INDEX t1d (d=?)",
          "",
          "[Added Lines]",
          "463:      |--INDEX 1",
          "464:      |  `--SEARCH TABLE t1 USING INDEX t1c (c=?)",
          "465:      `--INDEX 2",
          "466:         `--SEARCH TABLE t1 USING INDEX t1d (d=?)",
          "",
          "---------------"
        ],
        "test/whereI.test||test/whereI.test": [
          "File: test/whereI.test -> test/whereI.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: } {",
          "32:   QUERY PLAN",
          "33:   `--MULTI-INDEX OR",
          "36: }",
          "38: do_execsql_test 1.2 {",
          "",
          "[Removed Lines]",
          "34:      |--SEARCH TABLE t1 USING INDEX i1 (b=?)",
          "35:      `--SEARCH TABLE t1 USING INDEX i2 (c=?)",
          "",
          "[Added Lines]",
          "34:      |--INDEX 1",
          "35:      |  `--SEARCH TABLE t1 USING INDEX i1 (b=?)",
          "36:      `--INDEX 2",
          "37:         `--SEARCH TABLE t1 USING INDEX i2 (c=?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: } {",
          "62:   QUERY PLAN",
          "63:   `--MULTI-INDEX OR",
          "66: }",
          "68: do_execsql_test 2.2 {",
          "",
          "[Removed Lines]",
          "64:      |--SEARCH TABLE t2 USING INDEX i3 (b=?)",
          "65:      `--SEARCH TABLE t2 USING INDEX i4 (c=?)",
          "",
          "[Added Lines]",
          "66:      |--INDEX 1",
          "67:      |  `--SEARCH TABLE t2 USING INDEX i3 (b=?)",
          "68:      `--INDEX 2",
          "69:         `--SEARCH TABLE t2 USING INDEX i4 (c=?)",
          "",
          "---------------"
        ],
        "test/with3.test||test/with3.test": [
          "File: test/with3.test -> test/with3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   |--MATERIALIZE xxxxxx",
          "121:   |  |--SETUP",
          "122:   |  |  |--SCAN CONSTANT ROW",
          "124:   |  |     `--SCAN TABLE w2",
          "125:   |  `--RECURSIVE STEP",
          "126:   |     |--SCAN TABLE w1",
          "",
          "[Removed Lines]",
          "123:   |  |  `--SCALAR SUBQUERY",
          "",
          "[Added Lines]",
          "123:   |  |  `--SCALAR SUBQUERY xxxxxx",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb40727857e4a507e64bbc01e0681d7afdd57af9",
      "candidate_info": {
        "commit_hash": "bb40727857e4a507e64bbc01e0681d7afdd57af9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bb40727857e4a507e64bbc01e0681d7afdd57af9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "src/window.c",
          "test/window8.tcl",
          "test/window8.test"
        ],
        "message": "Allow real values to be used in PRECEDING and FOLLOWING expressions for RANGE window frames.\n\nFossilOrigin-Name: 25ff7091cb12c63b1864ce68a9151f8432af5804b5ae905a2175761ab4b9fdd8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "src/window.c||src/window.c",
          "test/window8.tcl||test/window8.tcl",
          "test/window8.test||test/window8.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5129bcc996b3c9f78ab6b674a4364787e7b353b90f15f027cad4431012022c30",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1723:   break;",
          "1724: }",
          "1734:   pIn1 = &aMem[pOp->p1];",
          "1736:     applyAffinity(pIn1, SQLITE_AFF_NUMERIC, encoding);",
          "1739:       if( pOp->p2==0 ){",
          "1740:         rc = SQLITE_MISMATCH;",
          "1741:         goto abort_due_to_error;",
          "",
          "[Removed Lines]",
          "1735:   if( (pIn1->flags & MEM_Int)==0 ){",
          "1737:     VdbeBranchTaken((pIn1->flags&MEM_Int)==0, 2);",
          "1738:     if( (pIn1->flags & MEM_Int)==0 ){",
          "",
          "[Added Lines]",
          "1738:   u8 f;",
          "1739:   f = (pOp->p5 ? (MEM_Int|MEM_Real) : MEM_Int);",
          "1741:   if( (pIn1->flags & f)==0 ){",
          "1743:     VdbeBranchTaken((pIn1->flags&f)==0, 2);",
          "1744:     if( (pIn1->flags & f)==0 ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1744:       }",
          "1745:     }",
          "1746:   }",
          "1748:   break;",
          "1749: }",
          "",
          "[Removed Lines]",
          "1747:   MemSetTypeFlag(pIn1, MEM_Int);",
          "",
          "[Added Lines]",
          "1753:   if( f==MEM_Int ) MemSetTypeFlag(pIn1, MEM_Int);",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1168:   }",
          "1169: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1171: #define WINDOW_STARTING_INT  0",
          "1172: #define WINDOW_ENDING_INT    1",
          "1173: #define WINDOW_NTH_VALUE_INT 2",
          "1174: #define WINDOW_STARTING_NUM  3",
          "1175: #define WINDOW_ENDING_NUM    4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1179:   static const char *azErr[] = {",
          "1180:     \"frame starting offset must be a non-negative integer\",",
          "1181:     \"frame ending offset must be a non-negative integer\",",
          "1183:   };",
          "1185:   Vdbe *v = sqlite3GetVdbe(pParse);",
          "1186:   int regZero = sqlite3GetTempReg(pParse);",
          "1188:   sqlite3VdbeAddOp2(v, OP_Integer, 0, regZero);",
          "1189:   sqlite3VdbeAddOp2(v, OP_MustBeInt, reg, sqlite3VdbeCurrentAddr(v)+2);",
          "1190:   VdbeCoverageIf(v, eCond==0);",
          "1191:   VdbeCoverageIf(v, eCond==1);",
          "1192:   VdbeCoverageIf(v, eCond==2);",
          "",
          "[Removed Lines]",
          "1178: static void windowCheckIntValue(Parse *pParse, int reg, int eCond){",
          "1182:     \"second argument to nth_value must be a positive integer\"",
          "1184:   static int aOp[] = { OP_Ge, OP_Ge, OP_Gt };",
          "1187:   assert( eCond==0 || eCond==1 || eCond==2 );",
          "",
          "[Added Lines]",
          "1184: static void windowCheckValue(Parse *pParse, int reg, int eCond){",
          "1188:     \"second argument to nth_value must be a positive integer\",",
          "1189:     \"frame starting offset must be a non-negative number\",",
          "1190:     \"frame ending offset must be a non-negative number\",",
          "1192:   static int aOp[] = { OP_Ge, OP_Ge, OP_Gt, OP_Ge, OP_Ge };",
          "1195:   assert( eCond>=0 && eCond<ArraySize(azErr) );",
          "1198:   if( eCond>=WINDOW_STARTING_NUM ) sqlite3VdbeChangeP5(v, 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1384:       if( pFunc->zName==nth_valueName ){",
          "1385:         sqlite3VdbeAddOp3(v, OP_Column, pMWin->iEphCsr, pWin->iArgCol+1,tmpReg);",
          "1387:       }else{",
          "1388:         sqlite3VdbeAddOp2(v, OP_Integer, 1, tmpReg);",
          "1389:       }",
          "",
          "[Removed Lines]",
          "1386:         windowCheckIntValue(pParse, tmpReg, 2);",
          "",
          "[Added Lines]",
          "1395:         windowCheckValue(pParse, tmpReg, 2);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2215:   if( regStart ){",
          "2216:     sqlite3ExprCode(pParse, pMWin->pStart, regStart);",
          "2218:   }",
          "2219:   if( regEnd ){",
          "2220:     sqlite3ExprCode(pParse, pMWin->pEnd, regEnd);",
          "2222:   }",
          "2224:   if( pMWin->eStart==pMWin->eEnd && regStart && regEnd ){",
          "",
          "[Removed Lines]",
          "2217:     windowCheckIntValue(pParse, regStart, 0);",
          "2221:     windowCheckIntValue(pParse, regEnd, 1);",
          "",
          "[Added Lines]",
          "2226:     windowCheckValue(pParse, regStart, 0 + (pMWin->eType==TK_RANGE ? 3 : 0));",
          "2230:     windowCheckValue(pParse, regEnd, 1 + (pMWin->eType==TK_RANGE ? 3 : 0));",
          "",
          "---------------"
        ],
        "test/window8.tcl||test/window8.tcl": [
          "File: test/window8.tcl -> test/window8.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "94: execsql_test 2.0 {",
          "95:   DROP TABLE IF EXISTS t1;",
          "97:   INSERT INTO t1 VALUES",
          "98:       (5, 10), (10, 20), (13, 26), (13, 26),",
          "99:       (15, 30), (20, 40), (22,80), (30, 90);",
          "",
          "[Removed Lines]",
          "96:   CREATE TABLE t1(a INTEGER, b INTEGER);",
          "",
          "[Added Lines]",
          "96:   CREATE TABLE t1(a REAL, b INTEGER);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:   4 { ORDER BY a DESC RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING }",
          "107:   5 { ORDER BY a DESC RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING }",
          "108:   6 { ORDER BY a DESC RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING }",
          "109: } {",
          "111: }",
          "",
          "[Removed Lines]",
          "110:   execsql_test 2.$tn \"SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ($frame)\"",
          "",
          "[Added Lines]",
          "110:   7  { ORDER BY a RANGE BETWEEN 5.1 PRECEDING AND 5.3 FOLLOWING }",
          "111:   8  { ORDER BY a RANGE BETWEEN 10.2 PRECEDING AND 5.4 PRECEDING }",
          "112:   9  { ORDER BY a RANGE BETWEEN 2.6 FOLLOWING AND 3.5 FOLLOWING }",
          "113:   10 { ORDER BY a DESC RANGE BETWEEN 5.7 PRECEDING AND 5.8 FOLLOWING }",
          "114:   11 { ORDER BY a DESC RANGE BETWEEN UNBOUNDED PRECEDING AND 5.9 PRECEDING }",
          "115:   12 { ORDER BY a DESC RANGE BETWEEN 2.1 FOLLOWING AND UNBOUNDED FOLLOWING }",
          "117:   execsql_test 2.$tn \"",
          "118:     SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ($frame)",
          "119:   \"",
          "",
          "---------------"
        ],
        "test/window8.test||test/window8.test": [
          "File: test/window8.test -> test/window8.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "438: do_execsql_test 2.0 {",
          "439:   DROP TABLE IF EXISTS t1;",
          "441:   INSERT INTO t1 VALUES",
          "442:       (5, 10), (10, 20), (13, 26), (13, 26),",
          "443:       (15, 30), (20, 40), (22,80), (30, 90);",
          "444: } {}",
          "446: do_execsql_test 2.1 {",
          "448: } {5 30   10 112   13 102   13 102   15 142   20 150   22 120   30 90}",
          "450: do_execsql_test 2.2 {",
          "452: } {5 {}   10 10   13 10   13 10   15 30   20 102   22 82   30 120}",
          "454: do_execsql_test 2.3 {",
          "456: } {5 {}   10 52   13 30   13 30   15 {}   20 80   22 {}   30 {}}",
          "458: do_execsql_test 2.4 {",
          "460: } {30 90   22 120   20 150   15 142   13 102   13 102   10 112   5 30}",
          "462: do_execsql_test 2.5 {",
          "464: } {30 {}   22 90   20 90   15 120   13 120   13 120   10 70   5 102}",
          "466: do_execsql_test 2.6 {",
          "468: } {30 {}   22 40   20 {}   15 52   13 20   13 20   10 {}   5 {}}",
          "470: finish_test",
          "",
          "[Removed Lines]",
          "440:   CREATE TABLE t1(a INTEGER, b INTEGER);",
          "447:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )",
          "451:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING )",
          "455:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING )",
          "459:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )",
          "463:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING )",
          "467:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING )",
          "",
          "[Added Lines]",
          "440:   CREATE TABLE t1(a REAL, b INTEGER);",
          "447:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )",
          "451:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING )",
          "455:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING )",
          "459:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )",
          "463:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING )",
          "467:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING )",
          "470: do_execsql_test 2.7 {",
          "471:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 5.1 PRECEDING AND 5.3 FOLLOWING )",
          "472: } {5 30   10 112   13 102   13 102   15 142   20 150   22 120   30 90}",
          "474: do_execsql_test 2.8 {",
          "475:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 10.2 PRECEDING AND 5.4 PRECEDING )",
          "476: } {5 {}   10 {}   13 10   13 10   15 10   20 72   22 82   30 120}",
          "478: do_execsql_test 2.9 {",
          "479:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 2.6 FOLLOWING AND 3.5 FOLLOWING )",
          "480: } {5 {}   10 52   13 {}   13 {}   15 {}   20 {}   22 {}   30 {}}",
          "482: do_execsql_test 2.10 {",
          "483:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 5.7 PRECEDING AND 5.8 FOLLOWING )",
          "484: } {30 90   22 120   20 150   15 142   13 102   13 102   10 112   5 30}",
          "486: do_execsql_test 2.11 {",
          "487:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN UNBOUNDED PRECEDING AND 5.9 PRECEDING )",
          "488: } {30 {}   22 90   20 90   15 170   13 210   13 210   10 210   5 292}",
          "490: do_execsql_test 2.12 {",
          "491:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 2.1 FOLLOWING AND UNBOUNDED FOLLOWING )",
          "492: } {30 232   22 112   20 112   15 30   13 30   13 30   10 10   5 {}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ef7d5187a74fdddee3dabfaddebaf63ca316aac7",
      "candidate_info": {
        "commit_hash": "ef7d5187a74fdddee3dabfaddebaf63ca316aac7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ef7d5187a74fdddee3dabfaddebaf63ca316aac7",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/printf.c",
          "test/round1.test"
        ],
        "message": "Improved rounding even on systems with an 8-byte \"long double\" type.\n\nFossilOrigin-Name: 15202aee150fa8e15fb90e90e5765c5e19a1eaf4896da2996a747636b76da8e6",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/printf.c||src/printf.c",
          "test/round1.test||test/round1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 81721aa54587e20d031d528fb6b74d91671a6e950fa926dc63f4284466e70f0e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/printf.c||src/printf.c": [
          "File: src/printf.c -> src/printf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "527:         rounder = arRound[idx%10];",
          "528:         while( idx>=10 ){ rounder *= 1.0e-10; idx -= 10; }",
          "529:         if( xtype==etFLOAT ){",
          "531:           realvalue += rounder;",
          "532:         }",
          "",
          "[Removed Lines]",
          "530:           if( precision<17) rounder += realvalue*2.0e-16;",
          "",
          "[Added Lines]",
          "530:           double rx = (double)realvalue;",
          "531:           sqlite3_uint64 u;",
          "532:           int ex;",
          "533:           memcpy(&u, &rx, sizeof(u));",
          "534:           ex = -1023 + (int)((u>>52)&0x7ff);",
          "535:           if( precision+(ex/3) < 15 ) rounder += realvalue*3e-16;",
          "",
          "---------------"
        ],
        "test/round1.test||test/round1.test": [
          "File: test/round1.test -> test/round1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: source $testdir/tester.tcl",
          "16: set testprefix round1",
          "23: expr srand(0)",
          "24: unset -nocomplain iTest",
          "26:    set x1 [expr int(rand()*100000)]",
          "27:    set x2 [expr int(rand()*100000)+1000*int(rand()*10000)]",
          "28:    set n [expr int(rand()*8)+1]",
          "",
          "[Removed Lines]",
          "18: if {$::longdouble_size<=8} {",
          "19:   finish_test",
          "20:   return",
          "21: }",
          "25: for {set iTest 1} {$iTest<=10000} {incr iTest} {",
          "",
          "[Added Lines]",
          "20: for {set iTest 1} {$iTest<=50000} {incr iTest} {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ec39707fe669c1b08aff4a5bfdc076dd4ed6f6ee",
      "candidate_info": {
        "commit_hash": "ec39707fe669c1b08aff4a5bfdc076dd4ed6f6ee",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ec39707fe669c1b08aff4a5bfdc076dd4ed6f6ee",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New dbsqlfuzz cases added to test/fuzzdata8.db.\n\nFossilOrigin-Name: 49073b7003330027303c4c776e9f85112f8b99b89f848fec3f953eba501d7505",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 322eca7f6ad2234059669015aabb773a790e8bc3da95431c9c851ff5342c969b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}