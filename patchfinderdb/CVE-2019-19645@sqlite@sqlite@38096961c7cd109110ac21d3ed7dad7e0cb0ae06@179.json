{
  "cve_id": "CVE-2019-19645",
  "cve_desc": "alter.c in SQLite through 3.30.1 allows attackers to trigger infinite recursion via certain types of self-referential views in conjunction with ALTER TABLE statements.",
  "repo": "sqlite/sqlite",
  "patch_hash": "38096961c7cd109110ac21d3ed7dad7e0cb0ae06",
  "patch_info": {
    "commit_hash": "38096961c7cd109110ac21d3ed7dad7e0cb0ae06",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/38096961c7cd109110ac21d3ed7dad7e0cb0ae06",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/alter.c",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab3.test"
    ],
    "message": "Avoid infinite recursion in the ALTER TABLE code when a view contains an unused CTE that references, directly or indirectly, the view itself.\n\nFossilOrigin-Name: 1d2e53a39b87e364685e21de137655b6eee725e4c6d27fc90865072d7c5892b5",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/alter.c||src/alter.c",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: c5d44143599f3fe98492b2b900fa3d77925c7be545096251055ceeab899a41f1",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/alter.c||src/alter.c": [
      "File: src/alter.c -> src/alter.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "760:   Parse *pParse = pWalker->pParse;",
      "761:   int i;",
      "762:   if( pParse->nErr ) return WRC_Abort;",
      "763:   if( ALWAYS(p->pEList) ){",
      "764:     ExprList *pList = p->pEList;",
      "765:     for(i=0; i<pList->nExpr; i++){",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "763:   if( p->selFlags & SF_View ) return WRC_Prune;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "853: static int renameColumnSelectCb(Walker *pWalker, Select *p){",
      "854:   renameWalkWith(pWalker, p);",
      "855:   return WRC_Continue;",
      "856: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "855:   if( p->selFlags & SF_View ) return WRC_Prune;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1316:   if( sParse.pNewTable ){",
      "1317:     Select *pSelect = sParse.pNewTable->pSelect;",
      "1318:     if( pSelect ){",
      "1319:       sParse.rc = SQLITE_OK;",
      "1321:       rc = (db->mallocFailed ? SQLITE_NOMEM : sParse.rc);",
      "1322:       if( rc==SQLITE_OK ){",
      "1323:         sqlite3WalkSelect(&sWalker, pSelect);",
      "",
      "[Removed Lines]",
      "1320:       sqlite3SelectPrep(&sParse, sParse.pNewTable->pSelect, 0);",
      "",
      "[Added Lines]",
      "1321:       pSelect->selFlags &= ~SF_View;",
      "1323:       sqlite3SelectPrep(&sParse, pSelect, 0);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1434:   int i;",
      "1435:   RenameCtx *p = pWalker->u.pRename;",
      "1436:   SrcList *pSrc = pSelect->pSrc;",
      "1437:   if( pSrc==0 ){",
      "1438:     assert( pWalker->pParse->db->mallocFailed );",
      "1439:     return WRC_Abort;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1440:   if( pSelect->selFlags & SF_View ) return WRC_Prune;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1514:         if( pTab->pSelect ){",
      "1515:           if( isLegacy==0 ){",
      "1516:             NameContext sNC;",
      "1517:             memset(&sNC, 0, sizeof(sNC));",
      "1518:             sNC.pParse = &sParse;",
      "1520:             sqlite3SelectPrep(&sParse, pTab->pSelect, &sNC);",
      "1521:             if( sParse.nErr ) rc = sParse.rc;",
      "1522:             sqlite3WalkSelect(&sWalker, pTab->pSelect);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1520:             Select *pSelect = pTab->pSelect;",
      "1525:             assert( pSelect->selFlags & SF_View );",
      "1526:             pSelect->selFlags &= ~SF_View;",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2488:   if( IN_RENAME_OBJECT ){",
      "2489:     p->pSelect = pSelect;",
      "2490:     pSelect = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2488:   pSelect->selFlags |= SF_View;",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "487:   ALTER TABLE a RENAME a TO b;",
      "488: }",
      "491: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: #------------------------------------------------------------------------",
      "491: #",
      "492: reset_db",
      "493: do_execsql_test 22.1 {",
      "494:   CREATE TABLE t1(a);",
      "495:   CREATE VIEW v2(b) AS SELECT * FROM v2;",
      "496: }",
      "498: do_catchsql_test 22.2 {",
      "499:   ALTER TABLE t1 RENAME TO t4;",
      "500: } {1 {error in view v2: view v2 is circularly defined}}",
      "502: do_execsql_test 22.3 {",
      "503:   DROP VIEW v2;",
      "504:   CREATE VIEW v2(b) AS WITH t3 AS (SELECT b FROM v2) SELECT * FROM t3;",
      "505: }",
      "507: breakpoint",
      "508: do_catchsql_test 22.4 {",
      "509:   ALTER TABLE t1 RENAME TO t4;",
      "510: } {1 {error in view v2: view v2 is circularly defined}}",
      "512: do_execsql_test 22.5 {",
      "513:   DROP VIEW v2;",
      "514:   CREATE VIEW v2(b) AS WITH t3 AS (SELECT b FROM v2) VALUES(1);",
      "515: }",
      "517: do_catchsql_test 22.6 {",
      "518:   ALTER TABLE t1 RENAME TO t4;",
      "519: } {0 {}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fff1dc8e058f8f676196a39d349ae7f8d81fd7e7",
      "candidate_info": {
        "commit_hash": "fff1dc8e058f8f676196a39d349ae7f8d81fd7e7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fff1dc8e058f8f676196a39d349ae7f8d81fd7e7",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix another case in fts5 where a corrupt database could cause a buffer overread.\n\nFossilOrigin-Name: f7e6cdc5625664f449d0edbe39af2d45910c4137bfd856ae1f770dd826c138ff",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2311:         iPgidx += fts5GetVarint32(&pIter->pLeaf->p[iPgidx], iOff);",
          "2312:         if( iOff<4 || iOff>=pIter->pLeaf->szLeaf ){",
          "2313:           p->rc = FTS5_CORRUPT;",
          "2314:         }else{",
          "2315:           nKeep = 0;",
          "2316:           iTermOff = iOff;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2314:           return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2323:   }",
          "2325:  search_success:",
          "2327:   pIter->iLeafOffset = iOff + nNew;",
          "2328:   pIter->iTermLeafOffset = pIter->iLeafOffset;",
          "2329:   pIter->iTermLeafPgno = pIter->iLeafPgno;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2328:   if( pIter->iLeafOffset>n ){",
          "2329:     p->rc = FTS5_CORRUPT;",
          "2330:     return;",
          "2331:   }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1631:   SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "1632: } {1 {vtable constructor failed: t1}}",
          "1635: sqlite3_fts5_may_be_corrupt 0",
          "1636: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1634: #-------------------------------------------------------------------------",
          "1635: reset_db",
          "1636: do_test 21.0 {",
          "1637:   sqlite3 db {}",
          "1638:   db deserialize [decode_hexdb {",
          "1639: | size 28672 pagesize 4096 filename c22b.db",
          "1640: | page 1 offset 0",
          "1641: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "1642: |     16: 10 00 01 01 00 40 20 20 00 00 00 01 00 00 00 07   .....@  ........",
          "1643: |     32: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "1644: |     48: 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00   ................",
          "1645: |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01   ................",
          "1646: |     96: 00 2e 30 38 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ..08...........m",
          "1647: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "1648: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "1649: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "1650: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "1651: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "1652: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "1653: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "1654: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "1655: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "1656: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "1657: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "1658: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "1659: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "1660: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "1661: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "1662: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "1663: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "1664: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "1665: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "1666: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "1667: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "1668: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "1669: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "1670: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "1671: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "1672: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "1673: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "1674: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "1675: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "1676: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "1677: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "1678: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "1679: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "1680: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "1681: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "1682: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "1683: | page 2 offset 4096",
          "1684: |      0: 0d 0e 8e 00 06 0e 2f 00 0f e8 0e 2f 0f bd 0f 3b   ....../..../...;",
          "1685: |     16: 0e a5 0e 49 00 00 00 00 00 00 00 00 00 00 00 00   ...I............",
          "1686: |   3616: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 18   ................",
          "1687: |   3632: 0a 03 00 36 00 00 00 00 01 04 04 00 04 01 01 01   ...6............",
          "1688: |   3648: 02 01 01 03 01 01 04 01 01 3e 90 80 80 80 80 01   .........>......",
          "1689: |   3664: 04 00 81 00 00 00 00 36 06 30 62 61 63 6b 75 05   .......6.0backu.",
          "1690: |   3680: 02 04 05 02 04 02 05 65 61 6d 65 72 05 02 02 05   .......eamer....",
          "1691: |   3696: 02 02 02 05 6f 6f 6d 65 72 05 01 05 01 02 05 75   ....oomer......u",
          "1692: |   3712: 6d 6d 65 72 05 02 03 05 02 03 04 0d 0d 0b 0f 27   mmer...........'",
          "1693: |   3728: 00 17 30 00 00 00 00 01 03 03 00 03 01 01 01 02   ..0.............",
          "1694: |   3744: 01 01 03 01 01 7b 8c 80 80 80 80 01 04 00 81 7a   ...............z",
          "1695: |   3760: 00 00 00 6d 06 30 61 62 61 63 6b 0d 02 07 04 04   ...m.0aback.....",
          "1696: |   3776: 6e 64 6f 6e 0d 02 05 02 05 63 74 69 76 65 09 02   ndon.....ctive..",
          "1697: |   3792: 02 04 02 0b 02 04 6c 70 68 61 0d 04 02 0a 02 03   ......lpha......",
          "1698: |   3808: 74 6f 6d 0b 02 02 02 02 09 05 02 69 63 0c 02 02   tom........ic...",
          "1699: |   3824: 01 06 62 61 63 6b 75 70 0d 02 04 02 05 6f 6f 6d   ..backup.....oom",
          "1700: |   3840: 65 72 0a 02 02 03 02 08 01 07 63 68 61 6e 6e 65   er........channe",
          "1701: |   3856: 6c 0d 02 03 01 04 74 65 73 74 0d 02 06 04 0a 09   l.....test......",
          "1702: |   3872: 0d 0a 0b 07 0b 0d 0c 0f ef 00 14 2a 00 00 00 00   ...........*....",
          "1703: |   3888: 01 02 02 00 02 01 01 01 02 01 01 7b 88 80 80 80   ................",
          "1704: |   3904: 80 01 04 00 81 7a 00 00 00 6d 06 30 61 62 61 63   .....z...m.0abac",
          "1705: |   3920: 6b 08 02 07 04 04 6e 64 6f 6e 08 02 05 02 05 63   k.....ndon.....c",
          "1706: |   3936: 74 69 76 65 04 02 02 04 02 0b 02 04 6c 70 68 61   tive........lpha",
          "1707: |   3952: 08 04 02 0a 02 03 74 6f 6d 06 02 02 02 02 09 05   ......tom.......",
          "1708: |   3968: 02 69 63 07 02 02 01 06 62 61 63 6b 75 70 08 02   .ic.....backup..",
          "1709: |   3984: 04 02 05 6f 6f 6d 65 72 05 02 02 03 02 08 01 07   ...oomer........",
          "1710: |   4000: 63 68 61 6e 6e 65 6c 08 02 03 01 04 74 65 73 74   channel.....test",
          "1711: |   4016: 08 02 06 04 0a 09 0d 0a 0b 07 0b 0d 0c 24 84 80   .............$..",
          "1712: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "1713: |   4048: 63 6b 01 02 02 04 02 66 74 00 02 22 04 04 6e 64   ck.....ft.....nd",
          "1714: |   4064: 6f 6e 03 02 02 08 0a 07 05 01 03 00 10 0d 23 00   on............#.",
          "1715: |   4080: 00 00 11 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "1716: | page 3 offset 8192",
          "1717: |      0: 0a 00 00 00 04 0f e5 00 0f fa 0f f3 0f ec 0f e5   ................",
          "1718: |   4064: 00 00 00 00 00 06 04 01 0c 01 04 02 06 04 01 0c   ................",
          "1719: |   4080: 01 03 02 06 04 01 0c 01 02 02 05 04 09 0c 01 02   ................",
          "1720: | page 4 offset 12288",
          "1721: |      0: 0d 0f 5a 00 0d 0e ce 00 0f f6 0f ec 0f e0 0f d5   ..Z.............",
          "1722: |     16: 0e e7 0f c1 0f b6 0f 70 0f 65 0e ce 0f 51 0f 46   .......p.e...Q.F",
          "1723: |     32: 0f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "1724: |   3776: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 17 0a   ................",
          "1725: |   3792: 03 00 35 62 65 61 6d 65 72 20 62 75 6d 6d 65 72   ..5beamer bummer",
          "1726: |   3808: 20 62 61 63 6b 75 29 17 05 03 00 35 62 65 61 6d    backu)....5beam",
          "1727: |   3824: 65 72 20 62 75 6d 6d 65 72 20 62 61 63 6b 75 29   er bummer backu)",
          "1728: |   3840: 44 0d 04 00 81 0d 61 6c 70 68 61 20 63 68 61 6e   D.....alpha chan",
          "1729: |   3856: 6e 65 6c 20 62 61 63 6b 75 70 20 61 62 61 6e 64   nel backup aband",
          "1730: |   3872: 6f 6e 20 74 65 73 74 20 61 62 61 63 6b 20 62 6f   on test aback bo",
          "1731: |   3888: 6f 6d 65 72 20 61 74 6f 6d 20 61 6c 70 68 61 20   omer atom alpha",
          "1732: |   3904: 61 63 74 69 76 65 09 0c 03 00 19 61 74 6f 6d 69   active.....atomi",
          "1733: |   3920: 63 07 0b 03 00 15 61 74 6f 6d 0f ca 00 0b 19 62   c.....atom.....b",
          "1734: |   3936: 6f 6f 6d 65 72 09 09 03 00 19 61 63 74 69 76 65   oomer.....active",
          "1735: |   3952: 44 08 04 00 81 0d 61 6c 70 68 61 20 63 68 61 6e   D.....alpha chan",
          "1736: |   3968: 6e 65 6c 20 62 61 63 6b 75 70 20 61 62 61 6e 64   nel backup aband",
          "1737: |   3984: 6f 6e 20 74 65 73 74 20 61 62 61 63 6b 20 62 6f   on test aback bo",
          "1738: |   4000: 6f 6d 65 72 20 61 74 6f 6d 20 61 6c 70 68 61 20   omer atom alpha",
          "1739: |   4016: 61 63 74 69 76 65 09 07 03 00 19 61 74 6f 6d 69   active.....atomi",
          "1740: |   4032: 63 07 06 03 00 15 61 74 6f 6d 00 00 00 0b 19 62   c.....atom.....b",
          "1741: |   4048: 6f 6f 6d 65 72 09 04 03 00 19 61 63 74 69 76 65   oomer.....active",
          "1742: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "1743: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "1744: | page 5 offset 16384",
          "1745: |      0: 0d 00 00 00 0d 0f b2 00 0f fa 0f f4 0f ee 0f e8   ................",
          "1746: |     16: 0f e2 0f dc 0f d6 0f d0 0f ca 0f c4 0f be 0f b8   ................",
          "1747: |     32: 0f b2 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "1748: |   4016: 00 00 04 0d 03 00 0e 0a 04 0c 03 00 0e 01 04 0b   ................",
          "1749: |   4032: 03 00 0e 01 04 0a 03 00 0e 03 04 09 03 00 0e 01   ................",
          "1750: |   4048: 04 08 03 00 0e 0a 04 07 03 00 0e 01 04 06 03 00   ................",
          "1751: |   4064: 0e 01 04 05 03 00 0e 03 04 04 03 00 0e 01 04 03   ................",
          "1752: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "1753: | page 6 offset 20480",
          "1754: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "1755: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "1756: | page 7 offset 24576",
          "1757: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "1758: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "1759: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "1760: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "1761: | end c22b.db",
          "1762: }]} {}",
          "1764: do_catchsql_test 21.1 {",
          "1765:   DELETE FROM t1 WHERE t1 MATCH 'ab*ndon';",
          "1766: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b57c545a384ab5d62becf3164945b32b1e108b2fb4c8dbd939a1706c2079e18b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "804725a6b9ea8ba9ef507866b1d8d2628d1e4356",
      "candidate_info": {
        "commit_hash": "804725a6b9ea8ba9ef507866b1d8d2628d1e4356",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/804725a6b9ea8ba9ef507866b1d8d2628d1e4356",
        "files": [
          "ext/fts3/fts3.c",
          "ext/fts3/fts3_snippet.c",
          "ext/fts3/fts3_tokenizer.c",
          "manifest",
          "manifest.uuid",
          "test/fts3auto.test"
        ],
        "message": "Improvements to detection of corruption in the %_stat shadow table of FTS4.\n\nFossilOrigin-Name: 6b67eba54e7b4887a8cdab7537b12a95e9f17bcdaa0b423af5ed5bd91f69f2c6",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "ext/fts3/fts3_snippet.c||ext/fts3/fts3_snippet.c",
          "ext/fts3/fts3_tokenizer.c||ext/fts3/fts3_tokenizer.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3auto.test||test/fts3auto.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4895:     rc = sqlite3Fts3SelectDoctotal(p, &pStmt);",
          "4896:     if( rc!=SQLITE_OK ) return rc;",
          "4897:     a = sqlite3_column_blob(pStmt, 0);",
          "4904:     }",
          "4905:     if( nDoc==0 || nByte==0 ){",
          "4906:       sqlite3_reset(pStmt);",
          "",
          "[Removed Lines]",
          "4898:     assert( a );",
          "4900:     pEnd = &a[sqlite3_column_bytes(pStmt, 0)];",
          "4901:     a += sqlite3Fts3GetVarint(a, &nDoc);",
          "4902:     while( a<pEnd ){",
          "4903:       a += sqlite3Fts3GetVarint(a, &nByte);",
          "",
          "[Added Lines]",
          "4899:     if( a ){",
          "4900:       pEnd = &a[sqlite3_column_bytes(pStmt, 0)];",
          "4901:       a += sqlite3Fts3GetVarintBounded(a, pEnd, &nDoc);",
          "4902:       while( a<pEnd ){",
          "4903:         a += sqlite3Fts3GetVarintBounded(a, pEnd, &nByte);",
          "4904:       }",
          "",
          "---------------"
        ],
        "ext/fts3/fts3_snippet.c||ext/fts3/fts3_snippet.c": [
          "File: ext/fts3/fts3_snippet.c -> ext/fts3/fts3_snippet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1056:   assert( sqlite3_data_count(pStmt)==1 );",
          "1058:   n = sqlite3_column_bytes(pStmt, 0);",
          "1062:   a = sqlite3_column_blob(pStmt, 0);",
          "1063:   if( a==0 ){",
          "1065:   }",
          "1066:   pEnd = a + n;",
          "1067:   a += sqlite3Fts3GetVarintBounded(a, pEnd, &nDoc);",
          "",
          "[Removed Lines]",
          "1059:   if( n==0 ){",
          "1060:     return FTS_CORRUPT_VTAB;",
          "1061:   }",
          "1064:     return SQLITE_NOMEM;",
          "",
          "[Added Lines]",
          "1061:     return FTS_CORRUPT_VTAB;",
          "",
          "---------------"
        ],
        "ext/fts3/fts3_tokenizer.c||ext/fts3/fts3_tokenizer.c": [
          "File: ext/fts3/fts3_tokenizer.c -> ext/fts3/fts3_tokenizer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "391:   sqlite3_bind_text(pStmt, 1, zName, -1, SQLITE_STATIC);",
          "392:   if( SQLITE_ROW==sqlite3_step(pStmt) ){",
          "394:       memcpy((void *)pp, sqlite3_column_blob(pStmt, 0), sizeof(*pp));",
          "395:     }",
          "396:   }",
          "",
          "[Removed Lines]",
          "393:     if( sqlite3_column_type(pStmt, 0)==SQLITE_BLOB ){",
          "",
          "[Added Lines]",
          "393:     if( sqlite3_column_type(pStmt, 0)==SQLITE_BLOB",
          "394:      && sqlite3_column_bytes(pStmt, 0)==sizeof(*pp)",
          "395:     ){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e35d8c76aae59f57cc5193f79b21b4298029bea78e1aab7af67432162ce63e00",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3auto.test||test/fts3auto.test": [
          "File: test/fts3auto.test -> test/fts3auto.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "570:   do_fts3query_test 4.$tn.4.3 -deferred fi* t1 {on* NEAR/1 fi*}",
          "571:   do_fts3query_test 4.$tn.4.4 -deferred fi* t1 {on* NEAR/2 fi*}",
          "572:   do_fts3query_test 4.$tn.4.5 -deferred fi* t1 {on* NEAR/3 fi*}",
          "573: }",
          "575: #--------------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "574:   db eval {UPDATE t1_stat SET value=x'' WHERE id=0}",
          "575:   do_catchsql_test 4.$tn.4.6 {",
          "576:     SELECT docid FROM t1 WHERE t1 MATCH 'on* NEAR/3 fi*'",
          "577:   } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d406d0726267d7691e7ce121da100e941bc0845a",
      "candidate_info": {
        "commit_hash": "d406d0726267d7691e7ce121da100e941bc0845a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d406d0726267d7691e7ce121da100e941bc0845a",
        "files": [
          "ext/fts5/fts5_hash.c",
          "ext/fts5/test/fts5aa.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a buffer overread that could occur when running fts5 prefix queries inside a transaction.\n\nFossilOrigin-Name: b3fa58dd7403dbd4d2e9f3ae23d7d1337830d6fef2aa2f137ac5174de0d5828e",
        "before_after_code_files": [
          "ext/fts5/fts5_hash.c||ext/fts5/fts5_hash.c",
          "ext/fts5/test/fts5aa.test||ext/fts5/test/fts5aa.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_hash.c||ext/fts5/fts5_hash.c": [
          "File: ext/fts5/fts5_hash.c -> ext/fts5/fts5_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "456:   for(iSlot=0; iSlot<pHash->nSlot; iSlot++){",
          "457:     Fts5HashEntry *pIter;",
          "458:     for(pIter=pHash->aSlot[iSlot]; pIter; pIter=pIter->pHashNext){",
          "460:         Fts5HashEntry *pEntry = pIter;",
          "461:         pEntry->pScanNext = 0;",
          "462:         for(i=0; ap[i]; i++){",
          "",
          "[Removed Lines]",
          "459:       if( pTerm==0 || 0==memcmp(fts5EntryKey(pIter), pTerm, nTerm) ){",
          "",
          "[Added Lines]",
          "459:       if( pTerm==0",
          "460:        || (pIter->nKey+1>=nTerm && 0==memcmp(fts5EntryKey(pIter), pTerm, nTerm))",
          "461:       ){",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5aa.test||ext/fts5/test/fts5aa.test": [
          "File: ext/fts5/test/fts5aa.test -> ext/fts5/test/fts5aa.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "622:     SELECT * FROM t12('aaaa');",
          "623: } {aaaa}",
          "625: }",
          "627: expand_all_sql db",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "625: #-------------------------------------------------------------------------",
          "626: do_execsql_test 25.0 {",
          "627:   CREATE VIRTUAL TABLE t13 USING fts5(x, detail=%DETAIL%);",
          "628: }",
          "629: do_execsql_test 25.1 {",
          "630:   BEGIN;",
          "631:   INSERT INTO t13 VALUES('AAAA');",
          "632: SELECT * FROM t13('BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB*');",
          "634:   END;",
          "635: }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 45c73deb440496e848cb24d4c1326d4105dacfee8bbafb115e567051855e6518",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1194904b814d6da63930dee75bc468094706226a",
      "candidate_info": {
        "commit_hash": "1194904b814d6da63930dee75bc468094706226a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1194904b814d6da63930dee75bc468094706226a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/fkey.c",
          "src/parse.y",
          "src/resolve.c",
          "src/sqliteInt.h",
          "src/treeview.c"
        ],
        "message": "Refactor field Expr.affinity into Expr.affExpr to avoid confusion with other fields and variables named \"affinity\" and display affExpr it in sqlite3TreeViewExpr() output.\n\nFossilOrigin-Name: a29f2a7d07beff64e489e8f824babc6228c4a499fadc0ee701caa60a63baadcd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/fkey.c||src/fkey.c",
          "src/parse.y||src/parse.y",
          "src/resolve.c||src/resolve.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/treeview.c||src/treeview.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/sqliteInt.h||src/sqliteInt.h"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/sqliteInt.h||src/sqliteInt.h"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4b00799bdf107fce8a9dd84fd5bf6597e4f3373659b89aae4a1242be5964726f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:         pExpr->pLeft->x.pSelect->pEList->a[pExpr->iColumn].pExpr",
          "72:     );",
          "73:   }",
          "75: }",
          "",
          "[Removed Lines]",
          "74:   return pExpr->affinity;",
          "",
          "[Added Lines]",
          "74:   return pExpr->affExpr;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4099:     }",
          "4100: #ifndef SQLITE_OMIT_TRIGGER",
          "4101:     case TK_RAISE: {",
          "4106:       );",
          "4107:       if( !pParse->pTriggerTab ){",
          "4108:         sqlite3ErrorMsg(pParse,",
          "4109:                        \"RAISE() may only be used within a trigger-program\");",
          "4110:         return 0;",
          "4111:       }",
          "4113:         sqlite3MayAbort(pParse);",
          "4114:       }",
          "4115:       assert( !ExprHasProperty(pExpr, EP_IntValue) );",
          "4117:         sqlite3VdbeAddOp4(",
          "4118:             v, OP_Halt, SQLITE_OK, OE_Ignore, 0, pExpr->u.zToken,0);",
          "4119:         VdbeCoverage(v);",
          "4120:       }else{",
          "4121:         sqlite3HaltConstraint(pParse, SQLITE_CONSTRAINT_TRIGGER,",
          "4123:       }",
          "4125:       break;",
          "",
          "[Removed Lines]",
          "4102:       assert( pExpr->affinity==OE_Rollback",
          "4103:            || pExpr->affinity==OE_Abort",
          "4104:            || pExpr->affinity==OE_Fail",
          "4105:            || pExpr->affinity==OE_Ignore",
          "4112:       if( pExpr->affinity==OE_Abort ){",
          "4116:       if( pExpr->affinity==OE_Ignore ){",
          "4122:                               pExpr->affinity, pExpr->u.zToken, 0, 0);",
          "",
          "[Added Lines]",
          "4102:       assert( pExpr->affExpr==OE_Rollback",
          "4103:            || pExpr->affExpr==OE_Abort",
          "4104:            || pExpr->affExpr==OE_Fail",
          "4105:            || pExpr->affExpr==OE_Ignore",
          "4112:       if( pExpr->affExpr==OE_Abort ){",
          "4116:       if( pExpr->affExpr==OE_Ignore ){",
          "4122:                               pExpr->affExpr, pExpr->u.zToken, 0, 0);",
          "",
          "---------------"
        ],
        "src/fkey.c||src/fkey.c": [
          "File: src/fkey.c -> src/fkey.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "478:     if( iCol>=0 && iCol!=pTab->iPKey ){",
          "479:       pCol = &pTab->aCol[iCol];",
          "480:       pExpr->iTable = regBase + iCol + 1;",
          "482:       zColl = pCol->zColl;",
          "483:       if( zColl==0 ) zColl = db->pDfltColl->zName;",
          "484:       pExpr = sqlite3ExprAddCollateString(pParse, pExpr, zColl);",
          "485:     }else{",
          "486:       pExpr->iTable = regBase;",
          "488:     }",
          "489:   }",
          "490:   return pExpr;",
          "",
          "[Removed Lines]",
          "481:       pExpr->affinity = pCol->affinity;",
          "487:       pExpr->affinity = SQLITE_AFF_INTEGER;",
          "",
          "[Added Lines]",
          "481:       pExpr->affExpr = pCol->affinity;",
          "487:       pExpr->affExpr = SQLITE_AFF_INTEGER;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1287:       tFrom.n = nFrom;",
          "1288:       pRaise = sqlite3Expr(db, TK_RAISE, \"FOREIGN KEY constraint failed\");",
          "1289:       if( pRaise ){",
          "1291:       }",
          "1292:       pSelect = sqlite3SelectNew(pParse,",
          "1293:           sqlite3ExprListAppend(pParse, 0, pRaise),",
          "",
          "[Removed Lines]",
          "1290:         pRaise->affinity = OE_Abort;",
          "",
          "[Added Lines]",
          "1290:         pRaise->affExpr = OE_Abort;",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "949:     if( p ){",
          "951:       p->op = (u8)op;",
          "953:       p->flags = EP_Leaf;",
          "954:       p->iAgg = -1;",
          "955:       p->pLeft = p->pRight = 0;",
          "",
          "[Removed Lines]",
          "952:       p->affinity = 0;",
          "",
          "[Added Lines]",
          "952:       p->affExpr = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1508: expr(A) ::= RAISE LP IGNORE RP.  {",
          "1509:   A = sqlite3PExpr(pParse, TK_RAISE, 0, 0);",
          "1510:   if( A ){",
          "1512:   }",
          "1513: }",
          "1514: expr(A) ::= RAISE LP raisetype(T) COMMA nm(Z) RP.  {",
          "1515:   A = sqlite3ExprAlloc(pParse->db, TK_RAISE, &Z, 1);",
          "1516:   if( A ) {",
          "1518:   }",
          "1519: }",
          "1520: %endif  !SQLITE_OMIT_TRIGGER",
          "",
          "[Removed Lines]",
          "1511:     A->affinity = OE_Ignore;",
          "1517:     A->affinity = (char)T;",
          "",
          "[Added Lines]",
          "1511:     A->affExpr = OE_Ignore;",
          "1517:     A->affExpr = (char)T;",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:           {",
          "382: #ifndef SQLITE_OMIT_TRIGGER",
          "383:             if( iCol<0 ){",
          "385:             }else if( pExpr->iTable==0 ){",
          "386:               testcase( iCol==31 );",
          "387:               testcase( iCol==32 );",
          "",
          "[Removed Lines]",
          "384:               pExpr->affinity = SQLITE_AFF_INTEGER;",
          "",
          "[Added Lines]",
          "384:               pExpr->affExpr = SQLITE_AFF_INTEGER;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "413:     ){",
          "414:       cnt = 1;",
          "415:       pExpr->iColumn = -1;",
          "417:     }",
          "",
          "[Removed Lines]",
          "416:       pExpr->affinity = SQLITE_AFF_INTEGER;",
          "",
          "[Added Lines]",
          "416:       pExpr->affExpr = SQLITE_AFF_INTEGER;",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/treeview.c||src/treeview.c": [
          "File: src/treeview.c -> src/treeview.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "402:     sqlite3TreeViewPop(pView);",
          "403:     return;",
          "404:   }",
          "406:     if( ExprHasProperty(pExpr, EP_FromJoin) ){",
          "409:     }else{",
          "411:     }",
          "412:   }else{",
          "413:     zFlgs[0] = 0;",
          "",
          "[Removed Lines]",
          "405:   if( pExpr->flags ){",
          "407:       sqlite3_snprintf(sizeof(zFlgs),zFlgs,\"  flags=0x%x iRJT=%d\",",
          "408:                        pExpr->flags, pExpr->iRightJoinTable);",
          "410:       sqlite3_snprintf(sizeof(zFlgs),zFlgs,\"  flags=0x%x\",pExpr->flags);",
          "",
          "[Added Lines]",
          "405:   if( pExpr->flags || pExpr->affExpr ){",
          "407:       sqlite3_snprintf(sizeof(zFlgs),zFlgs,\"  fg.af=%x.%c iRJT=%d\",",
          "408:                        pExpr->flags, pExpr->affExpr ? pExpr->affExpr : 'n',",
          "409:                        pExpr->iRightJoinTable);",
          "411:       sqlite3_snprintf(sizeof(zFlgs),zFlgs,\"  fg.af=%x.%c\",",
          "412:                        pExpr->flags, pExpr->affExpr ? pExpr->affExpr : 'n');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "635: #ifndef SQLITE_OMIT_TRIGGER",
          "636:     case TK_RAISE: {",
          "637:       const char *zType = \"unk\";",
          "639:         case OE_Rollback:   zType = \"rollback\";  break;",
          "640:         case OE_Abort:      zType = \"abort\";     break;",
          "641:         case OE_Fail:       zType = \"fail\";      break;",
          "",
          "[Removed Lines]",
          "638:       switch( pExpr->affinity ){",
          "",
          "[Added Lines]",
          "640:       switch( pExpr->affExpr ){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "676:     sqlite3TreeViewExpr(pView, pExpr->pRight, 0);",
          "677:   }else if( zUniOp ){",
          "678:     sqlite3TreeViewLine(pView, \"%s%s\", zUniOp, zFlgs);",
          "680:   }",
          "681:   sqlite3TreeViewPop(pView);",
          "682: }",
          "",
          "[Removed Lines]",
          "679:     sqlite3TreeViewExpr(pView, pExpr->pLeft, 0);",
          "",
          "[Added Lines]",
          "681:    sqlite3TreeViewExpr(pView, pExpr->pLeft, 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8328369740b33c1de8ed362fc70e76d07f1e1159",
      "candidate_info": {
        "commit_hash": "8328369740b33c1de8ed362fc70e76d07f1e1159",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8328369740b33c1de8ed362fc70e76d07f1e1159",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/minmax4.test"
        ],
        "message": "Add tests to ensure that this branch really does fix ticket [f8a7060ece].\n\nFossilOrigin-Name: f892066425671a8a0ac923e3ad4744677f6434a66f97b91afa8141f11f179975",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/minmax4.test||test/minmax4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b49df1fe9b7174ebc60023179e8da628c926e59df3dc01b15d4a28e17807bb97",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/minmax4.test||test/minmax4.test": [
          "File: test/minmax4.test -> test/minmax4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "200:   SELECT MIN(a) FROM t1 WHERE a=123;",
          "201: } {123}",
          "203: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203: #-------------------------------------------------------------------------",
          "204: # Tests for ticket f8a7060ece.",
          "205: #",
          "206: reset_db",
          "207: do_execsql_test 6.1.0 {",
          "208:   CREATE TABLE t1(a, b, c);",
          "209:   INSERT INTO t1 VALUES(NULL, 1, 'x');",
          "210:   CREATE INDEX i1 ON t1(a);",
          "211: }",
          "212: do_execsql_test 6.1.1 {",
          "213:   SELECT min(a), b, c FROM t1 WHERE c='x';",
          "214: } {{} 1 x}",
          "215: do_execsql_test 6.1.2 {",
          "216:   INSERT INTO t1 VALUES(1,    2, 'y');",
          "217: } {}",
          "218: do_execsql_test 6.1.3 {",
          "219:   SELECT min(a), b, c FROM t1 WHERE c='x';",
          "220: } {{} 1 x}",
          "222: do_execsql_test 6.2.0 {",
          "223:   CREATE TABLE t0(c0 UNIQUE, c1);",
          "224:   INSERT INTO t0(c1) VALUES (0);",
          "225:   INSERT INTO t0(c0) VALUES (0);",
          "226:   CREATE VIEW v0(c0, c1) AS",
          "227:       SELECT t0.c1, t0.c0 FROM t0 WHERE CAST(t0.rowid AS INT) = 1;",
          "228: }",
          "229: do_execsql_test 6.2.1 {",
          "230:   SELECT c0, c1 FROM v0;",
          "231: } {0 {}}",
          "232: do_execsql_test 6.2.2 {",
          "233:   SELECT v0.c0, MIN(v0.c1) FROM v0;",
          "234: } {0 {}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}