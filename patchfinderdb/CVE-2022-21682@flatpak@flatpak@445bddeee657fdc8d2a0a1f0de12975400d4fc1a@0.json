{
  "cve_id": "CVE-2022-21682",
  "cve_desc": "Flatpak is a Linux application sandboxing and distribution framework. A path traversal vulnerability affects versions of Flatpak prior to 1.12.3 and 1.10.6. flatpak-builder applies `finish-args` last in the build. At this point the build directory will have the full access that is specified in the manifest, so running `flatpak build` against it will gain those permissions. Normally this will not be done, so this is not problem. However, if `--mirror-screenshots-url` is specified, then flatpak-builder will launch `flatpak build --nofilesystem=host appstream-utils mirror-screenshots` after finalization, which can lead to issues even with the `--nofilesystem=host` protection. In normal use, the only issue is that these empty directories can be created wherever the user has write permissions. However, a malicious application could replace the `appstream-util` binary and potentially do something more hostile. This has been resolved in Flatpak 1.12.3 and 1.10.6 by changing the behaviour of `--nofilesystem=home` and `--nofilesystem=host`.",
  "repo": "flatpak/flatpak",
  "patch_hash": "445bddeee657fdc8d2a0a1f0de12975400d4fc1a",
  "patch_info": {
    "commit_hash": "445bddeee657fdc8d2a0a1f0de12975400d4fc1a",
    "repo": "flatpak/flatpak",
    "commit_url": "https://github.com/flatpak/flatpak/commit/445bddeee657fdc8d2a0a1f0de12975400d4fc1a",
    "files": [
      "common/flatpak-context.c"
    ],
    "message": "Make --nofilesystem=host/home remove access to subdirs of those\n\nPreviously --nofilesystem=host only removed specifically access to the\n`host` permissions, and not necessarily other filesystems (like `home`\nor `/some/path`). This isn't very useful to limit access because you\ndon't know what other filesystems the app may have access too.\n\nWe change this to mean that `--nofilesystem=host` removes *all* filesystem\naccess from the parent layer, and `--nofilesystem=home` removes all\nfile access to the homedir and paths inside it.\n\nThe available layers are, in order:\n\n * app permissions\n * overrides\n * commandline args\n\nThis allows you to start from scratch with the filesystem permissions\nin the overrides or the commandline. This is a small change in\nbehaviour, but not a lot of things use --nofilesystem, and the ones\nthat do probably expects this behaviour.",
    "before_after_code_files": [
      "common/flatpak-context.c||common/flatpak-context.c"
    ]
  },
  "patch_diff": {
    "common/flatpak-context.c||common/flatpak-context.c": [
      "File: common/flatpak-context.c -> common/flatpak-context.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "852:   return FALSE;",
      "853: }",
      "855: static void",
      "856: flatpak_context_take_filesystem (FlatpakContext        *context,",
      "857:                                  char                  *fs,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "856: static gboolean",
      "857: flatpak_filesystem_key_in_home (const char *filesystem)",
      "858: {",
      "860:   if (strcmp (filesystem, \"home\") == 0)",
      "861:     return TRUE;",
      "866:   if (g_strv_contains (flatpak_context_special_filesystems, filesystem) ||",
      "867:       g_str_has_prefix (filesystem, \"/\"))",
      "868:     return FALSE;",
      "871:   if (g_str_has_prefix (filesystem, \"xdg-run\"))",
      "872:     return FALSE;",
      "877:   return TRUE;",
      "878: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "866: {",
      "867:   GHashTableIter iter;",
      "868:   gpointer key, value;",
      "870:   context->shares &= ~other->shares_valid;",
      "871:   context->shares |= other->shares;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "894:   gboolean no_home = FALSE;",
      "895:   gboolean no_host = FALSE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "888:   while (g_hash_table_iter_next (&iter, &key, &value))",
      "889:     g_hash_table_insert (context->persistent, g_strdup (key), value);",
      "891:   g_hash_table_iter_init (&iter, other->filesystems);",
      "892:   while (g_hash_table_iter_next (&iter, &key, &value))",
      "893:     g_hash_table_insert (context->filesystems, g_strdup (key), value);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "920:   if (g_hash_table_lookup_extended (other->filesystems,",
      "921:                                     \"host\",",
      "922:                                     NULL, &value))",
      "923:     {",
      "924:       FlatpakFilesystemMode host_mode = GPOINTER_TO_INT (value);",
      "925:       if (host_mode == FLATPAK_FILESYSTEM_MODE_NONE)",
      "926:         no_host = TRUE;",
      "927:     }",
      "929:   if (g_hash_table_lookup_extended (other->filesystems,",
      "930:                                     \"home\",",
      "931:                                     NULL, &value))",
      "932:     {",
      "933:       FlatpakFilesystemMode home_mode = GPOINTER_TO_INT (value);",
      "934:       if (home_mode == FLATPAK_FILESYSTEM_MODE_NONE)",
      "935:         no_home = TRUE;",
      "936:     }",
      "938:   if (no_host)",
      "939:     {",
      "940:       g_hash_table_remove_all (context->filesystems);",
      "941:     }",
      "942:   else if (no_home)",
      "943:     {",
      "944:       g_hash_table_iter_init (&iter, context->filesystems);",
      "945:       while (g_hash_table_iter_next (&iter, &key, &value))",
      "946:         {",
      "947:           if (flatpak_filesystem_key_in_home ((const char *)key))",
      "948:             g_hash_table_iter_remove (&iter);",
      "949:         }",
      "950:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d36382dd4d109629aee4402463393c288ce4f846",
      "candidate_info": {
        "commit_hash": "d36382dd4d109629aee4402463393c288ce4f846",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/d36382dd4d109629aee4402463393c288ce4f846",
        "files": [
          "common/flatpak-context.c"
        ],
        "message": "Make --nofilesystem=host/home remove access to subdirs of those\n\nPreviously --nofilesystem=host only removed specifically access to the\n`host` permissions, and not necessarily other filesystems (like `home`\nor `/some/path`). This isn't very useful to limit access because you\ndon't know what other filesystems the app may have access too.\n\nWe change this to mean that `--nofilesystem=host` removes *all* filesystem\naccess from the parent layer, and `--nofilesystem=home` removes all\nfile access to the homedir and paths inside it.\n\nThe available layers are, in order:\n\n * app permissions\n * overrides\n * commandline args\n\nThis allows you to start from scratch with the filesystem permissions\nin the overrides or the commandline. This is a small change in\nbehaviour, but not a lot of things use --nofilesystem, and the ones\nthat do probably expects this behaviour.\n\n(cherry picked from commit e2c8863fb62301cb05c64bbb32b04446e88ce11a)",
        "before_after_code_files": [
          "common/flatpak-context.c||common/flatpak-context.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "common/flatpak-context.c||common/flatpak-context.c"
          ],
          "candidate": [
            "common/flatpak-context.c||common/flatpak-context.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-context.c||common/flatpak-context.c": [
          "File: common/flatpak-context.c -> common/flatpak-context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "852:   return FALSE;",
          "853: }",
          "855: static void",
          "856: flatpak_context_take_filesystem (FlatpakContext        *context,",
          "857:                                  char                  *fs,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "856: static gboolean",
          "857: flatpak_filesystem_key_in_home (const char *filesystem)",
          "858: {",
          "860:   if (strcmp (filesystem, \"home\") == 0)",
          "861:     return TRUE;",
          "866:   if (g_strv_contains (flatpak_context_special_filesystems, filesystem) ||",
          "867:       g_str_has_prefix (filesystem, \"/\"))",
          "868:     return FALSE;",
          "871:   if (g_str_has_prefix (filesystem, \"xdg-run\"))",
          "872:     return FALSE;",
          "877:   return TRUE;",
          "878: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "866: {",
          "867:   GHashTableIter iter;",
          "868:   gpointer key, value;",
          "870:   context->shares &= ~other->shares_valid;",
          "871:   context->shares |= other->shares;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "894:   gboolean no_home = FALSE;",
          "895:   gboolean no_host = FALSE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "888:   while (g_hash_table_iter_next (&iter, &key, &value))",
          "889:     g_hash_table_insert (context->persistent, g_strdup (key), value);",
          "891:   g_hash_table_iter_init (&iter, other->filesystems);",
          "892:   while (g_hash_table_iter_next (&iter, &key, &value))",
          "893:     g_hash_table_insert (context->filesystems, g_strdup (key), value);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "920:   if (g_hash_table_lookup_extended (other->filesystems,",
          "921:                                     \"host\",",
          "922:                                     NULL, &value))",
          "923:     {",
          "924:       FlatpakFilesystemMode host_mode = GPOINTER_TO_INT (value);",
          "925:       if (host_mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "926:         no_host = TRUE;",
          "927:     }",
          "929:   if (g_hash_table_lookup_extended (other->filesystems,",
          "930:                                     \"home\",",
          "931:                                     NULL, &value))",
          "932:     {",
          "933:       FlatpakFilesystemMode home_mode = GPOINTER_TO_INT (value);",
          "934:       if (home_mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "935:         no_home = TRUE;",
          "936:     }",
          "938:   if (no_host)",
          "939:     {",
          "940:       g_hash_table_remove_all (context->filesystems);",
          "941:     }",
          "942:   else if (no_home)",
          "943:     {",
          "944:       g_hash_table_iter_init (&iter, context->filesystems);",
          "945:       while (g_hash_table_iter_next (&iter, &key, &value))",
          "946:         {",
          "947:           if (flatpak_filesystem_key_in_home ((const char *)key))",
          "948:             g_hash_table_iter_remove (&iter);",
          "949:         }",
          "950:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8483f672fdd37d437f8ae849a1c01786c6288de",
      "candidate_info": {
        "commit_hash": "b8483f672fdd37d437f8ae849a1c01786c6288de",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/b8483f672fdd37d437f8ae849a1c01786c6288de",
        "files": [
          "common/flatpak-context-private.h",
          "common/flatpak-context.c",
          "tests/test-exports.c"
        ],
        "message": "FlatpakContext: Add new filesystem flag \"all\" to mean recursive negation\n\nThis new flag gets set for overrides with filesystems that have\n\"!home:all\" or \"!host:all\", or commandline args\n\"--nofilesystem=home:all\" or \"--nofilesystem=host:all\". Then it\nchanges the new recursive permission dropping to only affect\nfilesystems with the flag set.\n\nThe regular !home now behaves as it did before the recent change\nallowing existing behaviour change. The new syntax for the overrides\nfile is ignored (except for a warning) by older versions of flatpak.\nHowever, even the warning is unlikely to happen because the :all\noverrides are really not useful in app permissions themselves\nbut rather only in overrides (in file or cli), so they are not\nlikely to be seen unless you update flatpak and manually use them.\n\nWith this change we need to change flatpak-builder to use\n--nofilesystem=host:all for more recent versions of flatpak to fix\nthe security issue.",
        "before_after_code_files": [
          "common/flatpak-context-private.h||common/flatpak-context-private.h",
          "common/flatpak-context.c||common/flatpak-context.c",
          "tests/test-exports.c||tests/test-exports.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "common/flatpak-context.c||common/flatpak-context.c"
          ],
          "candidate": [
            "common/flatpak-context.c||common/flatpak-context.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-context-private.h||common/flatpak-context-private.h": [
          "File: common/flatpak-context-private.h -> common/flatpak-context-private.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: typedef enum {",
          "87:   FLATPAK_CONTEXT_FILESYSTEM_FLAGS     = 0,",
          "88: } FlatpakContextFilesystemFlags;",
          "90: typedef struct _FlatpakContextFilesystem {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:   FLATPAK_CONTEXT_FILESYSTEM_FLAGS_ALL =  1 << 0,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95: FlatpakContextFilesystem *flatpak_context_filesystem_dup (FlatpakContextFilesystem *data);",
          "102: FlatpakContext *flatpak_context_new (void);",
          "103: void           flatpak_context_free (FlatpakContext *context);",
          "",
          "[Removed Lines]",
          "97: gboolean       flatpak_context_parse_filesystem (const char             *filesystem_and_mode,",
          "98:                                                  char                  **filesystem_out,",
          "99:                                                  FlatpakFilesystemMode  *mode_out,",
          "100:                                                  GError                **error);",
          "",
          "[Added Lines]",
          "98: gboolean       flatpak_context_parse_filesystem (const char                    *filesystem_and_mode,",
          "99:                                                  gboolean                       negated,",
          "100:                                                  char                         **filesystem_out,",
          "101:                                                  FlatpakFilesystemMode         *mode_out,",
          "102:                                                  FlatpakContextFilesystemFlags *flags_out,",
          "103:                                                  GError                       **error);",
          "",
          "---------------"
        ],
        "common/flatpak-context.c||common/flatpak-context.c": [
          "File: common/flatpak-context.c -> common/flatpak-context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "679: }",
          "681: static char *",
          "684: {",
          "685:   g_autoptr(GString) s = g_string_new (\"\");",
          "686:   const char *p;",
          "",
          "[Removed Lines]",
          "682: unparse_filesystem_flags (const char           *path,",
          "683:                           FlatpakFilesystemMode mode)",
          "",
          "[Added Lines]",
          "682: unparse_filesystem_flags (const char                   *path,",
          "683:                           FlatpakFilesystemMode         mode,",
          "684:                           FlatpakContextFilesystemFlags flags)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "711:     case FLATPAK_FILESYSTEM_MODE_NONE:",
          "712:       g_string_insert_c (s, 0, '!');",
          "713:       break;",
          "715:     default:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "714:       if ((flags & FLATPAK_CONTEXT_FILESYSTEM_FLAGS_ALL) != 0)",
          "715:         g_string_append (s, \":all\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "721: }",
          "723: static char *",
          "726: {",
          "727:   g_autoptr(GString) s = g_string_new (\"\");",
          "728:   const char *p, *suffix;",
          "729:   FlatpakFilesystemMode mode;",
          "731:   p = filesystem;",
          "732:   while (*p != 0 && *p != ':')",
          "",
          "[Removed Lines]",
          "724: parse_filesystem_flags (const char            *filesystem,",
          "725:                         FlatpakFilesystemMode *mode_out)",
          "",
          "[Added Lines]",
          "727: parse_filesystem_flags (const char                    *filesystem,",
          "728:                         gboolean                       negated,",
          "729:                         FlatpakFilesystemMode         *mode_out,",
          "730:                         FlatpakContextFilesystemFlags *flags_out)",
          "735:   FlatpakContextFilesystemFlags flags;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "741:         g_string_append_c (s, *p++);",
          "742:     }",
          "747:     {",
          "758:     }",
          "760:   if (mode_out)",
          "763:   return g_string_free (g_steal_pointer (&s), FALSE);",
          "764: }",
          "766: gboolean",
          "773:   char *slash;",
          "775:   slash = strchr (filesystem, '/');",
          "",
          "[Removed Lines]",
          "744:   mode = FLATPAK_FILESYSTEM_MODE_READ_WRITE;",
          "746:   if (*p == ':')",
          "748:       suffix = p + 1;",
          "750:       if (strcmp (suffix, \"ro\") == 0)",
          "751:         mode = FLATPAK_FILESYSTEM_MODE_READ_ONLY;",
          "752:       else if (strcmp (suffix, \"rw\") == 0)",
          "753:         mode = FLATPAK_FILESYSTEM_MODE_READ_WRITE;",
          "754:       else if (strcmp (suffix, \"create\") == 0)",
          "755:         mode = FLATPAK_FILESYSTEM_MODE_CREATE;",
          "756:       else if (*suffix != 0)",
          "757:         g_warning (\"Unexpected filesystem suffix %s, ignoring\", suffix);",
          "767: flatpak_context_parse_filesystem (const char             *filesystem_and_mode,",
          "768:                                   char                  **filesystem_out,",
          "769:                                   FlatpakFilesystemMode  *mode_out,",
          "770:                                   GError                **error)",
          "771: {",
          "772:   g_autofree char *filesystem = parse_filesystem_flags (filesystem_and_mode, mode_out);",
          "",
          "[Added Lines]",
          "750:   flags = 0;",
          "752:   if (negated)",
          "754:       mode = FLATPAK_FILESYSTEM_MODE_NONE;",
          "756:       if (*p == ':')",
          "757:         {",
          "758:           suffix = p + 1;",
          "761:           if (strcmp (suffix, \"all\") == 0 &&",
          "762:               (strcmp (s->str, \"host\") == 0 ||",
          "763:                strcmp (s->str, \"home\") == 0))",
          "764:             flags |= FLATPAK_CONTEXT_FILESYSTEM_FLAGS_ALL;",
          "768:         }",
          "769:     }",
          "770:   else",
          "771:     {",
          "772:       mode = FLATPAK_FILESYSTEM_MODE_READ_WRITE;",
          "774:       if (*p == ':')",
          "775:         {",
          "776:           suffix = p + 1;",
          "778:           if (strcmp (suffix, \"ro\") == 0)",
          "779:             mode = FLATPAK_FILESYSTEM_MODE_READ_ONLY;",
          "780:           else if (strcmp (suffix, \"rw\") == 0)",
          "781:             mode = FLATPAK_FILESYSTEM_MODE_READ_WRITE;",
          "782:           else if (strcmp (suffix, \"create\") == 0)",
          "783:             mode = FLATPAK_FILESYSTEM_MODE_CREATE;",
          "784:           else if (*suffix != 0)",
          "785:             g_warning (\"Unexpected filesystem suffix %s, ignoring\", suffix);",
          "786:         }",
          "791:   if (flags_out)",
          "798: flatpak_context_parse_filesystem (const char                    *filesystem_and_mode,",
          "799:                                   gboolean                       negated,",
          "800:                                   char                         **filesystem_out,",
          "801:                                   FlatpakFilesystemMode         *mode_out,",
          "802:                                   FlatpakContextFilesystemFlags *flags_out,",
          "803:                                   GError                       **error)",
          "804: {",
          "805:   g_autofree char *filesystem = parse_filesystem_flags (filesystem_and_mode, negated, mode_out, flags_out);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "906:   FlatpakContextFilesystem *data;",
          "908:   if (flatpak_context_lookup_filesystem (context, fs, &data))",
          "911:   return FLATPAK_FILESYSTEM_MODE_NONE;",
          "912: }",
          "",
          "[Removed Lines]",
          "909:     return data->mode;",
          "",
          "[Added Lines]",
          "942:     {",
          "943:       return data->mode;",
          "944:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "927: {",
          "928:   GHashTableIter iter;",
          "929:   gpointer key, value;",
          "932:   FlatpakContextFilesystem *host, *home;",
          "934:   context->shares &= ~other->shares_valid;",
          "",
          "[Removed Lines]",
          "930:   gboolean no_home = FALSE;",
          "931:   gboolean no_host = FALSE;",
          "",
          "[Added Lines]",
          "965:   gboolean no_home_all = FALSE;",
          "966:   gboolean no_host_all = FALSE;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "957:   if (flatpak_context_lookup_filesystem (other, \"host\", &host))",
          "958:     {",
          "961:     }",
          "963:   if (flatpak_context_lookup_filesystem (other, \"home\", &home))",
          "964:     {",
          "967:     }",
          "970:     {",
          "971:       g_hash_table_remove_all (context->filesystems);",
          "972:     }",
          "974:     {",
          "975:       g_hash_table_iter_init (&iter, context->filesystems);",
          "976:       while (g_hash_table_iter_next (&iter, &key, &value))",
          "",
          "[Removed Lines]",
          "959:       if (host->mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "960:         no_host = TRUE;",
          "965:       if (home->mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "966:         no_home = TRUE;",
          "969:   if (no_host)",
          "973:   else if (no_home)",
          "",
          "[Added Lines]",
          "994:       if (host->mode == FLATPAK_FILESYSTEM_MODE_NONE &&",
          "995:           (host->flags & FLATPAK_CONTEXT_FILESYSTEM_FLAGS_ALL) != 0)",
          "996:         no_host_all = TRUE;",
          "1001:       if (home->mode == FLATPAK_FILESYSTEM_MODE_NONE &&",
          "1002:           (home->flags & FLATPAK_CONTEXT_FILESYSTEM_FLAGS_ALL) != 0)",
          "1003:         no_home_all = TRUE;",
          "1006:   if (no_host_all)",
          "1010:   else if (no_home_all)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1167:   FlatpakContext *context = data;",
          "1168:   g_autofree char *fs = NULL;",
          "1169:   FlatpakFilesystemMode mode;",
          "1172:     return FALSE;",
          "1175:   return TRUE;",
          "1176: }",
          "",
          "[Removed Lines]",
          "1171:   if (!flatpak_context_parse_filesystem (value, &fs, &mode, error))",
          "1174:   flatpak_context_take_filesystem (context, g_steal_pointer (&fs), mode, 0);",
          "",
          "[Added Lines]",
          "1207:   FlatpakContextFilesystemFlags flags;",
          "1209:   if (!flatpak_context_parse_filesystem (value, FALSE, &fs, &mode, &flags, error))",
          "1212:   flatpak_context_take_filesystem (context, g_steal_pointer (&fs), mode, flags);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1184:   FlatpakContext *context = data;",
          "1185:   g_autofree char *fs = NULL;",
          "1186:   FlatpakFilesystemMode mode;",
          "1189:     return FALSE;",
          "1191:   flatpak_context_take_filesystem (context, g_steal_pointer (&fs),",
          "1193:   return TRUE;",
          "1194: }",
          "",
          "[Removed Lines]",
          "1188:   if (!flatpak_context_parse_filesystem (value, &fs, &mode, error))",
          "1192:                                    FLATPAK_FILESYSTEM_MODE_NONE, 0);",
          "",
          "[Added Lines]",
          "1225:   FlatpakContextFilesystemFlags flags;",
          "1227:   if (!flatpak_context_parse_filesystem (value, TRUE, &fs, &mode, &flags, error))",
          "1231:                                    mode, flags);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1689:           const char *fs = parse_negated (filesystems[i], &remove);",
          "1690:           g_autofree char *filesystem = NULL;",
          "1691:           FlatpakFilesystemMode mode;",
          "1694:             g_debug (\"Unknown filesystem type %s\", filesystems[i]);",
          "1695:           else",
          "1703:         }",
          "1704:     }",
          "",
          "[Removed Lines]",
          "1693:           if (!flatpak_context_parse_filesystem (fs, &filesystem, &mode, NULL))",
          "1696:             {",
          "1697:               if (remove)",
          "1698:                 flatpak_context_take_filesystem (context, g_steal_pointer (&filesystem),",
          "1699:                                                  FLATPAK_FILESYSTEM_MODE_NONE, 0);",
          "1700:               else",
          "1701:                 flatpak_context_take_filesystem (context, g_steal_pointer (&filesystem), mode, 0);",
          "1702:             }",
          "",
          "[Added Lines]",
          "1731:           FlatpakContextFilesystemFlags flags;",
          "1733:           if (!flatpak_context_parse_filesystem (fs, remove, &filesystem, &mode, &flags, NULL))",
          "1736:             flatpak_context_take_filesystem (context, g_steal_pointer (&filesystem), mode, flags);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1949:         {",
          "1950:           FlatpakContextFilesystem *fsdata =  (FlatpakContextFilesystem *)value;",
          "1953:         }",
          "1955:       g_key_file_set_string_list (metakey,",
          "",
          "[Removed Lines]",
          "1952:           g_ptr_array_add (array, unparse_filesystem_flags (key, fsdata->mode));",
          "",
          "[Added Lines]",
          "1986:           if (flatten && fsdata->mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "1987:             continue;",
          "1989:           g_ptr_array_add (array, unparse_filesystem_flags (key, fsdata->mode, fsdata->flags));",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2175:         before but would work with an explicit access to that",
          "2178:       return TRUE;",
          "2179:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2216:         This function is mainly about application permissions, rather",
          "2217:         than layered permisions like overrides, so we don't have to",
          "2218:         care about the details of negated permissions like !home vs",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2290:       if (mode != FLATPAK_FILESYSTEM_MODE_NONE)",
          "2291:         {",
          "2293:           g_ptr_array_add (args, g_strdup_printf (\"--filesystem=%s\", fs));",
          "2294:         }",
          "2295:       else",
          "2297:     }",
          "2298: }",
          "",
          "[Removed Lines]",
          "2292:           g_autofree char *fs = unparse_filesystem_flags (key, mode);",
          "2296:         g_ptr_array_add (args, g_strdup_printf (\"--nofilesystem=%s\", (char *) key));",
          "",
          "[Added Lines]",
          "2335:           g_autofree char *fs = unparse_filesystem_flags (key, mode, 0);",
          "2339:         {",
          "2340:           const char *flags = \"\";",
          "2341:           if ((data->flags & FLATPAK_CONTEXT_FILESYSTEM_FLAGS_ALL) != 0)",
          "2342:             flags = \":all\";",
          "2344:           g_ptr_array_add (args, g_strdup_printf (\"--nofilesystem=%s%s\", (char *) key, flags));",
          "2345:         }",
          "",
          "---------------"
        ],
        "tests/test-exports.c||tests/test-exports.c": [
          "File: tests/test-exports.c -> tests/test-exports.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "607:       gboolean ret;",
          "609:       g_test_message (\"%s\", fs->input);",
          "611:                                               &error);",
          "612:       g_assert_no_error (error);",
          "613:       g_assert_true (ret);",
          "",
          "[Removed Lines]",
          "610:       ret = flatpak_context_parse_filesystem (fs->input, &normalized, &mode,",
          "",
          "[Added Lines]",
          "610:       ret = flatpak_context_parse_filesystem (fs->input, FALSE, &normalized, &mode, NULL,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "629:       gboolean ret;",
          "631:       g_test_message (\"%s\", not->input);",
          "633:                                               &error);",
          "634:       g_test_message (\"-> %s\", error ? error->message : \"(no error)\");",
          "635:       g_assert_error (error, G_OPTION_ERROR, not->code);",
          "",
          "[Removed Lines]",
          "632:       ret = flatpak_context_parse_filesystem (not->input, &normalized, &mode,",
          "",
          "[Added Lines]",
          "632:       ret = flatpak_context_parse_filesystem (not->input, FALSE, &normalized, &mode, NULL,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f0e2998728ad79352989a43c1487ffa861ba0ea9",
      "candidate_info": {
        "commit_hash": "f0e2998728ad79352989a43c1487ffa861ba0ea9",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/f0e2998728ad79352989a43c1487ffa861ba0ea9",
        "files": [
          "common/flatpak-context-private.h",
          "common/flatpak-context.c"
        ],
        "message": "FlatpakContext: Add a flags argument to the filesystem hash\n\nThis is stored in a struct, next to the FlatpakFilesystemMode. This is\nas yet unused, but the plan is to add a flag for whether a removal\nof a home permission is \"recursive\" or not.",
        "before_after_code_files": [
          "common/flatpak-context-private.h||common/flatpak-context-private.h",
          "common/flatpak-context.c||common/flatpak-context.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "common/flatpak-context.c||common/flatpak-context.c"
          ],
          "candidate": [
            "common/flatpak-context.c||common/flatpak-context.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-context-private.h||common/flatpak-context-private.h": [
          "File: common/flatpak-context-private.h -> common/flatpak-context-private.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: extern const char *flatpak_context_features[];",
          "84: extern const char *flatpak_context_shares[];",
          "86: gboolean       flatpak_context_parse_filesystem (const char             *filesystem_and_mode,",
          "87:                                                  char                  **filesystem_out,",
          "88:                                                  FlatpakFilesystemMode  *mode_out,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86: typedef enum {",
          "87:   FLATPAK_CONTEXT_FILESYSTEM_FLAGS     = 0,",
          "88: } FlatpakContextFilesystemFlags;",
          "90: typedef struct _FlatpakContextFilesystem {",
          "91:   FlatpakFilesystemMode mode;",
          "92:   FlatpakContextFilesystemFlags flags;",
          "93: } FlatpakContextFilesystem;",
          "95: FlatpakContextFilesystem *flatpak_context_filesystem_dup (FlatpakContextFilesystem *data);",
          "",
          "---------------"
        ],
        "common/flatpak-context.c||common/flatpak-context.c": [
          "File: common/flatpak-context.c -> common/flatpak-context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:   NULL",
          "91: };",
          "93: FlatpakContext *",
          "94: flatpak_context_new (void)",
          "95: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93: FlatpakContextFilesystem *",
          "94: flatpak_context_filesystem_dup (FlatpakContextFilesystem *data)",
          "95: {",
          "96:   return g_memdup (data, sizeof (FlatpakContextFilesystem));",
          "97: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:   context = g_slice_new0 (FlatpakContext);",
          "99:   context->env_vars = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_free);",
          "100:   context->persistent = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);",
          "103:   context->session_bus_policy = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);",
          "104:   context->system_bus_policy = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);",
          "105:   context->generic_policy = g_hash_table_new_full (g_str_hash, g_str_equal,",
          "",
          "[Removed Lines]",
          "102:   context->filesystems = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);",
          "",
          "[Added Lines]",
          "108:   context->filesystems = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, g_free);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "877:   return TRUE;",
          "878: }",
          "880: static void",
          "881: flatpak_context_take_filesystem (FlatpakContext        *context,",
          "882:                                  char                  *fs,",
          "884: {",
          "886: }",
          "888: void",
          "",
          "[Removed Lines]",
          "883:                                  FlatpakFilesystemMode  mode)",
          "885:   g_hash_table_insert (context->filesystems, fs, GINT_TO_POINTER (mode));",
          "",
          "[Added Lines]",
          "886: static gboolean",
          "887: flatpak_context_lookup_filesystem (FlatpakContext *context,",
          "888:                                    const char     *fs,",
          "889:                                    FlatpakContextFilesystem **out)",
          "890: {",
          "891:   gpointer value;",
          "892:   if (g_hash_table_lookup_extended (context->filesystems, fs, NULL, &value))",
          "893:     {",
          "895:       return TRUE;",
          "896:     }",
          "899:   return FALSE;",
          "900: }",
          "902: static FlatpakFilesystemMode",
          "903: flatpak_context_lookup_filesystem_mode (FlatpakContext *context,",
          "904:                                         const char     *fs)",
          "905: {",
          "906:   FlatpakContextFilesystem *data;",
          "908:   if (flatpak_context_lookup_filesystem (context, fs, &data))",
          "909:     return data->mode;",
          "911:   return FLATPAK_FILESYSTEM_MODE_NONE;",
          "912: }",
          "917:                                  FlatpakFilesystemMode  mode,",
          "918:                                  FlatpakContextFilesystemFlags flags)",
          "920:   FlatpakContextFilesystem data = { mode, flags };",
          "921:   g_hash_table_insert (context->filesystems, fs, flatpak_context_filesystem_dup (&data));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "893:   gpointer key, value;",
          "894:   gboolean no_home = FALSE;",
          "895:   gboolean no_host = FALSE;",
          "897:   context->shares &= ~other->shares_valid;",
          "898:   context->shares |= other->shares;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "932:   FlatpakContextFilesystem *host, *home;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "923:     {",
          "926:         no_host = TRUE;",
          "927:     }",
          "932:     {",
          "935:         no_home = TRUE;",
          "936:     }",
          "",
          "[Removed Lines]",
          "920:   if (g_hash_table_lookup_extended (other->filesystems,",
          "921:                                     \"host\",",
          "922:                                     NULL, &value))",
          "924:       FlatpakFilesystemMode host_mode = GPOINTER_TO_INT (value);",
          "925:       if (host_mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "929:   if (g_hash_table_lookup_extended (other->filesystems,",
          "930:                                     \"home\",",
          "931:                                     NULL, &value))",
          "933:       FlatpakFilesystemMode home_mode = GPOINTER_TO_INT (value);",
          "934:       if (home_mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "",
          "[Added Lines]",
          "957:   if (flatpak_context_lookup_filesystem (other, \"host\", &host))",
          "959:       if (host->mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "963:   if (flatpak_context_lookup_filesystem (other, \"home\", &home))",
          "965:       if (home->mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "953:   g_hash_table_iter_init (&iter, other->filesystems);",
          "954:   while (g_hash_table_iter_next (&iter, &key, &value))",
          "957:   g_hash_table_iter_init (&iter, other->session_bus_policy);",
          "958:   while (g_hash_table_iter_next (&iter, &key, &value))",
          "",
          "[Removed Lines]",
          "955:     g_hash_table_insert (context->filesystems, g_strdup (key), value);",
          "",
          "[Added Lines]",
          "986:     g_hash_table_insert (context->filesystems, g_strdup (key), flatpak_context_filesystem_dup (value));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1140:   if (!flatpak_context_parse_filesystem (value, &fs, &mode, error))",
          "1141:     return FALSE;",
          "1144:   return TRUE;",
          "1145: }",
          "",
          "[Removed Lines]",
          "1143:   flatpak_context_take_filesystem (context, g_steal_pointer (&fs), mode);",
          "",
          "[Added Lines]",
          "1174:   flatpak_context_take_filesystem (context, g_steal_pointer (&fs), mode, 0);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1158:     return FALSE;",
          "1160:   flatpak_context_take_filesystem (context, g_steal_pointer (&fs),",
          "1162:   return TRUE;",
          "1163: }",
          "",
          "[Removed Lines]",
          "1161:                                    FLATPAK_FILESYSTEM_MODE_NONE);",
          "",
          "[Added Lines]",
          "1192:                                    FLATPAK_FILESYSTEM_MODE_NONE, 0);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1665:             {",
          "1666:               if (remove)",
          "1667:                 flatpak_context_take_filesystem (context, g_steal_pointer (&filesystem),",
          "1669:               else",
          "1671:             }",
          "1672:         }",
          "1673:     }",
          "",
          "[Removed Lines]",
          "1668:                                                  FLATPAK_FILESYSTEM_MODE_NONE);",
          "1670:                 flatpak_context_take_filesystem (context, g_steal_pointer (&filesystem), mode);",
          "",
          "[Added Lines]",
          "1699:                                                  FLATPAK_FILESYSTEM_MODE_NONE, 0);",
          "1701:                 flatpak_context_take_filesystem (context, g_steal_pointer (&filesystem), mode, 0);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1916:       g_hash_table_iter_init (&iter, context->filesystems);",
          "1917:       while (g_hash_table_iter_next (&iter, &key, &value))",
          "1918:         {",
          "1922:         }",
          "1924:       g_key_file_set_string_list (metakey,",
          "",
          "[Removed Lines]",
          "1919:           FlatpakFilesystemMode mode = GPOINTER_TO_INT (value);",
          "1921:           g_ptr_array_add (array, unparse_filesystem_flags (key, mode));",
          "",
          "[Added Lines]",
          "1950:           FlatpakContextFilesystem *fsdata =  (FlatpakContextFilesystem *)value;",
          "1952:           g_ptr_array_add (array, unparse_filesystem_flags (key, fsdata->mode));",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2056: void",
          "2057: flatpak_context_allow_host_fs (FlatpakContext *context)",
          "2058: {",
          "2060: }",
          "2062: gboolean",
          "",
          "[Removed Lines]",
          "2059:   flatpak_context_take_filesystem (context, g_strdup (\"host\"), FLATPAK_FILESYSTEM_MODE_READ_WRITE);",
          "",
          "[Added Lines]",
          "2090:   flatpak_context_take_filesystem (context, g_strdup (\"host\"), FLATPAK_FILESYSTEM_MODE_READ_WRITE, 0);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2120: static gboolean",
          "2121: adds_filesystem_access (GHashTable *old, GHashTable *new)",
          "2122: {",
          "2126:     {",
          "2131:       if (new_mode <= old_mode)",
          "",
          "[Removed Lines]",
          "2123:   FlatpakFilesystemMode old_host_mode = GPOINTER_TO_INT (g_hash_table_lookup (old, \"host\"));",
          "2125:   GLNX_HASH_TABLE_FOREACH_KV (new, const char *, location, gpointer, _new_mode)",
          "2127:       FlatpakFilesystemMode new_mode = GPOINTER_TO_INT (_new_mode);",
          "2128:       FlatpakFilesystemMode old_mode = GPOINTER_TO_INT (g_hash_table_lookup (old, location));",
          "",
          "[Added Lines]",
          "2154:   FlatpakContextFilesystem *old_host_data = (FlatpakContextFilesystem *)g_hash_table_lookup (old, \"host\");",
          "2155:   FlatpakFilesystemMode old_host_mode = old_host_data != NULL ? old_host_data->mode : FLATPAK_FILESYSTEM_MODE_NONE;",
          "2157:   GLNX_HASH_TABLE_FOREACH_KV (new, const char *, location, gpointer, _new_data)",
          "2159:       FlatpakContextFilesystem *new_data = (FlatpakContextFilesystem *)_new_data;",
          "2160:       FlatpakContextFilesystem *old_data = (FlatpakContextFilesystem *)g_hash_table_lookup (old, location);",
          "2161:       FlatpakFilesystemMode new_mode = new_data->mode;",
          "2162:       FlatpakFilesystemMode old_mode = old_data != NULL ? old_data->mode : FLATPAK_FILESYSTEM_MODE_NONE;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2250:   g_hash_table_iter_init (&iter, context->filesystems);",
          "2251:   while (g_hash_table_iter_next (&iter, &key, &value))",
          "2252:     {",
          "2255:       if (mode != FLATPAK_FILESYSTEM_MODE_NONE)",
          "2256:         {",
          "",
          "[Removed Lines]",
          "2253:       FlatpakFilesystemMode mode = GPOINTER_TO_INT (value);",
          "",
          "[Added Lines]",
          "2287:       FlatpakContextFilesystem *data = (FlatpakContextFilesystem *)value;",
          "2288:       FlatpakFilesystemMode mode = data->mode;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2374:   if (xdg_dirs_conf_out != NULL)",
          "2375:     xdg_dirs_conf = g_string_new (\"\");",
          "2378:   if (fs_mode != FLATPAK_FILESYSTEM_MODE_NONE)",
          "2379:     {",
          "2380:       DIR *dir;",
          "",
          "[Removed Lines]",
          "2377:   fs_mode = GPOINTER_TO_INT (g_hash_table_lookup (context->filesystems, \"host\"));",
          "",
          "[Added Lines]",
          "2412:   fs_mode = flatpak_context_lookup_filesystem_mode (context, \"host\");",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2402:       flatpak_exports_add_path_expose (exports, fs_mode, \"/run/media\");",
          "2403:     }",
          "2408:   if (os_mode != FLATPAK_FILESYSTEM_MODE_NONE)",
          "2409:     flatpak_exports_add_host_os_expose (exports, os_mode);",
          "2414:   if (etc_mode != FLATPAK_FILESYSTEM_MODE_NONE)",
          "2415:     flatpak_exports_add_host_etc_expose (exports, etc_mode);",
          "2418:   if (home_mode != FLATPAK_FILESYSTEM_MODE_NONE)",
          "2419:     {",
          "2420:       g_debug (\"Allowing homedir access\");",
          "",
          "[Removed Lines]",
          "2405:   os_mode = MAX (GPOINTER_TO_INT (g_hash_table_lookup (context->filesystems, \"host-os\")),",
          "2406:                    fs_mode);",
          "2411:   etc_mode = MAX (GPOINTER_TO_INT (g_hash_table_lookup (context->filesystems, \"host-etc\")),",
          "2412:                    fs_mode);",
          "2417:   home_mode = GPOINTER_TO_INT (g_hash_table_lookup (context->filesystems, \"home\"));",
          "",
          "[Added Lines]",
          "2440:   os_mode = MAX (flatpak_context_lookup_filesystem_mode (context, \"host-os\"),",
          "2441:                  fs_mode);",
          "2446:   etc_mode = MAX (flatpak_context_lookup_filesystem_mode (context, \"host-etc\"),",
          "2447:                   fs_mode);",
          "2452:   home_mode = flatpak_context_lookup_filesystem_mode (context, \"home\");",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2427:   while (g_hash_table_iter_next (&iter, &key, &value))",
          "2428:     {",
          "2429:       const char *filesystem = key;",
          "2432:       if (g_strv_contains (flatpak_context_special_filesystems, filesystem))",
          "2433:         continue;",
          "",
          "[Removed Lines]",
          "2430:       FlatpakFilesystemMode mode = GPOINTER_TO_INT (value);",
          "",
          "[Added Lines]",
          "2465:       FlatpakContextFilesystem *data = value;",
          "2466:       FlatpakFilesystemMode mode = data->mode;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2655:       while (g_hash_table_iter_next (&iter, &key, &value))",
          "2656:         {",
          "2657:           const char *filesystem = key;",
          "2659:           g_autofree char *xdg_path = NULL;",
          "2660:           const char *rest, *where;",
          "",
          "[Removed Lines]",
          "2658:           FlatpakFilesystemMode mode = GPOINTER_TO_INT (value);",
          "",
          "[Added Lines]",
          "2694:           FlatpakContextFilesystem *data = value;",
          "2695:           FlatpakFilesystemMode mode = data->mode;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "307ee18dd62f65c1319594501d01bbdb10f88ab8",
      "candidate_info": {
        "commit_hash": "307ee18dd62f65c1319594501d01bbdb10f88ab8",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/307ee18dd62f65c1319594501d01bbdb10f88ab8",
        "files": [
          "common/flatpak-context.c"
        ],
        "message": "Make --nofilesystem=host/home remove access to subdirs of those\n\nPreviously --nofilesystem=host only removed specifically access to the\n`host` permissions, and not necessarily other filesystems (like `home`\nor `/some/path`). This isn't very useful to limit access because you\ndon't know what other filesystems the app may have access too.\n\nWe change this to mean that `--nofilesystem=host` removes *all* filesystem\naccess from the parent layer, and `--nofilesystem=home` removes all\nfile access to the homedir and paths inside it.\n\nThe available layers are, in order:\n\n * app permissions\n * overrides\n * commandline args\n\nThis allows you to start from scratch with the filesystem permissions\nin the overrides or the commandline. This is a small change in\nbehaviour, but not a lot of things use --nofilesystem, and the ones\nthat do probably expects this behaviour.\n\n(cherry picked from commit e2c8863fb62301cb05c64bbb32b04446e88ce11a)",
        "before_after_code_files": [
          "common/flatpak-context.c||common/flatpak-context.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "common/flatpak-context.c||common/flatpak-context.c"
          ],
          "candidate": [
            "common/flatpak-context.c||common/flatpak-context.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-context.c||common/flatpak-context.c": [
          "File: common/flatpak-context.c -> common/flatpak-context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "851:   return FALSE;",
          "852: }",
          "854: static void",
          "855: flatpak_context_take_filesystem (FlatpakContext        *context,",
          "856:                                  char                  *fs,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "855: static gboolean",
          "856: flatpak_filesystem_key_in_home (const char *filesystem)",
          "857: {",
          "859:   if (strcmp (filesystem, \"home\") == 0)",
          "860:     return TRUE;",
          "865:   if (g_strv_contains (flatpak_context_special_filesystems, filesystem) ||",
          "866:       g_str_has_prefix (filesystem, \"/\"))",
          "867:     return FALSE;",
          "870:   if (g_str_has_prefix (filesystem, \"xdg-run\"))",
          "871:     return FALSE;",
          "876:   return TRUE;",
          "877: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "865: {",
          "866:   GHashTableIter iter;",
          "867:   gpointer key, value;",
          "869:   context->shares &= ~other->shares_valid;",
          "870:   context->shares |= other->shares;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "893:   gboolean no_home = FALSE;",
          "894:   gboolean no_host = FALSE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "887:   while (g_hash_table_iter_next (&iter, &key, &value))",
          "888:     g_hash_table_insert (context->persistent, g_strdup (key), value);",
          "890:   g_hash_table_iter_init (&iter, other->filesystems);",
          "891:   while (g_hash_table_iter_next (&iter, &key, &value))",
          "892:     g_hash_table_insert (context->filesystems, g_strdup (key), value);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "919:   if (g_hash_table_lookup_extended (other->filesystems,",
          "920:                                     \"host\",",
          "921:                                     NULL, &value))",
          "922:     {",
          "923:       FlatpakFilesystemMode host_mode = GPOINTER_TO_INT (value);",
          "924:       if (host_mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "925:         no_host = TRUE;",
          "926:     }",
          "928:   if (g_hash_table_lookup_extended (other->filesystems,",
          "929:                                     \"home\",",
          "930:                                     NULL, &value))",
          "931:     {",
          "932:       FlatpakFilesystemMode home_mode = GPOINTER_TO_INT (value);",
          "933:       if (home_mode == FLATPAK_FILESYSTEM_MODE_NONE)",
          "934:         no_home = TRUE;",
          "935:     }",
          "937:   if (no_host)",
          "938:     {",
          "939:       g_hash_table_remove_all (context->filesystems);",
          "940:     }",
          "941:   else if (no_home)",
          "942:     {",
          "943:       g_hash_table_iter_init (&iter, context->filesystems);",
          "944:       while (g_hash_table_iter_next (&iter, &key, &value))",
          "945:         {",
          "946:           if (flatpak_filesystem_key_in_home ((const char *)key))",
          "947:             g_hash_table_iter_remove (&iter);",
          "948:         }",
          "949:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}