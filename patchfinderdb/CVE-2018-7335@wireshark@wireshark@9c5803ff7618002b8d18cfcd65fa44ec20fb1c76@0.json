{
  "cve_id": "CVE-2018-7335",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.4 and 2.2.0 to 2.2.12, the IEEE 802.11 dissector could crash. This was addressed in epan/crypt/airpdcap.c by rejecting lengths that are too small.",
  "repo": "wireshark/wireshark",
  "patch_hash": "9c5803ff7618002b8d18cfcd65fa44ec20fb1c76",
  "patch_info": {
    "commit_hash": "9c5803ff7618002b8d18cfcd65fa44ec20fb1c76",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/9c5803ff7618002b8d18cfcd65fa44ec20fb1c76",
    "files": [
      "epan/crypt/airpdcap.c"
    ],
    "message": "Airpdcap: Add length checks.\n\nMake sure we don't underflow length values.\n\nBug: 14442\nChange-Id: I71baac428ba3b07fe4cd5a7f60fbe2a957ac460e\nReviewed-on: https://code.wireshark.org/review/25937\nReviewed-by: Gerald Combs <gerald@wireshark.org>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
    ]
  },
  "patch_diff": {
    "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
      "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "444:         }",
      "446:         if (key_found){",
      "447:             key_length = decrypted_data[key_index+1] - 6;",
      "449:             if (key_index+8 >= key_bytes_len ||",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "447:             if (decrypted_data[key_index+1] <= 6) {",
      "448:                 g_free(decrypted_data);",
      "449:                 g_free(szEncryptedKey);",
      "450:                 return AIRPDCAP_RET_NO_VALID_HANDSHAKE;",
      "451:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2202:     guint8 zeros[16] = { 0 };",
      "2203:     gcry_mac_hd_t cmac_handle;",
      "2204:     size_t cmac_len = 16;",
      "2205: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2210:     size_t cmac_write_len;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2263:     gcry_mac_write(cmac_handle, &data[offset_timeout], data[offset_timeout + 1] + 2);",
      "2264:     gcry_mac_write(cmac_handle, &data[offset_fte], 4);",
      "2265:     gcry_mac_write(cmac_handle, zeros, 16);",
      "2267:     if (gcry_mac_read(cmac_handle, mic, &cmac_len) != GPG_ERR_NO_ERROR) {",
      "2268:         AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapTDLSDeriveKey\", \"MAC read error\", AIRPDCAP_DEBUG_LEVEL_3);",
      "2269:         gcry_mac_close(cmac_handle);",
      "",
      "[Removed Lines]",
      "2266:     gcry_mac_write(cmac_handle, &data[offset_fte + 20], data[offset_fte + 1] + 2 - 20);",
      "",
      "[Added Lines]",
      "2272:     cmac_write_len = data[offset_fte + 1] + 2;",
      "2273:     if (cmac_write_len < 20) {",
      "2274:         AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapTDLSDeriveKey\", \"Bad MAC len\", AIRPDCAP_DEBUG_LEVEL_3);",
      "2275:         gcry_mac_close(cmac_handle);",
      "2276:         return AIRPDCAP_RET_UNSUCCESS;",
      "2277:     }",
      "2278:     gcry_mac_write(cmac_handle, &data[offset_fte + 20], cmac_write_len - 20);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "569fb1e21dbb645ab6038db818e7a419028b828d",
      "candidate_info": {
        "commit_hash": "569fb1e21dbb645ab6038db818e7a419028b828d",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/569fb1e21dbb645ab6038db818e7a419028b828d",
        "files": [
          "epan/crypt/airpdcap.c"
        ],
        "message": "Airpdcap: Add length checks.\n\nMake sure we don't underflow length values.\n\nConflicts:\n\tepan/crypt/airpdcap.c\n\nBug: 14442\nChange-Id: I71baac428ba3b07fe4cd5a7f60fbe2a957ac460e\n(cherry picked from commit d6d391c4a4526d7c00765230c427c0472f0a4089)\nReviewed-on: https://code.wireshark.org/review/25939\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>",
        "before_after_code_files": [
          "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
          ],
          "candidate": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
          "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "444:         }",
          "446:         if (key_found){",
          "447:             key_length = decrypted_data[key_index+1] - 6;",
          "449:             if (key_index+8 >= key_bytes_len ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "447:             if (decrypted_data[key_index+1] <= 6) {",
          "448:                 g_free(decrypted_data);",
          "449:                 g_free(szEncryptedKey);",
          "450:                 return AIRPDCAP_RET_NO_VALID_HANDSHAKE;",
          "451:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2203:     guint8 zeros[16] = { 0 };",
          "2204:     gcry_mac_hd_t cmac_handle;",
          "2205:     size_t cmac_len = 16;",
          "2206: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2211:     size_t cmac_write_len;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2264:     gcry_mac_write(cmac_handle, &data[offset_timeout], data[offset_timeout + 1] + 2);",
          "2265:     gcry_mac_write(cmac_handle, &data[offset_fte], 4);",
          "2266:     gcry_mac_write(cmac_handle, zeros, 16);",
          "2268:     gcry_mac_read(cmac_handle, mic, &cmac_len);",
          "2269:     if (memcmp(mic, &data[offset_fte + 4], 16)) {",
          "2270:         AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapTDLSDeriveKey\", \"MIC verification failed\", AIRPDCAP_DEBUG_LEVEL_3);",
          "",
          "[Removed Lines]",
          "2267:     gcry_mac_write(cmac_handle, &data[offset_fte + 20], data[offset_fte + 1] + 2 - 20);",
          "",
          "[Added Lines]",
          "2273:     cmac_write_len = data[offset_fte + 1] + 2;",
          "2274:     if (cmac_write_len < 20) {",
          "2275:         AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapTDLSDeriveKey\", \"Bad MAC len\", AIRPDCAP_DEBUG_LEVEL_3);",
          "2276:         gcry_mac_close(cmac_handle);",
          "2277:         return AIRPDCAP_RET_UNSUCCESS;",
          "2278:     }",
          "2279:     gcry_mac_write(cmac_handle, &data[offset_fte + 20], cmac_write_len - 20);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2901dcf45c9f1b07abfbf2a0b0cd654371d72a4",
      "candidate_info": {
        "commit_hash": "a2901dcf45c9f1b07abfbf2a0b0cd654371d72a4",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/a2901dcf45c9f1b07abfbf2a0b0cd654371d72a4",
        "files": [
          "epan/crypt/airpdcap.c"
        ],
        "message": "Airpdcap: Add length checks.\n\nMake sure we don't underflow length values.\n\nConflicts:\n\tepan/crypt/airpdcap.c\n\nBug: 14442\nChange-Id: I71baac428ba3b07fe4cd5a7f60fbe2a957ac460e\n(cherry picked from commit d6d391c4a4526d7c00765230c427c0472f0a4089)\nReviewed-on: https://code.wireshark.org/review/25976\nReviewed-by: Gerald Combs <gerald@wireshark.org>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
          ],
          "candidate": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
          "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "441:         }",
          "443:         if (key_found){",
          "444:             key_length = decrypted_data[key_index+1] - 6;",
          "446:             if (key_index+8 >= key_bytes_len ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "444:             if (decrypted_data[key_index+1] <= 6) {",
          "445:                 g_free(decrypted_data);",
          "446:                 g_free(szEncryptedKey);",
          "447:                 return AIRPDCAP_RET_NO_VALID_HANDSHAKE;",
          "448:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2176:     const guint8 *snonce, *anonce, *initiator, *responder, *bssid;",
          "2177:     guint8 key_input[SHA256_DIGEST_LEN];",
          "2178:     guint8 mic[16], iter[2], length[2], seq_num = action + 1;",
          "2181:     anonce = &data[offset_fte + 20];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2184:     guint cmac_write_len;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2223:     aes_cmac_encrypt_update(&aes_ctx, &data[offset_fte], 4);",
          "2224:     memset(mic, 0, 16);",
          "2225:     aes_cmac_encrypt_update(&aes_ctx, mic, 16);",
          "2227:     aes_cmac_encrypt_finish(&aes_ctx, mic);",
          "2229:     if (memcmp(mic, &data[offset_fte + 4],16)) {",
          "",
          "[Removed Lines]",
          "2226:     aes_cmac_encrypt_update(&aes_ctx, &data[offset_fte + 20], data[offset_fte + 1] + 2 - 20);",
          "",
          "[Added Lines]",
          "2232:     cmac_write_len = data[offset_fte + 1] + 2;",
          "2233:     if (cmac_write_len < 20) {",
          "2234:         AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapTDLSDeriveKey\", \"Bad MAC len\", AIRPDCAP_DEBUG_LEVEL_3);",
          "2235:         return AIRPDCAP_RET_UNSUCCESS;",
          "2236:     }",
          "2237:     aes_cmac_encrypt_update(&aes_ctx, &data[offset_fte + 20], cmac_write_len - 20);",
          "",
          "---------------"
        ]
      }
    }
  ]
}