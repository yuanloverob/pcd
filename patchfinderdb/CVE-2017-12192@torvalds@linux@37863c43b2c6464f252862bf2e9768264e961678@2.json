{
  "cve_id": "CVE-2017-12192",
  "cve_desc": "The keyctl_read_key function in security/keys/keyctl.c in the Key Management subcomponent in the Linux kernel before 4.13.5 does not properly consider that a key may be possessed but negatively instantiated, which allows local users to cause a denial of service (OOPS and system crash) via a crafted KEYCTL_READ operation.",
  "repo": "torvalds/linux",
  "patch_hash": "37863c43b2c6464f252862bf2e9768264e961678",
  "patch_info": {
    "commit_hash": "37863c43b2c6464f252862bf2e9768264e961678",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/37863c43b2c6464f252862bf2e9768264e961678",
    "files": [
      "security/keys/keyctl.c"
    ],
    "message": "KEYS: prevent KEYCTL_READ on negative key\n\nBecause keyctl_read_key() looks up the key with no permissions\nrequested, it may find a negatively instantiated key.  If the key is\nalso possessed, we went ahead and called ->read() on the key.  But the\nkey payload will actually contain the ->reject_error rather than the\nnormal payload.  Thus, the kernel oopses trying to read the\nuser_key_payload from memory address (int)-ENOKEY = 0x00000000ffffff82.\n\nFortunately the payload data is stored inline, so it shouldn't be\npossible to abuse this as an arbitrary memory read primitive...\n\nReproducer:\n    keyctl new_session\n    keyctl request2 user desc '' @s\n    keyctl read $(keyctl show | awk '/user: desc/ {print $1}')\n\nIt causes a crash like the following:\n     BUG: unable to handle kernel paging request at 00000000ffffff92\n     IP: user_read+0x33/0xa0\n     PGD 36a54067 P4D 36a54067 PUD 0\n     Oops: 0000 [#1] SMP\n     CPU: 0 PID: 211 Comm: keyctl Not tainted 4.14.0-rc1 #337\n     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-20170228_101828-anatol 04/01/2014\n     task: ffff90aa3b74c3c0 task.stack: ffff9878c0478000\n     RIP: 0010:user_read+0x33/0xa0\n     RSP: 0018:ffff9878c047bee8 EFLAGS: 00010246\n     RAX: 0000000000000001 RBX: ffff90aa3d7da340 RCX: 0000000000000017\n     RDX: 0000000000000000 RSI: 00000000ffffff82 RDI: ffff90aa3d7da340\n     RBP: ffff9878c047bf00 R08: 00000024f95da94f R09: 0000000000000000\n     R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\n     R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n     FS:  00007f58ece69740(0000) GS:ffff90aa3e200000(0000) knlGS:0000000000000000\n     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n     CR2: 00000000ffffff92 CR3: 0000000036adc001 CR4: 00000000003606f0\n     Call Trace:\n      keyctl_read_key+0xac/0xe0\n      SyS_keyctl+0x99/0x120\n      entry_SYSCALL_64_fastpath+0x1f/0xbe\n     RIP: 0033:0x7f58ec787bb9\n     RSP: 002b:00007ffc8d401678 EFLAGS: 00000206 ORIG_RAX: 00000000000000fa\n     RAX: ffffffffffffffda RBX: 00007ffc8d402800 RCX: 00007f58ec787bb9\n     RDX: 0000000000000000 RSI: 00000000174a63ac RDI: 000000000000000b\n     RBP: 0000000000000004 R08: 00007ffc8d402809 R09: 0000000000000020\n     R10: 0000000000000000 R11: 0000000000000206 R12: 00007ffc8d402800\n     R13: 00007ffc8d4016e0 R14: 0000000000000000 R15: 0000000000000000\n     Code: e5 41 55 49 89 f5 41 54 49 89 d4 53 48 89 fb e8 a4 b4 ad ff 85 c0 74 09 80 3d b9 4c 96 00 00 74 43 48 8b b3 20 01 00 00 4d 85 ed <0f> b7 5e 10 74 29 4d 85 e4 74 24 4c 39 e3 4c 89 e2 4c 89 ef 48\n     RIP: user_read+0x33/0xa0 RSP: ffff9878c047bee8\n     CR2: 00000000ffffff92\n\nFixes: 61ea0c0ba904 (\"KEYS: Skip key state checks when checking for possession\")\nCc: <stable@vger.kernel.org>\t[v3.13+]\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: David Howells <dhowells@redhat.com>",
    "before_after_code_files": [
      "security/keys/keyctl.c||security/keys/keyctl.c"
    ]
  },
  "patch_diff": {
    "security/keys/keyctl.c||security/keys/keyctl.c": [
      "File: security/keys/keyctl.c -> security/keys/keyctl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "767:  key = key_ref_to_ptr(key_ref);",
      "770:  ret = key_permission(key_ref, KEY_NEED_READ);",
      "771:  if (ret == 0)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "769:  if (test_bit(KEY_FLAG_NEGATIVE, &key->flags)) {",
      "770:   ret = -ENOKEY;",
      "771:   goto error2;",
      "772:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5fc90b632ea9a107ed6b71eb7058bb58e1b5493b",
      "candidate_info": {
        "commit_hash": "5fc90b632ea9a107ed6b71eb7058bb58e1b5493b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/5fc90b632ea9a107ed6b71eb7058bb58e1b5493b",
        "files": [
          "drivers/staging/media/atomisp/include/asm/intel_mid_pcihelpers.h",
          "drivers/staging/media/atomisp/platform/intel-mid/intel_mid_pcihelpers.c"
        ],
        "message": "media: staging: atomisp: Remove dead code for MID (#1)\n\nRemove dead code. If someone needs it the P-Unit semaphore is handled by\nI2C DesignWare driver (drivers/i2c/busses/i2c-designware-baytrail.c).\n\nSigned-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>\nSigned-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
        "before_after_code_files": [
          "drivers/staging/mediatomisp/include/asm/intel_mid_pcihelpers.h||drivers/staging/media/atomisp/include/asm/intel_mid_pcihelpers.h",
          "drivers/staging/mediatomisp/platform/intel-mid/intel_mid_pcihelpers.c||drivers/staging/media/atomisp/platform/intel-mid/intel_mid_pcihelpers.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/staging/mediatomisp/include/asm/intel_mid_pcihelpers.h||drivers/staging/media/atomisp/include/asm/intel_mid_pcihelpers.h": [
          "File: drivers/staging/mediatomisp/include/asm/intel_mid_pcihelpers.h -> drivers/staging/media/atomisp/include/asm/intel_mid_pcihelpers.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/staging/mediatomisp/platform/intel-mid/intel_mid_pcihelpers.c||drivers/staging/media/atomisp/platform/intel-mid/intel_mid_pcihelpers.c": [
          "File: drivers/staging/mediatomisp/platform/intel-mid/intel_mid_pcihelpers.c -> drivers/staging/media/atomisp/platform/intel-mid/intel_mid_pcihelpers.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "47fb3c1610b28dd435b892762280eebf04fe9adf",
      "candidate_info": {
        "commit_hash": "47fb3c1610b28dd435b892762280eebf04fe9adf",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/47fb3c1610b28dd435b892762280eebf04fe9adf",
        "files": [
          "drivers/infiniband/hw/i40iw/i40iw.h",
          "drivers/infiniband/hw/i40iw/i40iw_main.c",
          "drivers/infiniband/hw/i40iw/i40iw_utils.c"
        ],
        "message": "i40iw: Prevent multiple netdev event notifier registrations\n\nNetdev event notifier registration/de-registration is not\nsynchronized with a lock and there is a possibility of a\nduplicate registration of notifier before the unregister\ncompletes.\n\nRegister netdev event notifiers during module init and\nde-register them at module exit.\n\nThis avoids the need to tie the registration to first netdev\nclient interface open and de-registration to last client\ninterface close and the synchronization to achieve it.\n\nThis also fixes a crash due to duplicate registration.\n\nBUG: unable to handle kernel paging request at ffffffffa0d60388\nIP: [<ffffffff8160f75d>] notifier_call_chain+0x3d/0x70\nPGD 190d067 PUD 190e063 PMD 76c840067 PTE 0\nOops: 0000 [#1] SMP\nModules linked in: i40e(OF-) fuse btrfs zlib_deflate raid6_pq xor vfat msdos\n[..]\ne1000e vxlan ip_tunnel ptp pps_core i2c_core video [last unloaded: i40iw]\nCPU: 1 PID: 27101 Comm: modprobe Tainted: GF       W  O--------------   3.10.0-229.el7.x86_64 #1\nHardware name: Gigabyte Technology Co., Ltd. To be filled by O.E.M./Q87M-D2H, BIOS F7 01/17/2014\ntask: ffff88076e8a96c0 ti: ffff8806959c8000 task.ti: ffff8806959c8000\nRIP: 0010:[<ffffffff8160f75d>]  [<ffffffff8160f75d>] notifier_call_chain+0x3d/0x70\nRSP: 0018:ffff8806959cbb38  EFLAGS: 00010282\nRAX: ffffffffa0d60380 RBX: 00000000fffffffd RCX: 0000000000000000\n0708] RDX: 0000000000000000 RSI: ffff88081227a000 RDI: 0000000000000002\nRBP: ffff8806959cbb60 R08: 0000000000000246 R09: 000000000000700c\nR10: ffff88080e16ea40 R11: 00000000000ae8df R12: ffffffffa0d60380\nR13: 0000000000000002 R14: ffff88076e738800 R15: 0000000000000000\nFS:  00007f604ef4a740(0000) GS:ffff88083e240000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffffffa0d60388 CR3: 0000000753cd2000 CR4: 00000000001407e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\nStack:\nffffffff819e73a0 0000000000000000 0000000000000002 ffff88076e738800\n00000000ffffffff ffff8806959cbba0 ffffffff8109d61d 0000000000000000\n0000000000000000 ffff88076e738800 0000000000000000 ffff88076e738800\nCall Trace:\n[<ffffffff8109d61d>] __blocking_notifier_call_chain+0x4d/0x70\n[<ffffffff8109d656>] blocking_notifier_call_chain+0x16/0x20\n[<ffffffff8156b9e4>] __inet_del_ifa+0x154/0x2b0\n[<ffffffff8156d102>] inetdev_event+0x182/0x530\n[<ffffffff8160f76c>] notifier_call_chain+0x4c/0x70\n[<ffffffff8109d446>] raw_notifier_call_chain+0x16/0x20\n[<ffffffff814f71fd>] call_netdevice_notifiers+0x2d/0x60\n[<ffffffff814f8845>] rollback_registered_many+0x105/0x220\n[<ffffffff814f89a0>] rollback_registered+0x40/0x70\n[<ffffffff814f9c88>] unregister_netdevice_queue+0x48/0x80\n[<ffffffff814f9cdc>] unregister_netdev+0x1c/0x30\n[<ffffffffa0067139>] i40e_vsi_release+0x2a9/0x2b0 [i40e]\n[<ffffffffa00674e8>] i40e_remove+0x128/0x2b0 [i40e]\n[<ffffffff813092db>] pci_device_remove+0x3b/0xb0\n[<ffffffff813d26ef>] __device_release_driver+0x7f/0xf0\n[<ffffffff813d3068>] driver_detach+0xb8/0xc0\n[<ffffffff813d22db>] bus_remove_driver+0x9b/0x120\n[<ffffffff813d36dc>] driver_unregister+0x2c/0x50\n[<ffffffff81307d4c>] pci_unregister_driver+0x2c/0x90\n[<ffffffffa008f9d0>] i40e_exit_module+0x10/0x23 [i40e]\n[<ffffffff810dad0b>] SyS_delete_module+0x16b/0x2d0\n[<ffffffff81013b0c>] ? do_notify_resume+0x9c/0xb0\n[<ffffffff81613da9>] system_call_fastpath+0x16/0x1b\nCode: e5 41 57 4d 89 c7 41 56 49 89 d6 41 55 49 89 f5 41 54 53 89 cb\n75 14 eb 3d 0f 1f 44 00 00 83 eb 01 74 25 4d 85 e4 74 20 4c 89 e0 <4c>\n8b 60 08 4c 89 f2 4c 89 ee 48 89 c7 ff 10 4d 85 ff 74 04 41\nRIP  [<ffffffff8160f75d>] notifier_call_chain+0x3d/0x70\n\nSigned-off-by: Shiraz Saleem <shiraz.saleem@intel.com>\nSigned-off-by: Doug Ledford <dledford@redhat.com>",
        "before_after_code_files": [
          "drivers/infiniband/hw/i40iw/i40iw.h||drivers/infiniband/hw/i40iw/i40iw.h",
          "drivers/infiniband/hw/i40iw/i40iw_main.c||drivers/infiniband/hw/i40iw/i40iw_main.c",
          "drivers/infiniband/hw/i40iw/i40iw_utils.c||drivers/infiniband/hw/i40iw/i40iw_utils.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/infiniband/hw/i40iw/i40iw.h||drivers/infiniband/hw/i40iw/i40iw.h": [
          "File: drivers/infiniband/hw/i40iw/i40iw.h -> drivers/infiniband/hw/i40iw/i40iw.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:  CEQ_CREATED,",
          "202:  ILQ_CREATED,",
          "203:  IEQ_CREATED,",
          "205:  IP_ADDR_REGISTERED,",
          "206:  RDMA_DEV_REGISTERED",
          "207: };",
          "",
          "[Removed Lines]",
          "204:  INET_NOTIFIER,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/infiniband/hw/i40iw/i40iw_main.c||drivers/infiniband/hw/i40iw/i40iw_main.c": [
          "File: drivers/infiniband/hw/i40iw/i40iw_main.c -> drivers/infiniband/hw/i40iw/i40iw_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:  .notifier_call = i40iw_net_event",
          "100: };",
          "",
          "[Removed Lines]",
          "102: static atomic_t i40iw_notifiers_registered;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1377: static void i40iw_register_notifiers(void)",
          "1378: {",
          "1384: }",
          "",
          "[Removed Lines]",
          "1379:  if (atomic_inc_return(&i40iw_notifiers_registered) == 1) {",
          "1380:   register_inetaddr_notifier(&i40iw_inetaddr_notifier);",
          "1381:   register_inet6addr_notifier(&i40iw_inetaddr6_notifier);",
          "1382:   register_netevent_notifier(&i40iw_net_notifier);",
          "1383:  }",
          "",
          "[Added Lines]",
          "1377:  register_inetaddr_notifier(&i40iw_inetaddr_notifier);",
          "1378:  register_inet6addr_notifier(&i40iw_inetaddr6_notifier);",
          "1379:  register_netevent_notifier(&i40iw_net_notifier);",
          "1380: }",
          "1386: static void i40iw_unregister_notifiers(void)",
          "1387: {",
          "1388:  unregister_netevent_notifier(&i40iw_net_notifier);",
          "1389:  unregister_inetaddr_notifier(&i40iw_inetaddr_notifier);",
          "1390:  unregister_inet6addr_notifier(&i40iw_inetaddr6_notifier);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1467:   if (!iwdev->reset)",
          "1468:    i40iw_del_macip_entry(iwdev, (u8)iwdev->mac_ip_table_idx);",
          "1477:  case PBLE_CHUNK_MEM:",
          "1478:   i40iw_destroy_pble_pool(dev, iwdev->pble_rsrc);",
          "",
          "[Removed Lines]",
          "1470:  case INET_NOTIFIER:",
          "1471:   if (!atomic_dec_return(&i40iw_notifiers_registered)) {",
          "1472:    unregister_netevent_notifier(&i40iw_net_notifier);",
          "1473:    unregister_inetaddr_notifier(&i40iw_inetaddr_notifier);",
          "1474:    unregister_inet6addr_notifier(&i40iw_inetaddr6_notifier);",
          "1475:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1672:    break;",
          "1673:   iwdev->init_state = PBLE_CHUNK_MEM;",
          "1674:   iwdev->virtchnl_wq = alloc_ordered_workqueue(\"iwvch\", WQ_MEM_RECLAIM);",
          "1677:   status = i40iw_add_mac_ip(iwdev);",
          "1678:   if (status)",
          "1679:    break;",
          "",
          "[Removed Lines]",
          "1675:   i40iw_register_notifiers();",
          "1676:   iwdev->init_state = INET_NOTIFIER;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2023:  i40iw_client.type = I40E_CLIENT_IWARP;",
          "2024:  spin_lock_init(&i40iw_handler_lock);",
          "2025:  ret = i40e_register_client(&i40iw_client);",
          "2026:  return ret;",
          "2027: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2025:  i40iw_register_notifiers();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2035: static void __exit i40iw_exit_module(void)",
          "2036: {",
          "2037:  i40e_unregister_client(&i40iw_client);",
          "2038: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2038:  i40iw_unregister_notifiers();",
          "",
          "---------------"
        ],
        "drivers/infiniband/hw/i40iw/i40iw_utils.c||drivers/infiniband/hw/i40iw/i40iw_utils.c": [
          "File: drivers/infiniband/hw/i40iw/i40iw_utils.c -> drivers/infiniband/hw/i40iw/i40iw_utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:   return NOTIFY_DONE;",
          "162:  iwdev = &hdl->device;",
          "164:   return NOTIFY_DONE;",
          "166:  netdev = iwdev->ldev->netdev;",
          "",
          "[Removed Lines]",
          "163:  if (iwdev->init_state < INET_NOTIFIER)",
          "",
          "[Added Lines]",
          "163:  if (iwdev->init_state < IP_ADDR_REGISTERED || iwdev->closing)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:   return NOTIFY_DONE;",
          "219:  iwdev = &hdl->device;",
          "221:   return NOTIFY_DONE;",
          "223:  netdev = iwdev->ldev->netdev;",
          "",
          "[Removed Lines]",
          "220:  if (iwdev->init_state < INET_NOTIFIER)",
          "",
          "[Added Lines]",
          "220:  if (iwdev->init_state < IP_ADDR_REGISTERED || iwdev->closing)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "266:   if (!iwhdl)",
          "267:    return NOTIFY_DONE;",
          "268:   iwdev = &iwhdl->device;",
          "270:    return NOTIFY_DONE;",
          "271:   p = (__be32 *)neigh->primary_key;",
          "272:   i40iw_copy_ip_ntohl(local_ipaddr, p);",
          "",
          "[Removed Lines]",
          "269:   if (iwdev->init_state < INET_NOTIFIER)",
          "",
          "[Added Lines]",
          "269:   if (iwdev->init_state < IP_ADDR_REGISTERED || iwdev->closing)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4fa6c43ce4b427350cfbb659436bfe3d9e09a1d",
      "candidate_info": {
        "commit_hash": "c4fa6c43ce4b427350cfbb659436bfe3d9e09a1d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/c4fa6c43ce4b427350cfbb659436bfe3d9e09a1d",
        "files": [
          "kernel/cgroup/cgroup.c"
        ],
        "message": "cgroup: Reinit cgroup_taskset structure before cgroup_migrate_execute() returns\n\nThe cgroup_taskset structure within the larger cgroup_mgctx structure\nis supposed to be used once and then discarded. That is not really the\ncase in the hotplug code path:\n\ncpuset_hotplug_workfn()\n - cgroup_transfer_tasks()\n   - cgroup_migrate()\n     - cgroup_migrate_add_task()\n     - cgroup_migrate_execute()\n\nIn this case, the cgroup_migrate() function is called multiple time\nwith the same cgroup_mgctx structure to transfer the tasks from\none cgroup to another one-by-one. The second time cgroup_migrate()\nis called, the cgroup_taskset will be in an incorrect state and so\nmay cause the system to panic. For example,\n\n  [  150.888410] Faulting instruction address: 0xc0000000001db648\n  [  150.888414] Oops: Kernel access of bad area, sig: 11 [#1]\n  [  150.888417] SMP NR_CPUS=2048\n  [  150.888417] NUMA\n  [  150.888419] pSeries\n    :\n  [  150.888545] NIP [c0000000001db648] cpuset_can_attach+0x58/0x1b0\n  [  150.888548] LR [c0000000001db638] cpuset_can_attach+0x48/0x1b0\n  [  150.888551] Call Trace:\n  [  150.888554] [c0000005f65cb940] [c0000000001db638] cpuset_can_attach+0x48/0x1b 0 (unreliable)\n  [  150.888559] [c0000005f65cb9a0] [c0000000001cff04] cgroup_migrate_execute+0xc4/0x4b0\n  [  150.888563] [c0000005f65cba20] [c0000000001d7d14] cgroup_transfer_tasks+0x1d4/0x370\n  [  150.888568] [c0000005f65cbb70] [c0000000001ddcb0] cpuset_hotplug_workfn+0x710/0x8f0\n  [  150.888572] [c0000005f65cbc80] [c00000000012032c] process_one_work+0x1ac/0x4d0\n  [  150.888576] [c0000005f65cbd20] [c0000000001206f8] worker_thread+0xa8/0x5b0\n  [  150.888580] [c0000005f65cbdc0] [c0000000001293f8] kthread+0x168/0x1b0\n  [  150.888584] [c0000005f65cbe30] [c00000000000b368] ret_from_kernel_thread+0x5c/0x74\n\nTo allow reuse of the cgroup_mgctx structure, some fields in that\nstructure are now re-initialized at the end of cgroup_migrate_execute()\nfunction call so that the structure can be reused again in a later\niteration without causing problem.\n\nThis bug was introduced in the commit e595cd706982 (\"group: track\nmigration context in cgroup_mgctx\") in 4.11. This commit moves the\ncgroup_taskset initialization out of cgroup_migrate(). The commit\n10467270fb3 (\"cgroup: don't call migration methods if there are no\ntasks to migrate\") helped, but did not completely resolve the problem.\n\nFixes: e595cd706982bff0211e6fafe5a108421e747fbc (\"group: track migration context in cgroup_mgctx\")\nSigned-off-by: Waiman Long <longman@redhat.com>\nSigned-off-by: Tejun Heo <tj@kernel.org>\nCc: stable@vger.kernel.org # v4.11+",
        "before_after_code_files": [
          "kernel/cgroup/cgroup.c||kernel/cgroup/cgroup.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kernel/cgroup/cgroup.c||kernel/cgroup/cgroup.c": [
          "File: kernel/cgroup/cgroup.c -> kernel/cgroup/cgroup.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2311:   list_del_init(&cset->mg_node);",
          "2312:  }",
          "2313:  spin_unlock_irq(&css_set_lock);",
          "2314:  return ret;",
          "2315: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2320:  tset->nr_tasks = 0;",
          "2321:  tset->csets    = &tset->src_csets;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba24d63dd3748bae134365e3bcfd9c13b4e3c3e4",
      "candidate_info": {
        "commit_hash": "ba24d63dd3748bae134365e3bcfd9c13b4e3c3e4",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/ba24d63dd3748bae134365e3bcfd9c13b4e3c3e4",
        "files": [
          "drivers/net/wireless/ath/ath9k/channel.c",
          "drivers/net/wireless/ath/ath9k/link.c",
          "drivers/net/wireless/ath/ath9k/main.c"
        ],
        "message": "ath9k: Avoid a potential deadlock\n\nLockdep warns us that sc_pm_lock and cc_lock can cause a deadlock when\ncc_lock is acquired by itself with interrupts enabled. Disable irqs\nwhenever taking cc_lock to avoid this.\n\n[   19.094524] kworker/u2:0/5 just changed the state of lock:\n[   19.094578]  (&(&sc->sc_pm_lock)->rlock){-.-...}, at: [<f836c00e>] ath_isr+0x15e/0x200 [ath9k]\n[   19.094674] but this lock took another, HARDIRQ-unsafe lock in the past:\n[   19.094731]  (&(&common->cc_lock)->rlock){+.-...}\n[   19.094741]\n\n               and interrupts could create inverse lock ordering between them.\n\n[   19.094866]\n               other info that might help us debug this:\n[   19.094926]  Possible interrupt unsafe locking scenario:\n\n[   19.094985]        CPU0                    CPU1\n[   19.095036]        ----                    ----\n[   19.095086]   lock(&(&common->cc_lock)->rlock);\n[   19.095197]                                local_irq_disable();\n[   19.095305]                                lock(&(&sc->sc_pm_lock)->rlock);\n[   19.095423]                                lock(&(&common->cc_lock)->rlock);\n[   19.095539]   <Interrupt>\n[   19.095636]     lock(&(&sc->sc_pm_lock)->rlock);\n[   19.095745]\n                *** DEADLOCK ***\n\n[   19.095965] 3 locks held by kworker/u2:0/5:\n[   19.096067]  #0:  (\"%s\"wiphy_name(local->hw.wiphy)){.+.+.+}, at: [<c1067f37>] process_one_work+0x127/0x580\n[   19.096260]  #1:  ((&local->dynamic_ps_enable_work)){+.+...}, at: [<c1067f37>] process_one_work+0x127/0x580\n[   19.096447]  #2:  (&sc->mutex){+.+...}, at: [<f836b8b0>] ath9k_config+0x30/0x1d0 [ath9k]\n[   19.096639]\n               the shortest dependencies between 2nd lock and 1st lock:\n[   19.096813]  -> (&(&common->cc_lock)->rlock){+.-...} ops: 38 {\n[   19.096816]     HARDIRQ-ON-W at:\n[   19.096816]                       __lock_acquire+0x57e/0x1260\n[   19.096816]                       lock_acquire+0xb1/0x1c0\n[   19.096816]                       _raw_spin_lock_bh+0x3f/0x50\n[   19.096816]                       ath_chanctx_set_channel+0xb6/0x2c0 [ath9k]\n[   19.096816]                       ath9k_config+0xa8/0x1d0 [ath9k]\n[   19.096816]                       ieee80211_hw_config+0xa8/0x5f0 [mac80211]\n[   19.096816]                       ieee80211_do_open+0x67a/0x920 [mac80211]\n[   19.096816]                       ieee80211_open+0x41/0x50 [mac80211]\n[   19.096816]                       __dev_open+0xab/0x140\n[   19.096816]                       __dev_change_flags+0x89/0x150\n[   19.096816]                       dev_change_flags+0x28/0x60\n[   19.096816]                       do_setlink+0x290/0x890\n[   19.096816]                       rtnl_newlink+0x7cf/0x8e0\n[   19.096816]                       rtnetlink_rcv_msg+0xbf/0x1f0\n[   19.096816]                       netlink_rcv_skb+0xb9/0xe0\n[   19.096816]                       rtnetlink_rcv+0x1e/0x30\n[   19.096816]                       netlink_unicast+0x13a/0x2c0\n[   19.096816]                       netlink_sendmsg+0x290/0x380\n[   19.096816]                       ___sys_sendmsg+0x1e2/0x280\n[   19.096816]                       __sys_sendmsg+0x3f/0x80\n[   19.096816]                       SyS_socketcall+0x58c/0x6b0\n[   19.096816]                       do_fast_syscall_32+0x96/0x1d0\n[   19.096816]                       entry_SYSENTER_32+0x4c/0x7b\n[   19.096816]     IN-SOFTIRQ-W at:\n[   19.096816]                       __lock_acquire+0x55a/0x1260\n[   19.096816]                       lock_acquire+0xb1/0x1c0\n[   19.096816]                       _raw_spin_lock+0x3c/0x50\n[   19.096816]                       ath_ps_full_sleep+0x24/0x70 [ath9k]\n[   19.096816]                       call_timer_fn+0xa4/0x300\n[   19.096816]                       run_timer_softirq+0x1b1/0x560\n[   19.096816]                       __do_softirq+0xb0/0x430\n[   19.096816]                       do_softirq_own_stack+0x33/0x40\n[   19.096816]                       irq_exit+0xad/0xc0\n[   19.096816]                       smp_apic_timer_interrupt+0x31/0x40\n[   19.096816]                       apic_timer_interrupt+0x37/0x3c\n[   19.096816]                       wp_page_copy+0xb8/0x580\n[   19.096816]                       do_wp_page+0x64/0x420\n[   19.096816]                       handle_mm_fault+0x430/0x990\n[   19.096816]                       __do_page_fault+0x18b/0x430\n[   19.096816]                       do_page_fault+0xb/0x10\n[   19.096816]                       common_exception+0x62/0x6a\n[   19.096816]     INITIAL USE at:\n[   19.096816]                      __lock_acquire+0x204/0x1260\n[   19.096816]                      lock_acquire+0xb1/0x1c0\n[   19.096816]                      _raw_spin_lock_bh+0x3f/0x50\n[   19.096816]                      ath_chanctx_set_channel+0xb6/0x2c0 [ath9k]\n[   19.096816]                      ath9k_config+0xa8/0x1d0 [ath9k]\n[   19.096816]                      ieee80211_hw_config+0xa8/0x5f0 [mac80211]\n[   19.096816]                      ieee80211_do_open+0x67a/0x920 [mac80211]\n[   19.096816]                      ieee80211_open+0x41/0x50 [mac80211]\n[   19.096816]                      __dev_open+0xab/0x140\n[   19.096816]                      __dev_change_flags+0x89/0x150\n[   19.096816]                      dev_change_flags+0x28/0x60\n[   19.096816]                      do_setlink+0x290/0x890\n[   19.096816]                      rtnl_newlink+0x7cf/0x8e0\n[   19.096816]                      rtnetlink_rcv_msg+0xbf/0x1f0\n[   19.096816]                      netlink_rcv_skb+0xb9/0xe0\n[   19.096816]                      rtnetlink_rcv+0x1e/0x30\n[   19.096816]                      netlink_unicast+0x13a/0x2c0\n[   19.096816]                      netlink_sendmsg+0x290/0x380\n[   19.096816]                      ___sys_sendmsg+0x1e2/0x280\n[   19.096816]                      __sys_sendmsg+0x3f/0x80\n[   19.096816]                      SyS_socketcall+0x58c/0x6b0\n[   19.096816]                      do_fast_syscall_32+0x96/0x1d0\n[   19.096816]                      entry_SYSENTER_32+0x4c/0x7b\n[   19.096816]   }\n[   19.096816]   ... key      at: [<f837b694>] __key.61991+0x0/0xffffc96c [ath9k]\n[   19.096816]   ... acquired at:\n[   19.096816]    lock_acquire+0xb1/0x1c0\n[   19.096816]    _raw_spin_lock+0x3c/0x50\n[   19.096816]    ath9k_ps_wakeup+0x85/0xe0 [ath9k]\n[   19.096816]    ath9k_bss_info_changed+0x2a/0x1b0 [ath9k]\n[   19.096816]    ieee80211_bss_info_change_notify+0xf3/0x360 [mac80211]\n[   19.096816]    ieee80211_recalc_txpower+0x33/0x40 [mac80211]\n[   19.096816]    ieee80211_set_tx_power+0x45/0x1d0 [mac80211]\n[   19.096816]    cfg80211_wext_siwtxpower+0xd3/0x350 [cfg80211]\n[   19.096816]    ioctl_standard_call+0x4e/0x400\n[   19.096816]    wext_handle_ioctl+0xf4/0x190\n[   19.096816]    dev_ioctl+0xb7/0x630\n[   19.096816]    sock_ioctl+0x13e/0x2d0\n[   19.096816]    do_vfs_ioctl+0x84/0x750\n[   19.096816]    SyS_ioctl+0x34/0x60\n[   19.096816]    do_fast_syscall_32+0x96/0x1d0\n[   19.096816]    entry_SYSENTER_32+0x4c/0x7b\n\n[   19.096816] -> (&(&sc->sc_pm_lock)->rlock){-.-...} ops: 597 {\n[   19.096816]    IN-HARDIRQ-W at:\n[   19.096816]                     __lock_acquire+0x6ae/0x1260\n[   19.096816]                     lock_acquire+0xb1/0x1c0\n[   19.096816]                     _raw_spin_lock_irqsave+0x45/0x60\n[   19.096816]                     ath_isr+0x15e/0x200 [ath9k]\n[   19.096816]                     __handle_irq_event_percpu+0x44/0x340\n[   19.096816]                     handle_irq_event_percpu+0x1d/0x50\n[   19.096816]                     handle_irq_event+0x32/0x60\n[   19.096816]                     handle_level_irq+0x81/0x100\n[   19.096816]                     handle_irq+0x9c/0xd0\n[   19.096816]                     do_IRQ+0x5c/0x120\n[   19.096816]                     common_interrupt+0x36/0x3c\n[   19.096816]                     _raw_spin_unlock_irqrestore+0x57/0x70\n[   19.096816]                     ath9k_config+0x16a/0x1d0 [ath9k]\n[   19.096816]                     ieee80211_hw_config+0xa8/0x5f0 [mac80211]\n[   19.096816]                     ieee80211_dynamic_ps_enable_work+0x1c3/0x680 [mac80211]\n[   19.096816]                     process_one_work+0x1d1/0x580\n[   19.096816]                     worker_thread+0x31/0x380\n[   19.096816]                     kthread+0xd9/0x110\n[   19.096816]                     ret_from_fork+0x19/0x24\n[   19.096816]    IN-SOFTIRQ-W at:\n[   19.096816]                     __lock_acquire+0x55a/0x1260\n[   19.096816]                     lock_acquire+0xb1/0x1c0\n[   19.096816]                     _raw_spin_lock_irqsave+0x45/0x60\n[   19.096816]                     ath9k_ps_wakeup+0x24/0xe0 [ath9k]\n[   19.096816]                     ath9k_tasklet+0x42/0x260 [ath9k]\n[   19.096816]                     tasklet_action+0x196/0x1e0\n[   19.096816]                     __do_softirq+0xb0/0x430\n[   19.096816]                     do_softirq_own_stack+0x33/0x40\n[   19.096816]                     irq_exit+0xad/0xc0\n[   19.096816]                     do_IRQ+0x65/0x120\n[   19.096816]                     common_interrupt+0x36/0x3c\n[   19.096816]                     get_page_from_freelist+0x20a/0x970\n[   19.096816]                     __alloc_pages_nodemask+0xca/0xed0\n[   19.096816]                     __get_free_pages+0x14/0x30\n[   19.096816]                     pgd_alloc+0x1d/0x160\n[   19.096816]                     mm_init.isra.47+0x13a/0x1b0\n[   19.096816]                     copy_process.part.54+0xb55/0x1700\n[   19.096816]                     _do_fork+0xd4/0x6a0\n[   19.096816]                     SyS_clone+0x27/0x30\n[   19.096816]                     do_fast_syscall_32+0x96/0x1d0\n[   19.096816]                     entry_SYSENTER_32+0x4c/0x7b\n[   19.096816]    INITIAL USE at:\n[   19.096816]                    __lock_acquire+0x204/0x1260\n[   19.096816]                    lock_acquire+0xb1/0x1c0\n[   19.096816]                    _raw_spin_lock_irqsave+0x45/0x60\n[   19.096816]                    ath9k_ps_wakeup+0x24/0xe0 [ath9k]\n[   19.096816]                    ath9k_start+0x29/0x1f0 [ath9k]\n[   19.096816]                    drv_start+0x71/0x270 [mac80211]\n[   19.096816]                    ieee80211_do_open+0x31f/0x920 [mac80211]\n[   19.096816]                    ieee80211_open+0x41/0x50 [mac80211]\n[   19.096816]                    __dev_open+0xab/0x140\n[   19.096816]                    __dev_change_flags+0x89/0x150\n[   19.096816]                    dev_change_flags+0x28/0x60\n[   19.096816]                    do_setlink+0x290/0x890\n[   19.096816]                    rtnl_newlink+0x7cf/0x8e0\n[   19.096816]                    rtnetlink_rcv_msg+0xbf/0x1f0\n[   19.096816]                    netlink_rcv_skb+0xb9/0xe0\n[   19.096816]                    rtnetlink_rcv+0x1e/0x30\n[   19.096816]                    netlink_unicast+0x13a/0x2c0\n[   19.096816]                    netlink_sendmsg+0x290/0x380\n[   19.096816]                    ___sys_sendmsg+0x1e2/0x280\n[   19.096816]                    __sys_sendmsg+0x3f/0x80\n[   19.096816]                    SyS_socketcall+0x58c/0x6b0\n[   19.096816]                    do_fast_syscall_32+0x96/0x1d0\n[   19.096816]                    entry_SYSENTER_32+0x4c/0x7b\n[   19.096816]  }\n[   19.096816]  ... key      at: [<f837b67c>] __key.61994+0x0/0xffffc984 [ath9k]\n[   19.096816]  ... acquired at:\n[   19.096816]    check_usage_forwards+0x118/0x120\n[   19.096816]    mark_lock+0x2e4/0x590\n[   19.096816]    __lock_acquire+0x6ae/0x1260\n[   19.096816]    lock_acquire+0xb1/0x1c0\n[   19.096816]    _raw_spin_lock_irqsave+0x45/0x60\n[   19.096816]    ath_isr+0x15e/0x200 [ath9k]\n[   19.096816]    __handle_irq_event_percpu+0x44/0x340\n[   19.096816]    handle_irq_event_percpu+0x1d/0x50\n[   19.096816]    handle_irq_event+0x32/0x60\n[   19.096816]    handle_level_irq+0x81/0x100\n[   19.096816]    handle_irq+0x9c/0xd0\n[   19.096816]    do_IRQ+0x5c/0x120\n[   19.096816]    common_interrupt+0x36/0x3c\n[   19.096816]    _raw_spin_unlock_irqrestore+0x57/0x70\n[   19.096816]    ath9k_config+0x16a/0x1d0 [ath9k]\n[   19.096816]    ieee80211_hw_config+0xa8/0x5f0 [mac80211]\n[   19.096816]    ieee80211_dynamic_ps_enable_work+0x1c3/0x680 [mac80211]\n[   19.096816]    process_one_work+0x1d1/0x580\n[   19.096816]    worker_thread+0x31/0x380\n[   19.096816]    kthread+0xd9/0x110\n[   19.096816]    ret_from_fork+0x19/0x24\n\n[   19.096816]\n               stack backtrace:\n[   19.096816] CPU: 0 PID: 5 Comm: kworker/u2:0 Not tainted 4.13.0-mgm-ovl+ #51\n[   19.096816] Hardware name: FUJITSU SIEMENS LIFEBOOK S6120/FJNB16C, BIOS Version 1.26  05/10/2004\n[   19.096816] Workqueue: phy0 ieee80211_dynamic_ps_enable_work [mac80211]\n[   19.096816] Call Trace:\n[   19.096816]  <IRQ>\n[   19.096816]  dump_stack+0x16/0x19\n[   19.096816]  print_irq_inversion_bug.part.37+0x16c/0x179\n[   19.096816]  check_usage_forwards+0x118/0x120\n[   19.096816]  ? ret_from_fork+0x19/0x24\n[   19.096816]  ? print_shortest_lock_dependencies+0x1a0/0x1a0\n[   19.096816]  mark_lock+0x2e4/0x590\n[   19.096816]  ? print_shortest_lock_dependencies+0x1a0/0x1a0\n[   19.096816]  __lock_acquire+0x6ae/0x1260\n[   19.096816]  lock_acquire+0xb1/0x1c0\n[   19.096816]  ? ath_isr+0x15e/0x200 [ath9k]\n[   19.096816]  _raw_spin_lock_irqsave+0x45/0x60\n[   19.096816]  ? ath_isr+0x15e/0x200 [ath9k]\n[   19.096816]  ath_isr+0x15e/0x200 [ath9k]\n[   19.096816]  __handle_irq_event_percpu+0x44/0x340\n[   19.096816]  handle_irq_event_percpu+0x1d/0x50\n[   19.096816]  handle_irq_event+0x32/0x60\n[   19.096816]  ? handle_nested_irq+0x100/0x100\n[   19.096816]  handle_level_irq+0x81/0x100\n[   19.096816]  handle_irq+0x9c/0xd0\n[   19.096816]  </IRQ>\n[   19.096816]  do_IRQ+0x5c/0x120\n[   19.096816]  common_interrupt+0x36/0x3c\n[   19.096816] EIP: _raw_spin_unlock_irqrestore+0x57/0x70\n[   19.096816] EFLAGS: 00000286 CPU: 0\n[   19.096816] EAX: f60a3600 EBX: 00000286 ECX: 00000006 EDX: 00000001\n[   19.096816] ESI: f46c9e68 EDI: f46c8620 EBP: f60b5e8c ESP: f60b5e84\n[   19.096816]  DS: 007b ES: 007b FS: 0000 GS: 0000 SS: 0068\n[   19.096816]  ath9k_config+0x16a/0x1d0 [ath9k]\n[   19.096816]  ieee80211_hw_config+0xa8/0x5f0 [mac80211]\n[   19.096816]  ? ieee80211_hw_config+0x1db/0x5f0 [mac80211]\n[   19.096816]  ieee80211_dynamic_ps_enable_work+0x1c3/0x680 [mac80211]\n[   19.096816]  ? process_one_work+0x127/0x580\n[   19.096816]  ? process_one_work+0x127/0x580\n[   19.096816]  process_one_work+0x1d1/0x580\n[   19.096816]  ? process_one_work+0x127/0x580\n[   19.096816]  worker_thread+0x31/0x380\n[   19.096816]  kthread+0xd9/0x110\n[   19.096816]  ? process_one_work+0x580/0x580\n[   19.096816]  ? kthread_create_on_node+0x30/0x30\n[   19.096816]  ret_from_fork+0x19/0x24\n\nCc: QCA ath9k Development <ath9k-devel@qca.qualcomm.com>\nCc: Kalle Valo <kvalo@codeaurora.org>\nCc: netdev@vger.kernel.org\nSigned-off-by: Ville Syrj\u00e4l\u00e4 <ville.syrjala@linux.intel.com>\nSigned-off-by: Kalle Valo <kvalo@qca.qualcomm.com>",
        "before_after_code_files": [
          "drivers/net/wireless/ath/ath9k/channel.c||drivers/net/wireless/ath/ath9k/channel.c",
          "drivers/net/wireless/ath/ath9k/link.c||drivers/net/wireless/ath/ath9k/link.c",
          "drivers/net/wireless/ath/ath9k/main.c||drivers/net/wireless/ath/ath9k/main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/ath/ath9k/channel.c||drivers/net/wireless/ath/ath9k/channel.c": [
          "File: drivers/net/wireless/ath/ath9k/channel.c -> drivers/net/wireless/ath/ath9k/channel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:  struct cfg80211_chan_def *chandef = &sc->cur_chan->chandef;",
          "30:  struct ieee80211_channel *chan = chandef->chan;",
          "31:  int pos = chan->hw_value;",
          "32:  int old_pos = -1;",
          "33:  int r;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:  unsigned long flags;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:   chan->center_freq, chandef->width);",
          "46:  ath_update_survey_stats(sc);",
          "49:  ath9k_cmn_get_channel(hw, ah, chandef);",
          "",
          "[Removed Lines]",
          "45:  spin_lock_bh(&common->cc_lock);",
          "47:  spin_unlock_bh(&common->cc_lock);",
          "",
          "[Added Lines]",
          "46:  spin_lock_irqsave(&common->cc_lock, flags);",
          "48:  spin_unlock_irqrestore(&common->cc_lock, flags);",
          "",
          "---------------"
        ],
        "drivers/net/wireless/ath/ath9k/link.c||drivers/net/wireless/ath/ath9k/link.c": [
          "File: drivers/net/wireless/ath/ath9k/link.c -> drivers/net/wireless/ath/ath9k/link.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:  if (aniflag) {",
          "371:   ath9k_hw_ani_monitor(ah, ah->curchan);",
          "372:   ath_update_survey_stats(sc);",
          "374:  }",
          "",
          "[Removed Lines]",
          "370:   spin_lock(&common->cc_lock);",
          "373:   spin_unlock(&common->cc_lock);",
          "",
          "[Added Lines]",
          "370:   spin_lock_irqsave(&common->cc_lock, flags);",
          "373:   spin_unlock_irqrestore(&common->cc_lock, flags);",
          "",
          "---------------"
        ],
        "drivers/net/wireless/ath/ath9k/main.c||drivers/net/wireless/ath/ath9k/main.c": [
          "File: drivers/net/wireless/ath/ath9k/main.c -> drivers/net/wireless/ath/ath9k/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97: {",
          "98:  struct ath_softc *sc = (struct ath_softc *) data;",
          "99:  struct ath_common *common = ath9k_hw_common(sc->sc_ah);",
          "100:  bool reset;",
          "103:  ath_hw_cycle_counters_update(common);",
          "106:  ath9k_hw_setrxabort(sc->sc_ah, 1);",
          "107:  ath9k_hw_stopdmarecv(sc->sc_ah, &reset);",
          "",
          "[Removed Lines]",
          "102:  spin_lock(&common->cc_lock);",
          "104:  spin_unlock(&common->cc_lock);",
          "",
          "[Added Lines]",
          "100:  unsigned long flags;",
          "103:  spin_lock_irqsave(&common->cc_lock, flags);",
          "105:  spin_unlock_irqrestore(&common->cc_lock, flags);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "395:  if ((ah->config.hw_hang_checks & HW_BB_WATCHDOG) &&",
          "396:      (status & ATH9K_INT_BB_WATCHDOG)) {",
          "398:   ath_hw_cycle_counters_update(common);",
          "399:   ar9003_hw_bb_watchdog_dbg_info(ah);",
          "402:   if (ar9003_hw_bb_watchdog_check(ah)) {",
          "403:    type = RESET_TYPE_BB_WATCHDOG;",
          "",
          "[Removed Lines]",
          "397:   spin_lock(&common->cc_lock);",
          "400:   spin_unlock(&common->cc_lock);",
          "",
          "[Added Lines]",
          "398:   spin_lock_irqsave(&common->cc_lock, flags);",
          "401:   spin_unlock_irqrestore(&common->cc_lock, flags);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1955:  struct ath_common *common = ath9k_hw_common(sc->sc_ah);",
          "1956:  struct ieee80211_supported_band *sband;",
          "1957:  struct ieee80211_channel *chan;",
          "1958:  int pos;",
          "1960:  if (IS_ENABLED(CONFIG_ATH9K_TX99))",
          "1961:   return -EOPNOTSUPP;",
          "1964:  if (idx == 0)",
          "1965:   ath_update_survey_stats(sc);",
          "",
          "[Removed Lines]",
          "1963:  spin_lock_bh(&common->cc_lock);",
          "",
          "[Added Lines]",
          "1959:  unsigned long flags;",
          "1965:  spin_lock_irqsave(&common->cc_lock, flags);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1974:   sband = hw->wiphy->bands[NL80211_BAND_5GHZ];",
          "1976:  if (!sband || idx >= sband->n_channels) {",
          "1978:   return -ENOENT;",
          "1979:  }",
          "",
          "[Removed Lines]",
          "1977:   spin_unlock_bh(&common->cc_lock);",
          "",
          "[Added Lines]",
          "1979:   spin_unlock_irqrestore(&common->cc_lock, flags);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1982:  pos = chan->hw_value;",
          "1983:  memcpy(survey, &sc->survey[pos], sizeof(*survey));",
          "1984:  survey->channel = chan;",
          "1987:  return 0;",
          "1988: }",
          "",
          "[Removed Lines]",
          "1985:  spin_unlock_bh(&common->cc_lock);",
          "",
          "[Added Lines]",
          "1987:  spin_unlock_irqrestore(&common->cc_lock, flags);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0964e40947a630a2a6f724e968246992f97bcf1c",
      "candidate_info": {
        "commit_hash": "0964e40947a630a2a6f724e968246992f97bcf1c",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0964e40947a630a2a6f724e968246992f97bcf1c",
        "files": [
          "drivers/iio/adc/mcp320x.c"
        ],
        "message": "iio: adc: mcp320x: Fix oops on module unload\n\nThe driver calls spi_get_drvdata() in its ->remove hook even though it\nhas never called spi_set_drvdata().  Stack trace for posterity:\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000220\nInternal error: Oops: 5 [#1] SMP ARM\n[<8072f564>] (mutex_lock) from [<7f1400d0>] (iio_device_unregister+0x24/0x7c [industrialio])\n[<7f1400d0>] (iio_device_unregister [industrialio]) from [<7f15e020>] (mcp320x_remove+0x20/0x30 [mcp320x])\n[<7f15e020>] (mcp320x_remove [mcp320x]) from [<8055a8cc>] (spi_drv_remove+0x2c/0x44)\n[<8055a8cc>] (spi_drv_remove) from [<805087bc>] (__device_release_driver+0x98/0x134)\n[<805087bc>] (__device_release_driver) from [<80509180>] (driver_detach+0xdc/0xe0)\n[<80509180>] (driver_detach) from [<8050823c>] (bus_remove_driver+0x5c/0xb0)\n[<8050823c>] (bus_remove_driver) from [<80509ab0>] (driver_unregister+0x38/0x58)\n[<80509ab0>] (driver_unregister) from [<7f15e69c>] (mcp320x_driver_exit+0x14/0x1c [mcp320x])\n[<7f15e69c>] (mcp320x_driver_exit [mcp320x]) from [<801a78d0>] (SyS_delete_module+0x184/0x1d0)\n[<801a78d0>] (SyS_delete_module) from [<80108100>] (ret_fast_syscall+0x0/0x1c)\n\nFixes: f5ce4a7a9291 (\"iio: adc: add driver for MCP3204/08 12-bit ADC\")\nCc: Oskar Andero <oskar.andero@gmail.com>\nSigned-off-by: Lukas Wunner <lukas@wunner.de>\nCc: <Stable@vger.kernel.org>\nSigned-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>",
        "before_after_code_files": [
          "drivers/iio/adc/mcp320x.c||drivers/iio/adc/mcp320x.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/iio/adc/mcp320x.c||drivers/iio/adc/mcp320x.c": [
          "File: drivers/iio/adc/mcp320x.c -> drivers/iio/adc/mcp320x.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "312:  indio_dev->name = spi_get_device_id(spi)->name;",
          "313:  indio_dev->modes = INDIO_DIRECT_MODE;",
          "314:  indio_dev->info = &mcp320x_info;",
          "316:  chip_info = &mcp320x_chip_infos[spi_get_device_id(spi)->driver_data];",
          "317:  indio_dev->channels = chip_info->channels;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315:  spi_set_drvdata(spi, indio_dev);",
          "",
          "---------------"
        ]
      }
    }
  ]
}