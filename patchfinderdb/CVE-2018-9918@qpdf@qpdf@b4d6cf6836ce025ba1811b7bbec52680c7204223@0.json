{
  "cve_id": "CVE-2018-9918",
  "cve_desc": "libqpdf.a in QPDF through 8.0.2 mishandles certain \"expected dictionary key but found non-name object\" cases, allowing remote attackers to cause a denial of service (stack exhaustion), related to the QPDFObjectHandle and QPDF_Dictionary classes, because nesting in direct objects is not restricted.",
  "repo": "qpdf/qpdf",
  "patch_hash": "b4d6cf6836ce025ba1811b7bbec52680c7204223",
  "patch_info": {
    "commit_hash": "b4d6cf6836ce025ba1811b7bbec52680c7204223",
    "repo": "qpdf/qpdf",
    "commit_url": "https://github.com/qpdf/qpdf/commit/b4d6cf6836ce025ba1811b7bbec52680c7204223",
    "files": [
      "ChangeLog",
      "libqpdf/QPDFObjectHandle.cc",
      "qpdf/qpdf.testcov",
      "qpdf/qtest/qpdf.test",
      "qpdf/qtest/qpdf/issue-146.out",
      "qpdf/qtest/qpdf/issue-202.out",
      "qpdf/qtest/qpdf/issue-202.pdf"
    ],
    "message": "Limit depth of nesting in direct objects (fixes #202)\n\nThis fixes CVE-2018-9918.",
    "before_after_code_files": [
      "libqpdf/QPDFObjectHandle.cc||libqpdf/QPDFObjectHandle.cc",
      "qpdf/qpdf.testcov||qpdf/qpdf.testcov",
      "qpdf/qtest/qpdf.test||qpdf/qtest/qpdf.test"
    ]
  },
  "patch_diff": {
    "libqpdf/QPDFObjectHandle.cc||libqpdf/QPDFObjectHandle.cc": [
      "File: libqpdf/QPDFObjectHandle.cc -> libqpdf/QPDFObjectHandle.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "1488:    case QPDFTokenizer::tt_array_open:",
      "1489:    case QPDFTokenizer::tt_dict_open:",
      "1496:      break;",
      "1498:    case QPDFTokenizer::tt_bool:",
      "",
      "[Removed Lines]",
      "1490:             olist_stack.push_back(std::vector<QPDFObjectHandle>());",
      "1491:             state = st_start;",
      "1492:             offset_stack.push_back(input->tell());",
      "1493:             state_stack.push_back(",
      "1494:                 (token.getType() == QPDFTokenizer::tt_array_open) ?",
      "1495:                 st_array : st_dictionary);",
      "",
      "[Added Lines]",
      "1490:             if (olist_stack.size() > 500)",
      "1491:             {",
      "1492:   QTC::TC(\"qpdf\", \"QPDFObjectHandle too deep\");",
      "1493:                 warn(context,",
      "1494:                      QPDFExc(qpdf_e_damaged_pdf, input->getName(),",
      "1495:                              object_description,",
      "1496:                              input->getLastOffset(),",
      "1497:                              \"ignoring excessively deeply nested data structure\"));",
      "1498:                 object = newNull();",
      "1499:                 state = st_top;",
      "1500:             }",
      "1501:             else",
      "1502:             {",
      "1503:                 olist_stack.push_back(std::vector<QPDFObjectHandle>());",
      "1504:                 state = st_start;",
      "1505:                 offset_stack.push_back(input->tell());",
      "1506:                 state_stack.push_back(",
      "1507:                     (token.getType() == QPDFTokenizer::tt_array_open) ?",
      "1508:                     st_array : st_dictionary);",
      "1509:             }",
      "",
      "---------------"
    ],
    "qpdf/qpdf.testcov||qpdf/qpdf.testcov": [
      "File: qpdf/qpdf.testcov -> qpdf/qpdf.testcov",
      "--- Hunk 1 ---",
      "[Context before]",
      "335: QPDFObjectHandle erase array bounds 0",
      "336: qpdf-c called qpdf_check_pdf 0",
      "337: QPDF xref loop 0",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "338: QPDFObjectHandle too deep 0",
      "",
      "---------------"
    ],
    "qpdf/qtest/qpdf.test||qpdf/qtest/qpdf.test": [
      "File: qpdf/qtest/qpdf.test -> qpdf/qtest/qpdf.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "236:     [\"148\", \"free memory on bad flate\", 2],",
      "237:     [\"149\", \"xref prev pointer loop\", 3],",
      "238:     [\"150\", \"integer overflow\", 2],",
      "239:     );",
      "240: $n_tests += scalar(@bug_tests);",
      "241: foreach my $d (@bug_tests)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "239:     [\"202\", \"even more deeply nested dictionary\", 2],",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ad527a64f93dca12f6aabab2ca99ae5eb352ab4b",
      "candidate_info": {
        "commit_hash": "ad527a64f93dca12f6aabab2ca99ae5eb352ab4b",
        "repo": "qpdf/qpdf",
        "commit_url": "https://github.com/qpdf/qpdf/commit/ad527a64f93dca12f6aabab2ca99ae5eb352ab4b",
        "files": [
          "ChangeLog",
          "include/qpdf/QPDFObjectHandle.hh",
          "libqpdf/QPDFObjectHandle.cc",
          "qpdf/qtest/qpdf.test",
          "qpdf/qtest/qpdf/issue-146.out",
          "qpdf/qtest/qpdf/issue-146.pdf"
        ],
        "message": "Parse iteratively to avoid stack overflow (fixes #146)",
        "before_after_code_files": [
          "include/qpdf/QPDFObjectHandle.hh||include/qpdf/QPDFObjectHandle.hh",
          "libqpdf/QPDFObjectHandle.cc||libqpdf/QPDFObjectHandle.cc",
          "qpdf/qtest/qpdf.test||qpdf/qtest/qpdf.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libqpdf/QPDFObjectHandle.cc||libqpdf/QPDFObjectHandle.cc",
            "qpdf/qtest/qpdf.test||qpdf/qtest/qpdf.test"
          ],
          "candidate": [
            "libqpdf/QPDFObjectHandle.cc||libqpdf/QPDFObjectHandle.cc",
            "qpdf/qtest/qpdf.test||qpdf/qtest/qpdf.test"
          ]
        }
      },
      "candidate_diff": {
        "include/qpdf/QPDFObjectHandle.hh||include/qpdf/QPDFObjectHandle.hh": [
          "File: include/qpdf/QPDFObjectHandle.hh -> include/qpdf/QPDFObjectHandle.hh",
          "--- Hunk 1 ---",
          "[Context before]",
          "667:         std::string const& object_description,",
          "668:         QPDFTokenizer& tokenizer, bool& empty,",
          "669:         StringDecrypter* decrypter, QPDF* context,",
          "671:         bool content_stream);",
          "672:     static void parseContentStream_internal(",
          "673:         PointerHolder<Buffer> stream_data,",
          "",
          "[Removed Lines]",
          "670:         bool in_array, bool in_dictionary,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libqpdf/QPDFObjectHandle.cc||libqpdf/QPDFObjectHandle.cc": [
          "File: libqpdf/QPDFObjectHandle.cc -> libqpdf/QPDFObjectHandle.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "883:     while (static_cast<size_t>(input->tell()) < length)",
          "884:     {",
          "885:         QPDFObjectHandle obj =",
          "888:         if (! obj.isInitialized())",
          "889:         {",
          "",
          "[Removed Lines]",
          "886:             parseInternal(input, \"content\", tokenizer, empty,",
          "887:                           0, 0, false, false, true);",
          "",
          "[Added Lines]",
          "886:             parseInternal(input, \"content\", tokenizer, empty, 0, 0, true);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "945:                         StringDecrypter* decrypter, QPDF* context)",
          "946: {",
          "947:     return parseInternal(input, object_description, tokenizer, empty,",
          "949: }",
          "951: QPDFObjectHandle",
          "",
          "[Removed Lines]",
          "948:                          decrypter, context, false, false, false);",
          "",
          "[Added Lines]",
          "947:                          decrypter, context, false);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "953:                                 std::string const& object_description,",
          "954:                                 QPDFTokenizer& tokenizer, bool& empty,",
          "955:                                 StringDecrypter* decrypter, QPDF* context,",
          "957:                                 bool content_stream)",
          "958: {",
          "",
          "[Removed Lines]",
          "956:                                 bool in_array, bool in_dictionary,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "964:     empty = false;",
          "974:     QPDFObjectHandle object;",
          "978:     bool done = false;",
          "979:     while (! done)",
          "980:     {",
          "981:  object = QPDFObjectHandle();",
          "983:  QPDFTokenizer::Token token =",
          "",
          "[Removed Lines]",
          "965:     if (in_dictionary && in_array)",
          "966:     {",
          "970:  throw std::logic_error(",
          "971:      \"INTERNAL ERROR: parseInternal: in_dict && in_array\");",
          "972:     }",
          "976:     qpdf_offset_t offset = input->tell();",
          "977:     std::vector<QPDFObjectHandle> olist;",
          "",
          "[Added Lines]",
          "966:     std::vector<std::vector<QPDFObjectHandle> > olist_stack;",
          "967:     olist_stack.push_back(std::vector<QPDFObjectHandle>());",
          "968:     enum state_e { st_top, st_start, st_stop, st_eof, st_dictionary, st_array };",
          "969:     std::vector<state_e> state_stack;",
          "970:     state_stack.push_back(st_top);",
          "971:     std::vector<qpdf_offset_t> offset_stack;",
          "972:     offset_stack.push_back(input->tell());",
          "976:         std::vector<QPDFObjectHandle>& olist = olist_stack.back();",
          "977:         state_e state = state_stack.back();",
          "978:         qpdf_offset_t offset = offset_stack.back();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "988:           case QPDFTokenizer::tt_eof:",
          "989:             if (content_stream)",
          "990:             {",
          "993:             }",
          "994:             else",
          "995:             {",
          "",
          "[Removed Lines]",
          "992:                 return object;",
          "",
          "[Added Lines]",
          "990:                 state = st_eof;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1012:      break;",
          "1014:    case QPDFTokenizer::tt_array_close:",
          "1016:      {",
          "1018:      }",
          "1019:      else",
          "1020:      {",
          "",
          "[Removed Lines]",
          "1015:      if (in_array)",
          "1017:   done = true;",
          "",
          "[Added Lines]",
          "1013:      if (state == st_array)",
          "1015:                 state = st_stop;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1029:      break;",
          "1031:    case QPDFTokenizer::tt_dict_close:",
          "1033:      {",
          "1035:      }",
          "1036:      else",
          "1037:      {",
          "",
          "[Removed Lines]",
          "1032:      if (in_dictionary)",
          "1034:   done = true;",
          "",
          "[Added Lines]",
          "1030:      if (state == st_dictionary)",
          "1032:                 state = st_stop;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1046:      break;",
          "1048:    case QPDFTokenizer::tt_array_open:",
          "1054:    case QPDFTokenizer::tt_dict_open:",
          "1058:      break;",
          "1060:    case QPDFTokenizer::tt_bool:",
          "",
          "[Removed Lines]",
          "1049:      object = parseInternal(",
          "1050:   input, object_description, tokenizer, empty,",
          "1051:                 decrypter, context, true, false, content_stream);",
          "1052:      break;",
          "1055:      object = parseInternal(",
          "1056:   input, object_description, tokenizer, empty,",
          "1057:                 decrypter, context, false, true, content_stream);",
          "",
          "[Added Lines]",
          "1048:             olist_stack.push_back(std::vector<QPDFObjectHandle>());",
          "1049:             state = st_start;",
          "1050:             offset_stack.push_back(input->tell());",
          "1051:             state_stack.push_back(",
          "1052:                 (token.getType() == QPDFTokenizer::tt_array_open) ?",
          "1053:                 st_array : st_dictionary);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1084:                 {",
          "1085:                     object = QPDFObjectHandle::newOperator(value);",
          "1086:                 }",
          "1093:   {",
          "1094:                     if (context == 0)",
          "1095:                     {",
          "",
          "[Removed Lines]",
          "1087:   else if ((value == \"R\") && (in_array || in_dictionary) &&",
          "1088:       (olist.size() >= 2) &&",
          "1089:                     (! olist.at(olist.size() - 1).isIndirect()) &&",
          "1090:       (olist.at(olist.size() - 1).isInteger()) &&",
          "1091:                     (! olist.at(olist.size() - 2).isIndirect()) &&",
          "1092:       (olist.at(olist.size() - 2).isInteger()))",
          "",
          "[Added Lines]",
          "1083:   else if ((value == \"R\") && (state != st_top) &&",
          "1084:                          (olist.size() >= 2) &&",
          "1085:                          (! olist.at(olist.size() - 1).isIndirect()) &&",
          "1086:                          (olist.at(olist.size() - 1).isInteger()) &&",
          "1087:                          (! olist.at(olist.size() - 2).isIndirect()) &&",
          "1088:                          (olist.at(olist.size() - 2).isInteger()))",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1106:       olist.pop_back();",
          "1107:       olist.pop_back();",
          "1108:   }",
          "1111:   {",
          "",
          "[Removed Lines]",
          "1109:   else if ((value == \"endobj\") &&",
          "1110:     (! (in_array || in_dictionary)))",
          "",
          "[Added Lines]",
          "1105:   else if ((value == \"endobj\") && (state == st_top))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1153:      break;",
          "1154:  }",
          "1170:             object = newNull();",
          "1190:         {",
          "1192:             {",
          "1194:             }",
          "1204:             {",
          "1208:                 {",
          "1214:                 }",
          "1224:             }",
          "1226:             {",
          "1235:             }",
          "1236:             else",
          "1237:             {",
          "1239:             }",
          "1241:         }",
          "1243:     }",
          "1245:     return object;",
          "",
          "[Removed Lines]",
          "1156:  if (in_dictionary || in_array)",
          "1157:  {",
          "1158:      if (! done)",
          "1159:      {",
          "1160:   olist.push_back(object);",
          "1161:      }",
          "1162:  }",
          "1163:  else if (! object.isInitialized())",
          "1164:  {",
          "1165:             warn(context,",
          "1166:                  QPDFExc(qpdf_e_damaged_pdf, input->getName(),",
          "1167:                          object_description,",
          "1168:                          input->getLastOffset(),",
          "1169:                          \"parse error while reading object\"));",
          "1171:  }",
          "1172:  else",
          "1173:  {",
          "1174:      done = true;",
          "1175:  }",
          "1176:     }",
          "1178:     if (in_array)",
          "1179:     {",
          "1180:  object = newArray(olist);",
          "1181:     }",
          "1182:     else if (in_dictionary)",
          "1183:     {",
          "1187:         std::set<std::string> names;",
          "1188:         for (std::vector<QPDFObjectHandle>::iterator iter = olist.begin();",
          "1189:              iter != olist.end(); ++iter)",
          "1191:             if ((! (*iter).isIndirect()) && (*iter).isName())",
          "1193:                 names.insert((*iter).getName());",
          "1195:         }",
          "1197:         std::map<std::string, QPDFObjectHandle> dict;",
          "1198:         int next_fake_key = 1;",
          "1199:         for (unsigned int i = 0; i < olist.size(); ++i)",
          "1200:         {",
          "1201:             QPDFObjectHandle key_obj = olist.at(i);",
          "1202:             QPDFObjectHandle val;",
          "1203:             if (key_obj.isIndirect() || (! key_obj.isName()))",
          "1205:                 bool found_fake = false;",
          "1206:                 std::string candidate;",
          "1207:                 while (! found_fake)",
          "1209:                     candidate =",
          "1210:                         \"/QPDFFake\" + QUtil::int_to_string(next_fake_key++);",
          "1211:                     found_fake = (names.count(candidate) == 0);",
          "1212:                     QTC::TC(\"qpdf\", \"QPDFObjectHandle found fake\",",
          "1213:                             (found_fake ? 0 : 1));",
          "1215:                 warn(context,",
          "1216:                      QPDFExc(",
          "1217:                          qpdf_e_damaged_pdf,",
          "1218:                          input->getName(), object_description, offset,",
          "1219:                          \"expected dictionary key but found\"",
          "1220:                          \" non-name object; inserting key \" +",
          "1221:                          candidate));",
          "1222:                 val = key_obj;",
          "1223:                 key_obj = newName(candidate);",
          "1225:             else if (i + 1 >= olist.size())",
          "1227:                 QTC::TC(\"qpdf\", \"QPDFObjectHandle no val for last key\");",
          "1228:                 warn(context,",
          "1229:                      QPDFExc(",
          "1230:                          qpdf_e_damaged_pdf,",
          "1231:                          input->getName(), object_description, offset,",
          "1232:                          \"dictionary ended prematurely; using null as value\"",
          "1233:                          \" for last key\"));",
          "1234:                 val = newNull();",
          "1238:                 val = olist.at(++i);",
          "1240:             dict[key_obj.getName()] = val;",
          "1242:         object = newDictionary(dict);",
          "",
          "[Added Lines]",
          "1151:         if ((! object.isInitialized()) &&",
          "1152:             (! ((state == st_start) ||",
          "1153:                 (state == st_stop) ||",
          "1154:                 (state == st_eof))))",
          "1155:         {",
          "1156:             throw std::logic_error(",
          "1157:                 \"QPDFObjectHandle::parseInternal: \"",
          "1158:                 \"unexpected uninitialized object\");",
          "1160:         }",
          "1162:         switch (state)",
          "1164:           case st_eof:",
          "1165:             if (state_stack.size() > 1)",
          "1167:                 warn(context,",
          "1168:                      QPDFExc(qpdf_e_damaged_pdf, input->getName(),",
          "1169:                              object_description,",
          "1170:                              input->getLastOffset(),",
          "1171:                              \"parse error while reading object\"));",
          "1173:             done = true;",
          "1175:             break;",
          "1177:           case st_dictionary:",
          "1178:           case st_array:",
          "1179:             olist.push_back(object);",
          "1180:             break;",
          "1182:           case st_top:",
          "1183:             done = true;",
          "1184:             break;",
          "1186:           case st_start:",
          "1187:             break;",
          "1189:           case st_stop:",
          "1190:             if ((state_stack.size() < 2) || (olist_stack.size() < 2))",
          "1191:             {",
          "1192:                 throw std::logic_error(",
          "1193:                     \"QPDFObjectHandle::parseInternal: st_stop encountered\"",
          "1194:                     \" with insufficient elements in stack\");",
          "1195:             }",
          "1196:             state_e old_state = state_stack.back();",
          "1197:             state_stack.pop_back();",
          "1198:             if (old_state == st_array)",
          "1200:                 object = newArray(olist);",
          "1201:             }",
          "1202:             else if (old_state == st_dictionary)",
          "1203:             {",
          "1207:                 std::set<std::string> names;",
          "1208:                 for (std::vector<QPDFObjectHandle>::iterator iter =",
          "1209:                          olist.begin();",
          "1210:                      iter != olist.end(); ++iter)",
          "1211:                 {",
          "1212:                     if ((! (*iter).isIndirect()) && (*iter).isName())",
          "1213:                     {",
          "1214:                         names.insert((*iter).getName());",
          "1215:                     }",
          "1216:                 }",
          "1218:                 std::map<std::string, QPDFObjectHandle> dict;",
          "1219:                 int next_fake_key = 1;",
          "1220:                 for (unsigned int i = 0; i < olist.size(); ++i)",
          "1222:                     QPDFObjectHandle key_obj = olist.at(i);",
          "1223:                     QPDFObjectHandle val;",
          "1224:                     if (key_obj.isIndirect() || (! key_obj.isName()))",
          "1225:                     {",
          "1226:                         bool found_fake = false;",
          "1227:                         std::string candidate;",
          "1228:                         while (! found_fake)",
          "1229:                         {",
          "1230:                             candidate =",
          "1231:                                 \"/QPDFFake\" +",
          "1232:                                 QUtil::int_to_string(next_fake_key++);",
          "1233:                             found_fake = (names.count(candidate) == 0);",
          "1234:                             QTC::TC(\"qpdf\", \"QPDFObjectHandle found fake\",",
          "1235:                                     (found_fake ? 0 : 1));",
          "1236:                         }",
          "1237:                         warn(context,",
          "1238:                              QPDFExc(",
          "1239:                                  qpdf_e_damaged_pdf,",
          "1240:                                  input->getName(), object_description, offset,",
          "1241:                                  \"expected dictionary key but found\"",
          "1242:                                  \" non-name object; inserting key \" +",
          "1243:                                  candidate));",
          "1244:                         val = key_obj;",
          "1245:                         key_obj = newName(candidate);",
          "1246:                     }",
          "1247:                     else if (i + 1 >= olist.size())",
          "1248:                     {",
          "1249:                         QTC::TC(\"qpdf\", \"QPDFObjectHandle no val for last key\");",
          "1250:                         warn(context,",
          "1251:                              QPDFExc(",
          "1252:                                  qpdf_e_damaged_pdf,",
          "1253:                                  input->getName(), object_description, offset,",
          "1254:                                  \"dictionary ended prematurely; \"",
          "1255:                                  \"using null as value for last key\"));",
          "1256:                         val = newNull();",
          "1257:                     }",
          "1258:                     else",
          "1259:                     {",
          "1260:                         val = olist.at(++i);",
          "1261:                     }",
          "1262:                     dict[key_obj.getName()] = val;",
          "1264:                 object = newDictionary(dict);",
          "1266:             olist_stack.pop_back();",
          "1267:             offset_stack.pop_back();",
          "1268:             if (state_stack.back() == st_top)",
          "1270:                 done = true;",
          "1274:                 olist_stack.back().push_back(object);",
          "",
          "---------------"
        ],
        "qpdf/qtest/qpdf.test||qpdf/qtest/qpdf.test": [
          "File: qpdf/qtest/qpdf.test -> qpdf/qtest/qpdf.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:     [\"141a\", \"/W entry size 0\", 2],",
          "222:     [\"141b\", \"/W entry size 0\", 2],",
          "223:     [\"143\", \"self-referential ostream\", 3],",
          "224:     [\"149\", \"xref prev pointer loop\", 3],",
          "225:     );",
          "226: $n_tests += scalar(@bug_tests);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     [\"146\", \"very deeply nested array\", 2],",
          "",
          "---------------"
        ]
      }
    }
  ]
}