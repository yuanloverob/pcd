{
  "cve_id": "CVE-2014-1874",
  "cve_desc": "The security_context_to_sid_core function in security/selinux/ss/services.c in the Linux kernel before 3.13.4 allows local users to cause a denial of service (system crash) by leveraging the CAP_MAC_ADMIN capability to set a zero-length security context.",
  "repo": "torvalds/linux",
  "patch_hash": "2172fa709ab32ca60e86179dc67d0857be8e2c98",
  "patch_info": {
    "commit_hash": "2172fa709ab32ca60e86179dc67d0857be8e2c98",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/2172fa709ab32ca60e86179dc67d0857be8e2c98",
    "files": [
      "security/selinux/ss/services.c"
    ],
    "message": "SELinux:  Fix kernel BUG on empty security contexts.\n\nSetting an empty security context (length=0) on a file will\nlead to incorrectly dereferencing the type and other fields\nof the security context structure, yielding a kernel BUG.\nAs a zero-length security context is never valid, just reject\nall such security contexts whether coming from userspace\nvia setxattr or coming from the filesystem upon a getxattr\nrequest by SELinux.\n\nSetting a security context value (empty or otherwise) unknown to\nSELinux in the first place is only possible for a root process\n(CAP_MAC_ADMIN), and, if running SELinux in enforcing mode, only\nif the corresponding SELinux mac_admin permission is also granted\nto the domain by policy.  In Fedora policies, this is only allowed for\nspecific domains such as livecd for setting down security contexts\nthat are not defined in the build host policy.\n\nReproducer:\nsu\nsetenforce 0\ntouch foo\nsetfattr -n security.selinux foo\n\nCaveat:\nRelabeling or removing foo after doing the above may not be possible\nwithout booting with SELinux disabled.  Any subsequent access to foo\nafter doing the above will also trigger the BUG.\n\nBUG output from Matthew Thode:\n[  473.893141] ------------[ cut here ]------------\n[  473.962110] kernel BUG at security/selinux/ss/services.c:654!\n[  473.995314] invalid opcode: 0000 [#6] SMP\n[  474.027196] Modules linked in:\n[  474.058118] CPU: 0 PID: 8138 Comm: ls Tainted: G      D   I\n3.13.0-grsec #1\n[  474.116637] Hardware name: Supermicro X8ST3/X8ST3, BIOS 2.0\n07/29/10\n[  474.149768] task: ffff8805f50cd010 ti: ffff8805f50cd488 task.ti:\nffff8805f50cd488\n[  474.183707] RIP: 0010:[<ffffffff814681c7>]  [<ffffffff814681c7>]\ncontext_struct_compute_av+0xce/0x308\n[  474.219954] RSP: 0018:ffff8805c0ac3c38  EFLAGS: 00010246\n[  474.252253] RAX: 0000000000000000 RBX: ffff8805c0ac3d94 RCX:\n0000000000000100\n[  474.287018] RDX: ffff8805e8aac000 RSI: 00000000ffffffff RDI:\nffff8805e8aaa000\n[  474.321199] RBP: ffff8805c0ac3cb8 R08: 0000000000000010 R09:\n0000000000000006\n[  474.357446] R10: 0000000000000000 R11: ffff8805c567a000 R12:\n0000000000000006\n[  474.419191] R13: ffff8805c2b74e88 R14: 00000000000001da R15:\n0000000000000000\n[  474.453816] FS:  00007f2e75220800(0000) GS:ffff88061fc00000(0000)\nknlGS:0000000000000000\n[  474.489254] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  474.522215] CR2: 00007f2e74716090 CR3: 00000005c085e000 CR4:\n00000000000207f0\n[  474.556058] Stack:\n[  474.584325]  ffff8805c0ac3c98 ffffffff811b549b ffff8805c0ac3c98\nffff8805f1190a40\n[  474.618913]  ffff8805a6202f08 ffff8805c2b74e88 00068800d0464990\nffff8805e8aac860\n[  474.653955]  ffff8805c0ac3cb8 000700068113833a ffff880606c75060\nffff8805c0ac3d94\n[  474.690461] Call Trace:\n[  474.723779]  [<ffffffff811b549b>] ? lookup_fast+0x1cd/0x22a\n[  474.778049]  [<ffffffff81468824>] security_compute_av+0xf4/0x20b\n[  474.811398]  [<ffffffff8196f419>] avc_compute_av+0x2a/0x179\n[  474.843813]  [<ffffffff8145727b>] avc_has_perm+0x45/0xf4\n[  474.875694]  [<ffffffff81457d0e>] inode_has_perm+0x2a/0x31\n[  474.907370]  [<ffffffff81457e76>] selinux_inode_getattr+0x3c/0x3e\n[  474.938726]  [<ffffffff81455cf6>] security_inode_getattr+0x1b/0x22\n[  474.970036]  [<ffffffff811b057d>] vfs_getattr+0x19/0x2d\n[  475.000618]  [<ffffffff811b05e5>] vfs_fstatat+0x54/0x91\n[  475.030402]  [<ffffffff811b063b>] vfs_lstat+0x19/0x1b\n[  475.061097]  [<ffffffff811b077e>] SyS_newlstat+0x15/0x30\n[  475.094595]  [<ffffffff8113c5c1>] ? __audit_syscall_entry+0xa1/0xc3\n[  475.148405]  [<ffffffff8197791e>] system_call_fastpath+0x16/0x1b\n[  475.179201] Code: 00 48 85 c0 48 89 45 b8 75 02 0f 0b 48 8b 45 a0 48\n8b 3d 45 d0 b6 00 8b 40 08 89 c6 ff ce e8 d1 b0 06 00 48 85 c0 49 89 c7\n75 02 <0f> 0b 48 8b 45 b8 4c 8b 28 eb 1e 49 8d 7d 08 be 80 01 00 00 e8\n[  475.255884] RIP  [<ffffffff814681c7>]\ncontext_struct_compute_av+0xce/0x308\n[  475.296120]  RSP <ffff8805c0ac3c38>\n[  475.328734] ---[ end trace f076482e9d754adc ]---\n\nReported-by:  Matthew Thode <mthode@mthode.org>\nSigned-off-by: Stephen Smalley <sds@tycho.nsa.gov>\nCc: stable@vger.kernel.org\nSigned-off-by: Paul Moore <pmoore@redhat.com>",
    "before_after_code_files": [
      "security/selinux/ss/services.c||security/selinux/ss/services.c"
    ]
  },
  "patch_diff": {
    "security/selinux/ss/services.c||security/selinux/ss/services.c": [
      "File: security/selinux/ss/services.c -> security/selinux/ss/services.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1232:  struct context context;",
      "1233:  int rc = 0;",
      "1235:  if (!ss_initialized) {",
      "1236:   int i;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1236:  if (!scontext_len)",
      "1237:   return -EINVAL;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c60bdd8334804720e9d236c543612c998baaee0d",
      "candidate_info": {
        "commit_hash": "c60bdd8334804720e9d236c543612c998baaee0d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/c60bdd8334804720e9d236c543612c998baaee0d",
        "files": [
          "drivers/net/wireless/ath/ath10k/mac.c"
        ],
        "message": "ath10k: properly return err from start()\n\nIf recovery failed ath10k returned 0 (success) and\nmac80211 continued to call other driver callbacks.\nThis caused null dereference.\n\nThis is how the failure looked like:\n\nath10k: ctl_resp never came in (-110)\nath10k: failed to connect to HTC: -110\nath10k: could not init core (-110)\nBUG: unable to handle kernel NULL pointer dereference at           (null)\nIP: [<ffffffffa0b355c1>] ath10k_ce_send+0x1d/0x15d [ath10k_pci]\nPGD 0\nOops: 0000 [#1] PREEMPT SMP\nModules linked in: ath10k_pci ath10k_core ath5k ath9k ath9k_common ath9k_hw ath mac80211 cfg80211 nf_nat_ipv4 ]\nCPU: 1 PID: 36 Comm: kworker/1:1 Tainted: G        WC   3.13.0-rc8-wl-ath+ #8\nHardware name: To be filled by O.E.M. To be filled by O.E.M./HURONRIVER, BIOS 4.6.5 05/02/2012\nWorkqueue: events ieee80211_restart_work [mac80211]\ntask: ffff880215b521c0 ti: ffff880215e18000 task.ti: ffff880215e18000\nRIP: 0010:[<ffffffffa0b355c1>]  [<ffffffffa0b355c1>] ath10k_ce_send+0x1d/0x15d [ath10k_pci]\nRSP: 0018:ffff880215e19af8  EFLAGS: 00010292\nRAX: ffff880215e19b10 RBX: 0000000000000000 RCX: 0000000000000018\nRDX: 00000000d9ccf800 RSI: ffff8800c965ad00 RDI: 0000000000000000\nRBP: ffff880215e19b58 R08: 0000000000000002 R09: 0000000000000000\nR10: ffffffff812e1a23 R11: 0000000000000292 R12: 0000000000000018\nR13: 0000000000000000 R14: 0000000000000002 R15: ffff88021562d700\nFS:  0000000000000000(0000) GS:ffff88021fa80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 0000000001a0d000 CR4: 00000000000407e0\nStack:\n d9ccf8000d47df40 ffffffffa0b367a0 ffff880215e19b10 0000000000000010\n ffff880215e19b68 ffff880215e19b28 0000000000000018 ffff8800c965ad00\n 0000000000000018 0000000000000000 0000000000000002 ffff88021562d700\nCall Trace:\n [<ffffffffa0b3251d>] ath10k_pci_hif_send_head+0xa7/0xcb [ath10k_pci]\n [<ffffffffa0b16cbe>] ath10k_htc_send+0x23d/0x2d0 [ath10k_core]\n [<ffffffffa0b1a169>] ath10k_wmi_cmd_send_nowait+0x5d/0x85 [ath10k_core]\n [<ffffffffa0b1aaef>] ath10k_wmi_cmd_send+0x62/0x115 [ath10k_core]\n [<ffffffff814e8abd>] ? __netdev_alloc_skb+0x4b/0x9b\n [<ffffffffa0b1c438>] ath10k_wmi_vdev_set_param+0x91/0xa3 [ath10k_core]\n [<ffffffffa0b0e0d5>] ath10k_mac_set_rts+0x3e/0x40 [ath10k_core]\n [<ffffffffa0b0e1d0>] ath10k_set_frag_threshold+0x5e/0x9c [ath10k_core]\n [<ffffffffa09d60eb>] ieee80211_reconfig+0x12a/0x7b3 [mac80211]\n [<ffffffff815a8069>] ? mutex_unlock+0x9/0xb\n [<ffffffffa09b3a40>] ieee80211_restart_work+0x5e/0x68 [mac80211]\n [<ffffffff810c01d0>] process_one_work+0x1d7/0x2fc\n [<ffffffff810c0166>] ? process_one_work+0x16d/0x2fc\n [<ffffffff810c06c8>] worker_thread+0x12e/0x1fb\n [<ffffffff810c059a>] ? rescuer_thread+0x27b/0x27b\n [<ffffffff810c5aee>] kthread+0xb5/0xbd\n [<ffffffff815a9220>] ? _raw_spin_unlock_irq+0x28/0x42\n [<ffffffff810c5a39>] ? __kthread_parkme+0x5c/0x5c\n [<ffffffff815ae04c>] ret_from_fork+0x7c/0xb0\n [<ffffffff810c5a39>] ? __kthread_parkme+0x5c/0x5c\nCode: df ff d0 48 83 c4 18 5b 41 5c 41 5d 5d c3 55 48 89 e5 41 57 41 56 45 89 c6 41 55 41 54 41 89 cc 53 48 89\nRIP  [<ffffffffa0b355c1>] ath10k_ce_send+0x1d/0x15d [ath10k_pci]\n RSP <ffff880215e19af8>\nCR2: 0000000000000000\n\nReported-By: Ben Greear <greearb@candelatech.com>\nSigned-off-by: Michal Kazior <michal.kazior@tieto.com>\nSigned-off-by: Kalle Valo <kvalo@qca.qualcomm.com>",
        "before_after_code_files": [
          "drivers/net/wireless/ath/ath10k/mac.c||drivers/net/wireless/ath/ath10k/mac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/ath/ath10k/mac.c||drivers/net/wireless/ath/ath10k/mac.c": [
          "File: drivers/net/wireless/ath/ath10k/mac.c -> drivers/net/wireless/ath/ath10k/mac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2187:        ret);",
          "2189:  ath10k_regd_update(ar);",
          "2191: exit:",
          "2192:  mutex_unlock(&ar->conf_mutex);",
          "2194: }",
          "2196: static void ath10k_stop(struct ieee80211_hw *hw)",
          "",
          "[Removed Lines]",
          "2193:  return 0;",
          "",
          "[Added Lines]",
          "2190:  ret = 0;",
          "2194:  return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0368dfd01ae3b7647ef9b2f0525fdefd5e0d28e1",
      "candidate_info": {
        "commit_hash": "0368dfd01ae3b7647ef9b2f0525fdefd5e0d28e1",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0368dfd01ae3b7647ef9b2f0525fdefd5e0d28e1",
        "files": [
          "lib/genalloc.c"
        ],
        "message": "lib/genalloc.c: add check gen_pool_dma_alloc() if dma pointer is not NULL\n\nIn the gen_pool_dma_alloc() the dma pointer can be NULL and while\nassigning gen_pool_virt_to_phys(pool, vaddr) to dma caused the following\ncrash on da850 evm:\n\n   Unable to handle kernel NULL pointer dereference at virtual address 00000000\n   Internal error: Oops: 805 [#1] PREEMPT ARM\n   Modules linked in:\n   CPU: 0 PID: 1 Comm: swapper Tainted: G        W    3.13.0-rc1-00001-g0609e45-dirty #5\n   task: c4830000 ti: c4832000 task.ti: c4832000\n   PC is at gen_pool_dma_alloc+0x30/0x3c\n   LR is at gen_pool_virt_to_phys+0x74/0x80\n   Process swapper, call trace:\n     gen_pool_dma_alloc+0x30/0x3c\n     davinci_pm_probe+0x40/0xa8\n     platform_drv_probe+0x1c/0x4c\n     driver_probe_device+0x98/0x22c\n     __driver_attach+0x8c/0x90\n     bus_for_each_dev+0x6c/0x8c\n     bus_add_driver+0x124/0x1d4\n     driver_register+0x78/0xf8\n     platform_driver_probe+0x20/0xa4\n     davinci_init_late+0xc/0x14\n     init_machine_late+0x1c/0x28\n     do_one_initcall+0x34/0x15c\n     kernel_init_freeable+0xe4/0x1ac\n     kernel_init+0x8/0xec\n\nThis patch fixes the above.\n\n[akpm@linux-foundation.org: update kerneldoc]\nSigned-off-by: Lad, Prabhakar <prabhakar.csengg@gmail.com>\nCc: Philipp Zabel <p.zabel@pengutronix.de>\nCc: Nicolin Chen <b42378@freescale.com>\nCc: Joe Perches <joe@perches.com>\nCc: Sachin Kamat <sachin.kamat@linaro.org>\nCc: <stable@vger.kernel.org>\t[3.13.x]\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
        "before_after_code_files": [
          "lib/genalloc.c||ligenalloc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/genalloc.c||ligenalloc.c": [
          "File: lib/genalloc.c -> ligenalloc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "334:  if (!vaddr)",
          "335:   return NULL;",
          "339:  return (void *)vaddr;",
          "340: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "081cd62a010f97b5bc1d2b0cd123c5abc692b68a",
      "candidate_info": {
        "commit_hash": "081cd62a010f97b5bc1d2b0cd123c5abc692b68a",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/081cd62a010f97b5bc1d2b0cd123c5abc692b68a",
        "files": [
          "arch/x86/platform/efi/efi-bgrt.c"
        ],
        "message": "x86/efi: Allow mapping BGRT on x86-32\n\nCONFIG_X86_32 doesn't map the boot services regions into the EFI memory\nmap (see commit 700870119f49 (\"x86, efi: Don't map Boot Services on\ni386\")), and so efi_lookup_mapped_addr() will fail to return a valid\naddress. Executing the ioremap() path in efi_bgrt_init() causes the\nfollowing warning on x86-32 because we're trying to ioremap() RAM,\n\n WARNING: CPU: 0 PID: 0 at arch/x86/mm/ioremap.c:102 __ioremap_caller+0x2ad/0x2c0()\n Modules linked in:\n CPU: 0 PID: 0 Comm: swapper/0 Not tainted 3.13.0-0.rc5.git0.1.2.fc21.i686 #1\n Hardware name: DellInc. Venue 8 Pro 5830/09RP78, BIOS A02 10/17/2013\n  00000000 00000000 c0c0df08 c09a5196 00000000 c0c0df38 c0448c1e c0b41310\n  00000000 00000000 c0b37bc1 00000066 c043bbfd c043bbfd 00e7dfe0 00073eff\n  00073eff c0c0df48 c0448ce2 00000009 00000000 c0c0df9c c043bbfd 00078d88\n Call Trace:\n  [<c09a5196>] dump_stack+0x41/0x52\n  [<c0448c1e>] warn_slowpath_common+0x7e/0xa0\n  [<c043bbfd>] ? __ioremap_caller+0x2ad/0x2c0\n  [<c043bbfd>] ? __ioremap_caller+0x2ad/0x2c0\n  [<c0448ce2>] warn_slowpath_null+0x22/0x30\n  [<c043bbfd>] __ioremap_caller+0x2ad/0x2c0\n  [<c0718f92>] ? acpi_tb_verify_table+0x1c/0x43\n  [<c0719c78>] ? acpi_get_table_with_size+0x63/0xb5\n  [<c087cd5e>] ? efi_lookup_mapped_addr+0xe/0xf0\n  [<c043bc2b>] ioremap_nocache+0x1b/0x20\n  [<c0cb01c8>] ? efi_bgrt_init+0x83/0x10c\n  [<c0cb01c8>] efi_bgrt_init+0x83/0x10c\n  [<c0cafd82>] efi_late_init+0x8/0xa\n  [<c0c9bab2>] start_kernel+0x3ae/0x3c3\n  [<c0c9b53b>] ? repair_env_string+0x51/0x51\n  [<c0c9b378>] i386_start_kernel+0x12e/0x131\n\nSwitch to using early_memremap(), which won't trigger this warning, and\nhas the added benefit of more accurately conveying what we're trying to\ndo - map a chunk of memory.\n\nThis patch addresses the following bug report,\n\n  https://bugzilla.kernel.org/show_bug.cgi?id=67911\n\nReported-by: Adam Williamson <awilliam@redhat.com>\nCc: Josh Triplett <josh@joshtriplett.org>\nCc: Matthew Garrett <mjg59@srcf.ucam.org>\nCc: Rafael J. Wysocki <rjw@rjwysocki.net>\nSigned-off-by: Matt Fleming <matt.fleming@intel.com>",
        "before_after_code_files": [
          "arch/x86/platform/efi/efi-bgrt.c||arch/x86/platform/efi/efi-bgrt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/x86/platform/efi/efi-bgrt.c||arch/x86/platform/efi/efi-bgrt.c": [
          "File: arch/x86/platform/efi/efi-bgrt.c -> arch/x86/platform/efi/efi-bgrt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:  image = efi_lookup_mapped_addr(bgrt_tab->image_address);",
          "51:  if (!image) {",
          "53:   ioremapped = true;",
          "54:   if (!image)",
          "55:    return;",
          "",
          "[Removed Lines]",
          "52:   image = ioremap(bgrt_tab->image_address, sizeof(bmp_header));",
          "",
          "[Added Lines]",
          "52:   image = early_memremap(bgrt_tab->image_address,",
          "53:            sizeof(bmp_header));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:  memcpy_fromio(&bmp_header, image, sizeof(bmp_header));",
          "59:  if (ioremapped)",
          "61:  bgrt_image_size = bmp_header.size;",
          "63:  bgrt_image = kmalloc(bgrt_image_size, GFP_KERNEL);",
          "",
          "[Removed Lines]",
          "60:   iounmap(image);",
          "",
          "[Added Lines]",
          "61:   early_iounmap(image, sizeof(bmp_header));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:   return;",
          "67:  if (ioremapped) {",
          "69:   if (!image) {",
          "70:    kfree(bgrt_image);",
          "71:    bgrt_image = NULL;",
          "",
          "[Removed Lines]",
          "68:   image = ioremap(bgrt_tab->image_address, bmp_header.size);",
          "",
          "[Added Lines]",
          "69:   image = early_memremap(bgrt_tab->image_address,",
          "70:            bmp_header.size);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "76:  memcpy_fromio(bgrt_image, image, bgrt_image_size);",
          "77:  if (ioremapped)",
          "79: }",
          "",
          "[Removed Lines]",
          "78:   iounmap(image);",
          "",
          "[Added Lines]",
          "80:   early_iounmap(image, bmp_header.size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a9c8e4beeeb64c22b84c803747487857fe424b68",
      "candidate_info": {
        "commit_hash": "a9c8e4beeeb64c22b84c803747487857fe424b68",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a9c8e4beeeb64c22b84c803747487857fe424b68",
        "files": [
          "arch/x86/include/asm/pgtable.h",
          "arch/x86/xen/mmu.c"
        ],
        "message": "xen: properly account for _PAGE_NUMA during xen pte translations\n\nSteven Noonan forwarded a users report where they had a problem starting\nvsftpd on a Xen paravirtualized guest, with this in dmesg:\n\n  BUG: Bad page map in process vsftpd  pte:8000000493b88165 pmd:e9cc01067\n  page:ffffea00124ee200 count:0 mapcount:-1 mapping:     (null) index:0x0\n  page flags: 0x2ffc0000000014(referenced|dirty)\n  addr:00007f97eea74000 vm_flags:00100071 anon_vma:ffff880e98f80380 mapping:          (null) index:7f97eea74\n  CPU: 4 PID: 587 Comm: vsftpd Not tainted 3.12.7-1-ec2 #1\n  Call Trace:\n    dump_stack+0x45/0x56\n    print_bad_pte+0x22e/0x250\n    unmap_single_vma+0x583/0x890\n    unmap_vmas+0x65/0x90\n    exit_mmap+0xc5/0x170\n    mmput+0x65/0x100\n    do_exit+0x393/0x9e0\n    do_group_exit+0xcc/0x140\n    SyS_exit_group+0x14/0x20\n    system_call_fastpath+0x1a/0x1f\n  Disabling lock debugging due to kernel taint\n  BUG: Bad rss-counter state mm:ffff880e9ca60580 idx:0 val:-1\n  BUG: Bad rss-counter state mm:ffff880e9ca60580 idx:1 val:1\n\nThe issue could not be reproduced under an HVM instance with the same\nkernel, so it appears to be exclusive to paravirtual Xen guests.  He\nbisected the problem to commit 1667918b6483 (\"mm: numa: clear numa\nhinting information on mprotect\") that was also included in 3.12-stable.\n\nThe problem was related to how xen translates ptes because it was not\naccounting for the _PAGE_NUMA bit.  This patch splits pte_present to add\na pteval_present helper for use by xen so both bare metal and xen use\nthe same code when checking if a PTE is present.\n\n[mgorman@suse.de: wrote changelog, proposed minor modifications]\n[akpm@linux-foundation.org: fix typo in comment]\nReported-by: Steven Noonan <steven@uplinklabs.net>\nTested-by: Steven Noonan <steven@uplinklabs.net>\nSigned-off-by: Elena Ufimtseva <ufimtseva@gmail.com>\nSigned-off-by: Mel Gorman <mgorman@suse.de>\nReviewed-by: David Vrabel <david.vrabel@citrix.com>\nAcked-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nCc: <stable@vger.kernel.org>\t[3.12+]\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
        "before_after_code_files": [
          "arch/x86/include/asm/pgtable.h||arch/x86/include/asm/pgtable.h",
          "arch/x86/xen/mmu.c||arch/x86/xen/mmu.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/x86/include/asm/pgtable.h||arch/x86/include/asm/pgtable.h": [
          "File: arch/x86/include/asm/pgtable.h -> arch/x86/include/asm/pgtable.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "445:  return a.pte == b.pte;",
          "446: }",
          "448: static inline int pte_present(pte_t a)",
          "449: {",
          "452: }",
          "454: #define pte_accessible pte_accessible",
          "",
          "[Removed Lines]",
          "450:  return pte_flags(a) & (_PAGE_PRESENT | _PAGE_PROTNONE |",
          "451:           _PAGE_NUMA);",
          "",
          "[Added Lines]",
          "448: static inline int pteval_present(pteval_t pteval)",
          "449: {",
          "456:  return pteval & (_PAGE_PRESENT | _PAGE_PROTNONE | _PAGE_NUMA);",
          "457: }",
          "461:  return pteval_present(pte_flags(a));",
          "",
          "---------------"
        ],
        "arch/x86/xen/mmu.c||arch/x86/xen/mmu.c": [
          "File: arch/x86/xen/mmu.c -> arch/x86/xen/mmu.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "366: static pteval_t pte_mfn_to_pfn(pteval_t val)",
          "367: {",
          "369:   unsigned long mfn = (val & PTE_PFN_MASK) >> PAGE_SHIFT;",
          "370:   unsigned long pfn = mfn_to_pfn(mfn);",
          "",
          "[Removed Lines]",
          "368:  if (val & _PAGE_PRESENT) {",
          "",
          "[Added Lines]",
          "368:  if (pteval_present(val)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "382: static pteval_t pte_pfn_to_mfn(pteval_t val)",
          "383: {",
          "385:   unsigned long pfn = (val & PTE_PFN_MASK) >> PAGE_SHIFT;",
          "386:   pteval_t flags = val & PTE_FLAGS_MASK;",
          "387:   unsigned long mfn;",
          "",
          "[Removed Lines]",
          "384:  if (val & _PAGE_PRESENT) {",
          "",
          "[Added Lines]",
          "384:  if (pteval_present(val)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f3de9cb1ca6ce347393c4789b3a6142f96827f18",
      "candidate_info": {
        "commit_hash": "f3de9cb1ca6ce347393c4789b3a6142f96827f18",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f3de9cb1ca6ce347393c4789b3a6142f96827f18",
        "files": [
          "drivers/crypto/talitos.c"
        ],
        "message": "crypto: talitos: init the priv->alg_list more earlier in talitos_probe()\n\nIn function talitos_probe(), it will jump to err_out when getting an\nerror in talitos_probe_irq(). Then the uninitialized list head\npriv->alg_list will be used in function talitos_remove(). In this case\nwe would get a call trace like the following. So move up the\ninitialization of priv->alg_list.\n\n  Unable to handle kernel paging request for data at address 0x00000000\n  Faulting instruction address: 0xc0459ff4\n  Oops: Kernel access of bad area, sig: 11 [#1]\n  SMP NR_CPUS=8 P1020 RDB\n  Modules linked in:\n  CPU: 1 PID: 1 Comm: swapper/0 Tainted: G        W    3.13.0-08789-g54c0a4b46150 #33\n  task: cf050000 ti: cf04c000 task.ti: cf04c000\n  NIP: c0459ff4 LR: c0459fd4 CTR: c02f2438\n  REGS: cf04dcb0 TRAP: 0300   Tainted: G        W     (3.13.0-08789-g54c0a4b46150)\n  MSR: 00029000 <CE,EE,ME>  CR: 82000028  XER: 20000000\n  DEAR: 00000000 ESR: 00000000\n  GPR00: c045ac28 cf04dd60 cf050000 cf2579c0 00021000 00000000 c02f35b0 0000014e\n  GPR08: c07e702c cf104300 c07e702c 0000014e 22000024 00000000 c0002a3c 00000000\n  GPR16: 00000000 00000000 00000000 00000000 00000000 00000000 c082e4e0 000000df\n  GPR24: 00000000 00100100 00200200 cf257a2c cf0efe10 cf2579c0 cf0efe10 00000000\n  NIP [c0459ff4] talitos_remove+0x3c/0x1c8\n  LR [c0459fd4] talitos_remove+0x1c/0x1c8\n  Call Trace:\n  [cf04dd60] [c07485d8] __func__.13331+0x1241c8/0x1391c0 (unreliable)\n  [cf04dd90] [c045ac28] talitos_probe+0x244/0x998\n  [cf04dde0] [c0306a74] platform_drv_probe+0x28/0x68\n  [cf04ddf0] [c0304d38] really_probe+0x78/0x250\n  [cf04de10] [c030505c] __driver_attach+0xc8/0xcc\n  [cf04de30] [c0302e98] bus_for_each_dev+0x6c/0xb8\n  [cf04de60] [c03043cc] bus_add_driver+0x168/0x220\n  [cf04de80] [c0305798] driver_register+0x88/0x130\n  [cf04de90] [c0002458] do_one_initcall+0x14c/0x198\n  [cf04df00] [c079f904] kernel_init_freeable+0x138/0x1d4\n  [cf04df30] [c0002a50] kernel_init+0x14/0x124\n  [cf04df40] [c000ec40] ret_from_kernel_thread+0x5c/0x64\n\nSigned-off-by: Kevin Hao <haokexin@gmail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "drivers/crypto/talitos.c||drivers/crypto/talitos.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/crypto/talitos.c||drivers/crypto/talitos.c": [
          "File: drivers/crypto/talitos.c -> drivers/crypto/talitos.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2637:  if (!priv)",
          "2638:   return -ENOMEM;",
          "2640:  dev_set_drvdata(dev, priv);",
          "2642:  priv->ofdev = ofdev;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2640:  INIT_LIST_HEAD(&priv->alg_list);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2657:         (unsigned long)dev);",
          "2658:  }",
          "2662:  priv->reg = of_iomap(np, 0);",
          "2663:  if (!priv->reg) {",
          "2664:   dev_err(dev, \"failed to of_iomap\\n\");",
          "",
          "[Removed Lines]",
          "2660:  INIT_LIST_HEAD(&priv->alg_list);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}