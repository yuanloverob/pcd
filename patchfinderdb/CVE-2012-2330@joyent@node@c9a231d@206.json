{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "79cbe1fdbbf551438e8395b5e443d12d58338511",
      "candidate_info": {
        "commit_hash": "79cbe1fdbbf551438e8395b5e443d12d58338511",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/79cbe1fdbbf551438e8395b5e443d12d58338511",
        "files": [
          "deps/http_parser/.gitignore",
          "deps/http_parser/README.md",
          "deps/http_parser/http_parser.c",
          "deps/http_parser/http_parser.h",
          "deps/http_parser/test.c"
        ],
        "message": "deps: upgrade http_parser to 8bec3ea",
        "before_after_code_files": [
          "deps/http_parser/http_parser.c||deps/http_parser/http_parser.c",
          "deps/http_parser/http_parser.h||deps/http_parser/http_parser.h",
          "deps/http_parser/test.c||deps/http_parser/test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/http_parser/http_parser.c||deps/http_parser/http_parser.c": [
          "File: deps/http_parser/http_parser.c -> deps/http_parser/http_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "125: static const char *method_strings[] =",
          "151:   };",
          "",
          "[Removed Lines]",
          "126:   { \"DELETE\"",
          "127:   , \"GET\"",
          "128:   , \"HEAD\"",
          "129:   , \"POST\"",
          "130:   , \"PUT\"",
          "131:   , \"CONNECT\"",
          "132:   , \"OPTIONS\"",
          "133:   , \"TRACE\"",
          "134:   , \"COPY\"",
          "135:   , \"LOCK\"",
          "136:   , \"MKCOL\"",
          "137:   , \"MOVE\"",
          "138:   , \"PROPFIND\"",
          "139:   , \"PROPPATCH\"",
          "140:   , \"UNLOCK\"",
          "141:   , \"REPORT\"",
          "142:   , \"MKACTIVITY\"",
          "143:   , \"CHECKOUT\"",
          "144:   , \"MERGE\"",
          "145:   , \"M-SEARCH\"",
          "146:   , \"NOTIFY\"",
          "147:   , \"SUBSCRIBE\"",
          "148:   , \"UNSUBSCRIBE\"",
          "149:   , \"PATCH\"",
          "150:   , \"PURGE\"",
          "",
          "[Added Lines]",
          "126:   {",
          "127: #define XX(num, name, string) #string,",
          "128:   HTTP_METHOD_MAP(XX)",
          "129: #undef XX",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "919:             break;",
          "920:           case 'R': parser->method = HTTP_REPORT; break;",
          "922:           case 'T': parser->method = HTTP_TRACE; break;",
          "923:           case 'U': parser->method = HTTP_UNLOCK; /* or UNSUBSCRIBE */ break;",
          "924:           default:",
          "",
          "[Removed Lines]",
          "921:           case 'S': parser->method = HTTP_SUBSCRIBE; break;",
          "",
          "[Added Lines]",
          "900:           case 'S': parser->method = HTTP_SUBSCRIBE; /* or SEARCH */ break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "965:           } else {",
          "966:             goto error;",
          "967:           }",
          "968:         } else if (parser->index == 1 && parser->method == HTTP_POST) {",
          "969:           if (ch == 'R') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "947:         } else if (parser->method == HTTP_SUBSCRIBE) {",
          "948:           if (parser->index == 1 && ch == 'E') {",
          "949:             parser->method = HTTP_SEARCH;",
          "950:           } else {",
          "951:             goto error;",
          "952:           }",
          "",
          "---------------"
        ],
        "deps/http_parser/http_parser.h||deps/http_parser/http_parser.h": [
          "File: deps/http_parser/http_parser.h -> deps/http_parser/http_parser.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: typedef struct http_parser http_parser;",
          "67: typedef struct http_parser_settings http_parser_settings;",
          "",
          "[Removed Lines]",
          "68: typedef struct http_parser_result http_parser_result;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89: enum http_method",
          "120:   };",
          "",
          "[Removed Lines]",
          "90:   { HTTP_DELETE    = 0",
          "91:   , HTTP_GET",
          "92:   , HTTP_HEAD",
          "93:   , HTTP_POST",
          "94:   , HTTP_PUT",
          "96:   , HTTP_CONNECT",
          "97:   , HTTP_OPTIONS",
          "98:   , HTTP_TRACE",
          "100:   , HTTP_COPY",
          "101:   , HTTP_LOCK",
          "102:   , HTTP_MKCOL",
          "103:   , HTTP_MOVE",
          "104:   , HTTP_PROPFIND",
          "105:   , HTTP_PROPPATCH",
          "106:   , HTTP_UNLOCK",
          "108:   , HTTP_REPORT",
          "109:   , HTTP_MKACTIVITY",
          "110:   , HTTP_CHECKOUT",
          "111:   , HTTP_MERGE",
          "113:   , HTTP_MSEARCH",
          "114:   , HTTP_NOTIFY",
          "115:   , HTTP_SUBSCRIBE",
          "116:   , HTTP_UNSUBSCRIBE",
          "118:   , HTTP_PATCH",
          "119:   , HTTP_PURGE",
          "",
          "[Added Lines]",
          "88: #define HTTP_METHOD_MAP(XX)         \\",
          "89:   XX(0,  DELETE,      DELETE)       \\",
          "90:   XX(1,  GET,         GET)          \\",
          "91:   XX(2,  HEAD,        HEAD)         \\",
          "92:   XX(3,  POST,        POST)         \\",
          "93:   XX(4,  PUT,         PUT)          \\",
          "95:   XX(5,  CONNECT,     CONNECT)      \\",
          "96:   XX(6,  OPTIONS,     OPTIONS)      \\",
          "97:   XX(7,  TRACE,       TRACE)        \\",
          "99:   XX(8,  COPY,        COPY)         \\",
          "100:   XX(9,  LOCK,        LOCK)         \\",
          "101:   XX(10, MKCOL,       MKCOL)        \\",
          "102:   XX(11, MOVE,        MOVE)         \\",
          "103:   XX(12, PROPFIND,    PROPFIND)     \\",
          "104:   XX(13, PROPPATCH,   PROPPATCH)    \\",
          "105:   XX(14, SEARCH,      SEARCH)       \\",
          "106:   XX(15, UNLOCK,      UNLOCK)       \\",
          "108:   XX(16, REPORT,      REPORT)       \\",
          "109:   XX(17, MKACTIVITY,  MKACTIVITY)   \\",
          "110:   XX(18, CHECKOUT,    CHECKOUT)     \\",
          "111:   XX(19, MERGE,       MERGE)        \\",
          "113:   XX(20, MSEARCH,     M-SEARCH)     \\",
          "114:   XX(21, NOTIFY,      NOTIFY)       \\",
          "115:   XX(22, SUBSCRIBE,   SUBSCRIBE)    \\",
          "116:   XX(23, UNSUBSCRIBE, UNSUBSCRIBE)  \\",
          "118:   XX(24, PATCH,       PATCH)        \\",
          "119:   XX(25, PURGE,       PURGE)        \\",
          "122:   {",
          "123: #define XX(num, name, string) HTTP_##name = num,",
          "124:   HTTP_METHOD_MAP(XX)",
          "125: #undef XX",
          "",
          "---------------"
        ],
        "deps/http_parser/test.c||deps/http_parser/test.c": [
          "File: deps/http_parser/test.c -> deps/http_parser/test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "587:   ,.body= \"\"",
          "588:   }",
          "591: , {.name= \"line folding in header value\"",
          "592:   ,.type= HTTP_REQUEST",
          "593:   ,.raw= \"GET / HTTP/1.1\\r\\n\"",
          "",
          "[Removed Lines]",
          "590: #define LINE_FOLDING_IN_HEADER 20",
          "",
          "[Added Lines]",
          "590: #define LINE_FOLDING_IN_HEADER 21",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "616:   }",
          "620: , {.name= \"host terminated by a query string\"",
          "621:   ,.type= HTTP_REQUEST",
          "622:   ,.raw= \"GET http://hypnotoad.org?hail=all HTTP/1.1\\r\\n\"",
          "",
          "[Removed Lines]",
          "619: #define QUERY_TERMINATED_HOST 21",
          "",
          "[Added Lines]",
          "619: #define QUERY_TERMINATED_HOST 22",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "635:   ,.body= \"\"",
          "636:   }",
          "639: , {.name= \"host:port terminated by a query string\"",
          "640:   ,.type= HTTP_REQUEST",
          "641:   ,.raw= \"GET http://hypnotoad.org:1234?hail=all HTTP/1.1\\r\\n\"",
          "",
          "[Removed Lines]",
          "638: #define QUERY_TERMINATED_HOSTPORT 22",
          "",
          "[Added Lines]",
          "638: #define QUERY_TERMINATED_HOSTPORT 23",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "655:   ,.body= \"\"",
          "656:   }",
          "659: , {.name= \"host:port terminated by a space\"",
          "660:   ,.type= HTTP_REQUEST",
          "661:   ,.raw= \"GET http://hypnotoad.org:1234 HTTP/1.1\\r\\n\"",
          "",
          "[Removed Lines]",
          "658: #define SPACE_TERMINATED_HOSTPORT 23",
          "",
          "[Added Lines]",
          "658: #define SPACE_TERMINATED_HOSTPORT 24",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "675:   ,.body= \"\"",
          "676:   }",
          "679: , {.name = \"PATCH request\"",
          "680:   ,.type= HTTP_REQUEST",
          "681:   ,.raw= \"PATCH /file.txt HTTP/1.1\\r\\n\"",
          "",
          "[Removed Lines]",
          "678: #define PATCH_REQ 24",
          "",
          "[Added Lines]",
          "678: #define PATCH_REQ 25",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "703:   ,.body= \"cccccccccc\"",
          "704:   }",
          "707: , {.name = \"connect caps request\"",
          "708:   ,.type= HTTP_REQUEST",
          "709:   ,.raw= \"CONNECT HOME0.NETSCAPE.COM:443 HTTP/1.0\\r\\n\"",
          "",
          "[Removed Lines]",
          "706: #define CONNECT_CAPS_REQUEST 25",
          "",
          "[Added Lines]",
          "706: #define CONNECT_CAPS_REQUEST 26",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "728:   }",
          "730: #if !HTTP_PARSER_STRICT",
          "732: , {.name= \"utf-8 path request\"",
          "733:   ,.type= HTTP_REQUEST",
          "734:   ,.raw= \"GET /\u03b4\u00b6/\u03b4t/pope?q=1#narf HTTP/1.1\\r\\n\"",
          "",
          "[Removed Lines]",
          "731: #define UTF8_PATH_REQ 26",
          "",
          "[Added Lines]",
          "731: #define UTF8_PATH_REQ 27",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "749:   ,.body= \"\"",
          "750:   }",
          "753: , {.name = \"hostname underscore\"",
          "754:   ,.type= HTTP_REQUEST",
          "755:   ,.raw= \"CONNECT home_0.netscape.com:443 HTTP/1.0\\r\\n\"",
          "",
          "[Removed Lines]",
          "752: #define HOSTNAME_UNDERSCORE 27",
          "",
          "[Added Lines]",
          "752: #define HOSTNAME_UNDERSCORE 28",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "779: , {.name = \"eat CRLF between requests, no \\\"Connection: close\\\" header\"",
          "780:   ,.raw= \"POST / HTTP/1.1\\r\\n\"",
          "781:          \"Host: www.example.com\\r\\n\"",
          "",
          "[Removed Lines]",
          "778: #define EAT_TRAILING_CRLF_NO_CONNECTION_CLOSE 28",
          "",
          "[Added Lines]",
          "778: #define EAT_TRAILING_CRLF_NO_CONNECTION_CLOSE 29",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "802:   }",
          "806: , {.name = \"eat CRLF between requests even if \\\"Connection: close\\\" is set\"",
          "807:   ,.raw= \"POST / HTTP/1.1\\r\\n\"",
          "808:          \"Host: www.example.com\\r\\n\"",
          "",
          "[Removed Lines]",
          "805: #define EAT_TRAILING_CRLF_WITH_CONNECTION_CLOSE 29",
          "",
          "[Added Lines]",
          "805: #define EAT_TRAILING_CRLF_WITH_CONNECTION_CLOSE 30",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "830:   ,.body= \"q=42\"",
          "831:   }",
          "834: , {.name = \"PURGE request\"",
          "835:   ,.type= HTTP_REQUEST",
          "836:   ,.raw= \"PURGE /file.txt HTTP/1.1\\r\\n\"",
          "",
          "[Removed Lines]",
          "833: #define PURGE_REQ 30",
          "",
          "[Added Lines]",
          "833: #define PURGE_REQ 31",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "850:   ,.body= \"\"",
          "851:   }",
          "854: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "853: #define SEARCH_REQ 32",
          "854: , {.name = \"SEARCH request\"",
          "855:   ,.type= HTTP_REQUEST",
          "856:   ,.raw= \"SEARCH / HTTP/1.1\\r\\n\"",
          "857:          \"Host: www.example.com\\r\\n\"",
          "858:          \"\\r\\n\"",
          "859:   ,.should_keep_alive= TRUE",
          "860:   ,.message_complete_on_eof= FALSE",
          "861:   ,.http_major= 1",
          "862:   ,.http_minor= 1",
          "863:   ,.method= HTTP_SEARCH",
          "864:   ,.query_string= \"\"",
          "865:   ,.fragment= \"\"",
          "866:   ,.request_path= \"/\"",
          "867:   ,.request_url= \"/\"",
          "868:   ,.num_headers= 1",
          "869:   ,.headers= { { \"Host\", \"www.example.com\" } }",
          "870:   ,.body= \"\"",
          "871:   }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1452:                     \"value in both on_message_complete and on_headers_complete \"",
          "1453:                     \"but it doesn't! ***\\n\\n\");",
          "1454:     assert(0);",
          "1456:   }",
          "1457:   messages[num_messages].message_complete_cb_called = TRUE;",
          "",
          "[Removed Lines]",
          "1455:     exit(1);",
          "",
          "[Added Lines]",
          "1475:     abort();",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1469: {",
          "1470:   if (p) { } // gcc",
          "1471:   fprintf(stderr, \"\\n\\n*** on_message_begin() called on paused parser ***\\n\\n\");",
          "1473: }",
          "1475: int",
          "",
          "[Removed Lines]",
          "1472:   exit(1);",
          "",
          "[Added Lines]",
          "1492:   abort();",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1477: {",
          "1478:   if (p || buf || len) { } // gcc",
          "1479:   fprintf(stderr, \"\\n\\n*** on_header_field() called on paused parser ***\\n\\n\");",
          "1481: }",
          "1483: int",
          "",
          "[Removed Lines]",
          "1480:   exit(1);",
          "",
          "[Added Lines]",
          "1500:   abort();",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1485: {",
          "1486:   if (p || buf || len) { } // gcc",
          "1487:   fprintf(stderr, \"\\n\\n*** on_header_value() called on paused parser ***\\n\\n\");",
          "1489: }",
          "1491: int",
          "",
          "[Removed Lines]",
          "1488:   exit(1);",
          "",
          "[Added Lines]",
          "1508:   abort();",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1493: {",
          "1494:   if (p || buf || len) { } // gcc",
          "1495:   fprintf(stderr, \"\\n\\n*** on_request_url() called on paused parser ***\\n\\n\");",
          "1497: }",
          "1499: int",
          "",
          "[Removed Lines]",
          "1496:   exit(1);",
          "",
          "[Added Lines]",
          "1516:   abort();",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1501: {",
          "1502:   if (p || buf || len) { } // gcc",
          "1503:   fprintf(stderr, \"\\n\\n*** on_body_cb() called on paused parser ***\\n\\n\");",
          "1505: }",
          "1507: int",
          "",
          "[Removed Lines]",
          "1504:   exit(1);",
          "",
          "[Added Lines]",
          "1524:   abort();",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1510:   if (p) { } // gcc",
          "1511:   fprintf(stderr, \"\\n\\n*** on_headers_complete() called on paused \"",
          "1512:                   \"parser ***\\n\\n\");",
          "1514: }",
          "1516: int",
          "",
          "[Removed Lines]",
          "1513:   exit(1);",
          "",
          "[Added Lines]",
          "1533:   abort();",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1519:   if (p) { } // gcc",
          "1520:   fprintf(stderr, \"\\n\\n*** on_message_complete() called on paused \"",
          "1521:                   \"parser ***\\n\\n\");",
          "1523: }",
          "1525: static http_parser_settings settings_dontcall =",
          "",
          "[Removed Lines]",
          "1522:   exit(1);",
          "",
          "[Added Lines]",
          "1542:   abort();",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1771:     if (http_parser_parse_url(m->request_url, strlen(m->request_url), 0, &u)) {",
          "1772:       fprintf(stderr, \"\\n\\n*** failed to parse URL %s ***\\n\\n\",",
          "1773:         m->request_url);",
          "1775:     }",
          "1777:     m->port = (u.field_set & (1 << UF_PORT)) ?",
          "",
          "[Removed Lines]",
          "1774:       exit(1);",
          "",
          "[Added Lines]",
          "1794:       abort();",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1851:       if (!check_str_eq(m, \"upgrade\", body + off, body + nread)) {",
          "1853:       }",
          "",
          "[Removed Lines]",
          "1852:         exit(1);",
          "",
          "[Added Lines]",
          "1872:         abort();",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1865:   va_end(ap);",
          "1866:   printf(\"\\n\\n*** Error: expected a message with upgrade ***\\n\");",
          "1869: }",
          "1871: static void",
          "",
          "[Removed Lines]",
          "1868:   exit(1);",
          "",
          "[Added Lines]",
          "1888:   abort();",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1920:   http_parser_init(&parser, HTTP_REQUEST);",
          "1921:   if (parser.data != my_data) {",
          "1922:     printf(\"\\n*** parser.data not preserved accross http_parser_init ***\\n\\n\");",
          "1924:   }",
          "1925: }",
          "",
          "[Removed Lines]",
          "1923:     exit(1);",
          "",
          "[Added Lines]",
          "1943:     abort();",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2099:       if (rv != 0) {",
          "2100:         printf(\"\\n*** http_parser_parse_url(\\\"%s\\\") \\\"%s\\\" test failed, \"",
          "2101:                \"unexpected rv %d ***\\n\\n\", test->url, test->name, rv);",
          "2103:       }",
          "2105:       if (memcmp(&u, &test->u, sizeof(u)) != 0) {",
          "",
          "[Removed Lines]",
          "2102:         exit(1);",
          "",
          "[Added Lines]",
          "2122:         abort();",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2111:         printf(\"result http_parser_url:\\n\");",
          "2112:         dump_url(test->url, &u);",
          "2115:       }",
          "2116:     } else {",
          "2118:       if (rv == 0) {",
          "2119:         printf(\"\\n*** http_parser_parse_url(\\\"%s\\\") \\\"%s\\\" test failed, \"",
          "2120:                \"unexpected rv %d ***\\n\\n\", test->url, test->name, rv);",
          "2122:       }",
          "2123:     }",
          "2124:   }",
          "",
          "[Removed Lines]",
          "2114:         exit(1);",
          "2121:         exit(1);",
          "",
          "[Added Lines]",
          "2134:         abort();",
          "2141:         abort();",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2148:       if (read != msg1len) {",
          "2149:         print_error(msg1, read);",
          "2151:       }",
          "2152:     }",
          "",
          "[Removed Lines]",
          "2150:         exit(1);",
          "",
          "[Added Lines]",
          "2170:         abort();",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2162:     if (read != msg2len) {",
          "2163:       print_error(msg2, read);",
          "2165:     }",
          "2167:     read = parse(NULL, 0);",
          "2169:     if (read != 0) {",
          "2170:       print_error(message->raw, read);",
          "2172:     }",
          "2174:   test:",
          "2176:     if (num_messages != 1) {",
          "2177:       printf(\"\\n*** num_messages != 1 after testing '%s' ***\\n\\n\", message->name);",
          "2179:     }",
          "2183:     parser_free();",
          "2184:   }",
          "",
          "[Removed Lines]",
          "2164:       exit(1);",
          "2171:       exit(1);",
          "2178:       exit(1);",
          "2181:     if(!message_eq(0, message)) exit(1);",
          "",
          "[Added Lines]",
          "2184:       abort();",
          "2191:       abort();",
          "2198:       abort();",
          "2201:     if(!message_eq(0, message)) abort();",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2199:     read = parse_count_body(message->raw + i, toread);",
          "2200:     if (read != toread) {",
          "2201:       print_error(message->raw, read);",
          "2203:     }",
          "2204:   }",
          "",
          "[Removed Lines]",
          "2202:       exit(1);",
          "",
          "[Added Lines]",
          "2222:       abort();",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2207:   read = parse_count_body(NULL, 0);",
          "2208:   if (read != 0) {",
          "2209:     print_error(message->raw, read);",
          "2211:   }",
          "2213:   if (num_messages != 1) {",
          "2214:     printf(\"\\n*** num_messages != 1 after testing '%s' ***\\n\\n\", message->name);",
          "2216:   }",
          "2220:   parser_free();",
          "2221: }",
          "",
          "[Removed Lines]",
          "2210:     exit(1);",
          "2215:     exit(1);",
          "2218:   if(!message_eq(0, message)) exit(1);",
          "",
          "[Added Lines]",
          "2230:     abort();",
          "2235:     abort();",
          "2238:   if(!message_eq(0, message)) abort();",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2247: #endif",
          "2248:     fprintf(stderr, \"\\n*** test_simple expected %s, but saw %s ***\\n\\n%s\\n\",",
          "2249:         http_errno_name(err_expected), http_errno_name(err), buf);",
          "2251:   }",
          "2252: }",
          "",
          "[Removed Lines]",
          "2250:     exit(1);",
          "",
          "[Added Lines]",
          "2270:     abort();",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2276:   }",
          "2278:   fprintf(stderr, \"\\n*** Error expected but none in header overflow test ***\\n\");",
          "2280: }",
          "2282: static void",
          "",
          "[Removed Lines]",
          "2279:   exit(1);",
          "",
          "[Added Lines]",
          "2299:   abort();",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2356:           \"\\n*** error in test_no_overflow_long_body %s of length %zu ***\\n\",",
          "2357:           req ? \"REQUEST\" : \"RESPONSE\",",
          "2358:           length);",
          "2360: }",
          "2362: void",
          "",
          "[Removed Lines]",
          "2359:   exit(1);",
          "",
          "[Added Lines]",
          "2379:   abort();",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2389:   if (read != strlen(total)) {",
          "2390:     print_error(total, read);",
          "2392:   }",
          "2394:   read = parse(NULL, 0);",
          "2396:   if (read != 0) {",
          "2397:     print_error(total, read);",
          "2399:   }",
          "2401: test:",
          "2403:   if (message_count != num_messages) {",
          "2404:     fprintf(stderr, \"\\n\\n*** Parser didn't see 3 messages only %d *** \\n\", num_messages);",
          "2406:   }",
          "2412:   parser_free();",
          "2413: }",
          "",
          "[Removed Lines]",
          "2391:     exit(1);",
          "2398:     exit(1);",
          "2405:     exit(1);",
          "2408:   if (!message_eq(0, r1)) exit(1);",
          "2409:   if (message_count > 1 && !message_eq(1, r2)) exit(1);",
          "2410:   if (message_count > 2 && !message_eq(2, r3)) exit(1);",
          "",
          "[Added Lines]",
          "2411:     abort();",
          "2418:     abort();",
          "2425:     abort();",
          "2428:   if (!message_eq(0, r1)) abort();",
          "2429:   if (message_count > 1 && !message_eq(1, r2)) abort();",
          "2430:   if (message_count > 2 && !message_eq(2, r3)) abort();",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2530:   fprintf(stderr, \"buf1 (%u) %s\\n\\n\", (unsigned int)buf1_len, buf1);",
          "2531:   fprintf(stderr, \"buf2 (%u) %s\\n\\n\", (unsigned int)buf2_len , buf2);",
          "2532:   fprintf(stderr, \"buf3 (%u) %s\\n\", (unsigned int)buf3_len, buf3);",
          "2534: }",
          "",
          "[Removed Lines]",
          "2533:   exit(1);",
          "",
          "[Added Lines]",
          "2553:   abort();",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2609: test:",
          "2610:   if (num_messages != 1) {",
          "2611:     printf(\"\\n*** num_messages != 1 after testing '%s' ***\\n\\n\", msg->name);",
          "2613:   }",
          "2617:   parser_free();",
          "2618: }",
          "",
          "[Removed Lines]",
          "2612:     exit(1);",
          "2615:   if(!message_eq(0, msg)) exit(1);",
          "",
          "[Added Lines]",
          "2632:     abort();",
          "2635:   if(!message_eq(0, msg)) abort();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e85927119cd76dfa6541beb7954196c56d98a776",
      "candidate_info": {
        "commit_hash": "e85927119cd76dfa6541beb7954196c56d98a776",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e85927119cd76dfa6541beb7954196c56d98a776",
        "files": [
          "lib/util.js",
          "test/simple/test-util-inspect.js"
        ],
        "message": "util: handle non-string return value in .inspect()",
        "before_after_code_files": [
          "lib/util.js||liutil.js",
          "test/simple/test-util-inspect.js||test/simple/test-util-inspect.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/util.js||liutil.js": [
          "File: lib/util.js -> liutil.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "158:       value.inspect !== exports.inspect &&",
          "160:       !(value.constructor && value.constructor.prototype === value)) {",
          "162:   }",
          "",
          "[Removed Lines]",
          "161:     return value.inspect(recurseTimes);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-util-inspect.js||test/simple/test-util-inspect.js": [
          "File: test/simple/test-util-inspect.js -> test/simple/test-util-inspect.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:   util.inspect(r);",
          "98: });",
          "101: var x = { inspect: util.inspect };",
          "102: assert.ok(util.inspect(x).indexOf('inspect') != -1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101: assert.doesNotThrow(function() {",
          "102:   util.inspect([{",
          "103:     inspect: function() { return 123; }",
          "104:   }]);",
          "105: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a1d193963ddc80a27da5da01b59751e14e33d1d6",
      "candidate_info": {
        "commit_hash": "a1d193963ddc80a27da5da01b59751e14e33d1d6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a1d193963ddc80a27da5da01b59751e14e33d1d6",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "src/node_version.h"
        ],
        "message": "2012.04.30 Version 0.6.16 (stable)\n\n* Upgrade V8 to 3.6.6.25\n\n* Upgrade npm to 1.1.19\n\n* Windows: add mappings for UV_ENOENT (Bert Belder)\n\n* linux: add IN_MOVE_SELF to inotify event mask (Ben Noordhuis)\n\n* unix: call pipe handle connection cb on accept() error (Ben Noordhuis)\n\n* unix: handle EWOULDBLOCK (Ben Noordhuis)\n\n* map EWOULDBLOCK to UV_EAGAIN (Ben Noordhuis)\n\n* Map ENOMEM to UV_ENOMEM (isaacs)\n\n* Child process: support the `gid` and `uid` options (Bert Belder)\n\n* test: cluster: add worker death event test (Ben Noordhuis)\n\n* typo in node_http_parser (isaacs)\n\n* http_parser: Eat CRLF between requests, even on connection:close. (Ben Noordhuis)\n\n* don't check return value of unsetenv (Ben Noordhuis)",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 6",
          "31: #define NODE_PATCH_VERSION 16",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "69ca83f7552babe11969d2735245bed3c347ab35",
      "candidate_info": {
        "commit_hash": "69ca83f7552babe11969d2735245bed3c347ab35",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/69ca83f7552babe11969d2735245bed3c347ab35",
        "files": [
          "deps/v8/SConstruct",
          "deps/v8/src/regexp.js",
          "deps/v8/src/version.cc",
          "deps/v8/test/mjsunit/regexp-capture-3.js",
          "deps/v8/tools/gyp/v8.gyp"
        ],
        "message": "Upgrade V8 to 3.6.6.25",
        "before_after_code_files": [
          "deps/v8/src/regexp.js||deps/v8/src/regexp.js",
          "deps/v8/src/version.cc||deps/v8/src/version.cc",
          "deps/v8/test/mjsunit/regexp-capture-3.js||deps/v8/test/mjsunit/regexp-capture-3.js",
          "deps/v8/tools/gyp/v8.gyp||deps/v8/tools/gyp/v8.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/regexp.js||deps/v8/src/regexp.js": [
          "File: deps/v8/src/regexp.js -> deps/v8/src/regexp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:   } else {",
          "359:     var override = lastMatchInfoOverride;",
          "360:     subject = override[override.length - 1];",
          "362:   }",
          "363:   return SubString(subject, start_index, subject.length);",
          "364: }",
          "",
          "[Removed Lines]",
          "361:     start_index = override[override.length - 2] + subject.length;",
          "",
          "[Added Lines]",
          "361:     var pattern = override[override.length - 3];",
          "362:     start_index = override[override.length - 2] + pattern.length;",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     6",
          "37: #define BUILD_NUMBER      6",
          "41: #define IS_CANDIDATE_VERSION 0",
          "",
          "[Removed Lines]",
          "38: #define PATCH_LEVEL       24",
          "",
          "[Added Lines]",
          "38: #define PATCH_LEVEL       25",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regexp-capture-3.js||deps/v8/test/mjsunit/regexp-capture-3.js": [
          "File: deps/v8/test/mjsunit/regexp-capture-3.js -> deps/v8/test/mjsunit/regexp-capture-3.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: \"abcd\".replace(/b/g, function() { });",
          "30: assertEquals(\"cd\", RegExp.rightContext);",
          "",
          "---------------"
        ],
        "deps/v8/tools/gyp/v8.gyp||deps/v8/tools/gyp/v8.gyp": [
          "File: deps/v8/tools/gyp/v8.gyp -> deps/v8/tools/gyp/v8.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "641:                 ],",
          "642:               }",
          "643:             ],",
          "651:             ['OS==\"mac\"', {",
          "652:               'sources': [",
          "653:                 '../../src/platform-macos.cc',",
          "",
          "[Removed Lines]",
          "644:             ['OS==\"solaris\"', {",
          "645:                 'sources': [",
          "646:                   '../../src/platform-solaris.cc',",
          "647:                   '../../src/platform-posix.cc'",
          "648:                 ],",
          "649:               }",
          "650:             ],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "69d8e77f17d54d7e81e03c5eec28814399bf0bd8",
      "candidate_info": {
        "commit_hash": "69d8e77f17d54d7e81e03c5eec28814399bf0bd8",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/69d8e77f17d54d7e81e03c5eec28814399bf0bd8",
        "files": [
          "deps/uv/src/win/error.c"
        ],
        "message": "uv: upgrade to 162e57b",
        "before_after_code_files": [
          "deps/uv/src/win/error.c||deps/uv/src/win/error.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/win/error.c||deps/uv/src/win/error.c": [
          "File: deps/uv/src/win/error.c -> deps/uv/src/win/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:     case ERROR_OPEN_FAILED:                 return UV_EIO;",
          "82:     case ERROR_SETMARK_DETECTED:            return UV_EIO;",
          "83:     case ERROR_SIGNAL_REFUSED:              return UV_EIO;",
          "84:     case ERROR_FILE_NOT_FOUND:              return UV_ENOENT;",
          "85:     case ERROR_INVALID_NAME:                return UV_ENOENT;",
          "86:     case ERROR_INVALID_REPARSE_DATA:        return UV_ENOENT;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:     case ERROR_DIRECTORY:                   return UV_ENOENT;",
          "",
          "---------------"
        ]
      }
    }
  ]
}