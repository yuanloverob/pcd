{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "51676fab72dd89450f6c8b8c252703016e005286",
      "candidate_info": {
        "commit_hash": "51676fab72dd89450f6c8b8c252703016e005286",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/51676fab72dd89450f6c8b8c252703016e005286",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbemem.c"
        ],
        "message": "Remove an incorrect assert() statement.  Ticket [46fcd700b855e6d1]\n\nFossilOrigin-Name: eca7ec9cda4606c4104bcb8da315070b615713db9f3444579c6a3e96b0aad02f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbemem.c||src/vdbemem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3bd095a53119c368fe30e539983588b27957203344cf427405b9a64784b8eba7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "965:       u16 mFlags = pMem->flags & pX->flags & pX->mScopyFlags;",
          "966:       assert( (mFlags&(MEM_Int|MEM_IntReal))==0 || pMem->u.i==pX->u.i );",
          "968:       assert( (mFlags&MEM_Str)==0  || (pMem->n==pX->n && pMem->z==pX->z) );",
          "969:       assert( (mFlags&MEM_Blob)==0  || sqlite3BlobCompare(pMem,pX)==0 );",
          "",
          "[Removed Lines]",
          "967:       assert( (mFlags&MEM_Real)==0 || pMem->u.r==pX->u.r );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bbf6d4328eb0c292c31db7cdf9c0191549e4d002",
      "candidate_info": {
        "commit_hash": "bbf6d4328eb0c292c31db7cdf9c0191549e4d002",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bbf6d4328eb0c292c31db7cdf9c0191549e4d002",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/main.c",
          "src/vdbeapi.c",
          "test/e_expr.test"
        ],
        "message": "Adjust some requirement marks.  No changes to code.\n\nFossilOrigin-Name: 7285ae2ce8fb1439e1acea2ec321abbc76aab0a2e84b58683fddb0a7bf74fb1b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/main.c||src/main.c",
          "src/vdbeapi.c||src/vdbeapi.c",
          "test/e_expr.test||test/e_expr.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4087fce97252beda2456164afe9508f952fc9fe4be68ad0e9b330569a78e42f2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c"
        ],
        "src/vdbeapi.c||src/vdbeapi.c": [
          "File: src/vdbeapi.c -> src/vdbeapi.c"
        ],
        "test/e_expr.test||test/e_expr.test": [
          "File: test/e_expr.test -> test/e_expr.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1139: #-------------------------------------------------------------------------",
          "1140: # Test cases for the testable statements related to the CASE expression.",
          "1141: #",
          "1143: # expression: those with a base expression and those without.",
          "1144: #",
          "1145: do_execsql_test e_expr-20.1 {",
          "",
          "[Removed Lines]",
          "1142: # EVIDENCE-OF: R-15199-61389 There are two basic forms of the CASE",
          "",
          "[Added Lines]",
          "1142: # EVIDENCE-OF: R-57495-24088 There are two fundamental forms of the CASE",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9301e6e7c03d876be80b415783f99cf50f83ec8",
      "candidate_info": {
        "commit_hash": "c9301e6e7c03d876be80b415783f99cf50f83ec8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c9301e6e7c03d876be80b415783f99cf50f83ec8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/whereL.test"
        ],
        "message": "Fix the constant propagation optimization so that it does not try to propagate constant expressions that have affinity.  Ticket [82ac75ba0093e5dc]\n\nFossilOrigin-Name: 6db1c3498f6bfa01bb460e62b802b63ec4bf43577a17a94e1e2fa0ecc1e64960",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/whereL.test||test/whereL.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ee0bc7ede0fbf3e54bb934c0d580c62d7393c984cbc374ece6d57fe9211dac26",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4203:   if( pRight->op==TK_COLUMN",
          "4204:    && !ExprHasProperty(pRight, EP_FixedCol)",
          "4205:    && sqlite3ExprIsConstant(pLeft)",
          "4206:    && sqlite3IsBinary(sqlite3ExprCompareCollSeq(pConst->pParse,pExpr))",
          "4207:   ){",
          "4208:     constInsert(pConst, pRight, pLeft);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4206:    && sqlite3ExprAffinity(pLeft)==0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4210:   if( pLeft->op==TK_COLUMN",
          "4211:    && !ExprHasProperty(pLeft, EP_FixedCol)",
          "4212:    && sqlite3ExprIsConstant(pRight)",
          "4213:    && sqlite3IsBinary(sqlite3ExprCompareCollSeq(pConst->pParse,pExpr))",
          "4214:   ){",
          "4215:     constInsert(pConst, pLeft, pRight);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4214:    && sqlite3ExprAffinity(pRight)==0",
          "",
          "---------------"
        ],
        "test/whereL.test||test/whereL.test": [
          "File: test/whereL.test -> test/whereL.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:   SELECT x.a FROM x JOIN y ON x.c = y.a WHERE x.b = 1 AND x.b = 1;",
          "123: } {}",
          "125: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "125: # 2020-01-07: ticket 82ac75ba0093e5dc",
          "126: # Incorrect join result due to mishandling of affinity in constant",
          "127: # propagation.",
          "128: #",
          "129: reset_db",
          "130: do_execsql_test 500 {",
          "131:   PRAGMA automatic_index=OFF;",
          "132:   CREATE TABLE t0(c0);",
          "133:   INSERT INTO t0 VALUES('0');",
          "134:   CREATE VIEW v0(c0) AS SELECT CAST(0 AS INT) FROM t0;",
          "135:   SELECT 200, * FROM t0, v0 WHERE 0 = t0.c0 AND t0.c0 = v0.c0;",
          "136: } {}",
          "137: do_execsql_test 510 {",
          "138:   SELECT 200, * FROM t0, v0 WHERE t0.c0 = 0 AND t0.c0 = v0.c0;",
          "139: } {}",
          "140: do_execsql_test 520 {",
          "141:   SELECT 200, * FROM t0, v0 WHERE 0 = t0.c0 AND v0.c0 = t0.c0;",
          "142: } {}",
          "143: do_execsql_test 530 {",
          "144:   SELECT 200, * FROM t0, v0 WHERE t0.c0 = 0 AND v0.c0 = t0.c0;",
          "145: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3d42fb788ab2be01b891dba61b380c819117e12b",
      "candidate_info": {
        "commit_hash": "3d42fb788ab2be01b891dba61b380c819117e12b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3d42fb788ab2be01b891dba61b380c819117e12b",
        "files": [
          "ext/misc/uint.c",
          "manifest",
          "manifest.uuid",
          "src/analyze.c"
        ],
        "message": "Fix harmless compiler warnings.\n\nFossilOrigin-Name: 8eee591d3cb9fadfd5cac5543bd66ef9cb371a72d3ad3241fb3bfd67fb216eda",
        "before_after_code_files": [
          "ext/misc/uint.c||ext/misc/uint.c",
          "manifest.uuid||manifest.uuid",
          "src/analyze.c||src/analyze.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/uint.c||ext/misc/uint.c": [
          "File: ext/misc/uint.c -> ext/misc/uint.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:   const unsigned char *zA = (const unsigned char*)pKey1;",
          "46:   const unsigned char *zB = (const unsigned char*)pKey2;",
          "47:   int i=0, j=0, x;",
          "48:   while( i<nKey1 && j<nKey2 ){",
          "49:     x = zA[i] - zB[j];",
          "50:     if( isdigit(zA[i]) ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:   (void)notUsed;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 838987b2097c4b7acaa65aea99cfdaf199f04d76bcf6ef12743c60b338a965f7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/analyze.c||src/analyze.c": [
          "File: src/analyze.c -> src/analyze.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "768:     }",
          "769:   }else",
          "770: #endif",
          "772:     p->nSkipAhead++;",
          "773:     sqlite3_result_int(context, p->current.anDLt[0]>0);",
          "774:   }",
          "",
          "[Removed Lines]",
          "771:   if( p->nLimit && p->nRow>p->nLimit*(p->nSkipAhead+1) ){",
          "",
          "[Added Lines]",
          "771:   if( p->nLimit && p->nRow>(tRowcnt)p->nLimit*(p->nSkipAhead+1) ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f05dd03a6eb1ae271c17bdf8fc21dd62f39c35cf",
      "candidate_info": {
        "commit_hash": "f05dd03a6eb1ae271c17bdf8fc21dd62f39c35cf",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f05dd03a6eb1ae271c17bdf8fc21dd62f39c35cf",
        "files": [
          "Makefile.in",
          "Makefile.msc",
          "main.mk",
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Build the UINT collating sequence extension into the CLI.\n\nFossilOrigin-Name: 2b8c6b035a276029850de02651712a5fd69f4dfee45083d24b9d1f998004829b",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "Makefile.msc||Makefile.msc",
          "main.mk||main.mk",
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1069:  $(TOP)/ext/misc/fileio.c \\",
          "1070:  $(TOP)/ext/misc/completion.c \\",
          "1071:  $(TOP)/ext/misc/sqlar.c \\",
          "1072:  $(TOP)/ext/expert/sqlite3expert.c \\",
          "1073:  $(TOP)/ext/expert/sqlite3expert.h \\",
          "1074:  $(TOP)/ext/misc/zipfile.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1072:         $(TOP)/ext/misc/uint.c \\",
          "",
          "---------------"
        ],
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2182:  $(TOP)\\ext\\misc\\shathree.c \\",
          "2183:  $(TOP)\\ext\\misc\\fileio.c \\",
          "2184:  $(TOP)\\ext\\misc\\completion.c \\",
          "2185:  $(TOP)\\ext\\expert\\sqlite3expert.c \\",
          "2186:  $(TOP)\\ext\\expert\\sqlite3expert.h \\",
          "2187:  $(TOP)\\ext\\misc\\memtrace.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2185:         $(TOP)\\ext\\misc\\uint.c \\",
          "",
          "---------------"
        ],
        "main.mk||main.mk": [
          "File: main.mk -> main.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "733:  $(TOP)/ext/misc/fileio.c \\",
          "734:  $(TOP)/ext/misc/completion.c \\",
          "735:  $(TOP)/ext/misc/sqlar.c \\",
          "736:  $(TOP)/ext/expert/sqlite3expert.c \\",
          "737:  $(TOP)/ext/expert/sqlite3expert.h \\",
          "738:  $(TOP)/ext/misc/zipfile.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "736:         $(TOP)/ext/misc/uint.c \\",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6f46c6e3e3c471ca864d7596e0211ee90316b784c8fe22c7ae177c9d29731dc7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1010: INCLUDE ../ext/misc/completion.c",
          "1011: INCLUDE ../ext/misc/appendvfs.c",
          "1012: INCLUDE ../ext/misc/memtrace.c",
          "1013: #ifdef SQLITE_HAVE_ZLIB",
          "1014: INCLUDE ../ext/misc/zipfile.c",
          "1015: INCLUDE ../ext/misc/sqlar.c",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1013: INCLUDE ../ext/misc/uint.c",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4252:     sqlite3_fileio_init(p->db, 0, 0);",
          "4253:     sqlite3_shathree_init(p->db, 0, 0);",
          "4254:     sqlite3_completion_init(p->db, 0, 0);",
          "4255: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "4256:     sqlite3_dbdata_init(p->db, 0, 0);",
          "4257: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4256:     sqlite3_uint_init(p->db, 0, 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}