{
  "cve_id": "CVE-2014-6430",
  "cve_desc": "The SnifferDecompress function in wiretap/ngsniffer.c in the DOS Sniffer file parser in Wireshark 1.10.x before 1.10.10 and 1.12.x before 1.12.1 does not validate bitmask data, which allows remote attackers to cause a denial of service (application crash) via a crafted file.",
  "repo": "wireshark/wireshark",
  "patch_hash": "47c592938ba9f0caeacc4c2ccadb370e72f293a2",
  "patch_info": {
    "commit_hash": "47c592938ba9f0caeacc4c2ccadb370e72f293a2",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/47c592938ba9f0caeacc4c2ccadb370e72f293a2",
    "files": [
      "wiretap/ngsniffer.c"
    ],
    "message": "Add some additional checks in SnifferDecompress().\n\nCheck the input pointer in the while clause of the loop, so that we\nhandle an empty input buffer.\n\nWhen reading a bit mask, check before fetching the bit mask that we have\ntwo bytes of bit mask and the byte after it.\n\nBefore putting an uncompressed input byte into the output, make sure we\nwouldn't run past the end of the output buffer.\n\nBefore copying an earlier string from the output buffer, make sure it\ndoesn't run past the end of the data we've decompressed so far.\n\nBug: 10461\nChange-Id: I8bb8d0d291368ae8bf0ac26970ff54d3262a7e6e\nReviewed-on: https://code.wireshark.org/review/4083\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
    "before_after_code_files": [
      "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
    ]
  },
  "patch_diff": {
    "wiretap/ngsniffer.c||wiretap/ngsniffer.c": [
      "File: wiretap/ngsniffer.c -> wiretap/ngsniffer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2242:  }",
      "2246:  {",
      "2248:   bit_mask = bit_mask >> 1;",
      "",
      "[Removed Lines]",
      "2245:  while (1)",
      "",
      "[Added Lines]",
      "2246:  while (pin < pin_end)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2251:   if ( 0 == bit_mask )",
      "2252:   {",
      "2257:    {",
      "2259:     return ( -1 );",
      "2260:    }",
      "2261:   }",
      "2264:   if ( !(bit_mask & bit_value) )",
      "2265:   {",
      "2268:   }",
      "2269:   else",
      "",
      "[Removed Lines]",
      "2256:    if ( pin >= pin_end )",
      "",
      "[Added Lines]",
      "2255:       available - the two bytes of the bit value,",
      "2257:    if ( pin + 2 >= pin_end )",
      "2273:    if ( pout + 1 > pout_end )",
      "2274:    {",
      "2276:     return ( -1 );",
      "2277:    }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2359:      return ( -1 );",
      "2360:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2373:     if ( pout - offset + length > pout )",
      "2374:     {",
      "2376:      return ( -1 );",
      "2377:     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2388:      return ( -1 );",
      "2389:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2408:     if ( pout - offset + length > pout )",
      "2409:     {",
      "2411:      return ( -1 );",
      "2412:     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2395:     break;",
      "2396:    }",
      "2397:   }",
      "2402:  }",
      "",
      "[Removed Lines]",
      "2400:   if ( pin >= pin_end )",
      "2401:    break;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "01e08ae582b9e01bd5d236e748f43b4a2cedee43",
      "candidate_info": {
        "commit_hash": "01e08ae582b9e01bd5d236e748f43b4a2cedee43",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/01e08ae582b9e01bd5d236e748f43b4a2cedee43",
        "files": [
          "wiretap/5views.c",
          "wiretap/aethra.c",
          "wiretap/csids.c",
          "wiretap/erf.c",
          "wiretap/eyesdn.c",
          "wiretap/iptrace.c",
          "wiretap/k12.c",
          "wiretap/lanalyzer.c",
          "wiretap/netmon.c",
          "wiretap/netscaler.c",
          "wiretap/nettl.c",
          "wiretap/netxray.c",
          "wiretap/ngsniffer.c",
          "wiretap/pcap-common.c",
          "wiretap/peekclassic.c",
          "wiretap/peektagged.c",
          "wiretap/pppdump.c",
          "wiretap/radcom.c",
          "wiretap/snoop.c",
          "wiretap/stanag4607.c",
          "wiretap/visual.c",
          "wiretap/vwr.c",
          "wiretap/wtap-int.h"
        ],
        "message": "wiretap: start using <wsutil/pint.h>\n\nsvn path=/trunk/; revision=53764",
        "before_after_code_files": [
          "wiretap/5views.c||wiretap/5views.c",
          "wiretap/aethra.c||wiretap/aethra.c",
          "wiretap/csids.c||wiretap/csids.c",
          "wiretap/erf.c||wiretap/erf.c",
          "wiretap/eyesdn.c||wiretap/eyesdn.c",
          "wiretap/iptrace.c||wiretap/iptrace.c",
          "wiretap/k12.c||wiretap/k12.c",
          "wiretap/lanalyzer.c||wiretap/lanalyzer.c",
          "wiretap/netmon.c||wiretap/netmon.c",
          "wiretap/netscaler.c||wiretap/netscaler.c",
          "wiretap/nettl.c||wiretap/nettl.c",
          "wiretap/netxray.c||wiretap/netxray.c",
          "wiretap/ngsniffer.c||wiretap/ngsniffer.c",
          "wiretap/pcap-common.c||wiretap/pcap-common.c",
          "wiretap/peekclassic.c||wiretap/peekclassic.c",
          "wiretap/peektagged.c||wiretap/peektagged.c",
          "wiretap/pppdump.c||wiretap/pppdump.c",
          "wiretap/radcom.c||wiretap/radcom.c",
          "wiretap/snoop.c||wiretap/snoop.c",
          "wiretap/stanag4607.c||wiretap/stanag4607.c",
          "wiretap/visual.c||wiretap/visual.c",
          "wiretap/vwr.c||wiretap/vwr.c",
          "wiretap/wtap-int.h||wiretap/wtap-int.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ],
          "candidate": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/5views.c||wiretap/5views.c": [
          "File: wiretap/5views.c -> wiretap/5views.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:  Capture_Header.Info_Header.Version =",
          "140:  switch (Capture_Header.Info_Header.Version) {",
          "142:  case CST_5VW_INFO_RECORD_VERSION:",
          "",
          "[Removed Lines]",
          "139:      pletohl(&Capture_Header.Info_Header.Version);",
          "",
          "[Added Lines]",
          "139:      pletoh32(&Capture_Header.Info_Header.Version);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:  Capture_Header.Info_Header.FileType =",
          "154:  if((Capture_Header.Info_Header.FileType & CST_5VW_CAPTURE_FILE_TYPE_MASK) != CST_5VW_CAPTURE_FILEID)",
          "155:  {",
          "",
          "[Removed Lines]",
          "153:      pletohl(&Capture_Header.Info_Header.FileType);",
          "",
          "[Added Lines]",
          "153:      pletoh32(&Capture_Header.Info_Header.FileType);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "284:   return FALSE;",
          "285:  }",
          "288:  if (hdr->Key != CST_5VW_RECORDS_HEADER_KEY) {",
          "",
          "[Removed Lines]",
          "287:  hdr->Key = pletohl(&hdr->Key);",
          "",
          "[Added Lines]",
          "287:  hdr->Key = pletoh32(&hdr->Key);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "292:   return FALSE;",
          "293:  }",
          "300:  phdr->presence_flags = WTAP_HAS_TS|WTAP_HAS_CAP_LEN;",
          "301:  phdr->ts.secs = hdr->Utc;",
          "",
          "[Removed Lines]",
          "295:  hdr->RecSubType = pletohl(&hdr->RecSubType);",
          "296:  hdr->RecSize = pletohl(&hdr->RecSize);",
          "297:  hdr->Utc = pletohl(&hdr->Utc);",
          "298:  hdr->NanoSecondes = pletohl(&hdr->NanoSecondes);",
          "",
          "[Added Lines]",
          "295:  hdr->RecSubType = pletoh32(&hdr->RecSubType);",
          "296:  hdr->RecSize = pletoh32(&hdr->RecSize);",
          "297:  hdr->Utc = pletoh32(&hdr->Utc);",
          "298:  hdr->NanoSecondes = pletoh32(&hdr->NanoSecondes);",
          "",
          "---------------"
        ],
        "wiretap/aethra.c||wiretap/aethra.c": [
          "File: wiretap/aethra.c -> wiretap/aethra.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:  tm.tm_hour = hdr.start_hour;",
          "168:  tm.tm_min = hdr.start_min;",
          "169:  tm.tm_sec = hdr.start_sec;",
          "",
          "[Removed Lines]",
          "164:  tm.tm_year = pletohs(&hdr.start_year) - 1900;",
          "165:  tm.tm_mon = pletohs(&hdr.start_month) - 1;",
          "166:  tm.tm_mday = pletohs(&hdr.start_day);",
          "",
          "[Added Lines]",
          "164:  tm.tm_year = pletoh16(&hdr.start_year) - 1900;",
          "165:  tm.tm_mon = pletoh16(&hdr.start_month) - 1;",
          "166:  tm.tm_mday = pletoh16(&hdr.start_day);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "317:   return FALSE;",
          "318:  }",
          "321:  if (rec_size < (sizeof *hdr - sizeof hdr->rec_size)) {",
          "",
          "[Removed Lines]",
          "320:  rec_size = pletohs(hdr->rec_size);",
          "",
          "[Added Lines]",
          "320:  rec_size = pletoh16(hdr->rec_size);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "330:  packet_size = rec_size - (guint32)(sizeof *hdr - sizeof hdr->rec_size);",
          "333:  phdr->presence_flags = WTAP_HAS_TS;",
          "334:  phdr->ts.secs = aethra->start + (msecs / 1000);",
          "335:  phdr->ts.nsecs = (msecs % 1000) * 1000000;",
          "",
          "[Removed Lines]",
          "332:  msecs = pletohl(hdr->timestamp);",
          "",
          "[Added Lines]",
          "332:  msecs = pletoh32(hdr->timestamp);",
          "",
          "---------------"
        ],
        "wiretap/csids.c||wiretap/csids.c": [
          "File: wiretap/csids.c -> wiretap/csids.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:   if( hdr.zeropad != 0 || hdr.caplen == 0 ) {",
          "90:  return 0;",
          "91:   }",
          "94:   bytesRead = file_read( &tmp, 2, wth->fh );",
          "95:   if( bytesRead != 2 ) {",
          "",
          "[Removed Lines]",
          "92:   hdr.seconds = pntohl( &hdr.seconds );",
          "93:   hdr.caplen = pntohs( &hdr.caplen );",
          "",
          "[Added Lines]",
          "92:   hdr.seconds = pntoh32( &hdr.seconds );",
          "93:   hdr.caplen = pntoh16( &hdr.caplen );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:     }",
          "108:     return 0;",
          "109:   }",
          "112:   if ( iplen == 0 )",
          "113:     return 0;",
          "",
          "[Removed Lines]",
          "110:   iplen = pntohs(&iplen);",
          "",
          "[Added Lines]",
          "110:   iplen = pntoh16(&iplen);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "197:     return FALSE;",
          "198:   }",
          "202:   phdr->presence_flags = WTAP_HAS_TS;",
          "203:   phdr->len = hdr.caplen;",
          "",
          "[Removed Lines]",
          "199:   hdr.seconds = pntohl(&hdr.seconds);",
          "200:   hdr.caplen = pntohs(&hdr.caplen);",
          "",
          "[Added Lines]",
          "199:   hdr.seconds = pntoh32(&hdr.seconds);",
          "200:   hdr.caplen = pntoh16(&hdr.caplen);",
          "",
          "---------------"
        ],
        "wiretap/erf.c||wiretap/erf.c": [
          "File: wiretap/erf.c -> wiretap/erf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:       return 0;",
          "179:     }",
          "183:       if ( ((prevts-ts)>>32) > 1 ) {",
          "184:         return 0;",
          "",
          "[Removed Lines]",
          "181:     if ((ts = pletohll(&header.ts)) < prevts) {",
          "",
          "[Added Lines]",
          "181:     if ((ts = pletoh64(&header.ts)) < prevts) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "375:   }",
          "377:   {",
          "380:     phdr->presence_flags = WTAP_HAS_TS|WTAP_HAS_CAP_LEN|WTAP_HAS_INTERFACE_ID;",
          "381:     phdr->ts.secs = (long) (ts >> 32);",
          "",
          "[Removed Lines]",
          "378:     guint64 ts = pletohll(&erf_header->ts);",
          "",
          "[Added Lines]",
          "378:     guint64 ts = pletoh64(&erf_header->ts);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "393:   memset(&pseudo_header->erf, 0, sizeof(pseudo_header->erf));",
          "395:   pseudo_header->erf.phdr.type = erf_header->type;",
          "396:   pseudo_header->erf.phdr.flags = erf_header->flags;",
          "397:   pseudo_header->erf.phdr.rlen = g_ntohs(erf_header->rlen);",
          "",
          "[Removed Lines]",
          "394:   pseudo_header->erf.phdr.ts = pletohll(&erf_header->ts);",
          "",
          "[Added Lines]",
          "394:   pseudo_header->erf.phdr.ts = pletoh64(&erf_header->ts);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "409:     skiplen += (guint32)sizeof(erf_exhdr);",
          "411:     if (i < max)",
          "412:       memcpy(&pseudo_header->erf.ehdr_list[i].ehdr, &erf_exhdr_sw, sizeof(erf_exhdr_sw));",
          "413:     type = erf_exhdr[0];",
          "",
          "[Removed Lines]",
          "410:     erf_exhdr_sw = pntohll(erf_exhdr);",
          "",
          "[Added Lines]",
          "410:     erf_exhdr_sw = pntoh64(erf_exhdr);",
          "",
          "---------------"
        ],
        "wiretap/eyesdn.c||wiretap/eyesdn.c": [
          "File: wiretap/eyesdn.c -> wiretap/eyesdn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "219:         channel = hdr[8];",
          "220:         direction = hdr[9];",
          "223:  switch(direction >> 1) {",
          "",
          "[Removed Lines]",
          "221:         pkt_len = pntohs(&hdr[10]);",
          "",
          "[Added Lines]",
          "221:         pkt_len = pntoh16(&hdr[10]);",
          "",
          "---------------"
        ],
        "wiretap/iptrace.c||wiretap/iptrace.c": [
          "File: wiretap/iptrace.c -> wiretap/iptrace.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:  }",
          "157:  if (packet_size < IPTRACE_1_0_PDATA_SIZE) {",
          "",
          "[Removed Lines]",
          "156:  packet_size = pntohl(&header[0]);",
          "",
          "[Added Lines]",
          "156:  packet_size = pntoh32(&header[0]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "207:  phdr->presence_flags = WTAP_HAS_TS;",
          "208:  phdr->len = packet_size;",
          "209:  phdr->caplen = packet_size;",
          "211:  phdr->ts.nsecs = 0;",
          "",
          "[Removed Lines]",
          "210:  phdr->ts.secs = pntohl(&header[4]);",
          "",
          "[Added Lines]",
          "210:  phdr->ts.secs = pntoh32(&header[4]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "349: #endif",
          "353:  if (packet_size < IPTRACE_2_0_PDATA_SIZE) {",
          "",
          "[Removed Lines]",
          "352:  packet_size = pntohl(&header[0]);",
          "",
          "[Added Lines]",
          "352:  packet_size = pntoh32(&header[0]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "403:  phdr->presence_flags = WTAP_HAS_TS;",
          "404:  phdr->len = packet_size;",
          "405:  phdr->caplen = packet_size;",
          "410:  fill_in_pseudo_header(phdr->pkt_encap, &phdr->pseudo_header, header);",
          "",
          "[Removed Lines]",
          "406:  phdr->ts.secs = pntohl(&header[32]);",
          "407:  phdr->ts.nsecs = pntohl(&header[36]);",
          "",
          "[Added Lines]",
          "406:  phdr->ts.secs = pntoh32(&header[32]);",
          "407:  phdr->ts.nsecs = pntoh32(&header[36]);",
          "",
          "---------------"
        ],
        "wiretap/k12.c||wiretap/k12.c": [
          "File: wiretap/k12.c -> wiretap/k12.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "450:         }",
          "451:     }",
          "454: #ifdef DEBUG_K12",
          "455:     actual_len = left;",
          "456: #endif",
          "",
          "[Removed Lines]",
          "453:     left = pntohl(buffer + K12_RECORD_LEN);",
          "",
          "[Added Lines]",
          "453:     left = pntoh32(buffer + K12_RECORD_LEN);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "558:     phdr->presence_flags = WTAP_HAS_TS;",
          "562:     phdr->ts.secs = (guint32) ((ts / 2000000) + 631152000);",
          "563:     phdr->ts.nsecs = (guint32) ( (ts % 2000000) * 500 );",
          "566:     phdr->len = phdr->caplen = length;",
          "569:     buffer_offset = (type == K12_REC_D0020) ? K12_PACKET_FRAME_D0020 : K12_PACKET_FRAME;",
          "571:     buffer_assure_space(target, length);",
          "",
          "[Removed Lines]",
          "560:     ts = pntohll(buffer + K12_PACKET_TIMESTAMP);",
          "565:     length = pntohl(buffer + K12_RECORD_FRAME_LEN) & 0x00001FFF;",
          "568:     type = pntohl(buffer + K12_RECORD_TYPE);",
          "",
          "[Added Lines]",
          "560:     ts = pntoh64(buffer + K12_PACKET_TIMESTAMP);",
          "565:     length = pntoh32(buffer + K12_RECORD_FRAME_LEN) & 0x00001FFF;",
          "568:     type = pntoh32(buffer + K12_RECORD_TYPE);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "579:     phdr->pseudo_header.k12.extra_info = (guint8*)buffer_start_ptr(&(k12->extra_info));",
          "580:     phdr->pseudo_header.k12.extra_length = extra_len;",
          "583:     K12_DBG(5,(\"process_packet_data: src_id=%.8x\",src_id));",
          "584:     phdr->pseudo_header.k12.input = src_id;",
          "",
          "[Removed Lines]",
          "582:     src_id = pntohl(buffer + K12_RECORD_SRC_ID);",
          "",
          "[Added Lines]",
          "582:     src_id = pntoh32(buffer + K12_RECORD_SRC_ID);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "603:         switch(src_desc->input_type) {",
          "604:             case K12_PORT_ATMPVC:",
          "605:                 if ((long)(buffer_offset + length + K12_PACKET_OFFSET_CID) < len) {",
          "608:                     phdr->pseudo_header.k12.input_info.atm.cid =  *((unsigned char*)(buffer + buffer_offset + length + K12_PACKET_OFFSET_CID));",
          "609:                     break;",
          "610:                 }",
          "",
          "[Removed Lines]",
          "606:                     phdr->pseudo_header.k12.input_info.atm.vp =  pntohs(buffer + buffer_offset + length + K12_PACKET_OFFSET_VP);",
          "607:                     phdr->pseudo_header.k12.input_info.atm.vc =  pntohs(buffer + buffer_offset + length + K12_PACKET_OFFSET_VC);",
          "",
          "[Added Lines]",
          "606:                     phdr->pseudo_header.k12.input_info.atm.vp =  pntoh16(buffer + buffer_offset + length + K12_PACKET_OFFSET_VP);",
          "607:                     phdr->pseudo_header.k12.input_info.atm.vc =  pntoh16(buffer + buffer_offset + length + K12_PACKET_OFFSET_VC);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "661:         buffer = k12->seq_read_buff;",
          "667:         if ( ! (src_desc = (k12_src_desc_t*)g_hash_table_lookup(k12->src_by_id,GUINT_TO_POINTER(src_id))) ) {",
          "",
          "[Removed Lines]",
          "663:         type = pntohl(buffer + K12_RECORD_TYPE);",
          "664:         src_id = pntohl(buffer + K12_RECORD_SRC_ID);",
          "",
          "[Added Lines]",
          "663:         type = pntoh32(buffer + K12_RECORD_TYPE);",
          "664:         src_id = pntoh32(buffer + K12_RECORD_SRC_ID);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "818:     file_data = new_k12_file_data();",
          "823:     K12_DBG(5,(\"k12_open: FILE_HEADER OK: offset=%x file_len=%i records=%i\",",
          "824:             offset,",
          "",
          "[Removed Lines]",
          "820:     file_data->file_len = pntohl( header_buffer + 0x8);",
          "821:     file_data->num_of_records = pntohl( header_buffer + 0xC );",
          "",
          "[Added Lines]",
          "820:     file_data->file_len = pntoh32( header_buffer + 0x8);",
          "821:     file_data->num_of_records = pntoh32( header_buffer + 0xC );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "851:         read_buffer = file_data->seq_read_buff;",
          "854:         if (rec_len < K12_RECORD_TYPE + 4) {",
          "",
          "[Removed Lines]",
          "853:         rec_len = pntohl( read_buffer + K12_RECORD_LEN );",
          "",
          "[Added Lines]",
          "853:         rec_len = pntoh32( read_buffer + K12_RECORD_LEN );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "858:                                         rec_len, K12_RECORD_TYPE + 4);",
          "859:             return -1;",
          "860:         }",
          "863:         if ( (type & K12_MASK_PACKET) == K12_REC_PACKET ||",
          "864:              (type & K12_MASK_PACKET) == K12_REC_D0020) {",
          "",
          "[Removed Lines]",
          "861:         type = pntohl( read_buffer + K12_RECORD_TYPE );",
          "",
          "[Added Lines]",
          "861:         type = pntoh32( read_buffer + K12_RECORD_TYPE );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "881:                                             rec_len, K12_SRCDESC_STACKLEN + 2);",
          "882:                 return -1;",
          "883:             }",
          "890:             K12_DBG(5,(\"k12_open: INTERFACE RECORD offset=%x interface=%x\",offset,rec->input));",
          "",
          "[Removed Lines]",
          "884:             extra_len = pntohs( read_buffer + K12_SRCDESC_EXTRALEN );",
          "885:             name_len = pntohs( read_buffer + K12_SRCDESC_NAMELEN );",
          "886:             stack_len = pntohs( read_buffer + K12_SRCDESC_STACKLEN );",
          "888:             rec->input = pntohl( read_buffer + K12_RECORD_SRC_ID );",
          "",
          "[Added Lines]",
          "884:             extra_len = pntoh16( read_buffer + K12_SRCDESC_EXTRALEN );",
          "885:             name_len = pntoh16( read_buffer + K12_SRCDESC_NAMELEN );",
          "886:             stack_len = pntoh16( read_buffer + K12_SRCDESC_STACKLEN );",
          "888:             rec->input = pntoh32( read_buffer + K12_RECORD_SRC_ID );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "906:                                                 rec_len, K12_SRCDESC_EXTRATYPE + 4);",
          "907:                     return -1;",
          "908:                 }",
          "910:                     case K12_PORT_DS0S:",
          "911:                         if (rec_len < K12_SRCDESC_DS0_MASK + 32) {",
          "",
          "[Removed Lines]",
          "909:                 switch(( rec->input_type = pntohl( read_buffer + K12_SRCDESC_EXTRATYPE ) )) {",
          "",
          "[Added Lines]",
          "909:                 switch(( rec->input_type = pntoh32( read_buffer + K12_SRCDESC_EXTRATYPE ) )) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "932:                             return -1;",
          "933:                         }",
          "937:                         break;",
          "938:                     default:",
          "939:                         break;",
          "",
          "[Removed Lines]",
          "935:                         rec->input_info.atm.vp = pntohs( read_buffer + K12_SRCDESC_ATM_VPI );",
          "936:                         rec->input_info.atm.vc = pntohs( read_buffer + K12_SRCDESC_ATM_VCI );",
          "",
          "[Added Lines]",
          "935:                         rec->input_info.atm.vp = pntoh16( read_buffer + K12_SRCDESC_ATM_VPI );",
          "936:                         rec->input_info.atm.vc = pntoh16( read_buffer + K12_SRCDESC_ATM_VCI );",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "982:             continue;",
          "983:         } else if (type == K12_REC_STK_FILE) {",
          "984:             K12_DBG(1,(\"k12_open: K12_REC_STK_FILE\"));",
          "987:             K12_ASCII_DUMP(1, read_buffer, rec_len, 0x10);",
          "989:             offset += len;",
          "",
          "[Removed Lines]",
          "985:             K12_DBG(1,(\"Field 1: 0x%08x\",pntohl( read_buffer + 0x08 )));",
          "986:             K12_DBG(1,(\"Field 2: 0x%08x\",pntohl( read_buffer + 0x0c )));",
          "",
          "[Added Lines]",
          "985:             K12_DBG(1,(\"Field 1: 0x%08x\",pntoh32( read_buffer + 0x08 )));",
          "986:             K12_DBG(1,(\"Field 2: 0x%08x\",pntoh32( read_buffer + 0x0c )));",
          "",
          "---------------"
        ],
        "wiretap/lanalyzer.c||wiretap/lanalyzer.c": [
          "File: wiretap/lanalyzer.c -> wiretap/lanalyzer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:    return -1;",
          "302:   return 0;",
          "303:  }",
          "307:  if (record_type != RT_HeaderRegular && record_type != RT_HeaderCyclic) {",
          "308:   return 0;",
          "",
          "[Removed Lines]",
          "304:  record_type = pletohs(rec_header.record_type);",
          "",
          "[Added Lines]",
          "304:  record_type = pletoh16(rec_header.record_type);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:    return -1;",
          "362:   }",
          "368:   switch (record_type) {",
          "",
          "[Removed Lines]",
          "364:   record_type = pletohs(rec_header.record_type);",
          "365:   record_length = pletohs(rec_header.record_length);",
          "",
          "[Added Lines]",
          "364:   record_type = pletoh16(rec_header.record_type);",
          "365:   record_length = pletoh16(rec_header.record_length);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "387:     cr_day = summary[0];",
          "388:     cr_month = summary[1];",
          "",
          "[Removed Lines]",
          "389:     cr_year = pletohs(&summary[2]);",
          "",
          "[Added Lines]",
          "389:     cr_year = pletoh16(&summary[2]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "403:     lanalyzer->start = mktime(&tm);",
          "407:     wth->snapshot_length = mxslc;",
          "410:     switch (board_type) {",
          "411:      case BOARD_325:",
          "412:       wth->file_encap = WTAP_ENCAP_ETHERNET;",
          "",
          "[Removed Lines]",
          "406:     mxslc = pletohs(&summary[30]);",
          "409:     board_type = pletohs(&summary[188]);",
          "",
          "[Added Lines]",
          "406:     mxslc = pletoh16(&summary[30]);",
          "409:     board_type = pletoh16(&summary[188]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "475:   return FALSE;",
          "476:  }",
          "",
          "[Removed Lines]",
          "478:  record_type = pletohs(LE_record_type);",
          "479:  record_length = pletohs(LE_record_length);",
          "",
          "[Added Lines]",
          "478:  record_type = pletoh16(LE_record_type);",
          "479:  record_length = pletoh16(LE_record_length);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "510:   return FALSE;",
          "511:  }",
          "",
          "[Removed Lines]",
          "513:  true_size = pletohs(&descriptor[4]);",
          "514:  packet_size = pletohs(&descriptor[6]);",
          "",
          "[Added Lines]",
          "513:  true_size = pletoh16(&descriptor[4]);",
          "514:  packet_size = pletoh16(&descriptor[6]);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "529:  phdr->presence_flags = WTAP_HAS_TS|WTAP_HAS_CAP_LEN;",
          "534:  t = (((guint64)time_low) << 0) + (((guint64)time_med) << 16) +",
          "535:      (((guint64)time_high) << 32);",
          "536:  tsecs = (time_t) (t/2000000);",
          "",
          "[Removed Lines]",
          "531:  time_low = pletohs(&descriptor[8]);",
          "532:  time_med = pletohs(&descriptor[10]);",
          "533:  time_high = pletohs(&descriptor[12]);",
          "",
          "[Added Lines]",
          "531:  time_low = pletoh16(&descriptor[8]);",
          "532:  time_med = pletoh16(&descriptor[10]);",
          "533:  time_high = pletoh16(&descriptor[12]);",
          "",
          "---------------"
        ],
        "wiretap/netmon.c||wiretap/netmon.c": [
          "File: wiretap/netmon.c -> wiretap/netmon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "249:   return -1;",
          "250:  }",
          "253:  if (hdr.network >= NUM_NETMON_ENCAPS",
          "254:      || netmon_encap[hdr.network] == WTAP_ENCAP_UNKNOWN) {",
          "",
          "[Removed Lines]",
          "252:  hdr.network = pletohs(&hdr.network);",
          "",
          "[Added Lines]",
          "252:  hdr.network = pletoh16(&hdr.network);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "287:  tm.tm_isdst = -1;",
          "288:  netmon->start_secs = mktime(&tm);",
          "",
          "[Removed Lines]",
          "281:  tm.tm_year = pletohs(&hdr.ts_year) - 1900;",
          "282:  tm.tm_mon = pletohs(&hdr.ts_month) - 1;",
          "283:  tm.tm_mday = pletohs(&hdr.ts_day);",
          "284:  tm.tm_hour = pletohs(&hdr.ts_hour);",
          "285:  tm.tm_min = pletohs(&hdr.ts_min);",
          "286:  tm.tm_sec = pletohs(&hdr.ts_sec);",
          "",
          "[Added Lines]",
          "281:  tm.tm_year = pletoh16(&hdr.ts_year) - 1900;",
          "282:  tm.tm_mon = pletoh16(&hdr.ts_month) - 1;",
          "283:  tm.tm_mday = pletoh16(&hdr.ts_day);",
          "284:  tm.tm_hour = pletoh16(&hdr.ts_hour);",
          "285:  tm.tm_min = pletoh16(&hdr.ts_min);",
          "286:  tm.tm_sec = pletoh16(&hdr.ts_sec);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "305:  netmon->version_major = hdr.ver_major;",
          "306:  netmon->version_minor = hdr.ver_minor;",
          "",
          "[Removed Lines]",
          "303:  netmon->start_nsecs = pletohs(&hdr.ts_msec)*1000000;",
          "",
          "[Added Lines]",
          "303:  netmon->start_nsecs = pletoh16(&hdr.ts_msec)*1000000;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "320:  frame_table_offset = pletohl(&hdr.frametableoffset);",
          "",
          "[Added Lines]",
          "320:  frame_table_offset = pletoh32(&hdr.frametableoffset);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "334:  frame_table_size = frame_table_length / (guint32)sizeof (guint32);",
          "335:  if ((frame_table_size * sizeof (guint32)) != frame_table_length) {",
          "",
          "[Removed Lines]",
          "333:  frame_table_length = pletohl(&hdr.frametablelength);",
          "",
          "[Added Lines]",
          "333:  frame_table_length = pletoh32(&hdr.frametablelength);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "390:  for (i = 0; i < frame_table_size; i++)",
          "392: #endif",
          "",
          "[Removed Lines]",
          "391:   frame_table[i] = pletohl(&frame_table[i]);",
          "",
          "[Added Lines]",
          "391:   frame_table[i] = pletoh32(&frame_table[i]);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "521:  switch (netmon->version_major) {",
          "523:  case 1:",
          "526:   break;",
          "528:  case 2:",
          "531:   break;",
          "532:  }",
          "533:  if (packet_size > WTAP_MAX_PACKET_SIZE) {",
          "",
          "[Removed Lines]",
          "524:   orig_size = pletohs(&hdr.hdr_1_x.orig_len);",
          "525:   packet_size = pletohs(&hdr.hdr_1_x.incl_len);",
          "529:   orig_size = pletohl(&hdr.hdr_2_x.orig_len);",
          "530:   packet_size = pletohl(&hdr.hdr_2_x.incl_len);",
          "",
          "[Added Lines]",
          "524:   orig_size = pletoh16(&hdr.hdr_1_x.orig_len);",
          "525:   packet_size = pletoh16(&hdr.hdr_1_x.incl_len);",
          "529:   orig_size = pletoh32(&hdr.hdr_2_x.orig_len);",
          "530:   packet_size = pletoh32(&hdr.hdr_2_x.incl_len);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "593:   break;",
          "595:  case 2:",
          "",
          "[Removed Lines]",
          "592:   delta = ((gint64)pletohl(&hdr.hdr_1_x.ts_delta))*1000000;",
          "",
          "[Added Lines]",
          "592:   delta = ((gint64)pletoh32(&hdr.hdr_1_x.ts_delta))*1000000;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "609:   delta = pletohll(&hdr.hdr_2_x.ts_delta)*10;",
          "",
          "[Added Lines]",
          "609:   delta = pletoh64(&hdr.hdr_2_x.ts_delta)*10;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "859:  }",
          "862:  if ((network & 0xF000) == NETMON_NET_PCAP_BASE) {",
          "",
          "[Removed Lines]",
          "861:  network = pletohs(trlr.trlr_2_1.network);",
          "",
          "[Added Lines]",
          "861:  network = pletoh16(trlr.trlr_2_1.network);",
          "",
          "---------------"
        ],
        "wiretap/netscaler.c||wiretap/netscaler.c": [
          "File: wiretap/netscaler.c -> wiretap/netscaler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "470:     __TNO(phdr,enumprefix,structprefix,structname,eth,Data)",
          "472: #define TRACE_FULL_V10_REC_LEN_OFF(phdr,enumprefix,structprefix,structname) \\",
          "474:     (phdr)->caplen = (phdr)->len;\\",
          "475:     TRACE_V10_REC_LEN_OFF(phdr,enumprefix,structprefix,structname)",
          "477: #define TRACE_PART_V10_REC_LEN_OFF(phdr,enumprefix,structprefix,structname) \\",
          "478:     (phdr)->presence_flags |= WTAP_HAS_CAP_LEN;\\",
          "481:     TRACE_V10_REC_LEN_OFF(phdr,enumprefix,structprefix,structname)",
          "483: #define TRACE_V20_REC_LEN_OFF(phdr,enumprefix,structprefix,structname) \\",
          "",
          "[Removed Lines]",
          "473:     (phdr)->len = pletohs(&(fp)->nsprRecordSize);\\",
          "479:     (phdr)->len =  pletohs(&pp->pp_PktSizeOrg) + nspr_pktracepart_v10_s;\\",
          "480:     (phdr)->caplen =  pletohs(&pp->nsprRecordSize);\\",
          "",
          "[Added Lines]",
          "473:     (phdr)->len = pletoh16(&(fp)->nsprRecordSize);\\",
          "479:     (phdr)->len =  pletoh16(&pp->pp_PktSizeOrg) + nspr_pktracepart_v10_s;\\",
          "480:     (phdr)->caplen =  pletoh16(&pp->nsprRecordSize);\\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "756:         for ( ; len > (gint32)(MIN(sizeof(NSPR_SIGSTR_V10), sizeof(NSPR_SIGSTR_V20))); dp++, len--)",
          "757:         {",
          "758: #define sigv10p    ((nspr_signature_v10_t*)dp)",
          "761:                 ((gint32)sizeof(NSPR_SIGSTR_V10) <= len) &&",
          "762:                 (!nspm_signature_isv10(sigv10p->sig_Signature)))",
          "763:                 return WTAP_FILE_TYPE_SUBTYPE_NETSCALER_1_0;",
          "",
          "[Removed Lines]",
          "759:             if ((pletohs(&sigv10p->nsprRecordType) == NSPR_SIGNATURE_V10) &&",
          "760:                 (pletohs(&sigv10p->nsprRecordSize) <= len) &&",
          "",
          "[Added Lines]",
          "759:             if ((pletoh16(&sigv10p->nsprRecordType) == NSPR_SIGNATURE_V10) &&",
          "760:                 (pletoh16(&sigv10p->nsprRecordSize) <= len) &&",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "777: }",
          "781: #define nspr_getv20recordtype(hdp) (hdp->phd_RecordType)",
          "782: #define nspr_getv20recordsize(hdp) \\",
          "783:     (((hdp)->phd_RecordSizeLow & NSPR_V20RECORDSIZE_2BYTES)? \\",
          "",
          "[Removed Lines]",
          "779: #define nspr_getv10recordtype(hdp) (pletohs(&hdp->nsprRecordType))",
          "780: #define nspr_getv10recordsize(hdp) (pletohs(&hdp->nsprRecordSize))",
          "",
          "[Added Lines]",
          "779: #define nspr_getv10recordtype(hdp) (pletoh16(&hdp->nsprRecordType))",
          "780: #define nspr_getv10recordsize(hdp) (pletoh16(&hdp->nsprRecordSize))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "802:                 switch (nspr_getv##ver##recordtype(fp))\\",
          "803:                 {\\",
          "804:                     case NSPR_ABSTIME_V##ver:\\",
          "806:                         nstrace->nstrace_buf_offset = nstrace_buf_offset + nspr_getv##ver##recordsize(fp);\\",
          "807:                         nstrace->nstrace_buflen = nstrace_buflen;\\",
          "808:                         return TRUE;\\",
          "",
          "[Removed Lines]",
          "805:                         ns_setabstime(nstrace, pletohl(&((nspr_abstime_v##ver##_t *) fp)->abs_Time), pletohs(&((nspr_abstime_v##ver##_t *) fp)->abs_RelTime));\\",
          "",
          "[Added Lines]",
          "805:                         ns_setabstime(nstrace, pletoh32(&((nspr_abstime_v##ver##_t *) fp)->abs_Time), pletoh16(&((nspr_abstime_v##ver##_t *) fp)->abs_RelTime));\\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "892:             (phdr)->presence_flags = WTAP_HAS_TS;\\",
          "894:             (phdr)->ts.secs = nstrace->nspm_curtime + (guint32) (nsg_creltime / 1000000000);\\",
          "895:             (phdr)->ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "896:             TRACE_FULL_V##type##_REC_LEN_OFF(phdr,v##type##_full,fp,pktracefull_v##type);\\",
          "",
          "[Removed Lines]",
          "893:             nsg_creltime += ns_hrtime2nsec(pletohl(&fp->fp_RelTimeHr));\\",
          "",
          "[Added Lines]",
          "893:             nsg_creltime += ns_hrtime2nsec(pletoh32(&fp->fp_RelTimeHr));\\",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "915:             (phdr)->presence_flags = WTAP_HAS_TS;\\",
          "917:             (phdr)->ts.secs = nstrace->nspm_curtime + (guint32) (nsg_creltime / 1000000000);\\",
          "918:             (phdr)->ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "919:             TRACE_PART_V##type##_REC_LEN_OFF(phdr,v##type##_part,pp,pktracepart_v##type);\\",
          "",
          "[Removed Lines]",
          "916:             nsg_creltime += ns_hrtime2nsec(pletohl(&pp->pp_RelTimeHr));\\",
          "",
          "[Added Lines]",
          "916:             nsg_creltime += ns_hrtime2nsec(pletoh32(&pp->pp_RelTimeHr));\\",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "925:             nstrace->nstrace_buflen = nstrace_buflen;\\",
          "926:             return TRUE;\\",
          "929:             {",
          "930:                 GENERATE_CASE_FULL(&wth->phdr,10,100)",
          "931:                 GENERATE_CASE_PART(&wth->phdr,10,100)",
          "",
          "[Removed Lines]",
          "928:             switch (pletohs(&(( nspr_header_v10_t*)&nstrace_buf[nstrace_buf_offset])->ph_RecordType))",
          "",
          "[Added Lines]",
          "928:             switch (pletoh16(&(( nspr_header_v10_t*)&nstrace_buf[nstrace_buf_offset])->ph_RecordType))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "936:             case NSPR_ABSTIME_V10:",
          "938:                 fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "941:                 break;",
          "943:             case NSPR_RELTIME_V10:",
          "945:                 fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "948:                 break;",
          "950:             case NSPR_UNUSEDSPACE_V10:",
          "",
          "[Removed Lines]",
          "939:                 ns_setabstime(nstrace, pletohl(((nspr_abstime_v10_t *) fp)->abs_Time), pletohl(&((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "940:                 nstrace_buf_offset += pletohs(&fp->nsprRecordSize);",
          "946:                 ns_setrelativetime(nstrace, pletohl(((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "947:                 nstrace_buf_offset += pletohs(&fp->nsprRecordSize);",
          "",
          "[Added Lines]",
          "939:                 ns_setabstime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_Time), pletoh32(&((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "940:                 nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "946:                 ns_setrelativetime(nstrace, pletoh32(((nspr_abstime_v10_t *) fp)->abs_RelTime));",
          "947:                 nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "955:             default:",
          "957:                 fp = (nspr_pktracefull_v10_t *) &nstrace_buf[nstrace_buf_offset];",
          "959:                 break;",
          "960:             }",
          "961:         }",
          "",
          "[Removed Lines]",
          "958:                 nstrace_buf_offset += pletohs(&fp->nsprRecordSize);",
          "",
          "[Added Lines]",
          "958:                 nstrace_buf_offset += pletoh16(&fp->nsprRecordSize);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "971: #define TIMEDEFV20(fp,type) \\",
          "972:     do {\\",
          "973:         wth->phdr.presence_flags |= WTAP_HAS_TS;\\",
          "975:         wth->phdr.ts.secs = nstrace->nspm_curtime + (guint32) (nsg_creltime / 1000000000);\\",
          "976:         wth->phdr.ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "977:     }while(0)",
          "",
          "[Removed Lines]",
          "974:         nsg_creltime += ns_hrtime2nsec(pletohl(fp->type##_RelTimeHr));\\",
          "",
          "[Added Lines]",
          "974:         nsg_creltime += ns_hrtime2nsec(pletoh32(fp->type##_RelTimeHr));\\",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "980:     do {\\",
          "981:         wth->phdr.presence_flags |= WTAP_HAS_TS;\\",
          "984:         wth->phdr.ts.secs = (guint32) (nsg_creltime / 1000000000);\\",
          "985:         wth->phdr.ts.nsecs = (guint32) (nsg_creltime % 1000000000);\\",
          "986:     }while(0)",
          "",
          "[Removed Lines]",
          "983:         nsg_creltime = pletohll(fp->type##_AbsTimeHr);\\",
          "",
          "[Added Lines]",
          "983:         nsg_creltime = pletoh64(fp->type##_AbsTimeHr);\\",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "993: #define PPSIZEDEFV20(phdr,pp,ver) \\",
          "994:     do {\\",
          "995:         (phdr)->presence_flags |= WTAP_HAS_CAP_LEN;\\",
          "997:         (phdr)->caplen = nspr_getv20recordsize((nspr_hd_v20_t *)pp);\\",
          "998:     }while(0)",
          "",
          "[Removed Lines]",
          "996:         (phdr)->len = pletohs(&pp->pp_PktSizeOrg) + nspr_pktracepart_v##ver##_s;\\",
          "",
          "[Added Lines]",
          "996:         (phdr)->len = pletoh16(&pp->pp_PktSizeOrg) + nspr_pktracepart_v##ver##_s;\\",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1102:                 {",
          "1103:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1104:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1106:                     break;",
          "1107:                 }",
          "1109:                 case NSPR_RELTIME_V20:",
          "1110:                 {",
          "1111:                     nspr_pktracefull_v20_t *fp20 = (nspr_pktracefull_v20_t *) &nstrace_buf[nstrace_buf_offset];",
          "1113:                     nstrace_buf_offset += nspr_getv20recordsize((nspr_hd_v20_t *)fp20);",
          "1114:                     break;",
          "1115:                   }",
          "",
          "[Removed Lines]",
          "1105:                     ns_setabstime(nstrace, pletohl(&((nspr_abstime_v20_t *) fp20)->abs_Time), pletohs(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
          "1112:                     ns_setrelativetime(nstrace, pletohs(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
          "",
          "[Added Lines]",
          "1105:                     ns_setabstime(nstrace, pletoh32(&((nspr_abstime_v20_t *) fp20)->abs_Time), pletoh16(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
          "1112:                     ns_setrelativetime(nstrace, pletoh16(&((nspr_abstime_v20_t *) fp20)->abs_RelTime));",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1187:             (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##acttype;\\",
          "1188:             break;",
          "1191:     {",
          "1192:         GENERATE_CASE_FULL(phdr,10,100)",
          "1193:         GENERATE_CASE_PART(phdr,10,100)",
          "",
          "[Removed Lines]",
          "1190:     switch (pletohs(&(( nspr_header_v10_t*)pd)->ph_RecordType))",
          "",
          "[Added Lines]",
          "1190:     switch (pletoh16(&(( nspr_header_v10_t*)pd)->ph_RecordType))",
          "",
          "---------------"
        ],
        "wiretap/nettl.c||wiretap/nettl.c": [
          "File: wiretap/nettl.c -> wiretap/nettl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "384:     if (file_seek(fh, hdr_len, SEEK_CUR, err) == -1)",
          "385:  return FALSE;",
          "389:         phdr->pkt_encap = WTAP_ENCAP_NETTL_RAW_IP;",
          "392:         padlen = 0;",
          "393:     } else switch (subsys) {",
          "394:  case NETTL_SUBSYS_LAN100 :",
          "",
          "[Removed Lines]",
          "387:     if ( (pntohl(&rec_hdr.kind) & NETTL_HDR_PDU_MASK) == 0 ) {",
          "390:         length = pntohl(&rec_hdr.length);",
          "391:         caplen = pntohl(&rec_hdr.caplen);",
          "",
          "[Added Lines]",
          "387:     if ( (pntoh32(&rec_hdr.kind) & NETTL_HDR_PDU_MASK) == 0 ) {",
          "390:         length = pntoh32(&rec_hdr.length);",
          "391:         caplen = pntoh32(&rec_hdr.caplen);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "452:   phdr->pkt_encap = WTAP_ENCAP_NETTL_ETHERNET;",
          "453:      }",
          "459:      if (subsys == NETTL_SUBSYS_HPPB_FDDI) {",
          "462:                        there are an extra 3 bytes after the DSAP and SSAP",
          "463:                        for SNAP frames ???",
          "",
          "[Removed Lines]",
          "455:      length = pntohl(&rec_hdr.length);",
          "456:      caplen = pntohl(&rec_hdr.caplen);",
          "460:                 if (pntohl(&rec_hdr.kind) == NETTL_HDR_PDUIN) {",
          "",
          "[Added Lines]",
          "455:      length = pntoh32(&rec_hdr.length);",
          "456:      caplen = pntoh32(&rec_hdr.caplen);",
          "460:                 if (pntoh32(&rec_hdr.kind) == NETTL_HDR_PDUIN) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "523:   return FALSE;",
          "524:      }",
          "",
          "[Removed Lines]",
          "526:      length = pntohs(&drv_eth_hdr.length);",
          "527:      caplen = pntohs(&drv_eth_hdr.caplen);",
          "",
          "[Added Lines]",
          "526:      length = pntoh16(&drv_eth_hdr.length);",
          "527:      caplen = pntoh16(&drv_eth_hdr.caplen);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "561:      phdr->pkt_encap = WTAP_ENCAP_NETTL_X25;",
          "565:      if (file_seek(fh, padlen, SEEK_CUR, err) == -1)",
          "566:   return FALSE;",
          "",
          "[Removed Lines]",
          "562:      length = pntohl(&rec_hdr.length);",
          "563:      caplen = pntohl(&rec_hdr.caplen);",
          "",
          "[Added Lines]",
          "562:      length = pntoh32(&rec_hdr.length);",
          "563:      caplen = pntoh32(&rec_hdr.caplen);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "572:      wth->file_encap = WTAP_ENCAP_PER_PACKET;",
          "573:      phdr->pkt_encap = WTAP_ENCAP_NETTL_ETHERNET;",
          "576:             padlen = 0;",
          "577:             break;",
          "578:     }",
          "",
          "[Removed Lines]",
          "574:             length = pntohl(&rec_hdr.length);",
          "575:             caplen = pntohl(&rec_hdr.caplen);",
          "",
          "[Added Lines]",
          "574:             length = pntoh32(&rec_hdr.length);",
          "575:             caplen = pntoh32(&rec_hdr.caplen);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "593:     }",
          "594:     datalen = caplen - padlen;",
          "595:     phdr->caplen = datalen;",
          "599:     pseudo_header->nettl.subsys   = subsys;",
          "605:     if (phdr->caplen > WTAP_MAX_PACKET_SIZE) {",
          "",
          "[Removed Lines]",
          "596:     phdr->ts.secs = pntohl(&rec_hdr.sec);",
          "597:     phdr->ts.nsecs = pntohl(&rec_hdr.usec) * 1000;",
          "600:     pseudo_header->nettl.devid    = pntohl(&rec_hdr.devid);",
          "601:     pseudo_header->nettl.kind     = pntohl(&rec_hdr.kind);",
          "602:     pseudo_header->nettl.pid      = pntohl(&rec_hdr.pid);",
          "603:     pseudo_header->nettl.uid      = pntohs(&rec_hdr.uid);",
          "",
          "[Added Lines]",
          "596:     phdr->ts.secs = pntoh32(&rec_hdr.sec);",
          "597:     phdr->ts.nsecs = pntoh32(&rec_hdr.usec) * 1000;",
          "600:     pseudo_header->nettl.devid    = pntoh32(&rec_hdr.devid);",
          "601:     pseudo_header->nettl.kind     = pntoh32(&rec_hdr.kind);",
          "602:     pseudo_header->nettl.pid      = pntoh32(&rec_hdr.pid);",
          "603:     pseudo_header->nettl.uid      = pntoh16(&rec_hdr.uid);",
          "",
          "---------------"
        ],
        "wiretap/netxray.c||wiretap/netxray.c": [
          "File: wiretap/netxray.c -> wiretap/netxray.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "492:  switch (file_type) {",
          "494:  case WTAP_FILE_TYPE_SUBTYPE_NETXRAY_OLD:",
          "",
          "[Removed Lines]",
          "490:  start_timestamp = (double)pletohl(&hdr.timelo)",
          "491:      + (double)pletohl(&hdr.timehi)*4294967296.0;",
          "",
          "[Added Lines]",
          "490:  start_timestamp = (double)pletoh32(&hdr.timelo)",
          "491:      + (double)pletoh32(&hdr.timehi)*4294967296.0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "542:      bug reports).",
          "544:     if (hdr.timeunit == 2) {",
          "546:     }",
          "547:     else {",
          "548:      ticks_per_sec = TpS[hdr.timeunit];",
          "",
          "[Removed Lines]",
          "545:      ticks_per_sec = pletohl(hdr.realtick);",
          "",
          "[Added Lines]",
          "545:      ticks_per_sec = pletoh32(hdr.realtick);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "780:  wth->subtype_seek_read = netxray_seek_read;",
          "781:  wth->file_encap = file_encap;",
          "784:  netxray->ticks_per_sec = ticks_per_sec;",
          "785:  netxray->start_timestamp = start_timestamp;",
          "786:  netxray->version_major = version_major;",
          "",
          "[Removed Lines]",
          "783:  netxray->start_time = pletohl(&hdr.start_time);",
          "",
          "[Added Lines]",
          "783:  netxray->start_time = pletoh32(&hdr.start_time);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "895:  netxray->wrapped      = FALSE;",
          "901:  if (file_seek(wth->fh, netxray->start_offset, SEEK_SET, err) == -1) {",
          "",
          "[Removed Lines]",
          "896:  netxray->nframes      = pletohl(&hdr.nframes);",
          "897:  netxray->start_offset = pletohl(&hdr.start_offset);",
          "898:  netxray->end_offset   = pletohl(&hdr.end_offset);",
          "",
          "[Added Lines]",
          "896:  netxray->nframes      = pletoh32(&hdr.nframes);",
          "897:  netxray->start_offset = pletoh32(&hdr.start_offset);",
          "898:  netxray->end_offset   = pletoh32(&hdr.end_offset);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "985:  if (netxray->version_major == 0)",
          "987:  else",
          "989:  if (!wtap_read_packet_bytes(wth->fh, wth->frame_buffer, packet_size,",
          "990:      err, err_info))",
          "991:   return FALSE;",
          "",
          "[Removed Lines]",
          "986:   packet_size = pletohs(&hdr.old_hdr.len);",
          "988:   packet_size = pletohs(&hdr.hdr_1_x.incl_len);",
          "",
          "[Added Lines]",
          "986:   packet_size = pletoh16(&hdr.old_hdr.len);",
          "988:   packet_size = pletoh16(&hdr.hdr_1_x.incl_len);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1324:    if (hdr->hdr_2_x.xxx[9] & 0x04)",
          "1325:     phdr->pseudo_header.atm.flags |= ATM_RAW_CELL;",
          "1326:    phdr->pseudo_header.atm.vpi = hdr->hdr_2_x.xxx[11];",
          "1328:    phdr->pseudo_header.atm.channel =",
          "1329:        (hdr->hdr_2_x.xxx[15] & 0x10)? 1 : 0;",
          "1330:    phdr->pseudo_header.atm.cells = 0;",
          "",
          "[Removed Lines]",
          "1327:    phdr->pseudo_header.atm.vci = pletohs(&hdr->hdr_2_x.xxx[12]);",
          "",
          "[Added Lines]",
          "1327:    phdr->pseudo_header.atm.vci = pletoh16(&hdr->hdr_2_x.xxx[12]);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1406:  if (netxray->version_major == 0) {",
          "1407:   phdr->presence_flags = WTAP_HAS_TS;",
          "1410:   t /= netxray->ticks_per_sec;",
          "1411:   t -= netxray->start_timestamp;",
          "1412:   phdr->ts.secs = netxray->start_time + (long)t;",
          "",
          "[Removed Lines]",
          "1408:   t = (double)pletohl(&hdr->old_hdr.timelo)",
          "1409:       + (double)pletohl(&hdr->old_hdr.timehi)*4294967296.0;",
          "",
          "[Added Lines]",
          "1408:   t = (double)pletoh32(&hdr->old_hdr.timelo)",
          "1409:       + (double)pletoh32(&hdr->old_hdr.timehi)*4294967296.0;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1420:   phdr->caplen = packet_size - padding;",
          "1421:   phdr->len = phdr->caplen;",
          "1422:  } else {",
          "1423:   phdr->presence_flags = WTAP_HAS_TS|WTAP_HAS_CAP_LEN;",
          "1426:   t /= netxray->ticks_per_sec;",
          "1427:   t -= netxray->start_timestamp;",
          "1428:   phdr->ts.secs = netxray->start_time + (time_t)t;",
          "",
          "[Removed Lines]",
          "1419:   packet_size = pletohs(&hdr->old_hdr.len);",
          "1424:   t = (double)pletohl(&hdr->hdr_1_x.timelo)",
          "1425:       + (double)pletohl(&hdr->hdr_1_x.timehi)*4294967296.0;",
          "",
          "[Added Lines]",
          "1419:   packet_size = pletoh16(&hdr->old_hdr.len);",
          "1424:   t = (double)pletoh32(&hdr->hdr_1_x.timelo)",
          "1425:       + (double)pletoh32(&hdr->hdr_1_x.timehi)*4294967296.0;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1436:   phdr->caplen = packet_size - padding;",
          "1438:  }",
          "1439: }",
          "",
          "[Removed Lines]",
          "1435:   packet_size = pletohs(&hdr->hdr_1_x.incl_len);",
          "1437:   phdr->len = pletohs(&hdr->hdr_1_x.orig_len) - padding;",
          "",
          "[Added Lines]",
          "1435:   packet_size = pletoh16(&hdr->hdr_1_x.incl_len);",
          "1437:   phdr->len = pletoh16(&hdr->hdr_1_x.orig_len) - padding;",
          "",
          "---------------"
        ],
        "wiretap/ngsniffer.c||wiretap/ngsniffer.c": [
          "File: wiretap/ngsniffer.c -> wiretap/ngsniffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "618:   return -1;",
          "619:  }",
          "623:  if (type != REC_VERS) {",
          "",
          "[Removed Lines]",
          "621:  type = pletohs(record_type);",
          "",
          "[Added Lines]",
          "621:  type = pletoh16(record_type);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "680:  if (process_header_records(wth, err, err_info, maj_vers,",
          "681:      version.network) < 0)",
          "682:   return -1;",
          "",
          "[Removed Lines]",
          "679:  maj_vers = pletohs(&version.maj_vers);",
          "",
          "[Added Lines]",
          "679:  maj_vers = pletoh16(&version.maj_vers);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "699:    case 1:",
          "700:    case 2:",
          "",
          "[Removed Lines]",
          "697:    switch (pletohs(&version.rsvd[0])) {",
          "",
          "[Added Lines]",
          "697:    switch (pletoh16(&version.rsvd[0])) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "736:  ngsniffer = (ngsniffer_t *)g_malloc(sizeof(ngsniffer_t));",
          "737:  wth->priv = (void *)ngsniffer;",
          "738:  ngsniffer->maj_vers = maj_vers;",
          "742:  ngsniffer->seq.buf = NULL;",
          "",
          "[Removed Lines]",
          "739:  ngsniffer->min_vers = pletohs(&version.min_vers);",
          "",
          "[Added Lines]",
          "739:  ngsniffer->min_vers = pletoh16(&version.min_vers);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "763:  ngsniffer->network = version.network;",
          "767:  tm.tm_year = ((start_date&DOS_YEAR_MASK)>>DOS_YEAR_SHIFT) + DOS_YEAR_OFFSET;",
          "768:  tm.tm_mon = ((start_date&DOS_MONTH_MASK)>>DOS_MONTH_SHIFT) + DOS_MONTH_OFFSET;",
          "769:  tm.tm_mday = ((start_date&DOS_DAY_MASK)>>DOS_DAY_SHIFT);",
          "770: #if 0",
          "773:  tm.tm_hour = (start_time&0xf800)>>11;",
          "774:  tm.tm_min = (start_time&0x7e0)>>5;",
          "775:  tm.tm_sec = (start_time&0x1f)<<1;",
          "",
          "[Removed Lines]",
          "766:  start_date = pletohs(&version.date);",
          "772:  start_time = pletohs(&version.time);",
          "",
          "[Added Lines]",
          "766:  start_date = pletoh16(&version.date);",
          "772:  start_time = pletoh16(&version.time);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "827:   }",
          "830:   if ((type != REC_HEADER1) && (type != REC_HEADER2)",
          "831:    && (type != REC_HEADER3) && (type != REC_HEADER4)",
          "832:    && (type != REC_HEADER5) && (type != REC_HEADER6)",
          "",
          "[Removed Lines]",
          "829:   type = pletohs(record_type);",
          "",
          "[Added Lines]",
          "829:   type = pletoh16(record_type);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "853:    return -1;",
          "854:   }",
          "",
          "[Removed Lines]",
          "856:   length = pletohs(record_length);",
          "",
          "[Added Lines]",
          "856:   length = pletoh16(record_length);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1110:     return FALSE;",
          "1111:    }",
          "1114:    time_high = frame2.time_high;",
          "1115:    time_day = frame2.time_day;",
          "",
          "[Removed Lines]",
          "1112:    time_low = pletohs(&frame2.time_low);",
          "1113:    time_med = pletohs(&frame2.time_med);",
          "1116:    size = pletohs(&frame2.size);",
          "1117:    true_size = pletohs(&frame2.true_size);",
          "",
          "[Added Lines]",
          "1112:    time_low = pletoh16(&frame2.time_low);",
          "1113:    time_med = pletoh16(&frame2.time_med);",
          "1116:    size = pletoh16(&frame2.size);",
          "1117:    true_size = pletoh16(&frame2.true_size);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1140:     return FALSE;",
          "1141:    }",
          "1144:    time_high = frame4.time_high;",
          "1145:    time_day = frame4.time_day;",
          "",
          "[Removed Lines]",
          "1142:    time_low = pletohs(&frame4.time_low);",
          "1143:    time_med = pletohs(&frame4.time_med);",
          "1146:    size = pletohs(&frame4.size);",
          "1147:    true_size = pletohs(&frame4.true_size);",
          "",
          "[Added Lines]",
          "1142:    time_low = pletoh16(&frame4.time_low);",
          "1143:    time_med = pletoh16(&frame4.time_med);",
          "1146:    size = pletoh16(&frame4.size);",
          "1147:    true_size = pletoh16(&frame4.true_size);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1171:     return FALSE;",
          "1172:    }",
          "1175:    time_high = frame6.time_high;",
          "1176:    time_day = frame6.time_day;",
          "",
          "[Removed Lines]",
          "1173:    time_low = pletohs(&frame6.time_low);",
          "1174:    time_med = pletohs(&frame6.time_med);",
          "1177:    size = pletohs(&frame6.size);",
          "1178:    true_size = pletohs(&frame6.true_size);",
          "",
          "[Added Lines]",
          "1173:    time_low = pletoh16(&frame6.time_low);",
          "1174:    time_med = pletoh16(&frame6.time_med);",
          "1177:    size = pletoh16(&frame6.size);",
          "1178:    true_size = pletoh16(&frame6.true_size);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1523:  pseudo_header->atm.flags = 0;",
          "1525:  if (StatusWord & SW_RAW_CELL)",
          "1526:   pseudo_header->atm.flags |= ATM_RAW_CELL;",
          "1528:  aal_type = frame4->atm_info.AppTrafType & ATT_AALTYPE;",
          "1529:  hl_type = frame4->atm_info.AppTrafType & ATT_HLTYPE;",
          "1533:  switch (aal_type) {",
          "",
          "[Removed Lines]",
          "1524:  StatusWord = pletohl(&frame4->atm_info.StatusWord);",
          "1530:  vpi = pletohs(&frame4->atm_info.Vpi);",
          "1531:  vci = pletohs(&frame4->atm_info.Vci);",
          "",
          "[Added Lines]",
          "1524:  StatusWord = pletoh32(&frame4->atm_info.StatusWord);",
          "1530:  vpi = pletoh16(&frame4->atm_info.Vpi);",
          "1531:  vci = pletoh16(&frame4->atm_info.Vci);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1756:  }",
          "1757:  pseudo_header->atm.vpi = vpi;",
          "1758:  pseudo_header->atm.vci = vci;",
          "1764: }",
          "1766: static gboolean",
          "",
          "[Removed Lines]",
          "1759:  pseudo_header->atm.channel = pletohs(&frame4->atm_info.channel);",
          "1760:  pseudo_header->atm.cells = pletohs(&frame4->atm_info.cells);",
          "1761:  pseudo_header->atm.aal5t_u2u = pletohs(&frame4->atm_info.Trailer.aal5t_u2u);",
          "1762:  pseudo_header->atm.aal5t_len = pletohs(&frame4->atm_info.Trailer.aal5t_len);",
          "1763:  pseudo_header->atm.aal5t_chksum = pntohl(&frame4->atm_info.Trailer.aal5t_chksum);",
          "",
          "[Added Lines]",
          "1759:  pseudo_header->atm.channel = pletoh16(&frame4->atm_info.channel);",
          "1760:  pseudo_header->atm.cells = pletoh16(&frame4->atm_info.cells);",
          "1761:  pseudo_header->atm.aal5t_u2u = pletoh16(&frame4->atm_info.Trailer.aal5t_u2u);",
          "1762:  pseudo_header->atm.aal5t_len = pletoh16(&frame4->atm_info.Trailer.aal5t_len);",
          "1763:  pseudo_header->atm.aal5t_chksum = pntoh32(&frame4->atm_info.Trailer.aal5t_chksum);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2602:   return -1;",
          "2603:  }",
          "2604:  comp_stream->comp_offset += 2;",
          "2608:  if (blob_len_host < 0) {",
          "",
          "[Removed Lines]",
          "2605:  blob_len_host = pletohs(&blob_len);",
          "",
          "[Added Lines]",
          "2605:  blob_len_host = pletoh16(&blob_len);",
          "",
          "---------------"
        ],
        "wiretap/pcap-common.c||wiretap/pcap-common.c": [
          "File: wiretap/pcap-common.c -> wiretap/pcap-common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "808:  }",
          "810:  vpi = atm_phdr[SUNATM_VPI];",
          "813:  switch (atm_phdr[SUNATM_FLAGS] & 0x0F) {",
          "",
          "[Removed Lines]",
          "811:  vci = pntohs(&atm_phdr[SUNATM_VCI]);",
          "",
          "[Added Lines]",
          "811:  vci = pntoh16(&atm_phdr[SUNATM_VCI]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "896:  }",
          "898:  vpi = atm_phdr[NOKIAATM_VPI];",
          "901:  pseudo_header->atm.vpi = vpi;",
          "902:  pseudo_header->atm.vci = vci;",
          "",
          "[Removed Lines]",
          "899:  vci = pntohs(&atm_phdr[NOKIAATM_VCI]);",
          "",
          "[Added Lines]",
          "899:  vci = pntoh16(&atm_phdr[NOKIAATM_VCI]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "961:   return FALSE;",
          "962:  }",
          "966:   if (err_info != NULL)",
          "968:   return FALSE;",
          "969:  }",
          "973:  return TRUE;",
          "974: }",
          "",
          "[Removed Lines]",
          "964:  if (pntohs(&irda_phdr[IRDA_SLL_PROTOCOL_OFFSET]) != 0x0017) {",
          "971:  pseudo_header->irda.pkttype = pntohs(&irda_phdr[IRDA_SLL_PKTTYPE_OFFSET]);",
          "",
          "[Added Lines]",
          "964:  if (pntoh16(&irda_phdr[IRDA_SLL_PROTOCOL_OFFSET]) != 0x0017) {",
          "971:  pseudo_header->irda.pkttype = pntoh16(&irda_phdr[IRDA_SLL_PKTTYPE_OFFSET]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "991:  pseudo_header->mtp2.sent         = mtp2_hdr[MTP2_SENT_OFFSET];",
          "992:  pseudo_header->mtp2.annex_a_used = mtp2_hdr[MTP2_ANNEX_A_USED_OFFSET];",
          "995:  return TRUE;",
          "996: }",
          "",
          "[Removed Lines]",
          "993:  pseudo_header->mtp2.link_number  = pntohs(&mtp2_hdr[MTP2_LINK_NUMBER_OFFSET]);",
          "",
          "[Added Lines]",
          "993:  pseudo_header->mtp2.link_number  = pntoh16(&mtp2_hdr[MTP2_LINK_NUMBER_OFFSET]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1011:   return FALSE;",
          "1012:  }",
          "1016:   if (err_info != NULL)",
          "1018:   return FALSE;",
          "1019:  }",
          "1022:  pseudo_header->lapd.we_network = !!lapd_phdr[LAPD_SLL_ADDR_OFFSET+0];",
          "1024:  return TRUE;",
          "",
          "[Removed Lines]",
          "1014:  if (pntohs(&lapd_phdr[LAPD_SLL_PROTOCOL_OFFSET]) != ETH_P_LAPD) {",
          "1021:  pseudo_header->lapd.pkttype = pntohs(&lapd_phdr[LAPD_SLL_PKTTYPE_OFFSET]);",
          "",
          "[Added Lines]",
          "1014:  if (pntoh16(&lapd_phdr[LAPD_SLL_PROTOCOL_OFFSET]) != ETH_P_LAPD) {",
          "1021:  pseudo_header->lapd.pkttype = pntoh16(&lapd_phdr[LAPD_SLL_PKTTYPE_OFFSET]);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1370:     return FALSE;",
          "1371:   }",
          "1373:   pseudo_header->erf.phdr.type =  erf_hdr[8];",
          "1374:   pseudo_header->erf.phdr.flags = erf_hdr[9];",
          "",
          "[Removed Lines]",
          "1375:   pseudo_header->erf.phdr.rlen = pntohs(&erf_hdr[10]);",
          "1376:   pseudo_header->erf.phdr.lctr = pntohs(&erf_hdr[12]);",
          "1377:   pseudo_header->erf.phdr.wlen = pntohs(&erf_hdr[14]);",
          "",
          "[Added Lines]",
          "1375:   pseudo_header->erf.phdr.rlen = pntoh16(&erf_hdr[10]);",
          "1376:   pseudo_header->erf.phdr.lctr = pntoh16(&erf_hdr[12]);",
          "1377:   pseudo_header->erf.phdr.wlen = pntoh16(&erf_hdr[14]);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1418:  return FALSE;",
          "1419:       }",
          "1420:       type = erf_exhdr[0];",
          "1422:       if (i < max)",
          "1423:  memcpy(&pseudo_header->erf.ehdr_list[i].ehdr, &erf_exhdr_sw, sizeof(erf_exhdr_sw));",
          "",
          "[Removed Lines]",
          "1421:       erf_exhdr_sw = pntohll(erf_exhdr);",
          "",
          "[Added Lines]",
          "1421:       erf_exhdr_sw = pntoh64(erf_exhdr);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1458:       return FALSE;",
          "1459:     }",
          "1462:     break;",
          "1463:   case ERF_TYPE_ETH:",
          "",
          "[Removed Lines]",
          "1460:     pseudo_header->erf.subhdr.mc_hdr = pntohl(&erf_subhdr[0]);",
          "",
          "[Added Lines]",
          "1460:     pseudo_header->erf.subhdr.mc_hdr = pntoh32(&erf_subhdr[0]);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1473:       return FALSE;",
          "1474:     }",
          "1477:     break;",
          "1478:   default:",
          "",
          "[Removed Lines]",
          "1475:     pseudo_header->erf.subhdr.eth_hdr = pntohs(&erf_subhdr[0]);",
          "",
          "[Added Lines]",
          "1475:     pseudo_header->erf.subhdr.eth_hdr = pntoh16(&erf_subhdr[0]);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1500:  pseudo_header->i2c.is_event = i2c_hdr.bus & 0x80 ? 1 : 0;",
          "1501:  pseudo_header->i2c.bus = i2c_hdr.bus & 0x7f;",
          "1504:  return TRUE;",
          "1505: }",
          "",
          "[Removed Lines]",
          "1502:  pseudo_header->i2c.flags = pntohl(&i2c_hdr.flags);",
          "",
          "[Added Lines]",
          "1502:  pseudo_header->i2c.flags = pntoh32(&i2c_hdr.flags);",
          "",
          "---------------"
        ],
        "wiretap/peekclassic.c||wiretap/peekclassic.c": [
          "File: wiretap/peekclassic.c -> wiretap/peekclassic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "438: #if 0",
          "440: #endif",
          "443: #if 0",
          "444:  flags = ep_pkt[PEEKCLASSIC_V7_FLAGS_OFFSET];",
          "445: #endif",
          "446:  status = ep_pkt[PEEKCLASSIC_V7_STATUS_OFFSET];",
          "450:  if (0 == sliceLength) {",
          "",
          "[Removed Lines]",
          "439:  protoNum = pntohs(&ep_pkt[PEEKCLASSIC_V7_PROTONUM_OFFSET]);",
          "441:  length = pntohs(&ep_pkt[PEEKCLASSIC_V7_LENGTH_OFFSET]);",
          "442:  sliceLength = pntohs(&ep_pkt[PEEKCLASSIC_V7_SLICE_LENGTH_OFFSET]);",
          "447:  timestamp = pntohll(&ep_pkt[PEEKCLASSIC_V7_TIMESTAMP_OFFSET]);",
          "",
          "[Added Lines]",
          "439:  protoNum = pntoh16(&ep_pkt[PEEKCLASSIC_V7_PROTONUM_OFFSET]);",
          "441:  length = pntoh16(&ep_pkt[PEEKCLASSIC_V7_LENGTH_OFFSET]);",
          "442:  sliceLength = pntoh16(&ep_pkt[PEEKCLASSIC_V7_SLICE_LENGTH_OFFSET]);",
          "447:  timestamp = pntoh64(&ep_pkt[PEEKCLASSIC_V7_TIMESTAMP_OFFSET]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "558:      err_info);",
          "563: #if 0",
          "564:  flags = ep_pkt[PEEKCLASSIC_V56_FLAGS_OFFSET];",
          "565:  status = ep_pkt[PEEKCLASSIC_V56_STATUS_OFFSET];",
          "566: #endif",
          "568: #if 0",
          "571: #endif",
          "573: #if 0",
          "574:  memcpy(protoStr, &ep_pkt[PEEKCLASSIC_V56_PROTOSTR_OFFSET],",
          "575:      sizeof protoStr);",
          "",
          "[Removed Lines]",
          "561:  length = pntohs(&ep_pkt[PEEKCLASSIC_V56_LENGTH_OFFSET]);",
          "562:  sliceLength = pntohs(&ep_pkt[PEEKCLASSIC_V56_SLICE_LENGTH_OFFSET]);",
          "567:  timestamp = pntohl(&ep_pkt[PEEKCLASSIC_V56_TIMESTAMP_OFFSET]);",
          "569:  destNum = pntohs(&ep_pkt[PEEKCLASSIC_V56_DESTNUM_OFFSET]);",
          "570:  srcNum = pntohs(&ep_pkt[PEEKCLASSIC_V56_SRCNUM_OFFSET]);",
          "572:  protoNum = pntohs(&ep_pkt[PEEKCLASSIC_V56_PROTONUM_OFFSET]);",
          "",
          "[Added Lines]",
          "561:  length = pntoh16(&ep_pkt[PEEKCLASSIC_V56_LENGTH_OFFSET]);",
          "562:  sliceLength = pntoh16(&ep_pkt[PEEKCLASSIC_V56_SLICE_LENGTH_OFFSET]);",
          "567:  timestamp = pntoh32(&ep_pkt[PEEKCLASSIC_V56_TIMESTAMP_OFFSET]);",
          "569:  destNum = pntoh16(&ep_pkt[PEEKCLASSIC_V56_DESTNUM_OFFSET]);",
          "570:  srcNum = pntoh16(&ep_pkt[PEEKCLASSIC_V56_SRCNUM_OFFSET]);",
          "572:  protoNum = pntoh16(&ep_pkt[PEEKCLASSIC_V56_PROTONUM_OFFSET]);",
          "",
          "---------------"
        ],
        "wiretap/peektagged.c||wiretap/peektagged.c": [
          "File: wiretap/peektagged.c -> wiretap/peektagged.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "426:      return -1;",
          "427:  }",
          "428:  header_len += (int) sizeof(tag_value);",
          "430:  switch (tag) {",
          "432:  case TAG_PEEKTAGGED_LENGTH:",
          "",
          "[Removed Lines]",
          "429:  tag = pletohs(&tag_value[0]);",
          "",
          "[Added Lines]",
          "429:  tag = pletoh16(&tag_value[0]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "436:   return -1;",
          "437:      }",
          "439:      saw_length = TRUE;",
          "440:      break;",
          "",
          "[Removed Lines]",
          "438:      hdr_info.length = pletohl(&tag_value[2]);",
          "",
          "[Added Lines]",
          "438:      hdr_info.length = pletoh32(&tag_value[2]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "446:   return -1;",
          "447:      }",
          "449:      saw_timestamp_lower = TRUE;",
          "450:      break;",
          "",
          "[Removed Lines]",
          "448:      hdr_info.timestamp.lower = pletohl(&tag_value[2]);",
          "",
          "[Added Lines]",
          "448:      hdr_info.timestamp.lower = pletoh32(&tag_value[2]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "456:   return -1;",
          "457:      }",
          "459:      saw_timestamp_upper = TRUE;",
          "460:      break;",
          "",
          "[Removed Lines]",
          "458:      hdr_info.timestamp.upper = pletohl(&tag_value[2]);",
          "",
          "[Added Lines]",
          "458:      hdr_info.timestamp.upper = pletoh32(&tag_value[2]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "464:      break;",
          "466:  case TAG_PEEKTAGGED_CHANNEL:",
          "468:      break;",
          "470:  case TAG_PEEKTAGGED_RATE:",
          "472:      break;",
          "474:  case TAG_PEEKTAGGED_SIGNAL_PERC:",
          "476:      break;",
          "478:  case TAG_PEEKTAGGED_SIGNAL_DBM:",
          "",
          "[Removed Lines]",
          "467:      hdr_info.ieee_802_11.channel = pletohl(&tag_value[2]);",
          "471:      hdr_info.ieee_802_11.data_rate = pletohl(&tag_value[2]);",
          "475:      hdr_info.ieee_802_11.signal_level = pletohl(&tag_value[2]);",
          "",
          "[Added Lines]",
          "467:      hdr_info.ieee_802_11.channel = pletoh32(&tag_value[2]);",
          "471:      hdr_info.ieee_802_11.data_rate = pletoh32(&tag_value[2]);",
          "475:      hdr_info.ieee_802_11.signal_level = pletoh32(&tag_value[2]);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "492:      break;",
          "494:  case TAG_PEEKTAGGED_SLICE_LENGTH:",
          "496:      break;",
          "498:  default:",
          "",
          "[Removed Lines]",
          "495:      hdr_info.sliceLength = pletohl(&tag_value[2]);",
          "",
          "[Added Lines]",
          "495:      hdr_info.sliceLength = pletoh32(&tag_value[2]);",
          "",
          "---------------"
        ],
        "wiretap/pppdump.c||wiretap/pppdump.c": [
          "File: wiretap/pppdump.c -> wiretap/pppdump.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:  state = (pppdump_t *)g_malloc(sizeof(pppdump_t));",
          "290:  wth->priv = (void *)state;",
          "292:  state->tenths = 0;",
          "294:  init_state(state);",
          "",
          "[Removed Lines]",
          "291:  state->timestamp = pntohl(&buffer[1]);",
          "",
          "[Added Lines]",
          "291:  state->timestamp = pntoh32(&buffer[1]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "663:    case PPPD_RESET_TIME:",
          "664:     wtap_file_read_unknown_bytes(&time_long, sizeof(guint32), fh, err, err_info);",
          "665:     state->offset += sizeof(guint32);",
          "667:     state->tenths = 0;",
          "668:     break;",
          "670:    case PPPD_TIME_STEP_LONG:",
          "671:     wtap_file_read_unknown_bytes(&time_long, sizeof(guint32), fh, err, err_info);",
          "672:     state->offset += sizeof(guint32);",
          "675:     if (state->tenths >= 10) {",
          "676:      state->timestamp += state->tenths / 10;",
          "",
          "[Removed Lines]",
          "666:     state->timestamp = pntohl(&time_long);",
          "673:     state->tenths += pntohl(&time_long);",
          "",
          "[Added Lines]",
          "666:     state->timestamp = pntoh32(&time_long);",
          "673:     state->tenths += pntoh32(&time_long);",
          "",
          "---------------"
        ],
        "wiretap/radcom.c||wiretap/radcom.c": [
          "File: wiretap/radcom.c -> wiretap/radcom.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:  wth->tsprecision = WTAP_FILE_TSPREC_USEC;",
          "172: #if 0",
          "174:  tm.tm_mon = start_date.month-1;",
          "175:  tm.tm_mday = start_date.day;",
          "177:  tm.tm_hour = sec/3600;",
          "178:  tm.tm_min = (sec%3600)/60;",
          "179:  tm.tm_sec = sec%60;",
          "",
          "[Removed Lines]",
          "173:  tm.tm_year = pletohs(&start_date.year)-1900;",
          "176:  sec = pletohl(&start_date.sec);",
          "",
          "[Added Lines]",
          "173:  tm.tm_year = pletoh16(&start_date.year)-1900;",
          "176:  sec = pletoh32(&start_date.sec);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "329:   return FALSE;",
          "330:  }",
          "333:  if (data_length == 0) {",
          "",
          "[Removed Lines]",
          "332:  data_length = pletohs(&hdr.data_length);",
          "",
          "[Added Lines]",
          "332:  data_length = pletoh16(&hdr.data_length);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "340:   return FALSE;",
          "341:  }",
          "345:  phdr->presence_flags = WTAP_HAS_TS|WTAP_HAS_CAP_LEN;",
          "348:  tm.tm_mon = (hdr.date.month&0x0f)-1;",
          "349:  tm.tm_mday = hdr.date.day;",
          "351:  tm.tm_hour = sec/3600;",
          "352:  tm.tm_min = (sec%3600)/60;",
          "353:  tm.tm_sec = sec%60;",
          "354:  tm.tm_isdst = -1;",
          "355:  phdr->ts.secs = mktime(&tm);",
          "358:  switch (wth->file_encap) {",
          "",
          "[Removed Lines]",
          "342:  length = pletohs(&hdr.length);",
          "343:  real_length = pletohs(&hdr.real_length);",
          "347:  tm.tm_year = pletohs(&hdr.date.year)-1900;",
          "350:  sec = pletohl(&hdr.date.sec);",
          "356:  phdr->ts.nsecs = pletohl(&hdr.date.usec) * 1000;",
          "",
          "[Added Lines]",
          "342:  length = pletoh16(&hdr.length);",
          "343:  real_length = pletoh16(&hdr.real_length);",
          "347:  tm.tm_year = pletoh16(&hdr.date.year)-1900;",
          "350:  sec = pletoh32(&hdr.date.sec);",
          "356:  phdr->ts.nsecs = pletoh32(&hdr.date.usec) * 1000;",
          "",
          "---------------"
        ],
        "wiretap/snoop.c||wiretap/snoop.c": [
          "File: wiretap/snoop.c -> wiretap/snoop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:  }",
          "686:  vpi = atm_phdr.vpi;",
          "",
          "[Removed Lines]",
          "687:  vci = pntohs(&atm_phdr.vci);",
          "",
          "[Added Lines]",
          "687:  vci = pntoh16(&atm_phdr.vci);",
          "",
          "---------------"
        ],
        "wiretap/stanag4607.c||wiretap/stanag4607.c": [
          "File: wiretap/stanag4607.c -> wiretap/stanag4607.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     goto fail;",
          "69:   offset += bytes_read;",
          "74:     return FALSE;",
          "75:   }",
          "79:   phdr->caplen = packet_size;",
          "80:   phdr->len = packet_size;",
          "",
          "[Removed Lines]",
          "71:   if (!is_valid_id(pntohs(&stanag_pkt_hdr[0]))) {",
          "78:   packet_size = pntohl(&stanag_pkt_hdr[2]);",
          "",
          "[Added Lines]",
          "71:   if (!is_valid_id(pntoh16(&stanag_pkt_hdr[0]))) {",
          "78:   packet_size = pntoh32(&stanag_pkt_hdr[2]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:       goto fail;",
          "102:     offset += bytes_read;",
          "105:     tm.tm_mon = mseg[37] - 1;",
          "106:     tm.tm_mday = mseg[38];",
          "107:     tm.tm_hour = 0;",
          "",
          "[Removed Lines]",
          "104:     tm.tm_year = pntohs(&mseg[35]) - 1900;",
          "",
          "[Added Lines]",
          "104:     tm.tm_year = pntoh16(&mseg[35]) - 1900;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "124:     if (bytes_read != sizeof dseg)",
          "125:       goto fail;",
          "126:     offset += bytes_read;",
          "128:   }",
          "129:   if (0 != millisecs) {",
          "130:     secs = millisecs/1000;",
          "",
          "[Removed Lines]",
          "127:     millisecs = pntohl(&dseg[15]);",
          "",
          "[Added Lines]",
          "127:     millisecs = pntoh32(&dseg[15]);",
          "",
          "---------------"
        ],
        "wiretap/visual.c||wiretap/visual.c": [
          "File: wiretap/visual.c -> wiretap/visual.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "209:     }",
          "213:     if (vfile_hdr.file_version != 1)",
          "214:     {",
          "",
          "[Removed Lines]",
          "212:     vfile_hdr.file_version = pletohs(&vfile_hdr.file_version);",
          "",
          "[Added Lines]",
          "212:     vfile_hdr.file_version = pletoh16(&vfile_hdr.file_version);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:        the first packet is read.",
          "229:     {",
          "231:         encap = WTAP_ENCAP_ETHERNET;",
          "",
          "[Removed Lines]",
          "228:     switch (pletohs(&vfile_hdr.media_type))",
          "",
          "[Added Lines]",
          "228:     switch (pletoh16(&vfile_hdr.media_type))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "263:     wth->file_type_subtype = WTAP_FILE_TYPE_SUBTYPE_VISUAL_NETWORKS;",
          "264:     wth->file_encap = encap;",
          "268:     wth->subtype_read = visual_read;",
          "",
          "[Removed Lines]",
          "265:     wth->snapshot_length = pletohs(&vfile_hdr.max_length);",
          "",
          "[Added Lines]",
          "265:     wth->snapshot_length = pletoh16(&vfile_hdr.max_length);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "273:     visual = (struct visual_read_info *)g_malloc(sizeof(struct visual_read_info));",
          "274:     wth->priv = (void *)visual;",
          "277:     visual->current_pkt = 1;",
          "279:     return 1;",
          "",
          "[Removed Lines]",
          "275:     visual->num_pkts = pletohl(&vfile_hdr.num_pkts);",
          "276:     visual->start_time = ((double) pletohl(&vfile_hdr.start_time)) * 1000000;",
          "",
          "[Added Lines]",
          "275:     visual->num_pkts = pletoh32(&vfile_hdr.num_pkts);",
          "276:     visual->start_time = ((double) pletoh32(&vfile_hdr.start_time)) * 1000000;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "352:     }",
          "357:     phdr->presence_flags = WTAP_HAS_TS|WTAP_HAS_CAP_LEN;",
          "360:     t = visual->start_time;",
          "362:     secs = (time_t)(t/1000000);",
          "363:     usecs = (guint32)(t - secs*1000000);",
          "364:     phdr->ts.secs = secs;",
          "365:     phdr->ts.nsecs = usecs * 1000;",
          "",
          "[Removed Lines]",
          "355:     packet_size = pletohs(&vpkt_hdr.incl_len);",
          "361:     t += ((double)pletohl(&vpkt_hdr.ts_delta))*1000;",
          "367:     phdr->len = pletohs(&vpkt_hdr.orig_len);",
          "369:     packet_status = pletohl(&vpkt_hdr.status);",
          "",
          "[Added Lines]",
          "355:     packet_size = pletoh16(&vpkt_hdr.incl_len);",
          "361:     t += ((double)pletoh32(&vpkt_hdr.ts_delta))*1000;",
          "367:     phdr->len = pletoh16(&vpkt_hdr.orig_len);",
          "369:     packet_status = pletoh32(&vpkt_hdr.status);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "511:         case VN_AAL5:",
          "512:             phdr->pseudo_header.atm.aal = AAL_5;",
          "513:             phdr->pseudo_header.atm.type = TRAF_LLCMX;",
          "515:             break;",
          "517:         case VN_OAM:",
          "",
          "[Removed Lines]",
          "514:             phdr->pseudo_header.atm.aal5t_len = pntohl(&vatm_hdr.data_length);",
          "",
          "[Added Lines]",
          "514:             phdr->pseudo_header.atm.aal5t_len = pntoh32(&vatm_hdr.data_length);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "527:             phdr->pseudo_header.atm.aal = AAL_UNKNOWN;",
          "528:             break;",
          "529:         }",
          "535:         phdr->pseudo_header.atm.channel = vatm_hdr.info & FROM_NETWORK;",
          "",
          "[Removed Lines]",
          "530:         phdr->pseudo_header.atm.vpi = pntohs(&vatm_hdr.vpi) & 0x0FFF;",
          "531:         phdr->pseudo_header.atm.vci = pntohs(&vatm_hdr.vci);",
          "532:         phdr->pseudo_header.atm.cells = pntohs(&vatm_hdr.cell_count);",
          "",
          "[Added Lines]",
          "530:         phdr->pseudo_header.atm.vpi = pntoh16(&vatm_hdr.vpi) & 0x0FFF;",
          "531:         phdr->pseudo_header.atm.vci = pntoh16(&vatm_hdr.vci);",
          "532:         phdr->pseudo_header.atm.cells = pntoh16(&vatm_hdr.cell_count);",
          "",
          "---------------"
        ],
        "wiretap/vwr.c||wiretap/vwr.c": [
          "File: wiretap/vwr.c -> wiretap/vwr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "868:                     i = 0;",
          "869:                     while (((data_length + i) % 4) != 0)",
          "870:                         i = i + 1;",
          "874:                     if (rec_size == (data_length + v22_W_STATS_LEN + i) && (frame_type & v22_W_IS_80211) == 0x1000000) {",
          "875:                         fpga_version = S1_W_FPGA;",
          "",
          "[Removed Lines]",
          "867:                     data_length = pntohs(&s_510006_ptr[v22_W_OCTET_OFF]);",
          "872:                     frame_type = pntohl(&s_510006_ptr[v22_W_FRAME_TYPE_OFF]);",
          "",
          "[Added Lines]",
          "867:                     data_length = pntoh16(&s_510006_ptr[v22_W_OCTET_OFF]);",
          "872:                     frame_type = pntoh32(&s_510006_ptr[v22_W_FRAME_TYPE_OFF]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "880:                 if ((rec_size > v22_E_STATS_LEN) && (fpga_version == 1000)) {",
          "884:                     i = 0;",
          "885:                     while (((data_length + i) % 4) != 0)",
          "886:                         i = i + 1;",
          "",
          "[Removed Lines]",
          "883:                     data_length = pntohs(&s_510012_ptr[v22_E_OCTET_OFF]);",
          "",
          "[Added Lines]",
          "883:                     data_length = pntoh16(&s_510012_ptr[v22_E_OCTET_OFF]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "909:                 if ((rec_size > vVW510024_E_STATS_LEN) && (fpga_version == 1000)) {",
          "913:                     i = 0;",
          "914:                     while (((data_length + i) % 4) != 0)",
          "",
          "[Removed Lines]",
          "911:                     data_length = pntohs(&s_510024_ptr[vVW510024_E_MSDU_LENGTH_OFF]);",
          "",
          "[Added Lines]",
          "911:                     data_length = pntoh16(&s_510024_ptr[vVW510024_E_MSDU_LENGTH_OFF]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1082:     m_type   = s_ptr[1] & 0x7;",
          "1083:     f_tx     = !(s_ptr[1] & 0x8);",
          "1086:     flow_seq = s_ptr[4];",
          "",
          "[Removed Lines]",
          "1084:     octets   = pntohs(&s_ptr[8]);",
          "1085:     vc_id    = pntohs(&s_ptr[2]) & 0x3ff;",
          "",
          "[Added Lines]",
          "1084:     octets   = pntoh16(&s_ptr[8]);",
          "1085:     vc_id    = pntoh16(&s_ptr[2]) & 0x3ff;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1090:     for (i = 0; i < 4; i++)",
          "1091:         latency = (latency << 8) | s_ptr[40 + i];",
          "1097:     rssi = (s_ptr[21] & 0x80) ? (-1 * (s_ptr[21] & 0x7f)) : s_ptr[21];",
          "",
          "[Removed Lines]",
          "1094:     errors  = pntohs(&s_ptr[10]);",
          "1096:     info = pntohs(&s_ptr[54]);",
          "",
          "[Added Lines]",
          "1094:     errors  = pntoh16(&s_ptr[10]);",
          "1096:     info = pntoh16(&s_ptr[54]);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1268:         msdu_length = ((s_start_ptr[4] & 0x1f) << 8) + s_start_ptr[3];",
          "1269:         actual_octets = msdu_length;",
          "1272:         if (IS_TX)",
          "1273:         {",
          "1274:             rssi[0] = (s_start_ptr[2] & 0x80) ? -1 * (s_start_ptr[2] & 0x7f) : s_start_ptr[2] & 0x7f;",
          "",
          "[Removed Lines]",
          "1271:         vc_id = pntohs(&s_start_ptr[6]);",
          "",
          "[Added Lines]",
          "1271:         vc_id = pntoh16(&s_start_ptr[6]);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1299:         }",
          "1300:         msdu_length = pntoh24(&s_start_ptr[9]);",
          "1301:         actual_octets = msdu_length;",
          "1303:         for (i = 0; i < 4; i++)",
          "1304:         {",
          "1305:             if (IS_TX)",
          "",
          "[Removed Lines]",
          "1302:         vc_id = pntohs(&s_start_ptr[14]) & 0x3ff;",
          "",
          "[Added Lines]",
          "1302:         vc_id = pntoh16(&s_start_ptr[14]) & 0x3ff;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1327:     for (i = 0; i < 4; i++)",
          "1328:         tsid = (tsid << 8) | s_trail_ptr[36 + i];",
          "1332:     if ((info & 0xFC00) != 0)",
          "",
          "[Removed Lines]",
          "1330:     errors = pntohl(&s_trail_ptr[16]);",
          "1331:     info = pntohs(&s_trail_ptr[22]);",
          "1334:         ht_len = pletohs(&s_start_ptr[vwr->PLCP_LENGTH_OFF]);",
          "",
          "[Added Lines]",
          "1330:     errors = pntoh32(&s_trail_ptr[16]);",
          "1331:     info = pntoh16(&s_trail_ptr[22]);",
          "1334:         ht_len = pletoh16(&s_start_ptr[vwr->PLCP_LENGTH_OFF]);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1531:     actual_octets = msdu_length;",
          "",
          "[Removed Lines]",
          "1530:     msdu_length = pntohs(&s_ptr[vwr->OCTET_OFF]);",
          "",
          "[Added Lines]",
          "1530:     msdu_length = pntoh16(&s_ptr[vwr->OCTET_OFF]);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1535:         msdu_length = (rec_size - (int)vwr->STATS_LEN);",
          "1536:     }",
          "1539:     flow_seq   = s_ptr[vwr->FLOWSEQ_OFF];",
          "1542:     if (vwr->FPGA_VERSION == vVW510024_E_FPGA) {",
          "1544:         f_flow = validityBits & vwr->FLOW_VALID;",
          "1550:     }",
          "1551:     else {",
          "1552:         f_flow  = s_ptr[vwr->VALID_OFF] & vwr->FLOW_VALID;",
          "",
          "[Removed Lines]",
          "1538:     vc_id = pntohs(&s_ptr[vwr->VCID_OFF]) & vwr->VCID_MASK;",
          "1540:     frame_type = pntohl(&s_ptr[vwr->FRAME_TYPE_OFF]);",
          "1543:         validityBits = pntohs(&s_ptr[vwr->VALID_OFF]);",
          "1549:         errors = pntohs(&s_ptr[vwr->ERRORS_OFF]);",
          "",
          "[Added Lines]",
          "1538:     vc_id = pntoh16(&s_ptr[vwr->VCID_OFF]) & vwr->VCID_MASK;",
          "1540:     frame_type = pntoh32(&s_ptr[vwr->FRAME_TYPE_OFF]);",
          "1543:         validityBits = pntoh16(&s_ptr[vwr->VALID_OFF]);",
          "1549:         errors = pntoh16(&s_ptr[vwr->ERRORS_OFF]);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1558:     }",
          "1562:     flow_id = pntoh24(&s_ptr[vwr->FLOWID_OFF]);",
          "",
          "[Removed Lines]",
          "1557:         errors = pntohs(&s_ptr[vwr->ERRORS_OFF]);",
          "1560:     info = pntohs(&s_ptr[vwr->INFO_OFF]);",
          "",
          "[Added Lines]",
          "1557:         errors = pntoh16(&s_ptr[vwr->ERRORS_OFF]);",
          "1560:     info = pntoh16(&s_ptr[vwr->INFO_OFF]);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1568:         tsid = (tsid << 8) | s_ptr[vwr->LATVAL_OFF + i];",
          "",
          "[Removed Lines]",
          "1571:     l4id = pntohs(&s_ptr[vwr->L4ID_OFF]);",
          "",
          "[Added Lines]",
          "1571:     l4id = pntoh16(&s_ptr[vwr->L4ID_OFF]);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1737:     cmd = rec[0];",
          "1741:     if (vwr != NULL) {",
          "1742:         if ((cmd & vwr->HEADER_IS_TX) == vwr->HEADER_IS_TX)",
          "",
          "[Removed Lines]",
          "1738:     wd2 = pntohl(&rec[8]);",
          "1739:     wd3 = pntohl(&rec[12]);",
          "",
          "[Added Lines]",
          "1738:     wd2 = pntoh32(&rec[8]);",
          "1739:     wd3 = pntoh32(&rec[12]);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2099:     else",
          "2100:         ts_offset = 8;",
          "2104:     return (sig_ts & 0xffffffff);",
          "2105: }",
          "",
          "[Removed Lines]",
          "2102:     sig_ts = pletohl(&m_ptr[sig_off + ts_offset]);",
          "",
          "[Added Lines]",
          "2102:     sig_ts = pletoh32(&m_ptr[sig_off + ts_offset]);",
          "",
          "---------------"
        ],
        "wiretap/wtap-int.h||wiretap/wtap-int.h": [
          "File: wiretap/wtap-int.h -> wiretap/wtap-int.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "122: extern gint wtap_num_file_types;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124: #include <wsutil/pint.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "158:         (p)[0] = tmp;      \\",
          "159:     }",
          "",
          "[Removed Lines]",
          "170: #ifndef pntohs",
          "171: #define pntohs(p)  ((guint16)                       \\",
          "172:                     ((guint16)*((const guint8 *)(p)+0)<<8|  \\",
          "173:                      (guint16)*((const guint8 *)(p)+1)<<0))",
          "174: #endif",
          "176: #ifndef pntoh24",
          "177: #define pntoh24(p)  ((guint32)*((const guint8 *)(p)+0)<<16| \\",
          "178:                      (guint32)*((const guint8 *)(p)+1)<<8|  \\",
          "179:                      (guint32)*((const guint8 *)(p)+2)<<0)",
          "180: #endif",
          "182: #ifndef pntohl",
          "183: #define pntohl(p)  ((guint32)*((const guint8 *)(p)+0)<<24|  \\",
          "184:                     (guint32)*((const guint8 *)(p)+1)<<16|  \\",
          "185:                     (guint32)*((const guint8 *)(p)+2)<<8|   \\",
          "186:                     (guint32)*((const guint8 *)(p)+3)<<0)",
          "187: #endif",
          "189: #ifndef pntohll",
          "190: #define pntohll(p)  ((guint64)*((const guint8 *)(p)+0)<<56|  \\",
          "191:                      (guint64)*((const guint8 *)(p)+1)<<48|  \\",
          "192:                      (guint64)*((const guint8 *)(p)+2)<<40|  \\",
          "193:                      (guint64)*((const guint8 *)(p)+3)<<32|  \\",
          "194:                      (guint64)*((const guint8 *)(p)+4)<<24|  \\",
          "195:                      (guint64)*((const guint8 *)(p)+5)<<16|  \\",
          "196:                      (guint64)*((const guint8 *)(p)+6)<<8|   \\",
          "197:                      (guint64)*((const guint8 *)(p)+7)<<0)",
          "198: #endif",
          "201: #ifndef pletohs",
          "202: #define pletohs(p) ((guint16)                       \\",
          "203:                     ((guint16)*((const guint8 *)(p)+1)<<8|  \\",
          "204:                      (guint16)*((const guint8 *)(p)+0)<<0))",
          "205: #endif",
          "207: #ifndef pletoh24",
          "208: #define pletoh24(p) ((guint32)*((const guint8 *)(p)+2)<<16|  \\",
          "209:                      (guint32)*((const guint8 *)(p)+1)<<8|  \\",
          "210:                      (guint32)*((const guint8 *)(p)+0)<<0)",
          "211: #endif",
          "214: #ifndef pletohl",
          "215: #define pletohl(p) ((guint32)*((const guint8 *)(p)+3)<<24|  \\",
          "216:                     (guint32)*((const guint8 *)(p)+2)<<16|  \\",
          "217:                     (guint32)*((const guint8 *)(p)+1)<<8|   \\",
          "218:                     (guint32)*((const guint8 *)(p)+0)<<0)",
          "219: #endif",
          "222: #ifndef pletohll",
          "223: #define pletohll(p) ((guint64)*((const guint8 *)(p)+7)<<56|  \\",
          "224:                      (guint64)*((const guint8 *)(p)+6)<<48|  \\",
          "225:                      (guint64)*((const guint8 *)(p)+5)<<40|  \\",
          "226:                      (guint64)*((const guint8 *)(p)+4)<<32|  \\",
          "227:                      (guint64)*((const guint8 *)(p)+3)<<24|  \\",
          "228:                      (guint64)*((const guint8 *)(p)+2)<<16|  \\",
          "229:                      (guint64)*((const guint8 *)(p)+1)<<8|   \\",
          "230:                      (guint64)*((const guint8 *)(p)+0)<<0)",
          "231: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}