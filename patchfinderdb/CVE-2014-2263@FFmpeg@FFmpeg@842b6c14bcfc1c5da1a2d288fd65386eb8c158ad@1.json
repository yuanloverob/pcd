{
  "cve_id": "CVE-2014-2263",
  "cve_desc": "The mpegts_write_pmt function in the MPEG2 transport stream (aka DVB) muxer (libavformat/mpegtsenc.c) in FFmpeg, possibly 2.1 and earlier, allows remote attackers to have unspecified impact and vectors, which trigger an out-of-bounds write.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "842b6c14bcfc1c5da1a2d288fd65386eb8c158ad",
  "patch_info": {
    "commit_hash": "842b6c14bcfc1c5da1a2d288fd65386eb8c158ad",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/842b6c14bcfc1c5da1a2d288fd65386eb8c158ad",
    "files": [
      "libavformat/mpegtsenc.c"
    ],
    "message": "avformat/mpegtsenc: Check data array size in mpegts_write_pmt()\n\nPrevents out of array writes\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
    ]
  },
  "patch_diff": {
    "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c": [
      "File: libavformat/mpegtsenc.c -> libavformat/mpegtsenc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "259:                           data, q - data);",
      "260: }",
      "263: {",
      "264:     MpegTSWrite *ts = s->priv_data;",
      "265:     uint8_t data[1012], *q, *desc_length_ptr, *program_info_length_ptr;",
      "",
      "[Removed Lines]",
      "262: static void mpegts_write_pmt(AVFormatContext *s, MpegTSService *service)",
      "",
      "[Added Lines]",
      "262: static int mpegts_write_pmt(AVFormatContext *s, MpegTSService *service)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "315:             stream_type = STREAM_TYPE_PRIVATE_DATA;",
      "316:             break;",
      "317:         }",
      "319:         put16(&q, 0xe000 | ts_st->pid);",
      "320:         desc_length_ptr = q;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "319:         if (q - data > sizeof(data) - 32)",
      "320:             return AVERROR(EINVAL);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "346:                 len_ptr = q++;",
      "350:                     next = strchr(p, ',');",
      "351:                     if (strlen(p) != 3 && (!next || next != p + 3))",
      "",
      "[Removed Lines]",
      "349:                 for (p = lang->value; next && *len_ptr < 255 / 4 * 4; p = next + 1) {",
      "",
      "[Added Lines]",
      "353:                 for (p = lang->value; next && *len_ptr < 255 / 4 * 4 && q - data < sizeof(data) - 4; p = next + 1) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "423:                     len_ptr = q++;",
      "",
      "[Removed Lines]",
      "425:                     while (strlen(language) >= 3) {",
      "",
      "[Added Lines]",
      "429:                     while (strlen(language) >= 3 && q - data < sizeof(data) - 6) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "476:     }",
      "477:     mpegts_write_section1(&service->pmt, PMT_TID, service->sid, ts->tables_version, 0, 0,",
      "478:                           data, q - data);",
      "479: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "483:     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5e7e43c33ea45550137f5dd2b9f81deef2acbfcd",
      "candidate_info": {
        "commit_hash": "5e7e43c33ea45550137f5dd2b9f81deef2acbfcd",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/5e7e43c33ea45550137f5dd2b9f81deef2acbfcd",
        "files": [
          "libavformat/mpegtsenc.c"
        ],
        "message": "avformat/mpegtsenc: Check data array size in mpegts_write_pmt()\n\nPrevents out of array writes\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 842b6c14bcfc1c5da1a2d288fd65386eb8c158ad)\n\nConflicts:\n\n\tlibavformat/mpegtsenc.c\n(cherry picked from commit e87de3f50b765134588d0b048c32ed4b8acc16fb)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
          ],
          "candidate": [
            "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c": [
          "File: libavformat/mpegtsenc.c -> libavformat/mpegtsenc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:                           data, q - data);",
          "257: }",
          "260: {",
          "261:     MpegTSWrite *ts = s->priv_data;",
          "262:     uint8_t data[1012], *q, *desc_length_ptr, *program_info_length_ptr;",
          "",
          "[Removed Lines]",
          "259: static void mpegts_write_pmt(AVFormatContext *s, MpegTSService *service)",
          "",
          "[Added Lines]",
          "259: static int mpegts_write_pmt(AVFormatContext *s, MpegTSService *service)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "312:             stream_type = STREAM_TYPE_PRIVATE_DATA;",
          "313:             break;",
          "314:         }",
          "316:         put16(&q, 0xe000 | ts_st->pid);",
          "317:         desc_length_ptr = q;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "316:         if (q - data > sizeof(data) - 32)",
          "317:             return AVERROR(EINVAL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "343:                 len_ptr = q++;",
          "347:                     next = strchr(p, ',');",
          "348:                     if (strlen(p) != 3 && (!next || next != p + 3))",
          "",
          "[Removed Lines]",
          "346:                 for (p = lang->value; next && *len_ptr < 255 / 4 * 4; p = next + 1) {",
          "",
          "[Added Lines]",
          "350:                 for (p = lang->value; next && *len_ptr < 255 / 4 * 4 && q - data < sizeof(data) - 4; p = next + 1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "415:     }",
          "416:     mpegts_write_section1(&service->pmt, PMT_TID, service->sid, 0, 0, 0,",
          "417:                           data, q - data);",
          "418: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "422:     return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a28a3ddc4eb7322409f062f422c676f93d95ac1",
      "candidate_info": {
        "commit_hash": "4a28a3ddc4eb7322409f062f422c676f93d95ac1",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/4a28a3ddc4eb7322409f062f422c676f93d95ac1",
        "files": [
          "libavformat/mpegtsenc.c"
        ],
        "message": "avformat/mpegtsenc: Check data array size in mpegts_write_pmt()\n\nPrevents out of array writes\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 842b6c14bcfc1c5da1a2d288fd65386eb8c158ad)\n\nConflicts:\n\n\tlibavformat/mpegtsenc.c",
        "before_after_code_files": [
          "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
          ],
          "candidate": [
            "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c": [
          "File: libavformat/mpegtsenc.c -> libavformat/mpegtsenc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:                           data, q - data);",
          "260: }",
          "263: {",
          "264:     MpegTSWrite *ts = s->priv_data;",
          "265:     uint8_t data[1012], *q, *desc_length_ptr, *program_info_length_ptr;",
          "",
          "[Removed Lines]",
          "262: static void mpegts_write_pmt(AVFormatContext *s, MpegTSService *service)",
          "",
          "[Added Lines]",
          "262: static int mpegts_write_pmt(AVFormatContext *s, MpegTSService *service)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "315:             stream_type = STREAM_TYPE_PRIVATE_DATA;",
          "316:             break;",
          "317:         }",
          "319:         put16(&q, 0xe000 | ts_st->pid);",
          "320:         desc_length_ptr = q;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319:         if (q - data > sizeof(data) - 32)",
          "320:             return AVERROR(EINVAL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "346:                 len_ptr = q++;",
          "350:                     next = strchr(p, ',');",
          "351:                     if (strlen(p) != 3 && (!next || next != p + 3))",
          "",
          "[Removed Lines]",
          "349:                 for (p = lang->value; next && *len_ptr < 255 / 4 * 4; p = next + 1) {",
          "",
          "[Added Lines]",
          "353:                 for (p = lang->value; next && *len_ptr < 255 / 4 * 4 && q - data < sizeof(data) - 4; p = next + 1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "418:     }",
          "419:     mpegts_write_section1(&service->pmt, PMT_TID, service->sid, ts->tables_version, 0, 0,",
          "420:                           data, q - data);",
          "421: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "425:     return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "68b14c044a4a00d69aeb620bdb57dce533c4190a",
      "candidate_info": {
        "commit_hash": "68b14c044a4a00d69aeb620bdb57dce533c4190a",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/68b14c044a4a00d69aeb620bdb57dce533c4190a",
        "files": [
          "libavformat/mpegtsenc.c"
        ],
        "message": "avformat/mpegtsenc: Check data array size in mpegts_write_pmt()\n\nPrevents out of array writes\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 842b6c14bcfc1c5da1a2d288fd65386eb8c158ad)\n\nConflicts:\n\n\tlibavformat/mpegtsenc.c\n(cherry picked from commit e87de3f50b765134588d0b048c32ed4b8acc16fb)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
          ],
          "candidate": [
            "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c": [
          "File: libavformat/mpegtsenc.c -> libavformat/mpegtsenc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:                           data, q - data);",
          "236: }",
          "239: {",
          "241:     uint8_t data[1012], *q, *desc_length_ptr, *program_info_length_ptr;",
          "",
          "[Removed Lines]",
          "238: static void mpegts_write_pmt(AVFormatContext *s, MpegTSService *service)",
          "",
          "[Added Lines]",
          "238: static int mpegts_write_pmt(AVFormatContext *s, MpegTSService *service)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288:             stream_type = STREAM_TYPE_PRIVATE_DATA;",
          "289:             break;",
          "290:         }",
          "292:         put16(&q, 0xe000 | ts_st->pid);",
          "293:         desc_length_ptr = q;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "292:         if (q - data > sizeof(data) - 32)",
          "293:             return AVERROR(EINVAL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "311:                 len_ptr = q++;",
          "315:                     next = strchr(p, ',');",
          "316:                     if (strlen(p) != 3 && (!next || next != p + 3))",
          "",
          "[Removed Lines]",
          "314:                 for (p = lang->value; next && *len_ptr < 255 / 4 * 4; p = next + 1) {",
          "",
          "[Added Lines]",
          "318:                 for (p = lang->value; next && *len_ptr < 255 / 4 * 4 && q - data < sizeof(data) - 4; p = next + 1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "373:     }",
          "374:     mpegts_write_section1(&service->pmt, PMT_TID, service->sid, 0, 0, 0,",
          "375:                           data, q - data);",
          "376: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "380:     return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ebee19e1ed2a300c542cbaa06b6e27784d0314d",
      "candidate_info": {
        "commit_hash": "2ebee19e1ed2a300c542cbaa06b6e27784d0314d",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/2ebee19e1ed2a300c542cbaa06b6e27784d0314d",
        "files": [
          "libavformat/mpegtsenc.c"
        ],
        "message": "mpegts muxer: restore PMT table of DVB teletext from extradata\n\n* Using extradata by TS muxer to correctly restore PMT table\n* PES_header_data_length should be always 0x24 for DVB teletext,\n  according to DVB standard\n\nReviewed-by: Marton Balint <cus@passwd.hu>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
          ],
          "candidate": [
            "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c": [
          "File: libavformat/mpegtsenc.c -> libavformat/mpegtsenc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "374:         case AVMEDIA_TYPE_SUBTITLE:",
          "375:             {",
          "376:                 const char default_language[] = \"und\";",
          "391:             }",
          "392:             break;",
          "393:         case AVMEDIA_TYPE_VIDEO:",
          "",
          "[Removed Lines]",
          "377:                 const char *language = lang && strlen(lang->value)==3 ? lang->value : default_language;",
          "384:                 if(st->codec->extradata_size == 4) {",
          "385:                     memcpy(q, st->codec->extradata, 4);",
          "386:                     q += 4;",
          "387:                 } else {",
          "390:                 }",
          "",
          "[Added Lines]",
          "377:                 const char *language = lang && strlen(lang->value) >= 3 ? lang->value : default_language;",
          "379:                 if (st->codec->codec_id == AV_CODEC_ID_DVB_SUBTITLE) {",
          "387:                     if(st->codec->extradata_size == 4) {",
          "388:                         memcpy(q, st->codec->extradata, 4);",
          "389:                         q += 4;",
          "390:                     } else {",
          "393:                     }",
          "394:                 } else if (st->codec->codec_id == AV_CODEC_ID_DVB_TELETEXT) {",
          "395:                     uint8_t *len_ptr = NULL;",
          "396:                     int extradata_copied = 0;",
          "400:                     len_ptr = q++;",
          "402:                     while (strlen(language) >= 3) {",
          "407:                         if (*language != '\\0')",
          "408:                             language++;",
          "410:                         if (st->codec->extradata_size - 1 > extradata_copied) {",
          "411:                             memcpy(q, st->codec->extradata + extradata_copied, 2);",
          "412:                             extradata_copied += 2;",
          "413:                             q += 2;",
          "414:                         } else {",
          "421:                         }",
          "422:                     }",
          "425:                  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "859:     MpegTSWrite *ts = s->priv_data;",
          "860:     uint8_t buf[TS_PACKET_SIZE];",
          "861:     uint8_t *q;",
          "863:     int afc_len, stuffing_len;",
          "865:     int64_t delay = av_rescale(s->max_delay, 90000, AV_TIME_BASE);",
          "",
          "[Removed Lines]",
          "862:     int val, is_start, len, header_len, write_pcr, is_dvb_subtitle, flags;",
          "",
          "[Added Lines]",
          "897:     int val, is_start, len, header_len, write_pcr, is_dvb_subtitle, is_dvb_teletext, flags;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "923:         }",
          "924:         if (is_start) {",
          "925:             int pes_extension = 0;",
          "930:             is_dvb_subtitle = 0;",
          "931:             if (st->codec->codec_type == AVMEDIA_TYPE_VIDEO) {",
          "932:                 if (st->codec->codec_id == AV_CODEC_ID_DIRAC) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "961:             int pes_header_stuffing_bytes = 0;",
          "967:             is_dvb_teletext = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "945:             } else {",
          "950:                 }",
          "951:             }",
          "952:             header_len = 0;",
          "",
          "[Removed Lines]",
          "947:                 if (st->codec->codec_type == AVMEDIA_TYPE_SUBTITLE &&",
          "948:                     st->codec->codec_id == AV_CODEC_ID_DVB_SUBTITLE) {",
          "949:                     is_dvb_subtitle = 1;",
          "",
          "[Added Lines]",
          "984:                 if(st->codec->codec_type == AVMEDIA_TYPE_SUBTITLE) {",
          "985:                     if (st->codec->codec_id == AV_CODEC_ID_DVB_SUBTITLE) {",
          "986:                         is_dvb_subtitle = 1;",
          "987:                     } else if (st->codec->codec_id == AV_CODEC_ID_DVB_TELETEXT) {",
          "988:                         is_dvb_teletext = 1;",
          "989:                     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "983:                         flags |= 0x01;",
          "984:                         header_len += 3;",
          "985:             }",
          "986:             len = payload_size + header_len + 3;",
          "988:             if (is_dvb_subtitle) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1026:             if (is_dvb_teletext) {",
          "1027:                 pes_header_stuffing_bytes = 0x24 - header_len;",
          "1028:                 header_len = 0x24;",
          "1029:             }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1038:             }",
          "1039:             is_start = 0;",
          "1040:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1083:             if (is_dvb_teletext) {",
          "1084:                 memset(q, 0xff, pes_header_stuffing_bytes);",
          "1085:                 q += pes_header_stuffing_bytes;",
          "1086:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f8051bd31a23fa10faa7c9ae66397963dc4ec285",
      "candidate_info": {
        "commit_hash": "f8051bd31a23fa10faa7c9ae66397963dc4ec285",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f8051bd31a23fa10faa7c9ae66397963dc4ec285",
        "files": [
          "libavformat/mpegtsenc.c"
        ],
        "message": "mpegts muxer: Change the default subtitle language to \"und\"\n\nReviewed-by: Marton Balint <cus@passwd.hu>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
          ],
          "candidate": [
            "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/mpegtsenc.c||libavformat/mpegtsenc.c": [
          "File: libavformat/mpegtsenc.c -> libavformat/mpegtsenc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:             break;",
          "374:         case AVMEDIA_TYPE_SUBTITLE:",
          "375:             {",
          "",
          "[Removed Lines]",
          "376:                 const char *language;",
          "377:                 language = lang && strlen(lang->value)==3 ? lang->value : \"eng\";",
          "",
          "[Added Lines]",
          "376:                 const char default_language[] = \"und\";",
          "377:                 const char *language = lang && strlen(lang->value)==3 ? lang->value : default_language;",
          "",
          "---------------"
        ]
      }
    }
  ]
}