{
  "cve_id": "CVE-2019-1010247",
  "cve_desc": "ZmartZone IAM mod_auth_openidc 2.3.10.1 and earlier is affected by: Cross Site Scripting (XSS). The impact is: Redirecting the user to a phishing page or interacting with the application on behalf of the user. The component is: File: src/mod_auth_openidc.c, Line: 3109. The fixed version is: 2.3.10.2.",
  "repo": "zmartzone/mod_auth_openidc",
  "patch_hash": "132a4111bf3791e76437619a66336dce2ce4c79b",
  "patch_info": {
    "commit_hash": "132a4111bf3791e76437619a66336dce2ce4c79b",
    "repo": "zmartzone/mod_auth_openidc",
    "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/132a4111bf3791e76437619a66336dce2ce4c79b",
    "files": [
      "ChangeLog",
      "configure.ac",
      "src/mod_auth_openidc.c"
    ],
    "message": "release 2.3.10.2: fix XSS vulnerability for poll parameter\n\nin OIDC Session Management RP iframe; CSNC-2019-001; thanks Mischa\nBachmann\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
      "",
      "[Removed Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.3.10.1],[hans.zandbelt@zmartzone.eu])",
      "",
      "[Added Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.3.10.2],[hans.zandbelt@zmartzone.eu])",
      "",
      "---------------"
    ],
    "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
      "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3106:    \"\\n\"",
      "3107:    \"      function setTimer() {\\n\"",
      "3108:    \"        checkSession();\\n\"",
      "3110:    \"      }\\n\"",
      "3111:    \"\\n\"",
      "3112:    \"      function receiveMessage(e) {\\n\"",
      "",
      "[Removed Lines]",
      "3109:    \"        timerID = setInterval('checkSession()', %s);\\n\"",
      "",
      "[Added Lines]",
      "3109:    \"        timerID = setInterval('checkSession()', %d);\\n\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3150:  char *s_poll_interval = NULL;",
      "3151:  oidc_util_get_request_parameter(r, \"poll\", &s_poll_interval);",
      "3155:  const char *redirect_uri = oidc_get_redirect_uri(r, c);",
      "3156:  java_script = apr_psprintf(r->pool, java_script, origin, client_id,",
      "3158:    redirect_uri);",
      "3160:  return oidc_util_html_send(r, NULL, java_script, \"setTimer\", NULL, DONE);",
      "",
      "[Removed Lines]",
      "3152:  if (s_poll_interval == NULL)",
      "3153:   s_poll_interval = \"3000\";",
      "3157:    session_state, op_iframe_id, s_poll_interval, redirect_uri,",
      "",
      "[Added Lines]",
      "3152:  int poll_interval = s_poll_interval ? strtol(s_poll_interval, NULL, 10) : 0;",
      "3153:  if ((poll_interval <= 0) || (poll_interval > 3600 * 24))",
      "3154:   poll_interval = 3000;",
      "3158:    session_state, op_iframe_id, poll_interval, redirect_uri,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9b962bc79cc1b6577dd7124cd8d716710bef45b7",
      "candidate_info": {
        "commit_hash": "9b962bc79cc1b6577dd7124cd8d716710bef45b7",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/9b962bc79cc1b6577dd7124cd8d716710bef45b7",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "configure.ac",
          "src/config.c"
        ],
        "message": "fix OAuth 2.0 RS config check when OIDCOAuthServerMetadataURL is set\n\nthanks @psteniusubi; bump to 2.3.9rc6\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/config.c||src/config.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.9rc5],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.9rc6],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/config.c||src/config.c": [
          "File: src/config.c -> src/config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1963:      \"the URL scheme (%s) of the configured \" OIDCOAuthServerMetadataURL \" SHOULD be \\\"https\\\" for security reasons!\",",
          "1964:      r_uri.scheme);",
          "1965:   }",
          "1967:  }",
          "1969:  if (c->oauth.introspection_endpoint_url == NULL) {",
          "",
          "[Removed Lines]",
          "1966:   return TRUE;",
          "",
          "[Added Lines]",
          "1966:   return OK;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f301098304925190ec104e64c89de9d9c695473",
      "candidate_info": {
        "commit_hash": "2f301098304925190ec104e64c89de9d9c695473",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/2f301098304925190ec104e64c89de9d9c695473",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/mod_auth_openidc.c",
          "src/mod_auth_openidc.h"
        ],
        "message": "add session expiry info to session info hook response\n\n- session inactivity key is `timeout` now (was `exp`)\n- session expiry key is `exp`\n- bump to 2.3.11rc2\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c",
          "src/mod_auth_openidc.h||src/mod_auth_openidc.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.11rc1],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.11rc2],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3496:     session->state);",
          "3497:   json_object_set_new(j_session, OIDC_HOOK_INFO_SESSION_UUID,",
          "3498:     json_string(session->uuid));",
          "3500:     json_integer(apr_time_sec(session->expiry)));",
          "3501:   json_object_set_new(j_session, OIDC_HOOK_INFO_SESSION_REMOTE_USER,",
          "3502:     json_string(session->remote_user));",
          "3503:   json_object_set_new(json, OIDC_HOOK_INFO_SESSION, j_session);",
          "3504:  }",
          "3506:  if (apr_hash_get(c->info_hook_data, OIDC_HOOK_INFO_REFRESH_TOKEN,",
          "",
          "[Removed Lines]",
          "3499:   json_object_set_new(j_session, OIDC_HOOK_INFO_SESSION_EXP,",
          "",
          "[Added Lines]",
          "3499:   json_object_set_new(j_session, OIDC_HOOK_INFO_SESSION_TIMEOUT,",
          "3501:   apr_time_t session_expires = oidc_session_get_session_expires(r,",
          "3502:     session);",
          "3503:   json_object_set_new(j_session, OIDC_HOOK_INFO_SESSION_EXP,",
          "3504:     json_integer(apr_time_sec(session_expires)));",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.h||src/mod_auth_openidc.h": [
          "File: src/mod_auth_openidc.h -> src/mod_auth_openidc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "546: #define OIDC_HOOK_INFO_SESSION_STATE       \"state\"",
          "547: #define OIDC_HOOK_INFO_SESSION_UUID        \"uuid\"",
          "548: #define OIDC_HOOK_INFO_SESSION_EXP         \"exp\"",
          "549: #define OIDC_HOOK_INFO_SESSION_REMOTE_USER \"remote_user\"",
          "550: #define OIDC_HOOK_INFO_REFRESH_TOKEN       \"refresh_token\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "549: #define OIDC_HOOK_INFO_SESSION_TIMEOUT     \"timeout\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8a50d42b21a8296c1322715b8245b53b82ce32f",
      "candidate_info": {
        "commit_hash": "e8a50d42b21a8296c1322715b8245b53b82ce32f",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/e8a50d42b21a8296c1322715b8245b53b82ce32f",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/cache/common.c"
        ],
        "message": "compile with with Libressl; closes #358\n\n- thanks @hihellobolke\n- bump to 2.3.5rc0\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/cache/common.c||src/cache/common.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.4],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.5rc0],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/cache/common.c||src/cache/common.c": [
          "File: src/cache/common.c -> src/cache/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "234: #define OIDC_CACHE_CIPHER       EVP_aes_256_gcm()",
          "235: #define OIDC_CACHE_TAG_LEN       16",
          "238: #define OIDC_CACHE_CRYPTO_GET_TAG     EVP_CTRL_AEAD_GET_TAG",
          "239: #define OIDC_CACHE_CRYPTO_SET_TAG     EVP_CTRL_AEAD_SET_TAG",
          "240: #define OIDC_CACHE_CRYPTO_SET_IVLEN     EVP_CTRL_AEAD_SET_IVLEN",
          "",
          "[Removed Lines]",
          "237: #if (OPENSSL_VERSION_NUMBER >= 0x10100005L)",
          "",
          "[Added Lines]",
          "237: #if (OPENSSL_VERSION_NUMBER >= 0x10100005L && !defined(LIBRESSL_VERSION_NUMBER))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d7beda451396c39cc95bcb09b705513e100baf9",
      "candidate_info": {
        "commit_hash": "2d7beda451396c39cc95bcb09b705513e100baf9",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/2d7beda451396c39cc95bcb09b705513e100baf9",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "configure.ac",
          "src/oauth.c"
        ],
        "message": "correct caching for OIDCOAuthServerMetadataURL; thanks Lance F\n\nbump to 2.4.0rc4\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/oauth.c||src/oauth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.0rc3],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.0rc4],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/oauth.c||src/oauth.c": [
          "File: src/oauth.c -> src/oauth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:    return FALSE;",
          "108:   }",
          "111:     apr_time_now() + (c->provider_metadata_refresh_interval <= 0 ? apr_time_from_sec( OIDC_CACHE_PROVIDER_METADATA_EXPIRY_DEFAULT) : c->provider_metadata_refresh_interval));",
          "113:  } else {",
          "",
          "[Removed Lines]",
          "110:   oidc_cache_set_provider(r, c->oauth.metadata_url, s_json,",
          "",
          "[Added Lines]",
          "110:   oidc_cache_set_oauth_provider(r, c->oauth.metadata_url, s_json,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8a4b2421c98c27d0ab6a7e1a3582defdf045780a",
      "candidate_info": {
        "commit_hash": "8a4b2421c98c27d0ab6a7e1a3582defdf045780a",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/8a4b2421c98c27d0ab6a7e1a3582defdf045780a",
        "files": [
          "configure.ac",
          "src/session.c"
        ],
        "message": "2.3.7rc2: avoid memory leak in refactored session_clear\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/session.c||src/session.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.7rc1],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.3.7rc2],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/session.c||src/session.c": [
          "File: src/session.c -> src/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:  strncpy(z->uuid, \"\", strlen(\"\"));",
          "118:  z->remote_user = NULL;",
          "119:  z->expiry = 0;",
          "121:   json_decref(z->state);",
          "123: }",
          "",
          "[Removed Lines]",
          "120:  if (z->state)",
          "122:  z->state = json_object();",
          "",
          "[Added Lines]",
          "120:  if (z->state) {",
          "122:   z->state = NULL;",
          "123:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "278:   rc = oidc_session_load_cookie(r, c, z);",
          "282:   json_t *j_expires = json_object_get(z->state, OIDC_SESSION_EXPIRY_KEY);",
          "283:   if (j_expires)",
          "",
          "[Removed Lines]",
          "280:  if (rc == TRUE) {",
          "",
          "[Added Lines]",
          "281:  if ((rc == TRUE) && (z->state != NULL)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "327:   oidc_session_set(r, z, OIDC_SESSION_REMOTE_USER_KEY, z->remote_user);",
          "328:   json_object_set_new(z->state, OIDC_SESSION_EXPIRY_KEY,",
          "329:     json_integer(apr_time_sec(z->expiry)));",
          "337:  }",
          "339:  if (c->session_type == OIDC_SESSION_TYPE_SERVER_CACHE)",
          "",
          "[Removed Lines]",
          "330:  }",
          "332:  if ((first_time) && (p_tb_id != NULL)) {",
          "333:   oidc_debug(r,",
          "334:     \"Provided Token Binding ID environment variable found; adding its value to the session state\");",
          "335:   oidc_session_set(r, z, OIDC_SESSION_PROVIDED_TOKEN_BINDING_KEY,",
          "336:     p_tb_id);",
          "",
          "[Added Lines]",
          "332:   if ((first_time) && (p_tb_id != NULL)) {",
          "333:    oidc_debug(r,",
          "334:      \"Provided Token Binding ID environment variable found; adding its value to the session state\");",
          "335:    oidc_session_set(r, z, OIDC_SESSION_PROVIDED_TOKEN_BINDING_KEY,",
          "336:      p_tb_id);",
          "337:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "355: apr_byte_t oidc_session_free(request_rec *r, oidc_session_t *z) {",
          "361:  return TRUE;",
          "362: }",
          "",
          "[Removed Lines]",
          "356:  if (z->state) {",
          "357:   json_decref(z->state);",
          "358:   z->state = NULL;",
          "359:  }",
          "360:  z->expiry = 0;",
          "",
          "[Added Lines]",
          "357:  oidc_session_clear(r, z);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "375: apr_byte_t oidc_session_get(request_rec *r, oidc_session_t *z, const char *key,",
          "376:   const char **value) {",
          "379:  oidc_json_object_get_string(r->pool, z->state, key, (char **) value, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "375:  if (z->state == NULL)",
          "376:   z->state = json_object();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "387: apr_byte_t oidc_session_set(request_rec *r, oidc_session_t *z, const char *key,",
          "388:   const char *value) {",
          "391:  if (value) {",
          "392:   json_object_set_new(z->state, key, json_string(value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "390:  if (z->state == NULL)",
          "391:   z->state = json_object();",
          "",
          "---------------"
        ]
      }
    }
  ]
}