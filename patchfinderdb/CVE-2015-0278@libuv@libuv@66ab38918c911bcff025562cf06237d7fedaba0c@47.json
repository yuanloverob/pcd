{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c021ee079547bfbf90f6762115a17ff182871c19",
      "candidate_info": {
        "commit_hash": "c021ee079547bfbf90f6762115a17ff182871c19",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/c021ee079547bfbf90f6762115a17ff182871c19",
        "files": [
          "src/win/tcp.c",
          "src/win/udp.c"
        ],
        "message": "unix, windows: remove unused variables",
        "before_after_code_files": [
          "src/win/tcp.c||src/win/tcp.c",
          "src/win/udp.c||src/win/udp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/tcp.c||src/win/tcp.c": [
          "File: src/win/tcp.c -> src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "783: int uv_tcp_getsockname(uv_tcp_t* handle, struct sockaddr* name,",
          "784:     int* namelen) {",
          "786:   int result;",
          "788:   if (!(handle->flags & UV_HANDLE_BOUND)) {",
          "",
          "[Removed Lines]",
          "785:   uv_loop_t* loop = handle->loop;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "805: int uv_tcp_getpeername(uv_tcp_t* handle, struct sockaddr* name,",
          "806:     int* namelen) {",
          "808:   int result;",
          "810:   if (!(handle->flags & UV_HANDLE_BOUND)) {",
          "",
          "[Removed Lines]",
          "807:   uv_loop_t* loop = handle->loop;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/win/udp.c||src/win/udp.c": [
          "File: src/win/udp.c -> src/win/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: int uv_udp_getsockname(uv_udp_t* handle, struct sockaddr* name,",
          "40:     int* namelen) {",
          "42:   int result;",
          "44:   if (!(handle->flags & UV_HANDLE_BOUND)) {",
          "",
          "[Removed Lines]",
          "41:   uv_loop_t* loop = handle->loop;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a55522e9affe621a1a7f3fef8211b4a526ecc7b",
      "candidate_info": {
        "commit_hash": "4a55522e9affe621a1a7f3fef8211b4a526ecc7b",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/4a55522e9affe621a1a7f3fef8211b4a526ecc7b",
        "files": [
          "src/unix/stream.c"
        ],
        "message": "unix: remove superfluous check in stream.c",
        "before_after_code_files": [
          "src/unix/stream.c||src/unix/stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/stream.c||src/unix/stream.c": [
          "File: src/unix/stream.c -> src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "484:   assert(stream->accepted_fd == -1);",
          "485:   assert(!(stream->flags & UV_CLOSING));",
          "",
          "[Removed Lines]",
          "487:   if (stream->accepted_fd == -1)",
          "488:     uv__io_start(stream->loop, &stream->io_watcher, UV__POLLIN);",
          "",
          "[Added Lines]",
          "487:   uv__io_start(stream->loop, &stream->io_watcher, UV__POLLIN);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fc9e2a0bc487b299c0cd3b2c9a23aeb554b5d8d1",
      "candidate_info": {
        "commit_hash": "fc9e2a0bc487b299c0cd3b2c9a23aeb554b5d8d1",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/fc9e2a0bc487b299c0cd3b2c9a23aeb554b5d8d1",
        "files": [
          ".mailmap",
          "AUTHORS",
          "ChangeLog",
          "include/uv-version.h"
        ],
        "message": "2014.08.08, Version 0.11.28 (Unstable)\n\nChanges since version 0.11.27:\n\n* unix, windows: const-ify handle in uv_udp_getsockname (Rasmus\n  Pedersen)\n\n* windows: use UV_ECANCELED for aborted TCP writes (Sa\u00fal Ibarra\n  Corretg\u00e9)\n\n* windows: add more required environment variables (Jameson Nash)\n\n* windows: sort environment variables before calling CreateProcess\n  (Jameson Nash)\n\n* unix, windows: move uv_loop_close out of assert (John Firebaugh)\n\n* windows: fix buffer overflow on uv__getnameinfo_work() (lilohuang)\n\n* windows: add uv_backend_timeout (Jameson Nash)\n\n* test: disable tcp_close_accept on Windows (Sa\u00fal Ibarra Corretg\u00e9)\n\n* windows: read the PATH env var of the child (Alex Crichton)\n\n* include: avoid using C++ 'template' reserved word (I\u00f1aki Baz Castillo)\n\n* include: fix version number (Sa\u00fal Ibarra Corretg\u00e9)",
        "before_after_code_files": [
          "include/uv-version.h||include/uv-version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv-version.h||include/uv-version.h": [
          "File: include/uv-version.h -> include/uv-version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #define UV_VERSION_MAJOR 0",
          "34: #define UV_VERSION_MINOR 11",
          "35: #define UV_VERSION_PATCH 28",
          "",
          "[Removed Lines]",
          "36: #define UV_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "36: #define UV_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "20edfc76ad3bebe4b7cac50b968119b03dbea671",
      "candidate_info": {
        "commit_hash": "20edfc76ad3bebe4b7cac50b968119b03dbea671",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/20edfc76ad3bebe4b7cac50b968119b03dbea671",
        "files": [
          "src/win/core.c"
        ],
        "message": "windows: remove unneeded check\n\nCheking if the loop is alive is covered in the while loop afterwards.\nAlso, the stop flag will be cleared if necessary, which didn't happen\nbefore this patch.",
        "before_after_code_files": [
          "src/win/core.c||src/win/core.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/core.c||src/win/core.c": [
          "File: src/win/core.c -> src/win/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "272:   else",
          "273:     poll = &uv_poll;",
          "278:   r = uv__loop_alive(loop);",
          "279:   while (r != 0 && loop->stop_flag == 0) {",
          "280:     uv_update_time(loop);",
          "",
          "[Removed Lines]",
          "275:   if (!uv__loop_alive(loop))",
          "276:     return 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4c12adff648bc4ebd5038e8186069193b22a693",
      "candidate_info": {
        "commit_hash": "d4c12adff648bc4ebd5038e8186069193b22a693",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/d4c12adff648bc4ebd5038e8186069193b22a693",
        "files": [
          "Makefile.am",
          "Makefile.mingw",
          "include/uv-version.h",
          "include/uv.h",
          "src/version.c",
          "uv.gyp"
        ],
        "message": "include: expose libuv version in header files",
        "before_after_code_files": [
          "Makefile.am||Makefile.am",
          "Makefile.mingw||Makefile.mingw",
          "include/uv-version.h||include/uv-version.h",
          "include/uv.h||include/uv.h",
          "src/version.c||src/version.c",
          "uv.gyp||uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: AM_CPPFLAGS = -I$(top_srcdir)/include \\",
          "18:               -I$(top_srcdir)/src",
          "22: CLEANFILES =",
          "",
          "[Removed Lines]",
          "20: include_HEADERS=include/uv.h include/uv-errno.h",
          "",
          "[Added Lines]",
          "20: include_HEADERS=include/uv.h include/uv-errno.h include/uv-version.h",
          "",
          "---------------"
        ],
        "Makefile.mingw||Makefile.mingw": [
          "File: Makefile.mingw -> Makefile.mingw",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: INCLUDES = include/stdint-msvc2008.h \\",
          "27:            include/tree.h \\",
          "28:            include/uv-errno.h \\",
          "29:            include/uv-win.h \\",
          "30:            include/uv.h \\",
          "31:            src/queue.h \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:            include/uv-version.h \\",
          "",
          "---------------"
        ],
        "include/uv-version.h||include/uv-version.h": [
          "File: include/uv-version.h -> include/uv-version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #ifndef UV_VERSION_H",
          "23: #define UV_VERSION_H",
          "33: #define UV_VERSION_MAJOR 0",
          "34: #define UV_VERSION_MINOR 11",
          "35: #define UV_VERSION_PATCH 20",
          "36: #define UV_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ],
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #endif",
          "48: #include \"uv-errno.h\"",
          "49: #include <stddef.h>",
          "51: #if defined(_MSC_VER) && _MSC_VER < 1600",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: #include \"uv-version.h\"",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"uv.h\"",
          "38: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "39:                      (UV_VERSION_MINOR <<  8) | \\",
          "40:                      (UV_VERSION_PATCH))",
          "",
          "[Removed Lines]",
          "32: #define UV_VERSION_MAJOR 0",
          "33: #define UV_VERSION_MINOR 11",
          "34: #define UV_VERSION_PATCH 20",
          "35: #define UV_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "uv.gyp||uv.gyp": [
          "File: uv.gyp -> uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:         'include/uv.h',",
          "62:         'include/tree.h',",
          "63:         'include/uv-errno.h',",
          "64:         'src/fs-poll.c',",
          "65:         'src/inet.c',",
          "66:         'src/queue.h',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:         'include/uv-version.h',",
          "",
          "---------------"
        ]
      }
    }
  ]
}