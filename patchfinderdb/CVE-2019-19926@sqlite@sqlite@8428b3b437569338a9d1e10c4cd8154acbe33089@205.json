{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "21826f44bfe1551240713c0332f3db92de3fd80f",
      "candidate_info": {
        "commit_hash": "21826f44bfe1551240713c0332f3db92de3fd80f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/21826f44bfe1551240713c0332f3db92de3fd80f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Improved VDBE branch coverage in the run-time frame-spec error detection logic of window functions.\n\nFossilOrigin-Name: f56d305a7bad6608d51d8c8cef417ddb66cff50f0a75d28554ea669e47f3d90d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8681750e855a020ee374cb9f973f701a72068e33f97d0101a4fab3a228e5ebda",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1309:     int regString = sqlite3GetTempReg(pParse);",
          "1310:     sqlite3VdbeAddOp4(v, OP_String8, 0, regString, 0, \"\", P4_STATIC);",
          "1311:     sqlite3VdbeAddOp3(v, OP_Ge, regString, sqlite3VdbeCurrentAddr(v)+2, reg);",
          "1313:     VdbeCoverage(v);",
          "1314:     assert( eCond==3 || eCond==4 );",
          "1315:     VdbeCoverageIf(v, eCond==3);",
          "",
          "[Removed Lines]",
          "1312:     sqlite3VdbeChangeP5(v, SQLITE_AFF_NUMERIC);",
          "",
          "[Added Lines]",
          "1312:     sqlite3VdbeChangeP5(v, SQLITE_AFF_NUMERIC|SQLITE_JUMPIFNULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1323:     VdbeCoverageIf(v, eCond==2);",
          "1324:   }",
          "1325:   sqlite3VdbeAddOp3(v, aOp[eCond], regZero, sqlite3VdbeCurrentAddr(v)+2, reg);",
          "1331:   sqlite3MayAbort(pParse);",
          "1332:   sqlite3VdbeAddOp2(v, OP_Halt, SQLITE_ERROR, OE_Abort);",
          "1333:   sqlite3VdbeAppendP4(v, (void*)azErr[eCond], P4_STATIC);",
          "",
          "[Removed Lines]",
          "1326:   VdbeCoverageIf(v, eCond==0);",
          "1327:   VdbeCoverageIf(v, eCond==1);",
          "1328:   VdbeCoverageIf(v, eCond==2);",
          "1329:   VdbeCoverageIf(v, eCond==3);",
          "1330:   VdbeCoverageIf(v, eCond==4);",
          "",
          "[Added Lines]",
          "1328:   VdbeCoverageNeverNullIf(v, eCond==2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30842990b27387423009c9c96e34fd3e0d3c66de",
      "candidate_info": {
        "commit_hash": "30842990b27387423009c9c96e34fd3e0d3c66de",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/30842990b27387423009c9c96e34fd3e0d3c66de",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/global.c",
          "src/main.c",
          "src/shell.c.in",
          "src/sqlite.h.in",
          "src/sqliteInt.h"
        ],
        "message": "Add a TESTCTRL that disables the verification of type, name, and tbl_name in the sqlite_master table.\n\nFossilOrigin-Name: 48d9b48ab4ace234eb1a055cf33cb533a1c3aa82d0a6e086d96226bd9474ceca",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/global.c||src/global.c",
          "src/main.c||src/main.c",
          "src/shell.c.in||src/shell.c.in",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/sqliteInt.h||src/sqliteInt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 724f4df9ccc2b683f7091a3f7a8c20ee210f44d7a610cd1b4c49da1c274add08",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "850:      || sqlite3_stricmp(zName, db->init.azInit[1])",
          "851:      || sqlite3_stricmp(zTblName, db->init.azInit[2])",
          "852:     ){",
          "855:     }",
          "856:   }else{",
          "857:     if( pParse->nested==0",
          "",
          "[Removed Lines]",
          "854:       return SQLITE_ERROR;",
          "",
          "[Added Lines]",
          "853:       if( sqlite3Config.bExtraSchemaChecks ){",
          "855:         return SQLITE_ERROR;",
          "856:       }",
          "",
          "---------------"
        ],
        "src/global.c||src/global.c": [
          "File: src/global.c -> src/global.c"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4063:       break;",
          "4064:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4072:     case SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS: {",
          "4073:       sqlite3GlobalConfig.bExtraSchemaChecks = va_arg(ap, int);",
          "4074:       break;",
          "4075:     }",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "9167:       { \"byteorder\",          SQLITE_TESTCTRL_BYTEORDER,     \"\"                   },",
          "9169:       { \"imposter\",           SQLITE_TESTCTRL_IMPOSTER,   \"SCHEMA ON/OFF ROOTPAGE\"},",
          "9170:       { \"internal_functions\", SQLITE_TESTCTRL_INTERNAL_FUNCTIONS, \"BOOLEAN\"       },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9168:       { \"extra_schema_checks\",SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS,\"BOOLEAN\"       },",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "7359: #define SQLITE_TESTCTRL_PARSER_COVERAGE         26",
          "7360: #define SQLITE_TESTCTRL_RESULT_INTREAL          27",
          "7361: #define SQLITE_TESTCTRL_PRNG_SEED               28",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7362: #define SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS     29",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ]
      }
    },
    {
      "candidate_hash": "4c81cada052ef8207d32abde930b1460a0ae320f",
      "candidate_info": {
        "commit_hash": "4c81cada052ef8207d32abde930b1460a0ae320f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4c81cada052ef8207d32abde930b1460a0ae320f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in"
        ],
        "message": "Fix a typo in the documentation for sqlite3_value_frombind().  Also add a new hyperlink to that same documentation.  No code changes.\n\nFossilOrigin-Name: bf3cd9364fdfc951feb04f78728eb8e0dae12b3dc5702a36bb6e69c0abab8864",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 02ebc60b9bbc1736f4989eb56f8d31ca97fe90c930841d10986c618381ceb8b4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ]
      }
    },
    {
      "candidate_hash": "6d2566dfc2d38beb03665867df144aae5cc9eba1",
      "candidate_info": {
        "commit_hash": "6d2566dfc2d38beb03665867df144aae5cc9eba1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6d2566dfc2d38beb03665867df144aae5cc9eba1",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/tkt-3a77c9714e.test"
        ],
        "message": "Always clear the temporary register cache after coding a subroutine.\n\nFossilOrigin-Name: b6f2a7f9cdb547c925f08306df82519e41a7a0dd2cabd9861a48917bb6eef845",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/tkt-3a77c9714e.test||test/tkt-3a77c9714e.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 40e29a47d1266c16a4992e43579a51addcc632503099c4cd128f77dd4e67da3c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2868:     sqlite3VdbeAddOp1(v, OP_Return, pExpr->y.sub.regReturn);",
          "2869:     sqlite3VdbeChangeP1(v, pExpr->y.sub.iAddr-1, sqlite3VdbeCurrentAddr(v)-1);",
          "2870:   }",
          "2871: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2870:     sqlite3ClearTempRegCache(pParse);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2978:     sqlite3VdbeAddOp1(v, OP_Return, pExpr->y.sub.regReturn);",
          "2979:     sqlite3VdbeChangeP1(v, pExpr->y.sub.iAddr-1, sqlite3VdbeCurrentAddr(v)-1);",
          "2980:   }",
          "2982:   return rReg;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2981:     sqlite3ClearTempRegCache(pParse);",
          "",
          "---------------"
        ],
        "test/tkt-3a77c9714e.test||test/tkt-3a77c9714e.test": [
          "File: test/tkt-3a77c9714e.test -> test/tkt-3a77c9714e.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "",
          "[Removed Lines]",
          "1: # 2011 December 06",
          "",
          "[Added Lines]",
          "1: # 2011-12-06",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:     )",
          "69: } {FACTORING FACTOR SWIMMING SWIMM}",
          "72: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: # Similar problem discovered by dbsqlfuzz on 2019-09-18",
          "72: #",
          "73: do_execsql_test 3.0 {",
          "74:   DROP TABLE IF EXISTS t1;",
          "75:   CREATE TABLE t1(i INT PRIMARY KEY, a, b);",
          "76:   INSERT INTO t1 VALUES(NULL,'one','i');",
          "77:   CREATE INDEX i1a ON t1(a);",
          "78:   CREATE INDEX i1b ON t1(b);",
          "79:   SELECT (SELECT 1",
          "80:             FROM (SELECT 1 FROM t1 WHERE a=1 OR b='i')",
          "81:            WHERE a='o'",
          "82:               OR b IN (SELECT a=('b' IN (SELECT 'a'))))",
          "83:     FROM t1;",
          "84: } {{}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ced89124d866cd865a8546291f6588f74be2ec36",
      "candidate_info": {
        "commit_hash": "ced89124d866cd865a8546291f6588f74be2ec36",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ced89124d866cd865a8546291f6588f74be2ec36",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/parse.y",
          "test/window1.test"
        ],
        "message": "Ensure that all the new window-function keywords can still be used as SQL identifiers.\n\nFossilOrigin-Name: a6d61dfd4780eccfce5f7a5ead6c04e3b78bc4a461551fd7dd602550e0d51084",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1fbddf01b1c3fff95b05e2f2f709754e2b514296060b4846518791e7161d9ddb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "218: %endif SQLITE_OMIT_COMPOUND_SELECT",
          "219: %ifndef SQLITE_OMIT_WINDOWFUNC",
          "220:   CURRENT FOLLOWING PARTITION PRECEDING RANGE UNBOUNDED",
          "221: %endif SQLITE_OMIT_WINDOWFUNC",
          "222:   REINDEX RENAME CTIME_KW IF",
          "223:   .",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221:   EXCLUDE GROUPS OTHERS TIES",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "924:   ) FROM t1 ORDER BY a ASC;",
          "925: } {{} 200 {} 200 1 3 2 6 3 10 4 14 5 12 a 6 b 7 c 8 d 9 e 10}",
          "927: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "927: #-------------------------------------------------------------------------",
          "928: do_execsql_test 21.0 {",
          "929:   CREATE TABLE keyword_tab(",
          "930:     current, exclude, filter, following, groups, no, others, over,",
          "931:     partition, preceding, range, ties, unbounded, window",
          "932:   );",
          "933: }",
          "934: do_execsql_test 21.1 {",
          "935:   SELECT",
          "936:     current, exclude, filter, following, groups, no, others, over,",
          "937:     partition, preceding, range, ties, unbounded, window",
          "938:   FROM keyword_tab",
          "939: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}