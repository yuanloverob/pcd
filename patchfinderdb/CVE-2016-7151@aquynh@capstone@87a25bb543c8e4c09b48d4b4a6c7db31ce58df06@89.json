{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fc24d6d60291d06e6aa8bdcc6ef39948980e48c5",
      "candidate_info": {
        "commit_hash": "fc24d6d60291d06e6aa8bdcc6ef39948980e48c5",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/fc24d6d60291d06e6aa8bdcc6ef39948980e48c5",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "x86: fast path checking for X86_insn_reg_intel()",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2930:  return (l - r);",
          "2931: }",
          "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
          "2938: {",
          "2939:  unsigned int first = 0;",
          "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
          "2943:  if (!intel_regs_sorted) {",
          "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
          "",
          "[Removed Lines]",
          "2933: static bool intel_regs_sorted = false;",
          "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
          "",
          "[Added Lines]",
          "2938:  static bool intel_regs_sorted = false;",
          "2941:  unsigned int mid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2949:   intel_regs_sorted = true;",
          "2950:  }",
          "2952:  while (first <= last) {",
          "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
          "2954:    first = mid + 1;",
          "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
          "2953:    insn_regs_intel_sorted[last].insn < id) {",
          "2954:   return 0;",
          "2955:  }",
          "2958:   mid = (first + last) / 2;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2962:     break;",
          "2963:    last = mid - 1;",
          "2964:   }",
          "2966:  }",
          "",
          "[Removed Lines]",
          "2965:   mid = (first + last) / 2;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}