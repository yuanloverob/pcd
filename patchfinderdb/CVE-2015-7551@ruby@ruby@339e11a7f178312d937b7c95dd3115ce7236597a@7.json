{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "13112e53367035c28600baf4ac416cadb5e60759",
      "candidate_info": {
        "commit_hash": "13112e53367035c28600baf4ac416cadb5e60759",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/13112e53367035c28600baf4ac416cadb5e60759",
        "files": [
          "ChangeLog",
          "lib/net/http/response.rb",
          "test/net/http/test_httpresponse.rb",
          "version.h"
        ],
        "message": "merge revision(s) r48948: [Backport #10591]\n\n\t* lib/net/http/response.rb (Net::HTTPResponse): require one or more\n\t  spaces [Bug #10591].\n\t  by leriksen <leif.eriksen.au@gmail.com>\n\t  https://github.com/ruby/ruby/pull/782 fix GH-782\n\t  NOTE: graph.facebook.com returns without SP Reason-Phrase.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49652 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/net/http/response.rb||lib/net/http/response.rb",
          "test/net/http/test_httpresponse.rb||test/net/http/test_httpresponse.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/net/http/response.rb||lib/net/http/response.rb": [
          "File: lib/net/http/response.rb -> lib/net/http/response.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     def read_status_line(sock)",
          "39:       str = sock.readline",
          "41:         raise Net::HTTPBadResponse, \"wrong status line: #{str.dump}\"",
          "42:       m.captures",
          "43:     end",
          "",
          "[Removed Lines]",
          "40:       m = /\\AHTTP(?:\\/(\\d+\\.\\d+))?\\s+(\\d\\d\\d)\\s*(.*)\\z/in.match(str) or",
          "",
          "[Added Lines]",
          "40:       m = /\\AHTTP(?:\\/(\\d+\\.\\d+))?\\s+(\\d\\d\\d)(?:\\s+(.*))?\\z/in.match(str) or",
          "",
          "---------------"
        ],
        "test/net/http/test_httpresponse.rb||test/net/http/test_httpresponse.rb": [
          "File: test/net/http/test_httpresponse.rb -> test/net/http/test_httpresponse.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "244:     refute_same  uri, response.uri",
          "245:   end",
          "247: private",
          "249:   def dummy_io(str)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "247:   def test_ensure_zero_space_does_not_regress",
          "248:     io = dummy_io(<<EOS)",
          "249: HTTP/1.1 200OK",
          "250: Content-Length: 5",
          "251: Connection: close",
          "253: hello",
          "254: EOS",
          "256:     assert_raises Net::HTTPBadResponse do",
          "257:       Net::HTTPResponse.read_new(io)",
          "258:     end",
          "259:   end",
          "261:   def test_allow_trailing_space_after_status",
          "262:     io = dummy_io(<<EOS)",
          "263: HTTP/1.1 200\\s",
          "264: Content-Length: 5",
          "265: Connection: close",
          "267: hello",
          "268: EOS",
          "270:     res = Net::HTTPResponse.read_new(io)",
          "271:     assert_equal('1.1', res.http_version)",
          "272:     assert_equal('200', res.code)",
          "273:     assert_equal('', res.message)",
          "274:   end",
          "276:   def test_normal_status_line",
          "277:     io = dummy_io(<<EOS)",
          "278: HTTP/1.1 200 OK",
          "279: Content-Length: 5",
          "280: Connection: close",
          "282: hello",
          "283: EOS",
          "285:     res = Net::HTTPResponse.read_new(io)",
          "286:     assert_equal('1.1', res.http_version)",
          "287:     assert_equal('200', res.code)",
          "288:     assert_equal('OK', res.message)",
          "289:   end",
          "291:   def test_allow_empty_reason_code",
          "292:     io = dummy_io(<<EOS)",
          "293: HTTP/1.1 200",
          "294: Content-Length: 5",
          "295: Connection: close",
          "297: hello",
          "298: EOS",
          "300:     res = Net::HTTPResponse.read_new(io)",
          "301:     assert_equal('1.1', res.http_version)",
          "302:     assert_equal('200', res.code)",
          "303:     assert_equal(nil, res.message)",
          "304:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-02-19\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 298",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 299",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d86cba89d8ffd9339bf3a4755774dd1f8a78cc52",
      "candidate_info": {
        "commit_hash": "d86cba89d8ffd9339bf3a4755774dd1f8a78cc52",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/d86cba89d8ffd9339bf3a4755774dd1f8a78cc52",
        "files": [
          "ChangeLog",
          "cont.c",
          "version.h"
        ],
        "message": "merge revision(s) 46373: [Backport #9905]\n\n\t* cont.c (rb_fiber_struct): keep context.uc_stack.ss_sp and context.uc_stack.ss_size\n\t  for later use. Patch by Rei Odaira. [ruby-core:62945] [Bug #9905]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54273 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "cont.c||cont.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "cont.c||cont.c": [
          "File: cont.c -> cont.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "147:     void *fib_handle;",
          "148: #else",
          "149:     ucontext_t context;",
          "150: #endif",
          "151: #endif",
          "152: } rb_fiber_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "154:     void *ss_sp;",
          "155:     size_t ss_size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244:      if (GET_THREAD()->fiber != cont->self) {",
          "245:                 rb_fiber_t *fib = (rb_fiber_t*)cont;",
          "247:                     if (cont->type == ROOT_FIBER_CONTEXT) {",
          "248:    rb_bug(\"Illegal root fiber parameter\");",
          "249:                     }",
          "251:   }",
          "252:      }",
          "253:             else {",
          "",
          "[Removed Lines]",
          "246:                 if (fib->context.uc_stack.ss_sp) {",
          "250:       munmap((void*)fib->context.uc_stack.ss_sp, fib->context.uc_stack.ss_size);",
          "",
          "[Added Lines]",
          "252:                 if (fib->ss_sp) {",
          "256:       munmap((void*)fib->ss_sp, fib->ss_size);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "667:     context->uc_link = NULL;",
          "668:     context->uc_stack.ss_sp = ptr;",
          "669:     context->uc_stack.ss_size = size;",
          "670:     makecontext(context, rb_fiber_start, 0);",
          "671:     sth->machine.stack_start = (VALUE*)(ptr + STACK_DIR_UPPER(0, size));",
          "672:     sth->machine.stack_maxsize = size - RB_PAGE_SIZE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "676:     fib->ss_sp = ptr;",
          "677:     fib->ss_size = size;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1257:     fib->status = TERMINATED;",
          "1258: #if FIBER_USE_NATIVE && !defined(_WIN32)",
          "1262:     fib->context.uc_stack.ss_sp = NULL;",
          "1263:     fib->cont.machine.stack = NULL;",
          "1264:     fib->cont.machine.stack_size = 0;",
          "",
          "[Removed Lines]",
          "1260:     terminated_machine_stack.ptr = fib->context.uc_stack.ss_sp;",
          "1261:     terminated_machine_stack.size = fib->context.uc_stack.ss_size / sizeof(VALUE);",
          "",
          "[Added Lines]",
          "1268:     terminated_machine_stack.ptr = fib->ss_sp;",
          "1269:     terminated_machine_stack.size = fib->ss_size / sizeof(VALUE);",
          "1270:     fib->ss_sp = NULL;",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-03-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 470",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 471",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "445954a4bb610229af80380e6f2d26537b3d26a9",
      "candidate_info": {
        "commit_hash": "445954a4bb610229af80380e6f2d26537b3d26a9",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/445954a4bb610229af80380e6f2d26537b3d26a9",
        "files": [
          "ext/socket/socket.c",
          "version.h"
        ],
        "message": "merge revision(s) 44497: [Backport #11441]\n\n\t* ext/socket/socket.c (rsock_syserr_fail_host_port): use format flags,\n\t  '+' to inspect, ' ' to quote unprintables.\n\n\t* ext/socket/socket.c (rsock_syserr_fail_path): ditto.\n\n\t* ext/socket/socket.c (rsock_syserr_fail_raddrinfo): ditto.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51612 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/socket/socket.c||ext/socket/socket.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/socket/socket.c||ext/socket/socket.c": [
          "File: ext/socket/socket.c -> ext/socket/socket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: {",
          "24:     VALUE message;",
          "31:     rb_syserr_fail_str(err, message);",
          "32: }",
          "",
          "[Removed Lines]",
          "26:     port = rb_String(port);",
          "28:     message = rb_sprintf(\"%s for \\\"%s\\\" port %s\",",
          "29:      mesg, StringValueCStr(host), StringValueCStr(port));",
          "",
          "[Added Lines]",
          "26:     message = rb_sprintf(\"%s for %+\"PRIsVALUE\" port % \"PRIsVALUE\"\",",
          "27:     mesg, host, port);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     VALUE message;",
          "45:     if (RB_TYPE_P(path, T_STRING)) {",
          "55:  rb_syserr_fail_str(err, message);",
          "56:     }",
          "57:     else {",
          "",
          "[Removed Lines]",
          "46:         if (memchr(RSTRING_PTR(path), '\\0', RSTRING_LEN(path))) {",
          "47:             path = rb_str_inspect(path);",
          "48:             message = rb_sprintf(\"%s for %s\", mesg,",
          "49:                     StringValueCStr(path));",
          "50:         }",
          "51:         else {",
          "52:             message = rb_sprintf(\"%s for \\\"%s\\\"\", mesg,",
          "53:                     StringValueCStr(path));",
          "54:         }",
          "",
          "[Added Lines]",
          "44:  message = rb_sprintf(\"%s for % \"PRIsVALUE\"\", mesg, path);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "87:     VALUE str, message;",
          "89:     str = rsock_addrinfo_inspect_sockaddr(rai);",
          "92:     rb_syserr_fail_str(err, message);",
          "93: }",
          "",
          "[Removed Lines]",
          "90:     message = rb_sprintf(\"%s for %s\", mesg, StringValueCStr(str));",
          "",
          "[Added Lines]",
          "80:     message = rb_sprintf(\"%s for %\"PRIsVALUE\"\", mesg, str);",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 8",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 394",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 395",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d728bdae9de565ad9d0b2fee2d4c2a33c6f4eac",
      "candidate_info": {
        "commit_hash": "6d728bdae9de565ad9d0b2fee2d4c2a33c6f4eac",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/6d728bdae9de565ad9d0b2fee2d4c2a33c6f4eac",
        "files": [
          "version.h"
        ],
        "message": "* 2016-04-22\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54691 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.10\"",
          "3: #define RUBY_PATCHLEVEL 492",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 4",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2016-04-01\"",
          "7: #define RUBY_RELEASE_DAY 1",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2016-04-22\"",
          "7: #define RUBY_RELEASE_DAY 22",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "02dcfb7873ba818f1e51de2e30708ae6dba90024",
      "candidate_info": {
        "commit_hash": "02dcfb7873ba818f1e51de2e30708ae6dba90024",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/02dcfb7873ba818f1e51de2e30708ae6dba90024",
        "files": [
          "ChangeLog",
          "lib/resolv.rb",
          "test/resolv/test_dns.rb",
          "version.h"
        ],
        "message": "merge revision(s) r49071,r49072,r49073,r49078: [Backport #10550]\n\n\t* lib/resolv.rb (Resolv::DNS::Name): names with different dots\n\t  should be different.\n\n\t* lib/resolv.rb (Resolv::DNS::Name#==): DNS is case-insensitive, so the\n\t  comparison should be case-insensitive as well.\n\t  [ruby-core:66498] [Bug #10550]\n\n\t* lib/resolv.rb (Resolv::DNS::Name#==): Compare an array of Label:Str\n\t  objects.  Label#Str#== is case-insensitive.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49775 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/resolv.rb||lib/resolv.rb",
          "test/resolv/test_dns.rb||test/resolv/test_dns.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/resolv.rb||lib/resolv.rb": [
          "File: lib/resolv.rb -> lib/resolv.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1241:       def ==(other) # :nodoc:",
          "1242:         return false unless Name === other",
          "1244:       end",
          "1246:       alias eql? == # :nodoc:",
          "",
          "[Removed Lines]",
          "1243:         return @labels.join == other.to_a.join && @absolute == other.absolute?",
          "",
          "[Added Lines]",
          "1243:         return false unless @absolute == other.absolute?",
          "1244:         return @labels == other.to_a",
          "",
          "---------------"
        ],
        "test/resolv/test_dns.rb||test/resolv/test_dns.rb": [
          "File: test/resolv/test_dns.rb -> test/resolv/test_dns.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:       end",
          "176:     end",
          "177:   end",
          "178: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "179:   def test_dots_diffences",
          "180:     name1 = Resolv::DNS::Name.create(\"example.org\")",
          "181:     name2 = Resolv::DNS::Name.create(\"ex.ampl.eo.rg\")",
          "182:     assert_not_equal(name1, name2, \"different dots\")",
          "183:   end",
          "185:   def test_case_insensitive_name",
          "186:     bug10550 = '[ruby-core:66498] [Bug #10550]'",
          "187:     lower = Resolv::DNS::Name.create(\"ruby-lang.org\")",
          "188:     upper = Resolv::DNS::Name.create(\"Ruby-Lang.org\")",
          "189:     assert_equal(lower, upper, bug10550)",
          "190:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 2",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-02-19\"",
          "3: #define RUBY_PATCHLEVEL 299",
          "7: #define RUBY_RELEASE_DAY 19",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-02-28\"",
          "3: #define RUBY_PATCHLEVEL 300",
          "7: #define RUBY_RELEASE_DAY 28",
          "",
          "---------------"
        ]
      }
    }
  ]
}