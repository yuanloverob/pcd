{
  "cve_id": "CVE-2019-12098",
  "cve_desc": "In the client side of Heimdal before 7.6.0, failure to verify anonymous PKINIT PA-PKINIT-KX key exchange permits a man-in-the-middle attack. This issue is in krb5_init_creds_step in lib/krb5/init_creds_pw.c.",
  "repo": "heimdal/heimdal",
  "patch_hash": "2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
  "patch_info": {
    "commit_hash": "2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
    "repo": "heimdal/heimdal",
    "commit_url": "https://github.com/heimdal/heimdal/commit/2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
    "files": [
      "lib/krb5/init_creds_pw.c",
      "lib/krb5/krb5_locl.h",
      "lib/krb5/pkinit.c"
    ],
    "message": "CVE-2019-12098: krb5: always confirm PA-PKINIT-KX for anon PKINIT\n\nRFC8062 Section 7 requires verification of the PA-PKINIT-KX key excahnge\nwhen anonymous PKINIT is used.  Failure to do so can permit an active\nattacker to become a man-in-the-middle.\n\nIntroduced by a1ef548600c5bb51cf52a9a9ea12676506ede19f.  First tagged\nrelease Heimdal 1.4.0.\n\nCVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N (4.8)\n\nChange-Id: I6cc1c0c24985936468af08693839ac6c3edda133\nSigned-off-by: Jeffrey Altman <jaltman@auristor.com>\nApproved-by: Jeffrey Altman <jaltman@auritor.com>\n(cherry picked from commit 38c797e1ae9b9c8f99ae4aa2e73957679031fd2b)",
    "before_after_code_files": [
      "lib/krb5/init_creds_pw.c||lib/krb5/init_creds_pw.c",
      "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h",
      "lib/krb5/pkinit.c||lib/krb5/pkinit.c"
    ]
  },
  "patch_diff": {
    "lib/krb5/init_creds_pw.c||lib/krb5/init_creds_pw.c": [
      "File: lib/krb5/init_creds_pw.c -> lib/krb5/init_creds_pw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2267:            &ctx->req_buffer,",
      "2268:            NULL,",
      "2269:            NULL);",
      "2270:      if (ret == 0)",
      "2271:   ret = copy_EncKDCRepPart(&rep.enc_part, &ctx->enc_part);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2270:      if (ret == 0 && ctx->pk_init_ctx) {",
      "2271:   PA_DATA *pa_pkinit_kx;",
      "2272:   int idx = 0;",
      "2274:   pa_pkinit_kx =",
      "2275:       krb5_find_padata(rep.kdc_rep.padata->val,",
      "2276:          rep.kdc_rep.padata->len,",
      "2277:          KRB5_PADATA_PKINIT_KX,",
      "2278:          &idx);",
      "2280:   ret = _krb5_pk_kx_confirm(context, ctx->pk_init_ctx,",
      "2281:        ctx->fast_state.reply_key,",
      "2282:        &ctx->cred.session,",
      "2283:        pa_pkinit_kx);",
      "2284:   if (ret)",
      "2285:       krb5_set_error_message(context, ret,",
      "2286:         N_(\"Failed to confirm PA-PKINIT-KX\", \"\"));",
      "2287:   else if (pa_pkinit_kx != NULL)",
      "2288:       ctx->ic_flags |= KRB5_INIT_CREDS_PKINIT_KX_VALID;",
      "2289:      }",
      "",
      "---------------"
    ],
    "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h": [
      "File: lib/krb5/krb5_locl.h -> lib/krb5/krb5_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "208: #define KRB5_INIT_CREDS_CANONICALIZE  1",
      "209: #define KRB5_INIT_CREDS_NO_C_CANON_CHECK 2",
      "210: #define KRB5_INIT_CREDS_NO_C_NO_EKU_CHECK 4",
      "211:     struct {",
      "212:         krb5_gic_process_last_req func;",
      "213:         void *ctx;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "211: #define KRB5_INIT_CREDS_PKINIT_KX_VALID  32",
      "",
      "---------------"
    ],
    "lib/krb5/pkinit.c||lib/krb5/pkinit.c": [
      "File: lib/krb5/pkinit.c -> lib/krb5/pkinit.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1220:     return ret;",
      "1221: }",
      "1223: static krb5_error_code",
      "1224: pk_rd_pa_reply_dh(krb5_context context,",
      "1225:     const heim_octet_string *indata,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1230: KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL",
      "1231: _krb5_pk_kx_confirm(krb5_context context,",
      "1232:       krb5_pk_init_ctx ctx,",
      "1233:       krb5_keyblock *reply_key,",
      "1234:       krb5_keyblock *session_key,",
      "1235:       PA_DATA *pa_pkinit_kx)",
      "1236: {",
      "1237:     krb5_error_code ret;",
      "1238:     EncryptedData ed;",
      "1239:     krb5_keyblock ck, sk_verify;",
      "1240:     krb5_crypto ck_crypto = NULL;",
      "1241:     krb5_crypto rk_crypto = NULL;",
      "1242:     size_t len;",
      "1243:     krb5_data data;",
      "1244:     krb5_data p1 = { sizeof(\"PKINIT\") - 1, \"PKINIT\" };",
      "1245:     krb5_data p2 = { sizeof(\"KEYEXCHANGE\") - 1, \"KEYEXCHANGE\" };",
      "1247:     heim_assert(ctx != NULL, \"PKINIT context is non-NULL\");",
      "1248:     heim_assert(reply_key != NULL, \"reply key is non-NULL\");",
      "1249:     heim_assert(session_key != NULL, \"session key is non-NULL\");",
      "1252:     if (pa_pkinit_kx == NULL)",
      "1253:  return ctx->anonymous ? KRB5_KDCREP_MODIFIED : 0;",
      "1255:     memset(&ed, 0, sizeof(ed));",
      "1256:     krb5_keyblock_zero(&ck);",
      "1257:     krb5_keyblock_zero(&sk_verify);",
      "1258:     krb5_data_zero(&data);",
      "1260:     ret = decode_EncryptedData(pa_pkinit_kx->padata_value.data,",
      "1261:           pa_pkinit_kx->padata_value.length,",
      "1262:           &ed, &len);",
      "1263:     if (ret)",
      "1264:  goto out;",
      "1266:     if (len != pa_pkinit_kx->padata_value.length) {",
      "1267:  ret = KRB5_KDCREP_MODIFIED;",
      "1268:  goto out;",
      "1269:     }",
      "1271:     ret = krb5_crypto_init(context, reply_key, 0, &rk_crypto);",
      "1272:     if (ret)",
      "1273:  goto out;",
      "1275:     ret = krb5_decrypt_EncryptedData(context, rk_crypto,",
      "1276:          KRB5_KU_PA_PKINIT_KX,",
      "1277:          &ed, &data);",
      "1278:     if (ret)",
      "1279:  goto out;",
      "1281:     ret = decode_EncryptionKey(data.data, data.length,",
      "1282:           &ck, &len);",
      "1283:     if (ret)",
      "1284:  goto out;",
      "1286:     ret = krb5_crypto_init(context, &ck, 0, &ck_crypto);",
      "1287:     if (ret)",
      "1288:  goto out;",
      "1290:     ret = krb5_crypto_fx_cf2(context, ck_crypto, rk_crypto,",
      "1291:         &p1, &p2, session_key->keytype,",
      "1292:         &sk_verify);",
      "1293:     if (ret)",
      "1294:  goto out;",
      "1296:     if (sk_verify.keytype != session_key->keytype ||",
      "1297:  krb5_data_ct_cmp(&sk_verify.keyvalue, &session_key->keyvalue) != 0) {",
      "1298:  ret = KRB5_KDCREP_MODIFIED;",
      "1299:  goto out;",
      "1300:     }",
      "1302: out:",
      "1303:     free_EncryptedData(&ed);",
      "1304:     krb5_free_keyblock_contents(context, &ck);",
      "1305:     krb5_free_keyblock_contents(context, &sk_verify);",
      "1306:     if (ck_crypto)",
      "1307:  krb5_crypto_destroy(context, ck_crypto);",
      "1308:     if (rk_crypto)",
      "1309:  krb5_crypto_destroy(context, rk_crypto);",
      "1310:     krb5_data_free(&data);",
      "1312:     return ret;",
      "1313: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e1959605bd490e1eb9ea5e2277f4a332208097de",
      "candidate_info": {
        "commit_hash": "e1959605bd490e1eb9ea5e2277f4a332208097de",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/e1959605bd490e1eb9ea5e2277f4a332208097de",
        "files": [
          "configure.ac",
          "windows/NTMakefile.version"
        ],
        "message": "Bump version to 7.7.0\n\nChange-Id: Ifce23fa75fa01664116b37a8a19dcf375ad9cf51",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "windows/NTMakefile.version||windows/NTMakefile.version"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: AC_REVISION($Revision$)",
          "3: AC_PREREQ(2.62)",
          "4: test -z \"$CFLAGS\" && CFLAGS=\"-g\"",
          "6: AC_CONFIG_SRCDIR([kuser/kinit.c])",
          "7: AC_CONFIG_HEADERS(include/config.h)",
          "8: AC_CONFIG_MACRO_DIR([cf])",
          "",
          "[Removed Lines]",
          "5: AC_INIT([Heimdal],[7.6.0],[https://github.com/heimdal/heimdal/issues])",
          "",
          "[Added Lines]",
          "5: AC_INIT([Heimdal],[7.7.0],[https://github.com/heimdal/heimdal/issues])",
          "",
          "---------------"
        ],
        "windows/NTMakefile.version||windows/NTMakefile.version": [
          "File: windows/NTMakefile.version -> windows/NTMakefile.version",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: VER_PACKAGE_COMPANY=www.h5l.org",
          "9: VER_PRODUCT_MAJOR=7",
          "11: VER_PRODUCT_AUX=0",
          "12: VER_PRODUCT_PATCH=0",
          "",
          "[Removed Lines]",
          "10: VER_PRODUCT_MINOR=6",
          "",
          "[Added Lines]",
          "10: VER_PRODUCT_MINOR=7",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24: VER_OLD_BEGIN_PATCH=0",
          "26: VER_OLD_END_MAJOR=7",
          "28: VER_OLD_END_AUX=65535",
          "29: VER_OLD_END_PATCH=65535",
          "",
          "[Removed Lines]",
          "27: VER_OLD_END_MINOR=5",
          "",
          "[Added Lines]",
          "27: VER_OLD_END_MINOR=6",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "923306a462230957c8c68164b3d7fdfcc6bc60bf",
      "candidate_info": {
        "commit_hash": "923306a462230957c8c68164b3d7fdfcc6bc60bf",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/923306a462230957c8c68164b3d7fdfcc6bc60bf",
        "files": [
          "lib/wind/gen-normalize.py"
        ],
        "message": "PY3: dict doesn't have has_key\n\nSigned-off-by: Noel Power <noel.power@suse.com>\nReviewed-by: Andrew Bartlett <abartlet@samba.org>\n(cherry picked from Samba commit 82c84513331da9d0f42ba73d03e58dce5d0f76d3)\n(cherry picked from commit fc9aab949fcb1bb93f43a5bee01132ffed70a01a)",
        "before_after_code_files": [
          "lib/wind/gen-normalize.py||lib/wind/gen-normalize.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/wind/gen-normalize.py||lib/wind/gen-normalize.py": [
          "File: lib/wind/gen-normalize.py -> lib/wind/gen-normalize.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "136: inv = dict([(''.join([\"%05x\" % int(x, 0x10) for x in v[4].split(' ')]),",
          "137:              [k, v[0]])",
          "138:             for k,v in ud.items()",
          "141: table = 0",
          "",
          "[Removed Lines]",
          "139:             if v[4] and not re.search('<[a-zA-Z]+> *', v[4]) and not exclusions.has_key(k)])",
          "",
          "[Added Lines]",
          "139:             if v[4] and not re.search('<[a-zA-Z]+> *', v[4]) and not k in exclusions])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cec805e2e7b51b191352920245820fbe390f284b",
      "candidate_info": {
        "commit_hash": "cec805e2e7b51b191352920245820fbe390f284b",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/cec805e2e7b51b191352920245820fbe390f284b",
        "files": [
          "lib/wind/generate.py"
        ],
        "message": "PY3: string.translate string.upper don't exist in PY3\n\nSigned-off-by: Noel Power <noel.power@suse.com>\nReviewed-by: Andrew Bartlett <abartlet@samba.org>\n(cherry picked from Samba commit a0c8c8c8331856d9f09d18b389b7dd01c8d33de2)\n(cherry picked from commit 76b2f1572911e2872414dfd64db5001439e858cf)",
        "before_after_code_files": [
          "lib/wind/generate.py||lib/wind/generate.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/wind/generate.py||lib/wind/generate.py": [
          "File: lib/wind/generate.py -> lib/wind/generate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         guardTrans = string.maketrans('-.', '__')",
          "65:     def makeGuard(self) :",
          "66:         \"\"\"Return a name to be used as ifdef guard\"\"\"",
          "69:     def __init__(self, name) :",
          "70:         \"Create a new Header with name\"",
          "",
          "[Removed Lines]",
          "67:         return string.upper(string.translate(self.name, self.guardTrans))",
          "",
          "[Added Lines]",
          "67:         return self.name.translate(self.guardTrans).upper()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c15211fe3beabaf8e6b701c66e42318876924f37",
      "candidate_info": {
        "commit_hash": "c15211fe3beabaf8e6b701c66e42318876924f37",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/c15211fe3beabaf8e6b701c66e42318876924f37",
        "files": [
          "kuser/kgetcred.1",
          "kuser/kgetcred.c"
        ],
        "message": "kuser: kgetcred support for anonymous service tickets\n\n(cherry picked from commit 455961839179c55a07502b55203c153711e4d3f0)",
        "before_after_code_files": [
          "kuser/kgetcred.1||kuser/kgetcred.1",
          "kuser/kgetcred.c||kuser/kgetcred.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041",
          "https://github.com/heimdal/heimdal/pull/556"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kuser/kgetcred.1||kuser/kgetcred.1": [
          "File: kuser/kgetcred.1 -> kuser/kgetcred.1",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: .Op Fl Fl no-transit-check",
          "59: .Op Fl Fl no-store",
          "60: .Op Fl Fl cached-only",
          "61: .Op Fl Fl version",
          "62: .Op Fl Fl help",
          "63: .Ar principal",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61: .Op Fl n \\*(Ba Fl Fl anonymous",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "135: do not store tickets in the ccache.",
          "136: .It Fl Fl cached-only",
          "137: do not talk the TGS, search only the ccache.",
          "138: .It Fl Fl forwardable",
          "139: .It Fl Fl debug",
          "140: enables debug output to stderr.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139: .It Fl Fl anonymous",
          "140: obtain an anonymous service ticket.",
          "",
          "---------------"
        ],
        "kuser/kgetcred.c||kuser/kgetcred.c": [
          "File: kuser/kgetcred.c -> kuser/kgetcred.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: static char *nametype_str;",
          "47: static int store_flag = 1;",
          "48: static int cached_only_flag;",
          "49: static int debug_flag;",
          "50: static int version_flag;",
          "51: static int help_flag;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: static int anonymous_flag;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:       NP_(\"don't store the tickets obtained in the cache\", \"\"), NULL },",
          "77:     { \"cached-only\",          0,   arg_flag, &cached_only_flag,",
          "78:       NP_(\"don't talk to the KDC, just search the cache\", \"\"), NULL },",
          "79:     { \"debug\",          0,   arg_flag, &debug_flag, NULL, NULL },",
          "80:     { \"version\",  0,   arg_flag, &version_flag, NULL, NULL },",
          "81:     { \"help\",  0,   arg_flag, &help_flag, NULL, NULL }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:     { \"anonymous\",      'n',   arg_flag, &anonymous_flag,",
          "81:       NP_(\"request an anonymous ticket\", \"\"), NULL },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "176:  krb5_get_creds_opt_add_options(context, opt, KRB5_GC_NO_STORE);",
          "177:     if (cached_only_flag)",
          "178:  krb5_get_creds_opt_add_options(context, opt, KRB5_GC_CACHED);",
          "180:     if (delegation_cred_str) {",
          "181:  krb5_ccache id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:     if (anonymous_flag)",
          "183:  krb5_get_creds_opt_add_options(context, opt, KRB5_GC_ANONYMOUS);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "211b3f0ae3abb7989b8312c87d71c39c6f8daa62",
      "candidate_info": {
        "commit_hash": "211b3f0ae3abb7989b8312c87d71c39c6f8daa62",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/211b3f0ae3abb7989b8312c87d71c39c6f8daa62",
        "files": [
          "kdc/kerberos5.c",
          "kuser/kinit.c",
          "kuser/kuser_locl.h",
          "lib/krb5/krb5.h",
          "lib/krb5/libkrb5-exports.def.in",
          "lib/krb5/principal.c",
          "lib/krb5/ticket.c",
          "lib/krb5/version-script.map"
        ],
        "message": "krb5_principal_is_anonymous\n\n_krb5_principal_is_anonymous() is used outside lib/krb5 and\ntherefore it needs to be properly exported and its flag macros\nneed to be in a public header: krb5.h not krb5_locl.h.\n\nIncluding krb5_locl.h from within kuser_locl.h for instance\nresults in build failures on Solaris.\n\nThis change renames the function and makes it part of the public\napi.\n\nChange-Id: I130d1698b10bdbd150b95e8c7d32dfc362889ce6\n(cherry picked from commit bdcd7d2f3dc02f902628a9145084cf7a80496f7a)",
        "before_after_code_files": [
          "kdc/kerberos5.c||kdc/kerberos5.c",
          "kuser/kinit.c||kuser/kinit.c",
          "kuser/kuser_locl.h||kuser/kuser_locl.h",
          "lib/krb5/krb5.h||lib/krb5/krb5.h",
          "lib/krb5/libkrb5-exports.def.in||lib/krb5/libkrb5-exports.def.in",
          "lib/krb5/principal.c||lib/krb5/principal.c",
          "lib/krb5/ticket.c||lib/krb5/ticket.c",
          "lib/krb5/version-script.map||lib/krb5/version-script.map"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kdc/kerberos5.c||kdc/kerberos5.c": [
          "File: kdc/kerberos5.c -> kdc/kerberos5.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1551: krb5_boolean",
          "1552: _kdc_is_anonymous(krb5_context context, krb5_const_principal principal)",
          "1553: {",
          "1555: }",
          "1557: static int",
          "",
          "[Removed Lines]",
          "1554:     return _krb5_principal_is_anonymous(context, principal, KRB5_ANON_MATCH_ANY);",
          "",
          "[Added Lines]",
          "1554:     return krb5_principal_is_anonymous(context, principal, KRB5_ANON_MATCH_ANY);",
          "",
          "---------------"
        ],
        "kuser/kinit.c||kuser/kinit.c": [
          "File: kuser/kinit.c -> kuser/kinit.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "630:      goto out;",
          "631:  }",
          "632:     } else if (pk_user_id || ent_user_id ||",
          "635:     } else if (!interactive && passwd[0] == '\\0') {",
          "636:  static int already_warned = 0;",
          "",
          "[Removed Lines]",
          "633:         _krb5_principal_is_anonymous(context, principal, KRB5_ANON_MATCH_ANY)) {",
          "",
          "[Added Lines]",
          "633:         krb5_principal_is_anonymous(context, principal, KRB5_ANON_MATCH_ANY)) {",
          "",
          "---------------"
        ],
        "kuser/kuser_locl.h||kuser/kuser_locl.h": [
          "File: kuser/kuser_locl.h -> kuser/kuser_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: #include <parse_time.h>",
          "73: #include <err.h>",
          "74: #include <krb5.h>",
          "77: #if defined(HAVE_SYS_IOCTL_H) && SunOS != 40",
          "78: #include <sys/ioctl.h>",
          "",
          "[Removed Lines]",
          "75: #include \"krb5_locl.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/krb5/krb5.h||lib/krb5/krb5.h": [
          "File: lib/krb5/krb5.h -> lib/krb5/krb5.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "958: #define KRB5_ANON_MATCH_ANY  ( KRB5_ANON_MATCH_AUTHENTICATED | KRB5_ANON_MATCH_UNAUTHENTICATED )",
          "",
          "---------------"
        ],
        "lib/krb5/libkrb5-exports.def.in||lib/krb5/libkrb5-exports.def.in": [
          "File: lib/krb5/libkrb5-exports.def.in -> lib/krb5/libkrb5-exports.def.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "497:  krb5_principal_get_num_comp",
          "498:  krb5_principal_get_realm",
          "499:  krb5_principal_get_type",
          "500:  krb5_principal_is_krbtgt",
          "501:  krb5_principal_match",
          "502:  krb5_principal_set_comp_string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "500:  krb5_principal_is_anonymous",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "762:  _krb5_pk_octetstring2key",
          "763:  _krb5_plugin_run_f",
          "764:  _krb5_enctype_requires_random_salt",
          "766:  _krb5_principal2principalname",
          "767:  _krb5_principalname2krb5_principal",
          "768:  _krb5_put_int",
          "",
          "[Removed Lines]",
          "765:  _krb5_principal_is_anonymous",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/krb5/principal.c||lib/krb5/principal.c": [
          "File: lib/krb5/principal.c -> lib/krb5/principal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1258:         krb5_const_principal p,",
          "1259:         unsigned int flags)",
          "1260: {",
          "",
          "[Removed Lines]",
          "1256: krb5_boolean KRB5_LIB_FUNCTION",
          "1257: _krb5_principal_is_anonymous(krb5_context context,",
          "",
          "[Added Lines]",
          "1256: KRB5_LIB_FUNCTION krb5_boolean KRB5_LIB_CALL",
          "1257: krb5_principal_is_anonymous(krb5_context context,",
          "",
          "---------------"
        ],
        "lib/krb5/ticket.c||lib/krb5/ticket.c": [
          "File: lib/krb5/ticket.c -> lib/krb5/ticket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "539:         krb5_keyblock const * key)",
          "540: {",
          "541:     if (rep->enc_part.flags.anonymous) {",
          "543:      krb5_set_error_message(context, KRB5KRB_AP_ERR_MODIFIED,",
          "544:        N_(\"Anonymous ticket does not contain anonymous \"",
          "545:           \"principal\", \"\"));",
          "",
          "[Removed Lines]",
          "542:  if (!_krb5_principal_is_anonymous(context, mapped, KRB5_ANON_MATCH_ANY)) {",
          "",
          "[Added Lines]",
          "542:  if (!krb5_principal_is_anonymous(context, mapped, KRB5_ANON_MATCH_ANY)) {",
          "",
          "---------------"
        ],
        "lib/krb5/version-script.map||lib/krb5/version-script.map": [
          "File: lib/krb5/version-script.map -> lib/krb5/version-script.map",
          "--- Hunk 1 ---",
          "[Context before]",
          "494:   krb5_principal_set_comp_string;",
          "495:   krb5_principal_set_realm;",
          "496:   krb5_principal_set_type;",
          "497:   krb5_principal_is_krbtgt;",
          "498:   krb5_print_address;",
          "499:   krb5_program_setup;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "497:   krb5_principal_is_anonymous;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "757:   _krb5_plugin_find;",
          "758:   _krb5_plugin_free;",
          "759:   _krb5_plugin_run_f;",
          "761:   _krb5_principal2principalname;",
          "762:   _krb5_principalname2krb5_principal;",
          "763:   _krb5_put_int;",
          "",
          "[Removed Lines]",
          "760:   _krb5_principal_is_anonymous;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}