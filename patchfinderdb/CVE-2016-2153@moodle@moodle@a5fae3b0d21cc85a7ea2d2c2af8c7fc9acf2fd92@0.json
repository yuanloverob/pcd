{
  "cve_id": "CVE-2016-2153",
  "cve_desc": "Cross-site scripting (XSS) vulnerability in the advanced-search feature in mod_data in Moodle through 2.6.11, 2.7.x before 2.7.13, 2.8.x before 2.8.11, 2.9.x before 2.9.5, and 3.0.x before 3.0.3 allows remote attackers to inject arbitrary web script or HTML via a crafted field in a URL, as demonstrated by a search form field.",
  "repo": "moodle/moodle",
  "patch_hash": "a5fae3b0d21cc85a7ea2d2c2af8c7fc9acf2fd92",
  "patch_info": {
    "commit_hash": "a5fae3b0d21cc85a7ea2d2c2af8c7fc9acf2fd92",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/a5fae3b0d21cc85a7ea2d2c2af8c7fc9acf2fd92",
    "files": [
      "mod/data/field/file/field.class.php",
      "mod/data/field/number/field.class.php",
      "mod/data/field/picture/field.class.php",
      "mod/data/field/text/field.class.php",
      "mod/data/field/textarea/field.class.php",
      "mod/data/field/url/field.class.php",
      "mod/data/lib.php"
    ],
    "message": "MDL-52727 mod_data: Improve output of the form fields values\n\nThis issue mostly affects the search form fields. Submitted values for\nthese fields are typically obtained via optional_param() with\nPARAM_NOTAGS specified as the parameter type - see parse_search_field()\nmethods. Such values themselves are not safe enough to be printed back\ndirectly into the HTML as they might contain malicious code.\n\nWhile working on the patch, some other places with weak protection were\ndetected and fixed.\n\nIn case of the itemid parameters, explicit clean_param() is added to\nmake sure we cast the value as an integer. That should make the s()\nunnecessary but it was added anyway as an extra protection (just in case\nthe code flow changes or the parts of the code are re-used elsewhere).",
    "before_after_code_files": [
      "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
      "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
      "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
      "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
      "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
      "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
      "mod/data/lib.php||mod/data/lib.php"
    ]
  },
  "patch_diff": {
    "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php": [
      "File: mod/data/field/file/field.class.php -> mod/data/field/file/field.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "39:         if ($formdata) {",
      "40:             $fieldname = 'field_' . $this->field->id . '_file';",
      "42:         } else if ($recordid) {",
      "43:             if ($content = $DB->get_record('data_content', array('fieldid'=>$this->field->id, 'recordid'=>$recordid))) {",
      "",
      "[Removed Lines]",
      "41:             $itemid = $formdata->$fieldname;",
      "",
      "[Added Lines]",
      "41:             $itemid = clean_param($formdata->$fieldname, PARAM_INT);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "79:         }",
      "84:         $options = new stdClass();",
      "85:         $options->maxbytes = $this->field->param3;",
      "",
      "[Removed Lines]",
      "82:         $html .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.$itemid.'\" />';",
      "",
      "[Added Lines]",
      "82:         $html .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.s($itemid).'\" />';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "105:     function display_search_field($value = '') {",
      "106:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>' .",
      "108:     }",
      "110:     function generate_sql($tablealias, $value) {",
      "",
      "[Removed Lines]",
      "107:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
      "",
      "[Added Lines]",
      "107:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
      "",
      "---------------"
    ],
    "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php": [
      "File: mod/data/field/number/field.class.php -> mod/data/field/number/field.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "72:     function display_search_field($value = '') {",
      "73:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
      "75:     }",
      "77:     function parse_search_field() {",
      "",
      "[Removed Lines]",
      "74:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
      "",
      "[Added Lines]",
      "74:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
      "",
      "---------------"
    ],
    "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php": [
      "File: mod/data/field/picture/field.class.php -> mod/data/field/picture/field.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "40:         if ($formdata) {",
      "41:             $fieldname = 'field_' . $this->field->id . '_file';",
      "43:             $fieldname = 'field_' . $this->field->id . '_alttext';",
      "44:             if (isset($formdata->$fieldname)) {",
      "45:                 $alttext = $formdata->$fieldname;",
      "",
      "[Removed Lines]",
      "42:             $itemid = $formdata->$fieldname;",
      "",
      "[Added Lines]",
      "42:             $itemid = clean_param($formdata->$fieldname, PARAM_INT);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "109:         $str .= $output->render($fm);",
      "111:         $str .= '<div class=\"mdl-left\">';",
      "113:         $str .= '<label for=\"field_'.$this->field->id.'_alttext\">'.get_string('alttext','data') .'</label>&nbsp;<input type=\"text\" name=\"field_'",
      "114:                 .$this->field->id.'_alttext\" id=\"field_'.$this->field->id.'_alttext\" value=\"'.s($alttext).'\" />';",
      "115:         $str .= '</div>';",
      "",
      "[Removed Lines]",
      "112:         $str .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.$itemid.'\" />';",
      "",
      "[Added Lines]",
      "112:         $str .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.s($itemid).'\" />';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "141:     function display_search_field($value = '') {",
      "142:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
      "144:     }",
      "146:     function parse_search_field() {",
      "",
      "[Removed Lines]",
      "143:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
      "",
      "[Added Lines]",
      "143:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
      "",
      "---------------"
    ],
    "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php": [
      "File: mod/data/field/text/field.class.php -> mod/data/field/text/field.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "27:     var $type = 'text';",
      "29:     function display_search_field($value = '') {",
      "31:     }",
      "33:     function parse_search_field() {",
      "",
      "[Removed Lines]",
      "30:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">'. $this->field->name.'</label>' . '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
      "",
      "[Added Lines]",
      "30:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">'. $this->field->name.'</label>' . '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
      "",
      "---------------"
    ],
    "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php": [
      "File: mod/data/field/textarea/field.class.php -> mod/data/field/textarea/field.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "79:             }",
      "80:             $fieldname = 'field_' . $this->field->id . '_itemid';",
      "81:             if (isset($formdata->$fieldname)) {",
      "83:             } else {",
      "84:                 $draftitemid = file_get_unused_draft_itemid();",
      "85:             }",
      "",
      "[Removed Lines]",
      "82:                 $draftitemid = $formdata->$fieldname;",
      "",
      "[Added Lines]",
      "82:                 $draftitemid = clean_param($formdata->$fieldname, PARAM_INT);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "146:         }",
      "147:         $editor->set_text($text);",
      "148:         $editor->use_editor($field, $options, $fpoptions);",
      "150:         $str .= '<div class=\"mod-data-input\">';",
      "151:         $str .= '<div><textarea id=\"'.$field.'\" name=\"'.$field.'\" rows=\"'.$this->field->param3.'\" cols=\"'.$this->field->param2.'\" spellcheck=\"true\">'.s($text).'</textarea></div>';",
      "152:         $str .= '<div><label class=\"accesshide\" for=\"' . $field . '_content1\">' . get_string('format') . '</label>';",
      "",
      "[Removed Lines]",
      "149:         $str .= '<input type=\"hidden\" name=\"'.$field.'_itemid\" value=\"'.$draftitemid.'\" />';",
      "",
      "[Added Lines]",
      "149:         $str .= '<input type=\"hidden\" name=\"'.$field.'_itemid\" value=\"'.s($draftitemid).'\" />';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "167:     function display_search_field($value = '') {",
      "168:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>' .",
      "170:     }",
      "172:     function parse_search_field() {",
      "",
      "[Removed Lines]",
      "169:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
      "",
      "[Added Lines]",
      "169:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
      "",
      "---------------"
    ],
    "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php": [
      "File: mod/data/field/url/field.class.php -> mod/data/field/url/field.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "81:             }",
      "82:             $str .= '</td><td>';",
      "83:             $str .= $label;",
      "85:             $str .= '<button id=\"filepicker-button-'.$options->client_id.'\" style=\"display:none\">'.$straddlink.'</button></td></tr>';",
      "86:             $str .= '<tr><td align=\"right\"><span class=\"mod-data-input\">'.get_string('text', 'data').':</span></td><td>';",
      "87:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"'.s($text).'\"';",
      "",
      "[Removed Lines]",
      "84:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.$url.'\" size=\"60\" />';",
      "",
      "[Added Lines]",
      "84:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.s($url).'\" size=\"60\" />';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "109:     function display_search_field($value = '') {",
      "110:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
      "112:     }",
      "114:     function parse_search_field() {",
      "",
      "[Removed Lines]",
      "111:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
      "",
      "[Added Lines]",
      "111:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
      "",
      "---------------"
    ],
    "mod/data/lib.php||mod/data/lib.php": [
      "File: mod/data/lib.php -> mod/data/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1736:     $fn = !empty($search_array[DATA_FIRSTNAME]->data) ? $search_array[DATA_FIRSTNAME]->data : '';",
      "1737:     $ln = !empty($search_array[DATA_LASTNAME]->data) ? $search_array[DATA_LASTNAME]->data : '';",
      "1738:     $patterns[]    = '/##firstname##/';",
      "1740:     $patterns[]    = '/##lastname##/';",
      "1744:     $newtext = preg_replace($patterns, $replacement, $data->asearchtemplate);",
      "",
      "[Removed Lines]",
      "1739:     $replacement[] = '<label class=\"accesshide\" for=\"u_fn\">'.get_string('authorfirstname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_fn\" name=\"u_fn\" value=\"'.$fn.'\" />';",
      "1741:     $replacement[] = '<label class=\"accesshide\" for=\"u_ln\">'.get_string('authorlastname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_ln\" name=\"u_ln\" value=\"'.$ln.'\" />';",
      "",
      "[Added Lines]",
      "1739:     $replacement[] = '<label class=\"accesshide\" for=\"u_fn\">'.get_string('authorfirstname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_fn\" name=\"u_fn\" value=\"'.s($fn).'\" />';",
      "1741:     $replacement[] = '<label class=\"accesshide\" for=\"u_ln\">'.get_string('authorlastname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_ln\" name=\"u_ln\" value=\"'.s($ln).'\" />';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1c3b2058c8f82f63906c97b1a33ecf589fa7f320",
      "candidate_info": {
        "commit_hash": "1c3b2058c8f82f63906c97b1a33ecf589fa7f320",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/1c3b2058c8f82f63906c97b1a33ecf589fa7f320",
        "files": [
          "mod/data/db/install.xml",
          "mod/data/db/upgrade.php",
          "mod/data/edit.php",
          "mod/data/field.php",
          "mod/data/field/checkbox/field.class.php",
          "mod/data/field/date/field.class.php",
          "mod/data/field/file/field.class.php",
          "mod/data/field/latlong/field.class.php",
          "mod/data/field/menu/field.class.php",
          "mod/data/field/menu/mod.html",
          "mod/data/field/multimenu/field.class.php",
          "mod/data/field/multimenu/mod.html",
          "mod/data/field/picture/field.class.php",
          "mod/data/field/picture/mod.html",
          "mod/data/field/radiobutton/field.class.php",
          "mod/data/field/radiobutton/mod.html",
          "mod/data/field/text/mod.html",
          "mod/data/field/textarea/field.class.php",
          "mod/data/field/textarea/mod.html",
          "mod/data/field/url/field.class.php",
          "mod/data/lang/en/data.php",
          "mod/data/lib.php",
          "mod/data/styles.css",
          "mod/data/tests/behat/add_entries.feature",
          "mod/data/tests/behat/required_entries.feature",
          "mod/data/tests/behat/view_entries.feature",
          "mod/data/version.php"
        ],
        "message": "MDL-5583 mod_data: Improve required fields\n\nFix accidental <tr> in some field modify screens\nUpdate mod_data version\nChange required asterisk to image\nImprove required error message\nFix required icon positions\nRemove required code from date field\nAdd name in labels for fields\nAdd required field option for multimenu\nRemove old required field title text modifier\nAdd multimenu to behat\nAdd more comprehensive behat tests\nReload old input when an input error occurs\nBehat grammar fixes\nAllow location of 0, 0\nUse html_writer\nFix existing mod_data behat tests",
        "before_after_code_files": [
          "mod/data/db/upgrade.php||mod/data/db/upgrade.php",
          "mod/data/edit.php||mod/data/edit.php",
          "mod/data/field.php||mod/data/field.php",
          "mod/data/field/checkbox/field.class.php||mod/data/field/checkbox/field.class.php",
          "mod/data/field/date/field.class.php||mod/data/field/date/field.class.php",
          "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
          "mod/data/field/latlong/field.class.php||mod/data/field/latlong/field.class.php",
          "mod/data/field/menu/field.class.php||mod/data/field/menu/field.class.php",
          "mod/data/field/menu/mod.html||mod/data/field/menu/mod.html",
          "mod/data/field/multimenu/field.class.php||mod/data/field/multimenu/field.class.php",
          "mod/data/field/multimenu/mod.html||mod/data/field/multimenu/mod.html",
          "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
          "mod/data/field/picture/mod.html||mod/data/field/picture/mod.html",
          "mod/data/field/radiobutton/field.class.php||mod/data/field/radiobutton/field.class.php",
          "mod/data/field/radiobutton/mod.html||mod/data/field/radiobutton/mod.html",
          "mod/data/field/text/mod.html||mod/data/field/text/mod.html",
          "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
          "mod/data/field/textarea/mod.html||mod/data/field/textarea/mod.html",
          "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
          "mod/data/lang/en/data.php||mod/data/lang/en/data.php",
          "mod/data/lib.php||mod/data/lib.php",
          "mod/data/styles.css||mod/data/styles.css",
          "mod/data/tests/behat/add_entries.feature||mod/data/tests/behat/add_entries.feature",
          "mod/data/tests/behat/required_entries.feature||mod/data/tests/behat/required_entries.feature",
          "mod/data/tests/behat/view_entries.feature||mod/data/tests/behat/view_entries.feature",
          "mod/data/version.php||mod/data/version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
            "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
            "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
            "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
            "mod/data/lib.php||mod/data/lib.php"
          ],
          "candidate": [
            "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
            "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
            "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
            "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
            "mod/data/lib.php||mod/data/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/data/db/upgrade.php||mod/data/db/upgrade.php": [
          "File: mod/data/db/upgrade.php -> mod/data/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:         $table = new xmldb_table('data_fields');",
          "139:         $field = new xmldb_field('required', XMLDB_TYPE_INTEGER, '1', null, XMLDB_NOTNULL, null, '0', 'description');",
          "",
          "[Removed Lines]",
          "136:     if ($oldversion < 2014051201) {",
          "",
          "[Added Lines]",
          "140:     if ($oldversion < 2015022600) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:             $dbman->add_field($table, $field);",
          "144:         }",
          "147:     }",
          "152:     return true;",
          "153: }",
          "",
          "[Removed Lines]",
          "146:         upgrade_mod_savepoint(true, 2014051201, 'data');",
          "",
          "[Added Lines]",
          "150:         upgrade_mod_savepoint(true, 2015022600, 'data');",
          "",
          "---------------"
        ],
        "mod/data/edit.php||mod/data/edit.php": [
          "File: mod/data/edit.php -> mod/data/edit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "330:                     $errors .= $OUTPUT->notification($notification);",
          "331:                 }",
          "332:             }",
          "334:         }",
          "",
          "[Removed Lines]",
          "333:             $replacements[] = $errors . $field->display_add_field($rid);",
          "",
          "[Added Lines]",
          "333:             $replacements[] = $errors . $field->display_add_field($rid, $datarecord);",
          "",
          "---------------"
        ],
        "mod/data/field.php||mod/data/field.php": [
          "File: mod/data/field.php -> mod/data/field.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "267:         $table = new html_table();",
          "268:         $table->head = array(",
          "270:             get_string('type', 'data'),",
          "271:             get_string('required', 'data'),",
          "272:             get_string('fielddescription', 'data'),",
          "274:         );",
          "275:         $table->align = array('left','left','left', 'center');",
          "276:         $table->wrap = array(false,false,false,false);",
          "",
          "[Removed Lines]",
          "269:             get_string('fieldname','data'),",
          "273:             get_string('action','data'),",
          "",
          "[Added Lines]",
          "269:             get_string('fieldname', 'data'),",
          "273:             get_string('action', 'data'),",
          "",
          "---------------"
        ],
        "mod/data/field/checkbox/field.class.php||mod/data/field/checkbox/field.class.php": [
          "File: mod/data/field/checkbox/field.class.php -> mod/data/field/checkbox/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     var $type = 'checkbox';",
          "29:     function display_add_field($recordid = 0, $formdata = null) {",
          "32:         $content = array();",
          "",
          "[Removed Lines]",
          "30:         global $CFG, $DB;",
          "",
          "[Added Lines]",
          "30:         global $CFG, $DB, $OUTPUT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:             $content = array();",
          "42:         }",
          "45:         if ($this->field->required) {",
          "47:         } else {",
          "49:         }",
          "52:         $i = 0;",
          "53:         foreach (explode(\"\\n\", $this->field->param1) as $checkbox) {",
          "",
          "[Removed Lines]",
          "44:         $str = '';",
          "46:             $str .= '<div title=\"' . get_string('requiredfieldhint', 'data', s($this->field->description)) . '\">';",
          "48:             $str .= '<div title=\"' . s($this->field->description) . '\">';",
          "50:         $str .= '<fieldset><legend><span class=\"accesshide\">'.$this->field->name.'</span></legend>';",
          "",
          "[Added Lines]",
          "44:         $str = '<div title=\"' . s($this->field->description) . '\">';",
          "45:         $str .= '<fieldset><legend><span class=\"accesshide\">'.$this->field->name;",
          "47:             $str .= '$nbsp;' . get_string('requiredelement', 'form');",
          "48:             $str .= '</span></legend>';",
          "49:             $str .= '<div>';",
          "50:             $str .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "51:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "52:             $str .= '</div>';",
          "54:             $str .= '</span></legend>';",
          "",
          "---------------"
        ],
        "mod/data/field/date/field.class.php||mod/data/field/date/field.class.php": [
          "File: mod/data/field/date/field.class.php -> mod/data/field/date/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:             $content = time();",
          "52:         }",
          "60:         $dayselector = html_writer::select_time('days', 'field_'.$this->field->id.'_day', $content);",
          "61:         $monthselector = html_writer::select_time('months', 'field_'.$this->field->id.'_month', $content);",
          "62:         $yearselector = html_writer::select_time('years', 'field_'.$this->field->id.'_year', $content);",
          "",
          "[Removed Lines]",
          "54:         $str = '';",
          "55:         if ($this->field->required) {",
          "56:             $str .= '<div title=\"' . get_string('requiredfieldhint', 'data', s($this->field->description)) . '\">';",
          "57:         } else {",
          "58:             $str .= '<div title=\"' . s($this->field->description) . '\">';",
          "59:         }",
          "",
          "[Added Lines]",
          "54:         $str = '<div title=\"'.s($this->field->description).'\">';",
          "",
          "---------------"
        ],
        "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php": [
          "File: mod/data/field/file/field.class.php -> mod/data/field/file/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         if ($formdata) {",
          "40:             $fieldname = 'field_' . $this->field->id . '_file';",
          "41:             $itemid = $formdata->$fieldname;",
          "43:             if ($content = $DB->get_record('data_content', array('fieldid'=>$this->field->id, 'recordid'=>$recordid))) {",
          "45:                 file_prepare_draft_area($itemid, $this->context->id, 'mod_data', 'content', $content->id);",
          "",
          "[Removed Lines]",
          "42:         } else if ($recordid){",
          "",
          "[Added Lines]",
          "42:         } else if ($recordid) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:             $itemid = file_get_unused_draft_itemid();",
          "66:         }",
          "70:         if ($this->field->required) {",
          "72:         } else {",
          "74:         }",
          "78:         $html .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.$itemid.'\" />';",
          "",
          "[Removed Lines]",
          "68:         $html = '';",
          "71:             $html .= '<div title=\"' . get_string('requiredfieldhint', 'data', s($this->field->description)) . '\">';",
          "73:             $html .= '<div title=\"' . s($this->field->description) . '\">';",
          "75:         $html .= '<fieldset><legend><span class=\"accesshide\">'.$this->field->name.'</span></legend>';",
          "",
          "[Added Lines]",
          "69:         $html = '<div title=\"' . s($this->field->description) . '\">';",
          "70:         $html .= '<fieldset><legend><span class=\"accesshide\">'.$this->field->name;",
          "73:             $html .= '&nbsp;' . get_string('requiredelement', 'form') . '</span></legend>';",
          "74:             $image = html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "75:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "76:             $html .= html_writer::div($image);",
          "78:             $html .= '</span></legend>';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:         $output = $PAGE->get_renderer('core', 'files');",
          "92:         $html .= $output->render($fm);",
          "97:         $html .= '</fieldset>';",
          "98:         $html .= '</div>';",
          "",
          "[Removed Lines]",
          "94:         if ($this->field->required) {",
          "95:             $html .= '<span class=\"requiredfield\">' . get_string('requiredfieldshort', 'data') . '</span>';",
          "96:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/data/field/latlong/field.class.php||mod/data/field/latlong/field.class.php": [
          "File: mod/data/field/latlong/field.class.php -> mod/data/field/latlong/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     function display_add_field($recordid = 0, $formdata = null) {",
          "49:         $lat = '';",
          "50:         $long = '';",
          "",
          "[Removed Lines]",
          "47:         global $CFG, $DB;",
          "",
          "[Added Lines]",
          "47:         global $CFG, $DB, $OUTPUT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:                 $long = $content->content1;",
          "60:             }",
          "61:         }",
          "68:         $str .= '<fieldset><legend><span class=\"accesshide\">'.$this->field->name.'</span></legend>';",
          "69:         $str .= '<table><tr><td align=\"right\">';",
          "72:         if ($this->field->required) {",
          "74:         }",
          "75:         $str .= '</tr>';",
          "76:         $str .= '</table>';",
          "77:         $str .= '</fieldset>';",
          "81:         $str .= '</div>';",
          "82:         return $str;",
          "83:     }",
          "",
          "[Removed Lines]",
          "62:         $str = '';",
          "63:         if ($this->field->required) {",
          "64:             $str .= '<div title=\"' . get_string('requiredfieldhint', 'data', s($this->field->description)) . '\">';",
          "65:         } else {",
          "66:             $str .= '<div title=\"' . s($this->field->description) . '\">';",
          "67:         }",
          "70:         $str .= '<label for=\"field_'.$this->field->id.'_0\">' . get_string('latitude', 'data') . '</label></td><td><input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"field_'.$this->field->id.'_0\" value=\"'.s($lat).'\" size=\"10\" />\u00b0N</td></tr>';",
          "71:         $str .= '<tr><td align=\"right\"><label for=\"field_'.$this->field->id.'_1\">' . get_string('longitude', 'data') . '</label></td><td><input type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"'.s($long).'\" size=\"10\" />\u00b0E</td>';",
          "73:             $str .= '<td><span class=\"requiredfield\">' . get_string('requiredfieldshort', 'data') . '</span></td>';",
          "78:         if ($this->field->required) {",
          "79:             $str .= get_string('requiredfieldhint', 'data', s($this->field->description));",
          "80:         }",
          "",
          "[Added Lines]",
          "62:         $str = '<div title=\"'.s($this->field->description).'\">';",
          "65:         $str .= '<label for=\"field_'.$this->field->id.'_0\">' . get_string('latitude', 'data');",
          "66:         if ($this->field->required) {",
          "67:             $str .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "68:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "69:         }",
          "70:         $str .= '</label></td><td><input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"field_'.$this->field->id.'_0\" value=\"';",
          "71:         $str .= s($lat).'\" size=\"10\" />\u00b0N</td></tr>';",
          "72:         $str .= '<tr><td align=\"right\"><label for=\"field_'.$this->field->id.'_1\">' . get_string('longitude', 'data');",
          "74:             $str .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "75:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "77:         $str .= '</label></td><td><input type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"';",
          "78:         $str .= s($long).'\" size=\"10\" />\u00b0E</td>';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "240:         return sprintf('%01.4f', $record->content) . ' ' . sprintf('%01.4f', $record->content1);",
          "241:     }",
          "243: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251:     function notemptyfield($value, $name) {",
          "252:         return isset($value) && !($value == '');",
          "253:     }",
          "",
          "---------------"
        ],
        "mod/data/field/menu/field.class.php||mod/data/field/menu/field.class.php": [
          "File: mod/data/field/menu/field.class.php -> mod/data/field/menu/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:         if ($formdata) {",
          "33:             $fieldname = 'field_' . $this->field->id;",
          "34:             $content = $formdata->$fieldname;",
          "36:             $content = $DB->get_field('data_content', 'content', array('fieldid'=>$this->field->id, 'recordid'=>$recordid));",
          "37:             $content = trim($content);",
          "38:         } else {",
          "39:             $content = '';",
          "40:         }",
          "48:         $options = array();",
          "49:         $rawoptions = explode(\"\\n\",$this->field->param1);",
          "",
          "[Removed Lines]",
          "35:         } else if ($recordid){",
          "41:         $str = '';",
          "42:         if ($this->field->required) {",
          "43:             $str .= '<div title=\"' . get_string('requiredfieldhint', 'data', s($this->field->description)) . '\">';",
          "44:         } else {",
          "45:             $str .= '<div title=\"' . s($this->field->description) . '\">';",
          "46:         }",
          "",
          "[Added Lines]",
          "35:         } else if ($recordid) {",
          "41:         $str = '<div title=\"' . s($this->field->description) . '\">';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:             }",
          "55:         }",
          "59:         if ($this->field->required) {",
          "61:         }",
          "63:         $str .= '</div>';",
          "",
          "[Removed Lines]",
          "57:         $str .= html_writer::label(get_string('menuchoose', 'data'), 'field_'.$this->field->id, false, array('class' => 'accesshide'));",
          "58:         $str .= html_writer::select($options, 'field_'.$this->field->id, $content, array(''=>get_string('menuchoose', 'data')), array('id'=>'field_'.$this->field->id));",
          "60:             $str .= '<span class=\"requiredfield\">' . get_string('requiredfieldshort', 'data') . '</span>';",
          "",
          "[Added Lines]",
          "52:         $str .= '<label for=\"' . 'field_' . $this->field->id . '\">';",
          "53:         $str .= html_writer::span($this->field->name, 'accesshide');",
          "55:             $image = html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "56:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "57:             $str .= html_writer::div($image);",
          "59:         $str .= '</label>';",
          "60:         $str .= html_writer::select($options, 'field_'.$this->field->id, $content, array(''=>get_string('menuchoose', 'data')), array('id'=>'field_'.$this->field->id));",
          "",
          "---------------"
        ],
        "mod/data/field/menu/mod.html||mod/data/field/menu/mod.html": [
          "File: mod/data/field/menu/mod.html -> mod/data/field/menu/mod.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:         <td class=\"c0\"><label for=\"description\"><?php echo get_string('fielddescription', 'data'); ?></label></td>",
          "8:         <td class=\"c1\"><input class=\"fielddescription\" type=\"text\" name=\"description\" id=\"description\" value=\"<?php p($this->field->description);?>\" /></td>",
          "9:     </tr>",
          "11:     <tr>",
          "12:         <td class=\"c0\"><label for=\"required\"><?php echo get_string('requiredfield', 'data'); ?></label></td>",
          "13:         <td class=\"c1\"><input class=\"requiredfield\" type=\"checkbox\" name=\"required\" id=\"required\" <?php p($this->field->required?\"checked=\\\"checked\\\"\":\"\"); ?>/></td>",
          "",
          "[Removed Lines]",
          "10:     <tr>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/data/field/multimenu/field.class.php||mod/data/field/multimenu/field.class.php": [
          "File: mod/data/field/multimenu/field.class.php -> mod/data/field/multimenu/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     var $type = 'multimenu';",
          "29:     function display_add_field($recordid = 0, $formdata = null) {",
          "32:         if ($formdata) {",
          "33:             $fieldname = 'field_' . $this->field->id;",
          "36:             $content = $DB->get_field('data_content', 'content', array('fieldid'=>$this->field->id, 'recordid'=>$recordid));",
          "37:             $content = explode('##', $content);",
          "38:         } else {",
          "",
          "[Removed Lines]",
          "30:         global $DB;",
          "34:             $content = $formdata->$fieldname;",
          "35:         } else if ($recordid){",
          "",
          "[Added Lines]",
          "30:         global $DB, $OUTPUT;",
          "34:             if (isset($formdata->$fieldname)) {",
          "35:                 $content = $formdata->$fieldname;",
          "36:             } else {",
          "37:                 $content = array();",
          "38:             }",
          "39:         } else if ($recordid) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:         $str = '<div title=\"'.s($this->field->description).'\">';",
          "43:         $str .= '<input name=\"field_' . $this->field->id . '[xxx]\" type=\"hidden\" value=\"xxx\"/>'; // hidden field - needed for empty selection",
          "45:         $str .= '<select name=\"field_' . $this->field->id . '[]\" id=\"field_' . $this->field->id . '\" multiple=\"multiple\">';",
          "48:             $option = trim($option);",
          "49:             $str .= '<option value=\"' . s($option) . '\"';",
          "",
          "[Removed Lines]",
          "44:         $str .= '<label class=\"accesshide\" for=\"field_' . $this->field->id . '\">' . $this->field->name. '</label>';",
          "47:         foreach (explode(\"\\n\",$this->field->param1) as $option) {",
          "",
          "[Added Lines]",
          "49:         $str .= '<label for=\"field_' . $this->field->id . '\">';",
          "50:         $str .= html_writer::span($this->field->name, 'accesshide');",
          "51:         if ($this->field->required) {",
          "52:             $str .= '<div>';",
          "53:             $str .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "54:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "55:             $str .= '</div>';",
          "56:         }",
          "57:         $str .= '</label>';",
          "60:         foreach (explode(\"\\n\", $this->field->param1) as $option) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "241:         }",
          "242:         return false;",
          "243:     }",
          "244: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265:     function notemptyfield($value, $name) {",
          "266:         unset($value['xxx']);",
          "267:         return !empty($value);",
          "268:     }",
          "",
          "---------------"
        ],
        "mod/data/field/multimenu/mod.html||mod/data/field/multimenu/mod.html": [
          "File: mod/data/field/multimenu/mod.html -> mod/data/field/multimenu/mod.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:         <td class=\"c0\"><label for=\"description\"><?php echo get_string('fielddescription', 'data'); ?></label></td>",
          "8:         <td class=\"c1\"><input class=\"fielddescription\" type=\"text\" name=\"description\" id=\"description\" value=\"<?php p($this->field->description); ?>\" /></td>",
          "9:     </tr>",
          "10:     <tr>",
          "11:         <td class=\"c0\" valign=\"top\"><label for=\"param1\"><?php echo get_string('fieldoptions', 'data'); ?></label></td>",
          "12:         <td class=\"c1\"><textarea class=\"optionstextarea\" name=\"param1\" id=\"param1\" cols=\"80\" rows=\"10\"><?php if($this->field->param1) {p($this->field->param1);} ?></textarea></td>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:     <tr>",
          "11:         <td class=\"c0\"><label for=\"required\"><?php echo get_string('requiredfield', 'data'); ?></label></td>",
          "12:         <td class=\"c1\"><input class=\"requiredfield\" type=\"checkbox\" name=\"required\" id=\"required\" <?php p($this->field->required?\"checked=\\\"checked\\\"\":\"\"); ?>/></td>",
          "13:     </tr>",
          "",
          "---------------"
        ],
        "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php": [
          "File: mod/data/field/picture/field.class.php -> mod/data/field/picture/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:         if ($formdata) {",
          "41:             $fieldname = 'field_' . $this->field->id . '_file';",
          "42:             $itemid = $formdata->$fieldname;",
          "43:         } else if ($recordid) {",
          "44:             if ($content = $DB->get_record('data_content', array('fieldid'=>$this->field->id, 'recordid'=>$recordid))) {",
          "45:                 file_prepare_draft_area($itemid, $this->context->id, 'mod_data', 'content', $content->id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:             $fieldname = 'field_' . $this->field->id . '_alttext';",
          "44:             if (isset($formdata->$fieldname)) {",
          "45:                 $alttext = $formdata->$fieldname;",
          "46:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:         } else {",
          "68:             $itemid = file_get_unused_draft_itemid();",
          "69:         }",
          "71:         if ($this->field->required) {",
          "73:         } else {",
          "75:         }",
          "77:         $str .= '<noscript>';",
          "78:         if ($file) {",
          "79:             $src = file_encode_url($CFG->wwwroot.'/pluginfile.php/', $this->context->id.'/mod_data/content/'.$content->id.'/'.$file->get_filename());",
          "",
          "[Removed Lines]",
          "70:         $str = '';",
          "72:             $str .= '<div title=\"' . get_string('requiredfieldhint', 'data', s($this->field->description)) . '\">';",
          "74:             $str .= '<div title=\"' . s($this->field->description) . '\">';",
          "76:         $str .= '<fieldset><legend><span class=\"accesshide\">'.$this->field->name.'</span></legend>';",
          "",
          "[Added Lines]",
          "74:         $str = '<div title=\"' . s($this->field->description) . '\">';",
          "75:         $str .= '<fieldset><legend><span class=\"accesshide\">'.$this->field->name;",
          "78:             $str .= '&nbsp;' . get_string('requiredelement', 'form') . '</span></legend>';",
          "79:             $image = html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "80:                                       array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "81:             $str .= html_writer::div($image);",
          "83:             $str .= '</span></legend>';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "103:         $str .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.$itemid.'\" />';",
          "104:         $str .= '<label for=\"field_'.$this->field->id.'_alttext\">'.get_string('alttext','data') .'</label>&nbsp;<input type=\"text\" name=\"field_'",
          "105:                 .$this->field->id.'_alttext\" id=\"field_'.$this->field->id.'_alttext\" value=\"'.s($alttext).'\" />';",
          "109:         $str .= '</div>';",
          "111:         $str .= '</fieldset>';",
          "",
          "[Removed Lines]",
          "106:         if ($this->field->required) {",
          "107:             $str .= '<span class=\"requiredfield\">' . get_string('requiredfieldshort', 'data') . '</span>';",
          "108:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "311:     function notemptyfield($value, $name) {",
          "312:         global $USER;",
          "315:         if ($names[2] == 'file') {",
          "316:             $usercontext = context_user::instance($USER->id);",
          "317:             $fs = get_file_storage();",
          "318:             $files = $fs->get_area_files($usercontext->id, 'user', 'draft', $value);",
          "320:         }",
          "321:         return false;",
          "322:     }",
          "",
          "[Removed Lines]",
          "314:         $names = explode('_',$name);",
          "319:             return count($files)>=2;",
          "",
          "[Added Lines]",
          "319:         $names = explode('_', $name);",
          "324:             return count($files) >= 2;",
          "",
          "---------------"
        ],
        "mod/data/field/picture/mod.html||mod/data/field/picture/mod.html": [
          "File: mod/data/field/picture/mod.html -> mod/data/field/picture/mod.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:             <input class=\"fielddescription\" type=\"text\" name=\"description\" id=\"description\" value=\"<?php p($this->field->description);?>\" />",
          "13:         </td>",
          "14:     </tr>",
          "16:     <tr>",
          "17:         <td class=\"c0\"><label for=\"required\"><?php echo get_string('requiredfield', 'data'); ?></label></td>",
          "18:         <td class=\"c1\"><input class=\"requiredfield\" type=\"checkbox\" name=\"required\" id=\"required\" <?php p($this->field->required?\"checked=\\\"checked\\\"\":\"\"); ?>/></td>",
          "",
          "[Removed Lines]",
          "15:     <tr>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/data/field/radiobutton/field.class.php||mod/data/field/radiobutton/field.class.php": [
          "File: mod/data/field/radiobutton/field.class.php -> mod/data/field/radiobutton/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     var $type = 'radiobutton';",
          "29:     function display_add_field($recordid = 0, $formdata = null) {",
          "32:         if ($formdata) {",
          "33:             $fieldname = 'field_' . $this->field->id;",
          "36:             $content = trim($DB->get_field('data_content', 'content', array('fieldid'=>$this->field->id, 'recordid'=>$recordid)));",
          "37:         } else {",
          "38:             $content = '';",
          "39:         }",
          "41:         if ($this->field->required) {",
          "43:         } else {",
          "45:         }",
          "48:         $i = 0;",
          "49:         $requiredstr = '';",
          "54:         foreach ($options as $radio) {",
          "55:             $radio = trim($radio);",
          "56:             if ($radio === '') {",
          "",
          "[Removed Lines]",
          "30:         global $CFG, $DB;",
          "34:             $content = $formdata->$fieldname;",
          "35:         } else if ($recordid){",
          "40:         $str = '';",
          "42:             $str .= '<div title=\"' . get_string('requiredfieldhint', 'data', s($this->field->description)) . '\">';",
          "44:             $str .= '<div title=\"' . s($this->field->description) . '\">';",
          "46:         $str .= '<fieldset><legend><span class=\"accesshide\">'.$this->field->name.'</span></legend>';",
          "50:         if ($this->field->required) {",
          "51:             $requiredstr = '<span class=\"requiredfield\">' . get_string('requiredfieldshort', 'data') . '</span>';",
          "52:         }",
          "53:         $options = explode(\"\\n\",$this->field->param1);",
          "",
          "[Added Lines]",
          "30:         global $CFG, $DB, $OUTPUT;",
          "34:             if (isset($formdata->$fieldname)) {",
          "35:                 $content = $formdata->$fieldname;",
          "36:             } else {",
          "37:                 $content = '';",
          "38:             }",
          "39:         } else if ($recordid) {",
          "45:         $str = '<div title=\"' . s($this->field->description) . '\">';",
          "46:         $str .= '<fieldset><legend><span class=\"accesshide\">' . $this->field->name;",
          "49:             $str .= '&nbsp;' . get_string('requiredelement', 'form') . '</span></legend>';",
          "50:             $image = html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "51:                                       array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "52:             $str .= html_writer::div($image);",
          "54:             $str .= '</span></legend>';",
          "59:         $options = explode(\"\\n\", $this->field->param1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:                 $str .= '/>';",
          "67:             }",
          "74:             $i++;",
          "75:         }",
          "76:         $str .= '</fieldset>';",
          "",
          "[Removed Lines]",
          "69:             $str .= '<label for=\"field_'.$this->field->id.'_'.$i.'\">'.$radio.'</label>';",
          "70:             if ($i == count($options) - 1) {",
          "71:                 $str .= $requiredstr;",
          "72:             }",
          "73:             $str .= '<br />';",
          "",
          "[Added Lines]",
          "75:             $str .= '<label for=\"field_'.$this->field->id.'_'.$i.'\">'.$radio.'</label><br />';",
          "",
          "---------------"
        ],
        "mod/data/field/radiobutton/mod.html||mod/data/field/radiobutton/mod.html": [
          "File: mod/data/field/radiobutton/mod.html -> mod/data/field/radiobutton/mod.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:         <td class=\"c0\"><label for=\"description\"><?php echo get_string('fielddescription', 'data'); ?></label></td>",
          "8:         <td class=\"c1\"><input class=\"fielddescription\" type=\"text\" name=\"description\" id=\"description\" value=\"<?php p($this->field->description); ?>\" /></td>",
          "9:     </tr>",
          "11:     <tr>",
          "12:         <td class=\"c0\"><label for=\"required\"><?php echo get_string('requiredfield', 'data'); ?></label></td>",
          "13:         <td class=\"c1\"><input class=\"requiredfield\" type=\"checkbox\" name=\"required\" id=\"required\" <?php p($this->field->required?\"checked=\\\"checked\\\"\":\"\"); ?>/></td>",
          "",
          "[Removed Lines]",
          "10:     <tr>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/data/field/text/mod.html||mod/data/field/text/mod.html": [
          "File: mod/data/field/text/mod.html -> mod/data/field/text/mod.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:         <td class=\"c0\"><label for=\"description\"><?php echo get_string('fielddescription', 'data'); ?></label></td>",
          "8:         <td class=\"c1\"><input class=\"fielddescription\" type=\"text\" name=\"description\" id=\"description\" value=\"<?php p($this->field->description); ?>\" /></td>",
          "9:     </tr>",
          "11:     <tr>",
          "12:         <td class=\"c0\"><label for=\"required\"><?php echo get_string('requiredfield', 'data'); ?></label></td>",
          "13:         <td class=\"c1\"><input class=\"requiredfield\" type=\"checkbox\" name=\"required\" id=\"required\" <?php p($this->field->required?\"checked=\\\"checked\\\"\":\"\"); ?>/></td>",
          "",
          "[Removed Lines]",
          "10:     <tr>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php": [
          "File: mod/data/field/textarea/field.class.php -> mod/data/field/textarea/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:         $text   = '';",
          "56:         $format = 0;",
          "58:         if ($this->field->required) {",
          "62:         }",
          "64:         editors_head_setup();",
          "65:         $options = $this->get_options();",
          "",
          "[Removed Lines]",
          "57:         $str = '';",
          "59:             $str .= '<div title=\"' . get_string('requiredfieldhint', 'data', s($this->field->description)) . '\">';",
          "60:         } else {",
          "61:             $str .= '<div title=\"' . s($this->field->description) . '\">';",
          "",
          "[Added Lines]",
          "57:         $str = '<div title=\"' . s($this->field->description) . '\">';",
          "58:         $str .= '<label for=\"field_' . $this->field->id . '\">';",
          "59:         $str .= html_writer::span($this->field->name, \"accesshide\");",
          "61:             $str .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "62:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "64:         $str .= '</label>';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:         if ($formdata) {",
          "71:             $fieldname = 'field_' . $this->field->id . '_content1';",
          "73:             $fieldname = 'field_' . $this->field->id . '_itemid';",
          "75:             $fieldname = 'field_' . $this->field->id;",
          "78:             $format = $content->content1;",
          "79:             $text = clean_text($content->content, $format);",
          "80:             $text = file_prepare_draft_area($draftitemid, $this->context->id, 'mod_data', 'content', $content->id, $options, $text);",
          "",
          "[Removed Lines]",
          "72:             $format = $formdata->$fieldname;",
          "74:             $draftitemid = $formdata->$fieldname;",
          "76:             $text = $formdata->$fieldname;",
          "77:         } else if ($recordid && $content = $DB->get_record('data_content', array('fieldid'=>$this->field->id, 'recordid'=>$recordid))){",
          "",
          "[Added Lines]",
          "74:             if (isset($formdata->$fieldname)) {",
          "75:                 $format = $formdata->$fieldname;",
          "76:             } else {",
          "77:                 $format = file_get_unused_draft_itemid();",
          "78:             }",
          "80:             if (isset($formdata->$fieldname)) {",
          "81:                 $draftitemid = $formdata->$fieldname;",
          "82:             } else {",
          "83:                 $draftitemid = file_get_unused_draft_itemid();",
          "84:             }",
          "86:             if (isset($formdata->$fieldname)) {",
          "87:                 $text = $formdata->$fieldname;",
          "88:             }",
          "89:         } else if ($recordid &&",
          "90:                    $content = $DB->get_record('data_content', array('fieldid' => $this->field->id, 'recordid' => $recordid))) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:         }",
          "142:         $str .= '</select>';",
          "147:         $str .= '</div>';",
          "148:         $str .= '</div>';",
          "149:         return $str;",
          "",
          "[Removed Lines]",
          "144:         if ($this->field->required) {",
          "145:             $str .= '<span class=\"requiredfield\">' . get_string('requiredfieldshort', 'data') . '</span>';",
          "146:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "255:     function notemptyfield($value, $name) {",
          "258:         if (count($names) == 2) {",
          "259:             return !empty($value);",
          "260:         }",
          "",
          "[Removed Lines]",
          "256:         $names = explode('_',$name);",
          "",
          "[Added Lines]",
          "266:         $names = explode('_', $name);",
          "",
          "---------------"
        ],
        "mod/data/field/textarea/mod.html||mod/data/field/textarea/mod.html": [
          "File: mod/data/field/textarea/mod.html -> mod/data/field/textarea/mod.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:             value=\"<?php p($this->field->description); ?>\" />",
          "11:         </td>",
          "12:     </tr>",
          "14:     <tr>",
          "15:         <td class=\"c0\"><label for=\"required\"><?php echo get_string('requiredfield', 'data'); ?></label></td>",
          "16:         <td class=\"c1\"><input class=\"requiredfield\" type=\"checkbox\" name=\"required\" id=\"required\" <?php p($this->field->required?\"checked=\\\"checked\\\"\":\"\"); ?>/></td>",
          "",
          "[Removed Lines]",
          "13:     <tr>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php": [
          "File: mod/data/field/url/field.class.php -> mod/data/field/url/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:                 $text = $content->content1;",
          "57:             }",
          "58:         }",
          "60:         if ($this->field->required) {",
          "64:         }",
          "65:         if (!empty($this->field->param1) and empty($this->field->param2)) {",
          "66:             $str .= '<table><tr><td align=\"right\">';",
          "67:             $str .= get_string('url','data').':</td><td>';",
          "69:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.$url.'\" size=\"60\" />';",
          "70:             $str .= '<button id=\"filepicker-button-'.$options->client_id.'\" style=\"display:none\">'.$straddlink.'</button></td></tr>';",
          "71:             $str .= '<tr><td align=\"right\">'.get_string('text','data').':</td><td><input type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"'.s($text).'\" size=\"60\" /></td></tr>';",
          "72:             $str .= '</table>';",
          "73:         } else {",
          "76:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.s($url).'\" size=\"60\" />';",
          "77:             if (count($options->repositories) > 0) {",
          "78:                 $str .= '<button id=\"filepicker-button-'.$options->client_id.'\" class=\"visibleifjs\">'.$straddlink.'</button>';",
          "",
          "[Removed Lines]",
          "59:         $str = '';",
          "61:             $str .= '<div title=\"' . get_string('requiredfieldhint', 'data', s($this->field->description)) . '\">';",
          "62:         } else {",
          "63:             $str .= '<div title=\"' . s($this->field->description) . '\">';",
          "68:             $str .= '<label class=\"accesshide\" for=\"' . $fieldid . '\">'. $this->field->name .'</label>';",
          "75:             $str .= '<label class=\"accesshide\" for=\"' . $fieldid . '\">'. $this->field->name .'</label>';",
          "",
          "[Added Lines]",
          "59:         $str = '<div title=\"' . s($this->field->description) . '\">';",
          "61:         $label = '<label for=\"' . $fieldid . '\"><span class=\"accesshide\">' . $this->field->name . '</span>';",
          "63:             $label .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "64:                                       array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "66:         $label .= '</label>';",
          "71:             $str .= $label;",
          "78:             $str .= $label;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:         $module = array('name'=>'data_urlpicker', 'fullpath'=>'/mod/data/data.js', 'requires'=>array('core_filepicker'));",
          "86:         $PAGE->requires->js_init_call('M.data_urlpicker.init', array($options), true, $module);",
          "91:         $str .= '</div>';",
          "92:         return $str;",
          "93:     }",
          "",
          "[Removed Lines]",
          "88:         if ($this->field->required) {",
          "89:             $str .= '<span class=\"requiredfield\">' . get_string('requiredfieldshort', 'data') . '</span>';",
          "90:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/data/lang/en/data.php||mod/data/lang/en/data.php": [
          "File: mod/data/lang/en/data.php -> mod/data/lang/en/data.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "135: $string['entrysaved'] = 'Your entry has been saved';",
          "136: $string['errormustbeteacher'] = 'You need to be a teacher to use this page!';",
          "137: $string['errorpresetexists'] = 'There is already a preset with the selected name';",
          "138: $string['example'] = 'Database module example';",
          "139: $string['excel'] = 'Excel';",
          "140: $string['export'] = 'Export';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138: $string['errormustsupplyvalue'] = 'You must supply a value here.';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "311: Note: If entries are required before viewing, the database auto-linking filter should be disabled. This is because the database auto-linking filter can\\'t determine whether a user has submitted the required number of entries.';",
          "312: $string['requiredfield'] = 'Required field';",
          "315: $string['resetsettings'] = 'Reset filters';",
          "316: $string['resettemplate'] = 'Reset template';",
          "317: $string['resizingimages'] = 'Resizing image thumbnails...';",
          "",
          "[Removed Lines]",
          "313: $string['requiredfieldhint'] = '{$a} (required field)';",
          "314: $string['requiredfieldshort'] = ' *';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/data/lib.php||mod/data/lib.php": [
          "File: mod/data/lib.php -> mod/data/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:         $this->field->name        = trim($data->name);",
          "155:         $this->field->description = trim($data->description);",
          "158:         if (isset($data->param1)) {",
          "159:             $this->field->param1 = trim($data->param1);",
          "",
          "[Removed Lines]",
          "156:         $this->field->required    = !empty($data->required)?1:0;",
          "",
          "[Added Lines]",
          "156:         $this->field->required    = !empty($data->required) ? 1 : 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "276:         if ($formdata) {",
          "277:             $fieldname = 'field_' . $this->field->id;",
          "278:             $content = $formdata->$fieldname;",
          "280:             $content = $DB->get_field('data_content', 'content', array('fieldid'=>$this->field->id, 'recordid'=>$recordid));",
          "281:         } else {",
          "282:             $content = '';",
          "",
          "[Removed Lines]",
          "273:     function display_add_field($recordid=0, $formdata=null){",
          "274:         global $DB;",
          "279:         } else if ($recordid){",
          "",
          "[Added Lines]",
          "273:     function display_add_field($recordid=0, $formdata=null) {",
          "274:         global $DB, $OUTPUT;",
          "279:         } else if ($recordid) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "287:             $content='';",
          "288:         }",
          "298:         if ($this->field->required) {",
          "300:         }",
          "301:         $str .= '</div>';",
          "303:         return $str;",
          "",
          "[Removed Lines]",
          "290:         $str = '';",
          "291:         if ($this->field->required) {",
          "292:             $str .= '<div title=\"' . get_string('requiredfieldhint', 'data', s($this->field->description)) . '\">';",
          "293:         } else {",
          "294:             $str .= '<div title=\"' . s($this->field->description) . '\">';",
          "295:         }",
          "296:         $str .= '<label class=\"accesshide\" for=\"field_'.$this->field->id.'\">'.$this->field->description.'</label>';",
          "297:         $str .= '<input class=\"basefieldinput\" type=\"text\" name=\"field_'.$this->field->id.'\" id=\"field_'.$this->field->id.'\" value=\"'.s($content).'\" />';",
          "299:             $str .= '<span class=\"requiredfield\">' . get_string('requiredfieldshort', 'data') . '</span>';",
          "",
          "[Added Lines]",
          "290:         $str = '<div title=\"' . s($this->field->description) . '\">';",
          "291:         $str .= '<label for=\"field_'.$this->field->id.'\"><span class=\"accesshide\">'.$this->field->name.'</span>';",
          "293:             $str .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "294:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "296:         $str .= '</label><input class=\"basefieldinput\" type=\"text\" name=\"field_'.$this->field->id.'\" id=\"field_'.$this->field->id;",
          "297:         $str .= '\" value=\"'.s($content).'\" />';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3835:             if (!isset($result->fieldnotifications[$field->field->name])) {",
          "3836:                 $result->fieldnotifications[$field->field->name] = array();",
          "3837:             }",
          "3839:             $requiredfieldsfilled = false;",
          "3840:         }",
          "",
          "[Removed Lines]",
          "3838:             $result->fieldnotifications[$field->field->name][] = get_string('required');",
          "",
          "[Added Lines]",
          "3835:             $result->fieldnotifications[$field->field->name][] = get_string('errormustsupplyvalue', 'data');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3850:     if ($emptyform) {",
          "3853:     }",
          "3855:     $result->validated = $requiredfieldsfilled && !$emptyform;",
          "",
          "[Removed Lines]",
          "3852:         $result->generalnotifications[] = get_string('emptyaddform','data');",
          "",
          "[Added Lines]",
          "3849:         $result->generalnotifications[] = get_string('emptyaddform', 'data');",
          "",
          "---------------"
        ],
        "mod/data/styles.css||mod/data/styles.css": [
          "File: mod/data/styles.css -> mod/data/styles.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: .dir-rtl .mod-data-default-template .template-token {text-align:right;}",
          "70: .dir-rtl .mod-data-default-template searchcontrols {text-align:left;}",
          "81: }",
          "",
          "[Removed Lines]",
          "72: #page-mod-data-edit .privatefieldlocked {",
          "73:     font-style: italic;",
          "74:     color: #888888;",
          "75: }",
          "76: #page-mod-data-view .privatefieldhidden {",
          "77:     display: none;",
          "78: }",
          "79: #page-mod-data-edit .requiredfield {",
          "80:     color: #ff0000;",
          "",
          "[Added Lines]",
          "72: #page-mod-data-edit .req {",
          "73:     cursor: help;",
          "",
          "---------------"
        ],
        "mod/data/tests/behat/add_entries.feature||mod/data/tests/behat/add_entries.feature": [
          "File: mod/data/tests/behat/add_entries.feature -> mod/data/tests/behat/add_entries.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:     When I log in as \"student1\"",
          "32:     And I follow \"Course 1\"",
          "33:     And I add an entry to \"Test database name\" database with:",
          "35:     And I press \"Save and view\"",
          "36:     Then I should see \"Student original entry\"",
          "37:     And I follow \"Edit\"",
          "38:     And I set the following fields to these values:",
          "40:     And I press \"Save and view\"",
          "41:     And I should see \"Student edited entry\"",
          "42:     And I add an entry to \"Test database name\" database with:",
          "44:     And I press \"Save and add another\"",
          "45:     And I add an entry to \"Test database name\" database with:",
          "47:     And I press \"Save and view\"",
          "48:     And I follow \"View list\"",
          "49:     And I should see \"Student edited entry\"",
          "",
          "[Removed Lines]",
          "34:       | Test field description | Student original entry |",
          "39:       | Test field description | Student edited entry |",
          "43:       | Test field description | Student second entry |",
          "46:       | Test field description | Student third entry |",
          "",
          "[Added Lines]",
          "34:       | Test field name | Student original entry |",
          "39:       | Test field name | Student edited entry |",
          "43:       | Test field name | Student second entry |",
          "46:       | Test field name | Student third entry |",
          "",
          "---------------"
        ],
        "mod/data/tests/behat/required_entries.feature||mod/data/tests/behat/required_entries.feature": [
          "File: mod/data/tests/behat/required_entries.feature -> mod/data/tests/behat/required_entries.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: @mod @mod_data",
          "2: Feature: Users can be required to specify certain fields when adding entries to database activities",
          "8:     Given the following \"users\" exist:",
          "9:       | username | firstname | lastname | email |",
          "10:       | student1 | Student | 1 | student1@asd.com |",
          "",
          "[Removed Lines]",
          "3:   In order to populate databases",
          "4:   As a user",
          "5:   I need to specify certain fields when I add entries to databases",
          "7:   Scenario: Students can add entries to a database",
          "",
          "[Added Lines]",
          "3:   In order to constrain user input",
          "4:   As a teacher",
          "5:   I need to specify certain fields as required when I add entries to databases",
          "7:   Background:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:     And I follow \"Course 1\"",
          "24:     And I add a \"Text input\" field to \"Test database name\" database and I fill the form with:",
          "25:       | Field name | Base Text input |",
          "26:       | Field description | Base Text input |",
          "27:     And I add a \"Checkbox\" field to \"Test database name\" database and I fill the form with:",
          "28:       | Field name | Required Checkbox |",
          "29:       | Field description | Required Checkbox |",
          "30:       | Required | yes |",
          "32:     And I add a \"Latlong\" field to \"Test database name\" database and I fill the form with:",
          "33:       | Field name | Required Latlong |",
          "34:       | Field description | Required Latlong |",
          "",
          "[Removed Lines]",
          "31:       | Options | Option 1 |",
          "",
          "[Added Lines]",
          "26:       | Required | yes |",
          "32:       | Options | Required Checkbox Option 1 |",
          "33:     And I follow \"Fields\"",
          "34:     And I set the field \"newtype\" to \"Checkbox\"",
          "35:     And I click on \"Go\" \"button\" in the \".fieldadd\" \"css_element\"",
          "36:     And I set the following fields to these values:",
          "37:       | Field name | Required Two-Option Checkbox |",
          "38:       | Field description | Required Two-Option Checkbox |",
          "39:       | Required | yes |",
          "40:     And I set the field \"Options\" to multiline",
          "41:     \"\"\"",
          "42:     RTOC Option 1",
          "43:     RTOC Option 2",
          "44:     \"\"\"",
          "45:     And I press \"Add\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46:       | Field name | Required Radio |",
          "47:       | Field description | Required Radio |",
          "48:       | Required | yes |",
          "50:     And I add a \"Text input\" field to \"Test database name\" database and I fill the form with:",
          "51:       | Field name | Required Text input |",
          "52:       | Field description | Required Text input |",
          "",
          "[Removed Lines]",
          "49:       | Options | Option 1 |",
          "",
          "[Added Lines]",
          "63:       | Options | Required Radio Option 1 |",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "59:       | Field name | Required URL |",
          "60:       | Field description | Required URL |",
          "61:       | Required | yes |",
          "62:     And I add a \"Checkbox\" field to \"Test database name\" database and I fill the form with:",
          "63:       | Field name | Not required Checkbox |",
          "64:       | Field description | Not required Checkbox |",
          "66:     And I add a \"Latlong\" field to \"Test database name\" database and I fill the form with:",
          "67:       | Field name | Not required Latlong |",
          "68:       | Field description | Not required Latlong |",
          "",
          "[Removed Lines]",
          "65:       | Options | Option 1 |",
          "",
          "[Added Lines]",
          "76:     And I add a \"Multimenu\" field to \"Test database name\" database and I fill the form with:",
          "77:       | Field name | Required Multimenu |",
          "78:       | Field description | Required Multimenu |",
          "79:       | Required | yes |",
          "80:       | Options | Option 1 |",
          "81:     And I follow \"Fields\"",
          "82:     And I set the field \"newtype\" to \"Multimenu\"",
          "83:     And I click on \"Go\" \"button\" in the \".fieldadd\" \"css_element\"",
          "84:     And I set the following fields to these values:",
          "85:       | Field name | Required Two-Option Multimenu |",
          "86:       | Field description | Required Two-Option Multimenu |",
          "87:       | Required | yes |",
          "88:     And I set the field \"Options\" to multiline",
          "89:     \"\"\"",
          "90:     Option 1",
          "91:     Option 2",
          "92:     \"\"\"",
          "93:     And I press \"Add\"",
          "97:       | Options | Not required Checkbox Option 1 |",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "76:     And I add a \"Radio button\" field to \"Test database name\" database and I fill the form with:",
          "77:       | Field name | Not required Radio |",
          "78:       | Field description | Not required Radio |",
          "80:     And I add a \"Text input\" field to \"Test database name\" database and I fill the form with:",
          "81:       | Field name | Not required Text input |",
          "82:       | Field description | Not required Text input |",
          "",
          "[Removed Lines]",
          "79:       | Options | Option 1 |",
          "",
          "[Added Lines]",
          "111:       | Options | Not required Radio Option 1 |",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "86:     And I add a \"URL\" field to \"Test database name\" database and I fill the form with:",
          "87:       | Field name | Not required URL |",
          "88:       | Field description | Not required URL |",
          "89:     And I follow \"Templates\"",
          "90:     And I log out",
          "91:     When I log in as \"student1\"",
          "92:     And I follow \"Course 1\"",
          "93:     And I add an entry to \"Test database name\" database with:",
          "95:     And I press \"Save and view\"",
          "96:     Then \".alert.alert-error\" \"css_element\" should exist in the \"Required Checkbox\" \"table_row\"",
          "112:     And I follow \"View list\"",
          "113:     And I should see \"No entries in database\"",
          "",
          "[Removed Lines]",
          "94:        | Base Text input | Some input to allow us to submit the for otherwise empty |",
          "97:     Then \".alert.alert-error\" \"css_element\" should exist in the \"Required Latlong\" \"table_row\"",
          "98:     Then \".alert.alert-error\" \"css_element\" should exist in the \"Required Menu\" \"table_row\"",
          "99:     Then \".alert.alert-error\" \"css_element\" should exist in the \"Required Number\" \"table_row\"",
          "100:     Then \".alert.alert-error\" \"css_element\" should exist in the \"Required Radio\" \"table_row\"",
          "101:     Then \".alert.alert-error\" \"css_element\" should exist in the \"Required Text input\" \"table_row\"",
          "102:     Then \".alert.alert-error\" \"css_element\" should exist in the \"Required Text area\" \"table_row\"",
          "103:     Then \".alert.alert-error\" \"css_element\" should exist in the \"Required URL\" \"table_row\"",
          "104:     Then \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Checkbox\" \"table_row\"",
          "105:     Then \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Latlong\" \"table_row\"",
          "106:     Then \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Menu\" \"table_row\"",
          "107:     Then \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Number\" \"table_row\"",
          "108:     Then \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Radio\" \"table_row\"",
          "109:     Then \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Text input\" \"table_row\"",
          "110:     Then \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Text area\" \"table_row\"",
          "111:     Then \".alert.alert-error\" \"css_element\" should not exist in the \"Not required URL\" \"table_row\"",
          "",
          "[Added Lines]",
          "121:     And I add a \"Multimenu\" field to \"Test database name\" database and I fill the form with:",
          "122:       | Field name | Not required Multimenu |",
          "123:       | Field description | Not required Multimenu |",
          "124:       | Options | Option 1 |",
          "128:   Scenario: Students receive errors for empty required fields but not for optional fields",
          "132:        | Base Text input | Some input to allow us to submit the otherwise empty form |",
          "135:     And \".alert.alert-error\" \"css_element\" should exist in the \"Required Two-Option Checkbox\" \"table_row\"",
          "136:     And \".alert.alert-error\" \"css_element\" should exist in the \"Required Latlong\" \"table_row\"",
          "137:     And \".alert.alert-error\" \"css_element\" should exist in the \"Required Menu\" \"table_row\"",
          "138:     And \".alert.alert-error\" \"css_element\" should exist in the \"Required Number\" \"table_row\"",
          "139:     And \".alert.alert-error\" \"css_element\" should exist in the \"Required Radio\" \"table_row\"",
          "140:     And \".alert.alert-error\" \"css_element\" should exist in the \"Required Text input\" \"table_row\"",
          "141:     And \".alert.alert-error\" \"css_element\" should exist in the \"Required Text area\" \"table_row\"",
          "142:     And \".alert.alert-error\" \"css_element\" should exist in the \"Required URL\" \"table_row\"",
          "143:     And \".alert.alert-error\" \"css_element\" should exist in the \"Required Multimenu\" \"table_row\"",
          "144:     And \".alert.alert-error\" \"css_element\" should exist in the \"Required Two-Option Multimenu\" \"table_row\"",
          "145:     And \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Checkbox\" \"table_row\"",
          "146:     And \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Latlong\" \"table_row\"",
          "147:     And \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Menu\" \"table_row\"",
          "148:     And \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Number\" \"table_row\"",
          "149:     And \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Radio\" \"table_row\"",
          "150:     And \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Text input\" \"table_row\"",
          "151:     And \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Text area\" \"table_row\"",
          "152:     And \".alert.alert-error\" \"css_element\" should not exist in the \"Not required URL\" \"table_row\"",
          "153:     And \".alert.alert-error\" \"css_element\" should not exist in the \"Not required Multimenu\" \"table_row\"",
          "157:   Scenario: Students recieve no error for filled in required fields",
          "158:     When I log in as \"student1\"",
          "159:     And I follow \"Course 1\"",
          "160:     And I add an entry to \"Test database name\" database with:",
          "161:        | Base Text input               | Some input to allow us to submit the otherwise empty form |",
          "162:        | Required Checkbox Option 1    | 1                                                         |",
          "163:        | RTOC Option 1                 | 1                                                         |",
          "164:        | Latitude                      | 0                                                         |",
          "165:        | Longitude                     | 0                                                         |",
          "166:        | Required Menu                 | 1                                                         |",
          "167:        | Required Number               | 1                                                         |",
          "168:        | Required Radio Option 1       | 1                                                         |",
          "169:        | Required Text input           | New entry text                                            |",
          "170:        | Required Text area            | More text                                                 |",
          "171:        | Required URL                  | http://example.com/                                       |",
          "172:        | Required Multimenu            | 1                                                         |",
          "173:        | Required Two-Option Multimenu | 1                                                         |",
          "174:     And I press \"Save and view\"",
          "175:     And I follow \"View list\"",
          "176:     Then I should not see \"No entries in database\"",
          "177:     And I should see \"New entry text\"",
          "179:   Scenario: Fields refill with data after having an error",
          "180:     When I log in as \"student1\"",
          "181:     And I follow \"Course 1\"",
          "182:     And I add an entry to \"Test database name\" database with:",
          "183:        | RTOC Option 1                 | 1                   |",
          "184:        | Latitude                      | 0                   |",
          "185:        | Longitude                     | 0                   |",
          "186:        | Required Menu                 | 1                   |",
          "187:        | Required Number               | 1                   |",
          "188:        | Required Radio Option 1       | 1                   |",
          "189:        | Required Text input           | New entry text      |",
          "190:        | Required Text area            | More text           |",
          "191:        | Required URL                  | http://example.com/ |",
          "192:        | Required Multimenu            | 1                   |",
          "193:        | Required Two-Option Multimenu | 1                   |",
          "194:     And I press \"Save and view\"",
          "195:     Then the following fields match these values:",
          "196:        | Base Text input               |                     |",
          "197:        | Latitude                      | 0                   |",
          "198:        | Longitude                     | 0                   |",
          "199:        | Required Menu                 | Option 1            |",
          "200:        | Required Number               | 1                   |",
          "201:        | Required Radio Option 1       | 1                   |",
          "202:        | Required Text input           | New entry text      |",
          "203:        | Required Text area            | More text           |",
          "204:        | Required URL                  | http://example.com/ |",
          "205:        | Required Multimenu            | Option 1            |",
          "206:        | Required Two-Option Multimenu | Option 1            |",
          "",
          "---------------"
        ],
        "mod/data/tests/behat/view_entries.feature||mod/data/tests/behat/view_entries.feature": [
          "File: mod/data/tests/behat/view_entries.feature -> mod/data/tests/behat/view_entries.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     # To generate the default templates.",
          "28:     And I follow \"Templates\"",
          "29:     And I add an entry to \"Test database name\" database with:",
          "31:     And I press \"Save and add another\"",
          "32:     And I add an entry to \"Test database name\" database with:",
          "34:     And I press \"Save and add another\"",
          "35:     And I add an entry to \"Test database name\" database with:",
          "37:     And I press \"Save and view\"",
          "38:     And I log out",
          "39:     When I log in as \"student1\"",
          "",
          "[Removed Lines]",
          "30:       | Test field description | Teacher entry 1 |",
          "33:       | Test field description | Teacher entry 2 |",
          "36:       | Test field description | Teacher entry 3 |",
          "",
          "[Added Lines]",
          "30:       | Test field name | Teacher entry 1 |",
          "33:       | Test field name | Teacher entry 2 |",
          "36:       | Test field name | Teacher entry 3 |",
          "",
          "---------------"
        ],
        "mod/data/version.php||mod/data/version.php": [
          "File: mod/data/version.php -> mod/data/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014110400;       // Requires this Moodle version",
          "29: $plugin->component = 'mod_data';       // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2014111001;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2015022600;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "398be7c897f37ea87eef4664cdc1e984f5250dbd",
      "candidate_info": {
        "commit_hash": "398be7c897f37ea87eef4664cdc1e984f5250dbd",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/398be7c897f37ea87eef4664cdc1e984f5250dbd",
        "files": [
          "mod/data/edit.php",
          "mod/data/export_form.php",
          "mod/data/field/checkbox/field.class.php",
          "mod/data/field/file/field.class.php",
          "mod/data/field/latlong/field.class.php",
          "mod/data/field/multimenu/field.class.php",
          "mod/data/field/number/field.class.php",
          "mod/data/field/picture/field.class.php",
          "mod/data/field/text/field.class.php",
          "mod/data/field/textarea/field.class.php",
          "mod/data/field/url/field.class.php",
          "mod/data/lib.php",
          "mod/data/renderer.php",
          "mod/data/templates.php"
        ],
        "message": "MDL-56725 mod_data: coding style\n\nFixes from lines in the previous commit.",
        "before_after_code_files": [
          "mod/data/edit.php||mod/data/edit.php",
          "mod/data/export_form.php||mod/data/export_form.php",
          "mod/data/field/checkbox/field.class.php||mod/data/field/checkbox/field.class.php",
          "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
          "mod/data/field/latlong/field.class.php||mod/data/field/latlong/field.class.php",
          "mod/data/field/multimenu/field.class.php||mod/data/field/multimenu/field.class.php",
          "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
          "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
          "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
          "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
          "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
          "mod/data/lib.php||mod/data/lib.php",
          "mod/data/renderer.php||mod/data/renderer.php",
          "mod/data/templates.php||mod/data/templates.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
            "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
            "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
            "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
            "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
            "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
            "mod/data/lib.php||mod/data/lib.php"
          ],
          "candidate": [
            "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
            "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
            "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
            "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
            "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
            "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
            "mod/data/lib.php||mod/data/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/data/edit.php||mod/data/edit.php": [
          "File: mod/data/edit.php -> mod/data/edit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "352: }",
          "353: echo $newtext;",
          "356: if ($rid) {",
          "358: } else {",
          "361:     }",
          "362: }",
          "363: echo '</div>';",
          "",
          "[Removed Lines]",
          "355: echo '<div class=\"mdl-align m-t-1\"><input type=\"submit\" class=\"btn btn-primary\" name=\"saveandview\" value=\"'.get_string('saveandview','data').'\" />';",
          "357:     echo '&nbsp;<input type=\"submit\" class=\"btn btn-primary\" name=\"cancel\" value=\"'.get_string('cancel').'\" onclick=\"javascript:history.go(-1)\" />';",
          "359:     if ((!$data->maxentries) || has_capability('mod/data:manageentries', $context) || (data_numentries($data) < ($data->maxentries - 1))) {",
          "360:         echo '&nbsp;<input type=\"submit\" class=\"btn btn-primary\" name=\"saveandadd\" value=\"' . get_string('saveandadd', 'data') . '\" />';",
          "",
          "[Added Lines]",
          "355: echo '<div class=\"mdl-align m-t-1\"><input type=\"submit\" class=\"btn btn-primary\" name=\"saveandview\" ' .",
          "356:      'value=\"' . get_string('saveandview', 'data') . '\" />';",
          "358:     echo '&nbsp;<input type=\"submit\" class=\"btn btn-primary\" name=\"cancel\" ' .",
          "359:          'value=\"' . get_string('cancel') . '\" onclick=\"javascript:history.go(-1)\" />';",
          "361:     if ((!$data->maxentries) ||",
          "362:             has_capability('mod/data:manageentries', $context) ||",
          "363:             (data_numentries($data) < ($data->maxentries - 1))) {",
          "364:         echo '&nbsp;<input type=\"submit\" class=\"btn btn-primary\" name=\"saveandadd\" ' .",
          "365:              'value=\"' . get_string('saveandadd', 'data') . '\" />';",
          "",
          "---------------"
        ],
        "mod/data/export_form.php||mod/data/export_form.php": [
          "File: mod/data/export_form.php -> mod/data/export_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:             unset($choices[$key]);",
          "42:         }",
          "43:         $typesarray = array();",
          "45:         $typesarray[] = $mform->createElement('select', 'delimiter_name', null, $choices);",
          "",
          "[Removed Lines]",
          "44:         $typesarray[] = $mform->createElement('radio', 'exporttype', null, get_string('csvwithselecteddelimiter', 'data') . '&nbsp;', 'csv');",
          "",
          "[Added Lines]",
          "44:         $str = get_string('csvwithselecteddelimiter', 'data');",
          "45:         $typesarray[] = $mform->createElement('radio', 'exporttype', null, $str . '&nbsp;', 'csv');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:         $mform->addElement('header', 'notice', get_string('chooseexportfields', 'data'));",
          "60:         foreach($this->_datafields as $field) {",
          "61:             if($field->text_export_supported()) {",
          "64:             } else {",
          "65:                 $a = new stdClass();",
          "66:                 $a->fieldtype = $field->name();",
          "68:             }",
          "69:         }",
          "70:         $this->add_checkbox_controller(1, null, null, 1);",
          "",
          "[Removed Lines]",
          "62:                 $mform->addElement('advcheckbox', 'field_'.$field->field->id, '<div title=\"' . s($field->field->description) . '\" class=\"d-inline-block\">' . $field->field->name . '</div>', ' (' . $field->name() . ')', array('group'=>1));",
          "63:                 $mform->setDefault('field_'.$field->field->id, 1);",
          "67:                 $mform->addElement('static', 'unsupported'.$field->field->id, $field->field->name, get_string('unsupportedexport', 'data', $a));",
          "",
          "[Added Lines]",
          "63:                 $html = '<div title=\"' . s($field->field->description) . '\" ' .",
          "64:                         'class=\"d-inline-block\">' . $field->field->name . '</div>';",
          "65:                 $name = ' (' . $field->name() . ')';",
          "66:                 $mform->addElement('advcheckbox', 'field_' . $field->field->id, $html, $name, array('group' => 1));",
          "67:                 $mform->setDefault('field_' . $field->field->id, 1);",
          "71:                 $str = get_string('unsupportedexport', 'data', $a);",
          "72:                 $mform->addElement('static', 'unsupported' . $field->field->id, $field->field->name, $str);",
          "",
          "---------------"
        ],
        "mod/data/field/checkbox/field.class.php||mod/data/field/checkbox/field.class.php": [
          "File: mod/data/field/checkbox/field.class.php -> mod/data/field/checkbox/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:         $str = '';",
          "97:         $found = false;",
          "98:         foreach (explode(\"\\n\",$this->field->param1) as $checkbox) {",
          "99:             $checkbox = trim($checkbox);",
          "101:             if (in_array($checkbox, $content)) {",
          "103:             } else {",
          "105:             }",
          "106:             $str .= html_writer::empty_tag('br');",
          "107:             $found = true;",
          "",
          "[Removed Lines]",
          "102:                 $str .= html_writer::checkbox('f_'.$this->field->id.'[]', s($checkbox), true, $checkbox, array('class' => 'm-r-1'));",
          "104:                 $str .= html_writer::checkbox('f_'.$this->field->id.'[]', s($checkbox), false, $checkbox, array('class' => 'm-r-1'));",
          "",
          "[Added Lines]",
          "98:         $marginclass = ['class' => 'm-r-1'];",
          "102:                 $str .= html_writer::checkbox('f_'.$this->field->id.'[]', s($checkbox), true, $checkbox, $marginclass);",
          "104:                 $str .= html_writer::checkbox('f_'.$this->field->id.'[]', s($checkbox), false, $checkbox, $marginclass);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110:             return '';",
          "111:         }",
          "114:         return $str;",
          "115:     }",
          "",
          "[Removed Lines]",
          "113:         $str .= html_writer::checkbox('f_'.$this->field->id.'_allreq', null, $allrequired, get_string('selectedrequired', 'data'), array('class' => 'm-r-1'));",
          "",
          "[Added Lines]",
          "113:         $requiredstr = get_string('selectedrequired', 'data');",
          "114:         $str .= html_writer::checkbox('f_'.$this->field->id.'_allreq', null, $allrequired, $requiredstr, $marginclass);",
          "",
          "---------------"
        ],
        "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php": [
          "File: mod/data/field/file/field.class.php -> mod/data/field/file/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:     function display_search_field($value = '') {",
          "106:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>' .",
          "108:     }",
          "110:     function generate_sql($tablealias, $value) {",
          "",
          "[Removed Lines]",
          "107:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" class=\"form-control\" />';",
          "",
          "[Added Lines]",
          "107:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" ' .",
          "108:                     'value=\"'.s($value).'\" class=\"form-control\"/>';",
          "",
          "---------------"
        ],
        "mod/data/field/latlong/field.class.php||mod/data/field/latlong/field.class.php": [
          "File: mod/data/field/latlong/field.class.php -> mod/data/field/latlong/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:         $str = '<div title=\"'.s($this->field->description).'\">';",
          "63:         $str .= '<fieldset><legend><span class=\"accesshide\">'.$this->field->name.'</span></legend>';",
          "64:         $str .= '<table class=\"form-inline\"><tr><td align=\"right\">';",
          "66:         if ($this->field->required) {",
          "67:             $str .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "68:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "69:         }",
          "71:         $str .= s($lat).'\" size=\"10\" />\u00b0N</td></tr>';",
          "73:         $str .= get_string('longitude', 'data');",
          "74:         if ($this->field->required) {",
          "75:             $str .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "76:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "77:         }",
          "79:         $str .= s($long).'\" size=\"10\" />\u00b0E</td>';",
          "80:         $str .= '</tr>';",
          "81:         $str .= '</table>';",
          "",
          "[Removed Lines]",
          "65:         $str .= '<label for=\"field_'.$this->field->id.'_0\" class=\"mod-data-input form-control-static\">' . get_string('latitude', 'data');",
          "70:         $str .= '</label></td><td><input class=\"form-control m-x-1\" type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"field_'.$this->field->id.'_0\" value=\"';",
          "72:         $str .= '<tr><td align=\"right\"><label for=\"field_'.$this->field->id.'_1\" class=\"mod-data-input form-control-static\">';",
          "78:         $str .= '</label></td><td><input class=\"form-control m-x-1\" type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"';",
          "",
          "[Added Lines]",
          "65:         $classes = 'mod-data-input form-control-static';",
          "66:         $str .= '<label for=\"field_'.$this->field->id.'_0\" class=\"' . $classes . '\">' . get_string('latitude', 'data');",
          "71:         $classes = 'form-control m-x-1';",
          "72:         $str .= '</label></td><td>';",
          "73:         $str .= '<input class=\"' . $classes . '\" type=\"text\" name=\"field_'.$this->field->id.'_0\" ';",
          "74:         $str .= ' id=\"field_'.$this->field->id.'_0\" value=\"';",
          "76:         $classes = 'mod-data-input form-control-static';",
          "77:         $str .= '<tr><td align=\"right\"><label for=\"field_'.$this->field->id.'_1\" class=\"' . $classes . '\">';",
          "83:         $classes = 'form-control m-x-1';",
          "84:         $str .= '</label></td><td><input class=\"' . $classes . '\" type=\"text\" ';",
          "85:         $str .= 'name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "103:         }",
          "104:         $latlongsrs->close();",
          "108:        return $return;",
          "109:     }",
          "",
          "[Removed Lines]",
          "106:         $return = html_writer::label(get_string('latlong', 'data'), 'menuf_'.$this->field->id, false, array('class' => 'accesshide'));",
          "107:         $return .= html_writer::select($options, 'f_'.$this->field->id, $value, null, array('class' => 'custom-select'));",
          "",
          "[Added Lines]",
          "113:         $classes = array('class' => 'accesshide');",
          "114:         $return = html_writer::label(get_string('latlong', 'data'), 'menuf_'.$this->field->id, false, $classes);",
          "115:         $classes = array('class' => 'custom-select');",
          "116:         $return .= html_writer::select($options, 'f_'.$this->field->id, $value, null, $classes);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "185:                 }",
          "189:                 $str .= '</form>';",
          "190:             } else {",
          "191:                 $str = \"$compasslat, $compasslong\";",
          "",
          "[Removed Lines]",
          "188:                 $str .= \"\\n</select><input type='button' class='btn m-l-1 btn-secondary' value='\" . get_string('go') . \"' onclick='if(previousSibling.value){self.location=previousSibling.value}'/>\";",
          "",
          "[Added Lines]",
          "197:                 $str .= '\\n</select><input type=\"button\" class=\"btn m-l-1 btn-secondary\" value=\"' . get_string('go');",
          "198:                 $str .= '\" onclick=\"if(previousSibling.value){self.location=previousSibling.value}\"/>';",
          "",
          "---------------"
        ],
        "mod/data/field/multimenu/field.class.php||mod/data/field/multimenu/field.class.php": [
          "File: mod/data/field/multimenu/field.class.php -> mod/data/field/multimenu/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:         $str .= '</select>';",
          "145:         return $str;",
          "",
          "[Removed Lines]",
          "143:         $str .= html_writer::checkbox('f_'.$this->field->id.'_allreq', null, $allrequired, get_string('selectedrequired', 'data'), array('class' => 'm-r-1'));",
          "",
          "[Added Lines]",
          "143:         $str .= html_writer::checkbox('f_'.$this->field->id.'_allreq', null, $allrequired,",
          "144:             get_string('selectedrequired', 'data'), array('class' => 'm-r-1'));",
          "",
          "---------------"
        ],
        "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php": [
          "File: mod/data/field/number/field.class.php -> mod/data/field/number/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:     function display_search_field($value = '') {",
          "73:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "75:     }",
          "77:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "74:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" class=\"form-control d-inline\"/>';",
          "",
          "[Added Lines]",
          "74:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" ' .",
          "75:                'value=\"'.s($value).'\" class=\"form-control d-inline\"/>';",
          "",
          "---------------"
        ],
        "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php": [
          "File: mod/data/field/picture/field.class.php -> mod/data/field/picture/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:         $str .= $output->render($fm);",
          "111:         $str .= '<div class=\"mdl-left\">';",
          "115:         $str .= '</div>';",
          "116:         $str .= '</div>';",
          "",
          "[Removed Lines]",
          "112:         $str .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.s($itemid).'\" />';",
          "113:         $str .= '<label for=\"field_'.$this->field->id.'_alttext\">'.get_string('alttext','data') .'</label>&nbsp;<input type=\"text\" class=\"form-control\" name=\"field_'",
          "114:                 .$this->field->id.'_alttext\" id=\"field_'.$this->field->id.'_alttext\" value=\"'.s($alttext).'\" />';",
          "",
          "[Added Lines]",
          "112:         $str .= '<input type=\"hidden\" name=\"field_' . $this->field->id . '_file\" value=\"' . s($itemid) . '\" />';",
          "113:         $str .= '<label for=\"field_' . $this->field->id . '_alttext\">' .",
          "114:                 get_string('alttext', 'data') .",
          "115:                 '</label>&nbsp;<input type=\"text\" class=\"form-control\" name=\"field_' .",
          "116:                 $this->field->id . '_alttext\" id=\"field_' . $this->field->id . '_alttext\" value=\"' . s($alttext) . '\" />';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "139:     }",
          "141:     function display_search_field($value = '') {",
          "144:     }",
          "146:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "142:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "143:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" class=\"form-control\"/>';",
          "",
          "[Added Lines]",
          "144:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . get_string('fieldname', 'data') . '</label>' .",
          "145:                '<input type=\"text\" size=\"16\" id=\"f_' . $this->field->id . '\" name=\"f_' . $this->field->id . '\" ' .",
          "146:                'value=\"' . s($value) . '\" class=\"form-control\"/>';",
          "",
          "---------------"
        ],
        "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php": [
          "File: mod/data/field/text/field.class.php -> mod/data/field/text/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     protected static $priority = self::MAX_PRIORITY;",
          "35:     function display_search_field($value = '') {",
          "37:     }",
          "39:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "36:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">'. $this->field->name.'</label>' . '<input type=\"text\" class=\"form-control\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "[Added Lines]",
          "36:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name.'</label>' .",
          "37:                '<input type=\"text\" class=\"form-control\" size=\"16\" id=\"f_' . $this->field->id . '\" ' .",
          "38:                'name=\"f_' . $this->field->id . '\" value=\"' . s($value) . '\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php": [
          "File: mod/data/field/textarea/field.class.php -> mod/data/field/textarea/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:     function display_search_field($value = '') {",
          "174:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>' .",
          "176:     }",
          "178:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "175:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" class=\"form-control\"/>';",
          "",
          "[Added Lines]",
          "175:                '<input type=\"text\" size=\"16\" id=\"f_' . $this->field->id . '\" name=\"f_' . $this->field->id . '\" ' .",
          "176:                'value=\"' . s($value) . '\" class=\"form-control\"/>';",
          "",
          "---------------"
        ],
        "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php": [
          "File: mod/data/field/url/field.class.php -> mod/data/field/url/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "87:             }",
          "88:             $str .= '</td><td>';",
          "89:             $str .= $label;",
          "95:             $str .= '</table>';",
          "96:         } else {",
          "",
          "[Removed Lines]",
          "90:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.s($url).'\" size=\"40\" class=\"form-control d-inline\"/>';",
          "91:             $str .= '<button class=\"btn btn-secondary m-l-1\" id=\"filepicker-button-'.$options->client_id.'\" style=\"display:none\">'.$straddlink.'</button></td></tr>';",
          "92:             $str .= '<tr><td align=\"right\"><span class=\"mod-data-input\">'.get_string('text', 'data').':</span></td><td>';",
          "93:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"'.s($text).'\"';",
          "94:             $str .= ' size=\"40\" class=\"form-control d-inline\"/></td></tr>';",
          "",
          "[Added Lines]",
          "90:             $str .= '<input type=\"text\" name=\"field_' . $this->field->id . '_0\" id=\"' . $fieldid . '\" value=\"' . s($url) . '\" ' .",
          "91:                     'size=\"40\" class=\"form-control d-inline\"/>';",
          "92:             $str .= '<button class=\"btn btn-secondary m-l-1\" id=\"filepicker-button-' . $options->client_id . '\" ' .",
          "93:                     'style=\"display:none\">' . $straddlink . '</button></td></tr>';",
          "94:             $str .= '<tr><td align=\"right\"><span class=\"mod-data-input\">' . get_string('text', 'data') . ':</span></td><td>';",
          "95:             $str .= '<input type=\"text\" name=\"field_' . $this->field->id . '_1\" id=\"field_' . $this->field->id . '_1\" ' .",
          "96:                     'value=\"' . s($text) . '\" size=\"40\" class=\"form-control d-inline\"/></td></tr>';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.s($url).'\"';",
          "100:             $str .= ' size=\"40\" class=\"mod-data-input form-control d-inline\" />';",
          "101:             if (count($options->repositories) > 0) {",
          "103:             }",
          "104:         }",
          "",
          "[Removed Lines]",
          "102:                 $str .= '<button id=\"filepicker-button-'.$options->client_id.'\" class=\"visibleifjs btn btn-secondary m-l-1\">'.$straddlink.'</button>';",
          "",
          "[Added Lines]",
          "104:                 $str .= '<button id=\"filepicker-button-' . $options->client_id . '\" class=\"visibleifjs btn btn-secondary m-l-1\">' .",
          "105:                         $straddlink . '</button>';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "113:     }",
          "115:     function display_search_field($value = '') {",
          "118:     }",
          "120:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "116:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "117:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" class=\"form-control d-inline\"/>';",
          "",
          "[Added Lines]",
          "119:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . get_string('fieldname', 'data') . '</label>' .",
          "120:                '<input type=\"text\" size=\"16\" id=\"f_' . $this->field->id . '\" '.",
          "121:                ' name=\"f_' . $this->field->id . '\" value=\"' . s($value) . '\" class=\"form-control d-inline\"/>';",
          "",
          "---------------"
        ],
        "mod/data/lib.php||mod/data/lib.php": [
          "File: mod/data/lib.php -> mod/data/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "309:             $str .= html_writer::div($image, 'inline-req');",
          "310:         }",
          "313:         $str .= '</div>';",
          "315:         return $str;",
          "",
          "[Removed Lines]",
          "311:         $str .= '</label><input class=\"basefieldinput form-control d-inline mod-data-input\" type=\"text\" name=\"field_'.$this->field->id.'\"';",
          "312:         $str .= ' id=\"field_' . $this->field->id . '\" value=\"'.s($content).'\" />';",
          "",
          "[Added Lines]",
          "311:         $str .= '</label><input class=\"basefieldinput form-control d-inline mod-data-input\" ' .",
          "312:                 'type=\"text\" name=\"field_' . $this->field->id . '\" ' .",
          "313:                 'id=\"field_' . $this->field->id . '\" value=\"' . s($content) . '\" />';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1663:     echo '<label for=\"pref_perpage\">'.get_string('pagesize','data').'</label> ';",
          "1664:     $pagesizes = array(2=>2,3=>3,4=>4,5=>5,6=>6,7=>7,8=>8,9=>9,10=>10,15=>15,",
          "1665:                        20=>20,30=>30,40=>40,50=>50,100=>100,200=>200,300=>300,400=>400,500=>500,1000=>1000);",
          "1668:     if ($advanced) {",
          "1669:         $regsearchclass = 'search_none';",
          "",
          "[Removed Lines]",
          "1666:     echo html_writer::select($pagesizes, 'perpage', $perpage, false, array('id'=>'pref_perpage', 'class' => 'custom-select'));",
          "",
          "[Added Lines]",
          "1667:     echo html_writer::select($pagesizes, 'perpage', $perpage, false, array('id' => 'pref_perpage', 'class' => 'custom-select'));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1673:         $advancedsearchclass = 'search_none';",
          "1674:     }",
          "1675:     echo '<div id=\"reg_search\" class=\"' . $regsearchclass . ' form-inline\" >&nbsp;&nbsp;&nbsp;';",
          "1677:     echo '&nbsp;&nbsp;&nbsp;<label for=\"pref_sortby\">'.get_string('sortby').'</label> ';",
          "1679:     echo '<select name=\"sort\" id=\"pref_sortby\" class=\"custom-select m-r-1\">';",
          "",
          "[Removed Lines]",
          "1676:     echo '<label for=\"pref_search\">'.get_string('search').'</label> <input type=\"text\" class=\"form-control\" size=\"16\" name=\"search\" id= \"pref_search\" value=\"'.s($search).'\" /></div>';",
          "",
          "[Added Lines]",
          "1677:     echo '<label for=\"pref_search\">' . get_string('search') . '</label> <input type=\"text\" ' .",
          "1678:          'class=\"form-control\" size=\"16\" name=\"search\" id= \"pref_search\" value=\"' . s($search) . '\" /></div>';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1729:     $PAGE->requires->js('/mod/data/data.js');",
          "1730:     echo '&nbsp;<input type=\"hidden\" name=\"advanced\" value=\"0\" />';",
          "1731:     echo '&nbsp;<input type=\"hidden\" name=\"filter\" value=\"1\" />';",
          "1735:     echo '<br />';",
          "1736:     echo '<div class=\"' . $advancedsearchclass . '\" id=\"data_adv_form\">';",
          "",
          "[Removed Lines]",
          "1732:     echo '&nbsp;<input type=\"checkbox\" id=\"advancedcheckbox\" name=\"advanced\" value=\"1\" '.$checked.' onchange=\"showHideAdvSearch(this.checked);\" class=\"m-x-1\" /><label for=\"advancedcheckbox\">'.get_string('advancedsearch', 'data').'</label>';",
          "1733:     echo '&nbsp;<input type=\"submit\" class=\"btn btn-secondary\" value=\"'.get_string('savesettings','data').'\" />';",
          "",
          "[Added Lines]",
          "1734:     echo '&nbsp;<input type=\"checkbox\" id=\"advancedcheckbox\" name=\"advanced\" value=\"1\" ' . $checked . ' ' .",
          "1735:          'onchange=\"showHideAdvSearch(this.checked);\" class=\"m-x-1\" />' .",
          "1736:          '<label for=\"advancedcheckbox\">' . get_string('advancedsearch', 'data') . '</label>';",
          "1737:     echo '&nbsp;<input type=\"submit\" class=\"btn btn-secondary\" value=\"' . get_string('savesettings', 'data') . '\" />';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1781:     $fn = !empty($search_array[DATA_FIRSTNAME]->data) ? $search_array[DATA_FIRSTNAME]->data : '';",
          "1782:     $ln = !empty($search_array[DATA_LASTNAME]->data) ? $search_array[DATA_LASTNAME]->data : '';",
          "1783:     $patterns[]    = '/##firstname##/';",
          "1785:     $patterns[]    = '/##lastname##/';",
          "1789:     $newtext = preg_replace($patterns, $replacement, $data->asearchtemplate);",
          "",
          "[Removed Lines]",
          "1784:     $replacement[] = '<label class=\"accesshide\" for=\"u_fn\">'.get_string('authorfirstname', 'data').'</label><input type=\"text\" class=\"form-control\" size=\"16\" id=\"u_fn\" name=\"u_fn\" value=\"'.s($fn).'\" />';",
          "1786:     $replacement[] = '<label class=\"accesshide\" for=\"u_ln\">'.get_string('authorlastname', 'data').'</label><input type=\"text\" class=\"form-control\" size=\"16\" id=\"u_ln\" name=\"u_ln\" value=\"'.s($ln).'\" />';",
          "",
          "[Added Lines]",
          "1788:     $replacement[] = '<label class=\"accesshide\" for=\"u_fn\">' . get_string('authorfirstname', 'data') . '</label>' .",
          "1789:                      '<input type=\"text\" class=\"form-control\" size=\"16\" id=\"u_fn\" name=\"u_fn\" value=\"' . s($fn) . '\" />';",
          "1791:     $replacement[] = '<label class=\"accesshide\" for=\"u_ln\">' . get_string('authorlastname', 'data') . '</label>' .",
          "1792:                      '<input type=\"text\" class=\"form-control\" size=\"16\" id=\"u_ln\" name=\"u_ln\" value=\"' . s($ln) . '\" />';",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1795:     echo format_text($newtext, FORMAT_HTML, $options);",
          "1796:     echo '</td></tr>';",
          "1799:     echo '</table>';",
          "1800:     echo '</div>';",
          "1801:     echo '</div>';",
          "",
          "[Removed Lines]",
          "1798:     echo '<tr><td colspan=\"4\"><br/><input type=\"submit\" class=\"btn btn-primary m-r-1\" value=\"'.get_string('savesettings','data').'\" /><input type=\"submit\" class=\"btn btn-secondary\" name=\"resetadv\" value=\"'.get_string('resetsettings','data').'\" /></td></tr>';",
          "",
          "[Added Lines]",
          "1804:     echo '<tr><td colspan=\"4\"><br/>' .",
          "1805:          '<input type=\"submit\" class=\"btn btn-primary m-r-1\" value=\"' . get_string('savesettings', 'data') . '\" />' .",
          "1806:          '<input type=\"submit\" class=\"btn btn-secondary\" name=\"resetadv\" value=\"' . get_string('resetsettings', 'data') . '\" />' .",
          "1807:          '</td></tr>';",
          "",
          "---------------"
        ],
        "mod/data/renderer.php||mod/data/renderer.php": [
          "File: mod/data/renderer.php -> mod/data/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:             foreach ($newfields as $nid => $newfield) {",
          "41:                 $row = array();",
          "42:                 $row[0] = html_writer::tag('label', $newfield->name, array('for'=>'id_'.$newfield->name));",
          "45:                 $selected = false;",
          "46:                 foreach ($currentfields as $cid => $currentfield) {",
          "",
          "[Removed Lines]",
          "43:                 $row[1] = html_writer::start_tag('select', array('name'=>'field_'.$nid, 'id'=>'id_'.$newfield->name, 'class' => 'custom-select'));",
          "",
          "[Added Lines]",
          "43:                 $attrs = array('name' => 'field_' . $nid, 'id' => 'id_' . $newfield->name, 'class' => 'custom-select');",
          "44:                 $row[1] = html_writer::start_tag('select', $attrs);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:         }",
          "73:         $html .= html_writer::start_tag('div', array('class'=>'overwritesettings'));",
          "76:         $html .= html_writer::end_tag('div');",
          "79:         $html .= html_writer::end_tag('div');",
          "80:         $html .= html_writer::end_tag('form');",
          "",
          "[Removed Lines]",
          "74:         $html .= html_writer::tag('label', get_string('overwritesettings', 'data'), array('for'=>'overwritesettings'));",
          "75:         $html .= html_writer::empty_tag('input', array('type'=>'checkbox', 'name'=>'overwritesettings', 'id'=>'overwritesettings', 'class'=>'m-l-1'));",
          "77:         $html .= html_writer::empty_tag('input', array('type'=>'submit', 'class'=>'btn btn-primary', 'value'=>$strcontinue));",
          "",
          "[Added Lines]",
          "75:         $html .= html_writer::tag('label', get_string('overwritesettings', 'data'), array('for' => 'overwritesettings'));",
          "76:         $attrs = array('type' => 'checkbox', 'name' => 'overwritesettings', 'id' => 'overwritesettings', 'class' => 'm-l-1');",
          "77:         $html .= html_writer::empty_tag('input', $attrs);",
          "79:         $html .= html_writer::empty_tag('input', array('type' => 'submit', 'class' => 'btn btn-primary', 'value' => $strcontinue));",
          "",
          "---------------"
        ],
        "mod/data/templates.php||mod/data/templates.php": [
          "File: mod/data/templates.php -> mod/data/templates.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:     echo '</select>';",
          "302:     echo '</div>';",
          "304:     echo '<br /><br />';",
          "305:     if ($usehtmleditor) {",
          "306:         $switchlink = new moodle_url($PAGE->url, ['useeditor' => false]);",
          "",
          "[Removed Lines]",
          "303:     echo '<br /><br /><br /><br /><input type=\"submit\" class=\"btn btn-secondary\" name=\"defaultform\" value=\"'.get_string('resettemplate','data').'\" />';",
          "",
          "[Added Lines]",
          "303:     echo '<br /><br /><br /><br />';",
          "304:     echo '<input type=\"submit\" class=\"btn btn-secondary\" name=\"defaultform\" value=\"'.get_string('resettemplate', 'data').'\" />';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "315:             ]);",
          "316:     }",
          "317: } else {",
          "319: }",
          "320: echo '</td>';",
          "",
          "[Removed Lines]",
          "318:     echo '<br /><br /><br /><br /><input type=\"submit\" class=\"btn btn-primary\" name=\"defaultform\" value=\"'.get_string('resettemplate','data').'\" />';",
          "",
          "[Added Lines]",
          "319:     echo '<br /><br /><br /><br />';",
          "320:     echo '<input type=\"submit\" class=\"btn btn-primary\" name=\"defaultform\" value=\"' . get_string('resettemplate', 'data') . '\" />';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "329: $field = 'template';",
          "330: $editor->set_text($data->{$mode});",
          "331: $editor->use_editor($field, $options);",
          "333: echo '</td>';",
          "334: echo '</tr>';",
          "",
          "[Removed Lines]",
          "332: echo '<div><textarea class=\"form-control\" id=\"'.$field.'\" name=\"'.$field.'\" rows=\"15\" cols=\"80\">'.s($data->{$mode}).'</textarea></div>';",
          "",
          "[Added Lines]",
          "334: echo '<div>';",
          "335: echo '<textarea class=\"form-control\" id=\"' . $field . '\" ' .",
          "336:      'name=\"' . $field . '\" rows=\"15\" cols=\"80\">' . s($data->{$mode}) . '</textarea>';",
          "337: echo '</div>';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "342:     $field = 'listtemplatefooter';",
          "343:     $editor->set_text($data->listtemplatefooter);",
          "344:     $editor->use_editor($field, $options);",
          "346:     echo '</td>';",
          "347:     echo '</tr>';",
          "348: } else if ($mode == 'rsstemplate') {",
          "349:     echo '<tr>';",
          "350:     echo '<td>&nbsp;</td>';",
          "351:     echo '<td>';",
          "354:     $field = 'rsstitletemplate';",
          "355:     $editor->set_text($data->rsstitletemplate);",
          "356:     $editor->use_editor($field, $options);",
          "358:     echo '</td>';",
          "359:     echo '</tr>';",
          "360: }",
          "",
          "[Removed Lines]",
          "345:     echo '<div><textarea id=\"'.$field.'\" class=\"form-control\" name=\"'.$field.'\" rows=\"15\" cols=\"80\">'.s($data->listtemplatefooter).'</textarea></div>';",
          "352:     echo '<div class=\"template_heading\"><label for=\"edit-rsstitletemplate\">'.get_string('rsstitletemplate','data').'</label></div>';",
          "357:     echo '<div><textarea id=\"'.$field.'\" name=\"'.$field.'\" class=\"form-control\" rows=\"15\" cols=\"80\">'.s($data->rsstitletemplate).'</textarea></div>';",
          "",
          "[Added Lines]",
          "350:     echo '<div>';",
          "351:     echo '<textarea id=\"' . $field . '\" class=\"form-control\" ' .",
          "352:          'name=\"' . $field . '\" rows=\"15\" cols=\"80\">' . s($data->listtemplatefooter) . '</textarea>';",
          "353:     echo '</div>';",
          "360:     echo '<div class=\"template_heading\">';",
          "361:     echo '<label for=\"edit-rsstitletemplate\">' . get_string('rsstitletemplate', 'data') . '</label>';",
          "362:     echo '</div>';",
          "367:     echo '<div>';",
          "368:     echo '<textarea id=\"' . $field . '\" name=\"' . $field . '\" ' .",
          "369:          'class=\"form-control\" rows=\"15\" cols=\"80\">' . s($data->rsstitletemplate) . '</textarea>';",
          "370:     echo '</div>';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e85fda95c68891295edef9e05aad62f52e47b7aa",
      "candidate_info": {
        "commit_hash": "e85fda95c68891295edef9e05aad62f52e47b7aa",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/e85fda95c68891295edef9e05aad62f52e47b7aa",
        "files": [
          "mod/data/edit.php",
          "mod/data/export_form.php",
          "mod/data/field.php",
          "mod/data/field/checkbox/field.class.php",
          "mod/data/field/date/field.class.php",
          "mod/data/field/file/field.class.php",
          "mod/data/field/latlong/field.class.php",
          "mod/data/field/menu/field.class.php",
          "mod/data/field/multimenu/field.class.php",
          "mod/data/field/number/field.class.php",
          "mod/data/field/picture/field.class.php",
          "mod/data/field/radiobutton/field.class.php",
          "mod/data/field/text/field.class.php",
          "mod/data/field/textarea/field.class.php",
          "mod/data/field/url/field.class.php",
          "mod/data/lib.php",
          "mod/data/renderer.php",
          "mod/data/styles.css",
          "mod/data/templates.php",
          "mod/data/view.php"
        ],
        "message": "MDL-56725 mod_data: Style fixes for boost theme",
        "before_after_code_files": [
          "mod/data/edit.php||mod/data/edit.php",
          "mod/data/export_form.php||mod/data/export_form.php",
          "mod/data/field.php||mod/data/field.php",
          "mod/data/field/checkbox/field.class.php||mod/data/field/checkbox/field.class.php",
          "mod/data/field/date/field.class.php||mod/data/field/date/field.class.php",
          "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
          "mod/data/field/latlong/field.class.php||mod/data/field/latlong/field.class.php",
          "mod/data/field/menu/field.class.php||mod/data/field/menu/field.class.php",
          "mod/data/field/multimenu/field.class.php||mod/data/field/multimenu/field.class.php",
          "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
          "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
          "mod/data/field/radiobutton/field.class.php||mod/data/field/radiobutton/field.class.php",
          "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
          "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
          "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
          "mod/data/lib.php||mod/data/lib.php",
          "mod/data/renderer.php||mod/data/renderer.php",
          "mod/data/styles.css||mod/data/styles.css",
          "mod/data/templates.php||mod/data/templates.php",
          "mod/data/view.php||mod/data/view.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
            "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
            "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
            "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
            "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
            "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
            "mod/data/lib.php||mod/data/lib.php"
          ],
          "candidate": [
            "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
            "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
            "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
            "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
            "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
            "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
            "mod/data/lib.php||mod/data/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/data/edit.php||mod/data/edit.php": [
          "File: mod/data/edit.php -> mod/data/edit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "352: }",
          "353: echo $newtext;",
          "356: if ($rid) {",
          "358: } else {",
          "359:     if ((!$data->maxentries) || has_capability('mod/data:manageentries', $context) || (data_numentries($data) < ($data->maxentries - 1))) {",
          "361:     }",
          "362: }",
          "363: echo '</div>';",
          "",
          "[Removed Lines]",
          "355: echo '<div class=\"mdl-align\"><input type=\"submit\" name=\"saveandview\" value=\"'.get_string('saveandview','data').'\" />';",
          "357:     echo '&nbsp;<input type=\"submit\" name=\"cancel\" value=\"'.get_string('cancel').'\" onclick=\"javascript:history.go(-1)\" />';",
          "360:         echo '&nbsp;<input type=\"submit\" name=\"saveandadd\" value=\"' . get_string('saveandadd', 'data') . '\" />';",
          "",
          "[Added Lines]",
          "355: echo '<div class=\"mdl-align m-t-1\"><input type=\"submit\" class=\"btn btn-primary\" name=\"saveandview\" value=\"'.get_string('saveandview','data').'\" />';",
          "357:     echo '&nbsp;<input type=\"submit\" class=\"btn btn-primary\" name=\"cancel\" value=\"'.get_string('cancel').'\" onclick=\"javascript:history.go(-1)\" />';",
          "360:         echo '&nbsp;<input type=\"submit\" class=\"btn btn-primary\" name=\"saveandadd\" value=\"' . get_string('saveandadd', 'data') . '\" />';",
          "",
          "---------------"
        ],
        "mod/data/export_form.php||mod/data/export_form.php": [
          "File: mod/data/export_form.php -> mod/data/export_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:         $mform->addElement('header', 'notice', get_string('chooseexportfields', 'data'));",
          "60:         foreach($this->_datafields as $field) {",
          "61:             if($field->text_export_supported()) {",
          "63:                 $mform->setDefault('field_'.$field->field->id, 1);",
          "64:             } else {",
          "65:                 $a = new stdClass();",
          "",
          "[Removed Lines]",
          "62:                 $mform->addElement('advcheckbox', 'field_'.$field->field->id, '<div title=\"' . s($field->field->description) . '\">' . $field->field->name . '</div>', ' (' . $field->name() . ')', array('group'=>1));",
          "",
          "[Added Lines]",
          "62:                 $mform->addElement('advcheckbox', 'field_'.$field->field->id, '<div title=\"' . s($field->field->description) . '\" class=\"d-inline-block\">' . $field->field->name . '</div>', ' (' . $field->name() . ')', array('group'=>1));",
          "",
          "---------------"
        ],
        "mod/data/field.php||mod/data/field.php": [
          "File: mod/data/field.php -> mod/data/field.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "312:     echo '<div class=\"fieldadd\">';",
          "313:     $popupurl = $CFG->wwwroot.'/mod/data/field.php?d='.$data->id.'&mode=new&sesskey='.  sesskey();",
          "314:     echo $OUTPUT->single_select(new moodle_url($popupurl), 'newtype', $menufield, null, array('' => 'choosedots'),",
          "316:     echo '</div>';",
          "318:     echo '<div class=\"sortdefault\">';",
          "",
          "[Removed Lines]",
          "315:         'fieldform', array('label' => get_string('newfield', 'data') . $OUTPUT->help_icon('newfield', 'data')));",
          "",
          "[Added Lines]",
          "315:         'fieldform', array('label' => get_string('newfield', 'data')));",
          "316:     echo $OUTPUT->help_icon('newfield', 'data');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322:     echo '<input type=\"hidden\" name=\"mode\" value=\"sort\" />';",
          "323:     echo '<input type=\"hidden\" name=\"sesskey\" value=\"'.sesskey().'\" />';",
          "324:     echo '<label for=\"defaultsort\">'.get_string('defaultsortfield','data').'</label>';",
          "326:     if ($fields = $DB->get_records('data_fields', array('dataid'=>$data->id))) {",
          "327:         echo '<optgroup label=\"'.get_string('fields', 'data').'\">';",
          "328:         foreach ($fields as $field) {",
          "",
          "[Removed Lines]",
          "325:     echo '<select id=\"defaultsort\" name=\"defaultsort\">';",
          "",
          "[Added Lines]",
          "326:     echo '<select id=\"defaultsort\" name=\"defaultsort\" class=\"custom-select\">';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "357:     $options = array(0 => get_string('ascending', 'data'),",
          "358:                      1 => get_string('descending', 'data'));",
          "359:     echo html_writer::label(get_string('sortby'), 'menudefaultsortdir', false, array('class' => 'accesshide'));",
          "362:     echo '</div>';",
          "363:     echo '</form>';",
          "364:     echo '</div>';",
          "",
          "[Removed Lines]",
          "360:     echo html_writer::select($options, 'defaultsortdir', $data->defaultsortdir, false);",
          "361:     echo '<input type=\"submit\" value=\"'.get_string('save', 'data').'\" />';",
          "",
          "[Added Lines]",
          "361:     echo html_writer::select($options, 'defaultsortdir', $data->defaultsortdir, false, array('class' => 'custom-select'));",
          "362:     echo '<input type=\"submit\" class=\"btn btn-secondary m-l-1\" value=\"'.get_string('save', 'data').'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/checkbox/field.class.php||mod/data/field/checkbox/field.class.php": [
          "File: mod/data/field/checkbox/field.class.php -> mod/data/field/checkbox/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:             }",
          "68:             $str .= '<input type=\"hidden\" name=\"field_' . $this->field->id . '[]\" value=\"\" />';",
          "69:             $str .= '<input type=\"checkbox\" id=\"field_'.$this->field->id.'_'.$i.'\" name=\"field_' . $this->field->id . '[]\" ';",
          "72:             if (array_search($checkbox, $content) !== false) {",
          "73:                 $str .= 'checked />';",
          "",
          "[Removed Lines]",
          "70:             $str .= 'value=\"' . s($checkbox) . '\" class=\"mod-data-input\" ';",
          "",
          "[Added Lines]",
          "70:             $str .= 'value=\"' . s($checkbox) . '\" class=\"mod-data-input m-r-1\" ';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:             $checkbox = trim($checkbox);",
          "101:             if (in_array($checkbox, $content)) {",
          "103:             } else {",
          "105:             }",
          "106:             $str .= html_writer::empty_tag('br');",
          "107:             $found = true;",
          "",
          "[Removed Lines]",
          "102:                 $str .= html_writer::checkbox('f_'.$this->field->id.'[]', s($checkbox), true, $checkbox);",
          "104:                 $str .= html_writer::checkbox('f_'.$this->field->id.'[]', s($checkbox), false, $checkbox);",
          "",
          "[Added Lines]",
          "102:                 $str .= html_writer::checkbox('f_'.$this->field->id.'[]', s($checkbox), true, $checkbox, array('class' => 'm-r-1'));",
          "104:                 $str .= html_writer::checkbox('f_'.$this->field->id.'[]', s($checkbox), false, $checkbox, array('class' => 'm-r-1'));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "110:             return '';",
          "111:         }",
          "114:         return $str;",
          "115:     }",
          "",
          "[Removed Lines]",
          "113:         $str .= html_writer::checkbox('f_'.$this->field->id.'_allreq', null, $allrequired, get_string('selectedrequired', 'data'));",
          "",
          "[Added Lines]",
          "113:         $str .= html_writer::checkbox('f_'.$this->field->id.'_allreq', null, $allrequired, get_string('selectedrequired', 'data'), array('class' => 'm-r-1'));",
          "",
          "---------------"
        ],
        "mod/data/field/date/field.class.php||mod/data/field/date/field.class.php": [
          "File: mod/data/field/date/field.class.php -> mod/data/field/date/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:             $content = time();",
          "63:         }",
          "66:         $dayselector = html_writer::select_time('days', 'field_'.$this->field->id.'_day', $content);",
          "67:         $monthselector = html_writer::select_time('months', 'field_'.$this->field->id.'_month', $content);",
          "68:         $yearselector = html_writer::select_time('years', 'field_'.$this->field->id.'_year', $content);",
          "",
          "[Removed Lines]",
          "65:         $str = '<div title=\"'.s($this->field->description).'\" class=\"mod-data-input\">';",
          "",
          "[Added Lines]",
          "65:         $str = '<div title=\"'.s($this->field->description).'\" class=\"mod-data-input form-inline\">';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:            . html_writer::select_time('months', 'f_'.$this->field->id.'_m', $value['timestamp'])",
          "79:            . html_writer::select_time('years', 'f_'.$this->field->id.'_y', $value['timestamp']);",
          "80:         $datecheck = html_writer::checkbox('f_'.$this->field->id.'_z', 1, $value['usedate']);",
          "83:         return $str;",
          "84:     }",
          "",
          "[Removed Lines]",
          "81:         $str = $selectors . ' ' . $datecheck . ' ' . get_string('usedate', 'data');",
          "",
          "[Added Lines]",
          "81:         $str = '<div class=\"form-inline\">' . $selectors . ' ' . $datecheck . ' ' . get_string('usedate', 'data') . '</div>';",
          "",
          "---------------"
        ],
        "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php": [
          "File: mod/data/field/file/field.class.php -> mod/data/field/file/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:     function display_search_field($value = '') {",
          "106:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>' .",
          "108:     }",
          "110:     function generate_sql($tablealias, $value) {",
          "",
          "[Removed Lines]",
          "107:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "[Added Lines]",
          "107:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" class=\"form-control\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/latlong/field.class.php||mod/data/field/latlong/field.class.php": [
          "File: mod/data/field/latlong/field.class.php -> mod/data/field/latlong/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:         }",
          "62:         $str = '<div title=\"'.s($this->field->description).'\">';",
          "63:         $str .= '<fieldset><legend><span class=\"accesshide\">'.$this->field->name.'</span></legend>';",
          "66:         if ($this->field->required) {",
          "67:             $str .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "68:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "69:         }",
          "71:         $str .= s($lat).'\" size=\"10\" />\u00b0N</td></tr>';",
          "73:         $str .= get_string('longitude', 'data');",
          "74:         if ($this->field->required) {",
          "75:             $str .= html_writer::img($OUTPUT->pix_url('req'), get_string('requiredelement', 'form'),",
          "76:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "77:         }",
          "79:         $str .= s($long).'\" size=\"10\" />\u00b0E</td>';",
          "80:         $str .= '</tr>';",
          "81:         $str .= '</table>';",
          "",
          "[Removed Lines]",
          "64:         $str .= '<table><tr><td align=\"right\">';",
          "65:         $str .= '<label for=\"field_'.$this->field->id.'_0\" class=\"mod-data-input\">' . get_string('latitude', 'data');",
          "70:         $str .= '</label></td><td><input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"field_'.$this->field->id.'_0\" value=\"';",
          "72:         $str .= '<tr><td align=\"right\"><label for=\"field_'.$this->field->id.'_1\" class=\"mod-data-input\">';",
          "78:         $str .= '</label></td><td><input type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"';",
          "",
          "[Added Lines]",
          "64:         $str .= '<table class=\"form-inline\"><tr><td align=\"right\">';",
          "65:         $str .= '<label for=\"field_'.$this->field->id.'_0\" class=\"mod-data-input form-control-static\">' . get_string('latitude', 'data');",
          "70:         $str .= '</label></td><td><input class=\"form-control m-x-1\" type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"field_'.$this->field->id.'_0\" value=\"';",
          "72:         $str .= '<tr><td align=\"right\"><label for=\"field_'.$this->field->id.'_1\" class=\"mod-data-input form-control-static\">';",
          "78:         $str .= '</label></td><td><input class=\"form-control m-x-1\" type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104:         $latlongsrs->close();",
          "106:         $return = html_writer::label(get_string('latlong', 'data'), 'menuf_'.$this->field->id, false, array('class' => 'accesshide'));",
          "108:        return $return;",
          "109:     }",
          "",
          "[Removed Lines]",
          "107:         $return .= html_writer::select($options, 'f_'.$this->field->id, $value);",
          "",
          "[Added Lines]",
          "107:         $return .= html_writer::select($options, 'f_'.$this->field->id, $value, null, array('class' => 'custom-select'));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "176:                 $str = '<form id=\"latlongfieldbrowse\">';",
          "177:                 $str .= \"$compasslat, $compasslong\\n\";",
          "178:                 $str .= \"<label class='accesshide' for='jumpto'>\". get_string('jumpto') .\"</label>\";",
          "180:                 foreach($servicesshown as $servicename){",
          "182:                     $str .= \"\\n  <option value='\"",
          "",
          "[Removed Lines]",
          "179:                 $str .= \"<select id='jumpto' name='jumpto'>\";",
          "",
          "[Added Lines]",
          "179:                 $str .= '<select id=\"jumpto\" name=\"jumpto\" class=\"custom-select\">';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "185:                 }",
          "189:                 $str .= '</form>';",
          "190:             } else {",
          "191:                 $str = \"$compasslat, $compasslong\";",
          "",
          "[Removed Lines]",
          "188:                 $str .= \"\\n</select><input type='button' value='\" . get_string('go') . \"' onclick='if(previousSibling.value){self.location=previousSibling.value}'/>\";",
          "",
          "[Added Lines]",
          "188:                 $str .= \"\\n</select><input type='button' class='btn m-l-1 btn-secondary' value='\" . get_string('go') . \"' onclick='if(previousSibling.value){self.location=previousSibling.value}'/>\";",
          "",
          "---------------"
        ],
        "mod/data/field/menu/field.class.php||mod/data/field/menu/field.class.php": [
          "File: mod/data/field/menu/field.class.php -> mod/data/field/menu/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         }",
          "65:         $str .= '</label>';",
          "66:         $str .= html_writer::select($options, 'field_'.$this->field->id, $content, array('' => get_string('menuchoose', 'data')),",
          "69:         $str .= '</div>';",
          "",
          "[Removed Lines]",
          "67:                                     array('id' => 'field_'.$this->field->id, 'class' => 'mod-data-input'));",
          "",
          "[Added Lines]",
          "67:                                     array('id' => 'field_'.$this->field->id, 'class' => 'mod-data-input custom-select'));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:         $return = html_writer::label(get_string('fieldtypelabel', \"datafield_\" . $this->type),",
          "107:             'menuf_' . $this->field->id, false, array('class' => 'accesshide'));",
          "109:         return $return;",
          "110:     }",
          "",
          "[Removed Lines]",
          "108:         $return .= html_writer::select($options, 'f_'.$this->field->id, $content);",
          "",
          "[Added Lines]",
          "108:         $return .= html_writer::select($options, 'f_'.$this->field->id, $content, array('class' => 'custom-select'));",
          "",
          "---------------"
        ],
        "mod/data/field/multimenu/field.class.php||mod/data/field/multimenu/field.class.php": [
          "File: mod/data/field/multimenu/field.class.php -> mod/data/field/multimenu/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:         }",
          "63:         $str .= '</label>';",
          "64:         $str .= '<select name=\"field_' . $this->field->id . '[]\" id=\"field_' . $this->field->id . '\"';",
          "67:         foreach (explode(\"\\n\", $this->field->param1) as $option) {",
          "68:             $option = trim($option);",
          "",
          "[Removed Lines]",
          "65:         $str .= ' multiple=\"multiple\" class=\"mod-data-input\">';",
          "",
          "[Added Lines]",
          "65:         $str .= ' multiple=\"multiple\" class=\"mod-data-input form-control\">';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:         static $c = 0;",
          "98:         $str = '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>';",
          "102:         $varcharcontent =  $DB->sql_compare_text('content', 255);",
          "",
          "[Removed Lines]",
          "99:         $str .= '<select id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'[]\" multiple=\"multiple\">';",
          "",
          "[Added Lines]",
          "99:         $str .= '<select id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'[]\" multiple=\"multiple\" class=\"form-control\">';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:         $str .= '</select>';",
          "145:         return $str;",
          "",
          "[Removed Lines]",
          "143:         $str .= html_writer::checkbox('f_'.$this->field->id.'_allreq', null, $allrequired, get_string('selectedrequired', 'data'));",
          "",
          "[Added Lines]",
          "143:         $str .= html_writer::checkbox('f_'.$this->field->id.'_allreq', null, $allrequired, get_string('selectedrequired', 'data'), array('class' => 'm-r-1'));",
          "",
          "---------------"
        ],
        "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php": [
          "File: mod/data/field/number/field.class.php -> mod/data/field/number/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:     function display_search_field($value = '') {",
          "73:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "75:     }",
          "77:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "74:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "[Added Lines]",
          "74:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" class=\"form-control d-inline\"/>';",
          "",
          "---------------"
        ],
        "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php": [
          "File: mod/data/field/picture/field.class.php -> mod/data/field/picture/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:         $str .= '<div class=\"mdl-left\">';",
          "112:         $str .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.s($itemid).'\" />';",
          "114:                 .$this->field->id.'_alttext\" id=\"field_'.$this->field->id.'_alttext\" value=\"'.s($alttext).'\" />';",
          "115:         $str .= '</div>';",
          "116:         $str .= '</div>';",
          "",
          "[Removed Lines]",
          "113:         $str .= '<label for=\"field_'.$this->field->id.'_alttext\">'.get_string('alttext','data') .'</label>&nbsp;<input type=\"text\" name=\"field_'",
          "",
          "[Added Lines]",
          "113:         $str .= '<label for=\"field_'.$this->field->id.'_alttext\">'.get_string('alttext','data') .'</label>&nbsp;<input type=\"text\" class=\"form-control\" name=\"field_'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:     function display_search_field($value = '') {",
          "142:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "144:     }",
          "146:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "143:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "[Added Lines]",
          "143:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" class=\"form-control\"/>';",
          "",
          "---------------"
        ],
        "mod/data/field/radiobutton/field.class.php||mod/data/field/radiobutton/field.class.php": [
          "File: mod/data/field/radiobutton/field.class.php -> mod/data/field/radiobutton/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:                 continue; // skip empty lines",
          "70:             }",
          "71:             $str .= '<input type=\"radio\" id=\"field_'.$this->field->id.'_'.$i.'\" name=\"field_' . $this->field->id . '\" ';",
          "74:             if ($content == $radio) {",
          "",
          "[Removed Lines]",
          "72:             $str .= 'value=\"' . s($radio) . '\" class=\"mod-data-input\" ';",
          "",
          "[Added Lines]",
          "72:             $str .= 'value=\"' . s($radio) . '\" class=\"mod-data-input m-r-1\" ';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104:         }",
          "105:         $return = html_writer::label(get_string('fieldtypelabel', \"datafield_\" . $this->type),",
          "106:             'menuf_' . $this->field->id, false, array('class' => 'accesshide'));",
          "108:         return $return;",
          "109:     }",
          "",
          "[Removed Lines]",
          "107:         $return .= html_writer::select($options, 'f_'.$this->field->id, $value);",
          "",
          "[Added Lines]",
          "107:         $return .= html_writer::select($options, 'f_'.$this->field->id, $value, null, array('class' => 'custom-select'));",
          "",
          "---------------"
        ],
        "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php": [
          "File: mod/data/field/text/field.class.php -> mod/data/field/text/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     protected static $priority = self::MAX_PRIORITY;",
          "35:     function display_search_field($value = '') {",
          "37:     }",
          "39:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "36:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">'. $this->field->name.'</label>' . '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "[Added Lines]",
          "36:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">'. $this->field->name.'</label>' . '<input type=\"text\" class=\"form-control\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php": [
          "File: mod/data/field/textarea/field.class.php -> mod/data/field/textarea/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:     function display_search_field($value = '') {",
          "174:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>' .",
          "176:     }",
          "178:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "175:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "[Added Lines]",
          "175:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" class=\"form-control\"/>';",
          "",
          "---------------"
        ],
        "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php": [
          "File: mod/data/field/url/field.class.php -> mod/data/field/url/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:         $autolinkable = !empty($this->field->param1) and empty($this->field->param2);",
          "70:         $label = '<label for=\"' . $fieldid . '\"><span class=\"accesshide\">' . $this->field->name . '</span>';",
          "71:         if ($this->field->required) {",
          "",
          "[Removed Lines]",
          "68:         $str = '<div title=\"' . s($this->field->description) . '\">';",
          "",
          "[Added Lines]",
          "68:         $str = '<div title=\"' . s($this->field->description) . '\" class=\"form-inline\">';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:             }",
          "88:             $str .= '</td><td>';",
          "89:             $str .= $label;",
          "92:             $str .= '<tr><td align=\"right\"><span class=\"mod-data-input\">'.get_string('text', 'data').':</span></td><td>';",
          "93:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"'.s($text).'\"';",
          "95:             $str .= '</table>';",
          "96:         } else {",
          "98:             $str .= $label;",
          "99:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.s($url).'\"';",
          "101:             if (count($options->repositories) > 0) {",
          "103:             }",
          "104:         }",
          "",
          "[Removed Lines]",
          "90:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.s($url).'\" size=\"60\" />';",
          "91:             $str .= '<button id=\"filepicker-button-'.$options->client_id.'\" style=\"display:none\">'.$straddlink.'</button></td></tr>';",
          "94:             $str .= ' size=\"60\" /></td></tr>';",
          "100:             $str .= ' size=\"60\" class=\"mod-data-input\" />';",
          "102:                 $str .= '<button id=\"filepicker-button-'.$options->client_id.'\" class=\"visibleifjs\">'.$straddlink.'</button>';",
          "",
          "[Added Lines]",
          "90:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.s($url).'\" size=\"40\" class=\"form-control d-inline\"/>';",
          "91:             $str .= '<button class=\"btn btn-secondary m-l-1\" id=\"filepicker-button-'.$options->client_id.'\" style=\"display:none\">'.$straddlink.'</button></td></tr>';",
          "94:             $str .= ' size=\"40\" class=\"form-control d-inline\"/></td></tr>';",
          "100:             $str .= ' size=\"40\" class=\"mod-data-input form-control d-inline\" />';",
          "102:                 $str .= '<button id=\"filepicker-button-'.$options->client_id.'\" class=\"visibleifjs btn btn-secondary m-l-1\">'.$straddlink.'</button>';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "115:     function display_search_field($value = '') {",
          "116:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "118:     }",
          "120:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "117:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "[Added Lines]",
          "117:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" class=\"form-control d-inline\"/>';",
          "",
          "---------------"
        ],
        "mod/data/lib.php||mod/data/lib.php": [
          "File: mod/data/lib.php -> mod/data/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:                                      array('class' => 'req', 'title' => get_string('requiredelement', 'form')));",
          "309:             $str .= html_writer::div($image, 'inline-req');",
          "310:         }",
          "312:         $str .= ' id=\"field_' . $this->field->id . '\" value=\"'.s($content).'\" />';",
          "313:         $str .= '</div>';",
          "",
          "[Removed Lines]",
          "311:         $str .= '</label><input class=\"basefieldinput mod-data-input\" type=\"text\" name=\"field_'.$this->field->id.'\"';",
          "",
          "[Added Lines]",
          "311:         $str .= '</label><input class=\"basefieldinput form-control d-inline mod-data-input\" type=\"text\" name=\"field_'.$this->field->id.'\"';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "349:         require_once($CFG->dirroot.'/mod/data/field/'.$this->type.'/mod.html');",
          "351:         echo '<div class=\"mdl-align\">';",
          "354:         echo '</div>';",
          "356:         echo '</form>';",
          "",
          "[Removed Lines]",
          "352:         echo '<input type=\"submit\" value=\"'.$savebutton.'\" />'.\"\\n\";",
          "353:         echo '<input type=\"submit\" name=\"cancel\" value=\"'.get_string('cancel').'\" />'.\"\\n\";",
          "",
          "[Added Lines]",
          "352:         echo '<input type=\"submit\" class=\"btn btn-primary\" value=\"'.$savebutton.'\" />'.\"\\n\";",
          "353:         echo '<input type=\"submit\" class=\"btn btn-secondary\" name=\"cancel\" value=\"'.get_string('cancel').'\" />'.\"\\n\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1663:     echo '<label for=\"pref_perpage\">'.get_string('pagesize','data').'</label> ';",
          "1664:     $pagesizes = array(2=>2,3=>3,4=>4,5=>5,6=>6,7=>7,8=>8,9=>9,10=>10,15=>15,",
          "1665:                        20=>20,30=>30,40=>40,50=>50,100=>100,200=>200,300=>300,400=>400,500=>500,1000=>1000);",
          "1668:     if ($advanced) {",
          "1669:         $regsearchclass = 'search_none';",
          "",
          "[Removed Lines]",
          "1666:     echo html_writer::select($pagesizes, 'perpage', $perpage, false, array('id'=>'pref_perpage'));",
          "",
          "[Added Lines]",
          "1666:     echo html_writer::select($pagesizes, 'perpage', $perpage, false, array('id'=>'pref_perpage', 'class' => 'custom-select'));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1672:         $regsearchclass = 'search_inline';",
          "1673:         $advancedsearchclass = 'search_none';",
          "1674:     }",
          "1677:     echo '&nbsp;&nbsp;&nbsp;<label for=\"pref_sortby\">'.get_string('sortby').'</label> ';",
          "1680:     if ($fields = $DB->get_records('data_fields', array('dataid'=>$data->id), 'name')) {",
          "1681:         echo '<optgroup label=\"'.get_string('fields', 'data').'\">';",
          "1682:         foreach ($fields as $field) {",
          "",
          "[Removed Lines]",
          "1675:     echo '<div id=\"reg_search\" class=\"' . $regsearchclass . '\" >&nbsp;&nbsp;&nbsp;';",
          "1676:     echo '<label for=\"pref_search\">'.get_string('search').'</label> <input type=\"text\" size=\"16\" name=\"search\" id= \"pref_search\" value=\"'.s($search).'\" /></div>';",
          "1679:     echo '<select name=\"sort\" id=\"pref_sortby\">';",
          "",
          "[Added Lines]",
          "1675:     echo '<div id=\"reg_search\" class=\"' . $regsearchclass . ' form-inline\" >&nbsp;&nbsp;&nbsp;';",
          "1676:     echo '<label for=\"pref_search\">'.get_string('search').'</label> <input type=\"text\" class=\"form-control\" size=\"16\" name=\"search\" id= \"pref_search\" value=\"'.s($search).'\" /></div>';",
          "1679:     echo '<select name=\"sort\" id=\"pref_sortby\" class=\"custom-select m-r-1\">';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1707:     echo '</optgroup>';",
          "1708:     echo '</select>';",
          "1709:     echo '<label for=\"pref_order\" class=\"accesshide\">'.get_string('order').'</label>';",
          "1711:     if ($order == 'ASC') {",
          "1712:         echo '<option value=\"ASC\" selected=\"selected\">'.get_string('ascending','data').'</option>';",
          "1713:     } else {",
          "",
          "[Removed Lines]",
          "1710:     echo '<select id=\"pref_order\" name=\"order\">';",
          "",
          "[Added Lines]",
          "1710:     echo '<select id=\"pref_order\" name=\"order\" class=\"custom-select m-r-1\">';",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1729:     $PAGE->requires->js('/mod/data/data.js');",
          "1730:     echo '&nbsp;<input type=\"hidden\" name=\"advanced\" value=\"0\" />';",
          "1731:     echo '&nbsp;<input type=\"hidden\" name=\"filter\" value=\"1\" />';",
          "1735:     echo '<br />';",
          "1736:     echo '<div class=\"' . $advancedsearchclass . '\" id=\"data_adv_form\">';",
          "",
          "[Removed Lines]",
          "1732:     echo '&nbsp;<input type=\"checkbox\" id=\"advancedcheckbox\" name=\"advanced\" value=\"1\" '.$checked.' onchange=\"showHideAdvSearch(this.checked);\" /><label for=\"advancedcheckbox\">'.get_string('advancedsearch', 'data').'</label>';",
          "1733:     echo '&nbsp;<input type=\"submit\" value=\"'.get_string('savesettings','data').'\" />';",
          "",
          "[Added Lines]",
          "1732:     echo '&nbsp;<input type=\"checkbox\" id=\"advancedcheckbox\" name=\"advanced\" value=\"1\" '.$checked.' onchange=\"showHideAdvSearch(this.checked);\" class=\"m-x-1\" /><label for=\"advancedcheckbox\">'.get_string('advancedsearch', 'data').'</label>';",
          "1733:     echo '&nbsp;<input type=\"submit\" class=\"btn btn-secondary\" value=\"'.get_string('savesettings','data').'\" />';",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1781:     $fn = !empty($search_array[DATA_FIRSTNAME]->data) ? $search_array[DATA_FIRSTNAME]->data : '';",
          "1782:     $ln = !empty($search_array[DATA_LASTNAME]->data) ? $search_array[DATA_LASTNAME]->data : '';",
          "1783:     $patterns[]    = '/##firstname##/';",
          "1785:     $patterns[]    = '/##lastname##/';",
          "1789:     $newtext = preg_replace($patterns, $replacement, $data->asearchtemplate);",
          "",
          "[Removed Lines]",
          "1784:     $replacement[] = '<label class=\"accesshide\" for=\"u_fn\">'.get_string('authorfirstname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_fn\" name=\"u_fn\" value=\"'.s($fn).'\" />';",
          "1786:     $replacement[] = '<label class=\"accesshide\" for=\"u_ln\">'.get_string('authorlastname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_ln\" name=\"u_ln\" value=\"'.s($ln).'\" />';",
          "",
          "[Added Lines]",
          "1784:     $replacement[] = '<label class=\"accesshide\" for=\"u_fn\">'.get_string('authorfirstname', 'data').'</label><input type=\"text\" class=\"form-control\" size=\"16\" id=\"u_fn\" name=\"u_fn\" value=\"'.s($fn).'\" />';",
          "1786:     $replacement[] = '<label class=\"accesshide\" for=\"u_ln\">'.get_string('authorlastname', 'data').'</label><input type=\"text\" class=\"form-control\" size=\"16\" id=\"u_ln\" name=\"u_ln\" value=\"'.s($ln).'\" />';",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1795:     echo format_text($newtext, FORMAT_HTML, $options);",
          "1796:     echo '</td></tr>';",
          "1799:     echo '</table>';",
          "1800:     echo '</div>';",
          "1801:     echo '</div>';",
          "",
          "[Removed Lines]",
          "1798:     echo '<tr><td colspan=\"4\"><br/><input type=\"submit\" value=\"'.get_string('savesettings','data').'\" /><input type=\"submit\" name=\"resetadv\" value=\"'.get_string('resetsettings','data').'\" /></td></tr>';",
          "",
          "[Added Lines]",
          "1798:     echo '<tr><td colspan=\"4\"><br/><input type=\"submit\" class=\"btn btn-primary m-r-1\" value=\"'.get_string('savesettings','data').'\" /><input type=\"submit\" class=\"btn btn-secondary\" name=\"resetadv\" value=\"'.get_string('resetsettings','data').'\" /></td></tr>';",
          "",
          "---------------"
        ],
        "mod/data/renderer.php||mod/data/renderer.php": [
          "File: mod/data/renderer.php -> mod/data/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:             foreach ($newfields as $nid => $newfield) {",
          "41:                 $row = array();",
          "42:                 $row[0] = html_writer::tag('label', $newfield->name, array('for'=>'id_'.$newfield->name));",
          "45:                 $selected = false;",
          "46:                 foreach ($currentfields as $cid => $currentfield) {",
          "",
          "[Removed Lines]",
          "43:                 $row[1] = html_writer::start_tag('select', array('name'=>'field_'.$nid, 'id'=>'id_'.$newfield->name));",
          "",
          "[Added Lines]",
          "43:                 $row[1] = html_writer::start_tag('select', array('name'=>'field_'.$nid, 'id'=>'id_'.$newfield->name, 'class' => 'custom-select'));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:         $html .= html_writer::start_tag('div', array('class'=>'overwritesettings'));",
          "74:         $html .= html_writer::tag('label', get_string('overwritesettings', 'data'), array('for'=>'overwritesettings'));",
          "76:         $html .= html_writer::end_tag('div');",
          "79:         $html .= html_writer::end_tag('div');",
          "80:         $html .= html_writer::end_tag('form');",
          "",
          "[Removed Lines]",
          "75:         $html .= html_writer::empty_tag('input', array('type'=>'checkbox', 'name'=>'overwritesettings', 'id'=>'overwritesettings'));",
          "77:         $html .= html_writer::empty_tag('input', array('type'=>'submit', 'class'=>'button', 'value'=>$strcontinue));",
          "",
          "[Added Lines]",
          "75:         $html .= html_writer::empty_tag('input', array('type'=>'checkbox', 'name'=>'overwritesettings', 'id'=>'overwritesettings', 'class'=>'m-l-1'));",
          "77:         $html .= html_writer::empty_tag('input', array('type'=>'submit', 'class'=>'btn btn-primary', 'value'=>$strcontinue));",
          "",
          "---------------"
        ],
        "mod/data/styles.css||mod/data/styles.css": [
          "File: mod/data/styles.css -> mod/data/styles.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: .path-mod-data-field .c0,",
          "10: #page-mod-data-view #sortsearch .c0 {",
          "11:     text-align: right;",
          "",
          "[Removed Lines]",
          "1: .path-mod-data .fieldadd,",
          "2: .path-mod-data .sortdefault,",
          "3: .path-mod-data .defaulttemplate,",
          "4: #page-mod-data-view .datapreferences,",
          "5: #page-mod-data-preset .presetmapping {",
          "6:     text-align: center;",
          "7: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/data/templates.php||mod/data/templates.php": [
          "File: mod/data/templates.php -> mod/data/templates.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:     echo '<br />';",
          "243:     echo '<div class=\"no-overflow\" id=\"availabletags_wrapper\">';",
          "246:     $fields = $DB->get_records('data_fields', array('dataid'=>$data->id));",
          "247:     echo '<optgroup label=\"'.get_string('fields', 'data').'\">';",
          "",
          "[Removed Lines]",
          "244:     echo '<select name=\"fields1[]\" id=\"availabletags\" size=\"12\" onclick=\"insert_field_tags(this)\">';",
          "",
          "[Added Lines]",
          "244:     echo '<select name=\"fields1[]\" id=\"availabletags\" size=\"12\" onclick=\"insert_field_tags(this)\" class=\"form-control\">';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "301:     echo '</select>';",
          "302:     echo '</div>';",
          "304:     echo '<br /><br />';",
          "305:     if ($usehtmleditor) {",
          "306:         $switchlink = new moodle_url($PAGE->url, ['useeditor' => false]);",
          "",
          "[Removed Lines]",
          "303:     echo '<br /><br /><br /><br /><input type=\"submit\" name=\"defaultform\" value=\"'.get_string('resettemplate','data').'\" />';",
          "",
          "[Added Lines]",
          "303:     echo '<br /><br /><br /><br /><input type=\"submit\" class=\"btn btn-secondary\" name=\"defaultform\" value=\"'.get_string('resettemplate','data').'\" />';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "315:             ]);",
          "316:     }",
          "317: } else {",
          "319: }",
          "320: echo '</td>';",
          "",
          "[Removed Lines]",
          "318:     echo '<br /><br /><br /><br /><input type=\"submit\" name=\"defaultform\" value=\"'.get_string('resettemplate','data').'\" />';",
          "",
          "[Added Lines]",
          "318:     echo '<br /><br /><br /><br /><input type=\"submit\" class=\"btn btn-primary\" name=\"defaultform\" value=\"'.get_string('resettemplate','data').'\" />';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "329: $field = 'template';",
          "330: $editor->set_text($data->{$mode});",
          "331: $editor->use_editor($field, $options);",
          "333: echo '</td>';",
          "334: echo '</tr>';",
          "",
          "[Removed Lines]",
          "332: echo '<div><textarea id=\"'.$field.'\" name=\"'.$field.'\" rows=\"15\" cols=\"80\">'.s($data->{$mode}).'</textarea></div>';",
          "",
          "[Added Lines]",
          "332: echo '<div><textarea class=\"form-control\" id=\"'.$field.'\" name=\"'.$field.'\" rows=\"15\" cols=\"80\">'.s($data->{$mode}).'</textarea></div>';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "342:     $field = 'listtemplatefooter';",
          "343:     $editor->set_text($data->listtemplatefooter);",
          "344:     $editor->use_editor($field, $options);",
          "346:     echo '</td>';",
          "347:     echo '</tr>';",
          "348: } else if ($mode == 'rsstemplate') {",
          "",
          "[Removed Lines]",
          "345:     echo '<div><textarea id=\"'.$field.'\" name=\"'.$field.'\" rows=\"15\" cols=\"80\">'.s($data->listtemplatefooter).'</textarea></div>';",
          "",
          "[Added Lines]",
          "345:     echo '<div><textarea id=\"'.$field.'\" class=\"form-control\" name=\"'.$field.'\" rows=\"15\" cols=\"80\">'.s($data->listtemplatefooter).'</textarea></div>';",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "354:     $field = 'rsstitletemplate';",
          "355:     $editor->set_text($data->rsstitletemplate);",
          "356:     $editor->use_editor($field, $options);",
          "358:     echo '</td>';",
          "359:     echo '</tr>';",
          "360: }",
          "362: echo '<tr><td class=\"save_template\" colspan=\"2\">';",
          "365: echo '</td></tr></table>';",
          "",
          "[Removed Lines]",
          "357:     echo '<div><textarea id=\"'.$field.'\" name=\"'.$field.'\" rows=\"15\" cols=\"80\">'.s($data->rsstitletemplate).'</textarea></div>';",
          "363: echo '<input type=\"submit\" value=\"'.get_string('savetemplate','data').'\" />&nbsp;';",
          "",
          "[Added Lines]",
          "357:     echo '<div><textarea id=\"'.$field.'\" name=\"'.$field.'\" class=\"form-control\" rows=\"15\" cols=\"80\">'.s($data->rsstitletemplate).'</textarea></div>';",
          "363: echo '<input type=\"submit\" class=\"btn btn-primary\" value=\"'.get_string('savetemplate','data').'\" />&nbsp;';",
          "",
          "---------------"
        ],
        "mod/data/view.php||mod/data/view.php": [
          "File: mod/data/view.php -> mod/data/view.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "824:                         'type' => 'button',",
          "825:                         'id' => 'checkall',",
          "826:                         'value' => get_string('selectall'),",
          "827:                     ));",
          "828:                 echo html_writer::empty_tag('input', array(",
          "829:                         'type' => 'button',",
          "830:                         'id' => 'checknone',",
          "831:                         'value' => get_string('deselectall'),",
          "832:                     ));",
          "833:                 echo html_writer::empty_tag('input', array(",
          "834:                         'class' => 'form-submit',",
          "835:                         'type' => 'submit',",
          "836:                         'value' => get_string('deleteselected'),",
          "837:                     ));",
          "839:                 $module = array('name' => 'mod_data', 'fullpath' => '/mod/data/module.js');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "827:                         'class' => 'btn btn-secondary m-r-1'",
          "833:                         'class' => 'btn btn-secondary m-r-1'",
          "839:                         'class' => 'btn btn-secondary m-r-1'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de60fc23aeeef5631d5718469124af3257383ead",
      "candidate_info": {
        "commit_hash": "de60fc23aeeef5631d5718469124af3257383ead",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/de60fc23aeeef5631d5718469124af3257383ead",
        "files": [
          "mod/data/field/file/field.class.php",
          "mod/data/field/number/field.class.php",
          "mod/data/field/picture/field.class.php",
          "mod/data/field/text/field.class.php",
          "mod/data/field/textarea/field.class.php",
          "mod/data/field/url/field.class.php",
          "mod/data/lib.php"
        ],
        "message": "MDL-52727 mod_data: Improve output of the form fields values\n\nThis issue mostly affects the search form fields. Submitted values for\nthese fields are typically obtained via optional_param() with\nPARAM_NOTAGS specified as the parameter type - see parse_search_field()\nmethods. Such values themselves are not safe enough to be printed back\ndirectly into the HTML as they might contain malicious code.\n\nWhile working on the patch, some other places with weak protection were\ndetected and fixed.\n\nIn case of the itemid parameters, explicit clean_param() is added to\nmake sure we cast the value as an integer. That should make the s()\nunnecessary but it was added anyway as an extra protection (just in case\nthe code flow changes or the parts of the code are re-used elsewhere).",
        "before_after_code_files": [
          "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
          "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
          "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
          "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
          "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
          "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
          "mod/data/lib.php||mod/data/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
            "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
            "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
            "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
            "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
            "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
            "mod/data/lib.php||mod/data/lib.php"
          ],
          "candidate": [
            "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
            "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
            "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
            "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
            "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
            "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
            "mod/data/lib.php||mod/data/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php": [
          "File: mod/data/field/file/field.class.php -> mod/data/field/file/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         if ($formdata) {",
          "40:             $fieldname = 'field_' . $this->field->id . '_file';",
          "42:         } else if ($recordid) {",
          "43:             if ($content = $DB->get_record('data_content', array('fieldid'=>$this->field->id, 'recordid'=>$recordid))) {",
          "",
          "[Removed Lines]",
          "41:             $itemid = $formdata->$fieldname;",
          "",
          "[Added Lines]",
          "41:             $itemid = clean_param($formdata->$fieldname, PARAM_INT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:         }",
          "84:         $options = new stdClass();",
          "85:         $options->maxbytes = $this->field->param3;",
          "",
          "[Removed Lines]",
          "82:         $html .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.$itemid.'\" />';",
          "",
          "[Added Lines]",
          "82:         $html .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.s($itemid).'\" />';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:     function display_search_field($value = '') {",
          "106:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>' .",
          "108:     }",
          "110:     function generate_sql($tablealias, $value) {",
          "",
          "[Removed Lines]",
          "107:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "107:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php": [
          "File: mod/data/field/number/field.class.php -> mod/data/field/number/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:     function display_search_field($value = '') {",
          "73:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "75:     }",
          "77:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "74:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "74:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php": [
          "File: mod/data/field/picture/field.class.php -> mod/data/field/picture/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:         if ($formdata) {",
          "41:             $fieldname = 'field_' . $this->field->id . '_file';",
          "43:             $fieldname = 'field_' . $this->field->id . '_alttext';",
          "44:             if (isset($formdata->$fieldname)) {",
          "45:                 $alttext = $formdata->$fieldname;",
          "",
          "[Removed Lines]",
          "42:             $itemid = $formdata->$fieldname;",
          "",
          "[Added Lines]",
          "42:             $itemid = clean_param($formdata->$fieldname, PARAM_INT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:         $str .= $output->render($fm);",
          "111:         $str .= '<div class=\"mdl-left\">';",
          "113:         $str .= '<label for=\"field_'.$this->field->id.'_alttext\">'.get_string('alttext','data') .'</label>&nbsp;<input type=\"text\" name=\"field_'",
          "114:                 .$this->field->id.'_alttext\" id=\"field_'.$this->field->id.'_alttext\" value=\"'.s($alttext).'\" />';",
          "115:         $str .= '</div>';",
          "",
          "[Removed Lines]",
          "112:         $str .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.$itemid.'\" />';",
          "",
          "[Added Lines]",
          "112:         $str .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.s($itemid).'\" />';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:     function display_search_field($value = '') {",
          "142:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "144:     }",
          "146:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "143:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "143:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php": [
          "File: mod/data/field/text/field.class.php -> mod/data/field/text/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     var $type = 'text';",
          "29:     function display_search_field($value = '') {",
          "31:     }",
          "33:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "30:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">'. $this->field->name.'</label>' . '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "30:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">'. $this->field->name.'</label>' . '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php": [
          "File: mod/data/field/textarea/field.class.php -> mod/data/field/textarea/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:             }",
          "80:             $fieldname = 'field_' . $this->field->id . '_itemid';",
          "81:             if (isset($formdata->$fieldname)) {",
          "83:             } else {",
          "84:                 $draftitemid = file_get_unused_draft_itemid();",
          "85:             }",
          "",
          "[Removed Lines]",
          "82:                 $draftitemid = $formdata->$fieldname;",
          "",
          "[Added Lines]",
          "82:                 $draftitemid = clean_param($formdata->$fieldname, PARAM_INT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "146:         }",
          "147:         $editor->set_text($text);",
          "148:         $editor->use_editor($field, $options, $fpoptions);",
          "150:         $str .= '<div class=\"mod-data-input\">';",
          "151:         $str .= '<div><textarea id=\"'.$field.'\" name=\"'.$field.'\" rows=\"'.$this->field->param3.'\" cols=\"'.$this->field->param2.'\" spellcheck=\"true\">'.s($text).'</textarea></div>';",
          "152:         $str .= '<div><label class=\"accesshide\" for=\"' . $field . '_content1\">' . get_string('format') . '</label>';",
          "",
          "[Removed Lines]",
          "149:         $str .= '<input type=\"hidden\" name=\"'.$field.'_itemid\" value=\"'.$draftitemid.'\" />';",
          "",
          "[Added Lines]",
          "149:         $str .= '<input type=\"hidden\" name=\"'.$field.'_itemid\" value=\"'.s($draftitemid).'\" />';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "167:     function display_search_field($value = '') {",
          "168:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>' .",
          "170:     }",
          "172:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "169:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "169:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php": [
          "File: mod/data/field/url/field.class.php -> mod/data/field/url/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:             }",
          "82:             $str .= '</td><td>';",
          "83:             $str .= $label;",
          "85:             $str .= '<button id=\"filepicker-button-'.$options->client_id.'\" style=\"display:none\">'.$straddlink.'</button></td></tr>';",
          "86:             $str .= '<tr><td align=\"right\"><span class=\"mod-data-input\">'.get_string('text', 'data').':</span></td><td>';",
          "87:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"'.s($text).'\"';",
          "",
          "[Removed Lines]",
          "84:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.$url.'\" size=\"60\" />';",
          "",
          "[Added Lines]",
          "84:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.s($url).'\" size=\"60\" />';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:     function display_search_field($value = '') {",
          "110:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "112:     }",
          "114:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "111:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "111:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/lib.php||mod/data/lib.php": [
          "File: mod/data/lib.php -> mod/data/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1736:     $fn = !empty($search_array[DATA_FIRSTNAME]->data) ? $search_array[DATA_FIRSTNAME]->data : '';",
          "1737:     $ln = !empty($search_array[DATA_LASTNAME]->data) ? $search_array[DATA_LASTNAME]->data : '';",
          "1738:     $patterns[]    = '/##firstname##/';",
          "1740:     $patterns[]    = '/##lastname##/';",
          "1744:     $newtext = preg_replace($patterns, $replacement, $data->asearchtemplate);",
          "",
          "[Removed Lines]",
          "1739:     $replacement[] = '<label class=\"accesshide\" for=\"u_fn\">'.get_string('authorfirstname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_fn\" name=\"u_fn\" value=\"'.$fn.'\" />';",
          "1741:     $replacement[] = '<label class=\"accesshide\" for=\"u_ln\">'.get_string('authorlastname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_ln\" name=\"u_ln\" value=\"'.$ln.'\" />';",
          "",
          "[Added Lines]",
          "1739:     $replacement[] = '<label class=\"accesshide\" for=\"u_fn\">'.get_string('authorfirstname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_fn\" name=\"u_fn\" value=\"'.s($fn).'\" />';",
          "1741:     $replacement[] = '<label class=\"accesshide\" for=\"u_ln\">'.get_string('authorlastname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_ln\" name=\"u_ln\" value=\"'.s($ln).'\" />';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ead2dd9c161fcfde04ee1fa602e9101a47c53503",
      "candidate_info": {
        "commit_hash": "ead2dd9c161fcfde04ee1fa602e9101a47c53503",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/ead2dd9c161fcfde04ee1fa602e9101a47c53503",
        "files": [
          "mod/data/field/file/field.class.php",
          "mod/data/field/number/field.class.php",
          "mod/data/field/picture/field.class.php",
          "mod/data/field/text/field.class.php",
          "mod/data/field/textarea/field.class.php",
          "mod/data/field/url/field.class.php",
          "mod/data/lib.php"
        ],
        "message": "MDL-52727 mod_data: Improve output of the form fields values\n\nThis issue mostly affects the search form fields. Submitted values for\nthese fields are typically obtained via optional_param() with\nPARAM_NOTAGS specified as the parameter type - see parse_search_field()\nmethods. Such values themselves are not safe enough to be printed back\ndirectly into the HTML as they might contain malicious code.\n\nWhile working on the patch, some other places with weak protection were\ndetected and fixed.\n\nIn case of the itemid parameters, explicit clean_param() is added to\nmake sure we cast the value as an integer. That should make the s()\nunnecessary but it was added anyway as an extra protection (just in case\nthe code flow changes or the parts of the code are re-used elsewhere).",
        "before_after_code_files": [
          "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
          "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
          "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
          "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
          "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
          "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
          "mod/data/lib.php||mod/data/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
            "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
            "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
            "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
            "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
            "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
            "mod/data/lib.php||mod/data/lib.php"
          ],
          "candidate": [
            "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php",
            "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php",
            "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php",
            "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php",
            "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php",
            "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php",
            "mod/data/lib.php||mod/data/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/data/field/file/field.class.php||mod/data/field/file/field.class.php": [
          "File: mod/data/field/file/field.class.php -> mod/data/field/file/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         if ($formdata) {",
          "40:             $fieldname = 'field_' . $this->field->id . '_file';",
          "42:         } else if ($recordid) {",
          "43:             if ($content = $DB->get_record('data_content', array('fieldid'=>$this->field->id, 'recordid'=>$recordid))) {",
          "",
          "[Removed Lines]",
          "41:             $itemid = $formdata->$fieldname;",
          "",
          "[Added Lines]",
          "41:             $itemid = clean_param($formdata->$fieldname, PARAM_INT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:         }",
          "84:         $options = new stdClass();",
          "85:         $options->maxbytes = $this->field->param3;",
          "",
          "[Removed Lines]",
          "82:         $html .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.$itemid.'\" />';",
          "",
          "[Added Lines]",
          "82:         $html .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.s($itemid).'\" />';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:     function display_search_field($value = '') {",
          "106:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>' .",
          "108:     }",
          "110:     function generate_sql($tablealias, $value) {",
          "",
          "[Removed Lines]",
          "107:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "107:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/number/field.class.php||mod/data/field/number/field.class.php": [
          "File: mod/data/field/number/field.class.php -> mod/data/field/number/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:     function display_search_field($value = '') {",
          "73:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "75:     }",
          "77:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "74:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "74:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/picture/field.class.php||mod/data/field/picture/field.class.php": [
          "File: mod/data/field/picture/field.class.php -> mod/data/field/picture/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:         if ($formdata) {",
          "41:             $fieldname = 'field_' . $this->field->id . '_file';",
          "43:             $fieldname = 'field_' . $this->field->id . '_alttext';",
          "44:             if (isset($formdata->$fieldname)) {",
          "45:                 $alttext = $formdata->$fieldname;",
          "",
          "[Removed Lines]",
          "42:             $itemid = $formdata->$fieldname;",
          "",
          "[Added Lines]",
          "42:             $itemid = clean_param($formdata->$fieldname, PARAM_INT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:         $str .= $output->render($fm);",
          "111:         $str .= '<div class=\"mdl-left\">';",
          "113:         $str .= '<label for=\"field_'.$this->field->id.'_alttext\">'.get_string('alttext','data') .'</label>&nbsp;<input type=\"text\" name=\"field_'",
          "114:                 .$this->field->id.'_alttext\" id=\"field_'.$this->field->id.'_alttext\" value=\"'.s($alttext).'\" />';",
          "115:         $str .= '</div>';",
          "",
          "[Removed Lines]",
          "112:         $str .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.$itemid.'\" />';",
          "",
          "[Added Lines]",
          "112:         $str .= '<input type=\"hidden\" name=\"field_'.$this->field->id.'_file\" value=\"'.s($itemid).'\" />';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:     function display_search_field($value = '') {",
          "142:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "144:     }",
          "146:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "143:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "143:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/text/field.class.php||mod/data/field/text/field.class.php": [
          "File: mod/data/field/text/field.class.php -> mod/data/field/text/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     var $type = 'text';",
          "29:     function display_search_field($value = '') {",
          "31:     }",
          "33:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "30:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">'. $this->field->name.'</label>' . '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "30:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">'. $this->field->name.'</label>' . '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/textarea/field.class.php||mod/data/field/textarea/field.class.php": [
          "File: mod/data/field/textarea/field.class.php -> mod/data/field/textarea/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:             }",
          "80:             $fieldname = 'field_' . $this->field->id . '_itemid';",
          "81:             if (isset($formdata->$fieldname)) {",
          "83:             } else {",
          "84:                 $draftitemid = file_get_unused_draft_itemid();",
          "85:             }",
          "",
          "[Removed Lines]",
          "82:                 $draftitemid = $formdata->$fieldname;",
          "",
          "[Added Lines]",
          "82:                 $draftitemid = clean_param($formdata->$fieldname, PARAM_INT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "146:         }",
          "147:         $editor->set_text($text);",
          "148:         $editor->use_editor($field, $options, $fpoptions);",
          "150:         $str .= '<div class=\"mod-data-input\">';",
          "151:         $str .= '<div><textarea id=\"'.$field.'\" name=\"'.$field.'\" rows=\"'.$this->field->param3.'\" cols=\"'.$this->field->param2.'\" spellcheck=\"true\">'.s($text).'</textarea></div>';",
          "152:         $str .= '<div><label class=\"accesshide\" for=\"' . $field . '_content1\">' . get_string('format') . '</label>';",
          "",
          "[Removed Lines]",
          "149:         $str .= '<input type=\"hidden\" name=\"'.$field.'_itemid\" value=\"'.$draftitemid.'\" />';",
          "",
          "[Added Lines]",
          "149:         $str .= '<input type=\"hidden\" name=\"'.$field.'_itemid\" value=\"'.s($draftitemid).'\" />';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "167:     function display_search_field($value = '') {",
          "168:         return '<label class=\"accesshide\" for=\"f_' . $this->field->id . '\">' . $this->field->name . '</label>' .",
          "170:     }",
          "172:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "169:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "169:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/field/url/field.class.php||mod/data/field/url/field.class.php": [
          "File: mod/data/field/url/field.class.php -> mod/data/field/url/field.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:             }",
          "82:             $str .= '</td><td>';",
          "83:             $str .= $label;",
          "85:             $str .= '<button id=\"filepicker-button-'.$options->client_id.'\" style=\"display:none\">'.$straddlink.'</button></td></tr>';",
          "86:             $str .= '<tr><td align=\"right\"><span class=\"mod-data-input\">'.get_string('text', 'data').':</span></td><td>';",
          "87:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_1\" id=\"field_'.$this->field->id.'_1\" value=\"'.s($text).'\"';",
          "",
          "[Removed Lines]",
          "84:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.$url.'\" size=\"60\" />';",
          "",
          "[Added Lines]",
          "84:             $str .= '<input type=\"text\" name=\"field_'.$this->field->id.'_0\" id=\"'.$fieldid.'\" value=\"'.s($url).'\" size=\"60\" />';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:     function display_search_field($value = '') {",
          "110:         return '<label class=\"accesshide\" for=\"f_'.$this->field->id.'\">' . get_string('fieldname', 'data') . '</label>' .",
          "112:     }",
          "114:     function parse_search_field() {",
          "",
          "[Removed Lines]",
          "111:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.$value.'\" />';",
          "",
          "[Added Lines]",
          "111:                '<input type=\"text\" size=\"16\" id=\"f_'.$this->field->id.'\" name=\"f_'.$this->field->id.'\" value=\"'.s($value).'\" />';",
          "",
          "---------------"
        ],
        "mod/data/lib.php||mod/data/lib.php": [
          "File: mod/data/lib.php -> mod/data/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1730:     $fn = !empty($search_array[DATA_FIRSTNAME]->data) ? $search_array[DATA_FIRSTNAME]->data : '';",
          "1731:     $ln = !empty($search_array[DATA_LASTNAME]->data) ? $search_array[DATA_LASTNAME]->data : '';",
          "1732:     $patterns[]    = '/##firstname##/';",
          "1734:     $patterns[]    = '/##lastname##/';",
          "1738:     $newtext = preg_replace($patterns, $replacement, $data->asearchtemplate);",
          "",
          "[Removed Lines]",
          "1733:     $replacement[] = '<label class=\"accesshide\" for=\"u_fn\">'.get_string('authorfirstname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_fn\" name=\"u_fn\" value=\"'.$fn.'\" />';",
          "1735:     $replacement[] = '<label class=\"accesshide\" for=\"u_ln\">'.get_string('authorlastname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_ln\" name=\"u_ln\" value=\"'.$ln.'\" />';",
          "",
          "[Added Lines]",
          "1733:     $replacement[] = '<label class=\"accesshide\" for=\"u_fn\">'.get_string('authorfirstname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_fn\" name=\"u_fn\" value=\"'.s($fn).'\" />';",
          "1735:     $replacement[] = '<label class=\"accesshide\" for=\"u_ln\">'.get_string('authorlastname', 'data').'</label><input type=\"text\" size=\"16\" id=\"u_ln\" name=\"u_ln\" value=\"'.s($ln).'\" />';",
          "",
          "---------------"
        ]
      }
    }
  ]
}