{
  "cve_id": "CVE-2015-8746",
  "cve_desc": "fs/nfs/nfs4proc.c in the NFS client in the Linux kernel before 4.2.2 does not properly initialize memory for migration recovery operations, which allows remote NFS servers to cause a denial of service (NULL pointer dereference and panic) via crafted network traffic.",
  "repo": "torvalds/linux",
  "patch_hash": "18e3b739fdc826481c6a1335ce0c5b19b3d415da",
  "patch_info": {
    "commit_hash": "18e3b739fdc826481c6a1335ce0c5b19b3d415da",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/18e3b739fdc826481c6a1335ce0c5b19b3d415da",
    "files": [
      "fs/nfs/nfs4proc.c"
    ],
    "message": "NFS: Fix a NULL pointer dereference of migration recovery ops for v4.2 client\n\n---Steps to Reproduce--\n<nfs-server>\n# cat /etc/exports\n/nfs/referal  *(rw,insecure,no_subtree_check,no_root_squash,crossmnt)\n/nfs/old      *(ro,insecure,subtree_check,root_squash,crossmnt)\n\n<nfs-client>\n# mount -t nfs nfs-server:/nfs/ /mnt/\n# ll /mnt/*/\n\n<nfs-server>\n# cat /etc/exports\n/nfs/referal   *(rw,insecure,no_subtree_check,no_root_squash,crossmnt,refer=/nfs/old/@nfs-server)\n/nfs/old       *(ro,insecure,subtree_check,root_squash,crossmnt)\n# service nfs restart\n\n<nfs-client>\n# ll /mnt/*/    --->>>>> oops here\n\n[ 5123.102925] BUG: unable to handle kernel NULL pointer dereference at           (null)\n[ 5123.103363] IP: [<ffffffffa03ed38b>] nfs4_proc_get_locations+0x9b/0x120 [nfsv4]\n[ 5123.103752] PGD 587b9067 PUD 3cbf5067 PMD 0\n[ 5123.104131] Oops: 0000 [#1]\n[ 5123.104529] Modules linked in: nfsv4(OE) nfs(OE) fscache(E) nfsd(OE) xfs libcrc32c iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi coretemp crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel ppdev vmw_balloon parport_pc parport i2c_piix4 shpchp auth_rpcgss nfs_acl vmw_vmci lockd grace sunrpc vmwgfx drm_kms_helper ttm drm mptspi serio_raw scsi_transport_spi e1000 mptscsih mptbase ata_generic pata_acpi [last unloaded: nfsd]\n[ 5123.105887] CPU: 0 PID: 15853 Comm: ::1-manager Tainted: G           OE   4.2.0-rc6+ #214\n[ 5123.106358] Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 05/20/2014\n[ 5123.106860] task: ffff88007620f300 ti: ffff88005877c000 task.ti: ffff88005877c000\n[ 5123.107363] RIP: 0010:[<ffffffffa03ed38b>]  [<ffffffffa03ed38b>] nfs4_proc_get_locations+0x9b/0x120 [nfsv4]\n[ 5123.107909] RSP: 0018:ffff88005877fdb8  EFLAGS: 00010246\n[ 5123.108435] RAX: ffff880053f3bc00 RBX: ffff88006ce6c908 RCX: ffff880053a0d240\n[ 5123.108968] RDX: ffffea0000e6d940 RSI: ffff8800399a0000 RDI: ffff88006ce6c908\n[ 5123.109503] RBP: ffff88005877fe28 R08: ffffffff81c708a0 R09: 0000000000000000\n[ 5123.110045] R10: 00000000000001a2 R11: ffff88003ba7f5c8 R12: ffff880054c55800\n[ 5123.110618] R13: 0000000000000000 R14: ffff880053a0d240 R15: ffff880053a0d240\n[ 5123.111169] FS:  0000000000000000(0000) GS:ffffffff81c27000(0000) knlGS:0000000000000000\n[ 5123.111726] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 5123.112286] CR2: 0000000000000000 CR3: 0000000054cac000 CR4: 00000000001406f0\n[ 5123.112888] Stack:\n[ 5123.113458]  ffffea0000e6d940 ffff8800399a0000 00000000000167d0 0000000000000000\n[ 5123.114049]  0000000000000000 0000000000000000 0000000000000000 00000000a7ec82c6\n[ 5123.114662]  ffff88005877fe18 ffffea0000e6d940 ffff8800399a0000 ffff880054c55800\n[ 5123.115264] Call Trace:\n[ 5123.115868]  [<ffffffffa03fb44b>] nfs4_try_migration+0xbb/0x220 [nfsv4]\n[ 5123.116487]  [<ffffffffa03fcb3b>] nfs4_run_state_manager+0x4ab/0x7b0 [nfsv4]\n[ 5123.117104]  [<ffffffffa03fc690>] ? nfs4_do_reclaim+0x510/0x510 [nfsv4]\n[ 5123.117813]  [<ffffffff810a4527>] kthread+0xd7/0xf0\n[ 5123.118456]  [<ffffffff810a4450>] ? kthread_worker_fn+0x160/0x160\n[ 5123.119108]  [<ffffffff816d9cdf>] ret_from_fork+0x3f/0x70\n[ 5123.119723]  [<ffffffff810a4450>] ? kthread_worker_fn+0x160/0x160\n[ 5123.120329] Code: 4c 8b 6a 58 74 17 eb 52 48 8d 55 a8 89 c6 4c 89 e7 e8 4a b5 ff ff 8b 45 b0 85 c0 74 1c 4c 89 f9 48 8b 55 90 48 8b 75 98 48 89 df <41> ff 55 00 3d e8 d8 ff ff 41 89 c6 74 cf 48 8b 4d c8 65 48 33\n[ 5123.121643] RIP  [<ffffffffa03ed38b>] nfs4_proc_get_locations+0x9b/0x120 [nfsv4]\n[ 5123.122308]  RSP <ffff88005877fdb8>\n[ 5123.122942] CR2: 0000000000000000\n\nFixes: ec011fe847 (\"NFS: Introduce a vector of migration recovery ops\")\nCc: stable@vger.kernel.org # v3.13+\nSigned-off-by: Kinglong Mee <kinglongmee@gmail.com>\nSigned-off-by: Trond Myklebust <trond.myklebust@primarydata.com>",
    "before_after_code_files": [
      "fs/nfs/nfs4proc.c||fs/nfs/nfs4proc.c"
    ]
  },
  "patch_diff": {
    "fs/nfs/nfs4proc.c||fs/nfs/nfs4proc.c": [
      "File: fs/nfs/nfs4proc.c -> fs/nfs/nfs4proc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "8661:  .reboot_recovery_ops = &nfs41_reboot_recovery_ops,",
      "8662:  .nograce_recovery_ops = &nfs41_nograce_recovery_ops,",
      "8663:  .state_renewal_ops = &nfs41_state_renewal_ops,",
      "8664: };",
      "8665: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8664:  .mig_recovery_ops = &nfs41_mig_recovery_ops,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "575c319dfe872fc8bf1d57b244fb40f497ab3a47",
      "candidate_info": {
        "commit_hash": "575c319dfe872fc8bf1d57b244fb40f497ab3a47",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/575c319dfe872fc8bf1d57b244fb40f497ab3a47",
        "files": [
          "drivers/mmc/host/dw_mmc.c",
          "include/linux/mmc/dw_mmc.h"
        ],
        "message": "mmc: dw_mmc: fix pio mode when internal dmac is enabled\n\nThe dw_mci_init_dma() may decide to not use dma, but pio instead, caused\nby things like wrong dma settings in the system.\n\nTill now the code dw_mci_init_slot() always assumed that dma is available\nwhen CONFIG_MMC_DW_IDMAC was defined, ignoring the host->use_dma var\nset during dma init.\n\nSo when now the dma init failed for whatever reason, the transfer sizes\nwould still be set for dma transfers, especially including the maximum\nblock-count calculated from host->ring_size and resulting in a\n\n[    4.991109] ------------[ cut here ]------------\n[    4.991111] kernel BUG at drivers/mmc/core/core.c:256!\n[    4.991113] Internal error: Oops - BUG: 0 [#1] SMP ARM\n\nbecause host->ring_size is 0 in this case and the slot init code uses\nthe wrong code to calculate the values.\n\nFix this by selecting the correct calculations using the host->use_dma\nvariable instead of the CONFIG_MMC_DW_IDMAC config option.\n\nSigned-off-by: Heiko Stuebner <heiko@sntech.de>\nSigned-off-by: Jaehoon Chung <jh80.chung@samsung.com>",
        "before_after_code_files": [
          "drivers/mmc/host/dw_mmc.c||drivers/mmc/host/dw_mmc.c",
          "include/linux/mmc/dw_mmc.h||include/linux/mmc/dw_mmc.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/mmc/host/dw_mmc.c||drivers/mmc/host/dw_mmc.c": [
          "File: drivers/mmc/host/dw_mmc.c -> drivers/mmc/host/dw_mmc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2444:   mmc->max_seg_size = host->pdata->blk_settings->max_seg_size;",
          "2445:  } else {",
          "2460:  }",
          "2462:  if (dw_mci_get_cd(mmc))",
          "",
          "[Removed Lines]",
          "2447: #ifdef CONFIG_MMC_DW_IDMAC",
          "2448:   mmc->max_segs = host->ring_size;",
          "2449:   mmc->max_blk_size = 65536;",
          "2450:   mmc->max_seg_size = DW_MCI_DESC_DATA_LENGTH;",
          "2451:   mmc->max_req_size = mmc->max_seg_size * host->ring_size;",
          "2452:   mmc->max_blk_count = mmc->max_req_size / 512;",
          "2453: #else",
          "2454:   mmc->max_segs = 64;",
          "2456:   mmc->max_blk_count = 512;",
          "2457:   mmc->max_req_size = mmc->max_blk_size * mmc->max_blk_count;",
          "2458:   mmc->max_seg_size = mmc->max_req_size;",
          "",
          "[Added Lines]",
          "2447:   if (host->use_dma) {",
          "2448:    mmc->max_segs = host->ring_size;",
          "2449:    mmc->max_blk_size = 65536;",
          "2450:    mmc->max_seg_size = 0x1000;",
          "2451:    mmc->max_req_size = mmc->max_seg_size * host->ring_size;",
          "2452:    mmc->max_blk_count = mmc->max_req_size / 512;",
          "2453:   } else {",
          "2454:    mmc->max_segs = 64;",
          "2456:    mmc->max_blk_count = 512;",
          "2457:    mmc->max_req_size = mmc->max_blk_size *",
          "2458:          mmc->max_blk_count;",
          "2459:    mmc->max_seg_size = mmc->max_req_size;",
          "2460:   }",
          "",
          "---------------"
        ],
        "include/linux/mmc/dw_mmc.h||include/linux/mmc/dw_mmc.h": [
          "File: include/linux/mmc/dw_mmc.h -> include/linux/mmc/dw_mmc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:  dma_addr_t  sg_dma;",
          "154:  void   *sg_cpu;",
          "155:  const struct dw_mci_dma_ops *dma_ops;",
          "157:  unsigned int  ring_size;",
          "161:  u32   cmd_status;",
          "162:  u32   data_status;",
          "163:  u32   stop_cmdr;",
          "",
          "[Removed Lines]",
          "156: #ifdef CONFIG_MMC_DW_IDMAC",
          "158: #else",
          "159:  struct dw_mci_dma_data *dma_data;",
          "160: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38bf985b05625df3fbbc1dbf543bdd2da447c2af",
      "candidate_info": {
        "commit_hash": "38bf985b05625df3fbbc1dbf543bdd2da447c2af",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/38bf985b05625df3fbbc1dbf543bdd2da447c2af",
        "files": [
          "kernel/time/timer_list.c"
        ],
        "message": "timer_list: Add the base offset so remaining nsecs are accurate for non monotonic timers\n\nI noticed for non-monotonic timers in timer_list, some of the\noutput looked a little confusing.\n\nFor example:\n #1: <0000000000000000>, posix_timer_fn, S:01, hrtimer_start_range_ns, leap-a-day/2360\n # expires at 1434412800000000000-1434412800000000000 nsecs [in 1434410725062375469 to 1434410725062375469 nsecs]\n\nYou'll note the relative time till the expiration \"[in xxx to\nyyy nsecs]\" is incorrect. This is because its printing the delta\nbetween CLOCK_MONOTONIC time to the CLOCK_REALTIME expiration.\n\nThis patch fixes this issue by adding the clock offset to the\n\"now\" time which we use to calculate the delta.\n\nCc: Prarit Bhargava <prarit@redhat.com>\nCc: Daniel Bristot de Oliveira <bristot@redhat.com>\nCc: Richard Cochran <richardcochran@gmail.com>\nCc: Jan Kara <jack@suse.cz>\nCc: Jiri Bohac <jbohac@suse.cz>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Ingo Molnar <mingo@redhat.com>\nCc: Shuah Khan <shuahkh@osg.samsung.com>\nSigned-off-by: John Stultz <john.stultz@linaro.org>",
        "before_after_code_files": [
          "kernel/time/timer_list.c||kernel/time/timer_list.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kernel/time/timer_list.c||kernel/time/timer_list.c": [
          "File: kernel/time/timer_list.c -> kernel/time/timer_list.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:      (unsigned long long) ktime_to_ns(base->offset));",
          "138: #endif",
          "139:  SEQ_printf(m,   \"active timers:\\n\");",
          "141: }",
          "143: static void print_cpu(struct seq_file *m, int cpu, u64 now)",
          "",
          "[Removed Lines]",
          "140:  print_active_timers(m, base, now);",
          "",
          "[Added Lines]",
          "140:  print_active_timers(m, base, now + ktime_to_ns(base->offset));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "596f5aad2a704b72934e5abec1b1b4114c16f45b",
      "candidate_info": {
        "commit_hash": "596f5aad2a704b72934e5abec1b1b4114c16f45b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/596f5aad2a704b72934e5abec1b1b4114c16f45b",
        "files": [
          "block/blk-mq-sysfs.c"
        ],
        "message": "blk-mq: fix buffer overflow when reading sysfs file of 'pending'\n\nThere may be lots of pending requests so that the buffer of PAGE_SIZE\ncan't hold them at all.\n\nOne typical example is scsi-mq, the queue depth(.can_queue) of\nscsi_host and blk-mq is quite big but scsi_device's queue_depth\nis a bit small(.cmd_per_lun), then it is quite easy to have lots\nof pending requests in hw queue.\n\nThis patch fixes the following warning and the related memory\ndestruction.\n\n[  359.025101] fill_read_buffer: blk_mq_hw_sysfs_show+0x0/0x7d returned bad count^M\n[  359.055595] irq event stamp: 15537^M\n[  359.055606] general protection fault: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC ^M\n[  359.055614] Dumping ftrace buffer:^M\n[  359.055660]    (ftrace buffer empty)^M\n[  359.055672] Modules linked in: nbd ipv6 kvm_intel kvm serio_raw^M\n[  359.055678] CPU: 4 PID: 21631 Comm: stress-ng-sysfs Not tainted 4.2.0-rc5-next-20150805 #434^M\n[  359.055679] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011^M\n[  359.055682] task: ffff8802161cc000 ti: ffff88021b4a8000 task.ti: ffff88021b4a8000^M\n[  359.055693] RIP: 0010:[<ffffffff811541c5>]  [<ffffffff811541c5>] __kmalloc+0xe8/0x152^M\n\nCc: <stable@vger.kernel.org>\nSigned-off-by: Ming Lei <ming.lei@canonical.com>\nSigned-off-by: Jens Axboe <axboe@fb.com>",
        "before_after_code_files": [
          "block/blk-mq-sysfs.c||block/blk-mq-sysfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "block/blk-mq-sysfs.c||block/blk-mq-sysfs.c": [
          "File: block/blk-mq-sysfs.c -> block/blk-mq-sysfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142: static ssize_t sysfs_list_show(char *page, struct list_head *list, char *msg)",
          "143: {",
          "145:  struct request *rq;",
          "153: }",
          "155: static ssize_t blk_mq_sysfs_rq_list_show(struct blk_mq_ctx *ctx, char *page)",
          "",
          "[Removed Lines]",
          "144:  char *start_page = page;",
          "147:  page += sprintf(page, \"%s:\\n\", msg);",
          "149:  list_for_each_entry(rq, list, queuelist)",
          "150:   page += sprintf(page, \"\\t%p\\n\", rq);",
          "152:  return page - start_page;",
          "",
          "[Added Lines]",
          "145:  int len = snprintf(page, PAGE_SIZE - 1, \"%s:\\n\", msg);",
          "147:  list_for_each_entry(rq, list, queuelist) {",
          "148:   const int rq_len = 2 * sizeof(rq) + 2;",
          "151:   if (PAGE_SIZE - 1 < len + rq_len) {",
          "153:    if (PAGE_SIZE - 1 < len + 5)",
          "154:     len -= rq_len;",
          "155:    len += snprintf(page + len, PAGE_SIZE - 1 - len,",
          "156:      \"\\t...\\n\");",
          "157:    break;",
          "158:   }",
          "159:   len += snprintf(page + len, PAGE_SIZE - 1 - len,",
          "160:     \"\\t%p\\n\", rq);",
          "161:  }",
          "163:  return len;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f6bf39bbdd1dcccd103ba7dce8496a8e72e7df4",
      "candidate_info": {
        "commit_hash": "7f6bf39bbdd1dcccd103ba7dce8496a8e72e7df4",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7f6bf39bbdd1dcccd103ba7dce8496a8e72e7df4",
        "files": [
          "mm/memory-failure.c"
        ],
        "message": "mm/hwpoison: fix panic due to split huge zero page\n\nBug:\n\n  ------------[ cut here ]------------\n  kernel BUG at mm/huge_memory.c:1957!\n  invalid opcode: 0000 [#1] SMP\n  Modules linked in: snd_hda_codec_hdmi i915 rpcsec_gss_krb5 snd_hda_codec_realtek snd_hda_codec_generic nfsv4 dns_re\n  CPU: 2 PID: 2576 Comm: test_huge Not tainted 4.2.0-rc5-mm1+ #27\n  Hardware name: Dell Inc. OptiPlex 7020/0F5C5X, BIOS A03 01/08/2015\n  task: ffff880204e3d600 ti: ffff8800db16c000 task.ti: ffff8800db16c000\n  RIP: split_huge_page_to_list+0xdb/0x120\n  Call Trace:\n    memory_failure+0x32e/0x7c0\n    madvise_hwpoison+0x8b/0x160\n    SyS_madvise+0x40/0x240\n    ? do_page_fault+0x37/0x90\n    entry_SYSCALL_64_fastpath+0x12/0x71\n  Code: ff f0 41 ff 4c 24 30 74 0d 31 c0 48 83 c4 08 5b 41 5c 41 5d c9 c3 4c 89 e7 e8 e2 58 fd ff 48 83 c4 08 31 c0\n  RIP  split_huge_page_to_list+0xdb/0x120\n   RSP <ffff8800db16fde8>\n  ---[ end trace aee7ce0df8e44076 ]---\n\nTestcase:\n\n    #define _GNU_SOURCE\n    #include <stdlib.h>\n    #include <stdio.h>\n    #include <sys/mman.h>\n    #include <unistd.h>\n    #include <fcntl.h>\n    #include <sys/types.h>\n    #include <errno.h>\n    #include <string.h>\n\n    #define MB 1024*1024\n\n    int main(void)\n    {\n            char *mem;\n\n            posix_memalign((void **)&mem, 2 * MB, 200 * MB);\n\n            madvise(mem, 200 * MB, MADV_HWPOISON);\n\n            free(mem);\n\n            return 0;\n    }\n\nHuge zero page is allocated if page fault w/o FAULT_FLAG_WRITE flag.\nThe get_user_pages_fast() which called in madvise_hwpoison() will get\nhuge zero page if the page is not allocated before.  Huge zero page is a\ntranparent huge page, however, it is not an anonymous page.\nmemory_failure will split the huge zero page and trigger\nBUG_ON(is_huge_zero_page(page));\n\nAfter commit 98ed2b0052e6 (\"mm/memory-failure: give up error handling\nfor non-tail-refcounted thp\"), memory_failure will not catch non anon\nthp from madvise_hwpoison path and this bug occur.\n\nFix it by catching non anon thp in memory_failure in order to not split\nhuge zero page in madvise_hwpoison path.\n\nAfter this patch:\n\n  Injecting memory failure for page 0x202800 at 0x7fd8ae800000\n  MCE: 0x202800: non anonymous thp\n  [...]\n\n[akpm@linux-foundation.org: remove second split, per Wanpeng]\nSigned-off-by: Wanpeng Li <wanpeng.li@hotmail.com>\nAcked-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
        "before_after_code_files": [
          "mm/memory-failure.c||mm/memory-failure.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "mm/memory-failure.c||mm/memory-failure.c": [
          "File: mm/memory-failure.c -> mm/memory-failure.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1146:  }",
          "1148:  if (!PageHuge(p) && PageTransHuge(hpage)) {",
          "1151:    if (TestClearPageHWPoison(p))",
          "1152:     atomic_long_sub(nr_pages, &num_poisoned_pages);",
          "1153:    put_page(p);",
          "",
          "[Removed Lines]",
          "1149:   if (unlikely(split_huge_page(hpage))) {",
          "1150:    pr_err(\"MCE: %#lx: thp split failed\\n\", pfn);",
          "",
          "[Added Lines]",
          "1149:   if (!PageAnon(hpage) || unlikely(split_huge_page(hpage))) {",
          "1150:    if (!PageAnon(hpage))",
          "1151:     pr_err(\"MCE: %#lx: non anonymous thp\\n\", pfn);",
          "1152:    else",
          "1153:     pr_err(\"MCE: %#lx: thp split failed\\n\", pfn);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bdfe0cbd746aa9b2509c2f6d6be17193cf7facd7",
      "candidate_info": {
        "commit_hash": "bdfe0cbd746aa9b2509c2f6d6be17193cf7facd7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/bdfe0cbd746aa9b2509c2f6d6be17193cf7facd7",
        "files": [
          "fs/ext4/super.c"
        ],
        "message": "Revert \"ext4: remove block_device_ejected\"\n\nThis reverts commit 08439fec266c3cc5702953b4f54bdf5649357de0.\n\nUnfortunately we still need to test for bdi->dev to avoid a crash when a\nUSB stick is yanked out while a file system is mounted:\n\n   usb 2-2: USB disconnect, device number 2\n   Buffer I/O error on dev sdb1, logical block 15237120, lost sync page write\n   JBD2: Error -5 detected when updating journal superblock for sdb1-8.\n   BUG: unable to handle kernel paging request at 34beb000\n   IP: [<c136ce88>] __percpu_counter_add+0x18/0xc0\n   *pdpt = 0000000023db9001 *pde = 0000000000000000 \n   Oops: 0000 [#1] SMP \n   CPU: 0 PID: 4083 Comm: umount Tainted: G     U     OE   4.1.1-040101-generic #201507011435\n   Hardware name: LENOVO 7675CTO/7675CTO, BIOS 7NETC2WW (2.22 ) 03/22/2011\n   task: ebf06b50 ti: ebebc000 task.ti: ebebc000\n   EIP: 0060:[<c136ce88>] EFLAGS: 00010082 CPU: 0\n   EIP is at __percpu_counter_add+0x18/0xc0\n   EAX: f21c8e88 EBX: f21c8e88 ECX: 00000000 EDX: 00000001\n   ESI: 00000001 EDI: 00000000 EBP: ebebde60 ESP: ebebde40\n    DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068\n   CR0: 8005003b CR2: 34beb000 CR3: 33354200 CR4: 000007f0\n   Stack:\n    c1abe100 edcb0098 edcb00ec ffffffff f21c8e68 ffffffff f21c8e68 f286d160\n    ebebde84 c1160454 00000010 00000282 f72a77f8 00000984 f72a77f8 f286d160\n    f286d170 ebebdea0 c11e613f 00000000 00000282 f72a77f8 edd7f4d0 00000000\n   Call Trace:\n    [<c1160454>] account_page_dirtied+0x74/0x110\n    [<c11e613f>] __set_page_dirty+0x3f/0xb0\n    [<c11e6203>] mark_buffer_dirty+0x53/0xc0\n    [<c124a0cb>] ext4_commit_super+0x17b/0x250\n    [<c124ac71>] ext4_put_super+0xc1/0x320\n    [<c11f04ba>] ? fsnotify_unmount_inodes+0x1aa/0x1c0\n    [<c11cfeda>] ? evict_inodes+0xca/0xe0\n    [<c11b925a>] generic_shutdown_super+0x6a/0xe0\n    [<c10a1df0>] ? prepare_to_wait_event+0xd0/0xd0\n    [<c1165a50>] ? unregister_shrinker+0x40/0x50\n    [<c11b92f6>] kill_block_super+0x26/0x70\n    [<c11b94f5>] deactivate_locked_super+0x45/0x80\n    [<c11ba007>] deactivate_super+0x47/0x60\n    [<c11d2b39>] cleanup_mnt+0x39/0x80\n    [<c11d2bc0>] __cleanup_mnt+0x10/0x20\n    [<c1080b51>] task_work_run+0x91/0xd0\n    [<c1011e3c>] do_notify_resume+0x7c/0x90\n    [<c1720da5>] work_notify\n   Code: 8b 55 e8 e9 f4 fe ff ff 90 90 90 90 90 90 90 90 90 90 90 55 89 e5 83 ec 20 89 5d f4 89 c3 89 75 f8 89 d6 89 7d fc 89 cf 8b 48 14 <64> 8b 01 89 45 ec 89 c2 8b 45 08 c1 fa 1f 01 75 ec 89 55 f0 89\n   EIP: [<c136ce88>] __percpu_counter_add+0x18/0xc0 SS:ESP 0068:ebebde40\n   CR2: 0000000034beb000\n   ---[ end trace dd564a7bea834ecd ]---\n\nBugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=101011\n\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>\nCc: stable@vger.kernel.org",
        "before_after_code_files": [
          "fs/ext4/super.c||fs/ext4/super.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/ext4/super.c||fs/ext4/super.c": [
          "File: fs/ext4/super.c -> fs/ext4/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:  ext4_commit_super(sb, 1);",
          "327: }",
          "329: static void ext4_journal_commit_callback(journal_t *journal, transaction_t *txn)",
          "330: {",
          "331:  struct super_block  *sb = journal->j_private;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "337: static int block_device_ejected(struct super_block *sb)",
          "338: {",
          "339:  struct inode *bd_inode = sb->s_bdev->bd_inode;",
          "340:  struct backing_dev_info *bdi = inode_to_bdi(bd_inode);",
          "342:  return bdi->dev == NULL;",
          "343: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4621:  struct buffer_head *sbh = EXT4_SB(sb)->s_sbh;",
          "4622:  int error = 0;",
          "4625:   return error;",
          "4626:  if (buffer_write_io_error(sbh)) {",
          "",
          "[Removed Lines]",
          "4624:  if (!sbh)",
          "",
          "[Added Lines]",
          "4640:  if (!sbh || block_device_ejected(sb))",
          "",
          "---------------"
        ]
      }
    }
  ]
}