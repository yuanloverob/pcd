{
  "cve_id": "CVE-2022-23590",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. A `GraphDef` from a TensorFlow `SavedModel` can be maliciously altered to cause a TensorFlow process to crash due to encountering a `StatusOr` value that is an error and forcibly extracting the value from it. We have patched the issue in multiple GitHub commits and these will be included in TensorFlow 2.8.0 and TensorFlow 2.7.1, as both are affected.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "955059813cc325dc1db5e2daa6221271406d4439",
  "patch_info": {
    "commit_hash": "955059813cc325dc1db5e2daa6221271406d4439",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/955059813cc325dc1db5e2daa6221271406d4439",
    "files": [
      "tensorflow/core/graph/graph.cc"
    ],
    "message": "Check for type inference error on node construction.\n\nPiperOrigin-RevId: 409415804\nChange-Id: Ieb6e020906b96f522bf8e2fa103715ddbbdc434a",
    "before_after_code_files": [
      "tensorflow/core/graph/graph.cc||tensorflow/core/graph/graph.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/graph/graph.cc||tensorflow/core/graph/graph.cc": [
      "File: tensorflow/core/graph/graph.cc -> tensorflow/core/graph/graph.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "561:     VLOG(3) << \"AddNode: found type constructor for \" << node_def.name();",
      "562:     const auto ctor_type =",
      "563:         full_type::SpecializeType(AttrSlice(node_def), op_reg_data->op_def);",
      "564:     const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();",
      "565:     if (ctor_typedef.type_id() != TFT_UNSET) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "564:     if (!ctor_type.ok()) {",
      "566:                                         ctor_type.status().ToString());",
      "567:       return nullptr;",
      "568:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "94c748eebe366adef4c0d47bbb7348dcc0d5433d",
      "candidate_info": {
        "commit_hash": "94c748eebe366adef4c0d47bbb7348dcc0d5433d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/94c748eebe366adef4c0d47bbb7348dcc0d5433d",
        "files": [
          "tensorflow/core/graph/graph.cc"
        ],
        "message": "Check for type inference error on node construction.\n\nPiperOrigin-RevId: 409415804\nChange-Id: Ieb6e020906b96f522bf8e2fa103715ddbbdc434a",
        "before_after_code_files": [
          "tensorflow/core/graph/graph.cc||tensorflow/core/graph/graph.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/graph/graph.cc||tensorflow/core/graph/graph.cc"
          ],
          "candidate": [
            "tensorflow/core/graph/graph.cc||tensorflow/core/graph/graph.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/graph/graph.cc||tensorflow/core/graph/graph.cc": [
          "File: tensorflow/core/graph/graph.cc -> tensorflow/core/graph/graph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "477:                                    ? Node::NC_FUNCTION_OP",
          "478:                                    : Node::GetNodeClassForOp(node_def.op());",
          "480:   Node* node = AllocateNode(",
          "481:       std::make_shared<NodeProperties>(&op_reg_data->op_def,",
          "482:                                        std::move(node_def), inputs, outputs),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "480:   if (op_reg_data->type_ctor != nullptr) {",
          "481:     VLOG(3) << \"AddNode: found type constructor for \" << node_def.name();",
          "482:     const auto ctor_type =",
          "483:         full_type::SpecializeType(AttrSlice(node_def), op_reg_data->op_def);",
          "484:     if (!ctor_type.ok()) {",
          "486:                                         ctor_type.status().ToString());",
          "487:       return nullptr;",
          "488:     }",
          "489:     const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();",
          "490:     if (ctor_typedef.type_id() != TFT_UNSET) {",
          "492:     }",
          "493:   } else {",
          "494:     VLOG(3) << \"AddNode: no type constructor for \" << node_def.name();",
          "495:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}