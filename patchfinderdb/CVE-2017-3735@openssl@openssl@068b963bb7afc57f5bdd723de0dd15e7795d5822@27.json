{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "71844800d543162f709c6a223d993a50506028c2",
      "candidate_info": {
        "commit_hash": "71844800d543162f709c6a223d993a50506028c2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/71844800d543162f709c6a223d993a50506028c2",
        "files": [
          "crypto/dsa/dsa_ossl.c"
        ],
        "message": "Address a timing side channel whereby it is possible to determine some\n\ninformation about the length of a value used in DSA operations from\na large number of signatures.\n\nThis doesn't rate as a CVE because:\n\n* For the non-constant time code, there are easier ways to extract\n  more information.\n\n* For the constant time code, it requires a significant number of signatures\n  to leak a small amount of information.\n\nThanks to Neals Fournaise, Eliane Jaulmes and Jean-Rene Reinhard for\nreporting this issue.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4576)\n\n(cherry picked from commit c0caa945f6ef30363e0d01d75155f20248403df4)",
        "before_after_code_files": [
          "crypto/dsdsa_ossl.c||crypto/dsa/dsa_ossl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dsdsa_ossl.c||crypto/dsa/dsa_ossl.c": [
          "File: crypto/dsdsa_ossl.c -> crypto/dsa/dsa_ossl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:     BIGNUM *l, *m;",
          "153:     int q_bits;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:     l = BN_new();",
          "162:     m = BN_new();",
          "163:     if (k == NULL || l == NULL || m == NULL)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173:     q_bits = BN_num_bits(dsa->q);",
          "174:     if (!BN_set_bit(k, q_bits)",
          "175:         || !BN_set_bit(l, q_bits)",
          "176:         || !BN_set_bit(m, q_bits))",
          "177:         goto err;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214:     if (!BN_add(l, k, dsa->q)",
          "215:         || !BN_add(m, l, dsa->q)",
          "216:         || !BN_copy(k, BN_num_bits(l) > q_bits ? l : m))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "245:     BN_clear_free(l);",
          "246:     BN_clear_free(m);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c5e8bd1d8aa9dafdb515b6c055f1ac95c12f138d",
      "candidate_info": {
        "commit_hash": "c5e8bd1d8aa9dafdb515b6c055f1ac95c12f138d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c5e8bd1d8aa9dafdb515b6c055f1ac95c12f138d",
        "files": [
          "CHANGES",
          "ssl/ssl_conf.c",
          "test/recipes/80-test_ssl_new.t",
          "test/ssl-tests/19-mac-then-encrypt.conf",
          "test/ssl-tests/19-mac-then-encrypt.conf.in"
        ],
        "message": "Test mac-then-encrypt\n\nVerify that the encrypt-then-mac negotiation is handled\ncorrectly. Additionally, when compiled with no-asm, this test ensures\ncoverage for the constant-time MAC copying code in\nssl3_cbc_copy_mac. The proxy-based CBC padding test covers that as\nwell but it's nevertheless better to have an explicit handshake test\nfor mac-then-encrypt.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(cherry picked from commit b3618f44a7b8504bfb0a64e8a33e6b8e56d4d516)",
        "before_after_code_files": [
          "ssl/ssl_conf.c||ssl/ssl_conf.c",
          "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t",
          "test/ssl-tests/19-mac-then-encrypt.conf||test/ssl-tests/19-mac-then-encrypt.conf",
          "test/ssl-tests/19-mac-then-encrypt.conf.in||test/ssl-tests/19-mac-then-encrypt.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_conf.c||ssl/ssl_conf.c": [
          "File: ssl/ssl_conf.c -> ssl/ssl_conf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "357:         SSL_FLAG_TBL_SRV(\"ECDHSingle\", SSL_OP_SINGLE_ECDH_USE),",
          "358:         SSL_FLAG_TBL(\"UnsafeLegacyRenegotiation\",",
          "359:                      SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION),",
          "360:     };",
          "361:     if (value == NULL)",
          "362:         return -3;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "360:         SSL_FLAG_TBL_INV(\"EncryptThenMac\", SSL_OP_NO_ENCRYPT_THEN_MAC),",
          "",
          "---------------"
        ],
        "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t": [
          "File: test/recipes/80-test_ssl_new.t -> test/recipes/80-test_ssl_new.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: # We hard-code the number of tests to double-check that the globbing above",
          "31: # finds all files as expected.",
          "34: # Some test results depend on the configuration of enabled protocols. We only",
          "35: # verify generated sources in the default configuration.",
          "",
          "[Removed Lines]",
          "32: plan tests => 18;  # = scalar @conf_srcs",
          "",
          "[Added Lines]",
          "32: plan tests => 19;  # = scalar @conf_srcs",
          "",
          "---------------"
        ],
        "test/ssl-tests/19-mac-then-encrypt.conf||test/ssl-tests/19-mac-then-encrypt.conf": [
          "File: test/ssl-tests/19-mac-then-encrypt.conf -> test/ssl-tests/19-mac-then-encrypt.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Generated with generate_ssl_tests.pl",
          "3: num_tests = 6",
          "5: test-0 = 0-disable-encrypt-then-mac-server-sha",
          "6: test-1 = 1-disable-encrypt-then-mac-client-sha",
          "7: test-2 = 2-disable-encrypt-then-mac-both-sha",
          "8: test-3 = 3-disable-encrypt-then-mac-server-sha2",
          "9: test-4 = 4-disable-encrypt-then-mac-client-sha2",
          "10: test-5 = 5-disable-encrypt-then-mac-both-sha2",
          "11: # ===========================================================",
          "13: [0-disable-encrypt-then-mac-server-sha]",
          "14: ssl_conf = 0-disable-encrypt-then-mac-server-sha-ssl",
          "16: [0-disable-encrypt-then-mac-server-sha-ssl]",
          "17: server = 0-disable-encrypt-then-mac-server-sha-server",
          "18: client = 0-disable-encrypt-then-mac-server-sha-client",
          "20: [0-disable-encrypt-then-mac-server-sha-server]",
          "21: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "22: CipherString = DEFAULT",
          "23: Options = -EncryptThenMac",
          "24: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "26: [0-disable-encrypt-then-mac-server-sha-client]",
          "27: CipherString = AES128-SHA",
          "28: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "29: VerifyMode = Peer",
          "31: [test-0]",
          "32: ExpectedResult = Success",
          "35: # ===========================================================",
          "37: [1-disable-encrypt-then-mac-client-sha]",
          "38: ssl_conf = 1-disable-encrypt-then-mac-client-sha-ssl",
          "40: [1-disable-encrypt-then-mac-client-sha-ssl]",
          "41: server = 1-disable-encrypt-then-mac-client-sha-server",
          "42: client = 1-disable-encrypt-then-mac-client-sha-client",
          "44: [1-disable-encrypt-then-mac-client-sha-server]",
          "45: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "46: CipherString = DEFAULT",
          "47: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "49: [1-disable-encrypt-then-mac-client-sha-client]",
          "50: CipherString = AES128-SHA",
          "51: Options = -EncryptThenMac",
          "52: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "53: VerifyMode = Peer",
          "55: [test-1]",
          "56: ExpectedResult = Success",
          "59: # ===========================================================",
          "61: [2-disable-encrypt-then-mac-both-sha]",
          "62: ssl_conf = 2-disable-encrypt-then-mac-both-sha-ssl",
          "64: [2-disable-encrypt-then-mac-both-sha-ssl]",
          "65: server = 2-disable-encrypt-then-mac-both-sha-server",
          "66: client = 2-disable-encrypt-then-mac-both-sha-client",
          "68: [2-disable-encrypt-then-mac-both-sha-server]",
          "69: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "70: CipherString = DEFAULT",
          "71: Options = -EncryptThenMac",
          "72: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "74: [2-disable-encrypt-then-mac-both-sha-client]",
          "75: CipherString = AES128-SHA",
          "76: Options = -EncryptThenMac",
          "77: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "78: VerifyMode = Peer",
          "80: [test-2]",
          "81: ExpectedResult = Success",
          "84: # ===========================================================",
          "86: [3-disable-encrypt-then-mac-server-sha2]",
          "87: ssl_conf = 3-disable-encrypt-then-mac-server-sha2-ssl",
          "89: [3-disable-encrypt-then-mac-server-sha2-ssl]",
          "90: server = 3-disable-encrypt-then-mac-server-sha2-server",
          "91: client = 3-disable-encrypt-then-mac-server-sha2-client",
          "93: [3-disable-encrypt-then-mac-server-sha2-server]",
          "94: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "95: CipherString = DEFAULT",
          "96: Options = -EncryptThenMac",
          "97: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "99: [3-disable-encrypt-then-mac-server-sha2-client]",
          "100: CipherString = AES128-SHA256",
          "101: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "102: VerifyMode = Peer",
          "104: [test-3]",
          "105: ExpectedResult = Success",
          "108: # ===========================================================",
          "110: [4-disable-encrypt-then-mac-client-sha2]",
          "111: ssl_conf = 4-disable-encrypt-then-mac-client-sha2-ssl",
          "113: [4-disable-encrypt-then-mac-client-sha2-ssl]",
          "114: server = 4-disable-encrypt-then-mac-client-sha2-server",
          "115: client = 4-disable-encrypt-then-mac-client-sha2-client",
          "117: [4-disable-encrypt-then-mac-client-sha2-server]",
          "118: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "119: CipherString = DEFAULT",
          "120: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "122: [4-disable-encrypt-then-mac-client-sha2-client]",
          "123: CipherString = AES128-SHA256",
          "124: Options = -EncryptThenMac",
          "125: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "126: VerifyMode = Peer",
          "128: [test-4]",
          "129: ExpectedResult = Success",
          "132: # ===========================================================",
          "134: [5-disable-encrypt-then-mac-both-sha2]",
          "135: ssl_conf = 5-disable-encrypt-then-mac-both-sha2-ssl",
          "137: [5-disable-encrypt-then-mac-both-sha2-ssl]",
          "138: server = 5-disable-encrypt-then-mac-both-sha2-server",
          "139: client = 5-disable-encrypt-then-mac-both-sha2-client",
          "141: [5-disable-encrypt-then-mac-both-sha2-server]",
          "142: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "143: CipherString = DEFAULT",
          "144: Options = -EncryptThenMac",
          "145: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "147: [5-disable-encrypt-then-mac-both-sha2-client]",
          "148: CipherString = AES128-SHA256",
          "149: Options = -EncryptThenMac",
          "150: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "151: VerifyMode = Peer",
          "153: [test-5]",
          "154: ExpectedResult = Success",
          "",
          "---------------"
        ],
        "test/ssl-tests/19-mac-then-encrypt.conf.in||test/ssl-tests/19-mac-then-encrypt.conf.in": [
          "File: test/ssl-tests/19-mac-then-encrypt.conf.in -> test/ssl-tests/19-mac-then-encrypt.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # -*- mode: perl; -*-",
          "2: # Copyright 2016-2016 The OpenSSL Project Authors. All Rights Reserved.",
          "3: #",
          "4: # Licensed under the OpenSSL license (the \"License\").  You may not use",
          "5: # this file except in compliance with the License.  You can obtain a copy",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "10: ## SSL test configurations",
          "12: package ssltests;",
          "14: our @tests = (",
          "15:     {",
          "16:         name => \"disable-encrypt-then-mac-server-sha\",",
          "17:         server => {",
          "18:           \"Options\" => \"-EncryptThenMac\",",
          "19:         },",
          "20:         client => {",
          "21:           \"CipherString\" => \"AES128-SHA\",",
          "22:         },",
          "23:         test   => {",
          "24:           \"ExpectedResult\" => \"Success\",",
          "25:         },",
          "26:     },",
          "27:     {",
          "28:         name => \"disable-encrypt-then-mac-client-sha\",",
          "29:         server => {",
          "30:         },",
          "31:         client => {",
          "32:           \"CipherString\" => \"AES128-SHA\",",
          "33:           \"Options\" => \"-EncryptThenMac\",",
          "34:         },",
          "35:         test   => {",
          "36:           \"ExpectedResult\" => \"Success\",",
          "37:         },",
          "38:     },",
          "39:     {",
          "40:         name => \"disable-encrypt-then-mac-both-sha\",",
          "41:         server => {",
          "42:           \"Options\" => \"-EncryptThenMac\",",
          "43:         },",
          "44:         client => {",
          "45:           \"CipherString\" => \"AES128-SHA\",",
          "46:           \"Options\" => \"-EncryptThenMac\",",
          "47:         },",
          "48:         test   => {",
          "49:           \"ExpectedResult\" => \"Success\",",
          "50:         },",
          "51:     },",
          "52:     {",
          "53:         name => \"disable-encrypt-then-mac-server-sha2\",",
          "54:         server => {",
          "55:           \"Options\" => \"-EncryptThenMac\",",
          "56:         },",
          "57:         client => {",
          "58:           \"CipherString\" => \"AES128-SHA256\",",
          "59:         },",
          "60:         test   => {",
          "61:           \"ExpectedResult\" => \"Success\",",
          "62:         },",
          "63:     },",
          "64:     {",
          "65:         name => \"disable-encrypt-then-mac-client-sha2\",",
          "66:         server => {",
          "67:         },",
          "68:         client => {",
          "69:           \"CipherString\" => \"AES128-SHA256\",",
          "70:           \"Options\" => \"-EncryptThenMac\",",
          "71:         },",
          "72:         test   => {",
          "73:           \"ExpectedResult\" => \"Success\",",
          "74:         },",
          "75:     },",
          "76:     {",
          "77:         name => \"disable-encrypt-then-mac-both-sha2\",",
          "78:         server => {",
          "79:           \"Options\" => \"-EncryptThenMac\",",
          "80:         },",
          "81:         client => {",
          "82:           \"CipherString\" => \"AES128-SHA256\",",
          "83:           \"Options\" => \"-EncryptThenMac\",",
          "84:         },",
          "85:         test   => {",
          "86:           \"ExpectedResult\" => \"Success\",",
          "87:         },",
          "88:     },",
          "89: );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2ce081490891a561be40d943513458b3568fd1c",
      "candidate_info": {
        "commit_hash": "a2ce081490891a561be40d943513458b3568fd1c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a2ce081490891a561be40d943513458b3568fd1c",
        "files": [
          "crypto/pem/pem_pk8.c",
          "crypto/pem/pem_pkey.c"
        ],
        "message": "Clean password buffer on stack for PEM_read_bio_PrivateKey and d2i_PKCS8PrivateKey_bio before it goes out of scope.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4047)\n\n(cherry picked from commit 02fd47c8b0930dff9b188fd13bfb9da5e59444a8)",
        "before_after_code_files": [
          "crypto/pem/pem_pk8.c||crypto/pem/pem_pk8.c",
          "crypto/pem/pem_pkey.c||crypto/pem/pem_pkey.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/pem/pem_pk8.c||crypto/pem/pem_pk8.c": [
          "File: crypto/pem/pem_pk8.c -> crypto/pem/pem_pk8.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:     }",
          "132:     p8inf = PKCS8_decrypt(p8, psbuf, klen);",
          "133:     X509_SIG_free(p8);",
          "134:     if (!p8inf)",
          "135:         return NULL;",
          "136:     ret = EVP_PKCS82PKEY(p8inf);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:     OPENSSL_cleanse(psbuf, klen);",
          "",
          "---------------"
        ],
        "crypto/pem/pem_pkey.c||crypto/pem/pem_pkey.c": [
          "File: crypto/pem/pem_pkey.c -> crypto/pem/pem_pkey.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:         }",
          "67:         p8inf = PKCS8_decrypt(p8, psbuf, klen);",
          "68:         X509_SIG_free(p8);",
          "69:         if (!p8inf)",
          "70:             goto p8err;",
          "71:         ret = EVP_PKCS82PKEY(p8inf);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:         OPENSSL_cleanse(psbuf, klen);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "508ff7f6b4c038c017a7adaf8dd8cda3efe853ec",
      "candidate_info": {
        "commit_hash": "508ff7f6b4c038c017a7adaf8dd8cda3efe853ec",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/508ff7f6b4c038c017a7adaf8dd8cda3efe853ec",
        "files": [
          "include/openssl/ssl.h",
          "ssl/ssl_ciph.c",
          "test/recipes/80-test_ssl_old.t"
        ],
        "message": "Stop using unimplemented cipher classes. Add comments to no longer usable ciphers.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5023)\n\n(cherry picked from commit 643d91fea409b0f010ce990f8f0fac234ae058bc)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h",
          "ssl/ssl_ciph.c||ssl/ssl_ciph.c",
          "test/recipes/80-test_ssl_old.t||test/recipes/80-test_ssl_old.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "95: # define SSL_TXT_NULL            \"NULL\"",
          "97: # define SSL_TXT_kRSA            \"kRSA\"",
          "102: # define SSL_TXT_kDHE            \"kDHE\"",
          "107: # define SSL_TXT_kECDHE          \"kECDHE\"",
          "108: # define SSL_TXT_kPSK            \"kPSK\"",
          "",
          "[Removed Lines]",
          "98: # define SSL_TXT_kDHr            \"kDHr\"",
          "99: # define SSL_TXT_kDHd            \"kDHd\"",
          "100: # define SSL_TXT_kDH             \"kDH\"",
          "103: # define SSL_TXT_kECDHr          \"kECDHr\"",
          "104: # define SSL_TXT_kECDHe          \"kECDHe\"",
          "105: # define SSL_TXT_kECDH           \"kECDH\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115: # define SSL_TXT_aRSA            \"aRSA\"",
          "116: # define SSL_TXT_aDSS            \"aDSS\"",
          "119: # define SSL_TXT_aECDSA          \"aECDSA\"",
          "120: # define SSL_TXT_aPSK            \"aPSK\"",
          "121: # define SSL_TXT_aGOST94         \"aGOST94\"",
          "",
          "[Removed Lines]",
          "117: # define SSL_TXT_aDH             \"aDH\"",
          "118: # define SSL_TXT_aECDH           \"aECDH\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ssl/ssl_ciph.c||ssl/ssl_ciph.c": [
          "File: ssl/ssl_ciph.c -> ssl/ssl_ciph.c"
        ],
        "test/recipes/80-test_ssl_old.t||test/recipes/80-test_ssl_old.t": [
          "File: test/recipes/80-test_ssl_old.t -> test/recipes/80-test_ssl_old.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "424:     subtest \"Testing ciphersuites\" => sub {",
          "426:         my @exkeys = ();",
          "429:         if ($no_dh) {",
          "430:             note \"skipping DHE tests\\n\";",
          "",
          "[Removed Lines]",
          "427:         my $ciphers = \"-EXP:-PSK:-SRP:-kDH:-kECDHe\";",
          "",
          "[Added Lines]",
          "427:         my $ciphers = \"-PSK:-SRP\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03b4e1c3496ae009a0e1df1a39c48b051dcca3db",
      "candidate_info": {
        "commit_hash": "03b4e1c3496ae009a0e1df1a39c48b051dcca3db",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/03b4e1c3496ae009a0e1df1a39c48b051dcca3db",
        "files": [
          "crypto/bio/b_addr.c"
        ],
        "message": "Fixed address family test error for AF_UNIX in BIO_ADDR_make\n\nCLA: trivial\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4298)\n\n(cherry picked from commit 177503752b24299cc97ccf07062a3b79c4f28899)",
        "before_after_code_files": [
          "crypto/bio/b_addr.c||crypto/bio/b_addr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/b_addr.c||crypto/bio/b_addr.c": [
          "File: crypto/bio/b_addr.c -> crypto/bio/b_addr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     }",
          "77: #endif",
          "78: #ifdef AF_UNIX",
          "80:         ap->s_un = *(const struct sockaddr_un *)sa;",
          "81:         return 1;",
          "82:     }",
          "",
          "[Removed Lines]",
          "79:     if (ap->sa.sa_family == AF_UNIX) {",
          "",
          "[Added Lines]",
          "79:     if (sa->sa_family == AF_UNIX) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}