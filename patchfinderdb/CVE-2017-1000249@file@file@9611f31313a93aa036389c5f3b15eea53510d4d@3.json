{
  "cve_id": "CVE-2017-1000249",
  "cve_desc": "An issue in file() was introduced in commit 9611f31313a93aa036389c5f3b15eea53510d4d1 (Oct 2016) lets an attacker overwrite a fixed 20 bytes stack buffer with a specially crafted .notes section in an ELF binary. This was fixed in commit 35c94dc6acc418f1ad7f6241a6680e5327495793 (Aug 2017).",
  "repo": "file/file",
  "patch_hash": "9611f31313a93aa036389c5f3b15eea53510d4d1",
  "patch_info": {
    "commit_hash": "9611f31313a93aa036389c5f3b15eea53510d4d1",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/9611f31313a93aa036389c5f3b15eea53510d4d",
    "files": [
      "src/readelf.c"
    ],
    "message": "Extend build-id reporting to 8-byte IDs that lld can generate (Ed Maste)",
    "before_after_code_files": [
      "src/readelf.c||src/readelf.c"
    ]
  },
  "patch_diff": {
    "src/readelf.c||src/readelf.c": [
      "File: src/readelf.c -> src/readelf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "31: #endif",
      "33: #ifdef BUILTIN_ELF",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.126 2015/11/16 16:03:45 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.127 2015/11/18 12:29:29 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "509:     size_t noff, size_t doff, int *flags)",
      "510: {",
      "511:  if (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&",
      "513:   uint8_t desc[20];",
      "514:   uint32_t i;",
      "518:    return 1;",
      "519:   (void)memcpy(desc, &nbuf[doff], descsz);",
      "520:   for (i = 0; i < descsz; i++)",
      "",
      "[Removed Lines]",
      "512:      type == NT_GNU_BUILD_ID && (descsz == 16 || descsz == 20)) {",
      "516:   if (file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :",
      "517:       \"sha1\") == -1)",
      "",
      "[Added Lines]",
      "512:      type == NT_GNU_BUILD_ID && (descsz >= 4 || descsz <= 20)) {",
      "514:   const char *btype;",
      "517:   switch (descsz) {",
      "518:   case 8:",
      "519:       btype = \"xxHash\";",
      "520:       break;",
      "521:   case 16:",
      "522:       btype = \"md5/uuid\";",
      "523:       break;",
      "524:   case 20:",
      "525:       btype = \"sha1\";",
      "526:       break;",
      "527:   default:",
      "528:       btype = \"unknown\";",
      "529:       break;",
      "530:   }",
      "531:   if (file_printf(ms, \", BuildID[%s]=\", btype) == -1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0ac0678c52e248fd2a632a84b638694f205aef9d",
      "candidate_info": {
        "commit_hash": "0ac0678c52e248fd2a632a84b638694f205aef9d",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/0ac0678c52e248fd2a632a84b638694f205aef9d",
        "files": [
          "src/readelf.c",
          "src/readelf.h"
        ],
        "message": "Print more info about NetBSD core files.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c",
          "src/readelf.h||src/readelf.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.134 2017/03/29 15:57:48 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.135 2017/03/29 15:58:12 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "715:  case OS_STYLE_NETBSD:",
          "716:   if (type == NT_NETBSD_CORE_PROCINFO) {",
          "717:    char sbuf[512];",
          "725:        file_printable(sbuf, sizeof(sbuf),",
          "737:     return 1;",
          "739:    return 1;",
          "740:   }",
          "",
          "[Removed Lines]",
          "718:    uint32_t signo;",
          "724:    if (file_printf(ms, \", from '%.31s'\",",
          "726:        (const char *)&nbuf[doff + 0x7c])) == -1)",
          "727:     return 1;",
          "733:    (void)memcpy(&signo, &nbuf[doff + 0x08],",
          "734:        sizeof(signo));",
          "735:    if (file_printf(ms, \" (signal %u)\",",
          "736:        elf_getu32(swap, signo)) == -1)",
          "",
          "[Added Lines]",
          "718:    struct NetBSD_elfcore_procinfo pi;",
          "719:    memset(&pi, 0, sizeof(pi));",
          "720:    memcpy(&pi, nbuf + doff, descsz);",
          "722:    if (file_printf(ms, \", from '%.31s', pid=%u, uid=%u, \"",
          "723:        \"gid=%u, nlwps=%u, lwp=%u (signal %u/code %u)\",",
          "725:        CAST(char *, pi.cpi_name)),",
          "726:        elf_getu32(swap, pi.cpi_pid),",
          "727:        elf_getu32(swap, pi.cpi_euid),",
          "728:        elf_getu32(swap, pi.cpi_egid),",
          "729:        elf_getu32(swap, pi.cpi_nlwps),",
          "730:        elf_getu32(swap, pi.cpi_siglwp),",
          "731:        elf_getu32(swap, pi.cpi_signo),",
          "732:        elf_getu32(swap, pi.cpi_sigcode)) == -1)",
          "",
          "---------------"
        ],
        "src/readelf.h||src/readelf.h": [
          "File: src/readelf.h -> src/readelf.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "230: } Elf64_Shdr;",
          "232: #define NT_NETBSD_CORE_PROCINFO  1",
          "235: typedef struct elf_note {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233: #define NT_NETBSD_CORE_AUXV  2",
          "235: struct NetBSD_elfcore_procinfo {",
          "259: };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c52f5df893e0cef025debbb2deb8c54c4980a167",
      "candidate_info": {
        "commit_hash": "c52f5df893e0cef025debbb2deb8c54c4980a167",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/c52f5df893e0cef025debbb2deb8c54c4980a167",
        "files": [
          "src/readelf.c"
        ],
        "message": "Extend build-id reporting to 8-byte IDs that lld can generate (Ed Maste)",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.127 2015/11/18 12:29:29 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.128 2016/10/04 21:43:10 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "509:     size_t noff, size_t doff, int *flags)",
          "510: {",
          "511:  if (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&",
          "513:   uint8_t desc[20];",
          "514:   uint32_t i;",
          "518:    return 1;",
          "519:   (void)memcpy(desc, &nbuf[doff], descsz);",
          "520:   for (i = 0; i < descsz; i++)",
          "",
          "[Removed Lines]",
          "512:      type == NT_GNU_BUILD_ID && (descsz == 16 || descsz == 20)) {",
          "516:   if (file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :",
          "517:       \"sha1\") == -1)",
          "",
          "[Added Lines]",
          "512:      type == NT_GNU_BUILD_ID && (descsz >= 4 || descsz <= 20)) {",
          "514:   const char *btype;",
          "517:   switch (descsz) {",
          "518:   case 8:",
          "519:       btype = \"xxHash\";",
          "520:       break;",
          "521:   case 16:",
          "522:       btype = \"md5/uuid\";",
          "523:       break;",
          "524:   case 20:",
          "525:       btype = \"sha1\";",
          "526:       break;",
          "527:   default:",
          "528:       btype = \"unknown\";",
          "529:       break;",
          "530:   }",
          "531:   if (file_printf(ms, \", BuildID[%s]=\", btype) == -1)",
          "",
          "---------------"
        ]
      }
    }
  ]
}