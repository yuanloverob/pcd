{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "21b1b87d12a36e7912a8237241267402c91e5162",
      "candidate_info": {
        "commit_hash": "21b1b87d12a36e7912a8237241267402c91e5162",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/21b1b87d12a36e7912a8237241267402c91e5162",
        "files": [
          "src/win/tty.c"
        ],
        "message": "windows: add VT100 codes ?25l and ?25h",
        "before_after_code_files": [
          "src/win/tty.c||src/win/tty.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/tty.c||src/win/tty.c": [
          "File: src/win/tty.c -> src/win/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1316:   return 0;",
          "1317: }",
          "1320: static int uv_tty_write_bufs(uv_tty_t* handle,",
          "1321:                              const uv_buf_t bufs[],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1319: static int uv_tty_set_cursor_visibility(uv_tty_t* handle,",
          "1320:                                         BOOL visible,",
          "1321:                                         DWORD* error) {",
          "1322:   CONSOLE_CURSOR_INFO cursor_info;",
          "1324:   if (!GetConsoleCursorInfo(handle->handle, &cursor_info)) {",
          "1326:     return -1;",
          "1327:   }",
          "1329:   cursor_info.bVisible = visible;",
          "1331:   if (!SetConsoleCursorInfo(handle->handle, &cursor_info)) {",
          "1333:     return -1;",
          "1334:   }",
          "1336:   return 0;",
          "1337: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1527:               continue;",
          "1528:             }",
          "1530:           } else if (utf8_codepoint >= '@' && utf8_codepoint <= '~' &&",
          "1531:                      (handle->ansi_csi_argc > 0 || utf8_codepoint != '[')) {",
          "1532:             int x, y, d;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1549:           } else if (utf8_codepoint == '?' && !(ansi_parser_state & ANSI_IN_ARG) &&",
          "1550:                      handle->ansi_csi_argc == 0) {",
          "1554:             continue;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1629:                 FLUSH_TEXT();",
          "1630:                 uv_tty_restore_state(handle, 0, error);",
          "1631:                 break;",
          "1632:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1659:               case 'l':",
          "1661:                 if (handle->ansi_csi_argc == 1 &&",
          "1662:                     handle->ansi_csi_argv[0] == 25) {",
          "1663:                   FLUSH_TEXT();",
          "1664:                   uv_tty_set_cursor_visibility(handle, 0, error);",
          "1665:                 }",
          "1666:                 break;",
          "1668:               case 'h':",
          "1670:                 if (handle->ansi_csi_argc == 1 &&",
          "1671:                     handle->ansi_csi_argv[0] == 25) {",
          "1672:                   FLUSH_TEXT();",
          "1673:                   uv_tty_set_cursor_visibility(handle, 1, error);",
          "1674:                 }",
          "1675:                 break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5c10e82ae0bc99eff86d4b9baff1f1aa0bf84c0a",
      "candidate_info": {
        "commit_hash": "5c10e82ae0bc99eff86d4b9baff1f1aa0bf84c0a",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/5c10e82ae0bc99eff86d4b9baff1f1aa0bf84c0a",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "src/version.c"
        ],
        "message": "2013.04.11, Version 0.11.1 (Unstable)\n\nThis is the first versioned release from the current unstable libuv\nbranch.\n\nChanges since Node.js v0.11.0:\n\n* all platforms: nanosecond resolution support for uv_fs_[fl]stat\n  (Timothy J. Fontaine)\n\n* all platforms: add netmask to uv_interface_address (Ben Kelly)\n\n* unix: make sure the `status` parameter passed to the `uv_getaddrinfo`\n  is 0 or -1 (Ben Noordhuis)\n\n* unix: limit the number of iovecs written in a single `writev` syscall\n  to IOV_MAX (Fedor Indutny)\n\n* unix: add dtrace probes for tick-start and tick-stop (Timothy J.\n  Fontaine)\n\n* mingw-w64: don't call _set_invalid_parameter_handler (Nils Maier)\n\n* windows: fix memory leak in fs__sendfile (Shannen Saez)\n\n* windows: fix edge case bugs in uv_cpu_info (Bert Belder)\n\n* include: no longer ship with / include ngx-queue.h (Ben Noordhuis)\n\n* include: remove UV_VERSION_* macros from uv.h (Ben Noordhuis)\n\n* documentation updates (Kristian Evensen, Ben Kelly, Ben Noordhuis)\n\n* build: fix dtrace-enabled builds (Ben Noordhuis, Timothy J. Fontaine)\n\n* build: gyp disable thin archives (Timothy J. Fontaine)\n\n* build: add support for Visual Studio 2012 (Nicholas Vavilov)",
        "before_after_code_files": [
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #define UV_VERSION_MAJOR 0",
          "31: #define UV_VERSION_MINOR 11",
          "32: #define UV_VERSION_PATCH 1",
          "36: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "",
          "[Removed Lines]",
          "33: #define UV_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "33: #define UV_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d1e6be1460f555a1f8a4063d7642696aa7238769",
      "candidate_info": {
        "commit_hash": "d1e6be1460f555a1f8a4063d7642696aa7238769",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/d1e6be1460f555a1f8a4063d7642696aa7238769",
        "files": [
          "src/win/tcp.c"
        ],
        "message": "tcp: reveal bind-time errors before listen\n\nChanged uv_tcp_duplicate_socket to reveal any bind-time errors\nbefore calling listen().\n\nThis fix is 100% windows specific.\n\nIt helps fix Node.js unite test test-cluster-bind-twice on Windows.",
        "before_after_code_files": [
          "src/win/tcp.c||src/win/tcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/tcp.c||src/win/tcp.c": [
          "File: src/win/tcp.c -> src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1171:       if (!(handle->flags & UV_HANDLE_BOUND)) {",
          "1172:         return ERROR_INVALID_PARAMETER;",
          "1173:       }",
          "1174:       if (listen(handle->socket, SOMAXCONN) == SOCKET_ERROR) {",
          "1175:         return WSAGetLastError();",
          "1176:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1176:       if (handle->flags & UV_HANDLE_BIND_ERROR) {",
          "1177:         return handle->bind_error;",
          "1178:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76709c6b332b3606396ad60892d1ff6bb2481ab8",
      "candidate_info": {
        "commit_hash": "76709c6b332b3606396ad60892d1ff6bb2481ab8",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/76709c6b332b3606396ad60892d1ff6bb2481ab8",
        "files": [
          "src/win/fs.c"
        ],
        "message": "windows: remove unused is_path_dir() function",
        "before_after_code_files": [
          "src/win/fs.c||src/win/fs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/fs.c||src/win/fs.c": [
          "File: src/win/fs.c -> src/win/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229: }",
          "243: INLINE static int fs__readlink_handle(HANDLE handle, char** target_ptr,",
          "244:     uint64_t* target_len_ptr) {",
          "245:   char buffer[MAXIMUM_REPARSE_DATA_BUFFER_SIZE];",
          "",
          "[Removed Lines]",
          "232: static int is_path_dir(const WCHAR* path) {",
          "233:   DWORD attr = GetFileAttributesW(path);",
          "235:   if (attr != INVALID_FILE_ATTRIBUTES) {",
          "236:     return attr & FILE_ATTRIBUTE_DIRECTORY ? 1 : 0;",
          "237:   } else {",
          "238:     return 0;",
          "239:   }",
          "240: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd23dbf5c6e2d72efe9d50283b84a5f1eb8c186a",
      "candidate_info": {
        "commit_hash": "fd23dbf5c6e2d72efe9d50283b84a5f1eb8c186a",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/fd23dbf5c6e2d72efe9d50283b84a5f1eb8c186a",
        "files": [
          "src/unix/internal.h",
          "src/unix/proctitle.c",
          "src/unix/threadpool.c"
        ],
        "message": "unix: clean up __attribute__((quux)) usage\n\nMacro-ify __attribute__((destructor)) and __attribute__((unused)).\n\nThe macros are no-ops when the compiler does not support function\nattributes.",
        "before_after_code_files": [
          "src/unix/internal.h||src/unix/internal.h",
          "src/unix/proctitle.c||src/unix/proctitle.c",
          "src/unix/threadpool.c||src/unix/threadpool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/internal.h||src/unix/internal.h": [
          "File: src/unix/internal.h -> src/unix/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   }                                                                           \\",
          "68:   while (0)",
          "70: #if defined(__linux__)",
          "71: # define UV__POLLIN   UV__EPOLLIN",
          "72: # define UV__POLLOUT  UV__EPOLLOUT",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74: #if defined(__clang__) ||                                                     \\",
          "75:     defined(__GNUC__) ||                                                      \\",
          "76:     defined(__INTEL_COMPILER) ||                                              \\",
          "77:     defined(__SUNPRO_C)",
          "78: # define UV_DESTRUCTOR(declaration) __attribute__((destructor)) declaration",
          "79: # define UV_UNUSED(declaration)     __attribute__((unused)) declaration",
          "80: #else",
          "81: # define UV_DESTRUCTOR(declaration) declaration",
          "82: # define UV_UNUSED(declaration)     declaration",
          "83: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "247:   req->type = type;",
          "248:   uv__req_register(loop, req);",
          "249: }",
          "250: #define uv__req_init(loop, req, type) \\",
          "251:   uv__req_init((loop), (uv_req_t*)(req), (type))",
          "255:   loop->time = uv__hrtime() / 1000000;",
          "256: }",
          "260:   char* s;",
          "262:   s = strrchr(path, '/');",
          "",
          "[Removed Lines]",
          "245: __attribute__((unused))",
          "246: static void uv__req_init(uv_loop_t* loop, uv_req_t* req, uv_req_type type) {",
          "253: __attribute__((unused))",
          "254: static void uv__update_time(uv_loop_t* loop) {",
          "258: __attribute__((unused))",
          "259: static char* uv__basename_r(const char* path) {",
          "",
          "[Added Lines]",
          "260: UV_UNUSED(static void uv__req_init(uv_loop_t* loop,",
          "261:                                    uv_req_t* req,",
          "262:                                    uv_req_type type)) {",
          "269: UV_UNUSED(static void uv__update_time(uv_loop_t* loop)) {",
          "273: UV_UNUSED(static char* uv__basename_r(const char* path)) {",
          "",
          "---------------"
        ],
        "src/unix/proctitle.c||src/unix/proctitle.c": [
          "File: src/unix/proctitle.c -> src/unix/proctitle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96: }",
          "102:   args_mem = NULL;",
          "103: }",
          "",
          "[Removed Lines]",
          "99: __attribute__((destructor))",
          "100: static void free_args_mem(void) {",
          "",
          "[Added Lines]",
          "99: UV_DESTRUCTOR(static void free_args_mem(void)) {",
          "",
          "---------------"
        ],
        "src/unix/threadpool.c||src/unix/threadpool.c": [
          "File: src/unix/threadpool.c -> src/unix/threadpool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "129: }",
          "135:   unsigned int i;",
          "137:   if (initialized == 0)",
          "",
          "[Removed Lines]",
          "132: #if defined(__GNUC__)",
          "133: __attribute__((destructor))",
          "134: static void cleanup(void) {",
          "",
          "[Added Lines]",
          "132: UV_DESTRUCTOR(static void cleanup(void)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:   nthreads = 0;",
          "154:   initialized = 0;",
          "155: }",
          "159: void uv__work_submit(uv_loop_t* loop,",
          "",
          "[Removed Lines]",
          "156: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}