{
  "cve_id": "CVE-2017-7746",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.5 and 2.0.0 to 2.0.11, the SLSK dissector could go into an infinite loop, triggered by packet injection or a malformed capture file. This was addressed in epan/dissectors/packet-slsk.c by adding checks for the remaining length.",
  "repo": "wireshark/wireshark",
  "patch_hash": "9830eadad0d850aa3318120120f5ef5b2d66337b",
  "patch_info": {
    "commit_hash": "9830eadad0d850aa3318120120f5ef5b2d66337b",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/9830eadad0d850aa3318120120f5ef5b2d66337b",
    "files": [
      "epan/dissectors/packet-slsk.c"
    ],
    "message": "packet-slsk.c: Fix (many potential) SLSK long dissector loops\n\nBug: 13576\nChange-Id: I9a0f6c6b682877ed7b5ce4b6b249d4aa4034096a\nReviewed-on: https://code.wireshark.org/review/21020\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-slsk.c||epan/dissectors/packet-slsk.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-slsk.c||epan/dissectors/packet-slsk.c": [
      "File: epan/dissectors/packet-slsk.c -> epan/dissectors/packet-slsk.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "788:           i=0; j = tvb_get_letohl(tvb, offset);",
      "789:           proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
      "790:           offset += 4;",
      "791:           while (i<j){",
      "792:             if (check_slsk_format(tvb, offset, \"s*\")) {",
      "793:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "791:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "792:             break;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "805:             i=0; j = tvb_get_letohl(tvb, offset);",
      "806:             proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
      "807:             offset += 4;",
      "808:             while (i<j){",
      "809:               if (check_slsk_format(tvb, offset, \"i*\")) {",
      "810:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_status_code, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "810:             if (j > tvb_reported_length_remaining(tvb, offset))",
      "811:               break;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "818:             i=0; j = tvb_get_letohl(tvb, offset);",
      "819:             proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
      "820:             offset += 4;",
      "821:             while (i<j){",
      "822:               if (check_slsk_format(tvb, offset, \"iiiii*\")) {",
      "823:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "825:             if (j > tvb_reported_length_remaining(tvb, offset))",
      "826:               break;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "844:             proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "845:               \"Number of Slotsfull Records: %d\", tvb_get_letohl(tvb, offset));",
      "846:             offset += 4;",
      "847:             while (i<j){",
      "848:               if (check_slsk_format(tvb, offset, \"i*\")) {",
      "849:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "853:             if (j > tvb_reported_length_remaining(tvb, offset))",
      "854:               break;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1496:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "1497:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
      "1498:           offset += 4;",
      "1499:           while (i<j){",
      "1500:             if (check_slsk_format(tvb, offset, \"si*\")) {",
      "1501:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1507:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "1508:             break;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1544:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "1545:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
      "1546:           offset += 4;",
      "1547:           while (i<j){",
      "1548:             if (check_slsk_format(tvb, offset, \"si*\")) {",
      "1549:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1557:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "1558:             break;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1588:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "1589:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
      "1590:           offset += 4;",
      "1591:           while (i<j){",
      "1592:             if (check_slsk_format(tvb, offset, \"s*\")) {",
      "1593:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1603:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "1604:             break;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1619:           proto_tree_add_uint_format(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "1620:             \"Number of Strings: %d\", tvb_get_letohl(tvb, offset));",
      "1621:           offset += 4;",
      "1622:           while (i<j){",
      "1623:             if (check_slsk_format(tvb, offset, \"s*\")) {",
      "1624:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1636:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "1637:             break;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1696:           i=0; j = tvb_get_letohl(tvb, offset);",
      "1697:           proto_tree_add_uint(slsk_tree, hf_slsk_number_of_rooms, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
      "1698:           offset += 4;",
      "1699:           while (i<j){",
      "1700:             if (check_slsk_format(tvb, offset, \"s*\")) {",
      "1701:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1715:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "1716:             break;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1801:           i=0; j = tvb_get_letohl(tvb, offset);",
      "1802:           proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
      "1803:           offset += 4;",
      "1804:           while (i<j){",
      "1805:             if (check_slsk_format(tvb, offset, \"s*\")) {",
      "1806:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1822:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "1823:             break;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1831:             i=0; j = tvb_get_letohl(tvb, offset);",
      "1832:             proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
      "1833:             offset += 4;",
      "1834:             while (i<j){",
      "1835:               if (check_slsk_format(tvb, offset, \"iiiii*\")) {",
      "1836:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1854:             if (j > tvb_reported_length_remaining(tvb, offset))",
      "1855:               break;",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "1857:             proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "1858:               \"Number of Slotsfull Records: %d\", tvb_get_letohl(tvb, offset));",
      "1859:             offset += 4;",
      "1860:             while (i<j){",
      "1861:               if (check_slsk_format(tvb, offset, \"i*\")) {",
      "1862:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1882:             if (j > tvb_reported_length_remaining(tvb, offset))",
      "1883:               break;",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "1910:           proto_tree_add_uint_format(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "1911:             \"Number of Privileged Users: %d\", tvb_get_letohl(tvb, offset));",
      "1912:           offset += 4;",
      "1913:           while (i<j){",
      "1914:             if (check_slsk_format(tvb, offset, \"s*\")) {",
      "1915:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1937:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "1938:             break;",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "2105:           proto_tree_add_uint_format(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "2106:             \"Number of Parent Addresses: %d\", tvb_get_letohl(tvb, offset));",
      "2107:           offset += 4;",
      "2108:           while (i<j){",
      "2109:             if (check_slsk_format(tvb, offset, \"sii*\")) {",
      "2110:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2134:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "2135:             break;",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "2171:           i=0; j = tvb_get_letohl(tvb, offset);",
      "2172:           proto_tree_add_item(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, ENC_LITTLE_ENDIAN);",
      "2173:           offset += 4;",
      "2174:           while (i<j){",
      "2175:             if (check_slsk_format(tvb, offset, \"si*\")) {",
      "2176:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2202:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "2203:             break;",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "2215:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "2216:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
      "2217:           offset += 4;",
      "2218:           while (i<j){",
      "2219:             if (check_slsk_format(tvb, offset, \"si*\")) {",
      "2220:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2248:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "2249:             break;",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "2259:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
      "2260:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
      "2261:           offset += 4;",
      "2262:           while (i<j){",
      "2263:             if (check_slsk_format(tvb, offset, \"s*\")) {",
      "2264:               guint32 len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2294:           if (j > tvb_reported_length_remaining(tvb, offset))",
      "2295:             break;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "58e69cc769dea24b721abd8a29f9eedc11024b7e",
      "candidate_info": {
        "commit_hash": "58e69cc769dea24b721abd8a29f9eedc11024b7e",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/58e69cc769dea24b721abd8a29f9eedc11024b7e",
        "files": [
          "epan/dissectors/packet-slsk.c"
        ],
        "message": "packet-slsk.c: Fix (many potential) SLSK long dissector loops\n\nBug: 13576\nChange-Id: I9a0f6c6b682877ed7b5ce4b6b249d4aa4034096a\nReviewed-on: https://code.wireshark.org/review/21020\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 9830eadad0d850aa3318120120f5ef5b2d66337b)\nReviewed-on: https://code.wireshark.org/review/21026\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>",
        "before_after_code_files": [
          "epan/dissectors/packet-slsk.c||epan/dissectors/packet-slsk.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-slsk.c||epan/dissectors/packet-slsk.c"
          ],
          "candidate": [
            "epan/dissectors/packet-slsk.c||epan/dissectors/packet-slsk.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-slsk.c||epan/dissectors/packet-slsk.c": [
          "File: epan/dissectors/packet-slsk.c -> epan/dissectors/packet-slsk.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "790:           i=0; j = tvb_get_letohl(tvb, offset);",
          "791:           proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "792:           offset += 4;",
          "793:           while (i<j){",
          "794:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "795:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "793:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "794:             break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "807:             i=0; j = tvb_get_letohl(tvb, offset);",
          "808:             proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "809:             offset += 4;",
          "810:             while (i<j){",
          "811:               if (check_slsk_format(tvb, offset, \"i*\")) {",
          "812:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_status_code, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "812:             if (j > tvb_reported_length_remaining(tvb, offset))",
          "813:               break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "820:             i=0; j = tvb_get_letohl(tvb, offset);",
          "821:             proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "822:             offset += 4;",
          "823:             while (i<j){",
          "824:               if (check_slsk_format(tvb, offset, \"iiiii*\")) {",
          "825:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "827:             if (j > tvb_reported_length_remaining(tvb, offset))",
          "828:               break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "846:             proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "847:               \"Number of Slotsfull Records: %d\", tvb_get_letohl(tvb, offset));",
          "848:             offset += 4;",
          "849:             while (i<j){",
          "850:               if (check_slsk_format(tvb, offset, \"i*\")) {",
          "851:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "855:             if (j > tvb_reported_length_remaining(tvb, offset))",
          "856:               break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1498:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1499:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
          "1500:           offset += 4;",
          "1501:           while (i<j){",
          "1502:             if (check_slsk_format(tvb, offset, \"si*\")) {",
          "1503:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1509:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1510:             break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1546:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1547:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
          "1548:           offset += 4;",
          "1549:           while (i<j){",
          "1550:             if (check_slsk_format(tvb, offset, \"si*\")) {",
          "1551:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1559:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1560:             break;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1590:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1591:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
          "1592:           offset += 4;",
          "1593:           while (i<j){",
          "1594:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "1595:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1605:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1606:             break;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1621:           proto_tree_add_uint_format(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1622:             \"Number of Strings: %d\", tvb_get_letohl(tvb, offset));",
          "1623:           offset += 4;",
          "1624:           while (i<j){",
          "1625:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "1626:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1638:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1639:             break;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1698:           i=0; j = tvb_get_letohl(tvb, offset);",
          "1699:           proto_tree_add_uint(slsk_tree, hf_slsk_number_of_rooms, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "1700:           offset += 4;",
          "1701:           while (i<j){",
          "1702:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "1703:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1717:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1718:             break;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1803:           i=0; j = tvb_get_letohl(tvb, offset);",
          "1804:           proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "1805:           offset += 4;",
          "1806:           while (i<j){",
          "1807:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "1808:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1824:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1825:             break;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1833:             i=0; j = tvb_get_letohl(tvb, offset);",
          "1834:             proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "1835:             offset += 4;",
          "1836:             while (i<j){",
          "1837:               if (check_slsk_format(tvb, offset, \"iiiii*\")) {",
          "1838:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1856:             if (j > tvb_reported_length_remaining(tvb, offset))",
          "1857:               break;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1859:             proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1860:               \"Number of Slotsfull Records: %d\", tvb_get_letohl(tvb, offset));",
          "1861:             offset += 4;",
          "1862:             while (i<j){",
          "1863:               if (check_slsk_format(tvb, offset, \"i*\")) {",
          "1864:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1884:             if (j > tvb_reported_length_remaining(tvb, offset))",
          "1885:               break;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1912:           proto_tree_add_uint_format(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1913:             \"Number of Privileged Users: %d\", tvb_get_letohl(tvb, offset));",
          "1914:           offset += 4;",
          "1915:           while (i<j){",
          "1916:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "1917:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1939:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1940:             break;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2107:           proto_tree_add_uint_format(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "2108:             \"Number of Parent Addresses: %d\", tvb_get_letohl(tvb, offset));",
          "2109:           offset += 4;",
          "2110:           while (i<j){",
          "2111:             if (check_slsk_format(tvb, offset, \"sii*\")) {",
          "2112:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2136:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "2137:             break;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2173:           i=0; j = tvb_get_letohl(tvb, offset);",
          "2174:           proto_tree_add_item(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, ENC_LITTLE_ENDIAN);",
          "2175:           offset += 4;",
          "2176:           while (i<j){",
          "2177:             if (check_slsk_format(tvb, offset, \"si*\")) {",
          "2178:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2204:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "2205:             break;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2217:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "2218:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
          "2219:           offset += 4;",
          "2220:           while (i<j){",
          "2221:             if (check_slsk_format(tvb, offset, \"si*\")) {",
          "2222:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2250:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "2251:             break;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2261:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "2262:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
          "2263:           offset += 4;",
          "2264:           while (i<j){",
          "2265:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "2266:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2296:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "2297:             break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30bb914a3988fad14f135bf690c33a2feda6daa8",
      "candidate_info": {
        "commit_hash": "30bb914a3988fad14f135bf690c33a2feda6daa8",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/30bb914a3988fad14f135bf690c33a2feda6daa8",
        "files": [
          "epan/dissectors/packet-slsk.c"
        ],
        "message": "packet-slsk.c: Fix (many potential) SLSK long dissector loops\n\nBug: 13576\nChange-Id: I9a0f6c6b682877ed7b5ce4b6b249d4aa4034096a\nReviewed-on: https://code.wireshark.org/review/21020\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 9830eadad0d850aa3318120120f5ef5b2d66337b)\nReviewed-on: https://code.wireshark.org/review/21025\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>",
        "before_after_code_files": [
          "epan/dissectors/packet-slsk.c||epan/dissectors/packet-slsk.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-slsk.c||epan/dissectors/packet-slsk.c"
          ],
          "candidate": [
            "epan/dissectors/packet-slsk.c||epan/dissectors/packet-slsk.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-slsk.c||epan/dissectors/packet-slsk.c": [
          "File: epan/dissectors/packet-slsk.c -> epan/dissectors/packet-slsk.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "790:           i=0; j = tvb_get_letohl(tvb, offset);",
          "791:           proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "792:           offset += 4;",
          "793:           while (i<j){",
          "794:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "795:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "793:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "794:             break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "807:             i=0; j = tvb_get_letohl(tvb, offset);",
          "808:             proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "809:             offset += 4;",
          "810:             while (i<j){",
          "811:               if (check_slsk_format(tvb, offset, \"i*\")) {",
          "812:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_status_code, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "812:             if (j > tvb_reported_length_remaining(tvb, offset))",
          "813:               break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "820:             i=0; j = tvb_get_letohl(tvb, offset);",
          "821:             proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "822:             offset += 4;",
          "823:             while (i<j){",
          "824:               if (check_slsk_format(tvb, offset, \"iiiii*\")) {",
          "825:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "827:             if (j > tvb_reported_length_remaining(tvb, offset))",
          "828:               break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "846:             proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "847:               \"Number of Slotsfull Records: %d\", tvb_get_letohl(tvb, offset));",
          "848:             offset += 4;",
          "849:             while (i<j){",
          "850:               if (check_slsk_format(tvb, offset, \"i*\")) {",
          "851:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "855:             if (j > tvb_reported_length_remaining(tvb, offset))",
          "856:               break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1498:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1499:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
          "1500:           offset += 4;",
          "1501:           while (i<j){",
          "1502:             if (check_slsk_format(tvb, offset, \"si*\")) {",
          "1503:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1509:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1510:             break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1546:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1547:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
          "1548:           offset += 4;",
          "1549:           while (i<j){",
          "1550:             if (check_slsk_format(tvb, offset, \"si*\")) {",
          "1551:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1559:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1560:             break;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1590:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1591:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
          "1592:           offset += 4;",
          "1593:           while (i<j){",
          "1594:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "1595:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1605:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1606:             break;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1621:           proto_tree_add_uint_format(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1622:             \"Number of Strings: %d\", tvb_get_letohl(tvb, offset));",
          "1623:           offset += 4;",
          "1624:           while (i<j){",
          "1625:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "1626:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1638:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1639:             break;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1698:           i=0; j = tvb_get_letohl(tvb, offset);",
          "1699:           proto_tree_add_uint(slsk_tree, hf_slsk_number_of_rooms, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "1700:           offset += 4;",
          "1701:           while (i<j){",
          "1702:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "1703:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1717:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1718:             break;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1803:           i=0; j = tvb_get_letohl(tvb, offset);",
          "1804:           proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "1805:           offset += 4;",
          "1806:           while (i<j){",
          "1807:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "1808:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1824:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1825:             break;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1833:             i=0; j = tvb_get_letohl(tvb, offset);",
          "1834:             proto_tree_add_uint(slsk_tree, hf_slsk_users_in_room, tvb, offset, 4, tvb_get_letohl(tvb, offset));",
          "1835:             offset += 4;",
          "1836:             while (i<j){",
          "1837:               if (check_slsk_format(tvb, offset, \"iiiii*\")) {",
          "1838:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1856:             if (j > tvb_reported_length_remaining(tvb, offset))",
          "1857:               break;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1859:             proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1860:               \"Number of Slotsfull Records: %d\", tvb_get_letohl(tvb, offset));",
          "1861:             offset += 4;",
          "1862:             while (i<j){",
          "1863:               if (check_slsk_format(tvb, offset, \"i*\")) {",
          "1864:                 proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1884:             if (j > tvb_reported_length_remaining(tvb, offset))",
          "1885:               break;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1912:           proto_tree_add_uint_format(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "1913:             \"Number of Privileged Users: %d\", tvb_get_letohl(tvb, offset));",
          "1914:           offset += 4;",
          "1915:           while (i<j){",
          "1916:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "1917:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1939:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "1940:             break;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2107:           proto_tree_add_uint_format(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "2108:             \"Number of Parent Addresses: %d\", tvb_get_letohl(tvb, offset));",
          "2109:           offset += 4;",
          "2110:           while (i<j){",
          "2111:             if (check_slsk_format(tvb, offset, \"sii*\")) {",
          "2112:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2136:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "2137:             break;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2173:           i=0; j = tvb_get_letohl(tvb, offset);",
          "2174:           proto_tree_add_item(slsk_tree, hf_slsk_number_of_users, tvb, offset, 4, ENC_LITTLE_ENDIAN);",
          "2175:           offset += 4;",
          "2176:           while (i<j){",
          "2177:             if (check_slsk_format(tvb, offset, \"si*\")) {",
          "2178:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2204:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "2205:             break;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2217:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "2218:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
          "2219:           offset += 4;",
          "2220:           while (i<j){",
          "2221:             if (check_slsk_format(tvb, offset, \"si*\")) {",
          "2222:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2250:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "2251:             break;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2261:           proto_tree_add_uint_format(slsk_tree, hf_slsk_integer, tvb, offset, 4, tvb_get_letohl(tvb, offset),",
          "2262:             \"Number of Recommendations: %d\", tvb_get_letohl(tvb, offset));",
          "2263:           offset += 4;",
          "2264:           while (i<j){",
          "2265:             if (check_slsk_format(tvb, offset, \"s*\")) {",
          "2266:               guint32 len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2296:           if (j > tvb_reported_length_remaining(tvb, offset))",
          "2297:             break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}