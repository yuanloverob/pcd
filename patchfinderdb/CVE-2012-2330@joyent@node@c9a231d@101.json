{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c40875ee13d8bab0b909e917a12282b06b892037",
      "candidate_info": {
        "commit_hash": "c40875ee13d8bab0b909e917a12282b06b892037",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c40875ee13d8bab0b909e917a12282b06b892037",
        "files": [
          "lib/repl.js"
        ],
        "message": "repl: fix buffer clearing after npm command",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "285:           self.outputStream.write('npm should be run outside of the ' +",
          "286:                                   'node repl, in your normal shell.\\n' +",
          "287:                                   '(Press Control-D to exit.)\\n');",
          "289:           self.displayPrompt();",
          "290:           return;",
          "291:         }",
          "",
          "[Removed Lines]",
          "288:           self.bufferedCmd = '';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "986e61255736a74fad1d96cc928f049c93734e05",
      "candidate_info": {
        "commit_hash": "986e61255736a74fad1d96cc928f049c93734e05",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/986e61255736a74fad1d96cc928f049c93734e05",
        "files": [
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/error.c",
          "deps/uv/src/unix/udp.c",
          "deps/uv/src/win/error.c",
          "deps/uv/src/win/tty.c",
          "deps/uv/src/win/udp.c",
          "deps/uv/test/test-fs.c",
          "deps/uv/test/test-list.h"
        ],
        "message": "uv: upgrade to b88bc43",
        "before_after_code_files": [
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c",
          "deps/uv/src/unix/udp.c||deps/uv/src/unix/udp.c",
          "deps/uv/src/win/error.c||deps/uv/src/win/error.c",
          "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c",
          "deps/uv/src/win/udp.c||deps/uv/src/win/udp.c",
          "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:   XX( 45, EAISOCKTYPE, \"\") \\",
          "116:   XX( 46, ESHUTDOWN, \"\") \\",
          "117:   XX( 47, EEXIST, \"file already exists\") \\",
          "121: #define UV_ERRNO_GEN(val, name, s) UV_##name = val,",
          "",
          "[Removed Lines]",
          "118:   XX( 48, ESRCH, \"no such process\")",
          "",
          "[Added Lines]",
          "118:   XX( 48, ESRCH, \"no such process\") \\",
          "119:   XX( 49, ENAMETOOLONG, \"name too long\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "631:     const char* multicast_addr, const char* interface_addr,",
          "632:     uv_membership membership);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "647: UV_EXTERN int uv_udp_set_multicast_loop(uv_udp_t* handle, int on);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "645: int uv_udp_set_multicast_ttl(uv_udp_t* handle, int ttl);",
          "",
          "[Added Lines]",
          "660: UV_EXTERN int uv_udp_set_multicast_ttl(uv_udp_t* handle, int ttl);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "658: int uv_udp_set_broadcast(uv_udp_t* handle, int on);",
          "",
          "[Added Lines]",
          "673: UV_EXTERN int uv_udp_set_broadcast(uv_udp_t* handle, int on);",
          "686: UV_EXTERN int uv_udp_set_ttl(uv_udp_t* handle, int ttl);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c": [
          "File: deps/uv/src/unix/error.c -> deps/uv/src/unix/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     case EFAULT: return UV_EFAULT;",
          "72:     case EMFILE: return UV_EMFILE;",
          "73:     case EMSGSIZE: return UV_EMSGSIZE;",
          "74:     case EINVAL: return UV_EINVAL;",
          "75:     case ECONNREFUSED: return UV_ECONNREFUSED;",
          "76:     case EADDRINUSE: return UV_EADDRINUSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     case ENAMETOOLONG: return UV_ENAMETOOLONG;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/udp.c||deps/uv/src/unix/udp.c": [
          "File: deps/uv/src/unix/udp.c -> deps/uv/src/unix/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "509:   return 0;",
          "510: }",
          "525:   }",
          "533:   socklen_t socklen;",
          "534:   int saved_errno;",
          "535:   int rv = 0;",
          "",
          "[Removed Lines]",
          "512: int uv_udp_set_multicast_ttl(uv_udp_t* handle, int ttl) {",
          "513:   if (setsockopt(handle->fd, IPPROTO_IP, IP_MULTICAST_TTL, &ttl, sizeof ttl) == -1) {",
          "514:     uv__set_sys_error(handle->loop, errno);",
          "515:     return -1;",
          "516:   }",
          "518:   return 0;",
          "519: }",
          "521: int uv_udp_set_broadcast(uv_udp_t* handle, int on) {",
          "522:   if (setsockopt(handle->fd, SOL_SOCKET, SO_BROADCAST, &on, sizeof on) == -1) {",
          "523:     uv__set_sys_error(handle->loop, errno);",
          "524:     return -1;",
          "527:   return 0;",
          "528: }",
          "531: int uv_udp_getsockname(uv_udp_t* handle, struct sockaddr* name,",
          "532:     int* namelen) {",
          "",
          "[Added Lines]",
          "513: #define X(name, level, option)                                                \\",
          "514:   int uv_udp_set_##name(uv_udp_t* handle, int flag) {                         \\",
          "515:     if (setsockopt(handle->fd, level, option, &flag, sizeof(flag))) {         \\",
          "516:       uv__set_sys_error(handle->loop, errno);                                 \\",
          "517:       return -1;                                                              \\",
          "518:     }                                                                         \\",
          "519:     return 0;                                                                 \\",
          "522: X(multicast_loop, IPPROTO_IP, IP_MULTICAST_LOOP)",
          "523: X(multicast_ttl, IPPROTO_IP, IP_MULTICAST_TTL)",
          "524: X(broadcast, SOL_SOCKET, SO_BROADCAST)",
          "525: X(ttl, IPPROTO_IP, IP_TTL)",
          "527: #undef X",
          "530: int uv_udp_getsockname(uv_udp_t* handle, struct sockaddr* name, int* namelen) {",
          "",
          "---------------"
        ],
        "deps/uv/src/win/error.c||deps/uv/src/win/error.c": [
          "File: deps/uv/src/win/error.c -> deps/uv/src/win/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:     case WSAEMSGSIZE:                       return UV_EMSGSIZE;",
          "95:     case ERROR_NETWORK_UNREACHABLE:         return UV_ENETUNREACH;",
          "96:     case WSAENETUNREACH:                    return UV_ENETUNREACH;",
          "97:     case ERROR_OUTOFMEMORY:                 return UV_ENOMEM;",
          "98:     case ERROR_NOT_CONNECTED:               return UV_ENOTCONN;",
          "99:     case WSAENOTCONN:                       return UV_ENOTCONN;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     case WSAENOBUFS:                        return UV_ENOBUFS;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c": [
          "File: deps/uv/src/win/tty.c -> deps/uv/src/win/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1069:       bg_bright = 0;",
          "1071:     } else if (arg == 1) {",
          "1073:       fg_bright = 1;",
          "1075:     } else if (arg == 21 || arg == 22) {",
          "1077:       fg_bright = 0;",
          "1079:     } else if (arg >= 30 && arg <= 37) {",
          "1081:       fg_color = arg - 30;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1075:     } else if (arg == 2) {",
          "1077:       fg_bright = 0;",
          "1078:       bg_bright = 0;",
          "1080:     } else if (arg == 5) {",
          "1082:       bg_bright = 1;",
          "1088:     } else if (arg == 25) {",
          "1090:       bg_bright = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1091:     } else if (arg ==  49) {",
          "1093:       bg_color = 0;",
          "1094:     }",
          "1095:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1108:     } else if (arg >= 90 && arg <= 97) {",
          "1110:       fg_bright = 1;",
          "1111:       fg_color = arg - 90;",
          "1113:     } else if (arg >= 100 && arg <= 107) {",
          "1115:       bg_bright = 1;",
          "1116:       bg_color = arg - 100;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/udp.c||deps/uv/src/win/udp.c": [
          "File: deps/uv/src/win/udp.c -> deps/uv/src/win/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "579: }",
          "582: int uv_udp_set_multicast_ttl(uv_udp_t* handle, int ttl) {",
          "583:   if (setsockopt(handle->socket, IPPROTO_IP, IP_MULTICAST_TTL,",
          "584:       (const char*)&ttl, sizeof ttl) == -1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "582: int uv_udp_set_multicast_loop(uv_udp_t* handle, int on) {",
          "583:   uv__set_artificial_error(handle->loop, UV_ENOSYS);",
          "584:   return -1;",
          "585: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "600:   return 0;",
          "601: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "610: int uv_udp_set_ttl(uv_udp_t* handle, int ttl) {",
          "611:   uv__set_artificial_error(handle->loop, UV_ENOSYS);",
          "612:   return -1;",
          "613: }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c": [
          "File: deps/uv/test/test-fs.c -> deps/uv/test/test-fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: # define close _close",
          "46: #endif",
          "49: typedef struct {",
          "50:   const char* path;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: #define TOO_LONG_NAME_LENGTH 8192",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "416:   uv_fs_req_cleanup(req);",
          "417: }",
          "420: TEST_IMPL(fs_file_noent) {",
          "421:   uv_fs_t req;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "420: static void open_nametoolong_cb(uv_fs_t* req) {",
          "421:   ASSERT(req->fs_type == UV_FS_OPEN);",
          "422:   ASSERT(req->errorno == UV_ENAMETOOLONG);",
          "423:   ASSERT(req->result == -1);",
          "424:   open_cb_count++;",
          "425:   uv_fs_req_cleanup(req);",
          "426: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "441:   return 0;",
          "442: }",
          "445: static void check_utime(const char* path, double atime, double mtime) {",
          "446:   struct stat* s;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "453: TEST_IMPL(fs_file_nametoolong) {",
          "454:   uv_fs_t req;",
          "455:   int r;",
          "457:   loop = uv_default_loop();",
          "459:   char name[TOO_LONG_NAME_LENGTH + 1];",
          "460:   memset(name, 'a', TOO_LONG_NAME_LENGTH);",
          "461:   name[TOO_LONG_NAME_LENGTH] = 0;",
          "463:   r = uv_fs_open(loop, &req, name, O_RDONLY, 0, NULL);",
          "464:   ASSERT(r == -1);",
          "465:   ASSERT(req.result == -1);",
          "466:   ASSERT(uv_last_error(loop).code == UV_ENAMETOOLONG);",
          "467:   uv_fs_req_cleanup(&req);",
          "469:   r = uv_fs_open(loop, &req, name, O_RDONLY, 0, open_nametoolong_cb);",
          "470:   ASSERT(r == 0);",
          "472:   ASSERT(open_cb_count == 0);",
          "473:   uv_run(loop);",
          "474:   ASSERT(open_cb_count == 1);",
          "476:   return 0;",
          "477: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1543:   unlink(\"test_file2\");",
          "1545:   return 0;",
          "",
          "[Removed Lines]",
          "1546: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: TEST_DECLARE   (spawn_and_ping)",
          "104: TEST_DECLARE   (kill)",
          "105: TEST_DECLARE   (fs_file_noent)",
          "106: TEST_DECLARE   (fs_file_async)",
          "107: TEST_DECLARE   (fs_file_sync)",
          "108: TEST_DECLARE   (fs_async_dir)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106: TEST_DECLARE   (fs_file_nametoolong)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "269: #endif",
          "271:   TEST_ENTRY  (fs_file_noent)",
          "272:   TEST_ENTRY  (fs_file_async)",
          "273:   TEST_ENTRY  (fs_file_sync)",
          "274:   TEST_ENTRY  (fs_async_dir)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "273:   TEST_ENTRY  (fs_file_nametoolong)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "11d8823791644a307a7c521b08d1e213e7836885",
      "candidate_info": {
        "commit_hash": "11d8823791644a307a7c521b08d1e213e7836885",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/11d8823791644a307a7c521b08d1e213e7836885",
        "files": [
          "doc/api/process.markdown",
          "src/node.js",
          "test/simple/test-process-config.js"
        ],
        "message": "process: add `process.config`\n\nThis is the JS representation of the `config.gypi` file that was used when\ncompiling node. With this information, you can tell whether the current node\nbinary has shared or static dependencies, or any other configuration options\nthat may have been used.",
        "before_after_code_files": [
          "src/node.js||src/node.js",
          "test/simple/test-process-config.js||test/simple/test-process-config.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     startup.globalConsole();",
          "39:     startup.processAssert();",
          "40:     startup.processNextTick();",
          "41:     startup.processStdio();",
          "42:     startup.processKillAndExit();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:     startup.processConfig();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "177:     };",
          "178:   };",
          "180:   startup.processNextTick = function() {",
          "181:     var nextTickQueue = [];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181:   startup.processConfig = function() {",
          "183:     var config = NativeModule._source.config;",
          "184:     delete NativeModule._source.config;",
          "187:     config = config.split('\\n').slice(1).join('\\n').replace(/'/g, '\"');",
          "189:     process.config = JSON.parse(config, function(key, value) {",
          "190:       if (value === 'true') return true;",
          "191:       if (value === 'false') return false;",
          "192:       return value;",
          "193:     });",
          "194:   }",
          "",
          "---------------"
        ],
        "test/simple/test-process-config.js||test/simple/test-process-config.js": [
          "File: test/simple/test-process-config.js -> test/simple/test-process-config.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var fs = require('fs');",
          "25: var path = require('path');",
          "28: assert(process.hasOwnProperty('config'));",
          "31: assert(Object(process.config) === process.config);",
          "33: var configPath = path.resolve(__dirname, '..', '..', 'config.gypi');",
          "34: var config = fs.readFileSync(configPath, 'utf8');",
          "37: config = config.split('\\n').slice(1).join('\\n').replace(/'/g, '\"');",
          "38: config = JSON.parse(config, function(key, value) {",
          "39:   if (value === 'true') return true;",
          "40:   if (value === 'false') return false;",
          "41:   return value;",
          "42: });",
          "44: assert.deepEqual(config, process.config);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "298f6bff5b7ce7448b8f537317e6a0369f6d5034",
      "candidate_info": {
        "commit_hash": "298f6bff5b7ce7448b8f537317e6a0369f6d5034",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/298f6bff5b7ce7448b8f537317e6a0369f6d5034",
        "files": [
          "src/node_crypto.cc"
        ],
        "message": "crypto: use CRYPTO_THREADID_set_callback()\n\nDon't use CRYPTO_set_id_callback(), it's deprecated.",
        "before_after_code_files": [
          "src/node_crypto.cc||src/node_crypto.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: static uv_rwlock_t* locks;",
          "94: #ifdef _WIN32",
          "99: }",
          "",
          "[Removed Lines]",
          "93: static unsigned long crypto_id_cb(void) {",
          "95:   return (unsigned long) GetCurrentThreadId();",
          "97:   return (unsigned long) pthread_self();",
          "",
          "[Added Lines]",
          "93: static void crypto_threadid_cb(CRYPTO_THREADID* tid) {",
          "94:   unsigned long val;",
          "97:   val = static_cast<unsigned long>(GetCurrentThreadId());",
          "98: #else",
          "99:   val = static_cast<unsigned long>(pthread_self());",
          "100: #endif",
          "102:   CRYPTO_THREADID_set_numeric(tid, val);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4499:   crypto_lock_init();",
          "4500:   CRYPTO_set_locking_callback(crypto_lock_cb);",
          "4504: #if !defined(OPENSSL_NO_COMP)",
          "",
          "[Removed Lines]",
          "4501:   CRYPTO_set_id_callback(crypto_id_cb);",
          "",
          "[Added Lines]",
          "4505:   CRYPTO_THREADID_set_callback(crypto_threadid_cb);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d6a076ab32b20447f7f173eb8b15bf15539932e",
      "candidate_info": {
        "commit_hash": "2d6a076ab32b20447f7f173eb8b15bf15539932e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2d6a076ab32b20447f7f173eb8b15bf15539932e",
        "files": [
          "deps/v8/SConstruct",
          "deps/v8/tools/gyp/v8.gyp"
        ],
        "message": "Patches floating on v8",
        "before_after_code_files": [
          "deps/v8/tools/gyp/v8.gyp||deps/v8/tools/gyp/v8.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/tools/gyp/v8.gyp||deps/v8/tools/gyp/v8.gyp": [
          "File: deps/v8/tools/gyp/v8.gyp -> deps/v8/tools/gyp/v8.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "641:                 ],",
          "642:               }",
          "643:             ],",
          "644:             ['OS==\"mac\"', {",
          "645:               'sources': [",
          "646:                 '../../src/platform-macos.cc',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "644:             ['OS==\"solaris\"', {",
          "645:                 'sources': [",
          "646:                   '../../src/platform-solaris.cc',",
          "647:                   '../../src/platform-posix.cc'",
          "648:                 ],",
          "649:               }",
          "650:             ],",
          "",
          "---------------"
        ]
      }
    }
  ]
}