{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "388105fff3a3290806f411f0ea1d384adecb7ffa",
      "candidate_info": {
        "commit_hash": "388105fff3a3290806f411f0ea1d384adecb7ffa",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/388105fff3a3290806f411f0ea1d384adecb7ffa",
        "files": [
          "crypto/dsa/dsa_gen.c"
        ],
        "message": "Fix a possible crash in dsa_builtin_paramgen2.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3675)\n(cherry picked from commit fb0a64126b8c11a6961dfa1323c3602b591af7df)",
        "before_after_code_files": [
          "crypto/dsdsa_gen.c||crypto/dsa/dsa_gen.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dsdsa_gen.c||crypto/dsa/dsa_gen.c": [
          "File: crypto/dsdsa_gen.c -> crypto/dsa/dsa_gen.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "379:         if (q == NULL)",
          "380:             goto err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "63175ecff61fb8f3fb83d9e82a28c933ca24494b",
      "candidate_info": {
        "commit_hash": "63175ecff61fb8f3fb83d9e82a28c933ca24494b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/63175ecff61fb8f3fb83d9e82a28c933ca24494b",
        "files": [
          "apps/progs.pl",
          "util/mkdef.pl"
        ],
        "message": "Various small build improvements on mkdef.pl, progs.pl\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4994)\n\n(cherry picked from commit ab307dc645502d025c2760160062d5032da56bf7)",
        "before_after_code_files": [
          "apps/progs.pl||apps/progs.pl",
          "util/mkdef.pl||util/mkdef.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/progs.pl||apps/progs.pl": [
          "File: apps/progs.pl -> apps/progs.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     @{$unified_info{sources}->{$apps_openssl}};",
          "28: foreach my $filename (@openssl_source) {",
          "30:  foreach (grep /$cmdre/, <F>) {",
          "31:   my @foo = /$cmdre/;",
          "32:   $commands{$1} = 1;",
          "",
          "[Removed Lines]",
          "29:  open F, $filename or die \"Coudn't open $_: $!\\n\";",
          "",
          "[Added Lines]",
          "29:  open F, $filename or die \"Couldn't open $filename: $!\\n\";",
          "",
          "---------------"
        ],
        "util/mkdef.pl||util/mkdef.pl": [
          "File: util/mkdef.pl -> util/mkdef.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "106: (my $SO_VARIANT = qq{\\U$target{\"shlib_variant\"}}) =~ s/\\W/_/g;",
          "108: my $debug=0;",
          "110: my $crypto_num= catfile($config{sourcedir},\"util\",\"libcrypto.num\");",
          "111: my $ssl_num=    catfile($config{sourcedir},\"util\",\"libssl.num\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: my $trace=0;",
          "110: my $verbose=0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "202: foreach (@ARGV, split(/ /, $config{options}))",
          "203:  {",
          "204:  $debug=1 if $_ eq \"debug\";",
          "205:  $W32=1 if $_ eq \"32\";",
          "206:  die \"win16 not supported\" if $_ eq \"16\";",
          "207:  if($_ eq \"NT\") {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207:  $trace=1 if $_ eq \"trace\";",
          "208:  $verbose=1 if $_ eq \"verbose\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "444:  foreach $file (split(/\\s+/,$symhacksfile.\" \".$files))",
          "445:   {",
          "446:   my $fn = catfile($config{sourcedir},$file);",
          "448:   open(IN,\"<$fn\") || die \"unable to open $fn:$!\\n\";",
          "449:   my $line = \"\", my $def= \"\";",
          "450:   my %tag = (",
          "",
          "[Removed Lines]",
          "447:   print STDERR \"DEBUG: starting on $fn:\\n\" if $debug;",
          "",
          "[Added Lines]",
          "451:   print STDERR \"TRACE: start reading $fn\\n\" if $trace;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "569:     push(@tag,$1);",
          "570:     $tag{$1}=-1;",
          "571:     print STDERR \"DEBUG: $file: found tag $1 = -1\\n\" if $debug;",
          "573:     push(@tag,\"-\");",
          "575:      my $tmp_1 = $1;",
          "576:      my $tmp_;",
          "577:      foreach $tmp_ (split '\\&\\&',$tmp_1) {",
          "579:       print STDERR \"DEBUG: $file: found tag $1 = -1\\n\" if $debug;",
          "580:       push(@tag,$1);",
          "581:       $tag{$1}=-1;",
          "582:      }",
          "583:     } else {",
          "585:      print STDERR \"DEBUG: $file: found tag $1 = -1\\n\" if $debug;",
          "586:      push(@tag,$1);",
          "587:      $tag{$1}=-1;",
          "",
          "[Removed Lines]",
          "572:    } elsif (/^\\#\\s*if\\s+!defined\\(([^\\)]+)\\)/) {",
          "574:     if (/^\\#\\s*if\\s+(!defined\\(([^\\)]+)\\)(\\s+\\&\\&\\s+!defined\\(([^\\)]+)\\))*)$/) {",
          "578:       $tmp_ =~ /!defined\\(([^\\)]+)\\)/;",
          "584:      print STDERR \"Warning: $file: complicated expression: $_\" if $debug; # because it is O...",
          "",
          "[Added Lines]",
          "576:    } elsif (/^\\#\\s*if\\s+!defined\\s*\\(([^\\)]+)\\)/) {",
          "578:     if (/^\\#\\s*if\\s+(!defined\\s*\\(([^\\)]+)\\)(\\s+\\&\\&\\s+!defined\\s*\\(([^\\)]+)\\))*)$/) {",
          "582:       $tmp_ =~ /!defined\\s*\\(([^\\)]+)\\)/;",
          "588:      print STDERR \"Warning: $file: taking only '!defined($1)' of complicated expression: $_\" if $verbose; # because it is O...",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "591:     push(@tag,$1);",
          "592:     $tag{$1}=1;",
          "593:     print STDERR \"DEBUG: $file: found tag $1 = 1\\n\" if $debug;",
          "595:     push(@tag,\"-\");",
          "597:      my $tmp_1 = $1;",
          "598:      my $tmp_;",
          "599:      foreach $tmp_ (split '\\|\\|',$tmp_1) {",
          "601:       print STDERR \"DEBUG: $file: found tag $1 = 1\\n\" if $debug;",
          "602:       push(@tag,$1);",
          "603:       $tag{$1}=1;",
          "604:      }",
          "605:     } else {",
          "607:      print STDERR \"DEBUG: $file: found tag $1 = 1\\n\" if $debug;",
          "608:      push(@tag,$1);",
          "609:      $tag{$1}=1;",
          "",
          "[Removed Lines]",
          "594:    } elsif (/^\\#\\s*if\\s+defined\\(([^\\)]+)\\)/) {",
          "596:     if (/^\\#\\s*if\\s+(defined\\(([^\\)]+)\\)(\\s+\\|\\|\\s+defined\\(([^\\)]+)\\))*)$/) {",
          "600:       $tmp_ =~ /defined\\(([^\\)]+)\\)/;",
          "606:      print STDERR \"Warning: $file: complicated expression: $_\\n\" if $debug; # because it is O...",
          "",
          "[Added Lines]",
          "598:    } elsif (/^\\#\\s*if\\s+defined\\s*\\(([^\\)]+)\\)/) {",
          "600:     if (/^\\#\\s*if\\s+(defined\\s*\\(([^\\)]+)\\)(\\s+\\|\\|\\s+defined\\s*\\(([^\\)]+)\\))*)$/) {",
          "604:       $tmp_ =~ /defined\\s*\\(([^\\)]+)\\)/;",
          "610:      print STDERR \"Warning: $file: taking only 'defined($1)' of complicated expression: $_\\n\" if $verbose; # because it is O...",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "668:    } elsif (/^\\#\\s*if\\s+/) {",
          "669:     #Some other unrecognized \"if\" style",
          "670:     push(@tag,\"-\");",
          "671:    } elsif (/^\\#\\s*define\\s+(\\w+)\\s+(\\w+)/",
          "672:      && $symhacking && $tag{'TRUE'} != -1) {",
          "673:     # This is for aliasing.  When we find an alias,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "675:     print STDERR \"Warning: $file: ignoring unrecognized expression: $_\\n\" if $verbose; # because it is O...",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "958:    next if(/typedef\\W/);",
          "959:    next if(/\\#define/);",
          "961:    # Reduce argument lists to empty ()",
          "962:    # fold round brackets recursively: (t(*v)(t),t) -> (t{}{},t) -> {}",
          "966:    }",
          "967:    # pretend as we didn't use curly braces: {} -> ()",
          "968:    s/\\{\\}/\\(\\)/gs;",
          "",
          "[Removed Lines]",
          "963:    while(/\\(.*\\)/s) {",
          "964:     s/\\([^\\(\\)]+\\)/\\{\\}/gs;",
          "965:     s/\\(\\s*\\*\\s*(\\w+)\\s*\\{\\}\\s*\\)/$1/gs; #(*f{}) -> f",
          "",
          "[Added Lines]",
          "966:    print STDERR \"TRACE: processing $_\\n\" if $trace && !/^\\#INFO:/;",
          "969:    my $nsubst = 1; # prevent infinite loop, e.g., on  int fn()",
          "970:    while($nsubst && /\\(.*\\)/s) {",
          "971:     $nsubst = s/\\([^\\(\\)]+\\)/\\{\\}/gs;",
          "972:     $nsubst+= s/\\(\\s*\\*\\s*(\\w+)\\s*\\{\\}\\s*\\)/$1/gs; #(*f{}) -> f",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1439:   $prev=$a[0];",
          "1440:  }",
          "1441:  if ($num_noinfo) {",
          "1443:   if ($do_rewrite) {",
          "1445:   } else {",
          "1446:    printf STDERR \"  You should do a rewrite to fix this.\\n\";",
          "1447:   }",
          "",
          "[Removed Lines]",
          "1442:   print STDERR \"Warning: $num_noinfo symbols were without info.\";",
          "1444:    printf STDERR \"  The rewrite will fix this.\\n\";",
          "",
          "[Added Lines]",
          "1449:   print STDERR \"Warning: $num_noinfo symbols were without info.\" if $verbose || !$do_rewrite;",
          "1451:    printf STDERR \"  The rewrite will fix this.\\n\" if $verbose;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "15b3fd6f647f340d83cfffbd9a34097883ec9271",
      "candidate_info": {
        "commit_hash": "15b3fd6f647f340d83cfffbd9a34097883ec9271",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/15b3fd6f647f340d83cfffbd9a34097883ec9271",
        "files": [
          "ssl/ssl_sess.c"
        ],
        "message": "Remove the obsolete misleading comment and code related to it.\n\nThe comment \"The following should not return 1, otherwise, things\nare very strange\" is from the very first commit of OpenSSL. The\nreally meaning of the comment is if the identical session can be\nfound from internal cache after calling get_session_cb but not\nfound before calling get_session_cb, it is just strange.\n\nThe value 1 was originated from the old doc of SSLeay, reversed\nfrom the actual return value of SSL_CTX_add_session().\n\nAnyway either return value of SSL_CTX_add_session() should not\ninterrupt the session resumption process. So the checking of\nreturn value of SSL_CTX_add_session() is not necessary.\n\nReviewed-by: Paul Dale <paul.dale@oracle.com>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4014)\n\n(cherry picked from commit e29bb83479cc567b4bb414dc55148ec06a30a115)",
        "before_after_code_files": [
          "ssl/ssl_sess.c||ssl/ssl_sess.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_sess.c||ssl/ssl_sess.c": [
          "File: ssl/ssl_sess.c -> ssl/ssl_sess.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "531:                 (s->session_ctx->session_cache_mode &",
          "532:                  SSL_SESS_CACHE_NO_INTERNAL_STORE)) {",
          "539:             }",
          "540:         }",
          "541:     }",
          "",
          "[Removed Lines]",
          "537:                 if (SSL_CTX_add_session(s->session_ctx, ret))",
          "538:                     goto err;",
          "",
          "[Added Lines]",
          "538: #pragma GCC diagnostic push",
          "539: #pragma GCC diagnostic ignored \"-Wunused-result\"",
          "540:                 SSL_CTX_add_session(s->session_ctx, ret);",
          "541: #pragma GCC diagnostic pop",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0efb6d94cdc3bc10a30206b95c0621f399e0cc79",
      "candidate_info": {
        "commit_hash": "0efb6d94cdc3bc10a30206b95c0621f399e0cc79",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0efb6d94cdc3bc10a30206b95c0621f399e0cc79",
        "files": [
          "test/run_tests.pl"
        ],
        "message": "Fix use of \"can_load()\" in run_tests.pl.\n\nCLA: Trivial\n\nFixes #3563.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3564)\n(cherry picked from commit 418bb7b31bb7cfca6e419a5aa7bf161784f61059)",
        "before_after_code_files": [
          "test/run_tests.pl||test/run_tests.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/run_tests.pl||test/run_tests.pl": [
          "File: test/run_tests.pl -> test/run_tests.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "20: use Module::Load::Conditional qw(can_load);",
          "23:     ? 'TAP::Harness' : 'OpenSSL::TAP::Harness';",
          "25: my $srctop = $ENV{SRCTOP} || $ENV{TOP};",
          "",
          "[Removed Lines]",
          "22: my $TAP_Harness = can_load({modules => [ 'TAP::Harness' ]})",
          "",
          "[Added Lines]",
          "22: my $TAP_Harness = can_load(modules => { 'TAP::Harness' => undef })",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8efce5badd2f3bdd2d15e4aacd6b04f6ee69cf60",
      "candidate_info": {
        "commit_hash": "8efce5badd2f3bdd2d15e4aacd6b04f6ee69cf60",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8efce5badd2f3bdd2d15e4aacd6b04f6ee69cf60",
        "files": [
          "crypto/aes/asm/aes-s390x.pl",
          "crypto/s390xcap.c",
          "crypto/s390xcpuid.S",
          "crypto/sha/asm/sha1-s390x.pl",
          "crypto/sha/asm/sha512-s390x.pl"
        ],
        "message": "s390x assembly pack: define OPENSSL_s390xcap_P in s390xcap.c\n\nRemove all .comm definitions from the asm modules.\n\nSigned-off-by: Patrick Steuer <patrick.steuer@de.ibm.com>\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4563)",
        "before_after_code_files": [
          "crypto/aes/asm/aes-s390x.pl||crypto/aes/asm/aes-s390x.pl",
          "crypto/s390xcap.c||crypto/s390xcap.c",
          "crypto/s390xcpuid.S||crypto/s390xcpuid.S",
          "crypto/shasm/sha1-s390x.pl||crypto/sha/asm/sha1-s390x.pl",
          "crypto/shasm/sha512-s390x.pl||crypto/sha/asm/sha512-s390x.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/aes-s390x.pl||crypto/aes/asm/aes-s390x.pl": [
          "File: crypto/aes/asm/aes-s390x.pl -> crypto/aes/asm/aes-s390x.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "2219: }",
          "2220: $code.=<<___;",
          "2221: .string \"AES for s390x, CRYPTOGAMS by <appro\\@openssl.org>\"",
          "2223: ___",
          "2225: $code =~ s/\\`([^\\`]*)\\`/eval $1/gem;",
          "",
          "[Removed Lines]",
          "2222: .comm OPENSSL_s390xcap_P,80,8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/s390xcap.c||crypto/s390xcap.c": [
          "File: crypto/s390xcap.c -> crypto/s390xcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: #include <setjmp.h>",
          "14: #include <signal.h>",
          "18: static sigjmp_buf ill_jmp;",
          "19: static void ill_handler(int sig)",
          "",
          "[Removed Lines]",
          "16: extern unsigned long OPENSSL_s390xcap_P[];",
          "",
          "[Added Lines]",
          "16: unsigned long long OPENSSL_s390xcap_P[10];",
          "",
          "---------------"
        ],
        "crypto/s390xcpuid.S||crypto/s390xcpuid.S": [
          "File: crypto/s390xcpuid.S -> crypto/s390xcpuid.S",
          "--- Hunk 1 ---",
          "[Context before]",
          "177: .section .init",
          "178:  brasl %r14,OPENSSL_cpuid_setup",
          "",
          "[Removed Lines]",
          "180: .comm OPENSSL_s390xcap_P,80,8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/shasm/sha1-s390x.pl||crypto/sha/asm/sha1-s390x.pl": [
          "File: crypto/shasm/sha1-s390x.pl -> crypto/sha/asm/sha1-s390x.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/shasm/sha512-s390x.pl||crypto/sha/asm/sha512-s390x.pl": [
          "File: crypto/shasm/sha512-s390x.pl -> crypto/sha/asm/sha512-s390x.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}