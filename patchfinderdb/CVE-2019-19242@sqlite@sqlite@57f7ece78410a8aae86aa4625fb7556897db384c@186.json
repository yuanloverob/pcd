{
  "cve_id": "CVE-2019-19242",
  "cve_desc": "SQLite 3.30.1 mishandles pExpr->y.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
  "repo": "sqlite/sqlite",
  "patch_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
  "patch_info": {
    "commit_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/wherecode.c",
      "test/gencol1.test"
    ],
    "message": "Fix a problem that comes up when using generated columns that evaluate to a constant in an index and then making use of that index in a join.\n\nFossilOrigin-Name: 8b12e95fec7ce6e0de82a04ca3dfcf1a8e62e233b7382aa28a8a9be6e862b1af",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/wherecode.c||src/wherecode.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 2d53a30cc23e53033af8e8666457654db5dcc453ed6cd176ce1d0bff4f528159",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3607:         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);",
      "3609:         if( aff>SQLITE_AFF_BLOB ){",
      "3610:           static const char zAff[] = \"B\\000C\\000D\\000E\";",
      "3611:           assert( SQLITE_AFF_BLOB=='A' );",
      "",
      "[Removed Lines]",
      "3608:         int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "",
      "[Added Lines]",
      "3608:         int aff;",
      "3609:         if( pExpr->y.pTab ){",
      "3610:           aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "3611:         }else{",
      "3612:           aff = pExpr->affExpr;",
      "3613:         }",
      "",
      "---------------"
    ],
    "src/wherecode.c||src/wherecode.c": [
      "File: src/wherecode.c -> src/wherecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:   if( pExpr->op==TK_COLUMN ){",
      "1142:     IdxExprTrans *pX = p->u.pIdxTrans;",
      "1143:     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){",
      "1144:       pExpr->iTable = pX->iIdxCur;",
      "1145:       pExpr->iColumn = pX->iIdxCol;",
      "1146:       pExpr->y.pTab = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1144:       assert( pExpr->y.pTab!=0 );",
      "1145:       pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:   UPDATE t0 SET c0 = NULL;",
      "244: } {1 {generated column loop on \"c2\"}}",
      "247: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246: # 2019-11-21 Problems in the new generated column logic",
      "247: # reported by Yongheng Chen and Rui Zhong",
      "248: do_execsql_test gencol1-9.10 {",
      "249:   DROP TABLE IF EXISTS t1;",
      "250:   DROP TABLE IF EXISTS t2;",
      "251:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
      "252:   INSERT INTO t1 VALUES(17);",
      "253:   CREATE TABLE t2(cc);",
      "254:   INSERT INTO t2 VALUES(41);",
      "255:   SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;",
      "256: } {41 17 17}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "60379d424341391776e3270f989f0a489db0539c",
      "candidate_info": {
        "commit_hash": "60379d424341391776e3270f989f0a489db0539c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/60379d424341391776e3270f989f0a489db0539c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix the CLI so that the \".open --hexdb\" command works even if it is contained in a subscript that is read using \".read\".\n\nFossilOrigin-Name: 67a87399b8ad8f1ce3052ee3159906f5c6df3d7b5691b3acac856bd2f1c82088",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e3bf1d3ea5f748c5142c2403813fdace5aedc1fc68f0dcd5eae40a2fe763fedb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3595: }",
          "",
          "[Removed Lines]",
          "3598: static int process_input(ShellState *p, FILE *in);",
          "",
          "[Added Lines]",
          "3599: static int process_input(ShellState *p);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3749:       return 0;",
          "3750:     }",
          "3751:   }else{",
          "3753:   }",
          "3755:   if( fgets(zLine, sizeof(zLine), in)==0 ) goto readHexDb_error;",
          "",
          "[Removed Lines]",
          "3752:     in = stdin;",
          "",
          "[Added Lines]",
          "3753:     in = p->in;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3789:     }",
          "3790:   }",
          "3793:   return a;",
          "3795: readHexDb_error:",
          "3796:   if( in!=stdin ){",
          "3797:     fclose(in);",
          "3798:   }else{",
          "3800:       if(strncmp(zLine, \"| end \", 6)==0 ) break;",
          "3801:     }",
          "3802:   }",
          "",
          "[Removed Lines]",
          "3792:   if( in!=stdin ) fclose(in);",
          "3799:     while( fgets(zLine, sizeof(zLine), in)!=0 ){",
          "",
          "[Added Lines]",
          "3793:   if( in!=p->in ) fclose(in);",
          "3800:     while( fgets(zLine, sizeof(zLine), p->in)!=0 ){",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6970:   }else",
          "6972:   if( c=='r' && n>=3 && strncmp(azArg[0], \"read\", n)==0 ){",
          "6974:     if( nArg!=2 ){",
          "6975:       raw_printf(stderr, \"Usage: .read FILE\\n\");",
          "6976:       rc = 1;",
          "6977:       goto meta_command_exit;",
          "6978:     }",
          "6981:       utf8_printf(stderr,\"Error: cannot open \\\"%s\\\"\\n\", azArg[1]);",
          "6982:       rc = 1;",
          "6983:     }else{",
          "6986:     }",
          "6987:   }else",
          "6989:   if( c=='r' && n>=3 && strncmp(azArg[0], \"restore\", n)==0 ){",
          "",
          "[Removed Lines]",
          "6973:     FILE *alt;",
          "6979:     alt = fopen(azArg[1], \"rb\");",
          "6980:     if( alt==0 ){",
          "6984:       rc = process_input(p, alt);",
          "6985:       fclose(alt);",
          "",
          "[Added Lines]",
          "6974:     FILE *inSaved = p->in;",
          "6980:     p->in = fopen(azArg[1], \"rb\");",
          "6981:     if( p->in==0 ){",
          "6985:       rc = process_input(p);",
          "6986:       fclose(p->in);",
          "6988:     p->in = inSaved;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "8327: static int process_input(ShellState *p, FILE *in){",
          "",
          "[Added Lines]",
          "8329: static int process_input(ShellState *p){",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8340:     fflush(p->out);",
          "8342:     if( zLine==0 ){",
          "8345:       break;",
          "8346:     }",
          "8347:     if( seenInterrupt ){",
          "8349:       seenInterrupt = 0;",
          "8350:     }",
          "8351:     lineno++;",
          "",
          "[Removed Lines]",
          "8339:   while( errCnt==0 || !bail_on_error || (in==0 && stdin_is_interactive) ){",
          "8341:     zLine = one_input_line(in, zLine, nSql>0);",
          "8344:       if( in==0 && stdin_is_interactive ) printf(\"\\n\");",
          "8348:       if( in!=0 ) break;",
          "",
          "[Added Lines]",
          "8341:   while( errCnt==0 || !bail_on_error || (p->in==0 && stdin_is_interactive) ){",
          "8343:     zLine = one_input_line(p->in, zLine, nSql>0);",
          "8346:       if( p->in==0 && stdin_is_interactive ) printf(\"\\n\");",
          "8350:       if( p->in!=0 ) break;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8389:     }",
          "8390:     if( nSql && line_contains_semicolon(&zSql[nSqlPrior], nSql-nSqlPrior)",
          "8391:                 && sqlite3_complete(zSql) ){",
          "8393:       nSql = 0;",
          "8394:       if( p->outCount ){",
          "8395:         output_reset(p);",
          "",
          "[Removed Lines]",
          "8392:       errCnt += runOneSqlLine(p, zSql, in, startline);",
          "",
          "[Added Lines]",
          "8394:       errCnt += runOneSqlLine(p, zSql, p->in, startline);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "8403:     }",
          "8404:   }",
          "8405:   if( nSql && !_all_whitespace(zSql) ){",
          "8407:   }",
          "8408:   free(zSql);",
          "8409:   free(zLine);",
          "",
          "[Removed Lines]",
          "8406:     errCnt += runOneSqlLine(p, zSql, in, startline);",
          "",
          "[Added Lines]",
          "8408:     errCnt += runOneSqlLine(p, zSql, p->in, startline);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "8492:   char *home_dir = NULL;",
          "8493:   const char *sqliterc = sqliterc_override;",
          "8494:   char *zBuf = 0;",
          "8497:   if (sqliterc == NULL) {",
          "8498:     home_dir = find_home_dir(0);",
          "",
          "[Removed Lines]",
          "8495:   FILE *in = NULL;",
          "",
          "[Added Lines]",
          "8497:   FILE *inSaved = p->in;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "8504:     zBuf = sqlite3_mprintf(\"%s/.sqliterc\",home_dir);",
          "8505:     sqliterc = zBuf;",
          "8506:   }",
          "8509:     if( stdin_is_interactive ){",
          "8510:       utf8_printf(stderr,\"-- Loading resources from %s\\n\",sqliterc);",
          "8511:     }",
          "8514:   }",
          "8515:   sqlite3_free(zBuf);",
          "8516: }",
          "",
          "[Removed Lines]",
          "8507:   in = fopen(sqliterc,\"rb\");",
          "8508:   if( in ){",
          "8512:     process_input(p,in);",
          "8513:     fclose(in);",
          "",
          "[Added Lines]",
          "8509:   p->in = fopen(sqliterc,\"rb\");",
          "8510:   if( p->in ){",
          "8514:     process_input(p);",
          "8515:     fclose(p->in);",
          "8517:   p->in = inSaved;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "9123: #elif HAVE_LINENOISE",
          "9124:       linenoiseSetCompletionCallback(linenoise_completion);",
          "9125: #endif",
          "9127:       if( zHistory ){",
          "9128:         shell_stifle_history(2000);",
          "9129:         shell_write_history(zHistory);",
          "9130:         free(zHistory);",
          "9131:       }",
          "9132:     }else{",
          "9134:     }",
          "9135:   }",
          "9136:   set_table_name(&data, 0);",
          "",
          "[Removed Lines]",
          "9126:       rc = process_input(&data, 0);",
          "9133:       rc = process_input(&data, stdin);",
          "",
          "[Added Lines]",
          "9129:       data.in = 0;",
          "9130:       rc = process_input(&data);",
          "9137:       data.in = stdin;",
          "9138:       rc = process_input(&data);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "936ade4dba52cd4e69324442ef4a81e87c286dd5",
      "candidate_info": {
        "commit_hash": "936ade4dba52cd4e69324442ef4a81e87c286dd5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/936ade4dba52cd4e69324442ef4a81e87c286dd5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c"
        ],
        "message": "Change a integer variable in sqlite3VdbeRecordUnpack() to unsigned in order to avoid any possibility of an integer overflow.\n\nFossilOrigin-Name: 1b536f6fd8d58800042f130842f0586aaa357841ee0d1b690a9815c865d50826",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 65ad6c55f1ba9bc2f75afffa3adaf19f145fad7ac9a00ccce6372e9a2cc4341b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3795: ){",
          "3796:   const unsigned char *aKey = (const unsigned char *)pKey;",
          "3800:   u32 szHdr;",
          "",
          "[Removed Lines]",
          "3797:   int d;",
          "",
          "[Added Lines]",
          "3797:   u32 d;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e80834f6ffb2e44cc6930885c60d517468828a90",
      "candidate_info": {
        "commit_hash": "e80834f6ffb2e44cc6930885c60d517468828a90",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e80834f6ffb2e44cc6930885c60d517468828a90",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix another problem in fts5 caused by a corrupt schema record.\n\nFossilOrigin-Name: ff45f9dd69fe1e1c7875e5bb73ac3dde2a31746475d3765cda9233f8e06e26ca",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "861:   i += fts5GetVarint32(&pData[i], nLevel);",
          "862:   i += fts5GetVarint32(&pData[i], nSegment);",
          "863:   nByte = (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "863:   if( nLevel>FTS5_MAX_SEGMENT || nSegment>FTS5_MAX_SEGMENT ){",
          "864:     return FTS5_CORRUPT;",
          "865:   }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1042: INSERT INTO t1(t1) VALUES('integrity-check');",
          "1043: } {1 {vtable constructor failed: t1}}",
          "1045: sqlite3_fts5_may_be_corrupt 0",
          "1046: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1045: #--------------------------------------------------------------------------",
          "1046: reset_db",
          "1047: do_test 17.0 {",
          "1048:   sqlite3 db {}",
          "1049:   db deserialize [decode_hexdb {",
          "1050: | size 28672 pagesize 4096 filename c18.db",
          "1051: | page 1 offset 0",
          "1052: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "1053: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "1054: |     32: 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00   ................",
          "1055: |     48: 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00   ................",
          "1056: |     96: 00 00 00 00 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ...............m",
          "1057: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "1058: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "1059: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "1060: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "1061: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "1062: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "1063: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "1064: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "1065: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "1066: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "1067: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "1068: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "1069: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "1070: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "1071: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "1072: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "1073: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "1074: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "1075: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "1076: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "1077: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "1078: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "1079: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "1080: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "1081: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "1082: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "1083: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "1084: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "1085: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "1086: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "1087: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "1088: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "1089: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "1090: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "1091: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "1092: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "1093: | page 2 offset 4096",
          "1094: |      0: 0d 00 00 00 03 0f bd 00 0f e8 0f ef 0f bd 00 00   ................",
          "1095: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 24 84 80   .............$..",
          "1096: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "1097: |   4048: 63 6b 01 02 02 04 02 66 74 00 02 22 04 04 6e 64   ck.....ft.....nd",
          "1098: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 03 03 0f   on..............",
          "1099: |   4080: 0a 03 00 24 00 00 0a aa aa aa aa aa aa aa aa aa   ...$............",
          "1100: | page 3 offset 8192",
          "1101: |      0: aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa   ................",
          "1102: |     16: aa aa aa aa aa aa aa aa 00 00 10 10 10 00 10 10   ................",
          "1103: |     32: 10 10 a0 00 00 00 10 ff a0 00 ff 52 05 64 95 25   ...........R.d.%",
          "1104: |     48: 45 54 14 c2 05 44 14 24 c4 52 07 43 12 05 55 34   ET...D.$.R.C..U4",
          "1105: |     64: 94 e4 72 06 67 47 33 52 86 36 f6 e7 46 56 e7 42   ..r.gG3R.6..FV.B",
          "1106: |     80: 90 d0 00 00 00 30 fb d0 00 fe 80 fe f0 fb 00 00   .....0..........",
          "1107: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "1108: | page 4 offset 12288",
          "1109: |      0: 0d 00 00 00 03 0f e0 00 0f f6 0f ec 0f e0 00 00   ................",
          "1110: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "1111: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "1112: | page 5 offset 16384",
          "1113: |      0: 0d 00 00 00 03 0f ee 00 0f fa 0f f4 0f ee 00 00   ................",
          "1114: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 03   ................",
          "1115: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "1116: | page 6 offset 20480",
          "1117: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "1118: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "1119: | page 7 offset 24576",
          "1120: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "1121: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "1122: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "1123: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "1124: | end c18.db",
          "1125: }]} {}",
          "1127: do_catchsql_test 17.1 {",
          "1128:   SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "1129: } {1 {vtable constructor failed: t1}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 29a00a05dd40ff59be340969e1aca4fee41e092f2faa1cea85a3448265a83c2c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c2db5def64f97e8b5e79578fd73ce4a0d277338",
      "candidate_info": {
        "commit_hash": "3c2db5def64f97e8b5e79578fd73ce4a0d277338",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3c2db5def64f97e8b5e79578fd73ce4a0d277338",
        "files": [
          "ext/fts3/fts3_unicode2.c",
          "ext/fts5/fts5_unicode2.c",
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "src/whereexpr.c"
        ],
        "message": "Fix harmless compiler warnings.\n\nFossilOrigin-Name: 27221c69901d2b4546167639c4a3c8f54b2e18820f1346870fa26b7c919027db",
        "before_after_code_files": [
          "ext/fts3/fts3_unicode2.c||ext/fts3/fts3_unicode2.c",
          "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "src/whereexpr.c||src/whereexpr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_unicode2.c||ext/fts3/fts3_unicode2.c": [
          "File: ext/fts3/fts3_unicode2.c -> ext/fts3/fts3_unicode2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:     62830, 62890, 62924, 62974, 63032, 63050, 63082, 63118,",
          "179:     63182, 63242, 63274, 63310, 63368, 63390,",
          "180:   };",
          "181:   char aChar[] = {",
          "203:   };",
          "205:   unsigned int key = (((unsigned int)c)<<3) | 0x00000007;",
          "",
          "[Removed Lines]",
          "182:     '\\0',      'a'|0x00,  'c'|0x00,  'e'|0x00,  'i'|0x00,  'n'|0x00,",
          "183:     'o'|0x00,  'u'|0x00,  'y'|0x00,  'y'|0x00,  'a'|0x00,  'c'|0x00,",
          "184:     'd'|0x00,  'e'|0x00,  'e'|0x00,  'g'|0x00,  'h'|0x00,  'i'|0x00,",
          "185:     'j'|0x00,  'k'|0x00,  'l'|0x00,  'n'|0x00,  'o'|0x00,  'r'|0x00,",
          "186:     's'|0x00,  't'|0x00,  'u'|0x00,  'u'|0x00,  'w'|0x00,  'y'|0x00,",
          "187:     'z'|0x00,  'o'|0x00,  'u'|0x00,  'a'|0x00,  'i'|0x00,  'o'|0x00,",
          "188:     'u'|0x00,  'u'|0x80,  'a'|0x80,  'g'|0x00,  'k'|0x00,  'o'|0x00,",
          "189:     'o'|0x80,  'j'|0x00,  'g'|0x00,  'n'|0x00,  'a'|0x80,  'a'|0x00,",
          "190:     'e'|0x00,  'i'|0x00,  'o'|0x00,  'r'|0x00,  'u'|0x00,  's'|0x00,",
          "191:     't'|0x00,  'h'|0x00,  'a'|0x00,  'e'|0x00,  'o'|0x80,  'o'|0x00,",
          "192:     'o'|0x80,  'y'|0x00,  '\\0',      '\\0',      '\\0',      '\\0',",
          "193:     '\\0',      '\\0',      '\\0',      '\\0',      'a'|0x00,  'b'|0x00,",
          "194:     'c'|0x80,  'd'|0x00,  'd'|0x00,  'e'|0x80,  'e'|0x00,  'e'|0x80,",
          "195:     'f'|0x00,  'g'|0x00,  'h'|0x00,  'h'|0x00,  'i'|0x00,  'i'|0x80,",
          "196:     'k'|0x00,  'l'|0x00,  'l'|0x80,  'l'|0x00,  'm'|0x00,  'n'|0x00,",
          "197:     'o'|0x80,  'p'|0x00,  'r'|0x00,  'r'|0x80,  'r'|0x00,  's'|0x00,",
          "198:     's'|0x80,  't'|0x00,  'u'|0x00,  'u'|0x80,  'v'|0x00,  'w'|0x00,",
          "199:     'w'|0x00,  'x'|0x00,  'y'|0x00,  'z'|0x00,  'h'|0x00,  't'|0x00,",
          "200:     'w'|0x00,  'y'|0x00,  'a'|0x00,  'a'|0x80,  'a'|0x80,  'a'|0x80,",
          "201:     'e'|0x00,  'e'|0x80,  'e'|0x80,  'i'|0x00,  'o'|0x00,  'o'|0x80,",
          "202:     'o'|0x80,  'o'|0x80,  'u'|0x00,  'u'|0x80,  'u'|0x80,  'y'|0x00,",
          "",
          "[Added Lines]",
          "181: #define HIBIT ((char)0x80)",
          "183:     '\\0',      'a',       'c',       'e',       'i',       'n',",
          "184:     'o',       'u',       'y',       'y',       'a',       'c',",
          "185:     'd',       'e',       'e',       'g',       'h',       'i',",
          "186:     'j',       'k',       'l',       'n',       'o',       'r',",
          "187:     's',       't',       'u',       'u',       'w',       'y',",
          "188:     'z',       'o',       'u',       'a',       'i',       'o',",
          "189:     'u',       'u'|HIBIT, 'a'|HIBIT, 'g',       'k',       'o',",
          "190:     'o'|HIBIT, 'j',       'g',       'n',       'a'|HIBIT, 'a',",
          "191:     'e',       'i',       'o',       'r',       'u',       's',",
          "192:     't',       'h',       'a',       'e',       'o'|HIBIT, 'o',",
          "193:     'o'|HIBIT, 'y',       '\\0',      '\\0',      '\\0',      '\\0',",
          "194:     '\\0',      '\\0',      '\\0',      '\\0',      'a',       'b',",
          "195:     'c'|HIBIT, 'd',       'd',       'e'|HIBIT, 'e',       'e'|HIBIT,",
          "196:     'f',       'g',       'h',       'h',       'i',       'i'|HIBIT,",
          "197:     'k',       'l',       'l'|HIBIT, 'l',       'm',       'n',",
          "198:     'o'|HIBIT, 'p',       'r',       'r'|HIBIT, 'r',       's',",
          "199:     's'|HIBIT, 't',       'u',       'u'|HIBIT, 'v',       'w',",
          "200:     'w',       'x',       'y',       'z',       'h',       't',",
          "201:     'w',       'y',       'a',       'a'|HIBIT, 'a'|HIBIT, 'a'|HIBIT,",
          "202:     'e',       'e'|HIBIT, 'e'|HIBIT, 'i',       'o',       'o'|HIBIT,",
          "203:     'o'|HIBIT, 'o'|HIBIT, 'u',       'u'|HIBIT, 'u'|HIBIT, 'y',",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
          "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:     62830, 62890, 62924, 62974, 63032, 63050, 63082, 63118,",
          "48:     63182, 63242, 63274, 63310, 63368, 63390,",
          "49:   };",
          "50:   char aChar[] = {",
          "72:   };",
          "74:   unsigned int key = (((unsigned int)c)<<3) | 0x00000007;",
          "",
          "[Removed Lines]",
          "51:     '\\0',      'a'|0x00,  'c'|0x00,  'e'|0x00,  'i'|0x00,  'n'|0x00,",
          "52:     'o'|0x00,  'u'|0x00,  'y'|0x00,  'y'|0x00,  'a'|0x00,  'c'|0x00,",
          "53:     'd'|0x00,  'e'|0x00,  'e'|0x00,  'g'|0x00,  'h'|0x00,  'i'|0x00,",
          "54:     'j'|0x00,  'k'|0x00,  'l'|0x00,  'n'|0x00,  'o'|0x00,  'r'|0x00,",
          "55:     's'|0x00,  't'|0x00,  'u'|0x00,  'u'|0x00,  'w'|0x00,  'y'|0x00,",
          "56:     'z'|0x00,  'o'|0x00,  'u'|0x00,  'a'|0x00,  'i'|0x00,  'o'|0x00,",
          "57:     'u'|0x00,  'u'|0x80,  'a'|0x80,  'g'|0x00,  'k'|0x00,  'o'|0x00,",
          "58:     'o'|0x80,  'j'|0x00,  'g'|0x00,  'n'|0x00,  'a'|0x80,  'a'|0x00,",
          "59:     'e'|0x00,  'i'|0x00,  'o'|0x00,  'r'|0x00,  'u'|0x00,  's'|0x00,",
          "60:     't'|0x00,  'h'|0x00,  'a'|0x00,  'e'|0x00,  'o'|0x80,  'o'|0x00,",
          "61:     'o'|0x80,  'y'|0x00,  '\\0',      '\\0',      '\\0',      '\\0',",
          "62:     '\\0',      '\\0',      '\\0',      '\\0',      'a'|0x00,  'b'|0x00,",
          "63:     'c'|0x80,  'd'|0x00,  'd'|0x00,  'e'|0x80,  'e'|0x00,  'e'|0x80,",
          "64:     'f'|0x00,  'g'|0x00,  'h'|0x00,  'h'|0x00,  'i'|0x00,  'i'|0x80,",
          "65:     'k'|0x00,  'l'|0x00,  'l'|0x80,  'l'|0x00,  'm'|0x00,  'n'|0x00,",
          "66:     'o'|0x80,  'p'|0x00,  'r'|0x00,  'r'|0x80,  'r'|0x00,  's'|0x00,",
          "67:     's'|0x80,  't'|0x00,  'u'|0x00,  'u'|0x80,  'v'|0x00,  'w'|0x00,",
          "68:     'w'|0x00,  'x'|0x00,  'y'|0x00,  'z'|0x00,  'h'|0x00,  't'|0x00,",
          "69:     'w'|0x00,  'y'|0x00,  'a'|0x00,  'a'|0x80,  'a'|0x80,  'a'|0x80,",
          "70:     'e'|0x00,  'e'|0x80,  'e'|0x80,  'i'|0x00,  'o'|0x00,  'o'|0x80,",
          "71:     'o'|0x80,  'o'|0x80,  'u'|0x00,  'u'|0x80,  'u'|0x80,  'y'|0x00,",
          "",
          "[Added Lines]",
          "50: #define HIBIT ((char)0x80)",
          "52:     '\\0',      'a',       'c',       'e',       'i',       'n',",
          "53:     'o',       'u',       'y',       'y',       'a',       'c',",
          "54:     'd',       'e',       'e',       'g',       'h',       'i',",
          "55:     'j',       'k',       'l',       'n',       'o',       'r',",
          "56:     's',       't',       'u',       'u',       'w',       'y',",
          "57:     'z',       'o',       'u',       'a',       'i',       'o',",
          "58:     'u',       'u'|HIBIT, 'a'|HIBIT, 'g',       'k',       'o',",
          "59:     'o'|HIBIT, 'j',       'g',       'n',       'a'|HIBIT, 'a',",
          "60:     'e',       'i',       'o',       'r',       'u',       's',",
          "61:     't',       'h',       'a',       'e',       'o'|HIBIT, 'o',",
          "62:     'o'|HIBIT, 'y',       '\\0',      '\\0',      '\\0',      '\\0',",
          "63:     '\\0',      '\\0',      '\\0',      '\\0',      'a',       'b',",
          "64:     'c'|HIBIT, 'd',       'd',       'e'|HIBIT, 'e',       'e'|HIBIT,",
          "65:     'f',       'g',       'h',       'h',       'i',       'i'|HIBIT,",
          "66:     'k',       'l',       'l'|HIBIT, 'l',       'm',       'n',",
          "67:     'o'|HIBIT, 'p',       'r',       'r'|HIBIT, 'r',       's',",
          "68:     's'|HIBIT, 't',       'u',       'u'|HIBIT, 'v',       'w',",
          "69:     'w',       'x',       'y',       'z',       'h',       't',",
          "70:     'w',       'y',       'a',       'a'|HIBIT, 'a'|HIBIT, 'a'|HIBIT,",
          "71:     'e',       'e'|HIBIT, 'e'|HIBIT, 'i',       'o',       'o'|HIBIT,",
          "72:     'o'|HIBIT, 'o'|HIBIT, 'u',       'u'|HIBIT, 'u'|HIBIT, 'y',",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 395599116d801324f0763e59bc5e2fc8622aa5b7572e0c1c9a982efbb3cc8280",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c"
        ],
        "src/whereexpr.c||src/whereexpr.c": [
          "File: src/whereexpr.c -> src/whereexpr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "779:     for(j=0; j<2 && !okToChngToIN; j++){",
          "781:       Expr *pLeft = 0;",
          "782:       for(i=pOrWc->nTerm-1; i>=0; i--, pOrTerm++){",
          "783:         assert( pOrTerm->eOperator & WO_EQ );",
          "784:         pOrTerm->wtFlags &= ~TERM_OR_OK;",
          "",
          "[Removed Lines]",
          "780:       pOrTerm = pOrWc->a;",
          "",
          "[Added Lines]",
          "781:       pOrTerm = pOrWc->a;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae144a1c9fc092e8756f66cd8d60b80dbbd1e010",
      "candidate_info": {
        "commit_hash": "ae144a1c9fc092e8756f66cd8d60b80dbbd1e010",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ae144a1c9fc092e8756f66cd8d60b80dbbd1e010",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/index6.test"
        ],
        "message": "The expression \"(X IS FALSE) IN (FALSE)\" does not imply that X is NOT NULL. Ticket [f8f472cbc77ba9c9]\n\nFossilOrigin-Name: dd66134817ecbda01c59a05ad0d6ac44bee700ab10cd2119c869dd69af293fe2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/index6.test||test/index6.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 057fb8b1809b8b9c8fff0fd0804153b9644f0545c23c6ddc4758bda3381094b9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4995:       if( seenNot && ExprHasProperty(p, EP_xIsSelect) ) return 0;",
          "4996:       assert( ExprHasProperty(p,EP_xIsSelect)",
          "4997:            || (p->x.pList!=0 && p->x.pList->nExpr>0) );",
          "4999:     }",
          "5000:     case TK_BETWEEN: {",
          "5001:       ExprList *pList = p->x.pList;",
          "",
          "[Removed Lines]",
          "4998:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, seenNot);",
          "",
          "[Added Lines]",
          "4998:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, 1);",
          "",
          "---------------"
        ],
        "test/index6.test||test/index6.test": [
          "File: test/index6.test -> test/index6.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "440: # 2019-08-30",
          "441: # Ticket https://www.sqlite.org/src/info/a6408d42b9f44462",
          "442: # Ticket https://www.sqlite.org/src/info/fba33c8b1df6a915",
          "443: #",
          "444: do_execsql_test index6-15.1 {",
          "445:   DROP TABLE t0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "443: # https://sqlite.org/src/info/bac716244fddac1fe841",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "457: do_execsql_test index6-15.4 {",
          "458:   SELECT 1 FROM t0 WHERE FALSE BETWEEN FALSE AND (t0.c0 IS FALSE);",
          "459: } {1}",
          "461: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "461: do_execsql_test index6-15.5 {",
          "462:   SELECT 1 FROM t0 WHERE (c0 IS FALSE) IN (FALSE);",
          "463: } {1}",
          "",
          "---------------"
        ]
      }
    }
  ]
}