{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bab2a9303170a0dad7eb1844fcf69a4818c9042b",
      "candidate_info": {
        "commit_hash": "bab2a9303170a0dad7eb1844fcf69a4818c9042b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/bab2a9303170a0dad7eb1844fcf69a4818c9042b",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: align assembly code for x86",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:  uint64_t address = 0;",
          "115:  cs_insn *insn;",
          "116:  cs_err err;",
          "118:  if (argc != 3 && argc != 4) {",
          "119:   usage(argv[0]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:  bool x86_arch = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:  }",
          "184:  if (!strcmp(mode, \"x16\")) {",
          "185:   err = cs_open(CS_ARCH_X86, CS_MODE_16, &handle);",
          "186:  }",
          "188:  if (!strcmp(mode, \"x32\")) {",
          "189:   err = cs_open(CS_ARCH_X86, CS_MODE_32, &handle);",
          "190:  }",
          "192:  if (!strcmp(mode, \"x64\")) {",
          "193:   err = cs_open(CS_ARCH_X86, CS_MODE_64, &handle);",
          "194:  }",
          "196:  if (!strcmp(mode, \"x16att\")) {",
          "197:   err = cs_open(CS_ARCH_X86, CS_MODE_16, &handle);",
          "198:   if (!err) {",
          "199:    cs_option(handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "186:   x86_arch = true;",
          "191:   x86_arch = true;",
          "196:   x86_arch = true;",
          "201:   x86_arch = true;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "201:  }",
          "203:  if (!strcmp(mode,\"x32att\")) {",
          "204:   err = cs_open(CS_ARCH_X86, CS_MODE_32, &handle);",
          "205:   if (!err) {",
          "206:    cs_option(handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209:   x86_arch = true;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "208:  }",
          "210:  if (!strcmp(mode,\"x64att\")) {",
          "211:   err = cs_open(CS_ARCH_X86, CS_MODE_64, &handle);",
          "212:   if (!err) {",
          "213:    cs_option(handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "217:   x86_arch = true;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "243:  count = cs_disasm(handle, assembly, size, address, 0, &insn);",
          "244:  if (count > 0) {",
          "253:    }",
          "255:   }",
          "256:   cs_free(insn, count);",
          "257:  } else {",
          "",
          "[Removed Lines]",
          "245:   size_t j;",
          "246:   int i;",
          "248:   printf(\"\\n\");",
          "249:   for (j = 0; j < count; j++) {",
          "250:    printf(\"%\"PRIx64 \"\\t\", insn[j].address);",
          "251:    for (i = 0; i < insn[j].size; i++) {",
          "252:     printf(\"%02x\", insn[j].bytes[i]);",
          "254:    printf(\"\\t%s\\t%s\\n\", insn[j].mnemonic, insn[j].op_str);",
          "",
          "[Added Lines]",
          "252:   size_t i;",
          "254:   for (i = 0; i < count; i++) {",
          "255:    int j;",
          "256:    printf(\"%\"PRIx64\"  \", insn[i].address);",
          "257:    for (j = 0; j < insn[i].size; j++) {",
          "258:     printf(\"%02x\", insn[i].bytes[j]);",
          "259:    }",
          "262:    if (x86_arch) {",
          "263:     for (; j < 16; j++) {",
          "264:      printf(\"  \");",
          "265:     }",
          "267:    printf(\"  %s\\t%s\\n\", insn[i].mnemonic, insn[i].op_str);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61e5054b634497919e7e417f5ebfbd63a45ad510",
      "candidate_info": {
        "commit_hash": "61e5054b634497919e7e417f5ebfbd63a45ad510",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/61e5054b634497919e7e417f5ebfbd63a45ad510",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool version 2",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:  }",
          "230:  if (!strcmp(mode, \"x16\")) {",
          "231:   arch = \"x86\";",
          "232:   err = cs_open(CS_ARCH_X86, CS_MODE_16, &handle);",
          "233:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:         md = CS_MODE_64;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "789224e7fe8d585c4299d15eea74b2efe03b415a",
      "candidate_info": {
        "commit_hash": "789224e7fe8d585c4299d15eea74b2efe03b415a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/789224e7fe8d585c4299d15eea74b2efe03b415a",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "Fix use of uninitialized value for some instructions\n\nCaught by Valgrind:\n\n    Conditional jump or move depends on uninitialised value(s)\n       at 0xD5BB6F: readModRM (X86DisassemblerDecoder.c:1528)\n       by 0xD5BF02: getIDWithAttrMask (X86DisassemblerDecoder.c:1101)\n       by 0xD5CC5E: getID (X86DisassemblerDecoder.c:1249)\n       by 0xD5CC5E: decodeInstruction (X86DisassemblerDecoder.c:2335)\n       by 0xD52009: X86_getInstruction (X86Disassembler.c:822)\n       by 0xD51781: cs_disasm (cs.c:503)",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "923:  insn->opcodeType = ONEBYTE;",
          "925:  if (insn->vectorExtensionType == TYPE_EVEX) {",
          "926:   switch (mmFromEVEX2of4(insn->vectorExtensionPrefix[1])) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "924:  insn->firstByte = 0x00;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8925ff9bde4faad8fbb5ae499e38ba29159252a4",
      "candidate_info": {
        "commit_hash": "8925ff9bde4faad8fbb5ae499e38ba29159252a4",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/8925ff9bde4faad8fbb5ae499e38ba29159252a4",
        "files": [
          "include/x86.h"
        ],
        "message": "x86: fix X86_REL_ADDR macro - handle two-byte jump instructions",
        "before_after_code_files": [
          "include/x86.h||include/x86.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/x86.h||include/x86.h": [
          "File: include/x86.h -> include/x86.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: #endif",
          "19: typedef enum x86_reg {",
          "",
          "[Removed Lines]",
          "16: #define X86_REL_ADDR(insn) (insn.address + insn.size + insn.detail->x86.disp)",
          "",
          "[Added Lines]",
          "16: #define X86_REL_ADDR(insn) (((insn).detail->x86.operands[0].type == X86_OP_IMM) \\",
          "17:  ? (uint64_t)((insn).detail->x86.operands[0].imm) \\",
          "18:  : (((insn).address + (insn).size) + (uint64_t)(insn).detail->x86.disp))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "43585e5ef0d52d62632a2eab25bc3c9f2453780d",
      "candidate_info": {
        "commit_hash": "43585e5ef0d52d62632a2eab25bc3c9f2453780d",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/43585e5ef0d52d62632a2eab25bc3c9f2453780d",
        "files": [
          "bindings/python/setup.py",
          "bindings/python/setup_cython.py"
        ],
        "message": "On this branch, dylib and so files are versioned",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py",
          "bindings/python/setup_cython.py||bindings/python/setup_cython.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: BUILD_DIR = SRC_DIR if os.path.exists(SRC_DIR) else os.path.join(ROOT_DIR, '../..')",
          "30: if SYSTEM == 'darwin':",
          "31:     LIBRARY_FILE = \"libcapstone.dylib\"",
          "32:     STATIC_LIBRARY_FILE = 'libcapstone.a'",
          "33: elif SYSTEM in ('win32', 'cygwin'):",
          "34:     LIBRARY_FILE = \"capstone.dll\"",
          "35:     STATIC_LIBRARY_FILE = None",
          "36: else:",
          "37:     LIBRARY_FILE = \"libcapstone.so\"",
          "38:     STATIC_LIBRARY_FILE = 'libcapstone.a'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:     VERSIONED_LIBRARY_FILE = \"libcapstone.4.dylib\"",
          "35:     VERSIONED_LIBRARY_FILE = \"capstone.dll\"",
          "39:     VERSIONED_LIBRARY_FILE = \"libcapstone.so.4\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:     else:   # Unix incl. cygwin",
          "103:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "109:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "110:     os.chdir(cwd)",
          "",
          "[Removed Lines]",
          "105:     if LIBRARY_FILE.endswith('.so'):",
          "106:         shutil.copy(LIBRARY_FILE + '.4', os.path.join(LIBS_DIR, LIBRARY_FILE))",
          "107:     else:",
          "108:         shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "",
          "[Added Lines]",
          "108:     shutil.copy(VERSIONED_LIBRARY_FILE, os.path.join(LIBS_DIR, LIBRARY_FILE))",
          "",
          "---------------"
        ],
        "bindings/python/setup_cython.py||bindings/python/setup_cython.py": [
          "File: bindings/python/setup_cython.py -> bindings/python/setup_cython.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: CYPACKAGE_DIR = os.path.join(ROOT_DIR, 'pyx')",
          "27: if SYSTEM == 'darwin':",
          "28:     LIBRARY_FILE = \"libcapstone.dylib\"",
          "29:     STATIC_LIBRARY_FILE = 'libcapstone.a'",
          "30: elif SYSTEM in ('win32', 'cygwin'):",
          "31:     LIBRARY_FILE = \"capstone.dll\"",
          "32:     STATIC_LIBRARY_FILE = None",
          "33: else:",
          "34:     LIBRARY_FILE = \"libcapstone.so\"",
          "35:     STATIC_LIBRARY_FILE = 'libcapstone.a'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:     VERSIONED_LIBRARY_FILE = \"libcapstone.4.dylib\"",
          "32:     VERSIONED_LIBRARY_FILE = \"capstone.dll\"",
          "36:     VERSIONED_LIBRARY_FILE = \"libcapstone.so.4\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:     else:   # Unix incl. cygwin",
          "94:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "100:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "101:     os.chdir(cwd)",
          "",
          "[Removed Lines]",
          "96:     if LIBRARY_FILE.endswith('.so'):",
          "97:         shutil.copy(LIBRARY_FILE + '.4', os.path.join(LIBS_DIR, LIBRARY_FILE))",
          "98:     else:",
          "99:         shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "",
          "[Added Lines]",
          "99:     shutil.copy(VERSIONED_LIBRARY_FILE, os.path.join(LIBS_DIR, LIBRARY_FILE))",
          "",
          "---------------"
        ]
      }
    }
  ]
}