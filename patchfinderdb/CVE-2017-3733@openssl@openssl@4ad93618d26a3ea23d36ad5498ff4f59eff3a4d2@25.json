{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "22ae579bea93c0a426bacb764783e0e2cf35c14c",
      "candidate_info": {
        "commit_hash": "22ae579bea93c0a426bacb764783e0e2cf35c14c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/22ae579bea93c0a426bacb764783e0e2cf35c14c",
        "files": [
          "include/openssl/ssl.h",
          "ssl/record/rec_layer_d1.c",
          "ssl/ssl_err.c",
          "ssl/statem/statem_dtls.c"
        ],
        "message": "Don't attempt to send fragments > max_send_fragment in DTLS\n\nWe were allocating the write buffer based on the size of max_send_fragment,\nbut ignoring it when writing data. We should fragment handshake messages\nif they exceed max_send_fragment and reject application data writes that\nare too large.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3287)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h",
          "ssl/record/rec_layer_d1.c||ssl/record/rec_layer_d1.c",
          "ssl/ssl_err.c||ssl/ssl_err.c",
          "ssl/statem/statem_dtls.c||ssl/statem/statem_dtls.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2346: # define SSL_R_ENCRYPTED_LENGTH_TOO_LONG                  150",
          "2347: # define SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST              151",
          "2348: # define SSL_R_ERROR_SETTING_TLSA_BASE_DOMAIN             204",
          "2349: # define SSL_R_EXCESSIVE_MESSAGE_SIZE                     152",
          "2350: # define SSL_R_EXTRA_DATA_IN_MESSAGE                      153",
          "2351: # define SSL_R_FAILED_TO_INIT_ASYNC                       405",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2349: # define SSL_R_EXCEEDS_MAX_FRAGMENT_SIZE                  194",
          "",
          "---------------"
        ],
        "ssl/record/rec_layer_d1.c||ssl/record/rec_layer_d1.c": [
          "File: ssl/record/rec_layer_d1.c -> ssl/record/rec_layer_d1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "988:     if (len == 0 && !create_empty_fragment)",
          "989:         return 0;",
          "991:     sess = s->session;",
          "993:     if ((sess == NULL) ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "991:     if (len > s->max_send_fragment) {",
          "992:         SSLerr(SSL_F_DO_DTLS1_WRITE, SSL_R_EXCEEDS_MAX_FRAGMENT_SIZE);",
          "993:         return 0;",
          "994:     }",
          "",
          "---------------"
        ],
        "ssl/ssl_err.c||ssl/ssl_err.c": [
          "File: ssl/ssl_err.c -> ssl/ssl_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "415:      \"error in received cipher list\"},",
          "416:     {ERR_REASON(SSL_R_ERROR_SETTING_TLSA_BASE_DOMAIN),",
          "417:      \"error setting tlsa base domain\"},",
          "418:     {ERR_REASON(SSL_R_EXCESSIVE_MESSAGE_SIZE), \"excessive message size\"},",
          "419:     {ERR_REASON(SSL_R_EXTRA_DATA_IN_MESSAGE), \"extra data in message\"},",
          "420:     {ERR_REASON(SSL_R_FAILED_TO_INIT_ASYNC), \"failed to init async\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "418:     {ERR_REASON(SSL_R_EXCEEDS_MAX_FRAGMENT_SIZE),",
          "419:      \"exceeds max fragment size\"},",
          "",
          "---------------"
        ],
        "ssl/statem/statem_dtls.c||ssl/statem/statem_dtls.c": [
          "File: ssl/statem/statem_dtls.c -> ssl/statem/statem_dtls.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:         else",
          "215:             len = s->init_num;",
          "",
          "[Removed Lines]",
          "218:         if (len > INT_MAX)",
          "219:             len = INT_MAX;",
          "",
          "[Added Lines]",
          "217:         if (len > s->max_send_fragment)",
          "218:             len = s->max_send_fragment;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8accb70ee9aa79c322c589e01ed4a388bfdc5a95",
      "candidate_info": {
        "commit_hash": "8accb70ee9aa79c322c589e01ed4a388bfdc5a95",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8accb70ee9aa79c322c589e01ed4a388bfdc5a95",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "If client doesn't send curves list, don't assume all.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1597)\n(cherry picked from commit 3e37351834c203421b7f492dd83d5e5872e17778)",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "ssl/t1_lib.c||ssl/t1_lib.c"
          ],
          "candidate": [
            "ssl/t1_lib.c||ssl/t1_lib.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "177: };",
          "216: static const unsigned char suiteb_curves[] = {",
          "217:     0, TLSEXT_curve_P_256,",
          "218:     0, TLSEXT_curve_P_384",
          "",
          "[Removed Lines]",
          "179: static const unsigned char eccurves_all[] = {",
          "214: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "291:         SSLerr(SSL_F_TLS1_GET_CURVELIST, ERR_R_INTERNAL_ERROR);",
          "293:         return 0;",
          "297:     }",
          "298: }",
          "",
          "[Removed Lines]",
          "294:     } else {",
          "296:         return 1;",
          "",
          "[Added Lines]",
          "260:     return 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "387:         return nmatch == -1 ? 0 : NID_undef;",
          "390:         return nmatch == -1 ? 0 : NID_undef;",
          "407:         const unsigned char *tsupp = supp;",
          "408:         for (j = 0; j < num_supp; j++, tsupp += 2) {",
          "409:             if (pref[0] == tsupp[0] && pref[1] == tsupp[1]) {",
          "410:                 if (!tls_curve_allowed(s, pref, SSL_SECOP_CURVE_SHARED))",
          "411:                     continue;",
          "412:                 if (nmatch == k) {",
          "413:                     int id = (pref[0] << 8) | pref[1];",
          "414:                     return tls1_ec_curve_id2nid(id, NULL);",
          "415:                 }",
          "416:                 k++;",
          "",
          "[Removed Lines]",
          "383:     if (!tls1_get_curvelist",
          "384:         (s, (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) != 0, &supp,",
          "385:          &num_supp))",
          "388:     if (!tls1_get_curvelist",
          "389:         (s, !(s->options & SSL_OP_CIPHER_SERVER_PREFERENCE), &pref, &num_pref))",
          "396:     if (num_supp == 0 && (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) != 0) {",
          "397:         supp = eccurves_all;",
          "398:         num_supp = sizeof(eccurves_all) / 2;",
          "399:     } else if (num_pref == 0 &&",
          "400:                (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) == 0) {",
          "401:         pref = eccurves_all;",
          "402:         num_pref = sizeof(eccurves_all) / 2;",
          "403:     }",
          "405:     k = 0;",
          "406:     for (i = 0; i < num_pref; i++, pref += 2) {",
          "",
          "[Added Lines]",
          "348:     if (!tls1_get_curvelist(s,",
          "349:             (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) != 0,",
          "350:             &supp, &num_supp))",
          "353:     if (!tls1_get_curvelist(s,",
          "354:             (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) == 0,",
          "355:             &pref, &num_pref))",
          "358:     for (k = 0, i = 0; i < num_pref; i++, pref += 2) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9a6b9f7ed482025d684ef3a04505004f85a97a1",
      "candidate_info": {
        "commit_hash": "c9a6b9f7ed482025d684ef3a04505004f85a97a1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c9a6b9f7ed482025d684ef3a04505004f85a97a1",
        "files": [
          "ssl/d1_msg.c",
          "ssl/record/rec_layer_d1.c",
          "ssl/statem/statem.c",
          "ssl/statem/statem.h",
          "ssl/statem/statem_clnt.c",
          "ssl/statem/statem_srvr.c"
        ],
        "message": "Remove special case code for SCTP reneg handling\n\nThere was code existing which attempted to handle the case where application\ndata is received after a reneg handshake has started in SCTP. In normal DTLS\nwe just fail the connection if this occurs, so there doesn't seem any reason\nto try and work around it for SCTP. In practice it didn't work properly\nanyway and is probably a bad idea to start with.\n\nFixes #3251\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3287)",
        "before_after_code_files": [
          "ssl/d1_msg.c||ssl/d1_msg.c",
          "ssl/record/rec_layer_d1.c||ssl/record/rec_layer_d1.c",
          "ssl/statem/statem.c||ssl/statem/statem.c",
          "ssl/statem/statem.h||ssl/statem/statem.h",
          "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c",
          "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/d1_msg.c||ssl/d1_msg.c": [
          "File: ssl/d1_msg.c -> ssl/d1_msg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: {",
          "15:     int i;",
          "29:         i = s->handshake_func(s);",
          "30:         if (i < 0)",
          "31:             return (i);",
          "",
          "[Removed Lines]",
          "17: #ifndef OPENSSL_NO_SCTP",
          "22:     if ((SSL_in_init(s) && !ossl_statem_get_in_handshake(s)) ||",
          "23:         (BIO_dgram_is_sctp(SSL_get_wbio(s)) &&",
          "24:          ossl_statem_in_sctp_read_sock(s)))",
          "25: #else",
          "26:     if (SSL_in_init(s) && !ossl_statem_get_in_handshake(s))",
          "27: #endif",
          "28:     {",
          "",
          "[Added Lines]",
          "17:     if (SSL_in_init(s) && !ossl_statem_get_in_handshake(s)) {",
          "",
          "---------------"
        ],
        "ssl/record/rec_layer_d1.c||ssl/record/rec_layer_d1.c": [
          "File: ssl/record/rec_layer_d1.c -> ssl/record/rec_layer_d1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "382:     if (!ossl_statem_get_in_handshake(s) && SSL_in_init(s))",
          "384:     {",
          "386:         i = s->handshake_func(s);",
          "",
          "[Removed Lines]",
          "372: #ifndef OPENSSL_NO_SCTP",
          "377:     if ((!ossl_statem_get_in_handshake(s) && SSL_in_init(s)) ||",
          "378:         (BIO_dgram_is_sctp(SSL_get_rbio(s))",
          "379:          && ossl_statem_in_sctp_read_sock(s)",
          "380:          && s->s3->in_read_app_data != 2))",
          "381: #else",
          "383: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "522:             }",
          "523:         }",
          "524: #ifndef OPENSSL_NO_SCTP",
          "",
          "[Removed Lines]",
          "529:         if (BIO_dgram_is_sctp(SSL_get_rbio(s)) &&",
          "530:             SSL3_RECORD_get_type(rr) == SSL3_RT_APPLICATION_DATA &&",
          "531:             ossl_statem_in_sctp_read_sock(s)) {",
          "532:             s->rwstate = SSL_READING;",
          "533:             BIO_clear_retry_flags(SSL_get_rbio(s));",
          "534:             BIO_set_retry_read(SSL_get_rbio(s));",
          "535:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ssl/statem/statem.c||ssl/statem/statem.c": [
          "File: ssl/statem/statem.c -> ssl/statem/statem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "851:     return 0;",
          "852: }",
          "",
          "[Removed Lines]",
          "854: #ifndef OPENSSL_NO_SCTP",
          "858: void ossl_statem_set_sctp_read_sock(SSL *s, int read_sock)",
          "859: {",
          "860:     s->statem.in_sctp_read_sock = read_sock;",
          "861: }",
          "871: int ossl_statem_in_sctp_read_sock(SSL *s)",
          "872: {",
          "873:     return s->statem.in_sctp_read_sock;",
          "874: }",
          "875: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ssl/statem/statem.h||ssl/statem/statem.h": [
          "File: ssl/statem/statem.h -> ssl/statem/statem.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:     unsigned int no_cert_verify;",
          "95:     int use_timer;",
          "99: };",
          "100: typedef struct ossl_statem_st OSSL_STATEM;",
          "",
          "[Removed Lines]",
          "96: #ifndef OPENSSL_NO_SCTP",
          "97:     int in_sctp_read_sock;",
          "98: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117: void ossl_statem_set_in_handshake(SSL *s, int inhand);",
          "118: void ossl_statem_set_hello_verify_done(SSL *s);",
          "119: __owur int ossl_statem_app_data_allowed(SSL *s);",
          "",
          "[Removed Lines]",
          "120: #ifndef OPENSSL_NO_SCTP",
          "121: void ossl_statem_set_sctp_read_sock(SSL *s, int read_sock);",
          "122: __owur int ossl_statem_in_sctp_read_sock(SSL *s);",
          "123: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
          "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "664:     case TLS_ST_CR_CERT_REQ:",
          "665:         return tls_prepare_client_certificate(s, wst);",
          "682:     default:",
          "683:         break;",
          "684:     }",
          "",
          "[Removed Lines]",
          "667: #ifndef OPENSSL_NO_SCTP",
          "668:     case TLS_ST_CR_SRVR_DONE:",
          "670:         if (BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))) {",
          "671:             s->s3->in_read_app_data = 2;",
          "672:             s->rwstate = SSL_READING;",
          "673:             BIO_clear_retry_flags(SSL_get_rbio(s));",
          "674:             BIO_set_retry_read(SSL_get_rbio(s));",
          "675:             ossl_statem_set_sctp_read_sock(s, 1);",
          "676:             return WORK_MORE_A;",
          "677:         }",
          "678:         ossl_statem_set_sctp_read_sock(s, 0);",
          "679:         return WORK_FINISHED_STOP;",
          "680: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2078:     }",
          "2079: #endif",
          "2089: }",
          "2091: static int tls_construct_cke_psk_preamble(SSL *s, unsigned char **p,",
          "",
          "[Removed Lines]",
          "2081: #ifndef OPENSSL_NO_SCTP",
          "2083:     if (SSL_IS_DTLS(s) && BIO_dgram_is_sctp(SSL_get_wbio(s))",
          "2084:         && s->renegotiate != 0)",
          "2085:         return MSG_PROCESS_CONTINUE_PROCESSING;",
          "2086:     else",
          "2087: #endif",
          "2088:         return MSG_PROCESS_FINISHED_READING;",
          "",
          "[Added Lines]",
          "2066:     return MSG_PROCESS_FINISHED_READING;",
          "",
          "---------------"
        ],
        "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c": [
          "File: ssl/statem/statem_srvr.c -> ssl/statem/statem_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "786:     case TLS_ST_SR_KEY_EXCH:",
          "787:         return tls_post_process_client_key_exchange(s, wst);",
          "807:     default:",
          "808:         break;",
          "809:     }",
          "",
          "[Removed Lines]",
          "789:     case TLS_ST_SR_CERT_VRFY:",
          "790: #ifndef OPENSSL_NO_SCTP",
          "792:                BIO_dgram_is_sctp(SSL_get_wbio(s))",
          "794:                && s->renegotiate && BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))) {",
          "795:             s->s3->in_read_app_data = 2;",
          "796:             s->rwstate = SSL_READING;",
          "797:             BIO_clear_retry_flags(SSL_get_rbio(s));",
          "798:             BIO_set_retry_read(SSL_get_rbio(s));",
          "799:             ossl_statem_set_sctp_read_sock(s, 1);",
          "800:             return WORK_MORE_A;",
          "801:         } else {",
          "802:             ossl_statem_set_sctp_read_sock(s, 0);",
          "803:         }",
          "804: #endif",
          "805:         return WORK_FINISHED_CONTINUE;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2638:             BIO_ctrl(SSL_get_wbio(s), BIO_CTRL_DGRAM_SCTP_ADD_AUTH_KEY,",
          "2639:                      sizeof(sctpauthkey), sctpauthkey);",
          "2640:         }",
          "2660:     }",
          "2661: #endif",
          "",
          "[Removed Lines]",
          "2641:         wst = WORK_MORE_B;",
          "2642:     }",
          "2644:     if ((wst == WORK_MORE_B)",
          "2646:         && BIO_dgram_is_sctp(SSL_get_wbio(s))",
          "2648:         && s->renegotiate",
          "2650:         && (s->session->peer == NULL || s->statem.no_cert_verify)",
          "2651:         && BIO_dgram_sctp_msg_waiting(SSL_get_rbio(s))) {",
          "2652:         s->s3->in_read_app_data = 2;",
          "2653:         s->rwstate = SSL_READING;",
          "2654:         BIO_clear_retry_flags(SSL_get_rbio(s));",
          "2655:         BIO_set_retry_read(SSL_get_rbio(s));",
          "2656:         ossl_statem_set_sctp_read_sock(s, 1);",
          "2657:         return WORK_MORE_B;",
          "2658:     } else {",
          "2659:         ossl_statem_set_sctp_read_sock(s, 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2836:         goto f_err;",
          "2837:     }",
          "2840:     if (0) {",
          "2841:  f_err:",
          "2842:         ssl3_send_alert(s, SSL3_AL_FATAL, al);",
          "",
          "[Removed Lines]",
          "2839:     ret = MSG_PROCESS_CONTINUE_PROCESSING;",
          "",
          "[Added Lines]",
          "2802:     ret = MSG_PROCESS_CONTINUE_READING;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6fd7aa95f08f72fc3cd603fe009e0e74b2edb25d",
      "candidate_info": {
        "commit_hash": "6fd7aa95f08f72fc3cd603fe009e0e74b2edb25d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6fd7aa95f08f72fc3cd603fe009e0e74b2edb25d",
        "files": [
          "crypto/bn/asm/sparcv9-mont.pl"
        ],
        "message": "bn/asm/sparcv9-mont.pl: fix squaring code path.\n\nThis module is used only with odd input lengths, i.e. not used in normal\nPKI cases, on contemporary processors. The problem was \"illuminated\" by\nfuzzing tests.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit 120a9e1a825bd0407639bedb1e8e15823cf7a545)",
        "before_after_code_files": [
          "crypto/bn/asm/sparcv9-mont.pl||crypto/bn/asm/sparcv9-mont.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/asm/sparcv9-mont.pl||crypto/bn/asm/sparcv9-mont.pl": [
          "File: crypto/bn/asm/sparcv9-mont.pl -> crypto/bn/asm/sparcv9-mont.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "302: ########",
          "304: ######## code without following dedicated squaring procedure.",
          "305: ########",
          "306: $sbit=\"%i2\";  # re-use $bp!",
          "",
          "[Removed Lines]",
          "303: ######## .Lbn_sqr_mont gives up to 20% *overall* improvement over",
          "",
          "[Added Lines]",
          "303: ######## .Lbn_sqr_mont gives up to 20% *overall* improvement over",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "413:  srlx $car1,32,$car1",
          "414:  add %sp,$bias+$frame+4,$tp",
          "417:  mulx $apj,$mul0,$acc0",
          "418:  mulx $npj,$mul1,$acc1",
          "419:  add $acc0,$car0,$car0",
          "",
          "[Removed Lines]",
          "416: .Lsqr_2nd:",
          "",
          "[Added Lines]",
          "416: .Lsqr_2nd:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "422:  and $car0,$mask,$acc0",
          "423:  ld [$np+$j],$npj   ! np[j]",
          "424:  srlx $car0,32,$car0",
          "426:  ld [$tp+8],$tpj   ! tp[j]",
          "427:  add $acc0,$acc0,$acc0",
          "428:  add $j,4,$j    ! j++",
          "",
          "[Removed Lines]",
          "425:  add $acc1,$car1,$car1",
          "",
          "[Added Lines]",
          "425:  add $acc1,$car1,$car1",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "436:  bl %icc,.Lsqr_2nd",
          "437:  add $tp,4,$tp   ! tp++",
          "438: !.Lsqr_2nd",
          "440:  mulx $apj,$mul0,$acc0",
          "441:  mulx $npj,$mul1,$acc1",
          "442:  add $acc0,$car0,$car0",
          "443:  add $tpj,$car1,$car1",
          "445:  srlx $car0,32,$car0",
          "446:  add $acc1,$car1,$car1",
          "447:  add $acc0,$acc0,$acc0",
          "",
          "[Removed Lines]",
          "444:  and $car0,$mask,$acc0",
          "",
          "[Added Lines]",
          "444:  and $car0,$mask,$acc0",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "449:  srlx $acc0,32,$sbit",
          "450:  and $acc0,$mask,$acc0",
          "451:  add $acc0,$car1,$car1",
          "453:  srlx $car1,32,$car1",
          "455:  add $car0,$car0,$car0",
          "",
          "[Removed Lines]",
          "452:  st $car1,[$tp]   ! tp[j-1]",
          "",
          "[Added Lines]",
          "452:  st $car1,[$tp]   ! tp[j-1]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "509:  add $j,4,$j",
          "510:  cmp $j,$num",
          "511:  be,pn %icc,.Lsqr_no_inner2",
          "514: .Lsqr_inner2:",
          "515:  mulx $apj,$mul0,$acc0",
          "",
          "[Removed Lines]",
          "512:  add $tp,4,$tp",
          "",
          "[Added Lines]",
          "512:  add $tp,4,$tp",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "517:  add $tpj,$car1,$car1",
          "518:  add $acc0,$car0,$car0",
          "519:  ld [$ap+$j],$apj   ! ap[j]",
          "521:  ld [$np+$j],$npj   ! np[j]",
          "522:  srlx $car0,32,$car0",
          "523:  add $acc0,$acc0,$acc0",
          "",
          "[Removed Lines]",
          "520:  and $car0,$mask,$acc0",
          "",
          "[Added Lines]",
          "520:  and $car0,$mask,$acc0",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "532:  st $car1,[$tp]   ! tp[j-1]",
          "533:  srlx $car1,32,$car1",
          "534:  bl %icc,.Lsqr_inner2",
          "537: .Lsqr_no_inner2:",
          "538:  mulx $apj,$mul0,$acc0",
          "539:  mulx $npj,$mul1,$acc1",
          "541:  add $acc0,$car0,$car0",
          "542:  and $car0,$mask,$acc0",
          "543:  srlx $car0,32,$car0",
          "",
          "[Removed Lines]",
          "535:  add $tp,4,$tp   ! tp++",
          "540:  add $tpj,$car1,$car1",
          "",
          "[Added Lines]",
          "535:  add $tp,4,$tp   ! tp++",
          "540:  add $tpj,$sbit,$sbit",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "546:  srlx $acc0,32,$sbit",
          "547:  and $acc0,$mask,$acc0",
          "548:  add $acc0,$car1,$car1",
          "550:  st $car1,[$tp]   ! tp[j-1]",
          "551:  srlx $car1,32,$car1",
          "",
          "[Removed Lines]",
          "549:  add $acc1,$car1,$car1",
          "",
          "[Added Lines]",
          "549:  add $acc1,$car1,$car1",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "591:  cmp $j,$i",
          "592:  add $acc1,$car1,$car1",
          "593:  ld [$np+$j],$npj",
          "595:  srlx $car1,32,$car1",
          "596:  bl %icc,.Lsqr_last",
          "597:  add $tp,4,$tp",
          "598: !.Lsqr_last",
          "600:  mulx $npj,$mul1,$acc1",
          "602:  add $acc0,$car1,$car1",
          "603:  add $acc1,$car1,$car1",
          "604:  st $car1,[$tp]",
          "",
          "[Removed Lines]",
          "594:  st $car1,[$tp]",
          "601:  add $tpj,$car1,$car1",
          "",
          "[Added Lines]",
          "594:  st $car1,[$tp]",
          "595:  srlx $car1,32,$car1",
          "596:  bl %icc,.Lsqr_last",
          "597:  add $tp,4,$tp",
          "604:  add $tmp0,$sbit,$sbit",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "949bd8e45eb4d2697d20c2249fa42cba545da2ac",
      "candidate_info": {
        "commit_hash": "949bd8e45eb4d2697d20c2249fa42cba545da2ac",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/949bd8e45eb4d2697d20c2249fa42cba545da2ac",
        "files": [
          "test/recipes/60-test_x509_store.t"
        ],
        "message": "Add a test of the X509_STORE / X509_LOOKUP API\n\nFortunately, \"openssl verify\" makes good use of that API\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2652)\n(cherry picked from commit bb0f7eca75b8da1538c08c1f5be1bb7ea8f40638)",
        "before_after_code_files": [
          "test/recipes/60-test_x509_store.t||test/recipes/60-test_x509_store.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/60-test_x509_store.t||test/recipes/60-test_x509_store.t": [
          "File: test/recipes/60-test_x509_store.t -> test/recipes/60-test_x509_store.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #! /usr/bin/env perl",
          "2: # Copyright 2015-2016 The OpenSSL Project Authors. All Rights Reserved.",
          "3: #",
          "4: # Licensed under the OpenSSL license (the \"License\").  You may not use",
          "5: # this file except in compliance with the License.  You can obtain a copy",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "10: use strict;",
          "11: use warnings;",
          "13: use File::Copy;",
          "14: use File::Spec::Functions qw/:DEFAULT canonpath/;",
          "15: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "17: setup(\"test_x509_store\");",
          "19: # We use 'openssl verify' for these tests, as it contains everything",
          "20: # we need to conduct these tests.  The tests here are a subset of the",
          "21: # ones found in 25-test_verify.t",
          "23: sub verify {",
          "24:     my ($cert, $purpose, $trustedpath, $untrusted, @opts) = @_;",
          "25:     my @args = qw(openssl verify -auth_level 1 -purpose);",
          "26:     my @path = qw(test certs);",
          "27:     push(@args, \"$purpose\", @opts);",
          "28:     push(@args, \"-CApath\", $trustedpath);",
          "29:     for (@$untrusted) { push(@args, \"-untrusted\", srctop_file(@path, \"$_.pem\")) }",
          "30:     push(@args, srctop_file(@path, \"$cert.pem\"));",
          "31:     run(app([@args]));",
          "32: }",
          "34: plan tests => 3;",
          "36: indir \"60-test_x509_store\" => sub {",
          "37:     for ((\"root-cert\")) {",
          "38:         copy(srctop_file(\"test\", \"certs\", \"$_.pem\"), curdir());",
          "39:     }",
          "40:     ok(run(app([qw(openssl rehash), curdir()])), \"Rehashing\");",
          "42:     # Canonical success",
          "43:     ok(verify(\"ee-cert\", \"sslserver\", curdir(), [\"ca-cert\"], \"-show_chain\"),",
          "44:        \"verify ee-cert\");",
          "46:     # Failure because root cert not present in CApath",
          "47:     ok(!verify(\"ca-root2\", \"any\", curdir(), [], \"-show_chain\"));",
          "48: }, create => 1, cleanup => 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}