{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "be25316469eebf7e55cdcf3b5ded5edcf09a2723",
      "candidate_info": {
        "commit_hash": "be25316469eebf7e55cdcf3b5ded5edcf09a2723",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/be25316469eebf7e55cdcf3b5ded5edcf09a2723",
        "files": [
          "crypto/aes/asm/bsaes-armv7.pl"
        ],
        "message": "aes/asm/bsaes-armv7.pl: relax stack alignment requirement.\n\nEven though Apple refers to Procedure Call Standard for ARM Architecture\n(AAPCS), they apparently adhere to custom version that doesn't follow\nstack alignment constraints in the said standard. [Why or why? If it's\nvendor lock-in thing, then it would be like worst spot ever.] And since\nbsaes-armv7 relied on standard alignment, it became problematic to\nexecute the code on iOS.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 0822d41b6d54132df96c02cc6f6fa9b179378351)",
        "before_after_code_files": [
          "crypto/aes/asm/bsaes-armv7.pl||crypto/aes/asm/bsaes-armv7.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/bsaes-armv7.pl||crypto/aes/asm/bsaes-armv7.pl": [
          "File: crypto/aes/asm/bsaes-armv7.pl -> crypto/aes/asm/bsaes-armv7.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1365:  vmov @XMM[4],@XMM[15]  @ just in case ensure that IV",
          "1366:  vmov @XMM[5],@XMM[0]   @ and input are preserved",
          "1367:  bl AES_decrypt",
          "1369:  veor @XMM[0], @XMM[0], @XMM[4] @ ^= IV",
          "1370:  vmov @XMM[15], @XMM[5]  @ @XMM[5] holds input",
          "1371:  vst1.8 {@XMM[0]}, [$rounds]  @ write output",
          "",
          "[Removed Lines]",
          "1368:  vld1.8 {@XMM[0]}, [$fp,:64]  @ load result",
          "",
          "[Added Lines]",
          "1368:  vld1.8 {@XMM[0]}, [$fp]  @ load result",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af8852e9957ce00c44653a73ba2f3e332b493c52",
      "candidate_info": {
        "commit_hash": "af8852e9957ce00c44653a73ba2f3e332b493c52",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/af8852e9957ce00c44653a73ba2f3e332b493c52",
        "files": [
          "crypto/ct/ct_policy.c"
        ],
        "message": "Cast time_t to uint64_t before converting to milliseconds in ct_policy.c\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit 5e08606619c0b0e065f1ffa12ce6411f321ed174)",
        "before_after_code_files": [
          "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c": [
          "File: crypto/ct/ct_policy.c -> crypto/ct/ct_policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     }",
          "37:     return ctx;",
          "38: }",
          "",
          "[Removed Lines]",
          "36:     ctx->epoch_time_in_ms = (time(NULL) + SCT_CLOCK_DRIFT_TOLERANCE) * 1000;",
          "",
          "[Added Lines]",
          "36:     ctx->epoch_time_in_ms = (uint64_t)(time(NULL) + SCT_CLOCK_DRIFT_TOLERANCE) *",
          "37:             1000;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3b56f2f43b4f405a7023f055520075e327501bd",
      "candidate_info": {
        "commit_hash": "a3b56f2f43b4f405a7023f055520075e327501bd",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a3b56f2f43b4f405a7023f055520075e327501bd",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "Handle find-doc-nits script rename\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit a3b0d466930ec45bc3ddf4c9e853d73d37783f44)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "582:           generate_crypto_conf generate_crypto_asn1",
          "584: doc-nits:",
          "586:  if [ -s doc-nits ] ; then cat doc-nits; rm doc-nits ; exit 1; fi",
          "588: # Test coverage is a good idea for the future",
          "",
          "[Removed Lines]",
          "585:  (cd $(SRCDIR); $(PERL) util/find-doc-nits.pl -n ) >doc-nits",
          "",
          "[Added Lines]",
          "585:  (cd $(SRCDIR); $(PERL) util/find-doc-nits -n ) >doc-nits",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ca3e0f250b1b07557341b03141984f905761d19",
      "candidate_info": {
        "commit_hash": "6ca3e0f250b1b07557341b03141984f905761d19",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6ca3e0f250b1b07557341b03141984f905761d19",
        "files": [
          "test/d2i_test.c",
          "test/recipes/25-test_d2i.t"
        ],
        "message": "Fix no-cms (CVE-2016-7053)\n\nReviewed-by: Matt Caswell <matt@openssl.org>",
        "before_after_code_files": [
          "test/d2i_test.c||test/d2i_test.c",
          "test/recipes/25-test_d2i.t||test/recipes/25-test_d2i.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/d2i_test.c||test/d2i_test.c": [
          "File: test/d2i_test.c -> test/d2i_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #include <openssl/err.h>",
          "21: #include <openssl/x509.h>",
          "22: #include <openssl/x509v3.h>",
          "24: #include \"e_os.h\"",
          "26: static const ASN1_ITEM *item_type;",
          "",
          "[Removed Lines]",
          "23: #include <openssl/cms.h>",
          "",
          "[Added Lines]",
          "23: #ifndef OPENSSL_NO_CMS",
          "24: # include <openssl/cms.h>",
          "25: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "151:         ASN1_ITEM_ref(X509),",
          "152:         ASN1_ITEM_ref(GENERAL_NAME),",
          "153:         ASN1_ITEM_ref(ASN1_INTEGER),",
          "154:         ASN1_ITEM_ref(CMS_ContentInfo)",
          "155:     };",
          "157:     static error_enum expected_errors[] = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156: #ifndef OPENSSL_NO_CMS",
          "158: #endif",
          "",
          "---------------"
        ],
        "test/recipes/25-test_d2i.t||test/recipes/25-test_d2i.t": [
          "File: test/recipes/25-test_d2i.t -> test/recipes/25-test_d2i.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use File::Spec;",
          "14: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "16: setup(\"test_d2i\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: use OpenSSL::Test::Utils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:              srctop_file('test','d2i-tests','bad-int-padminus1.der')])),",
          "81:    \"Running d2i_test bad-int-padminus1.der INTEGER\");",
          "",
          "[Removed Lines]",
          "83: # Invalid CMS structure with decode error in CHOICE value.",
          "84: # Test for CVE-2016-7053",
          "86: ok(run(test([\"d2i_test\", \"CMS_ContentInfo\", \"decode\",",
          "87:              srctop_file('test','d2i-tests','bad-cms.der')])),",
          "88:    \"Running d2i_test bad-cms.der CMS ContentInfo\");",
          "",
          "[Added Lines]",
          "84: SKIP: {",
          "85:   skip \"No CMS support in this configuration\", 1 if disabled(\"cms\");",
          "87:   # Invalid CMS structure with decode error in CHOICE value.",
          "88:   # Test for CVE-2016-7053",
          "90:   ok(run(test([\"d2i_test\", \"CMS_ContentInfo\", \"decode\",",
          "91:                srctop_file('test','d2i-tests','bad-cms.der')])),",
          "92:      \"Running d2i_test bad-cms.der CMS ContentInfo\");",
          "93: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ead66d1c0ce8e16ea2d4a1447c42073d7773e88",
      "candidate_info": {
        "commit_hash": "3ead66d1c0ce8e16ea2d4a1447c42073d7773e88",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3ead66d1c0ce8e16ea2d4a1447c42073d7773e88",
        "files": [
          "crypto/pem/pvkfmt.c"
        ],
        "message": "Fix MSBLOB format with RSA.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 159f6e7ecfde9e98194d6111c85587b85b6a8fc5)",
        "before_after_code_files": [
          "crypto/pem/pvkfmt.c||crypto/pem/pvkfmt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/pem/pvkfmt.c||crypto/pem/pvkfmt.c": [
          "File: crypto/pem/pvkfmt.c -> crypto/pem/pvkfmt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "548:     hnbyte = (RSA_bits(rsa) + 15) >> 4;",
          "549:     RSA_get0_key(rsa, &n, &e, &d);",
          "550:     write_lebn(out, e, 4);",
          "552:     if (ispub)",
          "553:         return;",
          "554:     RSA_get0_factors(rsa, &p, &q);",
          "",
          "[Removed Lines]",
          "551:     write_lebn(out, n, -1);",
          "",
          "[Added Lines]",
          "551:     write_lebn(out, n, nbyte);",
          "",
          "---------------"
        ]
      }
    }
  ]
}