{
  "cve_id": "CVE-2022-2526",
  "cve_desc": "A use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later.",
  "repo": "systemd/systemd",
  "patch_hash": "d973d94dec349fb676fdd844f6fe2ada3538f27c",
  "patch_info": {
    "commit_hash": "d973d94dec349fb676fdd844f6fe2ada3538f27c",
    "repo": "systemd/systemd",
    "commit_url": "https://github.com/systemd/systemd/commit/d973d94dec349fb676fdd844f6fe2ada3538f27c",
    "files": [
      "src/resolve/resolved-dns-stream.c"
    ],
    "message": "resolved: pin stream while calling callbacks for it\n\nThese callbacks might unref the stream, but we still have to access it,\nlet's hence ref it explicitly.\n\nMaybe fixes: #10725",
    "before_after_code_files": [
      "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
    ]
  },
  "patch_diff": {
    "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
      "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "273: }",
      "275: static int on_stream_io(sd_event_source *es, int fd, uint32_t revents, void *userdata) {",
      "277:         int r;",
      "279:         assert(s);",
      "",
      "[Removed Lines]",
      "276:         DnsStream *s = userdata;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7172e4ee1ea27c33f8d125132a7498f1182ea784",
      "candidate_info": {
        "commit_hash": "7172e4ee1ea27c33f8d125132a7498f1182ea784",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/7172e4ee1ea27c33f8d125132a7498f1182ea784",
        "files": [
          "src/resolve/resolved-dns-stream.c",
          "src/resolve/resolved-dns-transaction.c"
        ],
        "message": "resolved: implicitly disconnect a stream from its server when a stream is closed\n\nPreviously, the callback function did this, but let's do this in the\ncaller instead, to make this more robust, and use our new helper\nfunction for it.",
        "before_after_code_files": [
          "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c",
          "src/resolve/resolved-dns-transaction.c||src/resolve/resolved-dns-transaction.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ],
          "candidate": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ]
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
          "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #endif",
          "65:                 dns_stream_stop(s);",
          "67:         if (s->complete)",
          "68:                 s->complete(s, error);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:         dns_stream_detach(s);",
          "",
          "---------------"
        ],
        "src/resolve/resolved-dns-transaction.c||src/resolve/resolved-dns-transaction.c": [
          "File: src/resolve/resolved-dns-transaction.c -> src/resolve/resolved-dns-transaction.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "503: }",
          "505: static int on_stream_complete(DnsStream *s, int error) {",
          "512:         if (ERRNO_IS_DISCONNECT(error) && s->protocol != DNS_PROTOCOL_LLMNR) {",
          "513:                 log_debug_errno(error, \"Connection failure for DNS TCP stream: %m\");",
          "",
          "[Removed Lines]",
          "506:         _cleanup_(dns_stream_unrefp) DnsStream *p = NULL;",
          "509:         if (s->server && s->server->stream == s)",
          "510:                 p = TAKE_PTR(s->server->stream);",
          "",
          "[Added Lines]",
          "506:         assert(s);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "499aa1d31b1607a4dcd81b9b19c757ee4f4243b9",
      "candidate_info": {
        "commit_hash": "499aa1d31b1607a4dcd81b9b19c757ee4f4243b9",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/499aa1d31b1607a4dcd81b9b19c757ee4f4243b9",
        "files": [
          "src/resolve/resolved-dns-stream.c"
        ],
        "message": "resolved: add some assert()s",
        "before_after_code_files": [
          "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ],
          "candidate": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ]
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
          "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "466:         int r;",
          "468:         assert(m);",
          "469:         assert(fd >= 0);",
          "471:         if (m->n_dns_streams > DNS_STREAMS_MAX)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "469:         assert(ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "522:         int r;",
          "524:         assert(s);",
          "526:         r = ordered_set_put(s->write_queue, p);",
          "527:         if (r < 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "526:         assert(p);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "898892e825e7a05891a9f8a5616f041958ef4d61",
      "candidate_info": {
        "commit_hash": "898892e825e7a05891a9f8a5616f041958ef4d61",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/898892e825e7a05891a9f8a5616f041958ef4d61",
        "files": [
          "src/resolve/resolved-dns-stream.c"
        ],
        "message": "resolved: ensure DnsStream.fd is initialized before first error path",
        "before_after_code_files": [
          "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ],
          "candidate": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ]
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
          "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "465:         if (m->n_dns_streams > DNS_STREAMS_MAX)",
          "466:                 return -EBUSY;",
          "469:         if (!s)",
          "470:                 return -ENOMEM;",
          "472:         r = ordered_set_ensure_allocated(&s->write_queue, &dns_packet_hash_ops);",
          "473:         if (r < 0)",
          "474:                 return r;",
          "480:         r = sd_event_add_io(m->event, &s->io_event_source, fd, EPOLLIN, on_stream_io, s);",
          "481:         if (r < 0)",
          "482:                 return r;",
          "",
          "[Removed Lines]",
          "468:         s = new0(DnsStream, 1);",
          "476:         s->n_ref = 1;",
          "477:         s->fd = -1;",
          "478:         s->protocol = protocol;",
          "",
          "[Added Lines]",
          "468:         s = new(DnsStream, 1);",
          "473:                 .n_ref = 1,",
          "474:                 .fd = -1,",
          "475:                 .protocol = protocol,",
          "476:         };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "97d5d9055f0cdfdfee901452848a519b49896382",
      "candidate_info": {
        "commit_hash": "97d5d9055f0cdfdfee901452848a519b49896382",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/97d5d9055f0cdfdfee901452848a519b49896382",
        "files": [
          "src/resolve/resolved-dns-transaction.c"
        ],
        "message": "resolved: don't read packet from DnsStream on on_stream_complete() of DnsTransaction\n\nWe register an on_packet() handler anyway, which is called first.\nThere's hence no need to check in on_stream_complete() again, as it is\nalready taken by that time.",
        "before_after_code_files": [
          "src/resolve/resolved-dns-transaction.c||src/resolve/resolved-dns-transaction.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-transaction.c||src/resolve/resolved-dns-transaction.c": [
          "File: src/resolve/resolved-dns-transaction.c -> src/resolve/resolved-dns-transaction.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "505: static int on_stream_complete(DnsStream *s, int error) {",
          "506:         _cleanup_(dns_stream_unrefp) DnsStream *p = NULL;",
          "511:         if (s->server && s->server->stream == s)",
          "",
          "[Removed Lines]",
          "507:         DnsTransaction *t, *n;",
          "508:         int r = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "515:                 log_debug_errno(error, \"Connection failure for DNS TCP stream: %m\");",
          "517:                 if (s->transactions) {",
          "518:                         t = s->transactions;",
          "519:                         dns_server_packet_lost(t->server, IPPROTO_TCP, t->current_feature_level);",
          "520:                 }",
          "521:         }",
          "525:                         on_transaction_stream_error(t, error);",
          "531: }",
          "533: static int dns_stream_on_packet(DnsStream *s) {",
          "",
          "[Removed Lines]",
          "523:         LIST_FOREACH_SAFE(transactions_by_stream, t, n, s->transactions)",
          "524:                 if (error != 0)",
          "526:                 else if (DNS_PACKET_ID(s->read_packet) == t->id)",
          "528:                         r = dns_transaction_on_stream_packet(t, s->read_packet);",
          "530:         return r;",
          "",
          "[Added Lines]",
          "516:                         DnsTransaction *t;",
          "523:         if (error != 0) {",
          "524:                 DnsTransaction *t, *n;",
          "526:                 LIST_FOREACH_SAFE(transactions_by_stream, t, n, s->transactions)",
          "528:         }",
          "530:         return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}