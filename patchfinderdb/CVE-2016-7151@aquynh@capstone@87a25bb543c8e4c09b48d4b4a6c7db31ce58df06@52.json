{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "44ca0e3ab343c011ffce512419934ee69a556ae8",
      "candidate_info": {
        "commit_hash": "44ca0e3ab343c011ffce512419934ee69a556ae8",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/44ca0e3ab343c011ffce512419934ee69a556ae8",
        "files": [
          "cstool/cstool.c",
          "cstool/cstool_tms320c64x.c"
        ],
        "message": "Added cstool support for tms320c64x",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c",
          "cstool/cstool_tms320c64x.c||cstool/cstool_tms320c64x.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: void print_insn_detail_sysz(csh handle, cs_insn *ins);",
          "15: void print_insn_detail_xcore(csh handle, cs_insn *ins);",
          "16: void print_insn_detail_m68k(csh handle, cs_insn *ins);",
          "18: void print_string_hex(char *comment, unsigned char *str, size_t len)",
          "19: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: void print_insn_detail_tms320c64x(csh handle, cs_insn *ins);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123:   printf(\"        m68k40:    m68k_040\\n\");",
          "124:  }",
          "126:  printf(\"\\n\");",
          "127: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:  if (cs_support(CS_ARCH_TMS320C64X)) {",
          "128:   printf(\"        tms320c64x:TMS320C64x\\n\");",
          "129:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "319:   err = cs_open(CS_ARCH_M68K, CS_MODE_M68K_040, &handle);",
          "320:  }",
          "323:  if (err) {",
          "324:   printf(\"ERROR: Failed on cs_open(), quit!\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:  if (!strcmp(mode,\"tms320c64x\")) {",
          "328:   arch = CS_ARCH_TMS320C64X;",
          "329:   err = cs_open(CS_ARCH_TMS320C64X, CS_MODE_BIG_ENDIAN, &handle);",
          "330:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "383:      case CS_ARCH_M68K:",
          "384:         print_insn_detail_m68k(handle, &insn[i]);",
          "385:         break;",
          "386:     }",
          "388:     if (insn[i].detail->groups_count) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396:      case CS_ARCH_TMS320C64X:",
          "397:         print_insn_detail_tms320c64x(handle, &insn[i]);",
          "398:         break;",
          "",
          "---------------"
        ],
        "cstool/cstool_tms320c64x.c||cstool/cstool_tms320c64x.c": [
          "File: cstool/cstool_tms320c64x.c -> cstool/cstool_tms320c64x.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: #include <stdio.h>",
          "5: #include <capstone/capstone.h>",
          "7: void print_string_hex(char *comment, unsigned char *str, size_t len);",
          "9: void print_insn_detail_tms320c64x(csh handle, cs_insn *ins)",
          "10: {",
          "11:  cs_tms320c64x *tms320c64x;",
          "12:  int i;",
          "15:  if (ins->detail == NULL)",
          "16:   return;",
          "18:  tms320c64x = &(ins->detail->tms320c64x);",
          "19:  if (tms320c64x->op_count)",
          "20:   printf(\"\\top_count: %u\\n\", tms320c64x->op_count);",
          "22:  for (i = 0; i < tms320c64x->op_count; i++) {",
          "23:   cs_tms320c64x_op *op = &(tms320c64x->operands[i]);",
          "24:   switch((int)op->type) {",
          "25:    default:",
          "26:     break;",
          "27:    case TMS320C64X_OP_REG:",
          "28:     printf(\"\\t\\toperands[%u].type: REG = %s\\n\", i, cs_reg_name(handle, op->reg));",
          "29:     break;",
          "30:    case TMS320C64X_OP_IMM:",
          "31:     printf(\"\\t\\toperands[%u].type: IMM = 0x%x\\n\", i, op->imm);",
          "32:     break;",
          "33:    case TMS320C64X_OP_MEM:",
          "34:     printf(\"\\t\\toperands[%u].type: MEM\\n\", i);",
          "35:     if (op->mem.base != TMS320C64X_REG_INVALID)",
          "36:      printf(\"\\t\\t\\toperands[%u].mem.base: REG = %s\\n\",",
          "37:        i, cs_reg_name(handle, op->mem.base));",
          "38:     printf(\"\\t\\t\\toperands[%u].mem.disptype: \", i);",
          "39:     if(op->mem.disptype == TMS320C64X_MEM_DISP_INVALID) {",
          "40:      printf(\"Invalid\\n\");",
          "41:      printf(\"\\t\\t\\toperands[%u].mem.disp: %u\\n\", i, op->mem.disp);",
          "42:     }",
          "43:     if(op->mem.disptype == TMS320C64X_MEM_DISP_CONSTANT) {",
          "44:      printf(\"Constant\\n\");",
          "45:      printf(\"\\t\\t\\toperands[%u].mem.disp: %u\\n\", i, op->mem.disp);",
          "46:     }",
          "47:     if(op->mem.disptype == TMS320C64X_MEM_DISP_REGISTER) {",
          "48:      printf(\"Register\\n\");",
          "49:      printf(\"\\t\\t\\toperands[%u].mem.disp: %s\\n\", i, cs_reg_name(handle, op->mem.disp));",
          "50:     }",
          "51:     printf(\"\\t\\t\\toperands[%u].mem.unit: %u\\n\", i, op->mem.unit);",
          "52:     printf(\"\\t\\t\\toperands[%u].mem.direction: \", i);",
          "53:     if(op->mem.direction == TMS320C64X_MEM_DIR_INVALID)",
          "54:      printf(\"Invalid\\n\");",
          "55:     if(op->mem.direction == TMS320C64X_MEM_DIR_FW)",
          "56:      printf(\"Forward\\n\");",
          "57:     if(op->mem.direction == TMS320C64X_MEM_DIR_BW)",
          "58:      printf(\"Backward\\n\");",
          "59:     printf(\"\\t\\t\\toperands[%u].mem.modify: \", i);",
          "60:     if(op->mem.modify == TMS320C64X_MEM_MOD_INVALID)",
          "61:      printf(\"Invalid\\n\");",
          "62:     if(op->mem.modify == TMS320C64X_MEM_MOD_NO)",
          "63:      printf(\"No\\n\");",
          "64:     if(op->mem.modify == TMS320C64X_MEM_MOD_PRE)",
          "65:      printf(\"Pre\\n\");",
          "66:     if(op->mem.modify == TMS320C64X_MEM_MOD_POST)",
          "67:      printf(\"Post\\n\");",
          "68:     printf(\"\\t\\t\\toperands[%u].mem.scaled: %u\\n\", i, op->mem.scaled);",
          "70:     break;",
          "71:    case TMS320C64X_OP_REGPAIR:",
          "72:     printf(\"\\t\\toperands[%u].type: REGPAIR = %s:%s\\n\", i, cs_reg_name(handle, op->reg + 1), cs_reg_name(handle, op->reg));",
          "73:     break;",
          "74:   }",
          "75:  }",
          "77:  printf(\"\\tFunctional unit: \");",
          "78:  switch(tms320c64x->funit.unit) {",
          "79:   case TMS320C64X_FUNIT_D:",
          "80:    printf(\"D%u\\n\", tms320c64x->funit.side);",
          "81:    break;",
          "82:   case TMS320C64X_FUNIT_L:",
          "83:    printf(\"L%u\\n\", tms320c64x->funit.side);",
          "84:    break;",
          "85:   case TMS320C64X_FUNIT_M:",
          "86:    printf(\"M%u\\n\", tms320c64x->funit.side);",
          "87:    break;",
          "88:   case TMS320C64X_FUNIT_S:",
          "89:    printf(\"S%u\\n\", tms320c64x->funit.side);",
          "90:    break;",
          "91:   case TMS320C64X_FUNIT_NO:",
          "92:    printf(\"No Functional Unit\\n\");",
          "93:    break;",
          "94:   default:",
          "95:    printf(\"Unknown (Unit %u, Side %u)\\n\", tms320c64x->funit.unit, tms320c64x->funit.side);",
          "96:    break;",
          "97:  }",
          "98:  if(tms320c64x->funit.crosspath == 1)",
          "99:   printf(\"\\tCrosspath: 1\\n\");",
          "101:  if(tms320c64x->condition.reg != TMS320C64X_REG_INVALID)",
          "102:   printf(\"\\tCondition: [%c%s]\\n\", (tms320c64x->condition.zero == 1) ? '!' : ' ', cs_reg_name(handle, tms320c64x->condition.reg));",
          "103:  printf(\"\\tParallel: %s\\n\", (tms320c64x->parallel == 1) ? \"true\" : \"false\");",
          "105:  printf(\"\\n\");",
          "106: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "565b6c3363766daea7489c7ef3ad25d0d8455f25",
      "candidate_info": {
        "commit_hash": "565b6c3363766daea7489c7ef3ad25d0d8455f25",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/565b6c3363766daea7489c7ef3ad25d0d8455f25",
        "files": [
          "COMPILE_MSVC.TXT",
          "HACK.TXT",
          "contrib/cs_driver/cs_driver/cs_driver.c",
          "docs/README",
          "include/capstone/x86.h",
          "tests/test_winkernel.cpp",
          "windows/winkernel_mm.c",
          "windows/winkernel_mm.h"
        ],
        "message": "fix typo, style\n\nSigned-off-by: Satoshi Tanda <tanda.sat@gmail.com>",
        "before_after_code_files": [
          "contrib/cs_driver/cs_driver/cs_driver.c||contrics_driver/cs_driver/cs_driver.c",
          "include/capstone/x86.h||include/capstone/x86.h",
          "tests/test_winkernel.cpp||tests/test_winkernel.cpp",
          "windows/winkernel_mm.c||windows/winkernel_mm.c",
          "windows/winkernel_mm.h||windows/winkernel_mm.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/cs_driver/cs_driver/cs_driver.c||contrics_driver/cs_driver/cs_driver.c": [
          "File: contrib/cs_driver/cs_driver/cs_driver.c -> contrics_driver/cs_driver/cs_driver.c"
        ],
        "include/capstone/x86.h||include/capstone/x86.h": [
          "File: include/capstone/x86.h -> include/capstone/x86.h"
        ],
        "tests/test_winkernel.cpp||tests/test_winkernel.cpp": [
          "File: tests/test_winkernel.cpp -> tests/test_winkernel.cpp"
        ],
        "windows/winkernel_mm.c||windows/winkernel_mm.c": [
          "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:  return new_ptr;",
          "78: }",
          "83: #pragma warning(push)",
          "87: int CAPSTONE_API cs_winkernel_vsnprintf(char *buffer, size_t count, const char *format, va_list argptr)",
          "88: {",
          "89:  int result = _vsnprintf(buffer, count, format, argptr);",
          "94:  if (result == -1 || (size_t)result == count) {",
          "95:   buffer[count - 1] = '\\0';",
          "96:  }",
          "98:  if (result == -1) {",
          "",
          "[Removed Lines]",
          "84: #pragma warning(disable : 28719)  // Banned API Usage : _vsnprintf is a Banned",
          "",
          "[Added Lines]",
          "87: #pragma warning(disable : 28719)",
          "",
          "---------------"
        ],
        "windows/winkernel_mm.h||windows/winkernel_mm.h": [
          "File: windows/winkernel_mm.h -> windows/winkernel_mm.h"
        ]
      }
    },
    {
      "candidate_hash": "6ee4994e2458b85b3916c0614117870c108fe456",
      "candidate_info": {
        "commit_hash": "6ee4994e2458b85b3916c0614117870c108fe456",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/6ee4994e2458b85b3916c0614117870c108fe456",
        "files": [
          "arch/X86/X86MappingInsnOp.inc"
        ],
        "message": "[X86] Fix *ax dst register access on some MOV instructions",
        "before_after_code_files": [
          "arch/X86/X86MappingInsnOp.inc||arch/X86/X86MappingInsnOp.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86MappingInsnOp.inc||arch/X86/X86MappingInsnOp.inc": [
          "File: arch/X86/X86MappingInsnOp.inc -> arch/X86/X86MappingInsnOp.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "5607: },",
          "5609:  0,",
          "5611: },",
          "5613:  0,",
          "5615: },",
          "5617:  0,",
          "",
          "[Removed Lines]",
          "5610:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "5614:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "5610:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "5614:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5675: },",
          "5677:  0,",
          "5679: },",
          "5681:  0,",
          "5683: },",
          "5685:  0,",
          "",
          "[Removed Lines]",
          "5678:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "5682:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "5678:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "5682:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5759: },",
          "5761:  0,",
          "5763: },",
          "5765:  0,",
          "",
          "[Removed Lines]",
          "5762:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "5762:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d9f96e7b146418c2743803994425bd8efba24e71",
      "candidate_info": {
        "commit_hash": "d9f96e7b146418c2743803994425bd8efba24e71",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d9f96e7b146418c2743803994425bd8efba24e71",
        "files": [
          "suite/arm/test_arm_regression.c"
        ],
        "message": "fixed issue #726 (snprintf undefined in test_arm_regression)",
        "before_after_code_files": [
          "suite/arm/test_arm_regression.c||suite/arm/test_arm_regression.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "suite/arm/test_arm_regression.c||suite/arm/test_arm_regression.c": [
          "File: suite/arm/test_arm_regression.c -> suite/arm/test_arm_regression.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #endif",
          "9: #include <stdio.h>",
          "10: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "5: #ifdef _MSC_VER",
          "",
          "[Added Lines]",
          "5: #if defined(_MSC_VER) && _MSC_VER < 1900",
          "6: #define _CRT_SECURE_NO_WARNINGS",
          "7: #define snprintf _snprintf",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9edf92cccd0bb0b77d19587015b9eaba2833d73c",
      "candidate_info": {
        "commit_hash": "9edf92cccd0bb0b77d19587015b9eaba2833d73c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9edf92cccd0bb0b77d19587015b9eaba2833d73c",
        "files": [
          "bindings/python/setup.py",
          "pkgconfig.mk"
        ],
        "message": "Python: Automatically conform to PEP440 for version numbers. ported from Unicorn Python binding",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py",
          "pkgconfig.mk||pkgconfig.mk"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: from setuptools.command.bdist_egg import bdist_egg",
          "16: SYSTEM = sys.platform",
          "19: # adapted from commit e504b81 of Nguyen Tan Cong",
          "20: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "",
          "[Removed Lines]",
          "17: VERSION = '4.0.0'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: SRC_DIR = os.path.join(ROOT_DIR, 'src')",
          "28: BUILD_DIR = SRC_DIR if os.path.exists(SRC_DIR) else os.path.join(ROOT_DIR, '../..')",
          "30: if SYSTEM == 'darwin':",
          "31:     VERSIONED_LIBRARY_FILE = \"libcapstone.4.dylib\"",
          "32:     LIBRARY_FILE = \"libcapstone.dylib\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: # Parse version from pkgconfig.mk",
          "30: VERSION_DATA = {}",
          "31: with open(os.path.join(BUILD_DIR, 'pkgconfig.mk')) as fp:",
          "32:     lines = fp.readlines()",
          "33:     for line in lines:",
          "34:         line = line.strip()",
          "35:         if len(line) == 0:",
          "36:             continue",
          "37:         if line.startswith('#'):",
          "38:             continue",
          "39:         if '=' not in line:",
          "40:             continue",
          "42:         k, v = line.split('=', 1)",
          "43:         k = k.strip()",
          "44:         v = v.strip()",
          "45:         if len(k) == 0 or len(v) == 0:",
          "46:             continue",
          "47:         VERSION_DATA[k] = v",
          "49: if 'PKG_MAJOR' not in VERSION_DATA or \\",
          "50:         'PKG_MINOR' not in VERSION_DATA or \\",
          "51:         'PKG_EXTRA' not in VERSION_DATA:",
          "52:     raise Exception(\"Malformed pkgconfig.mk\")",
          "54: if 'PKG_TAG' in VERSION_DATA:",
          "55:     VERSION = '{PKG_MAJOR}.{PKG_MINOR}.{PKG_EXTRA}.{PKG_TAG}'.format(**VERSION_DATA)",
          "56: else:",
          "57:     VERSION = '{PKG_MAJOR}.{PKG_MINOR}.{PKG_EXTRA}'.format(**VERSION_DATA)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"RELEASE_NOTES\")))",
          "70:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"make.sh\")))",
          "71:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"CMakeLists.txt\")))",
          "73:     for filename in src:",
          "74:         outpath = os.path.join(SRC_DIR, os.path.basename(filename))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"pkgconfig.mk\")))",
          "",
          "---------------"
        ],
        "pkgconfig.mk||pkgconfig.mk": [
          "File: pkgconfig.mk -> pkgconfig.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: PKG_MINOR = 0",
          "8: # version bugfix level. Example: PKG_EXTRA = 1",
          "",
          "[Removed Lines]",
          "9: PKG_EXTRA =",
          "",
          "[Added Lines]",
          "9: PKG_EXTRA = 0",
          "11: # version tag. Examples: rc1, b2, post1",
          "12: PKG_TAG = rc1",
          "",
          "---------------"
        ]
      }
    }
  ]
}