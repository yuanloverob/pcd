{
  "cve_id": "CVE-2014-6300",
  "cve_desc": "Cross-site scripting (XSS) vulnerability in the micro history implementation in phpMyAdmin 4.0.x before 4.0.10.3, 4.1.x before 4.1.14.4, and 4.2.x before 4.2.8.1 allows remote attackers to inject arbitrary web script or HTML, and consequently conduct a cross-site request forgery (CSRF) attack to create a root account, via a crafted URL, related to js/ajax.js.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "33b39f9f1dd9a4d27856530e5ac004e23b30e8ac",
  "patch_info": {
    "commit_hash": "33b39f9f1dd9a4d27856530e5ac004e23b30e8ac",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/33b39f9f1dd9a4d27856530e5ac004e23b30e8ac",
    "files": [
      "ChangeLog",
      "js/ajax.js",
      "js/whitelist.php",
      "libraries/Header.class.php",
      "libraries/Scripts.class.php"
    ],
    "message": "bug #4530 [security] DOM based XSS that results to a CSRF that creates a ROOT account in certain conditions\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>",
    "before_after_code_files": [
      "js/ajax.js||js/ajax.js",
      "js/whitelist.php||js/whitelist.php",
      "libraries/Header.class.php||libraries/Header.class.php",
      "libraries/Scripts.class.php||libraries/Scripts.class.php"
    ]
  },
  "patch_diff": {
    "js/ajax.js||js/ajax.js": [
      "File: js/ajax.js -> js/ajax.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "783:     if (window.location.hash.substring(0, 8) == '#PMAURL-') {",
      "789:     } else {",
      "",
      "[Removed Lines]",
      "786:         window.location = window.location.hash.substring(",
      "787:             window.location.hash.indexOf(':') + 1",
      "788:         );",
      "",
      "[Added Lines]",
      "786:         var colon_position = window.location.hash.indexOf(':');",
      "787:         var questionmark_position = window.location.hash.indexOf('?');",
      "788:         if (colon_position != -1 && questionmark_position != -1 && colon_position < questionmark_position) {",
      "789:             var hash_url = window.location.hash.substring(colon_position + 1, questionmark_position);",
      "790:             if (PMA_gotoWhitelist.indexOf(hash_url) != -1) {",
      "791:                 window.location = window.location.hash.substring(",
      "792:                     colon_position + 1",
      "793:                 );",
      "794:             }",
      "795:         }",
      "",
      "---------------"
    ],
    "js/whitelist.php||js/whitelist.php": [
      "File: js/whitelist.php -> js/whitelist.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "9: chdir('..');",
      "12: header('Content-Type: text/javascript; charset=UTF-8');",
      "16: header('Expires: ' . gmdate('D, d M Y H:i:s', time() + 3600) . ' GMT');",
      "20: define('PMA_MINIMUM_COMMON', true);",
      "21: require_once './libraries/common.inc.php';",
      "23: session_write_close();",
      "25: echo \"var PMA_gotoWhitelist = new Array();\\n\";",
      "26: $i = -1;",
      "27: foreach ($GLOBALS['goto_whitelist'] as $one_whitelist) {",
      "28:     $i++;",
      "29:     echo 'PMA_gotoWhitelist[' . $i . ']=\"' . $one_whitelist . '\";' . \"\\n\";",
      "30: }",
      "31: ?>",
      "",
      "---------------"
    ],
    "libraries/Header.class.php||libraries/Header.class.php": [
      "File: libraries/Header.class.php -> libraries/Header.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "145:     private function _addDefaultScripts()",
      "146:     {",
      "147:         $this->_scripts->addFile('jquery/jquery-1.8.3.min.js');",
      "148:         $this->_scripts->addFile('ajax.js');",
      "149:         $this->_scripts->addFile('keyhandler.js');",
      "150:         $this->_scripts->addFile('jquery/jquery-ui-1.9.2.custom.min.js');",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "148:         $params = array('lang' => $GLOBALS['lang']);",
      "149:         if (isset($GLOBALS['db'])) {",
      "150:             $params['db'] = $GLOBALS['db'];",
      "151:         }",
      "153:         $this->_scripts->addFile(",
      "154:             'whitelist.php' . PMA_URL_getCommon($params), false, true",
      "155:         );",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "179:         $this->_scripts->addFile('messages.php' . PMA_URL_getCommon($params));",
      "",
      "[Removed Lines]",
      "175:         $params = array('lang' => $GLOBALS['lang']);",
      "176:         if (isset($GLOBALS['db'])) {",
      "177:             $params['db'] = $GLOBALS['db'];",
      "178:         }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "libraries/Scripts.class.php||libraries/Scripts.class.php": [
      "File: libraries/Scripts.class.php -> libraries/Scripts.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "51:     private function _includeFiles($files)",
      "52:     {",
      "53:         $dynamic_scripts = \"\";",
      "54:         $scripts = array();",
      "55:         foreach ($files as $value) {",
      "56:             if (strpos($value['filename'], \"?\") !== false) {",
      "59:                 continue;",
      "60:             }",
      "61:             $include = true;",
      "",
      "[Removed Lines]",
      "57:                 $dynamic_scripts .= \"<script type='text/javascript' src='js/\"",
      "58:                     . $value['filename'] . \"'></script>\";",
      "",
      "[Added Lines]",
      "53:         $first_dynamic_scripts = \"\";",
      "58:                 if ($value['before_statics'] === true) {",
      "59:                     $first_dynamic_scripts .= \"<script type='text/javascript' src='js/\"",
      "60:                         . $value['filename'] . \"'></script>\";",
      "61:                 } else {",
      "62:                     $dynamic_scripts .= \"<script type='text/javascript' src='js/\"",
      "63:                         . $value['filename'] . \"'></script>\";",
      "64:                 }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "83:             '<script type=\"text/javascript\" src=\"%s\"></script>',",
      "84:             htmlspecialchars($url)",
      "85:         );",
      "87:     }",
      "",
      "[Removed Lines]",
      "86:         return $static_scripts . $dynamic_scripts;",
      "",
      "[Added Lines]",
      "92:         return $first_dynamic_scripts . $static_scripts . $dynamic_scripts;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "112:     {",
      "113:         $hash = md5($filename);",
      "114:         if (!empty($this->_files[$hash])) {",
      "",
      "[Removed Lines]",
      "111:     public function addFile($filename, $conditional_ie = false)",
      "",
      "[Added Lines]",
      "119:     public function addFile($filename, $conditional_ie = false, $before_statics = false)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "119:         $this->_files[$hash] = array(",
      "120:             'has_onload' => $has_onload,",
      "121:             'filename' => $filename,",
      "123:         );",
      "124:     }",
      "",
      "[Removed Lines]",
      "122:             'conditional_ie' => $conditional_ie",
      "",
      "[Added Lines]",
      "130:             'conditional_ie' => $conditional_ie,",
      "131:             'before_statics' => $before_statics",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "33c819b8b46c14e1e1708bf369d5d9d149f3cd47",
      "candidate_info": {
        "commit_hash": "33c819b8b46c14e1e1708bf369d5d9d149f3cd47",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/33c819b8b46c14e1e1708bf369d5d9d149f3cd47",
        "files": [
          "js/ajax.js",
          "libraries/Scripts.class.php",
          "test/classes/PMA_Scripts_test.php"
        ],
        "message": "Remove token from JS file requests\n\nSigned-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
        "before_after_code_files": [
          "js/ajax.js||js/ajax.js",
          "libraries/Scripts.class.php||libraries/Scripts.class.php",
          "test/classes/PMA_Scripts_test.php||test/classes/PMA_Scripts_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "js/ajax.js||js/ajax.js",
            "libraries/Scripts.class.php||libraries/Scripts.class.php"
          ],
          "candidate": [
            "js/ajax.js||js/ajax.js",
            "libraries/Scripts.class.php||libraries/Scripts.class.php"
          ]
        }
      },
      "candidate_diff": {
        "js/ajax.js||js/ajax.js": [
          "File: js/ajax.js -> js/ajax.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "359:                     $('#selflink > a').attr('href', data._selflink);",
          "360:                 }",
          "361:                 if (data._scripts) {",
          "363:                 }",
          "364:                 if (data._selflink && data._scripts && data._menuHash && data._params) {",
          "365:                     AJAX.cache.add(",
          "",
          "[Removed Lines]",
          "362:                     AJAX.scriptHandler.load(data._scripts, data._params.token);",
          "",
          "[Added Lines]",
          "362:                     AJAX.scriptHandler.load(data._scripts);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "505:             var self = this;",
          "506:             self._scriptsToBeLoaded = [];",
          "507:             self._scriptsToBeFired = [];",
          "",
          "[Removed Lines]",
          "504:         load: function (files, token) {",
          "",
          "[Added Lines]",
          "504:         load: function (files) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "523:                     request.push(\"scripts[]=\" + script);",
          "524:                 }",
          "525:             }",
          "527:             request.push(\"call_done=1\");",
          "529:             if (needRequest) {",
          "",
          "[Removed Lines]",
          "526:             request.push(\"token=\" + token);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "734:                 $('#selflink').html(record.selflink);",
          "735:                 AJAX.cache.menus.replace(AJAX.cache.menus.get(record.menu));",
          "736:                 PMA_commonParams.setAll(record.params);",
          "738:                 AJAX.cache.current = ++index;",
          "739:             });",
          "740:         }",
          "",
          "[Removed Lines]",
          "737:                 AJAX.scriptHandler.load(record.scripts, record.params ? record.params.token : PMA_commonParams.get('token'));",
          "",
          "[Added Lines]",
          "736:                 AJAX.scriptHandler.load(record.scripts);",
          "",
          "---------------"
        ],
        "libraries/Scripts.class.php||libraries/Scripts.class.php": [
          "File: libraries/Scripts.class.php -> libraries/Scripts.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:             }",
          "83:         }",
          "84:         $separator = PMA_URL_getArgSeparator();",
          "89:         $static_scripts = sprintf(",
          "90:             '<script type=\"text/javascript\" src=\"%s\"></script>',",
          "",
          "[Removed Lines]",
          "85:         $url = 'js/get_scripts.js.php'",
          "86:             . PMA_URL_getCommon(array(), 'none')",
          "87:             . $separator . implode($separator, $scripts);",
          "",
          "[Added Lines]",
          "85:         $url = 'js/get_scripts.js.php?' . implode($separator, $scripts);",
          "",
          "---------------"
        ],
        "test/classes/PMA_Scripts_test.php||test/classes/PMA_Scripts_test.php": [
          "File: test/classes/PMA_Scripts_test.php -> test/classes/PMA_Scripts_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     public function testIncludeFile()",
          "79:     {",
          "80:         $this->assertEquals(",
          "83:             $this->_callPrivateFunction(",
          "84:                 '_includeFiles',",
          "85:                 array(",
          "",
          "[Removed Lines]",
          "81:             '<script type=\"text/javascript\" src=\"js/get_scripts.js.php?lang=en'",
          "82:             . '&amp;token=token&amp;scripts[]=common.js\"></script>',",
          "",
          "[Added Lines]",
          "81:             '<script type=\"text/javascript\" src=\"js/get_scripts.js.php?'",
          "82:             . 'scripts[]=common.js\"></script>',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:         $this->object->addEvent('onClick', 'doSomething');",
          "109:         $this->assertRegExp(",
          "112:             . 'javascript\">// <!\\\\[CDATA\\\\[' . \"\\n\"",
          "113:             . 'AJAX.scriptHandler.add\\\\(\"common.js\",1\\\\);' . \"\\n\"",
          "114:             . '\\\\$\\\\(function\\\\(\\\\) \\\\{AJAX.fireOnload\\\\(\"common.js\"\\\\);\\\\}\\\\);'",
          "",
          "[Removed Lines]",
          "110:             '@<script type=\"text/javascript\" src=\"js/get_scripts.js.php\\\\?lang=en'",
          "111:             . '&amp;token=token&amp;scripts\\\\[\\\\]=common.js\"></script><script type=\"text/'",
          "",
          "[Added Lines]",
          "110:             '@<script type=\"text/javascript\" src=\"js/get_scripts.js.php\\\\?'",
          "111:             . 'scripts\\\\[\\\\]=common.js\"></script><script type=\"text/'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "037a034b437b493b05d98231aff3dc0eb17d459a",
      "candidate_info": {
        "commit_hash": "037a034b437b493b05d98231aff3dc0eb17d459a",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/037a034b437b493b05d98231aff3dc0eb17d459a",
        "files": [
          "db_sql_autocomplete.php",
          "export.php",
          "import.php",
          "js/ajax.js",
          "js/common.js",
          "js/config.js",
          "js/console.js",
          "js/db_structure.js",
          "js/functions.js",
          "js/pmd/history.js",
          "js/pmd/move.js",
          "libraries/Console.class.php",
          "libraries/config/Validator.class.php",
          "libraries/core.lib.php",
          "libraries/db_designer.lib.php",
          "libraries/import.lib.php",
          "libraries/navigation/Nodes/Node_Table.class.php",
          "libraries/sqlparser.lib.php",
          "tbl_addfield.php",
          "test/classes/PMA_TableSearch_test.php",
          "test/libraries/PMA_generateCommonUrl_test.php"
        ],
        "message": "Minor coding style modifications. Fix typos. PHPDoc and JSDoc updates.\n\nSigned-off-by: Hugues Peccatte <hugues.peccatte@gmail.com>",
        "before_after_code_files": [
          "db_sql_autocomplete.php||db_sql_autocomplete.php",
          "export.php||export.php",
          "import.php||import.php",
          "js/ajax.js||js/ajax.js",
          "js/common.js||js/common.js",
          "js/config.js||js/config.js",
          "js/console.js||js/console.js",
          "js/db_structure.js||js/db_structure.js",
          "js/functions.js||js/functions.js",
          "js/pmd/history.js||js/pmd/history.js",
          "js/pmd/move.js||js/pmd/move.js",
          "libraries/Console.class.php||libraries/Console.class.php",
          "libraries/config/Validator.class.php||libraries/config/Validator.class.php",
          "libraries/core.lib.php||libraries/core.lib.php",
          "libraries/db_designer.lib.php||libraries/db_designer.lib.php",
          "libraries/import.lib.php||libraries/import.lib.php",
          "libraries/navigation/Nodes/Node_Table.class.php||libraries/navigation/Nodes/Node_Table.class.php",
          "libraries/sqlparser.lib.php||libraries/sqlparser.lib.php",
          "tbl_addfield.php||tbl_addfield.php",
          "test/classes/PMA_TableSearch_test.php||test/classes/PMA_TableSearch_test.php",
          "test/libraries/PMA_generateCommonUrl_test.php||test/libraries/PMA_generateCommonUrl_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "js/ajax.js||js/ajax.js"
          ],
          "candidate": [
            "js/ajax.js||js/ajax.js"
          ]
        }
      },
      "candidate_diff": {
        "db_sql_autocomplete.php||db_sql_autocomplete.php": [
          "File: db_sql_autocomplete.php -> db_sql_autocomplete.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: if ($db) {",
          "15:     $tableNames = $GLOBALS['dbi']->getTables($db);",
          "16:     foreach ($tableNames as $tableName) {",
          "18:     }",
          "19: }",
          "",
          "[Removed Lines]",
          "17:         $sql_autocomplete[$tableName] = $GLOBALS['dbi']->getColumnNames($db, $tableName);",
          "",
          "[Added Lines]",
          "17:         $sql_autocomplete[$tableName] = $GLOBALS['dbi']->getColumnNames(",
          "18:             $db, $tableName",
          "19:         );",
          "",
          "---------------"
        ],
        "export.php||export.php": [
          "File: export.php -> export.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:     } elseif ($export_type == 'table' && /*overload*/mb_strlen($db)",
          "256:         && /*overload*/mb_strlen($table)",
          "257:     ) {",
          "261:     } else {",
          "262:         PMA_fatalError(__('Bad parameters!'));",
          "263:     }",
          "",
          "[Removed Lines]",
          "258:         $err_url = 'tbl_export.php' . PMA_URL_getCommon(array(",
          "259:             'db' => $db, 'table' => $table",
          "260:         ));",
          "",
          "[Added Lines]",
          "258:         $err_url = 'tbl_export.php' . PMA_URL_getCommon(",
          "259:             array(",
          "260:                 'db' => $db, 'table' => $table",
          "261:             )",
          "262:         );",
          "",
          "---------------"
        ],
        "import.php||import.php": [
          "File: import.php -> import.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "224: if ($import_type == 'table') {",
          "228:     $_SESSION['Import_message']['go_back_url'] = $err_url;",
          "229:     $goto = 'tbl_import.php';",
          "230: } elseif ($import_type == 'database') {",
          "",
          "[Removed Lines]",
          "225:     $err_url = 'tbl_import.php' . PMA_URL_getCommon(array(",
          "226:         'db' => $db, 'table' => $table",
          "227:     ));",
          "",
          "[Added Lines]",
          "225:     $err_url = 'tbl_import.php' . PMA_URL_getCommon(",
          "226:         array(",
          "227:             'db' => $db, 'table' => $table",
          "228:         )",
          "229:     );",
          "",
          "---------------"
        ],
        "js/ajax.js||js/ajax.js": [
          "File: js/ajax.js -> js/ajax.js"
        ],
        "js/common.js||js/common.js": [
          "File: js/common.js -> js/common.js"
        ],
        "js/config.js||js/config.js": [
          "File: js/config.js -> js/config.js"
        ],
        "js/console.js||js/console.js": [
          "File: js/console.js -> js/console.js"
        ],
        "js/db_structure.js||js/db_structure.js": [
          "File: js/db_structure.js -> js/db_structure.js"
        ],
        "js/functions.js||js/functions.js": [
          "File: js/functions.js -> js/functions.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "569: function emptyFormElements(theForm, theFieldName)",
          "570: {",
          "576: } // end of the 'emptyFormElements()' function",
          "",
          "[Removed Lines]",
          "571:     var theField = theForm.elements[theFieldName];",
          "572:     var isEmpty = emptyCheckTheField(theForm, theFieldName);",
          "575:     return isEmpty;",
          "",
          "[Added Lines]",
          "574:     return emptyCheckTheField(theForm, theFieldName);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "729:                         } else {",
          "730:                             updateInterval = window.setInterval(UpdateIdleTime, 2000);",
          "731:                         }",
          "733:                         window.location.reload(true);",
          "734:                         clearInterval(IncInterval);",
          "735:                     }",
          "",
          "[Removed Lines]",
          "732:                     } else { //timeout occured",
          "",
          "[Added Lines]",
          "731:                     } else { //timeout occurred",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2737:                 PMA_ajaxShowMessage($error, false);",
          "2738:             }",
          "2739:         }); // end $.post()",
          "2741: }); //end $(document).ready for 'Table operations'",
          "",
          "[Removed Lines]",
          "2740:     });//end of table maintanance ajax click",
          "",
          "[Added Lines]",
          "2739:     });//end of table maintenance ajax click",
          "",
          "---------------"
        ],
        "js/pmd/history.js||js/pmd/history.js": [
          "File: js/pmd/history.js -> js/pmd/history.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "629:     box.style.KhtmlOpacity = level;",
          "630:     box.style.filter = \"alpha(opacity=\" + level * 100 + \")\";",
          "631:     box.style.display = \"block\";",
          "633: }",
          "",
          "[Removed Lines]",
          "632:     return;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "js/pmd/move.js||js/pmd/move.js": [
          "File: js/pmd/move.js -> js/pmd/move.js"
        ],
        "libraries/Console.class.php||libraries/Console.class.php": [
          "File: libraries/Console.class.php -> libraries/Console.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:                 .  $val['id'] . '\" targetdb=\"' . htmlspecialchars($val['db'])",
          "137:                 .  '\"><div class=\"action_content\">'",
          "138:                 .  sprintf($tpl_bookmark_actions, htmlspecialchars($val['db']))",
          "140:                 .  htmlspecialchars($val['label'])",
          "141:                 .  '</span> <span class=\"query\">'",
          "142:                 .  htmlspecialchars($val['query'])",
          "",
          "[Removed Lines]",
          "139:                 .  '</div><span class=\"bookmark_label ' . ($val['shared'] ? 'shared' : '') . '\">'",
          "",
          "[Added Lines]",
          "139:                 .  '</div><span class=\"bookmark_label '",
          "140:                 . ($val['shared'] ? 'shared' : '') . '\">'",
          "",
          "---------------"
        ],
        "libraries/config/Validator.class.php||libraries/config/Validator.class.php": [
          "File: libraries/config/Validator.class.php -> libraries/config/Validator.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "234:             $port = empty($port) || $connect_type == 'socket' ? null : $port;",
          "235:             $extension = 'mysqli';",
          "236:         } else {",
          "238:             $port = empty($port) || $connect_type == 'socket' ? null : ':' . $port;",
          "239:             $extension = 'mysql';",
          "240:         }",
          "",
          "[Removed Lines]",
          "237:             $socket = empty($socket) || $connect_type == 'tcp' ? null : ':' . ($socket[0] == '/' ? '' : '/') . $socket;",
          "",
          "[Added Lines]",
          "237:             $socket = empty($socket) || $connect_type == 'tcp'",
          "238:                 ? null",
          "239:                 : ':' . ($socket[0] == '/' ? '' : '/') . $socket;",
          "",
          "---------------"
        ],
        "libraries/core.lib.php||libraries/core.lib.php": [
          "File: libraries/core.lib.php -> libraries/core.lib.php"
        ],
        "libraries/db_designer.lib.php||libraries/db_designer.lib.php": [
          "File: libraries/db_designer.lib.php -> libraries/db_designer.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "557:         $html .= '<table id=\"' . $t_n_url . '\" cellpadding=\"0\" cellspacing=\"0\" ';",
          "558:         $html .= 'class=\"pmd_tab\" style=\"position:absolute;';",
          "559:         $html .= 'left:';",
          "561:         $html .= 'top:';",
          "563:         $html .= 'display:';",
          "564:         $html .= (isset($tab_pos[$t_n]) || $display_page == -1) ? 'block;' : 'none;';",
          "565:         $html .= 'z-index: 1;\">';",
          "",
          "[Removed Lines]",
          "560:         $html .= (isset($tab_pos[$t_n]) ? $tab_pos[$t_n][\"X\"] : rand(20, 700)) . 'px;';",
          "562:         $html .= (isset($tab_pos[$t_n]) ? $tab_pos[$t_n][\"Y\"] : rand(20, 550)) . 'px;';",
          "",
          "[Added Lines]",
          "560:         $html .= (isset($tab_pos[$t_n]) ? $tab_pos[$t_n][\"X\"] : rand(20, 700))",
          "561:             . 'px;';",
          "563:         $html .= (isset($tab_pos[$t_n]) ? $tab_pos[$t_n][\"Y\"] : rand(20, 550))",
          "564:             . 'px;';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "667:             $tmpColumn = $t_n . \".\" . $tab_column[$t_n][\"COLUMN_NAME\"][$j];",
          "670:                 $html .= (isset($tables_pk_or_unique_keys[$tmpColumn]) ? 1 : 0);",
          "671:             } else {",
          "",
          "[Removed Lines]",
          "669:             if (!PMA_Util::isForeignKeySupported($GLOBALS['PMD']['TABLE_TYPE'][$i])) {",
          "",
          "[Added Lines]",
          "671:             if (!PMA_Util::isForeignKeySupported($GLOBALS['PMD']['TABLE_TYPE'][$i])",
          "672:             ) {",
          "",
          "---------------"
        ],
        "libraries/import.lib.php||libraries/import.lib.php": [
          "File: libraries/import.lib.php -> libraries/import.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "361:         } else {",
          "362:             $r = /*overload*/mb_substr($GLOBALS['import_text'], 0, $size);",
          "363:             $GLOBALS['offset'] += $size;",
          "365:             return $r;",
          "366:         }",
          "367:     }",
          "",
          "[Removed Lines]",
          "364:             $GLOBALS['import_text'] = /*overload*/mb_substr($GLOBALS['import_text'], $size);",
          "",
          "[Added Lines]",
          "365:                 mb_substr($GLOBALS['import_text'], $size);",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Table.class.php||libraries/navigation/Nodes/Node_Table.class.php": [
          "File: libraries/navigation/Nodes/Node_Table.class.php -> libraries/navigation/Nodes/Node_Table.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:                 $query .= \"ORDER BY `COLUMN_NAME` ASC \";",
          "160:                 $query .= \"LIMIT \" . intval($pos) . \", $maxItems\";",
          "161:                 $retval = $GLOBALS['dbi']->fetchResult($query);",
          "176:                 }",
          "177:             }",
          "178:             break;",
          "179:         case 'indexes':",
          "",
          "[Removed Lines]",
          "162:             } else {",
          "163:                 $db     = PMA_Util::backquote($db);",
          "164:                 $table  = PMA_Util::backquote($table);",
          "165:                 $query  = \"SHOW COLUMNS FROM $table FROM $db\";",
          "166:                 $handle = $GLOBALS['dbi']->tryQuery($query);",
          "167:                 if ($handle !== false) {",
          "168:                     $count = 0;",
          "169:                     while ($arr = $GLOBALS['dbi']->fetchArray($handle)) {",
          "170:                         if ($pos <= 0 && $count < $maxItems) {",
          "171:                             $retval[] = $arr['Field'];",
          "172:                             $count++;",
          "173:                         }",
          "174:                         $pos--;",
          "175:                     }",
          "",
          "[Added Lines]",
          "162:                 break;",
          "163:             }",
          "165:             $db     = PMA_Util::backquote($db);",
          "166:             $table  = PMA_Util::backquote($table);",
          "167:             $query  = \"SHOW COLUMNS FROM $table FROM $db\";",
          "168:             $handle = $GLOBALS['dbi']->tryQuery($query);",
          "169:             if ($handle === false) {",
          "170:                 break;",
          "171:             }",
          "173:             $count = 0;",
          "174:             while ($arr = $GLOBALS['dbi']->fetchArray($handle)) {",
          "175:                 if ($pos <= 0 && $count < $maxItems) {",
          "176:                     $retval[] = $arr['Field'];",
          "177:                     $count++;",
          "179:                 $pos--;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184:             if ($handle === false) {",
          "185:                 break;",
          "186:             }",
          "187:             $count = 0;",
          "188:             while ($arr = $GLOBALS['dbi']->fetchArray($handle)) {",
          "195:                 }",
          "196:             }",
          "197:             break;",
          "198:         case 'triggers':",
          "",
          "[Removed Lines]",
          "189:                 if (! in_array($arr['Key_name'], $retval)) {",
          "190:                     if ($pos <= 0 && $count < $maxItems) {",
          "191:                         $retval[] = $arr['Key_name'];",
          "192:                         $count++;",
          "193:                     }",
          "194:                     $pos--;",
          "",
          "[Added Lines]",
          "193:                 if (in_array($arr['Key_name'], $retval)) {",
          "194:                     continue;",
          "196:                 if ($pos <= 0 && $count < $maxItems) {",
          "197:                     $retval[] = $arr['Key_name'];",
          "198:                     $count++;",
          "199:                 }",
          "200:                 $pos--;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "208:                 $query .= \"ORDER BY `TRIGGER_NAME` ASC \";",
          "209:                 $query .= \"LIMIT \" . intval($pos) . \", $maxItems\";",
          "210:                 $retval = $GLOBALS['dbi']->fetchResult($query);",
          "225:                 }",
          "226:             }",
          "227:             break;",
          "228:         default:",
          "",
          "[Removed Lines]",
          "211:             } else {",
          "212:                 $db     = PMA_Util::backquote($db);",
          "213:                 $table  = PMA_Util::sqlAddSlashes($table);",
          "214:                 $query  = \"SHOW TRIGGERS FROM $db WHERE `Table` = '$table'\";",
          "215:                 $handle = $GLOBALS['dbi']->tryQuery($query);",
          "216:                 if ($handle !== false) {",
          "217:                     $count = 0;",
          "218:                     while ($arr = $GLOBALS['dbi']->fetchArray($handle)) {",
          "219:                         if ($pos <= 0 && $count < $maxItems) {",
          "220:                             $retval[] = $arr['Trigger'];",
          "221:                             $count++;",
          "222:                         }",
          "223:                         $pos--;",
          "224:                     }",
          "",
          "[Added Lines]",
          "216:                 break;",
          "217:             }",
          "219:             $db     = PMA_Util::backquote($db);",
          "220:             $table  = PMA_Util::sqlAddSlashes($table);",
          "221:             $query  = \"SHOW TRIGGERS FROM $db WHERE `Table` = '$table'\";",
          "222:             $handle = $GLOBALS['dbi']->tryQuery($query);",
          "223:             if ($handle === false) {",
          "224:                 break;",
          "225:             }",
          "227:             $count = 0;",
          "228:             while ($arr = $GLOBALS['dbi']->fetchArray($handle)) {",
          "229:                 if ($pos <= 0 && $count < $maxItems) {",
          "230:                     $retval[] = $arr['Trigger'];",
          "231:                     $count++;",
          "233:                 $pos--;",
          "",
          "---------------"
        ],
        "libraries/sqlparser.lib.php||libraries/sqlparser.lib.php": [
          "File: libraries/sqlparser.lib.php -> libraries/sqlparser.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2093:             if ($upper_data == 'CURRENT_TIMESTAMP') {",
          "2094:                 if ($in_timestamp_options) {",
          "2095:                     if ($seen_default) {",
          "2097:                     }",
          "2098:                 }",
          "2099:             }",
          "",
          "[Removed Lines]",
          "2096:                         $create_table_fields[$current_identifier]['default_current_timestamp'] = true;",
          "",
          "[Added Lines]",
          "2096:                         $create_table_fields[$current_identifier]",
          "2097:                             ['default_current_timestamp'] = true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2167:                             ) {",
          "2168:                                 $create_table_fields[$current_identifier]",
          "2169:                                     ['on_update_current_timestamp']",
          "2171:                                 $seen_default = false;",
          "2172:                             }",
          "",
          "[Removed Lines]",
          "2170:                                     = true;",
          "",
          "[Added Lines]",
          "2171:                                         = true;",
          "",
          "---------------"
        ],
        "tbl_addfield.php||tbl_addfield.php": [
          "File: tbl_addfield.php -> tbl_addfield.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "26: $err_url = 'tbl_sql.php' . PMA_URL_getCommon(array(",
          "27:     'db' => $db, 'table' => $table",
          "28: ));",
          "",
          "[Added Lines]",
          "26: $err_url = 'tbl_sql.php' . PMA_URL_getCommon(",
          "27:     array(",
          "28:         'db' => $db, 'table' => $table",
          "29:     )",
          "30: );",
          "",
          "---------------"
        ],
        "test/classes/PMA_TableSearch_test.php||test/classes/PMA_TableSearch_test.php": [
          "File: test/classes/PMA_TableSearch_test.php -> test/classes/PMA_TableSearch_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:         $replaceWith = \"Column\";",
          "243:         $useRegex = false;",
          "244:         $charSet = \"UTF-8\";",
          "247:         $sql_query = $GLOBALS['sql_query'];",
          "248:         $result = \"UPDATE `PMA`.`PMA_BookMark` SET `Field1` = \"",
          "",
          "[Removed Lines]",
          "245:         $tableSearch->replace($columnIndex, $find, $replaceWith, $useRegex, $charSet);",
          "",
          "[Added Lines]",
          "245:         $tableSearch->replace(",
          "246:             $columnIndex, $find, $replaceWith, $useRegex, $charSet",
          "247:         );",
          "",
          "---------------"
        ],
        "test/libraries/PMA_generateCommonUrl_test.php||test/libraries/PMA_generateCommonUrl_test.php": [
          "File: test/libraries/PMA_generateCommonUrl_test.php -> test/libraries/PMA_generateCommonUrl_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:             . 'token=token'",
          "100:             ;",
          "103:         $this->assertEquals(",
          "104:             $expected,",
          "105:             PMA_URL_getCommon(",
          "",
          "[Removed Lines]",
          "102:         $expected = '#ABC#db=db' . $separator . 'table=table' . $separator . $expected;",
          "",
          "[Added Lines]",
          "102:         $expected = '#ABC#db=db' . $separator . 'table=table' . $separator",
          "103:             . $expected;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "88e3c73d654a42e638085ca0bde019c6c9067bc4",
      "candidate_info": {
        "commit_hash": "88e3c73d654a42e638085ca0bde019c6c9067bc4",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/88e3c73d654a42e638085ca0bde019c6c9067bc4",
        "files": [
          "libraries/Scripts.class.php"
        ],
        "message": "Reduce nested levels.\n\nSigned-off-by: Hugues Peccatte <hugues.peccatte@gmail.com>",
        "before_after_code_files": [
          "libraries/Scripts.class.php||libraries/Scripts.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/Scripts.class.php||libraries/Scripts.class.php"
          ],
          "candidate": [
            "libraries/Scripts.class.php||libraries/Scripts.class.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/Scripts.class.php||libraries/Scripts.class.php": [
          "File: libraries/Scripts.class.php -> libraries/Scripts.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:         $dynamic_scripts = \"\";",
          "54:         $params = array();",
          "55:         foreach ($files as $value) {",
          "73:                 $dynamic_scripts .= \"<script type='text/javascript' src='js/\"",
          "74:                     . $value['filename'] . \"'></script>\";",
          "75:             }",
          "76:         }",
          "77:         $static_scripts = sprintf(",
          "",
          "[Removed Lines]",
          "56:             if (strpos($value['filename'], \"?\") === false) {",
          "57:                 $include = true;",
          "58:                 if ($value['conditional_ie'] !== false",
          "59:                     && PMA_USR_BROWSER_AGENT === 'IE'",
          "60:                 ) {",
          "61:                     if ($value['conditional_ie'] === true) {",
          "62:                         $include = true;",
          "63:                     } else if ($value['conditional_ie'] == PMA_USR_BROWSER_VER) {",
          "64:                         $include = true;",
          "65:                     } else {",
          "66:                         $include = false;",
          "67:                     }",
          "68:                 }",
          "69:                 if ($include) {",
          "70:                     $scripts[] = \"scripts[]=\" . $value['filename'];",
          "71:                 }",
          "72:             } else {",
          "",
          "[Added Lines]",
          "56:             if (strpos($value['filename'], \"?\") !== false) {",
          "59:                 continue;",
          "60:             }",
          "61:             $include = true;",
          "62:             if ($value['conditional_ie'] !== false",
          "63:                 && PMA_USR_BROWSER_AGENT === 'IE'",
          "64:             ) {",
          "65:                 if ($value['conditional_ie'] === true) {",
          "66:                     $include = true;",
          "67:                 } else if ($value['conditional_ie'] == PMA_USR_BROWSER_VER) {",
          "68:                     $include = true;",
          "69:                 } else {",
          "70:                     $include = false;",
          "71:                 }",
          "72:             }",
          "73:             if ($include) {",
          "74:                 $scripts[] = \"scripts[]=\" . $value['filename'];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:     public function addFile($filename, $conditional_ie = false)",
          "108:     {",
          "109:         $hash = md5($filename);",
          "117:         }",
          "118:     }",
          "",
          "[Removed Lines]",
          "110:         if (empty($this->_files[$hash])) {",
          "111:             $has_onload = $this->_eventBlacklist($filename);",
          "112:             $this->_files[$hash] = array(",
          "113:                 'has_onload' => $has_onload,",
          "114:                 'filename' => $filename,",
          "115:                 'conditional_ie' => $conditional_ie",
          "116:             );",
          "",
          "[Added Lines]",
          "110:         if (!empty($this->_files[$hash])) {",
          "111:             return;",
          "114:         $has_onload = $this->_eventBlacklist($filename);",
          "115:         $this->_files[$hash] = array(",
          "116:             'has_onload' => $has_onload,",
          "117:             'filename' => $filename,",
          "118:             'conditional_ie' => $conditional_ie",
          "119:         );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "136:             || strpos($filename, 'cross_framing_protection.js') !== false",
          "137:         ) {",
          "138:             return 0;",
          "141:         }",
          "142:     }",
          "",
          "[Removed Lines]",
          "139:         } else {",
          "140:             return 1;",
          "",
          "[Added Lines]",
          "143:         return 1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "181:     {",
          "182:         $retval = array();",
          "183:         foreach ($this->_files as $file) {",
          "191:             }",
          "192:         }",
          "193:         return $retval;",
          "",
          "[Removed Lines]",
          "184:             if (strpos($file['filename'], \"?\") === false) {",
          "185:                 if (! $file['conditional_ie'] || PMA_USR_BROWSER_AGENT == 'IE') {",
          "186:                     $retval[] = array(",
          "187:                         'name' => $file['filename'],",
          "188:                         'fire' => $file['has_onload']",
          "189:                     );",
          "190:                 }",
          "",
          "[Added Lines]",
          "187:             if (strpos($file['filename'], \"?\") !== false) {",
          "188:                 continue;",
          "189:             }",
          "191:             if (! $file['conditional_ie'] || PMA_USR_BROWSER_AGENT == 'IE') {",
          "192:                 $retval[] = array(",
          "193:                     'name' => $file['filename'],",
          "194:                     'fire' => $file['has_onload']",
          "195:                 );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61418078db23093c07b74eeba66d689d5a86ed61",
      "candidate_info": {
        "commit_hash": "61418078db23093c07b74eeba66d689d5a86ed61",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/61418078db23093c07b74eeba66d689d5a86ed61",
        "files": [
          "js/ajax.js",
          "js/functions.js"
        ],
        "message": "$.browser is deprecated in jquery 1.9+\n\nSigned-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
        "before_after_code_files": [
          "js/ajax.js||js/ajax.js",
          "js/functions.js||js/functions.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "js/ajax.js||js/ajax.js"
          ],
          "candidate": [
            "js/ajax.js||js/ajax.js"
          ]
        }
      },
      "candidate_diff": {
        "js/ajax.js||js/ajax.js": [
          "File: js/ajax.js -> js/ajax.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "881:     function resetFavicon() {",
          "885:             $('head > link[href=favicon\\\\.ico]').appendTo('head');",
          "",
          "[Removed Lines]",
          "882:         if (jQuery.browser.mozilla) {",
          "",
          "[Added Lines]",
          "882:         if (navigator.userAgent.indexOf('Firefox') > -1) {",
          "",
          "---------------"
        ],
        "js/functions.js||js/functions.js": [
          "File: js/functions.js -> js/functions.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3876: (function ($) {",
          "3877:     $.fn.noSelect = function (p) { //no select plugin by Paulo P.Marinas",
          "3878:         var prevent = (p === null) ? true : p;",
          "3879:         if (prevent) {",
          "3880:             return this.each(function () {",
          "3882:                     $(this).bind('selectstart', function () {",
          "3883:                         return false;",
          "3884:                     });",
          "3886:                     $(this).css('MozUserSelect', 'none');",
          "3887:                     $('body').trigger('focus');",
          "3889:                     $(this).bind('mousedown', function () {",
          "3890:                         return false;",
          "3891:                     });",
          "",
          "[Removed Lines]",
          "3881:                 if ($.browser.msie || $.browser.safari) {",
          "3885:                 } else if ($.browser.mozilla) {",
          "3888:                 } else if ($.browser.opera) {",
          "",
          "[Added Lines]",
          "3879:         var is_msie = navigator.userAgent.indexOf('MSIE') > -1;",
          "3880:         var is_firefox = navigator.userAgent.indexOf('Firefox') > -1;",
          "3881:         var is_safari = navigator.userAgent.indexOf(\"Safari\") > -1;",
          "3882:         var is_opera = navigator.userAgent.indexOf(\"Presto\") > -1;",
          "3885:                 if (is_msie || is_safari) {",
          "3889:                 } else if (is_firefox) {",
          "3892:                 } else if (is_opera) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3895:             });",
          "3896:         } else {",
          "3897:             return this.each(function () {",
          "3899:                     $(this).unbind('selectstart');",
          "3901:                     $(this).css('MozUserSelect', 'inherit');",
          "3903:                     $(this).unbind('mousedown');",
          "3904:                 } else {",
          "3905:                     $(this).removeAttr('unselectable');",
          "",
          "[Removed Lines]",
          "3898:                 if ($.browser.msie || $.browser.safari) {",
          "3900:                 } else if ($.browser.mozilla) {",
          "3902:                 } else if ($.browser.opera) {",
          "",
          "[Added Lines]",
          "3902:                 if (is_msie || is_safari) {",
          "3904:                 } else if (is_firefox) {",
          "3906:                 } else if (is_opera) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d682dc48f274943d24ef513e3ca00609747364e",
      "candidate_info": {
        "commit_hash": "6d682dc48f274943d24ef513e3ca00609747364e",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/6d682dc48f274943d24ef513e3ca00609747364e",
        "files": [
          "ChangeLog",
          "js/ajax.js",
          "libraries/Scripts.class.php",
          "test/classes/PMA_Scripts_test.php"
        ],
        "message": "Merge branch 'QA_4_3'",
        "before_after_code_files": [
          "js/ajax.js||js/ajax.js",
          "libraries/Scripts.class.php||libraries/Scripts.class.php",
          "test/classes/PMA_Scripts_test.php||test/classes/PMA_Scripts_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "js/ajax.js||js/ajax.js",
            "libraries/Scripts.class.php||libraries/Scripts.class.php"
          ],
          "candidate": [
            "js/ajax.js||js/ajax.js",
            "libraries/Scripts.class.php||libraries/Scripts.class.php"
          ]
        }
      },
      "candidate_diff": {
        "js/ajax.js||js/ajax.js": [
          "File: js/ajax.js -> js/ajax.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "359:                     $('#selflink > a').attr('href', data._selflink);",
          "360:                 }",
          "361:                 if (data._scripts) {",
          "363:                 }",
          "364:                 if (data._selflink && data._scripts && data._menuHash && data._params) {",
          "365:                     AJAX.cache.add(",
          "",
          "[Removed Lines]",
          "362:                     AJAX.scriptHandler.load(data._scripts, data._params.token);",
          "",
          "[Added Lines]",
          "362:                     AJAX.scriptHandler.load(data._scripts);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "505:             var self = this;",
          "506:             self._scriptsToBeLoaded = [];",
          "507:             self._scriptsToBeFired = [];",
          "",
          "[Removed Lines]",
          "504:         load: function (files, token) {",
          "",
          "[Added Lines]",
          "504:         load: function (files) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "523:                     request.push(\"scripts[]=\" + script);",
          "524:                 }",
          "525:             }",
          "527:             request.push(\"call_done=1\");",
          "529:             if (needRequest) {",
          "",
          "[Removed Lines]",
          "526:             request.push(\"token=\" + token);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "556:             var script = document.createElement('script');",
          "557:             script.type = 'text/javascript';",
          "558:             script.src = url;",
          "559:             head.appendChild(script);",
          "560:         },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "558:             script.async = false;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "733:                 $('#selflink').html(record.selflink);",
          "734:                 AJAX.cache.menus.replace(AJAX.cache.menus.get(record.menu));",
          "735:                 PMA_commonParams.setAll(record.params);",
          "737:                 AJAX.cache.current = ++index;",
          "738:             });",
          "739:         }",
          "",
          "[Removed Lines]",
          "736:                 AJAX.scriptHandler.load(record.scripts, record.params ? record.params.token : PMA_commonParams.get('token'));",
          "",
          "[Added Lines]",
          "736:                 AJAX.scriptHandler.load(record.scripts);",
          "",
          "---------------"
        ],
        "libraries/Scripts.class.php||libraries/Scripts.class.php": [
          "File: libraries/Scripts.class.php -> libraries/Scripts.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:             }",
          "83:         }",
          "84:         $separator = PMA_URL_getArgSeparator();",
          "89:         $static_scripts = sprintf(",
          "90:             '<script type=\"text/javascript\" src=\"%s\"></script>',",
          "",
          "[Removed Lines]",
          "85:         $url = 'js/get_scripts.js.php'",
          "86:             . PMA_URL_getCommon(array(), 'none')",
          "87:             . $separator . implode($separator, $scripts);",
          "",
          "[Added Lines]",
          "85:         $url = 'js/get_scripts.js.php?' . implode($separator, $scripts);",
          "",
          "---------------"
        ],
        "test/classes/PMA_Scripts_test.php||test/classes/PMA_Scripts_test.php": [
          "File: test/classes/PMA_Scripts_test.php -> test/classes/PMA_Scripts_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     public function testIncludeFile()",
          "79:     {",
          "80:         $this->assertEquals(",
          "83:             $this->_callPrivateFunction(",
          "84:                 '_includeFiles',",
          "85:                 array(",
          "",
          "[Removed Lines]",
          "81:             '<script type=\"text/javascript\" src=\"js/get_scripts.js.php?lang=en'",
          "82:             . '&amp;token=token&amp;scripts[]=common.js\"></script>',",
          "",
          "[Added Lines]",
          "81:             '<script type=\"text/javascript\" src=\"js/get_scripts.js.php?'",
          "82:             . 'scripts[]=common.js\"></script>',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:         $this->object->addEvent('onClick', 'doSomething');",
          "109:         $this->assertRegExp(",
          "112:             . 'javascript\">// <!\\\\[CDATA\\\\[' . \"\\n\"",
          "113:             . 'AJAX.scriptHandler.add\\\\(\"common.js\",1\\\\);' . \"\\n\"",
          "114:             . '\\\\$\\\\(function\\\\(\\\\) \\\\{AJAX.fireOnload\\\\(\"common.js\"\\\\);\\\\}\\\\);'",
          "",
          "[Removed Lines]",
          "110:             '@<script type=\"text/javascript\" src=\"js/get_scripts.js.php\\\\?lang=en'",
          "111:             . '&amp;token=token&amp;scripts\\\\[\\\\]=common.js\"></script><script type=\"text/'",
          "",
          "[Added Lines]",
          "110:             '@<script type=\"text/javascript\" src=\"js/get_scripts.js.php\\\\?'",
          "111:             . 'scripts\\\\[\\\\]=common.js\"></script><script type=\"text/'",
          "",
          "---------------"
        ]
      }
    }
  ]
}