{
  "cve_id": "CVE-2021-32791",
  "cve_desc": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In mod_auth_openidc before version 2.4.9, the AES GCM encryption in mod_auth_openidc uses a static IV and AAD. It is important to fix because this creates a static nonce and since aes-gcm is a stream cipher, this can lead to known cryptographic issues, since the same key is being reused. From 2.4.9 onwards this has been patched to use dynamic values through usage of cjose AES encryption routines.",
  "repo": "zmartzone/mod_auth_openidc",
  "patch_hash": "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
  "patch_info": {
    "commit_hash": "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
    "repo": "zmartzone/mod_auth_openidc",
    "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/375407c16c61a70b56fdbe13b0d2c8f11398e92c",
    "files": [
      ".gitignore",
      "ChangeLog",
      "Dockerfile",
      "configure.ac",
      "openidc.conf",
      "src/cache/common.c",
      "test/mod_auth_openidc.jmx"
    ],
    "message": "use encrypted JWTs for storing encrypted cache contents\n\n- avoid using static AAD/IV; thanks @niebardzo\n- bump to 2.4.9-dev\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "openidc.conf||openidc.conf",
      "src/cache/common.c||src/cache/common.c",
      "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
      "",
      "[Removed Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.4.8.4],[hans.zandbelt@zmartzone.eu])",
      "",
      "[Added Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.4.9-dev],[hans.zandbelt@zmartzone.eu])",
      "",
      "---------------"
    ],
    "openidc.conf||openidc.conf": [
      "File: openidc.conf -> openidc.conf",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: OIDCInfoHook iat access_token access_token_expires id_token userinfo refresh_token session",
      "27: <Location /protected>",
      "28:   AuthType openid-connect",
      "29:   Require valid-user",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "27: OIDCScope \"openid email profile\"",
      "",
      "---------------"
    ],
    "src/cache/common.c||src/cache/common.c": [
      "File: src/cache/common.c -> src/cache/common.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "244:  return rv;",
      "245: }",
      "477: }",
      "553: }",
      "560:  char *input = apr_psprintf(r->pool, \"%s:%s\", passphrase, key);",
      "561:  char *output = NULL;",
      "566:   return NULL;",
      "567:  }",
      "568:  return output;",
      "",
      "[Removed Lines]",
      "247: #define oidc_cache_crypto_openssl_error(r, fmt, ...) \\",
      "248:   oidc_error(r, \"%s: %s\", apr_psprintf(r->pool, fmt, ##__VA_ARGS__), ERR_error_string(ERR_get_error(), NULL))",
      "250: #define OIDC_CACHE_CIPHER       EVP_aes_256_gcm()",
      "251: #define OIDC_CACHE_TAG_LEN       16",
      "253: #if (OPENSSL_VERSION_NUMBER >= 0x10100005L && !defined(LIBRESSL_VERSION_NUMBER))",
      "254: #define OIDC_CACHE_CRYPTO_GET_TAG     EVP_CTRL_AEAD_GET_TAG",
      "255: #define OIDC_CACHE_CRYPTO_SET_TAG     EVP_CTRL_AEAD_SET_TAG",
      "256: #define OIDC_CACHE_CRYPTO_SET_IVLEN     EVP_CTRL_AEAD_SET_IVLEN",
      "257: #else",
      "258: #define OIDC_CACHE_CRYPTO_GET_TAG     EVP_CTRL_GCM_GET_TAG",
      "259: #define OIDC_CACHE_CRYPTO_SET_TAG     EVP_CTRL_GCM_SET_TAG",
      "260: #define OIDC_CACHE_CRYPTO_SET_IVLEN     EVP_CTRL_GCM_SET_IVLEN",
      "261: #endif",
      "266: static int oidc_cache_crypto_encrypt_impl(request_rec *r,",
      "267:   unsigned char *plaintext, int plaintext_len, const unsigned char *aad,",
      "268:   int aad_len, unsigned char *key, const unsigned char *iv, int iv_len,",
      "269:   unsigned char *ciphertext, const unsigned char *tag, int tag_len) {",
      "270:  EVP_CIPHER_CTX *ctx;",
      "272:  int len;",
      "274:  int ciphertext_len;",
      "277:  if (!(ctx = EVP_CIPHER_CTX_new())) {",
      "278:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_new\");",
      "279:   return -1;",
      "280:  }",
      "283:  if (!EVP_EncryptInit_ex(ctx, OIDC_CACHE_CIPHER, NULL, NULL, NULL)) {",
      "284:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptInit_ex\");",
      "285:   return -1;",
      "286:  }",
      "289:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_IVLEN, iv_len, NULL)) {",
      "290:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "291:   return -1;",
      "292:  }",
      "295:  if (!EVP_EncryptInit_ex(ctx, NULL, NULL, key, iv)) {",
      "296:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptInit_ex\");",
      "297:   return -1;",
      "298:  }",
      "301:  if (!EVP_EncryptUpdate(ctx, NULL, &len, aad, aad_len)) {",
      "302:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate aad: aad_len=%d\",",
      "303:     aad_len);",
      "304:   return -1;",
      "305:  }",
      "308:  if (!EVP_EncryptUpdate(ctx, ciphertext, &len, plaintext, plaintext_len)) {",
      "309:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptUpdate ciphertext\");",
      "310:   return -1;",
      "311:  }",
      "312:  ciphertext_len = len;",
      "318:  if (!EVP_EncryptFinal_ex(ctx, ciphertext + len, &len)) {",
      "319:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptFinal_ex\");",
      "320:   return -1;",
      "321:  }",
      "322:  ciphertext_len += len;",
      "325:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_GET_TAG, tag_len,",
      "326:    (void *) tag)) {",
      "327:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "328:   return -1;",
      "329:  }",
      "332:  EVP_CIPHER_CTX_free(ctx);",
      "334:  return ciphertext_len;",
      "335: }",
      "340: static int oidc_cache_crypto_decrypt_impl(request_rec *r,",
      "341:   unsigned char *ciphertext, int ciphertext_len, const unsigned char *aad,",
      "342:   int aad_len, const unsigned char *tag, int tag_len, unsigned char *key,",
      "343:   const unsigned char *iv, int iv_len, unsigned char *plaintext) {",
      "344:  EVP_CIPHER_CTX *ctx;",
      "345:  int len;",
      "346:  int plaintext_len;",
      "347:  int ret;",
      "350:  if (!(ctx = EVP_CIPHER_CTX_new())) {",
      "351:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_new\");",
      "352:   return -1;",
      "353:  }",
      "356:  if (!EVP_DecryptInit_ex(ctx, OIDC_CACHE_CIPHER, NULL, NULL, NULL)) {",
      "357:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptInit_ex\");",
      "358:   return -1;",
      "359:  }",
      "362:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_IVLEN, iv_len, NULL)) {",
      "363:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "364:   return -1;",
      "365:  }",
      "368:  if (!EVP_DecryptInit_ex(ctx, NULL, NULL, key, iv)) {",
      "369:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptInit_ex\");",
      "370:   return -1;",
      "371:  }",
      "374:  if (!EVP_DecryptUpdate(ctx, NULL, &len, aad, aad_len)) {",
      "375:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate aad: aad_len=%d\",",
      "376:     aad_len);",
      "377:   return -1;",
      "378:  }",
      "381:  if (!EVP_DecryptUpdate(ctx, plaintext, &len, ciphertext, ciphertext_len)) {",
      "382:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate ciphertext\");",
      "383:   return -1;",
      "384:  }",
      "385:  plaintext_len = len;",
      "388:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_TAG, tag_len,",
      "389:    (void *) tag)) {",
      "390:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "391:   return -1;",
      "392:  }",
      "398:  ret = EVP_DecryptFinal_ex(ctx, plaintext + len, &len);",
      "401:  EVP_CIPHER_CTX_free(ctx);",
      "403:  if (ret > 0) {",
      "405:   plaintext_len += len;",
      "406:   return plaintext_len;",
      "407:  } else {",
      "409:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptFinal_ex\");",
      "410:   return -1;",
      "411:  }",
      "412: }",
      "417: static const unsigned char OIDC_CACHE_CRYPTO_GCM_AAD[] = { 0x4d, 0x23, 0xc3,",
      "418:   0xce, 0xc3, 0x34, 0xb4, 0x9b, 0xdb, 0x37, 0x0c, 0x43, 0x7f, 0xec, 0x78,",
      "419:   0xde };",
      "424: static const unsigned char OIDC_CACHE_CRYPTO_GCM_IV[] = { 0x00, 0x01, 0x02,",
      "425:   0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e,",
      "426:   0x0f };",
      "431: static int oidc_cache_crypto_encrypt(request_rec *r, const char *plaintext,",
      "432:   unsigned char *key, char **result) {",
      "433:  char *encoded = NULL, *p = NULL, *e_tag = NULL;",
      "434:  unsigned char *ciphertext = NULL;",
      "435:  int plaintext_len, ciphertext_len, encoded_len, e_tag_len;",
      "436:  unsigned char tag[OIDC_CACHE_TAG_LEN];",
      "439:  plaintext_len = strlen(plaintext) + 1;",
      "440:  ciphertext = apr_pcalloc(r->pool,",
      "441:    (plaintext_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER)));",
      "443:  ciphertext_len = oidc_cache_crypto_encrypt_impl(r,",
      "444:    (unsigned char *) plaintext, plaintext_len,",
      "445:    OIDC_CACHE_CRYPTO_GCM_AAD, sizeof(OIDC_CACHE_CRYPTO_GCM_AAD), key,",
      "446:    OIDC_CACHE_CRYPTO_GCM_IV, sizeof(OIDC_CACHE_CRYPTO_GCM_IV),",
      "447:    ciphertext, tag, sizeof(tag));",
      "450:  encoded_len = oidc_base64url_encode(r, &encoded, (const char *) ciphertext,",
      "451:    ciphertext_len, 1);",
      "452:  if (encoded_len > 0) {",
      "453:   p = encoded;",
      "456:   e_tag_len = oidc_base64url_encode(r, &e_tag, (const char *) tag,",
      "457:     OIDC_CACHE_TAG_LEN, 1);",
      "460:   encoded = apr_pcalloc(r->pool, encoded_len + 1 + e_tag_len + 1);",
      "461:   memcpy(encoded, p, encoded_len);",
      "462:   p = encoded + encoded_len;",
      "464:   p++;",
      "467:   memcpy(p, e_tag, e_tag_len);",
      "468:   encoded_len += e_tag_len + 1;",
      "471:   encoded[encoded_len] = '\\0';",
      "474:  }",
      "476:  return encoded_len;",
      "482: static int oidc_cache_crypto_decrypt(request_rec *r, const char *cache_value,",
      "483:   unsigned char *key, unsigned char **plaintext) {",
      "485:  int len = -1;",
      "488:  char *encoded_tag = strstr(cache_value, \".\");",
      "489:  if (encoded_tag == NULL) {",
      "490:   oidc_error(r,",
      "491:     \"corrupted cache value: no tag separator found in encrypted value\");",
      "492:   return FALSE;",
      "493:  }",
      "496:  cache_value = apr_pstrmemdup(r->pool, cache_value,",
      "497:    strlen(cache_value) - strlen(encoded_tag));",
      "498:  encoded_tag++;",
      "501:  char *d_bytes = NULL;",
      "502:  int d_len = oidc_base64url_decode(r->pool, &d_bytes, cache_value);",
      "505:  char *t_bytes = NULL;",
      "506:  int t_len = oidc_base64url_decode(r->pool, &t_bytes, encoded_tag);",
      "509:  if ((d_len > 0) && (t_len > 0)) {",
      "513:     (d_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER) - 1));",
      "517:   len = oidc_cache_crypto_decrypt_impl(r, (unsigned char *) d_bytes,",
      "518:     d_len, OIDC_CACHE_CRYPTO_GCM_AAD,",
      "519:     sizeof(OIDC_CACHE_CRYPTO_GCM_AAD), (unsigned char *) t_bytes,",
      "520:     t_len, key, OIDC_CACHE_CRYPTO_GCM_IV,",
      "521:     sizeof(OIDC_CACHE_CRYPTO_GCM_IV), *plaintext);",
      "524:   if (len > -1) {",
      "525:    (*plaintext)[len] = '\\0';",
      "526:   } else {",
      "528:   }",
      "530:  }",
      "532:  return len;",
      "533: }",
      "538: static unsigned char *oidc_cache_hash_passphrase(request_rec *r,",
      "539:   const char *passphrase) {",
      "541:  unsigned char *key = NULL;",
      "542:  unsigned int key_len = 0;",
      "543:  oidc_jose_error_t err;",
      "545:  if (oidc_jose_hash_bytes(r->pool, OIDC_JOSE_ALG_SHA256,",
      "546:    (const unsigned char *) passphrase, strlen(passphrase), &key,",
      "547:    &key_len, &err) == FALSE) {",
      "548:   oidc_error(r, \"oidc_jose_hash_bytes returned an error: %s\", err.text);",
      "549:   return NULL;",
      "550:  }",
      "552:  return key;",
      "558: static char *oidc_cache_get_hashed_key(request_rec *r, const char *passphrase,",
      "559:   const char *key) {",
      "562:  if (oidc_util_hash_string_and_base64url_encode(r, OIDC_JOSE_ALG_SHA256,",
      "563:    input, &output) == FALSE) {",
      "564:   oidc_error(r,",
      "565:     \"oidc_util_hash_string_and_base64url_encode returned an error\");",
      "",
      "[Added Lines]",
      "247: #define OIDC_CACHE_CRYPTO_JSON_KEY \"c\"",
      "252: static apr_byte_t oidc_cache_crypto_encrypt(request_rec *r, const char *plaintext, const char *key,",
      "253:   char **result) {",
      "254:  apr_byte_t rv = FALSE;",
      "255:  json_t *json = NULL;",
      "257:  json = json_object();",
      "258:  json_object_set_new(json, OIDC_CACHE_CRYPTO_JSON_KEY, json_string(plaintext));",
      "260:  rv = oidc_util_jwt_create(r, (const char*) key, json, result);",
      "262:  if (json)",
      "263:   json_decref(json);",
      "265:  return rv;",
      "271: static apr_byte_t oidc_cache_crypto_decrypt(request_rec *r, const char *cache_value,",
      "272:   const char *key, char **plaintext) {",
      "274:  apr_byte_t rv = FALSE;",
      "275:  json_t *json = NULL;",
      "277:  rv = oidc_util_jwt_verify(r, (const char*) key, cache_value, &json);",
      "278:  if (rv == FALSE)",
      "279:   goto end;",
      "281:  rv = oidc_json_object_get_string(r->pool, json, OIDC_CACHE_CRYPTO_JSON_KEY, plaintext, NULL);",
      "283:  end:",
      "285:  if (json)",
      "286:   json_decref(json);",
      "288:  return rv;",
      "294: static char* oidc_cache_get_hashed_key(request_rec *r, const char *passphrase, const char *key) {",
      "297:  if (oidc_util_hash_string_and_base64url_encode(r, OIDC_JOSE_ALG_SHA256, input, &output)",
      "298:    == FALSE) {",
      "299:   oidc_error(r, \"oidc_util_hash_string_and_base64url_encode returned an error\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "604:   goto out;",
      "605:  }",
      "611: out:",
      "",
      "[Removed Lines]",
      "607:  rc = (oidc_cache_crypto_decrypt(r, cache_value,",
      "608:    oidc_cache_hash_passphrase(r, cfg->crypto_passphrase),",
      "609:    (unsigned char **) value) > 0);",
      "",
      "[Added Lines]",
      "341:  rc = oidc_cache_crypto_decrypt(r, cache_value, cfg->crypto_passphrase, value);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "650:    goto out;",
      "652:   if (value != NULL) {",
      "656:     goto out;",
      "657:    value = encoded;",
      "658:   }",
      "",
      "[Removed Lines]",
      "653:    if (oidc_cache_crypto_encrypt(r, value,",
      "654:      oidc_cache_hash_passphrase(r, cfg->crypto_passphrase),",
      "655:      &encoded) <= 0)",
      "",
      "[Added Lines]",
      "385:    if (oidc_cache_crypto_encrypt(r, value, cfg->crypto_passphrase, &encoded) == FALSE)",
      "",
      "---------------"
    ],
    "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx": [
      "File: test/mod_auth_openidc.jmx -> test/mod_auth_openidc.jmx",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
      "3:   <hashTree>",
      "4:     <TestPlan guiclass=\"TestPlanGui\" testclass=\"TestPlan\" testname=\"OpenID Connect Apache Module Test Plan\" enabled=\"true\">",
      "5:       <stringProp name=\"TestPlan.comments\"></stringProp>",
      "",
      "[Removed Lines]",
      "2: <jmeterTestPlan version=\"1.2\" properties=\"3.1\" jmeter=\"3.1.20170220\">",
      "",
      "[Added Lines]",
      "2: <jmeterTestPlan version=\"1.2\" properties=\"5.0\" jmeter=\"5.1.1.20190725\">",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7:       <boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>",
      "8:       <elementProp name=\"TestPlan.user_defined_variables\" elementType=\"Arguments\" guiclass=\"ArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
      "9:         <collectionProp name=\"Arguments.arguments\">",
      "12:             <stringProp name=\"Argument.value\">localhost.zmartzone.eu</stringProp>",
      "13:             <stringProp name=\"Argument.metadata\">=</stringProp>",
      "14:           </elementProp>",
      "",
      "[Removed Lines]",
      "10:           <elementProp name=\"X_APP_SERVER\" elementType=\"Argument\">",
      "11:             <stringProp name=\"Argument.name\">X_APP_SERVER</stringProp>",
      "",
      "[Added Lines]",
      "10:           <elementProp name=\"APP_SERVER\" elementType=\"Argument\">",
      "11:             <stringProp name=\"Argument.name\">APP_SERVER</stringProp>",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "57:           </elementProp>",
      "58:           <elementProp name=\"APP_PATH_ACCESS\" elementType=\"Argument\">",
      "59:             <stringProp name=\"Argument.name\">APP_PATH_ACCESS</stringProp>",
      "61:             <stringProp name=\"Argument.metadata\">=</stringProp>",
      "62:           </elementProp>",
      "63:         </collectionProp>",
      "",
      "[Removed Lines]",
      "60:             <stringProp name=\"Argument.value\">/protected/api/index.php</stringProp>",
      "",
      "[Added Lines]",
      "60:             <stringProp name=\"Argument.value\">/api/index.php</stringProp>",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "94:           </elementProp>",
      "95:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "96:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "99:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "100:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "101:           <stringProp name=\"HTTPSampler.path\">${APP_PATH_USER}</stringProp>",
      "",
      "[Removed Lines]",
      "97:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "98:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "104:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "105:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "106:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "109:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "110:         </HTTPSamplerProxy>",
      "111:         <hashTree>",
      "112:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthorizationRequestPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "107:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "108:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "106:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "107:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "108:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "125:           </elementProp>",
      "126:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "127:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "130:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "131:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "132:           <stringProp name=\"HTTPSampler.path\">/${AuthorizationRequestPath}</stringProp>",
      "",
      "[Removed Lines]",
      "128:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "129:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "135:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "136:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "137:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "140:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "141:         </HTTPSamplerProxy>",
      "142:         <hashTree>",
      "143:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthzResumePath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "138:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "139:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "136:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "137:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "138:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "164:           </elementProp>",
      "165:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "166:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "169:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "170:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "171:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "167:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "168:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "174:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "175:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "176:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "179:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "180:         </HTTPSamplerProxy>",
      "181:         <hashTree>",
      "182:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumeParam\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "177:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "178:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "174:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "175:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "176:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "226:           </elementProp>",
      "227:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "228:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "231:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "232:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "233:           <stringProp name=\"HTTPSampler.path\">/IdpSample/MainPage?cmd=login</stringProp>",
      "",
      "[Removed Lines]",
      "229:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "230:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "236:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "237:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "238:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "241:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "242:         </HTTPSamplerProxy>",
      "243:         <hashTree>",
      "244:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumePath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "239:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "240:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "235:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "236:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "237:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "257:           </elementProp>",
      "258:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "259:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "262:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "263:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "264:           <stringProp name=\"HTTPSampler.path\">${ResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "260:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "261:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "267:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "268:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "269:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "272:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "273:         </HTTPSamplerProxy>",
      "274:         <hashTree>",
      "275:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab RedirectURIPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "270:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "271:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "265:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "266:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "267:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "321:           </elementProp>",
      "322:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "323:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "326:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "327:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "328:           <stringProp name=\"HTTPSampler.path\">/${RedirectURIPath}</stringProp>",
      "",
      "[Removed Lines]",
      "324:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "325:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "331:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "332:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "333:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "336:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "337:         </HTTPSamplerProxy>",
      "338:         <hashTree>",
      "339:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "334:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "335:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "328:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "329:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "330:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "367:           </elementProp>",
      "368:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "369:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "372:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "373:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "374:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "370:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "371:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "377:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "378:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "379:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "382:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "383:         </HTTPSamplerProxy>",
      "384:         <hashTree>",
      "385:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab cSRFToken Parameter\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "380:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "381:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "373:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "374:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "375:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "441:           </elementProp>",
      "442:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "443:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "446:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "447:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "448:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "444:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "445:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "451:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "452:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "453:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "456:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "457:         </HTTPSamplerProxy>",
      "458:         <hashTree>",
      "459:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab LocationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "454:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "455:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "446:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "447:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "448:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "472:           </elementProp>",
      "473:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "474:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "477:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "478:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "479:           <stringProp name=\"HTTPSampler.path\">/${LocationPath}</stringProp>",
      "",
      "[Removed Lines]",
      "475:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "476:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "482:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "483:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "484:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "487:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "488:         </HTTPSamplerProxy>",
      "489:         <hashTree>",
      "490:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "485:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "486:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "476:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "477:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "478:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "517:             </elementProp>",
      "518:             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "519:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "522:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "523:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "524:             <stringProp name=\"HTTPSampler.path\">/${ApplicationPath}</stringProp>",
      "",
      "[Removed Lines]",
      "520:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "521:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "527:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "528:             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "529:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "532:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "533:           </HTTPSamplerProxy>",
      "534:           <hashTree>",
      "535:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert User Logged In\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "530:             <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "531:             <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "520:             <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "521:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "522:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "539:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "540:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "541:               <intProp name=\"Assertion.test_type\">2</intProp>",
      "542:             </ResponseAssertion>",
      "543:             <hashTree/>",
      "544:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert Fake Header Removal\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "532:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "548:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "549:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "550:               <intProp name=\"Assertion.test_type\">6</intProp>",
      "551:             </ResponseAssertion>",
      "552:             <hashTree/>",
      "553:           </hashTree>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "542:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "567:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "568:           <boolProp name=\"stopThread\">false</boolProp>",
      "569:           <stringProp name=\"variableNames\">USERNAME,PASSWORD</stringProp>",
      "570:         </CSVDataSet>",
      "571:         <hashTree/>",
      "582:         <hashTree/>",
      "583:       </hashTree>",
      "584:       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OAuth Resource Access\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "572:         <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Hosts Data Set\" enabled=\"true\">",
      "573:           <stringProp name=\"filename\">hosts.txt</stringProp>",
      "574:           <stringProp name=\"fileEncoding\"></stringProp>",
      "575:           <stringProp name=\"variableNames\">APP_SERVER</stringProp>",
      "576:           <stringProp name=\"delimiter\">,</stringProp>",
      "577:           <boolProp name=\"quotedData\">false</boolProp>",
      "578:           <boolProp name=\"recycle\">true</boolProp>",
      "579:           <boolProp name=\"stopThread\">false</boolProp>",
      "580:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "581:         </CSVDataSet>",
      "",
      "[Added Lines]",
      "562:           <boolProp name=\"ignoreFirstLine\">false</boolProp>",
      "565:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">",
      "566:           <collectionProp name=\"HeaderManager.headers\">",
      "567:             <elementProp name=\"\" elementType=\"Header\">",
      "568:               <stringProp name=\"Header.name\">Accept</stringProp>",
      "569:               <stringProp name=\"Header.value\">*/*</stringProp>",
      "570:             </elementProp>",
      "571:           </collectionProp>",
      "572:         </HeaderManager>",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "631:           </elementProp>",
      "632:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "633:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "636:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "637:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "638:           <stringProp name=\"HTTPSampler.path\">${AS_PATH_TOKEN}</stringProp>",
      "",
      "[Removed Lines]",
      "634:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "635:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "641:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "642:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "643:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "645:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "646:         </HTTPSamplerProxy>",
      "647:         <hashTree>",
      "648:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AccessToken\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "644:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "634:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "635:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "661:               <stringProp name=\"Header.name\">Authorization</stringProp>",
      "662:               <stringProp name=\"Header.value\">bearer ${AccessToken}</stringProp>",
      "663:             </elementProp>",
      "664:           </collectionProp>",
      "665:         </HeaderManager>",
      "666:         <hashTree/>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "654:             <elementProp name=\"\" elementType=\"Header\">",
      "655:               <stringProp name=\"Header.name\">Accept</stringProp>",
      "656:               <stringProp name=\"Header.value\">application/json</stringProp>",
      "657:             </elementProp>",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "675:             </elementProp>",
      "676:             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "677:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "680:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "681:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "682:             <stringProp name=\"HTTPSampler.path\">${APP_PATH_ACCESS}</stringProp>",
      "",
      "[Removed Lines]",
      "678:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "679:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "685:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "686:             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "687:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "689:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "690:           </HTTPSamplerProxy>",
      "691:           <hashTree>",
      "692:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert AS_USERNAME\" enabled=\"true\">",
      "693:               <collectionProp name=\"Asserion.test_strings\">",
      "694:                 <stringProp name=\"240033137\">\\[OIDC_CLAIM_Username\\] =&gt; ${AS_USERNAME}</stringProp>",
      "695:               </collectionProp>",
      "697:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "698:               <intProp name=\"Assertion.test_type\">2</intProp>",
      "699:             </ResponseAssertion>",
      "700:             <hashTree/>",
      "701:           </hashTree>",
      "702:         </hashTree>",
      "714:       </hashTree>",
      "715:       <ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\" testname=\"View Results Tree\" enabled=\"true\">",
      "716:         <boolProp name=\"ResultCollector.error_logging\">true</boolProp>",
      "",
      "[Removed Lines]",
      "688:             <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "696:               <stringProp name=\"Assertion.test_field\">Assertion.response_data_as_document</stringProp>",
      "703:         <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Hosts Data Set\" enabled=\"true\">",
      "704:           <stringProp name=\"filename\">hosts.txt</stringProp>",
      "705:           <stringProp name=\"fileEncoding\"></stringProp>",
      "706:           <stringProp name=\"variableNames\">APP_SERVER</stringProp>",
      "707:           <stringProp name=\"delimiter\">,</stringProp>",
      "708:           <boolProp name=\"quotedData\">false</boolProp>",
      "709:           <boolProp name=\"recycle\">true</boolProp>",
      "710:           <boolProp name=\"stopThread\">false</boolProp>",
      "711:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "712:         </CSVDataSet>",
      "713:         <hashTree/>",
      "",
      "[Added Lines]",
      "681:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "682:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "689:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "692:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "73c629b97ed9a9ef37428ec2aff180b2dcaf072b",
      "candidate_info": {
        "commit_hash": "73c629b97ed9a9ef37428ec2aff180b2dcaf072b",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/73c629b97ed9a9ef37428ec2aff180b2dcaf072b",
        "files": [
          ".gitignore",
          "ChangeLog",
          "Makefile.am",
          "Makefile.in",
          "configure.ac",
          "src/authz.c",
          "src/cache/.gitignore",
          "src/cache/common.c",
          "src/cache/file.c",
          "src/cache/memcache.c",
          "src/cache/redis.c",
          "src/cache/redis.h",
          "src/cache/shm.c",
          "src/config.c",
          "src/metadata.c",
          "src/mod_auth_openidc.c",
          "src/mod_auth_openidc.h",
          "src/oauth.c",
          "src/proto.c",
          "src/session.c",
          "src/util.c",
          "test/.gitignore",
          "test/test.c"
        ],
        "message": "complete usage of autoconf/automake, see #674\n\nbump to 2.4.9.5rc2\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "Makefile.am||Makefile.am",
          "Makefile.in||Makefile.in",
          "configure.ac||configure.ac",
          "src/authz.c||src/authz.c",
          "src/cache/common.c||src/cache/common.c",
          "src/cache/file.c||src/cache/file.c",
          "src/cache/memcache.c||src/cache/memcache.c",
          "src/cache/redis.c||src/cache/redis.c",
          "src/cache/redis.h||src/cache/redis.h",
          "src/cache/shm.c||src/cache/shm.c",
          "src/config.c||src/config.c",
          "src/metadata.c||src/metadata.c",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c",
          "src/mod_auth_openidc.h||src/mod_auth_openidc.h",
          "src/oauth.c||src/oauth.c",
          "src/proto.c||src/proto.c",
          "src/session.c||src/session.c",
          "src/util.c||src/util.c",
          "test/test.c||test/test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "src/cache/common.c||src/cache/common.c"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "src/cache/common.c||src/cache/common.c"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: ACLOCAL_AMFLAGS=-I m4",
          "3: noinst_LTLIBRARIES = mod_auth_openidc.la",
          "5: mod_auth_openidc_la_SOURCES = \\",
          "6:  src/mod_auth_openidc.c \\",
          "7:  src/cache/file.c \\",
          "8:  src/cache/shm.c \\",
          "9:  src/cache/common.c \\",
          "10:  src/oauth.c \\",
          "11:  src/proto.c \\",
          "12:  src/config.c \\",
          "13:  src/util.c \\",
          "14:  src/authz.c \\",
          "15:  src/session.c \\",
          "16:  src/metadata.c \\",
          "17:  src/jose.c \\",
          "18:  src/parse.c \\",
          "19:  src/pcre_subst.c",
          "21: mod_auth_openidc_la_CFLAGS = -DNAMEVER=\\\"@NAMEVER@\\\" -I$(top_srcdir)/src @APACHE_CFLAGS@ @OPENSSL_CFLAGS@ @CURL_CFLAGS@ @JANSSON_CFLAGS@ @CJOSE_CFLAGS@ @PCRE_CFLAGS@",
          "22: mod_auth_openidc_la_CPPFLAGS = @APACHE_CPPFLAGS@",
          "23: # -rpath is needed to create shared libraries whilst specifying noinst_LTLIBRARIES",
          "24: mod_auth_openidc_la_LDFLAGS = -avoid-version -module -rpath @APACHE_MODULEDIR@ @APACHE_LDFLAGS@",
          "25: mod_auth_openidc_la_LIBADD = @APACHE_LIBS@ @OPENSSL_LIBS@ @CURL_LIBS@ @JANSSON_LIBS@ @CJOSE_LIBS@ @PCRE_LIBS@",
          "27: if HAVE_LIBHIREDIS",
          "28: mod_auth_openidc_la_SOURCES += \\",
          "29:  src/cache/redis.c",
          "30: mod_auth_openidc_la_CFLAGS += -DUSE_LIBHIREDIS @HIREDIS_CFLAGS@",
          "31: mod_auth_openidc_la_LIBADD += @HIREDIS_LIBS@",
          "32: endif",
          "34: if HAVE_MEMCACHE",
          "35: mod_auth_openidc_la_CFLAGS += -DUSE_MEMCACHE",
          "36: mod_auth_openidc_la_SOURCES += \\",
          "37:  src/cache/memcache.c",
          "38: endif",
          "40: if HAVE_LIBJQ",
          "41: mod_auth_openidc_la_CFLAGS += -DUSE_LIBJQ @JQ_CFLAGS@",
          "42: mod_auth_openidc_la_LIBADD += @JQ_LIBS@",
          "43: endif",
          "45: noinst_HEADERS = \\",
          "46:  src/mod_auth_openidc.h \\",
          "47:  src/jose.h \\",
          "48:  src/parse.h \\",
          "49:  src/cache/cache.h \\",
          "50:  src/pcre_subst.h",
          "52: if HAVE_LIBHIREDIS",
          "53: noinst_HEADERS += \\",
          "54:  src/cache/redis.h",
          "55: endif",
          "57: EXTRA_DIST = \\",
          "58:  README.md \\",
          "59:  ChangeLog \\",
          "60:  INSTALL \\",
          "61:  AUTHORS \\",
          "62:  LICENSE.txt \\",
          "63:  auth_openidc.conf \\",
          "64:  test/public.pem \\",
          "65:  test/certificate.pem",
          "67: noinst_PROGRAMS = test/test-cmd",
          "69: check_PROGRAMS = test/test",
          "70: TESTS = test/test",
          "72: test_test_SOURCES = test/test.c test/stub.c",
          "73: test_test_CFLAGS = ${mod_auth_openidc_la_CFLAGS}",
          "74: test_test_LDFLAGS = @APACHE_LDFLAGS@",
          "75: test_test_LDADD = mod_auth_openidc.la ${mod_auth_openidc_la_LIBADD}",
          "77: test_test_cmd_SOURCES = test/test-cmd.c test/stub.c",
          "78: test_test_cmd_CFLAGS = ${mod_auth_openidc_la_CFLAGS}",
          "79: test_test_cmd_LDFLAGS = @APACHE_LDFLAGS@",
          "80: test_test_cmd_LDADD = mod_auth_openidc.la ${mod_auth_openidc_la_LIBADD}",
          "82: install-exec-local: ${noinst_LTLIBRARIES}",
          "83:  @APXS@ -i -n mod_auth_openidc mod_auth_openidc.la",
          "84: # ${INSTALL} -p -m 755 -D .libs/mod_auth_openidc.so @APACHE_MODULEDIR@/mod_auth_openidc.so",
          "86: docker: docker-build docker-run",
          "88: docker-build:",
          "89:  docker build -t mod_auth_openidc .",
          "91: docker-run:",
          "92:  docker run -p 80:80 -p 443:443 --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -it mod_auth_openidc /bin/bash -c \"/root/run.sh\"",
          "",
          "---------------"
        ],
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "46: # We need the curl library for HTTP callouts.",
          "47: PKG_CHECK_MODULES(CURL, libcurl)",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.5rc1],[hans.zandbelt@zmartzone.eu])",
          "5: # This section defines the --with-apxs2 option.",
          "6: AC_ARG_WITH(",
          "7:  [apxs2],",
          "8:  [  --with-apxs2=PATH       Full path to the apxs2 executable.],",
          "9:  [",
          "10:   APXS2=${withval}",
          "11:  ],)",
          "14: if test \"x$APXS2\" = \"x\"; then",
          "15:    # The user didn't specify the --with-apxs2-option.",
          "17:    # Search for apxs2 in the specified directories",
          "18:    AC_PATH_PROG(APXS2, apxs2,,",
          "19:   /usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin)",
          "21:    if test \"x$APXS2\" = \"x\"; then",
          "22:       # Didn't find apxs2 in any of the specified directories.",
          "23:       # Search for apxs instead.",
          "24:       AC_PATH_PROG(APXS2, apxs,,",
          "25:      /usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin)",
          "26:    fi",
          "28: fi",
          "30: # Test if $APXS2 exists and is an executable.",
          "31: if test ! -x \"$APXS2\"; then",
          "32:    # $APXS2 isn't a executable file.",
          "33:    AC_MSG_ERROR([",
          "34: Could not find apxs2. Please specify the path to apxs2",
          "35: using the --with-apxs2=/full/path/to/apxs2 option.",
          "36: The executable may also be named 'apxs'.",
          "37: ])",
          "38: fi",
          "40: # Replace any occurrences of @APXS2@ with the value of $APXS2 in the Makefile.",
          "41: AC_SUBST(APXS2)",
          "43: # Use environment variable APXS2_OPTS to pass params to APXS2 command",
          "44: AC_ARG_VAR(APXS2_OPTS, [Additional command line options to pass to apxs2.])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.5rc2],[hans.zandbelt@zmartzone.eu])",
          "5: AM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects])",
          "7: AC_CONFIG_HEADERS([src/config.h])",
          "8: AC_CONFIG_MACRO_DIR([m4])",
          "10: AC_PROG_CC",
          "11: AM_PROG_AR",
          "12: LT_INIT([dlopen])",
          "14: # Checks for apxs.",
          "15: AC_ARG_WITH([apxs],",
          "16:             [--with-apxs=PATH],",
          "17:             [APXS_PATH=\"$withval\"],",
          "18:             [APXS_PATH=\"/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/opt/local/bin\"])",
          "20: AC_PATH_PROG(APXS, apxs, no, ${APXS_PATH})",
          "22: AS_IF([test \"x${APXS}\" = \"xno\" ],",
          "23:       [AC_MSG_ERROR([apxs not found])],",
          "24:       [test \"x${APXS}\" = \"x\"],",
          "25:       [AC_MSG_ERROR([apxs not found])])",
          "27: APXS_CFLAGS=`${APXS} -q CFLAGS 2> /dev/null`",
          "28: APXS_CPPFLAGS=`${APXS} -q CPPFLAGS 2> /dev/null`",
          "29: APXS_LDFLAGS=`${APXS} -q LDFLAGS 2> /dev/null`",
          "30: APXS_LIBS=`${APXS} -q LIBS 2> /dev/null`",
          "31: APXS_LIBEXECDIR=`${APXS} -q LIBEXECDIR 2> /dev/null`",
          "32: APXS_INCLUDEDIR=`${APXS} -q INCLUDEDIR 2> /dev/null`",
          "33: APXS_INCLUDES=\"-I${APXS_INCLUDEDIR}\"",
          "35: PKG_CHECK_MODULES(APR, [apr-1, apr-util-1])",
          "37: # Apache libraries.",
          "38: APACHE_MODULEDIR=\"${APXS_LIBEXECDIR}\"",
          "39: APACHE_INCLUDES=\"${APXS_INCLUDES} ${APR_INCLUDES}\"",
          "40: APACHE_CFLAGS=\"${APXS_CFLAGS} ${APR_CFLAGS} ${APACHE_INCLUDES}\"",
          "41: APACHE_CPPFLAGS=\"${APXS_CPPFLAGS} ${APR_CPPFLAGS} ${APACHE_INCLUDES}\"",
          "42: APACHE_LDFLAGS=\"${APXS_LDFLAGS} ${APR_LDFLAGS}\"",
          "43: APACHE_LIBS=\"${APXS_LIBS} ${APR_LIBS}\"",
          "45: AC_SUBST(APACHE_MODULEDIR)",
          "46: AC_SUBST(APACHE_INCLUDES)",
          "47: AC_SUBST(APACHE_CFLAGS)",
          "48: AC_SUBST(APACHE_CPPFLAGS)",
          "49: AC_SUBST(APACHE_LDFLAGS)",
          "50: AC_SUBST(APACHE_LIBS)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53: AC_SUBST(OPENSSL_CFLAGS)",
          "54: AC_SUBST(OPENSSL_LIBS)",
          "60: # older versions of libapr may not have memcache support",
          "61: old_CPPFLAGS=$CPPFLAGS",
          "65: CPPFLAGS=$old_CPPFLAGS",
          "67: # We need Jansson for JSON parsing.",
          "",
          "[Removed Lines]",
          "56: PKG_CHECK_MODULES(APR, [apr-1, apr-util-1])",
          "57: AC_SUBST(APR_CFLAGS)",
          "58: AC_SUBST(APR_LIBS)",
          "62: CPPFLAGS=\"${APR_CFLAGS} $CPPFLAGS\"",
          "63: AC_CHECK_HEADERS([apr_memcache.h], [HAVE_MEMCACHE=1], [HAVE_MEMCACHE=0])",
          "64: AC_SUBST(HAVE_MEMCACHE)",
          "",
          "[Added Lines]",
          "64: CPPFLAGS=\"${APACHE_CPPFLAGS} ${APACHE_INCLUDES} $CPPFLAGS\"",
          "65: AC_CHECK_HEADER([apr_memcache.h], [HAVE_MEMCACHE=1], [HAVE_MEMCACHE=0])",
          "66: AM_CONDITIONAL(HAVE_MEMCACHE, HAVE_MEMCACHE=1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:   [],",
          "87:   [with_hiredis=yes])",
          "88: AS_CASE([\"$with_hiredis\"],",
          "90:   [no], [HAVE_LIBHIREDIS=0],",
          "91:   [PKG_CHECK_MODULES([HIREDIS], [hiredis], [HAVE_LIBHIREDIS=1], [HAVE_LIBHIREDIS=0])])",
          "93: AC_SUBST(HIREDIS_CFLAGS)",
          "94: AC_SUBST(HIREDIS_LIBS)",
          "96: # JQ",
          "97: HAVE_LIBJQ=0",
          "102: if test -n \"$with_jq\"",
          "103: then",
          "104:     JQ_CFLAGS=\"-I$with_jq/include\"",
          "105:     JQ_LIBS=\"-L$with_jq/lib -ljq\"",
          "107:  CPPFLAGS=\"$JQ_CFLAGS $CPPFLAGS\"",
          "110:  LDFLAGS=\"$JQ_LIBS $LDFLAGS\"",
          "111:  AC_CHECK_LIB([jq], [jq_init], [HAVE_LIBJQ=1], [HAVE_LIBJQ=0])",
          "",
          "[Removed Lines]",
          "89:   [yes], [if test \"$HIREDIS_LIBS\" == \"\"; then PKG_CHECK_MODULES([HIREDIS], [hiredis], [HAVE_LIBHIREDIS=1], [HAVE_LIBHIREDIS=0]) ; else [HAVE_LIBHIREDIS=1] ; fi],",
          "92: AC_SUBST(HAVE_LIBHIREDIS)",
          "99: AC_ARG_WITH(jq,",
          "100:         [  --with-jq=PATH          location of your libjq installation])",
          "108:  AC_CHECK_HEADERS([jq.h], , [HAVE_LIBJQ=0])",
          "",
          "[Added Lines]",
          "91:   [yes], [",
          "92:    if test \"$HIREDIS_LIBS\" == \"\"; then PKG_CHECK_MODULES([HIREDIS], [hiredis], [HAVE_LIBHIREDIS=1], [HAVE_LIBHIREDIS=0]) ; else [HAVE_LIBHIREDIS=1] ; fi",
          "93:   ],",
          "96: AM_CONDITIONAL(HAVE_LIBHIREDIS, [test x\"$HAVE_LIBHIREDIS\" = \"x1\"])",
          "103: AC_ARG_WITH([jq],",
          "104:  AS_HELP_STRING([--with-jq=PATH], [location of your libjq installation])])",
          "112:  AC_CHECK_HEADER([jq.h], , [HAVE_LIBJQ=0])",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "114:  fi",
          "115: fi",
          "118: AC_SUBST(JQ_CFLAGS)",
          "119: AC_SUBST(JQ_LIBS)",
          "",
          "[Removed Lines]",
          "117: AC_SUBST(HAVE_LIBJQ)",
          "",
          "[Added Lines]",
          "121: AM_CONDITIONAL(HAVE_LIBJQ, [test x\"$HAVE_LIBJQ\" = \"x1\"])",
          "",
          "---------------"
        ],
        "src/authz.c||src/authz.c": [
          "File: src/authz.c -> src/authz.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #include \"mod_auth_openidc.h\"",
          "52: #include <pcre.h>",
          "",
          "[Removed Lines]",
          "46: #include <http_core.h>",
          "47: #include <http_log.h>",
          "48: #include <http_protocol.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/cache/common.c||src/cache/common.c": [
          "File: src/cache/common.c -> src/cache/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: #include <unistd.h>",
          "48: #endif",
          "50: #include \"apr_general.h\"",
          "52: #include <httpd.h>",
          "53: #include <http_config.h>",
          "54: #include <http_log.h>",
          "60: #include <openssl/evp.h>",
          "61: #include <openssl/aes.h>",
          "62: #include <openssl/err.h>",
          "64: #include <apr_base64.h>",
          "68: extern module AP_MODULE_DECLARE_DATA auth_openidc_module;",
          "",
          "[Removed Lines]",
          "56: #ifdef AP_NEED_SET_MUTEX_PERMS",
          "57: #include \"unixd.h\"",
          "58: #endif",
          "66: #include \"../mod_auth_openidc.h\"",
          "",
          "[Added Lines]",
          "50: #include \"mod_auth_openidc.h\"",
          "52: #ifdef AP_NEED_SET_MUTEX_PERMS",
          "53: #include \"unixd.h\"",
          "54: #endif",
          "",
          "---------------"
        ],
        "src/cache/file.c||src/cache/file.c": [
          "File: src/cache/file.c -> src/cache/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: extern module AP_MODULE_DECLARE_DATA auth_openidc_module;",
          "",
          "[Removed Lines]",
          "46: #include <apr_hash.h>",
          "47: #include <apr_time.h>",
          "48: #include <apr_strings.h>",
          "49: #include <apr_pools.h>",
          "51: #include <httpd.h>",
          "52: #include <http_log.h>",
          "54: #include \"../mod_auth_openidc.h\"",
          "",
          "[Added Lines]",
          "46: #include \"mod_auth_openidc.h\"",
          "",
          "---------------"
        ],
        "src/cache/memcache.c||src/cache/memcache.c": [
          "File: src/cache/memcache.c -> src/cache/memcache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: extern module AP_MODULE_DECLARE_DATA auth_openidc_module;",
          "",
          "[Removed Lines]",
          "46: #include \"apr_general.h\"",
          "47: #include \"apr_strings.h\"",
          "48: #include \"apr_hash.h\"",
          "49: #include \"apr_memcache.h\"",
          "51: #include <httpd.h>",
          "52: #include <http_config.h>",
          "53: #include <http_log.h>",
          "55: #include \"../mod_auth_openidc.h\"",
          "",
          "[Added Lines]",
          "46: #include \"mod_auth_openidc.h\"",
          "47: #include <apr_memcache.h>",
          "",
          "---------------"
        ],
        "src/cache/redis.c||src/cache/redis.c": [
          "File: src/cache/redis.c -> src/cache/redis.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: #include \"redis.h\"",
          "",
          "[Removed Lines]",
          "46: #include \"apr_general.h\"",
          "47: #include \"apr_strings.h\"",
          "49: #include <httpd.h>",
          "50: #include <http_config.h>",
          "51: #include <http_log.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/cache/redis.h||src/cache/redis.h": [
          "File: src/cache/redis.h -> src/cache/redis.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #include \"hiredis/hiredis.h\"",
          "50: typedef struct oidc_cache_cfg_redis_t oidc_cache_cfg_redis_t;",
          "",
          "[Removed Lines]",
          "48: #include \"../mod_auth_openidc.h\"",
          "",
          "[Added Lines]",
          "48: #include \"mod_auth_openidc.h\"",
          "",
          "---------------"
        ],
        "src/cache/shm.c||src/cache/shm.c": [
          "File: src/cache/shm.c -> src/cache/shm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: extern module AP_MODULE_DECLARE_DATA auth_openidc_module;",
          "",
          "[Removed Lines]",
          "47: #include <httpd.h>",
          "48: #include <http_config.h>",
          "49: #include <http_log.h>",
          "51: #include \"apr_shm.h\"",
          "53: #include \"../mod_auth_openidc.h\"",
          "",
          "[Added Lines]",
          "47: #include \"mod_auth_openidc.h\"",
          "",
          "---------------"
        ],
        "src/config.c||src/config.c": [
          "File: src/config.c -> src/config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: #include <curl/curl.h>",
          "61: #define OPENSSL_THREAD_DEFINES",
          "62: #include <openssl/opensslconf.h>",
          "63: #include <openssl/opensslv.h>",
          "",
          "[Removed Lines]",
          "44: #include <apr.h>",
          "45: #include <apr_errno.h>",
          "46: #include <apr_strings.h>",
          "47: #include <apr_portable.h>",
          "48: #include <apr_base64.h>",
          "50: #include <httpd.h>",
          "51: #include <http_config.h>",
          "52: #include <http_log.h>",
          "53: #include <http_request.h>",
          "54: #include <ap_provider.h>",
          "58: #include \"mod_auth_openidc.h\"",
          "59: #include \"parse.h\"",
          "",
          "[Added Lines]",
          "44: #include \"mod_auth_openidc.h\"",
          "",
          "---------------"
        ],
        "src/metadata.c||src/metadata.c": [
          "File: src/metadata.c -> src/metadata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: #include \"mod_auth_openidc.h\"",
          "57: extern module AP_MODULE_DECLARE_DATA auth_openidc_module;",
          "",
          "[Removed Lines]",
          "46: #include <apr_hash.h>",
          "47: #include <apr_time.h>",
          "48: #include <apr_strings.h>",
          "49: #include <apr_pools.h>",
          "51: #include <httpd.h>",
          "52: #include <http_log.h>",
          "55: #include \"parse.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: #include \"apr_hash.h\"",
          "52: #include \"apr_strings.h\"",
          "53: #include \"ap_config.h\"",
          "54: #include \"ap_provider.h\"",
          "55: #include \"apr_lib.h\"",
          "56: #include \"apr_file_io.h\"",
          "58: #include \"apr_base64.h\"",
          "60: #include \"httpd.h\"",
          "",
          "[Removed Lines]",
          "57: #include \"apr_sha1.h\"",
          "",
          "[Added Lines]",
          "51: #include \"mod_auth_openidc.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63: #include \"http_log.h\"",
          "64: #include \"http_protocol.h\"",
          "65: #include \"http_request.h\"",
          "69: #define OIDC_REFRESH_ERROR 2",
          "71: static int oidc_handle_logout_request(request_rec *r, oidc_cfg *c,",
          "",
          "[Removed Lines]",
          "67: #include \"mod_auth_openidc.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.h||src/mod_auth_openidc.h": [
          "File: src/mod_auth_openidc.h -> src/mod_auth_openidc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: #ifndef MOD_AUTH_OPENIDC_H_",
          "45: #define MOD_AUTH_OPENIDC_H_",
          "47: #include <stdint.h>",
          "48: #include <httpd.h>",
          "49: #include <http_core.h>",
          "50: #include <http_config.h>",
          "51: #include <mod_auth.h>",
          "53: #include \"jose.h\"",
          "54: #include \"cache/cache.h\"",
          "55: #include \"parse.h\"",
          "58: #ifdef APLOG_USE_MODULE",
          "59: APLOG_USE_MODULE(auth_openidc);",
          "",
          "[Removed Lines]",
          "56: #include <apr_uuid.h>",
          "",
          "[Added Lines]",
          "47: #ifdef HAVE_CONFIG_H",
          "48: #  include \"config.h\"",
          "49: #  undef PACKAGE_NAME",
          "50: #  undef PACKAGE_STRING",
          "51: #  undef PACKAGE_TARNAME",
          "52: #  undef PACKAGE_VERSION",
          "53: #  undef PACKAGE_BUGREPORT",
          "54: #endif",
          "60: #include <http_log.h>",
          "61: #include <http_request.h>",
          "62: #include <http_protocol.h>",
          "65: #include <apr_base64.h>",
          "66: #include <apr_lib.h>",
          "67: #include <apr_uuid.h>",
          "68: #include <apr_sha1.h>",
          "",
          "---------------"
        ],
        "src/oauth.c||src/oauth.c": [
          "File: src/oauth.c -> src/oauth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: #include \"mod_auth_openidc.h\"",
          "54: apr_byte_t oidc_oauth_metadata_provider_retrieve(request_rec *r, oidc_cfg *cfg,",
          "55:   const char *issuer, const char *url, json_t **j_metadata,",
          "",
          "[Removed Lines]",
          "44: #include <apr_lib.h>",
          "46: #include <httpd.h>",
          "47: #include <http_config.h>",
          "48: #include <http_log.h>",
          "49: #include <http_request.h>",
          "52: #include \"parse.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/proto.c||src/proto.c": [
          "File: src/proto.c -> src/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: #include \"mod_auth_openidc.h\"",
          "52: #include <openssl/opensslconf.h>",
          "53: #include <openssl/opensslv.h>",
          "",
          "[Removed Lines]",
          "44: #include <httpd.h>",
          "45: #include <http_config.h>",
          "46: #include <http_log.h>",
          "47: #include <http_request.h>",
          "50: #include \"parse.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "379:   if (sjwk == NULL) {",
          "380:    oidc_jwt_destroy(request_object);",
          "381:    json_decref(request_object_config);",
          "383:   }",
          "385:   if (oidc_jwt_sign(r->pool, request_object, sjwk, &err) == FALSE) {",
          "",
          "[Removed Lines]",
          "382:    return FALSE;",
          "",
          "[Added Lines]",
          "376:    return NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "389:     oidc_jwk_destroy(sjwk);",
          "390:    oidc_jwt_destroy(request_object);",
          "391:    json_decref(request_object_config);",
          "393:   }",
          "395:   if (jwk_needs_destroy)",
          "",
          "[Removed Lines]",
          "392:    return FALSE;",
          "",
          "[Added Lines]",
          "386:    return NULL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "401:   oidc_error(r, \"creating JWE failed\");",
          "402:   oidc_jwt_destroy(request_object);",
          "403:   json_decref(request_object_config);",
          "405:  }",
          "407:  oidc_json_object_get_string(r->pool, crypto, \"crypt_alg\", &jwe->header.alg,",
          "",
          "[Removed Lines]",
          "404:   return FALSE;",
          "",
          "[Added Lines]",
          "398:   return NULL;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "437:    oidc_jwt_destroy(jwe);",
          "438:    oidc_jwt_destroy(request_object);",
          "439:    json_decref(request_object_config);",
          "441:   }",
          "443:   if (jwe->header.enc == NULL)",
          "",
          "[Removed Lines]",
          "440:    return FALSE;",
          "",
          "[Added Lines]",
          "434:    return NULL;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "454:    oidc_jwt_destroy(jwe);",
          "455:    oidc_jwt_destroy(request_object);",
          "456:    json_decref(request_object_config);",
          "458:   }",
          "460:   oidc_jwk_destroy(ejwk);",
          "",
          "[Removed Lines]",
          "457:    return FALSE;",
          "",
          "[Added Lines]",
          "451:    return NULL;",
          "",
          "---------------"
        ],
        "src/session.c||src/session.c": [
          "File: src/session.c -> src/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: #include \"mod_auth_openidc.h\"",
          "54: extern module AP_MODULE_DECLARE_DATA auth_openidc_module;",
          "",
          "[Removed Lines]",
          "44: #include <apr_base64.h>",
          "45: #include <apr_lib.h>",
          "47: #include <httpd.h>",
          "48: #include <http_core.h>",
          "49: #include <http_config.h>",
          "50: #include <http_log.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: #include \"mod_auth_openidc.h\"",
          "58: #include <pcre.h>",
          "59: #include \"pcre_subst.h\"",
          "",
          "[Removed Lines]",
          "44: #include <apr_strings.h>",
          "45: #include <apr_base64.h>",
          "46: #include <apr_lib.h>",
          "48: #include <httpd.h>",
          "49: #include <http_config.h>",
          "50: #include <http_log.h>",
          "51: #include <http_request.h>",
          "52: #include \"http_protocol.h\"",
          "54: #include <curl/curl.h>",
          "",
          "[Added Lines]",
          "46: #include <curl/curl.h>",
          "",
          "---------------"
        ],
        "test/test.c||test/test.c": [
          "File: test/test.c -> test/test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: #include <stdio.h>",
          "46: #include <errno.h>",
          "48: #include <openssl/evp.h>",
          "49: #include <openssl/hmac.h>",
          "51: #include \"apr.h\"",
          "52: #include \"apr_errno.h\"",
          "53: #include \"apr_general.h\"",
          "54: #include \"apr_time.h\"",
          "55: #include \"apr_base64.h\"",
          "59: extern module AP_MODULE_DECLARE_DATA auth_openidc_module;",
          "61: static int test_nr_run = 0;",
          "",
          "[Removed Lines]",
          "57: #include \"mod_auth_openidc.h\"",
          "",
          "[Added Lines]",
          "45: #include \"mod_auth_openidc.h\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "884c1250fb173e2956a3d1211df826e84c30a7bf",
      "candidate_info": {
        "commit_hash": "884c1250fb173e2956a3d1211df826e84c30a7bf",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/884c1250fb173e2956a3d1211df826e84c30a7bf",
        "files": [
          ".cproject",
          ".travis.yml",
          "ChangeLog",
          "Dockerfile",
          "configure.ac",
          "src/authz.c",
          "src/pcre_subst.c",
          "src/pcre_subst.h",
          "src/util.c",
          "test/test.c"
        ],
        "message": "add support for libpcre2; closes #740\n\nbump to 2.4.10.1rc2\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/authz.c||src/authz.c",
          "src/pcre_subst.c||src/pcre_subst.c",
          "src/pcre_subst.h||src/pcre_subst.h",
          "src/util.c||src/util.c",
          "test/test.c||test/test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.10.1rc1],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.10.1rc2],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79: AC_SUBST(CJOSE_LIBS)",
          "81: # PCRE",
          "83: AC_SUBST(PCRE_CFLAGS)",
          "84: AC_SUBST(PCRE_LIBS)",
          "",
          "[Removed Lines]",
          "82: PKG_CHECK_MODULES(PCRE, libpcre)",
          "",
          "[Added Lines]",
          "82: PKG_CHECK_MODULES([PCRE2], libpcre2-8, [",
          "83:   PCRE_CFLAGS=\"$PCRE2_CFLAGS\"",
          "84:   PCRE_LIBS=\"$PCRE2_LIBS\"",
          "85:   AC_DEFINE([HAVE_LIBPCRE2], [1], [Define if libpcre2 is available.])",
          "86:   enable_pcre2=yes",
          "87: ], [",
          "88:   AC_CHECK_HEADER(pcre2.h, [",
          "89:     AC_CHECK_LIB(pcre2-8, pcre2_compile_8, [",
          "90:       PCRE_LIBS=\"-lpcre2-8\"",
          "91:       AC_DEFINE([HAVE_LIBPCRE2], 1, [Define if libpcre2 is available.])",
          "92:       enable_pcre2=yes",
          "93:     ])",
          "94:   ])",
          "95: ])",
          "97: AS_IF([test \"X$enable_pcre2\" != \"Xyes\"],[",
          "98:   PKG_CHECK_MODULES([PCRE], libpcre, [",
          "99:     CFLAGS=\"$PCRE_CFLAGS $CFLAGS\"",
          "100:     AC_CHECK_HEADER(pcre.h, [",
          "101:       LIBS=\"$PCRE_LIBS $LIBS\"",
          "102:       AC_DEFINE([HAVE_LIBPCRE], [1], [Define if libpcre is available.])",
          "103:       enable_pcre=yes",
          "104:     ])",
          "105:   ], [",
          "106:     AC_CHECK_HEADER(pcre.h, [",
          "107:       AC_CHECK_LIB(pcre, pcre_compile, [",
          "108:         PCRE_LIBS=\"-lpcre\"",
          "109:         AC_DEFINE([HAVE_LIBPCRE], 1, [Define if libpcre is available.])",
          "110:       ])",
          "111:     ])",
          "112:   ])",
          "113: ])",
          "115: AS_IF([test \"X$enable_pcre2\" = Xyes], [PCRE_INFO=\"yes, via libpcre2\"], [test \"X$enable_pcre\" = Xyes], [PCRE_INFO=\"yes, via libpcre\"], [PCRE_INFO=no])",
          "",
          "---------------"
        ],
        "src/authz.c||src/authz.c": [
          "File: src/authz.c -> src/authz.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #include \"mod_auth_openidc.h\"",
          "50: #ifdef USE_LIBJQ",
          "51: #include \"jq.h\"",
          "",
          "[Removed Lines]",
          "48: #include <pcre.h>",
          "",
          "[Added Lines]",
          "47: #include \"pcre_subst.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124: static apr_byte_t oidc_authz_match_expression(request_rec *r,",
          "125:   const char *spec_c, json_t *val) {",
          "129:  int i = 0;",
          "134:  if (preg == NULL) {",
          "137:   return FALSE;",
          "138:  }",
          "",
          "[Removed Lines]",
          "126:  const char *errorptr;",
          "127:  int erroffset;",
          "128:  pcre *preg;",
          "132:  preg = pcre_compile(spec_c, 0, &errorptr, &erroffset, NULL);",
          "135:   oidc_error(r, \"pattern [%s] is not a valid regular expression\", spec_c);",
          "136:   pcre_free(preg);",
          "",
          "[Added Lines]",
          "125:  oidc_pcre *preg = NULL;",
          "126:  char *error_str = NULL;",
          "130:  preg = oidc_pcre_compile(r->pool, spec_c, &error_str);",
          "133:   oidc_error(r, \"pattern [%s] is not a valid regular expression: %s\", spec_c, error_str);",
          "134:   oidc_pcre_free(preg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:  if (json_is_string(val)) {",
          "147:    return TRUE;",
          "148:   }",
          "",
          "[Removed Lines]",
          "144:   if (pcre_exec(preg, NULL, json_string_value(val),",
          "145:     (int) strlen(json_string_value(val)), 0, 0, NULL, 0) == 0) {",
          "146:    pcre_free(preg);",
          "",
          "[Added Lines]",
          "142:   if (oidc_pcre_exec(r->pool, preg, json_string_value(val),",
          "143:     (int) strlen(json_string_value(val)), NULL) == 0) {",
          "144:    oidc_pcre_free(preg);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "157:    if (json_is_string(elem)) {",
          "164:      return TRUE;",
          "165:     }",
          "166:    }",
          "167:   }",
          "168:  }",
          "172:  return FALSE;",
          "173: }",
          "",
          "[Removed Lines]",
          "160:     if (pcre_exec(preg, NULL, json_string_value(elem),",
          "161:       (int) strlen(json_string_value(elem)), 0, 0,",
          "162:       NULL, 0) == 0) {",
          "163:      pcre_free(preg);",
          "170:  pcre_free(preg);",
          "",
          "[Added Lines]",
          "158:     if (oidc_pcre_exec(r->pool, preg, json_string_value(elem),",
          "159:       (int) strlen(json_string_value(elem)), NULL) == 0) {",
          "160:      oidc_pcre_free(preg);",
          "167:  oidc_pcre_free(preg);",
          "",
          "---------------"
        ],
        "src/pcre_subst.c||src/pcre_subst.c": [
          "File: src/pcre_subst.c -> src/pcre_subst.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include <stdio.h>",
          "36: #include <ctype.h>",
          "37: #include <string.h>",
          "39: #include \"pcre_subst.h\"",
          "41: #ifdef DEBUG_PCRE_SUBST",
          "42: static void",
          "43: dumpstr(const char *str, int len, int start, int end)",
          "",
          "[Removed Lines]",
          "38: #include <pcre.h>",
          "",
          "[Added Lines]",
          "38: #include <apr_strings.h>",
          "40: #include \"config.h\"",
          "42: #ifdef HAVE_LIBPCRE2",
          "43: #define PCRE2_CODE_UNIT_WIDTH 8",
          "44: #include <pcre2.h>",
          "45: #else",
          "46: #include <pcre.h>",
          "47: #endif",
          "53: typedef struct oidc_pcre {",
          "54: #ifdef HAVE_LIBPCRE2",
          "55:  pcre2_code *preg;",
          "56:  pcre2_match_data *match_data;",
          "57: #else",
          "58:  int subStr[OIDC_UTIL_REGEXP_MATCH_SIZE];",
          "59:  pcre *preg;",
          "60: #endif",
          "61: } oidc_pcre;",
          "63: #ifndef HAVE_LIBPCRE2",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "145: char *",
          "146: pcre_subst(const pcre *ppat, const pcre_extra *extra, const char *str, int len,",
          "148: {",
          "149:  int nmat;",
          "150:  int ovec[OIDC_PCRE_MAXCAPTURE * 3];",
          "151:  nmat = pcre_exec(ppat, extra, str, len, offset, options,",
          "153: #ifdef DEBUG_PCRE_SUBST",
          "154:  dumpmatch(str, len, rep, nmat, ovec);",
          "155: #endif",
          "",
          "[Removed Lines]",
          "147:    int offset, int options, const char *rep)",
          "152:   ovec, OIDC_PCRE_MAXCAPTURE * 3);",
          "",
          "[Added Lines]",
          "170:   int offset, int options, const char *rep)",
          "175:       ovec, OIDC_PCRE_MAXCAPTURE * 3);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157:   return NULL;",
          "158:  return(edit(str, len, rep, nmat, ovec));",
          "159: }",
          "161: #ifdef DEBUG_BUILD",
          "162: int",
          "163: main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183: #endif",
          "185: char* oidc_pcre_subst(apr_pool_t *pool, const oidc_pcre *pcre, const char *str, int len,",
          "186:   const char *rep) {",
          "187:  char *rv = NULL;",
          "188: #ifdef HAVE_LIBPCRE2",
          "189:  PCRE2_SIZE bufsize = (len == 0) ? 16 : 2 * len;",
          "190:  PCRE2_UCHAR *output = (PCRE2_UCHAR*) malloc(sizeof(PCRE2_UCHAR) * bufsize);",
          "191:  PCRE2_SIZE outlen = bufsize;",
          "192:  PCRE2_SPTR subject = (PCRE2_SPTR) str;",
          "193:  PCRE2_SIZE length = (PCRE2_SIZE) len;",
          "194:  PCRE2_SPTR replacement = (PCRE2_SPTR) rep;",
          "195:  if (pcre2_substitute(pcre->preg, subject, length, 0,",
          "196:        PCRE2_SUBSTITUTE_GLOBAL, 0, 0, replacement, PCRE2_ZERO_TERMINATED, output, &outlen) > 0)",
          "197:   rv = apr_pstrdup(pool, (const char*) output);",
          "198:  free(output);",
          "199: #else",
          "200:  char *substituted = NULL;",
          "201:  substituted = pcre_subst(pcre->preg, 0, str, len, 0, 0, rep);",
          "202:  rv = apr_pstrdup(pool, substituted);",
          "203:  pcre_free(substituted);",
          "204: #endif",
          "205:  return rv;",
          "206: }",
          "208: oidc_pcre* oidc_pcre_compile(apr_pool_t *pool, const char *regexp, char **error_str) {",
          "209:  oidc_pcre *pcre = apr_pcalloc(pool, sizeof(oidc_pcre));",
          "210: #ifdef HAVE_LIBPCRE2",
          "211:  int errorcode;",
          "212:  PCRE2_SIZE erroroffset;",
          "213:  pcre->preg =",
          "214:    pcre2_compile((PCRE2_SPTR) regexp, (PCRE2_SIZE) strlen(regexp), 0, &errorcode, &erroroffset, NULL);",
          "215: #else",
          "216:  const char *errorptr = NULL;",
          "217:  int erroffset;",
          "218:  pcre->preg = pcre_compile(regexp, 0, &errorptr, &erroffset, NULL);",
          "219: #endif",
          "221:  if (pcre->preg == NULL) {",
          "223:   pcre = NULL;",
          "224:  }",
          "225:  return pcre;",
          "226: }",
          "228: void oidc_pcre_free(oidc_pcre *pcre) {",
          "229: #ifdef HAVE_LIBPCRE2",
          "230:  if (pcre->match_data)",
          "231:   pcre2_match_data_free(pcre->match_data);",
          "232:  if (pcre->preg)",
          "233:   pcre2_code_free(pcre->preg);",
          "234: #else",
          "235:  pcre_free(pcre->preg);",
          "236: #endif",
          "237: }",
          "239: int oidc_pcre_get_substring(apr_pool_t *pool, const oidc_pcre *pcre, const char *input, int rc,",
          "240:   char **sub_str, char **error_str) {",
          "241:  int rv = 0;",
          "242: #ifdef HAVE_LIBPCRE2",
          "243:  PCRE2_UCHAR *buf = NULL;",
          "244:  PCRE2_SIZE buflen = 0;",
          "245:  if ((rv =",
          "246:    pcre2_substring_get_bynumber(pcre->match_data, OIDC_UTIL_REGEXP_MATCH_NR, &buf, &buflen))",
          "247:    < 0) {",
          "248:   switch (rc) {",
          "249:    case PCRE2_ERROR_NOSUBSTRING:",
          "251:     break;",
          "252:    case PCRE2_ERROR_UNAVAILABLE:",
          "254:     break;",
          "255:    case PCRE2_ERROR_UNSET:",
          "257:     break;",
          "258:    case PCRE2_ERROR_NOMEMORY:",
          "260:     break;",
          "261:    default:",
          "263:     break;",
          "264:   }",
          "265:  } else {",
          "267:   pcre2_substring_free(buf);",
          "268:   rv = 1;",
          "269:  }",
          "270: #else",
          "271:  const char *buf = NULL;",
          "272:  if ((rv = pcre_get_substring(input, (int *)pcre->subStr, rc, OIDC_UTIL_REGEXP_MATCH_NR, &buf)) <= 0) {",
          "274:           rv);",
          "275:  } else {",
          "277:   pcre_free_substring(buf);",
          "278:  }",
          "279: #endif",
          "280:  return rv;",
          "281: }",
          "283: int oidc_pcre_exec(apr_pool_t *pool, oidc_pcre *pcre, const char *input, int len, char **error_str) {",
          "284:  int rc = 0;",
          "285: #ifdef HAVE_LIBPCRE2",
          "286:  pcre->match_data = pcre2_match_data_create_from_pattern(pcre->preg, NULL);",
          "287:  if ((rc =",
          "288:    pcre2_match(pcre->preg, (PCRE2_SPTR) input, (PCRE2_SIZE) len, 0, 0, pcre->match_data, NULL))",
          "289:    < 0) {",
          "290:   switch (rc) {",
          "291:    case PCRE2_ERROR_NOMATCH:",
          "293:     break;",
          "294:    default:",
          "296:     break;",
          "297:   }",
          "298:  }",
          "299: #else",
          "300:  if ((rc = pcre_exec(pcre->preg, NULL, input, len, 0, 0, pcre->subStr, OIDC_UTIL_REGEXP_MATCH_SIZE)) < 0) {",
          "302:   switch (rc) {",
          "303:    case PCRE_ERROR_NOMATCH:",
          "305:     break;",
          "306:    case PCRE_ERROR_NULL:",
          "308:     break;",
          "309:    case PCRE_ERROR_BADOPTION:",
          "311:     break;",
          "312:    case PCRE_ERROR_BADMAGIC:",
          "314:            \"magic number bad (compiled re corrupt?)\");",
          "315:     break;",
          "316:    case PCRE_ERROR_UNKNOWN_NODE:",
          "318:            \"something kooky in the compiled re\");",
          "319:     break;",
          "320:    case PCRE_ERROR_NOMEMORY:",
          "322:     break;",
          "323:    default:",
          "325:     break;",
          "326:   }",
          "328:  }",
          "329: #endif",
          "331:  return rc;",
          "332: }",
          "334: #ifndef HAVE_LIBPCRE2",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "184:  } else {",
          "185:   printf(\"No match\\n\");",
          "186:  }",
          "187:  return 0;",
          "188: }",
          "189: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "361:  pcre_free(extra);",
          "362:  pcre_free(ppat);",
          "366: #endif",
          "",
          "---------------"
        ],
        "src/pcre_subst.h||src/pcre_subst.h": [
          "File: src/pcre_subst.h -> src/pcre_subst.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifndef MOD_AUTH_OPENIDC_PCRE_SUBST_H_",
          "36: #define MOD_AUTH_OPENIDC_PCRE_SUBST_H_",
          "38: #define OIDC_PCRE_MAXCAPTURE 255",
          "",
          "[Removed Lines]",
          "40: char *pcre_subst(const pcre *, const pcre_extra *, const char *, int, int, int, const char *);",
          "",
          "[Added Lines]",
          "38: #include <apr_pools.h>",
          "41: #define OIDC_UTIL_REGEXP_MATCH_SIZE 30",
          "42: #define OIDC_UTIL_REGEXP_MATCH_NR 1",
          "44: typedef struct oidc_pcre oidc_pcre;",
          "46: oidc_pcre* oidc_pcre_compile(apr_pool_t *pool, const char *regexp, char **error_str);",
          "47: char* oidc_pcre_subst(apr_pool_t *pool, const oidc_pcre*, const char*, int, const char*);",
          "48: int oidc_pcre_exec(apr_pool_t*, oidc_pcre*, const char*, int, char**);",
          "49: void oidc_pcre_free(oidc_pcre*);",
          "50: int oidc_pcre_get_substring(apr_pool_t *pool, const oidc_pcre*, const char *input, int rc,",
          "51:   char **sub_str, char **error_str);",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: #include \"mod_auth_openidc.h\"",
          "46: #include <curl/curl.h>",
          "48: #include \"pcre_subst.h\"",
          "",
          "[Removed Lines]",
          "47: #include <pcre.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2376:  char *substituted = NULL;",
          "2377:  apr_byte_t rc = FALSE;",
          "2380:  if (preg == NULL) {",
          "2383:   goto out;",
          "2384:  }",
          "2386:  if (strlen(input) >= OIDC_PCRE_MAXCAPTURE - 1) {",
          "2391:   goto out;",
          "2392:  }",
          "2396:  if (substituted == NULL) {",
          "2401:   goto out;",
          "2402:  }",
          "2405:  rc = TRUE;",
          "2409:  if (preg)",
          "2412:  return rc;",
          "2413: }",
          "",
          "[Removed Lines]",
          "2370: apr_byte_t oidc_util_regexp_substitute(apr_pool_t *pool, const char *input,",
          "2371:   const char *regexp, const char *replace, char **output,",
          "2372:   char **error_str) {",
          "2374:  const char *errorptr = NULL;",
          "2375:  int erroffset;",
          "2379:  pcre *preg = pcre_compile(regexp, 0, &errorptr, &erroffset, NULL);",
          "2382:     \"pattern [%s] is not a valid regular expression\", regexp);",
          "2388:     apr_psprintf(pool,",
          "2389:       \"string length (%d) is larger than the maximum allowed for pcre_subst (%d)\",",
          "2390:       (int) strlen(input), OIDC_PCRE_MAXCAPTURE - 1);",
          "2394:  substituted = pcre_subst(preg, NULL, input, (int) strlen(input), 0, 0,",
          "2395:    replace);",
          "2398:     apr_psprintf(pool,",
          "2399:       \"unknown error could not match string [%s] using pattern [%s] and replace matches in [%s]\",",
          "2400:       input, regexp, replace);",
          "2407:  out: if (substituted)",
          "2408:   pcre_free(substituted);",
          "2410:   pcre_free(preg);",
          "",
          "[Added Lines]",
          "2369: apr_byte_t oidc_util_regexp_substitute(apr_pool_t *pool, const char *input, const char *regexp,",
          "2370:   const char *replace, char **output, char **error_str) {",
          "2375:  oidc_pcre *preg = oidc_pcre_compile(pool, regexp, error_str);",
          "2378:     apr_psprintf(pool, \"pattern [%s] is not a valid regular expression: %s\", regexp, *error_str);",
          "2384:     apr_psprintf(pool, \"string length (%d) is larger than the maximum allowed for pcre_subst (%d)\", (int) strlen(input), OIDC_PCRE_MAXCAPTURE",
          "2385:         - 1);",
          "2389:  substituted = oidc_pcre_subst(pool, preg, input, (int) strlen(input), replace);",
          "2392:     apr_psprintf(pool, \"unknown error could not match string [%s] using pattern [%s] and replace matches in [%s]\", input, regexp, replace);",
          "2399: out:",
          "2401:   oidc_pcre_free(preg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2428:  apr_byte_t rv = FALSE;",
          "2431:  if (preg == NULL) {",
          "2434:   goto out;",
          "2435:  }",
          "2464:   goto out;",
          "2467:  if (output) {",
          "2473:    goto out;",
          "2474:   }",
          "2477:  }",
          "2479:  rv = TRUE;",
          "2481: out:",
          "2485:  if (preg)",
          "2488:  return rv;",
          "2489: }",
          "",
          "[Removed Lines]",
          "2418: #define OIDC_UTIL_REGEXP_MATCH_SIZE 30",
          "2419: #define OIDC_UTIL_REGEXP_MATCH_NR 1",
          "2421: apr_byte_t oidc_util_regexp_first_match(apr_pool_t *pool, const char *input,",
          "2422:   const char *regexp, char **output, char **error_str) {",
          "2423:  const char *errorptr = NULL;",
          "2424:  int erroffset;",
          "2425:  int rc = 0;",
          "2426:  int subStr[OIDC_UTIL_REGEXP_MATCH_SIZE];",
          "2427:  const char *psubStrMatchStr = NULL;",
          "2430:  pcre *preg = pcre_compile(regexp, 0, &errorptr, &erroffset, NULL);",
          "2433:     \"pattern [%s] is not a valid regular expression\", regexp);",
          "2437:  if ((rc = pcre_exec(preg, NULL, input, (int) strlen(input), 0, 0, subStr,",
          "2438:    OIDC_UTIL_REGEXP_MATCH_SIZE)) < 0) {",
          "2439:   switch (rc) {",
          "2440:   case PCRE_ERROR_NOMATCH:",
          "2442:    break;",
          "2443:   case PCRE_ERROR_NULL:",
          "2445:    break;",
          "2446:   case PCRE_ERROR_BADOPTION:",
          "2448:    break;",
          "2449:   case PCRE_ERROR_BADMAGIC:",
          "2451:      \"magic number bad (compiled re corrupt?)\");",
          "2452:    break;",
          "2453:   case PCRE_ERROR_UNKNOWN_NODE:",
          "2455:      \"something kooky in the compiled re\");",
          "2456:    break;",
          "2457:   case PCRE_ERROR_NOMEMORY:",
          "2459:    break;",
          "2460:   default:",
          "2462:    break;",
          "2463:   }",
          "2465:  }",
          "2469:   if (pcre_get_substring(input, subStr, rc, OIDC_UTIL_REGEXP_MATCH_NR,",
          "2470:     &(psubStrMatchStr)) <= 0) {",
          "2472:      rc);",
          "2483:  if (psubStrMatchStr)",
          "2484:   pcre_free_substring(psubStrMatchStr);",
          "2486:   pcre_free(preg);",
          "",
          "[Added Lines]",
          "2410: apr_byte_t oidc_util_regexp_first_match(apr_pool_t *pool, const char *input, const char *regexp,",
          "2411:   char **output, char **error_str) {",
          "2413:  int rc = 0;",
          "2415:  oidc_pcre *preg = oidc_pcre_compile(pool, regexp, error_str);",
          "2418:     apr_psprintf(pool, \"pattern [%s] is not a valid regular expression: %s\", regexp, *error_str);",
          "2422:  if ((rc = oidc_pcre_exec(pool, preg, input, (int) strlen(input), error_str)) < 0)",
          "2427:   if (oidc_pcre_get_substring(pool, preg, input, rc, output, error_str) <= 0) {",
          "2437:   oidc_pcre_free(preg);",
          "",
          "---------------"
        ],
        "test/test.c||test/test.c": [
          "File: test/test.c -> test/test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1504:  s = \"{\\\"upn\\\":\\\"nneul@umsystem.edu\\\"}\";",
          "1505:  rc = oidc_util_decode_json_object(r, s, &json);",
          "1506:  TST_ASSERT(\"test remote user (1) valid JSON\", rc == TRUE);",
          "1507:  rc = oidc_get_remote_user(r, \"upn\", \"^(.*)@umsystem\\\\.edu\", \"$1\", json, &remote_user);",
          "1508:  TST_ASSERT(\"test remote user (1) function result\", rc == TRUE);",
          "1509:  TST_ASSERT_STR(\"remote_user (1) string\", remote_user, \"nneul\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1507:  rc = oidc_get_remote_user(r, \"upn\", \"^(.*)@umsystem\\\\.edu\", NULL, json, &remote_user);",
          "1508:  TST_ASSERT_STR(\"remote_user (0) string\", remote_user, \"nneul\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7934313fe0e76fdc430999b5d42d19b8e14b37ee",
      "candidate_info": {
        "commit_hash": "7934313fe0e76fdc430999b5d42d19b8e14b37ee",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/7934313fe0e76fdc430999b5d42d19b8e14b37ee",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/mod_auth_openidc.c"
        ],
        "message": "delete state cookie when it cannot be decoded/decrypted\n\nbump to 2.4.4rc2\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.4rc1],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.4rc2],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "784:         number_of_valid_state_cookies++;",
          "785:        }",
          "786:        oidc_proto_state_destroy(proto_state);",
          "787:       }",
          "788:      }",
          "789:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "787:       } else {",
          "788:        oidc_warn(r,",
          "789:          \"state cookie could not be retrieved/decoded, deleting: %s\",",
          "790:          cookieName);",
          "791:        oidc_util_set_cookie(r, cookieName, \"\", 0,",
          "792:          NULL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5647c88e29ae7bb6dfca82330395f844b739bdad",
      "candidate_info": {
        "commit_hash": "5647c88e29ae7bb6dfca82330395f844b739bdad",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/5647c88e29ae7bb6dfca82330395f844b739bdad",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "configure.ac"
        ],
        "message": "document reverse ordering for response creation in session info hook\n\n- reverse order of creating HTML response and adding (client) session\ncookie; thanks @deisser\n- bump to 2.4.4rc5\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.4rc4],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.4rc5],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "24d4c27f5c97a1fcbe0a934818f47ae8ff620fde",
      "candidate_info": {
        "commit_hash": "24d4c27f5c97a1fcbe0a934818f47ae8ff620fde",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/24d4c27f5c97a1fcbe0a934818f47ae8ff620fde",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/authz.c"
        ],
        "message": "correct apr_memcache.h and libjq configure.ac check\n\ncorrect authz info 2.x printout about claims\nbump to 2.4.9.5rc4\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/authz.c||src/authz.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.5rc3],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.5rc4],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62: # older versions of libapr may not have memcache support",
          "63: old_CPPFLAGS=$CPPFLAGS",
          "65: AC_CHECK_HEADER([apr_memcache.h], [HAVE_MEMCACHE=1], [HAVE_MEMCACHE=0])",
          "67: CPPFLAGS=$old_CPPFLAGS",
          "69: # We need Jansson for JSON parsing.",
          "",
          "[Removed Lines]",
          "64: CPPFLAGS=\"${APACHE_CPPFLAGS} ${APACHE_INCLUDES} $CPPFLAGS\"",
          "66: AM_CONDITIONAL(HAVE_MEMCACHE, HAVE_MEMCACHE=1)",
          "",
          "[Added Lines]",
          "64: CPPFLAGS=\"${APACHE_CPPFLAGS} ${APACHE_CFLAGS} $CPPFLAGS\"",
          "66: AM_CONDITIONAL(HAVE_MEMCACHE,[test x\"$HAVE_MEMCACHE\" = \"x1\"])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:     JQ_LIBS=\"-L$with_jq/lib -ljq\"",
          "111:  CPPFLAGS=\"$JQ_CFLAGS $CPPFLAGS\"",
          "114:  LDFLAGS=\"$JQ_LIBS $LDFLAGS\"",
          "115:  AC_CHECK_LIB([jq], [jq_init], [HAVE_LIBJQ=1], [HAVE_LIBJQ=0])",
          "",
          "[Removed Lines]",
          "112:  AC_CHECK_HEADER([jq.h], , [HAVE_LIBJQ=0])",
          "",
          "[Added Lines]",
          "112:  AC_CHECK_HEADER([jq.h], [HAVE_LIBJQ=1], [HAVE_LIBJQ=0])",
          "",
          "---------------"
        ],
        "src/authz.c||src/authz.c": [
          "File: src/authz.c -> src/authz.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "398:  }",
          "402:  ap_note_auth_failure(r);",
          "404:  return HTTP_UNAUTHORIZED;",
          "",
          "[Removed Lines]",
          "401:  oidc_info(r, \"authorization denied for require claims: '%s'\", reqs);",
          "",
          "[Added Lines]",
          "401:  oidc_info(r, \"authorization denied for require claims (0/%d): '%s'\", nelts, nelts > 0 ? reqs[0].requirement : \"(none)\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}