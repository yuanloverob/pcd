{
  "cve_id": "CVE-2020-13397",
  "cve_desc": "An issue was discovered in FreeRDP before 2.1.1. An out-of-bounds (OOB) read vulnerability has been detected in security_fips_decrypt in libfreerdp/core/security.c due to an uninitialized value.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "d6cd14059b257318f176c0ba3ee0a348826a9ef8",
  "patch_info": {
    "commit_hash": "d6cd14059b257318f176c0ba3ee0a348826a9ef8",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/d6cd14059b257318f176c0ba3ee0a348826a9ef8",
    "files": [
      "libfreerdp/core/security.c"
    ],
    "message": "Fixed GHSL-2020-101 missing NULL check\n\n(cherry picked from commit b207dbba35c505bbc3ad5aadc10b34980c6b7e8e)",
    "before_after_code_files": [
      "libfreerdp/core/security.c||libfreerdp/core/security.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/core/security.c||libfreerdp/core/security.c": [
      "File: libfreerdp/core/security.c -> libfreerdp/core/security.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "816: {",
      "817:  size_t olen;",
      "819:  if (!winpr_Cipher_Update(rdp->fips_decrypt, data, length, data, &olen))",
      "820:   return FALSE;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "819:  if (!rdp || !rdp->fips_decrypt)",
      "820:   return FALSE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "79cea7b5b67520bfac784c766cb70b953766b04a",
      "candidate_info": {
        "commit_hash": "79cea7b5b67520bfac784c766cb70b953766b04a",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/79cea7b5b67520bfac784c766cb70b953766b04a",
        "files": [
          "channels/printer/client/cups/printer_cups.c"
        ],
        "message": "Fixed #6157: Reset cups instance on disconnect.\n\n(cherry picked from commit 13906f3ec629af4b2b2aeb5b92845f99b7bf7747)",
        "before_after_code_files": [
          "channels/printer/client/cups/printer_cups.c||channels/printer/client/cups/printer_cups.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/printer/client/cups/printer_cups.c||channels/printer/client/cups/printer_cups.c": [
          "File: channels/printer/client/cups/printer_cups.c -> channels/printer/client/cups/printer_cups.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "364: }",
          "369: static void printer_cups_release_ref_driver(rdpPrinterDriver* driver)",
          "370: {",
          "371:  rdpCupsPrinterDriver* cups_driver = (rdpCupsPrinterDriver*)driver;",
          "372:  if (cups_driver->references <= 1)",
          "373:  {",
          "374:   free(cups_driver);",
          "375:   cups_driver = NULL;",
          "376:  }",
          "",
          "[Removed Lines]",
          "367: static rdpCupsPrinterDriver* cups_driver = NULL;",
          "",
          "[Added Lines]",
          "367: static rdpCupsPrinterDriver* uniq_cups_driver = NULL;",
          "374:   if (uniq_cups_driver == cups_driver)",
          "375:    uniq_cups_driver = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "384: FREERDP_API rdpPrinterDriver* freerdp_printer_client_subsystem_entry(void)",
          "385: #endif",
          "386: {",
          "388:  {",
          "392:    return NULL;",
          "403:  }",
          "406: }",
          "",
          "[Removed Lines]",
          "387:  if (!cups_driver)",
          "389:   cups_driver = (rdpCupsPrinterDriver*)calloc(1, sizeof(rdpCupsPrinterDriver));",
          "391:   if (!cups_driver)",
          "394:   cups_driver->driver.EnumPrinters = printer_cups_enum_printers;",
          "395:   cups_driver->driver.ReleaseEnumPrinters = printer_cups_release_enum_printers;",
          "396:   cups_driver->driver.GetPrinter = printer_cups_get_printer;",
          "398:   cups_driver->driver.AddRef = printer_cups_add_ref_driver;",
          "399:   cups_driver->driver.ReleaseRef = printer_cups_release_ref_driver;",
          "401:   cups_driver->id_sequence = 1;",
          "402:   cups_driver->driver.AddRef(&cups_driver->driver);",
          "405:  return &cups_driver->driver;",
          "",
          "[Added Lines]",
          "389:  if (!uniq_cups_driver)",
          "391:   uniq_cups_driver = (rdpCupsPrinterDriver*)calloc(1, sizeof(rdpCupsPrinterDriver));",
          "393:   if (!uniq_cups_driver)",
          "396:   uniq_cups_driver->driver.EnumPrinters = printer_cups_enum_printers;",
          "397:   uniq_cups_driver->driver.ReleaseEnumPrinters = printer_cups_release_enum_printers;",
          "398:   uniq_cups_driver->driver.GetPrinter = printer_cups_get_printer;",
          "400:   uniq_cups_driver->driver.AddRef = printer_cups_add_ref_driver;",
          "401:   uniq_cups_driver->driver.ReleaseRef = printer_cups_release_ref_driver;",
          "403:   uniq_cups_driver->id_sequence = 1;",
          "404:   uniq_cups_driver->driver.AddRef(&uniq_cups_driver->driver);",
          "407:  return &uniq_cups_driver->driver;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "472eece629a0e35a3f61379a458a3bdb18ac639d",
      "candidate_info": {
        "commit_hash": "472eece629a0e35a3f61379a458a3bdb18ac639d",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/472eece629a0e35a3f61379a458a3bdb18ac639d",
        "files": [
          "client/Sample/tf_freerdp.c"
        ],
        "message": "Fixed sample client resource cleanup\n\n(cherry picked from commit e716f823115463fc66d94dd6c044ba7c47c43fe1)",
        "before_after_code_files": [
          "client/Sample/tf_freerdp.c||client/Sample/tf_freerdp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "client/Sample/tf_freerdp.c||client/Sample/tf_freerdp.c": [
          "File: client/Sample/tf_freerdp.c -> client/Sample/tf_freerdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "342:      freerdp_client_settings_command_line_status_print(context->settings, status, argc, argv);",
          "344:  if (status)",
          "347:  if (freerdp_client_start(context) != 0)",
          "348:   goto fail;",
          "",
          "[Removed Lines]",
          "345:   return 0;",
          "",
          "[Added Lines]",
          "345:  {",
          "346:   rc = 0;",
          "347:   goto fail;",
          "348:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e87805869fdea325b50cd9119d458161ed9520e",
      "candidate_info": {
        "commit_hash": "6e87805869fdea325b50cd9119d458161ed9520e",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/6e87805869fdea325b50cd9119d458161ed9520e",
        "files": [
          "libfreerdp/codec/progressive.c"
        ],
        "message": "codec: fix typo in progressive codec log\n\n(cherry picked from commit 8d72051ab157d89af3f919a441170ca57bf67e84)",
        "before_after_code_files": [
          "libfreerdp/codec/progressive.c||libfreerdp/codec/progressive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/codec/progressive.c||libfreerdp/codec/progressive.c": [
          "File: libfreerdp/codec/progressive.c -> libfreerdp/codec/progressive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1995:  len -= region->tileDataSize;",
          "1996:  if (len > 0)",
          "1997:   WLog_Print(progressive->log, WLOG_DEBUG,",
          "1999:  return 0;",
          "2000: }",
          "",
          "[Removed Lines]",
          "1998:              \"Unused byes detected, %\" PRIuz \" bytes not processed\", len);",
          "",
          "[Added Lines]",
          "1998:              \"Unused bytes detected, %\" PRIuz \" bytes not processed\", len);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f88705c10c3dc2062a4245127aa8fb332e9e9e66",
      "candidate_info": {
        "commit_hash": "f88705c10c3dc2062a4245127aa8fb332e9e9e66",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/f88705c10c3dc2062a4245127aa8fb332e9e9e66",
        "files": [
          "channels/drdynvc/client/drdynvc_main.c"
        ],
        "message": "Extend lifetime of streampool in drdynvc\n\nThe stream pool can not be released until all streams have been\nreturned. This might happen as late as channel termination, so\nchange the lifetime scope accordingly.\n\n(cherry picked from commit 5bd4cfcdc013cdd0c0d7c9b6eec878dd8a297575)",
        "before_after_code_files": [
          "channels/drdynvc/client/drdynvc_main.c||channels/drdynvc/client/drdynvc_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/drdynvc/client/drdynvc_main.c||channels/drdynvc/client/drdynvc_main.c": [
          "File: channels/drdynvc/client/drdynvc_main.c -> channels/drdynvc/client/drdynvc_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1407:   Stream_Release(s);",
          "1408: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1410: static UINT drdynvc_virtual_channel_event_initialized(drdynvcPlugin* drdynvc, LPVOID pData,",
          "1411:                                                       UINT32 dataLength)",
          "1412: {",
          "1413:  UINT error = CHANNEL_RC_OK;",
          "1414:  WINPR_UNUSED(pData);",
          "1415:  WINPR_UNUSED(dataLength);",
          "1417:  if (!drdynvc)",
          "1418:   goto error;",
          "1420:  drdynvc->queue = MessageQueue_New(NULL);",
          "1422:  if (!drdynvc->queue)",
          "1423:  {",
          "1424:   error = CHANNEL_RC_NO_MEMORY;",
          "1425:   WLog_Print(drdynvc->log, WLOG_ERROR, \"MessageQueue_New failed!\");",
          "1426:   goto error;",
          "1427:  }",
          "1429:  drdynvc->queue->object.fnObjectFree = drdynvc_queue_object_free;",
          "1430:  drdynvc->channel_mgr = dvcman_new(drdynvc);",
          "1432:  if (!drdynvc->channel_mgr)",
          "1433:  {",
          "1434:   error = CHANNEL_RC_NO_MEMORY;",
          "1435:   WLog_Print(drdynvc->log, WLOG_ERROR, \"dvcman_new failed!\");",
          "1436:   goto error;",
          "1437:  }",
          "1439:  return CHANNEL_RC_OK;",
          "1440: error:",
          "1441:  return ERROR_INTERNAL_ERROR;",
          "1442: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1438:   return status;",
          "1439:  }",
          "1460:  settings = (rdpSettings*)drdynvc->channelEntryPoints.pExtendedData;",
          "1462:  for (index = 0; index < settings->DynamicChannelCount; index++)",
          "",
          "[Removed Lines]",
          "1441:  drdynvc->queue = MessageQueue_New(NULL);",
          "1443:  if (!drdynvc->queue)",
          "1444:  {",
          "1445:   error = CHANNEL_RC_NO_MEMORY;",
          "1446:   WLog_Print(drdynvc->log, WLOG_ERROR, \"MessageQueue_New failed!\");",
          "1447:   goto error;",
          "1448:  }",
          "1450:  drdynvc->queue->object.fnObjectFree = drdynvc_queue_object_free;",
          "1451:  drdynvc->channel_mgr = dvcman_new(drdynvc);",
          "1453:  if (!drdynvc->channel_mgr)",
          "1454:  {",
          "1455:   error = CHANNEL_RC_NO_MEMORY;",
          "1456:   WLog_Print(drdynvc->log, WLOG_ERROR, \"dvcman_new failed!\");",
          "1457:   goto error;",
          "1458:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1519:   return status;",
          "1520:  }",
          "1523:  CloseHandle(drdynvc->thread);",
          "1525:  drdynvc->thread = NULL;",
          "1526:  status = drdynvc->channelEntryPoints.pVirtualChannelCloseEx(drdynvc->InitHandle,",
          "1527:                                                              drdynvc->OpenHandle);",
          "",
          "[Removed Lines]",
          "1522:  MessageQueue_Free(drdynvc->queue);",
          "1524:  drdynvc->queue = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1540:   drdynvc->data_in = NULL;",
          "1541:  }",
          "1549:  return status;",
          "1550: }",
          "",
          "[Removed Lines]",
          "1543:  if (drdynvc->channel_mgr)",
          "1544:  {",
          "1545:   dvcman_free(drdynvc, drdynvc->channel_mgr);",
          "1546:   drdynvc->channel_mgr = NULL;",
          "1547:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1559:  if (!drdynvc)",
          "1560:   return CHANNEL_RC_BAD_CHANNEL_HANDLE;",
          "1562:  drdynvc->InitHandle = 0;",
          "1563:  free(drdynvc->context);",
          "1564:  free(drdynvc);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1570:  if (drdynvc->channel_mgr)",
          "1571:  {",
          "1572:   dvcman_free(drdynvc, drdynvc->channel_mgr);",
          "1573:   drdynvc->channel_mgr = NULL;",
          "1574:  }",
          "1575:  MessageQueue_Free(drdynvc->queue);",
          "1576:  drdynvc->queue = NULL;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1646:  switch (event)",
          "1647:  {",
          "1648:   case CHANNEL_EVENT_CONNECTED:",
          "1649:    if ((error = drdynvc_virtual_channel_event_connected(drdynvc, pData, dataLength)))",
          "1650:     WLog_Print(drdynvc->log, WLOG_ERROR,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1663:   case CHANNEL_EVENT_INITIALIZED:",
          "1664:    error = drdynvc_virtual_channel_event_initialized(drdynvc, pData, dataLength);",
          "1665:    break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff31ac6da747edd74513fccc4cba994362cf85b7",
      "candidate_info": {
        "commit_hash": "ff31ac6da747edd74513fccc4cba994362cf85b7",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/ff31ac6da747edd74513fccc4cba994362cf85b7",
        "files": [
          "channels/rdpei/rdpei_common.c"
        ],
        "message": "Fixed #6195: Wrong length read/write in rdpei\n\n(cherry picked from commit a18a732d4b87c85bcd364626b9ab2b8f95f9e955)",
        "before_after_code_files": [
          "channels/rdpei/rdpei_common.c||channels/rdpei/rdpei_common.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/rdpei/rdpei_common.c||channels/rdpei/rdpei_common.c": [
          "File: channels/rdpei/rdpei_common.c -> channels/rdpei/rdpei_common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "199: {",
          "200:  BYTE byte;",
          "203:  {",
          "204:   Stream_Write_UINT8(s, value);",
          "205:  }",
          "207:  {",
          "208:   byte = (value >> 8) & 0x3F;",
          "209:   Stream_Write_UINT8(s, byte | 0x40);",
          "210:   byte = (value & 0xFF);",
          "211:   Stream_Write_UINT8(s, byte);",
          "212:  }",
          "214:  {",
          "215:   byte = (value >> 16) & 0x3F;",
          "216:   Stream_Write_UINT8(s, byte | 0x80);",
          "",
          "[Removed Lines]",
          "202:  if (value <= 0x3F)",
          "206:  else if (value <= 0x3FFF)",
          "213:  else if (value <= 0x3FFFFF)",
          "",
          "[Added Lines]",
          "202:  if (value <= 0x3FUL)",
          "206:  else if (value <= 0x3FFFUL)",
          "213:  else if (value <= 0x3FFFFFUL)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "219:   byte = (value & 0xFF);",
          "220:   Stream_Write_UINT8(s, byte);",
          "221:  }",
          "223:  {",
          "224:   byte = (value >> 24) & 0x3F;",
          "225:   Stream_Write_UINT8(s, byte | 0xC0);",
          "",
          "[Removed Lines]",
          "222:  else if (value <= 0x3FFFFF)",
          "",
          "[Added Lines]",
          "222:  else if (value <= 0x3FFFFFFFUL)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "306:   value *= -1;",
          "307:  }",
          "310:  {",
          "311:   byte = value & 0x1F;",
          "",
          "[Removed Lines]",
          "309:  if (value <= 0x1F)",
          "",
          "[Added Lines]",
          "309:  if (value <= 0x1FUL)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "316:   Stream_Write_UINT8(s, byte);",
          "317:  }",
          "319:  {",
          "320:   byte = (value >> 8) & 0x1F;",
          "",
          "[Removed Lines]",
          "318:  else if (value <= 0x1FFF)",
          "",
          "[Added Lines]",
          "318:  else if (value <= 0x1FFFUL)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "326:   byte = (value & 0xFF);",
          "327:   Stream_Write_UINT8(s, byte);",
          "328:  }",
          "330:  {",
          "331:   byte = (value >> 16) & 0x1F;",
          "",
          "[Removed Lines]",
          "329:  else if (value <= 0x1FFFFF)",
          "",
          "[Added Lines]",
          "329:  else if (value <= 0x1FFFFFUL)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "339:   byte = (value & 0xFF);",
          "340:   Stream_Write_UINT8(s, byte);",
          "341:  }",
          "343:  {",
          "344:   byte = (value >> 24) & 0x1F;",
          "",
          "[Removed Lines]",
          "342:  else if (value <= 0x1FFFFF)",
          "",
          "[Added Lines]",
          "342:  else if (value <= 0x1FFFFFFFUL)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "478: {",
          "479:  BYTE byte;",
          "482:  {",
          "483:   byte = value & 0x1F;",
          "484:   Stream_Write_UINT8(s, byte);",
          "485:  }",
          "487:  {",
          "488:   byte = (value >> 8) & 0x1F;",
          "489:   byte |= (1 << 5);",
          "",
          "[Removed Lines]",
          "481:  if (value <= 0x1F)",
          "486:  else if (value <= 0x1FFF)",
          "",
          "[Added Lines]",
          "481:  if (value <= 0x1FULL)",
          "486:  else if (value <= 0x1FFFULL)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "491:   byte = (value & 0xFF);",
          "492:   Stream_Write_UINT8(s, byte);",
          "493:  }",
          "495:  {",
          "496:   byte = (value >> 16) & 0x1F;",
          "497:   byte |= (2 << 5);",
          "",
          "[Removed Lines]",
          "494:  else if (value <= 0x1FFFFF)",
          "",
          "[Added Lines]",
          "494:  else if (value <= 0x1FFFFFULL)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "501:   byte = (value & 0xFF);",
          "502:   Stream_Write_UINT8(s, byte);",
          "503:  }",
          "505:  {",
          "506:   byte = (value >> 24) & 0x1F;",
          "507:   byte |= (3 << 5);",
          "",
          "[Removed Lines]",
          "504:  else if (value <= 0x1FFFFF)",
          "",
          "[Added Lines]",
          "504:  else if (value <= 0x1FFFFFULL)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "513:   byte = (value & 0xFF);",
          "514:   Stream_Write_UINT8(s, byte);",
          "515:  }",
          "517:  {",
          "518:   byte = (value >> 32) & 0x1F;",
          "519:   byte |= (4 << 5);",
          "",
          "[Removed Lines]",
          "516:  else if (value <= 0x1FFFFFFF)",
          "",
          "[Added Lines]",
          "516:  else if (value <= 0x1FFFFFFFULL)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "527:   byte = (value & 0xFF);",
          "528:   Stream_Write_UINT8(s, byte);",
          "529:  }",
          "531:  {",
          "532:   byte = (value >> 40) & 0x1F;",
          "533:   byte |= (5 << 5);",
          "",
          "[Removed Lines]",
          "530:  else if (value <= 0x1FFFFFFFFF)",
          "",
          "[Added Lines]",
          "530:  else if (value <= 0x1FFFFFFFFFULL)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "543:   byte = (value & 0xFF);",
          "544:   Stream_Write_UINT8(s, byte);",
          "545:  }",
          "547:  {",
          "548:   byte = (value >> 48) & 0x1F;",
          "549:   byte |= (6 << 5);",
          "",
          "[Removed Lines]",
          "546:  else if (value <= 0x1FFFFFFFFFFF)",
          "",
          "[Added Lines]",
          "546:  else if (value <= 0x1FFFFFFFFFFFULL)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "561:   byte = (value & 0xFF);",
          "562:   Stream_Write_UINT8(s, byte);",
          "563:  }",
          "565:  {",
          "566:   byte = (value >> 56) & 0x1F;",
          "567:   byte |= (7 << 5);",
          "",
          "[Removed Lines]",
          "564:  else if (value <= 0x1FFFFFFFFFFFFF)",
          "",
          "[Added Lines]",
          "564:  else if (value <= 0x1FFFFFFFFFFFFFFFULL)",
          "",
          "---------------"
        ]
      }
    }
  ]
}