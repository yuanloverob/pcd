{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "222d15f170f822462b92d3c9e5db4097b14d6d96",
      "candidate_info": {
        "commit_hash": "222d15f170f822462b92d3c9e5db4097b14d6d96",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/222d15f170f822462b92d3c9e5db4097b14d6d96",
        "files": [
          "cstool/cstool_x86.c"
        ],
        "message": "cleanup",
        "before_after_code_files": [
          "cstool/cstool_x86.c||cstool/cstool_x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool_x86.c||cstool/cstool_x86.c": [
          "File: cstool/cstool_x86.c -> cstool/cstool_x86.c"
        ]
      }
    },
    {
      "candidate_hash": "b526229ee44bdf192c88e7c4bced31f913a86697",
      "candidate_info": {
        "commit_hash": "b526229ee44bdf192c88e7c4bced31f913a86697",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/b526229ee44bdf192c88e7c4bced31f913a86697",
        "files": [
          "bindings/powershell/Capstone/Capstone.psm1"
        ],
        "message": "Fix: cs_close -> [ref]Ptr not Ptr",
        "before_after_code_files": [
          "bindings/powershell/Capstone/Capstone.psm1||bindings/powershell/Capstone/Capstone.psm1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/powershell/Capstone/Capstone.psm1||bindings/powershell/Capstone/Capstone.psm1": [
          "File: bindings/powershell/Capstone/Capstone.psm1 -> bindings/powershell/Capstone/Capstone.psm1",
          "--- Hunk 1 ---",
          "[Context before]",
          "261:   [DllImport(\"$DllPath\")]",
          "262:   public static extern cs_err cs_close(",
          "265:   [DllImport(\"$DllPath\")]",
          "266:   public static extern cs_err cs_option(",
          "",
          "[Removed Lines]",
          "263:    IntPtr handle);",
          "",
          "[Added Lines]",
          "263:    ref IntPtr handle);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "340:  if ($CallResult -ne \"CS_ERR_OK\") {",
          "341:   echo \"`n[!] cs_option error: $CallResult\"",
          "342:   echo \"[>] Quitting..`n\"",
          "344:   Return",
          "345:  }",
          "",
          "[Removed Lines]",
          "343:   $CallResult = [Capstone]::cs_close($DisAsmHandle)",
          "",
          "[Added Lines]",
          "343:   $CallResult = [Capstone]::cs_close([ref]$DisAsmHandle)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "359:  if ($CallResult -ne \"CS_ERR_OK\") {",
          "360:   echo \"`n[!] cs_option error: $CallResult\"",
          "361:   echo \"[>] Quitting..`n\"",
          "363:   Return",
          "364:  }",
          "",
          "[Removed Lines]",
          "362:   $CallResult = [Capstone]::cs_close($DisAsmHandle)",
          "",
          "[Added Lines]",
          "362:   $CallResult = [Capstone]::cs_close([ref]$DisAsmHandle)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "428:    $BuffOffset = $BuffOffset + $cs_insn_size",
          "429:   }",
          "430:  } else {",
          "434:   Return",
          "435:  }",
          "",
          "[Removed Lines]",
          "431:   echo \"[!] Disassembly Failed\"",
          "432:   echo \"[>] Quitting..\"",
          "433:   $CallResult = [Capstone]::cs_close($DisAsmHandle)",
          "",
          "[Added Lines]",
          "431:   echo \"`n[!] Disassembly Failed\"",
          "432:   echo \"[>] Quitting..`n\"",
          "433:   $CallResult = [Capstone]::cs_close([ref]$DisAsmHandle)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b4e870480be645f2e1cbb736ea1823545a76924",
      "candidate_info": {
        "commit_hash": "7b4e870480be645f2e1cbb736ea1823545a76924",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/7b4e870480be645f2e1cbb736ea1823545a76924",
        "files": [
          "arch/X86/X86Disassembler.c"
        ],
        "message": "x86: LDS is invalid in x64. see #904",
        "before_after_code_files": [
          "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c": [
          "File: arch/X86/X86Disassembler.c -> arch/X86/X86Disassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "836:   result = (!translateInstruction(instr, &insn)) ?  true : false;",
          "837:   if (result) {",
          "844:    instr->imm_size = insn.immSize;",
          "845:    if (handle->detail) {",
          "",
          "[Removed Lines]",
          "839:    if (handle->mode & CS_MODE_64 &&",
          "840:     (instr->Opcode == X86_LES16rm || instr->Opcode == X86_LES32rm))",
          "842:     return false;",
          "",
          "[Added Lines]",
          "839:    if (handle->mode & CS_MODE_64) {",
          "840:     if (instr->Opcode == X86_LES16rm || instr->Opcode == X86_LES32rm)",
          "842:      return false;",
          "843:     if (instr->Opcode == X86_LDS16rm || instr->Opcode == X86_LDS32rm)",
          "845:      return false;",
          "846:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cdf523ce1248588bdd27bfd3bbef4639dd7ff20d",
      "candidate_info": {
        "commit_hash": "cdf523ce1248588bdd27bfd3bbef4639dd7ff20d",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/cdf523ce1248588bdd27bfd3bbef4639dd7ff20d",
        "files": [
          "bindings/python/setup.py"
        ],
        "message": "Update setup.py (#1073)\n\nCheck to make sure static library file exists before trying to copy it. Current build options include option to not build a static lib.",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "143:     shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "145:     os.chdir(cwd)",
          "",
          "[Removed Lines]",
          "144:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "",
          "[Added Lines]",
          "144:     # only copy static library if it exists (it's a build option)",
          "145:     if STATIC_LIBRARY_FILE and os.path.exists(STATIC_LIBRARY_FILE):",
          "146:         shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea030cbe22d04a545a2c6ab531ea9e120c6ce1ae",
      "candidate_info": {
        "commit_hash": "ea030cbe22d04a545a2c6ab531ea9e120c6ce1ae",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ea030cbe22d04a545a2c6ab531ea9e120c6ce1ae",
        "files": [
          "include/capstone/m68k.h"
        ],
        "message": "fix spelling error in comments",
        "before_after_code_files": [
          "include/capstone/m68k.h||include/capstone/m68k.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/m68k.h||include/capstone/m68k.h": [
          "File: include/capstone/m68k.h -> include/capstone/m68k.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:  M68K_AM_ABSOLUTE_DATA_SHORT, // Absolute Data Addressing  - Short",
          "106:  M68K_AM_ABSOLUTE_DATA_LONG,  // Absolute Data Addressing  - Long",
          "108: } m68k_adress_mode;",
          "",
          "[Removed Lines]",
          "107:  M68K_AM_IMMIDIATE,    // Immidate value",
          "",
          "[Added Lines]",
          "107:  M68K_AM_IMMIDIATE,    // Immediate value",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:  M68K_OP_IMM,         // = CS_OP_IMM (Immediate operand).",
          "115:  M68K_OP_MEM,         // = CS_OP_MEM (Memory operand).",
          "116:  M68K_OP_FP,          // = CS_OP_FP  (Floating-Point operand)",
          "118:  M68K_OP_REG_PAIR,    // Register pair in the same op (upper 4 bits for first reg, lower for second)",
          "119: } m68k_op_type;",
          "",
          "[Removed Lines]",
          "117:  M68K_OP_REG_BITS,    // Registes bits movem",
          "",
          "[Added Lines]",
          "117:  M68K_OP_REG_BITS,    // Register bits move",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "125:  m68k_reg index_reg;     // index register (or M68K_REG_INVALID if irrelevant)",
          "126:  m68k_reg in_base_reg;   // indirect base register (or M68K_REG_INVALID if irrelevant)",
          "127:  uint32_t in_disp;      // indirect displacement",
          "129:  uint16_t disp;         // displacement value",
          "130:  uint8_t scale;         // scale for index register",
          "131:  uint8_t bitfield;       // set to true if the two values bellow should be used",
          "",
          "[Removed Lines]",
          "128:  uint32_t out_disp;      // outher displacement",
          "",
          "[Added Lines]",
          "128:  uint32_t out_disp;      // other displacement",
          "",
          "---------------"
        ]
      }
    }
  ]
}