{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6aa755070a5d89f5adeb6d53e6eea6fbf49a6bb7",
      "candidate_info": {
        "commit_hash": "6aa755070a5d89f5adeb6d53e6eea6fbf49a6bb7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6aa755070a5d89f5adeb6d53e6eea6fbf49a6bb7",
        "files": [
          "test/simple/test-eio-race.js"
        ],
        "message": "More logging in simple/test-eio-race\n\nTravis-CI is failing on this test repeatedly, but other Linux systems\nseem to be fine with it.  Alter the logging so it's more clear which\npart is timing out.",
        "before_after_code_files": [
          "test/simple/test-eio-race.js||test/simple/test-eio-race.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-eio-race.js||test/simple/test-eio-race.js": [
          "File: test/simple/test-eio-race.js -> test/simple/test-eio-race.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:     if (err) {",
          "37:       throw new Exception('first fs.stat failed');",
          "38:     } else {",
          "40:       fs.stat(__filename, function(err) {",
          "41:         if (err) {",
          "42:           throw new Exception('second fs.stat failed');",
          "43:         } else {",
          "45:           console.log('could not kill event loop, retrying...');",
          "47:           setTimeout(function() {",
          "48:             if (--count) {",
          "49:               tryToKillEventLoop();",
          "50:             } else {",
          "51:               process.exit(0);",
          "52:             }",
          "53:           }, 1);",
          "",
          "[Removed Lines]",
          "39:       console.log('first fs.stat succeeded ...');",
          "44:           console.log('second fs.stat succeeded ...');",
          "",
          "[Added Lines]",
          "49:               console.log('done trying to kill event loop');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81: tryToKillEventLoop();",
          "83: process.on('exit', function() {",
          "84:   assert.ok(pos > 10000);",
          "85: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:   console.log('done with test');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0435f9b28c8eefc6a3ccbe6f06d731dc6b3e7796",
      "candidate_info": {
        "commit_hash": "0435f9b28c8eefc6a3ccbe6f06d731dc6b3e7796",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0435f9b28c8eefc6a3ccbe6f06d731dc6b3e7796",
        "files": [
          "deps/v8/build/common.gypi"
        ],
        "message": "v8: Don't use 'echo -n' in configure script",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:           [ 'v8_target_arch!=\"x64\"', {",
          "291:             # Pass -m32 to the compiler iff it understands the flag.",
          "292:             'variables': {",
          "294:             },",
          "295:             'cflags': [ '<(m32flag)' ],",
          "296:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "293:               'm32flag': '<!((echo | $(echo ${CXX:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "293:               'm32flag': '<!((echo | $(echo ${CXX:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f98562fcd7d1cab573ca4dc1612157d6999befd4",
      "candidate_info": {
        "commit_hash": "f98562fcd7d1cab573ca4dc1612157d6999befd4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f98562fcd7d1cab573ca4dc1612157d6999befd4",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "src/node_version.h"
        ],
        "message": "2012.07.25, Version 0.8.4 (Stable)\n\n* V8: Upgrade to 3.11.10.17\n\n* npm: Upgrade to 1.1.45\n\n* net: fix Socket({ fd: 42 }) api (Ben Noordhuis)\n\n* readline: Remove event listeners on close (isaacs)\n\n* windows: correctly prep long path for fs.exists(Sync) (Bert Belder)\n\n* debugger: wake up the event loop when a debugger command is dispatched (Peter Rybin)\n\n* tls: verify server's identity (Fedor Indutny)\n\n* net: ignore socket.setTimeout(Infinity or NaN) (Fedor Indutny)",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #define NODE_MAJOR_VERSION 0",
          "26: #define NODE_MINOR_VERSION 8",
          "27: #define NODE_PATCH_VERSION 4",
          "30: #ifndef NODE_STRINGIFY",
          "31: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "28: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "28: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3a915b02e8a12ab4c4cacc79aa1b4273a7917905",
      "candidate_info": {
        "commit_hash": "3a915b02e8a12ab4c4cacc79aa1b4273a7917905",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3a915b02e8a12ab4c4cacc79aa1b4273a7917905",
        "files": [
          "deps/uv/include/uv-private/uv-win.h",
          "deps/uv/src/win/error.c",
          "deps/uv/src/win/fs.c",
          "deps/uv/test/test-fs.c"
        ],
        "message": "Upgrade uv to 1d942e2a",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h",
          "deps/uv/src/win/error.c||deps/uv/src/win/error.c",
          "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c",
          "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h": [
          "File: deps/uv/include/uv-private/uv-win.h -> deps/uv/include/uv-private/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "421: #define UV_FS_PRIVATE_FIELDS              \\",
          "422:   wchar_t* pathw;                         \\",
          "423:   int flags;                              \\",
          "425:   struct _stati64 stat;                   \\",
          "426:   void* arg0;                             \\",
          "427:   union {                                 \\",
          "",
          "[Removed Lines]",
          "424:   int last_error;                         \\",
          "",
          "[Added Lines]",
          "424:   DWORD sys_errno_;                       \\",
          "",
          "---------------"
        ],
        "deps/uv/src/win/error.c||deps/uv/src/win/error.c": [
          "File: deps/uv/src/win/error.c -> deps/uv/src/win/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:     case WSAECONNREFUSED:                   return UV_ECONNREFUSED;",
          "85:     case ERROR_NETNAME_DELETED:             return UV_ECONNRESET;",
          "86:     case WSAECONNRESET:                     return UV_ECONNRESET;",
          "87:     case WSAEFAULT:                         return UV_EFAULT;",
          "88:     case ERROR_HOST_UNREACHABLE:            return UV_EHOSTUNREACH;",
          "89:     case WSAEHOSTUNREACH:                   return UV_EHOSTUNREACH;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:     case ERROR_ALREADY_EXISTS:              return UV_EEXIST;",
          "88:     case ERROR_FILE_EXISTS:                 return UV_EEXIST;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:     case ERROR_TOO_MANY_OPEN_FILES:         return UV_EMFILE;",
          "94:     case WSAEMFILE:                         return UV_EMFILE;",
          "95:     case WSAEMSGSIZE:                       return UV_EMSGSIZE;",
          "96:     case ERROR_NETWORK_UNREACHABLE:         return UV_ENETUNREACH;",
          "97:     case WSAENETUNREACH:                    return UV_ENETUNREACH;",
          "98:     case WSAENOBUFS:                        return UV_ENOBUFS;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:     case ERROR_FILENAME_EXCED_RANGE:        return UV_ENAMETOOLONG;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107:     case ERROR_BROKEN_PIPE:                 return UV_EOF;",
          "108:     case ERROR_PIPE_BUSY:                   return UV_EBUSY;",
          "109:     case ERROR_SEM_TIMEOUT:                 return UV_ETIMEDOUT;",
          "111:     case WSAHOST_NOT_FOUND:                 return UV_ENOENT;",
          "112:     default:                                return UV_UNKNOWN;",
          "113:   }",
          "",
          "[Removed Lines]",
          "110:     case ERROR_ALREADY_EXISTS:              return UV_EEXIST;",
          "",
          "[Added Lines]",
          "113:     case WSAETIMEDOUT:                      return UV_ETIMEDOUT;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c": [
          "File: deps/uv/src/win/fs.c -> deps/uv/src/win/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: #define UV_FS_FREE_ARG1          0x0004",
          "39: #define UV_FS_FREE_PTR           0x0008",
          "40: #define UV_FS_CLEANEDUP          0x0010",
          "44: #define UTF8_TO_UTF16(s, t)                                                 \\",
          "",
          "[Removed Lines]",
          "41: #define UV_FS_LAST_ERROR_SET     0x0020",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:   uv_ref((loop));",
          "90: #define SET_UV_LAST_ERROR_FROM_REQ(req)                                     \\",
          "101: #define SET_REQ_RESULT(req, result_value)                                   \\",
          "102:   req->result = (result_value);                                             \\",
          "103:   if (req->result == -1) {                                                  \\",
          "106:   }",
          "109:   req->result = -1;                                                         \\",
          "113: #define VERIFY_UV_FILE(file, req)                                           \\",
          "114:   if (file == -1) {                                                         \\",
          "115:     req->result = -1;                                                       \\",
          "116:     req->errorno = UV_EBADF;                                                \\",
          "118:     return;                                                                 \\",
          "119:   }",
          "",
          "[Removed Lines]",
          "91:   if (req->flags & UV_FS_LAST_ERROR_SET) {                                  \\",
          "92:     uv__set_sys_error(req->loop, req->last_error);                          \\",
          "93:   } else if (req->result == -1) {                                           \\",
          "94:     uv__set_error(req->loop, (uv_err_code)req->errorno, req->last_error);   \\",
          "95:   }",
          "97: #define SET_REQ_LAST_ERROR(req, error)                                      \\",
          "98:   req->last_error = error;                                                  \\",
          "99:   req->flags |= UV_FS_LAST_ERROR_SET;",
          "104:     req->last_error = _doserrno;                                            \\",
          "105:     req->errorno = uv_translate_sys_error(req->last_error);                 \\",
          "108: #define SET_REQ_RESULT_WIN32_ERROR(req, sys_errno)                          \\",
          "110:   req->errorno = uv_translate_sys_error(sys_errno);                         \\",
          "111:   SET_REQ_LAST_ERROR(req, sys_errno);",
          "117:     req->last_error = ERROR_SUCCESS;                                        \\",
          "",
          "[Added Lines]",
          "90:   uv__set_error(req->loop, req->errorno, req->sys_errno_);",
          "95:     req->sys_errno_ = _doserrno;                                            \\",
          "96:     req->errorno = uv_translate_sys_error(req->sys_errno_);                 \\",
          "99: #define SET_REQ_WIN32_ERROR(req, sys_errno)                                 \\",
          "100:   req->result = -1;                                                         \\",
          "101:   req->sys_errno_ = (sys_errno);                                            \\",
          "102:   req->errorno = uv_translate_sys_error(req->sys_errno_);",
          "104: #define SET_REQ_UV_ERROR(req, uv_errno, sys_errno)                          \\",
          "106:   req->sys_errno_ = (sys_errno);                                            \\",
          "107:   req->errorno = (uv_errno);",
          "113:     req->sys_errno_ = ERROR_SUCCESS;                                        \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "137:   req->path = path ? strdup(path) : NULL;",
          "138:   req->pathw = (wchar_t*)pathw;",
          "139:   req->errorno = 0;",
          "141:   memset(&req->overlapped, 0, sizeof(req->overlapped));",
          "142: }",
          "",
          "[Removed Lines]",
          "140:   req->last_error = 0;",
          "",
          "[Added Lines]",
          "136:   req->sys_errno_ = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "266:                      attributes,",
          "267:                      NULL);",
          "268:   if (file == INVALID_HANDLE_VALUE) {",
          "270:     return;",
          "271:   }",
          "272:   result = _open_osfhandle((intptr_t)file, flags);",
          "",
          "[Removed Lines]",
          "269:     SET_REQ_RESULT_WIN32_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "265:     DWORD error = GetLastError();",
          "266:     if (error == ERROR_FILE_EXISTS && (flags & _O_CREAT) &&",
          "267:         !(flags & _O_EXCL)) {",
          "270:       SET_REQ_UV_ERROR(req, UV_EISDIR, error);",
          "271:     } else {",
          "272:       SET_REQ_WIN32_ERROR(req, GetLastError());",
          "273:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "300:   }",
          "302:   if (length > INT_MAX) {",
          "304:     return;",
          "305:   }",
          "",
          "[Removed Lines]",
          "303:     SET_REQ_ERROR(req, ERROR_INSUFFICIENT_BUFFER);",
          "",
          "[Added Lines]",
          "307:     SET_REQ_WIN32_ERROR(req, ERROR_INSUFFICIENT_BUFFER);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "319:   if (ReadFile(handle, buf, length, &bytes, overlapped_ptr)) {",
          "320:     SET_REQ_RESULT(req, bytes);",
          "321:   } else {",
          "323:   }",
          "324: }",
          "",
          "[Removed Lines]",
          "322:     SET_REQ_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "326:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "340:   }",
          "342:   if (length > INT_MAX) {",
          "344:     return;",
          "345:   }",
          "",
          "[Removed Lines]",
          "343:     SET_REQ_ERROR(req, ERROR_INSUFFICIENT_BUFFER);",
          "",
          "[Added Lines]",
          "347:     SET_REQ_WIN32_ERROR(req, ERROR_INSUFFICIENT_BUFFER);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "359:   if (WriteFile(handle, buf, length, &bytes, overlapped_ptr)) {",
          "360:     SET_REQ_RESULT(req, bytes);",
          "361:   } else {",
          "363:   }",
          "364: }",
          "",
          "[Removed Lines]",
          "362:     SET_REQ_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "366:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "398:   if (!(GetFileAttributesW(path) & FILE_ATTRIBUTE_DIRECTORY)) {",
          "399:     req->result = -1;",
          "400:     req->errorno = UV_ENOTDIR;",
          "402:     return;",
          "403:   }",
          "",
          "[Removed Lines]",
          "401:     req->last_error = ERROR_SUCCESS;",
          "",
          "[Added Lines]",
          "405:     req->sys_errno_ = ERROR_SUCCESS;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "416:   free(path2);",
          "418:   if(dir == INVALID_HANDLE_VALUE) {",
          "420:     return;",
          "421:   }",
          "",
          "[Removed Lines]",
          "419:     SET_REQ_RESULT_WIN32_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "423:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "461:     size = uv_utf16_to_utf8(buf, buf_char_len, NULL, 0);",
          "462:     if (!size) {",
          "464:       return;",
          "465:     }",
          "",
          "[Removed Lines]",
          "463:       SET_REQ_RESULT_WIN32_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "467:       SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "474:       free(buf);",
          "475:       free(req->ptr);",
          "476:       req->ptr = NULL;",
          "478:       return;",
          "479:     }",
          "480:     free(buf);",
          "",
          "[Removed Lines]",
          "477:       SET_REQ_RESULT_WIN32_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "481:       SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "492: static void fs__stat(uv_fs_t* req, const wchar_t* path) {",
          "493:   HANDLE handle;",
          "495:   BY_HANDLE_FILE_INFORMATION info;",
          "497:   req->ptr = NULL;",
          "",
          "[Removed Lines]",
          "494:   int result;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "504:                        FILE_FLAG_BACKUP_SEMANTICS,",
          "505:                        NULL);",
          "506:   if (handle == INVALID_HANDLE_VALUE) {",
          "508:     return;",
          "509:   }",
          "511:   if (!GetFileInformationByHandle(handle, &info)) {",
          "513:     CloseHandle(handle);",
          "514:     return;",
          "515:   }",
          "",
          "[Removed Lines]",
          "507:     SET_REQ_RESULT_WIN32_ERROR(req, GetLastError());",
          "512:     SET_REQ_RESULT_WIN32_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "510:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "515:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "566: void fs__rename(uv_fs_t* req, const wchar_t* path, const wchar_t* new_path) {",
          "567:   if (!MoveFileExW(path, new_path, MOVEFILE_REPLACE_EXISTING)) {",
          "569:     return;",
          "570:   }",
          "",
          "[Removed Lines]",
          "568:     SET_REQ_RESULT_WIN32_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "571:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "581:   result = FlushFileBuffers((HANDLE)_get_osfhandle(file)) ? 0 : -1;",
          "582:   if (result == -1) {",
          "584:   } else {",
          "585:     SET_REQ_RESULT(req, result);",
          "586:   }",
          "",
          "[Removed Lines]",
          "583:     SET_REQ_RESULT_WIN32_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "586:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "711: void fs__link(uv_fs_t* req, const wchar_t* path, const wchar_t* new_path) {",
          "712:   int result = CreateHardLinkW(new_path, path, NULL) ? 0 : -1;",
          "713:   if (result == -1) {",
          "715:   } else {",
          "716:     SET_REQ_RESULT(req, result);",
          "717:   }",
          "",
          "[Removed Lines]",
          "714:     SET_REQ_RESULT_WIN32_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "717:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "726:                                   path,",
          "727:                                   flags & UV_FS_SYMLINK_DIR ? SYMBOLIC_LINK_FLAG_DIRECTORY : 0) ? 0 : -1;",
          "728:     if (result == -1) {",
          "730:       return;",
          "731:     }",
          "732:   } else {",
          "736:     return;",
          "737:   }",
          "",
          "[Removed Lines]",
          "729:       SET_REQ_RESULT_WIN32_ERROR(req, GetLastError());",
          "733:     req->result = -1;",
          "734:     req->errorno = UV_ENOTSUP;",
          "735:     req->last_error = ERROR_SUCCESS;",
          "",
          "[Added Lines]",
          "732:       SET_REQ_WIN32_ERROR(req, GetLastError());",
          "736:     SET_REQ_UV_ERROR(req, UV_ENOSYS, ERROR_NOT_SUPPORTED);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "762:   if (INVALID_HANDLE_VALUE == symlink) {",
          "763:     result = -1;",
          "765:     goto done;",
          "766:   }",
          "",
          "[Removed Lines]",
          "764:     SET_REQ_LAST_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "765:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "782:   if (!rv) {",
          "783:     result = -1;",
          "785:     goto done;",
          "786:   }",
          "",
          "[Removed Lines]",
          "784:     SET_REQ_LAST_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "785:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "789:   if (reparse_data->ReparseTag != IO_REPARSE_TAG_SYMLINK) {",
          "790:     result = -1;",
          "793:     goto done;",
          "794:   }",
          "",
          "[Removed Lines]",
          "792:     SET_REQ_LAST_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "793:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "810:                               0);",
          "811:   if (!utf8size) {",
          "812:     result = -1;",
          "814:     goto done;",
          "815:   }",
          "",
          "[Removed Lines]",
          "813:     SET_REQ_LAST_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "814:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "825:                               utf8size);",
          "826:   if (!utf8size) {",
          "827:     result = -1;",
          "829:     goto done;",
          "830:   }",
          "",
          "[Removed Lines]",
          "828:     SET_REQ_LAST_ERROR(req, GetLastError());",
          "",
          "[Added Lines]",
          "829:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "",
          "---------------"
        ],
        "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c": [
          "File: deps/uv/test/test-fs.c -> deps/uv/test/test-fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: # define close _close",
          "46: #endif",
          "50: typedef struct {",
          "51:   const char* path;",
          "",
          "[Removed Lines]",
          "48: #define TOO_LONG_NAME_LENGTH 8192",
          "",
          "[Added Lines]",
          "48: #define TOO_LONG_NAME_LENGTH 65536",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9aa57e8bdfe71095773f8f8096aff1e8e00e265",
      "candidate_info": {
        "commit_hash": "e9aa57e8bdfe71095773f8f8096aff1e8e00e265",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e9aa57e8bdfe71095773f8f8096aff1e8e00e265",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.7.11",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 7",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "31: #define NODE_PATCH_VERSION 10",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "31: #define NODE_PATCH_VERSION 11",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    }
  ]
}