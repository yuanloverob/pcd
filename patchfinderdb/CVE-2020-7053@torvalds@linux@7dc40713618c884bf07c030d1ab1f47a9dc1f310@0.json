{
  "cve_id": "CVE-2020-7053",
  "cve_desc": "In the Linux kernel 4.14 longterm through 4.14.165 and 4.19 longterm through 4.19.96 (and 5.x before 5.2), there is a use-after-free (write) in the i915_ppgtt_close function in drivers/gpu/drm/i915/i915_gem_gtt.c, aka CID-7dc40713618c. This is related to i915_gem_context_destroy_ioctl in drivers/gpu/drm/i915/i915_gem_context.c.",
  "repo": "torvalds/linux",
  "patch_hash": "7dc40713618c884bf07c030d1ab1f47a9dc1f310",
  "patch_info": {
    "commit_hash": "7dc40713618c884bf07c030d1ab1f47a9dc1f310",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/7dc40713618c884bf07c030d1ab1f47a9dc1f310",
    "files": [
      "drivers/gpu/drm/i915/i915_drv.h",
      "drivers/gpu/drm/i915/i915_gem_context.c"
    ],
    "message": "drm/i915: Introduce a mutex for file_priv->context_idr\n\nDefine a mutex for the exclusive use of interacting with the per-file\ncontext-idr, that was previously guarded by struct_mutex. This allows us\nto reduce the coverage of struct_mutex, with a view to removing the last\nbits coordinating GEM context later. (In the short term, we avoid taking\nstruct_mutex while using the extended constructor functions, preventing\nsome nasty recursion.)\n\nv2: s/context_lock/context_idr_lock/\n\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nReviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190321140711.11190-2-chris@chris-wilson.co.uk",
    "before_after_code_files": [
      "drivers/gpu/drm/i915/i915_drv.h||drivers/gpu/drm/i915/i915_drv.h",
      "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
    ]
  },
  "patch_diff": {
    "drivers/gpu/drm/i915/i915_drv.h||drivers/gpu/drm/i915/i915_drv.h": [
      "File: drivers/gpu/drm/i915/i915_drv.h -> drivers/gpu/drm/i915/i915_drv.h"
    ],
    "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c": [
      "File: drivers/gpu/drm/i915/i915_gem_context.c -> drivers/gpu/drm/i915/i915_gem_context.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "580: static int context_idr_cleanup(int id, void *p, void *data)",
      "581: {",
      "585:  return 0;",
      "586: }",
      "",
      "[Removed Lines]",
      "582:  struct i915_gem_context *ctx = p;",
      "584:  context_close(ctx);",
      "",
      "[Added Lines]",
      "582:  context_close(p);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "603:  }",
      "606:  ret = idr_alloc(&fpriv->context_idr, ctx,",
      "607:    DEFAULT_CONTEXT_HANDLE, 0, GFP_KERNEL);",
      "608:  if (ret < 0)",
      "609:   goto err_name;",
      "613:  return 0;",
      "615: err_name:",
      "",
      "[Removed Lines]",
      "611:  ctx->user_handle = ret;",
      "",
      "[Added Lines]",
      "604:  mutex_lock(&fpriv->context_idr_lock);",
      "607:  if (ret >= 0)",
      "608:   ctx->user_handle = ret;",
      "609:  mutex_unlock(&fpriv->context_idr_lock);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "627:  int err;",
      "629:  idr_init(&file_priv->context_idr);",
      "631:  mutex_lock(&i915->drm.struct_mutex);",
      "633:  ctx = i915_gem_create_context(i915);",
      "634:  if (IS_ERR(ctx)) {",
      "635:   err = PTR_ERR(ctx);",
      "636:   goto err;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "630:  mutex_init(&file_priv->context_idr_lock);",
      "634:  mutex_unlock(&i915->drm.struct_mutex);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "643:  GEM_BUG_ON(ctx->user_handle != DEFAULT_CONTEXT_HANDLE);",
      "644:  GEM_BUG_ON(i915_gem_context_is_kernel(ctx));",
      "648:  return 0;",
      "650: err_ctx:",
      "651:  context_close(ctx);",
      "653:  mutex_unlock(&i915->drm.struct_mutex);",
      "654:  idr_destroy(&file_priv->context_idr);",
      "655:  return PTR_ERR(ctx);",
      "656: }",
      "",
      "[Removed Lines]",
      "646:  mutex_unlock(&i915->drm.struct_mutex);",
      "652: err:",
      "",
      "[Added Lines]",
      "650:  mutex_lock(&i915->drm.struct_mutex);",
      "653: err:",
      "654:  mutex_destroy(&file_priv->context_idr_lock);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "664:  idr_for_each(&file_priv->context_idr, context_idr_cleanup, NULL);",
      "665:  idr_destroy(&file_priv->context_idr);",
      "666: }",
      "668: static struct i915_request *",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "667:  mutex_destroy(&file_priv->context_idr_lock);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "845:   return ret;",
      "847:  ctx = i915_gem_create_context(i915);",
      "853:  ret = gem_context_register(ctx, file_priv);",
      "854:  if (ret)",
      "855:   goto err_ctx;",
      "859:  args->ctx_id = ctx->user_handle;",
      "860:  DRM_DEBUG(\"HW context %d created\\n\", args->ctx_id);",
      "862:  return 0;",
      "864: err_ctx:",
      "865:  context_close(ctx);",
      "867:  mutex_unlock(&dev->struct_mutex);",
      "868:  return ret;",
      "869: }",
      "",
      "[Removed Lines]",
      "848:  if (IS_ERR(ctx)) {",
      "849:   ret = PTR_ERR(ctx);",
      "850:   goto err_unlock;",
      "851:  }",
      "857:  mutex_unlock(&dev->struct_mutex);",
      "866: err_unlock:",
      "",
      "[Added Lines]",
      "850:  mutex_unlock(&dev->struct_mutex);",
      "851:  if (IS_ERR(ctx))",
      "852:   return PTR_ERR(ctx);",
      "864:  mutex_lock(&dev->struct_mutex);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "874:  struct drm_i915_gem_context_destroy *args = data;",
      "875:  struct drm_i915_file_private *file_priv = file->driver_priv;",
      "876:  struct i915_gem_context *ctx;",
      "879:  if (args->pad != 0)",
      "880:   return -EINVAL;",
      "",
      "[Removed Lines]",
      "877:  int ret;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "882:  if (args->ctx_id == DEFAULT_CONTEXT_HANDLE)",
      "883:   return -ENOENT;",
      "886:  if (!ctx)",
      "887:   return -ENOENT;",
      "894:  context_close(ctx);",
      "896:  mutex_unlock(&dev->struct_mutex);",
      "900:  return 0;",
      "901: }",
      "",
      "[Removed Lines]",
      "885:  ctx = i915_gem_context_lookup(file_priv, args->ctx_id);",
      "889:  ret = mutex_lock_interruptible(&dev->struct_mutex);",
      "890:  if (ret)",
      "891:   goto out;",
      "893:  idr_remove(&file_priv->context_idr, ctx->user_handle);",
      "898: out:",
      "899:  i915_gem_context_put(ctx);",
      "",
      "[Added Lines]",
      "883:  if (mutex_lock_interruptible(&file_priv->context_idr_lock))",
      "884:   return -EINTR;",
      "886:  ctx = idr_remove(&file_priv->context_idr, args->ctx_id);",
      "887:  mutex_unlock(&file_priv->context_idr_lock);",
      "891:  mutex_lock(&dev->struct_mutex);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3e05531243d032bbff157999c99a30a969966927",
      "candidate_info": {
        "commit_hash": "3e05531243d032bbff157999c99a30a969966927",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3e05531243d032bbff157999c99a30a969966927",
        "files": [
          "drivers/gpu/drm/i915/i915_debugfs.c",
          "drivers/gpu/drm/i915/i915_gem_context.c",
          "drivers/gpu/drm/i915/i915_gem_context.h",
          "drivers/gpu/drm/i915/i915_gem_context_types.h",
          "drivers/gpu/drm/i915/i915_gpu_error.c",
          "drivers/gpu/drm/i915/i915_gpu_error.h",
          "drivers/gpu/drm/i915/selftests/mock_context.c"
        ],
        "message": "drm/i915: Stop storing ctx->user_handle\n\nThe user_handle need only be known by userspace for it to lookup the\ncontext via the idr; internally we have no use for it.\n\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nReviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190321140711.11190-3-chris@chris-wilson.co.uk",
        "before_after_code_files": [
          "drivers/gpu/drm/i915/i915_debugfs.c||drivers/gpu/drm/i915/i915_debugfs.c",
          "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c",
          "drivers/gpu/drm/i915/i915_gem_context.h||drivers/gpu/drm/i915/i915_gem_context.h",
          "drivers/gpu/drm/i915/i915_gem_context_types.h||drivers/gpu/drm/i915/i915_gem_context_types.h",
          "drivers/gpu/drm/i915/i915_gpu_error.c||drivers/gpu/drm/i915/i915_gpu_error.c",
          "drivers/gpu/drm/i915/i915_gpu_error.h||drivers/gpu/drm/i915/i915_gpu_error.h",
          "drivers/gpu/drm/i915/selftests/mock_context.c||drivers/gpu/drm/i915/selftests/mock_context.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
          ],
          "candidate": [
            "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/i915/i915_debugfs.c||drivers/gpu/drm/i915/i915_debugfs.c": [
          "File: drivers/gpu/drm/i915/i915_debugfs.c -> drivers/gpu/drm/i915/i915_debugfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "410:    rcu_read_lock();",
          "411:    task = pid_task(ctx->pid ?: file->pid, PIDTYPE_PID);",
          "415:    rcu_read_unlock();",
          "417:    print_file_stats(m, name, stats);",
          "",
          "[Removed Lines]",
          "412:    snprintf(name, sizeof(name), \"%s/%d\",",
          "413:      task ? task->comm : \"<unknown>\",",
          "414:      ctx->user_handle);",
          "",
          "[Added Lines]",
          "412:    snprintf(name, sizeof(name), \"%s\",",
          "413:      task ? task->comm : \"<unknown>\");",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c": [
          "File: drivers/gpu/drm/i915/i915_gem_context.c -> drivers/gpu/drm/i915/i915_gem_context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "604:  mutex_lock(&fpriv->context_idr_lock);",
          "609:  mutex_unlock(&fpriv->context_idr_lock);",
          "616:  kfree(fetch_and_zero(&ctx->name));",
          "617: err_pid:",
          "618:  put_pid(fetch_and_zero(&ctx->pid));",
          "619:  return ret;",
          "620: }",
          "",
          "[Removed Lines]",
          "605:  ret = idr_alloc(&fpriv->context_idr, ctx,",
          "606:    DEFAULT_CONTEXT_HANDLE, 0, GFP_KERNEL);",
          "607:  if (ret >= 0)",
          "608:   ctx->user_handle = ret;",
          "610:  if (ret < 0)",
          "611:   goto err_name;",
          "613:  return 0;",
          "615: err_name:",
          "",
          "[Added Lines]",
          "605:  ret = idr_alloc(&fpriv->context_idr, ctx, 0, 0, GFP_KERNEL);",
          "607:  if (ret >= 0)",
          "608:   goto out;",
          "613: out:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "638:  }",
          "640:  err = gem_context_register(ctx, file_priv);",
          "642:   goto err_ctx;",
          "645:  GEM_BUG_ON(i915_gem_context_is_kernel(ctx));",
          "647:  return 0;",
          "",
          "[Removed Lines]",
          "641:  if (err)",
          "644:  GEM_BUG_ON(ctx->user_handle != DEFAULT_CONTEXT_HANDLE);",
          "",
          "[Added Lines]",
          "636:  if (err < 0)",
          "640:  GEM_BUG_ON(err > 0);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "852:   return PTR_ERR(ctx);",
          "854:  ret = gem_context_register(ctx, file_priv);",
          "856:   goto err_ctx;",
          "859:  DRM_DEBUG(\"HW context %d created\\n\", args->ctx_id);",
          "861:  return 0;",
          "",
          "[Removed Lines]",
          "855:  if (ret)",
          "858:  args->ctx_id = ctx->user_handle;",
          "",
          "[Added Lines]",
          "850:  if (ret < 0)",
          "853:  args->ctx_id = ret;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "877:  if (args->pad != 0)",
          "878:   return -EINVAL;",
          "881:   return -ENOENT;",
          "883:  if (mutex_lock_interruptible(&file_priv->context_idr_lock))",
          "",
          "[Removed Lines]",
          "880:  if (args->ctx_id == DEFAULT_CONTEXT_HANDLE)",
          "",
          "[Added Lines]",
          "875:  if (!args->ctx_id)",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gem_context.h||drivers/gpu/drm/i915/i915_gem_context.h": [
          "File: drivers/gpu/drm/i915/i915_gem_context.h -> drivers/gpu/drm/i915/i915_gem_context.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "126:  atomic_dec(&ctx->hw_id_pin_count);",
          "127: }",
          "134: static inline bool i915_gem_context_is_kernel(struct i915_gem_context *ctx)",
          "135: {",
          "136:  return !ctx->file_priv;",
          "",
          "[Removed Lines]",
          "129: static inline bool i915_gem_context_is_default(const struct i915_gem_context *c)",
          "130: {",
          "131:  return c->user_handle == DEFAULT_CONTEXT_HANDLE;",
          "132: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gem_context_types.h||drivers/gpu/drm/i915/i915_gem_context_types.h": [
          "File: drivers/gpu/drm/i915/i915_gem_context_types.h -> drivers/gpu/drm/i915/i915_gem_context_types.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:  struct list_head active_engines;",
          "130:  struct mutex mutex;",
          "141:  struct i915_sched_attr sched;",
          "",
          "[Removed Lines]",
          "138:  u32 user_handle;",
          "139: #define DEFAULT_CONTEXT_HANDLE 0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gpu_error.c||drivers/gpu/drm/i915/i915_gpu_error.c": [
          "File: drivers/gpu/drm/i915/i915_gpu_error.c -> drivers/gpu/drm/i915/i915_gpu_error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "454:     const char *header,",
          "455:     const struct drm_i915_error_context *ctx)",
          "456: {",
          "459:      ctx->sched_attr.priority, ctx->guilty, ctx->active);",
          "460: }",
          "",
          "[Removed Lines]",
          "457:  err_printf(m, \"%s%s[%d] user_handle %d hw_id %d, prio %d, guilty %d active %d\\n\",",
          "458:      header, ctx->comm, ctx->pid, ctx->handle, ctx->hw_id,",
          "",
          "[Added Lines]",
          "457:  err_printf(m, \"%s%s[%d] hw_id %d, prio %d, guilty %d active %d\\n\",",
          "458:      header, ctx->comm, ctx->pid, ctx->hw_id,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "758:   if (obj) {",
          "759:    err_puts(m, m->i915->engine[i]->name);",
          "760:    if (ee->context.pid)",
          "762:         ee->context.comm,",
          "766:    err_printf(m, \" --- gtt_offset = 0x%08x %08x\\n\",",
          "767:        upper_32_bits(obj->gtt_offset),",
          "768:        lower_32_bits(obj->gtt_offset));",
          "",
          "[Removed Lines]",
          "761:     err_printf(m, \" (submitted by %s [%d], ctx %d [%d])\",",
          "763:         ee->context.pid,",
          "764:         ee->context.handle,",
          "765:         ee->context.hw_id);",
          "",
          "[Added Lines]",
          "761:     err_printf(m, \" (submitted by %s [%d])\",",
          "763:         ee->context.pid);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1330:   rcu_read_unlock();",
          "1331:  }",
          "1334:  e->hw_id = ctx->hw_id;",
          "1335:  e->sched_attr = ctx->sched;",
          "1336:  e->guilty = atomic_read(&ctx->guilty_count);",
          "",
          "[Removed Lines]",
          "1333:  e->handle = ctx->user_handle;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gpu_error.h||drivers/gpu/drm/i915/i915_gpu_error.h": [
          "File: drivers/gpu/drm/i915/i915_gpu_error.h -> drivers/gpu/drm/i915/i915_gpu_error.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:   struct drm_i915_error_context {",
          "117:    char comm[TASK_COMM_LEN];",
          "118:    pid_t pid;",
          "120:    u32 hw_id;",
          "121:    int active;",
          "122:    int guilty;",
          "",
          "[Removed Lines]",
          "119:    u32 handle;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/selftests/mock_context.c||drivers/gpu/drm/i915/selftests/mock_context.c": [
          "File: drivers/gpu/drm/i915/selftests/mock_context.c -> drivers/gpu/drm/i915/selftests/mock_context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:   return ctx;",
          "100:  err = gem_context_register(ctx, file->driver_priv);",
          "102:   goto err_ctx;",
          "104:  return ctx;",
          "",
          "[Removed Lines]",
          "101:  if (err)",
          "",
          "[Added Lines]",
          "101:  if (err < 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e46c2e99f60043bfdb63f18fe775db1f688906d9",
      "candidate_info": {
        "commit_hash": "e46c2e99f60043bfdb63f18fe775db1f688906d9",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/e46c2e99f60043bfdb63f18fe775db1f688906d9",
        "files": [
          "drivers/gpu/drm/i915/i915_gem_context.c",
          "drivers/gpu/drm/i915/i915_gem_context.h",
          "drivers/gpu/drm/i915/intel_lrc.c",
          "include/uapi/drm/i915_drm.h"
        ],
        "message": "drm/i915: Expose RPCS (SSEU) configuration to userspace (Gen11 only)\n\nWe want to allow userspace to reconfigure the subslice configuration on a\nper context basis.\n\nThis is required for the functional requirement of shutting down non-VME\nenabled sub-slices on Gen11 parts.\n\nTo do so, we expose a context parameter to allow adjustment of the RPCS\nregister stored within the context image (and currently not accessible via\nLRI).\n\nIf the context is adjusted before first use or whilst idle, the adjustment\nis for \"free\"; otherwise if the context is active we queue a request to do\nso (using the kernel context), following all other activity by that\ncontext, which is also marked as barrier for all following submission\nagainst the same context.\n\nSince the overhead of device re-configuration during context switching can\nbe significant, especially in multi-context workloads, we limit this new\nuAPI to only support the Gen11 VME use case. In this use case either the\ndevice is fully enabled, and exactly one slice and half of the subslices\nare enabled.\n\nExample usage:\n\n\tstruct drm_i915_gem_context_param_sseu sseu = { };\n\tstruct drm_i915_gem_context_param arg = {\n\t\t.param = I915_CONTEXT_PARAM_SSEU,\n\t\t.ctx_id = gem_context_create(fd),\n\t\t.size = sizeof(sseu),\n\t\t.value = to_user_pointer(&sseu)\n\t};\n\n\t/* Query device defaults. */\n\tgem_context_get_param(fd, &arg);\n\n\t/* Set VME configuration on a 1x6x8 part. */\n\tsseu.slice_mask = 0x1;\n\tsseu.subslice_mask = 0xe0;\n\tgem_context_set_param(fd, &arg);\n\nv2: Fix offset of CTX_R_PWR_CLK_STATE in intel_lr_context_set_sseu()\n    (Lionel)\n\nv3: Add ability to program this per engine (Chris)\n\nv4: Move most get_sseu() into i915_gem_context.c (Lionel)\n\nv5: Validate sseu configuration against the device's capabilities (Lionel)\n\nv6: Change context powergating settings through MI_SDM on kernel context\n    (Chris)\n\nv7: Synchronize the requests following a powergating setting change using\n    a global dependency (Chris)\n    Iterate timelines through dev_priv.gt.active_rings (Tvrtko)\n    Disable RPCS configuration setting for non capable users\n    (Lionel/Tvrtko)\n\nv8: s/union intel_sseu/struct intel_sseu/ (Lionel)\n    s/dev_priv/i915/ (Tvrtko)\n    Change uapi class/instance fields to u16 (Tvrtko)\n    Bump mask fields to 64bits (Lionel)\n    Don't return EPERM when dynamic sseu is disabled (Tvrtko)\n\nv9: Import context image into kernel context's ppgtt only when\n    reconfiguring powergated slice/subslices (Chris)\n    Use aliasing ppgtt when needed (Michel)\n\nTvrtko Ursulin:\n\nv10:\n * Update for upstream changes.\n * Request submit needs a RPM reference.\n * Reject on !FULL_PPGTT for simplicity.\n * Pull out get/set param to helpers for readability and less indent.\n * Use i915_request_await_dma_fence in add_global_barrier to skip waits\n   on the same timeline and avoid GEM_BUG_ON.\n * No need to explicitly assign a NULL pointer to engine in legacy mode.\n * No need to move gen8_make_rpcs up.\n * Factored out global barrier as prep patch.\n * Allow to only CAP_SYS_ADMIN if !Gen11.\n\nv11:\n * Remove engine vfunc in favour of local helper. (Chris Wilson)\n * Stop retiring requests before updates since it is not needed\n   (Chris Wilson)\n * Implement direct CPU update path for idle contexts. (Chris Wilson)\n * Left side dependency needs only be on the same context timeline.\n   (Chris Wilson)\n * It is sufficient to order the timeline. (Chris Wilson)\n * Reject !RCS configuration attempts with -ENODEV for now.\n\nv12:\n * Rebase for make_rpcs.\n\nv13:\n * Centralize SSEU normalization to make_rpcs.\n * Type width checking (uAPI <-> implementation).\n * Gen11 restrictions uAPI checks.\n * Gen11 subslice count differences handling.\n Chris Wilson:\n * args->size handling fixes.\n * Update context image from GGTT.\n * Postpone context image update to pinning.\n * Use i915_gem_active_raw instead of last_request_on_engine.\n\nv14:\n * Add activity tracker on intel_context to fix the lifetime issues\n   and simplify the code. (Chris Wilson)\n\nv15:\n * Fix context pin leak if no space in ring by simplifying the\n   context pinning sequence.\n\nv16:\n * Rebase for context get/set param locking changes.\n * Just -ENODEV on !Gen11. (Joonas)\n\nv17:\n * Fix one Gen11 subslice enablement rule.\n * Handle error from i915_sw_fence_await_sw_fence_gfp. (Chris Wilson)\n\nv18:\n * Update commit message. (Joonas)\n * Restrict uAPI to VME use case. (Joonas)\n\nv19:\n * Rebase.\n\nv20:\n * Rebase for ce->active_tracker.\n\nv21:\n * Rebase for IS_GEN changes.\n\nv22:\n * Reserve uAPI for flags straight away. (Chris Wilson)\n\nv23:\n * Rebase for RUNTIME_INFO.\n\nv24:\n * Added some headline docs for the uapi usage. (Joonas/Chris)\n\nv25:\n * Renamed class/instance to engine_class/engine_instance to avoid clash\n   with C++ keyword. (Tony Ye)\n\nv26:\n * Rebased for runtime pm api changes.\n\nv27:\n * Rebased for intel_context_init.\n * Wrap commit msg to 75.\n\nv28:\n (Chris Wilson)\n * Use i915_gem_ggtt.\n * Use i915_request_await_dma_fence to show a better example.\n\nv29:\n * i915_timeline_set_barrier can now fail. (Chris Wilson)\n\nv30:\n * Capture some acks.\n\nv31:\n * Drop the WARN_ON from use controllable paths. (Chris Wilson)\n * Use overflows_type for all checks.\n\nBugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=100899\nBugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=107634\nIssue: https://github.com/intel/media-driver/issues/267\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nSigned-off-by: Lionel Landwerlin <lionel.g.landwerlin@intel.com>\nCc: Dmitry Rogozhkin <dmitry.v.rogozhkin@intel.com>\nCc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nCc: Zhipeng Gong <zhipeng.gong@intel.com>\nCc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>\nCc: Tony Ye <tony.ye@intel.com>\nSigned-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nReviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\nReviewed-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>\nAcked-by: Timo Aaltonen <timo.aaltonen@canonical.com>\nAcked-by: Takashi Iwai <tiwai@suse.de>\nAcked-by: St\u00e9phane Marchesin <marcheu@chromium.org>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190205095032.22673-4-tvrtko.ursulin@linux.intel.com",
        "before_after_code_files": [
          "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c",
          "drivers/gpu/drm/i915/i915_gem_context.h||drivers/gpu/drm/i915/i915_gem_context.h",
          "drivers/gpu/drm/i915/intel_lrc.c||drivers/gpu/drm/i915/intel_lrc.c",
          "include/uapi/drm/i915_drm.h||include/uapi/drm/i915_drm.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
          ],
          "candidate": [
            "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c": [
          "File: drivers/gpu/drm/i915/i915_gem_context.c -> drivers/gpu/drm/i915/i915_gem_context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: #include <drm/i915_drm.h>",
          "90: #include \"i915_drv.h\"",
          "91: #include \"i915_trace.h\"",
          "92: #include \"intel_workarounds.h\"",
          "94: #define ALL_L3_SLICES(dev) (1 << NUM_L3_SLICES(dev)) - 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92: #include \"intel_lrc_reg.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "321:  return desc;",
          "322: }",
          "324: void",
          "325: intel_context_init(struct intel_context *ce,",
          "326:      struct i915_gem_context *ctx,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "325: static void intel_context_retire(struct i915_gem_active *active,",
          "326:      struct i915_request *rq)",
          "327: {",
          "328:  struct intel_context *ce =",
          "329:   container_of(active, typeof(*ce), active_tracker);",
          "331:  intel_context_unpin(ce);",
          "332: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "335:  ce->sseu = intel_device_default_sseu(ctx->i915);",
          "336: }",
          "338: static struct i915_gem_context *",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "347:  init_request_active(&ce->active_tracker, intel_context_retire);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "850:  return 0;",
          "851: }",
          "853: int i915_gem_context_getparam_ioctl(struct drm_device *dev, void *data,",
          "854:         struct drm_file *file)",
          "855: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "865: static int get_sseu(struct i915_gem_context *ctx,",
          "866:       struct drm_i915_gem_context_param *args)",
          "867: {",
          "868:  struct drm_i915_gem_context_param_sseu user_sseu;",
          "869:  struct intel_engine_cs *engine;",
          "870:  struct intel_context *ce;",
          "871:  int ret;",
          "873:  if (args->size == 0)",
          "874:   goto out;",
          "875:  else if (args->size < sizeof(user_sseu))",
          "876:   return -EINVAL;",
          "878:  if (copy_from_user(&user_sseu, u64_to_user_ptr(args->value),",
          "879:       sizeof(user_sseu)))",
          "880:   return -EFAULT;",
          "882:  if (user_sseu.flags || user_sseu.rsvd)",
          "883:   return -EINVAL;",
          "885:  engine = intel_engine_lookup_user(ctx->i915,",
          "886:        user_sseu.engine_class,",
          "887:        user_sseu.engine_instance);",
          "888:  if (!engine)",
          "889:   return -EINVAL;",
          "892:  ret = mutex_lock_interruptible(&ctx->i915->drm.struct_mutex);",
          "893:  if (ret)",
          "894:   return ret;",
          "896:  ce = to_intel_context(ctx, engine);",
          "898:  user_sseu.slice_mask = ce->sseu.slice_mask;",
          "899:  user_sseu.subslice_mask = ce->sseu.subslice_mask;",
          "900:  user_sseu.min_eus_per_subslice = ce->sseu.min_eus_per_subslice;",
          "901:  user_sseu.max_eus_per_subslice = ce->sseu.max_eus_per_subslice;",
          "903:  mutex_unlock(&ctx->i915->drm.struct_mutex);",
          "905:  if (copy_to_user(u64_to_user_ptr(args->value), &user_sseu,",
          "906:     sizeof(user_sseu)))",
          "907:   return -EFAULT;",
          "909: out:",
          "910:  args->size = sizeof(user_sseu);",
          "912:  return 0;",
          "913: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "862:  if (!ctx)",
          "863:   return -ENOENT;",
          "866:  switch (args->param) {",
          "867:  case I915_CONTEXT_PARAM_BAN_PERIOD:",
          "868:   ret = -EINVAL;",
          "869:   break;",
          "870:  case I915_CONTEXT_PARAM_NO_ZEROMAP:",
          "871:   args->value = test_bit(UCONTEXT_NO_ZEROMAP, &ctx->user_flags);",
          "872:   break;",
          "873:  case I915_CONTEXT_PARAM_GTT_SIZE:",
          "874:   if (ctx->ppgtt)",
          "875:    args->value = ctx->ppgtt->vm.total;",
          "876:   else if (to_i915(dev)->mm.aliasing_ppgtt)",
          "",
          "[Removed Lines]",
          "865:  args->size = 0;",
          "",
          "[Added Lines]",
          "932:   args->size = 0;",
          "936:   args->size = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "879:    args->value = to_i915(dev)->ggtt.vm.total;",
          "880:   break;",
          "881:  case I915_CONTEXT_PARAM_NO_ERROR_CAPTURE:",
          "882:   args->value = i915_gem_context_no_error_capture(ctx);",
          "883:   break;",
          "884:  case I915_CONTEXT_PARAM_BANNABLE:",
          "885:   args->value = i915_gem_context_is_bannable(ctx);",
          "886:   break;",
          "887:  case I915_CONTEXT_PARAM_PRIORITY:",
          "888:   args->value = ctx->sched.priority >> I915_USER_PRIORITY_SHIFT;",
          "889:   break;",
          "890:  default:",
          "891:   ret = -EINVAL;",
          "892:   break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "946:   args->size = 0;",
          "950:   args->size = 0;",
          "954:   args->size = 0;",
          "957:  case I915_CONTEXT_PARAM_SSEU:",
          "958:   ret = get_sseu(ctx, args);",
          "959:   break;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "896:  return ret;",
          "897: }",
          "899: int i915_gem_context_setparam_ioctl(struct drm_device *dev, void *data,",
          "900:         struct drm_file *file)",
          "901: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "969: static int gen8_emit_rpcs_config(struct i915_request *rq,",
          "970:      struct intel_context *ce,",
          "971:      struct intel_sseu sseu)",
          "972: {",
          "973:  u64 offset;",
          "974:  u32 *cs;",
          "976:  cs = intel_ring_begin(rq, 4);",
          "977:  if (IS_ERR(cs))",
          "978:   return PTR_ERR(cs);",
          "980:  offset = i915_ggtt_offset(ce->state) +",
          "981:    LRC_STATE_PN * PAGE_SIZE +",
          "982:    (CTX_R_PWR_CLK_STATE + 1) * 4;",
          "989:  intel_ring_advance(rq, cs);",
          "991:  return 0;",
          "992: }",
          "994: static int",
          "995: gen8_modify_rpcs_gpu(struct intel_context *ce,",
          "996:        struct intel_engine_cs *engine,",
          "997:        struct intel_sseu sseu)",
          "998: {",
          "999:  struct drm_i915_private *i915 = engine->i915;",
          "1000:  struct i915_request *rq, *prev;",
          "1001:  intel_wakeref_t wakeref;",
          "1002:  int ret;",
          "1004:  GEM_BUG_ON(!ce->pin_count);",
          "1006:  lockdep_assert_held(&i915->drm.struct_mutex);",
          "1009:  wakeref = intel_runtime_pm_get(i915);",
          "1011:  rq = i915_request_alloc(engine, i915->kernel_context);",
          "1012:  if (IS_ERR(rq)) {",
          "1013:   ret = PTR_ERR(rq);",
          "1014:   goto out_put;",
          "1015:  }",
          "1018:  prev = i915_gem_active_raw(&ce->ring->timeline->last_request,",
          "1019:        &i915->drm.struct_mutex);",
          "1020:  if (prev && !i915_request_completed(prev)) {",
          "1021:   ret = i915_request_await_dma_fence(rq, &prev->fence);",
          "1022:   if (ret < 0)",
          "1023:    goto out_add;",
          "1024:  }",
          "1027:  ret = i915_timeline_set_barrier(ce->ring->timeline, rq);",
          "1028:  if (ret)",
          "1029:   goto out_add;",
          "1031:  ret = gen8_emit_rpcs_config(rq, ce, sseu);",
          "1032:  if (ret)",
          "1033:   goto out_add;",
          "1042:  if (!i915_gem_active_isset(&ce->active_tracker))",
          "1043:   __intel_context_pin(ce);",
          "1044:  i915_gem_active_set(&ce->active_tracker, rq);",
          "1046: out_add:",
          "1047:  i915_request_add(rq);",
          "1048: out_put:",
          "1049:  intel_runtime_pm_put(i915, wakeref);",
          "1051:  return ret;",
          "1052: }",
          "1054: static int",
          "1055: i915_gem_context_reconfigure_sseu(struct i915_gem_context *ctx,",
          "1056:       struct intel_engine_cs *engine,",
          "1057:       struct intel_sseu sseu)",
          "1058: {",
          "1059:  struct intel_context *ce = to_intel_context(ctx, engine);",
          "1060:  int ret;",
          "1062:  GEM_BUG_ON(INTEL_GEN(ctx->i915) < 8);",
          "1063:  GEM_BUG_ON(engine->id != RCS);",
          "1065:  ret = mutex_lock_interruptible(&ctx->i915->drm.struct_mutex);",
          "1066:  if (ret)",
          "1067:   return ret;",
          "1070:  if (!memcmp(&ce->sseu, &sseu, sizeof(sseu)))",
          "1071:   goto out;",
          "1078:  if (ce->pin_count)",
          "1079:   ret = gen8_modify_rpcs_gpu(ce, engine, sseu);",
          "1081:  if (!ret)",
          "1082:   ce->sseu = sseu;",
          "1084: out:",
          "1085:  mutex_unlock(&ctx->i915->drm.struct_mutex);",
          "1087:  return ret;",
          "1088: }",
          "1090: static int",
          "1091: user_to_context_sseu(struct drm_i915_private *i915,",
          "1092:        const struct drm_i915_gem_context_param_sseu *user,",
          "1093:        struct intel_sseu *context)",
          "1094: {",
          "1095:  const struct sseu_dev_info *device = &RUNTIME_INFO(i915)->sseu;",
          "1098:  if (!user->slice_mask || !user->subslice_mask ||",
          "1099:      !user->min_eus_per_subslice || !user->max_eus_per_subslice)",
          "1100:   return -EINVAL;",
          "1103:  if (user->max_eus_per_subslice < user->min_eus_per_subslice)",
          "1104:   return -EINVAL;",
          "1110:  if (overflows_type(user->slice_mask, context->slice_mask) ||",
          "1111:      overflows_type(user->subslice_mask, context->subslice_mask) ||",
          "1112:      overflows_type(user->min_eus_per_subslice,",
          "1113:       context->min_eus_per_subslice) ||",
          "1114:      overflows_type(user->max_eus_per_subslice,",
          "1115:       context->max_eus_per_subslice))",
          "1116:   return -EINVAL;",
          "1119:  if (user->slice_mask & ~device->slice_mask)",
          "1120:   return -EINVAL;",
          "1122:  if (user->subslice_mask & ~device->subslice_mask[0])",
          "1123:   return -EINVAL;",
          "1125:  if (user->max_eus_per_subslice > device->max_eus_per_subslice)",
          "1126:   return -EINVAL;",
          "1128:  context->slice_mask = user->slice_mask;",
          "1129:  context->subslice_mask = user->subslice_mask;",
          "1130:  context->min_eus_per_subslice = user->min_eus_per_subslice;",
          "1131:  context->max_eus_per_subslice = user->max_eus_per_subslice;",
          "1134:  if (IS_GEN(i915, 11)) {",
          "1135:   unsigned int hw_s = hweight8(device->slice_mask);",
          "1136:   unsigned int hw_ss_per_s = hweight8(device->subslice_mask[0]);",
          "1137:   unsigned int req_s = hweight8(context->slice_mask);",
          "1138:   unsigned int req_ss = hweight8(context->subslice_mask);",
          "1144:   if (req_s > 1 && req_ss != hw_ss_per_s)",
          "1145:    return -EINVAL;",
          "1151:   if (req_ss > 4 && (req_ss & 1))",
          "1152:    return -EINVAL;",
          "1159:   if (req_s == 1 && req_ss < hw_ss_per_s &&",
          "1160:       req_ss > (hw_ss_per_s / 2))",
          "1161:    return -EINVAL;",
          "1166:   if (req_s != 1 && req_s != hw_s)",
          "1167:    return -EINVAL;",
          "1173:   if (req_s == 1 &&",
          "1174:       (req_ss != hw_ss_per_s && req_ss != (hw_ss_per_s / 2)))",
          "1175:    return -EINVAL;",
          "1178:   if ((user->min_eus_per_subslice !=",
          "1179:        device->max_eus_per_subslice) ||",
          "1180:       (user->max_eus_per_subslice !=",
          "1181:        device->max_eus_per_subslice))",
          "1182:    return -EINVAL;",
          "1183:  }",
          "1185:  return 0;",
          "1186: }",
          "1188: static int set_sseu(struct i915_gem_context *ctx,",
          "1189:       struct drm_i915_gem_context_param *args)",
          "1190: {",
          "1191:  struct drm_i915_private *i915 = ctx->i915;",
          "1192:  struct drm_i915_gem_context_param_sseu user_sseu;",
          "1193:  struct intel_engine_cs *engine;",
          "1194:  struct intel_sseu sseu;",
          "1195:  int ret;",
          "1197:  if (args->size < sizeof(user_sseu))",
          "1198:   return -EINVAL;",
          "1200:  if (!IS_GEN(i915, 11))",
          "1201:   return -ENODEV;",
          "1203:  if (copy_from_user(&user_sseu, u64_to_user_ptr(args->value),",
          "1204:       sizeof(user_sseu)))",
          "1205:   return -EFAULT;",
          "1207:  if (user_sseu.flags || user_sseu.rsvd)",
          "1208:   return -EINVAL;",
          "1210:  engine = intel_engine_lookup_user(i915,",
          "1211:        user_sseu.engine_class,",
          "1212:        user_sseu.engine_instance);",
          "1213:  if (!engine)",
          "1214:   return -EINVAL;",
          "1217:  if (engine->class != RENDER_CLASS)",
          "1218:   return -ENODEV;",
          "1220:  ret = user_to_context_sseu(i915, &user_sseu, &sseu);",
          "1221:  if (ret)",
          "1222:   return ret;",
          "1224:  ret = i915_gem_context_reconfigure_sseu(ctx, engine, sseu);",
          "1225:  if (ret)",
          "1226:   return ret;",
          "1228:  args->size = sizeof(user_sseu);",
          "1230:  return 0;",
          "1231: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "958:      I915_USER_PRIORITY(priority);",
          "959:   }",
          "960:   break;",
          "962:  default:",
          "963:   ret = -EINVAL;",
          "964:   break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1295:  case I915_CONTEXT_PARAM_SSEU:",
          "1296:   ret = set_sseu(ctx, args);",
          "1297:   break;",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gem_context.h||drivers/gpu/drm/i915/i915_gem_context.h": [
          "File: drivers/gpu/drm/i915/i915_gem_context.h -> drivers/gpu/drm/i915/i915_gem_context.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "183:   u64 lrc_desc;",
          "184:   int pin_count;",
          "186:   const struct intel_context_ops *ops;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190:   struct i915_gem_active active_tracker;",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/intel_lrc.c||drivers/gpu/drm/i915/intel_lrc.c": [
          "File: drivers/gpu/drm/i915/intel_lrc.c -> drivers/gpu/drm/i915/intel_lrc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2502:   GEM_BUG_ON(subslices & 1);",
          "2504:   subslice_pg = false;",
          "",
          "[Removed Lines]",
          "2501:  if (IS_GEN(i915, 11) && slices == 1 && subslices >= 4) {",
          "",
          "[Added Lines]",
          "2501:  if (IS_GEN(i915, 11) &&",
          "2502:      slices == 1 &&",
          "2503:      subslices > min_t(u8, 4, hweight8(sseu->subslice_mask[0]) / 2)) {",
          "",
          "---------------"
        ],
        "include/uapi/drm/i915_drm.h||include/uapi/drm/i915_drm.h": [
          "File: include/uapi/drm/i915_drm.h -> include/uapi/drm/i915_drm.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1487: #define   I915_CONTEXT_DEFAULT_PRIORITY  0",
          "1489:  __u64 value;",
          "1490: };",
          "1492: enum drm_i915_oa_format {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1493: #define I915_CONTEXT_PARAM_SSEU  0x7",
          "1518: struct drm_i915_gem_context_param_sseu {",
          "1522:  __u16 engine_class;",
          "1523:  __u16 engine_instance;",
          "1528:  __u32 flags;",
          "1534:  __u64 slice_mask;",
          "1540:  __u64 subslice_mask;",
          "1547:  __u16 min_eus_per_subslice;",
          "1548:  __u16 max_eus_per_subslice;",
          "1553:  __u32 rsvd;",
          "1554: };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3aa9945a528e7616b5c8fe5d7aa7d4aaf52b0af2",
      "candidate_info": {
        "commit_hash": "3aa9945a528e7616b5c8fe5d7aa7d4aaf52b0af2",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3aa9945a528e7616b5c8fe5d7aa7d4aaf52b0af2",
        "files": [
          "drivers/gpu/drm/i915/i915_gem_context.c",
          "drivers/gpu/drm/i915/i915_gem_gtt.c",
          "drivers/gpu/drm/i915/i915_gem_gtt.h",
          "drivers/gpu/drm/i915/selftests/huge_pages.c",
          "drivers/gpu/drm/i915/selftests/i915_gem_context.c",
          "drivers/gpu/drm/i915/selftests/i915_gem_gtt.c",
          "drivers/gpu/drm/i915/selftests/mock_context.c"
        ],
        "message": "drm/i915: Separate GEM context construction and registration to userspace\n\nIn later patches, it became apparent that userspace can see a partially\nconstructed GEM context and begin using it before it was ready, to much\nhilarity. Close this window of opportunity by lifting the registration of\nthe context with userspace (the insertion of the context into the filp's\nidr) to the very end of the CONTEXT_CREATE ioctl.\n\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nReviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190321140711.11190-1-chris@chris-wilson.co.uk",
        "before_after_code_files": [
          "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c",
          "drivers/gpu/drm/i915/i915_gem_gtt.c||drivers/gpu/drm/i915/i915_gem_gtt.c",
          "drivers/gpu/drm/i915/i915_gem_gtt.h||drivers/gpu/drm/i915/i915_gem_gtt.h",
          "drivers/gpu/drm/i915/selftests/huge_pages.c||drivers/gpu/drm/i915/selftests/huge_pages.c",
          "drivers/gpu/drm/i915/selftests/i915_gem_context.c||drivers/gpu/drm/i915/selftests/i915_gem_context.c",
          "drivers/gpu/drm/i915/selftests/i915_gem_gtt.c||drivers/gpu/drm/i915/selftests/i915_gem_gtt.c",
          "drivers/gpu/drm/i915/selftests/mock_context.c||drivers/gpu/drm/i915/selftests/mock_context.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
          ],
          "candidate": [
            "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c": [
          "File: drivers/gpu/drm/i915/i915_gem_context.c -> drivers/gpu/drm/i915/i915_gem_context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "337: }",
          "339: static struct i915_gem_context *",
          "342: {",
          "343:  struct i915_gem_context *ctx;",
          "345:  int i;",
          "347:  ctx = kzalloc(sizeof(*ctx), GFP_KERNEL);",
          "349:   return ERR_PTR(-ENOMEM);",
          "351:  kref_init(&ctx->ref);",
          "",
          "[Removed Lines]",
          "340: __create_hw_context(struct drm_i915_private *dev_priv,",
          "341:       struct drm_i915_file_private *file_priv)",
          "344:  int ret;",
          "348:  if (ctx == NULL)",
          "",
          "[Added Lines]",
          "340: __create_context(struct drm_i915_private *dev_priv)",
          "346:  if (!ctx)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "362:  INIT_LIST_HEAD(&ctx->handles_list);",
          "363:  INIT_LIST_HEAD(&ctx->hw_id_link);",
          "",
          "[Removed Lines]",
          "366:  ret = DEFAULT_CONTEXT_HANDLE;",
          "367:  if (file_priv) {",
          "368:   ret = idr_alloc(&file_priv->context_idr, ctx,",
          "369:     DEFAULT_CONTEXT_HANDLE, 0, GFP_KERNEL);",
          "370:   if (ret < 0)",
          "371:    goto err_lut;",
          "372:  }",
          "373:  ctx->user_handle = ret;",
          "375:  ctx->file_priv = file_priv;",
          "376:  if (file_priv) {",
          "377:   ctx->pid = get_task_pid(current, PIDTYPE_PID);",
          "378:   ctx->name = kasprintf(GFP_KERNEL, \"%s[%d]/%x\",",
          "379:           current->comm,",
          "380:           pid_nr(ctx->pid),",
          "381:           ctx->user_handle);",
          "382:   if (!ctx->name) {",
          "383:    ret = -ENOMEM;",
          "384:    goto err_pid;",
          "385:   }",
          "386:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "401:   ctx->hang_timestamp[i] = jiffies - CONTEXT_FAST_HANG_JIFFIES;",
          "403:  return ctx;",
          "418: }",
          "420: static struct i915_gem_context *",
          "423: {",
          "424:  struct i915_gem_context *ctx;",
          "",
          "[Removed Lines]",
          "405: err_pid:",
          "406:  put_pid(ctx->pid);",
          "407:  idr_remove(&file_priv->context_idr, ctx->user_handle);",
          "408: err_lut:",
          "409:  context_close(ctx);",
          "410:  return ERR_PTR(ret);",
          "411: }",
          "413: static void __destroy_hw_context(struct i915_gem_context *ctx,",
          "414:      struct drm_i915_file_private *file_priv)",
          "415: {",
          "416:  idr_remove(&file_priv->context_idr, ctx->user_handle);",
          "417:  context_close(ctx);",
          "421: i915_gem_create_context(struct drm_i915_private *dev_priv,",
          "422:    struct drm_i915_file_private *file_priv)",
          "",
          "[Added Lines]",
          "382: i915_gem_create_context(struct drm_i915_private *dev_priv)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "429:  contexts_free_first(dev_priv);",
          "432:  if (IS_ERR(ctx))",
          "433:   return ctx;",
          "435:  if (HAS_FULL_PPGTT(dev_priv)) {",
          "436:   struct i915_hw_ppgtt *ppgtt;",
          "439:   if (IS_ERR(ppgtt)) {",
          "440:    DRM_DEBUG_DRIVER(\"PPGTT setup failed (%ld)\\n\",",
          "441:       PTR_ERR(ppgtt));",
          "443:    return ERR_CAST(ppgtt);",
          "444:   }",
          "",
          "[Removed Lines]",
          "431:  ctx = __create_hw_context(dev_priv, file_priv);",
          "438:   ppgtt = i915_ppgtt_create(dev_priv, file_priv);",
          "442:    __destroy_hw_context(ctx, file_priv);",
          "",
          "[Added Lines]",
          "391:  ctx = __create_context(dev_priv);",
          "398:   ppgtt = i915_ppgtt_create(dev_priv);",
          "402:    context_close(ctx);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "475:  if (ret)",
          "476:   return ERR_PTR(ret);",
          "479:  if (IS_ERR(ctx))",
          "480:   goto out;",
          "",
          "[Removed Lines]",
          "478:  ctx = i915_gem_create_context(to_i915(dev), NULL);",
          "",
          "[Added Lines]",
          "438:  ctx = i915_gem_create_context(to_i915(dev));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "511:  struct i915_gem_context *ctx;",
          "512:  int err;",
          "515:  if (IS_ERR(ctx))",
          "516:   return ctx;",
          "",
          "[Removed Lines]",
          "514:  ctx = i915_gem_create_context(i915, NULL);",
          "",
          "[Added Lines]",
          "474:  ctx = i915_gem_create_context(i915);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "625:  return 0;",
          "626: }",
          "628: int i915_gem_context_open(struct drm_i915_private *i915,",
          "629:      struct drm_file *file)",
          "630: {",
          "631:  struct drm_i915_file_private *file_priv = file->driver_priv;",
          "632:  struct i915_gem_context *ctx;",
          "634:  idr_init(&file_priv->context_idr);",
          "636:  mutex_lock(&i915->drm.struct_mutex);",
          "639:  if (IS_ERR(ctx)) {",
          "642:  }",
          "644:  GEM_BUG_ON(i915_gem_context_is_kernel(ctx));",
          "646:  return 0;",
          "647: }",
          "649: void i915_gem_context_close(struct drm_file *file)",
          "",
          "[Removed Lines]",
          "637:  ctx = i915_gem_create_context(i915, file_priv);",
          "638:  mutex_unlock(&i915->drm.struct_mutex);",
          "640:   idr_destroy(&file_priv->context_idr);",
          "641:   return PTR_ERR(ctx);",
          "",
          "[Added Lines]",
          "588: static int gem_context_register(struct i915_gem_context *ctx,",
          "589:     struct drm_i915_file_private *fpriv)",
          "590: {",
          "591:  int ret;",
          "593:  ctx->file_priv = fpriv;",
          "594:  if (ctx->ppgtt)",
          "595:   ctx->ppgtt->vm.file = fpriv;",
          "597:  ctx->pid = get_task_pid(current, PIDTYPE_PID);",
          "598:  ctx->name = kasprintf(GFP_KERNEL, \"%s[%d]\",",
          "599:          current->comm, pid_nr(ctx->pid));",
          "600:  if (!ctx->name) {",
          "601:   ret = -ENOMEM;",
          "602:   goto err_pid;",
          "603:  }",
          "606:  ret = idr_alloc(&fpriv->context_idr, ctx,",
          "607:    DEFAULT_CONTEXT_HANDLE, 0, GFP_KERNEL);",
          "608:  if (ret < 0)",
          "609:   goto err_name;",
          "611:  ctx->user_handle = ret;",
          "613:  return 0;",
          "615: err_name:",
          "616:  kfree(fetch_and_zero(&ctx->name));",
          "617: err_pid:",
          "618:  put_pid(fetch_and_zero(&ctx->pid));",
          "619:  return ret;",
          "620: }",
          "627:  int err;",
          "633:  ctx = i915_gem_create_context(i915);",
          "635:   err = PTR_ERR(ctx);",
          "636:   goto err;",
          "639:  err = gem_context_register(ctx, file_priv);",
          "640:  if (err)",
          "641:   goto err_ctx;",
          "643:  GEM_BUG_ON(ctx->user_handle != DEFAULT_CONTEXT_HANDLE);",
          "646:  mutex_unlock(&i915->drm.struct_mutex);",
          "650: err_ctx:",
          "651:  context_close(ctx);",
          "652: err:",
          "653:  mutex_unlock(&i915->drm.struct_mutex);",
          "654:  idr_destroy(&file_priv->context_idr);",
          "655:  return PTR_ERR(ctx);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "835:  if (ret)",
          "836:   return ret;",
          "845:  args->ctx_id = ctx->user_handle;",
          "846:  DRM_DEBUG(\"HW context %d created\\n\", args->ctx_id);",
          "848:  return 0;",
          "849: }",
          "851: int i915_gem_context_destroy_ioctl(struct drm_device *dev, void *data,",
          "",
          "[Removed Lines]",
          "838:  ctx = i915_gem_create_context(i915, file_priv);",
          "839:  mutex_unlock(&dev->struct_mutex);",
          "840:  if (IS_ERR(ctx))",
          "841:   return PTR_ERR(ctx);",
          "843:  GEM_BUG_ON(i915_gem_context_is_kernel(ctx));",
          "",
          "[Added Lines]",
          "847:  ctx = i915_gem_create_context(i915);",
          "848:  if (IS_ERR(ctx)) {",
          "849:   ret = PTR_ERR(ctx);",
          "850:   goto err_unlock;",
          "851:  }",
          "853:  ret = gem_context_register(ctx, file_priv);",
          "854:  if (ret)",
          "855:   goto err_ctx;",
          "857:  mutex_unlock(&dev->struct_mutex);",
          "864: err_ctx:",
          "865:  context_close(ctx);",
          "866: err_unlock:",
          "867:  mutex_unlock(&dev->struct_mutex);",
          "868:  return ret;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "870:  if (ret)",
          "871:   goto out;",
          "874:  mutex_unlock(&dev->struct_mutex);",
          "876: out:",
          "",
          "[Removed Lines]",
          "873:  __destroy_hw_context(ctx, file_priv);",
          "",
          "[Added Lines]",
          "893:  idr_remove(&file_priv->context_idr, ctx->user_handle);",
          "894:  context_close(ctx);",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gem_gtt.c||drivers/gpu/drm/i915/i915_gem_gtt.c": [
          "File: drivers/gpu/drm/i915/i915_gem_gtt.c -> drivers/gpu/drm/i915/i915_gem_gtt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2069: }",
          "2071: struct i915_hw_ppgtt *",
          "2074: {",
          "2075:  struct i915_hw_ppgtt *ppgtt;",
          "",
          "[Removed Lines]",
          "2072: i915_ppgtt_create(struct drm_i915_private *i915,",
          "2073:     struct drm_i915_file_private *fpriv)",
          "",
          "[Added Lines]",
          "2072: i915_ppgtt_create(struct drm_i915_private *i915)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2078:  if (IS_ERR(ppgtt))",
          "2079:   return ppgtt;",
          "2083:  trace_i915_ppgtt_create(&ppgtt->vm);",
          "2085:  return ppgtt;",
          "",
          "[Removed Lines]",
          "2081:  ppgtt->vm.file = fpriv;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2657:  struct i915_hw_ppgtt *ppgtt;",
          "2658:  int err;",
          "2661:  if (IS_ERR(ppgtt))",
          "2662:   return PTR_ERR(ppgtt);",
          "",
          "[Removed Lines]",
          "2660:  ppgtt = i915_ppgtt_create(i915, ERR_PTR(-EPERM));",
          "",
          "[Added Lines]",
          "2657:  ppgtt = i915_ppgtt_create(i915);",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gem_gtt.h||drivers/gpu/drm/i915/i915_gem_gtt.h": [
          "File: drivers/gpu/drm/i915/i915_gem_gtt.h -> drivers/gpu/drm/i915/i915_gem_gtt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "603: void i915_ggtt_cleanup_hw(struct drm_i915_private *dev_priv);",
          "605: int i915_ppgtt_init_hw(struct drm_i915_private *dev_priv);",
          "609: void i915_ppgtt_close(struct i915_address_space *vm);",
          "610: static inline void i915_ppgtt_get(struct i915_hw_ppgtt *ppgtt)",
          "611: {",
          "612:  if (ppgtt)",
          "613:   kref_get(&ppgtt->ref);",
          "614: }",
          "615: static inline void i915_ppgtt_put(struct i915_hw_ppgtt *ppgtt)",
          "616: {",
          "617:  if (ppgtt)",
          "",
          "[Removed Lines]",
          "606: void i915_ppgtt_release(struct kref *kref);",
          "607: struct i915_hw_ppgtt *i915_ppgtt_create(struct drm_i915_private *dev_priv,",
          "608:      struct drm_i915_file_private *fpriv);",
          "",
          "[Added Lines]",
          "607: struct i915_hw_ppgtt *i915_ppgtt_create(struct drm_i915_private *dev_priv);",
          "609: void i915_ppgtt_release(struct kref *kref);",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/selftests/huge_pages.c||drivers/gpu/drm/i915/selftests/huge_pages.c": [
          "File: drivers/gpu/drm/i915/selftests/huge_pages.c -> drivers/gpu/drm/i915/selftests/huge_pages.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1713:  mkwrite_device_info(dev_priv)->ppgtt_size = 48;",
          "1715:  mutex_lock(&dev_priv->drm.struct_mutex);",
          "1717:  if (IS_ERR(ppgtt)) {",
          "1718:   err = PTR_ERR(ppgtt);",
          "1719:   goto out_unlock;",
          "",
          "[Removed Lines]",
          "1716:  ppgtt = i915_ppgtt_create(dev_priv, ERR_PTR(-ENODEV));",
          "",
          "[Added Lines]",
          "1716:  ppgtt = i915_ppgtt_create(dev_priv);",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/selftests/i915_gem_context.c||drivers/gpu/drm/i915/selftests/i915_gem_context.c": [
          "File: drivers/gpu/drm/i915/selftests/i915_gem_context.c -> drivers/gpu/drm/i915/selftests/i915_gem_context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:  }",
          "78:  for (n = 0; n < nctx; n++) {",
          "80:   if (IS_ERR(ctx[n])) {",
          "81:    err = PTR_ERR(ctx[n]);",
          "82:    goto out_unlock;",
          "",
          "[Removed Lines]",
          "79:   ctx[n] = i915_gem_create_context(i915, file->driver_priv);",
          "",
          "[Added Lines]",
          "79:   ctx[n] = live_context(i915, file);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "513:   struct i915_gem_context *ctx;",
          "514:   unsigned int id;",
          "517:   if (IS_ERR(ctx)) {",
          "518:    err = PTR_ERR(ctx);",
          "519:    goto out_unlock;",
          "",
          "[Removed Lines]",
          "516:   ctx = i915_gem_create_context(i915, file->driver_priv);",
          "",
          "[Added Lines]",
          "516:   ctx = live_context(i915, file);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "963:  mutex_lock(&i915->drm.struct_mutex);",
          "966:  if (IS_ERR(ctx)) {",
          "967:   ret = PTR_ERR(ctx);",
          "968:   goto out_unlock;",
          "",
          "[Removed Lines]",
          "965:  ctx = i915_gem_create_context(i915, file->driver_priv);",
          "",
          "[Added Lines]",
          "965:  ctx = live_context(i915, file);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1072:  if (err)",
          "1073:   goto out_unlock;",
          "1076:  if (IS_ERR(ctx)) {",
          "1077:   err = PTR_ERR(ctx);",
          "1078:   goto out_unlock;",
          "",
          "[Removed Lines]",
          "1075:  ctx = i915_gem_create_context(i915, file->driver_priv);",
          "",
          "[Added Lines]",
          "1075:  ctx = live_context(i915, file);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1397:  if (err)",
          "1398:   goto out_unlock;",
          "1401:  if (IS_ERR(ctx_a)) {",
          "1402:   err = PTR_ERR(ctx_a);",
          "1403:   goto out_unlock;",
          "1404:  }",
          "1407:  if (IS_ERR(ctx_b)) {",
          "1408:   err = PTR_ERR(ctx_b);",
          "1409:   goto out_unlock;",
          "",
          "[Removed Lines]",
          "1400:  ctx_a = i915_gem_create_context(i915, file->driver_priv);",
          "1406:  ctx_b = i915_gem_create_context(i915, file->driver_priv);",
          "",
          "[Added Lines]",
          "1400:  ctx_a = live_context(i915, file);",
          "1406:  ctx_b = live_context(i915, file);",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/selftests/i915_gem_gtt.c||drivers/gpu/drm/i915/selftests/i915_gem_gtt.c": [
          "File: drivers/gpu/drm/i915/selftests/i915_gem_gtt.c -> drivers/gpu/drm/i915/selftests/i915_gem_gtt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1010:   return PTR_ERR(file);",
          "1012:  mutex_lock(&dev_priv->drm.struct_mutex);",
          "1014:  if (IS_ERR(ppgtt)) {",
          "1015:   err = PTR_ERR(ppgtt);",
          "1016:   goto out_unlock;",
          "",
          "[Removed Lines]",
          "1013:  ppgtt = i915_ppgtt_create(dev_priv, file->driver_priv);",
          "",
          "[Added Lines]",
          "1013:  ppgtt = i915_ppgtt_create(dev_priv);",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/selftests/mock_context.c||drivers/gpu/drm/i915/selftests/mock_context.c": [
          "File: drivers/gpu/drm/i915/selftests/mock_context.c -> drivers/gpu/drm/i915/selftests/mock_context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: struct i915_gem_context *",
          "89: live_context(struct drm_i915_private *i915, struct drm_file *file)",
          "90: {",
          "91:  lockdep_assert_held(&i915->drm.struct_mutex);",
          "94: }",
          "96: struct i915_gem_context *",
          "",
          "[Removed Lines]",
          "93:  return i915_gem_create_context(i915, file->driver_priv);",
          "",
          "[Added Lines]",
          "91:  struct i915_gem_context *ctx;",
          "92:  int err;",
          "96:  ctx = i915_gem_create_context(i915);",
          "97:  if (IS_ERR(ctx))",
          "98:   return ctx;",
          "100:  err = gem_context_register(ctx, file->driver_priv);",
          "101:  if (err)",
          "102:   goto err_ctx;",
          "104:  return ctx;",
          "106: err_ctx:",
          "107:  context_close(ctx);",
          "108:  return ERR_PTR(err);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0695db7298ec2181d38bd3bfc5d0ff7a46f96f3",
      "candidate_info": {
        "commit_hash": "e0695db7298ec2181d38bd3bfc5d0ff7a46f96f3",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/e0695db7298ec2181d38bd3bfc5d0ff7a46f96f3",
        "files": [
          "drivers/gpu/drm/i915/i915_drv.c",
          "drivers/gpu/drm/i915/i915_drv.h",
          "drivers/gpu/drm/i915/i915_gem_context.c",
          "drivers/gpu/drm/i915/i915_gem_context.h",
          "drivers/gpu/drm/i915/i915_gem_gtt.c",
          "drivers/gpu/drm/i915/i915_gem_gtt.h",
          "drivers/gpu/drm/i915/selftests/huge_pages.c",
          "drivers/gpu/drm/i915/selftests/i915_gem_context.c",
          "drivers/gpu/drm/i915/selftests/i915_gem_gtt.c",
          "drivers/gpu/drm/i915/selftests/mock_context.c",
          "include/uapi/drm/i915_drm.h"
        ],
        "message": "drm/i915: Create/destroy VM (ppGTT) for use with contexts\n\nIn preparation to making the ppGTT binding for a context explicit (to\nfacilitate reusing the same ppGTT between different contexts), allow the\nuser to create and destroy named ppGTT.\n\nv2: Replace global barrier for swapping over the ppgtt and tlbs with a\nlocal context barrier (Tvrtko)\nv3: serialise with struct_mutex; it's lazy but required dammit\nv4: Rewrite igt_ctx_shared_exec to be more different (aimed to be more\nsimilarly, turned out different!)\n\nv5: Fix up test unwind for aliasing-ppgtt (snb)\nv6: Tighten language for uapi struct drm_i915_gem_vm_control.\nv7: Patch the context image for runtime ppgtt switching!\n\nTestcase: igt/gem_vm_create\nTestcase: igt/gem_ctx_param/vm\nTestcase: igt/gem_ctx_clone/vm\nTestcase: igt/gem_ctx_shared\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nReviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190322092325.5883-2-chris@chris-wilson.co.uk",
        "before_after_code_files": [
          "drivers/gpu/drm/i915/i915_drv.c||drivers/gpu/drm/i915/i915_drv.c",
          "drivers/gpu/drm/i915/i915_drv.h||drivers/gpu/drm/i915/i915_drv.h",
          "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c",
          "drivers/gpu/drm/i915/i915_gem_context.h||drivers/gpu/drm/i915/i915_gem_context.h",
          "drivers/gpu/drm/i915/i915_gem_gtt.c||drivers/gpu/drm/i915/i915_gem_gtt.c",
          "drivers/gpu/drm/i915/i915_gem_gtt.h||drivers/gpu/drm/i915/i915_gem_gtt.h",
          "drivers/gpu/drm/i915/selftests/huge_pages.c||drivers/gpu/drm/i915/selftests/huge_pages.c",
          "drivers/gpu/drm/i915/selftests/i915_gem_context.c||drivers/gpu/drm/i915/selftests/i915_gem_context.c",
          "drivers/gpu/drm/i915/selftests/i915_gem_gtt.c||drivers/gpu/drm/i915/selftests/i915_gem_gtt.c",
          "drivers/gpu/drm/i915/selftests/mock_context.c||drivers/gpu/drm/i915/selftests/mock_context.c",
          "include/uapi/drm/i915_drm.h||include/uapi/drm/i915_drm.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/gpu/drm/i915/i915_drv.h||drivers/gpu/drm/i915/i915_drv.h",
            "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
          ],
          "candidate": [
            "drivers/gpu/drm/i915/i915_drv.h||drivers/gpu/drm/i915/i915_drv.h",
            "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/i915/i915_drv.c||drivers/gpu/drm/i915/i915_drv.c": [
          "File: drivers/gpu/drm/i915/i915_drv.c -> drivers/gpu/drm/i915/i915_drv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3122:  DRM_IOCTL_DEF_DRV(I915_PERF_ADD_CONFIG, i915_perf_add_config_ioctl, DRM_UNLOCKED|DRM_RENDER_ALLOW),",
          "3123:  DRM_IOCTL_DEF_DRV(I915_PERF_REMOVE_CONFIG, i915_perf_remove_config_ioctl, DRM_UNLOCKED|DRM_RENDER_ALLOW),",
          "3124:  DRM_IOCTL_DEF_DRV(I915_QUERY, i915_query_ioctl, DRM_UNLOCKED|DRM_RENDER_ALLOW),",
          "3125: };",
          "3127: static struct drm_driver driver = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3125:  DRM_IOCTL_DEF_DRV(I915_GEM_VM_CREATE, i915_gem_vm_create_ioctl, DRM_RENDER_ALLOW),",
          "3126:  DRM_IOCTL_DEF_DRV(I915_GEM_VM_DESTROY, i915_gem_vm_destroy_ioctl, DRM_RENDER_ALLOW),",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_drv.h||drivers/gpu/drm/i915/i915_drv.h": [
          "File: drivers/gpu/drm/i915/i915_drv.h -> drivers/gpu/drm/i915/i915_drv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:  struct idr context_idr;",
          "223:  unsigned int bsd_engine;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:  struct idr vm_idr;",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c": [
          "File: drivers/gpu/drm/i915/i915_gem_context.c -> drivers/gpu/drm/i915/i915_gem_context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: #include \"i915_drv.h\"",
          "91: #include \"i915_globals.h\"",
          "92: #include \"i915_trace.h\"",
          "93: #include \"intel_lrc_reg.h\"",
          "94: #include \"intel_workarounds.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93: #include \"i915_user_extensions.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:   list_del(&lut->obj_link);",
          "121:   i915_lut_handle_free(lut);",
          "122:  }",
          "124:  rcu_read_lock();",
          "125:  radix_tree_for_each_slot(slot, &ctx->handles_vma, &iter, 0) {",
          "126:   struct i915_vma *vma = rcu_dereference_raw(*slot);",
          "128:   radix_tree_iter_delete(&ctx->handles_vma, &iter, slot);",
          "129:   __i915_gem_object_release_unless_active(vma->obj);",
          "130:  }",
          "131:  rcu_read_unlock();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124:  INIT_LIST_HEAD(&ctx->handles_list);",
          "132:   vma->open_count--;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "307:  lut_close(ctx);",
          "311:  ctx->file_priv = ERR_PTR(-EBADF);",
          "312:  i915_gem_context_put(ctx);",
          "",
          "[Removed Lines]",
          "308:  if (ctx->ppgtt)",
          "309:   i915_ppgtt_close(&ctx->ppgtt->vm);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "378:  return ctx;",
          "379: }",
          "381: static struct i915_gem_context *",
          "382: i915_gem_create_context(struct drm_i915_private *dev_priv)",
          "383: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "383: static struct i915_hw_ppgtt *",
          "384: __set_ppgtt(struct i915_gem_context *ctx, struct i915_hw_ppgtt *ppgtt)",
          "385: {",
          "386:  struct i915_hw_ppgtt *old = ctx->ppgtt;",
          "388:  ctx->ppgtt = i915_ppgtt_get(ppgtt);",
          "389:  ctx->desc_template = default_desc_template(ctx->i915, ppgtt);",
          "391:  return old;",
          "392: }",
          "394: static void __assign_ppgtt(struct i915_gem_context *ctx,",
          "395:       struct i915_hw_ppgtt *ppgtt)",
          "396: {",
          "397:  if (ppgtt == ctx->ppgtt)",
          "398:   return;",
          "400:  ppgtt = __set_ppgtt(ctx, ppgtt);",
          "401:  if (ppgtt)",
          "402:   i915_ppgtt_put(ppgtt);",
          "403: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "403:    return ERR_CAST(ppgtt);",
          "404:   }",
          "408:  }",
          "410:  trace_i915_context_create(ctx);",
          "",
          "[Removed Lines]",
          "406:   ctx->ppgtt = ppgtt;",
          "407:   ctx->desc_template = default_desc_template(dev_priv, ppgtt);",
          "",
          "[Added Lines]",
          "430:   __assign_ppgtt(ctx, ppgtt);",
          "431:   i915_ppgtt_put(ppgtt);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "583:  return 0;",
          "584: }",
          "586: static int gem_context_register(struct i915_gem_context *ctx,",
          "587:     struct drm_i915_file_private *fpriv)",
          "588: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "610: static int vm_idr_cleanup(int id, void *p, void *data)",
          "611: {",
          "612:  i915_ppgtt_put(p);",
          "613:  return 0;",
          "614: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "621:  struct i915_gem_context *ctx;",
          "622:  int err;",
          "625:  mutex_init(&file_priv->context_idr_lock);",
          "627:  mutex_lock(&i915->drm.struct_mutex);",
          "628:  ctx = i915_gem_create_context(i915);",
          "",
          "[Removed Lines]",
          "624:  idr_init(&file_priv->context_idr);",
          "",
          "[Added Lines]",
          "655:  mutex_init(&file_priv->vm_idr_lock);",
          "657:  idr_init(&file_priv->context_idr);",
          "658:  idr_init_base(&file_priv->vm_idr, 1);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "646:  context_close(ctx);",
          "647:  mutex_unlock(&i915->drm.struct_mutex);",
          "648: err:",
          "650:  idr_destroy(&file_priv->context_idr);",
          "651:  return PTR_ERR(ctx);",
          "652: }",
          "",
          "[Removed Lines]",
          "649:  mutex_destroy(&file_priv->context_idr_lock);",
          "",
          "[Added Lines]",
          "682:  idr_destroy(&file_priv->vm_idr);",
          "684:  mutex_destroy(&file_priv->vm_idr_lock);",
          "685:  mutex_destroy(&file_priv->context_idr_lock);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "660:  idr_for_each(&file_priv->context_idr, context_idr_cleanup, NULL);",
          "661:  idr_destroy(&file_priv->context_idr);",
          "662:  mutex_destroy(&file_priv->context_idr_lock);",
          "663: }",
          "665: static struct i915_request *",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "699:  idr_for_each(&file_priv->vm_idr, vm_idr_cleanup, NULL);",
          "700:  idr_destroy(&file_priv->vm_idr);",
          "701:  mutex_destroy(&file_priv->vm_idr_lock);",
          "702: }",
          "704: int i915_gem_vm_create_ioctl(struct drm_device *dev, void *data,",
          "705:         struct drm_file *file)",
          "706: {",
          "707:  struct drm_i915_private *i915 = to_i915(dev);",
          "708:  struct drm_i915_gem_vm_control *args = data;",
          "709:  struct drm_i915_file_private *file_priv = file->driver_priv;",
          "710:  struct i915_hw_ppgtt *ppgtt;",
          "711:  int err;",
          "713:  if (!HAS_FULL_PPGTT(i915))",
          "714:   return -ENODEV;",
          "716:  if (args->flags)",
          "717:   return -EINVAL;",
          "719:  ppgtt = i915_ppgtt_create(i915);",
          "720:  if (IS_ERR(ppgtt))",
          "721:   return PTR_ERR(ppgtt);",
          "723:  ppgtt->vm.file = file_priv;",
          "725:  if (args->extensions) {",
          "726:   err = i915_user_extensions(u64_to_user_ptr(args->extensions),",
          "727:         NULL, 0,",
          "728:         ppgtt);",
          "729:   if (err)",
          "730:    goto err_put;",
          "731:  }",
          "733:  err = mutex_lock_interruptible(&file_priv->vm_idr_lock);",
          "734:  if (err)",
          "735:   goto err_put;",
          "737:  err = idr_alloc(&file_priv->vm_idr, ppgtt, 0, 0, GFP_KERNEL);",
          "738:  if (err < 0)",
          "739:   goto err_unlock;",
          "742:  ppgtt->user_handle = err;",
          "744:  mutex_unlock(&file_priv->vm_idr_lock);",
          "746:  args->vm_id = err;",
          "747:  return 0;",
          "749: err_unlock:",
          "750:  mutex_unlock(&file_priv->vm_idr_lock);",
          "751: err_put:",
          "752:  i915_ppgtt_put(ppgtt);",
          "753:  return err;",
          "754: }",
          "756: int i915_gem_vm_destroy_ioctl(struct drm_device *dev, void *data,",
          "757:          struct drm_file *file)",
          "758: {",
          "759:  struct drm_i915_file_private *file_priv = file->driver_priv;",
          "760:  struct drm_i915_gem_vm_control *args = data;",
          "761:  struct i915_hw_ppgtt *ppgtt;",
          "762:  int err;",
          "763:  u32 id;",
          "765:  if (args->flags)",
          "766:   return -EINVAL;",
          "768:  if (args->extensions)",
          "769:   return -EINVAL;",
          "771:  id = args->vm_id;",
          "772:  if (!id)",
          "773:   return -ENOENT;",
          "775:  err = mutex_lock_interruptible(&file_priv->vm_idr_lock);",
          "776:  if (err)",
          "777:   return err;",
          "779:  ppgtt = idr_remove(&file_priv->vm_idr, id);",
          "780:  if (ppgtt) {",
          "781:   GEM_BUG_ON(ppgtt->user_handle != id);",
          "782:   ppgtt->user_handle = 0;",
          "783:  }",
          "785:  mutex_unlock(&file_priv->vm_idr_lock);",
          "786:  if (!ppgtt)",
          "787:   return -ENOENT;",
          "789:  i915_ppgtt_put(ppgtt);",
          "790:  return 0;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "702: I915_SELFTEST_DECLARE(static unsigned long context_barrier_inject_fault);",
          "703: static int context_barrier_task(struct i915_gem_context *ctx,",
          "704:     unsigned long engines,",
          "705:     void (*task)(void *data),",
          "706:     void *data)",
          "707: {",
          "708:  struct drm_i915_private *i915 = ctx->i915;",
          "709:  struct context_barrier_task *cb;",
          "711:  intel_wakeref_t wakeref;",
          "712:  int err = 0;",
          "",
          "[Removed Lines]",
          "710:  struct intel_context *ce;",
          "",
          "[Added Lines]",
          "833:     int (*emit)(struct i915_request *rq, void *data),",
          "839:  struct intel_context *ce, *next;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "722:  i915_active_acquire(&cb->base);",
          "724:  wakeref = intel_runtime_pm_get(i915);",
          "726:   struct intel_engine_cs *engine = ce->engine;",
          "727:   struct i915_request *rq;",
          "730:    continue;",
          "732:   if (I915_SELFTEST_ONLY(context_barrier_inject_fault &",
          "",
          "[Removed Lines]",
          "725:  list_for_each_entry(ce, &ctx->active_engines, active_link) {",
          "729:   if (!(ce->engine->mask & engines))",
          "",
          "[Added Lines]",
          "854:  rbtree_postorder_for_each_entry_safe(ce, next, &ctx->hw_contexts, node) {",
          "858:   if (!(engine->mask & engines))",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "741:    break;",
          "742:   }",
          "745:   i915_request_add(rq);",
          "746:   if (err)",
          "747:    break;",
          "",
          "[Removed Lines]",
          "744:   err = i915_active_ref(&cb->base, rq->fence.context, rq);",
          "",
          "[Added Lines]",
          "873:   err = 0;",
          "874:   if (emit)",
          "875:    err = emit(rq, data);",
          "876:   if (err == 0)",
          "877:    err = i915_active_ref(&cb->base, rq->fence.context, rq);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "804:  return 0;",
          "805: }",
          "807: static bool client_is_banned(struct drm_i915_file_private *file_priv)",
          "808: {",
          "809:  return atomic_read(&file_priv->ban_score) >= I915_CLIENT_SCORE_BANNED;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "941: static int get_ppgtt(struct i915_gem_context *ctx,",
          "942:        struct drm_i915_gem_context_param *args)",
          "943: {",
          "944:  struct drm_i915_file_private *file_priv = ctx->file_priv;",
          "945:  struct i915_hw_ppgtt *ppgtt;",
          "946:  int ret;",
          "948:  if (!ctx->ppgtt)",
          "949:   return -ENODEV;",
          "952:  ret = mutex_lock_interruptible(&ctx->i915->drm.struct_mutex);",
          "953:  if (ret)",
          "954:   return ret;",
          "956:  ppgtt = i915_ppgtt_get(ctx->ppgtt);",
          "957:  mutex_unlock(&ctx->i915->drm.struct_mutex);",
          "959:  ret = mutex_lock_interruptible(&file_priv->vm_idr_lock);",
          "960:  if (ret)",
          "961:   goto err_put;",
          "963:  if (!ppgtt->user_handle) {",
          "964:   ret = idr_alloc(&file_priv->vm_idr, ppgtt, 0, 0, GFP_KERNEL);",
          "965:   GEM_BUG_ON(!ret);",
          "966:   if (ret < 0)",
          "967:    goto err_unlock;",
          "969:   ppgtt->user_handle = ret;",
          "970:   i915_ppgtt_get(ppgtt);",
          "971:  }",
          "973:  args->size = 0;",
          "974:  args->value = ppgtt->user_handle;",
          "976:  ret = 0;",
          "977: err_unlock:",
          "978:  mutex_unlock(&file_priv->vm_idr_lock);",
          "979: err_put:",
          "980:  i915_ppgtt_put(ppgtt);",
          "981:  return ret;",
          "982: }",
          "984: static void set_ppgtt_barrier(void *data)",
          "985: {",
          "986:  struct i915_hw_ppgtt *old = data;",
          "988:  if (INTEL_GEN(old->vm.i915) < 8)",
          "989:   gen6_ppgtt_unpin_all(old);",
          "991:  i915_ppgtt_put(old);",
          "992: }",
          "994: static int emit_ppgtt_update(struct i915_request *rq, void *data)",
          "995: {",
          "996:  struct i915_hw_ppgtt *ppgtt = rq->gem_context->ppgtt;",
          "997:  struct intel_engine_cs *engine = rq->engine;",
          "998:  u32 *cs;",
          "999:  int i;",
          "1001:  if (i915_vm_is_4lvl(&ppgtt->vm)) {",
          "1002:   const dma_addr_t pd_daddr = px_dma(&ppgtt->pml4);",
          "1004:   cs = intel_ring_begin(rq, 6);",
          "1005:   if (IS_ERR(cs))",
          "1006:    return PTR_ERR(cs);",
          "1016:   intel_ring_advance(rq, cs);",
          "1017:  } else if (HAS_LOGICAL_RING_CONTEXTS(engine->i915)) {",
          "1018:   cs = intel_ring_begin(rq, 4 * GEN8_3LVL_PDPES + 2);",
          "1019:   if (IS_ERR(cs))",
          "1020:    return PTR_ERR(cs);",
          "1023:   for (i = GEN8_3LVL_PDPES; i--; ) {",
          "1024:    const dma_addr_t pd_daddr = i915_page_dir_dma_addr(ppgtt, i);",
          "1030:   }",
          "1032:   intel_ring_advance(rq, cs);",
          "1033:  } else {",
          "1035:   gen6_ppgtt_pin(ppgtt);",
          "1036:  }",
          "1038:  return 0;",
          "1039: }",
          "1041: static int set_ppgtt(struct i915_gem_context *ctx,",
          "1042:        struct drm_i915_gem_context_param *args)",
          "1043: {",
          "1044:  struct drm_i915_file_private *file_priv = ctx->file_priv;",
          "1045:  struct i915_hw_ppgtt *ppgtt, *old;",
          "1046:  int err;",
          "1048:  if (args->size)",
          "1049:   return -EINVAL;",
          "1051:  if (!ctx->ppgtt)",
          "1052:   return -ENODEV;",
          "1054:  if (upper_32_bits(args->value))",
          "1055:   return -ENOENT;",
          "1057:  err = mutex_lock_interruptible(&file_priv->vm_idr_lock);",
          "1058:  if (err)",
          "1059:   return err;",
          "1061:  ppgtt = idr_find(&file_priv->vm_idr, args->value);",
          "1062:  if (ppgtt) {",
          "1063:   GEM_BUG_ON(ppgtt->user_handle != args->value);",
          "1064:   i915_ppgtt_get(ppgtt);",
          "1065:  }",
          "1066:  mutex_unlock(&file_priv->vm_idr_lock);",
          "1067:  if (!ppgtt)",
          "1068:   return -ENOENT;",
          "1070:  err = mutex_lock_interruptible(&ctx->i915->drm.struct_mutex);",
          "1071:  if (err)",
          "1072:   goto out;",
          "1074:  if (ppgtt == ctx->ppgtt)",
          "1075:   goto unlock;",
          "1078:  lut_close(ctx);",
          "1080:  old = __set_ppgtt(ctx, ppgtt);",
          "1087:  err = context_barrier_task(ctx, ALL_ENGINES,",
          "1088:        emit_ppgtt_update,",
          "1089:        set_ppgtt_barrier,",
          "1090:        old);",
          "1091:  if (err) {",
          "1092:   ctx->ppgtt = old;",
          "1093:   ctx->desc_template = default_desc_template(ctx->i915, old);",
          "1094:   i915_ppgtt_put(ppgtt);",
          "1095:  }",
          "1097: unlock:",
          "1098:  mutex_unlock(&ctx->i915->drm.struct_mutex);",
          "1100: out:",
          "1101:  i915_ppgtt_put(ppgtt);",
          "1102:  return err;",
          "1103: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "984:  case I915_CONTEXT_PARAM_SSEU:",
          "985:   ret = get_sseu(ctx, args);",
          "986:   break;",
          "987:  default:",
          "988:   ret = -EINVAL;",
          "989:   break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1285:  case I915_CONTEXT_PARAM_VM:",
          "1286:   ret = get_ppgtt(ctx, args);",
          "1287:   break;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1285:   return -ENOENT;",
          "1287:  switch (args->param) {",
          "1291:  case I915_CONTEXT_PARAM_NO_ZEROMAP:",
          "1292:   if (args->size)",
          "1293:    ret = -EINVAL;",
          "",
          "[Removed Lines]",
          "1288:  case I915_CONTEXT_PARAM_BAN_PERIOD:",
          "1289:   ret = -EINVAL;",
          "1290:   break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1343:      I915_USER_PRIORITY(priority);",
          "1344:   }",
          "1345:   break;",
          "1346:  case I915_CONTEXT_PARAM_SSEU:",
          "1347:   ret = set_sseu(ctx, args);",
          "1348:   break;",
          "1349:  default:",
          "1350:   ret = -EINVAL;",
          "1351:   break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1649:  case I915_CONTEXT_PARAM_VM:",
          "1650:   ret = set_ppgtt(ctx, args);",
          "1651:   break;",
          "1653:  case I915_CONTEXT_PARAM_BAN_PERIOD:",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gem_context.h||drivers/gpu/drm/i915/i915_gem_context.h": [
          "File: drivers/gpu/drm/i915/i915_gem_context.h -> drivers/gpu/drm/i915/i915_gem_context.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "148: struct i915_gem_context *",
          "149: i915_gem_context_create_gvt(struct drm_device *dev);",
          "151: int i915_gem_context_create_ioctl(struct drm_device *dev, void *data,",
          "152:       struct drm_file *file);",
          "153: int i915_gem_context_destroy_ioctl(struct drm_device *dev, void *data,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151: int i915_gem_vm_create_ioctl(struct drm_device *dev, void *data,",
          "152:         struct drm_file *file);",
          "153: int i915_gem_vm_destroy_ioctl(struct drm_device *dev, void *data,",
          "154:          struct drm_file *file);",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gem_gtt.c||drivers/gpu/drm/i915/i915_gem_gtt.c": [
          "File: drivers/gpu/drm/i915/i915_gem_gtt.c -> drivers/gpu/drm/i915/i915_gem_gtt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1937:  struct gen6_hw_ppgtt *ppgtt = to_gen6_ppgtt(base);",
          "1938:  int err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1940:  GEM_BUG_ON(ppgtt->base.vm.closed);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1975:  i915_vma_unpin(ppgtt->vma);",
          "1976: }",
          "1978: static struct i915_hw_ppgtt *gen6_ppgtt_create(struct drm_i915_private *i915)",
          "1979: {",
          "1980:  struct i915_ggtt * const ggtt = &i915->ggtt;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1980: void gen6_ppgtt_unpin_all(struct i915_hw_ppgtt *base)",
          "1981: {",
          "1982:  struct gen6_hw_ppgtt *ppgtt = to_gen6_ppgtt(base);",
          "1984:  if (!ppgtt->pin_count)",
          "1985:   return;",
          "1987:  ppgtt->pin_count = 0;",
          "1988:  i915_vma_unpin(ppgtt->vma);",
          "1989: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2082:  return ppgtt;",
          "2083: }",
          "2091: static void ppgtt_destroy_vma(struct i915_address_space *vm)",
          "2092: {",
          "2093:  struct list_head *phases[] = {",
          "",
          "[Removed Lines]",
          "2085: void i915_ppgtt_close(struct i915_address_space *vm)",
          "2086: {",
          "2087:  GEM_BUG_ON(vm->closed);",
          "2088:  vm->closed = true;",
          "2089: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/i915_gem_gtt.h||drivers/gpu/drm/i915/i915_gem_gtt.h": [
          "File: drivers/gpu/drm/i915/i915_gem_gtt.h -> drivers/gpu/drm/i915/i915_gem_gtt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "398:  };",
          "399: };",
          "401: struct gen6_hw_ppgtt {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "400:  u32 user_handle;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "605: int i915_ppgtt_init_hw(struct drm_i915_private *dev_priv);",
          "607: struct i915_hw_ppgtt *i915_ppgtt_create(struct drm_i915_private *dev_priv);",
          "609: void i915_ppgtt_release(struct kref *kref);",
          "612: {",
          "615: }",
          "617: static inline void i915_ppgtt_put(struct i915_hw_ppgtt *ppgtt)",
          "",
          "[Removed Lines]",
          "608: void i915_ppgtt_close(struct i915_address_space *vm);",
          "611: static inline void i915_ppgtt_get(struct i915_hw_ppgtt *ppgtt)",
          "613:  if (ppgtt)",
          "614:   kref_get(&ppgtt->ref);",
          "",
          "[Added Lines]",
          "612: static inline struct i915_hw_ppgtt *i915_ppgtt_get(struct i915_hw_ppgtt *ppgtt)",
          "614:  kref_get(&ppgtt->ref);",
          "615:  return ppgtt;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "623: int gen6_ppgtt_pin(struct i915_hw_ppgtt *base);",
          "624: void gen6_ppgtt_unpin(struct i915_hw_ppgtt *base);",
          "626: void i915_check_and_clear_faults(struct drm_i915_private *dev_priv);",
          "627: void i915_gem_suspend_gtt_mappings(struct drm_i915_private *dev_priv);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "626: void gen6_ppgtt_unpin_all(struct i915_hw_ppgtt *base);",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/selftests/huge_pages.c||drivers/gpu/drm/i915/selftests/huge_pages.c": [
          "File: drivers/gpu/drm/i915/selftests/huge_pages.c -> drivers/gpu/drm/i915/selftests/huge_pages.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1732:  err = i915_subtests(tests, ppgtt);",
          "1734: out_close:",
          "1736:  i915_ppgtt_put(ppgtt);",
          "1738: out_unlock:",
          "",
          "[Removed Lines]",
          "1735:  i915_ppgtt_close(&ppgtt->vm);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/selftests/i915_gem_context.c||drivers/gpu/drm/i915/selftests/i915_gem_context.c": [
          "File: drivers/gpu/drm/i915/selftests/i915_gem_context.c -> drivers/gpu/drm/i915/selftests/i915_gem_context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:  return 0;",
          "374: }",
          "377: {",
          "378:  unsigned int n, m, needs_flush;",
          "379:  int err;",
          "",
          "[Removed Lines]",
          "376: static int cpu_check(struct drm_i915_gem_object *obj, unsigned int max)",
          "",
          "[Added Lines]",
          "376: static noinline int cpu_check(struct drm_i915_gem_object *obj,",
          "377:          unsigned int idx, unsigned int max)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "392:   for (m = 0; m < max; m++) {",
          "393:    if (map[m] != m) {",
          "396:     err = -EINVAL;",
          "397:     goto out_unmap;",
          "398:    }",
          "",
          "[Removed Lines]",
          "394:     pr_err(\"Invalid value at page %d, offset %d: found %x expected %x\\n\",",
          "395:            n, m, map[m], m);",
          "",
          "[Added Lines]",
          "395:     pr_err(\"%pS: Invalid value at object %d page %d/%ld, offset %d/%d: found %x expected %x\\n\",",
          "396:            __builtin_return_address(0), idx,",
          "397:            n, real_page_count(obj), m, max,",
          "398:            map[m], m);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "401:   for (; m < DW_PER_PAGE; m++) {",
          "402:    if (map[m] != STACK_MAGIC) {",
          "405:     err = -EINVAL;",
          "406:     goto out_unmap;",
          "407:    }",
          "",
          "[Removed Lines]",
          "403:     pr_err(\"Invalid value at page %d, offset %d: found %x expected %x\\n\",",
          "404:            n, m, map[m], STACK_MAGIC);",
          "",
          "[Added Lines]",
          "406:     pr_err(\"%pS: Invalid value at object %d page %d, offset %d: found %x expected %x (uninitialised)\\n\",",
          "407:            __builtin_return_address(0), idx, n, m,",
          "408:            map[m], STACK_MAGIC);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "479: static int igt_ctx_exec(void *arg)",
          "480: {",
          "481:  struct drm_i915_private *i915 = arg;",
          "488:  int err = -ENODEV;",
          "",
          "[Removed Lines]",
          "482:  struct drm_i915_gem_object *obj = NULL;",
          "483:  unsigned long ncontexts, ndwords, dw;",
          "484:  struct igt_live_test t;",
          "485:  struct drm_file *file;",
          "486:  IGT_TIMEOUT(end_time);",
          "487:  LIST_HEAD(objects);",
          "",
          "[Added Lines]",
          "486:  struct intel_engine_cs *engine;",
          "487:  enum intel_engine_id id;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "496:  if (!DRIVER_CAPS(i915)->has_logical_contexts)",
          "497:   return 0;",
          "499:  file = mock_file(i915);",
          "500:  if (IS_ERR(file))",
          "501:   return PTR_ERR(file);",
          "503:  mutex_lock(&i915->drm.struct_mutex);",
          "505:  err = igt_live_test_begin(&t, i915, __func__, \"\");",
          "506:  if (err)",
          "507:   goto out_unlock;",
          "524:    intel_wakeref_t wakeref;",
          "532:    if (!obj) {",
          "534:     if (IS_ERR(obj)) {",
          "535:      err = PTR_ERR(obj);",
          "537:     }",
          "538:    }",
          "",
          "[Removed Lines]",
          "509:  ncontexts = 0;",
          "510:  ndwords = 0;",
          "511:  dw = 0;",
          "512:  while (!time_after(jiffies, end_time)) {",
          "513:   struct intel_engine_cs *engine;",
          "514:   struct i915_gem_context *ctx;",
          "515:   unsigned int id;",
          "517:   ctx = live_context(i915, file);",
          "518:   if (IS_ERR(ctx)) {",
          "519:    err = PTR_ERR(ctx);",
          "520:    goto out_unlock;",
          "521:   }",
          "523:   for_each_engine(engine, i915, id) {",
          "526:    if (!engine->context_size)",
          "529:    if (!intel_engine_can_store_dword(engine))",
          "530:     continue;",
          "533:     obj = create_test_object(ctx, file, &objects);",
          "536:      goto out_unlock;",
          "",
          "[Added Lines]",
          "499:  for_each_engine(engine, i915, id) {",
          "500:   struct drm_i915_gem_object *obj = NULL;",
          "501:   unsigned long ncontexts, ndwords, dw;",
          "502:   struct igt_live_test t;",
          "503:   struct drm_file *file;",
          "504:   IGT_TIMEOUT(end_time);",
          "505:   LIST_HEAD(objects);",
          "507:   if (!intel_engine_can_store_dword(engine))",
          "508:    continue;",
          "510:   if (!engine->context_size)",
          "513:   file = mock_file(i915);",
          "514:   if (IS_ERR(file))",
          "515:    return PTR_ERR(file);",
          "517:   mutex_lock(&i915->drm.struct_mutex);",
          "519:   err = igt_live_test_begin(&t, i915, __func__, engine->name);",
          "520:   if (err)",
          "521:    goto out_unlock;",
          "523:   ncontexts = 0;",
          "524:   ndwords = 0;",
          "525:   dw = 0;",
          "526:   while (!time_after(jiffies, end_time)) {",
          "527:    struct i915_gem_context *ctx;",
          "528:    intel_wakeref_t wakeref;",
          "530:    ctx = live_context(i915, file);",
          "531:    if (IS_ERR(ctx)) {",
          "532:     err = PTR_ERR(ctx);",
          "533:     goto out_unlock;",
          "534:    }",
          "536:    if (!obj) {",
          "537:     obj = create_test_object(ctx, file, &objects);",
          "538:     if (IS_ERR(obj)) {",
          "539:      err = PTR_ERR(obj);",
          "540:      goto out_unlock;",
          "541:     }",
          "542:    }",
          "544:    with_intel_runtime_pm(i915, wakeref)",
          "545:     err = gpu_fill(obj, ctx, engine, dw);",
          "546:    if (err) {",
          "547:     pr_err(\"Failed to fill dword %lu [%lu/%lu] with gpu (%s) in ctx %u [full-ppgtt? %s], err=%d\\n\",",
          "548:            ndwords, dw, max_dwords(obj),",
          "549:            engine->name, ctx->hw_id,",
          "550:            yesno(!!ctx->ppgtt), err);",
          "551:     goto out_unlock;",
          "552:    }",
          "554:    if (++dw == max_dwords(obj)) {",
          "555:     obj = NULL;",
          "556:     dw = 0;",
          "557:    }",
          "559:    ndwords++;",
          "560:    ncontexts++;",
          "561:   }",
          "563:   pr_info(\"Submitted %lu contexts to %s, filling %lu dwords\\n\",",
          "564:    ncontexts, engine->name, ndwords);",
          "566:   ncontexts = dw = 0;",
          "567:   list_for_each_entry(obj, &objects, st_link) {",
          "568:    unsigned int rem =",
          "569:     min_t(unsigned int, ndwords - dw, max_dwords(obj));",
          "571:    err = cpu_check(obj, ncontexts++, rem);",
          "572:    if (err)",
          "573:     break;",
          "575:    dw += rem;",
          "576:   }",
          "578: out_unlock:",
          "579:   if (igt_live_test_end(&t))",
          "580:    err = -EIO;",
          "581:   mutex_unlock(&i915->drm.struct_mutex);",
          "583:   mock_file_free(i915, file);",
          "584:   if (err)",
          "585:    return err;",
          "586:  }",
          "588:  return 0;",
          "589: }",
          "591: static int igt_shared_ctx_exec(void *arg)",
          "592: {",
          "593:  struct drm_i915_private *i915 = arg;",
          "594:  struct i915_gem_context *parent;",
          "595:  struct intel_engine_cs *engine;",
          "596:  enum intel_engine_id id;",
          "597:  struct igt_live_test t;",
          "598:  struct drm_file *file;",
          "599:  int err = 0;",
          "606:  if (!DRIVER_CAPS(i915)->has_logical_contexts)",
          "607:   return 0;",
          "615:  parent = live_context(i915, file);",
          "616:  if (IS_ERR(parent)) {",
          "617:   err = PTR_ERR(parent);",
          "618:   goto out_unlock;",
          "619:  }",
          "622:   err = 0;",
          "623:   goto out_unlock;",
          "624:  }",
          "630:  for_each_engine(engine, i915, id) {",
          "631:   unsigned long ncontexts, ndwords, dw;",
          "632:   struct drm_i915_gem_object *obj = NULL;",
          "633:   IGT_TIMEOUT(end_time);",
          "634:   LIST_HEAD(objects);",
          "636:   if (!intel_engine_can_store_dword(engine))",
          "637:    continue;",
          "639:   dw = 0;",
          "640:   ndwords = 0;",
          "641:   ncontexts = 0;",
          "642:   while (!time_after(jiffies, end_time)) {",
          "643:    struct i915_gem_context *ctx;",
          "646:    ctx = kernel_context(i915);",
          "647:    if (IS_ERR(ctx)) {",
          "648:     err = PTR_ERR(ctx);",
          "649:     goto out_test;",
          "650:    }",
          "652:    __assign_ppgtt(ctx, parent->ppgtt);",
          "655:     obj = create_test_object(parent, file, &objects);",
          "658:      kernel_context_close(ctx);",
          "659:      goto out_test;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "545:            ndwords, dw, max_dwords(obj),",
          "546:            engine->name, ctx->hw_id,",
          "547:            yesno(!!ctx->ppgtt), err);",
          "549:    }",
          "551:    if (++dw == max_dwords(obj)) {",
          "552:     obj = NULL;",
          "553:     dw = 0;",
          "554:    }",
          "555:    ndwords++;",
          "556:   }",
          "572:  }",
          "575:  if (igt_live_test_end(&t))",
          "576:   err = -EIO;",
          "577:  mutex_unlock(&i915->drm.struct_mutex);",
          "579:  mock_file_free(i915, file);",
          "",
          "[Removed Lines]",
          "548:     goto out_unlock;",
          "557:   ncontexts++;",
          "558:  }",
          "559:  pr_info(\"Submitted %lu contexts (across %u engines), filling %lu dwords\\n\",",
          "560:   ncontexts, RUNTIME_INFO(i915)->num_engines, ndwords);",
          "562:  dw = 0;",
          "563:  list_for_each_entry(obj, &objects, st_link) {",
          "564:   unsigned int rem =",
          "565:    min_t(unsigned int, ndwords - dw, max_dwords(obj));",
          "567:   err = cpu_check(obj, rem);",
          "568:   if (err)",
          "569:    break;",
          "571:   dw += rem;",
          "574: out_unlock:",
          "",
          "[Added Lines]",
          "671:     kernel_context_close(ctx);",
          "672:     goto out_test;",
          "681:    ncontexts++;",
          "683:    kernel_context_close(ctx);",
          "685:   pr_info(\"Submitted %lu contexts to %s, filling %lu dwords\\n\",",
          "686:    ncontexts, engine->name, ndwords);",
          "688:   ncontexts = dw = 0;",
          "689:   list_for_each_entry(obj, &objects, st_link) {",
          "690:    unsigned int rem =",
          "691:     min_t(unsigned int, ndwords - dw, max_dwords(obj));",
          "693:    err = cpu_check(obj, ncontexts++, rem);",
          "694:    if (err)",
          "695:     goto out_test;",
          "697:    dw += rem;",
          "698:   }",
          "700: out_test:",
          "703: out_unlock:",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1046:  struct drm_i915_gem_object *obj = NULL;",
          "1047:  struct i915_gem_context *ctx;",
          "1048:  struct i915_hw_ppgtt *ppgtt;",
          "1050:  struct igt_live_test t;",
          "1051:  struct drm_file *file;",
          "1052:  I915_RND_STATE(prng);",
          "",
          "[Removed Lines]",
          "1049:  unsigned long ndwords, dw;",
          "",
          "[Added Lines]",
          "1176:  unsigned long idx, ndwords, dw;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1127:   ndwords, RUNTIME_INFO(i915)->num_engines);",
          "1129:  dw = 0;",
          "1130:  list_for_each_entry(obj, &objects, st_link) {",
          "1131:   unsigned int rem =",
          "1132:    min_t(unsigned int, ndwords - dw, max_dwords(obj));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1257:  idx = 0;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1136:   if (i915_gem_object_is_readonly(obj))",
          "1137:    num_writes = 0;",
          "1140:   if (err)",
          "1141:    break;",
          "",
          "[Removed Lines]",
          "1139:   err = cpu_check(obj, num_writes);",
          "",
          "[Added Lines]",
          "1267:   err = cpu_check(obj, idx++, num_writes);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1619:  }",
          "1621:  counter = 0;",
          "1623:  if (err) {",
          "1624:   pr_err(\"Failed at line %d, err=%d\\n\", __LINE__, err);",
          "1625:   goto out;",
          "",
          "[Removed Lines]",
          "1622:  err = context_barrier_task(ctx, 0, mock_barrier_task, &counter);",
          "",
          "[Added Lines]",
          "1750:  err = context_barrier_task(ctx, 0,",
          "1751:        NULL, mock_barrier_task, &counter);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1631:  }",
          "1633:  counter = 0;",
          "1636:  if (err) {",
          "1637:   pr_err(\"Failed at line %d, err=%d\\n\", __LINE__, err);",
          "1638:   goto out;",
          "",
          "[Removed Lines]",
          "1634:  err = context_barrier_task(ctx,",
          "1635:        ALL_ENGINES, mock_barrier_task, &counter);",
          "",
          "[Added Lines]",
          "1763:  err = context_barrier_task(ctx, ALL_ENGINES,",
          "1764:        NULL, mock_barrier_task, &counter);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1656:  counter = 0;",
          "1657:  context_barrier_inject_fault = BIT(RCS0);",
          "1660:  context_barrier_inject_fault = 0;",
          "1661:  if (err == -ENXIO)",
          "1662:   err = 0;",
          "",
          "[Removed Lines]",
          "1658:  err = context_barrier_task(ctx,",
          "1659:        ALL_ENGINES, mock_barrier_task, &counter);",
          "",
          "[Added Lines]",
          "1787:  err = context_barrier_task(ctx, ALL_ENGINES,",
          "1788:        NULL, mock_barrier_task, &counter);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1670:   goto out;",
          "1672:  counter = 0;",
          "1675:  if (err) {",
          "1676:   pr_err(\"Failed at line %d, err=%d\\n\", __LINE__, err);",
          "1677:   goto out;",
          "",
          "[Removed Lines]",
          "1673:  err = context_barrier_task(ctx,",
          "1674:        ALL_ENGINES, mock_barrier_task, &counter);",
          "",
          "[Added Lines]",
          "1802:  err = context_barrier_task(ctx, ALL_ENGINES,",
          "1803:        NULL, mock_barrier_task, &counter);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1719:   SUBTEST(igt_ctx_exec),",
          "1720:   SUBTEST(igt_ctx_readonly),",
          "1721:   SUBTEST(igt_ctx_sseu),",
          "1722:   SUBTEST(igt_vm_isolation),",
          "1723:  };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1851:   SUBTEST(igt_shared_ctx_exec),",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/selftests/i915_gem_gtt.c||drivers/gpu/drm/i915/selftests/i915_gem_gtt.c": [
          "File: drivers/gpu/drm/i915/selftests/i915_gem_gtt.c -> drivers/gpu/drm/i915/selftests/i915_gem_gtt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1021:  err = func(dev_priv, &ppgtt->vm, 0, ppgtt->vm.total, end_time);",
          "1024:  i915_ppgtt_put(ppgtt);",
          "1025: out_unlock:",
          "1026:  mutex_unlock(&dev_priv->drm.struct_mutex);",
          "",
          "[Removed Lines]",
          "1023:  i915_ppgtt_close(&ppgtt->vm);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/gpu/drm/i915/selftests/mock_context.c||drivers/gpu/drm/i915/selftests/mock_context.c": [
          "File: drivers/gpu/drm/i915/selftests/mock_context.c -> drivers/gpu/drm/i915/selftests/mock_context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:   goto err_handles;",
          "56:  if (name) {",
          "57:   ctx->name = kstrdup(name, GFP_KERNEL);",
          "58:   if (!ctx->name)",
          "59:    goto err_put;",
          "63:    goto err_put;",
          "64:  }",
          "66:  return ctx;",
          "",
          "[Removed Lines]",
          "61:   ctx->ppgtt = mock_ppgtt(i915, name);",
          "62:   if (!ctx->ppgtt)",
          "",
          "[Added Lines]",
          "57:   struct i915_hw_ppgtt *ppgtt;",
          "63:   ppgtt = mock_ppgtt(i915, name);",
          "64:   if (!ppgtt)",
          "67:   __set_ppgtt(ctx, ppgtt);",
          "",
          "---------------"
        ],
        "include/uapi/drm/i915_drm.h||include/uapi/drm/i915_drm.h": [
          "File: include/uapi/drm/i915_drm.h -> include/uapi/drm/i915_drm.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "343: #define DRM_I915_PERF_ADD_CONFIG 0x37",
          "344: #define DRM_I915_PERF_REMOVE_CONFIG 0x38",
          "345: #define DRM_I915_QUERY   0x39",
          "348: #define DRM_IOCTL_I915_INIT  DRM_IOW( DRM_COMMAND_BASE + DRM_I915_INIT, drm_i915_init_t)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346: #define DRM_I915_GEM_VM_CREATE  0x3a",
          "347: #define DRM_I915_GEM_VM_DESTROY  0x3b",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "402: #define DRM_IOCTL_I915_PERF_ADD_CONFIG DRM_IOW(DRM_COMMAND_BASE + DRM_I915_PERF_ADD_CONFIG, struct drm_i915_perf_oa_config)",
          "403: #define DRM_IOCTL_I915_PERF_REMOVE_CONFIG DRM_IOW(DRM_COMMAND_BASE + DRM_I915_PERF_REMOVE_CONFIG, __u64)",
          "404: #define DRM_IOCTL_I915_QUERY   DRM_IOWR(DRM_COMMAND_BASE + DRM_I915_QUERY, struct drm_i915_query)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "407: #define DRM_IOCTL_I915_GEM_VM_CREATE DRM_IOWR(DRM_COMMAND_BASE + DRM_I915_GEM_VM_CREATE, struct drm_i915_gem_vm_control)",
          "408: #define DRM_IOCTL_I915_GEM_VM_DESTROY DRM_IOW (DRM_COMMAND_BASE + DRM_I915_GEM_VM_DESTROY, struct drm_i915_gem_vm_control)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1453:  __u32 pad;",
          "1454: };",
          "1456: struct drm_i915_reg_read {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1481: struct drm_i915_gem_vm_control {",
          "1482:  __u64 extensions;",
          "1483:  __u32 flags;",
          "1484:  __u32 vm_id;",
          "1485: };",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1544: #define I915_CONTEXT_PARAM_RECOVERABLE 0x8",
          "1546:  __u64 value;",
          "1547: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1586: #define I915_CONTEXT_PARAM_VM  0x9",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ce25e72cc7794d2428ff0d5730731496a02fbb7",
      "candidate_info": {
        "commit_hash": "9ce25e72cc7794d2428ff0d5730731496a02fbb7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/9ce25e72cc7794d2428ff0d5730731496a02fbb7",
        "files": [
          "drivers/gpu/drm/i915/i915_gem_context.c"
        ],
        "message": "drm/i915: Prevent user context creation while wedged\n\nIntroduce a new ABI method for detecting a wedged driver by reporting\n-EIO from DRM_IOCTL_I915_GEM_CONTEXT_CREATE.\n\nThis came up in considering how to handle context recovery from\nuserspace. There we wish to create a new context after the original is\nbanned (the clients opts into the no recovery after reset strategy) in\norder to rebuild the mesa context from scratch. In doing so, if the\ndevice was wedged and not the context banned, we would fall into a loop\nof permanently trying to recreate the context and never making forward\nprogress. This patch would inform the client that we are no longer able\nto create a context, and the client would have no choice but to abort\n(or at least inform its callers about the lost device for anv).\n\nReferences: https://lists.freedesktop.org/archives/mesa-dev/2019-February/215469.html\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: Mika Kuoppala <mika.kuoppala@linux.intel.com>\nReviewed-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190220225556.28715-1-chris@chris-wilson.co.uk",
        "before_after_code_files": [
          "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
          ],
          "candidate": [
            "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/i915/i915_gem_context.c||drivers/gpu/drm/i915/i915_gem_context.c": [
          "File: drivers/gpu/drm/i915/i915_gem_context.c -> drivers/gpu/drm/i915/i915_gem_context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "802: int i915_gem_context_create_ioctl(struct drm_device *dev, void *data,",
          "803:       struct drm_file *file)",
          "804: {",
          "806:  struct drm_i915_gem_context_create *args = data;",
          "807:  struct drm_i915_file_private *file_priv = file->driver_priv;",
          "808:  struct i915_gem_context *ctx;",
          "809:  int ret;",
          "812:   return -ENODEV;",
          "814:  if (args->pad != 0)",
          "815:   return -EINVAL;",
          "817:  if (client_is_banned(file_priv)) {",
          "818:   DRM_DEBUG(\"client %s[%d] banned from creating ctx\\n\",",
          "819:      current->comm,",
          "",
          "[Removed Lines]",
          "805:  struct drm_i915_private *dev_priv = to_i915(dev);",
          "811:  if (!DRIVER_CAPS(dev_priv)->has_logical_contexts)",
          "",
          "[Added Lines]",
          "805:  struct drm_i915_private *i915 = to_i915(dev);",
          "811:  if (!DRIVER_CAPS(i915)->has_logical_contexts)",
          "817:  ret = i915_terminally_wedged(i915);",
          "818:  if (ret)",
          "819:   return ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "826:  if (ret)",
          "827:   return ret;",
          "830:  mutex_unlock(&dev->struct_mutex);",
          "831:  if (IS_ERR(ctx))",
          "832:   return PTR_ERR(ctx);",
          "",
          "[Removed Lines]",
          "829:  ctx = i915_gem_create_context(dev_priv, file_priv);",
          "",
          "[Added Lines]",
          "833:  ctx = i915_gem_create_context(i915, file_priv);",
          "",
          "---------------"
        ]
      }
    }
  ]
}