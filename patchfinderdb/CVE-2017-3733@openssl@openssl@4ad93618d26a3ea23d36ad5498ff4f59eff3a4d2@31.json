{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3cca3e29f9c694585783074ba5fcc90dfd58c1f7",
      "candidate_info": {
        "commit_hash": "3cca3e29f9c694585783074ba5fcc90dfd58c1f7",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3cca3e29f9c694585783074ba5fcc90dfd58c1f7",
        "files": [
          "test/build.info",
          "test/exdatatest.c",
          "test/recipes/03-test_exdata.t"
        ],
        "message": "Exdata test was never enabled.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2787)\n(cherry picked from commit 629192c1b9f17965e0a6b73229b7b1e004bfbd98)",
        "before_after_code_files": [
          "test/build.info||test/build.info",
          "test/exdatatest.c||test/exdatatest.c",
          "test/recipes/03-test_exdata.t||test/recipes/03-test_exdata.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: IF[{- !$disabled{tests} -}]",
          "2:   PROGRAMS_NO_INST=\\",
          "3:           aborttest \\",
          "5:           ectest ecdsatest ecdhtest gmdifftest pbelutest ideatest \\",
          "6:           md2test md4test md5test \\",
          "7:           hmactest wp_test \\",
          "",
          "[Removed Lines]",
          "4:           sanitytest bntest \\",
          "",
          "[Added Lines]",
          "4:           sanitytest exdatatest bntest \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:   INCLUDE[sanitytest]=../include",
          "27:   DEPEND[sanitytest]=../libcrypto",
          "29:   SOURCE[bntest]=bntest.c",
          "30:   INCLUDE[bntest]=.. ../crypto/include ../include",
          "31:   DEPEND[bntest]=../libcrypto",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:   SOURCE[exdatatest]=exdatatest.c",
          "30:   INCLUDE[exdatatest]=../include",
          "31:   DEPEND[exdatatest]=../libcrypto",
          "",
          "---------------"
        ],
        "test/exdatatest.c||test/exdatatest.c": [
          "File: test/exdatatest.c -> test/exdatatest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include <string.h>",
          "13: #include <stdlib.h>",
          "14: #include <openssl/crypto.h>",
          "20: static void exnew(void *parent, void *ptr, CRYPTO_EX_DATA *ad,",
          "21:           int idx, long argl, void *argp)",
          "22: {",
          "26: }",
          "29:           void *from_d, int idx, long argl, void *argp)",
          "30: {",
          "34:     return 0;",
          "35: }",
          "37: static void exfree(void *parent, void *ptr, CRYPTO_EX_DATA *ad,",
          "38:             int idx, long argl, void *argp)",
          "39: {",
          "43: }",
          "45: typedef struct myobj_st {",
          "46:     CRYPTO_EX_DATA ex_data;",
          "47:     int id;",
          "48: } MYOBJ;",
          "50: static MYOBJ *MYOBJ_new()",
          "51: {",
          "52:     static int count = 0;",
          "53:     MYOBJ *obj = OPENSSL_malloc(sizeof(*obj));",
          "56:     obj->id = ++count;",
          "59:     return obj;",
          "60: }",
          "62: static void MYOBJ_sethello(MYOBJ *obj, char *cp)",
          "63: {",
          "68: }",
          "70: static char *MYOBJ_gethello(MYOBJ *obj)",
          "71: {",
          "73: }",
          "75: static void MYOBJ_free(MYOBJ *obj)",
          "",
          "[Removed Lines]",
          "11: #include <assert.h>",
          "16: static long sargl;",
          "17: static void *sargp;",
          "18: static int sidx;",
          "23:     assert(idx == sidx);",
          "24:     assert(argl == sargl);",
          "25:     assert(argp == sargp);",
          "28: static int exdup(CRYPTO_EX_DATA *to, CRYPTO_EX_DATA *from,",
          "31:     assert(idx == sidx);",
          "32:     assert(argl == sargl);",
          "33:     assert(argp == sargp);",
          "40:     assert(idx == sidx);",
          "41:     assert(argl == sargl);",
          "42:     assert(argp == sargp);",
          "54:     int st;",
          "57:     st = CRYPTO_new_ex_data(CRYPTO_EX_INDEX_APP, obj, &obj->ex_data);",
          "58:     assert(st != 0);",
          "64:     int st;",
          "66:     st = CRYPTO_set_ex_data(&obj->ex_data, sidx, cp);",
          "67:     assert(st != 0);",
          "72:     return CRYPTO_get_ex_data(&obj->ex_data, sidx);",
          "",
          "[Added Lines]",
          "13: #include <assert.h>",
          "16: static long saved_argl;",
          "17: static void *saved_argp;",
          "18: static int saved_idx;",
          "23:     assert(idx == saved_idx);",
          "24:     assert(argl == saved_argl);",
          "25:     assert(argp == saved_argp);",
          "28: static int exdup(CRYPTO_EX_DATA *to, const CRYPTO_EX_DATA *from,",
          "31:     assert(idx == saved_idx);",
          "32:     assert(argl == saved_argl);",
          "33:     assert(argp == saved_argp);",
          "40:     assert(idx == saved_idx);",
          "41:     assert(argl == saved_argl);",
          "42:     assert(argp == saved_argp);",
          "48:     int st;",
          "57:     obj->st = CRYPTO_new_ex_data(CRYPTO_EX_INDEX_APP, obj, &obj->ex_data);",
          "58:     assert(obj->st != 0);",
          "64:     obj->st = CRYPTO_set_ex_data(&obj->ex_data, saved_idx, cp);",
          "65:     assert(obj->st != 0);",
          "70:     return CRYPTO_get_ex_data(&obj->ex_data, saved_idx);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:     char *p;",
          "87:     p = strdup(\"hello world\");",
          "92:     t1 = MYOBJ_new();",
          "93:     t2 = MYOBJ_new();",
          "94:     MYOBJ_sethello(t1, p);",
          "95:     cp = MYOBJ_gethello(t1);",
          "96:     assert(cp == p);",
          "97:     cp = MYOBJ_gethello(t2);",
          "98:     assert(cp == NULL);",
          "99:     MYOBJ_free(t1);",
          "100:     MYOBJ_free(t2);",
          "102:     free(p);",
          "103:     return 0;",
          "104: }",
          "",
          "[Removed Lines]",
          "88:     sargl = 21;",
          "89:     sargp = malloc(1);",
          "90:     sidx = CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_APP, sargl, sargp,",
          "91:                                    exnew, exdup, exfree);",
          "101:     free(sargp);",
          "",
          "[Added Lines]",
          "86:     saved_argl = 21;",
          "87:     saved_argp = malloc(1);",
          "88:     saved_idx = CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_APP,",
          "89:                                         saved_argl, saved_argp,",
          "90:                                         exnew, exdup, exfree);",
          "96:     if (cp != p)",
          "97:         return 1;",
          "100:     if (cp != NULL)",
          "101:         return 1;",
          "104:     free(saved_argp);",
          "",
          "---------------"
        ],
        "test/recipes/03-test_exdata.t||test/recipes/03-test_exdata.t": [
          "File: test/recipes/03-test_exdata.t -> test/recipes/03-test_exdata.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #! /usr/bin/env perl",
          "2: # Copyright 2017 The OpenSSL Project Authors. All Rights Reserved.",
          "3: #",
          "4: # Licensed under the OpenSSL license (the \"License\").  You may not use",
          "5: # this file except in compliance with the License.  You can obtain a copy",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "10: use OpenSSL::Test::Simple;",
          "12: simple_test(\"test_exdata\", \"exdatatest\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c81fa2e187c9dfb2cf67d6e183fee3d2a726c59f",
      "candidate_info": {
        "commit_hash": "c81fa2e187c9dfb2cf67d6e183fee3d2a726c59f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c81fa2e187c9dfb2cf67d6e183fee3d2a726c59f",
        "files": [
          "Configurations/10-main.conf"
        ],
        "message": "Configurations/10-main.conf: omit redundant -lresolv from Solaris configs.\n\nGH#2816\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit 8cfc21f53af5187497a8567bb2801c36472d7016)",
        "before_after_code_files": [
          "Configurations/10-main.conf||Configurations/10-main.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/10-main.conf||Configurations/10-main.conf": [
          "File: Configurations/10-main.conf -> Configurations/10-main.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         inherit_from     => [ \"BASE_unix\" ],",
          "180:         template         => 1,",
          "181:         cflags           => \"-DFILIO_H\",",
          "183:         dso_scheme       => \"dlfcn\",",
          "184:         thread_scheme    => \"pthreads\",",
          "185:         shared_target    => \"solaris-shared\",",
          "",
          "[Removed Lines]",
          "182:         ex_libs          => add(\"-lresolv -lsocket -lnsl -ldl\"),",
          "",
          "[Added Lines]",
          "182:         ex_libs          => add(\"-lsocket -lnsl -ldl\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca0a7a9a4ebe9bb0f646930262f43372fa73254c",
      "candidate_info": {
        "commit_hash": "ca0a7a9a4ebe9bb0f646930262f43372fa73254c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ca0a7a9a4ebe9bb0f646930262f43372fa73254c",
        "files": [
          "crypto/asn1/a_time.c"
        ],
        "message": "Fix potential memory leak in ASN1_TIME_to_generalizedtime()\n\nIf ret is allocated, it may be leaked on error.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2666)\n(cherry picked from commit 4483e23444fa18034344874ffbe67919207e9e47)",
        "before_after_code_files": [
          "crypto/asn1/a_time.c||crypto/asn1/a_time.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_time.c||crypto/asn1/a_time.c": [
          "File: crypto/asn1/a_time.c -> crypto/asn1/a_time.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: ASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(ASN1_TIME *t,",
          "63:                                                    ASN1_GENERALIZEDTIME **out)",
          "64: {",
          "66:     char *str;",
          "67:     int newlen;",
          "",
          "[Removed Lines]",
          "65:     ASN1_GENERALIZEDTIME *ret;",
          "",
          "[Added Lines]",
          "65:     ASN1_GENERALIZEDTIME *ret = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:     if (out == NULL || *out == NULL) {",
          "73:         if ((ret = ASN1_GENERALIZEDTIME_new()) == NULL)",
          "77:     } else",
          "78:         ret = *out;",
          "81:     if (t->type == V_ASN1_GENERALIZEDTIME) {",
          "82:         if (!ASN1_STRING_set(ret, t->data, t->length))",
          "85:     }",
          "88:     if (!ASN1_STRING_set(ret, NULL, t->length + 2))",
          "91:     newlen = t->length + 2 + 1;",
          "92:     str = (char *)ret->data;",
          "",
          "[Removed Lines]",
          "74:             return NULL;",
          "75:         if (out)",
          "83:             return NULL;",
          "84:         return ret;",
          "89:         return NULL;",
          "",
          "[Added Lines]",
          "74:             goto err;",
          "81:             goto err;",
          "82:         goto done;",
          "87:         goto err;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "96:     else",
          "97:         OPENSSL_strlcpy(str, \"20\", newlen);",
          "102: }",
          "104: int ASN1_TIME_set_string(ASN1_TIME *s, const char *str)",
          "105: {",
          "106:     ASN1_TIME t;",
          "",
          "[Removed Lines]",
          "99:     OPENSSL_strlcat(str, (char *)t->data, newlen);",
          "101:     return ret;",
          "",
          "[Added Lines]",
          "97:     OPENSSL_strlcat(str, (const char *)t->data, newlen);",
          "99:  done:",
          "100:    if (out != NULL && *out == NULL)",
          "102:    return ret;",
          "104:  err:",
          "105:     if (out == NULL || *out != ret)",
          "106:         ASN1_GENERALIZEDTIME_free(ret);",
          "107:     return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ba62f06496f809814ab7fd4028887216387d65b",
      "candidate_info": {
        "commit_hash": "2ba62f06496f809814ab7fd4028887216387d65b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2ba62f06496f809814ab7fd4028887216387d65b",
        "files": [
          "crypto/evp/e_aes_cbc_hmac_sha256.c"
        ],
        "message": "Don't access memory before checking the correct length in aesni_cbc_hmac_sha256_ctrl in case EVP_CTRL_AEAD_TLS1_AAD.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3023)\n\n(cherry picked from commit 1b6f5a4d3b8cdb02e0bba6878a2b70c850522440)",
        "before_after_code_files": [
          "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c": [
          "File: crypto/evp/e_aes_cbc_hmac_sha256.c -> crypto/evp/e_aes_cbc_hmac_sha256.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "777:     case EVP_CTRL_AEAD_TLS1_AAD:",
          "778:         {",
          "779:             unsigned char *p = ptr;",
          "782:             if (arg != EVP_AEAD_TLS1_AAD_LEN)",
          "783:                 return -1;",
          "785:             if (EVP_CIPHER_CTX_encrypting(ctx)) {",
          "786:                 key->payload_length = len;",
          "787:                 if ((key->aux.tls_ver =",
          "",
          "[Removed Lines]",
          "780:             unsigned int len = p[arg - 2] << 8 | p[arg - 1];",
          "",
          "[Added Lines]",
          "780:             unsigned int len;",
          "785:             len = p[arg - 2] << 8 | p[arg - 1];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fad4832a121cde93a126a2a3f9b336c439d1749d",
      "candidate_info": {
        "commit_hash": "fad4832a121cde93a126a2a3f9b336c439d1749d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/fad4832a121cde93a126a2a3f9b336c439d1749d",
        "files": [
          "crypto/ui/ui_err.c",
          "crypto/ui/ui_openssl.c",
          "include/openssl/ui.h"
        ],
        "message": "VMS UI_OpenSSL: generate OpenSSL errors when things go wrong.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2063)\n(cherry picked from commit c922ebe23247ff9ee07310fa30647623c0547cd9)",
        "before_after_code_files": [
          "crypto/ui/ui_err.c||crypto/ui/ui_err.c",
          "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c",
          "include/openssl/ui.h||include/openssl/ui.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_err.c||crypto/ui/ui_err.c": [
          "File: crypto/ui/ui_err.c -> crypto/ui/ui_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: # define ERR_REASON(reason) ERR_PACK(ERR_LIB_UI,0,reason)",
          "21: static ERR_STRING_DATA UI_str_functs[] = {",
          "22:     {ERR_FUNC(UI_F_GENERAL_ALLOCATE_BOOLEAN), \"general_allocate_boolean\"},",
          "23:     {ERR_FUNC(UI_F_GENERAL_ALLOCATE_PROMPT), \"general_allocate_prompt\"},",
          "24:     {ERR_FUNC(UI_F_OPEN_CONSOLE), \"open_console\"},",
          "25:     {ERR_FUNC(UI_F_UI_CREATE_METHOD), \"UI_create_method\"},",
          "26:     {ERR_FUNC(UI_F_UI_CTRL), \"UI_ctrl\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:     {ERR_FUNC(UI_F_CLOSE_CONSOLE), \"close_console\"},",
          "23:     {ERR_FUNC(UI_F_ECHO_CONSOLE), \"echo_console\"},",
          "26:     {ERR_FUNC(UI_F_NOECHO_CONSOLE), \"noecho_console\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     {ERR_REASON(UI_R_PROCESSING_ERROR), \"processing error\"},",
          "46:     {ERR_REASON(UI_R_RESULT_TOO_LARGE), \"result too large\"},",
          "47:     {ERR_REASON(UI_R_RESULT_TOO_SMALL), \"result too small\"},",
          "48:     {ERR_REASON(UI_R_UNKNOWN_CONTROL_COMMAND), \"unknown control command\"},",
          "49:     {ERR_REASON(UI_R_UNKNOWN_TTYGET_ERRNO_VALUE),",
          "50:      \"unknown ttyget errno value\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:     {ERR_REASON(UI_R_SYSASSIGN_ERROR), \"sys$assign error\"},",
          "52:     {ERR_REASON(UI_R_SYSDASSGN_ERROR), \"sys$dassgn error\"},",
          "53:     {ERR_REASON(UI_R_SYSQIOW_ERROR), \"sys$qiow error\"},",
          "",
          "---------------"
        ],
        "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c": [
          "File: crypto/ui/ui_openssl.c -> crypto/ui/ui_openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "447:     status = sys$assign(&terminal, &channel, 0, 0);",
          "451:         return 0;",
          "453:     status = sys$qiow(0, channel, IO$_SENSEMODE, &iosb, 0, 0, tty_orig, 12,",
          "454:                       0, 0, 0, 0);",
          "",
          "[Removed Lines]",
          "450:     if (status != SS$_NORMAL)",
          "",
          "[Added Lines]",
          "450:     if (status != SS$_NORMAL) {",
          "451:         char tmp_num[12];",
          "453:         BIO_snprintf(tmp_num, sizeof(tmp_num) - 1, \"%%X%08X\", status);",
          "454:         UIerr(UI_F_OPEN_CONSOLE, UI_R_SYSASSIGN_ERROR);",
          "455:         ERR_add_error_data(2, \"status=\", tmp_num);",
          "457:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "478:         tty_new[2] = tty_orig[2];",
          "479:         status = sys$qiow(0, channel, IO$_SETMODE, &iosb, 0, 0, tty_new, 12,",
          "480:                           0, 0, 0, 0);",
          "482:             return 0;",
          "483:     }",
          "484: #endif",
          "485: #if defined(_WIN32) && !defined(_WIN32_WCE)",
          "",
          "[Removed Lines]",
          "481:         if ((status != SS$_NORMAL) || (iosb.iosb$w_value != SS$_NORMAL))",
          "",
          "[Added Lines]",
          "487:         if ((status != SS$_NORMAL) || (iosb.iosb$w_value != SS$_NORMAL)) {",
          "488:             char tmp_num[2][12];",
          "490:             BIO_snprintf(tmp_num[0], sizeof(tmp_num[0]) - 1, \"%%X%08X\",",
          "491:                          status);",
          "492:             BIO_snprintf(tmp_num[1], sizeof(tmp_num[1]) - 1, \"%%X%08X\",",
          "493:                          iosb.iosb$w_value);",
          "494:             UIerr(UI_F_NOECHO_CONSOLE, UI_R_SYSQIOW_ERROR);",
          "495:             ERR_add_error_data(5, \"status=\", tmp_num[0],",
          "496:                                \",\", \"iosb.iosb$w_value=\", tmp_num[1]);",
          "498:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "510:         tty_new[2] = tty_orig[2];",
          "511:         status = sys$qiow(0, channel, IO$_SETMODE, &iosb, 0, 0, tty_new, 12,",
          "512:                           0, 0, 0, 0);",
          "514:             return 0;",
          "515:     }",
          "516: #endif",
          "517: #if defined(_WIN32) && !defined(_WIN32_WCE)",
          "",
          "[Removed Lines]",
          "513:         if ((status != SS$_NORMAL) || (iosb.iosb$w_value != SS$_NORMAL))",
          "",
          "[Added Lines]",
          "529:         if ((status != SS$_NORMAL) || (iosb.iosb$w_value != SS$_NORMAL)) {",
          "530:             char tmp_num[2][12];",
          "532:             BIO_snprintf(tmp_num[0], sizeof(tmp_num[0]) - 1, \"%%X%08X\",",
          "533:                          status);",
          "534:             BIO_snprintf(tmp_num[1], sizeof(tmp_num[1]) - 1, \"%%X%08X\",",
          "535:                          iosb.iosb$w_value);",
          "536:             UIerr(UI_F_ECHO_CONSOLE, UI_R_SYSQIOW_ERROR);",
          "537:             ERR_add_error_data(5, \"status=\", tmp_num[0],",
          "538:                                \",\", \"iosb.iosb$w_value=\", tmp_num[1]);",
          "540:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "532:         fclose(tty_out);",
          "533: #ifdef OPENSSL_SYS_VMS",
          "534:     status = sys$dassgn(channel);",
          "536:         return 0;",
          "537: #endif",
          "538:     CRYPTO_THREAD_unlock(ui->lock);",
          "",
          "[Removed Lines]",
          "535:     if (status != SS$_NORMAL)",
          "",
          "[Added Lines]",
          "561:     if (status != SS$_NORMAL) {",
          "562:         char tmp_num[12];",
          "564:         BIO_snprintf(tmp_num, sizeof(tmp_num) - 1, \"%%X%08X\", status);",
          "565:         UIerr(UI_F_CLOSE_CONSOLE, UI_R_SYSDASSGN_ERROR);",
          "566:         ERR_add_error_data(2, \"status=\", tmp_num);",
          "568:     }",
          "",
          "---------------"
        ],
        "include/openssl/ui.h||include/openssl/ui.h": [
          "File: include/openssl/ui.h -> include/openssl/ui.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "342: # define UI_F_GENERAL_ALLOCATE_BOOLEAN                    108",
          "343: # define UI_F_GENERAL_ALLOCATE_PROMPT                     109",
          "344: # define UI_F_OPEN_CONSOLE                                114",
          "345: # define UI_F_UI_CREATE_METHOD                            112",
          "346: # define UI_F_UI_CTRL                                     111",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "342: # define UI_F_CLOSE_CONSOLE                               115",
          "343: # define UI_F_ECHO_CONSOLE                                116",
          "346: # define UI_F_NOECHO_CONSOLE                              117",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "362: # define UI_R_PROCESSING_ERROR                            107",
          "363: # define UI_R_RESULT_TOO_LARGE                            100",
          "364: # define UI_R_RESULT_TOO_SMALL                            101",
          "365: # define UI_R_UNKNOWN_CONTROL_COMMAND                     106",
          "366: # define UI_R_UNKNOWN_TTYGET_ERRNO_VALUE                  108",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "368: # define UI_R_SYSASSIGN_ERROR                             109",
          "369: # define UI_R_SYSDASSGN_ERROR                             110",
          "370: # define UI_R_SYSQIOW_ERROR                               111",
          "",
          "---------------"
        ]
      }
    }
  ]
}