{
  "cve_id": "CVE-2018-9989",
  "cve_desc": "ARM mbed TLS before 2.1.11, before 2.7.2, and before 2.8.0 has a buffer over-read in ssl_parse_server_psk_hint() that could cause a crash on invalid input.",
  "repo": "ARMmbed/mbedtls",
  "patch_hash": "740b218386083dc708ce98ccc94a63a95cd5629e",
  "patch_info": {
    "commit_hash": "740b218386083dc708ce98ccc94a63a95cd5629e",
    "repo": "ARMmbed/mbedtls",
    "commit_url": "https://github.com/ARMmbed/mbedtls/commit/740b218386083dc708ce98ccc94a63a95cd5629e",
    "files": [
      "library/ssl_cli.c"
    ],
    "message": "Add bounds check before length read",
    "before_after_code_files": [
      "library/ssl_cli.c||library/ssl_cli.c"
    ]
  },
  "patch_diff": {
    "library/ssl_cli.c||library/ssl_cli.c": [
      "File: library/ssl_cli.c -> library/ssl_cli.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2060:     len = (*p)[0] << 8 | (*p)[1];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2060:     if( (*p) > end - 2 )",
      "2061:     {",
      "2062:         MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"",
      "2063:                                     \"(psk_identity_hint length)\" ) );",
      "2064:         return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );",
      "2065:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5224a7544c95552553e2e6be0b4a789956a6464e",
      "candidate_info": {
        "commit_hash": "5224a7544c95552553e2e6be0b4a789956a6464e",
        "repo": "ARMmbed/mbedtls",
        "commit_url": "https://github.com/ARMmbed/mbedtls/commit/5224a7544c95552553e2e6be0b4a789956a6464e",
        "files": [
          "library/ssl_cli.c"
        ],
        "message": "Prevent arithmetic overflow on bounds check",
        "before_after_code_files": [
          "library/ssl_cli.c||library/ssl_cli.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/Mbed-TLS/mbedtls/pull/1440"
        ],
        "olp_code_files": {
          "patch": [
            "library/ssl_cli.c||library/ssl_cli.c"
          ],
          "candidate": [
            "library/ssl_cli.c||library/ssl_cli.c"
          ]
        }
      },
      "candidate_diff": {
        "library/ssl_cli.c||library/ssl_cli.c": [
          "File: library/ssl_cli.c -> library/ssl_cli.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2066:     len = (*p)[0] << 8 | (*p)[1];",
          "2070:     {",
          "2071:         MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"",
          "2072:                                     \"(psk_identity_hint length)\" ) );",
          "",
          "[Removed Lines]",
          "2069:     if( (*p) + len > end )",
          "",
          "[Added Lines]",
          "2069:     if( (*p) > end - len )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0c161d1956d72eb89c8660965535baeb2ec87dd3",
      "candidate_info": {
        "commit_hash": "0c161d1956d72eb89c8660965535baeb2ec87dd3",
        "repo": "ARMmbed/mbedtls",
        "commit_url": "https://github.com/ARMmbed/mbedtls/commit/0c161d1956d72eb89c8660965535baeb2ec87dd3",
        "files": [
          "library/ssl_cli.c"
        ],
        "message": "Fix bounds check in ssl_parse_server_psk_hint()\n\nIn the previous bounds check `(*p) > end - len`, the computation\nof `end - len` might underflow if `end` is within the first 64KB\nof the address space (note that the length `len` is controlled by\nthe peer). In this case, the bounds check will be bypassed, leading\nto `*p` exceed the message bounds by up to 64KB when leaving\n`ssl_parse_server_psk_hint()`. In a pure PSK-based handshake,\nthis doesn't seem to have any consequences, as `*p*` is not accessed\nafterwards. In a PSK-(EC)DHE handshake, however, `*p` is read from\nin `ssl_parse_server_ecdh_params()` and `ssl_parse_server_dh_params()`\nwhich might lead to an application crash of information leakage.",
        "before_after_code_files": [
          "library/ssl_cli.c||library/ssl_cli.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "library/ssl_cli.c||library/ssl_cli.c"
          ],
          "candidate": [
            "library/ssl_cli.c||library/ssl_cli.c"
          ]
        }
      },
      "candidate_diff": {
        "library/ssl_cli.c||library/ssl_cli.c": [
          "File: library/ssl_cli.c -> library/ssl_cli.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2101:     {",
          "2102:         MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"",
          "2103:                                     \"(psk_identity_hint length)\" ) );",
          "",
          "[Removed Lines]",
          "2100:     if( (*p) > end - 2 )",
          "",
          "[Added Lines]",
          "2100:     if( end - (*p) < 2 )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2106:     len = (*p)[0] << 8 | (*p)[1];",
          "2110:     {",
          "2111:         MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"",
          "2112:                                     \"(psk_identity_hint length)\" ) );",
          "",
          "[Removed Lines]",
          "2109:     if( (*p) > end - len )",
          "",
          "[Added Lines]",
          "2109:     if( end - (*p) < len )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7040553a02ac1454a6b73044f9abd36274d34c08",
      "candidate_info": {
        "commit_hash": "7040553a02ac1454a6b73044f9abd36274d34c08",
        "repo": "ARMmbed/mbedtls",
        "commit_url": "https://github.com/ARMmbed/mbedtls/commit/7040553a02ac1454a6b73044f9abd36274d34c08",
        "files": [
          "library/ssl_cli.c"
        ],
        "message": "Add bounds check before length read",
        "before_after_code_files": [
          "library/ssl_cli.c||library/ssl_cli.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "library/ssl_cli.c||library/ssl_cli.c"
          ],
          "candidate": [
            "library/ssl_cli.c||library/ssl_cli.c"
          ]
        }
      },
      "candidate_diff": {
        "library/ssl_cli.c||library/ssl_cli.c": [
          "File: library/ssl_cli.c -> library/ssl_cli.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1853:     len = (*p)[0] << 8 | (*p)[1];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1853:     if( (*p) > end - 2 )",
          "1854:     {",
          "1855:         MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"",
          "1856:                                     \"(psk_identity_hint length)\" ) );",
          "1857:         return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );",
          "1858:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9e1839bc43536c20cc15dabca0fc8cacebb44f88",
      "candidate_info": {
        "commit_hash": "9e1839bc43536c20cc15dabca0fc8cacebb44f88",
        "repo": "ARMmbed/mbedtls",
        "commit_url": "https://github.com/ARMmbed/mbedtls/commit/9e1839bc43536c20cc15dabca0fc8cacebb44f88",
        "files": [
          "library/ssl_cli.c"
        ],
        "message": "Add bounds check before length read",
        "before_after_code_files": [
          "library/ssl_cli.c||library/ssl_cli.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "library/ssl_cli.c||library/ssl_cli.c"
          ],
          "candidate": [
            "library/ssl_cli.c||library/ssl_cli.c"
          ]
        }
      },
      "candidate_diff": {
        "library/ssl_cli.c||library/ssl_cli.c": [
          "File: library/ssl_cli.c -> library/ssl_cli.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2060:     len = (*p)[0] << 8 | (*p)[1];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2060:     if( (*p) > end - 2 )",
          "2061:     {",
          "2062:         MBEDTLS_SSL_DEBUG_MSG( 1, ( \"bad server key exchange message \"",
          "2063:                                     \"(psk_identity_hint length)\" ) );",
          "2064:         return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );",
          "2065:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}