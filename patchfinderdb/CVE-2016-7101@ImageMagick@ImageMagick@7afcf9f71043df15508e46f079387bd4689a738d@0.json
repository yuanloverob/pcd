{
  "cve_id": "CVE-2016-7101",
  "cve_desc": "The SGI coder in ImageMagick before 7.0.2-10 allows remote attackers to cause a denial of service (out-of-bounds read) via a large row value in an sgi file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "7afcf9f71043df15508e46f079387bd4689a738d",
  "patch_info": {
    "commit_hash": "7afcf9f71043df15508e46f079387bd4689a738d",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/7afcf9f71043df15508e46f079387bd4689a738d",
    "files": [
      "ChangeLog",
      "coders/sgi.c"
    ],
    "message": "Prevent buffer overflow in BMP & SGI coders (bug report from pwchen&rayzhong of tencent)",
    "before_after_code_files": [
      "coders/sgi.c||coders/sgi.c"
    ]
  },
  "patch_diff": {
    "coders/sgi.c||coders/sgi.c": [
      "File: coders/sgi.c -> coders/sgi.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "354:       ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
      "355:     count=ReadBlob(image,sizeof(iris_info.filler),iris_info.filler);",
      "356:     (void) count;",
      "359:     image->depth=(size_t) MagickMin(iris_info.depth,MAGICKCORE_QUANTUM_DEPTH);",
      "360:     if (iris_info.pixel_format == 0)",
      "361:       image->depth=(size_t) MagickMin((size_t) 8*",
      "362:         iris_info.bytes_per_pixel,MAGICKCORE_QUANTUM_DEPTH);",
      "363:     if (iris_info.depth < 3)",
      "364:       {",
      "365:         image->storage_class=PseudoClass;",
      "366:         image->colors=iris_info.bytes_per_pixel > 1 ? 65535 : 256;",
      "",
      "[Removed Lines]",
      "357:     image->columns=iris_info.columns;",
      "358:     image->rows=iris_info.rows;",
      "",
      "[Added Lines]",
      "357:     image->columns=iris_info.columns;",
      "358:     image->rows=iris_info.rows;",
      "364:       {",
      "365:         image->storage_class=PseudoClass;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8f8959033e4e59418d6506b345829af1f7a71127",
      "candidate_info": {
        "commit_hash": "8f8959033e4e59418d6506b345829af1f7a71127",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/8f8959033e4e59418d6506b345829af1f7a71127",
        "files": [
          "coders/sgi.c"
        ],
        "message": "...",
        "before_after_code_files": [
          "coders/sgi.c||coders/sgi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/sgi.c||coders/sgi.c"
          ],
          "candidate": [
            "coders/sgi.c||coders/sgi.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/sgi.c||coders/sgi.c": [
          "File: coders/sgi.c -> coders/sgi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:     iris_info.rows=ReadBlobMSBShort(image);",
          "341:     iris_info.depth=ReadBlobMSBShort(image);",
          "342:     if ((iris_info.depth == 0) || (iris_info.depth > 4))",
          "344:     iris_info.minimum_value=ReadBlobMSBLong(image);",
          "345:     iris_info.maximum_value=ReadBlobMSBLong(image);",
          "346:     iris_info.sans=ReadBlobMSBLong(image);",
          "347:     (void) ReadBlob(image,sizeof(iris_info.name),(unsigned char *)",
          "",
          "[Removed Lines]",
          "343:       ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "",
          "[Added Lines]",
          "343:       ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "345:     iris_info.maximum_value=ReadBlobMSBLong(image);",
          "346:     iris_info.sans=ReadBlobMSBLong(image);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "349:     iris_info.name[sizeof(iris_info.name)-1]='\\0';",
          "350:     if (*iris_info.name != '\\0')",
          "351:       (void) SetImageProperty(image,\"label\",iris_info.name,exception);",
          "353:     if (iris_info.pixel_format != 0)",
          "354:       ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "355:     count=ReadBlob(image,sizeof(iris_info.filler),iris_info.filler);",
          "",
          "[Removed Lines]",
          "352:     iris_info.pixel_format=ReadBlobMSBLong(image);",
          "",
          "[Added Lines]",
          "354:     iris_info.pixel_format=ReadBlobMSBLong(image);",
          "355:     if (iris_info.pixel_format != 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "361:       image->depth=(size_t) MagickMin((size_t) 8*iris_info.bytes_per_pixel,",
          "362:         MAGICKCORE_QUANTUM_DEPTH);",
          "363:     if (iris_info.depth < 3)",
          "367:       }",
          "368:     if (EOFBlob(image) != MagickFalse)",
          "369:       ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "",
          "[Removed Lines]",
          "364:       {",
          "365:         image->storage_class=PseudoClass;",
          "366:         image->colors=iris_info.bytes_per_pixel > 1 ? 65535 : 256;",
          "",
          "[Added Lines]",
          "367:       {",
          "",
          "---------------"
        ]
      }
    }
  ]
}