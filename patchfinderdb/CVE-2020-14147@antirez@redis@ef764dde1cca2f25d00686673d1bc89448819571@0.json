{
  "cve_id": "CVE-2020-14147",
  "cve_desc": "An integer overflow in the getnum function in lua_struct.c in Redis before 6.0.3 allows context-dependent attackers with permission to run Lua code in a Redis session to cause a denial of service (memory corruption and application crash) or possibly bypass intended sandbox restrictions via a large number, which triggers a stack-based buffer overflow. NOTE: this issue exists because of a CVE-2015-8080 regression.",
  "repo": "antirez/redis",
  "patch_hash": "ef764dde1cca2f25d00686673d1bc89448819571",
  "patch_info": {
    "commit_hash": "ef764dde1cca2f25d00686673d1bc89448819571",
    "repo": "antirez/redis",
    "commit_url": "https://github.com/antirez/redis/commit/ef764dde1cca2f25d00686673d1bc89448819571",
    "files": [
      "deps/lua/src/lua_struct.c"
    ],
    "message": "[FIX] revisit CVE-2015-8080 vulnerability",
    "before_after_code_files": [
      "deps/lua/src/lua_struct.c||deps/lua/src/lua_struct.c"
    ]
  },
  "patch_diff": {
    "deps/lua/src/lua_struct.c||deps/lua/src/lua_struct.c": [
      "File: deps/lua/src/lua_struct.c -> deps/lua/src/lua_struct.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "89: } Header;",
      "95:   else {",
      "96:     int a = 0;",
      "97:     do {",
      "98:       a = a*10 + *((*fmt)++) - '0';",
      "99:     } while (isdigit(**fmt));",
      "100:     return a;",
      "",
      "[Removed Lines]",
      "92: static int getnum (const char **fmt, int df) {",
      "",
      "[Added Lines]",
      "92: static int getnum (lua_State *L, const char **fmt, int df) {",
      "98:       if (a > (INT_MAX / 10) || a * 10 > (INT_MAX - (**fmt - '0')))",
      "99:         luaL_error(L, \"integral size overflow\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "115:     case 'f':  return sizeof(float);",
      "116:     case 'd':  return sizeof(double);",
      "117:     case 'x': return 1;",
      "119:     case 'i': case 'I': {",
      "121:       if (sz > MAXINTSIZE)",
      "122:         luaL_error(L, \"integral size %d is larger than limit of %d\",",
      "123:                        sz, MAXINTSIZE);",
      "",
      "[Removed Lines]",
      "118:     case 'c': return getnum(fmt, 1);",
      "120:       int sz = getnum(fmt, sizeof(int));",
      "",
      "[Added Lines]",
      "120:     case 'c': return getnum(L, fmt, 1);",
      "122:       int sz = getnum(L, fmt, sizeof(int));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "150:     case '>': h->endian = BIG; return;",
      "151:     case '<': h->endian = LITTLE; return;",
      "152:     case '!': {",
      "154:       if (!isp2(a))",
      "155:         luaL_error(L, \"alignment %d is not a power of 2\", a);",
      "156:       h->align = a;",
      "",
      "[Removed Lines]",
      "153:       int a = getnum(fmt, MAXALIGN);",
      "",
      "[Added Lines]",
      "155:       int a = getnum(L, fmt, MAXALIGN);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0c952b13d064ad4ab8b4d980ac94359c2c891e29",
      "candidate_info": {
        "commit_hash": "0c952b13d064ad4ab8b4d980ac94359c2c891e29",
        "repo": "antirez/redis",
        "commit_url": "https://github.com/antirez/redis/commit/0c952b13d064ad4ab8b4d980ac94359c2c891e29",
        "files": [
          "deps/lua/src/lua_struct.c"
        ],
        "message": "[FIX] revisit CVE-2015-8080 vulnerability",
        "before_after_code_files": [
          "deps/lua/src/lua_struct.c||deps/lua/src/lua_struct.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "deps/lua/src/lua_struct.c||deps/lua/src/lua_struct.c"
          ],
          "candidate": [
            "deps/lua/src/lua_struct.c||deps/lua/src/lua_struct.c"
          ]
        }
      },
      "candidate_diff": {
        "deps/lua/src/lua_struct.c||deps/lua/src/lua_struct.c": [
          "File: deps/lua/src/lua_struct.c -> deps/lua/src/lua_struct.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: } Header;",
          "95:   else {",
          "96:     int a = 0;",
          "97:     do {",
          "98:       a = a*10 + *((*fmt)++) - '0';",
          "99:     } while (isdigit(**fmt));",
          "100:     return a;",
          "",
          "[Removed Lines]",
          "92: static int getnum (const char **fmt, int df) {",
          "",
          "[Added Lines]",
          "92: static int getnum (lua_State *L, const char **fmt, int df) {",
          "98:       if (a > (INT_MAX / 10) || a * 10 > (INT_MAX - (**fmt - '0')))",
          "99:         luaL_error(L, \"integral size overflow\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:     case 'f':  return sizeof(float);",
          "116:     case 'd':  return sizeof(double);",
          "117:     case 'x': return 1;",
          "119:     case 'i': case 'I': {",
          "121:       if (sz > MAXINTSIZE)",
          "122:         luaL_error(L, \"integral size %d is larger than limit of %d\",",
          "123:                        sz, MAXINTSIZE);",
          "",
          "[Removed Lines]",
          "118:     case 'c': return getnum(fmt, 1);",
          "120:       int sz = getnum(fmt, sizeof(int));",
          "",
          "[Added Lines]",
          "120:     case 'c': return getnum(L, fmt, 1);",
          "122:       int sz = getnum(L, fmt, sizeof(int));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:     case '>': h->endian = BIG; return;",
          "151:     case '<': h->endian = LITTLE; return;",
          "152:     case '!': {",
          "154:       if (!isp2(a))",
          "155:         luaL_error(L, \"alignment %d is not a power of 2\", a);",
          "156:       h->align = a;",
          "",
          "[Removed Lines]",
          "153:       int a = getnum(fmt, MAXALIGN);",
          "",
          "[Added Lines]",
          "155:       int a = getnum(L, fmt, MAXALIGN);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16b2d07f0a9b58027611dab7f97788d37cb5ab84",
      "candidate_info": {
        "commit_hash": "16b2d07f0a9b58027611dab7f97788d37cb5ab84",
        "repo": "antirez/redis",
        "commit_url": "https://github.com/antirez/redis/commit/16b2d07f0a9b58027611dab7f97788d37cb5ab84",
        "files": [
          "deps/lua/src/lua_struct.c"
        ],
        "message": "[FIX] revisit CVE-2015-8080 vulnerability",
        "before_after_code_files": [
          "deps/lua/src/lua_struct.c||deps/lua/src/lua_struct.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "deps/lua/src/lua_struct.c||deps/lua/src/lua_struct.c"
          ],
          "candidate": [
            "deps/lua/src/lua_struct.c||deps/lua/src/lua_struct.c"
          ]
        }
      },
      "candidate_diff": {
        "deps/lua/src/lua_struct.c||deps/lua/src/lua_struct.c": [
          "File: deps/lua/src/lua_struct.c -> deps/lua/src/lua_struct.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: } Header;",
          "95:   else {",
          "96:     int a = 0;",
          "97:     do {",
          "98:       a = a*10 + *((*fmt)++) - '0';",
          "99:     } while (isdigit(**fmt));",
          "100:     return a;",
          "",
          "[Removed Lines]",
          "92: static int getnum (const char **fmt, int df) {",
          "",
          "[Added Lines]",
          "92: static int getnum (lua_State *L, const char **fmt, int df) {",
          "98:       if (a > (INT_MAX / 10) || a * 10 > (INT_MAX - (**fmt - '0')))",
          "99:         luaL_error(L, \"integral size overflow\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:     case 'f':  return sizeof(float);",
          "116:     case 'd':  return sizeof(double);",
          "117:     case 'x': return 1;",
          "119:     case 'i': case 'I': {",
          "121:       if (sz > MAXINTSIZE)",
          "122:         luaL_error(L, \"integral size %d is larger than limit of %d\",",
          "123:                        sz, MAXINTSIZE);",
          "",
          "[Removed Lines]",
          "118:     case 'c': return getnum(fmt, 1);",
          "120:       int sz = getnum(fmt, sizeof(int));",
          "",
          "[Added Lines]",
          "120:     case 'c': return getnum(L, fmt, 1);",
          "122:       int sz = getnum(L, fmt, sizeof(int));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:     case '>': h->endian = BIG; return;",
          "151:     case '<': h->endian = LITTLE; return;",
          "152:     case '!': {",
          "154:       if (!isp2(a))",
          "155:         luaL_error(L, \"alignment %d is not a power of 2\", a);",
          "156:       h->align = a;",
          "",
          "[Removed Lines]",
          "153:       int a = getnum(fmt, MAXALIGN);",
          "",
          "[Added Lines]",
          "155:       int a = getnum(L, fmt, MAXALIGN);",
          "",
          "---------------"
        ]
      }
    }
  ]
}