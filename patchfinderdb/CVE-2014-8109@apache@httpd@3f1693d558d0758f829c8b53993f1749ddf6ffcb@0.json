{
  "cve_id": "CVE-2014-8109",
  "cve_desc": "mod_lua.c in the mod_lua module in the Apache HTTP Server 2.3.x and 2.4.x through 2.4.10 does not support an httpd configuration in which the same Lua authorization provider is used with different arguments within different contexts, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging multiple Require directives, as demonstrated by a configuration that specifies authorization for one group to access a certain directory, and authorization for a second group to access a second directory.",
  "repo": "apache/httpd",
  "patch_hash": "3f1693d558d0758f829c8b53993f1749ddf6ffcb",
  "patch_info": {
    "commit_hash": "3f1693d558d0758f829c8b53993f1749ddf6ffcb",
    "repo": "apache/httpd",
    "commit_url": "https://github.com/apache/httpd/commit/3f1693d558d0758f829c8b53993f1749ddf6ffcb",
    "files": [
      "CHANGES",
      "STATUS",
      "modules/lua/mod_lua.c"
    ],
    "message": "Merge r1642499 from trunk:\n\n  *) SECURITY: CVE-2014-8109 (cve.mitre.org)\n     mod_lua: Fix handling of the Require line when a LuaAuthzProvider is\n     used in multiple Require directives with different arguments.\n     PR57204 [Edward Lu <Chaosed0 gmail.com>]\n\nSubmitted By: Edward Lu\nCommitted By: covener\n\n\nSubmitted by: covener\nReviewed/backported by: jim\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x@1642861 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "modules/lua/mod_lua.c||modules/lua/mod_lua.c"
    ]
  },
  "patch_diff": {
    "modules/lua/mod_lua.c||modules/lua/mod_lua.c": [
      "File: modules/lua/mod_lua.c -> modules/lua/mod_lua.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "66:     const char *file_name;",
      "67:     const char *function_name;",
      "68:     ap_lua_vm_spec *spec;",
      "70: } lua_authz_provider_spec;",
      "72: apr_hash_t *lua_authz_providers;",
      "74: typedef struct",
      "",
      "[Removed Lines]",
      "69:     apr_array_header_t *args;",
      "",
      "[Added Lines]",
      "71: typedef struct {",
      "72:     lua_authz_provider_spec *spec;",
      "73:     apr_array_header_t *args;",
      "74: } lua_authz_provider_func;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1692: {",
      "1693:     const char *provider_name;",
      "1694:     lua_authz_provider_spec *spec;",
      "1696:     apr_pool_userdata_get((void**)&provider_name, AUTHZ_PROVIDER_NAME_NOTE,",
      "1697:                           cmd->temp_pool);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1699:     lua_authz_provider_func *func = apr_pcalloc(cmd->pool, sizeof(lua_authz_provider_func));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1700:     spec = apr_hash_get(lua_authz_providers, provider_name, APR_HASH_KEY_STRING);",
      "1701:     ap_assert(spec != NULL);",
      "1703:     if (require_line && *require_line) {",
      "1704:         const char *arg;",
      "1706:         while ((arg = ap_getword_conf(cmd->pool, &require_line)) && *arg) {",
      "1708:         }",
      "1709:     }",
      "1712:     return NULL;",
      "1713: }",
      "",
      "[Removed Lines]",
      "1705:         spec->args = apr_array_make(cmd->pool, 2, sizeof(const char *));",
      "1707:             APR_ARRAY_PUSH(spec->args, const char *) = arg;",
      "",
      "[Added Lines]",
      "1707:     func->spec = spec;",
      "1711:         func->args = apr_array_make(cmd->pool, 2, sizeof(const char *));",
      "1713:             APR_ARRAY_PUSH(func->args, const char *) = arg;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1722:                                                          &lua_module);",
      "1723:     const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,",
      "1724:                                                      &lua_module);",
      "1726:     int result;",
      "1727:     int nargs = 0;",
      "",
      "[Removed Lines]",
      "1725:     const lua_authz_provider_spec *prov_spec = parsed_require_line;",
      "",
      "[Added Lines]",
      "1731:     const lua_authz_provider_func *prov_func = parsed_require_line;",
      "1732:     const lua_authz_provider_spec *prov_spec = prov_func->spec;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1744:         return AUTHZ_GENERAL_ERROR;",
      "1745:     }",
      "1746:     ap_lua_run_lua_request(L, r);",
      "1748:         int i;",
      "1750:             ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02315)",
      "1751:                           \"Error: authz provider %s: too many arguments\", prov_spec->name);",
      "1752:             ap_lua_release_state(L, spec, r);",
      "1753:             return AUTHZ_GENERAL_ERROR;",
      "1754:         }",
      "1757:             lua_pushstring(L, arg);",
      "1758:         }",
      "1760:     }",
      "1761:     if (lua_pcall(L, 1 + nargs, 1, 0)) {",
      "1762:         const char *err = lua_tostring(L, -1);",
      "",
      "[Removed Lines]",
      "1747:     if (prov_spec->args) {",
      "1749:         if (!lua_checkstack(L, prov_spec->args->nelts)) {",
      "1755:         for (i = 0; i < prov_spec->args->nelts; i++) {",
      "1756:             const char *arg = APR_ARRAY_IDX(prov_spec->args, i, const char *);",
      "1759:         nargs = prov_spec->args->nelts;",
      "",
      "[Added Lines]",
      "1754:     if (prov_func->args) {",
      "1756:         if (!lua_checkstack(L, prov_func->args->nelts)) {",
      "1762:         for (i = 0; i < prov_func->args->nelts; i++) {",
      "1763:             const char *arg = APR_ARRAY_IDX(prov_func->args, i, const char *);",
      "1766:         nargs = prov_func->args->nelts;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "69eb3c6cfc7a8d54cdcbc2130be49481b439cbe2",
      "candidate_info": {
        "commit_hash": "69eb3c6cfc7a8d54cdcbc2130be49481b439cbe2",
        "repo": "apache/httpd",
        "commit_url": "https://github.com/apache/httpd/commit/69eb3c6cfc7a8d54cdcbc2130be49481b439cbe2",
        "files": [
          "CHANGES",
          "STATUS",
          "modules/lua/mod_lua.c"
        ],
        "message": "Merge r1642499 from trunk:\n\n  *) SECURITY: CVE-2014-8109 (cve.mitre.org)\n     mod_lua: Fix handling of the Require line when a LuaAuthzProvider is\n     used in multiple Require directives with different arguments.\n     PR57204 [Edward Lu <Chaosed0 gmail.com>]\n\nSubmitted By: Edward Lu\nCommitted By: covener\n\n\nSubmitted by: covener\nReviewed/backported by: jim\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x@1642861 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "modules/lua/mod_lua.c||modules/lua/mod_lua.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "modules/lua/mod_lua.c||modules/lua/mod_lua.c"
          ],
          "candidate": [
            "modules/lua/mod_lua.c||modules/lua/mod_lua.c"
          ]
        }
      },
      "candidate_diff": {
        "modules/lua/mod_lua.c||modules/lua/mod_lua.c": [
          "File: modules/lua/mod_lua.c -> modules/lua/mod_lua.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     const char *file_name;",
          "67:     const char *function_name;",
          "68:     ap_lua_vm_spec *spec;",
          "70: } lua_authz_provider_spec;",
          "72: apr_hash_t *lua_authz_providers;",
          "74: typedef struct",
          "",
          "[Removed Lines]",
          "69:     apr_array_header_t *args;",
          "",
          "[Added Lines]",
          "71: typedef struct {",
          "72:     lua_authz_provider_spec *spec;",
          "73:     apr_array_header_t *args;",
          "74: } lua_authz_provider_func;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1692: {",
          "1693:     const char *provider_name;",
          "1694:     lua_authz_provider_spec *spec;",
          "1696:     apr_pool_userdata_get((void**)&provider_name, AUTHZ_PROVIDER_NAME_NOTE,",
          "1697:                           cmd->temp_pool);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1699:     lua_authz_provider_func *func = apr_pcalloc(cmd->pool, sizeof(lua_authz_provider_func));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1700:     spec = apr_hash_get(lua_authz_providers, provider_name, APR_HASH_KEY_STRING);",
          "1701:     ap_assert(spec != NULL);",
          "1703:     if (require_line && *require_line) {",
          "1704:         const char *arg;",
          "1706:         while ((arg = ap_getword_conf(cmd->pool, &require_line)) && *arg) {",
          "1708:         }",
          "1709:     }",
          "1712:     return NULL;",
          "1713: }",
          "",
          "[Removed Lines]",
          "1705:         spec->args = apr_array_make(cmd->pool, 2, sizeof(const char *));",
          "1707:             APR_ARRAY_PUSH(spec->args, const char *) = arg;",
          "",
          "[Added Lines]",
          "1707:     func->spec = spec;",
          "1711:         func->args = apr_array_make(cmd->pool, 2, sizeof(const char *));",
          "1713:             APR_ARRAY_PUSH(func->args, const char *) = arg;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1722:                                                          &lua_module);",
          "1723:     const ap_lua_dir_cfg *cfg = ap_get_module_config(r->per_dir_config,",
          "1724:                                                      &lua_module);",
          "1726:     int result;",
          "1727:     int nargs = 0;",
          "",
          "[Removed Lines]",
          "1725:     const lua_authz_provider_spec *prov_spec = parsed_require_line;",
          "",
          "[Added Lines]",
          "1731:     const lua_authz_provider_func *prov_func = parsed_require_line;",
          "1732:     const lua_authz_provider_spec *prov_spec = prov_func->spec;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1744:         return AUTHZ_GENERAL_ERROR;",
          "1745:     }",
          "1746:     ap_lua_run_lua_request(L, r);",
          "1748:         int i;",
          "1750:             ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(02315)",
          "1751:                           \"Error: authz provider %s: too many arguments\", prov_spec->name);",
          "1752:             ap_lua_release_state(L, spec, r);",
          "1753:             return AUTHZ_GENERAL_ERROR;",
          "1754:         }",
          "1757:             lua_pushstring(L, arg);",
          "1758:         }",
          "1760:     }",
          "1761:     if (lua_pcall(L, 1 + nargs, 1, 0)) {",
          "1762:         const char *err = lua_tostring(L, -1);",
          "",
          "[Removed Lines]",
          "1747:     if (prov_spec->args) {",
          "1749:         if (!lua_checkstack(L, prov_spec->args->nelts)) {",
          "1755:         for (i = 0; i < prov_spec->args->nelts; i++) {",
          "1756:             const char *arg = APR_ARRAY_IDX(prov_spec->args, i, const char *);",
          "1759:         nargs = prov_spec->args->nelts;",
          "",
          "[Added Lines]",
          "1754:     if (prov_func->args) {",
          "1756:         if (!lua_checkstack(L, prov_func->args->nelts)) {",
          "1762:         for (i = 0; i < prov_func->args->nelts; i++) {",
          "1763:             const char *arg = APR_ARRAY_IDX(prov_func->args, i, const char *);",
          "1766:         nargs = prov_func->args->nelts;",
          "",
          "---------------"
        ]
      }
    }
  ]
}