{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "593c71678113af5cb78db27c9b44a63315086a7d",
      "candidate_info": {
        "commit_hash": "593c71678113af5cb78db27c9b44a63315086a7d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/593c71678113af5cb78db27c9b44a63315086a7d",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix another problem with corrupt database handling in fts5.\n\nFossilOrigin-Name: fb0d7fba07865ff557bfcdacfda7b625d099ac8b4dcbe0c08cd2d4b84a068bb9",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1651:   iOff += fts5GetVarint32(&a[iOff], nNew);",
          "1653:     p->rc = FTS5_CORRUPT;",
          "1654:     return;",
          "1655:   }",
          "1656:   pIter->term.n = nKeep;",
          "1657:   fts5BufferAppendBlob(&p->rc, &pIter->term, nNew, &a[iOff]);",
          "1658:   iOff += nNew;",
          "1659:   pIter->iTermLeafOffset = iOff;",
          "1660:   pIter->iTermLeafPgno = pIter->iLeafPgno;",
          "",
          "[Removed Lines]",
          "1652:   if( iOff+nNew>pIter->pLeaf->nn ){",
          "",
          "[Added Lines]",
          "1652:   if( iOff+nNew>pIter->pLeaf->nn || nKeep>pIter->term.n ){",
          "1658:   assert( pIter->term.n<=pIter->term.nSpace );",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1128:   SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "1129: } {1 {vtable constructor failed: t1}}",
          "1131: sqlite3_fts5_may_be_corrupt 0",
          "1132: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1130: #--------------------------------------------------------------------------",
          "1131: reset_db",
          "1132: do_test 18.0 {",
          "1133:   sqlite3 db {}",
          "1134:   db deserialize [decode_hexdb {",
          "1135: | size 28672 pagesize 4096 filename c19b.db",
          "1136: | page 1 offset 0",
          "1137: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "1138: |     16: 10 00 01 01 00 40 20 20 00 00 00 01 00 00 00 07   .....@  ........",
          "1139: |     32: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "1140: |     48: 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00   ................",
          "1141: |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01   ................",
          "1142: |     96: 00 2e 30 38 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ..08...........m",
          "1143: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "1144: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "1145: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "1146: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "1147: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "1148: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "1149: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "1150: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "1151: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "1152: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "1153: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "1154: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "1155: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "1156: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "1157: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "1158: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "1159: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "1160: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "1161: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "1162: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "1163: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "1164: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "1165: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "1166: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "1167: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "1168: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "1169: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "1170: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "1171: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "1172: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "1173: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "1174: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "1175: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "1176: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "1177: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "1178: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "1179: | page 2 offset 4096",
          "1180: |      0: 0d 09 a6 00 06 09 22 00 0f e8 09 22 0f bd 0f 2c   ...............,",
          "1181: |     16: 09 bd 09 3c 00 00 00 00 00 00 00 00 00 00 00 00   ...<............",
          "1182: |   2336: 00 00 18 0a 03 00 36 00 00 00 00 01 04 04 00 04   ......6.........",
          "1183: |   2352: 01 01 01 02 01 01 03 01 01 04 01 01 63 90 80 80   ............c...",
          "1184: |   2368: 80 80 01 04 00 81 4a 00 00 00 56 06 30 61 62 61   ......J...V.0aba",
          "1185: |   2384: 63 6b 08 01 04 04 6e 64 6f 6e 03 01 05 01 02 05   ck....ndon......",
          "1186: |   2400: 63 74 69 76 65 08 01 02 04 6c 70 68 61 08 01 02   ctive....lpha...",
          "1187: |   2416: 03 74 6f 6d 08 01 01 06 62 61 63 6b 75 70 08 01   .tom....backup..",
          "1188: |   2432: 01 0c 63 68 61 6e 6e 65 62 6f 6f 6d 65 72 08 01   ..channeboomer..",
          "1189: |   2448: 07 01 6c 08 01 01 04 74 65 73 74 08 01 04 09 0a   ..l....test.....",
          "1190: |   2464: 09 08 07 0a 10 05 0f 18 00 17 30 00 00 00 00 01   ..........0.....",
          "1191: |   2480: 03 03 00 03 01 01 01 02 01 01 03 01 01 8a 53 8c   ..............S.",
          "1192: |   2496: 80 80 80 80 01 04 00 95 2a 00 00 05 35 0d 30 30   ........*...5.00",
          "1193: |   2512: 31 30 66 66 61 30 30 30 66 66 61 05 02 1c 02 49   10ffa000ffa....I",
          "1194: |   2528: 33 34 33 35 32 34 35 34 31 35 34 34 35 32 30 35   3435245415445205",
          "1195: |   2544: 34 34 31 34 32 34 63 34 35 32 30 32 37 37 34 33   441424c452027743",
          "1196: |   2560: 31 35 66 36 39 36 34 37 38 32 37 32 38 37 33 36   15f6964782728736",
          "1197: |   2576: 35 36 37 36 39 36 34 32 63 32 30 37 34 36 35 37   56769642c2074657",
          "1198: |   2592: 32 36 64 32 63 32 30 37 30 05 02 12 02 3b 36 31   26d2c2070....;61",
          "1199: |   2608: 37 32 31 32 31 30 31 37 37 37 34 36 31 36 32 35   7212101777461625",
          "1200: |   2624: 63 36 35 37 34 33 31 35 66 36 33 36 66 36 65 37   c6574315f636f6e7",
          "1201: |   2640: 34 36 35 36 65 37 34 37 34 33 31 35 66 36 33 36   4656e7474315f636",
          "1202: |   2656: 66 36 65 37 34 36 35 36 65 05 04 07 07 01 04 31   f6e74656e......1",
          "1203: |   2672: 66 62 64 05 02 19 01 44 32 34 38 34 38 30 38 30   fbd....D24848080",
          "1204: |   2688: 38 30 38 30 30 31 30 33 30 30 34 65 30 30 30 30   80800103004e0000",
          "1205: |   2704: 30 30 31 65 30 36 33 30 36 31 36 32 36 31 36 33   001e063061626163",
          "1206: |   2720: 36 62 30 31 30 32 30 32 30 34 30 32 36 36 37 34   6b01020204026674",
          "1207: |   2736: 30 32 30 32 30 32 30 34 30 34 36 65 05 02 1a 02   02020204046e....",
          "1208: |   2752: 03 66 65 72 05 02 1d 01 28 33 65 37 34 36 35 36   .fer....(3e74656",
          "1209: |   2768: 65 37 34 32 39 30 64 30 30 30 30 30 30 30 33 30   e74290d000000030",
          "1210: |   2784: 66 62 64 30 30 30 66 65 38 30 66 65 66 30 66 62   fbd000fe80fef0fb",
          "1211: |   2800: 64 05 02 18 01 4a 34 31 35 32 35 39 32 30 34 62   d....J415259204b",
          "1212: |   2816: 34 35 35 39 32 63 32 30 36 32 36 63 36 66 36 33   45592c20626c6f63",
          "1213: |   2832: 36 62 32 30 34 32 34 63 34 66 34 32 32 39 33 61   6b20424c4f42293a",
          "1214: |   2848: 30 31 30 36 31 37 31 31 31 31 30 38 36 33 37 34   0106171111086374",
          "1215: |   2864: 36 31 36 32 36 63 36 35 37 34 33 31 37 34 33 31   61626c6574317431",
          "1216: |   2880: 05 02 16 02 49 33 35 32 34 35 34 31 35 34 34 35   ....I35245415445",
          "1217: |   2896: 32 30 35 36 34 39 35 32 35 34 35 35 34 31 34 63   205649525455414c",
          "1218: |   2912: 32 30 35 34 34 31 34 32 34 63 34 35 32 30 37 34   205441424c452074",
          "1219: |   2928: 33 31 6f 30 35 35 35 33 34 39 34 65 34 37 32 30   31o05553494e4720",
          "1220: |   2944: 36 36 37 34 37 33 33 35 32 38 36 33 36 66 05 02   6674733528636f..",
          "1221: |   2960: 17 02 49 35 32 30 35 34 34 31 34 32 34 63 34 35   ..I5205441424c45",
          "1222: |   2976: 32 30 32 37 37 34 33 31 35 66 36 33 36 66 36 65   202774315f636f6e",
          "1223: |   2992: 37 34 36 35 36 65 37 34 32 37 32 38 36 39 36 34   74656e7427286964",
          "1224: |   3008: 32 30 34 39 34 65 35 34 34 35 34 37 34 35 35 32   20494e5445474552",
          "1225: |   3024: 32 30 35 30 35 32 34 39 34 64 34 31 05 02 0e 44   205052494d41...D",
          "1226: |   3040: 29 62 30 35 30 37 31 37 32 31 32 31 30 31 38 31   )b05071721210181",
          "1227: |   3056: 30 31 37 34 36 31 36 32 36 63 36 35 37 34 33 31   017461626c657431",
          "1228: |   3072: 35 66 36 34 36 66 36 33 37 33 05 02 09 01 4a 35   5f646f6373....J5",
          "1229: |   3088: 32 34 35 34 31 35 34 34 35 32 30 35 34 34 31 34   2454154452054414",
          "1230: |   3104: 32 34 63 34 35 32 30 32 37 37 34 33 31 35 66 36   24c45202774315f6",
          "1231: |   3120: 34 36 31 37 34 36 31 32 37 32 38 36 39 36 34 32   4617461272869642",
          "1232: |   3136: 30 34 39 34 65 35 34 34 35 34 37 34 35 35 32 32   0494e54454745522",
          "1233: |   3152: 30 35 30 35 32 34 39 34 64 05 02 15 03 3a 35 39   05052494d....:59",
          "1234: |   3168: 32 30 34 62 34 35 35 39 32 63 32 30 36 33 33 30   204b45592c206330",
          "1235: |   3184: 32 39 36 39 30 33 30 37 31 37 31 39 31 39 30 31   2969030717191901",
          "1236: |   3200: 38 31 32 64 37 34 36 31 36 32 36 63 36 35 37 34   812d7461626c6574",
          "1237: |   3216: 33 31 35 66 36 39 79 79 05 02 0f 02 49 34 32 30   315f69yy....I420",
          "1238: |   3232: 35 32 34 66 35 37 34 39 34 34 35 35 30 32 30 37   524f574944550207",
          "1239: |   3248: 31 37 31 62 31 62 30 31 38 31 30 31 37 34 36 31   171b1b0181017461",
          "1240: |   3264: 36 32 36 63 36 37 37 34 33 31 35 66 36 34 36 31   626c6774315f6461",
          "1241: |   3280: 37 34 36 31 37 34 33 31 35 66 36 34 36 31 37 34   746174315f646174",
          "1242: |   3296: 36 31 30 32 34 33 05 02 14 02 07 66 36 39 36 34   610243.....f6964",
          "1243: |   3312: 37 38 05 02 11 01 4a 36 34 36 66 36 65 30 33 30   78....J646f6e030",
          "1244: |   3328: 32 30 32 30 34 30 61 30 37 30 35 30 31 30 33 30   202040a070501030",
          "1245: |   3344: 30 31 30 30 33 30 33 30 66 30 61 30 33 30 30 32   01003030f0a03002",
          "1246: |   3360: 34 30 30 30 30 30 30 30 30 30 31 30 31 30 31 30   4000000000101010",
          "1247: |   3376: 30 30 31 30 31 30 31 30 31 30 61 30 30 30 30 30   0010101010a00000",
          "1248: |   3392: 30 05 02 1b 02 49 35 32 37 32 38 36 39 36 34 32   0....I5272869642",
          "1249: |   3408: 30 34 39 34 65 35 34 34 35 34 37 34 35 35 32 32   0494e54454745522",
          "1250: |   3424: 30 35 30 35 32 34 39 34 64 34 31 35 32 35 39 32   05052494d4152592",
          "1251: |   3440: 30 34 62 34 35 35 39 32 63 32 30 37 33 37 61 32   04b45592c20737a2",
          "1252: |   3456: 30 34 32 34 63 34 66 34 32 32 39 35 35 30 34 05   0424c4f42295504.",
          "1253: |   3472: 04 06 07 02 49 37 36 65 36 66 32 63 32 30 35 30   ....I76e6f2c2050",
          "1254: |   3488: 35 32 34 39 34 64 34 31 35 32 35 39 32 30 34 62   52494d415259204b",
          "1255: |   3504: 34 35 35 39 32 38 37 33 36 35 36 37 36 39 36 34   4559287365676964",
          "1256: |   3520: 32 63 32 30 37 34 36 35 37 32 36 64 32 39 32 39   2c207465726d2929",
          "1257: |   3536: 32 30 35 37 34 39 35 34 34 38 34 66 35 35 05 02   20574954484f55..",
          "1258: |   3552: 13 02 49 39 37 61 36 35 37 34 33 31 35 66 36 34   ..I97a6574315f64",
          "1259: |   3568: 36 66 36 33 37 33 36 39 37 61 36 35 30 35 34 33   6f6373697a650543",
          "1260: |   3584: 35 32 34 35 34 31 35 34 34 35 32 30 35 34 34 31   5245415445205441",
          "1261: |   3600: 34 32 34 63 34 35 32 30 32 37 37 34 33 31 35 66   424c45202774315f",
          "1262: |   3616: 36 34 36 66 36 33 37 33 36 39 37 61 05 04 05 07   646f6373697a....",
          "1263: |   3632: 01 0e 37 34 30 34 34 33 35 32 34 35 34 31 35 34   ..74044352454154",
          "1264: |   3648: 05 04 08 07 02 49 36 32 39 32 30 35 37 34 39 35   .....I6292057495",
          "1265: |   3664: 34 34 38 34 66 35 35 35 34 32 30 35 32 34 66 35   4484f555420524f5",
          "1266: |   3680: 37 34 39 34 34 35 62 30 35 30 37 31 37 32 31 32   749445b050717212",
          "1267: |   3696: 31 30 31 38 31 30 31 37 34 36 31 36 32 36 63 36   10181017461626c6",
          "1268: |   3712: 35 37 34 33 31 35 66 36 34 36 66 36 33 37 33 05   574315f646f6373.",
          "1269: |   3728: 02 04 01 06 62 61 63 6b 75 70 05 02 1e 02 05 65   ....backup.....e",
          "1270: |   3744: 61 6d 65 72 05 02 02 02 05 6f 6f 6d 65 72 05 01   amer.....oomer..",
          "1271: |   3760: 02 40 75 6d 6d 32 34 63 34 35 32 30 32 37 37 34   .@umm24c45202774",
          "1272: |   3776: 33 31 35 66 36 33 36 66 36 65 36 36 36 39 36 37   315f636f6e666967",
          "1273: |   3792: 32 37 32 38 36 62 32 30 35 30 35 32 34 39 34 64   27286b205052494d",
          "1274: |   3808: 34 31 35 32 35 39 32 30 34 62 34 35 35 39 32 63   415259204b45592c",
          "1275: |   3824: 32 30 05 02 03 01 04 79 65 6b 72 05 02 10 04 11   20.....yekr.....",
          "1276: |   3840: 4e 41 09 49 08 2d 4f 4e 4e 2e 4f 3f 4e 0c 4f 4f   NA.I.-ONN.O?N.OO",
          "1277: |   3856: 4e 4f 14 4e 0b 0a 09 45 0f ef 00 14 2a 00 00 00   NO.N...E....*...",
          "1278: |   3872: 00 01 02 02 00 02 01 01 01 02 01 01 81 09 88 80   ................",
          "1279: |   3888: 80 80 80 01 04 00 82 16 00 00 00 79 06 30 61 62   ...........y.0ab",
          "1280: |   3904: 61 63 6b 08 02 07 04 04 6e 64 6f 6e 08 02 05 02   ack.....ndon....",
          "1281: |   3920: 05 63 74 69 76 65 04 02 02 04 02 0b 02 04 6c 70   .ctive........lp",
          "1282: |   3936: 68 61 08 04 02 0a 02 03 74 6b 6d 06 02 02 03 02   ha......tkm.....",
          "1283: |   3952: 6f 6d 08 02 09 05 02 69 63 07 02 02 01 06 62 61   om.....ic.....ba",
          "1284: |   3968: 63 6b 75 70 08 02 04 02 05 6f 6f 6d 65 72 05 02   ckup.....oomer..",
          "1285: |   3984: 02 01 0c 63 68 61 6e 6e 65 62 6f 6f 6d 65 72 08   ...channeboomer.",
          "1286: |   4000: 02 08 07 01 6c 08 02 03 01 04 74 65 73 74 08 02   ....l.....test..",
          "1287: |   4016: 06 04 0a 09 0d 0a 08 07 07 0b 0a 11 06 24 84 80   .............$..",
          "1288: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "1289: |   4048: 63 6b 01 08 02 04 02 66 74 00 02 22 04 04 6e 64   ck.....ft.....nd",
          "1290: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 06 22 00   on..............",
          "1291: |   4080: 00 00 11 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "1292: | page 3 offset 8192",
          "1293: |      0: 0a 00 00 00 04 0f e5 00 0f fa 0f f3 0f ec 0f e5   ................",
          "1294: |   4064: 00 00 00 00 00 06 04 01 0c 01 04 02 06 04 01 0c   ................",
          "1295: |   4080: 01 03 02 06 04 01 0c 01 02 02 05 04 09 0c 01 02   ................",
          "1296: | page 4 offset 12288",
          "1297: |      0: 0d 0f 68 00 06 08 98 00 0f f6 0f ec 0f d5 08 98   ..h.............",
          "1298: |     16: 0f c1 0f b6 0f 68 0f 68 00 00 00 00 00 00 00 00   .....h.h........",
          "1299: |   2192: 00 00 00 00 00 00 00 00 8d 4d 05 04 00 9b 1f 62   .........M.....b",
          "1300: |   2208: 65 61 6d 65 72 20 62 75 6d 6d 32 34 63 34 35 32   eamer bumm24c452",
          "1301: |   2224: 30 32 37 37 34 33 31 35 66 36 33 36 66 36 65 36   02774315f636f6e6",
          "1302: |   2240: 36 36 39 36 37 32 37 32 38 36 62 32 30 35 30 35   6696727286b20505",
          "1303: |   2256: 32 34 39 34 64 34 31 35 32 35 39 32 30 34 62 34   2494d415259204b4",
          "1304: |   2272: 35 35 39 32 63 32 30 0a 37 36 32 39 32 30 35 37   5592c20.76292057",
          "1305: |   2288: 34 39 35 34 34 38 34 66 35 35 35 34 32 30 35 32   4954484f55542052",
          "1306: |   2304: 34 66 35 37 34 39 34 34 35 62 30 35 30 37 31 37   4f5749445b050717",
          "1307: |   2320: 32 31 32 31 30 31 38 31 30 31 37 34 36 31 36 32   2121018101746162",
          "1308: |   2336: 36 63 36 35 37 34 33 31 35 66 36 34 36 66 36 33   6c6574315f646f63",
          "1309: |   2352: 37 33 0a 36 39 37 61 36 35 37 34 33 31 35 66 36   73.697a6574315f6",
          "1310: |   2368: 34 36 66 36 33 37 33 36 39 37 61 36 35 30 35 34   46f6373697a65054",
          "1311: |   2384: 33 35 32 34 35 34 31 35 34 34 35 32 30 35 34 34   3524541544520544",
          "1312: |   2400: 31 34 32 34 63 34 35 32 30 32 37 37 34 33 31 35   1424c45202774315",
          "1313: |   2416: 66 36 34 36 66 36 33 37 33 36 39 37 61 0a 36 35   f646f6373697a.65",
          "1314: |   2432: 32 37 32 38 36 39 36 34 32 30 34 39 34 65 35 34   2728696420494e54",
          "1315: |   2448: 34 35 34 37 34 35 35 32 32 30 35 30 35 32 34 39   4547455220505249",
          "1316: |   2464: 34 64 34 31 35 32 35 39 32 30 34 62 34 35 35 39   4d415259204b4559",
          "1317: |   2480: 32 63 32 30 37 33 37 61 32 30 34 32 34 63 34 66   2c20737a20424c4f",
          "1318: |   2496: 34 32 32 39 35 35 30 34 0a 30 36 31 37 32 31 32   42295504.0617212",
          "1319: |   2512: 31 30 31 37 37 37 34 36 31 36 32 35 63 36 35 37   101777461625c657",
          "1320: |   2528: 34 33 31 35 66 36 33 36 66 36 65 37 34 36 35 36   4315f636f6e74656",
          "1321: |   2544: 65 37 34 37 34 33 31 35 66 36 33 36 66 36 65 37   e7474315f636f6e7",
          "1322: |   2560: 34 36 35 36 65 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   4656e...........",
          "1323: |   2576: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1324: |   2592: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1325: |   2608: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1326: |   2624: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1327: |   2640: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1328: |   2656: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 37 34 30   .............740",
          "1329: |   2672: 34 34 33 35 32 34 35 34 31 35 34 0a 34 35 32 30   44352454154.4520",
          "1330: |   2688: 35 34 34 31 34 32 34 63 34 35 32 30 32 37 37 34   5441424c45202774",
          "1331: |   2704: 33 31 35 66 36 33 36 66 36 65 37 34 36 35 36 65   315f636f6e74656e",
          "1332: |   2720: 37 34 32 37 32 38 36 39 36 34 32 30 34 39 34 65   742728696420494e",
          "1333: |   2736: 35 34 34 35 34 37 34 35 35 32 32 30 35 30 35 62   544547455220505b",
          "1334: |   2752: 30 35 30 37 31 37 32 31 32 31 30 31 38 31 30 31   0507172121018101",
          "1335: |   2768: 37 34 36 31 36 32 36 63 36 35 37 34 33 31 35 66   7461626c6574315f",
          "1336: |   2784: 36 34 36 66 36 33 37 33 0a 36 39 37 61 36 35 37   646f6373.697a657",
          "1337: |   2800: 34 33 31 35 66 36 34 36 66 36 33 37 33 36 39 37   4315f646f6373697",
          "1338: |   2816: 61 36 35 30 35 34 33 35 32 34 35 34 31 35 34 34   a650543524541544",
          "1339: |   2832: 35 32 30 35 34 34 31 34 32 34 63 34 35 32 30 32   5205441424c45202",
          "1340: |   2848: 37 37 34 33 31 35 66 36 34 36 66 36 33 37 33 36   774315f646f63736",
          "1341: |   2864: 39 37 61 0a 36 35 32 37 32 38 36 39 36 34 32 30   97a.652728696420",
          "1342: |   2880: 34 39 34 65 35 34 34 35 34 37 34 35 35 32 32 30   494e544547455220",
          "1343: |   2896: 35 30 35 32 34 39 34 64 34 31 35 32 35 39 32 30   5052494d41525920",
          "1344: |   2912: 34 62 34 35 35 39 32 63 32 30 37 33 37 61 32 30   4b45592c20737a20",
          "1345: |   2928: 34 32 34 63 34 66 34 32 32 39 35 35 30 34 0a 30   424c4f42295504.0",
          "1346: |   2944: 36 31 37 32 31 32 31 30 31 37 37 37 34 36 31 36   6172121017774616",
          "1347: |   2960: 32 35 63 36 35 37 34 33 31 35 66 36 33 36 66 36   25c6574315f636f6",
          "1348: |   2976: 65 37 34 36 35 36 65 37 34 37 34 33 31 35 66 36   e74656e7474315f6",
          "1349: |   2992: 33 36 66 36 65 37 34 36 35 36 65 0b 0b 0b 0b 0b   36f6e74656e.....",
          "1350: |   3008: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1351: |   3024: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1352: |   3040: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1353: |   3056: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1354: |   3072: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1355: |   3088: 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b 0b   ................",
          "1356: |   3104: 0b 0b 0b 37 34 30 34 34 33 35 32 34 35 34 31 35   ...7404435245415",
          "1357: |   3120: 34 0a 34 35 32 30 35 34 34 31 34 32 34 63 34 35   4.45205441424c45",
          "1358: |   3136: 32 30 32 37 37 34 33 31 35 66 36 33 36 66 36 65   202774315f636f6e",
          "1359: |   3152: 37 34 36 35 36 65 37 34 32 37 32 38 36 39 36 34   74656e7427286964",
          "1360: |   3168: 32 30 34 39 34 65 35 34 34 35 34 37 34 35 35 32   20494e5445474552",
          "1361: |   3184: 32 30 35 30 35 32 34 39 34 64 34 31 0a 35 32 35   205052494d41.525",
          "1362: |   3200: 39 32 30 34 62 34 35 35 39 32 63 32 30 36 33 33   9204b45592c20633",
          "1363: |   3216: 30 32 39 36 39 30 33 30 37 31 37 31 39 31 39 30   0296903071719190",
          "1364: |   3232: 31 38 31 32 64 37 34 36 31 36 32 36 63 36 35 37   1812d7461626c657",
          "1365: |   3248: 34 33 31 35 66 36 39 c3 bf c3 bf 7e c3 bf c3 89   4315f69....~....",
          "1366: |   3264: 4b 52 c2 81 35 66 36 39 36 34 37 38 0a 30 33 34   KR..5f696478.034",
          "1367: |   3280: 33 35 32 34 35 34 31 35 34 34 35 32 30 35 34 34   3524541544520544",
          "1368: |   3296: 31 34 32 34 63 34 35 32 30 32 37 37 34 33 31 35   1424c45202774315",
          "1369: |   3312: 66 36 39 36 34 37 38 32 37 32 38 37 33 36 35 36   f696478272873656",
          "1370: |   3328: 37 36 39 36 34 32 63 32 30 37 34 36 35 37 32 36   769642c207465726",
          "1371: |   3344: 64 32 63 32 30 37 30 0a 36 37 36 65 36 66 32 63   d2c2070.676e6f2c",
          "1372: |   3360: 32 30 35 30 35 32 34 39 34 64 34 31 35 32 35 39   205052494d415259",
          "1373: |   3376: 32 30 34 62 34 35 35 39 32 38 37 33 36 35 36 37   204b455928736567",
          "1374: |   3392: 36 39 36 34 32 63 32 30 37 34 36 35 37 32 36 64   69642c207465726d",
          "1375: |   3408: 32 39 32 39 32 30 35 37 34 39 35 34 34 38 34 66   292920574954484f",
          "1376: |   3424: 35 35 0a 35 34 32 30 35 32 34 66 35 37 34 39 34   55.5420524f57494",
          "1377: |   3440: 34 35 35 30 32 30 37 31 37 31 62 31 62 30 31 38   4550207171b1b018",
          "1378: |   3456: 31 30 31 37 34 36 31 36 32 36 63 36 37 37 34 33   1017461626c67743",
          "1379: |   3472: 31 35 66 36 34 36 31 37 34 36 31 37 34 33 31 35   15f6461746174315",
          "1380: |   3488: 66 36 34 36 31 37 34 36 31 30 32 34 33 0a 35 32   f646174610243.52",
          "1381: |   3504: 34 35 34 31 35 34 34 35 32 30 35 34 34 31 34 32   4541544520544142",
          "1382: |   3520: 34 63 34 35 32 30 32 37 37 34 33 31 35 66 36 34   4c45202774315f64",
          "1383: |   3536: 36 31 37 34 36 31 32 37 32 38 36 39 36 34 32 30   6174612728696420",
          "1384: |   3552: 34 39 34 65 35 34 34 35 34 37 34 35 35 32 32 30   494e544547455220",
          "1385: |   3568: 35 30 35 32 34 39 34 64 0a 34 31 35 32 35 39 32   5052494d.4152592",
          "1386: |   3584: 30 34 62 34 35 35 39 32 63 32 30 36 32 36 63 36   04b45592c20626c6",
          "1387: |   3600: 66 36 33 36 62 32 30 34 32 34 63 34 66 34 32 32   f636b20424c4f422",
          "1388: |   3616: 39 33 61 30 31 30 36 31 37 31 31 31 31 30 38 36   93a0106171111086",
          "1389: |   3632: 33 37 34 36 31 36 32 36 63 36 35 37 34 33 31 37   37461626c6574317",
          "1390: |   3648: 34 33 31 0a 34 33 35 32 34 35 34 31 35 34 34 35   431.435245415445",
          "1391: |   3664: 32 30 35 36 34 39 35 32 35 34 35 35 34 31 34 63   205649525455414c",
          "1392: |   3680: 32 30 35 34 34 31 34 32 34 63 34 35 32 30 37 34   205441424c452074",
          "1393: |   3696: 33 31 c3 94 30 35 35 35 33 34 39 34 65 34 37 32   31..05553494e472",
          "1394: |   3712: 30 36 36 37 34 37 33 33 35 32 38 36 33 36 66 0a   06674733528636f.",
          "1395: |   3728: 33 65 37 34 36 35 36 65 37 34 32 39 30 64 30 30   3e74656e74290d00",
          "1396: |   3744: 30 30 30 30 30 33 30 66 62 64 30 30 30 66 65 38   0000030fbd000fe8",
          "1397: |   3760: 30 66 65 66 30 66 62 64 0a 5b 31 66 62 64 5d 32   0fef0fbd.[1fbd]2",
          "1398: |   3776: 34 38 34 38 30 38 30 38 30 38 30 30 31 30 33 30   4848080808001030",
          "1399: |   3792: 30 34 65 30 30 30 30 30 30 31 65 30 36 33 30 36   04e0000001e06306",
          "1400: |   3808: 31 36 32 36 31 36 33 36 62 30 31 30 32 30 32 30   16261636b0102020",
          "1401: |   3824: 34 30 32 36 36 37 34 30 32 30 32 30 32 30 34 30   4026674020202040",
          "1402: |   3840: 34 36 65 0a 36 34 36 66 36 65 30 33 30 32 30 32   46e.646f6e030202",
          "1403: |   3856: 30 34 30 61 30 37 30 35 30 31 30 33 30 30 31 30   040a070501030010",
          "1404: |   3872: 30 33 30 33 30 66 30 61 30 33 30 30 32 34 30 30   03030f0a03002400",
          "1405: |   3888: 30 30 30 30 30 30 30 31 30 31 30 31 30 30 30 31   0000000101010001",
          "1406: |   3904: 30 31 30 31 30 31 30 61 30 30 30 30 30 30 0a 30   0101010a000000.0",
          "1407: |   3920: 31 30 66 66 61 30 30 30 66 66 61 0a 5b 32 66 65   10ffa000ffa.[2fe",
          "1408: |   3936: 72 20 62 61 63 6b 75 70 0f ca 00 4e 81 1d 61 6c   r backup...N..al",
          "1409: |   3952: 70 68 61 20 63 68 61 6e 6e 65 6c 20 c2 af 62 61   pha channel ..ba",
          "1410: |   3968: 63 6b 75 70 20 61 62 61 6e 64 6f 6e 20 74 65 73   ckup abandon tes",
          "1411: |   3984: 74 20 61 62 61 63 6b 20 63 68 61 6e 6e 65 62 6f   t aback channebo",
          "1412: |   4000: 6f 6d 65 72 20 61 74 6f 6d 20 61 6c 70 68 61 20   omer atom alpha",
          "1413: |   4016: 61 63 74 69 76 65 09 07 03 00 19 61 74 6f 6d 69   active.....atomi",
          "1414: |   4032: 63 07 06 03 00 15 61 74 6b 6d 0f e0 00 0b 19 62   c.....atkm.....b",
          "1415: |   4048: 6f 6f 6d 65 72 09 04 03 00 19 61 63 74 69 76 65   oomer.....active",
          "1416: |   4064: 00 00 00 0c 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "1417: |   4080: 17 61 66 21 66 74 08 01 03 00 17 61 62 61 63 6b   .af!ft.....aback",
          "1418: | page 5 offset 16384",
          "1419: |      0: 0d 0f ee 00 06 0f d6 00 0f fa 0f f4 0f e8 0f e2   ................",
          "1420: |     16: 0f dc 0f d6 0f d0 0f d0 00 00 00 00 00 00 00 00   ................",
          "1421: |   4048: 0f ee 00 06 0e 0a 04 07 03 00 0e 01 04 06 03 00   ................",
          "1422: |   4064: 0e 01 04 05 03 00 0e 1d 04 04 03 00 0e 01 00 00   ................",
          "1423: |   4080: 00 06 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "1424: | page 6 offset 20480",
          "1425: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "1426: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "1427: | page 7 offset 24576",
          "1428: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "1429: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "1430: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "1431: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "1432: | end c19b.db",
          "1433: }]} {}",
          "1435: do_catchsql_test 18.1 {",
          "1436:   INSERT INTO t1(t1) VALUES('optimize');",
          "1437: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d9e4f9574659c6285deba3dca68eca9989e615971cea3a901ffcda12fb4ee36f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf84515a2b4e77046ae3169007ee3c2192544485",
      "candidate_info": {
        "commit_hash": "bf84515a2b4e77046ae3169007ee3c2192544485",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bf84515a2b4e77046ae3169007ee3c2192544485",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqliteInt.h",
          "src/window.c"
        ],
        "message": "In order to identify the first row of each partition, check if the rowid in the ephemeral table is 1 instead of using a dedicated flag register.\n\nFossilOrigin-Name: f2d5f7a24c7aa483c579706c5bd7268a74da6d53025d78fa8642908c2aed1707",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9b43c3ee2e054b05715573f4f3893b84aabc5100832333c9a0f2a1628552a978",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3581:   int regStartRowid;",
          "3582:   int regEndRowid;",
          "3583: };",
          "",
          "[Removed Lines]",
          "3579:   int regFirst;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1206:     sqlite3VdbeAddOp3(v, OP_Null, 0, pMWin->regPart, pMWin->regPart+nExpr-1);",
          "1207:   }",
          "1212:   if( pMWin->eExclude ){",
          "1213:     pMWin->regStartRowid = ++pParse->nMem;",
          "",
          "[Removed Lines]",
          "1209:   pMWin->regFirst = ++pParse->nMem;",
          "1210:   sqlite3VdbeAddOp2(v, OP_Integer, 1, pMWin->regFirst);",
          "",
          "[Added Lines]",
          "1209:   pMWin->regOne = ++pParse->nMem;",
          "1210:   sqlite3VdbeAddOp2(v, OP_Integer, 1, pMWin->regOne);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2436:   sqlite3VdbeAddOp2(v, OP_NewRowid, csrWrite, regRowid);",
          "2437:   sqlite3VdbeAddOp3(v, OP_Insert, csrWrite, regRecord, regRowid);",
          "2442:   s.regArg = windowInitAccum(pParse, pMWin);",
          "",
          "[Removed Lines]",
          "2439:   addrIfNot = sqlite3VdbeAddOp1(v, OP_IfNot, pMWin->regFirst);",
          "",
          "[Added Lines]",
          "2438:   addrNe = sqlite3VdbeAddOp3(v, OP_Ne, pMWin->regOne, 0, regRowid);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2477:     sqlite3VdbeAddOp3(v, OP_Copy, regPeer, s.end.reg, pOrderBy->nExpr-1);",
          "2478:   }",
          "2481:   sqlite3VdbeAddOp2(v, OP_Goto, 0, lblWhereEnd);",
          "2484:   if( regPeer ){",
          "2485:     windowIfNewPeer(pParse, pOrderBy, regNewPeer, regPeer, lblWhereEnd);",
          "2486:   }",
          "",
          "[Removed Lines]",
          "2480:   sqlite3VdbeAddOp2(v, OP_Integer, 0, pMWin->regFirst);",
          "2483:   sqlite3VdbeJumpHere(v, addrIfNot);",
          "",
          "[Added Lines]",
          "2481:   sqlite3VdbeJumpHere(v, addrNe);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2586:   sqlite3VdbeJumpHere(v, addrEmpty);",
          "2588:   sqlite3VdbeAddOp1(v, OP_ResetSorter, s.current.csr);",
          "2590:   if( pMWin->pPartition ){",
          "2591:     if( pMWin->regStartRowid ){",
          "2592:       sqlite3VdbeAddOp2(v, OP_Integer, 1, pMWin->regStartRowid);",
          "",
          "[Removed Lines]",
          "2589:   sqlite3VdbeAddOp2(v, OP_Integer, 1, pMWin->regFirst);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c12655df87805b40eb6cf203a17ff3bc977f3574",
      "candidate_info": {
        "commit_hash": "c12655df87805b40eb6cf203a17ff3bc977f3574",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c12655df87805b40eb6cf203a17ff3bc977f3574",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid",
          "test/reindex.test"
        ],
        "message": "Fix an assert() and potential buffer overrun in fts5 that could occur if the database was corrupt.\n\nFossilOrigin-Name: 8be8bd0d562e571b73a93f4ed18258ebd114bbab67ee3cdcd66a4c8f2987f8dc",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid",
          "test/reindex.test||test/reindex.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4958:     fts5DoclistIterInit(p1, &i1);",
          "4959:     fts5DoclistIterInit(p2, &i2);",
          "",
          "[Removed Lines]",
          "4957:     if( sqlite3Fts5BufferSize(&p->rc, &out, p1->n + p2->n + 9) ) return;",
          "",
          "[Added Lines]",
          "4963:     if( sqlite3Fts5BufferSize(&p->rc, &out, p1->n + p2->n + 9+10+10) ) return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4965:         fts5BufferSafeAppendBlob(&out, i1.aPoslist, i1.nPoslist+i1.nSize);",
          "4966:         fts5DoclistIterNext(&i1);",
          "4967:         if( i1.aPoslist==0 ) break;",
          "4969:       }",
          "4970:       else if( i2.iRowid!=i1.iRowid ){",
          "",
          "[Removed Lines]",
          "4968:         assert( out.n<=((i1.aPoslist - p1->p) + (i2.aPoslist - p2->p) + 9) );",
          "",
          "[Added Lines]",
          "4974:         assert( out.n<=((i1.aPoslist-p1->p) + (i2.aPoslist-p2->p)+9+10+10) );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4973:         fts5BufferSafeAppendBlob(&out, i2.aPoslist, i2.nPoslist+i2.nSize);",
          "4974:         fts5DoclistIterNext(&i2);",
          "4975:         if( i2.aPoslist==0 ) break;",
          "4977:       }",
          "4978:       else{",
          "",
          "[Removed Lines]",
          "4976:         assert( out.n<=((i1.aPoslist - p1->p) + (i2.aPoslist - p2->p) + 9) );",
          "",
          "[Added Lines]",
          "4982:         assert( out.n<=((i1.aPoslist-p1->p) + (i2.aPoslist-p2->p)+9+10+10) );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4998:         sqlite3Fts5PoslistNext64(a1, i1.nPoslist, &iOff1, &iPos1);",
          "4999:         sqlite3Fts5PoslistNext64(a2, i2.nPoslist, &iOff2, &iPos2);",
          "5002:         if( iPos1<iPos2 ){",
          "5003:           sqlite3Fts5PoslistSafeAppend(&tmp, &iPrev, iPos1);",
          "",
          "[Removed Lines]",
          "5000:         assert( iPos1>=0 && iPos2>=0 );",
          "",
          "[Added Lines]",
          "5006:         assert_nc( iPos1>=0 && iPos2>=0 );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5031:           aCopy = &a1[iOff1];",
          "5032:           nCopy = i1.nPoslist - iOff1;",
          "5033:         }else{",
          "5035:           sqlite3Fts5PoslistSafeAppend(&tmp, &iPrev, iPos2);",
          "5036:           aCopy = &a2[iOff2];",
          "5037:           nCopy = i2.nPoslist - iOff2;",
          "",
          "[Removed Lines]",
          "5034:           assert( iPos2>=0 && iPos2!=iPrev );",
          "",
          "[Added Lines]",
          "5039:           assert_nc( iPos2>=0 && iPos2!=iPrev );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "5045:         fts5BufferSafeAppendBlob(&out, tmp.p, tmp.n);",
          "5046:         fts5DoclistIterNext(&i1);",
          "5047:         fts5DoclistIterNext(&i2);",
          "5049:         if( i1.aPoslist==0 || i2.aPoslist==0 ) break;",
          "5051:       }",
          "5052:     }",
          "",
          "[Removed Lines]",
          "5048:         assert( out.n<=(p1->n+p2->n+9) );",
          "5050:         assert( out.n<=((i1.aPoslist - p1->p) + (i2.aPoslist - p2->p) + 9) );",
          "",
          "[Added Lines]",
          "5053:         assert_nc( out.n<=(p1->n+p2->n+9) );",
          "5055:         assert( out.n<=((i1.aPoslist-p1->p) + (i2.aPoslist-p2->p)+9+10+10) );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "5059:       fts5MergeAppendDocid(&out, iLastRowid, i2.iRowid);",
          "5060:       fts5BufferSafeAppendBlob(&out, i2.aPoslist, i2.aEof - i2.aPoslist);",
          "5061:     }",
          "5064:     fts5BufferSet(&p->rc, p1, out.n, out.p);",
          "5065:     fts5BufferFree(&tmp);",
          "",
          "[Removed Lines]",
          "5062:     assert( out.n<=(p1->n+p2->n+9) );",
          "",
          "[Added Lines]",
          "5067:     assert_nc( out.n<=(p1->n+p2->n+9) );",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: sqlite3_fts5_may_be_corrupt 1",
          "26: database_may_be_corrupt",
          "30: proc create_t1 {} {",
          "31:   expr srand(0)",
          "32:   db func rnddoc fts5_rnddoc",
          "",
          "[Removed Lines]",
          "28: if 0 {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5815: } {}",
          "5817: do_catchsql_test 44.2 {",
          "5819: } {1 {database disk image is malformed}}",
          "5822:   SELECT snippet(t1, -1, '.', '..', '', 2 ) FROM t1('g h') ORDER BY rank;",
          "5825: #--------------------------------------------------------------------------",
          "5826: reset_db",
          "",
          "[Removed Lines]",
          "5818: INSERT INTO t1(t1) VALUES('integrity-check');",
          "5821: do_catchsql_test 44.2 {",
          "5823: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "5816:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "5819: do_catchsql_test 44.3 {",
          "5821: } {0 {{.g.. .h..} {.g.. h} {.g.. .h..}}}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6420: }]} {}",
          "6422: do_catchsql_test 47.1 {",
          "6426: } {1 {database disk image is malformed}}",
          "6428: #--------------------------------------------------------------------------",
          "6429: reset_db",
          "6430: do_test 48.0 {",
          "",
          "[Removed Lines]",
          "6423:   SELECT snippet(t1, -1, '.', '..', '[', 50),",
          "6424:          highlight(t1, 2, '[', ']') FROM t1('g h')",
          "6425:   WHERE rank MATCH 'bm25(1.0, 1.0)' ORDER BY rank;",
          "",
          "[Added Lines]",
          "6421:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "6424: do_catchsql_test 47.2 {",
          "6425:   SELECT count(*) FROM (",
          "6426:       SELECT snippet(t1, -1, '.', '..', '[', 50),",
          "6427:       highlight(t1, 2, '[', ']') FROM t1('g h')",
          "6428:       WHERE rank MATCH 'bm25(1.0, 1.0)' ORDER BY rank",
          "6429:   )",
          "6430: } {0 3}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8340:   SELECT * FROM t1('t*');",
          "8341: } {{} {} {} {} {} {}}",
          "8345: #-------------------------------------------------------------------------",
          "8346: do_test 59.0 {",
          "8347:   sqlite3 db {}",
          "",
          "[Removed Lines]",
          "8343: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8545:   SELECT (matchinfo(591,t1)) FROM t1 WHERE t1 MATCH 'e*e\u009f'",
          "8546: } {0 {}}",
          "8548: sqlite3_fts5_may_be_corrupt 0",
          "8549: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8550: #-------------------------------------------------------------------------",
          "8551: do_test 60.0 {",
          "8552:   sqlite3 db {}",
          "8553:   db deserialize [decode_hexdb {",
          "8554: .open --hexdb",
          "8555: | size 32768 pagesize 4096 filename crash-c77b90b929dc92.db",
          "8556: | page 1 offset 0",
          "8557: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "8558: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "8559: |     96: 00 00 00 00 0d 0f c7 00 07 0d 92 00 0f 8d 0f 36   ...............6",
          "8560: |    112: 0e cb 0e 6b 0e 0e 0d b6 0d 92 00 00 00 00 00 00   ...k............",
          "8561: |   3472: 00 00 22 08 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "8562: |   3488: 32 74 32 08 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "8563: |   3504: 20 74 32 28 78 29 56 07 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "8564: |   3520: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "8565: |   3536: 6f 6e 66 69 67 07 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "8566: |   3552: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "8567: |   3568: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "8568: |   3584: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 06    WITHOUT ROWID[.",
          "8569: |   3600: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "8570: |   3616: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "8571: |   3632: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "8572: |   3648: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "8573: |   3664: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "8574: |   3680: 59 2c 20 73 7a 20 42 4c 4f 42 29 5e 05 07 17 21   Y, sz BLOB)^...!",
          "8575: |   3696: 21 01 81 07 74 61 62 6c 65 74 31 5f 63 6f 6e 74   !...tablet1_cont",
          "8576: |   3712: 65 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 05 43 52   entt1_content.CR",
          "8577: |   3728: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63   EATE TABLE 't1_c",
          "8578: |   3744: 6f 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47   ontent'(id INTEG",
          "8579: |   3760: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "8580: |   3776: 63 30 2c 20 63 31 2c d6 63 32 29 69 04 07 17 19   c0, c1,.c2)i....",
          "8581: |   3792: 19 01 81 2d 74 61 62 6c 65 74 31 5f 69 64 78 74   ...-tablet1_idxt",
          "8582: |   3808: 31 5f 69 64 78 04 43 52 45 41 54 45 20 54 41 42   1_idx.CREATE TAB",
          "8583: |   3824: 4c 45 20 27 74 31 5f 69 64 78 27 28 73 65 67 69   LE 't1_idx'(segi",
          "8584: |   3840: 64 2c 20 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50   d, term, pgno, P",
          "8585: |   3856: 52 49 4d 41 52 59 20 4b 45 59 28 73 65 67 69 64   RIMARY KEY(segid",
          "8586: |   3872: 2c 20 74 65 72 6d 29 29 20 57 49 54 48 4f 55 54   , term)) WITHOUT",
          "8587: |   3888: 20 52 4f 57 49 44 55 03 07 17 1b 1b 01 81 01 74    ROWIDU........t",
          "8588: |   3904: 61 62 6c 65 74 31 5f 64 61 74 61 74 31 5f 64 61   ablet1_datat1_da",
          "8589: |   3920: 74 61 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   ta.CREATE TABLE",
          "8590: |   3936: 27 74 31 5f 64 61 74 61 27 28 69 64 20 49 4e 54   't1_data'(id INT",
          "8591: |   3952: 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59   EGER PRIMARY KEY",
          "8592: |   3968: 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 38 02 06   , block BLOB)8..",
          "8593: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "8594: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "8595: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 35   LE t1 USING fts5",
          "8596: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "8597: | page 3 offset 8192",
          "8598: |      0: 0d 00 00 00 03 0c 93 ff 0f e6 0f ef 0c 94 00 00   ................",
          "8599: |   3216: 00 00 00 00 86 4a 84 80 80 80 80 01 04 00 8d 18   .....J..........",
          "8600: |   3232: 00 00 03 2b 02 30 30 01 02 06 01 02 06 01 02 06   ...+.00.........",
          "8601: |   3248: 1f 02 03 01 02 03 01 02 03 01 08 32 31 31 36 30   ...........21160",
          "8602: |   3264: 36 30 39 01 02 07 01 02 07 01 02 07 01 01 33 f1   609...........3.",
          "8603: |   3280: 02 05 01 02 05 01 02 05 01 01 35 01 02 03 01 02   ..........5.....",
          "8604: |   3296: 04 01 02 04 02 07 30 30 30 30 30 30 30 1c 02 3d   ......0000000..=",
          "8605: |   3312: 01 02 04 01 02 04 01 06 62 69 6e 61 72 79 03 06   ........binary..",
          "8606: |   3328: 01 02 02 03 06 01 01 f2 03 06 4e 02 02 03 06 01   ..........N.....",
          "8607: |   3344: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "8608: |   3360: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "8609: |   3376: 03 06 01 02 02 03 06 01 02 02 01 08 63 6f 6d 70   ............comp",
          "8610: |   3392: 69 6c 65 72 01 02 02 01 02 02 01 02 02 01 06 64   iler...........d",
          "8611: |   3408: 62 73 74 61 74 07 02 03 01 02 13 01 02 03 02 04   bstat...........",
          "8612: |   3424: 65 62 75 67 04 02 02 01 02 02 01 02 02 01 07 65   ebug...........e",
          "8613: |   3440: 6e 61 62 6c 65 07 02 02 01 02 02 01 02 02 01 02   nable...........",
          "8614: |   3456: 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02   ................",
          "8615: |   3472: 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01   ................",
          "8616: |   3488: 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02   ................",
          "8617: |   3504: 02 01 02 02 02 08 76 b4 65 6e 73 69 6f 6e 1f 02   ......v.ension..",
          "8618: |   3520: 04 01 02 04 01 02 04 01 04 66 74 73 34 0a 02 03   .........fts4...",
          "8619: |   3536: 01 02 03 01 02 03 04 01 25 0d 02 03 01 02 03 01   ........%.......",
          "8620: |   3552: 02 03 01 03 67 63 63 01 02 03 01 02 03 01 02 03   ....gcc.........",
          "8621: |   3568: 02 06 65 6f 70 6f 6c 79 0f f2 03 01 02 03 01 02   ..eopoly........",
          "8622: |   3584: 03 01 05 6a 73 6f 6e 31 13 02 03 01 02 03 01 02   ...json1........",
          "8623: |   3600: 03 01 04 6c 6f 61 64 1f 02 03 01 02 03 01 02 03   ...load.........",
          "8624: |   3616: 00 03 6d 61 78 1c 02 0c 01 02 02 01 02 02 02 05   ..max...........",
          "8625: |   3632: 65 6d 6f 72 79 1c 02 03 01 02 03 01 02 03 04 04   emory...........",
          "8626: |   3648: 73 79 73 35 16 02 03 01 02 03 01 02 03 01 06 6e   sys5...........n",
          "8627: |   3664: 6f 63 61 73 65 02 06 01 02 02 13 06 00 f2 02 03   ocase...........",
          "8628: |   3680: 06 01 12 02 13 06 01 02 02 03 06 01 02 02 03 06   ................",
          "8629: |   3696: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "8630: |   3712: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "8631: |   3728: 02 01 04 6f 6d 69 74 1f 02 02 01 02 02 01 02 02   ...omit.........",
          "8632: |   3744: 01 05 72 74 72 65 65 19 02 03 01 02 03 01 02 03   ..rtree.........",
          "8633: |   3760: 04 02 69 6d 01 06 01 02 02 03 06 01 02 02 03 06   ..im............",
          "8634: |   3776: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "8635: |   3792: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "8636: |   3808: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "8637: |   3824: 01 0a 74 68 72 65 61 64 73 61 66 65 22 02 02 01   ..threadsafe....",
          "8638: |   3840: 02 02 01 02 02 01 04 76 74 61 62 07 02 04 01 02   .......vtab.....",
          "8639: |   3856: 04 01 02 04 01 01 78 01 06 01 01 02 01 06 01 01   ......x.........",
          "8640: |   3872: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "8641: |   3888: 01 06 01 11 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "8642: |   3904: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "8643: |   3920: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "8644: |   3936: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "8645: |   3952: 02 01 06 01 01 01 f1 06 01 01 02 ad 06 01 01 02   ................",
          "8646: |   3968: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "8647: |   3984: 06 01 01 01 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "8648: |   4000: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "8649: |   4016: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "8650: |   4032: 02 01 06 01 01 02 01 06 01 01 02 04 15 13 0c 0c   ................",
          "8651: |   4048: 12 44 13 11 0f 47 13 0e fc 0e 11 10 0f 0e 10 0f   .D...G..........",
          "8652: |   4064: 44 0f 10 40 15 0f 07 01 03 00 14 24 5a 24 24 0f   D..@.......$Z$$.",
          "8653: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "8654: | page 4 offset 12288",
          "8655: |      0: 0a 00 00 00 01 0f 00 00 00 00 00 00 00 00 00 00   ................",
          "8656: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "8657: | page 5 offset 16384",
          "8658: |      0: 0d 00 00 00 24 0c 0a 00 0f 00 00 00 00 00 00 00   ....$...........",
          "8659: |   3072: 00 00 00 00 00 00 00 00 00 00 18 24 05 00 25 0f   ...........$..%.",
          "8660: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "8661: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "8662: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 8f   DSAFE=0XNOCASE..",
          "8663: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 43 41 46 45 3d   ..%..THREADCAFE=",
          "8664: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "8665: |   3168: 49 54 20 4b 4f 41 44 21 45 58 54 45 4e 53 49 4f   IT KOAD!EXTENSIO",
          "8666: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "8667: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "8668: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "8669: |   3232: 4f 4d 59 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMYT LOAD EXTENS",
          "8670: |   3248: 49 4f 4e 58 52 54 56 a9 4d 1f 1e 05 00 33 0f 19   IONXRTV.M....3..",
          "8671: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30 30   MAX MEMORY=50000",
          "8672: |   3280: 30 30 30 57 42 49 4e 31 52 59 1f 1d 05 00 33 0f   000WBIN1RY....3.",
          "8673: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "8674: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 32   0000XNOCASE....2",
          "8675: |   3328: 0f 17 4e 41 58 20 4d 45 4d 4f 52 59 2d 35 30 30   ..NAX MEMORY-500",
          "8676: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "8677: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "8678: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "8679: |   3392: 4c 45 20 52 54 52 45 45 59 4e 4f 43 41 53 45 17   LE RTREEYNOCASE.",
          "8680: |   3408: 19 66 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   .f.%..ENABLE RTR",
          "8681: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "8682: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "8683: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "8684: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "8685: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "8686: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 15 05 10 25   MSYS5XRTRIM....%",
          "8687: |   3520: 0f 19 45 4e 40 42 4c 45 20 4a 53 4f 4e 31 58 42   ..EN@BLE JSON1XB",
          "8688: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "8689: |   3552: 4c 45 20 4a 53 4f 4e 32 58 4e 4f 43 41 53 45 17   LE JSON2XNOCASE.",
          "8690: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "8691: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "8692: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "8693: |   3616: 4e 41 52 59 1a 11 05 00 29 0f 19 45 4f 81 42 4c   NARY....)..EO.BL",
          "8694: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 43 51 53 45   E GEOPOLYXNOCQSE",
          "8695: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "8696: |   3664: 4f 50 4f 4c 59 58 52 54 52 49 4d 17 0f 05 00 23   OPOLYXRTRIM....#",
          "8697: |   3680: 0f 1a 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "8698: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "8699: |   3712: 45 20 46 54 53 35 48 4e 4f 43 41 53 45 16 1d 05   E FTS5HNOCASE...",
          "8700: |   3728: 00 23 0f a4 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "8701: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "8702: |   3760: 4c 45 20 46 55 53 34 58 42 49 4e 41 52 59 17 0b   LE FUS4XBINARY..",
          "8703: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 34   ..#..ENABLE FTS4",
          "8704: |   3792: 57 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   WNOCASE....#..EN",
          "8705: |   3808: 41 42 4c 45 20 46 54 53 34 05 52 54 52 49 4d 1e   ABLE FTS4.RTRIM.",
          "8706: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "8707: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "8708: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "8709: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "8710: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "8711: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   TAT VTABXRTRIM..",
          "8712: |   3920: 05 00 17 0f 19 44 45 42 55 47 58 42 8a 4e 41 52   .....DEBUGXB.NAR",
          "8713: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "8714: |   3952: 43 41 53 45 10 04 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "8715: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "8716: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "8717: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "8718: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3f 87   ...C..COMPILER?.",
          "8719: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "8720: |   4048: 39 58 4e 4f 43 41 53 45 26 01 05 00 43 0f 17 43   9XNOCASE&...C..C",
          "8721: |   4064: 45 0d 60 59 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   E.`YLER=gcc-5.4.",
          "8722: |   4080: 30 20 32 30 31 36 30 36 30 39 68 52 54 52 49 4d   0 20160609hRTRIM",
          "8723: | page 6 offset 20480",
          "8724: |      0: 0d 00 00 00 24 0e 00 00 00 00 00 00 00 00 00 00   ....$...........",
          "8725: |   3808: 06 24 03 00 12 02 01 01 06 23 03 00 12 02 01 01   .$.......#......",
          "8726: |   3824: 06 22 03 01 12 02 01 01 06 21 03 00 12 03 01 01   .........!......",
          "8727: |   3840: 06 20 03 00 12 03 01 01 06 1f 03 00 12 03 02 01   . ..............",
          "8728: |   3856: 06 1e 03 00 12 03 01 01 06 1d 03 00 12 03 01 01   ................",
          "8729: |   3872: 06 1c 03 00 12 03 01 01 06 1b 03 00 12 02 01 01   ................",
          "8730: |   3888: 06 1a 03 00 12 02 01 01 06 19 03 00 12 02 01 01   ................",
          "8731: |   3904: 06 18 03 00 12 02 01 01 06 17 03 00 12 02 01 01   ................",
          "8732: |   3920: 06 16 03 00 12 02 01 01 06 15 03 00 12 02 01 01   ................",
          "8733: |   3936: 06 14 03 00 12 02 01 01 06 13 03 00 12 02 01 01   ................",
          "8734: |   3952: 06 12 03 00 12 02 01 01 06 11 03 00 12 02 01 01   ................",
          "8735: |   3968: 06 00 03 00 12 02 01 01 06 0f 03 00 12 02 01 01   ................",
          "8736: |   3984: 06 0e 03 00 12 02 01 01 06 0d 03 00 12 02 01 01   ................",
          "8737: |   4000: 06 0c 03 00 12 02 01 01 06 0b 03 00 12 02 01 01   ................",
          "8738: |   4016: 06 0a 03 00 12 02 01 01 06 09 03 00 12 03 01 01   ................",
          "8739: |   4032: 06 08 03 00 12 03 01 01 06 07 03 00 12 03 01 01   ................",
          "8740: |   4048: 06 06 03 00 12 01 01 01 06 05 03 00 12 01 01 01   ................",
          "8741: |   4064: 06 04 03 00 12 01 01 01 06 03 03 00 12 06 01 01   ................",
          "8742: |   4080: 06 02 03 00 12 06 01 01 06 01 03 00 12 06 01 01   ................",
          "8743: | page 7 offset 24576",
          "8744: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "8745: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "8746: | page 8 offset 28672",
          "8747: |   4048: 00 00 00 00 00 00 5d 03 00 00 00 00 00 00 00 00   ......].........",
          "8748: | end crash-c77b90b929dc92.db",
          "8749: }]} {}",
          "8752: do_catchsql_test 60.2 {",
          "8753:   SELECT (matchinfo(t1,591)) FROM t1 WHERE t1 MATCH 'e*e\u009f'",
          "8754: } {0 {}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f7aadfab3bb8eb8eb2cd62dc8a6823538387b3329f1efc23ef75482488109478",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/reindex.test||test/reindex.test": [
          "File: test/reindex.test -> test/reindex.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: set testdir [file dirname $argv0]",
          "17: source $testdir/tester.tcl",
          "19: # There is nothing to test if REINDEX is disable for this build.",
          "20: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: set testprefix reindex",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168:   db2 close",
          "169: } {}",
          "171: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172: #-------------------------------------------------------------------------",
          "173: foreach {tn wo} {1 \"\" 2 \"WITHOUT ROWID\"} {",
          "174:   reset_db",
          "175:   eval [string map [list %without_rowid% $wo] {",
          "176:     do_execsql_test 4.$tn.0 {",
          "177:       CREATE TABLE t0 (",
          "178:         c0 INTEGER PRIMARY KEY DESC,",
          "179:         c1 UNIQUE DEFAULT NULL",
          "180:       ) %without_rowid% ;",
          "181:       INSERT INTO t0(c0) VALUES (1), (2), (3), (4), (5);",
          "182:       SELECT c0 FROM t0 WHERE c1 IS NULL ORDER BY 1;",
          "183:     } {1 2 3 4 5}",
          "185:     do_execsql_test 4.$tn.1 {",
          "186:       REINDEX;",
          "187:     }",
          "189:     do_execsql_test 4.$tn.2 {",
          "190:       SELECT c0 FROM t0 WHERE c1 IS NULL ORDER BY 1;",
          "191:     } {1 2 3 4 5}",
          "193:     do_execsql_test 4.$tn.3 {",
          "194:       SELECT c0 FROM t0 WHERE c1 IS NULL AND c0 IN (1,2,3,4,5);",
          "195:     } {1 2 3 4 5}",
          "197:     do_execsql_test 4.$tn.4 {",
          "198:       PRAGMA integrity_check;",
          "199:     } {ok}",
          "200:   }]",
          "201: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c81cada052ef8207d32abde930b1460a0ae320f",
      "candidate_info": {
        "commit_hash": "4c81cada052ef8207d32abde930b1460a0ae320f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4c81cada052ef8207d32abde930b1460a0ae320f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in"
        ],
        "message": "Fix a typo in the documentation for sqlite3_value_frombind().  Also add a new hyperlink to that same documentation.  No code changes.\n\nFossilOrigin-Name: bf3cd9364fdfc951feb04f78728eb8e0dae12b3dc5702a36bb6e69c0abab8864",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 02ebc60b9bbc1736f4989eb56f8d31ca97fe90c930841d10986c618381ceb8b4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ]
      }
    },
    {
      "candidate_hash": "0f31327eeef9b039f6154fe8930b73e2989a7c29",
      "candidate_info": {
        "commit_hash": "0f31327eeef9b039f6154fe8930b73e2989a7c29",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0f31327eeef9b039f6154fe8930b73e2989a7c29",
        "files": [
          "ext/misc/json1.c",
          "manifest",
          "manifest.uuid",
          "test/json105.test"
        ],
        "message": "Enhance the path arguments in JSON functions to access \"#-N\" array indexes.\n\nFossilOrigin-Name: ffeec62cb5223ae70bc1889df4c0b241f5d17b1a10156362ca59953028741480",
        "before_after_code_files": [
          "ext/misc/json1.c||ext/misc/json1.c",
          "manifest.uuid||manifest.uuid",
          "test/json105.test||test/json105.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/json1.c||ext/misc/json1.c": [
          "File: ext/misc/json1.c -> ext/misc/json1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1176:       }",
          "1177:       return pNode;",
          "1178:     }",
          "1181:     i = 0;",
          "1182:     j = 1;",
          "1183:     while( safe_isdigit(zPath[j]) ){",
          "1184:       i = i*10 + zPath[j] - '0';",
          "1185:       j++;",
          "1186:     }",
          "1190:     }",
          "1191:     zPath += j + 1;",
          "1192:     j = 1;",
          "1193:     for(;;){",
          "",
          "[Removed Lines]",
          "1179:   }else if( zPath[0]=='[' && safe_isdigit(zPath[1]) ){",
          "1180:     if( pRoot->eType!=JSON_ARRAY ) return 0;",
          "1187:     if( zPath[j]!=']' ){",
          "1189:       return 0;",
          "",
          "[Added Lines]",
          "1179:   }else if( zPath[0]=='[' ){",
          "1186:     if( j<2 || zPath[j]!=']' ){",
          "1187:       if( zPath[1]=='#' ){",
          "1188:         JsonNode *pBase = pRoot;",
          "1189:         int iBase = iRoot;",
          "1190:         if( pRoot->eType!=JSON_ARRAY ) return 0;",
          "1191:         for(;;){",
          "1192:           while( j<=pBase->n ){",
          "1193:             if( (pBase[j].jnFlags & JNODE_REMOVE)==0 ) i++;",
          "1194:             j += jsonNodeSize(&pBase[j]);",
          "1195:           }",
          "1196:           if( (pBase->jnFlags & JNODE_APPEND)==0 ) break;",
          "1197:           iBase += pBase->u.iAppend;",
          "1198:           pBase = &pParse->aNode[iBase];",
          "1199:           j = 1;",
          "1200:         }",
          "1201:         j = 2;",
          "1202:         if( zPath[2]=='-' && safe_isdigit(zPath[3]) ){",
          "1203:           unsigned int x = 0;",
          "1204:           j = 3;",
          "1205:           do{",
          "1206:             x = x*10 + zPath[j] - '0';",
          "1207:             j++;",
          "1208:           }while( safe_isdigit(zPath[j]) );",
          "1209:           if( x>i ) return 0;",
          "1210:           i -= x;",
          "1211:         }",
          "1212:         if( zPath[j]!=']' ){",
          "1214:           return 0;",
          "1215:         }",
          "1216:       }else{",
          "1218:         return 0;",
          "1219:       }",
          "1221:     if( pRoot->eType!=JSON_ARRAY ) return 0;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: de6637e15d95b7aee2caea8b8d5b9865f276cbbf152ecf0401c4c7bfdf6dee6f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/json105.test||test/json105.test": [
          "File: test/json105.test -> test/json105.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019-11-22",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #***********************************************************************",
          "11: # This file implements tests for \"[#]\" extension to json-path",
          "12: #",
          "14: set testdir [file dirname $argv0]",
          "15: source $testdir/tester.tcl",
          "16: set testprefix json104",
          "18: ifcapable !json1 {",
          "19:   finish_test",
          "20:   return",
          "21: }",
          "23: # This is the example from pages 2 and 3 of RFC-7396",
          "24: db eval {",
          "25:   CREATE TABLE t1(j);",
          "26:   INSERT INTO t1(j) VALUES('{\"a\":1,\"b\":[1,[2,3],4],\"c\":99}');",
          "27: }",
          "28: proc json_extract_test {testnum path result} {",
          "29:   do_execsql_test json105-1.$testnum \"SELECT quote(json_extract(j,$path)) FROM t1\" $result",
          "30: }",
          "31: json_extract_test 10 {'$.b[#]'}   NULL",
          "32: json_extract_test 20 {'$.b[#-1]'} 4",
          "33: json_extract_test 30 {'$.b[#-2]'} {'[2,3]'}",
          "34: json_extract_test 31 {'$.b[#-02]'} {'[2,3]'}",
          "35: json_extract_test 40 {'$.b[#-3]'} 1",
          "36: json_extract_test 50 {'$.b[#-4]'} NULL",
          "37: json_extract_test 60 {'$.b[#-2][#-1]'} 3",
          "38: json_extract_test 70 {'$.b[0]','$.b[#-1]'} {'[1,4]'}",
          "40: json_extract_test 100 {'$.a[#-1]'} NULL",
          "41: json_extract_test 110 {'$.b[#-000001]'} 4",
          "43: proc json_remove_test {testnum path result} {",
          "44:   do_execsql_test json105-2.$testnum \"SELECT quote(json_remove(j,$path)) FROM t1\" $result",
          "45: }",
          "46: json_remove_test 10 {'$.b[#]'}    {'{\"a\":1,\"b\":[1,[2,3],4],\"c\":99}'}",
          "47: json_remove_test 20 {'$.b[#-0]'}  {'{\"a\":1,\"b\":[1,[2,3],4],\"c\":99}'}",
          "48: json_remove_test 30 {'$.b[#-1]'}  {'{\"a\":1,\"b\":[1,[2,3]],\"c\":99}'}",
          "49: json_remove_test 40 {'$.b[#-2]'}  {'{\"a\":1,\"b\":[1,4],\"c\":99}'}",
          "50: json_remove_test 50 {'$.b[#-3]'}  {'{\"a\":1,\"b\":[[2,3],4],\"c\":99}'}",
          "51: json_remove_test 60 {'$.b[#-4]'}  {'{\"a\":1,\"b\":[1,[2,3],4],\"c\":99}'}",
          "52: json_remove_test 70 {'$.b[#-2][#-1]'}  {'{\"a\":1,\"b\":[1,[2],4],\"c\":99}'}",
          "54: json_remove_test 100 {'$.b[0]','$.b[#-1]'} {'{\"a\":1,\"b\":[[2,3]],\"c\":99}'}",
          "55: json_remove_test 110 {'$.b[#-1]','$.b[0]'} {'{\"a\":1,\"b\":[[2,3]],\"c\":99}'}",
          "56: json_remove_test 120 {'$.b[#-1]','$.b[#-2]'} {'{\"a\":1,\"b\":[[2,3]],\"c\":99}'}",
          "57: json_remove_test 130 {'$.b[#-1]','$.b[#-1]'} {'{\"a\":1,\"b\":[1],\"c\":99}'}",
          "58: json_remove_test 140 {'$.b[#-2]','$.b[#-1]'} {'{\"a\":1,\"b\":[1],\"c\":99}'}",
          "60: proc json_insert_test {testnum x result} {",
          "61:   do_execsql_test json105-3.$testnum \"SELECT quote(json_insert(j,$x)) FROM t1\" $result",
          "62: }",
          "63: json_insert_test 10 {'$.b[#]','AAA'} {'{\"a\":1,\"b\":[1,[2,3],4,\"AAA\"],\"c\":99}'}",
          "64: json_insert_test 20 {'$.b[1][#]','AAA'} {'{\"a\":1,\"b\":[1,[2,3,\"AAA\"],4],\"c\":99}'}",
          "65: json_insert_test 30 {'$.b[1][#]','AAA','$.b[#]','BBB'} \\",
          "66:      {'{\"a\":1,\"b\":[1,[2,3,\"AAA\"],4,\"BBB\"],\"c\":99}'}",
          "67: json_insert_test 40 {'$.b[#]','AAA','$.b[#]','BBB'} \\",
          "68:      {'{\"a\":1,\"b\":[1,[2,3],4,\"AAA\",\"BBB\"],\"c\":99}'}",
          "70: proc json_set_test {testnum x result} {",
          "71:   do_execsql_test json105-4.$testnum \"SELECT quote(json_set(j,$x)) FROM t1\" $result",
          "72: }",
          "73: json_set_test 10 {'$.b[#]','AAA'} {'{\"a\":1,\"b\":[1,[2,3],4,\"AAA\"],\"c\":99}'}",
          "74: json_set_test 20 {'$.b[1][#]','AAA'} {'{\"a\":1,\"b\":[1,[2,3,\"AAA\"],4],\"c\":99}'}",
          "75: json_set_test 30 {'$.b[1][#]','AAA','$.b[#]','BBB'} \\",
          "76:      {'{\"a\":1,\"b\":[1,[2,3,\"AAA\"],4,\"BBB\"],\"c\":99}'}",
          "77: json_set_test 40 {'$.b[#]','AAA','$.b[#]','BBB'} \\",
          "78:      {'{\"a\":1,\"b\":[1,[2,3],4,\"AAA\",\"BBB\"],\"c\":99}'}",
          "79: json_set_test 50 {'$.b[#-1]','AAA'} {'{\"a\":1,\"b\":[1,[2,3],\"AAA\"],\"c\":99}'}",
          "80: json_set_test 60 {'$.b[1][#-1]','AAA'} {'{\"a\":1,\"b\":[1,[2,\"AAA\"],4],\"c\":99}'}",
          "81: json_set_test 70 {'$.b[1][#-1]','AAA','$.b[#-1]','BBB'} \\",
          "82:      {'{\"a\":1,\"b\":[1,[2,\"AAA\"],\"BBB\"],\"c\":99}'}",
          "83: json_set_test 80 {'$.b[#-1]','AAA','$.b[#-1]','BBB'} \\",
          "84:      {'{\"a\":1,\"b\":[1,[2,3],\"BBB\"],\"c\":99}'}",
          "86: proc json_replace_test {testnum x result} {",
          "87:   do_execsql_test json105-5.$testnum \"SELECT quote(json_replace(j,$x)) FROM t1\" $result",
          "88: }",
          "89: json_replace_test 10 {'$.b[#]','AAA'} {'{\"a\":1,\"b\":[1,[2,3],4],\"c\":99}'}",
          "90: json_replace_test 20 {'$.b[1][#]','AAA'} {'{\"a\":1,\"b\":[1,[2,3],4],\"c\":99}'}",
          "91: json_replace_test 30 {'$.b[1][#]','AAA','$.b[#]','BBB'} \\",
          "92:      {'{\"a\":1,\"b\":[1,[2,3],4],\"c\":99}'}",
          "93: json_replace_test 40 {'$.b[#]','AAA','$.b[#]','BBB'} \\",
          "94:      {'{\"a\":1,\"b\":[1,[2,3],4],\"c\":99}'}",
          "95: json_replace_test 50 {'$.b[#-1]','AAA'} {'{\"a\":1,\"b\":[1,[2,3],\"AAA\"],\"c\":99}'}",
          "96: json_replace_test 60 {'$.b[1][#-1]','AAA'} {'{\"a\":1,\"b\":[1,[2,\"AAA\"],4],\"c\":99}'}",
          "97: json_replace_test 70 {'$.b[1][#-1]','AAA','$.b[#-1]','BBB'} \\",
          "98:      {'{\"a\":1,\"b\":[1,[2,\"AAA\"],\"BBB\"],\"c\":99}'}",
          "99: json_replace_test 80 {'$.b[#-1]','AAA','$.b[#-1]','BBB'} \\",
          "100:      {'{\"a\":1,\"b\":[1,[2,3],\"BBB\"],\"c\":99}'}",
          "102: do_catchsql_test json105-6.10 {",
          "103:   SELECT json_extract(j, '$.b[#-]') FROM t1;",
          "104: } {1 {JSON path error near '[#-]'}}",
          "105: do_catchsql_test json105-6.20 {",
          "106:   SELECT json_extract(j, '$.b[#9]') FROM t1;",
          "107: } {1 {JSON path error near '[#9]'}}",
          "108: do_catchsql_test json105-6.30 {",
          "109:   SELECT json_extract(j, '$.b[#+2]') FROM t1;",
          "110: } {1 {JSON path error near '[#+2]'}}",
          "111: do_catchsql_test json105-6.40 {",
          "112:   SELECT json_extract(j, '$.b[#-1') FROM t1;",
          "113: } {1 {JSON path error near '[#-1'}}",
          "114: do_catchsql_test json105-6.50 {",
          "115:   SELECT json_extract(j, '$.b[#-1x]') FROM t1;",
          "116: } {1 {JSON path error near '[#-1x]'}}",
          "118: finish_test",
          "",
          "---------------"
        ]
      }
    }
  ]
}