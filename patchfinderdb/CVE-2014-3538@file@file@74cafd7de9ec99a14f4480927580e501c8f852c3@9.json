{
  "cve_id": "CVE-2014-3538",
  "cve_desc": "file before 5.19 does not properly restrict the amount of data read during a regex search, which allows remote attackers to cause a denial of service (CPU consumption) via a crafted file that triggers backtracking during processing of an awk rule.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7345.",
  "repo": "file/file",
  "patch_hash": "74cafd7de9ec99a14f4480927580e501c8f852c3",
  "patch_info": {
    "commit_hash": "74cafd7de9ec99a14f4480927580e501c8f852c3",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/74cafd7de9ec99a14f4480927580e501c8f852c3",
    "files": [
      "src/softmagic.c"
    ],
    "message": "If requested, limit search length.",
    "before_after_code_files": [
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.187 2014/05/13 16:42:17 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.188 2014/05/14 23:15:42 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1929:    file_regerror(&rx, rc, ms);",
      "1930:    v = (uint64_t)-1;",
      "1931:   } else {",
      "1932:    regmatch_t pmatch[1];",
      "1933: #ifndef REG_STARTEND",
      "1934: #define REG_STARTEND 0",
      "1938: #else",
      "1939:    pmatch[0].rm_so = 0;",
      "1941: #endif",
      "1942:    rc = file_regexec(&rx, (const char *)ms->search.s,",
      "1943:        1, pmatch, REG_STARTEND);",
      "",
      "[Removed Lines]",
      "1935:    size_t l = ms->search.s_len - 1;",
      "1936:    char c = ms->search.s[l];",
      "1937:    ((char *)(intptr_t)ms->search.s)[l] = '\\0';",
      "1940:    pmatch[0].rm_eo = ms->search.s_len;",
      "",
      "[Added Lines]",
      "1932: #ifndef REG_STARTEND",
      "1933:    char c;",
      "1934: #endif",
      "1936:    size_t slen = ms->search.s_len;",
      "1938:    if (m->str_range > 0)",
      "1939:     slen = MIN(slen, m->str_range);",
      "1942:    if (slen != 0)",
      "1943:     slen--;",
      "1944:    c = ms->search.s[slen];",
      "1945:    ((char *)(intptr_t)ms->search.s)[slen] = '\\0';",
      "1948:    pmatch[0].rm_eo = slen;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d3bc3aa5b5bdbd05de47c3db8118056435bed5e8",
      "candidate_info": {
        "commit_hash": "d3bc3aa5b5bdbd05de47c3db8118056435bed5e8",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/d3bc3aa5b5bdbd05de47c3db8118056435bed5e8",
        "files": [
          "src/file.h",
          "src/funcs.c",
          "src/softmagic.c"
        ],
        "message": "factor out all the duplicated regex code into a wrapper.",
        "before_after_code_files": [
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "468:     size_t);",
          "472: #ifndef COMPILE_ONLY",
          "473: extern const char *file_names[];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "471: typedef struct {",
          "472:  const char *pat;",
          "473:  char *old_lc_ctype;",
          "474:  int rc;",
          "475:  regex_t rx;",
          "476: } file_regex_t;",
          "478: protected int file_regcomp(file_regex_t *, const char *, int);",
          "479: protected int file_regexec(file_regex_t *, const char *, size_t, regmatch_t *,",
          "480:     int);",
          "481: protected void file_regfree(file_regex_t *);",
          "482: protected void file_regerror(file_regex_t *, int, struct magic_set *);",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.69 2014/03/06 16:03:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.70 2014/03/14 19:02:37 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "427: protected int",
          "428: file_replace(struct magic_set *ms, const char *pat, const char *rep)",
          "429: {",
          "431:  int rc, rv = -1;",
          "440:  if (rc) {",
          "444:  } else {",
          "445:   regmatch_t rm;",
          "446:   int nm = 0;",
          "448:    ms->o.buf[rm.rm_so] = '\\0';",
          "449:    if (file_printf(ms, \"%s%s\", rep,",
          "450:        rm.rm_eo != 0 ? ms->o.buf + rm.rm_eo : \"\") == -1)",
          "451:     goto out;",
          "452:    nm++;",
          "453:   }",
          "455:   rv = nm;",
          "456:  }",
          "457: out:",
          "460:  return rv;",
          "461: }",
          "",
          "[Removed Lines]",
          "430:  regex_t rx;",
          "432:  char *old_lc_ctype;",
          "434:  old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "435:  assert(old_lc_ctype != NULL);",
          "436:  old_lc_ctype = strdup(old_lc_ctype);",
          "437:  assert(old_lc_ctype != NULL);",
          "438:  (void)setlocale(LC_CTYPE, \"C\");",
          "439:  rc = regcomp(&rx, pat, REG_EXTENDED);",
          "441:   char errmsg[512];",
          "442:   (void)regerror(rc, &rx, errmsg, sizeof(errmsg));",
          "443:   file_magerror(ms, \"regex error %d, (%s)\", rc, errmsg);",
          "447:   while (regexec(&rx, ms->o.buf, 1, &rm, 0) == 0) {",
          "454:   regfree(&rx);",
          "458:  (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "459:  free(old_lc_ctype);",
          "",
          "[Added Lines]",
          "430:  file_regex_t rx;",
          "433:  rc = file_regcomp(&rx, pat, REG_EXTENDED);",
          "435:   file_regerror(&rx, rc, ms);",
          "439:   while (file_regexec(&rx, ms->o.buf, 1, &rm, 0) == 0) {",
          "449:  file_regfree(&rx);",
          "453: protected int",
          "454: file_regcomp(file_regex_t *rx, const char *pat, int flags)",
          "455: {",
          "456:  rx->old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "457:  assert(rx->old_lc_ctype != NULL);",
          "458:  rx->old_lc_ctype = strdup(rx->old_lc_ctype);",
          "459:  assert(rx->old_lc_ctype != NULL);",
          "460:  rx->pat = pat;",
          "462:  (void)setlocale(LC_CTYPE, \"C\");",
          "463:  return rx->rc = regcomp(&rx->rx, pat, flags);",
          "464: }",
          "466: protected int",
          "467: file_regexec(file_regex_t *rx, const char *str, size_t nmatch,",
          "468:     regmatch_t* pmatch, int eflags)",
          "469: {",
          "470:  assert(rx->rc == 0);",
          "471:  return regexec(&rx->rx, str, nmatch, pmatch, eflags);",
          "472: }",
          "474: protected void",
          "475: file_regfree(file_regex_t *rx)",
          "476: {",
          "477:  if (rx->rc == 0)",
          "478:   regfree(&rx->rx);",
          "479:  (void)setlocale(LC_CTYPE, rx->old_lc_ctype);",
          "480:  free(rx->old_lc_ctype);",
          "481: }",
          "483: protected void",
          "484: file_regerror(file_regex_t *rx, int rc, struct magic_set *ms)",
          "485: {",
          "486:  char errmsg[512];",
          "488:  (void)regerror(rc, &rx->rx, errmsg, sizeof(errmsg));",
          "489:  file_magerror(ms, \"regex error %d for `%s', (%s)\", rc, rx->pat,",
          "490:      errmsg);",
          "491: }",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.184 2014/04/12 15:47:10 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.185 2014/04/30 21:41:02 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "364: private int",
          "365: check_fmt(struct magic_set *ms, struct magic *m)",
          "366: {",
          "368:  int rc, rv = -1;",
          "371:  if (strchr(m->desc, '%') == NULL)",
          "372:   return 0;",
          "380:  if (rc) {",
          "384:  } else {",
          "387:   rv = !rc;",
          "388:  }",
          "391:  return rv;",
          "392: }",
          "",
          "[Removed Lines]",
          "367:  regex_t rx;",
          "369:  char *old_lc_ctype;",
          "374:  old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "375:  assert(old_lc_ctype != NULL);",
          "376:  old_lc_ctype = strdup(old_lc_ctype);",
          "377:  assert(old_lc_ctype != NULL);",
          "378:  (void)setlocale(LC_CTYPE, \"C\");",
          "379:  rc = regcomp(&rx, \"%[-0-9\\\\.]*s\", REG_EXTENDED|REG_NOSUB);",
          "381:   char errmsg[512];",
          "382:   (void)regerror(rc, &rx, errmsg, sizeof(errmsg));",
          "383:   file_magerror(ms, \"regex error %d, (%s)\", rc, errmsg);",
          "385:   rc = regexec(&rx, m->desc, 0, 0, 0);",
          "386:   regfree(&rx);",
          "389:  (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "390:  free(old_lc_ctype);",
          "",
          "[Added Lines]",
          "367:  file_regex_t rx;",
          "373:  rc = file_regcomp(&rx, \"%[-0-9\\\\.]*s\", REG_EXTENDED|REG_NOSUB);",
          "375:   file_regerror(&rx, rc, ms);",
          "377:   rc = file_regexec(&rx, m->desc, 0, 0, 0);",
          "380:  file_regfree(&rx);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1776:  double dl, dv;",
          "1777:  int matched;",
          "1778:  union VALUETYPE *p = &ms->ms_value;",
          "1781:  switch (m->type) {",
          "1782:  case FILE_BYTE:",
          "",
          "[Removed Lines]",
          "1779:  char *old_lc_ctype;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1929:  }",
          "1930:  case FILE_REGEX: {",
          "1931:   int rc;",
          "1935:   if (ms->search.s == NULL)",
          "1936:    return 0;",
          "1943:   l = 0;",
          "1945:       REG_EXTENDED|REG_NEWLINE|",
          "1946:       ((m->str_flags & STRING_IGNORE_CASE) ? REG_ICASE : 0));",
          "1947:   if (rc) {",
          "1951:    v = (uint64_t)-1;",
          "1954:    regmatch_t pmatch[1];",
          "1955: #ifndef REG_STARTEND",
          "1956: #define REG_STARTEND 0",
          "",
          "[Removed Lines]",
          "1932:   regex_t rx;",
          "1933:   char errmsg[512];",
          "1938:   old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "1939:   assert(old_lc_ctype != NULL);",
          "1940:   old_lc_ctype = strdup(old_lc_ctype);",
          "1941:   assert(old_lc_ctype != NULL);",
          "1942:   (void)setlocale(LC_CTYPE, \"C\");",
          "1944:   rc = regcomp(&rx, m->value.s,",
          "1948:    (void)regerror(rc, &rx, errmsg, sizeof(errmsg));",
          "1949:    file_magerror(ms, \"regex error %d, (%s)\",",
          "1950:        rc, errmsg);",
          "1952:   }",
          "1953:   else {",
          "",
          "[Added Lines]",
          "1921:   file_regex_t rx;",
          "1927:   rc = file_regcomp(&rx, m->value.s,",
          "1931:    file_regerror(&rx, rc, ms);",
          "1933:   } else {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1961:    pmatch[0].rm_so = 0;",
          "1962:    pmatch[0].rm_eo = ms->search.s_len;",
          "1963: #endif",
          "1965:        1, pmatch, REG_STARTEND);",
          "1966: #if REG_STARTEND == 0",
          "1967:    ((char *)(intptr_t)ms->search.s)[l] = c;",
          "",
          "[Removed Lines]",
          "1964:    rc = regexec(&rx, (const char *)ms->search.s,",
          "",
          "[Added Lines]",
          "1944:    rc = file_regexec(&rx, (const char *)ms->search.s,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1980:     break;",
          "1982:    default:",
          "1986:     v = (uint64_t)-1;",
          "1987:     break;",
          "1988:    }",
          "1990:   }",
          "1993:   if (v == (uint64_t)-1)",
          "1994:    return -1;",
          "1995:   break;",
          "",
          "[Removed Lines]",
          "1983:     (void)regerror(rc, &rx, errmsg, sizeof(errmsg));",
          "1984:     file_magerror(ms, \"regexec error %d, (%s)\",",
          "1985:         rc, errmsg);",
          "1989:    regfree(&rx);",
          "1991:   (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "1992:   free(old_lc_ctype);",
          "",
          "[Added Lines]",
          "1963:     file_regerror(&rx, rc, ms);",
          "1968:   file_regfree(&rx);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2091732d23c52d7e58c073cae832b2039486e04d",
      "candidate_info": {
        "commit_hash": "2091732d23c52d7e58c073cae832b2039486e04d",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/2091732d23c52d7e58c073cae832b2039486e04d",
        "files": [
          "src/softmagic.c"
        ],
        "message": "- always do arithmetic on dates - fix T_LOCAL reversed logic",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.209 2015/01/05 20:05:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.210 2015/01/05 20:21:30 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "548:  case FILE_LEDATE:",
          "549:  case FILE_MEDATE:",
          "550:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "552:    return -1;",
          "553:   t = ms->offset + sizeof(uint32_t);",
          "554:   break;",
          "",
          "[Removed Lines]",
          "551:       file_fmttime(p->l + m->num_mask, FILE_T_LOCAL, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "551:       file_fmttime(p->l, 0, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "558:  case FILE_LELDATE:",
          "559:  case FILE_MELDATE:",
          "560:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "562:    return -1;",
          "563:   t = ms->offset + sizeof(uint32_t);",
          "564:   break;",
          "",
          "[Removed Lines]",
          "561:       file_fmttime(p->l + m->num_mask, 0, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "561:       file_fmttime(p->l, FILE_T_LOCAL, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "567:  case FILE_BEQDATE:",
          "568:  case FILE_LEQDATE:",
          "569:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "571:    return -1;",
          "572:   t = ms->offset + sizeof(uint64_t);",
          "573:   break;",
          "",
          "[Removed Lines]",
          "570:       file_fmttime(p->q + m->num_mask, FILE_T_LOCAL, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "570:       file_fmttime(p->q, 0, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "576:  case FILE_BEQLDATE:",
          "577:  case FILE_LEQLDATE:",
          "578:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "580:    return -1;",
          "581:   t = ms->offset + sizeof(uint64_t);",
          "582:   break;",
          "",
          "[Removed Lines]",
          "579:       file_fmttime(p->q + m->num_mask, 0, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "579:       file_fmttime(p->q, FILE_T_LOCAL, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "585:  case FILE_BEQWDATE:",
          "586:  case FILE_LEQWDATE:",
          "587:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "589:    return -1;",
          "590:   t = ms->offset + sizeof(uint64_t);",
          "591:   break;",
          "",
          "[Removed Lines]",
          "588:       file_fmttime(p->q + m->num_mask, FILE_T_WINDOWS, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "588:       file_fmttime(p->q, FILE_T_WINDOWS, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "970:  case FILE_BELDATE:",
          "971:   p->l = (int32_t)",
          "972:       ((p->hl[0]<<24)|(p->hl[1]<<16)|(p->hl[2]<<8)|(p->hl[3]));",
          "975:   return 1;",
          "976:  case FILE_BEQUAD:",
          "977:  case FILE_BEQDATE:",
          "",
          "[Removed Lines]",
          "973:   if (type == FILE_BELONG)",
          "974:    cvt_32(p, m);",
          "",
          "[Added Lines]",
          "973:   cvt_32(p, m);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "982:        ((uint64_t)p->hq[2]<<40)|((uint64_t)p->hq[3]<<32)|",
          "983:        ((uint64_t)p->hq[4]<<24)|((uint64_t)p->hq[5]<<16)|",
          "984:        ((uint64_t)p->hq[6]<<8)|((uint64_t)p->hq[7]));",
          "987:   return 1;",
          "988:  case FILE_LESHORT:",
          "989:   p->h = (short)((p->hs[1]<<8)|(p->hs[0]));",
          "",
          "[Removed Lines]",
          "985:   if (type == FILE_BEQUAD)",
          "986:    cvt_64(p, m);",
          "",
          "[Added Lines]",
          "984:   cvt_64(p, m);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "994:  case FILE_LELDATE:",
          "995:   p->l = (int32_t)",
          "996:       ((p->hl[3]<<24)|(p->hl[2]<<16)|(p->hl[1]<<8)|(p->hl[0]));",
          "999:   return 1;",
          "1000:  case FILE_LEQUAD:",
          "1001:  case FILE_LEQDATE:",
          "",
          "[Removed Lines]",
          "997:   if (type == FILE_LELONG)",
          "998:    cvt_32(p, m);",
          "",
          "[Added Lines]",
          "995:   cvt_32(p, m);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1006:        ((uint64_t)p->hq[5]<<40)|((uint64_t)p->hq[4]<<32)|",
          "1007:        ((uint64_t)p->hq[3]<<24)|((uint64_t)p->hq[2]<<16)|",
          "1008:        ((uint64_t)p->hq[1]<<8)|((uint64_t)p->hq[0]));",
          "1011:   return 1;",
          "1012:  case FILE_MELONG:",
          "1013:  case FILE_MEDATE:",
          "1014:  case FILE_MELDATE:",
          "1015:   p->l = (int32_t)",
          "1016:       ((p->hl[1]<<24)|(p->hl[0]<<16)|(p->hl[3]<<8)|(p->hl[2]));",
          "1019:   return 1;",
          "1020:  case FILE_FLOAT:",
          "1021:   cvt_float(p, m);",
          "",
          "[Removed Lines]",
          "1009:   if (type == FILE_LEQUAD)",
          "1010:    cvt_64(p, m);",
          "1017:   if (type == FILE_MELONG)",
          "1018:    cvt_32(p, m);",
          "",
          "[Added Lines]",
          "1006:   cvt_64(p, m);",
          "1013:   cvt_32(p, m);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d4533dd766b78b29c9ace8b79ff13cf474b3029",
      "candidate_info": {
        "commit_hash": "5d4533dd766b78b29c9ace8b79ff13cf474b3029",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/5d4533dd766b78b29c9ace8b79ff13cf474b3029",
        "files": [
          "src/softmagic.c"
        ],
        "message": "If requested, limit search length.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.188 2014/05/14 23:15:42 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.189 2014/05/30 16:47:44 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1929:    file_regerror(&rx, rc, ms);",
          "1930:    v = (uint64_t)-1;",
          "1931:   } else {",
          "1932:    regmatch_t pmatch[1];",
          "1933: #ifndef REG_STARTEND",
          "1934: #define REG_STARTEND 0",
          "1938: #else",
          "1939:    pmatch[0].rm_so = 0;",
          "1941: #endif",
          "1942:    rc = file_regexec(&rx, (const char *)ms->search.s,",
          "1943:        1, pmatch, REG_STARTEND);",
          "",
          "[Removed Lines]",
          "1935:    size_t l = ms->search.s_len - 1;",
          "1936:    char c = ms->search.s[l];",
          "1937:    ((char *)(intptr_t)ms->search.s)[l] = '\\0';",
          "1940:    pmatch[0].rm_eo = ms->search.s_len;",
          "",
          "[Added Lines]",
          "1932: #ifndef REG_STARTEND",
          "1933:    char c;",
          "1934: #endif",
          "1936:    size_t slen = ms->search.s_len;",
          "1938:    if (m->str_range > 0)",
          "1939:     slen = MIN(slen, m->str_range);",
          "1942:    if (slen != 0)",
          "1943:     slen--;",
          "1944:    c = ms->search.s[slen];",
          "1945:    ((char *)(intptr_t)ms->search.s)[slen] = '\\0';",
          "1948:    pmatch[0].rm_eo = slen;",
          "",
          "---------------"
        ]
      }
    }
  ]
}