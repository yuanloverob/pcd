{
  "cve_id": "CVE-2014-3182",
  "cve_desc": "Array index error in the logi_dj_raw_event function in drivers/hid/hid-logitech-dj.c in the Linux kernel before 3.16.2 allows physically proximate attackers to execute arbitrary code or cause a denial of service (invalid kfree) via a crafted device that provides a malformed REPORT_TYPE_NOTIF_DEVICE_UNPAIRED value.",
  "repo": "torvalds/linux",
  "patch_hash": "ad3e14d7c5268c2e24477c6ef54bbdf88add5d36",
  "patch_info": {
    "commit_hash": "ad3e14d7c5268c2e24477c6ef54bbdf88add5d36",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/ad3e14d7c5268c2e24477c6ef54bbdf88add5d36",
    "files": [
      "drivers/hid/hid-logitech-dj.c"
    ],
    "message": "HID: logitech: perform bounds checking on device_id early enough\n\ndevice_index is a char type and the size of paired_dj_deivces is 7\nelements, therefore proper bounds checking has to be applied to\ndevice_index before it is used.\n\nWe are currently performing the bounds checking in\nlogi_dj_recv_add_djhid_device(), which is too late, as malicious device\ncould send REPORT_TYPE_NOTIF_DEVICE_UNPAIRED early enough and trigger the\nproblem in one of the report forwarding functions called from\nlogi_dj_raw_event().\n\nFix this by performing the check at the earliest possible ocasion in\nlogi_dj_raw_event().\n\nCc: stable@vger.kernel.org\nReported-by: Ben Hawkes <hawkes@google.com>\nReviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
    "before_after_code_files": [
      "drivers/hid/hid-logitech-dj.c||drivers/hid/hid-logitech-dj.c"
    ]
  },
  "patch_diff": {
    "drivers/hid/hid-logitech-dj.c||drivers/hid/hid-logitech-dj.c": [
      "File: drivers/hid/hid-logitech-dj.c -> drivers/hid/hid-logitech-dj.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "238:   return;",
      "239:  }",
      "248:  if (djrcv_dev->paired_dj_devices[dj_report->device_index]) {",
      "250:   dbg_hid(\"%s: device is already known\\n\", __func__);",
      "",
      "[Removed Lines]",
      "241:  if ((dj_report->device_index < DJ_DEVICE_INDEX_MIN) ||",
      "242:      (dj_report->device_index > DJ_DEVICE_INDEX_MAX)) {",
      "243:   dev_err(&djrcv_hdev->dev, \"%s: invalid device index:%d\\n\",",
      "244:    __func__, dj_report->device_index);",
      "245:   return;",
      "246:  }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "694:  spin_lock_irqsave(&djrcv_dev->lock, flags);",
      "695:  if (dj_report->report_id == REPORT_ID_DJ_SHORT) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "686:  if ((dj_report->device_index < DJ_DEVICE_INDEX_MIN) ||",
      "687:      (dj_report->device_index > DJ_DEVICE_INDEX_MAX)) {",
      "688:   dev_err(&hdev->dev, \"%s: invalid device index:%d\\n\",",
      "689:     __func__, dj_report->device_index);",
      "690:   return false;",
      "691:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5abfe85c1d4694d5d4bbd13ecc166262b937adf0",
      "candidate_info": {
        "commit_hash": "5abfe85c1d4694d5d4bbd13ecc166262b937adf0",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/5abfe85c1d4694d5d4bbd13ecc166262b937adf0",
        "files": [
          "drivers/hid/hid-logitech-dj.c",
          "drivers/hid/hid-logitech-dj.h"
        ],
        "message": "HID: logitech-dj: prevent false errors to be shown\n\nCommit \"HID: logitech: perform bounds checking on device_id early\nenough\" unfortunately leaks some errors to dmesg which are not real\nones:\n- if the report is not a DJ one, then there is not point in checking\n  the device_id\n- the receiver (index 0) can also receive some notifications which\n  can be safely ignored given the current implementation\n\nMove out the test regarding the report_id and also discards\nprinting errors when the receiver got notified.\n\nFixes: ad3e14d7c5268c2e24477c6ef54bbdf88add5d36\n\nCc: stable@vger.kernel.org\nReported-and-tested-by: Markus Trippelsdorf <markus@trippelsdorf.de>\nSigned-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
        "before_after_code_files": [
          "drivers/hid/hid-logitech-dj.c||drivers/hid/hid-logitech-dj.c",
          "drivers/hid/hid-logitech-dj.h||drivers/hid/hid-logitech-dj.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/hid/hid-logitech-dj.c||drivers/hid/hid-logitech-dj.c"
          ],
          "candidate": [
            "drivers/hid/hid-logitech-dj.c||drivers/hid/hid-logitech-dj.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/hid/hid-logitech-dj.c||drivers/hid/hid-logitech-dj.c": [
          "File: drivers/hid/hid-logitech-dj.c -> drivers/hid/hid-logitech-dj.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "656:  struct dj_receiver_dev *djrcv_dev = hid_get_drvdata(hdev);",
          "657:  struct dj_report *dj_report = (struct dj_report *) data;",
          "658:  unsigned long flags;",
          "661:  dbg_hid(\"%s, size:%d\\n\", __func__, size);",
          "",
          "[Removed Lines]",
          "659:  bool report_processed = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "686:  if ((dj_report->device_index < DJ_DEVICE_INDEX_MIN) ||",
          "687:      (dj_report->device_index > DJ_DEVICE_INDEX_MAX)) {",
          "689:     __func__, dj_report->device_index);",
          "690:   return false;",
          "691:  }",
          "693:  spin_lock_irqsave(&djrcv_dev->lock, flags);",
          "708:   }",
          "710:  }",
          "711:  spin_unlock_irqrestore(&djrcv_dev->lock, flags);",
          "714: }",
          "716: static int logi_dj_probe(struct hid_device *hdev,",
          "",
          "[Removed Lines]",
          "688:   dev_err(&hdev->dev, \"%s: invalid device index:%d\\n\",",
          "694:  if (dj_report->report_id == REPORT_ID_DJ_SHORT) {",
          "695:   switch (dj_report->report_type) {",
          "696:   case REPORT_TYPE_NOTIF_DEVICE_PAIRED:",
          "697:   case REPORT_TYPE_NOTIF_DEVICE_UNPAIRED:",
          "698:    logi_dj_recv_queue_notification(djrcv_dev, dj_report);",
          "699:    break;",
          "700:   case REPORT_TYPE_NOTIF_CONNECTION_STATUS:",
          "701:    if (dj_report->report_params[CONNECTION_STATUS_PARAM_STATUS] ==",
          "702:        STATUS_LINKLOSS) {",
          "703:     logi_dj_recv_forward_null_report(djrcv_dev, dj_report);",
          "704:    }",
          "705:    break;",
          "706:   default:",
          "707:    logi_dj_recv_forward_report(djrcv_dev, dj_report);",
          "709:   report_processed = true;",
          "713:  return report_processed;",
          "",
          "[Added Lines]",
          "687:  if (data[0] != REPORT_ID_DJ_SHORT)",
          "688:   return false;",
          "697:   if (dj_report->device_index != DJ_RECEIVER_INDEX)",
          "698:    dev_err(&hdev->dev, \"%s: invalid device index:%d\\n\",",
          "704:  switch (dj_report->report_type) {",
          "705:  case REPORT_TYPE_NOTIF_DEVICE_PAIRED:",
          "706:  case REPORT_TYPE_NOTIF_DEVICE_UNPAIRED:",
          "707:   logi_dj_recv_queue_notification(djrcv_dev, dj_report);",
          "708:   break;",
          "709:  case REPORT_TYPE_NOTIF_CONNECTION_STATUS:",
          "710:   if (dj_report->report_params[CONNECTION_STATUS_PARAM_STATUS] ==",
          "711:       STATUS_LINKLOSS) {",
          "712:    logi_dj_recv_forward_null_report(djrcv_dev, dj_report);",
          "714:   break;",
          "715:  default:",
          "716:   logi_dj_recv_forward_report(djrcv_dev, dj_report);",
          "720:  return true;",
          "",
          "---------------"
        ],
        "drivers/hid/hid-logitech-dj.h||drivers/hid/hid-logitech-dj.h": [
          "File: drivers/hid/hid-logitech-dj.h -> drivers/hid/hid-logitech-dj.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define DJ_MAX_PAIRED_DEVICES   6",
          "29: #define DJ_MAX_NUMBER_NOTIFICATIONS  8",
          "30: #define DJ_DEVICE_INDEX_MIN    1",
          "31: #define DJ_DEVICE_INDEX_MAX    6",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: #define DJ_RECEIVER_INDEX   0",
          "",
          "---------------"
        ]
      }
    }
  ]
}