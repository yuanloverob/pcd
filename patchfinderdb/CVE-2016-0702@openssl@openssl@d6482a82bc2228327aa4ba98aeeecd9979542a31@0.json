{
  "cve_id": "CVE-2016-0702",
  "cve_desc": "The MOD_EXP_CTIME_COPY_FROM_PREBUF function in crypto/bn/bn_exp.c in OpenSSL 1.0.1 before 1.0.1s and 1.0.2 before 1.0.2g does not properly consider cache-bank access times during modular exponentiation, which makes it easier for local users to discover RSA keys by running a crafted application on the same Intel Sandy Bridge CPU core as a victim and leveraging cache-bank conflicts, aka a \"CacheBleed\" attack.",
  "repo": "openssl/openssl",
  "patch_hash": "d6482a82bc2228327aa4ba98aeeecd9979542a31",
  "patch_info": {
    "commit_hash": "d6482a82bc2228327aa4ba98aeeecd9979542a31",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/d6482a82bc2228327aa4ba98aeeecd9979542a31",
    "files": [
      "crypto/bn/bn_exp.c"
    ],
    "message": "bn/bn_exp.c: constant-time MOD_EXP_CTIME_COPY_FROM_PREBUF.\n\nPerformance penalty varies from platform to platform, and even\nkey length. For rsa2048 sign it was observed to reach almost 10%.\n\nCVE-2016-0702\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c"
    ]
  },
  "patch_diff": {
    "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c": [
      "File: crypto/bn/bn_exp.c -> crypto/bn/bn_exp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "111: #include \"internal/cryptlib.h\"",
      "112: #include \"bn_lcl.h\"",
      "114: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "112: #include \"internal/constant_time_locl.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "606: static int MOD_EXP_CTIME_COPY_TO_PREBUF(const BIGNUM *b, int top,",
      "607:                                         unsigned char *buf, int idx,",
      "609: {",
      "612:     if (top > b->top)",
      "613:         top = b->top;           /* this works because 'buf' is explicitly",
      "617:     }",
      "619:     return 1;",
      "",
      "[Removed Lines]",
      "608:                                         int width)",
      "610:     size_t i, j;",
      "615:     for (i = 0, j = idx; i < top * sizeof b->d[0]; i++, j += width) {",
      "616:         buf[j] = ((unsigned char *)b->d)[i];",
      "",
      "[Added Lines]",
      "609:                                         int window)",
      "611:     int i, j;",
      "612:     int width = 1 << window;",
      "613:     BN_ULONG *table = (BN_ULONG *)buf;",
      "618:     for (i = 0, j = idx; i < top; i++, j += width) {",
      "619:         table[j] = b->d[i];",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "622: static int MOD_EXP_CTIME_COPY_FROM_PREBUF(BIGNUM *b, int top,",
      "623:                                           unsigned char *buf, int idx,",
      "625: {",
      "628:     if (bn_wexpand(b, top) == NULL)",
      "629:         return 0;",
      "633:     }",
      "635:     b->top = top;",
      "",
      "[Removed Lines]",
      "624:                                           int width)",
      "626:     size_t i, j;",
      "631:     for (i = 0, j = idx; i < top * sizeof b->d[0]; i++, j += width) {",
      "632:         ((unsigned char *)b->d)[i] = buf[j];",
      "",
      "[Added Lines]",
      "627:                                           int window)",
      "629:     int i, j;",
      "630:     int width = 1 << window;",
      "631:     volatile BN_ULONG *table = (volatile BN_ULONG *)buf;",
      "636:     if (window <= 3) {",
      "637:         for (i = 0; i < top; i++, table += width) {",
      "638:             BN_ULONG acc = 0;",
      "640:             for (j = 0; j < width; j++) {",
      "641:                 acc |= table[j] &",
      "642:                        ((BN_ULONG)0 - (constant_time_eq_int(j,idx)&1));",
      "643:             }",
      "645:             b->d[i] = acc;",
      "646:         }",
      "647:     } else {",
      "648:         int xstride = 1 << (window - 2);",
      "649:         BN_ULONG y0, y1, y2, y3;",
      "654:         y0 = (BN_ULONG)0 - (constant_time_eq_int(i,0)&1);",
      "655:         y1 = (BN_ULONG)0 - (constant_time_eq_int(i,1)&1);",
      "656:         y2 = (BN_ULONG)0 - (constant_time_eq_int(i,2)&1);",
      "657:         y3 = (BN_ULONG)0 - (constant_time_eq_int(i,3)&1);",
      "659:         for (i = 0; i < top; i++, table += width) {",
      "660:             BN_ULONG acc = 0;",
      "662:             for (j = 0; j < xstride; j++) {",
      "663:                 acc |= ( (table[j + 0 * xstride] & y0) |",
      "664:                          (table[j + 1 * xstride] & y1) |",
      "665:                          (table[j + 2 * xstride] & y2) |",
      "666:                          (table[j + 3 * xstride] & y3) )",
      "667:                        & ((BN_ULONG)0 - (constant_time_eq_int(j,idx)&1));",
      "668:             }",
      "670:             b->d[i] = acc;",
      "671:         }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1063:     } else",
      "1064: #endif",
      "1065:     {",
      "1067:             goto err;",
      "1069:             goto err;",
      "",
      "[Removed Lines]",
      "1066:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, 0, numPowers))",
      "1068:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&am, top, powerbuf, 1, numPowers))",
      "",
      "[Added Lines]",
      "1105:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, 0, window))",
      "1107:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&am, top, powerbuf, 1, window))",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1077:         if (window > 1) {",
      "1078:             if (!BN_mod_mul_montgomery(&tmp, &am, &am, mont, ctx))",
      "1079:                 goto err;",
      "1082:                 goto err;",
      "1083:             for (i = 3; i < numPowers; i++) {",
      "1085:                 if (!BN_mod_mul_montgomery(&tmp, &am, &tmp, mont, ctx))",
      "1086:                     goto err;",
      "1089:                     goto err;",
      "1090:             }",
      "1091:         }",
      "",
      "[Removed Lines]",
      "1080:             if (!MOD_EXP_CTIME_COPY_TO_PREBUF",
      "1081:                 (&tmp, top, powerbuf, 2, numPowers))",
      "1087:                 if (!MOD_EXP_CTIME_COPY_TO_PREBUF",
      "1088:                     (&tmp, top, powerbuf, i, numPowers))",
      "",
      "[Added Lines]",
      "1119:             if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, 2,",
      "1120:                                               window))",
      "1126:                 if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, i,",
      "1127:                                                   window))",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1093:         bits--;",
      "1094:         for (wvalue = 0, i = bits % window; i >= 0; i--, bits--)",
      "1095:             wvalue = (wvalue << 1) + BN_is_bit_set(p, bits);",
      "1098:             goto err;",
      "",
      "[Removed Lines]",
      "1096:         if (!MOD_EXP_CTIME_COPY_FROM_PREBUF",
      "1097:             (&tmp, top, powerbuf, wvalue, numPowers))",
      "",
      "[Added Lines]",
      "1135:         if (!MOD_EXP_CTIME_COPY_FROM_PREBUF(&tmp, top, powerbuf, wvalue,",
      "1136:                                             window))",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1119:                 goto err;",
      "",
      "[Removed Lines]",
      "1117:             if (!MOD_EXP_CTIME_COPY_FROM_PREBUF",
      "1118:                 (&am, top, powerbuf, wvalue, numPowers))",
      "",
      "[Added Lines]",
      "1156:             if (!MOD_EXP_CTIME_COPY_FROM_PREBUF(&am, top, powerbuf, wvalue,",
      "1157:                                                 window))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "708dc2f1291e104fe4eef810bb8ffc1fae5b19c1",
      "candidate_info": {
        "commit_hash": "708dc2f1291e104fe4eef810bb8ffc1fae5b19c1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/708dc2f1291e104fe4eef810bb8ffc1fae5b19c1",
        "files": [
          "crypto/bn/bn_exp.c"
        ],
        "message": "bn/bn_exp.c: constant-time MOD_EXP_CTIME_COPY_FROM_PREBUF.\n\nPerformance penalty varies from platform to platform, and even\nkey length. For rsa2048 sign it was observed to reach almost 10%.\n\nCVE-2016-0702\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from master)\n\nResolved conflicts:\n\tcrypto/bn/bn_exp.c",
        "before_after_code_files": [
          "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c"
          ],
          "candidate": [
            "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c": [
          "File: crypto/bn/bn_exp.c -> crypto/bn/bn_exp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "112: #include \"cryptlib.h\"",
          "113: #include \"bn_lcl.h\"",
          "115: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113: #include \"constant_time_locl.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "607: static int MOD_EXP_CTIME_COPY_TO_PREBUF(const BIGNUM *b, int top,",
          "608:                                         unsigned char *buf, int idx,",
          "610: {",
          "613:     if (top > b->top)",
          "614:         top = b->top;           /* this works because 'buf' is explicitly",
          "618:     }",
          "620:     return 1;",
          "",
          "[Removed Lines]",
          "609:                                         int width)",
          "611:     size_t i, j;",
          "616:     for (i = 0, j = idx; i < top * sizeof b->d[0]; i++, j += width) {",
          "617:         buf[j] = ((unsigned char *)b->d)[i];",
          "",
          "[Added Lines]",
          "610:                                         int window)",
          "612:     int i, j;",
          "613:     int width = 1 << window;",
          "614:     BN_ULONG *table = (BN_ULONG *)buf;",
          "619:     for (i = 0, j = idx; i < top; i++, j += width) {",
          "620:         table[j] = b->d[i];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "623: static int MOD_EXP_CTIME_COPY_FROM_PREBUF(BIGNUM *b, int top,",
          "624:                                           unsigned char *buf, int idx,",
          "626: {",
          "629:     if (bn_wexpand(b, top) == NULL)",
          "630:         return 0;",
          "634:     }",
          "636:     b->top = top;",
          "",
          "[Removed Lines]",
          "625:                                           int width)",
          "627:     size_t i, j;",
          "632:     for (i = 0, j = idx; i < top * sizeof b->d[0]; i++, j += width) {",
          "633:         ((unsigned char *)b->d)[i] = buf[j];",
          "",
          "[Added Lines]",
          "628:                                           int window)",
          "630:     int i, j;",
          "631:     int width = 1 << window;",
          "632:     volatile BN_ULONG *table = (volatile BN_ULONG *)buf;",
          "637:     if (window <= 3) {",
          "638:         for (i = 0; i < top; i++, table += width) {",
          "639:             BN_ULONG acc = 0;",
          "641:             for (j = 0; j < width; j++) {",
          "642:                 acc |= table[j] &",
          "643:                        ((BN_ULONG)0 - (constant_time_eq_int(j,idx)&1));",
          "644:             }",
          "646:             b->d[i] = acc;",
          "647:         }",
          "648:     } else {",
          "649:         int xstride = 1 << (window - 2);",
          "650:         BN_ULONG y0, y1, y2, y3;",
          "655:         y0 = (BN_ULONG)0 - (constant_time_eq_int(i,0)&1);",
          "656:         y1 = (BN_ULONG)0 - (constant_time_eq_int(i,1)&1);",
          "657:         y2 = (BN_ULONG)0 - (constant_time_eq_int(i,2)&1);",
          "658:         y3 = (BN_ULONG)0 - (constant_time_eq_int(i,3)&1);",
          "660:         for (i = 0; i < top; i++, table += width) {",
          "661:             BN_ULONG acc = 0;",
          "663:             for (j = 0; j < xstride; j++) {",
          "664:                 acc |= ( (table[j + 0 * xstride] & y0) |",
          "665:                          (table[j + 1 * xstride] & y1) |",
          "666:                          (table[j + 2 * xstride] & y2) |",
          "667:                          (table[j + 3 * xstride] & y3) )",
          "668:                        & ((BN_ULONG)0 - (constant_time_eq_int(j,idx)&1));",
          "669:             }",
          "671:             b->d[i] = acc;",
          "672:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1065:     } else",
          "1066: #endif",
          "1067:     {",
          "1069:             goto err;",
          "1071:             goto err;",
          "",
          "[Removed Lines]",
          "1068:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, 0, numPowers))",
          "1070:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&am, top, powerbuf, 1, numPowers))",
          "",
          "[Added Lines]",
          "1107:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, 0, window))",
          "1109:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&am, top, powerbuf, 1, window))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1079:         if (window > 1) {",
          "1080:             if (!BN_mod_mul_montgomery(&tmp, &am, &am, mont, ctx))",
          "1081:                 goto err;",
          "1084:                 goto err;",
          "1085:             for (i = 3; i < numPowers; i++) {",
          "1087:                 if (!BN_mod_mul_montgomery(&tmp, &am, &tmp, mont, ctx))",
          "1088:                     goto err;",
          "1091:                     goto err;",
          "1092:             }",
          "1093:         }",
          "",
          "[Removed Lines]",
          "1082:             if (!MOD_EXP_CTIME_COPY_TO_PREBUF",
          "1083:                 (&tmp, top, powerbuf, 2, numPowers))",
          "1089:                 if (!MOD_EXP_CTIME_COPY_TO_PREBUF",
          "1090:                     (&tmp, top, powerbuf, i, numPowers))",
          "",
          "[Added Lines]",
          "1121:             if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, 2,",
          "1122:                                               window))",
          "1128:                 if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, i,",
          "1129:                                                   window))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1095:         bits--;",
          "1096:         for (wvalue = 0, i = bits % window; i >= 0; i--, bits--)",
          "1097:             wvalue = (wvalue << 1) + BN_is_bit_set(p, bits);",
          "1100:             goto err;",
          "",
          "[Removed Lines]",
          "1098:         if (!MOD_EXP_CTIME_COPY_FROM_PREBUF",
          "1099:             (&tmp, top, powerbuf, wvalue, numPowers))",
          "",
          "[Added Lines]",
          "1137:         if (!MOD_EXP_CTIME_COPY_FROM_PREBUF(&tmp, top, powerbuf, wvalue,",
          "1138:                                             window))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1121:                 goto err;",
          "",
          "[Removed Lines]",
          "1119:             if (!MOD_EXP_CTIME_COPY_FROM_PREBUF",
          "1120:                 (&am, top, powerbuf, wvalue, numPowers))",
          "",
          "[Added Lines]",
          "1158:             if (!MOD_EXP_CTIME_COPY_FROM_PREBUF(&am, top, powerbuf, wvalue,",
          "1159:                                                 window))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d7a854c055ff22fb7da80c3b0e7cb08d248591d0",
      "candidate_info": {
        "commit_hash": "d7a854c055ff22fb7da80c3b0e7cb08d248591d0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d7a854c055ff22fb7da80c3b0e7cb08d248591d0",
        "files": [
          "crypto/bn/bn_exp.c"
        ],
        "message": "bn/bn_exp.c: constant-time MOD_EXP_CTIME_COPY_FROM_PREBUF.\n\nPerformance penalty varies from platform to platform, and even\nkey length. For rsa2048 sign it was observed to reach almost 10%.\n\nCVE-2016-0702\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c"
          ],
          "candidate": [
            "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_exp.c||crypto/bn/bn_exp.c": [
          "File: crypto/bn/bn_exp.c -> crypto/bn/bn_exp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "112: #include \"cryptlib.h\"",
          "113: #include \"bn_lcl.h\"",
          "115: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113: #include \"constant_time_locl.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "547: static int MOD_EXP_CTIME_COPY_TO_PREBUF(const BIGNUM *b, int top,",
          "548:                                         unsigned char *buf, int idx,",
          "550: {",
          "553:     if (top > b->top)",
          "554:         top = b->top;           /* this works because 'buf' is explicitly",
          "558:     }",
          "560:     return 1;",
          "",
          "[Removed Lines]",
          "549:                                         int width)",
          "551:     size_t i, j;",
          "556:     for (i = 0, j = idx; i < top * sizeof b->d[0]; i++, j += width) {",
          "557:         buf[j] = ((unsigned char *)b->d)[i];",
          "",
          "[Added Lines]",
          "550:                                         int window)",
          "552:     int i, j;",
          "553:     int width = 1 << window;",
          "554:     BN_ULONG *table = (BN_ULONG *)buf;",
          "559:     for (i = 0, j = idx; i < top; i++, j += width) {",
          "560:         table[j] = b->d[i];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "563: static int MOD_EXP_CTIME_COPY_FROM_PREBUF(BIGNUM *b, int top,",
          "564:                                           unsigned char *buf, int idx,",
          "566: {",
          "569:     if (bn_wexpand(b, top) == NULL)",
          "570:         return 0;",
          "574:     }",
          "576:     b->top = top;",
          "",
          "[Removed Lines]",
          "565:                                           int width)",
          "567:     size_t i, j;",
          "572:     for (i = 0, j = idx; i < top * sizeof b->d[0]; i++, j += width) {",
          "573:         ((unsigned char *)b->d)[i] = buf[j];",
          "",
          "[Added Lines]",
          "568:                                           int window)",
          "570:     int i, j;",
          "571:     int width = 1 << window;",
          "572:     volatile BN_ULONG *table = (volatile BN_ULONG *)buf;",
          "577:     if (window <= 3) {",
          "578:         for (i = 0; i < top; i++, table += width) {",
          "579:             BN_ULONG acc = 0;",
          "581:             for (j = 0; j < width; j++) {",
          "582:                 acc |= table[j] &",
          "583:                        ((BN_ULONG)0 - (constant_time_eq_int(j,idx)&1));",
          "584:             }",
          "586:             b->d[i] = acc;",
          "587:         }",
          "588:     } else {",
          "589:         int xstride = 1 << (window - 2);",
          "590:         BN_ULONG y0, y1, y2, y3;",
          "595:         y0 = (BN_ULONG)0 - (constant_time_eq_int(i,0)&1);",
          "596:         y1 = (BN_ULONG)0 - (constant_time_eq_int(i,1)&1);",
          "597:         y2 = (BN_ULONG)0 - (constant_time_eq_int(i,2)&1);",
          "598:         y3 = (BN_ULONG)0 - (constant_time_eq_int(i,3)&1);",
          "600:         for (i = 0; i < top; i++, table += width) {",
          "601:             BN_ULONG acc = 0;",
          "603:             for (j = 0; j < xstride; j++) {",
          "604:                 acc |= ( (table[j + 0 * xstride] & y0) |",
          "605:                          (table[j + 1 * xstride] & y1) |",
          "606:                          (table[j + 2 * xstride] & y2) |",
          "607:                          (table[j + 3 * xstride] & y3) )",
          "608:                        & ((BN_ULONG)0 - (constant_time_eq_int(j,idx)&1));",
          "609:             }",
          "611:             b->d[i] = acc;",
          "612:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "800:     } else",
          "801: #endif",
          "802:     {",
          "804:             goto err;",
          "806:             goto err;",
          "",
          "[Removed Lines]",
          "803:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, 0, numPowers))",
          "805:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&am, top, powerbuf, 1, numPowers))",
          "",
          "[Added Lines]",
          "842:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, 0, window))",
          "844:         if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&am, top, powerbuf, 1, window))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "814:         if (window > 1) {",
          "815:             if (!BN_mod_mul_montgomery(&tmp, &am, &am, mont, ctx))",
          "816:                 goto err;",
          "819:                 goto err;",
          "820:             for (i = 3; i < numPowers; i++) {",
          "822:                 if (!BN_mod_mul_montgomery(&tmp, &am, &tmp, mont, ctx))",
          "823:                     goto err;",
          "826:                     goto err;",
          "827:             }",
          "828:         }",
          "",
          "[Removed Lines]",
          "817:             if (!MOD_EXP_CTIME_COPY_TO_PREBUF",
          "818:                 (&tmp, top, powerbuf, 2, numPowers))",
          "824:                 if (!MOD_EXP_CTIME_COPY_TO_PREBUF",
          "825:                     (&tmp, top, powerbuf, i, numPowers))",
          "",
          "[Added Lines]",
          "856:             if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, 2,",
          "857:                                               window))",
          "863:                 if (!MOD_EXP_CTIME_COPY_TO_PREBUF(&tmp, top, powerbuf, i,",
          "864:                                                   window))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "830:         bits--;",
          "831:         for (wvalue = 0, i = bits % window; i >= 0; i--, bits--)",
          "832:             wvalue = (wvalue << 1) + BN_is_bit_set(p, bits);",
          "835:             goto err;",
          "",
          "[Removed Lines]",
          "833:         if (!MOD_EXP_CTIME_COPY_FROM_PREBUF",
          "834:             (&tmp, top, powerbuf, wvalue, numPowers))",
          "",
          "[Added Lines]",
          "872:         if (!MOD_EXP_CTIME_COPY_FROM_PREBUF(&tmp, top, powerbuf, wvalue,",
          "873:                                             window))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "856:                 goto err;",
          "",
          "[Removed Lines]",
          "854:             if (!MOD_EXP_CTIME_COPY_FROM_PREBUF",
          "855:                 (&am, top, powerbuf, wvalue, numPowers))",
          "",
          "[Added Lines]",
          "893:             if (!MOD_EXP_CTIME_COPY_FROM_PREBUF(&am, top, powerbuf, wvalue,",
          "894:                                                 window))",
          "",
          "---------------"
        ]
      }
    }
  ]
}