{
  "cve_id": "CVE-2017-9350",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.6 and 2.0.0 to 2.0.12, the openSAFETY dissector could crash or exhaust system memory. This was addressed in epan/dissectors/packet-opensafety.c by checking for a negative length.",
  "repo": "wireshark/wireshark",
  "patch_hash": "f6431695049116176361ce4691dfd3c77ab19858",
  "patch_info": {
    "commit_hash": "f6431695049116176361ce4691dfd3c77ab19858",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/f6431695049116176361ce4691dfd3c77ab19858",
    "files": [
      "epan/dissectors/packet-opensafety.c"
    ],
    "message": "[OpenSafety] Bugfix invalid length calculation.\n\nLength calculation leads to -1, which will result in a large malloc\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1212\nBug: 13649\nChange-Id: Iccb78b8c8ec9ca8e8f97bc12d0d8f41526d1f791\nReviewed-on: https://code.wireshark.org/review/21367\nReviewed-by: Roland Knall <rknall@gmail.com>\nPetri-Dish: Roland Knall <rknall@gmail.com>\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-opensafety.c||epan/dissectors/packet-opensafety.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-opensafety.c||epan/dissectors/packet-opensafety.c": [
      "File: epan/dissectors/packet-opensafety.c -> epan/dissectors/packet-opensafety.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1286:             else",
      "1287:             {",
      "1288:                 payloadSize = dataLength - (payloadOffset - db0Offset);",
      "1290:                 if ( fragmentId != 0 && packet->payload.ssdo->sacmd.segmented )",
      "1291:                 {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1289:                 if ((gint)dataLength < (payloadOffset - db0Offset))",
      "1290:                 {",
      "1291:                     if ( global_opensafety_debug_verbose )",
      "1292:                         expert_add_info_format(pinfo, opensafety_item, &ei_payload_length_not_positive,",
      "1293:                                                     \"Calculation for payload length yielded non-positive result [%d]\", (gint)payloadSize );",
      "1294:                     return;",
      "1295:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3ce1ba99f1965f5e400ddc753d9bb141939b1983",
      "candidate_info": {
        "commit_hash": "3ce1ba99f1965f5e400ddc753d9bb141939b1983",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/3ce1ba99f1965f5e400ddc753d9bb141939b1983",
        "files": [
          "epan/dissectors/packet-opensafety.c"
        ],
        "message": "[OpenSafety] Bugfix invalid length calculation.\n\nLength calculation leads to -1, which will result in a large malloc\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1212\nBug: 13649\nChange-Id: Iccb78b8c8ec9ca8e8f97bc12d0d8f41526d1f791\nReviewed-on: https://code.wireshark.org/review/21367\nReviewed-by: Roland Knall <rknall@gmail.com>\nPetri-Dish: Roland Knall <rknall@gmail.com>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit f6431695049116176361ce4691dfd3c77ab19858)\nReviewed-on: https://code.wireshark.org/review/21375\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>",
        "before_after_code_files": [
          "epan/dissectors/packet-opensafety.c||epan/dissectors/packet-opensafety.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-opensafety.c||epan/dissectors/packet-opensafety.c"
          ],
          "candidate": [
            "epan/dissectors/packet-opensafety.c||epan/dissectors/packet-opensafety.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-opensafety.c||epan/dissectors/packet-opensafety.c": [
          "File: epan/dissectors/packet-opensafety.c -> epan/dissectors/packet-opensafety.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1293:             else",
          "1294:             {",
          "1295:                 payloadSize = dataLength - (payloadOffset - db0Offset);",
          "1297:                 if ( fragmentId != 0 && packet->payload.ssdo->sacmd.segmented )",
          "1298:                 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1296:                 if ((gint)dataLength < (payloadOffset - db0Offset))",
          "1297:                 {",
          "1298:                     if ( global_opensafety_debug_verbose )",
          "1299:                         expert_add_info_format(pinfo, opensafety_item, &ei_payload_length_not_positive,",
          "1300:                                                     \"Calculation for payload length yielded non-positive result [%d]\", (gint)payloadSize );",
          "1301:                     return;",
          "1302:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dbc7cb0bbdd501fa96e0cb98668f6d6bf17ac4e6",
      "candidate_info": {
        "commit_hash": "dbc7cb0bbdd501fa96e0cb98668f6d6bf17ac4e6",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/dbc7cb0bbdd501fa96e0cb98668f6d6bf17ac4e6",
        "files": [
          "epan/dissectors/packet-opensafety.c"
        ],
        "message": "[OpenSafety] Bugfix invalid length calculation.\n\nLength calculation leads to -1, which will result in a large malloc\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1212\nBug: 13649\nChange-Id: Iccb78b8c8ec9ca8e8f97bc12d0d8f41526d1f791\nReviewed-on: https://code.wireshark.org/review/21367\nReviewed-by: Roland Knall <rknall@gmail.com>\nPetri-Dish: Roland Knall <rknall@gmail.com>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit f6431695049116176361ce4691dfd3c77ab19858)\nReviewed-on: https://code.wireshark.org/review/21376\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>",
        "before_after_code_files": [
          "epan/dissectors/packet-opensafety.c||epan/dissectors/packet-opensafety.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-opensafety.c||epan/dissectors/packet-opensafety.c"
          ],
          "candidate": [
            "epan/dissectors/packet-opensafety.c||epan/dissectors/packet-opensafety.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-opensafety.c||epan/dissectors/packet-opensafety.c": [
          "File: epan/dissectors/packet-opensafety.c -> epan/dissectors/packet-opensafety.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1290:             else",
          "1291:             {",
          "1292:                 payloadSize = dataLength - (payloadOffset - db0Offset);",
          "1294:                 if ( fragmentId != 0 && packet->payload.ssdo->sacmd.segmented )",
          "1295:                 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1293:                 if ((gint)dataLength < (payloadOffset - db0Offset))",
          "1294:                 {",
          "1295:                     expert_add_info_format(pinfo, opensafety_item, &ei_payload_length_not_positive,",
          "1296:                                                     \"Calculation for payload length yielded non-positive result [%d]\", (gint)payloadSize );",
          "1297:                     return;",
          "1298:                 }",
          "",
          "---------------"
        ]
      }
    }
  ]
}