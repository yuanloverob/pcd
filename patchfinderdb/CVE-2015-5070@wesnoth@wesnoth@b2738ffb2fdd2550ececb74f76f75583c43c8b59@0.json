{
  "cve_id": "CVE-2015-5070",
  "cve_desc": "The (1) filesystem::get_wml_location function in filesystem.cpp and (2) is_legal_file function in filesystem_boost.cpp in Battle for Wesnoth before 1.12.4 and 1.13.x before 1.13.1, when a case-insensitive filesystem is used, allow remote attackers to obtain sensitive information via vectors related to inclusion of .pbl files from WML.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-5069.",
  "repo": "wesnoth/wesnoth",
  "patch_hash": "b2738ffb2fdd2550ececb74f76f75583c43c8b59",
  "patch_info": {
    "commit_hash": "b2738ffb2fdd2550ececb74f76f75583c43c8b59",
    "repo": "wesnoth/wesnoth",
    "commit_url": "https://github.com/wesnoth/wesnoth/commit/b2738ffb2fdd2550ececb74f76f75583c43c8b59",
    "files": [
      "changelog",
      "players_changelog",
      "src/filesystem.cpp",
      "src/filesystem_boost.cpp"
    ],
    "message": "Use looks_like_pbl() to disallow .pbl file inclusion (bug #23504)\n\nThis function is implemented using case-insensitive pattern matching,\nunlike filesystem::ends_with(). I missed this when writing my original\nfix, so the vulnerability still applied to .pbl files on a\ncase-insensitive filesystem (e.g. NTFS and FAT* on Windows) by using\ndifferent case to bypass the check.",
    "before_after_code_files": [
      "src/filesystem.cpp||src/filesystem.cpp",
      "src/filesystem_boost.cpp||src/filesystem_boost.cpp"
    ]
  },
  "patch_diff": {
    "src/filesystem.cpp||src/filesystem.cpp": [
      "File: src/filesystem.cpp -> src/filesystem.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1008:   return result;",
      "1009:  }",
      "1012:   ERR_FS << \"Illegal path '\" << filename << \"' (.pbl files are not allowed).\" << std::endl;",
      "1013:   return result;",
      "1014:  }",
      "",
      "[Removed Lines]",
      "1011:  if (ends_with(filename, \".pbl\")) {",
      "",
      "[Added Lines]",
      "1011:  if (looks_like_pbl(filename)) {",
      "",
      "---------------"
    ],
    "src/filesystem_boost.cpp||src/filesystem_boost.cpp": [
      "File: src/filesystem_boost.cpp -> src/filesystem_boost.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1000:   return false;",
      "1001:  }",
      "1004:   ERR_FS << \"Illegal path '\" << filename << \"' (.pbl files are not allowed).\" << std::endl;",
      "1005:   return false;",
      "1006:  }",
      "",
      "[Removed Lines]",
      "1003:  if (ends_with(filename, \".pbl\")) {",
      "",
      "[Added Lines]",
      "1003:  if (looks_like_pbl(filename)) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f8914468182e8d0a1551b430c0879ba236fe4d6d",
      "candidate_info": {
        "commit_hash": "f8914468182e8d0a1551b430c0879ba236fe4d6d",
        "repo": "wesnoth/wesnoth",
        "commit_url": "https://github.com/wesnoth/wesnoth/commit/f8914468182e8d0a1551b430c0879ba236fe4d6d",
        "files": [
          "changelog",
          "src/filesystem.cpp",
          "src/filesystem_boost.cpp"
        ],
        "message": "Disallow inclusion of .pbl files from WML (bug #23504)\n\nNote that this will also cause Lua wesnoth.have_file() to return false\non .pbl files.",
        "before_after_code_files": [
          "src/filesystem.cpp||src/filesystem.cpp",
          "src/filesystem_boost.cpp||src/filesystem_boost.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/filesystem.cpp||src/filesystem.cpp",
            "src/filesystem_boost.cpp||src/filesystem_boost.cpp"
          ],
          "candidate": [
            "src/filesystem.cpp||src/filesystem.cpp",
            "src/filesystem_boost.cpp||src/filesystem_boost.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/filesystem.cpp||src/filesystem.cpp": [
          "File: src/filesystem.cpp -> src/filesystem.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1008:   return result;",
          "1009:  }",
          "1011:  bool already_found = false;",
          "1013:  if (filename[0] == '~')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1011:  if (ends_with(filename, \".pbl\")) {",
          "1012:   ERR_FS << \"Illegal path '\" << filename << \"' (.pbl files are not allowed).\" << std::endl;",
          "1013:   return result;",
          "1014:  }",
          "",
          "---------------"
        ],
        "src/filesystem_boost.cpp||src/filesystem_boost.cpp": [
          "File: src/filesystem_boost.cpp -> src/filesystem_boost.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1000:   return false;",
          "1001:  }",
          "1003:  return true;",
          "1004: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1003:  if (ends_with(filename, \".pbl\")) {",
          "1004:   ERR_FS << \"Illegal path '\" << filename << \"' (.pbl files are not allowed).\" << std::endl;",
          "1005:   return false;",
          "1006:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f3dbfb0862044c749f2b6dee5b81f47c6b16b3d",
      "candidate_info": {
        "commit_hash": "1f3dbfb0862044c749f2b6dee5b81f47c6b16b3d",
        "repo": "wesnoth/wesnoth",
        "commit_url": "https://github.com/wesnoth/wesnoth/commit/1f3dbfb0862044c749f2b6dee5b81f47c6b16b3d",
        "files": [
          "changelog",
          "players_changelog",
          "src/filesystem.cpp",
          "src/filesystem_boost.cpp"
        ],
        "message": "Use looks_like_pbl() to disallow .pbl file inclusion (bug #23504)\n\nThis function is implemented using case-insensitive pattern matching,\nunlike filesystem::ends_with(). I missed this when writing my original\nfix, so the vulnerability still applied to .pbl files on a\ncase-insensitive filesystem (e.g. NTFS and FAT* on Windows) by using\ndifferent case to bypass the check.",
        "before_after_code_files": [
          "src/filesystem.cpp||src/filesystem.cpp",
          "src/filesystem_boost.cpp||src/filesystem_boost.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/filesystem.cpp||src/filesystem.cpp",
            "src/filesystem_boost.cpp||src/filesystem_boost.cpp"
          ],
          "candidate": [
            "src/filesystem.cpp||src/filesystem.cpp",
            "src/filesystem_boost.cpp||src/filesystem_boost.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/filesystem.cpp||src/filesystem.cpp": [
          "File: src/filesystem.cpp -> src/filesystem.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1025:   return result;",
          "1026:  }",
          "1029:   ERR_FS << \"Illegal path '\" << filename << \"' (.pbl files are not allowed).\" << std::endl;",
          "1030:   return result;",
          "1031:  }",
          "",
          "[Removed Lines]",
          "1028:  if (ends_with(filename, \".pbl\")) {",
          "",
          "[Added Lines]",
          "1028:  if (looks_like_pbl(filename)) {",
          "",
          "---------------"
        ],
        "src/filesystem_boost.cpp||src/filesystem_boost.cpp": [
          "File: src/filesystem_boost.cpp -> src/filesystem_boost.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "979:   return false;",
          "980:  }",
          "983:   ERR_FS << \"Illegal path '\" << filename << \"' (.pbl files are not allowed).\" << std::endl;",
          "984:   return false;",
          "985:  }",
          "",
          "[Removed Lines]",
          "982:  if (ends_with(filename, \".pbl\")) {",
          "",
          "[Added Lines]",
          "982:  if (looks_like_pbl(filename)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d20f8015bc3653a10d6d4dfd751e62651d1180b7",
      "candidate_info": {
        "commit_hash": "d20f8015bc3653a10d6d4dfd751e62651d1180b7",
        "repo": "wesnoth/wesnoth",
        "commit_url": "https://github.com/wesnoth/wesnoth/commit/d20f8015bc3653a10d6d4dfd751e62651d1180b7",
        "files": [
          "changelog",
          "players_changelog",
          "src/filesystem.cpp"
        ],
        "message": "Use looks_like_pbl() to disallow .pbl file inclusion (bug #23504)\n\nThis function is implemented using case-insensitive pattern matching,\nunlike filesystem::ends_with(). I missed this when writing my original\nfix, so the vulnerability still applied to .pbl files on a\ncase-insensitive filesystem (e.g. NTFS and FAT* on Windows) by using\ndifferent case to bypass the check.",
        "before_after_code_files": [
          "src/filesystem.cpp||src/filesystem.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/filesystem.cpp||src/filesystem.cpp"
          ],
          "candidate": [
            "src/filesystem.cpp||src/filesystem.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/filesystem.cpp||src/filesystem.cpp": [
          "File: src/filesystem.cpp -> src/filesystem.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1157:   return result;",
          "1158:  }",
          "1161:   ERR_FS << \"Illegal path '\" << filename << \"' (.pbl files are not allowed).\" << std::endl;",
          "1162:   return result;",
          "1163:  }",
          "",
          "[Removed Lines]",
          "1160:  if (ends_with(filename, \".pbl\")) {",
          "",
          "[Added Lines]",
          "1160:  if (looks_like_pbl(filename)) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}