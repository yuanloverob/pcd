{
  "cve_id": "CVE-2016-7480",
  "cve_desc": "The SplObjectStorage unserialize implementation in ext/spl/spl_observer.c in PHP before 7.0.12 does not verify that a key is an object, which allows remote attackers to execute arbitrary code or cause a denial of service (uninitialized memory access) via crafted serialized data.",
  "repo": "php/php-src",
  "patch_hash": "61cdd1255d5b9c8453be71aacbbf682796ac77d4",
  "patch_info": {
    "commit_hash": "61cdd1255d5b9c8453be71aacbbf682796ac77d4",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/61cdd1255d5b9c8453be71aacbbf682796ac77d4",
    "files": [
      "ext/spl/spl_observer.c"
    ],
    "message": "Fix bug #73257 and bug #73258 - SplObjectStorage unserialize allows use of non-object as key",
    "before_after_code_files": [
      "ext/spl/spl_observer.c||ext/spl/spl_observer.c"
    ]
  },
  "patch_diff": {
    "ext/spl/spl_observer.c||ext/spl/spl_observer.c": [
      "File: ext/spl/spl_observer.c -> ext/spl/spl_observer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "773:  count = Z_LVAL_P(pcount);",
      "775:  while (count-- > 0) {",
      "776:   spl_SplObjectStorageElement *pelement;",
      "777:   zend_string *hash;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "775:  ZVAL_UNDEF(&entry);",
      "776:  ZVAL_UNDEF(&inf);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "787:   if (!php_var_unserialize(&entry, &p, s + buf_len, &var_hash)) {",
      "788:    goto outexcept;",
      "789:   }",
      "795:    ++p;",
      "796:    if (!php_var_unserialize(&inf, &p, s + buf_len, &var_hash)) {",
      "797:     zval_ptr_dtor(&entry);",
      "798:     goto outexcept;",
      "799:    }",
      "802:   }",
      "804:   hash = spl_object_storage_get_hash(intern, getThis(), &entry);",
      "",
      "[Removed Lines]",
      "790:   if (Z_TYPE(entry) != IS_OBJECT) {",
      "791:    zval_ptr_dtor(&entry);",
      "792:    goto outexcept;",
      "793:   }",
      "800:   } else {",
      "801:    ZVAL_UNDEF(&inf);",
      "",
      "[Added Lines]",
      "799:   }",
      "800:   if (Z_TYPE(entry) != IS_OBJECT) {",
      "801:    zval_ptr_dtor(&entry);",
      "802:    zval_ptr_dtor(&inf);",
      "803:    goto outexcept;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f901dce57548cf1ef63578966ee16fa11509adcf",
      "candidate_info": {
        "commit_hash": "f901dce57548cf1ef63578966ee16fa11509adcf",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/f901dce57548cf1ef63578966ee16fa11509adcf",
        "files": [
          "ext/spl/spl_observer.c"
        ],
        "message": "Fix bug #73257 and bug #73258 - SplObjectStorage unserialize allows use of non-object as key\n\n(cherry picked from commit 61cdd1255d5b9c8453be71aacbbf682796ac77d4)",
        "before_after_code_files": [
          "ext/spl/spl_observer.c||ext/spl/spl_observer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "ext/spl/spl_observer.c||ext/spl/spl_observer.c"
          ],
          "candidate": [
            "ext/spl/spl_observer.c||ext/spl/spl_observer.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/spl/spl_observer.c||ext/spl/spl_observer.c": [
          "File: ext/spl/spl_observer.c -> ext/spl/spl_observer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "789:  count = Z_LVAL_P(pcount);",
          "791:  while (count-- > 0) {",
          "792:   spl_SplObjectStorageElement *pelement;",
          "793:   zend_hash_key key;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "791:  ZVAL_UNDEF(&entry);",
          "792:  ZVAL_UNDEF(&inf);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "803:   if (!php_var_unserialize(&entry, &p, s + buf_len, &var_hash)) {",
          "804:    goto outexcept;",
          "805:   }",
          "811:    ++p;",
          "812:    if (!php_var_unserialize(&inf, &p, s + buf_len, &var_hash)) {",
          "813:     zval_ptr_dtor(&entry);",
          "814:     goto outexcept;",
          "815:    }",
          "818:   }",
          "820:   if (spl_object_storage_get_hash(&key, intern, getThis(), &entry) == FAILURE) {",
          "",
          "[Removed Lines]",
          "806:   if (Z_TYPE(entry) != IS_OBJECT) {",
          "807:    zval_ptr_dtor(&entry);",
          "808:    goto outexcept;",
          "809:   }",
          "816:   } else {",
          "817:    ZVAL_UNDEF(&inf);",
          "",
          "[Added Lines]",
          "815:   }",
          "816:   if (Z_TYPE(entry) != IS_OBJECT) {",
          "817:    zval_ptr_dtor(&entry);",
          "818:    zval_ptr_dtor(&inf);",
          "819:    goto outexcept;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "34aefa5604763dc238f8533e10ea332d3e4ed139",
      "candidate_info": {
        "commit_hash": "34aefa5604763dc238f8533e10ea332d3e4ed139",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/34aefa5604763dc238f8533e10ea332d3e4ed139",
        "files": [
          "ext/spl/spl_directory.c",
          "ext/spl/spl_directory.h",
          "ext/spl/spl_observer.c"
        ],
        "message": "Use better data structures (incomplete)",
        "before_after_code_files": [
          "ext/spl/spl_directory.c||ext/spl/spl_directory.c",
          "ext/spl/spl_directory.h||ext/spl/spl_directory.h",
          "ext/spl/spl_observer.c||ext/spl/spl_observer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/spl/spl_observer.c||ext/spl/spl_observer.c"
          ],
          "candidate": [
            "ext/spl/spl_observer.c||ext/spl/spl_observer.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/spl/spl_directory.c||ext/spl/spl_directory.c": [
          "File: ext/spl/spl_directory.c -> ext/spl/spl_directory.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1658:   iterator->intern.funcs = &spl_filesystem_dir_it_funcs;",
          "1662:  }",
          "1663:  zval_add_ref(object);",
          "",
          "[Removed Lines]",
          "1661:   iterator->current = object;",
          "",
          "[Added Lines]",
          "1661:   iterator->current = *object;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1697: {",
          "1698:  spl_filesystem_iterator *iterator = (spl_filesystem_iterator *)iter;",
          "1701: }",
          "",
          "[Removed Lines]",
          "1700:  return iterator->current;",
          "",
          "[Added Lines]",
          "1700:  return &iterator->current;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1743:  spl_filesystem_iterator *iterator = (spl_filesystem_iterator *)iter;",
          "1745:  if (iterator->intern.data) {",
          "1747:   zval_ptr_dtor(object);",
          "1748:  } else {",
          "1751:   }",
          "1752:  }",
          "1753: }",
          "",
          "[Removed Lines]",
          "1746:   zval *object =  iterator->intern.data;",
          "1749:   if (iterator->current) {",
          "1750:    zval_ptr_dtor(iterator->current);",
          "",
          "[Added Lines]",
          "1746:   zval *object = iterator->intern.data;",
          "1749:   if (!ZVAL_IS_UNDEF(&iterator->current)) {",
          "1750:    zval_ptr_dtor(&iterator->current);",
          "1751:    ZVAL_UNDEF(&iterator->current);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1760:  spl_filesystem_object   *object   = spl_filesystem_iterator_to_object(iterator);",
          "1762:  if (SPL_FILE_DIR_CURRENT(object, SPL_FILE_DIR_CURRENT_AS_PATHNAME)) {",
          "1765:    spl_filesystem_object_get_file_name(object TSRMLS_CC);",
          "1767:   }",
          "1769:  } else if (SPL_FILE_DIR_CURRENT(object, SPL_FILE_DIR_CURRENT_AS_FILEINFO)) {",
          "1772:    spl_filesystem_object_get_file_name(object TSRMLS_CC);",
          "1774:   }",
          "1776:  } else {",
          "1778:  }",
          "1779: }",
          "",
          "[Removed Lines]",
          "1763:   if (!iterator->current) {",
          "1764:    ALLOC_INIT_ZVAL(iterator->current);",
          "1766:    ZVAL_STRINGL(iterator->current, object->file_name, object->file_name_len);",
          "1770:   if (!iterator->current) {",
          "1771:    ALLOC_INIT_ZVAL(iterator->current);",
          "1773:    spl_filesystem_object_create_type(0, object, SPL_FS_INFO, NULL, iterator->current TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1764:   if (ZVAL_IS_UNDEF(&iterator->current)) {",
          "1766:    ZVAL_STRINGL(&iterator->current, object->file_name, object->file_name_len);",
          "1768:   return &iterator->current;",
          "1770:   if (ZVAL_IS_UNDEF(&iterator->current)) {",
          "1772:    spl_filesystem_object_create_type(0, object, SPL_FS_INFO, NULL, &iterator->current TSRMLS_CC);",
          "1774:   return &iterator->current;",
          "1776:   return (zval*)iterator->intern.data;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1807:   efree(object->file_name);",
          "1808:   object->file_name = NULL;",
          "1809:  }",
          "1813:  }",
          "1814: }",
          "",
          "[Removed Lines]",
          "1810:  if (iterator->current) {",
          "1811:   zval_ptr_dtor(iterator->current);",
          "1812:   iterator->current = NULL;",
          "",
          "[Added Lines]",
          "1809:  if (!ZVAL_IS_UNDEF(&iterator->current)) {",
          "1810:   zval_ptr_dtor(&iterator->current);",
          "1811:   ZVAL_UNDEF(&iterator->current);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1827:  do {",
          "1828:   spl_filesystem_dir_read(object TSRMLS_CC);",
          "1829:  } while (spl_filesystem_is_dot(object->u.dir.entry.d_name));",
          "1833:  }",
          "1834: }",
          "",
          "[Removed Lines]",
          "1830:  if (iterator->current) {",
          "1831:   zval_ptr_dtor(iterator->current);",
          "1832:   iterator->current = NULL;",
          "",
          "[Added Lines]",
          "1829:  if (!ZVAL_IS_UNDEF(&iterator->current)) {",
          "1830:   zval_ptr_dtor(&iterator->current);",
          "1831:   ZVAL_UNDEF(&iterator->current);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2047: {",
          "2048:  char *buf;",
          "2049:  size_t line_len = 0;",
          "2052:  spl_filesystem_file_free_line(intern TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2050:  long line_add = (intern->u.file.current_line || intern->u.file.current_zval) ? 1 : 0;",
          "",
          "[Added Lines]",
          "2049:  long line_add = (intern->u.file.current_line || !ZVAL_IS_UNDEF(&intern->u.file.current_zval)) ? 1 : 0;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2091: {",
          "2092:  zend_fcall_info fci;",
          "2093:  zend_fcall_info_cache fcic;",
          "2096:  int result;",
          "2097:  int num_args = pass_num_args + (arg2 ? 2 : 1);",
          "",
          "[Removed Lines]",
          "2094:  zval z_fname;",
          "2095:  zval * zresource_ptr = &intern->u.file.zresource, *retval;",
          "",
          "[Added Lines]",
          "2093:  zval *zresource_ptr = &intern->u.file.zresource, retval;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2107:  zend_get_parameters_array_ex(pass_num_args, params + (arg2 ? 2 : 1));",
          "2111:  fci.size = sizeof(fci);",
          "2112:  fci.function_table = EG(function_table);",
          "2113:  fci.object_ptr = NULL;",
          "2116:  fci.param_count = num_args;",
          "2117:  fci.params = params;",
          "2118:  fci.no_separation = 1;",
          "2119:  fci.symbol_table = NULL;",
          "2121:  fcic.initialized = 1;",
          "2122:  fcic.function_handler = func_ptr;",
          "",
          "[Removed Lines]",
          "2109:  ZVAL_STRING(&z_fname, func_ptr->common.function_name);",
          "2114:  fci.function_name = &z_fname;",
          "2115:  fci.retval_ptr_ptr = &retval;",
          "",
          "[Added Lines]",
          "2110:  fci.retval = &retval;",
          "2115:  ZVAL_STR(&fci.function_name, func_ptr->common.function_name);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2125:  fcic.object_ptr = NULL;",
          "2127:  result = zend_call_function(&fci, &fcic TSRMLS_CC);",
          "2131:   RETVAL_FALSE;",
          "2132:  } else {",
          "2134:  }",
          "2136:  efree(params);",
          "",
          "[Removed Lines]",
          "2128:  zval_ptr_dtor(&z_fname);",
          "2130:  if (result == FAILURE) {",
          "2133:   ZVAL_ZVAL(return_value, retval, 1, 1);",
          "",
          "[Added Lines]",
          "2125:  if (result == FAILURE || ZVAL_IS_UNDEF(&retval)) {",
          "2128:   ZVAL_ZVAL(return_value, &retval, 0, 0);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2140: #define FileFunctionCall(func_name, pass_num_args, arg2) /* {{{ */ \\",
          "2141: { \\",
          "2142:  zend_function *func_ptr; \\",
          "2146:   zend_throw_exception_ex(spl_ce_RuntimeException, 0 TSRMLS_CC, \"Internal error, function '%s' not found. Please report\", #func_name); \\",
          "2147:   return; \\",
          "2148:  } \\",
          "",
          "[Removed Lines]",
          "2143:  int ret; \\",
          "2144:  ret = zend_hash_find(EG(function_table), #func_name, sizeof(#func_name), (void **) &func_ptr); \\",
          "2145:  if (ret != SUCCESS) { \\",
          "",
          "[Added Lines]",
          "2138:  func_ptr = (zend_function *)zend_hash_str_find_ptr(EG(function_table), #func_name, sizeof(#func_name) - 1); \\",
          "2139:  if (func_ptr == NULL) { \\",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2161:   size_t buf_len = intern->u.file.current_line_len;",
          "2162:   char *buf = estrndup(intern->u.file.current_line, buf_len);",
          "2165:    zval_ptr_dtor(&intern->u.file.current_zval);",
          "2166:   }",
          "2170:   if (return_value) {",
          "2171:    if (Z_TYPE_P(return_value) != IS_NULL) {",
          "2172:     zval_dtor(return_value);",
          "2173:     ZVAL_NULL(return_value);",
          "2174:    }",
          "2176:   }",
          "2177:  }",
          "2178:  return ret;",
          "",
          "[Removed Lines]",
          "2164:   if (intern->u.file.current_zval) {",
          "2167:   ALLOC_INIT_ZVAL(intern->u.file.current_zval);",
          "2169:   php_fgetcsv(intern->u.file.stream, delimiter, enclosure, escape, buf_len, buf, intern->u.file.current_zval TSRMLS_CC);",
          "2175:    ZVAL_ZVAL(return_value, intern->u.file.current_zval, 1, 0);",
          "",
          "[Added Lines]",
          "2158:   if (!ZVAL_IS_UNDEF(&intern->u.file.current_zval)) {",
          "2160:    ZVAL_UNDEF(&intern->u.file.current_zval);",
          "2163:   php_fgetcsv(intern->u.file.stream, delimiter, enclosure, escape, buf_len, buf, &intern->u.file.current_zval TSRMLS_CC);",
          "2169:    ZVAL_ZVAL(return_value, &intern->u.file.current_zval, 1, 0);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2183: {",
          "2187:  if (SPL_HAS_FLAG(intern->flags, SPL_FILE_OBJECT_READ_CSV) || intern->u.file.func_getCurr->common.scope != spl_ce_SplFileObject) {",
          "",
          "[Removed Lines]",
          "2184:  zval *retval = NULL;",
          "",
          "[Added Lines]",
          "2178:  zval retval;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2194:   if (SPL_HAS_FLAG(intern->flags, SPL_FILE_OBJECT_READ_CSV)) {",
          "2195:    return spl_filesystem_file_read_csv(intern, intern->u.file.delimiter, intern->u.file.enclosure, intern->u.file.escape, NULL TSRMLS_CC);",
          "2196:   } else {",
          "2198:   }",
          "2201:     intern->u.file.current_line_num++;",
          "2202:    }",
          "2203:    spl_filesystem_file_free_line(intern TSRMLS_CC);",
          "2207:    } else {",
          "2210:    }",
          "2211:    zval_ptr_dtor(&retval);",
          "2212:    return SUCCESS;",
          "",
          "[Removed Lines]",
          "2197:    zend_call_method_with_0_params(&this_ptr, Z_OBJCE_P(getThis()), &intern->u.file.func_getCurr, \"getCurrentLine\", &retval);",
          "2199:   if (retval) {",
          "2200:    if (intern->u.file.current_line || intern->u.file.current_zval) {",
          "2204:    if (Z_TYPE_P(retval) == IS_STRING) {",
          "2205:     intern->u.file.current_line = estrndup(Z_STRVAL_P(retval), Z_STRLEN_P(retval));",
          "2206:     intern->u.file.current_line_len = Z_STRLEN_P(retval);",
          "2208:     MAKE_STD_ZVAL(intern->u.file.current_zval);",
          "2209:     ZVAL_ZVAL(intern->u.file.current_zval, retval, 1, 0);",
          "",
          "[Added Lines]",
          "2191:    zend_call_method_with_0_params(this_ptr, Z_OBJCE_P(getThis()), &intern->u.file.func_getCurr, \"getCurrentLine\", &retval);",
          "2193:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "2194:    if (intern->u.file.current_line || !ZVAL_IS_UNDEF(&intern->u.file.current_zval)) {",
          "2198:    if (Z_TYPE(retval) == IS_STRING) {",
          "2199:     intern->u.file.current_line = estrndup(Z_STRVAL(retval), Z_STRLEN(retval));",
          "2200:     intern->u.file.current_line_len = Z_STRLEN(retval);",
          "2202:     ZVAL_ZVAL(&intern->u.file.current_zval, &retval, 1, 0);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2222: {",
          "2223:  if (intern->u.file.current_line) {",
          "2224:   return intern->u.file.current_line_len == 0;",
          "2237:     }",
          "2246:   }",
          "2247:  } else {",
          "2248:   return 1;",
          "",
          "[Removed Lines]",
          "2225:  } else if (intern->u.file.current_zval) {",
          "2226:   switch(Z_TYPE_P(intern->u.file.current_zval)) {",
          "2227:   case IS_STRING:",
          "2228:    return Z_STRLEN_P(intern->u.file.current_zval) == 0;",
          "2229:   case IS_ARRAY:",
          "2230:    if (SPL_HAS_FLAG(intern->flags, SPL_FILE_OBJECT_READ_CSV)",
          "2231:    && zend_hash_num_elements(Z_ARRVAL_P(intern->u.file.current_zval)) == 1) {",
          "2232:     uint idx = 0;",
          "2233:     zval *first;",
          "2235:     while (Z_ARRVAL_P(intern->u.file.current_zval)->arData[idx].xData == NULL) {",
          "2236:      idx++;",
          "2238:     first = Z_ARRVAL_P(intern->u.file.current_zval)->arData[idx].xData;",
          "2239:     return Z_TYPE_P(first) == IS_STRING && Z_STRLEN_P(first) == 0;",
          "2240:    }",
          "2241:    return zend_hash_num_elements(Z_ARRVAL_P(intern->u.file.current_zval)) == 0;",
          "2242:   case IS_NULL:",
          "2243:    return 1;",
          "2244:   default:",
          "2245:    return 0;",
          "",
          "[Added Lines]",
          "2218:  } else if (!ZVAL_IS_UNDEF(&intern->u.file.current_zval)) {",
          "2219:   switch(Z_TYPE(intern->u.file.current_zval)) {",
          "2220:    case IS_STRING:",
          "2221:     return Z_STRLEN(intern->u.file.current_zval) == 0;",
          "2222:    case IS_ARRAY:",
          "2223:     if (SPL_HAS_FLAG(intern->flags, SPL_FILE_OBJECT_READ_CSV)",
          "2224:       && zend_hash_num_elements(Z_ARRVAL(intern->u.file.current_zval)) == 1) {",
          "2225:      uint idx = 0;",
          "2226:      zval *first;",
          "2228:      while (ZVAL_IS_UNDEF(&Z_ARRVAL(intern->u.file.current_zval)->arData[idx].val)) {",
          "2229:       idx++;",
          "2230:      }",
          "2231:      first = &Z_ARRVAL(intern->u.file.current_zval)->arData[idx].val;",
          "2232:      return Z_TYPE_P(first) == IS_STRING && Z_STRLEN_P(first) == 0;",
          "2234:     return zend_hash_num_elements(Z_ARRVAL(intern->u.file.current_zval)) == 0;",
          "2235:    case IS_NULL:",
          "2236:     return 1;",
          "2237:    default:",
          "2238:     return 0;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2365:  }",
          "2366:  intern->u.file.open_mode = \"wb\";",
          "2367:  intern->u.file.open_mode_len = 1;",
          "2370:  if (spl_filesystem_file_open(intern, 0, 0 TSRMLS_CC) == SUCCESS) {",
          "2371:   intern->_path_len = 0;",
          "",
          "[Removed Lines]",
          "2368:  intern->u.file.zcontext = NULL;",
          "",
          "[Added Lines]",
          "2361:  ZVAL_UNDEF(&intern->u.file.zcontext);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2411:  }",
          "2413:  if (SPL_HAS_FLAG(intern->flags, SPL_FILE_OBJECT_READ_AHEAD)) {",
          "2415:  } else {",
          "2416:   RETVAL_BOOL(!php_stream_eof(intern->u.file.stream));",
          "2417:  }",
          "",
          "[Removed Lines]",
          "2414:   RETURN_BOOL(intern->u.file.current_line || intern->u.file.current_zval);",
          "",
          "[Added Lines]",
          "2407:   RETURN_BOOL(intern->u.file.current_line || !ZVAL_IS_UNDEF(&intern->u.file.current_zval));",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2430:  if (spl_filesystem_file_read(intern, 0 TSRMLS_CC) == FAILURE) {",
          "2431:   RETURN_FALSE;",
          "2432:  }",
          "",
          "[Removed Lines]",
          "2433:  RETURN_STRINGL(intern->u.file.current_line, intern->u.file.current_line_len, 1);",
          "",
          "[Added Lines]",
          "2426:  RETURN_STRINGL(intern->u.file.current_line, intern->u.file.current_line_len);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2443:   return;",
          "2444:  }",
          "2447:   spl_filesystem_file_read_line(getThis(), intern, 1 TSRMLS_CC);",
          "2448:  }",
          "2453:  }",
          "2454:  RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "2446:  if (!intern->u.file.current_line && !intern->u.file.current_zval) {",
          "2449:  if (intern->u.file.current_line && (!SPL_HAS_FLAG(intern->flags, SPL_FILE_OBJECT_READ_CSV) || !intern->u.file.current_zval)) {",
          "2450:   RETURN_STRINGL(intern->u.file.current_line, intern->u.file.current_line_len, 1);",
          "2451:  } else if (intern->u.file.current_zval) {",
          "2452:   RETURN_ZVAL(intern->u.file.current_zval, 1, 0);",
          "",
          "[Added Lines]",
          "2439:  if (!intern->u.file.current_line && ZVAL_IS_UNDEF(&intern->u.file.current_zval)) {",
          "2442:  if (intern->u.file.current_line && (!SPL_HAS_FLAG(intern->flags, SPL_FILE_OBJECT_READ_CSV) || ZVAL_IS_UNDEF(&intern->u.file.current_zval))) {",
          "2443:   RETURN_STRINGL(intern->u.file.current_line, intern->u.file.current_line_len);",
          "2444:  } else if (!ZVAL_IS_UNDEF(&intern->u.file.current_zval)) {",
          "2445:   RETURN_ZVAL(&intern->u.file.current_zval, 1, 0);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2779:   buf[0] = result;",
          "2780:   buf[1] = '\\0';",
          "2783:  }",
          "",
          "[Removed Lines]",
          "2782:   RETURN_STRINGL(buf, 1, 1);",
          "",
          "[Added Lines]",
          "2775:   RETURN_STRINGL(buf, 1);",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2788: SPL_METHOD(SplFileObject, fgetss)",
          "2789: {",
          "2790:  spl_filesystem_object *intern = (spl_filesystem_object*)Z_OBJ_P(getThis());",
          "2794:  if (intern->u.file.max_line_len > 0) {",
          "2796:  } else {",
          "2798:  }",
          "2800:  spl_filesystem_file_free_line(intern TSRMLS_CC);",
          "2801:  intern->u.file.current_line_num++;",
          "",
          "[Removed Lines]",
          "2791:  zval *arg2 = NULL;",
          "2792:  MAKE_STD_ZVAL(arg2);",
          "2795:   ZVAL_LONG(arg2, intern->u.file.max_line_len);",
          "2797:   ZVAL_LONG(arg2, 1024);",
          "2803:  FileFunctionCall(fgetss, ZEND_NUM_ARGS(), arg2);",
          "2805:  zval_ptr_dtor(&arg2);",
          "",
          "[Added Lines]",
          "2784:  zval arg2;",
          "2787:   ZVAL_LONG(&arg2, intern->u.file.max_line_len);",
          "2789:   ZVAL_LONG(&arg2, 1024);",
          "2795:  FileFunctionCall(fgetss, ZEND_NUM_ARGS(), &arg2);",
          "",
          "---------------"
        ],
        "ext/spl/spl_directory.h||ext/spl/spl_directory.h": [
          "File: ext/spl/spl_directory.h -> ext/spl/spl_directory.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: typedef struct {",
          "57:  zend_object_iterator  intern;",
          "59:  spl_filesystem_object *object;",
          "60: } spl_filesystem_iterator;",
          "",
          "[Removed Lines]",
          "58:  zval                  *current;",
          "",
          "[Added Lines]",
          "58:  zval                  current;",
          "",
          "---------------"
        ],
        "ext/spl/spl_observer.c||ext/spl/spl_observer.c": [
          "File: ext/spl/spl_observer.c -> ext/spl/spl_observer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "92: typedef struct _spl_SplObjectStorageElement {",
          "98: {",
          "99:  spl_SplObjectStorage *intern = (spl_SplObjectStorage *)object;",
          "",
          "[Removed Lines]",
          "93:  zval* obj;",
          "94:  zval* inf;",
          "",
          "[Added Lines]",
          "93:  zval *obj;",
          "94:  zval  inf;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110:  efree(object);",
          "114:  if (intern->fptr_get_hash) {",
          "129:    } else {",
          "130:     zend_throw_exception(spl_ce_RuntimeException, \"Hash needs to be a string\", 0 TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "113: static char *spl_object_storage_get_hash(spl_SplObjectStorage *intern, zval *this,  zval *obj, int *hash_len_ptr TSRMLS_DC) {",
          "115:   zval *rv;",
          "116:   zend_call_method_with_1_params(&this, intern->std.ce, &intern->fptr_get_hash, \"getHash\", &rv, obj);",
          "117:   if (rv) {",
          "118:    if (Z_TYPE_P(rv) == IS_STRING) {",
          "119:     int hash_len = Z_STRLEN_P(rv);",
          "120:     char *hash = emalloc((hash_len+1)*sizeof(char));",
          "121:     strncpy(hash, Z_STRVAL_P(rv), hash_len);",
          "122:     hash[hash_len] = 0;",
          "124:     zval_ptr_dtor(&rv);",
          "125:     if (hash_len_ptr) {",
          "127:     }",
          "128:     return hash;",
          "",
          "[Added Lines]",
          "113: static zend_string *spl_object_storage_get_hash(spl_SplObjectStorage *intern, zval *this, zval *obj TSRMLS_DC) {",
          "115:   zval rv;",
          "116:   zend_call_method_with_1_params(this, intern->std.ce, &intern->fptr_get_hash, \"getHash\", &rv, obj);",
          "117:   if (!ZVAL_IS_UNDEF(&rv)) {",
          "118:    if (Z_TYPE(rv) == IS_STRING) {",
          "119:     return Z_STR(rv);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "163:   return hash;",
          "164: #endif",
          "165:  }",
          "166: }",
          "169:  if (intern->fptr_get_hash) {",
          "171:  } else {",
          "172: #if HAVE_PACKED_OBJECT_VALUE",
          "174: #else",
          "175:   efree(hash);",
          "176: #endif",
          "177:  }",
          "178: }",
          "181: {",
          "187: {",
          "197: {",
          "198:  spl_SplObjectStorageElement *pelement, element;",
          "202:  if (!hash) {",
          "203:   return;",
          "204:  }",
          "213:  if (pelement) {",
          "214:   zval_ptr_dtor(&pelement->inf);",
          "216:   spl_object_storage_free_hash(intern, hash);",
          "217:   return;",
          "218:  }",
          "219:  Z_ADDREF_P(obj);",
          "220:  element.obj = obj;",
          "223:  spl_object_storage_free_hash(intern, hash);",
          "227: {",
          "230:  if (!hash) {",
          "231:   return ret;",
          "232:  }",
          "234:  spl_object_storage_free_hash(intern, hash);",
          "236:  return ret;",
          "",
          "[Removed Lines]",
          "168: static void spl_object_storage_free_hash(spl_SplObjectStorage *intern, char *hash) {",
          "170:   efree(hash);",
          "182:  zval_ptr_dtor(&element->obj);",
          "183:  zval_ptr_dtor(&element->inf);",
          "188:  spl_SplObjectStorageElement *element;",
          "189:  if (zend_hash_find(&intern->storage, hash, hash_len, (void**)&element) == SUCCESS) {",
          "190:   return element;",
          "191:  } else {",
          "192:   return NULL;",
          "193:  }",
          "200:  int hash_len;",
          "201:  char *hash = spl_object_storage_get_hash(intern, this, obj, &hash_len TSRMLS_CC);",
          "206:  pelement = spl_object_storage_get(intern, hash, hash_len TSRMLS_CC);",
          "208:  if (inf) {",
          "209:   Z_ADDREF_P(inf);",
          "210:  } else {",
          "211:   ALLOC_INIT_ZVAL(inf);",
          "212:  }",
          "215:   pelement->inf = inf;",
          "221:  element.inf = inf;",
          "222:  zend_hash_update(&intern->storage, hash, hash_len, &element, sizeof(spl_SplObjectStorageElement), NULL);",
          "228:  int hash_len, ret = FAILURE;",
          "229:  char *hash = spl_object_storage_get_hash(intern, this, obj, &hash_len TSRMLS_CC);",
          "233:  ret = zend_hash_del(&intern->storage, hash, hash_len);",
          "",
          "[Added Lines]",
          "158:   return NULL;",
          "162: static void spl_object_storage_free_hash(spl_SplObjectStorage *intern, zend_string *hash) {",
          "163:  STR_RELEASE(hash);",
          "177:  spl_SplObjectStorageElement *el = Z_PTR_P(element);",
          "178:  zval_ptr_dtor(el->obj);",
          "179:  zval_ptr_dtor(&el->inf);",
          "180:  ZVAL_UNDEF(&el->inf);",
          "185:  return (spl_SplObjectStorageElement*)zend_hash_find_ptr(&intern->storage, hash);",
          "191:  zend_string *hash = spl_object_storage_get_hash(intern, this, obj TSRMLS_CC);",
          "197:  pelement = spl_object_storage_get(intern, hash TSRMLS_CC);",
          "201:   if (inf) {",
          "202:    ZVAL_ZVAL(&pelement->inf, inf, 1, 0);",
          "203:   }",
          "210:  ZVAL_ZVAL(&element.inf, inf, 1, 0);",
          "211:  zend_hash_update_mem(&intern->storage, hash, &element, sizeof(spl_SplObjectStorageElement));",
          "217:  int ret = FAILURE;",
          "218:  zend_string *hash = spl_object_storage_get_hash(intern, this, obj TSRMLS_CC);",
          "222:  ret = zend_hash_del(&intern->storage, hash);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "241:  spl_SplObjectStorageElement *element;",
          "243:  zend_hash_internal_pointer_reset_ex(&other->storage, &pos);",
          "246:   zend_hash_move_forward_ex(&other->storage, &pos);",
          "247:  }",
          "",
          "[Removed Lines]",
          "244:  while (zend_hash_get_current_data_ex(&other->storage, (void **)&element, &pos) == SUCCESS) {",
          "245:   spl_object_storage_attach(intern, this, element->obj, element->inf TSRMLS_CC);",
          "",
          "[Added Lines]",
          "233:  while ((element = zend_hash_get_current_data_ptr_ex(&other->storage, &pos)) != NULL) {",
          "234:   spl_object_storage_attach(intern, this, element->obj, &element->inf TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "250:  intern->index = 0;",
          "254: {",
          "256:  spl_SplObjectStorage *intern;",
          "257:  zend_class_entry     *parent = class_type;",
          "259:  intern = emalloc(sizeof(spl_SplObjectStorage));",
          "260:  memset(intern, 0, sizeof(spl_SplObjectStorage));",
          "261:  intern->pos = INVALID_IDX;",
          "264:  zend_object_std_init(&intern->std, class_type TSRMLS_CC);",
          "265:  object_properties_init(&intern->std, class_type);",
          "272:  if (orig) {",
          "274:   spl_object_storage_addall(intern, orig, other TSRMLS_CC);",
          "275:  }",
          "277:  while (parent) {",
          "278:   if (parent == spl_ce_SplObjectStorage) {",
          "279:    if (class_type != spl_ce_SplObjectStorage) {",
          "281:     if (intern->fptr_get_hash->common.scope == spl_ce_SplObjectStorage) {",
          "282:      intern->fptr_get_hash = NULL;",
          "283:     }",
          "",
          "[Removed Lines]",
          "255:  zend_object_value     retval;",
          "267:  zend_hash_init(&intern->storage, 0, NULL, (void (*)(void *))spl_object_storage_dtor, 0);",
          "269:  retval.handle = zend_objects_store_put(intern, (zend_objects_store_dtor_t)zend_objects_destroy_object, (zend_objects_free_object_storage_t) spl_SplOjectStorage_free_storage, NULL TSRMLS_CC);",
          "270:  retval.handlers = &spl_handler_SplObjectStorage;",
          "273:   spl_SplObjectStorage *other = (spl_SplObjectStorage*)zend_object_store_get_object(orig TSRMLS_CC);",
          "280:     zend_hash_find(&class_type->function_table, \"gethash\",    sizeof(\"gethash\"),    (void **) &intern->fptr_get_hash);",
          "",
          "[Added Lines]",
          "254:  zend_hash_init(&intern->storage, 0, NULL, spl_object_storage_dtor, 0);",
          "256:  zend_objects_store_put(&intern->std TSRMLS_CC);",
          "257:  intern->std.handlers = &spl_handler_SplObjectStorage;",
          "260:   spl_SplObjectStorage *other = (spl_SplObjectStorage*)Z_OBJ_P(orig);",
          "267:     intern->fptr_get_hash = zend_hash_str_find_ptr(&class_type->function_table, \"gethash\", sizeof(\"gethash\") - 1);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "288:   parent = parent->parent;",
          "289:  }",
          "292: }",
          "297: {",
          "299:  zend_object *old_object;",
          "300:  zend_object *new_object;",
          "302:  spl_SplObjectStorage *intern;",
          "311: }",
          "315: {",
          "317:  spl_SplObjectStorageElement *element;",
          "318:  HashTable *props;",
          "319:  HashPosition pos;",
          "321:  char md5str[33];",
          "322:  int name_len;",
          "323:  char *zname;",
          "",
          "[Removed Lines]",
          "291:  return retval;",
          "296: static zend_object_value spl_object_storage_clone(zval *zobject TSRMLS_DC)",
          "298:  zend_object_value new_obj_val;",
          "301:  zend_object_handle handle = Z_OBJ_HANDLE_P(zobject);",
          "304:  old_object = zend_objects_get_address(zobject TSRMLS_CC);",
          "305:  new_obj_val = spl_object_storage_new_ex(old_object->ce, &intern, zobject TSRMLS_CC);",
          "306:  new_object = &intern->std;",
          "308:  zend_objects_clone_members(new_object, new_obj_val, old_object, handle TSRMLS_CC);",
          "310:  return new_obj_val;",
          "316:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(obj TSRMLS_CC);",
          "320:  zval *tmp, *storage;",
          "",
          "[Added Lines]",
          "278:  return &intern->std;",
          "283: static zend_object *spl_object_storage_clone(zval *zobject TSRMLS_DC)",
          "289:  old_object = Z_OBJ_P(zobject);",
          "290:  new_object = spl_object_storage_new_ex(old_object->ce, zobject TSRMLS_CC);",
          "292:  zend_objects_clone_members(new_object, old_object TSRMLS_CC);",
          "294:  return new_object;",
          "300:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(obj);",
          "304:  zval tmp, storage;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "327:  props = Z_OBJPROP_P(obj);",
          "330:  if (intern->debug_info == NULL) {",
          "331:   ALLOC_HASHTABLE(intern->debug_info);",
          "",
          "[Removed Lines]",
          "328:  zend_hash_del(props, \"\\x00gcdata\", sizeof(\"\\x00gcdata\"));",
          "",
          "[Added Lines]",
          "312:  zend_hash_str_del(props, \"\\x00gcdata\", sizeof(\"\\x00gcdata\") - 1);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "333:  }",
          "335:  if (intern->debug_info->nApplyCount == 0) {",
          "341:   zend_hash_internal_pointer_reset_ex(&intern->storage, &pos);",
          "343:     php_spl_object_hash(element->obj, md5str TSRMLS_CC);",
          "352:     zend_hash_move_forward_ex(&intern->storage, &pos);",
          "353:   }",
          "355:   zname = spl_gen_private_prop_name(spl_ce_SplObjectStorage, \"storage\", sizeof(\"storage\")-1, &name_len TSRMLS_CC);",
          "357:   efree(zname);",
          "358:  }",
          "",
          "[Removed Lines]",
          "336:   zend_hash_copy(intern->debug_info, props, (copy_ctor_func_t) zval_add_ref, (void *) &tmp, sizeof(zval *));",
          "338:   MAKE_STD_ZVAL(storage);",
          "339:   array_init(storage);",
          "342:   while (zend_hash_get_current_data_ex(&intern->storage, (void **)&element, &pos) == SUCCESS) {",
          "344:     MAKE_STD_ZVAL(tmp);",
          "345:     array_init(tmp);",
          "348:     Z_ARRVAL_P(tmp)->pDestructor = NULL;",
          "349:     add_assoc_zval_ex(tmp, \"obj\", sizeof(\"obj\"), element->obj);",
          "350:     add_assoc_zval_ex(tmp, \"inf\", sizeof(\"inf\"), element->inf);",
          "351:     add_assoc_zval_ex(storage, md5str, 33, tmp);",
          "356:   zend_symtable_update(intern->debug_info, zname, name_len+1, &storage, sizeof(zval *), NULL);",
          "",
          "[Added Lines]",
          "320:   zend_hash_copy(intern->debug_info, props, (copy_ctor_func_t)zval_add_ref);",
          "322:   array_init(&storage);",
          "325:   while ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &pos)) != NULL) {",
          "327:     array_init(&tmp);",
          "330:     Z_ARRVAL_P(&tmp)->pDestructor = NULL;",
          "331:     add_assoc_zval_ex(&tmp, \"obj\", sizeof(\"obj\"), element->obj);",
          "332:     add_assoc_zval_ex(&tmp, \"inf\", sizeof(\"inf\"), &element->inf);",
          "333:     add_assoc_zval_ex(&storage, md5str, 33, &tmp);",
          "338:   zend_symtable_str_update(intern->debug_info, zname, name_len, &storage);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "367: {",
          "369:  spl_SplObjectStorageElement *element;",
          "370:  HashTable *props;",
          "371:  HashPosition pos;",
          "375:  props = std_object_handlers.get_properties(obj TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "368:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(obj TSRMLS_CC);",
          "372:  zval *gcdata_arr = NULL,",
          "",
          "[Added Lines]",
          "350:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(obj);",
          "354:  zval *gcdata_arr, tmp;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "383:   zend_hash_clean(Z_ARRVAL_P(gcdata_arr));",
          "384:  }",
          "386:  if (gcdata_arr == NULL) {",
          "394:  }",
          "396:  zend_hash_internal_pointer_reset_ex(&intern->storage, &pos);",
          "398:   add_next_index_zval(gcdata_arr, element->obj);",
          "400:   zend_hash_move_forward_ex(&intern->storage, &pos);",
          "401:  }",
          "",
          "[Removed Lines]",
          "381:  if (zend_hash_find(props, \"\\x00gcdata\", sizeof(\"\\x00gcdata\"), (void**) &gcdata_arr_pp) == SUCCESS) {",
          "382:   gcdata_arr = *gcdata_arr_pp;",
          "387:   MAKE_STD_ZVAL(gcdata_arr);",
          "388:   array_init(gcdata_arr);",
          "390:   Z_ARRVAL_P(gcdata_arr)->pDestructor = NULL;",
          "393:   zend_hash_add(props, \"\\x00gcdata\", sizeof(\"\\x00gcdata\"), &gcdata_arr, sizeof(gcdata_arr), NULL);",
          "397:  while (zend_hash_get_current_data_ex(&intern->storage, (void **)&element, &pos) == SUCCESS) {",
          "399:   add_next_index_zval(gcdata_arr, element->inf);",
          "",
          "[Added Lines]",
          "362:  if ((gcdata_arr = zend_hash_str_find(props, \"\\x00gcdata\", sizeof(\"\\x00gcdata\") - 1)) != NULL) {",
          "367:   array_init(&tmp);",
          "369:   Z_ARRVAL_P(&tmp)->pDestructor = NULL;",
          "372:   zend_hash_str_add(props, \"\\x00gcdata\", sizeof(\"\\x00gcdata\") - 1, &tmp);",
          "373:   gcdata_arr = &tmp;",
          "377:  while ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &pos)) != NULL) {",
          "379:   add_next_index_zval(gcdata_arr, &element->inf);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "408: {",
          "409:  zval result;",
          "412:   return 1;",
          "413:  }",
          "",
          "[Removed Lines]",
          "411:  if (compare_function(&result, e1->inf, e2->inf TSRMLS_CC) == FAILURE) {",
          "",
          "[Added Lines]",
          "391:  if (compare_function(&result, &e1->inf, &e2->inf TSRMLS_CC) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "420: {",
          "424:  if (zo1->ce != spl_ce_SplObjectStorage || zo2->ce != spl_ce_SplObjectStorage) {",
          "425:   return 1;",
          "",
          "[Removed Lines]",
          "421:  zend_object *zo1 = (zend_object *)zend_object_store_get_object(o1 TSRMLS_CC);",
          "422:  zend_object *zo2 = (zend_object *)zend_object_store_get_object(o2 TSRMLS_CC);",
          "",
          "[Added Lines]",
          "401:  zend_object *zo1 = (zend_object *)Z_OBJ_P(o1);",
          "402:  zend_object *zo2 = (zend_object *)Z_OBJ_P(o2);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "434: {",
          "437: }",
          "441: {",
          "444:  if (!hash) {",
          "445:   return 0;",
          "446:  }",
          "449:  spl_object_storage_free_hash(intern, hash);",
          "450:  return found;",
          "",
          "[Removed Lines]",
          "433: static zend_object_value spl_SplObjectStorage_new(zend_class_entry *class_type TSRMLS_DC)",
          "435:  spl_SplObjectStorage *tmp;",
          "436:  return spl_object_storage_new_ex(class_type, &tmp, NULL TSRMLS_CC);",
          "442:  int hash_len, found;",
          "443:  char *hash = spl_object_storage_get_hash(intern, this, obj, &hash_len TSRMLS_CC);",
          "448:  found = zend_hash_exists(&intern->storage, hash, hash_len);",
          "",
          "[Added Lines]",
          "413: static zend_object *spl_SplObjectStorage_new(zend_class_entry *class_type TSRMLS_DC)",
          "415:  return spl_object_storage_new_ex(class_type, NULL TSRMLS_CC);",
          "421:  int found;",
          "422:  zend_string *hash = spl_object_storage_get_hash(intern, this, obj TSRMLS_CC);",
          "427:  found = zend_hash_exists(&intern->storage, hash);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "456: {",
          "457:  zval *obj, *inf = NULL;",
          "461:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"o|z!\", &obj, &inf) == FAILURE) {",
          "462:   return;",
          "",
          "[Removed Lines]",
          "459:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "438:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "469: SPL_METHOD(SplObjectStorage, detach)",
          "470: {",
          "471:  zval *obj;",
          "474:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"o\", &obj) == FAILURE) {",
          "475:   return;",
          "",
          "[Removed Lines]",
          "472:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "451:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "494:  hash = emalloc(33);",
          "495:  php_spl_object_hash(obj, hash TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "497:  RETVAL_STRING(hash, 0);",
          "",
          "[Added Lines]",
          "476:  RETVAL_STRING(hash);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "504: {",
          "505:  zval *obj;",
          "506:  spl_SplObjectStorageElement *element;",
          "511:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"o\", &obj) == FAILURE) {",
          "512:   return;",
          "513:  }",
          "516:  if (!hash) {",
          "517:   return;",
          "518:  }",
          "521:  spl_object_storage_free_hash(intern, hash);",
          "523:  if (!element) {",
          "524:   zend_throw_exception_ex(spl_ce_UnexpectedValueException, 0 TSRMLS_CC, \"Object not found\");",
          "525:  } else {",
          "527:  }",
          "",
          "[Removed Lines]",
          "507:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "508:  char *hash;",
          "509:  int hash_len;",
          "515:  hash = spl_object_storage_get_hash(intern, getThis(), obj, &hash_len TSRMLS_CC);",
          "520:  element = spl_object_storage_get(intern, hash, hash_len TSRMLS_CC);",
          "526:   RETURN_ZVAL(element->inf,1, 0);",
          "",
          "[Added Lines]",
          "486:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "487:  zend_string *hash;",
          "493:  hash = spl_object_storage_get_hash(intern, getThis(), obj TSRMLS_CC);",
          "498:  element = spl_object_storage_get(intern, hash TSRMLS_CC);",
          "504:   RETURN_ZVAL(&element->inf, 1, 0);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "532: SPL_METHOD(SplObjectStorage, addAll)",
          "533: {",
          "534:  zval *obj;",
          "536:  spl_SplObjectStorage *other;",
          "538:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"O\", &obj, spl_ce_SplObjectStorage) == FAILURE) {",
          "539:   return;",
          "540:  }",
          "546:  RETURN_LONG(zend_hash_num_elements(&intern->storage));",
          "",
          "[Removed Lines]",
          "535:  spl_SplObjectStorage *intern = (spl_SplObjectStorage *)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "542:  other = (spl_SplObjectStorage *)zend_object_store_get_object(obj TSRMLS_CC);",
          "544:  spl_object_storage_addall(intern, getThis(),  other TSRMLS_CC);",
          "",
          "[Added Lines]",
          "513:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "520:  other = (spl_SplObjectStorage *)Z_OBJ_P(obj);",
          "522:  spl_object_storage_addall(intern, getThis(), other TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "551: SPL_METHOD(SplObjectStorage, removeAll)",
          "552: {",
          "553:  zval *obj;",
          "555:  spl_SplObjectStorage *other;",
          "556:  spl_SplObjectStorageElement *element;",
          "",
          "[Removed Lines]",
          "554:  spl_SplObjectStorage *intern = (spl_SplObjectStorage *)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "532:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "559:   return;",
          "560:  }",
          "564:  zend_hash_internal_pointer_reset(&other->storage);",
          "566:   if (spl_object_storage_detach(intern, getThis(), element->obj TSRMLS_CC) == FAILURE) {",
          "567:    zend_hash_move_forward(&other->storage);",
          "568:   }",
          "",
          "[Removed Lines]",
          "562:  other = (spl_SplObjectStorage *)zend_object_store_get_object(obj TSRMLS_CC);",
          "565:  while (zend_hash_get_current_data(&other->storage, (void **)&element) == SUCCESS) {",
          "",
          "[Added Lines]",
          "540:  other = (spl_SplObjectStorage *)Z_OBJ_P(obj);",
          "543:  while ((element = zend_hash_get_current_data_ptr(&other->storage)) != NULL) {",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "579: SPL_METHOD(SplObjectStorage, removeAllExcept)",
          "580: {",
          "581:  zval *obj;",
          "583:  spl_SplObjectStorage *other;",
          "584:  spl_SplObjectStorageElement *element;",
          "",
          "[Removed Lines]",
          "582:  spl_SplObjectStorage *intern = (spl_SplObjectStorage *)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "560:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "587:   return;",
          "588:  }",
          "592:  zend_hash_internal_pointer_reset(&intern->storage);",
          "594:   if (!spl_object_storage_contains(other, getThis(), element->obj TSRMLS_CC)) {",
          "595:    spl_object_storage_detach(intern, getThis(), element->obj TSRMLS_CC);",
          "596:   }",
          "",
          "[Removed Lines]",
          "590:  other = (spl_SplObjectStorage *)zend_object_store_get_object(obj TSRMLS_CC);",
          "593:  while (zend_hash_get_current_data(&intern->storage, (void **)&element) == SUCCESS) {",
          "",
          "[Added Lines]",
          "568:  other = (spl_SplObjectStorage*)Z_OBJ_P(obj);",
          "571:  while ((element = zend_hash_get_current_data_ptr(&intern->storage)) != NULL) {",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "609: SPL_METHOD(SplObjectStorage, contains)",
          "610: {",
          "611:  zval *obj;",
          "614:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"o\", &obj) == FAILURE) {",
          "615:   return;",
          "",
          "[Removed Lines]",
          "612:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "590:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "622: SPL_METHOD(SplObjectStorage, count)",
          "623: {",
          "626:  if (zend_parse_parameters_none() == FAILURE) {",
          "627:   return;",
          "",
          "[Removed Lines]",
          "624:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "602:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "635: SPL_METHOD(SplObjectStorage, rewind)",
          "636: {",
          "639:  if (zend_parse_parameters_none() == FAILURE) {",
          "640:   return;",
          "",
          "[Removed Lines]",
          "637:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "615:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "649: SPL_METHOD(SplObjectStorage, valid)",
          "650: {",
          "653:  if (zend_parse_parameters_none() == FAILURE) {",
          "654:   return;",
          "",
          "[Removed Lines]",
          "651:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "629:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "662: SPL_METHOD(SplObjectStorage, key)",
          "663: {",
          "666:  if (zend_parse_parameters_none() == FAILURE) {",
          "667:   return;",
          "",
          "[Removed Lines]",
          "664:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "642:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "675: SPL_METHOD(SplObjectStorage, current)",
          "676: {",
          "677:  spl_SplObjectStorageElement *element;",
          "680:  if (zend_parse_parameters_none() == FAILURE) {",
          "681:   return;",
          "682:  }",
          "685:   return;",
          "686:  }",
          "687:  RETVAL_ZVAL(element->obj, 1, 0);",
          "",
          "[Removed Lines]",
          "678:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "684:  if (zend_hash_get_current_data_ex(&intern->storage, (void**)&element, &intern->pos) == FAILURE) {",
          "",
          "[Added Lines]",
          "656:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "662:  if ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &intern->pos)) == NULL) {",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "692: SPL_METHOD(SplObjectStorage, getInfo)",
          "693: {",
          "694:  spl_SplObjectStorageElement *element;",
          "697:  if (zend_parse_parameters_none() == FAILURE) {",
          "698:   return;",
          "699:  }",
          "702:   return;",
          "703:  }",
          "",
          "[Removed Lines]",
          "695:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "701:  if (zend_hash_get_current_data_ex(&intern->storage, (void**)&element, &intern->pos) == FAILURE) {",
          "704:  RETVAL_ZVAL(element->inf, 1, 0);",
          "",
          "[Added Lines]",
          "673:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "679:  if ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &intern->pos)) == NULL) {",
          "682:  RETVAL_ZVAL(&element->inf, 1, 0);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "709: SPL_METHOD(SplObjectStorage, setInfo)",
          "710: {",
          "711:  spl_SplObjectStorageElement *element;",
          "713:  zval *inf;",
          "715:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"z\", &inf) == FAILURE) {",
          "716:   return;",
          "717:  }",
          "720:   return;",
          "721:  }",
          "722:  zval_ptr_dtor(&element->inf);",
          "729: SPL_METHOD(SplObjectStorage, next)",
          "730: {",
          "733:  if (zend_parse_parameters_none() == FAILURE) {",
          "734:   return;",
          "",
          "[Removed Lines]",
          "712:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "719:  if (zend_hash_get_current_data_ex(&intern->storage, (void**)&element, &intern->pos) == FAILURE) {",
          "723:  element->inf = inf;",
          "724:  Z_ADDREF_P(inf);",
          "731:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "690:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "697:  if ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &intern->pos)) == NULL) {",
          "701:  ZVAL_ZVAL(&element->inf, inf, 1, 0);",
          "708:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "743: SPL_METHOD(SplObjectStorage, serialize)",
          "744: {",
          "747:  spl_SplObjectStorageElement *element;",
          "749:  HashPosition      pos;",
          "750:  php_serialize_data_t var_hash;",
          "751:  smart_str buf = {0};",
          "",
          "[Removed Lines]",
          "745:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "748:  zval members, *pmembers, *flags;",
          "",
          "[Added Lines]",
          "722:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "725:  zval members, flags;",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "760:  smart_str_appendl(&buf, \"x:\", 2);",
          "763:  php_var_serialize(&buf, &flags, &var_hash TSRMLS_CC);",
          "764:  zval_ptr_dtor(&flags);",
          "766:  zend_hash_internal_pointer_reset_ex(&intern->storage, &pos);",
          "770:    smart_str_free(&buf);",
          "771:    PHP_VAR_SERIALIZE_DESTROY(var_hash);",
          "772:    RETURN_NULL();",
          "773:   }",
          "775:   smart_str_appendc(&buf, ',');",
          "776:   php_var_serialize(&buf, &element->inf, &var_hash TSRMLS_CC);",
          "777:   smart_str_appendc(&buf, ';');",
          "",
          "[Removed Lines]",
          "761:  MAKE_STD_ZVAL(flags);",
          "762:  ZVAL_LONG(flags, zend_hash_num_elements(&intern->storage));",
          "768:  while(zend_hash_has_more_elements_ex(&intern->storage, &pos) == SUCCESS) {",
          "769:   if (zend_hash_get_current_data_ex(&intern->storage, (void**)&element, &pos) == FAILURE) {",
          "774:   php_var_serialize(&buf, &element->obj, &var_hash TSRMLS_CC);",
          "",
          "[Added Lines]",
          "738:  ZVAL_LONG(&flags, zend_hash_num_elements(&intern->storage));",
          "744:  while (zend_hash_has_more_elements_ex(&intern->storage, &pos) == SUCCESS) {",
          "745:   if ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &pos)) == NULL) {",
          "750:   php_var_serialize(&buf, element->obj, &var_hash TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "782:  smart_str_appendl(&buf, \"m:\", 2);",
          "790:  PHP_VAR_SERIALIZE_DESTROY(var_hash);",
          "792:  if (buf.c) {",
          "794:  } else {",
          "795:   RETURN_NULL();",
          "796:  }",
          "",
          "[Removed Lines]",
          "783:  INIT_PZVAL(&members);",
          "784:  Z_ARRVAL(members) = zend_std_get_properties(getThis() TSRMLS_CC);",
          "785:  Z_TYPE(members) = IS_ARRAY;",
          "786:  pmembers = &members;",
          "793:   RETURN_STRINGL(buf.c, buf.len, 0);",
          "",
          "[Added Lines]",
          "759:  array_init(&members);",
          "760:  zend_hash_copy(Z_ARRVAL(members), zend_std_get_properties(getThis() TSRMLS_CC), (copy_ctor_func_t) zval_add_ref);",
          "762:  zval_ptr_dtor(&members);",
          "768:   RETVAL_STRINGL(buf.c, buf.len);",
          "769:   smart_str_free(&buf);",
          "770:   return;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "802: SPL_METHOD(SplObjectStorage, unserialize)",
          "803: {",
          "806:  char *buf;",
          "807:  int buf_len;",
          "808:  const unsigned char *p, *s;",
          "809:  php_unserialize_data_t var_hash;",
          "811:  long count;",
          "813:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &buf, &buf_len) == FAILURE) {",
          "",
          "[Removed Lines]",
          "804:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "810:  zval *pentry, *pmembers, *pcount = NULL, *pinf;",
          "",
          "[Added Lines]",
          "781:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "787:  zval entry, pmembers, pcount, inf;",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "828:  }",
          "829:  ++p;",
          "833:   goto outexcept;",
          "834:  }",
          "840:   spl_SplObjectStorageElement *pelement;",
          "844:   if (*p != ';') {",
          "845:    goto outexcept;",
          "",
          "[Removed Lines]",
          "831:  ALLOC_INIT_ZVAL(pcount);",
          "832:  if (!php_var_unserialize(&pcount, &p, s + buf_len, &var_hash TSRMLS_CC) || Z_TYPE_P(pcount) != IS_LONG) {",
          "837:  count = Z_LVAL_P(pcount);",
          "839:  while(count-- > 0) {",
          "841:   char *hash;",
          "842:   int hash_len;",
          "",
          "[Added Lines]",
          "808:  if (!php_var_unserialize(&pcount, &p, s + buf_len, &var_hash TSRMLS_CC)) {",
          "809:   goto outexcept;",
          "810:  }",
          "811:  if (Z_TYPE(pcount) != IS_LONG) {",
          "812:   zval_ptr_dtor(&pcount);",
          "817:  count = Z_LVAL(pcount);",
          "819:  while (count-- > 0) {",
          "821:   zend_string *hash;",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "848:   if(*p != 'O' && *p != 'C' && *p != 'r') {",
          "849:    goto outexcept;",
          "850:   }",
          "854:    goto outexcept;",
          "855:   }",
          "858:    goto outexcept;",
          "859:   }",
          "862:    ++p;",
          "865:     goto outexcept;",
          "866:    }",
          "867:   }",
          "870:   if (!hash) {",
          "873:    goto outexcept;",
          "874:   }",
          "876:   spl_object_storage_free_hash(intern, hash);",
          "879:     var_push_dtor(&var_hash, &pelement->inf);",
          "880:    }",
          "883:    }",
          "884:   }",
          "888:  }",
          "890:  if (*p != ';') {",
          "",
          "[Removed Lines]",
          "851:   ALLOC_INIT_ZVAL(pentry);",
          "852:   if (!php_var_unserialize(&pentry, &p, s + buf_len, &var_hash TSRMLS_CC)) {",
          "853:    zval_ptr_dtor(&pentry);",
          "856:   if(Z_TYPE_P(pentry) != IS_OBJECT) {",
          "857:    zval_ptr_dtor(&pentry);",
          "860:   ALLOC_INIT_ZVAL(pinf);",
          "863:    if (!php_var_unserialize(&pinf, &p, s + buf_len, &var_hash TSRMLS_CC)) {",
          "864:     zval_ptr_dtor(&pinf);",
          "869:   hash = spl_object_storage_get_hash(intern, getThis(), pentry, &hash_len TSRMLS_CC);",
          "871:    zval_ptr_dtor(&pentry);",
          "872:    zval_ptr_dtor(&pinf);",
          "875:   pelement = spl_object_storage_get(intern, hash, hash_len TSRMLS_CC);",
          "877:   if(pelement) {",
          "878:    if(pelement->inf) {",
          "881:    if(pelement->obj) {",
          "882:     var_push_dtor(&var_hash, &pelement->obj);",
          "885:   spl_object_storage_attach(intern, getThis(), pentry, pinf TSRMLS_CC);",
          "886:   zval_ptr_dtor(&pentry);",
          "887:   zval_ptr_dtor(&pinf);",
          "",
          "[Added Lines]",
          "830:   if (!php_var_unserialize(&entry, &p, s + buf_len, &var_hash TSRMLS_CC)) {",
          "833:   if (Z_TYPE(entry) != IS_OBJECT) {",
          "834:    zval_ptr_dtor(&entry);",
          "839:    if (!php_var_unserialize(&inf, &p, s + buf_len, &var_hash TSRMLS_CC)) {",
          "840:     zval_ptr_dtor(&entry);",
          "845:   hash = spl_object_storage_get_hash(intern, getThis(), &entry TSRMLS_CC);",
          "847:    zval_ptr_dtor(&entry);",
          "848:    zval_ptr_dtor(&inf);",
          "851:   pelement = spl_object_storage_get(intern, hash TSRMLS_CC);",
          "853:   if (pelement) {",
          "854:    if (!ZVAL_IS_UNDEF(&pelement->inf)) {",
          "857:    if (pelement->obj) {",
          "858:     var_push_dtor(&var_hash, pelement->obj);",
          "861:   spl_object_storage_attach(intern, getThis(), &entry, &inf TSRMLS_CC);",
          "862:   zval_ptr_dtor(&entry);",
          "863:   zval_ptr_dtor(&inf);",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "898:  }",
          "899:  ++p;",
          "902:  if (!php_var_unserialize(&pmembers, &p, s + buf_len, &var_hash TSRMLS_CC)) {",
          "904:   goto outexcept;",
          "905:  }",
          "",
          "[Removed Lines]",
          "901:  ALLOC_INIT_ZVAL(pmembers);",
          "903:   zval_ptr_dtor(&pmembers);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "908:  if (!intern->std.properties) {",
          "909:   rebuild_object_properties(&intern->std);",
          "910:  }",
          "912:  zval_ptr_dtor(&pmembers);",
          "918:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "919:  return;",
          "921: outexcept:",
          "925:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "926:  zend_throw_exception_ex(spl_ce_UnexpectedValueException, 0 TSRMLS_CC, \"Error at offset %ld of %d bytes\", (long)((char*)p - buf), buf_len);",
          "927:  return;",
          "",
          "[Removed Lines]",
          "911:  zend_hash_copy(intern->std.properties, Z_ARRVAL_P(pmembers), (copy_ctor_func_t) zval_add_ref, (void *) NULL, sizeof(zval *));",
          "915:  if (pcount) {",
          "916:   zval_ptr_dtor(&pcount);",
          "917:  }",
          "922:  if (pcount) {",
          "923:   zval_ptr_dtor(&pcount);",
          "924:  }",
          "",
          "[Added Lines]",
          "885:  zend_hash_copy(intern->std.properties, Z_ARRVAL(pmembers), (copy_ctor_func_t) zval_add_ref);",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1010:   return;",
          "1011:  }",
          "1014:  intern->flags = flags;",
          "1015:  zend_restore_error_handling(&error_handling TSRMLS_CC);",
          "1016: }",
          "",
          "[Removed Lines]",
          "1013:  intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "980:  intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1021: SPL_METHOD(MultipleIterator, getFlags)",
          "1022: {",
          "1025:  if (zend_parse_parameters_none() == FAILURE) {",
          "1026:   return;",
          "",
          "[Removed Lines]",
          "1023:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "990:  spl_SplObjectStorage *intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1034: SPL_METHOD(MultipleIterator, setFlags)",
          "1035: {",
          "1036:  spl_SplObjectStorage *intern;",
          "1039:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"l\", &intern->flags) == FAILURE) {",
          "1040:   return;",
          "",
          "[Removed Lines]",
          "1037:  intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1004:  intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1053:   return;",
          "1054:  }",
          "1058:  if (info != NULL) {",
          "1059:   spl_SplObjectStorageElement *element;",
          "",
          "[Removed Lines]",
          "1056:  intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1023:  intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1065:   }",
          "1067:   zend_hash_internal_pointer_reset_ex(&intern->storage, &intern->pos);",
          "1070:    if (Z_LVAL(compare_result)) {",
          "1071:     zend_throw_exception(spl_ce_InvalidArgumentException, \"Key duplication error\", 0 TSRMLS_CC);",
          "1072:     return;",
          "",
          "[Removed Lines]",
          "1068:   while (zend_hash_get_current_data_ex(&intern->storage, (void**)&element, &intern->pos) == SUCCESS) {",
          "1069:    is_identical_function(&compare_result, info, element->inf TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1035:   while ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &intern->pos)) != NULL) {",
          "1036:    is_identical_function(&compare_result, info, &element->inf TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1087:  spl_SplObjectStorageElement *element;",
          "1088:  zval                        *it;",
          "1092:  if (zend_parse_parameters_none() == FAILURE) {",
          "1093:   return;",
          "1094:  }",
          "1096:  zend_hash_internal_pointer_reset_ex(&intern->storage, &intern->pos);",
          "1098:   it = element->obj;",
          "1100:   zend_hash_move_forward_ex(&intern->storage, &intern->pos);",
          "1101:  }",
          "1102: }",
          "",
          "[Removed Lines]",
          "1090:  intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "1097:  while (zend_hash_get_current_data_ex(&intern->storage, (void**)&element, &intern->pos) == SUCCESS && !EG(exception)) {",
          "1099:   zend_call_method_with_0_params(&it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_rewind, \"rewind\", NULL);",
          "",
          "[Added Lines]",
          "1057:  intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "1064:  while ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &intern->pos)) != NULL && !EG(exception)) {",
          "1066:   zend_call_method_with_0_params(it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_rewind, \"rewind\", NULL);",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1110:  spl_SplObjectStorageElement *element;",
          "1111:  zval                        *it;",
          "1115:  if (zend_parse_parameters_none() == FAILURE) {",
          "1116:   return;",
          "1117:  }",
          "1119:  zend_hash_internal_pointer_reset_ex(&intern->storage, &intern->pos);",
          "1121:   it = element->obj;",
          "1123:   zend_hash_move_forward_ex(&intern->storage, &intern->pos);",
          "1124:  }",
          "1125: }",
          "",
          "[Removed Lines]",
          "1113:  intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "1120:  while (zend_hash_get_current_data_ex(&intern->storage, (void**)&element, &intern->pos) == SUCCESS && !EG(exception)) {",
          "1122:   zend_call_method_with_0_params(&it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_next, \"next\", NULL);",
          "",
          "[Added Lines]",
          "1080:  intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "1087:  while ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &intern->pos)) != NULL && !EG(exception)) {",
          "1089:   zend_call_method_with_0_params(it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_next, \"next\", NULL);",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1131: {",
          "1132:  spl_SplObjectStorage        *intern;",
          "1133:  spl_SplObjectStorageElement *element;",
          "1135:  long                         expect, valid;",
          "1139:  if (zend_parse_parameters_none() == FAILURE) {",
          "1140:   return;",
          "",
          "[Removed Lines]",
          "1134:  zval                        *it, *retval = NULL;",
          "1137:  intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1101:  zval                        *it, retval;",
          "1104:  intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1147:  expect = (intern->flags & MIT_NEED_ALL) ? 1 : 0;",
          "1149:  zend_hash_internal_pointer_reset_ex(&intern->storage, &intern->pos);",
          "1151:   it = element->obj;",
          "1156:    zval_ptr_dtor(&retval);",
          "1157:   } else {",
          "1158:    valid = 0;",
          "",
          "[Removed Lines]",
          "1150:  while (zend_hash_get_current_data_ex(&intern->storage, (void**)&element, &intern->pos) == SUCCESS && !EG(exception)) {",
          "1152:   zend_call_method_with_0_params(&it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_valid, \"valid\", &retval);",
          "1154:   if (retval) {",
          "1155:    valid = Z_LVAL_P(retval);",
          "",
          "[Added Lines]",
          "1117:  while ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &intern->pos)) != NULL && !EG(exception)) {",
          "1119:   zend_call_method_with_0_params(it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_valid, \"valid\", &retval);",
          "1121:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "1122:    valid = Z_LVAL(retval);",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1173: {",
          "1174:  spl_SplObjectStorageElement *element;",
          "1176:  int                          valid = 1, num_elements;",
          "1178:  num_elements = zend_hash_num_elements(&intern->storage);",
          "",
          "[Removed Lines]",
          "1175:  zval                        *it, *retval = NULL;",
          "",
          "[Added Lines]",
          "1142:  zval                        *it, retval;",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "1183:  array_init_size(return_value, num_elements);",
          "1185:  zend_hash_internal_pointer_reset_ex(&intern->storage, &intern->pos);",
          "1187:   it = element->obj;",
          "1192:    zval_ptr_dtor(&retval);",
          "1193:   } else {",
          "1194:    valid = 0;",
          "",
          "[Removed Lines]",
          "1186:  while (zend_hash_get_current_data_ex(&intern->storage, (void**)&element, &intern->pos) == SUCCESS && !EG(exception)) {",
          "1188:   zend_call_method_with_0_params(&it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_valid, \"valid\", &retval);",
          "1190:   if (retval) {",
          "1191:    valid = Z_LVAL_P(retval);",
          "",
          "[Added Lines]",
          "1153:  while ((element = zend_hash_get_current_data_ptr_ex(&intern->storage, &intern->pos)) != NULL && !EG(exception)) {",
          "1155:   zend_call_method_with_0_params(it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_valid, \"valid\", &retval);",
          "1157:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "1158:    valid = Z_LVAL(retval);",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "1197:   if (valid) {",
          "1198:    if (SPL_MULTIPLE_ITERATOR_GET_ALL_CURRENT == get_type) {",
          "1200:    } else {",
          "1202:    }",
          "1204:     zend_throw_exception(spl_ce_RuntimeException, \"Failed to call sub iterator method\", 0 TSRMLS_CC);",
          "1205:     return;",
          "1206:    }",
          "",
          "[Removed Lines]",
          "1199:     zend_call_method_with_0_params(&it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_current, \"current\", &retval);",
          "1201:     zend_call_method_with_0_params(&it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_key,     \"key\",     &retval);",
          "1203:    if (!retval) {",
          "",
          "[Added Lines]",
          "1166:     zend_call_method_with_0_params(it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_current, \"current\", &retval);",
          "1168:     zend_call_method_with_0_params(it, Z_OBJCE_P(it), &Z_OBJCE_P(it)->iterator_funcs.zf_key, \"key\", &retval);",
          "1170:    if (ZVAL_IS_UNDEF(&retval)) {",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "1212:    }",
          "1213:    return;",
          "1214:   } else {",
          "1216:   }",
          "1218:   if (intern->flags & MIT_KEYS_ASSOC) {",
          "1220:     case IS_LONG:",
          "1222:      break;",
          "1223:     case IS_STRING:",
          "1225:      break;",
          "1226:     default:",
          "1227:      zval_ptr_dtor(&retval);",
          "",
          "[Removed Lines]",
          "1215:    ALLOC_INIT_ZVAL(retval);",
          "1219:    switch (Z_TYPE_P(element->inf)) {",
          "1221:      add_index_zval(return_value, Z_LVAL_P(element->inf), retval);",
          "1224:      add_assoc_zval_ex(return_value, Z_STRVAL_P(element->inf), Z_STRLEN_P(element->inf)+1U, retval);",
          "",
          "[Added Lines]",
          "1182:    ZVAL_NULL(&retval);",
          "1186:    switch (Z_TYPE(element->inf)) {",
          "1188:      add_index_zval(return_value, Z_LVAL(element->inf), &retval);",
          "1191:      add_assoc_zval_ex(return_value, Z_STRVAL(element->inf), Z_STRLEN(element->inf), &retval);",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "1229:      return;",
          "1230:    }",
          "1231:   } else {",
          "1233:   }",
          "1235:   zend_hash_move_forward_ex(&intern->storage, &intern->pos);",
          "",
          "[Removed Lines]",
          "1232:    add_next_index_zval(return_value, retval);",
          "",
          "[Added Lines]",
          "1199:    add_next_index_zval(return_value, &retval);",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "1242: SPL_METHOD(MultipleIterator, current)",
          "1243: {",
          "1244:  spl_SplObjectStorage        *intern;",
          "1247:  if (zend_parse_parameters_none() == FAILURE) {",
          "1248:   return;",
          "",
          "[Removed Lines]",
          "1245:  intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1212:  intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "1257: SPL_METHOD(MultipleIterator, key)",
          "1258: {",
          "1259:  spl_SplObjectStorage        *intern;",
          "1262:  if (zend_parse_parameters_none() == FAILURE) {",
          "1263:   return;",
          "",
          "[Removed Lines]",
          "1260:  intern = (spl_SplObjectStorage*)zend_object_store_get_object(getThis() TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1227:  intern = (spl_SplObjectStorage*)Z_OBJ_P(getThis());",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "1314:  spl_handler_SplObjectStorage.compare_objects = spl_object_storage_compare_objects;",
          "1315:  spl_handler_SplObjectStorage.clone_obj       = spl_object_storage_clone;",
          "1316:  spl_handler_SplObjectStorage.get_gc          = spl_object_storage_get_gc;",
          "1318:  REGISTER_SPL_IMPLEMENTS(SplObjectStorage, Countable);",
          "1319:  REGISTER_SPL_IMPLEMENTS(SplObjectStorage, Iterator);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1284:  spl_handler_SplObjectStorage.dtor_obj        = zend_objects_destroy_object;",
          "1285:  spl_handler_SplObjectStorage.free_obj        = spl_SplOjectStorage_free_storage;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "feeb2fba93a451c467ec70963995ca6371b3a568",
      "candidate_info": {
        "commit_hash": "feeb2fba93a451c467ec70963995ca6371b3a568",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/feeb2fba93a451c467ec70963995ca6371b3a568",
        "files": [
          "Zend/zend_exceptions.c",
          "ext/date/tests/bug53437_var5.phpt",
          "ext/spl/spl_array.c",
          "ext/spl/spl_dllist.c",
          "ext/spl/spl_observer.c",
          "ext/standard/php_var.h",
          "ext/standard/tests/serialize/bug69793.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "fix merge",
        "before_after_code_files": [
          "Zend/zend_exceptions.c||Zend/zend_exceptions.c",
          "ext/date/tests/bug53437_var5.phpt||ext/date/tests/bug53437_var5.phpt",
          "ext/spl/spl_array.c||ext/spl/spl_array.c",
          "ext/spl/spl_dllist.c||ext/spl/spl_dllist.c",
          "ext/spl/spl_observer.c||ext/spl/spl_observer.c",
          "ext/standard/php_var.h||ext/standard/php_var.h",
          "ext/standard/tests/serialize/bug69793.phpt||ext/standard/tests/serialize/bug69793.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/spl/spl_observer.c||ext/spl/spl_observer.c"
          ],
          "candidate": [
            "ext/spl/spl_observer.c||ext/spl/spl_observer.c"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_exceptions.c||Zend/zend_exceptions.c": [
          "File: Zend/zend_exceptions.c -> Zend/zend_exceptions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "284: #define CHECK_EXC_TYPE(name, type) \\",
          "287:   zval tmp; \\",
          "288:   ZVAL_STRINGL(&tmp, name, sizeof(name) - 1); \\",
          "289:   Z_OBJ_HANDLER_P(object, unset_property)(object, &tmp, NULL); \\",
          "",
          "[Removed Lines]",
          "285:  if(zend_read_property(i_get_exception_base(object), (object), name, sizeof(name) - 1, 1, &value) != &EG(uninitialized_zval) \\",
          "286:   && Z_TYPE(value) != type) { \\",
          "",
          "[Added Lines]",
          "285:  ZVAL_UNDEF(&value); \\",
          "286:  pvalue = zend_read_property(i_get_exception_base(object), (object), name, sizeof(name) - 1, 1, &value); \\",
          "287:  if(Z_TYPE_P(pvalue) != IS_UNDEF && Z_TYPE_P(pvalue) != type) { \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "293: ZEND_METHOD(exception, __wakeup)",
          "294: {",
          "296:  zval *object = getThis();",
          "297:  CHECK_EXC_TYPE(\"message\", IS_STRING);",
          "298:  CHECK_EXC_TYPE(\"string\", IS_STRING);",
          "",
          "[Removed Lines]",
          "295:  zval value;",
          "",
          "[Added Lines]",
          "296:  zval value, *pvalue;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "711:  exception = getThis();",
          "712:  ZVAL_STRINGL(&fname, \"gettraceasstring\", sizeof(\"gettraceasstring\")-1);",
          "715:   zend_string *prev_str = str;",
          "716:   zend_string *message = zval_get_string(GET_PROPERTY(exception, \"message\"));",
          "717:   zend_string *file = zval_get_string(GET_PROPERTY(exception, \"file\"));",
          "",
          "[Removed Lines]",
          "714:  while (exception && Z_TYPE_P(exception) == IS_OBJECT) {",
          "",
          "[Added Lines]",
          "715:  while (exception && Z_TYPE_P(exception) == IS_OBJECT && instanceof_function(Z_OBJCE_P(exception), zend_ce_throwable)) {",
          "",
          "---------------"
        ],
        "ext/date/tests/bug53437_var5.phpt||ext/date/tests/bug53437_var5.phpt": [
          "File: ext/date/tests/bug53437_var5.phpt -> ext/date/tests/bug53437_var5.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: --EXPECTF--",
          "15: object(DateInterval)#%d (15) {",
          "16:   [\"y\"]=>",
          "18:   [\"m\"]=>",
          "20:   [\"d\"]=>",
          "22:   [\"h\"]=>",
          "24:   [\"i\"]=>",
          "26:   [\"s\"]=>",
          "28:   [\"weekday\"]=>",
          "29:   int(10)",
          "30:   [\"weekday_behavior\"]=>",
          "",
          "[Removed Lines]",
          "17:   int(-1)",
          "19:   int(-1)",
          "21:   int(-1)",
          "23:   int(-1)",
          "25:   int(-1)",
          "27:   int(-1)",
          "",
          "[Added Lines]",
          "17:   int(2)",
          "19:   int(0)",
          "21:   int(0)",
          "23:   int(6)",
          "25:   int(8)",
          "27:   int(0)",
          "",
          "---------------"
        ],
        "ext/spl/spl_array.c||ext/spl/spl_array.c": [
          "File: ext/spl/spl_array.c -> ext/spl/spl_array.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1710:  size_t buf_len;",
          "1711:  const unsigned char *p, *s;",
          "1712:  php_unserialize_data_t var_hash;",
          "1714:  HashTable *aht;",
          "1715:  zend_long flags;",
          "",
          "[Removed Lines]",
          "1713:  zval members, zflags;",
          "",
          "[Added Lines]",
          "1713:  zval *members, *zflags;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1737:  }",
          "1738:  ++p;",
          "1741:   goto outexcept;",
          "1742:  }",
          "",
          "[Removed Lines]",
          "1740:  if (!php_var_unserialize(&zflags, &p, s + buf_len, &var_hash) || Z_TYPE(zflags) != IS_LONG) {",
          "1744:  var_push_dtor(&var_hash, &zflags);",
          "1746:  flags = Z_LVAL(zflags);",
          "",
          "[Added Lines]",
          "1740:  zflags = var_tmp_var(&var_hash);",
          "1741:  if (!php_var_unserialize(zflags, &p, s + buf_len, &var_hash) || Z_TYPE_P(zflags) != IS_LONG) {",
          "1746:  flags = Z_LVAL_P(zflags);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1777:  }",
          "1778:  ++p;",
          "1783:   goto outexcept;",
          "1784:  }",
          "1793:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "1794:  return;",
          "",
          "[Removed Lines]",
          "1780:  ZVAL_UNDEF(&members);",
          "1781:  if (!php_var_unserialize(&members, &p, s + buf_len, &var_hash) || Z_TYPE(members) != IS_ARRAY) {",
          "1782:   zval_ptr_dtor(&members);",
          "1786:  var_push_dtor(&var_hash, &members);",
          "1788:  object_properties_load(&intern->std, Z_ARRVAL(members));",
          "1789:  zval_ptr_dtor(&members);",
          "",
          "[Added Lines]",
          "1780:  members = var_tmp_var(&var_hash);",
          "1781:  if (!php_var_unserialize(members, &p, s + buf_len, &var_hash) || Z_TYPE_P(members) != IS_ARRAY) {",
          "1786:  object_properties_load(&intern->std, Z_ARRVAL_P(members));",
          "",
          "---------------"
        ],
        "ext/spl/spl_dllist.c||ext/spl/spl_dllist.c": [
          "File: ext/spl/spl_dllist.c -> ext/spl/spl_dllist.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1178: SPL_METHOD(SplDoublyLinkedList, unserialize)",
          "1179: {",
          "1180:  spl_dllist_object *intern = Z_SPLDLLIST_P(getThis());",
          "1182:  char *buf;",
          "1183:  size_t buf_len;",
          "1184:  const unsigned char *p, *s;",
          "",
          "[Removed Lines]",
          "1181:  zval flags, elem;",
          "",
          "[Added Lines]",
          "1181:  zval *flags, *elem;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1196:  PHP_VAR_UNSERIALIZE_INIT(var_hash);",
          "1200:   goto error;",
          "1201:  }",
          "1212:  while(*p == ':') {",
          "1213:   ++p;",
          "1215:    goto error;",
          "1216:   }",
          "1220:  }",
          "1222:  if (*p != '\\0') {",
          "",
          "[Removed Lines]",
          "1199:  if (!php_var_unserialize(&flags, &p, s + buf_len, &var_hash)) {",
          "1203:  if (Z_TYPE(flags) != IS_LONG) {",
          "1204:   zval_ptr_dtor(&flags);",
          "1205:   goto error;",
          "1206:  }",
          "1208:  intern->flags = (int)Z_LVAL(flags);",
          "1209:  zval_ptr_dtor(&flags);",
          "1214:   if (!php_var_unserialize(&elem, &p, s + buf_len, &var_hash)) {",
          "1218:   spl_ptr_llist_push(intern->llist, &elem);",
          "1219:   zval_ptr_dtor(&elem);",
          "",
          "[Added Lines]",
          "1199:  flags = var_tmp_var(&var_hash);",
          "1200:  if (!php_var_unserialize(flags, &p, s + buf_len, &var_hash) || Z_TYPE_P(flags) != IS_LONG) {",
          "1204:  intern->flags = (int)Z_LVAL_P(flags);",
          "1209:   elem = var_tmp_var(&var_hash);",
          "1210:   if (!php_var_unserialize(elem, &p, s + buf_len, &var_hash)) {",
          "1214:   spl_ptr_llist_push(intern->llist, elem);",
          "",
          "---------------"
        ],
        "ext/spl/spl_observer.c||ext/spl/spl_observer.c": [
          "File: ext/spl/spl_observer.c -> ext/spl/spl_observer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "780:  size_t buf_len;",
          "781:  const unsigned char *p, *s;",
          "782:  php_unserialize_data_t var_hash;",
          "784:  spl_SplObjectStorageElement *element;",
          "785:  zend_long count;",
          "",
          "[Removed Lines]",
          "783:  zval entry, pmembers, pcount, inf;",
          "",
          "[Added Lines]",
          "783:  zval entry, inf;",
          "784:  zval *pcount, *pmembers;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "801:  }",
          "802:  ++p;",
          "809:   goto outexcept;",
          "810:  }",
          "816:  while (count-- > 0) {",
          "817:   spl_SplObjectStorageElement *pelement;",
          "",
          "[Removed Lines]",
          "804:  if (!php_var_unserialize(&pcount, &p, s + buf_len, &var_hash)) {",
          "805:   goto outexcept;",
          "806:  }",
          "807:  if (Z_TYPE(pcount) != IS_LONG) {",
          "808:   zval_ptr_dtor(&pcount);",
          "812:  var_push_dtor(&var_hash, &pcount);",
          "814:  count = Z_LVAL(pcount);",
          "",
          "[Added Lines]",
          "805:  pcount = var_tmp_var(&var_hash);",
          "806:  if (!php_var_unserialize(pcount, &p, s + buf_len, &var_hash) || Z_TYPE_P(pcount) != IS_LONG) {",
          "811:  count = Z_LVAL_P(pcount);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "838:     zval_ptr_dtor(&entry);",
          "839:     goto outexcept;",
          "840:    }",
          "841:   }",
          "843:   hash = spl_object_storage_get_hash(intern, getThis(), &entry);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "838:   } else {",
          "839:    ZVAL_UNDEF(&inf);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "856:     var_push_dtor(&var_hash, &pelement->obj);",
          "857:    }",
          "858:   }",
          "860:   var_replace(&var_hash, &entry, &element->obj);",
          "861:   var_replace(&var_hash, &inf, &element->inf);",
          "862:   zval_ptr_dtor(&entry);",
          "",
          "[Removed Lines]",
          "859:   element = spl_object_storage_attach(intern, getThis(), &entry, &inf);",
          "",
          "[Added Lines]",
          "858:   element = spl_object_storage_attach(intern, getThis(), &entry, Z_ISUNDEF(inf)?NULL:&inf);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "874:  }",
          "875:  ++p;",
          "880:   goto outexcept;",
          "881:  }",
          "885:  if (!intern->std.properties) {",
          "886:   rebuild_object_properties(&intern->std);",
          "887:  }",
          "891:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "892:  return;",
          "",
          "[Removed Lines]",
          "877:  ZVAL_UNDEF(&pmembers);",
          "878:  if (!php_var_unserialize(&pmembers, &p, s + buf_len, &var_hash) || Z_TYPE(pmembers) != IS_ARRAY) {",
          "879:   zval_ptr_dtor(&pmembers);",
          "883:  var_push_dtor(&var_hash, &pmembers);",
          "888:  zend_hash_copy(intern->std.properties, Z_ARRVAL(pmembers), (copy_ctor_func_t) zval_add_ref);",
          "889:  zval_ptr_dtor(&pmembers);",
          "",
          "[Added Lines]",
          "876:  pmembers = var_tmp_var(&var_hash);",
          "877:  if (!php_var_unserialize(pmembers, &p, s + buf_len, &var_hash) || Z_TYPE_P(pmembers) != IS_ARRAY) {",
          "885:  zend_hash_copy(intern->std.properties, Z_ARRVAL_P(pmembers), (copy_ctor_func_t) zval_add_ref);",
          "",
          "---------------"
        ],
        "ext/standard/php_var.h||ext/standard/php_var.h": [
          "File: ext/standard/php_var.h -> ext/standard/php_var.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "118: PHPAPI void var_replace(php_unserialize_data_t *var_hash, zval *ozval, zval *nzval);",
          "119: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hash, zval *val);",
          "121: PHPAPI void var_destroy(php_unserialize_data_t *var_hash);",
          "",
          "[Removed Lines]",
          "120: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval);",
          "",
          "[Added Lines]",
          "120: PHPAPI zval *var_tmp_var(php_unserialize_data_t *var_hashx);",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug69793.phpt||ext/standard/tests/serialize/bug69793.phpt": [
          "File: ext/standard/tests/serialize/bug69793.phpt -> ext/standard/tests/serialize/bug69793.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: Notice: Undefined property: Exception::$file in %s/bug69793.php on line %d",
          "14: Notice: Undefined property: Exception::$previous in %s/bug69793.php on line %d",
          "16: Stack trace:",
          "17: #0 {main}\"",
          "",
          "[Removed Lines]",
          "15: string(53) \"exception 'Exception' in :1337",
          "",
          "[Added Lines]",
          "15: string(41) \"Exception in :1337",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval *rval)",
          "68: {",
          "96: }",
          "",
          "[Removed Lines]",
          "69:  var_dtor_entries *var_hash;",
          "71:  if (!var_hashx || !*var_hashx) {",
          "72:   return;",
          "73:  }",
          "75:  var_hash = (*var_hashx)->last_dtor;",
          "76: #if VAR_ENTRIES_DBG",
          "77:  fprintf(stderr, \"var_push_dtor(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval));",
          "78: #endif",
          "80:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "81:   var_hash = emalloc(sizeof(var_dtor_entries));",
          "82:   var_hash->used_slots = 0;",
          "83:   var_hash->next = 0;",
          "85:   if (!(*var_hashx)->first_dtor) {",
          "86:    (*var_hashx)->first_dtor = var_hash;",
          "87:   } else {",
          "88:    ((var_dtor_entries *) (*var_hashx)->last_dtor)->next = var_hash;",
          "89:   }",
          "91:   (*var_hashx)->last_dtor = var_hash;",
          "92:  }",
          "94:  ZVAL_COPY(&var_hash->data[var_hash->used_slots], rval);",
          "95:  var_hash->used_slots++;",
          "",
          "[Added Lines]",
          "69:  zval *tmp_var = var_tmp_var(var_hashx);",
          "70:     if (!tmp_var) {",
          "71:         return;",
          "72:     }",
          "73:  ZVAL_COPY(tmp_var, rval);",
          "74: }",
          "76: PHPAPI zval *var_tmp_var(php_unserialize_data_t *var_hashx)",
          "77: {",
          "78:     var_dtor_entries *var_hash;",
          "80:     if (!var_hashx || !*var_hashx) {",
          "81:         return NULL;",
          "82:     }",
          "84:     var_hash = (*var_hashx)->last_dtor;",
          "85:     if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "86:         var_hash = emalloc(sizeof(var_dtor_entries));",
          "87:         var_hash->used_slots = 0;",
          "88:         var_hash->next = 0;",
          "90:         if (!(*var_hashx)->first_dtor) {",
          "91:             (*var_hashx)->first_dtor = var_hash;",
          "92:         } else {",
          "93:             ((var_dtor_entries *) (*var_hashx)->last_dtor)->next = var_hash;",
          "94:         }",
          "96:         (*var_hashx)->last_dtor = var_hash;",
          "97:     }",
          "98:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "99:     return &var_hash->data[var_hash->used_slots++];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "259: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "262: #line 267 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "266: #line 271 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "524:  start = cursor;",
          "528: {",
          "529:  YYCTYPE yych;",
          "530:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "527: #line 528 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "531: #line 532 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "584:  yych = *(YYMARKER = ++YYCURSOR);",
          "585:  if (yych == ':') goto yy95;",
          "586: yy3:",
          "588:  { return 0; }",
          "590: yy4:",
          "591:  yych = *(YYMARKER = ++YYCURSOR);",
          "592:  if (yych == ':') goto yy89;",
          "",
          "[Removed Lines]",
          "587: #line 875 \"ext/standard/var_unserializer.re\"",
          "589: #line 590 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "591: #line 879 \"ext/standard/var_unserializer.re\"",
          "593: #line 594 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "629:  goto yy3;",
          "630: yy14:",
          "631:  ++YYCURSOR;",
          "633:  {",
          "635:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "637: }",
          "639: yy16:",
          "640:  yych = *++YYCURSOR;",
          "641:  goto yy3;",
          "",
          "[Removed Lines]",
          "632: #line 869 \"ext/standard/var_unserializer.re\"",
          "638: #line 639 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "636: #line 873 \"ext/standard/var_unserializer.re\"",
          "642: #line 643 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "661:  if (yybm[0+yych] & 128) {",
          "662:   goto yy20;",
          "663:  }",
          "665:  yych = *++YYCURSOR;",
          "666:  if (yych != '\"') goto yy18;",
          "667:  ++YYCURSOR;",
          "669:  {",
          "670:  size_t len, len2, len3, maxlen;",
          "671:  zend_long elements;",
          "",
          "[Removed Lines]",
          "664:  if (yych != ':') goto yy18;",
          "668: #line 724 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "668:  if (yych <= '/') goto yy18;",
          "669:  if (yych >= ';') goto yy18;",
          "673: #line 728 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "811:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "812: }",
          "814: yy25:",
          "815:  yych = *++YYCURSOR;",
          "816:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "813: #line 814 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "818: #line 819 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "835:  yych = *++YYCURSOR;",
          "836:  if (yych != '\"') goto yy18;",
          "837:  ++YYCURSOR;",
          "839:  {",
          "",
          "[Removed Lines]",
          "838: #line 716 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "843: #line 720 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "843:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "844:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "845: }",
          "847: yy32:",
          "848:  yych = *++YYCURSOR;",
          "849:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "846: #line 847 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "851: #line 852 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "864:  yych = *++YYCURSOR;",
          "865:  if (yych != '{') goto yy18;",
          "866:  ++YYCURSOR;",
          "868:  {",
          "869:  zend_long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "867: #line 695 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "872: #line 699 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "886:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "887: }",
          "889: yy39:",
          "890:  yych = *++YYCURSOR;",
          "891:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "888: #line 889 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "893: #line 894 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "906:  yych = *++YYCURSOR;",
          "907:  if (yych != '\"') goto yy18;",
          "908:  ++YYCURSOR;",
          "910:  {",
          "911:  size_t len, maxlen;",
          "912:  zend_string *str;",
          "",
          "[Removed Lines]",
          "909: #line 667 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "914: #line 671 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "934:  ZVAL_STR(rval, str);",
          "935:  return 1;",
          "936: }",
          "938: yy46:",
          "939:  yych = *++YYCURSOR;",
          "940:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "937: #line 938 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "942: #line 943 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "955:  yych = *++YYCURSOR;",
          "956:  if (yych != '\"') goto yy18;",
          "957:  ++YYCURSOR;",
          "959:  {",
          "960:  size_t len, maxlen;",
          "961:  char *str;",
          "",
          "[Removed Lines]",
          "958: #line 640 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "963: #line 644 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "982:  ZVAL_STRINGL(rval, str, len);",
          "983:  return 1;",
          "984: }",
          "986: yy53:",
          "987:  yych = *++YYCURSOR;",
          "988:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "985: #line 986 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "990: #line 991 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1070:  }",
          "1071: yy63:",
          "1072:  ++YYCURSOR;",
          "1074:  {",
          "1075: #if SIZEOF_ZEND_LONG == 4",
          "1076: use_double:",
          "",
          "[Removed Lines]",
          "1073: #line 631 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1078: #line 635 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1079:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1080:  return 1;",
          "1081: }",
          "1083: yy65:",
          "1084:  yych = *++YYCURSOR;",
          "1085:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1082: #line 1083 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1087: #line 1088 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1138:  yych = *++YYCURSOR;",
          "1139:  if (yych != ';') goto yy18;",
          "1140:  ++YYCURSOR;",
          "1142:  {",
          "",
          "[Removed Lines]",
          "1141: #line 615 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1146: #line 619 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1155:  return 1;",
          "1156: }",
          "1158: yy76:",
          "1159:  yych = *++YYCURSOR;",
          "1160:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1157: #line 1158 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1162: #line 1163 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1181:  if (yych <= '9') goto yy79;",
          "1182:  if (yych != ';') goto yy18;",
          "1183:  ++YYCURSOR;",
          "1185:  {",
          "1186: #if SIZEOF_ZEND_LONG == 4",
          "1187:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1184: #line 589 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1189: #line 593 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1207:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1208:  return 1;",
          "1209: }",
          "1211: yy83:",
          "1212:  yych = *++YYCURSOR;",
          "1213:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1210: #line 1211 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1215: #line 1216 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1215:  yych = *++YYCURSOR;",
          "1216:  if (yych != ';') goto yy18;",
          "1217:  ++YYCURSOR;",
          "1219:  {",
          "1221:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1222:  return 1;",
          "1223: }",
          "1225: yy87:",
          "1226:  ++YYCURSOR;",
          "1228:  {",
          "1230:  ZVAL_NULL(rval);",
          "1231:  return 1;",
          "1232: }",
          "1234: yy89:",
          "1235:  yych = *++YYCURSOR;",
          "1236:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1218: #line 583 \"ext/standard/var_unserializer.re\"",
          "1224: #line 1225 \"ext/standard/var_unserializer.c\"",
          "1227: #line 577 \"ext/standard/var_unserializer.re\"",
          "1233: #line 1234 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1223: #line 587 \"ext/standard/var_unserializer.re\"",
          "1229: #line 1230 \"ext/standard/var_unserializer.c\"",
          "1232: #line 581 \"ext/standard/var_unserializer.re\"",
          "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1253:  if (yych <= '9') goto yy91;",
          "1254:  if (yych != ';') goto yy18;",
          "1255:  ++YYCURSOR;",
          "1257:  {",
          "1258:  zend_long id;",
          "",
          "[Removed Lines]",
          "1256: #line 554 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1261: #line 558 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1277:  return 1;",
          "1278: }",
          "1280: yy95:",
          "1281:  yych = *++YYCURSOR;",
          "1282:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1279: #line 1280 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1284: #line 1285 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1299:  if (yych <= '9') goto yy97;",
          "1300:  if (yych != ';') goto yy18;",
          "1301:  ++YYCURSOR;",
          "1303:  {",
          "1304:  zend_long id;",
          "",
          "[Removed Lines]",
          "1302: #line 532 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1307: #line 536 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1322:  return 1;",
          "1323: }",
          "1325: }",
          "1329:  return 0;",
          "",
          "[Removed Lines]",
          "1324: #line 1325 \"ext/standard/var_unserializer.c\"",
          "1326: #line 877 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1329: #line 1330 \"ext/standard/var_unserializer.c\"",
          "1331: #line 881 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval *rval)",
          "66: {",
          "94: }",
          "",
          "[Removed Lines]",
          "67:  var_dtor_entries *var_hash;",
          "69:  if (!var_hashx || !*var_hashx) {",
          "70:   return;",
          "71:  }",
          "73:  var_hash = (*var_hashx)->last_dtor;",
          "74: #if VAR_ENTRIES_DBG",
          "75:  fprintf(stderr, \"var_push_dtor(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval));",
          "76: #endif",
          "78:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "79:   var_hash = emalloc(sizeof(var_dtor_entries));",
          "80:   var_hash->used_slots = 0;",
          "81:   var_hash->next = 0;",
          "83:   if (!(*var_hashx)->first_dtor) {",
          "84:    (*var_hashx)->first_dtor = var_hash;",
          "85:   } else {",
          "86:    ((var_dtor_entries *) (*var_hashx)->last_dtor)->next = var_hash;",
          "87:   }",
          "89:   (*var_hashx)->last_dtor = var_hash;",
          "90:  }",
          "92:  ZVAL_COPY(&var_hash->data[var_hash->used_slots], rval);",
          "93:  var_hash->used_slots++;",
          "",
          "[Added Lines]",
          "67:  zval *tmp_var = var_tmp_var(var_hashx);",
          "68:     if (!tmp_var) {",
          "69:         return;",
          "70:     }",
          "71:  ZVAL_COPY(tmp_var, rval);",
          "72: }",
          "74: PHPAPI zval *var_tmp_var(php_unserialize_data_t *var_hashx)",
          "75: {",
          "76:     var_dtor_entries *var_hash;",
          "78:     if (!var_hashx || !*var_hashx) {",
          "79:         return NULL;",
          "80:     }",
          "82:     var_hash = (*var_hashx)->last_dtor;",
          "83:     if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "84:         var_hash = emalloc(sizeof(var_dtor_entries));",
          "85:         var_hash->used_slots = 0;",
          "86:         var_hash->next = 0;",
          "88:         if (!(*var_hashx)->first_dtor) {",
          "89:             (*var_hashx)->first_dtor = var_hash;",
          "90:         } else {",
          "91:             ((var_dtor_entries *) (*var_hashx)->last_dtor)->next = var_hash;",
          "92:         }",
          "94:         (*var_hashx)->last_dtor = var_hash;",
          "95:     }",
          "96:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "97:     return &var_hash->data[var_hash->used_slots++];",
          "",
          "---------------"
        ]
      }
    }
  ]
}