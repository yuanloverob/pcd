{
  "cve_id": "CVE-2019-19966",
  "cve_desc": "In the Linux kernel before 5.1.6, there is a use-after-free in cpia2_exit() in drivers/media/usb/cpia2/cpia2_v4l.c that will cause denial of service, aka CID-dea37a972655.",
  "repo": "torvalds/linux",
  "patch_hash": "dea37a97265588da604c6ba80160a287b72c7bfd",
  "patch_info": {
    "commit_hash": "dea37a97265588da604c6ba80160a287b72c7bfd",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/dea37a97265588da604c6ba80160a287b72c7bfd",
    "files": [
      "drivers/media/usb/cpia2/cpia2_v4l.c"
    ],
    "message": "media: cpia2: Fix use-after-free in cpia2_exit\n\nSyzkaller report this:\n\nBUG: KASAN: use-after-free in sysfs_remove_file_ns+0x5f/0x70 fs/sysfs/file.c:468\nRead of size 8 at addr ffff8881f59a6b70 by task syz-executor.0/8363\n\nCPU: 0 PID: 8363 Comm: syz-executor.0 Not tainted 5.0.0-rc8+ #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xfa/0x1ce lib/dump_stack.c:113\n print_address_description+0x65/0x270 mm/kasan/report.c:187\n kasan_report+0x149/0x18d mm/kasan/report.c:317\n sysfs_remove_file_ns+0x5f/0x70 fs/sysfs/file.c:468\n sysfs_remove_file include/linux/sysfs.h:519 [inline]\n driver_remove_file+0x40/0x50 drivers/base/driver.c:122\n usb_remove_newid_files drivers/usb/core/driver.c:212 [inline]\n usb_deregister+0x12a/0x3b0 drivers/usb/core/driver.c:1005\n cpia2_exit+0xa/0x16 [cpia2]\n __do_sys_delete_module kernel/module.c:1018 [inline]\n __se_sys_delete_module kernel/module.c:961 [inline]\n __x64_sys_delete_module+0x3dc/0x5e0 kernel/module.c:961\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f86f3754c58 EFLAGS: 00000246 ORIG_RAX: 00000000000000b0\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000020000300\nRBP: 0000000000000002 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f86f37556bc\nR13: 00000000004bcca9 R14: 00000000006f6b48 R15: 00000000ffffffff\n\nAllocated by task 8363:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_kmalloc.constprop.3+0xa0/0xd0 mm/kasan/common.c:495\n kmalloc include/linux/slab.h:545 [inline]\n kzalloc include/linux/slab.h:740 [inline]\n bus_add_driver+0xc0/0x610 drivers/base/bus.c:651\n driver_register+0x1bb/0x3f0 drivers/base/driver.c:170\n usb_register_driver+0x267/0x520 drivers/usb/core/driver.c:965\n 0xffffffffc1b4817c\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFreed by task 8363:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_slab_free+0x130/0x180 mm/kasan/common.c:457\n slab_free_hook mm/slub.c:1430 [inline]\n slab_free_freelist_hook mm/slub.c:1457 [inline]\n slab_free mm/slub.c:3005 [inline]\n kfree+0xe1/0x270 mm/slub.c:3957\n kobject_cleanup lib/kobject.c:662 [inline]\n kobject_release lib/kobject.c:691 [inline]\n kref_put include/linux/kref.h:67 [inline]\n kobject_put+0x146/0x240 lib/kobject.c:708\n bus_remove_driver+0x10e/0x220 drivers/base/bus.c:732\n driver_unregister+0x6c/0xa0 drivers/base/driver.c:197\n usb_register_driver+0x341/0x520 drivers/usb/core/driver.c:980\n 0xffffffffc1b4817c\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nThe buggy address belongs to the object at ffff8881f59a6b40\n which belongs to the cache kmalloc-256 of size 256\nThe buggy address is located 48 bytes inside of\n 256-byte region [ffff8881f59a6b40, ffff8881f59a6c40)\nThe buggy address belongs to the page:\npage:ffffea0007d66980 count:1 mapcount:0 mapping:ffff8881f6c02e00 index:0x0\nflags: 0x2fffc0000000200(slab)\nraw: 02fffc0000000200 dead000000000100 dead000000000200 ffff8881f6c02e00\nraw: 0000000000000000 00000000800c000c 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8881f59a6a00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff8881f59a6a80: 00 00 00 00 00 00 00 00 00 00 fc fc fc fc fc fc\n>ffff8881f59a6b00: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb\n                                                             ^\n ffff8881f59a6b80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff8881f59a6c00: fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc fc\n\ncpia2_init does not check return value of cpia2_init, if it failed\nin usb_register_driver, there is already cleanup using driver_unregister.\nNo need call cpia2_usb_cleanup on module exit.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nSigned-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>\nSigned-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>",
    "before_after_code_files": [
      "drivers/media/usb/cpia2/cpia2_v4l.c||drivers/media/usb/cpia2/cpia2_v4l.c"
    ]
  },
  "patch_diff": {
    "drivers/media/usb/cpia2/cpia2_v4l.c||drivers/media/usb/cpia2/cpia2_v4l.c": [
      "File: drivers/media/usb/cpia2/cpia2_v4l.c -> drivers/media/usb/cpia2/cpia2_v4l.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1240:  LOG(\"%s v%s\\n\",",
      "1241:      ABOUT, CPIA_VERSION);",
      "1242:  check_parameters();",
      "1245: }",
      "",
      "[Removed Lines]",
      "1243:  cpia2_usb_init();",
      "1244:  return 0;",
      "",
      "[Added Lines]",
      "1243:  return cpia2_usb_init();",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "56cd26b618855c9af48c8301aa6754ced8dd0beb",
      "candidate_info": {
        "commit_hash": "56cd26b618855c9af48c8301aa6754ced8dd0beb",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/56cd26b618855c9af48c8301aa6754ced8dd0beb",
        "files": [
          "drivers/media/rc/serial_ir.c"
        ],
        "message": "media: serial_ir: Fix use-after-free in serial_ir_init_module\n\nSyzkaller report this:\n\nBUG: KASAN: use-after-free in sysfs_remove_file_ns+0x5f/0x70 fs/sysfs/file.c:468\nRead of size 8 at addr ffff8881dc7ae030 by task syz-executor.0/6249\n\nCPU: 1 PID: 6249 Comm: syz-executor.0 Not tainted 5.0.0-rc8+ #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xfa/0x1ce lib/dump_stack.c:113\n print_address_description+0x65/0x270 mm/kasan/report.c:187\n kasan_report+0x149/0x18d mm/kasan/report.c:317\n ? 0xffffffffc1728000\n sysfs_remove_file_ns+0x5f/0x70 fs/sysfs/file.c:468\n sysfs_remove_file include/linux/sysfs.h:519 [inline]\n driver_remove_file+0x40/0x50 drivers/base/driver.c:122\n remove_bind_files drivers/base/bus.c:585 [inline]\n bus_remove_driver+0x186/0x220 drivers/base/bus.c:725\n driver_unregister+0x6c/0xa0 drivers/base/driver.c:197\n serial_ir_init_module+0x169/0x1000 [serial_ir]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f9450132c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000100 RDI: 0000000000000003\nRBP: 00007f9450132c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f94501336bc\nR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004\n\nAllocated by task 6249:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_kmalloc.constprop.3+0xa0/0xd0 mm/kasan/common.c:495\n kmalloc include/linux/slab.h:545 [inline]\n kzalloc include/linux/slab.h:740 [inline]\n bus_add_driver+0xc0/0x610 drivers/base/bus.c:651\n driver_register+0x1bb/0x3f0 drivers/base/driver.c:170\n serial_ir_init_module+0xe8/0x1000 [serial_ir]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFreed by task 6249:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_slab_free+0x130/0x180 mm/kasan/common.c:457\n slab_free_hook mm/slub.c:1430 [inline]\n slab_free_freelist_hook mm/slub.c:1457 [inline]\n slab_free mm/slub.c:3005 [inline]\n kfree+0xe1/0x270 mm/slub.c:3957\n kobject_cleanup lib/kobject.c:662 [inline]\n kobject_release lib/kobject.c:691 [inline]\n kref_put include/linux/kref.h:67 [inline]\n kobject_put+0x146/0x240 lib/kobject.c:708\n bus_remove_driver+0x10e/0x220 drivers/base/bus.c:732\n driver_unregister+0x6c/0xa0 drivers/base/driver.c:197\n serial_ir_init_module+0x14c/0x1000 [serial_ir]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nThe buggy address belongs to the object at ffff8881dc7ae000\n which belongs to the cache kmalloc-256 of size 256\nThe buggy address is located 48 bytes inside of\n 256-byte region [ffff8881dc7ae000, ffff8881dc7ae100)\nThe buggy address belongs to the page:\npage:ffffea000771eb80 count:1 mapcount:0 mapping:ffff8881f6c02e00 index:0x0\nflags: 0x2fffc0000000200(slab)\nraw: 02fffc0000000200 ffffea0007d14800 0000000400000002 ffff8881f6c02e00\nraw: 0000000000000000 00000000800c000c 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8881dc7adf00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff8881dc7adf80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n>ffff8881dc7ae000: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                     ^\n ffff8881dc7ae080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff8881dc7ae100: fc fc fc fc fc fc fc fc 00 00 00 00 00 00 00 00\n\nThere are already cleanup handlings in serial_ir_init error path,\nno need to call serial_ir_exit do it again in serial_ir_init_module,\notherwise will trigger a use-after-free issue.\n\nFixes: fa5dc29c1fcc (\"[media] lirc_serial: move out of staging and rename to serial_ir\")\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nSigned-off-by: Sean Young <sean@mess.org>\nSigned-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>",
        "before_after_code_files": [
          "drivers/media/rc/serial_ir.c||drivers/media/rc/serial_ir.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/media/rc/serial_ir.c||drivers/media/rc/serial_ir.c": [
          "File: drivers/media/rc/serial_ir.c -> drivers/media/rc/serial_ir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "774: static int __init serial_ir_init_module(void)",
          "775: {",
          "778:  switch (type) {",
          "779:  case IR_HOMEBREW:",
          "780:  case IR_IRDEO:",
          "",
          "[Removed Lines]",
          "776:  int result;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "802:  if (sense != -1)",
          "803:   sense = !!sense;",
          "811: }",
          "813: static void __exit serial_ir_exit_module(void)",
          "",
          "[Removed Lines]",
          "805:  result = serial_ir_init();",
          "806:  if (!result)",
          "807:   return 0;",
          "809:  serial_ir_exit();",
          "810:  return result;",
          "",
          "[Added Lines]",
          "803:  return serial_ir_init();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "347ab9480313737c0f1aaa08e8f2e1a791235535",
      "candidate_info": {
        "commit_hash": "347ab9480313737c0f1aaa08e8f2e1a791235535",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/347ab9480313737c0f1aaa08e8f2e1a791235535",
        "files": [
          "drivers/pwm/core.c",
          "drivers/pwm/sysfs.c",
          "include/linux/pwm.h"
        ],
        "message": "pwm: Fix deadlock warning when removing PWM device\n\nThis patch fixes deadlock warning if removing PWM device\nwhen CONFIG_PROVE_LOCKING is enabled.\n\nThis issue can be reproceduced by the following steps on\nthe R-Car H3 Salvator-X board if the backlight is disabled:\n\n # cd /sys/class/pwm/pwmchip0\n # echo 0 > export\n # ls\n device  export  npwm  power  pwm0  subsystem  uevent  unexport\n # cd device/driver\n # ls\n bind  e6e31000.pwm  uevent  unbind\n # echo e6e31000.pwm > unbind\n\n[   87.659974] ======================================================\n[   87.666149] WARNING: possible circular locking dependency detected\n[   87.672327] 5.0.0 #7 Not tainted\n[   87.675549] ------------------------------------------------------\n[   87.681723] bash/2986 is trying to acquire lock:\n[   87.686337] 000000005ea0e178 (kn->count#58){++++}, at: kernfs_remove_by_name_ns+0x50/0xa0\n[   87.694528]\n[   87.694528] but task is already holding lock:\n[   87.700353] 000000006313b17c (pwm_lock){+.+.}, at: pwmchip_remove+0x28/0x13c\n[   87.707405]\n[   87.707405] which lock already depends on the new lock.\n[   87.707405]\n[   87.715574]\n[   87.715574] the existing dependency chain (in reverse order) is:\n[   87.723048]\n[   87.723048] -> #1 (pwm_lock){+.+.}:\n[   87.728017]        __mutex_lock+0x70/0x7e4\n[   87.732108]        mutex_lock_nested+0x1c/0x24\n[   87.736547]        pwm_request_from_chip.part.6+0x34/0x74\n[   87.741940]        pwm_request_from_chip+0x20/0x40\n[   87.746725]        export_store+0x6c/0x1f4\n[   87.750820]        dev_attr_store+0x18/0x28\n[   87.754998]        sysfs_kf_write+0x54/0x64\n[   87.759175]        kernfs_fop_write+0xe4/0x1e8\n[   87.763615]        __vfs_write+0x40/0x184\n[   87.767619]        vfs_write+0xa8/0x19c\n[   87.771448]        ksys_write+0x58/0xbc\n[   87.775278]        __arm64_sys_write+0x18/0x20\n[   87.779721]        el0_svc_common+0xd0/0x124\n[   87.783986]        el0_svc_compat_handler+0x1c/0x24\n[   87.788858]        el0_svc_compat+0x8/0x18\n[   87.792947]\n[   87.792947] -> #0 (kn->count#58){++++}:\n[   87.798260]        lock_acquire+0xc4/0x22c\n[   87.802353]        __kernfs_remove+0x258/0x2c4\n[   87.806790]        kernfs_remove_by_name_ns+0x50/0xa0\n[   87.811836]        remove_files.isra.1+0x38/0x78\n[   87.816447]        sysfs_remove_group+0x48/0x98\n[   87.820971]        sysfs_remove_groups+0x34/0x4c\n[   87.825583]        device_remove_attrs+0x6c/0x7c\n[   87.830197]        device_del+0x11c/0x33c\n[   87.834201]        device_unregister+0x14/0x2c\n[   87.838638]        pwmchip_sysfs_unexport+0x40/0x4c\n[   87.843509]        pwmchip_remove+0xf4/0x13c\n[   87.847773]        rcar_pwm_remove+0x28/0x34\n[   87.852039]        platform_drv_remove+0x24/0x64\n[   87.856651]        device_release_driver_internal+0x18c/0x21c\n[   87.862391]        device_release_driver+0x14/0x1c\n[   87.867175]        unbind_store+0xe0/0x124\n[   87.871265]        drv_attr_store+0x20/0x30\n[   87.875442]        sysfs_kf_write+0x54/0x64\n[   87.879618]        kernfs_fop_write+0xe4/0x1e8\n[   87.884055]        __vfs_write+0x40/0x184\n[   87.888057]        vfs_write+0xa8/0x19c\n[   87.891887]        ksys_write+0x58/0xbc\n[   87.895716]        __arm64_sys_write+0x18/0x20\n[   87.900154]        el0_svc_common+0xd0/0x124\n[   87.904417]        el0_svc_compat_handler+0x1c/0x24\n[   87.909289]        el0_svc_compat+0x8/0x18\n[   87.913378]\n[   87.913378] other info that might help us debug this:\n[   87.913378]\n[   87.921374]  Possible unsafe locking scenario:\n[   87.921374]\n[   87.927286]        CPU0                    CPU1\n[   87.931808]        ----                    ----\n[   87.936331]   lock(pwm_lock);\n[   87.939293]                                lock(kn->count#58);\n[   87.945120]                                lock(pwm_lock);\n[   87.950599]   lock(kn->count#58);\n[   87.953908]\n[   87.953908]  *** DEADLOCK ***\n[   87.953908]\n[   87.959821] 4 locks held by bash/2986:\n[   87.963563]  #0: 00000000ace7bc30 (sb_writers#6){.+.+}, at: vfs_write+0x188/0x19c\n[   87.971044]  #1: 00000000287991b2 (&of->mutex){+.+.}, at: kernfs_fop_write+0xb4/0x1e8\n[   87.978872]  #2: 00000000f739d016 (&dev->mutex){....}, at: device_release_driver_internal+0x40/0x21c\n[   87.988001]  #3: 000000006313b17c (pwm_lock){+.+.}, at: pwmchip_remove+0x28/0x13c\n[   87.995481]\n[   87.995481] stack backtrace:\n[   87.999836] CPU: 0 PID: 2986 Comm: bash Not tainted 5.0.0 #7\n[   88.005489] Hardware name: Renesas Salvator-X board based on r8a7795 ES1.x (DT)\n[   88.012791] Call trace:\n[   88.015235]  dump_backtrace+0x0/0x190\n[   88.018891]  show_stack+0x14/0x1c\n[   88.022204]  dump_stack+0xb0/0xec\n[   88.025514]  print_circular_bug.isra.32+0x1d0/0x2e0\n[   88.030385]  __lock_acquire+0x1318/0x1864\n[   88.034388]  lock_acquire+0xc4/0x22c\n[   88.037958]  __kernfs_remove+0x258/0x2c4\n[   88.041874]  kernfs_remove_by_name_ns+0x50/0xa0\n[   88.046398]  remove_files.isra.1+0x38/0x78\n[   88.050487]  sysfs_remove_group+0x48/0x98\n[   88.054490]  sysfs_remove_groups+0x34/0x4c\n[   88.058580]  device_remove_attrs+0x6c/0x7c\n[   88.062671]  device_del+0x11c/0x33c\n[   88.066154]  device_unregister+0x14/0x2c\n[   88.070070]  pwmchip_sysfs_unexport+0x40/0x4c\n[   88.074421]  pwmchip_remove+0xf4/0x13c\n[   88.078163]  rcar_pwm_remove+0x28/0x34\n[   88.081906]  platform_drv_remove+0x24/0x64\n[   88.085996]  device_release_driver_internal+0x18c/0x21c\n[   88.091215]  device_release_driver+0x14/0x1c\n[   88.095478]  unbind_store+0xe0/0x124\n[   88.099048]  drv_attr_store+0x20/0x30\n[   88.102704]  sysfs_kf_write+0x54/0x64\n[   88.106359]  kernfs_fop_write+0xe4/0x1e8\n[   88.110275]  __vfs_write+0x40/0x184\n[   88.113757]  vfs_write+0xa8/0x19c\n[   88.117065]  ksys_write+0x58/0xbc\n[   88.120374]  __arm64_sys_write+0x18/0x20\n[   88.124291]  el0_svc_common+0xd0/0x124\n[   88.128034]  el0_svc_compat_handler+0x1c/0x24\n[   88.132384]  el0_svc_compat+0x8/0x18\n\nThe sysfs unexport in pwmchip_remove() is completely asymmetric\nto what we do in pwmchip_add_with_polarity() and commit 0733424c9ba9\n(\"pwm: Unexport children before chip removal\") is a strong indication\nthat this was wrong to begin with. We should just move\npwmchip_sysfs_unexport() where it belongs, which is right after\npwmchip_sysfs_unexport_children(). In that case, we do not need\nseparate functions anymore either.\n\nWe also really want to remove sysfs irrespective of whether or not\nthe chip will be removed as a result of pwmchip_remove(). We can only\nassume that the driver will be gone after that, so we shouldn't leave\nany dangling sysfs files around.\n\nThis warning disappears if we move pwmchip_sysfs_unexport() to\nthe top of pwmchip_remove(), pwmchip_sysfs_unexport_children().\nThat way it is also outside of the pwm_lock section, which indeed\ndoesn't seem to be needed.\n\nMoving the pwmchip_sysfs_export() call outside of that section also\nseems fine and it'd be perfectly symmetric with pwmchip_remove() again.\n\nSo, this patch fixes them.\n\nSigned-off-by: Phong Hoang <phong.hoang.wz@renesas.com>\n[shimoda: revise the commit log and code]\nFixes: 76abbdde2d95 (\"pwm: Add sysfs interface\")\nFixes: 0733424c9ba9 (\"pwm: Unexport children before chip removal\")\nSigned-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>\nTested-by: Hoan Nguyen An <na-hoan@jinso.co.jp>\nReviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>\nReviewed-by: Simon Horman <horms+renesas@verge.net.au>\nReviewed-by: Uwe Kleine-K\u00f6nig <u.kleine-koenig@pengutronix.de>\nSigned-off-by: Thierry Reding <thierry.reding@gmail.com>",
        "before_after_code_files": [
          "drivers/pwm/core.c||drivers/pwm/core.c",
          "drivers/pwm/sysfs.c||drivers/pwm/sysfs.c",
          "include/linux/pwm.h||include/linux/pwm.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/pwm/core.c||drivers/pwm/core.c": [
          "File: drivers/pwm/core.c -> drivers/pwm/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "311:  if (IS_ENABLED(CONFIG_OF))",
          "312:   of_pwmchip_add(chip);",
          "316: out:",
          "317:  mutex_unlock(&pwm_lock);",
          "318:  return ret;",
          "319: }",
          "320: EXPORT_SYMBOL_GPL(pwmchip_add_with_polarity);",
          "",
          "[Removed Lines]",
          "314:  pwmchip_sysfs_export(chip);",
          "",
          "[Added Lines]",
          "317:  if (!ret)",
          "318:   pwmchip_sysfs_export(chip);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "348:  unsigned int i;",
          "349:  int ret = 0;",
          "353:  mutex_lock(&pwm_lock);",
          "",
          "[Removed Lines]",
          "351:  pwmchip_sysfs_unexport_children(chip);",
          "",
          "[Added Lines]",
          "353:  pwmchip_sysfs_unexport(chip);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "369:  free_pwms(chip);",
          "373: out:",
          "374:  mutex_unlock(&pwm_lock);",
          "375:  return ret;",
          "",
          "[Removed Lines]",
          "371:  pwmchip_sysfs_unexport(chip);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/pwm/sysfs.c||drivers/pwm/sysfs.c": [
          "File: drivers/pwm/sysfs.c -> drivers/pwm/sysfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "409: }",
          "411: void pwmchip_sysfs_unexport(struct pwm_chip *chip)",
          "425: {",
          "426:  struct device *parent;",
          "427:  unsigned int i;",
          "",
          "[Removed Lines]",
          "412: {",
          "413:  struct device *parent;",
          "415:  parent = class_find_device(&pwm_class, NULL, chip,",
          "416:        pwmchip_sysfs_match);",
          "417:  if (parent) {",
          "419:   put_device(parent);",
          "420:   device_unregister(parent);",
          "421:  }",
          "422: }",
          "424: void pwmchip_sysfs_unexport_children(struct pwm_chip *chip)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:  }",
          "441:  put_device(parent);",
          "442: }",
          "444: static int __init pwm_sysfs_init(void)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "429:  device_unregister(parent);",
          "",
          "---------------"
        ],
        "include/linux/pwm.h||include/linux/pwm.h": [
          "File: include/linux/pwm.h -> include/linux/pwm.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "596: #ifdef CONFIG_PWM_SYSFS",
          "597: void pwmchip_sysfs_export(struct pwm_chip *chip);",
          "598: void pwmchip_sysfs_unexport(struct pwm_chip *chip);",
          "600: #else",
          "601: static inline void pwmchip_sysfs_export(struct pwm_chip *chip)",
          "602: {",
          "",
          "[Removed Lines]",
          "599: void pwmchip_sysfs_unexport_children(struct pwm_chip *chip);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "605: static inline void pwmchip_sysfs_unexport(struct pwm_chip *chip)",
          "606: {",
          "607: }",
          "",
          "[Removed Lines]",
          "609: static inline void pwmchip_sysfs_unexport_children(struct pwm_chip *chip)",
          "610: {",
          "611: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1e5b0cf8672e622257df024074e6e09bfbcb7750",
      "candidate_info": {
        "commit_hash": "1e5b0cf8672e622257df024074e6e09bfbcb7750",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1e5b0cf8672e622257df024074e6e09bfbcb7750",
        "files": [
          "tools/perf/util/ordered-events.c"
        ],
        "message": "perf top: Fix global-buffer-overflow issue\n\nThe array str[] should have six elements.\n\n  =================================================================\n  ==4322==ERROR: AddressSanitizer: global-buffer-overflow on address 0x56463844e300 at pc 0x564637e7ad0d bp 0x7f30c8c89d10 sp 0x7f30c8c89d00\n  READ of size 8 at 0x56463844e300 thread T9\n      #0 0x564637e7ad0c in __ordered_events__flush util/ordered-events.c:316\n      #1 0x564637e7b0e4 in ordered_events__flush util/ordered-events.c:338\n      #2 0x564637c6a57d in process_thread /home/changbin/work/linux/tools/perf/builtin-top.c:1073\n      #3 0x7f30d173a163 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8163)\n      #4 0x7f30cfffbdee in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x11adee)\n\n  0x56463844e300 is located 32 bytes to the left of global variable 'flags' defined in 'util/trace-event-parse.c:229:26' (0x56463844e320) of size 192\n  0x56463844e300 is located 0 bytes to the right of global variable 'str' defined in 'util/ordered-events.c:268:28' (0x56463844e2e0) of size 32\n  SUMMARY: AddressSanitizer: global-buffer-overflow util/ordered-events.c:316 in __ordered_events__flush\n  Shadow bytes around the buggy address:\n    0x0ac947081c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    0x0ac947081c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    0x0ac947081c30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    0x0ac947081c40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    0x0ac947081c50: 00 00 00 00 00 00 00 00 f9 f9 f9 f9 00 00 00 00\n  =>0x0ac947081c60:[f9]f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00\n    0x0ac947081c70: 00 00 00 00 00 00 00 00 00 00 00 00 f9 f9 f9 f9\n    0x0ac947081c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    0x0ac947081c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    0x0ac947081ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    0x0ac947081cb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  Shadow byte legend (one shadow byte represents 8 application bytes):\n    Addressable:           00\n    Partially addressable: 01 02 03 04 05 06 07\n    Heap left redzone:       fa\n    Freed heap region:       fd\n    Stack left redzone:      f1\n    Stack mid redzone:       f2\n    Stack right redzone:     f3\n    Stack after return:      f5\n    Stack use after scope:   f8\n    Global redzone:          f9\n    Global init order:       f6\n    Poisoned by user:        f7\n    Container overflow:      fc\n    Array cookie:            ac\n    Intra object redzone:    bb\n    ASan internal:           fe\n    Left alloca redzone:     ca\n    Right alloca redzone:    cb\n  Thread T9 created by T0 here:\n      #0 0x7f30d179de5f in __interceptor_pthread_create (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x4ae5f)\n      #1 0x564637c6b954 in __cmd_top /home/changbin/work/linux/tools/perf/builtin-top.c:1253\n      #2 0x564637c7173c in cmd_top /home/changbin/work/linux/tools/perf/builtin-top.c:1642\n      #3 0x564637d85038 in run_builtin /home/changbin/work/linux/tools/perf/perf.c:302\n      #4 0x564637d85577 in handle_internal_command /home/changbin/work/linux/tools/perf/perf.c:354\n      #5 0x564637d8597b in run_argv /home/changbin/work/linux/tools/perf/perf.c:398\n      #6 0x564637d860e9 in main /home/changbin/work/linux/tools/perf/perf.c:520\n      #7 0x7f30cff0509a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n\nSigned-off-by: Changbin Du <changbin.du@gmail.com>\nReviewed-by: Jiri Olsa <jolsa@kernel.org>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Steven Rostedt (VMware) <rostedt@goodmis.org>\nCc: Jiri Olsa <jolsa@kernel.org>\nFixes: 16c66bc167cc (\"perf top: Add processing thread\")\nFixes: 68ca5d07de20 (\"perf ordered_events: Add ordered_events__flush_time interface\")\nLink: http://lkml.kernel.org/r/20190316080556.3075-13-changbin.du@gmail.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/util/ordered-events.c||tools/perf/util/ordered-events.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/util/ordered-events.c||tools/perf/util/ordered-events.c": [
          "File: tools/perf/util/ordered-events.c -> tools/perf/util/ordered-events.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "270:   \"FINAL\",",
          "271:   \"ROUND\",",
          "272:   \"HALF \",",
          "273:  };",
          "274:  int err;",
          "275:  bool show_progress = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "273:   \"TOP  \",",
          "274:   \"TIME \",",
          "",
          "---------------"
        ]
      }
    }
  ]
}