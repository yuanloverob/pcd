{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c26c5751df6c2711d9da1a903dca8fa4cde6a7dc",
      "candidate_info": {
        "commit_hash": "c26c5751df6c2711d9da1a903dca8fa4cde6a7dc",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/c26c5751df6c2711d9da1a903dca8fa4cde6a7dc",
        "files": [
          "include/capstone/systemz.h"
        ],
        "message": "Fixed systemz header to comply with bindings",
        "before_after_code_files": [
          "include/capstone/systemz.h||include/capstone/systemz.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/systemz.h||include/capstone/systemz.h": [
          "File: include/capstone/systemz.h -> include/capstone/systemz.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "92: typedef struct sysz_op_mem {",
          "95:  uint64_t length; // BDLAddr operand",
          "96:  int64_t disp; // displacement/offset value",
          "97: } sysz_op_mem;",
          "",
          "[Removed Lines]",
          "93:  sysz_reg base;  // base register",
          "94:  sysz_reg index;  // index register",
          "",
          "[Added Lines]",
          "93:  uint8_t base;  // base register, can be safely interpreted as",
          "96:  uint8_t index;  // index register, same conditions apply here",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9ddf05bdb623896c21a2b4632f934f44aa65cfd",
      "candidate_info": {
        "commit_hash": "f9ddf05bdb623896c21a2b4632f934f44aa65cfd",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/f9ddf05bdb623896c21a2b4632f934f44aa65cfd",
        "files": [
          "bindings/python/capstone/__init__.py"
        ],
        "message": "Add OSX 10.11 dylib load fix El Capitan does not guaranteed that (DY)LD_LIBRARY_PATH will exist, so force one last check for the default install directory that the install script uses.",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Capstone Python bindings, by Nguyen Anh Quynnh <aquynh@gmail.com>",
          "2: import sys",
          "3: _python2 = sys.version_info[0] < 3",
          "4: if _python2:",
          "5:     range = xrange",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: from platform import system",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "226:             break",
          "227:         except OSError:",
          "228:             pass",
          "233: # low-level structure for C code",
          "",
          "[Removed Lines]",
          "229:     if _found == False:",
          "230:         raise ImportError(\"ERROR: fail to load the dynamic library.\")",
          "",
          "[Added Lines]",
          "231: # Attempt Darwin specific load (10.11 specific),",
          "232: # since LD_LIBRARY_PATH is not guaranteed to exist",
          "233: if system() == 'Darwin':",
          "234:     _lib_path = '/usr/local/lib/'",
          "235:     for _lib in _all_libs:",
          "236:         try:",
          "237:             _lib_file = join(_lib_path, _lib)",
          "238:             # print \"Trying to load:\", _lib_file",
          "239:             _cs = ctypes.cdll.LoadLibrary(_lib_file)",
          "240:             _found = True",
          "241:             break",
          "242:         except OSError:",
          "243:             pass",
          "245: if _found == False:",
          "246:     raise ImportError(\"ERROR: fail to load the dynamic library.\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d09f56545c74b875e557cfc60cfc7076e0dc4962",
      "candidate_info": {
        "commit_hash": "d09f56545c74b875e557cfc60cfc7076e0dc4962",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d09f56545c74b875e557cfc60cfc7076e0dc4962",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "fix merged conflicts",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c"
        ]
      }
    },
    {
      "candidate_hash": "586e439f75b5f53991d803d3e67b9d3fed9c3ec0",
      "candidate_info": {
        "commit_hash": "586e439f75b5f53991d803d3e67b9d3fed9c3ec0",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/586e439f75b5f53991d803d3e67b9d3fed9c3ec0",
        "files": [
          "arch/AArch64/AArch64InstPrinter.c",
          "arch/ARM/ARMDisassembler.c",
          "arch/ARM/ARMInstPrinter.c",
          "arch/M68K/M68KDisassembler.c",
          "arch/PowerPC/PPCInstPrinter.c"
        ],
        "message": "fix some compilation warnings reported by MSVC",
        "before_after_code_files": [
          "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c",
          "arch/ARM/ARMDisassembler.c||arch/ARM/ARMDisassembler.c",
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c",
          "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c",
          "arch/PowerPC/PPCInstPrinter.c||arch/PowerPC/PPCInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c": [
          "File: arch/AArch64/AArch64InstPrinter.c -> arch/AArch64/AArch64InstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1644:  } else {",
          "1645:   printInt32Bang(O, Val);",
          "1646: #ifndef CAPSTONE_DIET",
          "1648:   access = get_op_access(MI->csh, MCInst_getOpcode(MI), MI->ac_idx);",
          "1649:   MI->flat_insn->detail->arm64.operands[MI->flat_insn->detail->arm64.op_count].access = access;",
          "1650:   MI->ac_idx++;",
          "",
          "[Removed Lines]",
          "1647:   uint8_t access;",
          "",
          "[Added Lines]",
          "1647:   unsigned char access;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1662:  SStream_concat(O, \"#%#016llx\", Val);",
          "1663:  if (MI->csh->detail) {",
          "1664: #ifndef CAPSTONE_DIET",
          "1666:   access = get_op_access(MI->csh, MCInst_getOpcode(MI), MI->ac_idx);",
          "1667:   MI->flat_insn->detail->arm64.operands[MI->flat_insn->detail->arm64.op_count].access = access;",
          "1668:   MI->ac_idx++;",
          "",
          "[Removed Lines]",
          "1665:   uint8_t access;",
          "",
          "[Added Lines]",
          "1665:   unsigned char access;",
          "",
          "---------------"
        ],
        "arch/ARM/ARMDisassembler.c||arch/ARM/ARMDisassembler.c": [
          "File: arch/ARM/ARMDisassembler.c -> arch/ARM/ARMDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3353:  unsigned Rt = fieldFromInstruction_4(Insn, 12, 4);",
          "3354:  unsigned Rn = fieldFromInstruction_4(Insn, 16, 4);",
          "3355:  uint64_t featureBits = ARM_getFeatureBits(Inst->csh->mode);",
          "3359:  if (Rn == 15) {",
          "3360:   switch (MCInst_getOpcode(Inst)) {",
          "",
          "[Removed Lines]",
          "3356:  bool hasMP = featureBits & ARM_FeatureMP;",
          "3357:  bool hasV7Ops = featureBits & ARM_HasV7Ops;",
          "",
          "[Added Lines]",
          "3356:  bool hasMP = ((featureBits & ARM_FeatureMP) != 0);",
          "3357:  bool hasV7Ops = ((featureBits & ARM_HasV7Ops) != 0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3437:  unsigned add = fieldFromInstruction_4(Insn, 9, 1);",
          "3439:  uint64_t featureBits = ARM_getFeatureBits(Inst->csh->mode);",
          "3443:  imm |= (U << 8);",
          "3444:  imm |= (Rn << 9);",
          "",
          "[Removed Lines]",
          "3440:  bool hasMP = featureBits & ARM_FeatureMP;",
          "3441:  bool hasV7Ops = featureBits & ARM_HasV7Ops;",
          "",
          "[Added Lines]",
          "3440:  bool hasMP = ((featureBits & ARM_FeatureMP) != 0);",
          "3441:  bool hasV7Ops = ((featureBits & ARM_HasV7Ops) != 0);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3517:  unsigned Rt = fieldFromInstruction_4(Insn, 12, 4);",
          "3518:  unsigned imm = fieldFromInstruction_4(Insn, 0, 12);",
          "3519:  uint64_t featureBits = ARM_getFeatureBits(Inst->csh->mode);",
          "3523:  imm |= (Rn << 13);",
          "",
          "[Removed Lines]",
          "3520:  bool hasMP = featureBits & ARM_FeatureMP;",
          "3521:  bool hasV7Ops = featureBits & ARM_HasV7Ops;",
          "",
          "[Added Lines]",
          "3520:  bool hasMP = ((featureBits & ARM_FeatureMP) != 0);",
          "3521:  bool hasV7Ops = ((featureBits & ARM_HasV7Ops) != 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3636:  unsigned U = fieldFromInstruction_4(Insn, 23, 1);",
          "3637:  int imm = fieldFromInstruction_4(Insn, 0, 12);",
          "3638:  uint64_t featureBits = ARM_getFeatureBits(Inst->csh->mode);",
          "3641:  if (Rt == 15) {",
          "3642:   switch (MCInst_getOpcode(Inst)) {",
          "",
          "[Removed Lines]",
          "3639:  bool hasV7Ops = featureBits & ARM_HasV7Ops;",
          "",
          "[Added Lines]",
          "3639:  bool hasV7Ops = ((featureBits & ARM_HasV7Ops) != 0);",
          "",
          "---------------"
        ],
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1722: static void printBankedRegOperand(MCInst *MI, unsigned OpNum, SStream *O)",
          "1723: {",
          "1725:  uint32_t R = (Banked & 0x20) >> 5;",
          "1726:  uint32_t SysM = Banked & 0x1f;",
          "1727:  char *RegNames[] = {",
          "",
          "[Removed Lines]",
          "1724:  uint32_t Banked = MCOperand_getImm(MCInst_getOperand(MI, OpNum));",
          "",
          "[Added Lines]",
          "1724:  uint32_t Banked = (uint32_t)MCOperand_getImm(MCInst_getOperand(MI, OpNum));",
          "",
          "---------------"
        ],
        "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c": [
          "File: arch/M68K/M68KDisassembler.c -> arch/M68K/M68KDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "298: static unsigned int peek_imm_8(const m68k_info *info)  { return (m68k_read_safe_16((info), (info)->pc)&0xff); }",
          "299: static unsigned int peek_imm_16(const m68k_info *info) { return m68k_read_safe_16((info), (info)->pc); }",
          "300: static unsigned int peek_imm_32(const m68k_info *info) { return m68k_read_safe_32((info), (info)->pc); }",
          "303: static unsigned int read_imm_8(m68k_info *info)  { const unsigned int value = peek_imm_8(info);  (info)->pc+=2; return value; }",
          "304: static unsigned int read_imm_16(m68k_info *info) { const unsigned int value = peek_imm_16(info); (info)->pc+=2; return value; }",
          "",
          "[Removed Lines]",
          "301: static unsigned int peek_imm_64(const m68k_info *info) { return m68k_read_safe_64((info), (info)->pc); }",
          "",
          "[Added Lines]",
          "301: static unsigned int peek_imm_64(const m68k_info *info) { return (unsigned int)m68k_read_safe_64((info), (info)->pc); }",
          "",
          "---------------"
        ],
        "arch/PowerPC/PPCInstPrinter.c||arch/PowerPC/PPCInstPrinter.c": [
          "File: arch/PowerPC/PPCInstPrinter.c -> arch/PowerPC/PPCInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "729:   if (MI->csh->detail) {",
          "730:    if (MI->csh->doing_mem) {",
          "732:    } else {",
          "733:     MI->flat_insn->detail->ppc.operands[MI->flat_insn->detail->ppc.op_count].type = PPC_OP_IMM;",
          "734:     MI->flat_insn->detail->ppc.operands[MI->flat_insn->detail->ppc.op_count].imm = imm;",
          "",
          "[Removed Lines]",
          "731:     MI->flat_insn->detail->ppc.operands[MI->flat_insn->detail->ppc.op_count].mem.disp = imm;",
          "",
          "[Added Lines]",
          "731:     MI->flat_insn->detail->ppc.operands[MI->flat_insn->detail->ppc.op_count].mem.disp = (int32_t)imm;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "85c1b4b687512c8ebce58b0875c83d8b85ca0a2c",
      "candidate_info": {
        "commit_hash": "85c1b4b687512c8ebce58b0875c83d8b85ca0a2c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/85c1b4b687512c8ebce58b0875c83d8b85ca0a2c",
        "files": [
          "bindings/python/setup.py",
          "pkgconfig.mk"
        ],
        "message": "Python: Automatically conform to PEP440 for version numbers. ported from Unicorn Python binding",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py",
          "pkgconfig.mk||pkgconfig.mk"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: from setuptools.command.bdist_egg import bdist_egg",
          "16: SYSTEM = sys.platform",
          "19: # adapted from commit e504b81 of Nguyen Tan Cong",
          "20: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "",
          "[Removed Lines]",
          "17: VERSION = '3.0.5'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: SRC_DIR = os.path.join(ROOT_DIR, 'src')",
          "28: BUILD_DIR = SRC_DIR if os.path.exists(SRC_DIR) else os.path.join(ROOT_DIR, '../..')",
          "30: if SYSTEM == 'darwin':",
          "31:     LIBRARY_FILE = \"libcapstone.dylib\"",
          "32:     STATIC_LIBRARY_FILE = 'libcapstone.a'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: # Parse version from pkgconfig.mk",
          "30: VERSION_DATA = {}",
          "31: with open(os.path.join(BUILD_DIR, 'pkgconfig.mk')) as fp:",
          "32:     lines = fp.readlines()",
          "33:     for line in lines:",
          "34:         line = line.strip()",
          "35:         if len(line) == 0:",
          "36:             continue",
          "37:         if line.startswith('#'):",
          "38:             continue",
          "39:         if '=' not in line:",
          "40:             continue",
          "42:         k, v = line.split('=', 1)",
          "43:         k = k.strip()",
          "44:         v = v.strip()",
          "45:         if len(k) == 0 or len(v) == 0:",
          "46:             continue",
          "47:         VERSION_DATA[k] = v",
          "49: if 'PKG_MAJOR' not in VERSION_DATA or \\",
          "50:         'PKG_MINOR' not in VERSION_DATA or \\",
          "51:         'PKG_EXTRA' not in VERSION_DATA:",
          "52:     raise Exception(\"Malformed pkgconfig.mk\")",
          "54: if 'PKG_TAG' in VERSION_DATA:",
          "55:     VERSION = '{PKG_MAJOR}.{PKG_MINOR}.{PKG_EXTRA}.{PKG_TAG}'.format(**VERSION_DATA)",
          "56: else:",
          "57:     VERSION = '{PKG_MAJOR}.{PKG_MINOR}.{PKG_EXTRA}'.format(**VERSION_DATA)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"RELEASE_NOTES\")))",
          "67:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"make.sh\")))",
          "68:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"CMakeLists.txt\")))",
          "70:     for filename in src:",
          "71:         outpath = os.path.join(SRC_DIR, os.path.basename(filename))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"pkgconfig.mk\")))",
          "",
          "---------------"
        ],
        "pkgconfig.mk||pkgconfig.mk": [
          "File: pkgconfig.mk -> pkgconfig.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: # version bugfix level. Example: PKG_EXTRA = 1",
          "9: PKG_EXTRA = 5",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: # version tag. Examples: rc1, b2, post1",
          "12: PKG_TAG = rc2",
          "",
          "---------------"
        ]
      }
    }
  ]
}