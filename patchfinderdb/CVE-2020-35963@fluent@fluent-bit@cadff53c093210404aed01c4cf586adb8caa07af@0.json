{
  "cve_id": "CVE-2020-35963",
  "cve_desc": "flb_gzip_compress in flb_gzip.c in Fluent Bit before 1.6.4 has an out-of-bounds write because it does not use the correct calculation of the maximum gzip data-size expansion.",
  "repo": "fluent/fluent-bit",
  "patch_hash": "cadff53c093210404aed01c4cf586adb8caa07af",
  "patch_info": {
    "commit_hash": "cadff53c093210404aed01c4cf586adb8caa07af",
    "repo": "fluent/fluent-bit",
    "commit_url": "https://github.com/fluent/fluent-bit/commit/cadff53c093210404aed01c4cf586adb8caa07af",
    "files": [
      "src/flb_gzip.c"
    ],
    "message": "gzip: fix compression size calculation (oss-fuzz 27261)\n\nSigned-off-by: davkor <david@adalogics.com>",
    "before_after_code_files": [
      "src/flb_gzip.c||src/flb_gzip.c"
    ]
  },
  "patch_diff": {
    "src/flb_gzip.c||src/flb_gzip.c": [
      "File: src/flb_gzip.c -> src/flb_gzip.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "77:     z_stream strm;",
      "78:     mz_ulong crc;",
      "81:     out_buf = flb_malloc(out_size);",
      "82:     if (!out_buf) {",
      "83:         flb_errno();",
      "84:         flb_error(\"[gzip] could not allocate outgoing buffer\");",
      "",
      "[Removed Lines]",
      "80:     out_size = in_len + 32;",
      "",
      "[Added Lines]",
      "87:     int max_input_expansion = ((int)(in_len / 32000) + 1) * 5;",
      "96:     out_size = 10 + 8 + max_input_expansion + in_len;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "163af0b9c0513f31cc4cbfe8aeee26d22513163c",
      "candidate_info": {
        "commit_hash": "163af0b9c0513f31cc4cbfe8aeee26d22513163c",
        "repo": "fluent/fluent-bit",
        "commit_url": "https://github.com/fluent/fluent-bit/commit/163af0b9c0513f31cc4cbfe8aeee26d22513163c",
        "files": [
          "src/flb_strptime.c"
        ],
        "message": "strptime: fix bounds check (oss-fuzz 27241)\n\nSigned-off-by: davkor <david@adalogics.com>",
        "before_after_code_files": [
          "src/flb_strptime.c||src/flb_strptime.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/fluent/fluent-bit/pull/2751"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/flb_strptime.c||src/flb_strptime.c": [
          "File: src/flb_strptime.c -> src/flb_strptime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "168:    continue;",
          "169:   }",
          "171:   if ((c = *fmt++) != '%')",
          "172:    goto literal;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:         if (*bp == '\\0')",
          "176:            return (NULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:   if (c != *bp++)",
          "179:    return (NULL);",
          "181:   break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:         if (*bp == '\\0')",
          "193:            return (NULL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "abe7301b134b0114241ce8b0b6ebbd5d18346fc2",
      "candidate_info": {
        "commit_hash": "abe7301b134b0114241ce8b0b6ebbd5d18346fc2",
        "repo": "fluent/fluent-bit",
        "commit_url": "https://github.com/fluent/fluent-bit/commit/abe7301b134b0114241ce8b0b6ebbd5d18346fc2",
        "files": [
          "src/flb_parser.c"
        ],
        "message": "parser: fix to ensure string size is enough for comparison (oss-fuzz testcase 5200866812100608)\n\nSigned-off-by: davkor <david@adalogics.com>",
        "before_after_code_files": [
          "src/flb_parser.c||src/flb_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/fluent/fluent-bit/pull/2751"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/flb_parser.c||src/flb_parser.c": [
          "File: src/flb_parser.c -> src/flb_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "866:                 }",
          "867:                 break;",
          "868:             case FLB_PARSER_TYPE_BOOL:",
          "870:                     msgpack_pack_true(pck);",
          "871:                 }",
          "873:                     msgpack_pack_false(pck);",
          "874:                 }",
          "875:                 else {",
          "",
          "[Removed Lines]",
          "869:                 if (!strncasecmp(val, \"true\", 4)) {",
          "872:                 else if(!strncasecmp(val, \"false\", 5)){",
          "",
          "[Added Lines]",
          "869:                 if (val_len >= 4 && !strncasecmp(val, \"true\", 4)) {",
          "872:                 else if(val_len >= 5 && !strncasecmp(val, \"false\", 5)){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7c265e23bd2c7592ac9987ea92daa426ce48263a",
      "candidate_info": {
        "commit_hash": "7c265e23bd2c7592ac9987ea92daa426ce48263a",
        "repo": "fluent/fluent-bit",
        "commit_url": "https://github.com/fluent/fluent-bit/commit/7c265e23bd2c7592ac9987ea92daa426ce48263a",
        "files": [
          "src/flb_config_map.c"
        ],
        "message": "config_map: fix cases where kv->val is NULL (oss-fuzz issue 27023)\n\nSigned-off-by: davkor <david@adalogics.com>",
        "before_after_code_files": [
          "src/flb_config_map.c||src/flb_config_map.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/fluent/fluent-bit/pull/2751"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/flb_config_map.c||src/flb_config_map.c": [
          "File: src/flb_config_map.c -> src/flb_config_map.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "648:     mk_list_foreach(head, properties) {",
          "649:         kv = mk_list_entry(head, struct flb_kv, _head);",
          "651:         mk_list_foreach(m_head, map) {",
          "652:             m = mk_list_entry(m_head, struct flb_config_map, _head);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "650:         if (kv->val == NULL) {",
          "651:             continue;",
          "652:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df2af999105cd6c94ec8b533bcca498664b1aa16",
      "candidate_info": {
        "commit_hash": "df2af999105cd6c94ec8b533bcca498664b1aa16",
        "repo": "fluent/fluent-bit",
        "commit_url": "https://github.com/fluent/fluent-bit/commit/df2af999105cd6c94ec8b533bcca498664b1aa16",
        "files": [
          "src/flb_gzip.c"
        ],
        "message": "gzip: fix upper-bound decompression calculation. OSS-Fuzz 5072671825723392 (#3101)\n\nSigned-off-by: davkor <david@adalogics.com>",
        "before_after_code_files": [
          "src/flb_gzip.c||src/flb_gzip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/flb_gzip.c||src/flb_gzip.c"
          ],
          "candidate": [
            "src/flb_gzip.c||src/flb_gzip.c"
          ]
        }
      },
      "candidate_diff": {
        "src/flb_gzip.c||src/flb_gzip.c": [
          "File: src/flb_gzip.c -> src/flb_gzip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     z_stream strm;",
          "78:     mz_ulong crc;",
          "97:     out_buf = flb_malloc(out_size);",
          "99:     if (!out_buf) {",
          "",
          "[Removed Lines]",
          "87:     int max_input_expansion = ((int)(in_len / 32000) + 1) * 5;",
          "96:     out_size = 10 + 8 + max_input_expansion + in_len;",
          "",
          "[Added Lines]",
          "85:     out_size = compressBound(in_len);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fe2a7dc356bd652a5c2e1137726716e5d18967c8",
      "candidate_info": {
        "commit_hash": "fe2a7dc356bd652a5c2e1137726716e5d18967c8",
        "repo": "fluent/fluent-bit",
        "commit_url": "https://github.com/fluent/fluent-bit/commit/fe2a7dc356bd652a5c2e1137726716e5d18967c8",
        "files": [
          "src/flb_gzip.c"
        ],
        "message": "gzip: fix compression size calculation (oss-fuzz 27261)\n\nSigned-off-by: davkor <david@adalogics.com>",
        "before_after_code_files": [
          "src/flb_gzip.c||src/flb_gzip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/flb_gzip.c||src/flb_gzip.c"
          ],
          "candidate": [
            "src/flb_gzip.c||src/flb_gzip.c"
          ]
        }
      },
      "candidate_diff": {
        "src/flb_gzip.c||src/flb_gzip.c": [
          "File: src/flb_gzip.c -> src/flb_gzip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     z_stream strm;",
          "78:     mz_ulong crc;",
          "81:     out_buf = flb_malloc(out_size);",
          "82:     if (!out_buf) {",
          "83:         flb_errno();",
          "84:         flb_error(\"[gzip] could not allocate outgoing buffer\");",
          "",
          "[Removed Lines]",
          "80:     out_size = in_len + 32;",
          "",
          "[Added Lines]",
          "87:     int max_input_expansion = ((int)(in_len / 32000) + 1) * 5;",
          "96:     out_size = 10 + 8 + max_input_expansion + in_len;",
          "",
          "---------------"
        ]
      }
    }
  ]
}