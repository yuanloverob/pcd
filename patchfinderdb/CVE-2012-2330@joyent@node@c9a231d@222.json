{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8b79a31333dd9ae1fc745ac691f224beaf063ba0",
      "candidate_info": {
        "commit_hash": "8b79a31333dd9ae1fc745ac691f224beaf063ba0",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/8b79a31333dd9ae1fc745ac691f224beaf063ba0",
        "files": [
          "tools/installer.js"
        ],
        "message": "shebang should make file executable as well",
        "before_after_code_files": [
          "tools/installer.js||tools/installer.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/installer.js||tools/installer.js": [
          "File: tools/installer.js -> tools/installer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   if (content !== newContent) {",
          "67:     fs.writeFileSync(file, newContent, 'utf8');",
          "68:   }",
          "69: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:   var mode = parseInt('0777', 8) & (~process.umask());",
          "70:   fs.chmodSync(file, mode);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bc834c395b45c01681d6cf0668a6574e70d9342d",
      "candidate_info": {
        "commit_hash": "bc834c395b45c01681d6cf0668a6574e70d9342d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/bc834c395b45c01681d6cf0668a6574e70d9342d",
        "files": [
          "src/node_internals.h"
        ],
        "message": "Alias _snprintf to snprintf, fix Windows build.",
        "before_after_code_files": [
          "src/node_internals.h||src/node_internals.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_internals.h||src/node_internals.h": [
          "File: src/node_internals.h -> src/node_internals.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: namespace node {",
          "29: #ifndef offset_of",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: #ifdef _WIN32",
          "30: # define snprintf _snprintf",
          "31: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce485791db5507d160cbc204b8a58e770ac60a50",
      "candidate_info": {
        "commit_hash": "ce485791db5507d160cbc204b8a58e770ac60a50",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ce485791db5507d160cbc204b8a58e770ac60a50",
        "files": [
          "doc/api/readline.markdown",
          "lib/readline.js",
          "lib/repl.js"
        ],
        "message": "Readline proposal and bugfixes. Related: #2737 #2756\n\n- Removed extra newline from .question(); Users can input a\n  newline if it they require it.\n- Removed .close() due to it only emulating closing, causing a bug where\n  readline is left open to trigger events such as .on('line', ...').\n- Removed ._attemptClose()\n- .pause() now triggers event .on('pause', ...)\n- .resume() now triggers event .on('resume', ...)\n- CTRL-C (SIGINT) in readline will now default to .pause() if no SIGINT event\n  is present.\n- CTRL-D (delete right) will also default to .pause() if there is nothing to\n  delete (signaling the end of the file).\n- Added new event `SIGTSTP`\n- Added new event `SIGCONT`\n- Added `resume` to `write` to resume the stream if paused.\n- Docs updated.\n- Updated repl.js",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js",
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "128: Interface.prototype.prompt = function(preserveCursor) {",
          "129:   if (this.enabled) {",
          "130:     if (!preserveCursor) this.cursor = 0;",
          "131:     this._refreshLine();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138: Interface.prototype.question = function(query, cb) {",
          "141:     if (this._questionCallback) {",
          "143:       this.prompt();",
          "144:     } else {",
          "145:       this._oldPrompt = this._prompt;",
          "146:       this.setPrompt(query);",
          "147:       this._questionCallback = cb;",
          "149:       this.prompt();",
          "150:     }",
          "151:   }",
          "",
          "[Removed Lines]",
          "139:   if (cb) {",
          "140:     this.resume();",
          "142:       this.output.write('\\n');",
          "148:       this.output.write('\\n');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "183: Interface.prototype._refreshLine = function() {",
          "187:   this.output.cursorTo(0);",
          "",
          "[Removed Lines]",
          "184:   if (this._closed) return;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "198: };",
          "212: Interface.prototype.pause = function() {",
          "213:   if (this.enabled) {",
          "214:     tty.setRawMode(false);",
          "215:   }",
          "216: };",
          "219: Interface.prototype.resume = function() {",
          "220:   if (this.enabled) {",
          "221:     tty.setRawMode(true);",
          "222:   }",
          "223: };",
          "226: Interface.prototype.write = function(d, key) {",
          "228:   this.enabled ? this._ttyWrite(d, key) : this._normalWrite(d, key);",
          "229: };",
          "",
          "[Removed Lines]",
          "201: Interface.prototype.close = function(d) {",
          "202:   if (this._closing) return;",
          "203:   this._closing = true;",
          "204:   if (this.enabled) {",
          "205:     tty.setRawMode(false);",
          "206:   }",
          "207:   this.emit('close');",
          "208:   this._closed = true;",
          "209: };",
          "227:   if (this._closed) return;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "454: };",
          "468: Interface.prototype._ttyWrite = function(s, key) {",
          "469:   var next_word, next_non_word, previous_word, previous_non_word;",
          "",
          "[Removed Lines]",
          "457: Interface.prototype._attemptClose = function() {",
          "458:   if (this.listeners('attemptClose').length) {",
          "460:     this.emit('attemptClose');",
          "461:   } else {",
          "462:     this.close();",
          "463:   }",
          "464: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "489:         if (this.listeners('SIGINT').length) {",
          "490:           this.emit('SIGINT');",
          "491:         } else {",
          "494:         }",
          "495:         break;",
          "",
          "[Removed Lines]",
          "493:           this._attemptClose();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "501:       case 'd': // delete right or EOF",
          "502:         if (this.cursor === 0 && this.line.length === 0) {",
          "504:         } else if (this.cursor < this.line.length) {",
          "505:           this._deleteRight();",
          "506:         }",
          "",
          "[Removed Lines]",
          "503:           this._attemptClose();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "549:         break;",
          "551:       case 'z':",
          "553:         return;",
          "555:       case 'w': // delete backwards to a word boundary",
          "",
          "[Removed Lines]",
          "552:         process.kill(process.pid, 'SIGTSTP');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:   var sawSIGINT = false;",
          "131:   rli.on('SIGINT', function() {",
          "132:     if (sawSIGINT) {",
          "134:       process.exit();",
          "135:     }",
          "",
          "[Removed Lines]",
          "133:       rli.close();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "733:   repl.defineCommand('exit', {",
          "734:     help: 'Exit the repl',",
          "735:     action: function() {",
          "737:     }",
          "738:   });",
          "",
          "[Removed Lines]",
          "736:       this.rli.close();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27d8b059fa214c56de6dc359ebdb8c05ad6b9f99",
      "candidate_info": {
        "commit_hash": "27d8b059fa214c56de6dc359ebdb8c05ad6b9f99",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/27d8b059fa214c56de6dc359ebdb8c05ad6b9f99",
        "files": [
          "src/node.js",
          "test/simple/test-stdin-hang.js"
        ],
        "message": "Pause process.stdin in stdin getter\n\nOtherwise, it'll be ref'ed, and keep the process hanging.",
        "before_after_code_files": [
          "src/node.js||src/node.js",
          "test/simple/test-stdin-hang.js||test/simple/test-stdin-hang.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "325:       stdin.fd = fd;",
          "327:       return stdin;",
          "328:     });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:       stdin.pause();",
          "",
          "---------------"
        ],
        "test/simple/test-stdin-hang.js||test/simple/test-stdin-hang.js": [
          "File: test/simple/test-stdin-hang.js -> test/simple/test-stdin-hang.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "29: process.stdin;",
          "31: console.error('Should exit normally now.');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "08ab306afd0161aebde527a145c49cb848718df2",
      "candidate_info": {
        "commit_hash": "08ab306afd0161aebde527a145c49cb848718df2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/08ab306afd0161aebde527a145c49cb848718df2",
        "files": [
          "deps/uv/common.gypi",
          "deps/uv/gyp_uv",
          "deps/uv/include/uv-private/ev.h",
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/core.c",
          "deps/uv/src/unix/ev/ev.c",
          "deps/uv/src/unix/ev/ev_kqueue.c",
          "deps/uv/src/unix/tty.c",
          "deps/uv/src/unix/udp.c",
          "deps/uv/src/win/core.c",
          "deps/uv/test/echo-server.c",
          "deps/uv/test/task.h",
          "deps/uv/test/test-fs-event.c",
          "deps/uv/test/test-list.h",
          "deps/uv/test/test-ref.c",
          "deps/uv/test/test-tcp-close.c",
          "deps/uv/test/test-timer.c",
          "deps/uv/test/test-tty.c"
        ],
        "message": "uv: upgrade to 497b1ec",
        "before_after_code_files": [
          "deps/uv/common.gypi||deps/uv/common.gypi",
          "deps/uv/include/uv-private/ev.h||deps/uv/include/uv-private/ev.h",
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c",
          "deps/uv/src/unix/ev/ev.c||deps/uv/src/unix/ev/ev.c",
          "deps/uv/src/unix/ev/ev_kqueue.c||deps/uv/src/unix/ev/ev_kqueue.c",
          "deps/uv/src/unix/tty.c||deps/uv/src/unix/tty.c",
          "deps/uv/src/unix/udp.c||deps/uv/src/unix/udp.c",
          "deps/uv/src/win/core.c||deps/uv/src/win/core.c",
          "deps/uv/test/echo-server.c||deps/uv/test/echo-server.c",
          "deps/uv/test/task.h||deps/uv/test/task.h",
          "deps/uv/test/test-fs-event.c||deps/uv/test/test-fs-event.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/test/test-ref.c||deps/uv/test/test-ref.c",
          "deps/uv/test/test-tcp-close.c||deps/uv/test/test-tcp-close.c",
          "deps/uv/test/test-timer.c||deps/uv/test/test-timer.c",
          "deps/uv/test/test-tty.c||deps/uv/test/test-tty.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/common.gypi||deps/uv/common.gypi": [
          "File: deps/uv/common.gypi -> deps/uv/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:           'GCC_SYMBOLS_PRIVATE_EXTERN': 'YES',      # -fvisibility=hidden",
          "154:           'GCC_THREADSAFE_STATICS': 'NO',           # -fno-threadsafe-statics",
          "155:           'GCC_WARN_ABOUT_MISSING_NEWLINE': 'YES',  # -Wnewline-eof",
          "157:           'PREBINDING': 'NO',                       # No -Wl,-prebind",
          "158:           'USE_HEADERMAP': 'NO',",
          "159:           'OTHER_CFLAGS': [",
          "",
          "[Removed Lines]",
          "156:           'MACOSX_DEPLOYMENT_TARGET': '10.4',       # -mmacosx-version-min=10.4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/include/uv-private/ev.h||deps/uv/include/uv-private/ev.h": [
          "File: deps/uv/include/uv-private/ev.h -> deps/uv/include/uv-private/ev.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "563: struct ev_loop *ev_loop_new (unsigned int flags EV_CPP (= 0));",
          "567: #else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "565: int ev_loop_refcount (EV_P);",
          "",
          "---------------"
        ],
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "200: UV_EXTERN uv_loop_t* uv_loop_new(void);",
          "201: UV_EXTERN void uv_loop_delete(uv_loop_t*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204: UV_EXTERN int uv_loop_refcount(const uv_loop_t*);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "628:     const char* multicast_addr, const char* interface_addr,",
          "629:     uv_membership membership);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "645: int uv_udp_set_multicast_ttl(uv_udp_t* handle, int ttl);",
          "658: int uv_udp_set_broadcast(uv_udp_t* handle, int on);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c": [
          "File: deps/uv/src/unix/core.c -> deps/uv/src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: static void uv__finish_close(uv_handle_t* handle);",
          "72: void uv_close(uv_handle_t* handle, uv_close_cb close_cb) {",
          "73:   uv_udp_t* udp;",
          "74:   uv_async_t* async;",
          "",
          "[Removed Lines]",
          "67: #ifndef __GNUC__",
          "68: #define __attribute__(a)",
          "69: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "181: }",
          "184: uv_loop_t* uv_default_loop(void) {",
          "185:   if (!default_loop_ptr) {",
          "186:     default_loop_ptr = &default_loop_struct;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178: int uv_loop_refcount(const uv_loop_t* loop) {",
          "179:   return ev_loop_refcount(loop->ev);",
          "180: }",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/ev/ev.c||deps/uv/src/unix/ev/ev.c": [
          "File: deps/uv/src/unix/ev/ev.c -> deps/uv/src/unix/ev/ev.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1961: #if EV_VERIFY",
          "1962: static void noinline",
          "1963: verify_watcher (EV_P_ W w)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1961: int",
          "1962: ev_loop_refcount (EV_P)",
          "1963: {",
          "1964:   return activecnt;",
          "1965: }",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/ev/ev_kqueue.c||deps/uv/src/unix/ev/ev_kqueue.c": [
          "File: deps/uv/src/unix/ev/ev_kqueue.c -> deps/uv/src/unix/ev/ev_kqueue.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "200: void inline_size",
          "201: kqueue_fork (EV_P)",
          "202: {",
          "205:   while ((backend_fd = kqueue ()) < 0)",
          "206:     ev_syserr (\"(libev) kqueue\");",
          "",
          "[Removed Lines]",
          "203:   close (backend_fd);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/tty.c||deps/uv/src/unix/tty.c": [
          "File: deps/uv/src/unix/tty.c -> deps/uv/src/unix/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   struct stat s;",
          "122:   if (file < 0) {",
          "125:   }",
          "127:   if (isatty(file)) {",
          "",
          "[Removed Lines]",
          "124:     return -1;",
          "",
          "[Added Lines]",
          "123:     return UV_UNKNOWN_HANDLE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129:   }",
          "131:   if (fstat(file, &s)) {",
          "134:   }",
          "136:   if (!S_ISSOCK(s.st_mode) && !S_ISFIFO(s.st_mode)) {",
          "",
          "[Removed Lines]",
          "133:     return -1;",
          "",
          "[Added Lines]",
          "131:     return UV_UNKNOWN_HANDLE;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/udp.c||deps/uv/src/unix/udp.c": [
          "File: deps/uv/src/unix/udp.c -> deps/uv/src/unix/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: static void uv__udp_watcher_start(uv_udp_t* handle, ev_io* w) {",
          "43:   int flags;",
          "45:   assert(w == &handle->read_watcher",
          "46:       || w == &handle->write_watcher);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:   if (ev_is_active(w)) {",
          "46:     return;",
          "47:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:   ev_set_cb(w, uv__udp_io);",
          "52:   ev_io_set(w, handle->fd, flags);",
          "53:   ev_io_start(handle->loop->ev, w);",
          "54: }",
          "57: void uv__udp_watcher_stop(uv_udp_t* handle, ev_io* w) {",
          "58:   int flags;",
          "60:   assert(w == &handle->read_watcher",
          "61:       || w == &handle->write_watcher);",
          "63:   flags = (w == &handle->read_watcher ? EV_READ : EV_WRITE);",
          "65:   ev_io_stop(handle->loop->ev, w);",
          "66:   ev_io_set(w, -1, flags);",
          "67:   ev_set_cb(w, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:   ev_unref(handle->loop->ev);",
          "65:   if (!ev_is_active(w)) {",
          "66:     return;",
          "67:   }",
          "74:   ev_ref(handle->loop->ev);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "324:     goto out;",
          "325:   }",
          "327:   if (flags & UV_UDP_IPV6ONLY) {",
          "328: #ifdef IPV6_V6ONLY",
          "329:     yes = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "337:   yes = 1;",
          "338:   if (setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof yes) == -1) {",
          "339:     uv__set_sys_error(handle->loop, errno);",
          "340:     goto out;",
          "341:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "332:       goto out;",
          "333:     }",
          "334: #else",
          "336:     goto out;",
          "337: #endif",
          "338:   }",
          "",
          "[Removed Lines]",
          "335:     uv__set_sys_error((uv_handle_t*)handle, ENOTSUP);",
          "",
          "[Added Lines]",
          "351:     uv__set_sys_error(handle->loop, ENOTSUP);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "493:   return 0;",
          "494: }",
          "497: int uv_udp_getsockname(uv_udp_t* handle, struct sockaddr* name,",
          "498:     int* namelen) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "512: int uv_udp_set_multicast_ttl(uv_udp_t* handle, int ttl) {",
          "513:   if (setsockopt(handle->fd, IPPROTO_IP, IP_MULTICAST_TTL, &ttl, sizeof ttl) == -1) {",
          "514:     uv__set_sys_error(handle->loop, errno);",
          "515:     return -1;",
          "516:   }",
          "518:   return 0;",
          "519: }",
          "521: int uv_udp_set_broadcast(uv_udp_t* handle, int on) {",
          "522:   if (setsockopt(handle->fd, SOL_SOCKET, SO_BROADCAST, &on, sizeof on) == -1) {",
          "523:     uv__set_sys_error(handle->loop, errno);",
          "524:     return -1;",
          "525:   }",
          "527:   return 0;",
          "528: }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/core.c||deps/uv/src/win/core.c": [
          "File: deps/uv/src/win/core.c -> deps/uv/src/win/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "116: }",
          "119: void uv_ref(uv_loop_t* loop) {",
          "120:   loop->refs++;",
          "121: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119: int uv_loop_refcount(const uv_loop_t* loop) {",
          "120:   return loop->refs;",
          "121: }",
          "",
          "---------------"
        ],
        "deps/uv/test/echo-server.c||deps/uv/test/echo-server.c": [
          "File: deps/uv/test/echo-server.c -> deps/uv/test/echo-server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: static int server_closed;",
          "35: static stream_type serverType;",
          "36: static uv_tcp_t tcpServer;",
          "37: static uv_pipe_t pipeServer;",
          "38: static uv_handle_t* server;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: static uv_udp_t udpServer;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "176: }",
          "179: static int tcp4_echo_start(int port) {",
          "180:   struct sockaddr_in addr = uv_ip4_addr(\"0.0.0.0\", port);",
          "181:   int r;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180: static void on_send(uv_udp_send_t* req, int status);",
          "183: static void on_recv(uv_udp_t* handle,",
          "184:                     ssize_t nread,",
          "185:                     uv_buf_t buf,",
          "186:                     struct sockaddr* addr,",
          "187:                     unsigned flags) {",
          "188:   uv_udp_send_t* req;",
          "189:   int r;",
          "191:   ASSERT(nread > 0);",
          "192:   ASSERT(addr->sa_family == AF_INET);",
          "194:   req = malloc(sizeof(*req));",
          "195:   ASSERT(req != NULL);",
          "197:   r = uv_udp_send(req, handle, &buf, 1, *(struct sockaddr_in*)addr, on_send);",
          "198:   ASSERT(r == 0);",
          "199: }",
          "202: static void on_send(uv_udp_send_t* req, int status) {",
          "203:   ASSERT(status == 0);",
          "204:   free(req);",
          "205: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "242: }",
          "245: static int pipe_echo_start(char* pipeName) {",
          "246:   int r;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "274: static int udp4_echo_start(int port) {",
          "275:   int r;",
          "277:   server = (uv_handle_t*)&udpServer;",
          "278:   serverType = UDP;",
          "280:   r = uv_udp_init(loop, &udpServer);",
          "281:   if (r) {",
          "282:     fprintf(stderr, \"uv_udp_init: %s\\n\",",
          "283:         uv_strerror(uv_last_error(loop)));",
          "284:     return 1;",
          "285:   }",
          "287:   r = uv_udp_recv_start(&udpServer, echo_alloc, on_recv);",
          "288:   if (r) {",
          "289:     fprintf(stderr, \"uv_udp_recv_start: %s\\n\",",
          "290:         uv_strerror(uv_last_error(loop)));",
          "291:     return 1;",
          "292:   }",
          "294:   return 0;",
          "295: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "304:   uv_run(loop);",
          "305:   return 0;",
          "306: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "362: HELPER_IMPL(udp4_echo_server) {",
          "363:   loop = uv_default_loop();",
          "365:   if (udp4_echo_start(TEST_PORT))",
          "366:     return 1;",
          "368:   uv_run(loop);",
          "369:   return 0;",
          "370: }",
          "",
          "---------------"
        ],
        "deps/uv/test/task.h||deps/uv/test/task.h": [
          "File: deps/uv/test/task.h -> deps/uv/test/task.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: typedef enum {",
          "44:   TCP = 0,",
          "45:   PIPE",
          "46: } stream_type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:   UDP,",
          "",
          "---------------"
        ],
        "deps/uv/test/test-fs-event.c||deps/uv/test/test-fs-event.c": [
          "File: deps/uv/test/test-fs-event.c -> deps/uv/test/test-fs-event.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "309:   return 0;",
          "310: }",
          "",
          "[Removed Lines]",
          "313: TEST_IMPL(fs_event_unref) {",
          "314:   uv_loop_t* loop;",
          "315:   int r;",
          "317:   loop = uv_default_loop();",
          "319:   r = uv_fs_event_init(loop, &fs_event, \".\", fs_event_fail, 0);",
          "320:   ASSERT(r == 0);",
          "322:   uv_unref(loop);",
          "324:   r = uv_run(loop);",
          "325:   ASSERT(r == 0);",
          "327:   return 0;",
          "328: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: TEST_DECLARE   (ipc_listen_after_write)",
          "26: TEST_DECLARE   (tcp_ping_pong)",
          "27: TEST_DECLARE   (tcp_ping_pong_v6)",
          "30: TEST_DECLARE   (pipe_ping_pong)",
          "31: TEST_DECLARE   (delayed_accept)",
          "32: TEST_DECLARE   (multiple_listen)",
          "",
          "[Removed Lines]",
          "28: TEST_DECLARE   (tcp_ref)",
          "29: TEST_DECLARE   (tcp_ref2)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63: TEST_DECLARE   (callback_stack)",
          "64: TEST_DECLARE   (error_message)",
          "65: TEST_DECLARE   (timer)",
          "68: TEST_DECLARE   (timer_again)",
          "69: TEST_DECLARE   (idle_starvation)",
          "70: TEST_DECLARE   (loop_handles)",
          "71: TEST_DECLARE   (ref)",
          "72: TEST_DECLARE   (idle_ref)",
          "74: TEST_DECLARE   (async_ref)",
          "75: TEST_DECLARE   (prepare_ref)",
          "76: TEST_DECLARE   (check_ref)",
          "77: TEST_DECLARE   (unref_in_prepare_cb)",
          "78: TEST_DECLARE   (async)",
          "79: TEST_DECLARE   (get_currentexe)",
          "80: TEST_DECLARE   (cwd_and_chdir)",
          "",
          "[Removed Lines]",
          "66: TEST_DECLARE   (timer_ref)",
          "67: TEST_DECLARE   (timer_ref2)",
          "73: TEST_DECLARE   (get_loadavg)",
          "",
          "[Added Lines]",
          "67: TEST_DECLARE   (get_loadavg)",
          "74: TEST_DECLARE   (timer_ref)",
          "75: TEST_DECLARE   (timer_ref2)",
          "76: TEST_DECLARE   (fs_event_ref)",
          "77: TEST_DECLARE   (tcp_ref)",
          "78: TEST_DECLARE   (tcp_ref2)",
          "79: TEST_DECLARE   (tcp_ref3)",
          "80: TEST_DECLARE   (udp_ref)",
          "81: TEST_DECLARE   (udp_ref2)",
          "82: TEST_DECLARE   (udp_ref3)",
          "83: TEST_DECLARE   (pipe_ref)",
          "84: TEST_DECLARE   (pipe_ref2)",
          "85: TEST_DECLARE   (pipe_ref3)",
          "86: TEST_DECLARE   (process_ref)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "112: TEST_DECLARE   (fs_event_watch_file_current_dir)",
          "113: TEST_DECLARE   (fs_event_no_callback_on_close)",
          "114: TEST_DECLARE   (fs_event_immediate_close)",
          "116: TEST_DECLARE   (fs_readdir_empty_dir)",
          "117: TEST_DECLARE   (fs_readdir_file)",
          "118: TEST_DECLARE   (fs_open_dir)",
          "",
          "[Removed Lines]",
          "115: TEST_DECLARE   (fs_event_unref)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "128: #endif",
          "129: HELPER_DECLARE (tcp4_echo_server)",
          "130: HELPER_DECLARE (tcp6_echo_server)",
          "131: HELPER_DECLARE (pipe_echo_server)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139: HELPER_DECLARE (udp4_echo_server)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "139:   TEST_ENTRY  (ipc_listen_before_write)",
          "140:   TEST_ENTRY  (ipc_listen_after_write)",
          "147:   TEST_ENTRY  (tcp_ping_pong)",
          "148:   TEST_HELPER (tcp_ping_pong, tcp4_echo_server)",
          "",
          "[Removed Lines]",
          "142:   TEST_ENTRY  (tcp_ref)",
          "144:   TEST_ENTRY  (tcp_ref2)",
          "145:   TEST_HELPER (tcp_ref2, tcp4_echo_server)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "200:   TEST_ENTRY  (error_message)",
          "202:   TEST_ENTRY  (timer)",
          "206:   TEST_ENTRY  (timer_again)",
          "208:   TEST_ENTRY  (idle_starvation)",
          "",
          "[Removed Lines]",
          "203:   TEST_ENTRY  (timer_ref)",
          "204:   TEST_ENTRY  (timer_ref2)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "213:   TEST_ENTRY  (prepare_ref)",
          "214:   TEST_ENTRY  (check_ref)",
          "215:   TEST_ENTRY  (unref_in_prepare_cb)",
          "217:   TEST_ENTRY  (loop_handles)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "217:   TEST_ENTRY  (timer_ref)",
          "218:   TEST_ENTRY  (timer_ref2)",
          "219:   TEST_ENTRY  (fs_event_ref)",
          "220:   TEST_ENTRY  (tcp_ref)",
          "221:   TEST_ENTRY  (tcp_ref2)",
          "222:   TEST_ENTRY  (tcp_ref3)",
          "223:   TEST_HELPER (tcp_ref3, tcp4_echo_server)",
          "224:   TEST_ENTRY  (udp_ref)",
          "225:   TEST_ENTRY  (udp_ref2)",
          "226:   TEST_ENTRY  (udp_ref3)",
          "227:   TEST_HELPER (udp_ref3, udp4_echo_server)",
          "228:   TEST_ENTRY  (pipe_ref)",
          "229:   TEST_ENTRY  (pipe_ref2)",
          "230:   TEST_ENTRY  (pipe_ref3)",
          "231:   TEST_HELPER (pipe_ref3, pipe_echo_server)",
          "232:   TEST_ENTRY  (process_ref)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "269:   TEST_ENTRY  (fs_event_watch_file_current_dir)",
          "270:   TEST_ENTRY  (fs_event_no_callback_on_close)",
          "271:   TEST_ENTRY  (fs_event_immediate_close)",
          "273:   TEST_ENTRY  (fs_readdir_empty_dir)",
          "274:   TEST_ENTRY  (fs_readdir_file)",
          "275:   TEST_ENTRY  (fs_open_dir)",
          "",
          "[Removed Lines]",
          "272:   TEST_ENTRY  (fs_event_unref)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/test-ref.c||deps/uv/test/test-ref.c": [
          "File: deps/uv/test/test-ref.c -> deps/uv/test/test-ref.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"uv.h\"",
          "23: #include \"task.h\"",
          "26: TEST_IMPL(ref) {",
          "27:   uv_run(uv_default_loop());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #include <stdlib.h>",
          "26: #include <string.h>",
          "29: static void fail_cb(void) {",
          "30:   FATAL(\"fail_cb should not have been called\");",
          "31: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:   uv_run(uv_default_loop());",
          "84:   return 0;",
          "85: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96: TEST_IMPL(timer_ref) {",
          "97:   uv_timer_t h;",
          "98:   uv_timer_init(uv_default_loop(), &h);",
          "99:   uv_unref(uv_default_loop());",
          "100:   uv_run(uv_default_loop());",
          "101:   return 0;",
          "102: }",
          "105: TEST_IMPL(timer_ref2) {",
          "106:   uv_timer_t h;",
          "107:   uv_timer_init(uv_default_loop(), &h);",
          "108:   uv_timer_start(&h, (uv_timer_cb) fail_cb, 42, 42);",
          "109:   uv_unref(uv_default_loop());",
          "110:   uv_run(uv_default_loop());",
          "111:   return 0;",
          "112: }",
          "115: TEST_IMPL(fs_event_ref) {",
          "116:   uv_fs_event_t h;",
          "117:   uv_fs_event_init(uv_default_loop(), &h, \".\", (uv_fs_event_cb) fail_cb, 0);",
          "118:   uv_unref(uv_default_loop());",
          "119:   uv_run(uv_default_loop());",
          "120:   return 0;",
          "121: }",
          "124: TEST_IMPL(tcp_ref) {",
          "125:   uv_tcp_t h;",
          "126:   uv_tcp_init(uv_default_loop(), &h);",
          "127:   uv_unref(uv_default_loop());",
          "128:   uv_run(uv_default_loop());",
          "129:   return 0;",
          "130: }",
          "133: TEST_IMPL(tcp_ref2) {",
          "134:   uv_tcp_t h;",
          "135:   uv_tcp_init(uv_default_loop(), &h);",
          "136:   uv_listen((uv_stream_t*)&h, 128, (uv_connection_cb)fail_cb);",
          "137:   uv_unref(uv_default_loop());",
          "138:   uv_run(uv_default_loop());",
          "139:   return 0;",
          "140: }",
          "143: TEST_IMPL(tcp_ref3) {",
          "144:   struct sockaddr_in addr = uv_ip4_addr(\"127.0.0.1\", TEST_PORT);",
          "145:   uv_connect_t req;",
          "146:   uv_tcp_t h;",
          "147:   uv_tcp_init(uv_default_loop(), &h);",
          "148:   uv_tcp_connect(&req, &h, addr, (uv_connect_cb)fail_cb);",
          "149:   uv_unref(uv_default_loop());",
          "151:   uv_run(uv_default_loop());",
          "152:   return 0;",
          "153: }",
          "156: TEST_IMPL(udp_ref) {",
          "157:   uv_udp_t h;",
          "158:   uv_udp_init(uv_default_loop(), &h);",
          "159:   uv_unref(uv_default_loop());",
          "160:   uv_run(uv_default_loop());",
          "161:   return 0;",
          "162: }",
          "165: TEST_IMPL(udp_ref2) {",
          "166:   struct sockaddr_in addr = uv_ip4_addr(\"127.0.0.1\", TEST_PORT);",
          "167:   uv_udp_t h;",
          "168:   uv_udp_init(uv_default_loop(), &h);",
          "169:   uv_udp_bind(&h, addr, 0);",
          "170:   uv_udp_recv_start(&h, (uv_alloc_cb)fail_cb, (uv_udp_recv_cb)fail_cb);",
          "171:   uv_unref(uv_default_loop());",
          "172:   uv_run(uv_default_loop());",
          "173:   return 0;",
          "174: }",
          "177: TEST_IMPL(udp_ref3) {",
          "178:   struct sockaddr_in addr = uv_ip4_addr(\"127.0.0.1\", TEST_PORT);",
          "179:   uv_buf_t buf = uv_buf_init(\"PING\", 4);",
          "180:   uv_udp_send_t req;",
          "181:   uv_udp_t h;",
          "183:   uv_udp_init(uv_default_loop(), &h);",
          "184:   uv_udp_send(&req, &h, &buf, 1, addr, (uv_udp_send_cb)fail_cb);",
          "185:   uv_unref(uv_default_loop());",
          "187:   uv_run(uv_default_loop());",
          "189:   return 0;",
          "190: }",
          "193: TEST_IMPL(pipe_ref) {",
          "194:   uv_pipe_t h;",
          "195:   uv_pipe_init(uv_default_loop(), &h, 0);",
          "196:   uv_unref(uv_default_loop());",
          "197:   uv_run(uv_default_loop());",
          "198:   return 0;",
          "199: }",
          "202: TEST_IMPL(pipe_ref2) {",
          "203:   uv_pipe_t h;",
          "204:   uv_pipe_init(uv_default_loop(), &h, 0);",
          "205:   uv_listen((uv_stream_t*)&h, 128, (uv_connection_cb)fail_cb);",
          "206:   uv_unref(uv_default_loop());",
          "207:   uv_run(uv_default_loop());",
          "208:   return 0;",
          "209: }",
          "212: TEST_IMPL(pipe_ref3) {",
          "213:   uv_connect_t req;",
          "214:   uv_pipe_t h;",
          "215:   uv_pipe_init(uv_default_loop(), &h, 0);",
          "216:   uv_pipe_connect(&req, &h, TEST_PIPENAME, (uv_connect_cb)fail_cb);",
          "217:   uv_unref(uv_default_loop());",
          "219:   uv_run(uv_default_loop());",
          "220:   return 0;",
          "221: }",
          "224: TEST_IMPL(process_ref) {",
          "226:   char *argv[] = { NULL, \"spawn_helper4\", NULL };",
          "227:   uv_process_options_t options;",
          "228:   size_t exepath_size;",
          "229:   char exepath[256];",
          "230:   uv_process_t h;",
          "231:   int r;",
          "233:   memset(&options, 0, sizeof(options));",
          "234:   exepath_size = sizeof(exepath);",
          "236:   r = uv_exepath(exepath, &exepath_size);",
          "237:   ASSERT(r == 0);",
          "239:   argv[0] = exepath;",
          "240:   options.file = exepath;",
          "241:   options.args = argv;",
          "242:   options.exit_cb = NULL;",
          "244:   r = uv_spawn(uv_default_loop(), &h, options);",
          "245:   ASSERT(r == 0);",
          "247:   uv_unref(uv_default_loop());",
          "248:   uv_run(uv_default_loop());",
          "250:   r = uv_process_kill(&h, /* SIGTERM */ 15);",
          "251:   ASSERT(r == 0);",
          "253:   return 0;",
          "254: }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-tcp-close.c||deps/uv/test/test-tcp-close.c": [
          "File: deps/uv/test/test-tcp-close.c -> deps/uv/test/test-tcp-close.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:   return 0;",
          "129: }",
          "",
          "[Removed Lines]",
          "132: TEST_IMPL(tcp_ref) {",
          "133:   uv_tcp_t never;",
          "134:   int r;",
          "137:   r = uv_tcp_init(uv_default_loop(), &never);",
          "138:   ASSERT(r == 0);",
          "141:   uv_unref(uv_default_loop());",
          "144:   uv_run(uv_default_loop());",
          "146:   return 0;",
          "147: }",
          "150: static void never_cb(uv_connect_t* conn_req, int status) {",
          "151:   FATAL(\"never_cb should never be called\");",
          "152: }",
          "155: TEST_IMPL(tcp_ref2) {",
          "156:   uv_tcp_t never;",
          "157:   int r;",
          "160:   r = uv_tcp_init(uv_default_loop(), &never);",
          "161:   ASSERT(r == 0);",
          "163:   r = uv_tcp_connect(&connect_req,",
          "164:                      &never,",
          "165:                      uv_ip4_addr(\"127.0.0.1\", TEST_PORT),",
          "166:                      never_cb);",
          "167:   ASSERT(r == 0);",
          "170:   uv_unref(uv_default_loop());",
          "173:   uv_run(uv_default_loop());",
          "175:   return 0;",
          "176: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/test-timer.c||deps/uv/test/test-timer.c": [
          "File: deps/uv/test/test-timer.c -> deps/uv/test/test-timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:   return 0;",
          "132: }",
          "",
          "[Removed Lines]",
          "135: TEST_IMPL(timer_ref) {",
          "136:   uv_timer_t never;",
          "137:   int r;",
          "140:   r = uv_timer_init(uv_default_loop(), &never);",
          "141:   ASSERT(r == 0);",
          "144:   uv_unref(uv_default_loop());",
          "147:   uv_run(uv_default_loop());",
          "149:   return 0;",
          "150: }",
          "153: TEST_IMPL(timer_ref2) {",
          "154:   uv_timer_t never;",
          "155:   int r;",
          "158:   r = uv_timer_init(uv_default_loop(), &never);",
          "159:   ASSERT(r == 0);",
          "162:   r = uv_timer_start(&never, never_cb, 1000, 1000);",
          "163:   ASSERT(r == 0);",
          "166:   uv_unref(uv_default_loop());",
          "169:   uv_run(uv_default_loop());",
          "171:   return 0;",
          "172: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/test-tty.c||deps/uv/test/test-tty.c": [
          "File: deps/uv/test/test-tty.c -> deps/uv/test/test-tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:   uv_tty_t tty;",
          "28:   uv_loop_t* loop = uv_default_loop();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:   ASSERT(UV_UNKNOWN_HANDLE == uv_guess_handle(-1));",
          "",
          "---------------"
        ]
      }
    }
  ]
}