{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5af2ad682e809c04bdc79357ac8cb6571139e098",
      "candidate_info": {
        "commit_hash": "5af2ad682e809c04bdc79357ac8cb6571139e098",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5af2ad682e809c04bdc79357ac8cb6571139e098",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "Implement length checks as a macro\n\nReplace the various length checks in the extension code with a macro to\nsimplify the logic.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #include \"ssl_locl.h\"",
          "21: #include <openssl/ct.h>",
          "23: static int tls_decrypt_ticket(SSL *s, const unsigned char *tick, int ticklen,",
          "24:                               const unsigned char *sess_id, int sesslen,",
          "25:                               SSL_SESSION **psess);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #define CHECKLEN(curr, val, limit) \\",
          "25:     (((curr) >= (limit)) || (size_t)((limit) - (curr)) < (size_t)(val))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1049:             return NULL;",
          "1050:         }",
          "1053:             return NULL;",
          "1055:         s2n(TLSEXT_TYPE_renegotiate, ret);",
          "",
          "[Removed Lines]",
          "1052:         if (ret >= limit || limit - ret < 4 + el)",
          "",
          "[Added Lines]",
          "1056:         if (CHECKLEN(ret, 4 + el, limit))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1081:         size_str = strlen(s->tlsext_hostname);",
          "1083:             return NULL;",
          "",
          "[Removed Lines]",
          "1082:         if (ret >= limit || (size_t)(limit - ret) < 9 + size_str)",
          "",
          "[Added Lines]",
          "1086:         if (CHECKLEN(ret, 9 + size_str, limit))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1116:             return NULL;",
          "",
          "[Removed Lines]",
          "1115:         if (ret >= limit || (size_t)(limit - ret) < 5 + login_len)",
          "",
          "[Added Lines]",
          "1119:         if (CHECKLEN(ret, 5 + login_len, limit))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1150:             return NULL;",
          "1152:         s2n(TLSEXT_TYPE_ec_point_formats, ret);",
          "",
          "[Removed Lines]",
          "1149:         if (ret >= limit || (size_t)(limit - ret) < 5 + num_formats)",
          "",
          "[Added Lines]",
          "1153:         if (CHECKLEN(ret, 5 + num_formats, limit))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1177:             return NULL;",
          "1179:         s2n(TLSEXT_TYPE_elliptic_curves, ret);",
          "",
          "[Removed Lines]",
          "1176:         if (ret >= limit || (size_t)(limit - ret) < 6 + (num_curves * 2))",
          "",
          "[Added Lines]",
          "1180:         if (CHECKLEN(ret, 6 + (num_curves * 2), limit))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1220:             return NULL;",
          "1221:         s2n(TLSEXT_TYPE_session_ticket, ret);",
          "1222:         s2n(ticklen, ret);",
          "",
          "[Removed Lines]",
          "1219:         if (ret >= limit || (size_t)(limit - ret) < 4 + ticklen)",
          "",
          "[Added Lines]",
          "1223:         if (CHECKLEN(ret, 4 + ticklen, limit))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1243:             return NULL;",
          "1244:         s2n(TLSEXT_TYPE_signature_algorithms, ret);",
          "1245:         etmp = ret;",
          "",
          "[Removed Lines]",
          "1242:         if (ret >= limit || (size_t)(limit - ret) < salglen + 6)",
          "",
          "[Added Lines]",
          "1246:         if (CHECKLEN(ret, salglen + 6, limit))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1288:             return NULL;",
          "1290:         s2n(TLSEXT_TYPE_status_request, ret);",
          "",
          "[Removed Lines]",
          "1287:         if (ret >= limit || (size_t)(limit - ret) < 9 + idlen + extlen)",
          "",
          "[Added Lines]",
          "1293:         if (CHECKLEN(ret, 9 + idlen + extlen, limit))",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1319:             return NULL;",
          "1321:         s2n(TLSEXT_TYPE_heartbeat, ret);",
          "",
          "[Removed Lines]",
          "1318:         if (ret >= limit || limit - ret < 5)",
          "",
          "[Added Lines]",
          "1324:         if (CHECKLEN(ret, 5, limit))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1347:             return NULL;",
          "1348:         s2n(TLSEXT_TYPE_next_proto_neg, ret);",
          "1349:         s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1346:         if (ret >= limit || limit - ret < 4)",
          "",
          "[Added Lines]",
          "1352:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1366:             return NULL;",
          "1367:         s2n(TLSEXT_TYPE_application_layer_protocol_negotiation, ret);",
          "1368:         s2n(2 + s->alpn_client_proto_list_len, ret);",
          "",
          "[Removed Lines]",
          "1365:         if (ret >= limit || limit - ret < 6 + s->alpn_client_proto_list_len)",
          "",
          "[Added Lines]",
          "1371:         if (CHECKLEN(ret, 6 + s->alpn_client_proto_list_len, limit))",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1390:             return NULL;",
          "1392:         s2n(TLSEXT_TYPE_use_srtp, ret);",
          "",
          "[Removed Lines]",
          "1389:         if (ret >= limit || limit - ret < 4 + el)",
          "",
          "[Added Lines]",
          "1395:         if (CHECKLEN(ret, 4 + el, limit))",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1418:             return NULL;",
          "1419:         s2n(TLSEXT_TYPE_encrypt_then_mac, ret);",
          "1420:         s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1417:         if (ret >= limit || limit - ret < 4 )",
          "",
          "[Added Lines]",
          "1423:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1430:             return NULL;",
          "1432:         s2n(TLSEXT_TYPE_signed_certificate_timestamp, ret);",
          "",
          "[Removed Lines]",
          "1429:         if (ret >= limit || limit - ret < 4 )",
          "",
          "[Added Lines]",
          "1435:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1442:         return NULL;",
          "1443:     s2n(TLSEXT_TYPE_extended_master_secret, ret);",
          "1444:     s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1441:     if (ret >= limit || limit - ret < 4 )",
          "",
          "[Added Lines]",
          "1447:     if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1472:                 return NULL;",
          "1473:             s2n(TLSEXT_TYPE_padding, ret);",
          "1474:             s2n(hlen, ret);",
          "",
          "[Removed Lines]",
          "1471:             if (ret >= limit || limit - ret < 4 + hlen)",
          "",
          "[Added Lines]",
          "1477:             if (CHECKLEN(ret, 4 + hlen, limit))",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1523:             return NULL;",
          "1525:         s2n(TLSEXT_TYPE_renegotiate, ret);",
          "",
          "[Removed Lines]",
          "1522:         if (ret >= limit || limit - ret < 4 + el)",
          "",
          "[Added Lines]",
          "1528:         if (CHECKLEN(ret, 4 + el, limit))",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1547:             return NULL;",
          "1549:         s2n(TLSEXT_TYPE_server_name, ret);",
          "",
          "[Removed Lines]",
          "1546:         if (ret >= limit || limit - ret < 4 )",
          "",
          "[Added Lines]",
          "1552:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1574:             return NULL;",
          "1576:         s2n(TLSEXT_TYPE_ec_point_formats, ret);",
          "",
          "[Removed Lines]",
          "1573:         if (ret >= limit || (size_t)(limit - ret) < 5 + plistlen)",
          "",
          "[Added Lines]",
          "1579:         if (CHECKLEN(ret, 5 + plistlen, limit))",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1595:             return NULL;",
          "1596:         s2n(TLSEXT_TYPE_session_ticket, ret);",
          "1597:         s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1594:         if (ret >= limit || limit - ret < 4)",
          "",
          "[Added Lines]",
          "1600:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1612:             return NULL;",
          "1613:         s2n(TLSEXT_TYPE_status_request, ret);",
          "1614:         s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1611:         if (ret >= limit || limit - ret < 4)",
          "",
          "[Added Lines]",
          "1617:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1631:             return NULL;",
          "1633:         s2n(TLSEXT_TYPE_use_srtp, ret);",
          "",
          "[Removed Lines]",
          "1630:         if (ret >= limit || limit - ret < 4 + el)",
          "",
          "[Added Lines]",
          "1636:         if (CHECKLEN(ret, 4 + el, limit))",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1654:         };",
          "1658:             return NULL;",
          "1659:         memcpy(ret, cryptopro_ext, sizeof(cryptopro_ext));",
          "1660:         ret += sizeof(cryptopro_ext);",
          "",
          "[Removed Lines]",
          "1657:         if (ret >= limit || (size_t)(limit - ret) < sizeof(cryptopro_ext))",
          "",
          "[Added Lines]",
          "1663:         if (CHECKLEN(ret, sizeof(cryptopro_ext), limit))",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1672:             return NULL;",
          "1673:         s2n(TLSEXT_TYPE_heartbeat, ret);",
          "1674:         s2n(1, ret);",
          "",
          "[Removed Lines]",
          "1671:         if (ret >= limit || limit - ret < 5)",
          "",
          "[Added Lines]",
          "1677:         if (CHECKLEN(ret, 5, limit))",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1706:                 return NULL;",
          "1707:             s2n(TLSEXT_TYPE_next_proto_neg, ret);",
          "1708:             s2n(npalen, ret);",
          "",
          "[Removed Lines]",
          "1705:             if (ret >= limit || limit - ret < 4 + npalen)",
          "",
          "[Added Lines]",
          "1711:             if (CHECKLEN(ret, 4 + npalen, limit))",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1733:                 return NULL;",
          "1734:             s2n(TLSEXT_TYPE_encrypt_then_mac, ret);",
          "1735:             s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1732:             if (ret >= limit || limit - ret < 4)",
          "",
          "[Added Lines]",
          "1738:             if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1744:             return NULL;",
          "1745:         s2n(TLSEXT_TYPE_extended_master_secret, ret);",
          "1746:         s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1743:         if (ret >= limit || limit - ret < 4)",
          "",
          "[Added Lines]",
          "1749:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1761:             return NULL;",
          "1762:         s2n(TLSEXT_TYPE_application_layer_protocol_negotiation, ret);",
          "1763:         s2n(3 + len, ret);",
          "",
          "[Removed Lines]",
          "1760:         if (ret >= limit || (size_t)(limit - ret) < 7 + len)",
          "",
          "[Added Lines]",
          "1766:         if (CHECKLEN(ret, 7 + len, limit))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03f3575c39cfc81552ee05a93b856d3b69048114",
      "candidate_info": {
        "commit_hash": "03f3575c39cfc81552ee05a93b856d3b69048114",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/03f3575c39cfc81552ee05a93b856d3b69048114",
        "files": [
          "crypto/rand/rand_egd.c"
        ],
        "message": "Fixed the return code for RAND_egd_bytes.\n\nAccording to the documentation, the return code should be -1 when\nRAND_status does not return 1.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1886)\n(cherry picked from commit 3ed93c863374125296954edcbc595599adbd07ea)",
        "before_after_code_files": [
          "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c": [
          "File: crypto/rand/rand_egd.c -> crypto/rand/rand_egd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229: int RAND_egd_bytes(const char *path, int bytes)",
          "230: {",
          "233:     num = RAND_query_egd_bytes(path, NULL, bytes);",
          "235:         ret = num;",
          "236:  err:",
          "237:     return (ret);",
          "",
          "[Removed Lines]",
          "231:     int num, ret = 0;",
          "234:     if (num < 1 || RAND_status() == 1)",
          "",
          "[Added Lines]",
          "231:     int num, ret = -1;",
          "234:     if (RAND_status() == 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7aadf8b878501b512127200443041bba8361bbf",
      "candidate_info": {
        "commit_hash": "a7aadf8b878501b512127200443041bba8361bbf",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a7aadf8b878501b512127200443041bba8361bbf",
        "files": [
          "doc/apps/CA.pl.pod",
          "doc/apps/ca.pod",
          "doc/apps/ciphers.pod",
          "doc/apps/cms.pod",
          "doc/apps/crl.pod",
          "doc/apps/crl2pkcs7.pod",
          "doc/apps/dsa.pod",
          "doc/apps/ec.pod",
          "doc/apps/errstr.pod",
          "doc/apps/nseq.pod",
          "doc/apps/ocsp.pod",
          "doc/apps/openssl.pod",
          "doc/apps/pkcs12.pod",
          "doc/apps/pkcs7.pod",
          "doc/apps/pkcs8.pod",
          "doc/apps/pkey.pod",
          "doc/apps/pkeyparam.pod",
          "doc/apps/pkeyutl.pod",
          "doc/apps/req.pod",
          "doc/apps/rsa.pod",
          "doc/apps/rsautl.pod",
          "doc/apps/sess_id.pod",
          "doc/apps/smime.pod",
          "doc/apps/spkac.pod",
          "doc/apps/verify.pod",
          "doc/crypto/ERR_GET_LIB.pod",
          "doc/crypto/EVP_EncryptInit.pod",
          "doc/crypto/SSL_set_bio.pod",
          "util/find-doc-nits.pl"
        ],
        "message": "Fix various doc nits.\n\nDon't use regexps for section names, just strings:  More consistency.\nRename \"COMMAND OPTIONS\" to OPTIONS.\nFix a couple of other nit-level things.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2076)\n(cherry picked from commit 3dfda1a6363c0cf4efee94754a36c2d86be190c3)",
        "before_after_code_files": [
          "util/find-doc-nits.pl||util/find-doc-nits.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/find-doc-nits.pl||util/find-doc-nits.pl": [
          "File: util/find-doc-nits.pl -> util/find-doc-nits.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: my %mandatory_sections =",
          "24:     ( '*'    => [ 'NAME', 'DESCRIPTION', 'COPYRIGHT' ],",
          "27:       5      => [ ],",
          "28:       7      => [ ] );",
          "29: my %default_sections =",
          "",
          "[Removed Lines]",
          "25:       1      => [ 'SYNOPSIS', '(COMMAND\\s+)?OPTIONS' ],",
          "26:       3      => [ 'SYNOPSIS', 'RETURN\\s+VALUES' ],",
          "",
          "[Added Lines]",
          "25:       1      => [ 'SYNOPSIS', 'OPTIONS' ],",
          "26:       3      => [ 'SYNOPSIS', 'RETURN VALUES' ],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "162:     }",
          "164:     foreach ((@{$mandatory_sections{'*'}}, @{$mandatory_sections{$section}})) {",
          "166:             if $contents !~ /^=head1\\s+${_}\\s*$/m;",
          "167:     }",
          "",
          "[Removed Lines]",
          "165:         print \"$id doesn't have a head1 section matching $_\\n\"",
          "",
          "[Added Lines]",
          "165:         print \"$id: missing $_ head1 section\\n\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dd512a93902379364276588deb30ba03bf7f3b2d",
      "candidate_info": {
        "commit_hash": "dd512a93902379364276588deb30ba03bf7f3b2d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dd512a93902379364276588deb30ba03bf7f3b2d",
        "files": [
          "Configurations/10-main.conf"
        ],
        "message": "Configurations/10-main.conf: document GCC for Solaris config constraint.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit fe9e5b9ccce175d296c904486a29218c879adb73)",
        "before_after_code_files": [
          "Configurations/10-main.conf||Configurations/10-main.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/10-main.conf||Configurations/10-main.conf": [
          "File: Configurations/10-main.conf -> Configurations/10-main.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:     },",
          "188: #### Solaris x86 with GNU C setups",
          "189:     \"solaris-x86-gcc\" => {",
          "190:         # -DOPENSSL_NO_INLINE_ASM switches off inline assembler. We have",
          "191:         # to do it here because whenever GNU C instantiates an assembler",
          "192:         # template it surrounds it with #APP #NO_APP comment pair which",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190:         # NB. GNU C has to be configured to use GNU assembler, and not",
          "191:         # /usr/ccs/bin/as. Failure to comply will result in compile",
          "192:         # failures [at least] in 32-bit build.",
          "193:         # [Above statement is in direct contradition with one below.",
          "194:         #  Latter is kept, because it's formally inappropriate to",
          "195:         #  modify compile flags in letter release.]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5fe5914d3068128cdc6b08fe72746bb516a30b8a",
      "candidate_info": {
        "commit_hash": "5fe5914d3068128cdc6b08fe72746bb516a30b8a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5fe5914d3068128cdc6b08fe72746bb516a30b8a",
        "files": [
          "CHANGES",
          "NEWS",
          "README",
          "include/openssl/opensslv.h"
        ],
        "message": "Prepare for 1.1.0b-dev\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "include/openssl/opensslv.h||include/openssl/opensslv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/opensslv.h||include/openssl/opensslv.h": [
          "File: include/openssl/opensslv.h -> include/openssl/opensslv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: # ifdef OPENSSL_FIPS",
          "45: # else",
          "47: # endif",
          "",
          "[Removed Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x1010001fL",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0a-fips  22 Sep 2016\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0a  22 Sep 2016\"",
          "",
          "[Added Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x10100020L",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0b-fips-dev  xx XXX xxxx\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0b-dev  xx XXX xxxx\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}