{
  "cve_id": "CVE-2019-12098",
  "cve_desc": "In the client side of Heimdal before 7.6.0, failure to verify anonymous PKINIT PA-PKINIT-KX key exchange permits a man-in-the-middle attack. This issue is in krb5_init_creds_step in lib/krb5/init_creds_pw.c.",
  "repo": "heimdal/heimdal",
  "patch_hash": "2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
  "patch_info": {
    "commit_hash": "2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
    "repo": "heimdal/heimdal",
    "commit_url": "https://github.com/heimdal/heimdal/commit/2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
    "files": [
      "lib/krb5/init_creds_pw.c",
      "lib/krb5/krb5_locl.h",
      "lib/krb5/pkinit.c"
    ],
    "message": "CVE-2019-12098: krb5: always confirm PA-PKINIT-KX for anon PKINIT\n\nRFC8062 Section 7 requires verification of the PA-PKINIT-KX key excahnge\nwhen anonymous PKINIT is used.  Failure to do so can permit an active\nattacker to become a man-in-the-middle.\n\nIntroduced by a1ef548600c5bb51cf52a9a9ea12676506ede19f.  First tagged\nrelease Heimdal 1.4.0.\n\nCVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N (4.8)\n\nChange-Id: I6cc1c0c24985936468af08693839ac6c3edda133\nSigned-off-by: Jeffrey Altman <jaltman@auristor.com>\nApproved-by: Jeffrey Altman <jaltman@auritor.com>\n(cherry picked from commit 38c797e1ae9b9c8f99ae4aa2e73957679031fd2b)",
    "before_after_code_files": [
      "lib/krb5/init_creds_pw.c||lib/krb5/init_creds_pw.c",
      "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h",
      "lib/krb5/pkinit.c||lib/krb5/pkinit.c"
    ]
  },
  "patch_diff": {
    "lib/krb5/init_creds_pw.c||lib/krb5/init_creds_pw.c": [
      "File: lib/krb5/init_creds_pw.c -> lib/krb5/init_creds_pw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2267:            &ctx->req_buffer,",
      "2268:            NULL,",
      "2269:            NULL);",
      "2270:      if (ret == 0)",
      "2271:   ret = copy_EncKDCRepPart(&rep.enc_part, &ctx->enc_part);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2270:      if (ret == 0 && ctx->pk_init_ctx) {",
      "2271:   PA_DATA *pa_pkinit_kx;",
      "2272:   int idx = 0;",
      "2274:   pa_pkinit_kx =",
      "2275:       krb5_find_padata(rep.kdc_rep.padata->val,",
      "2276:          rep.kdc_rep.padata->len,",
      "2277:          KRB5_PADATA_PKINIT_KX,",
      "2278:          &idx);",
      "2280:   ret = _krb5_pk_kx_confirm(context, ctx->pk_init_ctx,",
      "2281:        ctx->fast_state.reply_key,",
      "2282:        &ctx->cred.session,",
      "2283:        pa_pkinit_kx);",
      "2284:   if (ret)",
      "2285:       krb5_set_error_message(context, ret,",
      "2286:         N_(\"Failed to confirm PA-PKINIT-KX\", \"\"));",
      "2287:   else if (pa_pkinit_kx != NULL)",
      "2288:       ctx->ic_flags |= KRB5_INIT_CREDS_PKINIT_KX_VALID;",
      "2289:      }",
      "",
      "---------------"
    ],
    "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h": [
      "File: lib/krb5/krb5_locl.h -> lib/krb5/krb5_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "208: #define KRB5_INIT_CREDS_CANONICALIZE  1",
      "209: #define KRB5_INIT_CREDS_NO_C_CANON_CHECK 2",
      "210: #define KRB5_INIT_CREDS_NO_C_NO_EKU_CHECK 4",
      "211:     struct {",
      "212:         krb5_gic_process_last_req func;",
      "213:         void *ctx;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "211: #define KRB5_INIT_CREDS_PKINIT_KX_VALID  32",
      "",
      "---------------"
    ],
    "lib/krb5/pkinit.c||lib/krb5/pkinit.c": [
      "File: lib/krb5/pkinit.c -> lib/krb5/pkinit.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1220:     return ret;",
      "1221: }",
      "1223: static krb5_error_code",
      "1224: pk_rd_pa_reply_dh(krb5_context context,",
      "1225:     const heim_octet_string *indata,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1230: KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL",
      "1231: _krb5_pk_kx_confirm(krb5_context context,",
      "1232:       krb5_pk_init_ctx ctx,",
      "1233:       krb5_keyblock *reply_key,",
      "1234:       krb5_keyblock *session_key,",
      "1235:       PA_DATA *pa_pkinit_kx)",
      "1236: {",
      "1237:     krb5_error_code ret;",
      "1238:     EncryptedData ed;",
      "1239:     krb5_keyblock ck, sk_verify;",
      "1240:     krb5_crypto ck_crypto = NULL;",
      "1241:     krb5_crypto rk_crypto = NULL;",
      "1242:     size_t len;",
      "1243:     krb5_data data;",
      "1244:     krb5_data p1 = { sizeof(\"PKINIT\") - 1, \"PKINIT\" };",
      "1245:     krb5_data p2 = { sizeof(\"KEYEXCHANGE\") - 1, \"KEYEXCHANGE\" };",
      "1247:     heim_assert(ctx != NULL, \"PKINIT context is non-NULL\");",
      "1248:     heim_assert(reply_key != NULL, \"reply key is non-NULL\");",
      "1249:     heim_assert(session_key != NULL, \"session key is non-NULL\");",
      "1252:     if (pa_pkinit_kx == NULL)",
      "1253:  return ctx->anonymous ? KRB5_KDCREP_MODIFIED : 0;",
      "1255:     memset(&ed, 0, sizeof(ed));",
      "1256:     krb5_keyblock_zero(&ck);",
      "1257:     krb5_keyblock_zero(&sk_verify);",
      "1258:     krb5_data_zero(&data);",
      "1260:     ret = decode_EncryptedData(pa_pkinit_kx->padata_value.data,",
      "1261:           pa_pkinit_kx->padata_value.length,",
      "1262:           &ed, &len);",
      "1263:     if (ret)",
      "1264:  goto out;",
      "1266:     if (len != pa_pkinit_kx->padata_value.length) {",
      "1267:  ret = KRB5_KDCREP_MODIFIED;",
      "1268:  goto out;",
      "1269:     }",
      "1271:     ret = krb5_crypto_init(context, reply_key, 0, &rk_crypto);",
      "1272:     if (ret)",
      "1273:  goto out;",
      "1275:     ret = krb5_decrypt_EncryptedData(context, rk_crypto,",
      "1276:          KRB5_KU_PA_PKINIT_KX,",
      "1277:          &ed, &data);",
      "1278:     if (ret)",
      "1279:  goto out;",
      "1281:     ret = decode_EncryptionKey(data.data, data.length,",
      "1282:           &ck, &len);",
      "1283:     if (ret)",
      "1284:  goto out;",
      "1286:     ret = krb5_crypto_init(context, &ck, 0, &ck_crypto);",
      "1287:     if (ret)",
      "1288:  goto out;",
      "1290:     ret = krb5_crypto_fx_cf2(context, ck_crypto, rk_crypto,",
      "1291:         &p1, &p2, session_key->keytype,",
      "1292:         &sk_verify);",
      "1293:     if (ret)",
      "1294:  goto out;",
      "1296:     if (sk_verify.keytype != session_key->keytype ||",
      "1297:  krb5_data_ct_cmp(&sk_verify.keyvalue, &session_key->keyvalue) != 0) {",
      "1298:  ret = KRB5_KDCREP_MODIFIED;",
      "1299:  goto out;",
      "1300:     }",
      "1302: out:",
      "1303:     free_EncryptedData(&ed);",
      "1304:     krb5_free_keyblock_contents(context, &ck);",
      "1305:     krb5_free_keyblock_contents(context, &sk_verify);",
      "1306:     if (ck_crypto)",
      "1307:  krb5_crypto_destroy(context, ck_crypto);",
      "1308:     if (rk_crypto)",
      "1309:  krb5_crypto_destroy(context, rk_crypto);",
      "1310:     krb5_data_free(&data);",
      "1312:     return ret;",
      "1313: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9a1a98f93ec19ee8dda0bda72b311c428128a4d7",
      "candidate_info": {
        "commit_hash": "9a1a98f93ec19ee8dda0bda72b311c428128a4d7",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/9a1a98f93ec19ee8dda0bda72b311c428128a4d7",
        "files": [
          "lib/krb5/send_to_kdc.c"
        ],
        "message": "krb5_sendto_kdc: Windows no KDC reachable error\n\nThe combination of 8740528b2477f872147998ca19a66d2fae12631b\n(\"Windows-compatible sentinel socket type and value\") and\nd497d7e4a796c6bda153e7f10fe9478724b855ab (\"krb5_sendto_kdc:\nfailover for multiple AAAA/A RRs on one domain\") broke\nall the send to kdc loop on Windows.  rk_socket_t is\na HANDLE and rk_INVALID_SOCKET is the max value.  Therefore,\nno valid socket will be larger and all communications\nwill fail.\n\nChange-Id: I3464f78d67b19f14050ad7a01738fb32bac99385\n(cherry picked from commit a1276c54aaebb0c6e71b3347ba2a49cb27d0c5ee)",
        "before_after_code_files": [
          "lib/krb5/send_to_kdc.c||lib/krb5/send_to_kdc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/krb5/send_to_kdc.c||lib/krb5/send_to_kdc.c": [
          "File: lib/krb5/send_to_kdc.c -> lib/krb5/send_to_kdc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "979:  debug_host(wait_ctx->context, 5, h, \"invalid sendto host state\");",
          "980:  heim_abort(\"invalid sendto host state\");",
          "981:     }",
          "983:  wait_ctx->max_fd = h->fd;",
          "984: }",
          "",
          "[Removed Lines]",
          "982:     if (h->fd > wait_ctx->max_fd)",
          "",
          "[Added Lines]",
          "982:     if (h->fd > wait_ctx->max_fd || wait_ctx->max_fd == rk_INVALID_SOCKET)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1384b3c59aa3357796115f836a1fc185ba4b0ba8",
      "candidate_info": {
        "commit_hash": "1384b3c59aa3357796115f836a1fc185ba4b0ba8",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/1384b3c59aa3357796115f836a1fc185ba4b0ba8",
        "files": [
          "kadmin/kadmin.1"
        ],
        "message": "Fixes issue#535 - verify-password-quality\n\nAt one point in time, the configuration option was named\n\"password-quality\" but this was later changed to\n\"verify-password-quality\".  Update the kadmin(1) man page to reflect\nthis change.\n\n(cherry picked from commit 4371af9e75f8b560b851b2a9b6faf63fc8535598)",
        "before_after_code_files": [
          "kadmin/kadmin.1||kadmin/kadmin.1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kadmin/kadmin.1||kadmin/kadmin.1": [
          "File: kadmin/kadmin.1 -> kadmin/kadmin.1",
          "--- Hunk 1 ---",
          "[Context before]",
          "250: Changes the password of an existing principal.",
          "251: .Ed",
          "252: .Pp",
          "254: .Ar principal",
          "255: .Ar password",
          "256: .Bd -ragged -offset indent",
          "",
          "[Removed Lines]",
          "253: .Nm password-quality",
          "",
          "[Added Lines]",
          "253: .Nm verify-password-quality",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9e76f25322ed2decef2807107e1e88f596305072",
      "candidate_info": {
        "commit_hash": "9e76f25322ed2decef2807107e1e88f596305072",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/9e76f25322ed2decef2807107e1e88f596305072",
        "files": [
          "lib/hcrypto/evp-wincng.c"
        ],
        "message": "hcrypto WinCNG backend: don't leak handles on digest reinit\n\nSimilar fix to 9518f296, but for the WinCNG EVP backend.\n\n(cherry picked from commit bd0b6f8c2b8663e372b713769b554984b2d929ae)",
        "before_after_code_files": [
          "lib/hcrypto/evp-wincng.c||lib/hcrypto/evp-wincng.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/hcrypto/evp-wincng.c||lib/hcrypto/evp-wincng.c": [
          "File: lib/hcrypto/evp-wincng.c -> lib/hcrypto/evp-wincng.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "570:     NTSTATUS status;",
          "571:     ULONG cbData;",
          "573:     status = BCryptGetProperty(hAlgorithm,",
          "574:           BCRYPT_OBJECT_LENGTH,",
          "575:           (PUCHAR)&cng->cbHashObject,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "573:     if (cng->hHash) {",
          "575:  cng->hHash = (BCRYPT_HASH_HANDLE)0;",
          "576:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a53b48f814e1ac89e56f2c2d10e22dfb9915d2b8",
      "candidate_info": {
        "commit_hash": "a53b48f814e1ac89e56f2c2d10e22dfb9915d2b8",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/a53b48f814e1ac89e56f2c2d10e22dfb9915d2b8",
        "files": [
          "lib/hcrypto/Makefile.am"
        ],
        "message": "hcrypto: Fix Makefile build race",
        "before_after_code_files": [
          "lib/hcrypto/Makefile.am||lib/hcrypto/Makefile.am"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/hcrypto/Makefile.am||lib/hcrypto/Makefile.am": [
          "File: lib/hcrypto/Makefile.am -> lib/hcrypto/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "297:  libtommath/bn_mp_to_unsigned_bin_n.c",
          "302: libhcrypto_la_CPPFLAGS = -DBUILD_HCRYPTO_LIB $(AM_CPPFLAGS)",
          "",
          "[Removed Lines]",
          "300: $(libhcrypto_la_OBJECTS): hcrypto-link",
          "",
          "[Added Lines]",
          "300: $(libhcrypto_la_OBJECTS) $(test_rand_OBJECTS): hcrypto-link",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a57518fcf68b1a561567ed053bab957842238e0d",
      "candidate_info": {
        "commit_hash": "a57518fcf68b1a561567ed053bab957842238e0d",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/a57518fcf68b1a561567ed053bab957842238e0d",
        "files": [
          "lib/hx509/Makefile.am",
          "lib/hx509/data/gen-req.sh",
          "lib/hx509/data/openssl.1.0.cnf",
          "lib/hx509/data/openssl.1.1.cnf",
          "lib/hx509/data/openssl.cnf"
        ],
        "message": "hx509: update gen_req.sh for OpenSSL 1.1 (#392)\n\nOpenSSL 1.1 has the pkInitKDC OID built in, which breaks as it was redefined by\nopenssl.cnf in Heimdal. Try to determine if OpenSSL >= 1.1 and if so, use a\nconfiguration file that omits this OID definition. The implementation is not\nrobust but as this is simply an example (not run by the test suites), it should\nbe adequete.\n\n(cherry picked from commit 6561afff3afdf74e3c9c7b0ecaad4b141275431f)",
        "before_after_code_files": [
          "lib/hx509/Makefile.am||lib/hx509/Makefile.am",
          "lib/hx509/data/gen-req.sh||lib/hx509/data/gen-req.sh",
          "lib/hx509/data/openssl.1.1.cnf||lib/hx509/data/openssl.1.1.cnf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041",
          "https://github.com/heimdal/heimdal/pull/556"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/hx509/Makefile.am||lib/hx509/Makefile.am": [
          "File: lib/hx509/Makefile.am -> lib/hx509/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "392:  data/ocsp-resp2.der \\",
          "393:  data/ocsp-responder.crt \\",
          "394:  data/ocsp-responder.key \\",
          "396:  data/pkinit-proxy-chain.crt \\",
          "397:  data/pkinit-proxy.crt \\",
          "398:  data/pkinit-proxy.key \\",
          "",
          "[Removed Lines]",
          "395:  data/openssl.cnf \\",
          "",
          "[Added Lines]",
          "395:  data/openssl.1.0.cnf \\",
          "396:  data/openssl.1.1.cnf \\",
          "",
          "---------------"
        ],
        "lib/hx509/data/gen-req.sh||lib/hx509/data/gen-req.sh": [
          "File: lib/hx509/data/gen-req.sh -> lib/hx509/data/gen-req.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: openssl=openssl",
          "10: gen_cert()",
          "11: {",
          "12:  keytype=${6:-rsa:1024}",
          "13:  ${openssl} req \\",
          "14:   -new \\",
          "15:   -subj \"$1\" \\",
          "17:   -newkey $keytype \\",
          "18:   -sha1 \\",
          "19:   -nodes \\",
          "",
          "[Removed Lines]",
          "16:   -config openssl.cnf \\",
          "",
          "[Added Lines]",
          "10: # workaround until openssl -objects lands",
          "11: if ${openssl} version | grep '^OpenSSL 1\\.[1-9]' >/dev/null ; then",
          "12:     config=openssl.1.1.cnf",
          "13: else",
          "14:     config=openssl.1.0.cnf",
          "15: fi",
          "23:   -config ${config} \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:   -req \\",
          "26:   -days 3650 \\",
          "27:   -in cert.req \\",
          "29:   -extensions $4 \\",
          "30:                 -signkey out.key \\",
          "31:   -out cert.crt",
          "",
          "[Removed Lines]",
          "28:   -extfile openssl.cnf \\",
          "",
          "[Added Lines]",
          "35:   -extfile ${config} \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:   -CA $2.crt \\",
          "45:   -CAkey $2.key \\",
          "46:   -CAcreateserial \\",
          "48:   -extensions $4",
          "50:   name=$5",
          "",
          "[Removed Lines]",
          "47:   -extfile openssl.cnf \\",
          "",
          "[Added Lines]",
          "54:   -extfile ${config} \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "59:   -out cert.crt \\",
          "60:   -outdir . \\",
          "61:   -batch \\",
          "64:   name=$3",
          "65:  fi",
          "",
          "[Removed Lines]",
          "62:   -config openssl.cnf",
          "",
          "[Added Lines]",
          "69:   -config ${config}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "109:     -cert ca.crt \\",
          "110:     -keyfile ca.key \\",
          "111:     -revoke revoke.crt \\",
          "114: ${openssl} pkcs12 \\",
          "115:     -export \\",
          "",
          "[Removed Lines]",
          "112:     -config openssl.cnf",
          "",
          "[Added Lines]",
          "119:     -config ${config}",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "348:     -cert ca.crt \\",
          "349:     -crl_reason superseded \\",
          "350:     -out crl1.crl \\",
          "353: ${openssl} crl -in crl1.crl -outform der -out crl1.der",
          "",
          "[Removed Lines]",
          "351:     -config openssl.cnf",
          "",
          "[Added Lines]",
          "358:     -config ${config}",
          "",
          "---------------"
        ],
        "lib/hx509/data/openssl.1.1.cnf||lib/hx509/data/openssl.1.1.cnf": [
          "File: lib/hx509/data/openssl.1.1.cnf -> lib/hx509/data/openssl.1.1.cnf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: [ca]",
          "3: default_ca = user",
          "5: [usr]",
          "6: database = index.txt",
          "7: serial  = serial",
          "8: x509_extensions = usr_cert",
          "9: default_md=sha1",
          "10: policy  = policy_match",
          "11: email_in_dn = no",
          "12: certs  = .",
          "14: [ocsp]",
          "15: database = index.txt",
          "16: serial  = serial",
          "17: x509_extensions = ocsp_cert",
          "18: default_md=sha1",
          "19: policy  = policy_match",
          "20: email_in_dn = no",
          "21: certs  = .",
          "23: [usr_ke]",
          "24: database = index.txt",
          "25: serial  = serial",
          "26: x509_extensions = usr_cert_ke",
          "27: default_md=sha1",
          "28: policy  = policy_match",
          "29: email_in_dn = no",
          "30: certs  = .",
          "32: [usr_ds]",
          "33: database = index.txt",
          "34: serial  = serial",
          "35: x509_extensions = usr_cert_ds",
          "36: default_md=sha1",
          "37: policy  = policy_match",
          "38: email_in_dn = no",
          "39: certs  = .",
          "41: [pkinit_client]",
          "42: database = index.txt",
          "43: serial  = serial",
          "44: x509_extensions = pkinit_client_cert",
          "45: default_md=sha1",
          "46: policy  = policy_match",
          "47: email_in_dn = no",
          "48: certs  = .",
          "50: [pkinit_kdc]",
          "51: database = index.txt",
          "52: serial  = serial",
          "53: x509_extensions = pkinit_kdc_cert",
          "54: default_md=sha1",
          "55: policy  = policy_match",
          "56: email_in_dn = no",
          "57: certs  = .",
          "59: [https]",
          "60: database = index.txt",
          "61: serial  = serial",
          "62: x509_extensions = https_cert",
          "63: default_md=sha1",
          "64: policy  = policy_match",
          "65: email_in_dn = no",
          "66: certs  = .",
          "68: [subca]",
          "69: database = index.txt",
          "70: serial  = serial",
          "71: x509_extensions = v3_ca",
          "72: default_md=sha1",
          "73: policy  = policy_match",
          "74: email_in_dn = no",
          "75: certs  = .",
          "78: [req]",
          "79: distinguished_name = req_distinguished_name",
          "80: x509_extensions  = v3_ca # The extensions to add to the self signed cert",
          "82: string_mask = utf8only",
          "84: [v3_ca]",
          "86: subjectKeyIdentifier=hash",
          "87: authorityKeyIdentifier=keyid:always,issuer:always",
          "88: basicConstraints = CA:true",
          "89: keyUsage = cRLSign, keyCertSign, keyEncipherment, nonRepudiation, digitalSignature",
          "91: [usr_cert]",
          "92: basicConstraints=CA:FALSE",
          "93: keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
          "94: subjectKeyIdentifier = hash",
          "96: [usr_cert_ke]",
          "97: basicConstraints=CA:FALSE",
          "98: keyUsage = nonRepudiation, keyEncipherment",
          "99: subjectKeyIdentifier = hash",
          "101: [proxy_cert]",
          "102: basicConstraints=CA:FALSE",
          "103: keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
          "104: subjectKeyIdentifier = hash",
          "105: proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:0,policy:text:foo",
          "107: [pkinitc_principals]",
          "108: princ1 = GeneralString:bar",
          "110: [pkinitc_principal_seq]",
          "111: name_type = EXP:0,INTEGER:1",
          "112: name_string = EXP:1,SEQUENCE:pkinitc_principals",
          "114: [pkinitc_princ_name]",
          "115: realm = EXP:0,GeneralString:TEST.H5L.SE",
          "116: principal_name = EXP:1,SEQUENCE:pkinitc_principal_seq",
          "118: [pkinit_client_cert]",
          "119: basicConstraints=CA:FALSE",
          "120: keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
          "121: subjectKeyIdentifier = hash",
          "122: subjectAltName=otherName:1.3.6.1.5.2.2;SEQUENCE:pkinitc_princ_name",
          "124: [https_cert]",
          "125: basicConstraints=CA:FALSE",
          "126: keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
          "127: #extendedKeyUsage = https-server XXX",
          "128: subjectKeyIdentifier = hash",
          "130: [pkinit_kdc_cert]",
          "131: basicConstraints=CA:FALSE",
          "132: keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
          "133: extendedKeyUsage = pkkdcekuoid",
          "134: subjectKeyIdentifier = hash",
          "135: subjectAltName=otherName:1.3.6.1.5.2.2;SEQUENCE:pkinitkdc_princ_name",
          "137: [pkinitkdc_princ_name]",
          "138: realm = EXP:0,GeneralString:TEST.H5L.SE",
          "139: principal_name = EXP:1,SEQUENCE:pkinitkdc_principal_seq",
          "141: [pkinitkdc_principal_seq]",
          "142: name_type = EXP:0,INTEGER:1",
          "143: name_string = EXP:1,SEQUENCE:pkinitkdc_principals",
          "145: [pkinitkdc_principals]",
          "146: princ1 = GeneralString:krbtgt",
          "147: princ2 = GeneralString:TEST.H5L.SE",
          "149: [proxy10_cert]",
          "150: basicConstraints=CA:FALSE",
          "151: keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
          "152: subjectKeyIdentifier = hash",
          "153: proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:10,policy:text:foo",
          "155: [usr_cert_ds]",
          "156: basicConstraints=CA:FALSE",
          "157: keyUsage = nonRepudiation, digitalSignature",
          "158: subjectKeyIdentifier = hash",
          "160: [ocsp_cert]",
          "161: basicConstraints=CA:FALSE",
          "162: keyUsage = nonRepudiation, digitalSignature, keyEncipherment",
          "163: # ocsp-nocheck and kp-OCSPSigning",
          "164: extendedKeyUsage = 1.3.6.1.5.5.7.48.1.5, 1.3.6.1.5.5.7.3.9",
          "165: subjectKeyIdentifier = hash",
          "167: [req_distinguished_name]",
          "168: countryName   = Country Name (2 letter code)",
          "169: countryName_default  = SE",
          "170: countryName_min   = 2",
          "171: countryName_max   = 2",
          "173: organizationalName  = Organizational Unit Name (eg, section)",
          "175: commonName   = Common Name (eg, YOUR name)",
          "176: commonName_max   = 64",
          "178: #[req_attributes]",
          "179: #challengePassword              = A challenge password",
          "180: #challengePassword_min          = 4",
          "181: #challengePassword_max          = 20",
          "183: [policy_match]",
          "184: countryName  = match",
          "185: commonName  = supplied",
          "",
          "---------------"
        ]
      }
    }
  ]
}