{
  "cve_id": "CVE-2013-7023",
  "cve_desc": "The ff_combine_frame function in libavcodec/parser.c in FFmpeg before 2.1 does not properly handle certain memory-allocation errors, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "f31011e9abfb2ae75bb32bc44e2c34194c8dc40a",
  "patch_info": {
    "commit_hash": "f31011e9abfb2ae75bb32bc44e2c34194c8dc40a",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f31011e9abfb2ae75bb32bc44e2c34194c8dc40a",
    "files": [
      "libavcodec/parser.c"
    ],
    "message": "avcodec/parser: reset indexes on realloc failure\n\nFixes Ticket2982\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/parser.c||libavcodec/parser.c"
    ]
  },
  "patch_diff": {
    "libavcodec/parser.c||libavcodec/parser.c": [
      "File: libavcodec/parser.c -> libavcodec/parser.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "237:     if(next == END_NOT_FOUND){",
      "238:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, (*buf_size) + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
      "241:             return AVERROR(ENOMEM);",
      "242:         pc->buffer = new_buffer;",
      "243:         memcpy(&pc->buffer[pc->index], *buf, *buf_size);",
      "244:         pc->index += *buf_size;",
      "",
      "[Removed Lines]",
      "240:         if(!new_buffer)",
      "",
      "[Added Lines]",
      "240:         if(!new_buffer) {",
      "241:             pc->index = 0;",
      "243:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "252:     if(pc->index){",
      "253:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, next + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
      "256:             return AVERROR(ENOMEM);",
      "257:         pc->buffer = new_buffer;",
      "258:         if (next > -FF_INPUT_BUFFER_PADDING_SIZE)",
      "259:             memcpy(&pc->buffer[pc->index], *buf,",
      "",
      "[Removed Lines]",
      "255:         if(!new_buffer)",
      "",
      "[Added Lines]",
      "256:         if(!new_buffer) {",
      "257:             pc->overread_index =",
      "258:             pc->index = 0;",
      "260:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0efb4ff86c200fad9da910ed7adaf3bc90793694",
      "candidate_info": {
        "commit_hash": "0efb4ff86c200fad9da910ed7adaf3bc90793694",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/0efb4ff86c200fad9da910ed7adaf3bc90793694",
        "files": [
          "libavcodec/parser.c"
        ],
        "message": "avcodec/parser: reset indexes on realloc failure\n\nFixes Ticket2982\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f31011e9abfb2ae75bb32bc44e2c34194c8dc40a)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/parser.c||libavcodec/parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/parser.c||libavcodec/parser.c"
          ],
          "candidate": [
            "libavcodec/parser.c||libavcodec/parser.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/parser.c||libavcodec/parser.c": [
          "File: libavcodec/parser.c -> libavcodec/parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:     if(next == END_NOT_FOUND){",
          "236:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, (*buf_size) + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
          "239:             return AVERROR(ENOMEM);",
          "240:         pc->buffer = new_buffer;",
          "241:         memcpy(&pc->buffer[pc->index], *buf, *buf_size);",
          "242:         pc->index += *buf_size;",
          "",
          "[Removed Lines]",
          "238:         if(!new_buffer)",
          "",
          "[Added Lines]",
          "238:         if(!new_buffer) {",
          "239:             pc->index = 0;",
          "241:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "250:     if(pc->index){",
          "251:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, next + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
          "254:             return AVERROR(ENOMEM);",
          "255:         pc->buffer = new_buffer;",
          "256:         if (next > -FF_INPUT_BUFFER_PADDING_SIZE)",
          "257:             memcpy(&pc->buffer[pc->index], *buf,",
          "",
          "[Removed Lines]",
          "253:         if(!new_buffer)",
          "",
          "[Added Lines]",
          "254:         if(!new_buffer) {",
          "255:             pc->overread_index =",
          "256:             pc->index = 0;",
          "258:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9a073b1f0f27471fdad501d6f1fff0dd1b482d63",
      "candidate_info": {
        "commit_hash": "9a073b1f0f27471fdad501d6f1fff0dd1b482d63",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/9a073b1f0f27471fdad501d6f1fff0dd1b482d63",
        "files": [
          "libavcodec/parser.c"
        ],
        "message": "avcodec/parser: reset indexes on realloc failure\n\nFixes Ticket2982\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f31011e9abfb2ae75bb32bc44e2c34194c8dc40a)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/parser.c||libavcodec/parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/parser.c||libavcodec/parser.c"
          ],
          "candidate": [
            "libavcodec/parser.c||libavcodec/parser.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/parser.c||libavcodec/parser.c": [
          "File: libavcodec/parser.c -> libavcodec/parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "271:     if(next == END_NOT_FOUND){",
          "272:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, (*buf_size) + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
          "275:             return AVERROR(ENOMEM);",
          "276:         pc->buffer = new_buffer;",
          "277:         memcpy(&pc->buffer[pc->index], *buf, *buf_size);",
          "278:         pc->index += *buf_size;",
          "",
          "[Removed Lines]",
          "274:         if(!new_buffer)",
          "",
          "[Added Lines]",
          "274:         if(!new_buffer) {",
          "275:             pc->index = 0;",
          "277:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "286:     if(pc->index){",
          "287:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, next + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
          "290:             return AVERROR(ENOMEM);",
          "291:         pc->buffer = new_buffer;",
          "292:         memcpy(&pc->buffer[pc->index], *buf, next + FF_INPUT_BUFFER_PADDING_SIZE );",
          "293:         pc->index = 0;",
          "",
          "[Removed Lines]",
          "289:         if(!new_buffer)",
          "",
          "[Added Lines]",
          "290:         if(!new_buffer) {",
          "291:             pc->overread_index =",
          "292:             pc->index = 0;",
          "294:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "20854f9bffd2130b6b987c439c2b4002aa177dd0",
      "candidate_info": {
        "commit_hash": "20854f9bffd2130b6b987c439c2b4002aa177dd0",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/20854f9bffd2130b6b987c439c2b4002aa177dd0",
        "files": [
          "libavcodec/parser.c"
        ],
        "message": "avcodec/parser: reset indexes on realloc failure\n\nFixes Ticket2982\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f31011e9abfb2ae75bb32bc44e2c34194c8dc40a)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/parser.c||libavcodec/parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/parser.c||libavcodec/parser.c"
          ],
          "candidate": [
            "libavcodec/parser.c||libavcodec/parser.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/parser.c||libavcodec/parser.c": [
          "File: libavcodec/parser.c -> libavcodec/parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:     if(next == END_NOT_FOUND){",
          "242:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, (*buf_size) + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
          "245:             return AVERROR(ENOMEM);",
          "246:         pc->buffer = new_buffer;",
          "247:         memcpy(&pc->buffer[pc->index], *buf, *buf_size);",
          "248:         pc->index += *buf_size;",
          "",
          "[Removed Lines]",
          "244:         if(!new_buffer)",
          "",
          "[Added Lines]",
          "244:         if(!new_buffer) {",
          "245:             pc->index = 0;",
          "247:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "256:     if(pc->index){",
          "257:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, next + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
          "260:             return AVERROR(ENOMEM);",
          "261:         pc->buffer = new_buffer;",
          "262:         if (next > -FF_INPUT_BUFFER_PADDING_SIZE)",
          "263:             memcpy(&pc->buffer[pc->index], *buf,",
          "",
          "[Removed Lines]",
          "259:         if(!new_buffer)",
          "",
          "[Added Lines]",
          "260:         if(!new_buffer) {",
          "261:             pc->overread_index =",
          "262:             pc->index = 0;",
          "264:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2289bffa312dc3589efbdf44a0a5f1a26a5b709f",
      "candidate_info": {
        "commit_hash": "2289bffa312dc3589efbdf44a0a5f1a26a5b709f",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/2289bffa312dc3589efbdf44a0a5f1a26a5b709f",
        "files": [
          "libavcodec/parser.c"
        ],
        "message": "avcodec/parser: reset indexes on realloc failure\n\nFixes Ticket2982\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f31011e9abfb2ae75bb32bc44e2c34194c8dc40a)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/parser.c||libavcodec/parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/parser.c||libavcodec/parser.c"
          ],
          "candidate": [
            "libavcodec/parser.c||libavcodec/parser.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/parser.c||libavcodec/parser.c": [
          "File: libavcodec/parser.c -> libavcodec/parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:     if(next == END_NOT_FOUND){",
          "242:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, (*buf_size) + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
          "245:             return AVERROR(ENOMEM);",
          "246:         pc->buffer = new_buffer;",
          "247:         memcpy(&pc->buffer[pc->index], *buf, *buf_size);",
          "248:         pc->index += *buf_size;",
          "",
          "[Removed Lines]",
          "244:         if(!new_buffer)",
          "",
          "[Added Lines]",
          "244:         if(!new_buffer) {",
          "245:             pc->index = 0;",
          "247:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "256:     if(pc->index){",
          "257:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, next + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
          "260:             return AVERROR(ENOMEM);",
          "261:         pc->buffer = new_buffer;",
          "262:         memcpy(&pc->buffer[pc->index], *buf, next + FF_INPUT_BUFFER_PADDING_SIZE );",
          "263:         pc->index = 0;",
          "",
          "[Removed Lines]",
          "259:         if(!new_buffer)",
          "",
          "[Added Lines]",
          "260:         if(!new_buffer) {",
          "261:             pc->overread_index =",
          "262:             pc->index = 0;",
          "264:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f9ae27f5136a29eea18effb033fe9d6f67b892e",
      "candidate_info": {
        "commit_hash": "6f9ae27f5136a29eea18effb033fe9d6f67b892e",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6f9ae27f5136a29eea18effb033fe9d6f67b892e",
        "files": [
          "libavcodec/parser.c"
        ],
        "message": "avcodec/parser: reset indexes on realloc failure\n\nFixes Ticket2982\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f31011e9abfb2ae75bb32bc44e2c34194c8dc40a)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/parser.c||libavcodec/parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/parser.c||libavcodec/parser.c"
          ],
          "candidate": [
            "libavcodec/parser.c||libavcodec/parser.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/parser.c||libavcodec/parser.c": [
          "File: libavcodec/parser.c -> libavcodec/parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "244:     if(next == END_NOT_FOUND){",
          "245:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, (*buf_size) + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
          "248:             return AVERROR(ENOMEM);",
          "249:         pc->buffer = new_buffer;",
          "250:         memcpy(&pc->buffer[pc->index], *buf, *buf_size);",
          "251:         pc->index += *buf_size;",
          "",
          "[Removed Lines]",
          "247:         if(!new_buffer)",
          "",
          "[Added Lines]",
          "247:         if(!new_buffer) {",
          "248:             pc->index = 0;",
          "250:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "259:     if(pc->index){",
          "260:         void* new_buffer = av_fast_realloc(pc->buffer, &pc->buffer_size, next + pc->index + FF_INPUT_BUFFER_PADDING_SIZE);",
          "263:             return AVERROR(ENOMEM);",
          "264:         pc->buffer = new_buffer;",
          "265:         memcpy(&pc->buffer[pc->index], *buf, next + FF_INPUT_BUFFER_PADDING_SIZE );",
          "266:         pc->index = 0;",
          "",
          "[Removed Lines]",
          "262:         if(!new_buffer)",
          "",
          "[Added Lines]",
          "263:         if(!new_buffer) {",
          "264:             pc->overread_index =",
          "265:             pc->index = 0;",
          "267:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}