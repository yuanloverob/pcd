{
  "cve_id": "CVE-2017-14500",
  "cve_desc": "Improper Neutralization of Special Elements used in an OS Command in the podcast playback function of Podbeuter in Newsbeuter 0.3 through 2.9 allows remote attackers to perform user-assisted code execution by crafting an RSS item with a media enclosure (i.e., a podcast file) that includes shell metacharacters in its filename, related to pb_controller.cpp and queueloader.cpp, a different vulnerability than CVE-2017-12904.",
  "repo": "akrennmair/newsbeuter",
  "patch_hash": "c8fea2f60c18ed30bdd1bb6f798e994e51a58260",
  "patch_info": {
    "commit_hash": "c8fea2f60c18ed30bdd1bb6f798e994e51a58260",
    "repo": "akrennmair/newsbeuter",
    "commit_url": "https://github.com/akrennmair/newsbeuter/commit/c8fea2f60c18ed30bdd1bb6f798e994e51a58260",
    "files": [
      "src/pb_controller.cpp",
      "src/queueloader.cpp"
    ],
    "message": "Work around shell code in podcast names (#598)",
    "before_after_code_files": [
      "src/pb_controller.cpp||src/pb_controller.cpp",
      "src/queueloader.cpp||src/queueloader.cpp"
    ]
  },
  "patch_diff": {
    "src/pb_controller.cpp||src/pb_controller.cpp": [
      "File: src/pb_controller.cpp -> src/pb_controller.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:  if (player == \"\")",
      "368:   return;",
      "369:  cmdline.append(player);",
      "373:  stfl::reset();",
      "374:  utils::run_interactively(cmdline, \"pb_controller::play_file\");",
      "375: }",
      "",
      "[Removed Lines]",
      "370:  cmdline.append(\" \\\"\");",
      "371:  cmdline.append(utils::replace_all(file,\"\\\"\", \"\\\\\\\"\"));",
      "372:  cmdline.append(\"\\\"\");",
      "",
      "[Added Lines]",
      "370:  cmdline.append(\" '\");",
      "371:  cmdline.append(utils::replace_all(file,\"'\", \"%27\"));",
      "372:  cmdline.append(\"'\");",
      "",
      "---------------"
    ],
    "src/queueloader.cpp||src/queueloader.cpp": [
      "File: src/queueloader.cpp -> src/queueloader.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "130:   strftime(lbuf, sizeof(lbuf), \"%Y-%b-%d-%H%M%S.unknown\", localtime(&t));",
      "131:   fn.append(lbuf);",
      "132:  } else {",
      "134:  }",
      "135:  return fn;",
      "136: }",
      "",
      "[Removed Lines]",
      "133:   fn.append(base);",
      "",
      "[Added Lines]",
      "133:   fn.append(utils::replace_all(base, \"'\", \"%27\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "26f5a4350f3ab5507bb8727051c87bb04660f333",
      "candidate_info": {
        "commit_hash": "26f5a4350f3ab5507bb8727051c87bb04660f333",
        "repo": "akrennmair/newsbeuter",
        "commit_url": "https://github.com/akrennmair/newsbeuter/commit/26f5a4350f3ab5507bb8727051c87bb04660f333",
        "files": [
          "src/pb_controller.cpp",
          "src/queueloader.cpp"
        ],
        "message": "Work around shell code in podcast names (#598)",
        "before_after_code_files": [
          "src/pb_controller.cpp||src/pb_controller.cpp",
          "src/queueloader.cpp||src/queueloader.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/pb_controller.cpp||src/pb_controller.cpp",
            "src/queueloader.cpp||src/queueloader.cpp"
          ],
          "candidate": [
            "src/pb_controller.cpp||src/pb_controller.cpp",
            "src/queueloader.cpp||src/queueloader.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/pb_controller.cpp||src/pb_controller.cpp": [
          "File: src/pb_controller.cpp -> src/pb_controller.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "306:  if (player == \"\")",
          "307:   return;",
          "308:  cmdline.append(player);",
          "312:  stfl::reset();",
          "313:  LOG(LOG_DEBUG, \"pb_controller::play_file: running `%s'\", cmdline.c_str());",
          "314:  ::system(cmdline.c_str());",
          "",
          "[Removed Lines]",
          "309:  cmdline.append(\" \\\"\");",
          "310:  cmdline.append(utils::replace_all(file,\"\\\"\", \"\\\\\\\"\"));",
          "311:  cmdline.append(\"\\\"\");",
          "",
          "[Added Lines]",
          "309:  cmdline.append(\" \\'\");",
          "310:  cmdline.append(utils::replace_all(file,\"'\", \"%27\"));",
          "311:  cmdline.append(\"\\'\");",
          "",
          "---------------"
        ],
        "src/queueloader.cpp||src/queueloader.cpp": [
          "File: src/queueloader.cpp -> src/queueloader.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:   strftime(lbuf, sizeof(lbuf), \"%Y-%b-%d-%H%M%S.unknown\", localtime(&t));",
          "131:   fn.append(lbuf);",
          "132:  } else {",
          "134:  }",
          "135:  return fn;",
          "136: }",
          "",
          "[Removed Lines]",
          "133:   fn.append(base);",
          "",
          "[Added Lines]",
          "133:   fn.append(utils::replace_all(base, \"'\", \"%27\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}