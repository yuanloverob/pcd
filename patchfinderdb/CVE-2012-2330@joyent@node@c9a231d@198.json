{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c9be1d5ffdb3249332394e98a9f009379ac41873",
      "candidate_info": {
        "commit_hash": "c9be1d5ffdb3249332394e98a9f009379ac41873",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c9be1d5ffdb3249332394e98a9f009379ac41873",
        "files": [
          "lib/http.js"
        ],
        "message": "http client: Destroy on timeout",
        "before_after_code_files": [
          "lib/http.js||lihttp.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1312:     onSocket();",
          "1313:   }",
          "1314: };",
          "1317: };",
          "1318: ClientRequest.prototype.setNoDelay = function() {",
          "1319:   this._deferToConnect('setNoDelay', arguments);",
          "1320: };",
          "",
          "[Removed Lines]",
          "1315: ClientRequest.prototype.setTimeout = function() {",
          "1316:   this._deferToConnect('setTimeout', arguments);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1403:   httpSocketSetup(socket);",
          "1405:   socket.setTimeout(2 * 60 * 1000); // 2 minute timeout",
          "1407:     socket.destroy();",
          "1408:   });",
          "",
          "[Removed Lines]",
          "1406:   socket.addListener('timeout', function() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f6f2d42ee95e1cd0900af62a3cfe7d31c1ed8e62",
      "candidate_info": {
        "commit_hash": "f6f2d42ee95e1cd0900af62a3cfe7d31c1ed8e62",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f6f2d42ee95e1cd0900af62a3cfe7d31c1ed8e62",
        "files": [
          "src/ev-emul.h"
        ],
        "message": "node: make ev-emul.h compile with -Wextra -Werror\n\nExplicitly cast double to int64_t, it was making add-ons that compile with\n`-Wall -Wextra -Werror` fail to build.\n\nDon't use fully variadic macros, gcc in uber-strict mode rejects them.",
        "before_after_code_files": [
          "src/ev-emul.h||src/ev-emul.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/ev-emul.h||src/ev-emul.h": [
          "File: src/ev-emul.h -> src/ev-emul.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     (w)->cb = (cb_);                                                          \\",
          "76:   while (0)",
          "80: #define ev_is_active(w)                                                       \\",
          "81:   (uv_is_active((uv_handle_t*) &(w)->handle))",
          "86: #define __uv_container_of(ptr, type, field)                                   \\",
          "87:   ((type*) ((char*) (ptr) - offsetof(type, field)))",
          "",
          "[Removed Lines]",
          "78: #define ev_set_priority(...)",
          "83: #define ev_now(...)                                                           \\",
          "84:   (uv_hrtime() / 1e9)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "196: inline static void __ev_timer_start(__ev_timer* w) {",
          "198:   __uv_warn_of(ev_timer, uv_timer_t);",
          "199:   if (!(w->flags & 1)) {",
          "200:     uv_timer_init(uv_default_loop(), &w->handle);",
          "201:     w->flags |= 1;",
          "202:   }",
          "204: }",
          "",
          "[Removed Lines]",
          "197:   uint64_t ms = 1000;",
          "203:   uv_timer_start(&w->handle, __uv_timer_cb, w->delay * ms, w->repeat * ms);",
          "",
          "[Added Lines]",
          "197:   uv_timer_start(&w->handle,",
          "198:                  __uv_timer_cb,",
          "199:                  (int64_t) (w->delay * 1000),",
          "200:                  (int64_t) (w->repeat * 1000));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "233: }",
          "236: #define ev_io           __ev_io",
          "237: #define ev_io_init      __ev_io_init",
          "238: #define ev_io_set       __ev_io_set",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233: inline static double __ev_now(/* variadic */) {",
          "234:   return uv_hrtime() / 1e9;",
          "235: }",
          "238: inline static void __ev_set_priority(/* variadic */) {",
          "239: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "249: #define ev_ref          __ev_ref",
          "250: #define ev_unref        __ev_unref",
          "252: #undef __uv_container_of",
          "253: #undef __uv_warn_of",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258: #define ev_now          __ev_now",
          "259: #define ev_set_priority __ev_set_priority",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4e5fe2d45aef5aacf4a6c6c2db28f0b9cc64f123",
      "candidate_info": {
        "commit_hash": "4e5fe2d45aef5aacf4a6c6c2db28f0b9cc64f123",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4e5fe2d45aef5aacf4a6c6c2db28f0b9cc64f123",
        "files": [
          "src/node.js",
          "test/simple/test-next-tick-intentional-starvation.js",
          "test/simple/test-process-active-wraps.js"
        ],
        "message": "nextTick: Handle tick callbacks after each tick",
        "before_after_code_files": [
          "src/node.js||src/node.js",
          "test/simple/test-next-tick-intentional-starvation.js||test/simple/test-next-tick-intentional-starvation.js",
          "test/simple/test-process-active-wraps.js||test/simple/test-process-active-wraps.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "240:       if (domain) domain.exit();",
          "242:       return ret;",
          "243:     };",
          "244:   };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:       process._tickCallback();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "247:     var nextTickQueue = [];",
          "248:     var nextTickIndex = 0;",
          "249:     var inTick = false;",
          "251:     function tickDone() {",
          "252:       nextTickQueue.splice(0, nextTickIndex);",
          "253:       nextTickIndex = 0;",
          "254:       inTick = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "252:     var tickDepth = 0;",
          "261:     process.maxTickDepth = 1000;",
          "264:       tickDepth = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "260:     process._tickCallback = function() {",
          "261:       if (inTick) return;",
          "264:       inTick = true;",
          "282:         }",
          "285:       tickDone();",
          "286:     };",
          "",
          "[Removed Lines]",
          "262:       var nextTickLength = nextTickQueue.length;",
          "263:       if (nextTickLength === 0) return;",
          "266:       while (nextTickIndex < nextTickLength) {",
          "267:         var tock = nextTickQueue[nextTickIndex++];",
          "268:         var callback = tock.callback;",
          "269:         if (tock.domain) {",
          "270:           if (tock.domain._disposed) continue;",
          "271:           tock.domain.enter();",
          "272:         }",
          "273:         var threw = true;",
          "274:         try {",
          "275:           callback();",
          "276:           threw = false;",
          "277:         } finally {",
          "278:           if (threw) tickDone();",
          "279:         }",
          "280:         if (tock.domain) {",
          "281:           tock.domain.exit();",
          "283:       }",
          "",
          "[Added Lines]",
          "279:       do {",
          "280:         tickDepth++;",
          "281:         var nextTickLength = nextTickQueue.length;",
          "282:         if (nextTickLength === 0) return tickDone();",
          "283:         while (nextTickIndex < nextTickLength) {",
          "284:           var tock = nextTickQueue[nextTickIndex++];",
          "285:           var callback = tock.callback;",
          "286:           if (tock.domain) {",
          "287:             if (tock.domain._disposed) continue;",
          "288:             tock.domain.enter();",
          "289:           }",
          "290:           var threw = true;",
          "291:           try {",
          "292:             callback();",
          "293:             threw = false;",
          "294:           } finally {",
          "295:             if (threw) tickDone();",
          "296:           }",
          "297:           if (tock.domain) {",
          "298:             tock.domain.exit();",
          "299:           }",
          "301:         nextTickQueue.splice(0, nextTickIndex);",
          "302:         nextTickIndex = 0;",
          "305:       } while (tickDepth < process.maxTickDepth &&",
          "306:                nextTickQueue.length > 0);",
          "",
          "---------------"
        ],
        "test/simple/test-next-tick-intentional-starvation.js||test/simple/test-next-tick-intentional-starvation.js": [
          "File: test/simple/test-next-tick-intentional-starvation.js -> test/simple/test-next-tick-intentional-starvation.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "30: process.maxTickDepth = Infinity;",
          "32: var ran = false;",
          "33: var starved = false;",
          "34: var start = +new Date();",
          "35: var timerRan = false;",
          "37: function spin() {",
          "38:   ran = true;",
          "39:   var now = +new Date();",
          "40:   if (now - start > 100) {",
          "41:     console.log('The timer is starving, just as we planned.');",
          "42:     starved = true;",
          "45:     return;",
          "46:   }",
          "48:   process.nextTick(spin);",
          "49: }",
          "51: function onTimeout() {",
          "52:   if (!starved) throw new Error('The timer escaped!');",
          "53:   console.log('The timer ran once the ban was lifted');",
          "54:   timerRan = true;",
          "55: }",
          "57: spin();",
          "58: setTimeout(onTimeout, 50);",
          "60: process.on('exit', function() {",
          "61:   assert.ok(ran);",
          "62:   assert.ok(starved);",
          "63:   assert.ok(timerRan);",
          "64: });",
          "",
          "---------------"
        ],
        "test/simple/test-process-active-wraps.js||test/simple/test-process-active-wraps.js": [
          "File: test/simple/test-process-active-wraps.js -> test/simple/test-process-active-wraps.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:   expect(2, 1); // client handle doesn't shut down until next tick",
          "47: })();",
          "49: process.nextTick(function() {",
          "50:   process.nextTick(function() {",
          "51:     process.nextTick(function() {",
          "54:     });",
          "55:   });",
          "56: });",
          "",
          "[Removed Lines]",
          "53:       assert.equal(process._getActiveHandles().length, 0);",
          "",
          "[Added Lines]",
          "50: process.maxTickDepth = 1;",
          "55:       process.nextTick(function() {",
          "57:         assert.equal(process._getActiveHandles().length, 0);",
          "58:       });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "578f69bcf49ac98243e86650a596c4039296db18",
      "candidate_info": {
        "commit_hash": "578f69bcf49ac98243e86650a596c4039296db18",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/578f69bcf49ac98243e86650a596c4039296db18",
        "files": [
          "deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/loop-watcher.c",
          "deps/uv/test/benchmark-loop-count.c",
          "deps/uv/test/test-eio-overflow.c",
          "deps/uv/test/test-list.h",
          "deps/uv/uv.gyp"
        ],
        "message": "deps: upgrade libuv to 28766dc",
        "before_after_code_files": [
          "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/loop-watcher.c||deps/uv/src/unix/loop-watcher.c",
          "deps/uv/test/test-eio-overflow.c||deps/uv/test/benchmark-loop-count.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/uv.gyp||deps/uv/uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h": [
          "File: deps/uv/src/unix/internal.h -> deps/uv/src/unix/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "128: void uv__handle_init(uv_loop_t* loop, uv_handle_t* handle, uv_handle_type type);",
          "131: int uv__socket(int domain, int type, int protocol);",
          "132: int uv__dup(int fd);",
          "133: int uv_async_stop(uv_async_t* handle);",
          "",
          "[Removed Lines]",
          "129: int uv__nonblock(int fd, int set) __attribute__((unused));",
          "130: int uv__cloexec(int fd, int set) __attribute__((unused));",
          "",
          "[Added Lines]",
          "129: int uv__nonblock(int fd, int set);",
          "130: int uv__cloexec(int fd, int set);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/loop-watcher.c||deps/uv/src/unix/loop-watcher.c": [
          "File: deps/uv/src/unix/loop-watcher.c -> deps/uv/src/unix/loop-watcher.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"uv.h\"",
          "23: #include \"internal.h\"",
          "25: #define UV_LOOP_WATCHER_DEFINE(name, type)                                    \\",
          "26:   int uv_##name##_init(uv_loop_t* loop, uv_##name##_t* handle) {              \\",
          "27:     uv__handle_init(loop, (uv_handle_t*)handle, UV_##type);                   \\",
          "28:     loop->counters.name##_init++;                                             \\",
          "29:     handle->name##_cb = NULL;                                                 \\",
          "30:     return 0;                                                                 \\",
          "31:   }                                                                           \\",
          "32:                                                                               \\",
          "33:   int uv_##name##_start(uv_##name##_t* handle, uv_##name##_cb cb) {           \\",
          "34:     if (uv__is_active(handle)) return 0;                                      \\",
          "35:     ngx_queue_insert_head(&handle->loop->name##_handles, &handle->queue);     \\",
          "36:     handle->name##_cb = cb;                                                   \\",
          "37:     uv__handle_start(handle);                                                 \\",
          "38:     return 0;                                                                 \\",
          "39:   }                                                                           \\",
          "40:                                                                               \\",
          "41:   int uv_##name##_stop(uv_##name##_t* handle) {                               \\",
          "42:     if (!uv__is_active(handle)) return 0;                                     \\",
          "43:     ngx_queue_remove(&handle->queue);                                         \\",
          "44:     uv__handle_stop(handle);                                                  \\",
          "45:     return 0;                                                                 \\",
          "46:   }                                                                           \\",
          "47:                                                                               \\",
          "48:   void uv__run_##name(uv_loop_t* loop) {                                      \\",
          "49:     uv_##name##_t* h;                                                         \\",
          "50:     ngx_queue_t* q;                                                           \\",
          "51:     ngx_queue_foreach(q, &loop->name##_handles) {                             \\",
          "52:       h = ngx_queue_data(q, uv_##name##_t, queue);                            \\",
          "53:       if (h->name##_cb) h->name##_cb(h, 0);                                   \\",
          "54:     }                                                                         \\",
          "55:   }                                                                           \\",
          "56:                                                                               \\",
          "57:   void uv__##name##_close(uv_##name##_t* handle) {                            \\",
          "58:     uv_##name##_stop(handle);                                                 \\",
          "59:   }",
          "61: UV_LOOP_WATCHER_DEFINE(prepare, PREPARE)",
          "62: UV_LOOP_WATCHER_DEFINE(check, CHECK)",
          "63: UV_LOOP_WATCHER_DEFINE(idle, IDLE)",
          "",
          "---------------"
        ],
        "deps/uv/test/test-eio-overflow.c||deps/uv/test/benchmark-loop-count.c": [
          "File: deps/uv/test/test-eio-overflow.c -> deps/uv/test/benchmark-loop-count.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #include \"task.h\"",
          "24: #include <stdio.h>",
          "25: #include <stdlib.h>",
          "39: }",
          "45: }",
          "88:   return 0;",
          "89: }",
          "",
          "[Removed Lines]",
          "22: #include \"uv.h\"",
          "28: static uv_idle_t idle;",
          "30: static const int max_opened = 10000;",
          "31: static const int max_delta = 4000;",
          "33: static int opened = 0;",
          "34: static int closed = 0;",
          "37: void work_cb(uv_work_t* work) {",
          "42: void after_work_cb(uv_work_t* work) {",
          "43:   free(work);",
          "44:   closed++;",
          "48: void make_eio_req(void) {",
          "49:   uv_work_t* w;",
          "51:   opened++;",
          "53:   w = (uv_work_t*) malloc(sizeof(*w));",
          "54:   ASSERT(w != NULL);",
          "56:   uv_queue_work(uv_default_loop(), w, work_cb, after_work_cb);",
          "57: }",
          "60: void idle_cb(uv_idle_t* idle, int status) {",
          "61:   ASSERT(opened - closed < max_delta);",
          "62:   if (opened <= max_opened) {",
          "63:     int i;",
          "64:     for (i = 0; i < 30; i++) {",
          "65:       make_eio_req();",
          "66:     }",
          "67:   } else {",
          "68:     int r;",
          "70:     r = uv_idle_stop(idle);",
          "71:     ASSERT(r == 0);",
          "72:   }",
          "73: }",
          "76: TEST_IMPL(eio_overflow) {",
          "77:   int r;",
          "79:   r = uv_idle_init(uv_default_loop(), &idle);",
          "80:   ASSERT(r == 0);",
          "82:   r = uv_idle_start(&idle, idle_cb);",
          "83:   ASSERT(r == 0);",
          "85:   r = uv_run(uv_default_loop());",
          "86:   ASSERT(r == 0);",
          "",
          "[Added Lines]",
          "23: #include \"uv.h\"",
          "28: static unsigned long ticks;",
          "29: static uv_idle_t idle_handle;",
          "30: static uv_timer_t timer_handle;",
          "33: static void idle_cb(uv_idle_t* handle, int status) {",
          "34:   ticks++;",
          "38: static void timer_cb(uv_timer_t* handle, int status) {",
          "39:   uv_idle_stop(&idle_handle);",
          "40:   uv_timer_stop(&timer_handle);",
          "44: BENCHMARK_IMPL(loop_count) {",
          "45:   uv_loop_t* loop = uv_default_loop();",
          "47:   uv_timer_init(loop, &timer_handle);",
          "48:   uv_timer_start(&timer_handle, timer_cb, 5000, 0);",
          "50:   uv_idle_init(loop, &idle_handle);",
          "51:   uv_idle_start(&idle_handle, idle_cb);",
          "53:   uv_run(loop);",
          "55:   LOGF(\"loop_count: %lu ticks (%.0f ticks/s)\\n\", ticks, ticks / 5.0);",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "154: TEST_DECLARE   (fs_rename_to_existing_file)",
          "155: TEST_DECLARE   (threadpool_queue_work_simple)",
          "156: TEST_DECLARE   (threadpool_multiple_event_loops)",
          "158: TEST_DECLARE   (thread_mutex)",
          "159: TEST_DECLARE   (thread_rwlock)",
          "160: TEST_DECLARE   (thread_create)",
          "",
          "[Removed Lines]",
          "157: TEST_DECLARE   (eio_overflow)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "375:   TEST_ENTRY  (fs_rename_to_existing_file)",
          "376:   TEST_ENTRY  (threadpool_queue_work_simple)",
          "377:   TEST_ENTRY  (threadpool_multiple_event_loops)",
          "379:   TEST_ENTRY  (thread_mutex)",
          "380:   TEST_ENTRY  (thread_rwlock)",
          "381:   TEST_ENTRY  (thread_create)",
          "",
          "[Removed Lines]",
          "378:   TEST_ENTRY  (eio_overflow)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/uv.gyp||deps/uv/uv.gyp": [
          "File: deps/uv/uv.gyp -> deps/uv/uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "305:         'test/test-connection-fail.c',",
          "306:         'test/test-cwd-and-chdir.c',",
          "307:         'test/test-delayed-accept.c',",
          "309:         'test/test-fail-always.c',",
          "310:         'test/test-fs.c',",
          "311:         'test/test-fs-event.c',",
          "",
          "[Removed Lines]",
          "308:         'test/test-eio-overflow.c',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae5b0e1fc190118957e2eaa4f4c71424adbf9c6e",
      "candidate_info": {
        "commit_hash": "ae5b0e1fc190118957e2eaa4f4c71424adbf9c6e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ae5b0e1fc190118957e2eaa4f4c71424adbf9c6e",
        "files": [
          "src/node_crypto.cc",
          "test/pummel/test-dh-regr.js"
        ],
        "message": "crypto: add padding to diffie-hellman key\n\nDH_size returns number of bytes in a prime number, DH_compute_key returns number\nof bytes in a remainder of exponent, which may have less bytes than a prime\nnumber. Therefore add 0-padding to the allocated buffer.\n\nFixes #3372",
        "before_after_code_files": [
          "src/node_crypto.cc||src/node_crypto.cc",
          "test/pummel/test-dh-regr.js||test/pummel/test-dh-regr.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "3960:     Local<Value> outString;",
          "3962:     if (size == -1) {",
          "3963:       int checkResult;",
          "3964:       if (!DH_check_pub_key(diffieHellman->dh, key, &checkResult)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3966:     if (size != dataSize) {",
          "3967:       assert(dataSize > size);",
          "3968:       memset(data + size, 0, dataSize - size);",
          "3969:     }",
          "",
          "---------------"
        ],
        "test/pummel/test-dh-regr.js||test/pummel/test-dh-regr.js": [
          "File: test/pummel/test-dh-regr.js -> test/pummel/test-dh-regr.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "25: var crypto = require('crypto');",
          "27: var p = crypto.createDiffieHellman(256).getPrime();",
          "29: for (var i = 0; i < 2000; i++) {",
          "30:   var a = crypto.createDiffieHellman(p),",
          "31:       b = crypto.createDiffieHellman(p);",
          "33:   a.generateKeys();",
          "34:   b.generateKeys();",
          "36:   assert.equal(",
          "37:     a.computeSecret(b.getPublicKey()),",
          "38:     b.computeSecret(a.getPublicKey()),",
          "39:     'secrets should be equal!'",
          "40:   );",
          "41: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}