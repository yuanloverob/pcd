{
  "cve_id": "CVE-2018-9336",
  "cve_desc": "openvpnserv.exe (aka the interactive service helper) in OpenVPN 2.4.x before 2.4.6 allows a local attacker to cause a double-free of memory by sending a malformed request to the interactive service. This could cause a denial-of-service through memory corruption or possibly have unspecified other impact including privilege escalation.",
  "repo": "OpenVPN/openvpn",
  "patch_hash": "1394192b210cb3c6624a7419bcf3ff966742e79b",
  "patch_info": {
    "commit_hash": "1394192b210cb3c6624a7419bcf3ff966742e79b",
    "repo": "OpenVPN/openvpn",
    "commit_url": "https://github.com/OpenVPN/openvpn/commit/1394192b210cb3c6624a7419bcf3ff966742e79b",
    "files": [
      "src/openvpnserv/interactive.c"
    ],
    "message": "Fix potential double-free() in Interactive Service (CVE-2018-9336)\n\nMalformed input data on the service pipe towards the OpenVPN interactive\nservice (normally used by the OpenVPN GUI to request openvpn instances\nfrom the service) can result in a double free() in the error handling code.\n\nThis usually only leads to a process crash (DoS by an unprivileged local\naccount) but since it could possibly lead to memory corruption if\nhappening while multiple other threads are active at the same time,\nCVE-2018-9336 has been assigned to acknowledge this risk.\n\nFix by ensuring that sud->directory is set to NULL in GetStartUpData()\nfor all error cases (thus not being free()ed in FreeStartupData()).\n\nRewrite control flow to use explicit error label for error exit.\n\nDiscovered and reported by Jacob Baines <jbaines@tenable.com>.\n\nCVE: 2018-9336\n\nSigned-off-by: Gert Doering <gert@greenie.muc.de>\nAcked-by: Selva Nair <selva.nair@gmail.com>\nMessage-Id: <20180414072617.25075-1-gert@greenie.muc.de>\nURL: https://www.mail-archive.com/search?l=mid&q=20180414072617.25075-1-gert@greenie.muc.de\n\nSigned-off-by: Gert Doering <gert@greenie.muc.de>",
    "before_after_code_files": [
      "src/openvpnserv/interactive.c||src/openvpnserv/interactive.c"
    ]
  },
  "patch_diff": {
    "src/openvpnserv/interactive.c||src/openvpnserv/interactive.c": [
      "File: src/openvpnserv/interactive.c -> src/openvpnserv/interactive.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "453: GetStartupData(HANDLE pipe, STARTUP_DATA *sud)",
      "454: {",
      "455:     size_t size, len;",
      "457:     WCHAR *data = NULL;",
      "458:     DWORD bytes, read;",
      "",
      "[Removed Lines]",
      "456:     BOOL ret = FALSE;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "462:     {",
      "463:         MsgToEventLog(M_SYSERR, TEXT(\"PeekNamedPipeAsync failed\"));",
      "464:         ReturnLastError(pipe, L\"PeekNamedPipeAsync\");",
      "466:     }",
      "468:     size = bytes / sizeof(*data);",
      "",
      "[Removed Lines]",
      "465:         goto out;",
      "",
      "[Added Lines]",
      "464:         goto err;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "470:     {",
      "471:         MsgToEventLog(M_SYSERR, TEXT(\"malformed startup data: 1 byte received\"));",
      "472:         ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);",
      "474:     }",
      "476:     data = malloc(bytes);",
      "",
      "[Removed Lines]",
      "473:         goto out;",
      "",
      "[Added Lines]",
      "472:         goto err;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "478:     {",
      "479:         MsgToEventLog(M_SYSERR, TEXT(\"malloc failed\"));",
      "480:         ReturnLastError(pipe, L\"malloc\");",
      "482:     }",
      "484:     read = ReadPipeAsync(pipe, data, bytes, 1, &exit_event);",
      "",
      "[Removed Lines]",
      "481:         goto out;",
      "",
      "[Added Lines]",
      "480:         goto err;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "486:     {",
      "487:         MsgToEventLog(M_SYSERR, TEXT(\"ReadPipeAsync failed\"));",
      "488:         ReturnLastError(pipe, L\"ReadPipeAsync\");",
      "490:     }",
      "492:     if (data[size - 1] != 0)",
      "493:     {",
      "494:         MsgToEventLog(M_ERR, TEXT(\"Startup data is not NULL terminated\"));",
      "495:         ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);",
      "497:     }",
      "499:     sud->directory = data;",
      "",
      "[Removed Lines]",
      "489:         goto out;",
      "496:         goto out;",
      "",
      "[Added Lines]",
      "488:         goto err;",
      "495:         goto err;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "503:     {",
      "504:         MsgToEventLog(M_ERR, TEXT(\"Startup data ends at working directory\"));",
      "505:         ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);",
      "507:     }",
      "509:     sud->options = sud->directory + len;",
      "",
      "[Removed Lines]",
      "506:         goto out;",
      "",
      "[Added Lines]",
      "505:         goto err;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "513:     {",
      "514:         MsgToEventLog(M_ERR, TEXT(\"Startup data ends at command line options\"));",
      "515:         ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);",
      "517:     }",
      "519:     sud->std_input = sud->options + len;",
      "524:     free(data);",
      "526: }",
      "",
      "[Removed Lines]",
      "516:         goto out;",
      "521:     ret = TRUE;",
      "523: out:",
      "525:     return ret;",
      "",
      "[Added Lines]",
      "515:         goto err;",
      "519:     return TRUE;",
      "521: err:",
      "524:     return FALSE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "da242af8d3750a231bfd687d0a92cf2004dae988",
      "candidate_info": {
        "commit_hash": "da242af8d3750a231bfd687d0a92cf2004dae988",
        "repo": "OpenVPN/openvpn",
        "commit_url": "https://github.com/OpenVPN/openvpn/commit/da242af8d3750a231bfd687d0a92cf2004dae988",
        "files": [
          "src/openvpnserv/interactive.c"
        ],
        "message": "Fix potential double-free() in Interactive Service (CVE-2018-9336)\n\nMalformed input data on the service pipe towards the OpenVPN interactive\nservice (normally used by the OpenVPN GUI to request openvpn instances\nfrom the service) can result in a double free() in the error handling code.\n\nThis usually only leads to a process crash (DoS by an unprivileged local\naccount) but since it could possibly lead to memory corruption if\nhappening while multiple other threads are active at the same time,\nCVE-2018-9336 has been assigned to acknowledge this risk.\n\nFix by ensuring that sud->directory is set to NULL in GetStartUpData()\nfor all error cases (thus not being free()ed in FreeStartupData()).\n\nRewrite control flow to use explicit error label for error exit.\n\nDiscovered and reported by Jacob Baines <jbaines@tenable.com>.\n\nCVE: 2018-9336\n\nSigned-off-by: Gert Doering <gert@greenie.muc.de>\nAcked-by: Selva Nair <selva.nair@gmail.com>\nMessage-Id: <20180414072617.25075-1-gert@greenie.muc.de>\nURL: https://www.mail-archive.com/search?l=mid&q=20180414072617.25075-1-gert@greenie.muc.de\n\nSigned-off-by: Gert Doering <gert@greenie.muc.de>\n(cherry picked from commit 1394192b210cb3c6624a7419bcf3ff966742e79b)",
        "before_after_code_files": [
          "src/openvpnserv/interactive.c||src/openvpnserv/interactive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/openvpnserv/interactive.c||src/openvpnserv/interactive.c"
          ],
          "candidate": [
            "src/openvpnserv/interactive.c||src/openvpnserv/interactive.c"
          ]
        }
      },
      "candidate_diff": {
        "src/openvpnserv/interactive.c||src/openvpnserv/interactive.c": [
          "File: src/openvpnserv/interactive.c -> src/openvpnserv/interactive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "453: GetStartupData(HANDLE pipe, STARTUP_DATA *sud)",
          "454: {",
          "455:     size_t len;",
          "457:     WCHAR *data = NULL;",
          "458:     DWORD size, bytes, read;",
          "",
          "[Removed Lines]",
          "456:     BOOL ret = FALSE;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "462:     {",
          "463:         MsgToEventLog(M_SYSERR, TEXT(\"PeekNamedPipeAsync failed\"));",
          "464:         ReturnLastError(pipe, L\"PeekNamedPipeAsync\");",
          "466:     }",
          "468:     size = bytes / sizeof(*data);",
          "",
          "[Removed Lines]",
          "465:         goto out;",
          "",
          "[Added Lines]",
          "464:         goto err;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "470:     {",
          "471:         MsgToEventLog(M_SYSERR, TEXT(\"malformed startup data: 1 byte received\"));",
          "472:         ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);",
          "474:     }",
          "476:     data = malloc(bytes);",
          "",
          "[Removed Lines]",
          "473:         goto out;",
          "",
          "[Added Lines]",
          "472:         goto err;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "478:     {",
          "479:         MsgToEventLog(M_SYSERR, TEXT(\"malloc failed\"));",
          "480:         ReturnLastError(pipe, L\"malloc\");",
          "482:     }",
          "484:     read = ReadPipeAsync(pipe, data, bytes, 1, &exit_event);",
          "",
          "[Removed Lines]",
          "481:         goto out;",
          "",
          "[Added Lines]",
          "480:         goto err;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "486:     {",
          "487:         MsgToEventLog(M_SYSERR, TEXT(\"ReadPipeAsync failed\"));",
          "488:         ReturnLastError(pipe, L\"ReadPipeAsync\");",
          "490:     }",
          "492:     if (data[size - 1] != 0)",
          "493:     {",
          "494:         MsgToEventLog(M_ERR, TEXT(\"Startup data is not NULL terminated\"));",
          "495:         ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);",
          "497:     }",
          "499:     sud->directory = data;",
          "",
          "[Removed Lines]",
          "489:         goto out;",
          "496:         goto out;",
          "",
          "[Added Lines]",
          "488:         goto err;",
          "495:         goto err;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "503:     {",
          "504:         MsgToEventLog(M_ERR, TEXT(\"Startup data ends at working directory\"));",
          "505:         ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);",
          "507:     }",
          "509:     sud->options = sud->directory + len;",
          "",
          "[Removed Lines]",
          "506:         goto out;",
          "",
          "[Added Lines]",
          "505:         goto err;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "513:     {",
          "514:         MsgToEventLog(M_ERR, TEXT(\"Startup data ends at command line options\"));",
          "515:         ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);",
          "517:     }",
          "519:     sud->std_input = sud->options + len;",
          "524:     free(data);",
          "526: }",
          "",
          "[Removed Lines]",
          "516:         goto out;",
          "521:     ret = TRUE;",
          "523: out:",
          "525:     return ret;",
          "",
          "[Added Lines]",
          "515:         goto err;",
          "519:     return TRUE;",
          "521: err:",
          "524:     return FALSE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f20808c8f37301c43d822f6a22d30b3587abc57",
      "candidate_info": {
        "commit_hash": "6f20808c8f37301c43d822f6a22d30b3587abc57",
        "repo": "OpenVPN/openvpn",
        "commit_url": "https://github.com/OpenVPN/openvpn/commit/6f20808c8f37301c43d822f6a22d30b3587abc57",
        "files": [
          "src/openvpnserv/interactive.c"
        ],
        "message": "Avoid illegal memory access when malformed data is read from the pipe\n\n- If only 1 byte is read from the interactive service client pipe, that\n  evaluates to zero wide characters and subsequent check for NUL\n  termination in the data buffer segfaults.\n  Fix: reject clients that send less than a complete wide character.\n\nSigned-off-by: Selva Nair <selva.nair@gmail.com>\nAcked-by: Gert Doering <gert@greenie.muc.de>\nMessage-Id: <1508520356-18277-1-git-send-email-selva.nair@gmail.com>\nURL: https://www.mail-archive.com/openvpn-devel@lists.sourceforge.net/msg15657.html\nSigned-off-by: Gert Doering <gert@greenie.muc.de>",
        "before_after_code_files": [
          "src/openvpnserv/interactive.c||src/openvpnserv/interactive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/openvpnserv/interactive.c||src/openvpnserv/interactive.c"
          ],
          "candidate": [
            "src/openvpnserv/interactive.c||src/openvpnserv/interactive.c"
          ]
        }
      },
      "candidate_diff": {
        "src/openvpnserv/interactive.c||src/openvpnserv/interactive.c": [
          "File: src/openvpnserv/interactive.c -> src/openvpnserv/interactive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "466:     }",
          "468:     size = bytes / sizeof(*data);",
          "469:     data = malloc(bytes);",
          "470:     if (data == NULL)",
          "471:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "469:     if (size == 0)",
          "470:     {",
          "471:         MsgToEventLog(M_SYSERR, TEXT(\"malformed startup data: 1 byte received\"));",
          "472:         ReturnError(pipe, ERROR_STARTUP_DATA, L\"GetStartupData\", 1, &exit_event);",
          "473:         goto out;",
          "474:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}