{
  "cve_id": "CVE-2018-19622",
  "cve_desc": "In Wireshark 2.6.0 to 2.6.4 and 2.4.0 to 2.4.10, the MMSE dissector could go into an infinite loop. This was addressed in epan/dissectors/packet-mmse.c by preventing length overflows.",
  "repo": "wireshark/wireshark",
  "patch_hash": "1ddaf1a0944ffe95d69717ac9fdc60824932f676",
  "patch_info": {
    "commit_hash": "1ddaf1a0944ffe95d69717ac9fdc60824932f676",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/1ddaf1a0944ffe95d69717ac9fdc60824932f676",
    "files": [
      "epan/dissectors/packet-mmse.c"
    ],
    "message": "MMSE: catch length overflows to avoid infinite loop.\n\nAfter fetching a length from the packet ensure those bytes exist to\navoid integer overflows by callers (while avoiding having to ensure\nevery caller checks for overflows).\n\nAlso add a check to ensure the loop in question is progressing through\nthe TVB; report a dissector bug if it doesn't.\n\nBug: 15250\nChange-Id: I9434bfe9d530942fd45342690383df2decacdba1\nReviewed-on: https://code.wireshark.org/review/30560\nPetri-Dish: Jeff Morriss <jeff.morriss.ws@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-mmse.c||epan/dissectors/packet-mmse.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-mmse.c||epan/dissectors/packet-mmse.c": [
      "File: epan/dissectors/packet-mmse.c -> epan/dissectors/packet-mmse.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "487:         field = tvb_get_guintvar(tvb, offset, byte_count, pinfo, &ei_mmse_oversized_uintvar);",
      "488:         (*byte_count)++;",
      "489:     }",
      "490:     return field;",
      "491: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "495:     tvb_ensure_bytes_exist(tvb, offset, field);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: dissect_mmse(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, guint8 pdut,",
      "690:         const char *message_type)",
      "691: {",
      "693:     guint8       field = 0;",
      "694:     const char   *strval;",
      "695:     guint        length;",
      "",
      "[Removed Lines]",
      "692:     guint        offset;",
      "",
      "[Added Lines]",
      "698:     guint        offset, old_offset;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "711:     proto_tree_add_uint(mmse_tree, hf_mmse_message_type, tvb, 0, 2, pdut);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "720:     old_offset = 1;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1209:                 break;",
      "1210:         }",
      "1211:         DebugLog((\"\\tEnd(case)\\n\"));",
      "1212:     }",
      "1214:     DebugLog((\"\\tEnd(switch)\\n\"));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1220:         if (offset <= old_offset) {",
      "1221:             REPORT_DISSECTOR_BUG(\"Offset isn't increasing (offset=%u, old offset=%u)\", offset, old_offset);",
      "1222:         }",
      "1223:         old_offset = offset;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1dddeff9850e9f4a47c43f0fe02776a24fab0e19",
      "candidate_info": {
        "commit_hash": "1dddeff9850e9f4a47c43f0fe02776a24fab0e19",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1dddeff9850e9f4a47c43f0fe02776a24fab0e19",
        "files": [
          "epan/dissectors/packet-mmse.c"
        ],
        "message": "MMSE: catch length overflows to avoid infinite loop.\n\nAfter fetching a length from the packet ensure those bytes exist to\navoid integer overflows by callers (while avoiding having to ensure\nevery caller checks for overflows).\n\nAlso add a check to ensure the loop in question is progressing through\nthe TVB; report a dissector bug if it doesn't.\n\nBug: 15250\nBug: 15246\nChange-Id: I9434bfe9d530942fd45342690383df2decacdba1\nReviewed-on: https://code.wireshark.org/review/30560\nPetri-Dish: Jeff Morriss <jeff.morriss.ws@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 1ddaf1a0944ffe95d69717ac9fdc60824932f676)\nReviewed-on: https://code.wireshark.org/review/30613\nReviewed-by: Jeff Morriss <jeff.morriss.ws@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-mmse.c||epan/dissectors/packet-mmse.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-mmse.c||epan/dissectors/packet-mmse.c"
          ],
          "candidate": [
            "epan/dissectors/packet-mmse.c||epan/dissectors/packet-mmse.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-mmse.c||epan/dissectors/packet-mmse.c": [
          "File: epan/dissectors/packet-mmse.c -> epan/dissectors/packet-mmse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "487:         field = tvb_get_guintvar(tvb, offset, byte_count, pinfo, &ei_mmse_oversized_uintvar);",
          "488:         (*byte_count)++;",
          "489:     }",
          "490:     return field;",
          "491: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "495:     tvb_ensure_bytes_exist(tvb, offset, field);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "689: dissect_mmse(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, guint8 pdut,",
          "690:         const char *message_type)",
          "691: {",
          "693:     guint8       field = 0;",
          "694:     const char   *strval;",
          "695:     guint        length;",
          "",
          "[Removed Lines]",
          "692:     guint        offset;",
          "",
          "[Added Lines]",
          "698:     guint        offset, old_offset;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "711:     proto_tree_add_uint(mmse_tree, hf_mmse_message_type, tvb, 0, 2, pdut);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "720:     old_offset = 1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1209:                 break;",
          "1210:         }",
          "1211:         DebugLog((\"\\tEnd(case)\\n\"));",
          "1212:     }",
          "1214:     DebugLog((\"\\tEnd(switch)\\n\"));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1220:         if (offset <= old_offset) {",
          "1221:             REPORT_DISSECTOR_BUG(\"Offset isn't increasing (offset=%u, old offset=%u)\", offset, old_offset);",
          "1222:         }",
          "1223:         old_offset = offset;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b7555d32d11862f0e500ec466ad6bfe54190076",
      "candidate_info": {
        "commit_hash": "3b7555d32d11862f0e500ec466ad6bfe54190076",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/3b7555d32d11862f0e500ec466ad6bfe54190076",
        "files": [
          "epan/dissectors/packet-mmse.c"
        ],
        "message": "MMSE: catch length overflows to avoid infinite loop.\n\nAfter fetching a length from the packet ensure those bytes exist to\navoid integer overflows by callers (while avoiding having to ensure\nevery caller checks for overflows).\n\nAlso add a check to ensure the loop in question is progressing through\nthe TVB; report a dissector bug if it doesn't.\n\nBug: 15250\nBug: 15246\nChange-Id: I9434bfe9d530942fd45342690383df2decacdba1\nReviewed-on: https://code.wireshark.org/review/30560\nPetri-Dish: Jeff Morriss <jeff.morriss.ws@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 1ddaf1a0944ffe95d69717ac9fdc60824932f676)\nReviewed-on: https://code.wireshark.org/review/30673\nReviewed-by: Jeff Morriss <jeff.morriss.ws@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-mmse.c||epan/dissectors/packet-mmse.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-mmse.c||epan/dissectors/packet-mmse.c"
          ],
          "candidate": [
            "epan/dissectors/packet-mmse.c||epan/dissectors/packet-mmse.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-mmse.c||epan/dissectors/packet-mmse.c": [
          "File: epan/dissectors/packet-mmse.c -> epan/dissectors/packet-mmse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "499:         field = tvb_get_guintvar(tvb, offset, byte_count, pinfo, &ei_mmse_oversized_uintvar);",
          "500:         (*byte_count)++;",
          "501:     }",
          "502:     return field;",
          "503: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "507:     tvb_ensure_bytes_exist(tvb, offset, field);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "701: dissect_mmse(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, guint8 pdut,",
          "702:         const char *message_type)",
          "703: {",
          "705:     guint8       field = 0;",
          "706:     const char   *strval;",
          "707:     guint        length;",
          "",
          "[Removed Lines]",
          "704:     guint        offset;",
          "",
          "[Added Lines]",
          "710:     guint        offset, old_offset;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "723:     proto_tree_add_uint(mmse_tree, hf_mmse_message_type, tvb, 0, 2, pdut);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "732:     old_offset = 1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1221:                 break;",
          "1222:         }",
          "1223:         DebugLog((\"\\tEnd(case)\\n\"));",
          "1224:     }",
          "1226:     DebugLog((\"\\tEnd(switch)\\n\"));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1232:         if (offset <= old_offset) {",
          "1233:             REPORT_DISSECTOR_BUG(\"Offset isn't increasing\");",
          "1234:         }",
          "1235:         old_offset = offset;",
          "",
          "---------------"
        ]
      }
    }
  ]
}