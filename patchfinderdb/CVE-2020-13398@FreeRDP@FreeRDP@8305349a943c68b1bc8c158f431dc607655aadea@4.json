{
  "cve_id": "CVE-2020-13398",
  "cve_desc": "An issue was discovered in FreeRDP before 2.1.1. An out-of-bounds (OOB) write vulnerability has been detected in crypto_rsa_common in libfreerdp/crypto/crypto.c.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "8305349a943c68b1bc8c158f431dc607655aadea",
  "patch_info": {
    "commit_hash": "8305349a943c68b1bc8c158f431dc607655aadea",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/8305349a943c68b1bc8c158f431dc607655aadea",
    "files": [
      "libfreerdp/crypto/crypto.c"
    ],
    "message": "Fixed  GHSL-2020-102 heap overflow\n\n(cherry picked from commit 197b16cc15a12813c2e4fa2d6ae9cd9c4a57e581)",
    "before_after_code_files": [
      "libfreerdp/crypto/crypto.c||libfreerdp/crypto/crypto.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/crypto/crypto.c||libfreerdp/crypto/crypto.c": [
      "File: libfreerdp/crypto/crypto.c -> libfreerdp/crypto/crypto.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "96: static int crypto_rsa_common(const BYTE* input, int length, UINT32 key_length, const BYTE* modulus,",
      "97:                              const BYTE* exponent, int exponent_size, BYTE* output)",
      "98: {",
      "100:  int output_length = -1;",
      "107:  if (!input_reverse)",
      "108:   return -1;",
      "",
      "[Removed Lines]",
      "99:  BN_CTX* ctx;",
      "101:  BYTE* input_reverse;",
      "102:  BYTE* modulus_reverse;",
      "103:  BYTE* exponent_reverse;",
      "104:  BIGNUM *mod, *exp, *x, *y;",
      "105:  input_reverse = (BYTE*)malloc(2 * key_length + exponent_size);",
      "",
      "[Added Lines]",
      "99:  BN_CTX* ctx = NULL;",
      "101:  BYTE* input_reverse = NULL;",
      "102:  BYTE* modulus_reverse = NULL;",
      "103:  BYTE* exponent_reverse = NULL;",
      "104:  BIGNUM* mod = NULL;",
      "105:  BIGNUM* exp = NULL;",
      "106:  BIGNUM* x = NULL;",
      "107:  BIGNUM* y = NULL;",
      "108:  size_t bufferSize = 2 * key_length + exponent_size;",
      "110:  if (!input || (length < 0) || (exponent_size < 0) || !modulus || !exponent || !output)",
      "111:   return -1;",
      "113:  if (length > bufferSize)",
      "114:   bufferSize = length;",
      "116:  input_reverse = (BYTE*)calloc(bufferSize, 1);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "131:  if (!(y = BN_new()))",
      "132:   goto fail_bn_y;",
      "138:  output_length = BN_bn2bin(y, output);",
      "139:  crypto_reverse(output, output_length);",
      "142:   memset(output + output_length, 0, key_length - output_length);",
      "144:  BN_free(y);",
      "145: fail_bn_y:",
      "146:  BN_clear_free(x);",
      "",
      "[Removed Lines]",
      "134:  BN_bin2bn(modulus_reverse, key_length, mod);",
      "135:  BN_bin2bn(exponent_reverse, exponent_size, exp);",
      "136:  BN_bin2bn(input_reverse, length, x);",
      "137:  BN_mod_exp(y, x, exp, mod, ctx);",
      "141:  if (output_length < (int)key_length)",
      "",
      "[Added Lines]",
      "145:  if (!BN_bin2bn(modulus_reverse, key_length, mod))",
      "146:   goto fail;",
      "148:  if (!BN_bin2bn(exponent_reverse, exponent_size, exp))",
      "149:   goto fail;",
      "150:  if (!BN_bin2bn(input_reverse, length, x))",
      "151:   goto fail;",
      "152:  if (BN_mod_exp(y, x, exp, mod, ctx) != 1)",
      "153:   goto fail;",
      "155:  if (output_length < 0)",
      "156:   goto fail;",
      "159:  if (output_length < key_length)",
      "162: fail:",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "47b4867729c0b9e636a3466e3bad81ce94767b13",
      "candidate_info": {
        "commit_hash": "47b4867729c0b9e636a3466e3bad81ce94767b13",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/47b4867729c0b9e636a3466e3bad81ce94767b13",
        "files": [
          "channels/audin/client/audin_main.c",
          "channels/disp/client/disp_main.c",
          "channels/echo/client/echo_main.c",
          "channels/geometry/client/geometry_main.c",
          "channels/rdpei/client/rdpei_main.c",
          "channels/rdpgfx/client/rdpgfx_main.c",
          "channels/rdpsnd/client/rdpsnd_main.c",
          "channels/urbdrc/client/urbdrc_main.c",
          "channels/video/client/video_main.c"
        ],
        "message": "Destroy channel listeners on terminate\n\n(cherry picked from commit 2f5e5359f60c26a2de244cd6d9f7957b039cd121)",
        "before_after_code_files": [
          "channels/audin/client/audin_main.c||channels/audin/client/audin_main.c",
          "channels/disp/client/disp_main.c||channels/disp/client/disp_main.c",
          "channels/echo/client/echo_main.c||channels/echo/client/echo_main.c",
          "channels/geometry/client/geometry_main.c||channels/geometry/client/geometry_main.c",
          "channels/rdpei/client/rdpei_main.c||channels/rdpei/client/rdpei_main.c",
          "channels/rdpgfx/client/rdpgfx_main.c||channels/rdpgfx/client/rdpgfx_main.c",
          "channels/rdpsnd/client/rdpsnd_main.c||channels/rdpsnd/client/rdpsnd_main.c",
          "channels/urbdrc/client/urbdrc_main.c||channels/urbdrc/client/urbdrc_main.c",
          "channels/video/client/video_main.c||channels/video/client/video_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/audin/client/audin_main.c||channels/audin/client/audin_main.c": [
          "File: channels/audin/client/audin_main.c -> channels/audin/client/audin_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "687:  audin->listener_callback->plugin = pPlugin;",
          "688:  audin->listener_callback->channel_mgr = pChannelMgr;",
          "689:  return pChannelMgr->CreateListener(pChannelMgr, \"AUDIO_INPUT\", 0,",
          "691: }",
          "",
          "[Removed Lines]",
          "690:                                     (IWTSListenerCallback*)audin->listener_callback, NULL);",
          "",
          "[Added Lines]",
          "690:                                     &audin->listener_callback->iface, NULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "704:   return CHANNEL_RC_BAD_CHANNEL_HANDLE;",
          "706:  WLog_Print(audin->log, WLOG_TRACE, \"...\");",
          "707:  audio_formats_free(audin->fixed_format, 1);",
          "709:  if (audin->device)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "708:  if (audin->listener_callback)",
          "709:  {",
          "710:   IWTSVirtualChannelManager* mgr = audin->listener_callback->channel_mgr;",
          "711:   if (mgr)",
          "712:    IFCALL(mgr->DestroyListener, mgr, &audin->iface);",
          "713:  }",
          "",
          "---------------"
        ],
        "channels/disp/client/disp_main.c||channels/disp/client/disp_main.c": [
          "File: channels/disp/client/disp_main.c -> channels/disp/client/disp_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:  disp->listener_callback->plugin = pPlugin;",
          "309:  disp->listener_callback->channel_mgr = pChannelMgr;",
          "310:  status = pChannelMgr->CreateListener(pChannelMgr, DISP_DVC_CHANNEL_NAME, 0,",
          "313:  disp->listener->pInterface = disp->iface.pInterface;",
          "314:  return status;",
          "315: }",
          "",
          "[Removed Lines]",
          "311:                                       (IWTSListenerCallback*)disp->listener_callback,",
          "312:                                       &(disp->listener));",
          "",
          "[Added Lines]",
          "311:                                       &disp->listener_callback->iface, &(disp->listener));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322: static UINT disp_plugin_terminated(IWTSPlugin* pPlugin)",
          "323: {",
          "324:  DISP_PLUGIN* disp = (DISP_PLUGIN*)pPlugin;",
          "325:  free(disp->listener_callback);",
          "326:  free(disp->iface.pInterface);",
          "327:  free(pPlugin);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "325:  if (disp && disp->listener_callback)",
          "326:  {",
          "327:   IWTSVirtualChannelManager* mgr = disp->listener_callback->channel_mgr;",
          "328:   if (mgr)",
          "329:    IFCALL(mgr->DestroyListener, mgr, &disp->iface);",
          "330:  }",
          "",
          "---------------"
        ],
        "channels/echo/client/echo_main.c||channels/echo/client/echo_main.c": [
          "File: channels/echo/client/echo_main.c -> channels/echo/client/echo_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:  echo->listener_callback->plugin = pPlugin;",
          "143:  echo->listener_callback->channel_mgr = pChannelMgr;",
          "147: }",
          "",
          "[Removed Lines]",
          "145:  return pChannelMgr->CreateListener(pChannelMgr, \"ECHO\", 0,",
          "146:                                     (IWTSListenerCallback*)echo->listener_callback, NULL);",
          "",
          "[Added Lines]",
          "145:  return pChannelMgr->CreateListener(pChannelMgr, \"ECHO\", 0, &echo->listener_callback->iface,",
          "146:                                     NULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "154: static UINT echo_plugin_terminated(IWTSPlugin* pPlugin)",
          "155: {",
          "156:  ECHO_PLUGIN* echo = (ECHO_PLUGIN*)pPlugin;",
          "158:  free(echo);",
          "160:  return CHANNEL_RC_OK;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "157:  if (echo && echo->listener_callback)",
          "158:  {",
          "159:   IWTSVirtualChannelManager* mgr = echo->listener_callback->channel_mgr;",
          "160:   if (mgr)",
          "161:    IFCALL(mgr->DestroyListener, mgr, &echo->iface);",
          "162:  }",
          "",
          "---------------"
        ],
        "channels/geometry/client/geometry_main.c||channels/geometry/client/geometry_main.c": [
          "File: channels/geometry/client/geometry_main.c -> channels/geometry/client/geometry_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "410:  geometry->listener_callback->iface.OnNewChannelConnection = geometry_on_new_channel_connection;",
          "411:  geometry->listener_callback->plugin = pPlugin;",
          "412:  geometry->listener_callback->channel_mgr = pChannelMgr;",
          "416:  geometry->listener->pInterface = geometry->iface.pInterface;",
          "417:  return status;",
          "418: }",
          "",
          "[Removed Lines]",
          "413:  status = pChannelMgr->CreateListener(pChannelMgr, GEOMETRY_DVC_CHANNEL_NAME, 0,",
          "414:                                       (IWTSListenerCallback*)geometry->listener_callback,",
          "415:                                       &(geometry->listener));",
          "",
          "[Added Lines]",
          "413:  status =",
          "414:      pChannelMgr->CreateListener(pChannelMgr, GEOMETRY_DVC_CHANNEL_NAME, 0,",
          "415:                                  &geometry->listener_callback->iface, &(geometry->listener));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "427:  GEOMETRY_PLUGIN* geometry = (GEOMETRY_PLUGIN*)pPlugin;",
          "428:  GeometryClientContext* context = (GeometryClientContext*)geometry->iface.pInterface;",
          "430:  if (context)",
          "431:   HashTable_Free(context->geometries);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "430:  if (geometry && geometry->listener_callback)",
          "431:  {",
          "432:   IWTSVirtualChannelManager* mgr = geometry->listener_callback->channel_mgr;",
          "433:   if (mgr)",
          "434:    IFCALL(mgr->DestroyListener, mgr, &geometry->iface);",
          "435:  }",
          "",
          "---------------"
        ],
        "channels/rdpei/client/rdpei_main.c||channels/rdpei/client/rdpei_main.c": [
          "File: channels/rdpei/client/rdpei_main.c -> channels/rdpei/client/rdpei_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "571:  rdpei->listener_callback->channel_mgr = pChannelMgr;",
          "573:  if ((error = pChannelMgr->CreateListener(pChannelMgr, RDPEI_DVC_CHANNEL_NAME, 0,",
          "576:  {",
          "577:   WLog_ERR(TAG, \"ChannelMgr->CreateListener failed with error %\" PRIu32 \"!\", error);",
          "578:   goto error_out;",
          "",
          "[Removed Lines]",
          "574:                                           (IWTSListenerCallback*)rdpei->listener_callback,",
          "575:                                           &(rdpei->listener))))",
          "",
          "[Added Lines]",
          "574:                                           &rdpei->listener_callback->iface, &(rdpei->listener))))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "598:  if (!pPlugin)",
          "599:   return ERROR_INVALID_PARAMETER;",
          "601:  free(rdpei->listener_callback);",
          "602:  free(rdpei->context);",
          "603:  free(rdpei);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "600:  if (rdpei && rdpei->listener_callback)",
          "601:  {",
          "602:   IWTSVirtualChannelManager* mgr = rdpei->listener_callback->channel_mgr;",
          "603:   if (mgr)",
          "604:    IFCALL(mgr->DestroyListener, mgr, &rdpei->iface);",
          "605:  }",
          "",
          "---------------"
        ],
        "channels/rdpgfx/client/rdpgfx_main.c||channels/rdpgfx/client/rdpgfx_main.c": [
          "File: channels/rdpgfx/client/rdpgfx_main.c -> channels/rdpgfx/client/rdpgfx_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1896:  gfx->listener_callback->plugin = pPlugin;",
          "1897:  gfx->listener_callback->channel_mgr = pChannelMgr;",
          "1898:  error = pChannelMgr->CreateListener(pChannelMgr, RDPGFX_DVC_CHANNEL_NAME, 0,",
          "1901:  gfx->listener->pInterface = gfx->iface.pInterface;",
          "1902:  DEBUG_RDPGFX(gfx->log, \"Initialize\");",
          "1903:  return error;",
          "",
          "[Removed Lines]",
          "1899:                                      (IWTSListenerCallback*)gfx->listener_callback,",
          "1900:                                      &(gfx->listener));",
          "",
          "[Added Lines]",
          "1899:                                      &gfx->listener_callback->iface, &(gfx->listener));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1913:  RDPGFX_PLUGIN* gfx = (RDPGFX_PLUGIN*)pPlugin;",
          "1914:  RdpgfxClientContext* context = (RdpgfxClientContext*)gfx->iface.pInterface;",
          "1915:  DEBUG_RDPGFX(gfx->log, \"Terminated\");",
          "1916:  rdpgfx_client_context_free(context);",
          "1917:  return CHANNEL_RC_OK;",
          "1918: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1915:  if (gfx && gfx->listener_callback)",
          "1916:  {",
          "1917:   IWTSVirtualChannelManager* mgr = gfx->listener_callback->channel_mgr;",
          "1918:   if (mgr)",
          "1919:    IFCALL(mgr->DestroyListener, mgr, &gfx->iface);",
          "1920:  }",
          "",
          "---------------"
        ],
        "channels/rdpsnd/client/rdpsnd_main.c||channels/rdpsnd/client/rdpsnd_main.c": [
          "File: channels/rdpsnd/client/rdpsnd_main.c -> channels/rdpsnd/client/rdpsnd_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1541:  rdpsnd->listener_callback->plugin = pPlugin;",
          "1542:  rdpsnd->listener_callback->channel_mgr = pChannelMgr;",
          "1543:  status = pChannelMgr->CreateListener(pChannelMgr, RDPSND_DVC_CHANNEL_NAME, 0,",
          "1546:  rdpsnd->listener->pInterface = rdpsnd->iface.pInterface;",
          "1547:  return rdpsnd_virtual_channel_event_initialized(rdpsnd);",
          "1548: }",
          "",
          "[Removed Lines]",
          "1544:                                       (IWTSListenerCallback*)rdpsnd->listener_callback,",
          "1545:                                       &(rdpsnd->listener));",
          "",
          "[Added Lines]",
          "1544:                                       &rdpsnd->listener_callback->iface, &(rdpsnd->listener));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1557:  rdpsndPlugin* rdpsnd = (rdpsndPlugin*)pPlugin;",
          "1558:  if (rdpsnd)",
          "1559:  {",
          "1560:   free(rdpsnd->listener_callback);",
          "1561:   free(rdpsnd->iface.pInterface);",
          "1562:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1559:   if (rdpsnd->listener_callback)",
          "1560:   {",
          "1561:    IWTSVirtualChannelManager* mgr = rdpsnd->listener_callback->channel_mgr;",
          "1562:    if (mgr)",
          "1563:     IFCALL(mgr->DestroyListener, mgr, &rdpsnd->iface);",
          "1564:   }",
          "",
          "---------------"
        ],
        "channels/urbdrc/client/urbdrc_main.c||channels/urbdrc/client/urbdrc_main.c": [
          "File: channels/urbdrc/client/urbdrc_main.c -> channels/urbdrc/client/urbdrc_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "710:  if (!urbdrc)",
          "711:   return ERROR_INVALID_DATA;",
          "713:  udevman = urbdrc->udevman;",
          "715:  if (udevman)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "712:  if (urbdrc->listener_callback)",
          "713:  {",
          "714:   IWTSVirtualChannelManager* mgr = urbdrc->listener_callback->channel_mgr;",
          "715:   if (mgr)",
          "716:    IFCALL(mgr->DestroyListener, mgr, &urbdrc->iface);",
          "717:  }",
          "",
          "---------------"
        ],
        "channels/video/client/video_main.c||channels/video/client/video_main.c": [
          "File: channels/video/client/video_main.c -> channels/video/client/video_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1048:  callback->channel_mgr = channelMgr;",
          "1050:  status = channelMgr->CreateListener(channelMgr, VIDEO_CONTROL_DVC_CHANNEL_NAME, 0,",
          "1053:  if (status != CHANNEL_RC_OK)",
          "1054:   return status;",
          "",
          "[Removed Lines]",
          "1051:                                      (IWTSListenerCallback*)callback, &(video->controlListener));",
          "",
          "[Added Lines]",
          "1051:                                      &callback->iface, &(video->controlListener));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1067:  callback->channel_mgr = channelMgr;",
          "1069:  status = channelMgr->CreateListener(channelMgr, VIDEO_DATA_DVC_CHANNEL_NAME, 0,",
          "1072:  if (status == CHANNEL_RC_OK)",
          "1073:   video->dataListener->pInterface = video->wtsPlugin.pInterface;",
          "",
          "[Removed Lines]",
          "1070:                                      (IWTSListenerCallback*)callback, &(video->dataListener));",
          "",
          "[Added Lines]",
          "1070:                                      &callback->iface, &(video->dataListener));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1084: {",
          "1085:  VIDEO_PLUGIN* video = (VIDEO_PLUGIN*)pPlugin;",
          "1087:  if (video->context)",
          "1088:   VideoClientContextPriv_free(video->context->priv);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1087:  if (video->control_callback)",
          "1088:  {",
          "1089:   IWTSVirtualChannelManager* mgr = video->control_callback->channel_mgr;",
          "1090:   if (mgr)",
          "1091:    IFCALL(mgr->DestroyListener, mgr, &video->control_callback->iface);",
          "1092:  }",
          "1093:  if (video->data_callback)",
          "1094:  {",
          "1095:   IWTSVirtualChannelManager* mgr = video->data_callback->channel_mgr;",
          "1096:   if (mgr)",
          "1097:    IFCALL(mgr->DestroyListener, mgr, &video->data_callback->iface);",
          "1098:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ab56ab14c8b3e5416eee1777d5c47333dfea852",
      "candidate_info": {
        "commit_hash": "7ab56ab14c8b3e5416eee1777d5c47333dfea852",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/7ab56ab14c8b3e5416eee1777d5c47333dfea852",
        "files": [
          "winpr/libwinpr/utils/collections/PubSub.c"
        ],
        "message": "Fixed #6201: event handler count check\n\n(cherry picked from commit 018eaa44f52b3e9e33bfa80493faf9be57713a3d)",
        "before_after_code_files": [
          "winpr/libwinpr/utils/collections/PubSub.c||winpr/libwinpr/utils/collections/PubSub.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "winpr/libwinpr/utils/collections/PubSub.c||winpr/libwinpr/utils/collections/PubSub.c": [
          "File: winpr/libwinpr/utils/collections/PubSub.c -> winpr/libwinpr/utils/collections/PubSub.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:  {",
          "113:   status = 0;",
          "120:   else",
          "122:    status = -1;",
          "124:  }",
          "126:  if (pubSub->synchronized)",
          "",
          "[Removed Lines]",
          "115:   if (event->EventHandlerCount <= MAX_EVENT_HANDLERS)",
          "116:   {",
          "117:    event->EventHandlers[event->EventHandlerCount] = EventHandler;",
          "118:    event->EventHandlerCount++;",
          "119:   }",
          "121:   {",
          "123:   }",
          "",
          "[Added Lines]",
          "115:   if (event->EventHandlerCount < MAX_EVENT_HANDLERS)",
          "116:    event->EventHandlers[event->EventHandlerCount++] = EventHandler;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37158cd17f02c64177c8047ca283d1fa22026c7e",
      "candidate_info": {
        "commit_hash": "37158cd17f02c64177c8047ca283d1fa22026c7e",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/37158cd17f02c64177c8047ca283d1fa22026c7e",
        "files": [
          "libfreerdp/codec/planar.c"
        ],
        "message": "Fixed UndefinedBehaviour in planar left shift\n\n(cherry picked from commit 328691c46597c194f01a77a9d33d58b2faa88c9d)",
        "before_after_code_files": [
          "libfreerdp/codec/planar.c||libfreerdp/codec/planar.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/codec/planar.c||libfreerdp/codec/planar.c": [
          "File: libfreerdp/codec/planar.c -> libfreerdp/codec/planar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1170:                                                BYTE* outPlane)",
          "1171: {",
          "1172:  char s2c;",
          "1174:  UINT32 y, x;",
          "1175:  BYTE* outPtr;",
          "1176:  const BYTE *srcPtr, *prevLinePtr;",
          "",
          "[Removed Lines]",
          "1173:  INT32 delta;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1194:  {",
          "1195:   for (x = 0; x < width; x++, outPtr++, srcPtr++, prevLinePtr++)",
          "1196:   {",
          "1198:    s2c = (delta >= 0) ? (char)delta : (char)(~((BYTE)(-delta)) + 1);",
          "1201:   }",
          "1202:  }",
          "",
          "[Removed Lines]",
          "1197:    delta = *srcPtr - *prevLinePtr;",
          "1199:    s2c = (s2c >= 0) ? (s2c << 1) : (char)(((~((BYTE)s2c) + 1) << 1) - 1);",
          "",
          "[Added Lines]",
          "1196:    INT32 delta = *srcPtr - *prevLinePtr;",
          "1198:    s2c = (s2c >= 0) ? ((UINT32)s2c << 1) : (char)(((UINT32)(~((BYTE)s2c) + 1) << 1) - 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3fe4650b2c4d09852fc5339f6e1d91fa24213c15",
      "candidate_info": {
        "commit_hash": "3fe4650b2c4d09852fc5339f6e1d91fa24213c15",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/3fe4650b2c4d09852fc5339f6e1d91fa24213c15",
        "files": [
          "channels/audin/client/audin_main.c",
          "channels/disp/client/disp_main.c",
          "channels/drdynvc/client/drdynvc_main.c",
          "channels/echo/client/echo_main.c",
          "channels/geometry/client/geometry_main.c",
          "channels/rdpei/client/rdpei_main.c",
          "channels/rdpgfx/client/rdpgfx_main.c",
          "channels/rdpsnd/client/rdpsnd_main.c",
          "channels/urbdrc/client/urbdrc_main.c",
          "channels/urbdrc/client/urbdrc_main.h",
          "channels/video/client/video_main.c"
        ],
        "message": "Fixed DestroyListener arguments and call order\n\n(cherry picked from commit 0e08727d4ecff2777884a23bc33961f63d52465e)",
        "before_after_code_files": [
          "channels/audin/client/audin_main.c||channels/audin/client/audin_main.c",
          "channels/disp/client/disp_main.c||channels/disp/client/disp_main.c",
          "channels/drdynvc/client/drdynvc_main.c||channels/drdynvc/client/drdynvc_main.c",
          "channels/echo/client/echo_main.c||channels/echo/client/echo_main.c",
          "channels/geometry/client/geometry_main.c||channels/geometry/client/geometry_main.c",
          "channels/rdpei/client/rdpei_main.c||channels/rdpei/client/rdpei_main.c",
          "channels/rdpgfx/client/rdpgfx_main.c||channels/rdpgfx/client/rdpgfx_main.c",
          "channels/rdpsnd/client/rdpsnd_main.c||channels/rdpsnd/client/rdpsnd_main.c",
          "channels/urbdrc/client/urbdrc_main.c||channels/urbdrc/client/urbdrc_main.c",
          "channels/urbdrc/client/urbdrc_main.h||channels/urbdrc/client/urbdrc_main.h",
          "channels/video/client/video_main.c||channels/video/client/video_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/audin/client/audin_main.c||channels/audin/client/audin_main.c": [
          "File: channels/audin/client/audin_main.c -> channels/audin/client/audin_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:  FREERDP_DSP_CONTEXT* dsp_context;",
          "102:  wLog* log;",
          "103: };",
          "105: static BOOL audin_process_addin_args(AUDIN_PLUGIN* audin, ADDIN_ARGV* args);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:  IWTSListener* listener;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "687:  audin->listener_callback->plugin = pPlugin;",
          "688:  audin->listener_callback->channel_mgr = pChannelMgr;",
          "689:  return pChannelMgr->CreateListener(pChannelMgr, \"AUDIO_INPUT\", 0,",
          "691: }",
          "",
          "[Removed Lines]",
          "690:                                     &audin->listener_callback->iface, NULL);",
          "",
          "[Added Lines]",
          "692:                                     &audin->listener_callback->iface, &audin->listener);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "709:  {",
          "710:   IWTSVirtualChannelManager* mgr = audin->listener_callback->channel_mgr;",
          "711:   if (mgr)",
          "713:  }",
          "714:  audio_formats_free(audin->fixed_format, 1);",
          "",
          "[Removed Lines]",
          "712:    IFCALL(mgr->DestroyListener, mgr, &audin->iface);",
          "",
          "[Added Lines]",
          "714:    IFCALL(mgr->DestroyListener, mgr, audin->listener);",
          "",
          "---------------"
        ],
        "channels/disp/client/disp_main.c||channels/disp/client/disp_main.c": [
          "File: channels/disp/client/disp_main.c -> channels/disp/client/disp_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:  {",
          "327:   IWTSVirtualChannelManager* mgr = disp->listener_callback->channel_mgr;",
          "328:   if (mgr)",
          "330:  }",
          "332:  free(disp->listener_callback);",
          "",
          "[Removed Lines]",
          "329:    IFCALL(mgr->DestroyListener, mgr, &disp->iface);",
          "",
          "[Added Lines]",
          "329:    IFCALL(mgr->DestroyListener, mgr, disp->listener);",
          "",
          "---------------"
        ],
        "channels/drdynvc/client/drdynvc_main.c||channels/drdynvc/client/drdynvc_main.c": [
          "File: channels/drdynvc/client/drdynvc_main.c -> channels/drdynvc/client/drdynvc_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:   WLog_ERR(TAG, \"Terminated failed with error %\" PRIu32 \"!\", error);",
          "218: }",
          "220: static IWTSVirtualChannelManager* dvcman_new(drdynvcPlugin* plugin)",
          "221: {",
          "222:  wObject* obj;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221: static void wts_listener_free(void* arg)",
          "222: {",
          "223:  DVCMAN_LISTENER* listener = (DVCMAN_LISTENER*)arg;",
          "224:  dvcman_wtslistener_free(listener);",
          "225: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248:  if (!dvcman->listeners)",
          "249:   goto fail;",
          "250:  obj = ArrayList_Object(dvcman->listeners);",
          "253:  dvcman->plugin_names = ArrayList_New(TRUE);",
          "254:  if (!dvcman->plugin_names)",
          "",
          "[Removed Lines]",
          "251:  obj->fnObjectFree = dvcman_wtslistener_free;",
          "",
          "[Added Lines]",
          "257:  obj->fnObjectFree = wts_listener_free;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "378: {",
          "379:  DVCMAN* dvcman = (DVCMAN*)pChannelMgr;",
          "382:  ArrayList_Free(dvcman->channels);",
          "383:  ArrayList_Free(dvcman->plugin_names);",
          "386:  StreamPool_Free(dvcman->pool);",
          "387:  free(dvcman);",
          "",
          "[Removed Lines]",
          "381:  ArrayList_Free(dvcman->listeners);",
          "384:  ArrayList_Free(dvcman->plugins);",
          "",
          "[Added Lines]",
          "387:  ArrayList_Free(dvcman->plugins);",
          "390:  ArrayList_Free(dvcman->listeners);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "580: static UINT dvcman_close_channel(IWTSVirtualChannelManager* pChannelMgr, UINT32 ChannelId,",
          "581:                                  BOOL bSendClosePDU)",
          "582: {",
          "584:  DVCMAN_CHANNEL* channel;",
          "585:  UINT error = CHANNEL_RC_OK;",
          "586:  DVCMAN* dvcman = (DVCMAN*)pChannelMgr;",
          "",
          "[Removed Lines]",
          "583:  size_t i;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "614:   }",
          "615:  }",
          "625:  ArrayList_Remove(dvcman->channels, channel);",
          "626:  return error;",
          "627: }",
          "",
          "[Removed Lines]",
          "617:  ArrayList_Lock(dvcman->listeners);",
          "618:  for (i = ArrayList_Count(dvcman->listeners); i > 0; i--)",
          "619:  {",
          "620:   DVCMAN_LISTENER* listener = ArrayList_GetItem(dvcman->listeners, i - 1);",
          "621:   if (strcmp(listener->channel_name, channel->channel_name) == 0)",
          "622:    ArrayList_Remove(dvcman->listeners, listener);",
          "623:  }",
          "624:  ArrayList_Unlock(dvcman->listeners);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "channels/echo/client/echo_main.c||channels/echo/client/echo_main.c": [
          "File: channels/echo/client/echo_main.c -> channels/echo/client/echo_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:  IWTSPlugin iface;",
          "61:  ECHO_LISTENER_CALLBACK* listener_callback;",
          "62: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:  IWTSListener* listener;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:  echo->listener_callback->channel_mgr = pChannelMgr;",
          "145:  return pChannelMgr->CreateListener(pChannelMgr, \"ECHO\", 0, &echo->listener_callback->iface,",
          "147: }",
          "",
          "[Removed Lines]",
          "146:                                     NULL);",
          "",
          "[Added Lines]",
          "147:                                     &echo->listener);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "158:  {",
          "159:   IWTSVirtualChannelManager* mgr = echo->listener_callback->channel_mgr;",
          "160:   if (mgr)",
          "162:  }",
          "163:  free(echo);",
          "",
          "[Removed Lines]",
          "161:    IFCALL(mgr->DestroyListener, mgr, &echo->iface);",
          "",
          "[Added Lines]",
          "162:    IFCALL(mgr->DestroyListener, mgr, echo->listener);",
          "",
          "---------------"
        ],
        "channels/geometry/client/geometry_main.c||channels/geometry/client/geometry_main.c": [
          "File: channels/geometry/client/geometry_main.c -> channels/geometry/client/geometry_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:  {",
          "432:   IWTSVirtualChannelManager* mgr = geometry->listener_callback->channel_mgr;",
          "433:   if (mgr)",
          "435:  }",
          "437:  if (context)",
          "",
          "[Removed Lines]",
          "434:    IFCALL(mgr->DestroyListener, mgr, &geometry->iface);",
          "",
          "[Added Lines]",
          "434:    IFCALL(mgr->DestroyListener, mgr, geometry->listener);",
          "",
          "---------------"
        ],
        "channels/rdpei/client/rdpei_main.c||channels/rdpei/client/rdpei_main.c": [
          "File: channels/rdpei/client/rdpei_main.c -> channels/rdpei/client/rdpei_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "601:  {",
          "602:   IWTSVirtualChannelManager* mgr = rdpei->listener_callback->channel_mgr;",
          "603:   if (mgr)",
          "605:  }",
          "606:  free(rdpei->listener_callback);",
          "607:  free(rdpei->context);",
          "",
          "[Removed Lines]",
          "604:    IFCALL(mgr->DestroyListener, mgr, &rdpei->iface);",
          "",
          "[Added Lines]",
          "604:    IFCALL(mgr->DestroyListener, mgr, rdpei->listener);",
          "",
          "---------------"
        ],
        "channels/rdpgfx/client/rdpgfx_main.c||channels/rdpgfx/client/rdpgfx_main.c": [
          "File: channels/rdpgfx/client/rdpgfx_main.c -> channels/rdpgfx/client/rdpgfx_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1916:  {",
          "1917:   IWTSVirtualChannelManager* mgr = gfx->listener_callback->channel_mgr;",
          "1918:   if (mgr)",
          "1920:  }",
          "1921:  rdpgfx_client_context_free(context);",
          "1922:  return CHANNEL_RC_OK;",
          "",
          "[Removed Lines]",
          "1919:    IFCALL(mgr->DestroyListener, mgr, &gfx->iface);",
          "",
          "[Added Lines]",
          "1919:    IFCALL(mgr->DestroyListener, mgr, gfx->listener);",
          "",
          "---------------"
        ],
        "channels/rdpsnd/client/rdpsnd_main.c||channels/rdpsnd/client/rdpsnd_main.c": [
          "File: channels/rdpsnd/client/rdpsnd_main.c -> channels/rdpsnd/client/rdpsnd_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1560:   {",
          "1561:    IWTSVirtualChannelManager* mgr = rdpsnd->listener_callback->channel_mgr;",
          "1562:    if (mgr)",
          "1564:   }",
          "1565:   free(rdpsnd->listener_callback);",
          "1566:   free(rdpsnd->iface.pInterface);",
          "",
          "[Removed Lines]",
          "1563:     IFCALL(mgr->DestroyListener, mgr, &rdpsnd->iface);",
          "",
          "[Added Lines]",
          "1563:     IFCALL(mgr->DestroyListener, mgr, rdpsnd->listener);",
          "",
          "---------------"
        ],
        "channels/urbdrc/client/urbdrc_main.c||channels/urbdrc/client/urbdrc_main.c": [
          "File: channels/urbdrc/client/urbdrc_main.c -> channels/urbdrc/client/urbdrc_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "688:  CharUpperA(channelName);",
          "689:  status = pChannelMgr->CreateListener(pChannelMgr, channelName, 0,",
          "691:  if (status != CHANNEL_RC_OK)",
          "692:   return status;",
          "",
          "[Removed Lines]",
          "690:                                       &urbdrc->listener_callback->iface, NULL);",
          "",
          "[Added Lines]",
          "690:                                       &urbdrc->listener_callback->iface, &urbdrc->listener);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "713:  {",
          "714:   IWTSVirtualChannelManager* mgr = urbdrc->listener_callback->channel_mgr;",
          "715:   if (mgr)",
          "717:  }",
          "718:  udevman = urbdrc->udevman;",
          "",
          "[Removed Lines]",
          "716:    IFCALL(mgr->DestroyListener, mgr, &urbdrc->iface);",
          "",
          "[Added Lines]",
          "716:    IFCALL(mgr->DestroyListener, mgr, urbdrc->listener);",
          "",
          "---------------"
        ],
        "channels/urbdrc/client/urbdrc_main.h||channels/urbdrc/client/urbdrc_main.h": [
          "File: channels/urbdrc/client/urbdrc_main.h -> channels/urbdrc/client/urbdrc_main.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:  char* subsystem;",
          "86:  wLog* log;",
          "87: };",
          "89: typedef BOOL (*PREGISTERURBDRCSERVICE)(IWTSPlugin* plugin, IUDEVMAN* udevman);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:  IWTSListener* listener;",
          "",
          "---------------"
        ],
        "channels/video/client/video_main.c||channels/video/client/video_main.c": [
          "File: channels/video/client/video_main.c -> channels/video/client/video_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1088:  {",
          "1089:   IWTSVirtualChannelManager* mgr = video->control_callback->channel_mgr;",
          "1090:   if (mgr)",
          "1092:  }",
          "1093:  if (video->data_callback)",
          "1094:  {",
          "1095:   IWTSVirtualChannelManager* mgr = video->data_callback->channel_mgr;",
          "1096:   if (mgr)",
          "1098:  }",
          "1100:  if (video->context)",
          "",
          "[Removed Lines]",
          "1091:    IFCALL(mgr->DestroyListener, mgr, &video->control_callback->iface);",
          "1097:    IFCALL(mgr->DestroyListener, mgr, &video->data_callback->iface);",
          "",
          "[Added Lines]",
          "1091:    IFCALL(mgr->DestroyListener, mgr, video->controlListener);",
          "1097:    IFCALL(mgr->DestroyListener, mgr, video->dataListener);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a84d2783f918fc85787801566827b639ced6b8b8",
      "candidate_info": {
        "commit_hash": "a84d2783f918fc85787801566827b639ced6b8b8",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/a84d2783f918fc85787801566827b639ced6b8b8",
        "files": [
          "channels/drdynvc/client/drdynvc_main.c"
        ],
        "message": "Fixed drdynvc_send stream release\n\n(cherry picked from commit a497e78d37b63f8f342be56e1732c5a891b5ba0d)",
        "before_after_code_files": [
          "channels/drdynvc/client/drdynvc_main.c||channels/drdynvc/client/drdynvc_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/drdynvc/client/drdynvc_main.c||channels/drdynvc/client/drdynvc_main.c": [
          "File: channels/drdynvc/client/drdynvc_main.c -> channels/drdynvc/client/drdynvc_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "615:    Stream_Write_UINT8(s, (CLOSE_REQUEST_PDU << 4) | 0x02);",
          "616:    Stream_Write_UINT32(s, ChannelId);",
          "617:    error = drdynvc_send(drdynvc, s);",
          "619:   }",
          "620:  }",
          "",
          "[Removed Lines]",
          "618:    Stream_Release(s);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "758:  switch (status)",
          "759:  {",
          "760:   case CHANNEL_RC_OK:",
          "762:    return CHANNEL_RC_OK;",
          "764:   case CHANNEL_RC_NOT_CONNECTED:",
          "765:    return CHANNEL_RC_OK;",
          "767:   case CHANNEL_RC_BAD_CHANNEL_HANDLE:",
          "768:    WLog_ERR(TAG, \"VirtualChannelWriteEx failed with CHANNEL_RC_BAD_CHANNEL_HANDLE\");",
          "769:    return status;",
          "771:   default:",
          "772:    WLog_Print(drdynvc->log, WLOG_ERROR,",
          "773:               \"VirtualChannelWriteEx failed with %s [%08\" PRIX32 \"]\",",
          "774:               WTSErrorToString(status), status);",
          "",
          "[Removed Lines]",
          "761:    Stream_AddRef(s);",
          "",
          "[Added Lines]",
          "763:    Stream_Release(s);",
          "767:    Stream_Release(s);",
          "772:    Stream_Release(s);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "814:  if (dataSize == 0)",
          "815:  {",
          "816:   dvcman_close_channel(drdynvc->channel_mgr, ChannelId, TRUE);",
          "817:  }",
          "818:  else if (dataSize <= CHANNEL_CHUNK_LENGTH - pos)",
          "819:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "818:   Stream_Release(data_out);",
          "",
          "---------------"
        ]
      }
    }
  ]
}