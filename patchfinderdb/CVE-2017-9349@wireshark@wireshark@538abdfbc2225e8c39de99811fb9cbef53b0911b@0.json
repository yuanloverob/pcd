{
  "cve_id": "CVE-2017-9349",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.6 and 2.0.0 to 2.0.12, the DICOM dissector has an infinite loop. This was addressed in epan/dissectors/packet-dcm.c by validating a length value.",
  "repo": "wireshark/wireshark",
  "patch_hash": "538abdfbc2225e8c39de99811fb9cbef53b0911b",
  "patch_info": {
    "commit_hash": "538abdfbc2225e8c39de99811fb9cbef53b0911b",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/538abdfbc2225e8c39de99811fb9cbef53b0911b",
    "files": [
      "epan/dissectors/packet-dcm.c"
    ],
    "message": "packet-dcm.c: Fix infinite loop\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1329\nBug: 13685\nChange-Id: Ic70cf8185beeb4cfa9417c287cf963e1c56bf86c\nReviewed-on: https://code.wireshark.org/review/21529\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-dcm.c||epan/dissectors/packet-dcm.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-dcm.c||epan/dissectors/packet-dcm.c": [
      "File: epan/dissectors/packet-dcm.c -> epan/dissectors/packet-dcm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6692:         pdvlen_item = proto_tree_add_item(pdv_ptree, hf_dcm_pdv_len, tvb, offset, 4, ENC_BIG_ENDIAN);",
      "6693:         offset += 4;",
      "6696:             expert_add_info_format(pinfo, pdvlen_item, &ei_dcm_pdv_len, \"Invalid PDV length (too large)\");",
      "6697:             return endpos;",
      "6698:         }",
      "",
      "[Removed Lines]",
      "6695:         if (pdv_len + 4 > pdu_len) {",
      "",
      "[Added Lines]",
      "6695:         if ((pdv_len + 4 > pdu_len)  || (pdv_len + 4 < pdv_len)) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cb1b6494c44c9e939d9e2554de6b812de395e3f9",
      "candidate_info": {
        "commit_hash": "cb1b6494c44c9e939d9e2554de6b812de395e3f9",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/cb1b6494c44c9e939d9e2554de6b812de395e3f9",
        "files": [
          "epan/dissectors/packet-dcm.c"
        ],
        "message": "packet-dcm.c: Fix infinite loop\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1329\nBug: 13685\nChange-Id: Ic70cf8185beeb4cfa9417c287cf963e1c56bf86c\nReviewed-on: https://code.wireshark.org/review/21529\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 538abdfbc2225e8c39de99811fb9cbef53b0911b)\nReviewed-on: https://code.wireshark.org/review/21534",
        "before_after_code_files": [
          "epan/dissectors/packet-dcm.c||epan/dissectors/packet-dcm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dcm.c||epan/dissectors/packet-dcm.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dcm.c||epan/dissectors/packet-dcm.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dcm.c||epan/dissectors/packet-dcm.c": [
          "File: epan/dissectors/packet-dcm.c -> epan/dissectors/packet-dcm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6822:         pdvlen_item = proto_tree_add_item(pdv_ptree, hf_dcm_pdv_len, tvb, offset, 4, ENC_BIG_ENDIAN);",
          "6823:         offset += 4;",
          "6826:             expert_add_info_format(pinfo, pdvlen_item, &ei_dcm_pdv_len, \"Invalid PDV length (too large)\");",
          "6827:             return endpos;",
          "6828:         }",
          "",
          "[Removed Lines]",
          "6825:         if (pdv_len + 4 > pdu_len) {",
          "",
          "[Added Lines]",
          "6825:         if ((pdv_len + 4 > pdu_len)  || (pdv_len + 4 < pdv_len)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3af3aca1f4d756fd7403ad72be9e72a974444d3e",
      "candidate_info": {
        "commit_hash": "3af3aca1f4d756fd7403ad72be9e72a974444d3e",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/3af3aca1f4d756fd7403ad72be9e72a974444d3e",
        "files": [
          "epan/dissectors/packet-dcm.c"
        ],
        "message": "packet-dcm.c: Fix infinite loop\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1329\nBug: 13685\nChange-Id: Ic70cf8185beeb4cfa9417c287cf963e1c56bf86c\nReviewed-on: https://code.wireshark.org/review/21529\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 538abdfbc2225e8c39de99811fb9cbef53b0911b)\nReviewed-on: https://code.wireshark.org/review/21535",
        "before_after_code_files": [
          "epan/dissectors/packet-dcm.c||epan/dissectors/packet-dcm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dcm.c||epan/dissectors/packet-dcm.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dcm.c||epan/dissectors/packet-dcm.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dcm.c||epan/dissectors/packet-dcm.c": [
          "File: epan/dissectors/packet-dcm.c -> epan/dissectors/packet-dcm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6812:         pdvlen_item = proto_tree_add_item(pdv_ptree, hf_dcm_pdv_len, tvb, offset, 4, ENC_BIG_ENDIAN);",
          "6813:         offset += 4;",
          "6816:             expert_add_info_format(pinfo, pdvlen_item, &ei_dcm_pdv_len, \"Invalid PDV length (too large)\");",
          "6817:             return endpos;",
          "6818:         }",
          "",
          "[Removed Lines]",
          "6815:         if (pdv_len + 4 > pdu_len) {",
          "",
          "[Added Lines]",
          "6815:         if ((pdv_len + 4 > pdu_len)  || (pdv_len + 4 < pdv_len)) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}