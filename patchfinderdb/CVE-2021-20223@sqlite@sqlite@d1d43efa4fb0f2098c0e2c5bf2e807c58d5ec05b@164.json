{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d79967adbe9c9aab0295d613030b328178ace9c2",
      "candidate_info": {
        "commit_hash": "d79967adbe9c9aab0295d613030b328178ace9c2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d79967adbe9c9aab0295d613030b328178ace9c2",
        "files": [
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Avoid a harmless zero offset of a null pointer in FTS3, so as to not provoke unnecessary warnings from run-time checkers.\n\nFossilOrigin-Name: 85d95abec4a596eb3ffd2ea19b4067dc1a6970264222ed5d69e75764ac21597c",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4538:   u8 *pbEof",
          "4539: ){",
          "4543:   if( pDL->pNextDocid ){",
          "4544:     pIter = pDL->pNextDocid;",
          "4545:   }else{",
          "4546:     pIter = pDL->aAll;",
          "4547:   }",
          "4552:   }else{",
          "",
          "[Removed Lines]",
          "4549:   if( pIter>=pEnd ){",
          "",
          "[Added Lines]",
          "4545:     assert( pDL->aAll!=0 || pIter==0 );",
          "4550:   if( pIter==0 || pIter>=(pEnd = pDL->aAll + pDL->nAll) ){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3ce804e99bbef83d49ec309157448a7c1422725606516cef904e6122aadd3922",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0934d640456bb168a8888ae388643c5160afe501",
      "candidate_info": {
        "commit_hash": "0934d640456bb168a8888ae388643c5160afe501",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0934d640456bb168a8888ae388643c5160afe501",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Defensive code that tries to prevent a recurrence of problems like the one described in ticket [7a5279a25c57adf1]\n\nFossilOrigin-Name: 572105de1d44bca4f18c99d373458889163611384eebbc9659474874ee1701f4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3261ee9ec26bbeaa64190c12556a1d8146270b6660c70004830bd38c1b5b63f4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3811:   switch( op ){",
          "3812:     case TK_AGG_COLUMN: {",
          "3813:       AggInfo *pAggInfo = pExpr->pAggInfo;",
          "3815:       if( !pAggInfo->directMode ){",
          "3816:         assert( pCol->iMem>0 );",
          "3817:         return pCol->iMem;",
          "",
          "[Removed Lines]",
          "3814:       struct AggInfo_col *pCol = &pAggInfo->aCol[pExpr->iAgg];",
          "",
          "[Added Lines]",
          "3814:       struct AggInfo_col *pCol;",
          "3815:       assert( pAggInfo!=0 );",
          "3816:       assert( pExpr->iAgg>=0 && pExpr->iAgg<pAggInfo->nColumn );",
          "3817:       pCol = &pAggInfo->aCol[pExpr->iAgg];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4111:     }",
          "4112:     case TK_AGG_FUNCTION: {",
          "4113:       AggInfo *pInfo = pExpr->pAggInfo;",
          "4115:         assert( !ExprHasProperty(pExpr, EP_IntValue) );",
          "4116:         sqlite3ErrorMsg(pParse, \"misuse of aggregate: %s()\", pExpr->u.zToken);",
          "4117:       }else{",
          "",
          "[Removed Lines]",
          "4114:       if( pInfo==0 ){",
          "",
          "[Added Lines]",
          "4117:       if( pInfo==0",
          "4118:        || NEVER(pExpr->iAgg<0)",
          "4119:        || NEVER(pExpr->iAgg>=pInfo->nFunc)",
          "4120:       ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cda77d44af3bca7353bfd216a1e513d4723e2ea",
      "candidate_info": {
        "commit_hash": "8cda77d44af3bca7353bfd216a1e513d4723e2ea",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8cda77d44af3bca7353bfd216a1e513d4723e2ea",
        "files": [
          "Makefile.in",
          "Makefile.msc",
          "ext/misc/ieee754.c",
          "main.mk",
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Add the ieee754_mantissa() and ieee754_exponent() functions to the iee754 extension.  Build the ieee754 extension into the CLI.\n\nFossilOrigin-Name: db2f0836b64cd2e119684f1cf75fa3b19a84ca6aca1a239f7e2b9298016e2c95",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "Makefile.msc||Makefile.msc",
          "ext/misc/ieee754.c||ext/misc/ieee754.c",
          "main.mk||main.mk",
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1082: SHELL_SRC = \\",
          "1083:  $(TOP)/src/shell.c.in \\",
          "1084:         $(TOP)/ext/misc/appendvfs.c \\",
          "1086:         $(TOP)/ext/misc/decimal.c \\",
          "1087:  $(TOP)/ext/misc/fileio.c \\",
          "1089:  $(TOP)/ext/misc/sqlar.c \\",
          "1090:         $(TOP)/ext/misc/uint.c \\",
          "1091:  $(TOP)/ext/expert/sqlite3expert.c \\",
          "",
          "[Removed Lines]",
          "1085:  $(TOP)/ext/misc/shathree.c \\",
          "1088:  $(TOP)/ext/misc/completion.c \\",
          "",
          "[Added Lines]",
          "1085:  $(TOP)/ext/misc/completion.c \\",
          "1088:         $(TOP)/ext/misc/ieee754.c \\",
          "1089:  $(TOP)/ext/misc/shathree.c \\",
          "",
          "---------------"
        ],
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2204: SHELL_SRC = \\",
          "2205:  $(TOP)\\src\\shell.c.in \\",
          "2206:  $(TOP)\\ext\\misc\\appendvfs.c \\",
          "2208:         $(TOP)\\ext\\misc\\decimal.c \\",
          "2209:  $(TOP)\\ext\\misc\\fileio.c \\",
          "2211:  $(TOP)\\ext\\misc\\uint.c \\",
          "2212:  $(TOP)\\ext\\expert\\sqlite3expert.c \\",
          "2213:  $(TOP)\\ext\\expert\\sqlite3expert.h \\",
          "",
          "[Removed Lines]",
          "2207:  $(TOP)\\ext\\misc\\shathree.c \\",
          "2210:  $(TOP)\\ext\\misc\\completion.c \\",
          "",
          "[Added Lines]",
          "2207:  $(TOP)\\ext\\misc\\completion.c \\",
          "2210:         $(TOP)\\ext\\misc\\ieee754.c \\",
          "2211:  $(TOP)\\ext\\misc\\shathree.c \\",
          "",
          "---------------"
        ],
        "ext/misc/ieee754.c||ext/misc/ieee754.c": [
          "File: ext/misc/ieee754.c -> ext/misc/ieee754.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:       }",
          "89:       if( isNeg ) m = -m;",
          "90:     }",
          "95:     sqlite3_int64 m, e, a;",
          "96:     double r;",
          "97:     int isNeg = 0;",
          "",
          "[Removed Lines]",
          "91:     sqlite3_snprintf(sizeof(zResult), zResult, \"ieee754(%lld,%d)\",",
          "92:                      m, e-1075);",
          "93:     sqlite3_result_text(context, zResult, -1, SQLITE_TRANSIENT);",
          "94:   }else if( argc==2 ){",
          "",
          "[Added Lines]",
          "140:     switch( *(int*)sqlite3_user_data(context) ){",
          "141:       case 0:",
          "142:         sqlite3_snprintf(sizeof(zResult), zResult, \"ieee754(%lld,%d)\",",
          "143:                          m, e-1075);",
          "144:         sqlite3_result_text(context, zResult, -1, SQLITE_TRANSIENT);",
          "145:         break;",
          "146:       case 1:",
          "147:         sqlite3_result_int64(context, m);",
          "148:         break;",
          "149:       case 2:",
          "150:         sqlite3_result_int(context, e-1075);",
          "151:         break;",
          "152:     }",
          "153:   }else{",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:   char **pzErrMsg,",
          "134:   const sqlite3_api_routines *pApi",
          "135: ){",
          "136:   int rc = SQLITE_OK;",
          "137:   SQLITE_EXTENSION_INIT2(pApi);",
          "141:                                ieee754func, 0, 0);",
          "146:   }",
          "147:   return rc;",
          "148: }",
          "",
          "[Removed Lines]",
          "139:   rc = sqlite3_create_function(db, \"ieee754\", 1,",
          "140:                                SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "142:   if( rc==SQLITE_OK ){",
          "143:     rc = sqlite3_create_function(db, \"ieee754\", 2,",
          "144:                                  SQLITE_UTF8|SQLITE_INNOCUOUS, 0,",
          "145:                                  ieee754func, 0, 0);",
          "",
          "[Added Lines]",
          "195:   static const struct {",
          "196:     char *zFName;",
          "197:     int nArg;",
          "198:     int iAux;",
          "199:   } aFunc[] = {",
          "200:     { \"ieee754\",          1,   0 },",
          "201:     { \"ieee754\",          2,   0 },",
          "202:     { \"ieee754_mantissa\", 1,   1 },",
          "203:     { \"ieee754_exponent\", 1,   2 },",
          "204:   };",
          "205:   int i;",
          "209:   for(i=0; i<sizeof(aFunc)/sizeof(aFunc[0]) && rc==SQLITE_OK; i++){",
          "210:     rc = sqlite3_create_function(db, aFunc[i].zFName, aFunc[i].nArg,",
          "211:                                SQLITE_UTF8|SQLITE_INNOCUOUS,",
          "212:                                (void*)&aFunc[i].iAux,",
          "",
          "---------------"
        ],
        "main.mk||main.mk": [
          "File: main.mk -> main.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "742: SHELL_SRC = \\",
          "743:  $(TOP)/src/shell.c.in \\",
          "744:         $(TOP)/ext/misc/appendvfs.c \\",
          "746:         $(TOP)/ext/misc/decimal.c \\",
          "747:  $(TOP)/ext/misc/fileio.c \\",
          "749:  $(TOP)/ext/misc/sqlar.c \\",
          "750:         $(TOP)/ext/misc/uint.c \\",
          "751:  $(TOP)/ext/expert/sqlite3expert.c \\",
          "",
          "[Removed Lines]",
          "745:  $(TOP)/ext/misc/shathree.c \\",
          "748:  $(TOP)/ext/misc/completion.c \\",
          "",
          "[Added Lines]",
          "745:  $(TOP)/ext/misc/completion.c \\",
          "748:         $(TOP)/ext/misc/ieee754.c \\",
          "749:  $(TOP)/ext/misc/shathree.c \\",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 838817b680f02b3845d6d56f85d5d36fa5ae7453afef7a1a5a24624255f2dc3e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1012: INCLUDE ../ext/misc/memtrace.c",
          "1013: INCLUDE ../ext/misc/uint.c",
          "1014: INCLUDE ../ext/misc/decimal.c",
          "1015: #ifdef SQLITE_HAVE_ZLIB",
          "1016: INCLUDE ../ext/misc/zipfile.c",
          "1017: INCLUDE ../ext/misc/sqlar.c",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1015: INCLUDE ../ext/misc/ieee754.c",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4558:     sqlite3_completion_init(p->db, 0, 0);",
          "4559:     sqlite3_uint_init(p->db, 0, 0);",
          "4560:     sqlite3_decimal_init(p->db, 0, 0);",
          "4561: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "4562:     sqlite3_dbdata_init(p->db, 0, 0);",
          "4563: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4562:     sqlite3_ieee_init(p->db, 0, 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07ca7d610b4305d7f2a3feb3a9cd7f10110dbc96",
      "candidate_info": {
        "commit_hash": "07ca7d610b4305d7f2a3feb3a9cd7f10110dbc96",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/07ca7d610b4305d7f2a3feb3a9cd7f10110dbc96",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "src/sqliteInt.h",
          "src/update.c",
          "test/upfrom1.tcl",
          "test/upfrom1.test",
          "test/upfrom2.test",
          "test/upfrom3.test"
        ],
        "message": "Make it an error to repeat the target object/alias of an UPDATE statement in its FROM clause.\n\nFossilOrigin-Name: d90a37e930c66afe95165955ae47efde08f52c8ce16c4fb239da0233335db050",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/update.c||src/update.c",
          "test/upfrom1.tcl||test/upfrom1.tcl",
          "test/upfrom1.test||test/upfrom1.test",
          "test/upfrom2.test||test/upfrom2.test",
          "test/upfrom3.test||test/upfrom3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: cc471df04aecf344d0aa47138014c07d3f93462ae1f8ff86ec5589cfb62c658d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5823:   }",
          "5824: #endif",
          "5826:   if( pDest->eDest==SRT_Output ){",
          "5827:     generateColumnNames(pParse, p);",
          "5828:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5830:   if( p->selFlags & SF_UpdateFrom ){",
          "5831:     struct SrcList_item *p0 = &p->pSrc->a[0];",
          "5832:     for(i=1; i<p->pSrc->nSrc; i++){",
          "5833:       struct SrcList_item *p1 = &p->pSrc->a[i];",
          "5834:       if( p0->pTab==p1->pTab && 0==sqlite3_stricmp(p0->zAlias, p1->zAlias) ){",
          "5835:         sqlite3ErrorMsg(pParse,",
          "5836:             \"target object/alias may not appear in FROM clause: %s\",",
          "5837:             p0->zAlias ? p0->zAlias : p0->pTab->zName",
          "5838:         );",
          "5839:         goto select_end;",
          "5840:       }",
          "5841:     }",
          "5842:   }",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/update.c||src/update.c": [
          "File: src/update.c -> src/update.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:     }",
          "256:   }",
          "257:   pSelect = sqlite3SelectNew(pParse, pList,",
          "259:   );",
          "260:   sqlite3SelectDestInit(&dest, eDest, iEph);",
          "261:   dest.iSDParm2 = (pPk ? pPk->nKeyCol : -1);",
          "",
          "[Removed Lines]",
          "258:       pSrc, pWhere2, pGrp, 0, pOrderBy2, SF_IncludeHidden, pLimit2",
          "",
          "[Added Lines]",
          "258:       pSrc, pWhere2, pGrp, 0, pOrderBy2, SF_UpdateFrom|SF_IncludeHidden, pLimit2",
          "",
          "---------------"
        ],
        "test/upfrom1.tcl||test/upfrom1.tcl": [
          "File: test/upfrom1.tcl -> test/upfrom1.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:   SELECT * FROM t5 ORDER BY a;",
          "104: }",
          "107: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106: errorsql_test 2.3.1 {",
          "107:   UPDATE t5 SET b=1 FROM t5;",
          "108: }",
          "109: errorsql_test 2.3.2 {",
          "110:   UPDATE t5 AS apples SET b=1 FROM t5 AS apples;",
          "111: }",
          "",
          "---------------"
        ],
        "test/upfrom1.test||test/upfrom1.test": [
          "File: test/upfrom1.test -> test/upfrom1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   SELECT * FROM t5 ORDER BY a;",
          "155: } {1 i I   2 ii {}   3 iii II   4 four FOUR}",
          "157: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "157: # PG says ERROR:  table name \"t5\" specified more than once",
          "158: do_test 2.3.1 { catch { execsql {",
          "159:   UPDATE t5 SET b=1 FROM t5;",
          "160: } } } 1",
          "162: # PG says ERROR:  table name \"apples\" specified more than once",
          "163: do_test 2.3.2 { catch { execsql {",
          "164:   UPDATE t5 AS apples SET b=1 FROM t5 AS apples;",
          "165: } } } 1",
          "",
          "---------------"
        ],
        "test/upfrom2.test||test/upfrom2.test": [
          "File: test/upfrom2.test -> test/upfrom2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #",
          "24: #   2.*: Test adding ORDER BY and LIMIT clauses with UPDATE FROM statements.",
          "25: #",
          "27: foreach {tn wo} {",
          "28:   1 \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: #   5.*: Test that specifying the target table name or alias in the FROM",
          "27: #        clause of an UPDATE statement is an error.",
          "28: #",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "346:   } {2 2 2   5 5 5   10 1 1  30 3 3  40 4 4}",
          "347: }",
          "349: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352: reset_db",
          "353: do_execsql_test 5.0 {",
          "354:   CREATE TABLE x1(a, b, c);",
          "355:   CREATE TABLE x2(a, b, c);",
          "356: }",
          "358: foreach {tn update nm} {",
          "359:   1 \"UPDATE x1 SET a=5 FROM x1\" x1",
          "360:   2 \"UPDATE x1 AS grapes SET a=5 FROM x1 AS grapes\" grapes",
          "361:   3 \"UPDATE x1 SET a=5 FROM x2, x1\" x1",
          "362:   4 \"UPDATE x1 AS grapes SET a=5 FROM x2, x1 AS grapes\" grapes",
          "363: } {",
          "364:   do_catchsql_test 5.$tn $update \\",
          "365:     \"1 {target object/alias may not appear in FROM clause: $nm}\"",
          "366: }",
          "",
          "---------------"
        ],
        "test/upfrom3.test||test/upfrom3.test": [
          "File: test/upfrom3.test -> test/upfrom3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:     } {10 1 101  20 2 101  30 3 101}",
          "205:     do_execsql_test 3.$tn.4 {",
          "207:     }",
          "208:     do_execsql_test 3.$tn.5 {",
          "209:       SELECT * FROM g1;",
          "",
          "[Removed Lines]",
          "206:       UPDATE g1 SET c=101 FROM g1;",
          "",
          "[Added Lines]",
          "206:       UPDATE g1 SET c=101 FROM g1 AS g2;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b6a74caf9302c0b4f25b461e552cd36df0b9b439",
      "candidate_info": {
        "commit_hash": "b6a74caf9302c0b4f25b461e552cd36df0b9b439",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b6a74caf9302c0b4f25b461e552cd36df0b9b439",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c"
        ],
        "message": "Fix an assertion() fault in ALTER TABLE found by OSSFuzz.  Test case in TH3.\n\nFossilOrigin-Name: 41de742c5713ab1a0c0c15c44af3ffac40bbc527ae2dc11d829ba9773eb4c84a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 72c4c69fea13f5e24df25645e6941ce3ff896f0a3c73cd63329f819cc907ab40",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1200:           p->iCursor = pParse->nTab++;",
          "1201:           if( p->pTab==0 ){",
          "1202:             rc = SQLITE_ERROR;",
          "1203:           }else{",
          "1204:             p->pTab->nTabRef++;",
          "1205:             rc = sqlite3ViewGetColumnNames(pParse, p->pTab);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1203:             break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}