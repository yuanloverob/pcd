{
  "cve_id": "CVE-2017-11721",
  "cve_desc": "Buffer overflow in ioquake3 before 2017-08-02 allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted packet.",
  "repo": "ioquake/ioq3",
  "patch_hash": "d2b1d124d4055c2fcbe5126863487c52fd58cca1",
  "patch_info": {
    "commit_hash": "d2b1d124d4055c2fcbe5126863487c52fd58cca1",
    "repo": "ioquake/ioq3",
    "commit_url": "https://github.com/ioquake/ioq3/commit/d2b1d124d4055c2fcbe5126863487c52fd58cca1",
    "files": [
      "code/qcommon/huffman.c",
      "code/qcommon/msg.c",
      "code/qcommon/qcommon.h"
    ],
    "message": "Fix/improve buffer overflow in MSG_ReadBits/MSG_WriteBits\n\nPrevent reading past end of message in MSG_ReadBits. If read past\nend of msg->data buffer (16348 bytes) the engine could SEGFAULT.\nMake MSG_WriteBits use an exact buffer overflow check instead of\npossibly failing with a few bytes left.",
    "before_after_code_files": [
      "code/qcommon/huffman.c||code/qcommon/huffman.c",
      "code/qcommon/msg.c||code/qcommon/msg.c",
      "code/qcommon/qcommon.h||code/qcommon/qcommon.h"
    ]
  },
  "patch_diff": {
    "code/qcommon/huffman.c||code/qcommon/huffman.c": [
      "File: code/qcommon/huffman.c -> code/qcommon/huffman.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "279: }",
      "283:  bloc = *offset;",
      "284:  while (node && node->symbol == INTERNAL_NODE) {",
      "285:   if (get_bit(fin)) {",
      "286:    node = node->right;",
      "287:   } else {",
      "",
      "[Removed Lines]",
      "282: void Huff_offsetReceive (node_t *node, int *ch, byte *fin, int *offset) {",
      "",
      "[Added Lines]",
      "282: void Huff_offsetReceive (node_t *node, int *ch, byte *fin, int *offset, int maxoffset) {",
      "285:   if (bloc >= maxoffset) {",
      "288:    return;",
      "289:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "298: }",
      "302:  if (node->parent) {",
      "304:  }",
      "305:  if (child) {",
      "306:   if (node->right == child) {",
      "307:    add_bit(1, fout);",
      "308:   } else {",
      "",
      "[Removed Lines]",
      "301: static void send(node_t *node, node_t *child, byte *fout) {",
      "303:   send(node->parent, node, fout);",
      "",
      "[Added Lines]",
      "306: static void send(node_t *node, node_t *child, byte *fout, int maxoffset) {",
      "308:   send(node->parent, node, fout, maxoffset);",
      "311:   if (bloc >= maxoffset) {",
      "312:    bloc = maxoffset + 1;",
      "313:    return;",
      "314:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "312: }",
      "316:  int i;",
      "317:  if (huff->loc[ch] == NULL) {",
      "320:   for (i = 7; i >= 0; i--) {",
      "321:    add_bit((char)((ch >> i) & 0x1), fout);",
      "322:   }",
      "323:  } else {",
      "325:  }",
      "326: }",
      "329:  bloc = *offset;",
      "332: }",
      "",
      "[Removed Lines]",
      "315: void Huff_transmit (huff_t *huff, int ch, byte *fout) {",
      "319:   Huff_transmit(huff, NYT, fout);",
      "324:   send(huff->loc[ch], NULL, fout);",
      "328: void Huff_offsetTransmit (huff_t *huff, int ch, byte *fout, int *offset) {",
      "330:  send(huff->loc[ch], NULL, fout);",
      "",
      "[Added Lines]",
      "324: void Huff_transmit (huff_t *huff, int ch, byte *fout, int maxoffset) {",
      "328:   Huff_transmit(huff, NYT, fout, maxoffset);",
      "333:   send(huff->loc[ch], NULL, fout, maxoffset);",
      "337: void Huff_offsetTransmit (huff_t *huff, int ch, byte *fout, int *offset, int maxoffset) {",
      "339:  send(huff->loc[ch], NULL, fout, maxoffset);",
      "",
      "---------------"
    ],
    "code/qcommon/msg.c||code/qcommon/msg.c": [
      "File: code/qcommon/msg.c -> code/qcommon/msg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "108:  oldsize += bits;",
      "113:   return;",
      "114:  }",
      "",
      "[Removed Lines]",
      "111:  if ( msg->maxsize - msg->cursize < 4 ) {",
      "112:   msg->overflowed = qtrue;",
      "",
      "[Added Lines]",
      "110:  if ( msg->overflowed ) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "122:  }",
      "124:  if ( msg->oob ) {",
      "125:   if ( bits == 8 ) {",
      "126:    msg->data[msg->cursize] = value;",
      "127:    msg->cursize += 1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "123:   if ( msg->cursize + ( bits >> 3 ) > msg->maxsize ) {",
      "124:    msg->overflowed = qtrue;",
      "125:    return;",
      "126:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "144:   if ( bits&7 ) {",
      "145:    int nbits;",
      "146:    nbits = bits&7;",
      "147:    for( i = 0; i < nbits; i++ ) {",
      "148:     Huff_putBit( (value & 1), msg->data, &msg->bit );",
      "149:     value = (value >> 1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "150:    if ( msg->bit + nbits > msg->maxsize << 3 ) {",
      "151:     msg->overflowed = qtrue;",
      "152:     return;",
      "153:    }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:   }",
      "153:   if ( bits ) {",
      "154:    for( i = 0; i < bits; i += 8 ) {",
      "156:     value = (value >> 8);",
      "157:    }",
      "158:   }",
      "159:   msg->cursize = (msg->bit >> 3) + 1;",
      "",
      "[Removed Lines]",
      "155:     Huff_offsetTransmit( &msgHuff.compressor, (value & 0xff), msg->data, &msg->bit );",
      "",
      "[Added Lines]",
      "162:     Huff_offsetTransmit( &msgHuff.compressor, (value & 0xff), msg->data, &msg->bit, msg->maxsize << 3 );",
      "165:     if ( msg->bit > msg->maxsize << 3 ) {",
      "166:      msg->overflowed = qtrue;",
      "167:      return;",
      "168:     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "167:  int   i, nbits;",
      "170:  value = 0;",
      "172:  if ( bits < 0 ) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "182:  if ( msg->readcount > msg->cursize ) {",
      "183:   return 0;",
      "184:  }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "177:  }",
      "179:  if (msg->oob) {",
      "180:   if(bits==8)",
      "181:   {",
      "182:    value = msg->data[msg->readcount];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "196:   if (msg->readcount + (bits>>3) > msg->cursize) {",
      "197:    msg->readcount = msg->cursize + 1;",
      "198:    return 0;",
      "199:   }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "204:   nbits = 0;",
      "205:   if (bits&7) {",
      "206:    nbits = bits&7;",
      "207:    for(i=0;i<nbits;i++) {",
      "208:     value |= (Huff_getBit(msg->data, &msg->bit)<<i);",
      "209:    }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "228:    if (msg->bit + nbits > msg->cursize << 3) {",
      "229:     msg->readcount = msg->cursize + 1;",
      "230:     return 0;",
      "231:    }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "212:   if (bits) {",
      "214:    for(i=0;i<bits;i+=8) {",
      "217:     value |= (get<<(i+nbits));",
      "218:    }",
      "220:   }",
      "",
      "[Removed Lines]",
      "215:     Huff_offsetReceive (msgHuff.decompressor.tree, &get, msg->data, &msg->bit);",
      "",
      "[Added Lines]",
      "240:     Huff_offsetReceive (msgHuff.decompressor.tree, &get, msg->data, &msg->bit, msg->cursize<<3);",
      "244:     if (msg->bit > msg->cursize<<3) {",
      "245:      msg->readcount = msg->cursize + 1;",
      "246:      return 0;",
      "247:     }",
      "",
      "---------------"
    ],
    "code/qcommon/qcommon.h||code/qcommon/qcommon.h": [
      "File: code/qcommon/qcommon.h -> code/qcommon/qcommon.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1196: void Huff_Init(huffman_t *huff);",
      "1197: void Huff_addRef(huff_t* huff, byte ch);",
      "1198: int  Huff_Receive (node_t *node, int *ch, byte *fin);",
      "1202: void Huff_putBit( int bit, byte *fout, int *offset);",
      "1203: int  Huff_getBit( byte *fout, int *offset);",
      "",
      "[Removed Lines]",
      "1199: void Huff_transmit (huff_t *huff, int ch, byte *fout);",
      "1200: void Huff_offsetReceive (node_t *node, int *ch, byte *fin, int *offset);",
      "1201: void Huff_offsetTransmit (huff_t *huff, int ch, byte *fout, int *offset);",
      "",
      "[Added Lines]",
      "1199: void Huff_transmit (huff_t *huff, int ch, byte *fout, int maxoffset);",
      "1200: void Huff_offsetReceive (node_t *node, int *ch, byte *fin, int *offset, int maxoffset);",
      "1201: void Huff_offsetTransmit (huff_t *huff, int ch, byte *fout, int *offset, int maxoffset);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fe111df610236923d7ad23b36209f5f9962fa0e3",
      "candidate_info": {
        "commit_hash": "fe111df610236923d7ad23b36209f5f9962fa0e3",
        "repo": "ioquake/ioq3",
        "commit_url": "https://github.com/ioquake/ioq3/commit/fe111df610236923d7ad23b36209f5f9962fa0e3",
        "files": [
          "code/qcommon/msg.c"
        ],
        "message": "[qcommon/msg.c] Remove dead code (which had undefined behaviour)",
        "before_after_code_files": [
          "code/qcommon/msg.c||code/qcommon/msg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "code/qcommon/msg.c||code/qcommon/msg.c"
          ],
          "candidate": [
            "code/qcommon/msg.c||code/qcommon/msg.c"
          ]
        }
      },
      "candidate_diff": {
        "code/qcommon/msg.c||code/qcommon/msg.c": [
          "File: code/qcommon/msg.c -> code/qcommon/msg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "101: =============================================================================",
          "107: void MSG_WriteBits( msg_t *msg, int value, int bits ) {",
          "108:  int i;",
          "111:  oldsize += bits;",
          "",
          "[Removed Lines]",
          "104: int overflows;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:   Com_Error( ERR_DROP, \"MSG_WriteBits: bad bits %i\", bits );",
          "121:  }",
          "139:  if ( bits < 0 ) {",
          "140:   bits = -bits;",
          "141:  }",
          "145:    msg->data[msg->cursize] = value;",
          "146:    msg->cursize += 1;",
          "147:    msg->bit += 8;",
          "151:    short temp = value;",
          "154:    msg->cursize += 2;",
          "155:    msg->bit += 16;",
          "160:    msg->cursize += 4;",
          "161:    msg->bit += 32;",
          "162:   }",
          "165:  } else {",
          "169:    int nbits;",
          "170:    nbits = bits&7;",
          "174:    }",
          "175:    bits = bits - nbits;",
          "176:   }",
          "182:    }",
          "183:   }",
          "186:  }",
          "187: }",
          "",
          "[Removed Lines]",
          "124:  if ( bits != 32 ) {",
          "125:   if ( bits > 0 ) {",
          "126:    if ( value > ( ( 1 << bits ) - 1 ) || value < 0 ) {",
          "127:     overflows++;",
          "128:    }",
          "129:   } else {",
          "130:    int r;",
          "132:    r = 1 << (bits-1);",
          "134:    if ( value >  r - 1 || value < -r ) {",
          "135:     overflows++;",
          "136:    }",
          "137:   }",
          "138:  }",
          "142:  if (msg->oob) {",
          "143:   if(bits==8)",
          "144:   {",
          "148:   }",
          "149:   else if(bits==16)",
          "150:   {",
          "153:    CopyLittleShort(&msg->data[msg->cursize], &temp);",
          "156:   }",
          "157:   else if(bits==32)",
          "158:   {",
          "159:    CopyLittleLong(&msg->data[msg->cursize], &value);",
          "163:   else",
          "164:    Com_Error(ERR_DROP, \"can't write %d bits\", bits);",
          "167:   value &= (0xffffffff>>(32-bits));",
          "168:   if (bits&7) {",
          "171:    for(i=0;i<nbits;i++) {",
          "172:     Huff_putBit((value&1), msg->data, &msg->bit);",
          "173:     value = (value>>1);",
          "177:   if (bits) {",
          "178:    for(i=0;i<bits;i+=8) {",
          "180:     Huff_offsetTransmit (&msgHuff.compressor, (value&0xff), msg->data, &msg->bit);",
          "181:     value = (value>>8);",
          "184:   msg->cursize = (msg->bit>>3)+1;",
          "",
          "[Added Lines]",
          "124:  if ( msg->oob ) {",
          "125:   if ( bits == 8 ) {",
          "129:   } else if ( bits == 16 ) {",
          "132:    CopyLittleShort( &msg->data[msg->cursize], &temp );",
          "135:   } else if ( bits==32 ) {",
          "136:    CopyLittleLong( &msg->data[msg->cursize], &value );",
          "139:   } else {",
          "140:    Com_Error( ERR_DROP, \"can't write %d bits\", bits );",
          "143:   value &= (0xffffffff >> (32 - bits));",
          "144:   if ( bits&7 ) {",
          "147:    for( i = 0; i < nbits; i++ ) {",
          "148:     Huff_putBit( (value & 1), msg->data, &msg->bit );",
          "149:     value = (value >> 1);",
          "153:   if ( bits ) {",
          "154:    for( i = 0; i < bits; i += 8 ) {",
          "155:     Huff_offsetTransmit( &msgHuff.compressor, (value & 0xff), msg->data, &msg->bit );",
          "156:     value = (value >> 8);",
          "159:   msg->cursize = (msg->bit >> 3) + 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}