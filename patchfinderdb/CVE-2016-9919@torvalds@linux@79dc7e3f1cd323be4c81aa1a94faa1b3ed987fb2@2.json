{
  "cve_id": "CVE-2016-9919",
  "cve_desc": "The icmp6_send function in net/ipv6/icmp.c in the Linux kernel through 4.8.12 omits a certain check of the dst data structure, which allows remote attackers to cause a denial of service (panic) via a fragmented IPv6 packet.",
  "repo": "torvalds/linux",
  "patch_hash": "79dc7e3f1cd323be4c81aa1a94faa1b3ed987fb2",
  "patch_info": {
    "commit_hash": "79dc7e3f1cd323be4c81aa1a94faa1b3ed987fb2",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/79dc7e3f1cd323be4c81aa1a94faa1b3ed987fb2",
    "files": [
      "net/ipv6/icmp.c"
    ],
    "message": "net: handle no dst on skb in icmp6_send\n\nAndrey reported the following while fuzzing the kernel with syzkaller:\n\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN\nModules linked in:\nCPU: 0 PID: 3859 Comm: a.out Not tainted 4.9.0-rc6+ #429\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011\ntask: ffff8800666d4200 task.stack: ffff880067348000\nRIP: 0010:[<ffffffff833617ec>]  [<ffffffff833617ec>]\nicmp6_send+0x5fc/0x1e30 net/ipv6/icmp.c:451\nRSP: 0018:ffff88006734f2c0  EFLAGS: 00010206\nRAX: ffff8800666d4200 RBX: 0000000000000000 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: dffffc0000000000 RDI: 0000000000000018\nRBP: ffff88006734f630 R08: ffff880064138418 R09: 0000000000000003\nR10: dffffc0000000000 R11: 0000000000000005 R12: 0000000000000000\nR13: ffffffff84e7e200 R14: ffff880064138484 R15: ffff8800641383c0\nFS:  00007fb3887a07c0(0000) GS:ffff88006cc00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020000000 CR3: 000000006b040000 CR4: 00000000000006f0\nStack:\n ffff8800666d4200 ffff8800666d49f8 ffff8800666d4200 ffffffff84c02460\n ffff8800666d4a1a 1ffff1000ccdaa2f ffff88006734f498 0000000000000046\n ffff88006734f440 ffffffff832f4269 ffff880064ba7456 0000000000000000\nCall Trace:\n [<ffffffff83364ddc>] icmpv6_param_prob+0x2c/0x40 net/ipv6/icmp.c:557\n [<     inline     >] ip6_tlvopt_unknown net/ipv6/exthdrs.c:88\n [<ffffffff83394405>] ip6_parse_tlv+0x555/0x670 net/ipv6/exthdrs.c:157\n [<ffffffff8339a759>] ipv6_parse_hopopts+0x199/0x460 net/ipv6/exthdrs.c:663\n [<ffffffff832ee773>] ipv6_rcv+0xfa3/0x1dc0 net/ipv6/ip6_input.c:191\n ...\n\nicmp6_send / icmpv6_send is invoked for both rx and tx paths. In both\ncases the dst->dev should be preferred for determining the L3 domain\nif the dst has been set on the skb. Fallback to the skb->dev if it has\nnot. This covers the case reported here where icmp6_send is invoked on\nRx before the route lookup.\n\nFixes: 5d41ce29e (\"net: icmp6_send should use dst dev to determine L3 domain\")\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: David Ahern <dsa@cumulusnetworks.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/ipv6/icmp.c||net/ipv6/icmp.c"
    ]
  },
  "patch_diff": {
    "net/ipv6/icmp.c||net/ipv6/icmp.c": [
      "File: net/ipv6/icmp.c -> net/ipv6/icmp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "448:  if (__ipv6_addr_needs_scope_id(addr_type))",
      "449:   iif = skb->dev->ifindex;",
      "",
      "[Removed Lines]",
      "450:  else",
      "451:   iif = l3mdev_master_ifindex(skb_dst(skb)->dev);",
      "",
      "[Added Lines]",
      "450:  else {",
      "451:   dst = skb_dst(skb);",
      "452:   iif = l3mdev_master_ifindex(dst ? dst->dev : skb->dev);",
      "453:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "40a50f8b307de8d08f3fa37c312fc16a7dd233e5",
      "candidate_info": {
        "commit_hash": "40a50f8b307de8d08f3fa37c312fc16a7dd233e5",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/40a50f8b307de8d08f3fa37c312fc16a7dd233e5",
        "files": [
          "drivers/mfd/tps65217.c"
        ],
        "message": "mfd: tps65217: Fix page fault on unloading modules\n\nTPS65217 IRQ domain should be removed and initialised as NULL when the\nmodule is unloaded for the next use. When tps65217.ko is loaded again,\nit causes the page fault. This patch fixes the error below.\n\nroot@arm:~# lsmod | grep \"tps\"\ntps65217_charger        3538  0\ntps65218_pwrbutton      2974  0\ntps65217                6710  1 tps65217_charger\n\nroot@arm:~# modprobe -r tps65217_charger\n\nroot@arm:~# modprobe tps65217.ko\n[   71.990277] Unable to handle kernel paging request at virtual address bf055944\n[   71.998063] pgd = dd3a4000\n[   72.000904] [bf055944] *pgd=9e6f7811, *pte=00000000, *ppte=00000000\n[   72.007567] Internal error: Oops: 7 [#1] SMP ARM\n[   72.012404] Modules linked in: tps65217(+) evdev musb_dsps musb_hdrc udc_core tps65218_pwrbutton usbcore phy_am335]\n[   72.055700] CPU: 0 PID: 243 Comm: modprobe Not tainted 4.9.0-rc5-next-20161114 #3\n[   72.063531] Hardware name: Generic AM33XX (Flattened Device Tree)\n[   72.069899] task: de714380 task.stack: de7e6000\n[   72.074655] PC is at irq_find_matching_fwspec+0x88/0x100\n[   72.080211] LR is at 0xde7e79d8\n[   72.083496] pc : [<c01a5d88>]    lr : [<de7e79d8>]    psr: 200e0013\n[   72.083496] sp : de7e7a78  ip : 00000000  fp : dd138a68\n[   72.095506] r10: c0ca04f8  r9 : 00000018  r8 : de7e7ab8\n[   72.100973] r7 : 00000001  r6 : c0c4517c  r5 : df963f68  r4 : de321980\n[   72.107797] r3 : bf055940  r2 : de714380  r1 : 00000000  r0 : 00000000\n[   72.114633] Flags: nzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none\n[   72.122084] Control: 10c5387d  Table: 9d3a4019  DAC: 00000051\n[   72.128097] Process modprobe (pid: 243, stack limit = 0xde7e6218)\n[   72.134489] Stack: (0xde7e7a78 to 0xde7e8000)\n[   72.139060] 7a60:                                                       df963f68 de7e7ab8\n[   72.147643] 7a80: 00000000 dd0e1000 dd491e20 c01a6ea0 600e0013 c01a5dc0 dd138a68 c0c45138\n[   72.156216] 7aa0: df963f68 00000000 df963f68 dd0e1010 00000000 c01a71a4 df963f68 00000001\n[   72.164800] 7ac0: 00000002 de7e7ac0 c80048b8 dd0adf00 df963f68 c0c4517c 00000000 de7e7b50\n[   72.173369] 7ae0: 00000018 c0ca04f8 dd138a68 c01a5dc0 df963f68 dd0e1010 00000000 dd0e1000\n[   72.181942] 7b00: dd491e20 c0653a70 df963f58 00000001 00000002 00000000 00000000 00000000\n[   72.190522] 7b20: 600e0093 c0cbf8f0 c0c0512c c0193674 00000001 00000080 00000000 c0554984\n[   72.199096] 7b40: 00000000 00000000 800e0013 c0553858 df963f68 00000000 00000000 00000000\n[   72.207674] 7b60: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n[   72.216239] 7b80: 00000000 00000000 00000000 00000000 00000000 00000000 dd0e1000 c0544d24\n[   72.224816] 7ba0: dd491e10 dd0e1010 dd16e800 bf1d517c bf1d5620 dd0e1010 c1497ed4 bf1d5620\n[   72.233398] 7bc0: dd0e1010 fffffdfb bf1d5620 bf1d5620 00000000 c054537c c0545330 dd0e1010\n[   72.241967] 7be0: c1497ed4 00000000 bf1d5620 c05433ac 00000000 00000000 de7e7c28 c0543570\n[   72.250537] 7c00: 00000001 c1497e90 00000000 c0541884 de080cd4 dd44b7d4 dd0e1010 dd0e1010\n[   72.259109] 7c20: dd0e1044 c05430c8 dd0e1010 00000001 dd0e1010 dd0e1018 dd0e1010 c0c9e328\n[   72.267676] 7c40: de5d4020 c0542760 dd0e1018 dd0e1010 00000000 c0540ba8 dd138a40 c048dec4\n[   72.276253] 7c60: 00000000 dd0e1000 00000001 dd0e1000 dd0e1010 dd0e1000 bf233de0 dd138a40\n[   72.284829] 7c80: dd0e1010 c05450a0 000000bf 00000000 dd138a60 00000001 dd0e1000 c0571240\n[   72.293398] 7ca0: 00000000 dd1ce9c0 00000040 dd1ce9cc bf233de0 00000003 de5d4020 ffffffff\n[   72.301969] 7cc0: 00000004 dd0adf00 00000000 c0571408 00000000 00000000 dd0adf00 de5d4020\n[   72.310543] 7ce0: c057146c dd1ce9c0 bf233d14 de5d4020 de7fb3d0 00000004 bf233d14 ffffffff\n[   72.319120] 7d00: 00000018 dd49bf30 c01cedc0 c05714d0 00000000 00000000 dd0adf00 de322810\n[   72.327692] 7d20: de322810 00000000 dd033000 000000f0 00000001 bf2333fc 00000000 00000000\n[   72.336269] 7d40: dd0adf00 de5d4020 000000b6 bf233e40 de5d4020 bf233968 de5d4004 de5d4000\n[   72.344848] 7d60: bf233314 c06148ac de5d4020 c1497ed4 00000000 bf233e40 00000000 c05433ac\n[   72.353422] 7d80: 00000000 de5d4020 bf233e40 de5d4054 00000000 bf236000 00000000 c0543538\n[   72.362002] 7da0: 00000000 bf233e40 c0543484 c05417e4 de1442a4 de5d04d0 bf233e40 de321300\n[   72.370582] 7dc0: c0caa5a4 c05429fc bf233be0 bf233e40 c0cbfa44 bf233e40 c0cbfa44 dd2f7740\n[   72.379148] 7de0: bf233f00 c05442f0 bf233e8c bf233e24 c0cbfa44 c0615ae0 00000000 bf233f00\n[   72.387718] 7e00: c0cbfa44 c010186c 200f0013 c0191650 de714380 00000000 600f0013 00000040\n[   72.396286] 7e20: dd2f7740 c018f1ac 00000001 c0c8356c 024000c0 c01a8854 c0c56e0e c028225c\n[   72.404863] 7e40: dd2f7740 c0191984 de714380 dd2f7740 00000001 bf233f00 bf233f00 c0cbfa44\n[   72.413440] 7e60: dd2f7740 bf233f00 00000001 dd49bf08 dd49bf30 c0230998 00000001 c0c8356c\n[   72.421997] 7e80: c0c4c536 c0cbfa44 c0c0512c c01d2070 bf233f0c 00007fff bf233f00 c01cf5b8\n[   72.430570] 7ea0: 00000000 c1475134 c01cee34 bf23411c bf233f48 bf234054 bf234150 00000000\n[   72.439144] 7ec0: 024002c2 de7fbf40 0009bc20 c02776ac ff800000 00000000 00000000 bf233670\n[   72.447723] 7ee0: 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n[   72.456298] 7f00: 00000000 00000000 00000000 00000000 c01d2590 0000aa41 00000000 00000000\n[   72.464862] 7f20: 000b2549 e12c3a41 00000051 de7e6000 0009bc20 c01d2630 00000530 e12b9000\n[   72.473438] 7f40: 0000aa41 e12c1434 e12c1211 e12c336c 00001150 00001620 00000000 00000000\n[   72.482003] 7f60: 00000000 000010fc 00000035 00000036 0000001d 0000001a 00000017 00000000\n[   72.490564] 7f80: de7e6000 3ba39a00 0009b008 0009b718 00000080 c0107704 de7e6000 00000000\n[   72.499141] 7fa0: 0009f609 c0107560 3ba39a00 0009b008 000a7b08 0000aa41 0009bc20 0000aa41\n[   72.507717] 7fc0: 3ba39a00 0009b008 0009b718 00000080 00000001 00000008 0009ab14 0009f609\n[   72.516290] 7fe0: bea31ab8 bea31aa8 0001e5eb b6e83b42 800f0030 000a7b08 0000ffff 0840ffff\n[   72.524883] [<c01a5d88>] (irq_find_matching_fwspec) from [<c01a6ea0>] (irq_create_fwspec_mapping+0x28/0x2e0)\n[   72.535174] [<c01a6ea0>] (irq_create_fwspec_mapping) from [<c01a71a4>] (irq_create_of_mapping+0x4c/0x54)\n[   72.545115] [<c01a71a4>] (irq_create_of_mapping) from [<c0653a70>] (of_irq_get+0x58/0x68)\n[   72.553699] [<c0653a70>] (of_irq_get) from [<c0544d24>] (platform_get_irq+0x1c/0xec)\n[   72.561828] [<c0544d24>] (platform_get_irq) from [<bf1d517c>] (tps6521x_pb_probe+0xd0/0x1a8 [tps65218_pwrbutton])\n[   72.572581] [<bf1d517c>] (tps6521x_pb_probe [tps65218_pwrbutton]) from [<c054537c>] (platform_drv_probe+0x4c/0xac)\n[   72.583426] [<c054537c>] (platform_drv_probe) from [<c05433ac>] (driver_probe_device+0x204/0x2dc)\n[   72.592729] [<c05433ac>] (driver_probe_device) from [<c0541884>] (bus_for_each_drv+0x58/0x8c)\n[   72.601657] [<c0541884>] (bus_for_each_drv) from [<c05430c8>] (__device_attach+0xb0/0x114)\n[   72.610324] [<c05430c8>] (__device_attach) from [<c0542760>] (bus_probe_device+0x88/0x90)\n[   72.618898] [<c0542760>] (bus_probe_device) from [<c0540ba8>] (device_add+0x3b8/0x560)\n[   72.627203] [<c0540ba8>] (device_add) from [<c05450a0>] (platform_device_add+0xa8/0x208)\n[   72.635693] [<c05450a0>] (platform_device_add) from [<c0571240>] (mfd_add_device+0x240/0x338)\n[   72.644634] [<c0571240>] (mfd_add_device) from [<c0571408>] (mfd_add_devices+0xa0/0x104)\n[   72.653120] [<c0571408>] (mfd_add_devices) from [<c05714d0>] (devm_mfd_add_devices+0x60/0xa8)\n[   72.662077] [<c05714d0>] (devm_mfd_add_devices) from [<bf2333fc>] (tps65217_probe+0xe8/0x2ec [tps65217])\n[   72.672026] [<bf2333fc>] (tps65217_probe [tps65217]) from [<c06148ac>] (i2c_device_probe+0x168/0x1f4)\n[   72.681695] [<c06148ac>] (i2c_device_probe) from [<c05433ac>] (driver_probe_device+0x204/0x2dc)\n[   72.690816] [<c05433ac>] (driver_probe_device) from [<c0543538>] (__driver_attach+0xb4/0xb8)\n[   72.699657] [<c0543538>] (__driver_attach) from [<c05417e4>] (bus_for_each_dev+0x60/0x94)\n[   72.708224] [<c05417e4>] (bus_for_each_dev) from [<c05429fc>] (bus_add_driver+0x18c/0x214)\n[   72.716892] [<c05429fc>] (bus_add_driver) from [<c05442f0>] (driver_register+0x78/0xf8)\n[   72.725280] [<c05442f0>] (driver_register) from [<c0615ae0>] (i2c_register_driver+0x38/0x80)\n[   72.734120] [<c0615ae0>] (i2c_register_driver) from [<c010186c>] (do_one_initcall+0x3c/0x178)\n[   72.743055] [<c010186c>] (do_one_initcall) from [<c0230998>] (do_init_module+0x5c/0x1d0)\n[   72.751537] [<c0230998>] (do_init_module) from [<c01d2070>] (load_module+0x1d10/0x21c0)\n[   72.759933] [<c01d2070>] (load_module) from [<c01d2630>] (SyS_init_module+0x110/0x154)\n[   72.768242] [<c01d2630>] (SyS_init_module) from [<c0107560>] (ret_fast_syscall+0x0/0x1c)\n[   72.776725] Code: e5944000 e1540006 0a00001b e594300c (e593c004)\n[   72.783181] ---[ end trace 0278ec325f4689b8 ]---\n\nFixes: 6556bdacf646 (\"mfd: tps65217: Add support for IRQs\")\nSigned-off-by: Milo Kim <woogyom.kim@gmail.com>\nSigned-off-by: Lee Jones <lee.jones@linaro.org>",
        "before_after_code_files": [
          "drivers/mfd/tps65217.c||drivers/mfd/tps65217.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/mfd/tps65217.c||drivers/mfd/tps65217.c": [
          "File: drivers/mfd/tps65217.c -> drivers/mfd/tps65217.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "424:  return 0;",
          "425: }",
          "427: static const struct i2c_device_id tps65217_id_table[] = {",
          "428:  {\"tps65217\", TPS65217},",
          "429:  { /* sentinel */ }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "427: static int tps65217_remove(struct i2c_client *client)",
          "428: {",
          "429:  struct tps65217 *tps = i2c_get_clientdata(client);",
          "430:  unsigned int virq;",
          "431:  int i;",
          "433:  for (i = 0; i < ARRAY_SIZE(tps65217_irqs); i++) {",
          "434:   virq = irq_find_mapping(tps->irq_domain, i);",
          "435:   if (virq)",
          "436:    irq_dispose_mapping(virq);",
          "437:  }",
          "439:  irq_domain_remove(tps->irq_domain);",
          "440:  tps->irq_domain = NULL;",
          "442:  return 0;",
          "443: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "437:  },",
          "438:  .id_table = tps65217_id_table,",
          "439:  .probe  = tps65217_probe,",
          "440: };",
          "442: static int __init tps65217_init(void)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "458:  .remove  = tps65217_remove,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df492896e6dfb44fd1154f5402428d8e52705081",
      "candidate_info": {
        "commit_hash": "df492896e6dfb44fd1154f5402428d8e52705081",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/df492896e6dfb44fd1154f5402428d8e52705081",
        "files": [
          "arch/x86/kvm/irq_comm.c"
        ],
        "message": "KVM: x86: check for pic and ioapic presence before use\n\nSplit irqchip allows pic and ioapic routes to be used without them being\ncreated, which results in NULL access.  Check for NULL and avoid it.\n(The setup is too racy for a nicer solutions.)\n\nFound by syzkaller:\n\n  general protection fault: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN\n  Dumping ftrace buffer:\n     (ftrace buffer empty)\n  Modules linked in:\n  CPU: 3 PID: 11923 Comm: kworker/3:2 Not tainted 4.9.0-rc5+ #27\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011\n  Workqueue: events irqfd_inject\n  task: ffff88006a06c7c0 task.stack: ffff880068638000\n  RIP: 0010:[...]  [...] __lock_acquire+0xb35/0x3380 kernel/locking/lockdep.c:3221\n  RSP: 0000:ffff88006863ea20  EFLAGS: 00010006\n  RAX: dffffc0000000000 RBX: dffffc0000000000 RCX: 0000000000000000\n  RDX: 0000000000000039 RSI: 0000000000000000 RDI: 1ffff1000d0c7d9e\n  RBP: ffff88006863ef58 R08: 0000000000000001 R09: 0000000000000000\n  R10: 00000000000001c8 R11: 0000000000000000 R12: ffff88006a06c7c0\n  R13: 0000000000000001 R14: ffffffff8baab1a0 R15: 0000000000000001\n  FS:  0000000000000000(0000) GS:ffff88006d100000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00000000004abdd0 CR3: 000000003e2f2000 CR4: 00000000000026e0\n  Stack:\n   ffffffff894d0098 1ffff1000d0c7d56 ffff88006863ecd0 dffffc0000000000\n   ffff88006a06c7c0 0000000000000000 ffff88006863ecf8 0000000000000082\n   0000000000000000 ffffffff815dd7c1 ffffffff00000000 ffffffff00000000\n  Call Trace:\n   [...] lock_acquire+0x2a2/0x790 kernel/locking/lockdep.c:3746\n   [...] __raw_spin_lock include/linux/spinlock_api_smp.h:144\n   [...] _raw_spin_lock+0x38/0x50 kernel/locking/spinlock.c:151\n   [...] spin_lock include/linux/spinlock.h:302\n   [...] kvm_ioapic_set_irq+0x4c/0x100 arch/x86/kvm/ioapic.c:379\n   [...] kvm_set_ioapic_irq+0x8f/0xc0 arch/x86/kvm/irq_comm.c:52\n   [...] kvm_set_irq+0x239/0x640 arch/x86/kvm/../../../virt/kvm/irqchip.c:101\n   [...] irqfd_inject+0xb4/0x150 arch/x86/kvm/../../../virt/kvm/eventfd.c:60\n   [...] process_one_work+0xb40/0x1ba0 kernel/workqueue.c:2096\n   [...] worker_thread+0x214/0x18a0 kernel/workqueue.c:2230\n   [...] kthread+0x328/0x3e0 kernel/kthread.c:209\n   [...] ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:433\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: stable@vger.kernel.org\nFixes: 49df6397edfc (\"KVM: x86: Split the APIC from the rest of IRQCHIP.\")\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>",
        "before_after_code_files": [
          "arch/x86/kvm/irq_comm.c||arch/x86/kvm/irq_comm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/x86/kvm/irq_comm.c||arch/x86/kvm/irq_comm.c": [
          "File: arch/x86/kvm/irq_comm.c -> arch/x86/kvm/irq_comm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:       bool line_status)",
          "42: {",
          "43:  struct kvm_pic *pic = pic_irqchip(kvm);",
          "44:  return kvm_pic_set_irq(pic, e->irqchip.pin, irq_source_id, level);",
          "45: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:  if (!pic)",
          "51:   return -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:          bool line_status)",
          "50: {",
          "51:  struct kvm_ioapic *ioapic = kvm->arch.vioapic;",
          "52:  return kvm_ioapic_set_irq(ioapic, e->irqchip.pin, irq_source_id, level,",
          "53:     line_status);",
          "54: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:  if (!ioapic)",
          "63:   return -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3cbf61fb9fe24c0c3a1591b65175f8c5b3ddaac2",
      "candidate_info": {
        "commit_hash": "3cbf61fb9fe24c0c3a1591b65175f8c5b3ddaac2",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3cbf61fb9fe24c0c3a1591b65175f8c5b3ddaac2",
        "files": [
          "crypto/skcipher.c"
        ],
        "message": "crypto: skcipher - fix crash in skcipher_walk_aead()\n\nThe new skcipher_walk_aead() may crash in the following way due to\nthe walk flag SKCIPHER_WALK_PHYS not being cleared at the start of the\nwalk:\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000001\n[..]\nInternal error: Oops: 96000044 [#1] PREEMPT SMP\n[..]\nPC is at skcipher_walk_next+0x208/0x450\nLR is at skcipher_walk_next+0x1e4/0x450\npc : [<ffff2b93b7104e20>] lr : [<ffff2b93b7104dfc>] pstate: 40000045\nsp : ffffb925fa517940\n[...]\n[<ffff2b93b7104e20>] skcipher_walk_next+0x208/0x450\n[<ffff2b93b710535c>] skcipher_walk_first+0x54/0x148\n[<ffff2b93b7105664>] skcipher_walk_aead+0xd4/0x108\n[<ffff2b93b6e77928>] ccm_encrypt+0x68/0x158\n\nSo clear the flag at the appropriate time.\n\nSigned-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "crypto/skcipher.c||crypto/skcipher.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/skcipher.c||crypto/skcipher.c": [
          "File: crypto/skcipher.c -> crypto/skcipher.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "506:  struct crypto_aead *tfm = crypto_aead_reqtfm(req);",
          "507:  int err;",
          "509:  scatterwalk_start(&walk->in, req->src);",
          "510:  scatterwalk_start(&walk->out, req->dst);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "509:  walk->flags &= ~SKCIPHER_WALK_PHYS;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2fc995a87f2efcd803438f07bfecd35cc3d90d32",
      "candidate_info": {
        "commit_hash": "2fc995a87f2efcd803438f07bfecd35cc3d90d32",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/2fc995a87f2efcd803438f07bfecd35cc3d90d32",
        "files": [
          "sound/soc/intel/atom/sst-mfld-platform-pcm.c"
        ],
        "message": "ASoC: intel: Fix crash at suspend/resume without card registration\n\nWhen ASoC Intel SST Medfield driver is probed but without codec / card\nassigned, it causes an Oops and freezes the kernel at suspend/resume,\n\n PM: Suspending system (freeze)\n Suspending console(s) (use no_console_suspend to debug)\n BUG: unable to handle kernel NULL pointer dereference at 0000000000000018\n IP: [<ffffffffc09d9409>] sst_soc_prepare+0x19/0xa0 [snd_soc_sst_mfld_platform]\n Oops: 0000 [#1] PREEMPT SMP\n CPU: 0 PID: 1552 Comm: systemd-sleep Tainted: G W 4.9.0-rc6-1.g5f5c2ad-default #1\n Call Trace:\n  [<ffffffffb45318f9>] dpm_prepare+0x209/0x460\n  [<ffffffffb4531b61>] dpm_suspend_start+0x11/0x60\n  [<ffffffffb40d3cc2>] suspend_devices_and_enter+0xb2/0x710\n  [<ffffffffb40d462e>] pm_suspend+0x30e/0x390\n  [<ffffffffb40d2eba>] state_store+0x8a/0x90\n  [<ffffffffb43c670f>] kobj_attr_store+0xf/0x20\n  [<ffffffffb42b0d97>] sysfs_kf_write+0x37/0x40\n  [<ffffffffb42b02bc>] kernfs_fop_write+0x11c/0x1b0\n  [<ffffffffb422be68>] __vfs_write+0x28/0x140\n  [<ffffffffb43728a8>] ? apparmor_file_permission+0x18/0x20\n  [<ffffffffb433b2ab>] ? security_file_permission+0x3b/0xc0\n  [<ffffffffb422d095>] vfs_write+0xb5/0x1a0\n  [<ffffffffb422e3d6>] SyS_write+0x46/0xa0\n  [<ffffffffb4719fbb>] entry_SYSCALL_64_fastpath+0x1e/0xad\n\nAdd proper NULL checks in the PM code of mdfld driver.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>\nAcked-by: Vinod Koul <vinod.koul@intel.com>\nSigned-off-by: Mark Brown <broonie@kernel.org>\nCc: <stable@vger.kernel.org>",
        "before_after_code_files": [
          "sound/soc/intel/atom/sst-mfld-platform-pcm.c||sound/soc/intel/atom/sst-mfld-platform-pcm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sound/soc/intel/atom/sst-mfld-platform-pcm.c||sound/soc/intel/atom/sst-mfld-platform-pcm.c": [
          "File: sound/soc/intel/atom/sst-mfld-platform-pcm.c -> sound/soc/intel/atom/sst-mfld-platform-pcm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "771:  struct sst_data *drv = dev_get_drvdata(dev);",
          "772:  struct snd_soc_pcm_runtime *rtd;",
          "775:  snd_soc_suspend(drv->soc_card->dev);",
          "776:  snd_soc_poweroff(drv->soc_card->dev);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "774:  if (!drv->soc_card)",
          "775:   return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "793:  struct sst_data *drv = dev_get_drvdata(dev);",
          "794:  struct snd_soc_pcm_runtime *rtd;",
          "797:  list_for_each_entry(rtd, &drv->soc_card->rtd_list, list) {",
          "798:   struct snd_soc_dai *dai = rtd->cpu_dai;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "799:  if (!drv->soc_card)",
          "800:   return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc98e6ce6abe1c0103cbd7aff1ee586622a9361e",
      "candidate_info": {
        "commit_hash": "cc98e6ce6abe1c0103cbd7aff1ee586622a9361e",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/cc98e6ce6abe1c0103cbd7aff1ee586622a9361e",
        "files": [
          "drivers/gpu/drm/drm_mm.c"
        ],
        "message": "drm: Initialise drm_mm.head_node.allocated\n\ncommit 202b52b7fbf7 (\"drm: Track drm_mm nodes with an interval tree\")\nintroduced a requirement that the special drm_mm.head_node was\ninitialised and marked as not being allocated. It is a very special node\nthat has no side but has a hole that represents the drm_mm address\nspace, and holds the list of nodes. Since it is not a real node, it is\nnot part of the node rbtree and we detect this as it being unallocated.\nThis presumed that drm_mm_init() was initialising it to zero. It happens\nthat i915 kzallocs its objects and so it was accidentally setting it,\nbut for generic use we cannot make that assumption.\n\n[   22.981519] general protection fault: 0000 [#1] SMP\n[   22.981521] Modules linked in: test_drm_mm(+) ctr ccm arc4 rt2800usb rt2x00usb rt2800lib rt2x00lib crc_ccitt mac80211 cmac rfcomm bnep snd_hda_codec_realtek snd_hda_codec_hdmi snd_hda_codec_generic snd_hda_intel dcdbas snd_hda_codec x86_pkg_temp_thermal intel_powerclamp btusb snd_hda_core coretemp crct10dif_pclmul cfg80211 btrtl btbcm btintel bluetooth crc32_pclmul ghash_clmulni_intel aesni_intel snd_pcm i2c_hid aes_x86_64 lrw gf128mul glue_helper ablk_helper cryptd snd_timer hid_multitouch snd joydev serio_raw lpc_ich mfd_core i2c_designware_platform i2c_designware_core 8250_dw binfmt_misc soundcore acpi_pad nls_iso8859_1 usbhid hid psmouse ahci libahci [last unloaded: test_drm_mm]\n[   22.981544] CPU: 1 PID: 2088 Comm: drm_mm Tainted: G        W       4.9.0-rc7+ #234\n[   22.981545] Hardware name: Dell Inc. XPS 13 9343/0310JH, BIOS A07 11/11/2015\n[   22.981546] task: ffff88020c971cc0 task.stack: ffffc90001728000\n[   22.981547] RIP: 0010:[<ffffffff814050f0>]  [<ffffffff814050f0>] drm_mm_interval_tree_add_node+0xa0/0xd0\n[   22.981551] RSP: 0018:ffffc9000172ba98  EFLAGS: 00010202\n[   22.981552] RAX: 0f0000c69cf63d80 RBX: ffff88020be00000 RCX: ffff88020be00000\n[   22.981553] RDX: 0000000000000fff RSI: ffffc9000172bc48 RDI: ffffffff810ac4df\n[   22.981553] RBP: ffffc9000172bb08 R08: ffffc9000172bc70 R09: 0000000000000fff\n[   22.981554] R10: ffffffff810ac4d7 R11: 4dc04d8b4cffffe5 R12: 0000000000001000\n[   22.981555] R13: ffffc9000172bbd0 R14: ffffc9000172bbe0 R15: 0000000002000000\n[   22.981556] FS:  00007f80c9fab740(0000) GS:ffff88021f480000(0000) knlGS:0000000000000000\n[   22.981557] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   22.981558] CR2: 00007f80c9fd5000 CR3: 000000020c191000 CR4: 00000000003406e0\n[   22.981559] Stack:\n[   22.981560]  ffffffff81405d09 ffff88020be00000 ffffc9000172bbe0 000000000172bb08\n[   22.981562]  ffffffffffffffff 0000000000000000 0000000000000000 0000000000000000\n[   22.981563]  0000000002000000 0000000002000000 ffffffffa02f3000 ffff88020be00000\n[   22.981565] Call Trace:\n[   22.981568]  [<ffffffff81405d09>] ? drm_mm_insert_node_generic+0x229/0x310\n[   22.981570]  [<ffffffffa02f3000>] ? 0xffffffffa02f3000\n[   22.981572]  [<ffffffffa02903c1>] __subtest_insert_range.constprop.7+0xd1/0x5b0 [test_drm_mm]\n[   22.981575]  [<ffffffff81081222>] ? default_wake_function+0x12/0x20\n[   22.981576]  [<ffffffff81096905>] ? __wake_up_common+0x55/0x90\n[   22.981578]  [<ffffffff81085f42>] ? sched_clock_cpu+0x72/0xa0\n[   22.981581]  [<ffffffff811308ad>] ? irq_work_queue+0xd/0x80\n[   22.981582]  [<ffffffff810abcc4>] ? wake_up_klogd+0x34/0x40\n[   22.981584]  [<ffffffff810ac19d>] ? console_unlock+0x4cd/0x530\n[   22.981585]  [<ffffffff810ac4d7>] ? vprintk_emit+0x2d7/0x490\n[   22.981587]  [<ffffffff810ac82f>] ? vprintk_default+0x1f/0x30\n[   22.981589]  [<ffffffff81146e1c>] ? printk+0x4d/0x4f\n[   22.981590]  [<ffffffffa02f3000>] ? 0xffffffffa02f3000\n[   22.981592]  [<ffffffffa02908b5>] subtest_insert_range+0x15/0x80 [test_drm_mm]\n[   22.981594]  [<ffffffffa02f3088>] test_drm_mm_init+0x88/0x1000 [test_drm_mm]\n[   22.981597]  [<ffffffff8100043d>] do_one_initcall+0x3d/0x150\n[   22.981600]  [<ffffffff8119dfbf>] ? kfree+0x13f/0x180\n[   22.981602]  [<ffffffff811471f2>] do_init_module+0x60/0x1f1\n[   22.981606]  [<ffffffff810db878>] load_module+0x2228/0x2790\n[   22.981608]  [<ffffffff810d8590>] ? __symbol_put+0x40/0x40\n[   22.981612]  [<ffffffff811c52b1>] ? kernel_read+0x41/0x60\n[   22.981614]  [<ffffffff810dbfb6>] SYSC_finit_module+0x96/0xd0\n[   22.981617]  [<ffffffff810dc00e>] SyS_finit_module+0xe/0x10\n[   22.981620]  [<ffffffff816e7aa4>] entry_SYSCALL_64_fastpath+0x17/0x98\n[   22.981622] Code: c7 41 30 00 00 00 00 48 89 e5 48 89 3a 48 c7 c2 20 4e 40 81 e8 b2 a1 f0 ff 5d c3 48 8d 56 78 45 31 d2 48 89 d6 eb 25 48 8b 51 58 <48> 39 50 38 73 04 48 89 50 38 4c 8b 58 28 4c 39 59 48 48 8d 50\n[   22.981651] RIP  [<ffffffff814050f0>] drm_mm_interval_tree_add_node+0xa0/0xd0\n[   22.981655]  RSP <ffffc9000172ba98>\n\nTestcase: igt/drm_mm\nFixes: 202b52b7fbf7 (\"drm: Track drm_mm nodes with an interval tree\")\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: David Herrmann <dh.herrmann@gmail.com>\nCc: dri-devel@lists.freedesktop.org\nCc: Daniel Vetter <daniel.vetter@ffwll.ch>\nCc: <drm-intel-fixes@lists.freedesktop.org> # v4.9-rc1+\nSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nLink: http://patchwork.freedesktop.org/patch/msgid/20161130205126.31106-1-chris@chris-wilson.co.uk",
        "before_after_code_files": [
          "drivers/gpu/drm/drm_mm.c||drivers/gpu/drm/drm_mm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/drm_mm.c||drivers/gpu/drm/drm_mm.c": [
          "File: drivers/gpu/drm/drm_mm.c -> drivers/gpu/drm/drm_mm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "907:  INIT_LIST_HEAD(&mm->head_node.node_list);",
          "908:  mm->head_node.hole_follows = 1;",
          "909:  mm->head_node.scanned_block = 0;",
          "910:  mm->head_node.scanned_prev_free = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "908:  mm->head_node.allocated = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}