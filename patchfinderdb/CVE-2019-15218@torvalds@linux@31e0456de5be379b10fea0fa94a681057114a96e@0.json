{
  "cve_id": "CVE-2019-15218",
  "cve_desc": "An issue was discovered in the Linux kernel before 5.1.8. There is a NULL pointer dereference caused by a malicious USB device in the drivers/media/usb/siano/smsusb.c driver.",
  "repo": "torvalds/linux",
  "patch_hash": "31e0456de5be379b10fea0fa94a681057114a96e",
  "patch_info": {
    "commit_hash": "31e0456de5be379b10fea0fa94a681057114a96e",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/31e0456de5be379b10fea0fa94a681057114a96e",
    "files": [
      "drivers/media/usb/siano/smsusb.c"
    ],
    "message": "media: usb: siano: Fix general protection fault in smsusb\n\nThe syzkaller USB fuzzer found a general-protection-fault bug in the\nsmsusb part of the Siano DVB driver.  The fault occurs during probe\nbecause the driver assumes without checking that the device has both\nIN and OUT endpoints and the IN endpoint is ep1.\n\nBy slightly rearranging the driver's initialization code, we can make\nthe appropriate checks early on and thus avoid the problem.  If the\nexpected endpoints aren't present, the new code safely returns -ENODEV\nfrom the probe routine.\n\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu>\nReported-and-tested-by: syzbot+53f029db71c19a47325a@syzkaller.appspotmail.com\nCC: <stable@vger.kernel.org>\nReviewed-by: Johan Hovold <johan@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "before_after_code_files": [
      "drivers/media/usb/siano/smsusb.c||drivers/media/usb/siano/smsusb.c"
    ]
  },
  "patch_diff": {
    "drivers/media/usb/siano/smsusb.c||drivers/media/usb/siano/smsusb.c": [
      "File: drivers/media/usb/siano/smsusb.c -> drivers/media/usb/siano/smsusb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "400:  struct smsusb_device_t *dev;",
      "401:  void *mdev;",
      "402:  int i, rc;",
      "405:  dev = kzalloc(sizeof(struct smsusb_device_t), GFP_KERNEL);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "403:  int in_maxp;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "411:  dev->udev = interface_to_usbdev(intf);",
      "412:  dev->state = SMSUSB_DISCONNECTED;",
      "414:  params.device_type = sms_get_board(board_id)->type;",
      "416:  switch (params.device_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "415:  for (i = 0; i < intf->cur_altsetting->desc.bNumEndpoints; i++) {",
      "416:   struct usb_endpoint_descriptor *desc =",
      "417:     &intf->cur_altsetting->endpoint[i].desc;",
      "419:   if (desc->bEndpointAddress & USB_DIR_IN) {",
      "420:    dev->in_ep = desc->bEndpointAddress;",
      "421:    in_maxp = usb_endpoint_maxp(desc);",
      "422:   } else {",
      "423:    dev->out_ep = desc->bEndpointAddress;",
      "424:   }",
      "425:  }",
      "427:  pr_debug(\"in_ep = %02x, out_ep = %02x\\n\", dev->in_ep, dev->out_ep);",
      "429:   smsusb_term_device(intf);",
      "430:   return -ENODEV;",
      "431:  }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "426:  default:",
      "427:   dev->buffer_size = USB2_BUFFER_SIZE;",
      "432:   params.flags |= SMS_DEVICE_FAMILY2;",
      "433:   break;",
      "434:  }",
      "446:  params.device = &dev->udev->dev;",
      "447:  params.usb_device = dev->udev;",
      "448:  params.buffer_size = dev->buffer_size;",
      "",
      "[Removed Lines]",
      "428:   dev->response_alignment =",
      "429:       le16_to_cpu(dev->udev->ep_in[1]->desc.wMaxPacketSize) -",
      "430:       sizeof(struct sms_msg_hdr);",
      "436:  for (i = 0; i < intf->cur_altsetting->desc.bNumEndpoints; i++) {",
      "437:   if (intf->cur_altsetting->endpoint[i].desc. bEndpointAddress & USB_DIR_IN)",
      "438:    dev->in_ep = intf->cur_altsetting->endpoint[i].desc.bEndpointAddress;",
      "439:   else",
      "440:    dev->out_ep = intf->cur_altsetting->endpoint[i].desc.bEndpointAddress;",
      "441:  }",
      "443:  pr_debug(\"in_ep = %02x, out_ep = %02x\\n\",",
      "444:   dev->in_ep, dev->out_ep);",
      "",
      "[Added Lines]",
      "447:   dev->response_alignment = in_maxp - sizeof(struct sms_msg_hdr);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "45457c01171fd1488a7000d1751c06ed8560ee38",
      "candidate_info": {
        "commit_hash": "45457c01171fd1488a7000d1751c06ed8560ee38",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/45457c01171fd1488a7000d1751c06ed8560ee38",
        "files": [
          "drivers/media/usb/siano/smsusb.c"
        ],
        "message": "media: usb: siano: Fix false-positive \"uninitialized variable\" warning\n\nGCC complains about an apparently uninitialized variable recently\nadded to smsusb_init_device().  It's a false positive, but to silence\nthe warning this patch adds a trivial initialization.\n\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu>\nReported-by: kbuild test robot <lkp@intel.com>\nCC: <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "drivers/media/usb/siano/smsusb.c||drivers/media/usb/siano/smsusb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/media/usb/siano/smsusb.c||drivers/media/usb/siano/smsusb.c"
          ],
          "candidate": [
            "drivers/media/usb/siano/smsusb.c||drivers/media/usb/siano/smsusb.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/media/usb/siano/smsusb.c||drivers/media/usb/siano/smsusb.c": [
          "File: drivers/media/usb/siano/smsusb.c -> drivers/media/usb/siano/smsusb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "400:  struct smsusb_device_t *dev;",
          "401:  void *mdev;",
          "402:  int i, rc;",
          "406:  dev = kzalloc(sizeof(struct smsusb_device_t), GFP_KERNEL);",
          "",
          "[Removed Lines]",
          "403:  int in_maxp;",
          "",
          "[Added Lines]",
          "403:  int in_maxp = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a47686636d84eaec5c9c6e84bd5f96bed34d526d",
      "candidate_info": {
        "commit_hash": "a47686636d84eaec5c9c6e84bd5f96bed34d526d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a47686636d84eaec5c9c6e84bd5f96bed34d526d",
        "files": [
          "drivers/media/usb/siano/smsusb.c"
        ],
        "message": "media: smsusb: better handle optional alignment\n\nMost Siano devices require an alignment for the response.\n\nChangeset f3be52b0056a (\"media: usb: siano: Fix general protection fault in smsusb\")\nchanged the logic with gets such aligment, but it now produces a\nsparce warning:\n\ndrivers/media/usb/siano/smsusb.c: In function 'smsusb_init_device':\ndrivers/media/usb/siano/smsusb.c:447:37: warning: 'in_maxp' may be used uninitialized in this function [-Wmaybe-uninitialized]\n  447 |   dev->response_alignment = in_maxp - sizeof(struct sms_msg_hdr);\n      |                             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe sparse message itself is bogus, but a broken (or fake) USB\neeprom could produce a negative value for response_alignment.\n\nSo, change the code in order to check if the result is not\nnegative.\n\nFixes: 31e0456de5be (\"media: usb: siano: Fix general protection fault in smsusb\")\nCC: <stable@vger.kernel.org>\nSigned-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "drivers/media/usb/siano/smsusb.c||drivers/media/usb/siano/smsusb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/media/usb/siano/smsusb.c||drivers/media/usb/siano/smsusb.c"
          ],
          "candidate": [
            "drivers/media/usb/siano/smsusb.c||drivers/media/usb/siano/smsusb.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/media/usb/siano/smsusb.c||drivers/media/usb/siano/smsusb.c": [
          "File: drivers/media/usb/siano/smsusb.c -> drivers/media/usb/siano/smsusb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "400:  struct smsusb_device_t *dev;",
          "401:  void *mdev;",
          "402:  int i, rc;",
          "406:  dev = kzalloc(sizeof(struct smsusb_device_t), GFP_KERNEL);",
          "",
          "[Removed Lines]",
          "403:  int in_maxp = 0;",
          "",
          "[Added Lines]",
          "403:  int align = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "419:   if (desc->bEndpointAddress & USB_DIR_IN) {",
          "420:    dev->in_ep = desc->bEndpointAddress;",
          "422:   } else {",
          "423:    dev->out_ep = desc->bEndpointAddress;",
          "424:   }",
          "425:  }",
          "427:  pr_debug(\"in_ep = %02x, out_ep = %02x\\n\", dev->in_ep, dev->out_ep);",
          "429:   smsusb_term_device(intf);",
          "430:   return -ENODEV;",
          "431:  }",
          "",
          "[Removed Lines]",
          "421:    in_maxp = usb_endpoint_maxp(desc);",
          "",
          "[Added Lines]",
          "421:    align = usb_endpoint_maxp(desc) - sizeof(struct sms_msg_hdr);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "445:  default:",
          "446:   dev->buffer_size = USB2_BUFFER_SIZE;",
          "449:   params.flags |= SMS_DEVICE_FAMILY2;",
          "450:   break;",
          "",
          "[Removed Lines]",
          "447:   dev->response_alignment = in_maxp - sizeof(struct sms_msg_hdr);",
          "",
          "[Added Lines]",
          "447:   dev->response_alignment = align;",
          "",
          "---------------"
        ]
      }
    }
  ]
}