{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "04ce7f29a605ba533291a7eaa5f5000b5287d12c",
      "candidate_info": {
        "commit_hash": "04ce7f29a605ba533291a7eaa5f5000b5287d12c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/04ce7f29a605ba533291a7eaa5f5000b5287d12c",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: fix mips64 mode",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:  if (!strcmp(mode, \"armb\") || !strcmp(mode, \"armbe\") ) {",
          "188:   arch = CS_ARCH_ARM;",
          "190:  }",
          "192:  if (!strcmp(mode, \"arml\")) {",
          "193:   arch = CS_ARCH_ARM;",
          "195:  }",
          "197:  if (!strcmp(mode, \"thumb\")) {",
          "198:   arch = CS_ARCH_ARM;",
          "200:  }",
          "202:  if (!strcmp(mode, \"thumbbe\")) {",
          "203:   arch = CS_ARCH_ARM;",
          "205:  }",
          "207:  if (!strcmp(mode, \"thumble\")) {",
          "208:   arch = CS_ARCH_ARM;",
          "210:  }",
          "212:  if (!strcmp(mode, \"arm64\")) {",
          "",
          "[Removed Lines]",
          "189:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_BIG_ENDIAN, &handle);",
          "194:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_LITTLE_ENDIAN, &handle);",
          "199:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB + CS_MODE_LITTLE_ENDIAN, &handle);",
          "204:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB + CS_MODE_BIG_ENDIAN, &handle);",
          "209:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_LITTLE_ENDIAN, &handle);",
          "",
          "[Added Lines]",
          "189:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_BIG_ENDIAN, &handle);",
          "194:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_LITTLE_ENDIAN, &handle);",
          "199:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB | CS_MODE_LITTLE_ENDIAN, &handle);",
          "204:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB | CS_MODE_BIG_ENDIAN, &handle);",
          "209:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_LITTLE_ENDIAN, &handle);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:  if (!strcmp(mode, \"mips\")) {",
          "218:   arch = CS_ARCH_MIPS;",
          "220:  }",
          "222:  if (!strcmp(mode, \"mipsbe\")) {",
          "223:   arch = CS_ARCH_MIPS;",
          "225:  }",
          "227:  if (!strcmp(mode, \"mips64\")) {",
          "228:   arch = CS_ARCH_MIPS;",
          "230:  }",
          "232:  if (!strcmp(mode, \"mips64be\")) {",
          "233:   arch = CS_ARCH_MIPS;",
          "235:  }",
          "237:  if (!strcmp(mode, \"x16\")) {",
          "",
          "[Removed Lines]",
          "219:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 + CS_MODE_LITTLE_ENDIAN, &handle);",
          "224:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 + CS_MODE_BIG_ENDIAN, &handle);",
          "229:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 + CS_MODE_BIG_ENDIAN, &handle);",
          "234:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 + CS_MODE_BIG_ENDIAN, &handle);",
          "",
          "[Added Lines]",
          "219:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 | CS_MODE_LITTLE_ENDIAN, &handle);",
          "224:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 | CS_MODE_BIG_ENDIAN, &handle);",
          "229:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 | CS_MODE_LITTLE_ENDIAN, &handle);",
          "234:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 | CS_MODE_BIG_ENDIAN, &handle);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "282:  if (!strcmp(mode,\"ppc64\")) {",
          "283:   arch = CS_ARCH_PPC;",
          "285:  }",
          "287:  if (!strcmp(mode,\"ppc64be\")) {",
          "288:   arch = CS_ARCH_PPC;",
          "290:  }",
          "292:  if (!strcmp(mode,\"sparc\")) {",
          "",
          "[Removed Lines]",
          "284:   err = cs_open(CS_ARCH_PPC, CS_MODE_64+CS_MODE_LITTLE_ENDIAN, &handle);",
          "289:   err = cs_open(CS_ARCH_PPC,CS_MODE_64+CS_MODE_BIG_ENDIAN, &handle);",
          "",
          "[Added Lines]",
          "284:   err = cs_open(CS_ARCH_PPC, CS_MODE_64 | CS_MODE_LITTLE_ENDIAN, &handle);",
          "289:   err = cs_open(CS_ARCH_PPC,CS_MODE_64 | CS_MODE_BIG_ENDIAN, &handle);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7fe640bd0ae517ea024d44db9acf8e73702c11a",
      "candidate_info": {
        "commit_hash": "f7fe640bd0ae517ea024d44db9acf8e73702c11a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/f7fe640bd0ae517ea024d44db9acf8e73702c11a",
        "files": [
          "arch/AArch64/AArch64InstPrinter.c",
          "arch/M68K/M68KInstPrinter.c",
          "cs.c",
          "tests/test_arm.c",
          "tests/test_arm64.c",
          "tests/test_m68k.c"
        ],
        "message": "port #684 to the next branch",
        "before_after_code_files": [
          "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c",
          "arch/M68K/M68KInstPrinter.c||arch/M68K/M68KInstPrinter.c",
          "cs.c||cs.c",
          "tests/test_arm.c||tests/test_arm.c",
          "tests/test_arm64.c||tests/test_arm64.c",
          "tests/test_m68k.c||tests/test_m68k.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c": [
          "File: arch/AArch64/AArch64InstPrinter.c -> arch/AArch64/AArch64InstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1275:  double FPImm = MCOperand_isFPImm(MO) ? MCOperand_getFPImm(MO) : AArch64_AM_getFPImmFloat((int)MCOperand_getImm(MO));",
          "1278:  SStream_concat(O, \"#%.8f\", FPImm);",
          "1279:  if (MI->csh->detail) {",
          "1280: #ifndef CAPSTONE_DIET",
          "1281:   uint8_t access;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1278: #if defined(_KERNEL_MODE)",
          "1280:  SStream_concat(O, \"#<float_point_unsupported>\");",
          "1281: #else",
          "1283: #endif",
          "",
          "---------------"
        ],
        "arch/M68K/M68KInstPrinter.c||arch/M68K/M68KInstPrinter.c": [
          "File: arch/M68K/M68KInstPrinter.c -> arch/M68K/M68KInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "147:   case M68K_AM_ABSOLUTE_DATA_LONG: SStream_concat(O, \"$%x.l\", op->imm); break;",
          "148:   case M68K_AM_IMMIDIATE:",
          "149:     if (inst->op_size.type == M68K_SIZE_TYPE_FPU) {",
          "150:      if (inst->op_size.fpu_size == M68K_FPU_SIZE_SINGLE)",
          "151:       SStream_concat(O, \"#%f\", op->simm);",
          "152:      else if (inst->op_size.fpu_size == M68K_FPU_SIZE_DOUBLE)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150: #if defined(_KERNEL_MODE)",
          "152:      SStream_concat(O, \"#<float_point_unsupported>\");",
          "153:      break;",
          "154: #else",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "154:      else",
          "155:       SStream_concat(O, \"#<unsupported>\");",
          "156:      break;",
          "157:     }",
          "158:     SStream_concat(O, \"#$%x\", op->imm);",
          "159:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162: #endif",
          "",
          "---------------"
        ],
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include \"windows\\winkernel_mm.h\"",
          "22: #endif",
          "24: #if !defined(CAPSTONE_HAS_OSXKERNEL) && !defined(CAPSTONE_DIET) && !defined(_KERNEL_MODE)",
          "25: #define INSN_CACHE_SIZE 32",
          "26: #else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #if defined(_KERNEL_MODE) && !defined(CAPSTONE_DIET)",
          "26: #if defined(CAPSTONE_HAS_ARM) || defined(CAPSTONE_HAS_ARM64) || defined(CAPSTONE_HAS_M68K)",
          "27: #define CAPSTONE_STR_INTERNAL(x) #x",
          "28: #define CAPSTONE_STR(x) CAPSTONE_STR_INTERNAL(x)",
          "29: #define CAPSTONE_MSVC_WRANING_PREFIX __FILE__ \"(\"CAPSTONE_STR(__LINE__)\") : warning message : \"",
          "31: #pragma message(CAPSTONE_MSVC_WRANING_PREFIX \"Windows driver does not support full features for selected architecture(s). Define CAPSTONE_DIET to compile Capstone with only supported features. See issue #681 for details.\")",
          "33: #undef CAPSTONE_MSVC_WRANING_PREFIX",
          "34: #undef CAPSTONE_STR",
          "35: #undef CAPSTONE_STR_INTERNAL",
          "36: #endif",
          "37: #endif // defined(_KERNEL_MODE) && !defined(CAPSTONE_DIET)",
          "",
          "---------------"
        ],
        "tests/test_arm.c||tests/test_arm.c": [
          "File: tests/test_arm.c -> tests/test_arm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:     printf(\"\\t\\toperands[%u].type: IMM = 0x%x\\n\", i, op->imm);",
          "59:     break;",
          "60:    case ARM_OP_FP:",
          "61:     printf(\"\\t\\toperands[%u].type: FP = %f\\n\", i, op->fp);",
          "62:     break;",
          "63:    case ARM_OP_MEM:",
          "64:     printf(\"\\t\\toperands[%u].type: MEM\\n\", i);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61: #if defined(_KERNEL_MODE)",
          "63:     printf(\"\\t\\toperands[%u].type: FP = <float_point_unsupported>\\n\", i);",
          "64: #else",
          "66: #endif",
          "",
          "---------------"
        ],
        "tests/test_arm64.c||tests/test_arm64.c": [
          "File: tests/test_arm64.c -> tests/test_arm64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:     printf(\"\\t\\toperands[%u].type: IMM = 0x%\" PRIx64 \"\\n\", i, op->imm);",
          "57:     break;",
          "58:    case ARM64_OP_FP:",
          "59:     printf(\"\\t\\toperands[%u].type: FP = %f\\n\", i, op->fp);",
          "60:     break;",
          "61:    case ARM64_OP_MEM:",
          "62:     printf(\"\\t\\toperands[%u].type: MEM\\n\", i);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: #if defined(_KERNEL_MODE)",
          "61:     printf(\"\\t\\toperands[%u].type: FP = <float_point_unsupported>\\n\", i);",
          "62: #else",
          "64: #endif",
          "",
          "---------------"
        ],
        "tests/test_m68k.c||tests/test_m68k.c": [
          "File: tests/test_m68k.c -> tests/test_m68k.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:     break;",
          "87:    case M68K_OP_IMM:",
          "88:     if (m68k->op_size.type == M68K_SIZE_TYPE_FPU) {",
          "89:      if (m68k->op_size.fpu_size == M68K_FPU_SIZE_SINGLE)",
          "90:       printf(\"\\t\\toperands[%u].type: IMM = %f\\n\", i, op->simm);",
          "91:      else if (m68k->op_size.fpu_size == M68K_FPU_SIZE_DOUBLE)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89: #if defined(_KERNEL_MODE)",
          "91:      printf(\"\\t\\toperands[%u].type: IMM = <float_point_unsupported>\\n\", i);",
          "92:      break;",
          "93: #else",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:      else",
          "94:       printf(\"\\t\\toperands[%u].type: IMM = <unsupported>\\n\", i);",
          "95:      break;",
          "96:     }",
          "98:     printf(\"\\t\\toperands[%u].type: IMM = 0x%x\\n\", i, (int)op->imm);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e213802e63eaf7b1f207a4277b410ca48d04fe85",
      "candidate_info": {
        "commit_hash": "e213802e63eaf7b1f207a4277b410ca48d04fe85",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/e213802e63eaf7b1f207a4277b410ca48d04fe85",
        "files": [
          "cstool/cstool.c",
          "include/platform.h"
        ],
        "message": "Fix build under VS2012 (i.e. MSC_VER = 1700)\n\ncstool.c currently imports inttypes.h, which breaks\nbuilding on older Visual Studio versions (I've been\ntesting 2012). This commit removes the explicit include\nof inttypes.h, which is already handled in platform.h\n(which is included by capstone.h). A define for the\nfunction strtoull (used by cstool) has also been added\nto platform.h for the case where MSC_VER <= 1700.\n\nI don't know what effect this will have on OS X builds\nas I'm unable to test on that platform.\n\nAlso, cstool.c doesn't need to include stdio.h\nbecause it's already included by capstone.h.",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c",
          "include/platform.h||include/platform.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <string.h>",
          "5: #include <ctype.h>",
          "6: #include <errno.h>",
          "",
          "[Removed Lines]",
          "2: #include <stdio.h>",
          "3: #include <inttypes.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/platform.h||include/platform.h": [
          "File: include/platform.h -> include/platform.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: #define PRIX32        \"X\"",
          "91: #endif",
          "93: #define PRId64        __PRI_64_LENGTH_MODIFIER__ \"d\"",
          "94: #define PRIi64        __PRI_64_LENGTH_MODIFIER__ \"i\"",
          "95: #define PRIo64        __PRI_64_LENGTH_MODIFIER__ \"o\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93: #if defined(_MSC_VER) && _MSC_VER <= 1700",
          "95: #define strtoull _strtoui64",
          "96: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2fa3f02f2aa731b32db0aa20e126a90229d5a46e",
      "candidate_info": {
        "commit_hash": "2fa3f02f2aa731b32db0aa20e126a90229d5a46e",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/2fa3f02f2aa731b32db0aa20e126a90229d5a46e",
        "files": [
          "arch/PowerPC/PPCInstPrinter.c"
        ],
        "message": "ppc: print 0 offset for memory operand. see issue #856",
        "before_after_code_files": [
          "arch/PowerPC/PPCInstPrinter.c||arch/PowerPC/PPCInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/PowerPC/PPCInstPrinter.c||arch/PowerPC/PPCInstPrinter.c": [
          "File: arch/PowerPC/PPCInstPrinter.c -> arch/PowerPC/PPCInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "502: {",
          "503:  if (MCOperand_isImm(MCInst_getOperand(MI, OpNo))) {",
          "504:   short Imm = (short)MCOperand_getImm(MCInst_getOperand(MI, OpNo));",
          "509:   if (Imm >= 0) {",
          "510:    if (Imm > HEX_THRESHOLD)",
          "",
          "[Removed Lines]",
          "506:   if (Imm == 0)",
          "507:    return;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d609ebdb03e95fe8086aeec00593a0a745d05a2",
      "candidate_info": {
        "commit_hash": "6d609ebdb03e95fe8086aeec00593a0a745d05a2",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/6d609ebdb03e95fe8086aeec00593a0a745d05a2",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: support arm64be",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:  if (cs_support(CS_ARCH_ARM64)) {",
          "95:   printf(\"        arm64:     aarch64 mode\\n\");",
          "96:  }",
          "98:  if (cs_support(CS_ARCH_MIPS)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:   printf(\"        arm64be:   aarch64 + big endian\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "224:   err = cs_open(CS_ARCH_ARM64, CS_MODE_LITTLE_ENDIAN, &handle);",
          "225:  }",
          "227:  if (!strcmp(mode, \"mips\")) {",
          "228:   arch = CS_ARCH_MIPS;",
          "229:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 | CS_MODE_LITTLE_ENDIAN, &handle);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228:  if (!strcmp(mode, \"arm64be\")) {",
          "229:   arch = CS_ARCH_ARM64;",
          "230:   err = cs_open(CS_ARCH_ARM64, CS_MODE_BIG_ENDIAN, &handle);",
          "231:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}