{
  "cve_id": "CVE-2013-0868",
  "cve_desc": "libavcodec/huffyuvdec.c in FFmpeg before 1.1.2 allows remote attackers to have an unspecified impact via crafted Huffyuv data, related to an out-of-bounds write and (1) unchecked return codes from the init_vlc function and (2) \"len==0 cases.\"",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "f67a0d115254461649470452058fa3c28c0df294",
  "patch_info": {
    "commit_hash": "f67a0d115254461649470452058fa3c28c0df294",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f67a0d115254461649470452058fa3c28c0df294",
    "files": [
      "libavcodec/huffyuvdec.c"
    ],
    "message": "huffyuvdec: Check init_vlc() return codes.\n\nPrevents out of array writes\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/huffyuvdec.c||libavcodec/huffyuvdec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/huffyuvdec.c||libavcodec/huffyuvdec.c": [
      "File: libavcodec/huffyuvdec.c -> libavcodec/huffyuvdec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "124:                     int len1 = s->len[p][u];",
      "125:                     if (len1 > limit)",
      "126:                         continue;",
      "127:                     len[i] = len0 + len1;",
      "128:                     bits[i] = (s->bits[0][y] << len1) + s->bits[p][u];",
      "129:                     symbols[i] = (y << 8) + u;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "127:                     av_assert0(i < (1 << VLC_BITS));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "158:                     int len2 = s->len[2][r & 255];",
      "159:                     if (len2 > limit1)",
      "160:                         continue;",
      "161:                     len[i] = len0 + len1 + len2;",
      "162:                     bits[i] = (code << len2) + s->bits[2][r & 255];",
      "163:                     if (s->decorrelate) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "162:                     av_assert0(i < (1 << VLC_BITS));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "182: {",
      "183:     GetBitContext gb;",
      "184:     int i;",
      "186:     init_get_bits(&gb, src, length * 8);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "187:     int ret;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "192:             return -1;",
      "193:         }",
      "194:         ff_free_vlc(&s->vlc[i]);",
      "197:     }",
      "199:     generate_joint_tables(s);",
      "",
      "[Removed Lines]",
      "195:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1,",
      "196:                  s->bits[i], 4, 4, 0);",
      "",
      "[Added Lines]",
      "198:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1,",
      "199:                            s->bits[i], 4, 4, 0)) < 0)",
      "200:             return ret;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "205: {",
      "206:     GetBitContext gb;",
      "207:     int i;",
      "209:     init_get_bits(&gb, classic_shift_luma,",
      "210:                   classic_shift_luma_table_size * 8);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "212:     int ret;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "229:     for (i = 0; i < 3; i++) {",
      "230:         ff_free_vlc(&s->vlc[i]);",
      "233:     }",
      "235:     generate_joint_tables(s);",
      "",
      "[Removed Lines]",
      "231:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1,",
      "232:                  s->bits[i], 4, 4, 0);",
      "",
      "[Added Lines]",
      "236:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1,",
      "237:                             s->bits[i], 4, 4, 0)) < 0)",
      "238:             return ret;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a7faa1d0703b7c2539122ea2140362411d7f62e0",
      "candidate_info": {
        "commit_hash": "a7faa1d0703b7c2539122ea2140362411d7f62e0",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/a7faa1d0703b7c2539122ea2140362411d7f62e0",
        "files": [
          "libavcodec/huffyuv.c"
        ],
        "message": "huffyuvdec: Check init_vlc() return codes.\n\nPrevents out of array writes\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f67a0d115254461649470452058fa3c28c0df294)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 95ab8d33e1a680f30a5a9605175112008ab81afc)\n\nConflicts:\n\n\tlibavcodec/huffyuv.c\n(cherry picked from commit 277def59fce10d91e3113e5c0f63e22bc4abfa88)\n\nConflicts:\n\n\tlibavcodec/huffyuv.c\n(cherry picked from commit adf022f458d75e2c8041262e1906a249366ad518)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/huffyuv.c||libavcodec/huffyuv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libavcodec/huffyuv.c||libavcodec/huffyuv.c": [
          "File: libavcodec/huffyuv.c -> libavcodec/huffyuv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "285:                     int len1 = s->len[p][u];",
          "286:                     if(len1 > limit)",
          "287:                         continue;",
          "288:                     len[i] = len0 + len1;",
          "289:                     bits[i] = (s->bits[0][y] << len1) + s->bits[p][u];",
          "290:                     symbols[i] = (y<<8) + u;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288:                     assert(i < (1 << VLC_BITS));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "318:                     int len2 = s->len[2][r&255];",
          "319:                     if(len2 > limit1)",
          "320:                         continue;",
          "321:                     len[i] = len0 + len1 + len2;",
          "322:                     bits[i] = (code << len2) + s->bits[2][r&255];",
          "323:                     if(s->decorrelate){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "322:                     assert(i < (1 << VLC_BITS));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "341: static int read_huffman_tables(HYuvContext *s, const uint8_t *src, int length){",
          "342:     GetBitContext gb;",
          "343:     int i;",
          "345:     init_get_bits(&gb, src, length*8);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346:     int ret;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "356: }",
          "357: #endif",
          "358:         free_vlc(&s->vlc[i]);",
          "360:     }",
          "362:     generate_joint_tables(s);",
          "",
          "[Removed Lines]",
          "359:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0);",
          "",
          "[Added Lines]",
          "362:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0)) < 0)",
          "363:             return ret;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "368: #if 1",
          "369:     GetBitContext gb;",
          "370:     int i;",
          "372:     init_get_bits(&gb, classic_shift_luma, sizeof(classic_shift_luma)*8);",
          "373:     if(read_len_table(s->len[0], &gb)<0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "375:     int ret;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "389:     for(i=0; i<3; i++){",
          "390:         free_vlc(&s->vlc[i]);",
          "392:     }",
          "394:     generate_joint_tables(s);",
          "",
          "[Removed Lines]",
          "391:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0);",
          "",
          "[Added Lines]",
          "396:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0)) < 0)",
          "397:             return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "272e7f6443b76fb47192930d157bfd9284294188",
      "candidate_info": {
        "commit_hash": "272e7f6443b76fb47192930d157bfd9284294188",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/272e7f6443b76fb47192930d157bfd9284294188",
        "files": [
          "libavcodec/huffyuv.c"
        ],
        "message": "huffyuvdec: Check init_vlc() return codes.\n\nPrevents out of array writes\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f67a0d115254461649470452058fa3c28c0df294)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 95ab8d33e1a680f30a5a9605175112008ab81afc)\n\nConflicts:\n\n\tlibavcodec/huffyuv.c\n(cherry picked from commit 277def59fce10d91e3113e5c0f63e22bc4abfa88)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/huffyuv.c||libavcodec/huffyuv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libavcodec/huffyuv.c||libavcodec/huffyuv.c": [
          "File: libavcodec/huffyuv.c -> libavcodec/huffyuv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "318:                     int len1 = s->len[p][u];",
          "319:                     if(len1 > limit)",
          "320:                         continue;",
          "321:                     len[i] = len0 + len1;",
          "322:                     bits[i] = (s->bits[0][y] << len1) + s->bits[p][u];",
          "323:                     symbols[i] = (y<<8) + u;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "321:                     assert(i < (1 << VLC_BITS));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "351:                     int len2 = s->len[2][r&255];",
          "352:                     if(len2 > limit1)",
          "353:                         continue;",
          "354:                     len[i] = len0 + len1 + len2;",
          "355:                     bits[i] = (code << len2) + s->bits[2][r&255];",
          "356:                     if(s->decorrelate){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "355:                     assert(i < (1 << VLC_BITS));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "374: static int read_huffman_tables(HYuvContext *s, uint8_t *src, int length){",
          "375:     GetBitContext gb;",
          "376:     int i;",
          "378:     init_get_bits(&gb, src, length*8);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "379:     int ret;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "389: }",
          "390: #endif",
          "391:         free_vlc(&s->vlc[i]);",
          "393:     }",
          "395:     generate_joint_tables(s);",
          "",
          "[Removed Lines]",
          "392:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0);",
          "",
          "[Added Lines]",
          "395:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0)) < 0)",
          "396:             return ret;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "401: #if 1",
          "402:     GetBitContext gb;",
          "403:     int i;",
          "405:     init_get_bits(&gb, classic_shift_luma, sizeof(classic_shift_luma)*8);",
          "406:     read_len_table(s->len[0], &gb);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:     int ret;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "420:     for(i=0; i<3; i++){",
          "421:         free_vlc(&s->vlc[i]);",
          "423:     }",
          "425:     generate_joint_tables(s);",
          "",
          "[Removed Lines]",
          "422:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0);",
          "",
          "[Added Lines]",
          "427:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0)) < 0)",
          "428:             return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6baa54924980e1f0e8121e4715d16ed1adcd2a23",
      "candidate_info": {
        "commit_hash": "6baa54924980e1f0e8121e4715d16ed1adcd2a23",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6baa54924980e1f0e8121e4715d16ed1adcd2a23",
        "files": [
          "libavcodec/huffyuvdec.c"
        ],
        "message": "huffyuvdec: Check init_vlc() return codes.\n\nPrevents out of array writes\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f67a0d115254461649470452058fa3c28c0df294)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/huffyuvdec.c||libavcodec/huffyuvdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/huffyuvdec.c||libavcodec/huffyuvdec.c"
          ],
          "candidate": [
            "libavcodec/huffyuvdec.c||libavcodec/huffyuvdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/huffyuvdec.c||libavcodec/huffyuvdec.c": [
          "File: libavcodec/huffyuvdec.c -> libavcodec/huffyuvdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:                     int len1 = s->len[p][u];",
          "125:                     if (len1 > limit)",
          "126:                         continue;",
          "127:                     len[i] = len0 + len1;",
          "128:                     bits[i] = (s->bits[0][y] << len1) + s->bits[p][u];",
          "129:                     symbols[i] = (y << 8) + u;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:                     av_assert0(i < (1 << VLC_BITS));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "158:                     int len2 = s->len[2][r & 255];",
          "159:                     if (len2 > limit1)",
          "160:                         continue;",
          "161:                     len[i] = len0 + len1 + len2;",
          "162:                     bits[i] = (code << len2) + s->bits[2][r & 255];",
          "163:                     if (s->decorrelate) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:                     av_assert0(i < (1 << VLC_BITS));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "182: {",
          "183:     GetBitContext gb;",
          "184:     int i;",
          "186:     init_get_bits(&gb, src, length * 8);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187:     int ret;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "192:             return -1;",
          "193:         }",
          "194:         ff_free_vlc(&s->vlc[i]);",
          "197:     }",
          "199:     generate_joint_tables(s);",
          "",
          "[Removed Lines]",
          "195:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1,",
          "196:                  s->bits[i], 4, 4, 0);",
          "",
          "[Added Lines]",
          "198:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1,",
          "199:                            s->bits[i], 4, 4, 0)) < 0)",
          "200:             return ret;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "205: {",
          "206:     GetBitContext gb;",
          "207:     int i;",
          "209:     init_get_bits(&gb, classic_shift_luma,",
          "210:                   classic_shift_luma_table_size * 8);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212:     int ret;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "229:     for (i = 0; i < 3; i++) {",
          "230:         ff_free_vlc(&s->vlc[i]);",
          "233:     }",
          "235:     generate_joint_tables(s);",
          "",
          "[Removed Lines]",
          "231:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1,",
          "232:                  s->bits[i], 4, 4, 0);",
          "",
          "[Added Lines]",
          "236:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1,",
          "237:                             s->bits[i], 4, 4, 0)) < 0)",
          "238:             return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03e2e95beb1a6203e5bcd55b38926f71272a3c2b",
      "candidate_info": {
        "commit_hash": "03e2e95beb1a6203e5bcd55b38926f71272a3c2b",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/03e2e95beb1a6203e5bcd55b38926f71272a3c2b",
        "files": [
          "libavcodec/huffyuv.c"
        ],
        "message": "huffyuvdec: Check init_vlc() return codes.\n\nPrevents out of array writes\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f67a0d115254461649470452058fa3c28c0df294)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 95ab8d33e1a680f30a5a9605175112008ab81afc)\n\nConflicts:\n\n\tlibavcodec/huffyuv.c\n(cherry picked from commit 277def59fce10d91e3113e5c0f63e22bc4abfa88)\n\nConflicts:\n\n\tlibavcodec/huffyuv.c",
        "before_after_code_files": [
          "libavcodec/huffyuv.c||libavcodec/huffyuv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libavcodec/huffyuv.c||libavcodec/huffyuv.c": [
          "File: libavcodec/huffyuv.c -> libavcodec/huffyuv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"put_bits.h\"",
          "34: #include \"dsputil.h\"",
          "35: #include \"thread.h\"",
          "37: #define VLC_BITS 11",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: #include \"libavutil/avassert.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "315:                     int len1 = s->len[p][u];",
          "316:                     if(len1 > limit)",
          "317:                         continue;",
          "318:                     len[i] = len0 + len1;",
          "319:                     bits[i] = (s->bits[0][y] << len1) + s->bits[p][u];",
          "320:                     symbols[i] = (y<<8) + u;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319:                     av_assert0(i < (1 << VLC_BITS));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "348:                     int len2 = s->len[2][r&255];",
          "349:                     if(len2 > limit1)",
          "350:                         continue;",
          "351:                     len[i] = len0 + len1 + len2;",
          "352:                     bits[i] = (code << len2) + s->bits[2][r&255];",
          "353:                     if(s->decorrelate){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "353:                     av_assert0(i < (1 << VLC_BITS));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "371: static int read_huffman_tables(HYuvContext *s, const uint8_t *src, int length){",
          "372:     GetBitContext gb;",
          "373:     int i;",
          "375:     init_get_bits(&gb, src, length*8);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "377:     int ret;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "381:             return -1;",
          "382:         }",
          "383:         free_vlc(&s->vlc[i]);",
          "385:     }",
          "387:     generate_joint_tables(s);",
          "",
          "[Removed Lines]",
          "384:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0);",
          "",
          "[Added Lines]",
          "388:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0)) < 0)",
          "389:             return ret;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "393: #if 1",
          "394:     GetBitContext gb;",
          "395:     int i;",
          "397:     init_get_bits(&gb, classic_shift_luma, sizeof(classic_shift_luma)*8);",
          "398:     if(read_len_table(s->len[0], &gb)<0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "401:     int ret;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "414:     for(i=0; i<3; i++){",
          "415:         free_vlc(&s->vlc[i]);",
          "417:     }",
          "419:     generate_joint_tables(s);",
          "",
          "[Removed Lines]",
          "416:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0);",
          "",
          "[Added Lines]",
          "422:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0)) < 0)",
          "423:             return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba4b57e8024a9635b4eaf7f3cc08837b065bd4c9",
      "candidate_info": {
        "commit_hash": "ba4b57e8024a9635b4eaf7f3cc08837b065bd4c9",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/ba4b57e8024a9635b4eaf7f3cc08837b065bd4c9",
        "files": [
          "libavcodec/huffyuv.c"
        ],
        "message": "huffyuvdec: Check init_vlc() return codes.\n\nPrevents out of array writes\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit f67a0d115254461649470452058fa3c28c0df294)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 95ab8d33e1a680f30a5a9605175112008ab81afc)\n\nConflicts:\n\n\tlibavcodec/huffyuv.c\n(cherry picked from commit 277def59fce10d91e3113e5c0f63e22bc4abfa88)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/huffyuv.c||libavcodec/huffyuv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libavcodec/huffyuv.c||libavcodec/huffyuv.c": [
          "File: libavcodec/huffyuv.c -> libavcodec/huffyuv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #include \"avcodec.h\"",
          "32: #include \"get_bits.h\"",
          "33: #include \"put_bits.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: #include \"libavutil/avassert.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "317:                     int len1 = s->len[p][u];",
          "318:                     if(len1 > limit)",
          "319:                         continue;",
          "320:                     len[i] = len0 + len1;",
          "321:                     bits[i] = (s->bits[0][y] << len1) + s->bits[p][u];",
          "322:                     symbols[i] = (y<<8) + u;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "321:                     av_assert0(i < (1 << VLC_BITS));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "350:                     int len2 = s->len[2][r&255];",
          "351:                     if(len2 > limit1)",
          "352:                         continue;",
          "353:                     len[i] = len0 + len1 + len2;",
          "354:                     bits[i] = (code << len2) + s->bits[2][r&255];",
          "355:                     if(s->decorrelate){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "355:                     av_assert0(i < (1 << VLC_BITS));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "373: static int read_huffman_tables(HYuvContext *s, const uint8_t *src, int length){",
          "374:     GetBitContext gb;",
          "375:     int i;",
          "377:     init_get_bits(&gb, src, length*8);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "379:     int ret;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "383:             return -1;",
          "384:         }",
          "385:         ff_free_vlc(&s->vlc[i]);",
          "387:     }",
          "389:     generate_joint_tables(s);",
          "",
          "[Removed Lines]",
          "386:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0);",
          "",
          "[Added Lines]",
          "390:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0)) < 0)",
          "391:             return ret;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "395: #if 1",
          "396:     GetBitContext gb;",
          "397:     int i;",
          "399:     init_get_bits(&gb, classic_shift_luma, classic_shift_luma_table_size*8);",
          "400:     if(read_len_table(s->len[0], &gb)<0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "403:     int ret;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "416:     for(i=0; i<3; i++){",
          "417:         ff_free_vlc(&s->vlc[i]);",
          "419:     }",
          "421:     generate_joint_tables(s);",
          "",
          "[Removed Lines]",
          "418:         init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0);",
          "",
          "[Added Lines]",
          "424:         if ((ret = init_vlc(&s->vlc[i], VLC_BITS, 256, s->len[i], 1, 1, s->bits[i], 4, 4, 0)) < 0)",
          "425:             return ret;",
          "",
          "---------------"
        ]
      }
    }
  ]
}