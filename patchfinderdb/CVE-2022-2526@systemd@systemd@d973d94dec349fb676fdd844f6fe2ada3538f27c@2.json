{
  "cve_id": "CVE-2022-2526",
  "cve_desc": "A use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later.",
  "repo": "systemd/systemd",
  "patch_hash": "d973d94dec349fb676fdd844f6fe2ada3538f27c",
  "patch_info": {
    "commit_hash": "d973d94dec349fb676fdd844f6fe2ada3538f27c",
    "repo": "systemd/systemd",
    "commit_url": "https://github.com/systemd/systemd/commit/d973d94dec349fb676fdd844f6fe2ada3538f27c",
    "files": [
      "src/resolve/resolved-dns-stream.c"
    ],
    "message": "resolved: pin stream while calling callbacks for it\n\nThese callbacks might unref the stream, but we still have to access it,\nlet's hence ref it explicitly.\n\nMaybe fixes: #10725",
    "before_after_code_files": [
      "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
    ]
  },
  "patch_diff": {
    "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
      "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "273: }",
      "275: static int on_stream_io(sd_event_source *es, int fd, uint32_t revents, void *userdata) {",
      "277:         int r;",
      "279:         assert(s);",
      "",
      "[Removed Lines]",
      "276:         DnsStream *s = userdata;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "08e254c8184e03eafab1d06703ac0078a044b80f",
      "candidate_info": {
        "commit_hash": "08e254c8184e03eafab1d06703ac0078a044b80f",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/08e254c8184e03eafab1d06703ac0078a044b80f",
        "files": [
          "src/resolve/resolved-dns-stream.c"
        ],
        "message": "resolved: reorder things, to place registration of DnsStream in Manager close to each other",
        "before_after_code_files": [
          "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ],
          "candidate": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ]
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
          "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "497:         (void) sd_event_source_set_description(s->timeout_event_source, \"dns-stream-timeout\");",
          "499:         LIST_PREPEND(streams, m->dns_streams, s);",
          "500:         s->manager = m;",
          "501:         s->fd = fd;",
          "502:         if (tfo_address) {",
          "503:                 s->tfo_address = *tfo_address;",
          "504:                 s->tfo_salen = tfo_address->sa.sa_family == AF_INET6 ? sizeof(tfo_address->in6) : sizeof(tfo_address->in);",
          "505:         }",
          "511:         return 0;",
          "",
          "[Removed Lines]",
          "507:         m->n_dns_streams++;",
          "",
          "[Added Lines]",
          "500:         m->n_dns_streams++;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "808089ae3d96f0e015e323188f0795c3446d3b96",
      "candidate_info": {
        "commit_hash": "808089ae3d96f0e015e323188f0795c3446d3b96",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/808089ae3d96f0e015e323188f0795c3446d3b96",
        "files": [
          "src/resolve/resolved-dns-stream.c",
          "src/resolve/resolved-dns-stream.h"
        ],
        "message": "resolved: add new helper for carefully detach a stream from any server\n\nThis adds a helper call for detaching a DnsServer from a DnsStream if\nthe latter is the \"default\" stream of the server.\n\nAlso, let's unref the stream in dns_stream_stop() rather than\ndns_stream_free(): as soon as our stream is disconnected by stopping\nthere's really no need to keep it as default stream for the server\naround.\n\nSince dns_stream_free() calls dns_stream_stop() we can remove it from\nthe former.",
        "before_after_code_files": [
          "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c",
          "src/resolve/resolved-dns-stream.h||src/resolve/resolved-dns-stream.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ],
          "candidate": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ]
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
          "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:         s->io_event_source = sd_event_source_unref(s->io_event_source);",
          "18:         s->timeout_event_source = sd_event_source_unref(s->timeout_event_source);",
          "19:         s->fd = safe_close(s->fd);",
          "20: }",
          "22: static int dns_stream_update_io(DnsStream *s) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:         dns_stream_detach(s);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "431:         dns_stream_stop(s);",
          "436:         if (s->manager) {",
          "437:                 LIST_REMOVE(streams, s->manager->dns_streams, s);",
          "438:                 s->manager->n_dns_streams--;",
          "",
          "[Removed Lines]",
          "433:         if (s->server && s->server->stream == s)",
          "434:                 s->server->stream = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "551:         s->n_read = 0;",
          "552:         return TAKE_PTR(s->read_packet);",
          "553: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "555: void dns_stream_detach(DnsStream *s) {",
          "556:         assert(s);",
          "558:         if (!s->server)",
          "559:                 return;",
          "561:         if (s->server->stream != s)",
          "562:                 return;",
          "564:         dns_server_unref_stream(s->server);",
          "565: }",
          "",
          "---------------"
        ],
        "src/resolve/resolved-dns-stream.h||src/resolve/resolved-dns-stream.h": [
          "File: src/resolve/resolved-dns-stream.h -> src/resolve/resolved-dns-stream.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: }",
          "91: DnsPacket *dns_stream_take_read_packet(DnsStream *s);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93: void dns_stream_detach(DnsStream *s);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "199dda9c25e02ac69c9a751a1e7b837a747cb630",
      "candidate_info": {
        "commit_hash": "199dda9c25e02ac69c9a751a1e7b837a747cb630",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/199dda9c25e02ac69c9a751a1e7b837a747cb630",
        "files": [
          "src/resolve/resolved-dns-transaction.c"
        ],
        "message": "resolved: before assuming we have a server, check we are talking DNS and not LLMNR/mDNS",
        "before_after_code_files": [
          "src/resolve/resolved-dns-transaction.c||src/resolve/resolved-dns-transaction.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-transaction.c||src/resolve/resolved-dns-transaction.c": [
          "File: src/resolve/resolved-dns-transaction.c -> src/resolve/resolved-dns-transaction.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "628:                 fd = -1;",
          "630: #if ENABLE_DNS_OVER_TLS",
          "632:                         assert(t->server);",
          "633:                         r = dnstls_stream_connect_tls(s, t->server);",
          "634:                         if (r < 0)",
          "",
          "[Removed Lines]",
          "631:                 if (DNS_SERVER_FEATURE_LEVEL_IS_TLS(t->current_feature_level)) {",
          "",
          "[Added Lines]",
          "631:                 if (t->scope->protocol == DNS_PROTOCOL_DNS &&",
          "632:                     DNS_SERVER_FEATURE_LEVEL_IS_TLS(t->current_feature_level)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94fdb4d9d11827c353e3bf116dfdff75ed0f6153",
      "candidate_info": {
        "commit_hash": "94fdb4d9d11827c353e3bf116dfdff75ed0f6153",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/94fdb4d9d11827c353e3bf116dfdff75ed0f6153",
        "files": [
          "src/resolve/resolved-dns-stream.c"
        ],
        "message": "resolved: exit early on failure",
        "before_after_code_files": [
          "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ],
          "candidate": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ]
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
          "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "258:         {",
          "259:                 ss = read(s->fd, buf, count);",
          "260:                 if (ss < 0)",
          "262:         }",
          "264:         return ss;",
          "",
          "[Removed Lines]",
          "261:                         ss = -errno;",
          "",
          "[Added Lines]",
          "261:                         return -errno;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b2cf6704e724ad9bb2912adab8a222ba130d2103",
      "candidate_info": {
        "commit_hash": "b2cf6704e724ad9bb2912adab8a222ba130d2103",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/b2cf6704e724ad9bb2912adab8a222ba130d2103",
        "files": [
          "src/resolve/resolved-dns-stream.c"
        ],
        "message": "resolved: simplify on_stream_io() a bit",
        "before_after_code_files": [
          "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ],
          "candidate": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ]
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
          "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "281: #if ENABLE_DNS_OVER_TLS",
          "282:         if (s->encrypted) {",
          "283:                 r = dnstls_stream_on_io(s, revents);",
          "285:                 if (r == DNSTLS_STREAM_CLOSED)",
          "286:                         return 0;",
          "288:                         return dns_stream_update_io(s);",
          "290:                         return dns_stream_complete(s, -r);",
          "296:         }",
          "297: #endif",
          "",
          "[Removed Lines]",
          "287:                 else if (r == -EAGAIN)",
          "289:                 else if (r < 0) {",
          "291:                 } else {",
          "292:                         r = dns_stream_update_io(s);",
          "293:                         if (r < 0)",
          "294:                                 return r;",
          "295:                 }",
          "",
          "[Added Lines]",
          "286:                 if (r == -EAGAIN)",
          "288:                 if (r < 0)",
          "291:                 r = dns_stream_update_io(s);",
          "292:                 if (r < 0)",
          "293:                         return r;",
          "",
          "---------------"
        ]
      }
    }
  ]
}