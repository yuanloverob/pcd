{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c1b45e6c1ac1a5bff7b89f73bbcae59809f9b808",
      "candidate_info": {
        "commit_hash": "c1b45e6c1ac1a5bff7b89f73bbcae59809f9b808",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c1b45e6c1ac1a5bff7b89f73bbcae59809f9b808",
        "files": [
          "include/openssl/engine.h"
        ],
        "message": "Remove ENGINE_load_dasync() (no OPENSSL_INIT_ENGINE_DASYNC already)\n\nFixes: 8d00e30f96fb86b20bc992f626b188c3548fc58c (\"Don't try to init\ndasync internally\")\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\nCLA: trivial\n(cherry picked from commit b9b5181dd2f52ff0560a33b116396cdae5e48048)",
        "before_after_code_files": [
          "include/openssl/engine.h||include/openssl/engine.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/engine.h||include/openssl/engine.h": [
          "File: include/openssl/engine.h -> include/openssl/engine.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "334:     OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_PADLOCK, NULL)",
          "335: #  define ENGINE_load_capi() \\",
          "336:     OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_CAPI, NULL)",
          "339: #  define ENGINE_load_afalg() \\",
          "340:     OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_AFALG, NULL)",
          "341: # endif",
          "",
          "[Removed Lines]",
          "337: #  define ENGINE_load_dasync() \\",
          "338:     OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_DASYNC, NULL)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1ec9c07fe3631bce5b7c538224c080339c8fc6e",
      "candidate_info": {
        "commit_hash": "f1ec9c07fe3631bce5b7c538224c080339c8fc6e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f1ec9c07fe3631bce5b7c538224c080339c8fc6e",
        "files": [
          "test/build.info"
        ],
        "message": "test/build.info: typo, $ missing\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1832)\n(cherry picked from commit 9c89c8460a4dcf828a22e2dfc279b5ea8a80ec60)",
        "before_after_code_files": [
          "test/build.info||test/build.info"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "275:   INCLUDE[bio_enc_test]=../include",
          "276:   DEPEND[bio_enc_test]=../libcrypto",
          "279:     PROGRAMS_NO_INST=shlibloadtest",
          "280:     SOURCE[shlibloadtest]=shlibloadtest.c",
          "281:     INCLUDE[shlibloadtest]=../include",
          "",
          "[Removed Lines]",
          "278:   IF[{- !disabled{shared} -}]",
          "",
          "[Added Lines]",
          "278:   IF[{- !$disabled{shared} -}]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2178c52a8bacfd097a41f3f348fe51d8e4d1873e",
      "candidate_info": {
        "commit_hash": "2178c52a8bacfd097a41f3f348fe51d8e4d1873e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2178c52a8bacfd097a41f3f348fe51d8e4d1873e",
        "files": [
          "test/x509aux.c"
        ],
        "message": "test/x509aux.c: Fix argv loop\n\nThere are cases when argc is more trustable than proper argv termination.\nSince we trust argc in all other test programs, we might as well treat it\nthe same way in this program.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit 780bbb96bf514f0b4013e9c5725614ba5153c497)",
        "before_after_code_files": [
          "test/x509aux.c||test/x509aux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/x509aux.c||test/x509aux.c": [
          "File: test/x509aux.c -> test/x509aux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "180: int main(int argc, char *argv[])",
          "181: {",
          "182:     BIO *bio_err;",
          "184:     const char *p;",
          "185:     int ret = 1;",
          "",
          "[Removed Lines]",
          "183:     const char *certfile;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:         CRYPTO_set_mem_debug(1);",
          "198:     CRYPTO_mem_ctrl(CRYPTO_MEM_CHECK_ON);",
          "202:         int ok;",
          "204:         if (f == NULL) {",
          "205:             fprintf(stderr, \"%s: Error opening cert file: '%s': %s\\n\",",
          "207:             EXIT(ret);",
          "208:         }",
          "209:         ret = !(ok = test_certs(f));",
          "210:         BIO_free(f);",
          "212:         if (!ok) {",
          "214:             ret = 1;",
          "215:             break;",
          "216:         }",
          "218:     }",
          "220: #ifndef OPENSSL_NO_CRYPTO_MDEBUG",
          "",
          "[Removed Lines]",
          "200:     while ((certfile = *++argv) != NULL) {",
          "201:         BIO *f = BIO_new_file(certfile, \"r\");",
          "206:                     progname, certfile, strerror(errno));",
          "213:             printf(\"%s ERROR\\n\", certfile);",
          "217:         printf(\"%s OK\\n\", certfile);",
          "",
          "[Added Lines]",
          "199:     argc--;",
          "200:     argv++;",
          "202:     while (argc >= 1) {",
          "203:         BIO *f = BIO_new_file(*argv, \"r\");",
          "208:                     progname, *argv, strerror(errno));",
          "215:             printf(\"%s ERROR\\n\", *argv);",
          "219:         printf(\"%s OK\\n\", *argv);",
          "221:         argc--;",
          "222:         argv++;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df0d9c6950ce194601a0513afa5af77cc9d78d8c",
      "candidate_info": {
        "commit_hash": "df0d9c6950ce194601a0513afa5af77cc9d78d8c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/df0d9c6950ce194601a0513afa5af77cc9d78d8c",
        "files": [
          "test/recipes/80-test_ssl_old.t"
        ],
        "message": "Skip ECDH tests for SSLv3\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1597)\n(cherry picked from commit 4f326dd8998d5b33f72b11432f110e0f2cfcb92b)",
        "before_after_code_files": [
          "test/recipes/80-test_ssl_old.t||test/recipes/80-test_ssl_old.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/80-test_ssl_old.t||test/recipes/80-test_ssl_old.t": [
          "File: test/recipes/80-test_ssl_old.t -> test/recipes/80-test_ssl_old.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "468:  foreach my $protocol (@protocols) {",
          "469:      note \"Testing ciphersuites for $protocol\";",
          "470:      foreach my $cipher (@{$ciphersuites{$protocol}}) {",
          "474:      }",
          "475:             is(run(test([@ssltest,",
          "476:                          \"-s_cipher\", \"EDH\",",
          "",
          "[Removed Lines]",
          "471:   ok(run(test([@ssltest, @exkeys, \"-cipher\", $cipher,",
          "472:         $protocol eq \"SSLv3\" ? (\"-ssl3\") : ()])),",
          "473:      \"Testing $cipher\");",
          "",
          "[Added Lines]",
          "471:                 if ($protocol eq \"SSLv3\" && $cipher =~ /ECDH/ ) {",
          "472:                     note \"*****SKIPPING $protocol $cipher\";",
          "473:                     ok(1);",
          "474:                 } else {",
          "475:                     ok(run(test([@ssltest, @exkeys, \"-cipher\", $cipher,",
          "476:                                  $protocol eq \"SSLv3\" ? (\"-ssl3\") : ()])),",
          "477:                        \"Testing $cipher\");",
          "478:                }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb2efacaa20987f252bc54a587619690c99dbe5f",
      "candidate_info": {
        "commit_hash": "bb2efacaa20987f252bc54a587619690c99dbe5f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bb2efacaa20987f252bc54a587619690c99dbe5f",
        "files": [
          "include/openssl/err.h",
          "util/indent.pro"
        ],
        "message": "Clean dead macros and defines\n\n... mostly related to some old discarded modules .\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1906)\n(cherry picked from commit 31a51151fc163a7f5f4d07dff9478be50e4b5707)",
        "before_after_code_files": [
          "include/openssl/err.h||include/openssl/err.h",
          "util/indent.pro||util/indent.pro"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/err.h||include/openssl/err.h": [
          "File: include/openssl/err.h -> include/openssl/err.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: # define ERR_LIB_CMS             46",
          "90: # define ERR_LIB_TS              47",
          "91: # define ERR_LIB_HMAC            48",
          "93: # define ERR_LIB_CT              50",
          "94: # define ERR_LIB_ASYNC           51",
          "95: # define ERR_LIB_KDF             52",
          "",
          "[Removed Lines]",
          "92: # define ERR_LIB_JPAKE           49",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "128: # define CMSerr(f,r) ERR_PUT_error(ERR_LIB_CMS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "129: # define TSerr(f,r) ERR_PUT_error(ERR_LIB_TS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "130: # define HMACerr(f,r) ERR_PUT_error(ERR_LIB_HMAC,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "132: # define CTerr(f,r) ERR_PUT_error(ERR_LIB_CT,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "133: # define ASYNCerr(f,r) ERR_PUT_error(ERR_LIB_ASYNC,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "134: # define KDFerr(f,r) ERR_PUT_error(ERR_LIB_KDF,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "",
          "[Removed Lines]",
          "131: # define JPAKEerr(f,r) ERR_PUT_error(ERR_LIB_JPAKE,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "util/indent.pro||util/indent.pro": [
          "File: util/indent.pro -> util/indent.pro",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: -ts0",
          "36: -T ACCESS_DESCRIPTION",
          "37: -T ADDED_OBJ",
          "56: -T AES_KEY",
          "57: -T APP_INFO",
          "58: -T ARGS",
          "",
          "[Removed Lines]",
          "38: -T AEP_BBOOL",
          "39: -T AEP_CHAR",
          "40: -T AEP_CHAR_PTR",
          "41: -T AEP_CONNECTION_ENTRY",
          "42: -T AEP_CONNECTION_HNDL",
          "43: -T AEP_CONNECTION_HNDL_PTR",
          "44: -T AEP_FLAGS",
          "45: -T AEP_RV",
          "46: -T AEP_TRANSACTION_ID",
          "47: -T AEP_TRANSACTION_ID_PTR",
          "48: -T AEP_U16",
          "49: -T AEP_U32",
          "50: -T AEP_U32_PTR",
          "51: -T AEP_U64_PTR",
          "52: -T AEP_U8",
          "53: -T AEP_U8_PTR",
          "54: -T AEP_VOID_PTR",
          "55: -T AEP_VOID_PTR_PTR",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "285: -T HEAPLIST32",
          "286: -T HEARTBEAT_TEST_FIXTURE",
          "287: -T HMAC_CTX",
          "292: -T IDEA_KEY_SCHEDULE",
          "293: -T IPAddrBlocks",
          "294: -T IPAddressFamily",
          "",
          "[Removed Lines]",
          "288: -T ICA_KEY_RSA_CRT",
          "289: -T ICA_KEY_RSA_CRT_REC",
          "290: -T ICA_KEY_RSA_MODEXPO",
          "291: -T ICA_KEY_RSA_MODEXPO_REC",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "362: -T OPENSSL_ITEM",
          "363: -T OPENSSL_PSTRING",
          "364: -T OPENSSL_STRING",
          "366: -T OSSL_ASYNC_FD",
          "367: -T OTHERNAME",
          "368: -T P256_POINT",
          "",
          "[Removed Lines]",
          "365: -T OPENSSL_STRING",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "434: -T SSL",
          "435: -T SSL2_STATE",
          "436: -T SSL3_BUFFER",
          "439: -T SSL3_COMP",
          "440: -T SSL3_ENC_METHOD",
          "441: -T SSL3_RECORD",
          "",
          "[Removed Lines]",
          "437: -T SSL3_BUF_FREELIST",
          "438: -T SSL3_BUF_FREELIST_ENTRY",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "450: -T SSL_SESSION",
          "451: -T SSL_SESSION_ASN1",
          "452: -T STACK_OF",
          "490: -T SXNET",
          "491: -T SXNETID",
          "492: -T TCHAR",
          "",
          "[Removed Lines]",
          "453: -T STORE",
          "454: -T STORE_ATTR_INFO",
          "455: -T STORE_ATTR_TYPES",
          "456: -T STORE_CERTIFICATE_STATUS",
          "457: -T STORE_CLEANUP_FUNC_PTR",
          "458: -T STORE_CTRL_FUNC_PTR",
          "459: -T STORE_END_OBJECT_FUNC_PTR",
          "460: -T STORE_GENERATE_OBJECT_FUNC_PTR",
          "461: -T STORE_GENERIC_FUNC_PTR",
          "462: -T STORE_GET_OBJECT_FUNC_PTR",
          "463: -T STORE_HANDLE_OBJECT_FUNC_PTR",
          "464: -T STORE_INITIALISE_FUNC_PTR",
          "465: -T STORE_METHOD",
          "466: -T STORE_MODIFY_OBJECT_FUNC_PTR",
          "467: -T STORE_NEXT_OBJECT_FUNC_PTR",
          "468: -T STORE_OBJECT",
          "469: -T STORE_OBJECT_TYPES",
          "470: -T STORE_PARAM_TYPES",
          "471: -T STORE_START_OBJECT_FUNC_PTR",
          "472: -T STORE_STORE_OBJECT_FUNC_PTR",
          "473: -T SW_ALGTYPE",
          "474: -T SW_BYTE",
          "475: -T SW_COMMAND_BITMAP",
          "476: -T SW_COMMAND_CODE",
          "477: -T SW_CONTEXT_HANDLE",
          "478: -T SW_CRT",
          "479: -T SW_DSA",
          "480: -T SW_EXP",
          "481: -T SW_LARGENUMBER",
          "482: -T SW_NVDATA",
          "483: -T SW_OSHANDLE",
          "484: -T SW_PARAM",
          "485: -T SW_STATE",
          "486: -T SW_STATUS",
          "487: -T SW_U16",
          "488: -T SW_U32",
          "489: -T SW_U64",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "662: -T STACK_OF_SRTP_PROTECTION_PROFILE_",
          "663: -T STACK_OF_SSL_CIPHER_",
          "664: -T STACK_OF_SSL_COMP_",
          "666: -T STACK_OF_STRING_",
          "667: -T STACK_OF_SXNETID_",
          "668: -T STACK_OF_SingleResponse_",
          "",
          "[Removed Lines]",
          "665: -T STACK_OF_STORE_ATTR_INFO_",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}