{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "231fa2b76667c6e9cdf0d57991c1ab05b82a36bc",
      "candidate_info": {
        "commit_hash": "231fa2b76667c6e9cdf0d57991c1ab05b82a36bc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/231fa2b76667c6e9cdf0d57991c1ab05b82a36bc",
        "files": [
          "include/openssl/x509_vfy.h"
        ],
        "message": "Remove redundant decl of 509_STORE_set_flags\n\na47bc283 accidentally adds another define for X509_STORE_set_flags\nIt is already defined 5lines prior\n\nCLA: trivial\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3047)\n\n(cherry picked from commit feb891990a5137bbe11768a11100d2b423a6b11e)",
        "before_after_code_files": [
          "include/openssl/x509_vfy.h||include/openssl/x509_vfy.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/x509_vfy.h||include/openssl/x509_vfy.h": [
          "File: include/openssl/x509_vfy.h -> include/openssl/x509_vfy.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "272: int X509_STORE_set_trust(X509_STORE *ctx, int trust);",
          "273: int X509_STORE_set1_param(X509_STORE *ctx, X509_VERIFY_PARAM *pm);",
          "274: X509_VERIFY_PARAM *X509_STORE_get0_param(X509_STORE *ctx);",
          "277: void X509_STORE_set_verify(X509_STORE *ctx, X509_STORE_CTX_verify_fn verify);",
          "278: #define X509_STORE_set_verify_func(ctx, func) \\",
          "",
          "[Removed Lines]",
          "275: int X509_STORE_set_flags(X509_STORE *ctx, unsigned long flags);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bc931874e97db89284175e11761cee777b29928d",
      "candidate_info": {
        "commit_hash": "bc931874e97db89284175e11761cee777b29928d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bc931874e97db89284175e11761cee777b29928d",
        "files": [
          "ssl/ssl_asn1.c"
        ],
        "message": "Fix i2d_SSL_SESSION pp output parameter should point to end of asn1 data.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2607)\n(cherry picked from commit a0179d0afb621a0875ddcfd939719a9628ac4444)",
        "before_after_code_files": [
          "ssl/ssl_asn1.c||ssl/ssl_asn1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_asn1.c||ssl/ssl_asn1.c": [
          "File: ssl/ssl_asn1.c -> ssl/ssl_asn1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:         goto err;",
          "279:     }",
          "284:     ret->cipher = NULL;",
          "285:     ret->cipher_id = id;",
          "",
          "[Removed Lines]",
          "281:     p = as->cipher->data;",
          "282:     id = 0x03000000L | ((unsigned long)p[0] << 8L) | (unsigned long)p[1];",
          "",
          "[Added Lines]",
          "281:     id = 0x03000000L | ((unsigned long)as->cipher->data[0] << 8L)",
          "282:                      | (unsigned long)as->cipher->data[1];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3626ed03a6d13fa757d3327db2d5523072063132",
      "candidate_info": {
        "commit_hash": "3626ed03a6d13fa757d3327db2d5523072063132",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3626ed03a6d13fa757d3327db2d5523072063132",
        "files": [
          "test/ssl-tests/04-client_auth.conf.in",
          "test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf.in",
          "test/ssl-tests/ssltests_base.pm"
        ],
        "message": "Add and use function test_pem to work out test filenames.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3260)",
        "before_after_code_files": [
          "test/ssl-tests/04-client_auth.conf.in||test/ssl-tests/04-client_auth.conf.in",
          "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in",
          "test/ssl-tests/ssltests_base.pm||test/ssl-tests/ssltests_base.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ssl-tests/04-client_auth.conf.in||test/ssl-tests/04-client_auth.conf.in": [
          "File: test/ssl-tests/04-client_auth.conf.in -> test/ssl-tests/04-client_auth.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: our @tests = ();",
          "24: sub generate_tests() {",
          "26:     foreach (0..$#protocols) {",
          "",
          "[Removed Lines]",
          "22: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:                 server => {",
          "69:                     \"MinProtocol\" => $protocol,",
          "70:                     \"MaxProtocol\" => $protocol,",
          "72:                     \"VerifyMode\" => \"Require\",",
          "73:                 },",
          "74:                 client => {",
          "",
          "[Removed Lines]",
          "71:                     \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "",
          "[Added Lines]",
          "69:                     \"VerifyCAFile\" => test_pem(\"root-cert.pem\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "87:                 server => {",
          "88:                     \"MinProtocol\" => $protocol,",
          "89:                     \"MaxProtocol\" => $protocol,",
          "91:                     \"VerifyMode\" => \"Request\",",
          "92:                 },",
          "93:                 client => {",
          "94:                     \"MinProtocol\" => $protocol,",
          "95:                     \"MaxProtocol\" => $protocol,",
          "98:                 },",
          "99:                 test   => { \"ExpectedResult\" => \"Success\" },",
          "100:             };",
          "",
          "[Removed Lines]",
          "90:                     \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "96:                     \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "97:                     \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\",",
          "",
          "[Added Lines]",
          "88:                     \"VerifyCAFile\" => test_pem(\"root-cert.pem\"),",
          "94:                     \"Certificate\" => test_pem(\"ee-client-chain.pem\"),",
          "95:                     \"PrivateKey\"  => test_pem(\"ee-key.pem\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "110:                 client => {",
          "111:                     \"MinProtocol\" => $protocol,",
          "112:                     \"MaxProtocol\" => $protocol,",
          "115:                 },",
          "116:                 test   => {",
          "117:                     \"ExpectedResult\" => \"ServerFail\",",
          "",
          "[Removed Lines]",
          "113:                     \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "114:                     \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\",",
          "",
          "[Added Lines]",
          "111:                     \"Certificate\" => test_pem(\"ee-client-chain.pem\"),",
          "112:                     \"PrivateKey\"  => test_pem(\"ee-key.pem\"),",
          "",
          "---------------"
        ],
        "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in": [
          "File: test/ssl-tests/17-renegotiate.conf.in -> test/ssl-tests/17-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: package ssltests;",
          "16: use OpenSSL::Test::Utils;",
          "20: our @tests = (",
          "21:     {",
          "22:         name => \"renegotiate-client-no-resume\",",
          "",
          "[Removed Lines]",
          "18: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:         server => {",
          "72:             \"Options\" => \"NoResumptionOnRenegotiation\",",
          "73:             \"MaxProtocol\" => \"TLSv1.2\",",
          "75:             \"VerifyMode\" => \"Require\",",
          "76:         },",
          "77:         client => {",
          "80:         },",
          "81:         test => {",
          "82:             \"Method\" => \"TLS\",",
          "",
          "[Removed Lines]",
          "74:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "78:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "79:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "",
          "[Added Lines]",
          "72:             \"VerifyCAFile\" => test_pem(\"root-cert.pem\"),",
          "76:             \"Certificate\" => test_pem(\"ee-client-chain.pem\"),",
          "77:             \"PrivateKey\"  => test_pem(\"ee-key.pem\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90:         server => {",
          "91:             \"Options\" => \"NoResumptionOnRenegotiation\",",
          "92:             \"MaxProtocol\" => \"TLSv1.2\",",
          "94:             \"VerifyMode\" => \"Once\",",
          "95:         },",
          "96:         client => {",
          "99:         },",
          "100:         test => {",
          "101:             \"Method\" => \"TLS\",",
          "",
          "[Removed Lines]",
          "93:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "97:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "98:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "",
          "[Added Lines]",
          "91:             \"VerifyCAFile\" => test_pem(\"root-cert.pem\"),",
          "95:             \"Certificate\" => test_pem(\"ee-client-chain.pem\"),",
          "96:             \"PrivateKey\"  => test_pem(\"ee-key.pem\"),",
          "",
          "---------------"
        ],
        "test/ssl-tests/18-dtls-renegotiate.conf.in||test/ssl-tests/18-dtls-renegotiate.conf.in": [
          "File: test/ssl-tests/18-dtls-renegotiate.conf.in -> test/ssl-tests/18-dtls-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: package ssltests;",
          "16: use OpenSSL::Test::Utils;",
          "20: our @tests = (",
          "21:     {",
          "22:         name => \"renegotiate-client-no-resume\",",
          "",
          "[Removed Lines]",
          "18: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:     {",
          "66:         name => \"renegotiate-client-auth-require\",",
          "67:         server => {",
          "69:             \"VerifyMode\" => \"Require\",",
          "70:         },",
          "71:         client => {",
          "74:         },",
          "75:         test => {",
          "76:             \"Method\" => \"DTLS\",",
          "",
          "[Removed Lines]",
          "68:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "72:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "73:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "",
          "[Added Lines]",
          "66:             \"VerifyCAFile\" => test_pem(\"root-cert.pem\"),",
          "70:             \"Certificate\" => test_pem(\"ee-client-chain.pem\"),",
          "71:             \"PrivateKey\"  => test_pem(\"ee-key.pem\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "82:     {",
          "83:         name => \"renegotiate-client-auth-once\",",
          "84:         server => {",
          "86:             \"VerifyMode\" => \"Once\",",
          "87:         },",
          "88:         client => {",
          "91:         },",
          "92:         test => {",
          "93:             \"Method\" => \"DTLS\",",
          "",
          "[Removed Lines]",
          "85:             \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}root-cert.pem\",",
          "89:             \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-client-chain.pem\",",
          "90:             \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}ee-key.pem\"",
          "",
          "[Added Lines]",
          "83:             \"VerifyCAFile\" => test_pem(\"root-cert.pem\"),",
          "87:             \"Certificate\" => test_pem(\"ee-client-chain.pem\"),",
          "88:             \"PrivateKey\"  => test_pem(\"ee-key.pem\"),",
          "",
          "---------------"
        ],
        "test/ssl-tests/ssltests_base.pm||test/ssl-tests/ssltests_base.pm": [
          "File: test/ssl-tests/ssltests_base.pm -> test/ssl-tests/ssltests_base.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: package ssltests;",
          "15: our %base_server = (",
          "18:     \"CipherString\" => \"DEFAULT\",",
          "19: );",
          "21: our %base_client = (",
          "23:     \"VerifyMode\" => \"Peer\",",
          "24:     \"CipherString\" => \"DEFAULT\",",
          "25: );",
          "",
          "[Removed Lines]",
          "13: my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "16:     \"Certificate\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}servercert.pem\",",
          "17:     \"PrivateKey\"  => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}serverkey.pem\",",
          "22:     \"VerifyCAFile\" => \"\\${ENV::TEST_CERTS_DIR}${dir_sep}rootcert.pem\",",
          "",
          "[Added Lines]",
          "13: sub test_pem",
          "14: {",
          "15:     my ($file) = @_;",
          "16:     my $dir_sep = $^O ne \"VMS\" ? \"/\" : \"\";",
          "17:     return \"\\${ENV::TEST_CERTS_DIR}\" . $dir_sep . $file,",
          "18: }",
          "21:     \"Certificate\" => test_pem(\"servercert.pem\"),",
          "22:     \"PrivateKey\"  => test_pem(\"serverkey.pem\"),",
          "27:     \"VerifyCAFile\" => test_pem(\"rootcert.pem\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5be6f71858a66060c7dcb46d0c015a55fc0b569d",
      "candidate_info": {
        "commit_hash": "5be6f71858a66060c7dcb46d0c015a55fc0b569d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5be6f71858a66060c7dcb46d0c015a55fc0b569d",
        "files": [
          "Configure",
          "engines/e_padlock.c"
        ],
        "message": "Only build the body of e_padlock when there are lower level routines\n\nengines/e_padlock.c assumes that for all x86 and x86_64 platforms, the\nlower level routines will be present.  However, that's not always\ntrue, for example for solaris-x86-cc, and that leads to build errors.\n\nThe better solution is to have configure detect if the lower level\npadlock routines are being built, and define the macro PADLOCK_ASM if\nthey are, and use that macro in our C code.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1510)\n(cherry picked from commit 7b176a549ea374fc9b64c3fa7f0812239528b696)",
        "before_after_code_files": [
          "engines/e_padlock.c||engines/e_padlock.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "engines/e_padlock.c||engines/e_padlock.c": [
          "File: engines/e_padlock.c -> engines/e_padlock.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: #  undef COMPILE_HW_PADLOCK",
          "50: static ENGINE *ENGINE_padlock(void);",
          "52: #   endif",
          "53: #  endif",
          "",
          "[Removed Lines]",
          "44: #  if !defined(I386_ONLY) && !defined(OPENSSL_NO_ASM)",
          "45: #   if    defined(__i386__) || defined(__i386) ||    \\",
          "46:         defined(__x86_64__) || defined(__x86_64) || \\",
          "47:         defined(_M_IX86) || defined(_M_AMD64) || defined(_M_X64)",
          "48: #    define COMPILE_HW_PADLOCK",
          "49: #    ifdef OPENSSL_NO_DYNAMIC_ENGINE",
          "51: #    endif",
          "",
          "[Added Lines]",
          "44: #  if !defined(I386_ONLY) && defined(PADLOCK_ASM)",
          "45: #   define COMPILE_HW_PADLOCK",
          "46: #   ifdef OPENSSL_NO_DYNAMIC_ENGINE",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c8b3b5c5a509af641bdb1de688f3e6a7476ddb5",
      "candidate_info": {
        "commit_hash": "4c8b3b5c5a509af641bdb1de688f3e6a7476ddb5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4c8b3b5c5a509af641bdb1de688f3e6a7476ddb5",
        "files": [
          "test/asynctest.c"
        ],
        "message": "asynctest: don't depend on apps\n\nRemove unnecessary include of apps.h. Tests shouldn't take a\ndependency on apps. In this case, there is no dependency, the include\nis unnecessary.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "test/asynctest.c||test/asynctest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/asynctest.c||test/asynctest.c": [
          "File: test/asynctest.c -> test/asynctest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #include <string.h>",
          "16: #include <openssl/async.h>",
          "17: #include <openssl/crypto.h>",
          "20: static int ctr = 0;",
          "21: static ASYNC_JOB *currjob = NULL;",
          "",
          "[Removed Lines]",
          "18: #include <../apps/apps.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}