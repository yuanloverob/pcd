{
  "cve_id": "CVE-2019-19603",
  "cve_desc": "SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.",
  "repo": "sqlite/sqlite",
  "patch_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
  "patch_info": {
    "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab.test"
    ],
    "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab.test||test/altertab.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:       }",
      "857:     }",
      "858:   }else{",
      "861:     ){",
      "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
      "863:                       zName);",
      "864:       return SQLITE_ERROR;",
      "865:     }",
      "866:   }",
      "867:   return SQLITE_OK;",
      "868: }",
      "",
      "[Removed Lines]",
      "859:     if( pParse->nested==0",
      "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
      "",
      "[Added Lines]",
      "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
      "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
      "",
      "[Added Lines]",
      "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
      "2148:   return pMod->pModule->xShadowName(zTail+1);",
      "2149: }",
      "",
      "[Removed Lines]",
      "2150: #else",
      "2151: # define isShadowTableName(x,y) 0",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2190:   p = pParse->pNewTable;",
      "2191:   if( p==0 ) return;",
      "2194:     p->tabFlags |= TF_Shadow;",
      "2195:   }",
      "",
      "[Removed Lines]",
      "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
      "",
      "[Added Lines]",
      "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
      "4549: #endif",
      "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
      "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
      "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
      "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
      "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
      "4553: #else",
      "4554: # define sqlite3ShadowTableName(A,B) 0",
      "4555: #endif",
      "",
      "---------------"
    ],
    "test/altertab.test||test/altertab.test": [
      "File: test/altertab.test -> test/altertab.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "547:   } {1 {table y1_segments may not be modified}}",
      "549:   do_catchsql_test 16.20 {",
      "554:     DROP TABLE y1_segments;",
      "555:   } {1 {table y1_segments may not be dropped}}",
      "557:   do_execsql_test 16.30 {",
      "558:     ALTER TABLE y1 RENAME TO z1;",
      "559:   }",
      "",
      "[Removed Lines]",
      "550:     ALTER TABLE y1_segments RENAME TO abc;",
      "551:   } {1 {table y1_segments may not be altered}}",
      "553:   do_catchsql_test 16.21 {",
      "",
      "[Added Lines]",
      "553:   do_catchsql_test 16.20 {",
      "554:     ALTER TABLE y1_segments RENAME TO abc;",
      "555:   } {1 {table y1_segments may not be altered}}",
      "556:   sqlite3_db_config db DEFENSIVE 0",
      "557:   do_catchsql_test 16.22 {",
      "558:     ALTER TABLE y1_segments RENAME TO abc;",
      "559:   } {0 {}}",
      "560:   sqlite3_db_config db DEFENSIVE 1",
      "561:   do_catchsql_test 16.23 {",
      "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
      "563:   } {1 {object name reserved for internal use: y1_segments}}",
      "564:   do_catchsql_test 16.24 {",
      "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
      "566:   } {1 {object name reserved for internal use: y1_segments}}",
      "567:   sqlite3_db_config db DEFENSIVE 0",
      "568:   do_catchsql_test 16.25 {",
      "569:     ALTER TABLE abc RENAME TO y1_segments;",
      "570:   } {0 {}}",
      "571:   sqlite3_db_config db DEFENSIVE 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2b96b6969ae7f2f8dfa6a07b97fea1057dbcdab5",
      "candidate_info": {
        "commit_hash": "2b96b6969ae7f2f8dfa6a07b97fea1057dbcdab5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2b96b6969ae7f2f8dfa6a07b97fea1057dbcdab5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Improved detection of corruption on the freeblock list of a btree page.\n\nFossilOrigin-Name: 4b00799bdf107fce8a9dd84fd5bf6597e4f3373659b89aae4a1242be5964726f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2ac0e42f8ab7a9184c2a2efd13bd50ab51bc01f9f34e9e63591fd18db02dff54",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1647:   if( (data[hdr+2] || data[hdr+1]) && gap+2<=top ){",
          "1648:     u8 *pSpace = pageFindSlot(pPage, nByte, &rc);",
          "1649:     if( pSpace ){",
          "1653:     }else if( rc ){",
          "1654:       return rc;",
          "1655:     }",
          "",
          "[Removed Lines]",
          "1650:       assert( pSpace>=data && (pSpace - data)<65536 );",
          "1652:       return SQLITE_OK;",
          "",
          "[Added Lines]",
          "1650:       assert( pSpace+nByte<=data+pPage->pBt->usableSize );",
          "1651:       if( (*pIdx = (int)(pSpace-data))<=gap ){",
          "1652:         return SQLITE_CORRUPT_PAGE(pPage);",
          "1653:       }else{",
          "1654:         return SQLITE_OK;",
          "1655:       }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6897:   assert( i<iEnd );",
          "6898:   j = get2byte(&aData[hdr+5]);",
          "6900:   memcpy(&pTmp[j], &aData[j], usableSize - j);",
          "6902:   for(k=0; pCArray->ixNx[k]<=i && ALWAYS(k<NB*2); k++){}",
          "",
          "[Removed Lines]",
          "6899:   if( j>(u32)usableSize ){ j = 0; }",
          "",
          "[Added Lines]",
          "6902:   if( NEVER(j>(u32)usableSize) ){ j = 0; }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39e04f83b95f9ab6b2f579c1da716ab051c5b054",
      "candidate_info": {
        "commit_hash": "39e04f83b95f9ab6b2f579c1da716ab051c5b054",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/39e04f83b95f9ab6b2f579c1da716ab051c5b054",
        "files": [
          "ext/misc/dbdata.c",
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix a problem in the \".recover\" command allowing a circular loop of b-tree pages in a database file to cause an infinite loop.\n\nFossilOrigin-Name: 8d2a062eb8a3e6fdc6a61b571c8da0070382bf208c53e797151eac8679c975a1",
        "before_after_code_files": [
          "ext/misc/dbdata.c||ext/misc/dbdata.c",
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/dbdata.c||ext/misc/dbdata.c": [
          "File: ext/misc/dbdata.c -> ext/misc/dbdata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:   return (a[0]<<8)|a[1];",
          "302: }",
          "303: static unsigned int get_uint32(unsigned char *a){",
          "305: }",
          "",
          "[Removed Lines]",
          "304:   return (a[0]<<24)|(a[1]<<16)|(a[2]<<8)|a[3];",
          "",
          "[Added Lines]",
          "304:   return ((unsigned int)a[0]<<24)",
          "305:        | ((unsigned int)a[1]<<16)",
          "306:        | ((unsigned int)a[2]<<8)",
          "307:        | ((unsigned int)a[3]);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f22c7e229ea4626c5268d61de3964521cf6a2735290cbd1518d68731ba6cca90",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "6633:     \"  SELECT i, maxlen, NULL, (\"",
          "6634:     \"    WITH p(orig, pgno, parent) AS (\"",
          "6635:     \"      SELECT 0, i, (SELECT pgno FROM recovery.dbptr WHERE child=i)\"",
          "6637:     \"      SELECT i, p.parent, \"",
          "6638:     \"        (SELECT pgno FROM recovery.dbptr WHERE child=p.parent) FROM p\"",
          "6639:     \"    )\"",
          "",
          "[Removed Lines]",
          "6636:     \"        UNION ALL\"",
          "",
          "[Added Lines]",
          "6636:     \"        UNION \"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30d3b0ceb55f4a1fcf661236dee0cd0437f35fcb",
      "candidate_info": {
        "commit_hash": "30d3b0ceb55f4a1fcf661236dee0cd0437f35fcb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/30d3b0ceb55f4a1fcf661236dee0cd0437f35fcb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbemem.c"
        ],
        "message": "Ensure that UTF16 strings are properly zero-terminated before returning them in an sqlite3_value_text16() request, even if the string is invalid UTF16 because it was formed from an arbitrary and/or odd-length BLOB.\n\nFossilOrigin-Name: 3a16ddf91f0c9c516a7fc2a9d4a4f69a8326f9b8ea66421e9ef1a2d663687b70",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbemem.c||src/vdbemem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a9b90aa12eecdd9f2a8b2d23da8b7cac43d8b1789f5cefa3f4e939d9f2b59269",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "274: static SQLITE_NOINLINE int vdbeMemAddTerminator(Mem *pMem){",
          "276:     return SQLITE_NOMEM_BKPT;",
          "277:   }",
          "278:   pMem->z[pMem->n] = 0;",
          "279:   pMem->z[pMem->n+1] = 0;",
          "280:   pMem->flags |= MEM_Term;",
          "281:   return SQLITE_OK;",
          "282: }",
          "",
          "[Removed Lines]",
          "275:   if( sqlite3VdbeMemGrow(pMem, pMem->n+2, 1) ){",
          "",
          "[Added Lines]",
          "280:   if( sqlite3VdbeMemGrow(pMem, pMem->n+3, 1) ){",
          "285:   pMem->z[pMem->n+2] = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e2d47d49fbf897f28971845671d3fd6aa3cc5b3",
      "candidate_info": {
        "commit_hash": "3e2d47d49fbf897f28971845671d3fd6aa3cc5b3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3e2d47d49fbf897f28971845671d3fd6aa3cc5b3",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/main.c",
          "src/sqlite.h.in"
        ],
        "message": "Invoking the sqlite3_trace() or sqlite3_trace_v2() interfaces cancels any sqlite3_profile() that is running.\n\nFossilOrigin-Name: ec63d3506bd429560077f82a4c5ed9d189780789fe1c134fff4f3b8733be1a3f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/main.c||src/main.c",
          "src/sqlite.h.in||src/sqlite.h.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3a2c047989facc3461c63a2f9eed412014c951035a80da47c52a70139fb552de",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1996:   sqlite3_mutex_enter(db->mutex);",
          "1997:   pOld = db->pTraceArg;",
          "1998:   db->mTrace = xTrace ? SQLITE_TRACE_LEGACY : 0;",
          "2000:   db->xTrace = (int(*)(u32,void*,void*,void*))xTrace;",
          "2001:   db->pTraceArg = pArg;",
          "2002:   sqlite3_mutex_leave(db->mutex);",
          "",
          "[Removed Lines]",
          "1999:   if( db->xProfile ) db->mTrace |= SQLITE_TRACE_XPROFILE;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2021:   if( mTrace==0 ) xTrace = 0;",
          "2022:   if( xTrace==0 ) mTrace = 0;",
          "2023:   db->mTrace = mTrace;",
          "2027:   db->xTrace = xTrace;",
          "2028:   db->pTraceArg = pArg;",
          "2029:   sqlite3_mutex_leave(db->mutex);",
          "",
          "[Removed Lines]",
          "2024: #ifndef SQLITE_OMIT_DEPRECATED",
          "2025:   if( db->xProfile ) db->mTrace |= SQLITE_TRACE_XPROFILE;",
          "2026: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ]
      }
    },
    {
      "candidate_hash": "51f5ffa1a429bfdfe177e417482f1fbbf6685e76",
      "candidate_info": {
        "commit_hash": "51f5ffa1a429bfdfe177e417482f1fbbf6685e76",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/51f5ffa1a429bfdfe177e417482f1fbbf6685e76",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix a buffer overwrite in shell.c.in (part of the new .recover code).\n\nFossilOrigin-Name: 92facbc73a940d2844ac88fafd2d2dadb10886fb0b7c53e23f346d18fa6d6327",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c621fc668c6538f9f5bdac204f012c64998679a61aa8e224d212503820224c09",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "4010:     if( zNL || zCR ){",
          "4011:       int iOut = 0;",
          "4012:       i64 nMax = (nNL > nCR) ? nNL : nCR;",
          "4014:       char *zOut = (char*)sqlite3_malloc64(nAlloc);",
          "4015:       if( zOut==0 ){",
          "4016:         sqlite3_result_error_nomem(context);",
          "",
          "[Removed Lines]",
          "4013:       i64 nAlloc = nMax * nText + (nMax+12)*2;",
          "",
          "[Added Lines]",
          "4013:       i64 nAlloc = nMax * nText + (nMax+64)*2;",
          "",
          "---------------"
        ]
      }
    }
  ]
}