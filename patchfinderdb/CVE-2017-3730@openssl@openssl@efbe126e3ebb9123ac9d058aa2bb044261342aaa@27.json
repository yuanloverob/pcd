{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e631d60280bf5f0ca3ac3ad33d4e785c5082198d",
      "candidate_info": {
        "commit_hash": "e631d60280bf5f0ca3ac3ad33d4e785c5082198d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e631d60280bf5f0ca3ac3ad33d4e785c5082198d",
        "files": [
          "apps/s_client.c"
        ],
        "message": "s_client: avoid warning on Windows/MS-DOS systems\n\nit appears when using gcc/mingw:\n```\napps/s_client.c:815:9: warning: variable 'at_eof' set but not used [-Wunused-but-set-variable]\n     int at_eof = 0;\n         ^~~~~~\n```\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1512)\n(cherry picked from commit d485640b8083aea895ecf31b4ea6a338ee561b67)",
        "before_after_code_files": [
          "apps/s_client.c||apps/s_client.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_client.c||apps/s_client.c": [
          "File: apps/s_client.c -> apps/s_client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "812:     int socket_family = AF_UNSPEC, socket_type = SOCK_STREAM;",
          "813:     int starttls_proto = PROTO_OFF, crl_format = FORMAT_PEM, crl_download = 0;",
          "814:     int write_tty, read_tty, write_ssl, read_ssl, tty_on, ssl_pending;",
          "815:     int at_eof = 0;",
          "816:     int read_buf_len = 0;",
          "817:     int fallback_scsv = 0;",
          "818:     long randamt = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "815: #if !defined(OPENSSL_SYS_WINDOWS) && !defined(OPENSSL_SYS_MSDOS)",
          "817: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2393:             } else",
          "2394:                 i = raw_read_stdin(cbuf, BUFSIZZ);",
          "2396:             if (i == 0)",
          "2397:                 at_eof = 1;",
          "2399:             if ((!c_ign_eof) && ((i <= 0) || (cbuf[0] == 'Q' && cmdletters))) {",
          "2400:                 BIO_printf(bio_err, \"DONE\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2398: #if !defined(OPENSSL_SYS_WINDOWS) && !defined(OPENSSL_SYS_MSDOS)",
          "2401: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "469f593170d9170da632bb0afd634e971c3234e7",
      "candidate_info": {
        "commit_hash": "469f593170d9170da632bb0afd634e971c3234e7",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/469f593170d9170da632bb0afd634e971c3234e7",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "Add enginesdir to libcrypto.pc pkg-config file\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit cdbbf9900253e8006868eba948248b1092a057de)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "793:      echo 'exec_prefix=$${prefix}'; \\",
          "794:      echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \\",
          "795:      echo 'includedir=$${prefix}/include'; \\",
          "796:      echo ''; \\",
          "797:      echo 'Name: OpenSSL-libcrypto'; \\",
          "798:      echo 'Description: OpenSSL cryptography library'; \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "796:      echo 'enginesdir=$${libdir}/engines-{- $sover -}'; \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b390b6c3f8df925dc92a3dd6b022baa9a2f4650",
      "candidate_info": {
        "commit_hash": "4b390b6c3f8df925dc92a3dd6b022baa9a2f4650",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4b390b6c3f8df925dc92a3dd6b022baa9a2f4650",
        "files": [
          "ssl/statem/statem.c",
          "ssl/statem/statem_lib.c"
        ],
        "message": "Excessive allocation of memory in tls_get_message_header()\n\nA TLS message includes 3 bytes for its length in the header for the message.\nThis would allow for messages up to 16Mb in length. Messages of this length\nare excessive and OpenSSL includes a check to ensure that a peer is sending\nreasonably sized messages in order to avoid too much memory being consumed\nto service a connection. A flaw in the logic of version 1.1.0 means that\nmemory for the message is allocated too early, prior to the excessive\nmessage length check. Due to way memory is allocated in OpenSSL this could\nmean an attacker could force up to 21Mb to be allocated to service a\nconnection. This could lead to a Denial of Service through memory\nexhaustion. However, the excessive message length check still takes place,\nand this would cause the connection to immediately fail. Assuming that the\napplication calls SSL_free() on the failed conneciton in a timely manner\nthen the 21Mb of allocated memory will then be immediately freed again.\nTherefore the excessive memory allocation will be transitory in nature.\nThis then means that there is only a security impact if:\n\n1) The application does not call SSL_free() in a timely manner in the\nevent that the connection fails\nor\n2) The application is working in a constrained environment where there\nis very little free memory\nor\n3) The attacker initiates multiple connection attempts such that there\nare multiple connections in a state where memory has been allocated for\nthe connection; SSL_free() has not yet been called; and there is\ninsufficient memory to service the multiple requests.\n\nExcept in the instance of (1) above any Denial Of Service is likely to\nbe transitory because as soon as the connection fails the memory is\nsubsequently freed again in the SSL_free() call. However there is an\nincreased risk during this period of application crashes due to the lack\nof memory - which would then mean a more serious Denial of Service.\n\nThis issue does not affect DTLS users.\n\nIssue was reported by Shi Lei (Gear Team, Qihoo 360 Inc.).\n\nCVE-2016-6307\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit c1ef7c971d0bbf117c3c80f65b5875e2e7b024b1)",
        "before_after_code_files": [
          "ssl/statem/statem.c||ssl/statem/statem.c",
          "ssl/statem/statem_lib.c||ssl/statem/statem_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/statem/statem.c||ssl/statem/statem.c": [
          "File: ssl/statem/statem.c -> ssl/statem/statem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "542:                 return SUB_STATE_ERROR;",
          "543:             }",
          "545:             st->read_state = READ_STATE_BODY;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "546:             if (!SSL_IS_DTLS(s)",
          "547:                     && s->s3->tmp.message_size > 0",
          "548:                     && !BUF_MEM_grow_clean(s->init_buf,",
          "549:                                            (int)s->s3->tmp.message_size",
          "550:                                            + SSL3_HM_HEADER_LENGTH)) {",
          "551:                 ssl3_send_alert(s, SSL3_AL_FATAL, SSL_AD_INTERNAL_ERROR);",
          "552:                 SSLerr(SSL_F_TLS_GET_MESSAGE_HEADER, ERR_R_BUF_LIB);",
          "553:                 return SUB_STATE_ERROR;",
          "554:             }",
          "",
          "---------------"
        ],
        "ssl/statem/statem_lib.c||ssl/statem/statem_lib.c": [
          "File: ssl/statem/statem_lib.c -> ssl/statem/statem_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "415:         l = RECORD_LAYER_get_rrec_length(&s->rlayer)",
          "416:             + SSL3_HM_HEADER_LENGTH;",
          "421:         s->s3->tmp.message_size = l;",
          "423:         s->init_msg = s->init_buf->data;",
          "",
          "[Removed Lines]",
          "417:         if (l && !BUF_MEM_grow_clean(s->init_buf, (int)l)) {",
          "418:             SSLerr(SSL_F_TLS_GET_MESSAGE_HEADER, ERR_R_BUF_LIB);",
          "419:             goto err;",
          "420:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "430:             SSLerr(SSL_F_TLS_GET_MESSAGE_HEADER, SSL_R_EXCESSIVE_MESSAGE_SIZE);",
          "431:             goto f_err;",
          "432:         }",
          "438:         s->s3->tmp.message_size = l;",
          "440:         s->init_msg = s->init_buf->data + SSL3_HM_HEADER_LENGTH;",
          "",
          "[Removed Lines]",
          "433:         if (l && !BUF_MEM_grow_clean(s->init_buf,",
          "434:                                      (int)l + SSL3_HM_HEADER_LENGTH)) {",
          "435:             SSLerr(SSL_F_TLS_GET_MESSAGE_HEADER, ERR_R_BUF_LIB);",
          "436:             goto err;",
          "437:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "444:     return 1;",
          "445:  f_err:",
          "446:     ssl3_send_alert(s, SSL3_AL_FATAL, al);",
          "448:     return 0;",
          "449: }",
          "",
          "[Removed Lines]",
          "447:  err:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ca3e0f250b1b07557341b03141984f905761d19",
      "candidate_info": {
        "commit_hash": "6ca3e0f250b1b07557341b03141984f905761d19",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6ca3e0f250b1b07557341b03141984f905761d19",
        "files": [
          "test/d2i_test.c",
          "test/recipes/25-test_d2i.t"
        ],
        "message": "Fix no-cms (CVE-2016-7053)\n\nReviewed-by: Matt Caswell <matt@openssl.org>",
        "before_after_code_files": [
          "test/d2i_test.c||test/d2i_test.c",
          "test/recipes/25-test_d2i.t||test/recipes/25-test_d2i.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/d2i_test.c||test/d2i_test.c": [
          "File: test/d2i_test.c -> test/d2i_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #include <openssl/err.h>",
          "21: #include <openssl/x509.h>",
          "22: #include <openssl/x509v3.h>",
          "24: #include \"e_os.h\"",
          "26: static const ASN1_ITEM *item_type;",
          "",
          "[Removed Lines]",
          "23: #include <openssl/cms.h>",
          "",
          "[Added Lines]",
          "23: #ifndef OPENSSL_NO_CMS",
          "24: # include <openssl/cms.h>",
          "25: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "151:         ASN1_ITEM_ref(X509),",
          "152:         ASN1_ITEM_ref(GENERAL_NAME),",
          "153:         ASN1_ITEM_ref(ASN1_INTEGER),",
          "154:         ASN1_ITEM_ref(CMS_ContentInfo)",
          "155:     };",
          "157:     static error_enum expected_errors[] = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156: #ifndef OPENSSL_NO_CMS",
          "158: #endif",
          "",
          "---------------"
        ],
        "test/recipes/25-test_d2i.t||test/recipes/25-test_d2i.t": [
          "File: test/recipes/25-test_d2i.t -> test/recipes/25-test_d2i.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use File::Spec;",
          "14: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "16: setup(\"test_d2i\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: use OpenSSL::Test::Utils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:              srctop_file('test','d2i-tests','bad-int-padminus1.der')])),",
          "81:    \"Running d2i_test bad-int-padminus1.der INTEGER\");",
          "",
          "[Removed Lines]",
          "83: # Invalid CMS structure with decode error in CHOICE value.",
          "84: # Test for CVE-2016-7053",
          "86: ok(run(test([\"d2i_test\", \"CMS_ContentInfo\", \"decode\",",
          "87:              srctop_file('test','d2i-tests','bad-cms.der')])),",
          "88:    \"Running d2i_test bad-cms.der CMS ContentInfo\");",
          "",
          "[Added Lines]",
          "84: SKIP: {",
          "85:   skip \"No CMS support in this configuration\", 1 if disabled(\"cms\");",
          "87:   # Invalid CMS structure with decode error in CHOICE value.",
          "88:   # Test for CVE-2016-7053",
          "90:   ok(run(test([\"d2i_test\", \"CMS_ContentInfo\", \"decode\",",
          "91:                srctop_file('test','d2i-tests','bad-cms.der')])),",
          "92:      \"Running d2i_test bad-cms.der CMS ContentInfo\");",
          "93: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c347c5a3b6d51cbd24cfab45ab2698c7757a3ffc",
      "candidate_info": {
        "commit_hash": "c347c5a3b6d51cbd24cfab45ab2698c7757a3ffc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c347c5a3b6d51cbd24cfab45ab2698c7757a3ffc",
        "files": [
          "crypto/ts/ts_lib.c"
        ],
        "message": "Add error checking, small nit on ouput\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1632)\n(cherry picked from commit 31dad404fd6854ec8dd697bcccfef1e8dba3faff)",
        "before_after_code_files": [
          "crypto/ts/ts_lib.c||crypto/ts/ts_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ts/ts_lib.c||crypto/ts/ts_lib.c": [
          "File: crypto/ts/ts_lib.c -> crypto/ts/ts_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:     for (i = 0; i < n; i++) {",
          "58:         ex = X509v3_get_ext(extensions, i);",
          "59:         obj = X509_EXTENSION_get_object(ex);",
          "61:         critical = X509_EXTENSION_get_critical(ex);",
          "63:         if (!X509V3_EXT_print(bio, ex, 0, 4)) {",
          "64:             BIO_printf(bio, \"%4s\", \"\");",
          "65:             ASN1_STRING_print(bio, X509_EXTENSION_get_data(ex));",
          "",
          "[Removed Lines]",
          "60:         i2a_ASN1_OBJECT(bio, obj);",
          "62:         BIO_printf(bio, \": %s\\n\", critical ? \"critical\" : \"\");",
          "",
          "[Added Lines]",
          "60:         if (i2a_ASN1_OBJECT(bio, obj) < 0)",
          "61:             return 0;",
          "63:         BIO_printf(bio, \":%s\\n\", critical ? \" critical\" : \"\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}