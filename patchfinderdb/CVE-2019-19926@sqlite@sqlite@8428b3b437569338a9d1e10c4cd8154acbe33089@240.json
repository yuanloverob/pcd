{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0f134f0267e79a78c76a78a1e8c2a0370db28a0a",
      "candidate_info": {
        "commit_hash": "0f134f0267e79a78c76a78a1e8c2a0370db28a0a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0f134f0267e79a78c76a78a1e8c2a0370db28a0a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/parse.y"
        ],
        "message": "Small optimizations to the grammar for window functions save about 120 bytes of space in the parser tables.\n\nFossilOrigin-Name: bce01d9584e52b23d7c07c2e832d5fa5d6e6235711c856b903a296725f61ed6e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bc0fb1c324be2fd668bc4398c7d364b7e3c5a98537fe5fb58a125b66f3e6d041",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1694: frame_opt(A) ::= range_or_rows(X) frame_bound_s(Y) frame_exclude_opt(Z). {",
          "1695:   A = sqlite3WindowAlloc(pParse, X, Y.eType, Y.pExpr, TK_CURRENT, 0, Z);",
          "1696: }",
          "1698:   A = sqlite3WindowAlloc(pParse, X, Y.eType, Y.pExpr, Z.eType, Z.pExpr, W);",
          "1699: }",
          "1715: %type frame_exclude_opt {u8}",
          "1719: %type frame_exclude {u8}",
          "1726: %type window_clause {Window*}",
          "",
          "[Removed Lines]",
          "1697: frame_opt(A) ::= range_or_rows(X) BETWEEN frame_bound_s(Y) AND frame_bound_e(Z) frame_exclude_opt(W). {",
          "1701: range_or_rows(A) ::= RANGE.   { A = TK_RANGE; }",
          "1702: range_or_rows(A) ::= ROWS.    { A = TK_ROWS;  }",
          "1703: range_or_rows(A) ::= GROUPS.  { A = TK_GROUPS;}",
          "1706: frame_bound_s(A) ::= frame_bound(X). { A = X; }",
          "1707: frame_bound_s(A) ::= UNBOUNDED PRECEDING. {A.eType = TK_UNBOUNDED; A.pExpr = 0;}",
          "1708: frame_bound_e(A) ::= frame_bound(X). { A = X; }",
          "1709: frame_bound_e(A) ::= UNBOUNDED FOLLOWING. {A.eType = TK_UNBOUNDED; A.pExpr = 0;}",
          "1711: frame_bound(A) ::= expr(X) PRECEDING.   { A.eType = TK_PRECEDING; A.pExpr = X; }",
          "1712: frame_bound(A) ::= CURRENT ROW.         { A.eType = TK_CURRENT  ; A.pExpr = 0; }",
          "1713: frame_bound(A) ::= expr(X) FOLLOWING.   { A.eType = TK_FOLLOWING; A.pExpr = X; }",
          "1716: frame_exclude_opt(A) ::= . { A = 0; }",
          "1717: frame_exclude_opt(A) ::= EXCLUDE frame_exclude(X). { A = X; }",
          "1720: frame_exclude(A) ::= NO OTHERS.   { A = TK_NO; }",
          "1721: frame_exclude(A) ::= CURRENT ROW. { A = TK_CURRENT; }",
          "1722: frame_exclude(A) ::= GROUP.       { A = TK_GROUP; }",
          "1723: frame_exclude(A) ::= TIES.        { A = TK_TIES; }",
          "",
          "[Added Lines]",
          "1697: frame_opt(A) ::= range_or_rows(X) BETWEEN frame_bound_s(Y) AND",
          "1698:                           frame_bound_e(Z) frame_exclude_opt(W). {",
          "1702: range_or_rows(A) ::= RANGE|ROWS|GROUPS(X).   {A = @X; /*A-overwrites-X*/}",
          "1704: frame_bound_s(A) ::= frame_bound(X).         {A = X;}",
          "1705: frame_bound_s(A) ::= UNBOUNDED(X) PRECEDING. {A.eType = @X; A.pExpr = 0;}",
          "1706: frame_bound_e(A) ::= frame_bound(X).         {A = X;}",
          "1707: frame_bound_e(A) ::= UNBOUNDED(X) FOLLOWING. {A.eType = @X; A.pExpr = 0;}",
          "1709: frame_bound(A) ::= expr(X) PRECEDING|FOLLOWING(Y).",
          "1710:                                              {A.eType = @Y; A.pExpr = X;}",
          "1711: frame_bound(A) ::= CURRENT(X) ROW.           {A.eType = @X; A.pExpr = 0;}",
          "1714: frame_exclude_opt(A) ::= . {A = 0;}",
          "1715: frame_exclude_opt(A) ::= EXCLUDE frame_exclude(X). {A = X;}",
          "1718: frame_exclude(A) ::= NO(X) OTHERS.   {A = @X; /*A-overwrites-X*/}",
          "1719: frame_exclude(A) ::= CURRENT(X) ROW. {A = @X; /*A-overwrites-X*/}",
          "1720: frame_exclude(A) ::= GROUP|TIES(X).  {A = @X; /*A-overwrites-X*/}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "85a379b74b4229f9d6bf54936d2bc71c009929b9",
      "candidate_info": {
        "commit_hash": "85a379b74b4229f9d6bf54936d2bc71c009929b9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/85a379b74b4229f9d6bf54936d2bc71c009929b9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Fix a page-cache reference leak in the btree balancer when there is a corrupt database.\n\nFossilOrigin-Name: 9285899120dec24ff2944431ad455d7ae217ef408ae2f1a3e7bdfb897099028c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1d43ee4000b71f5c6d49244dee96358c567f09ba3451b9d22895a796d3f61ad6",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7550:   pgno = get4byte(pRight);",
          "7551:   while( 1 ){",
          "7552:     rc = getAndInitPage(pBt, pgno, &apOld[i], 0, 0);",
          "7556:     if( rc ){",
          "7557:       memset(apOld, 0, (i+1)*sizeof(MemPage*));",
          "7558:       goto balance_cleanup;",
          "7559:     }",
          "7560:     nMaxCells += 1+apOld[i]->nCell+apOld[i]->nOverflow;",
          "7561:     if( (i--)==0 ) break;",
          "",
          "[Removed Lines]",
          "7553:     if( rc==0 && apOld[i]->nFree<0 ){",
          "7554:       rc = btreeComputeFreeSpace(apOld[i]);",
          "7555:     }",
          "",
          "[Added Lines]",
          "7557:     if( apOld[i]->nFree<0 ){",
          "7558:       rc = btreeComputeFreeSpace(apOld[i]);",
          "7559:       if( rc ){",
          "7560:         memset(apOld, 0, (i)*sizeof(MemPage*));",
          "7561:         goto balance_cleanup;",
          "7562:       }",
          "7563:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed968fa4cb464906e5b0f5148f1f21038a311728",
      "candidate_info": {
        "commit_hash": "ed968fa4cb464906e5b0f5148f1f21038a311728",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ed968fa4cb464906e5b0f5148f1f21038a311728",
        "files": [
          "ext/rtree/rtree.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Avoid integer overflow when computing the array of a bounding box with the rtree_i32 virtual table.\n\nFossilOrigin-Name: b352f1590d20a574b0681e011ececcf4f41fa5b157503d330e03939404aca0e9",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1999: #endif",
          "2000:   {",
          "2001:     switch( pRtree->nDim ){",
          "2007:     }",
          "2008:   }",
          "2009:   return area;",
          "",
          "[Removed Lines]",
          "2002:       case 5:  area  = p->aCoord[9].i - p->aCoord[8].i;",
          "2003:       case 4:  area *= p->aCoord[7].i - p->aCoord[6].i;",
          "2004:       case 3:  area *= p->aCoord[5].i - p->aCoord[4].i;",
          "2005:       case 2:  area *= p->aCoord[3].i - p->aCoord[2].i;",
          "2006:       default: area *= p->aCoord[1].i - p->aCoord[0].i;",
          "",
          "[Added Lines]",
          "2002:       case 5:  area  = (i64)p->aCoord[9].i - (i64)p->aCoord[8].i;",
          "2003:       case 4:  area *= (i64)p->aCoord[7].i - (i64)p->aCoord[6].i;",
          "2004:       case 3:  area *= (i64)p->aCoord[5].i - (i64)p->aCoord[4].i;",
          "2005:       case 2:  area *= (i64)p->aCoord[3].i - (i64)p->aCoord[2].i;",
          "2006:       default: area *= (i64)p->aCoord[1].i - (i64)p->aCoord[0].i;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 048add13fc10e69ae504a49c4663612381d928b2cf1f9cdab4ff34bd40f601a3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32d0f64e8dc1ce478a48e6ebcc400e71a3deb8aa",
      "candidate_info": {
        "commit_hash": "32d0f64e8dc1ce478a48e6ebcc400e71a3deb8aa",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/32d0f64e8dc1ce478a48e6ebcc400e71a3deb8aa",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/whereexpr.c",
          "test/like.test"
        ],
        "message": "Do not attempt the LIKE optimization on a column with numeric affinity if the rhs of the operator begins with whitespace. Fix for ticket [fd76310a5e].\n\nFossilOrigin-Name: 94b58ab059cba9771e75f16d1460f313104a8fb879f9f8805725d362aa58cbcd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/whereexpr.c||src/whereexpr.c",
          "test/like.test||test/like.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b141bae3f6d16c0ebb59dac9b02086a4370839e71ade34004f647b09b1083d1d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/whereexpr.c||src/whereexpr.c": [
          "File: src/whereexpr.c -> src/whereexpr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "279:         if( sqlite3Isdigit(zNew[0])",
          "280:          || zNew[0]=='-'",
          "281:          || zNew[0]=='+'",
          "282:          || zNew[iTo-1]=='0'-1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280:          || sqlite3Isspace(zNew[0])",
          "",
          "---------------"
        ],
        "test/like.test||test/like.test": [
          "File: test/like.test -> test/like.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: set testdir [file dirname $argv0]",
          "19: source $testdir/tester.tcl",
          "21: # Create some sample data to work with.",
          "22: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: set testprefix like",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1095: } {/SEARCH/}",
          "1096: }",
          "1098: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1099: #-------------------------------------------------------------------------",
          "1100: # Tests for ticket [b1d8c79314].",
          "1101: #",
          "1102: reset_db",
          "1103: do_execsql_test 16.0 {",
          "1104:   CREATE TABLE t1(a INTEGER COLLATE NOCASE);",
          "1105:   CREATE INDEX i1 ON t1(a);",
          "1106:   INSERT INTO t1 VALUES(' 1x');",
          "1107:   INSERT INTO t1 VALUES(' 1-');",
          "1108: }",
          "1109: do_execsql_test 16.1 {",
          "1110:   SELECT * FROM t1 WHERE a LIKE ' 1%';",
          "1111: } {{ 1x} { 1-}}",
          "1112: do_execsql_test 16.2 {",
          "1113:   SELECT * FROM t1 WHERE a LIKE ' 1-';",
          "1114: } {{ 1-}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80f6bfc064eac13c408aa7e46e2e154d1d40f297",
      "candidate_info": {
        "commit_hash": "80f6bfc064eac13c408aa7e46e2e154d1d40f297",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/80f6bfc064eac13c408aa7e46e2e154d1d40f297",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/aggnested.test"
        ],
        "message": "Improvements to the algorithm that determines which SELECT in a sequence of nested SELECT statements that an aggregate function belongs to.  This resolves an issue identified by dbsqlfuzz.\n\nFossilOrigin-Name: d768007473f4ed40abbdf2c7e501b580b1cc37c1620c7cb90af1f208a8c35145",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/aggnested.test||test/aggnested.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4145b3e05051ba6729105157a876793ad14a05d895fc10fe704f437eab16ea93",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5297:     }",
          "5298:     if( i<nSrc ){",
          "5299:       p->nThis++;",
          "5301:       p->nOther++;",
          "5302:     }",
          "5303:   }",
          "",
          "[Removed Lines]",
          "5300:     }else{",
          "",
          "[Added Lines]",
          "5300:     }else if( nSrc==0 || pExpr->iTable<pSrc->a[0].iCursor ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5314:   Walker w;",
          "5315:   struct SrcCount cnt;",
          "5316:   assert( pExpr->op==TK_AGG_FUNCTION );",
          "5317:   w.xExprCallback = exprSrcCount;",
          "5319:   w.u.pSrcCount = &cnt;",
          "5320:   cnt.pSrc = pSrcList;",
          "5321:   cnt.nThis = 0;",
          "",
          "[Removed Lines]",
          "5318:   w.xSelectCallback = 0;",
          "",
          "[Added Lines]",
          "5320:   memset(&w, 0, sizeof(w));",
          "5322:   w.xSelectCallback = sqlite3SelectWalkNoop;",
          "",
          "---------------"
        ],
        "test/aggnested.test||test/aggnested.test": [
          "File: test/aggnested.test -> test/aggnested.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "",
          "[Removed Lines]",
          "1: # 2012 August 23",
          "",
          "[Added Lines]",
          "1: # 2012-08-23",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:      GROUP BY id1;",
          "233:   }",
          "234: } {12 2 34 4}",
          "237: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236: # 2019-08-31",
          "237: # Problem found by dbsqlfuzz",
          "238: #",
          "239: do_execsql_test aggnested-4.1 {",
          "240:   DROP TABLE IF EXISTS aa;",
          "241:   DROP TABLE IF EXISTS bb;",
          "242:   CREATE TABLE aa(x INT);  INSERT INTO aa(x) VALUES(123);",
          "243:   CREATE TABLE bb(y INT);  INSERT INTO bb(y) VALUES(456);",
          "244:   SELECT (SELECT sum(x+(SELECT y)) FROM bb) FROM aa;",
          "245: } {579}",
          "246: do_execsql_test aggnested-4.2 {",
          "247:   SELECT (SELECT sum(x+y) FROM bb) FROM aa;",
          "248: } {579}",
          "249: do_execsql_test aggnested-4.3 {",
          "250:   DROP TABLE IF EXISTS tx;",
          "251:   DROP TABLE IF EXISTS ty;",
          "252:   CREATE TABLE tx(x INT);",
          "253:   INSERT INTO tx VALUES(1),(2),(3),(4),(5);",
          "254:   CREATE TABLE ty(y INT);",
          "255:   INSERT INTO ty VALUES(91),(92),(93);",
          "256:   SELECT min((SELECT count(y) FROM ty)) FROM tx;",
          "257: } {3}",
          "258: do_execsql_test aggnested-4.4 {",
          "259:   SELECT max((SELECT a FROM (SELECT count(*) AS a FROM ty) AS s)) FROM tx;",
          "260: } {3}",
          "",
          "---------------"
        ]
      }
    }
  ]
}