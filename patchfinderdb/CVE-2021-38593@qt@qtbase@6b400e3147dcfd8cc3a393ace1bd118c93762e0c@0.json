{
  "cve_id": "CVE-2021-38593",
  "cve_desc": "Qt 5.x before 5.15.6 and 6.x through 6.1.2 has an out-of-bounds write in QOutlineMapper::convertPath (called from QRasterPaintEngine::fill and QPaintEngineEx::stroke).",
  "repo": "qt/qtbase",
  "patch_hash": "6b400e3147dcfd8cc3a393ace1bd118c93762e0c",
  "patch_info": {
    "commit_hash": "6b400e3147dcfd8cc3a393ace1bd118c93762e0c",
    "repo": "qt/qtbase",
    "commit_url": "https://github.com/qt/qtbase/commit/6b400e3147dcfd8cc3a393ace1bd118c93762e0c",
    "files": [
      "src/gui/painting/qpaintengineex.cpp"
    ],
    "message": "Improve fix for avoiding huge number of tiny dashes\n\nSome pathological cases were not caught by the previous fix.\n\nFixes: QTBUG-95239\nPick-to: 6.2 6.1 5.15\nChange-Id: I0337ee3923ff93ccb36c4d7b810a9c0667354cc5\nReviewed-by: Robert L\u00f6hning <robert.loehning@qt.io>",
    "before_after_code_files": [
      "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
    ]
  },
  "patch_diff": {
    "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp": [
      "File: src/gui/painting/qpaintengineex.cpp -> src/gui/painting/qpaintengineex.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "426:             patternLength *= pen.widthF();",
      "427:         if (qFuzzyIsNull(patternLength)) {",
      "428:             pen.setStyle(Qt::NoPen);",
      "431:             pen.setStyle(Qt::SolidLine);",
      "432:             QColor color(pen.color());",
      "",
      "[Removed Lines]",
      "429:         } else if (extent / patternLength > 10000) {",
      "",
      "[Added Lines]",
      "429:         } else if (qFuzzyIsNull(extent) || extent / patternLength > 10000) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1ca02cf2879a5e1511a2f2109f0925cf4c892862",
      "candidate_info": {
        "commit_hash": "1ca02cf2879a5e1511a2f2109f0925cf4c892862",
        "repo": "qt/qtbase",
        "commit_url": "https://github.com/qt/qtbase/commit/1ca02cf2879a5e1511a2f2109f0925cf4c892862",
        "files": [
          "src/gui/painting/qpaintengineex.cpp"
        ],
        "message": "Improve fix for avoiding huge number of tiny dashes\n\nSome pathological cases were not caught by the previous fix.\n\nFixes: QTBUG-95239\nChange-Id: I0337ee3923ff93ccb36c4d7b810a9c0667354cc5\nReviewed-by: Robert L\u00f6hning <robert.loehning@qt.io>\n(cherry picked from commit 6b400e3147dcfd8cc3a393ace1bd118c93762e0c)\nReviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>",
        "before_after_code_files": [
          "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
          ],
          "candidate": [
            "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp": [
          "File: src/gui/painting/qpaintengineex.cpp -> src/gui/painting/qpaintengineex.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "426:             patternLength *= pen.widthF();",
          "427:         if (qFuzzyIsNull(patternLength)) {",
          "428:             pen.setStyle(Qt::NoPen);",
          "431:             pen.setStyle(Qt::SolidLine);",
          "432:             QColor color(pen.color());",
          "",
          "[Removed Lines]",
          "429:         } else if (extent / patternLength > 10000) {",
          "",
          "[Added Lines]",
          "429:         } else if (qFuzzyIsNull(extent) || extent / patternLength > 10000) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9378ba2ae857df7e21a384e514650823db2355c3",
      "candidate_info": {
        "commit_hash": "9378ba2ae857df7e21a384e514650823db2355c3",
        "repo": "qt/qtbase",
        "commit_url": "https://github.com/qt/qtbase/commit/9378ba2ae857df7e21a384e514650823db2355c3",
        "files": [
          "src/gui/painting/qpaintengineex.cpp"
        ],
        "message": "Improve fix for avoiding huge number of tiny dashes\n\nSome pathological cases were not caught by the previous fix.\n\nFixes: QTBUG-95239\nChange-Id: I0337ee3923ff93ccb36c4d7b810a9c0667354cc5\nReviewed-by: Robert L\u00f6hning <robert.loehning@qt.io>\n(cherry picked from commit 6b400e3147dcfd8cc3a393ace1bd118c93762e0c)\nReviewed-by: Eirik Aavitsland <eirik.aavitsland@qt.io>",
        "before_after_code_files": [
          "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
          ],
          "candidate": [
            "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp": [
          "File: src/gui/painting/qpaintengineex.cpp -> src/gui/painting/qpaintengineex.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "426:             patternLength *= pen.widthF();",
          "427:         if (qFuzzyIsNull(patternLength)) {",
          "428:             pen.setStyle(Qt::NoPen);",
          "431:             pen.setStyle(Qt::SolidLine);",
          "432:             QColor color(pen.color());",
          "",
          "[Removed Lines]",
          "429:         } else if (extent / patternLength > 10000) {",
          "",
          "[Added Lines]",
          "429:         } else if (qFuzzyIsNull(extent) || extent / patternLength > 10000) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "202143ba41f6ac574f1858214ed8bf4a38b73ccd",
      "candidate_info": {
        "commit_hash": "202143ba41f6ac574f1858214ed8bf4a38b73ccd",
        "repo": "qt/qtbase",
        "commit_url": "https://github.com/qt/qtbase/commit/202143ba41f6ac574f1858214ed8bf4a38b73ccd",
        "files": [
          "src/gui/painting/qpaintengineex.cpp"
        ],
        "message": "Improve fix for avoiding huge number of tiny dashes\n\nSome pathological cases were not caught by the previous fix.\n\nFixes: QTBUG-95239\nChange-Id: I0337ee3923ff93ccb36c4d7b810a9c0667354cc5\nReviewed-by: Robert L\u00f6hning <robert.loehning@qt.io>\n(cherry picked from commit 6b400e3147dcfd8cc3a393ace1bd118c93762e0c)\nReviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>",
        "before_after_code_files": [
          "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
          ],
          "candidate": [
            "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp": [
          "File: src/gui/painting/qpaintengineex.cpp -> src/gui/painting/qpaintengineex.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "426:             patternLength *= pen.widthF();",
          "427:         if (qFuzzyIsNull(patternLength)) {",
          "428:             pen.setStyle(Qt::NoPen);",
          "431:             pen.setStyle(Qt::SolidLine);",
          "432:             QColor color(pen.color());",
          "",
          "[Removed Lines]",
          "429:         } else if (extent / patternLength > 10000) {",
          "",
          "[Added Lines]",
          "429:         } else if (qFuzzyIsNull(extent) || extent / patternLength > 10000) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c1ad72ff588275b7b67683bf43cab33e4e0de4ea",
      "candidate_info": {
        "commit_hash": "c1ad72ff588275b7b67683bf43cab33e4e0de4ea",
        "repo": "qt/qtbase",
        "commit_url": "https://github.com/qt/qtbase/commit/c1ad72ff588275b7b67683bf43cab33e4e0de4ea",
        "files": [
          "src/gui/painting/qpaintengineex.cpp"
        ],
        "message": "Improve fix for avoiding huge number of tiny dashes\n\nSome pathological cases were not caught by the previous fix.\n\nFixes: QTBUG-95239\nChange-Id: I0337ee3923ff93ccb36c4d7b810a9c0667354cc5\nReviewed-by: Robert L\u00f6hning <robert.loehning@qt.io>\n(cherry picked from commit 6b400e3147dcfd8cc3a393ace1bd118c93762e0c)\nReviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>",
        "before_after_code_files": [
          "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
          ],
          "candidate": [
            "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp": [
          "File: src/gui/painting/qpaintengineex.cpp -> src/gui/painting/qpaintengineex.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "426:             patternLength *= pen.widthF();",
          "427:         if (qFuzzyIsNull(patternLength)) {",
          "428:             pen.setStyle(Qt::NoPen);",
          "431:             pen.setStyle(Qt::SolidLine);",
          "432:             QColor color(pen.color());",
          "",
          "[Removed Lines]",
          "429:         } else if (extent / patternLength > 10000) {",
          "",
          "[Added Lines]",
          "429:         } else if (qFuzzyIsNull(extent) || extent / patternLength > 10000) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "279a434c1c8689f00b1ab8ed571f8732a803a7eb",
      "candidate_info": {
        "commit_hash": "279a434c1c8689f00b1ab8ed571f8732a803a7eb",
        "repo": "qt/qtbase",
        "commit_url": "https://github.com/qt/qtbase/commit/279a434c1c8689f00b1ab8ed571f8732a803a7eb",
        "files": [
          "src/gui/painting/qpaintengine_raster.cpp",
          "src/gui/painting/qpaintengineex.cpp",
          "src/gui/painting/qstroker.cpp",
          "src/gui/painting/qstroker_p.h"
        ],
        "message": "QDashStroker: cap the number of repetitions of the pattern\n\nSince the dashing is computed even outside the clipping and device\narea, painting very long dashed lines could consume unexpected amounts\nof time and resources. Fix by placing a limit on the dashing, and fall\nback to solid line drawing if hit.\n\nFixes: QTBUG-95594\nPick-to: 6.2 6.1 5.15\nChange-Id: Ida05ecd8fe6df402c9e669206fd5cec4a9f5386a\nReviewed-by: Robert L\u00f6hning <robert.loehning@qt.io>\nReviewed-by: Allan Sandfeld Jensen <allan.jensen@qt.io>",
        "before_after_code_files": [
          "src/gui/painting/qpaintengine_raster.cpp||src/gui/painting/qpaintengine_raster.cpp",
          "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp",
          "src/gui/painting/qstroker.cpp||src/gui/painting/qstroker.cpp",
          "src/gui/painting/qstroker_p.h||src/gui/painting/qstroker_p.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
          ],
          "candidate": [
            "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/gui/painting/qpaintengine_raster.cpp||src/gui/painting/qpaintengine_raster.cpp": [
          "File: src/gui/painting/qpaintengine_raster.cpp -> src/gui/painting/qpaintengine_raster.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3266:     qreal length = line.length();",
          "3267:     Q_ASSERT(length > 0);",
          "3268:     while (length > 0) {",
          "3269:         const bool rasterize = *inDash;",
          "3270:         qreal dash = (pattern.at(*dashIndex) - *dashOffset) * width;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3268:     if (length / (patternLength * width) > QDashStroker::repetitionLimit()) {",
          "3269:         rasterizer->rasterizeLine(line.p1(), line.p2(), width / length, squareCap);",
          "3270:         return;",
          "3271:     }",
          "",
          "---------------"
        ],
        "src/gui/painting/qpaintengineex.cpp||src/gui/painting/qpaintengineex.cpp": [
          "File: src/gui/painting/qpaintengineex.cpp -> src/gui/painting/qpaintengineex.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "426:         patternLength *= pw;",
          "427:         if (qFuzzyIsNull(patternLength)) {",
          "428:             pen.setStyle(Qt::NoPen);",
          "431:             pen.setStyle(Qt::SolidLine);",
          "432:             QColor color(pen.color());",
          "",
          "[Removed Lines]",
          "429:         } else if (extent / patternLength > 10000) {",
          "",
          "[Added Lines]",
          "429:         } else if (extent / patternLength > QDashStroker::repetitionLimit()) {",
          "",
          "---------------"
        ],
        "src/gui/painting/qstroker.cpp||src/gui/painting/qstroker.cpp": [
          "File: src/gui/painting/qstroker.cpp -> src/gui/painting/qstroker.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1180:         bool done = pos >= estop;",
          "1204:                 }",
          "1205:                 hasMoveTo = false;",
          "1207:             }",
          "1208:         }",
          "",
          "[Removed Lines]",
          "1182:         if (clipping) {",
          "1184:             if (!lineIntersectsRect(prev, e, clip_tl, clip_br)) {",
          "1186:                 elen -= qFloor(elen * invSumLength) * sumLength;",
          "1188:                 while (!done) {",
          "1189:                     qreal dpos = pos + dashes[idash] - doffset - estart;",
          "1191:                     Q_ASSERT(dpos >= 0);",
          "1193:                     if (dpos > elen) { // dash extends this line",
          "1194:                         doffset = dashes[idash] - (dpos - elen); // subtract the part already used",
          "1195:                         pos = estop; // move pos to next path element",
          "1196:                         done = true;",
          "1197:                     } else { // Dash is on this line",
          "1198:                         pos = dpos + estart;",
          "1199:                         done = pos >= estop;",
          "1200:                         if (++idash >= dashCount)",
          "1201:                             idash = 0;",
          "1202:                         doffset = 0; // full segment so no offset on next.",
          "1203:                     }",
          "1206:                 move_to_pos = e;",
          "",
          "[Added Lines]",
          "1183:         bool clipIt = clipping && !lineIntersectsRect(prev, e, clip_tl, clip_br);",
          "1184:         bool skipDashing = elen * invSumLength > repetitionLimit();",
          "1185:         if (skipDashing || clipIt) {",
          "1187:             elen -= std::floor(elen * invSumLength) * sumLength;",
          "1189:             while (!done) {",
          "1190:                 qreal dpos = pos + dashes[idash] - doffset - estart;",
          "1192:                 Q_ASSERT(dpos >= 0);",
          "1194:                 if (dpos > elen) { // dash extends this line",
          "1195:                     doffset = dashes[idash] - (dpos - elen); // subtract the part already used",
          "1196:                     pos = estop; // move pos to next path element",
          "1197:                     done = true;",
          "1198:                 } else { // Dash is on this line",
          "1199:                     pos = dpos + estart;",
          "1200:                     done = pos >= estop;",
          "1201:                     if (++idash >= dashCount)",
          "1202:                         idash = 0;",
          "1203:                     doffset = 0; // full segment so no offset on next.",
          "1205:             }",
          "1206:             if (clipIt) {",
          "1208:             } else {",
          "1210:                 if (!hasMoveTo) {",
          "1211:                     emitMoveTo(move_to_pos.x, move_to_pos.y);",
          "1212:                     hasMoveTo = true;",
          "1213:                 }",
          "1214:                 emitLineTo(e.x, e.y);",
          "1216:             move_to_pos = e;",
          "",
          "---------------"
        ],
        "src/gui/painting/qstroker_p.h||src/gui/painting/qstroker_p.h": [
          "File: src/gui/painting/qstroker_p.h -> src/gui/painting/qstroker_p.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:     QStroker *stroker() const { return m_stroker; }",
          "270:     static QList<qfixed> patternForStyle(Qt::PenStyle style);",
          "272:     void setDashPattern(const QList<qfixed> &dashPattern) { m_dashPattern = dashPattern; }",
          "273:     QList<qfixed> dashPattern() const { return m_dashPattern; }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "271:     static int repetitionLimit() { return 10000; }",
          "",
          "---------------"
        ]
      }
    }
  ]
}