{
  "cve_id": "CVE-2021-21381",
  "cve_desc": "Flatpak is a system for building, distributing, and running sandboxed desktop applications on Linux. In Flatpack since version 0.9.4 and before version 1.10.2 has a vulnerability in the \"file forwarding\" feature which can be used by an attacker to gain access to files that would not ordinarily be allowed by the app's permissions. By putting the special tokens `@@` and/or `@@u` in the Exec field of a Flatpak app's .desktop file, a malicious app publisher can trick flatpak into behaving as though the user had chosen to open a target file with their Flatpak app, which automatically makes that file available to the Flatpak app. This is fixed in version 1.10.2. A minimal solution is the first commit \"`Disallow @@ and @@U usage in desktop files`\". The follow-up commits \"`dir: Reserve the whole @@ prefix`\" and \"`dir: Refuse to export .desktop files with suspicious uses of @@ tokens`\" are recommended, but not strictly required. As a workaround, avoid installing Flatpak apps from untrusted sources, or check the contents of the exported `.desktop` files in `exports/share/applications/*.desktop` (typically `~/.local/share/flatpak/exports/share/applications/*.desktop` and `/var/lib/flatpak/exports/share/applications/*.desktop`) to make sure that literal filenames do not follow `@@` or `@@u`.",
  "repo": "flatpak/flatpak",
  "patch_hash": "eb7946bb6248923d8c90fe9b84425fef97ae580d",
  "patch_info": {
    "commit_hash": "eb7946bb6248923d8c90fe9b84425fef97ae580d",
    "repo": "flatpak/flatpak",
    "commit_url": "https://github.com/flatpak/flatpak/commit/eb7946bb6248923d8c90fe9b84425fef97ae580d",
    "files": [
      "common/flatpak-dir.c"
    ],
    "message": "dir: Reserve the whole @@ prefix\n\nIf we add new features analogous to file forwarding later, we might\nfind that we need a different magic token. Let's reserve the whole\n@@* namespace so we can call it @@something-else.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>\n(cherry picked from commit 1e7e8fdb24b51078f4c48e0711e24a14930ba1f0)",
    "before_after_code_files": [
      "common/flatpak-dir.c||common/flatpak-dir.c"
    ]
  },
  "patch_diff": {
    "common/flatpak-dir.c||common/flatpak-dir.c": [
      "File: common/flatpak-dir.c -> common/flatpak-dir.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "7139:                 g_string_append_printf (new_exec, \" @@ %s @@\", arg);",
      "7140:               else if (strcasecmp (arg, \"%u\") == 0)",
      "7141:                 g_string_append_printf (new_exec, \" @@u %s @@\", arg);",
      "7143:                 g_print (_(\"Skipping invalid Exec argument %s\\n\"), arg);",
      "7144:               else",
      "7145:                 g_string_append_printf (new_exec, \" %s\", arg);",
      "",
      "[Removed Lines]",
      "7142:               else if (strcmp (arg, \"@@\") == 0 || strcmp (arg, \"@@u\") == 0)",
      "",
      "[Added Lines]",
      "7142:               else if (g_str_has_prefix (arg, \"@@\"))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1e7e8fdb24b51078f4c48e0711e24a14930ba1f0",
      "candidate_info": {
        "commit_hash": "1e7e8fdb24b51078f4c48e0711e24a14930ba1f0",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/1e7e8fdb24b51078f4c48e0711e24a14930ba1f0",
        "files": [
          "common/flatpak-dir.c"
        ],
        "message": "dir: Reserve the whole @@ prefix\n\nIf we add new features analogous to file forwarding later, we might\nfind that we need a different magic token. Let's reserve the whole\n@@* namespace so we can call it @@something-else.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>",
        "before_after_code_files": [
          "common/flatpak-dir.c||common/flatpak-dir.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "common/flatpak-dir.c||common/flatpak-dir.c"
          ],
          "candidate": [
            "common/flatpak-dir.c||common/flatpak-dir.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-dir.c||common/flatpak-dir.c": [
          "File: common/flatpak-dir.c -> common/flatpak-dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7139:                 g_string_append_printf (new_exec, \" @@ %s @@\", arg);",
          "7140:               else if (strcasecmp (arg, \"%u\") == 0)",
          "7141:                 g_string_append_printf (new_exec, \" @@u %s @@\", arg);",
          "7143:                 g_print (_(\"Skipping invalid Exec argument %s\\n\"), arg);",
          "7144:               else",
          "7145:                 g_string_append_printf (new_exec, \" %s\", arg);",
          "",
          "[Removed Lines]",
          "7142:               else if (strcmp (arg, \"@@\") == 0 || strcmp (arg, \"@@u\") == 0)",
          "",
          "[Added Lines]",
          "7142:               else if (g_str_has_prefix (arg, \"@@\"))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ec569bb64d95ca9a49fabc7d8b52ecdc75e8b601",
      "candidate_info": {
        "commit_hash": "ec569bb64d95ca9a49fabc7d8b52ecdc75e8b601",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/ec569bb64d95ca9a49fabc7d8b52ecdc75e8b601",
        "files": [
          "common/flatpak-dir.c"
        ],
        "message": "dir: Reserve the whole @@ prefix\n\nIf we add new features analogous to file forwarding later, we might\nfind that we need a different magic token. Let's reserve the whole\n@@* namespace so we can call it @@something-else.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>\n(cherry picked from commit 1e7e8fdb24b51078f4c48e0711e24a14930ba1f0)",
        "before_after_code_files": [
          "common/flatpak-dir.c||common/flatpak-dir.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "common/flatpak-dir.c||common/flatpak-dir.c"
          ],
          "candidate": [
            "common/flatpak-dir.c||common/flatpak-dir.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-dir.c||common/flatpak-dir.c": [
          "File: common/flatpak-dir.c -> common/flatpak-dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6103:                 g_string_append_printf (new_exec, \" @@ %s @@\", arg);",
          "6104:               else if (strcasecmp (arg, \"%u\") == 0)",
          "6105:                 g_string_append_printf (new_exec, \" @@u %s @@\", arg);",
          "6107:                 g_print (_(\"Skipping invalid Exec argument %s\\n\"), arg);",
          "6108:               else",
          "6109:                 g_string_append_printf (new_exec, \" %s\", arg);",
          "",
          "[Removed Lines]",
          "6106:               else if (strcmp (arg, \"@@\") == 0 || strcmp (arg, \"@@u\") == 0)",
          "",
          "[Added Lines]",
          "6106:               else if (g_str_has_prefix (arg, \"@@\"))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc7526b1d0c5af3ddcc2e232a80be432bcadf8ce",
      "candidate_info": {
        "commit_hash": "cc7526b1d0c5af3ddcc2e232a80be432bcadf8ce",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/cc7526b1d0c5af3ddcc2e232a80be432bcadf8ce",
        "files": [
          "common/flatpak-dir.c"
        ],
        "message": "dir: Reserve the whole @@ prefix\n\nIf we add new features analogous to file forwarding later, we might\nfind that we need a different magic token. Let's reserve the whole\n@@* namespace so we can call it @@something-else.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>\n(cherry picked from commit 1e7e8fdb24b51078f4c48e0711e24a14930ba1f0)",
        "before_after_code_files": [
          "common/flatpak-dir.c||common/flatpak-dir.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "common/flatpak-dir.c||common/flatpak-dir.c"
          ],
          "candidate": [
            "common/flatpak-dir.c||common/flatpak-dir.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-dir.c||common/flatpak-dir.c": [
          "File: common/flatpak-dir.c -> common/flatpak-dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6719:                 g_string_append_printf (new_exec, \" @@ %s @@\", arg);",
          "6720:               else if (strcasecmp (arg, \"%u\") == 0)",
          "6721:                 g_string_append_printf (new_exec, \" @@u %s @@\", arg);",
          "6723:                 g_print (_(\"Skipping invalid Exec argument %s\\n\"), arg);",
          "6724:               else",
          "6725:                 g_string_append_printf (new_exec, \" %s\", arg);",
          "",
          "[Removed Lines]",
          "6722:               else if (strcmp (arg, \"@@\") == 0 || strcmp (arg, \"@@u\") == 0)",
          "",
          "[Added Lines]",
          "6722:               else if (g_str_has_prefix (arg, \"@@\"))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7401e638bf0c03102039e216ab1081922f140ae",
      "candidate_info": {
        "commit_hash": "a7401e638bf0c03102039e216ab1081922f140ae",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/a7401e638bf0c03102039e216ab1081922f140ae",
        "files": [
          "common/flatpak-dir.c"
        ],
        "message": "dir: Refuse to export .desktop files with suspicious uses of @@ tokens\n\nThis is either a malicious/compromised app trying to do an attack, or\na mistake that will break handling of %f, %u and so on. Either way,\nif we refuse to export the .desktop file, resulting in installation\nfailing, then it makes the rejection more obvious than quietly\nremoving the magic tokens.\n\nSigned-off-by: Simon McVittie <smcv@collabora.com>\n(cherry picked from commit 46b3ede5241561c7d588951048c687c5075a3eac)",
        "before_after_code_files": [
          "common/flatpak-dir.c||common/flatpak-dir.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/flatpak/flatpak/pull/4168"
        ],
        "olp_code_files": {
          "patch": [
            "common/flatpak-dir.c||common/flatpak-dir.c"
          ],
          "candidate": [
            "common/flatpak-dir.c||common/flatpak-dir.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-dir.c||common/flatpak-dir.c": [
          "File: common/flatpak-dir.c -> common/flatpak-dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7140:               else if (strcasecmp (arg, \"%u\") == 0)",
          "7141:                 g_string_append_printf (new_exec, \" @@u %s @@\", arg);",
          "7142:               else if (g_str_has_prefix (arg, \"@@\"))",
          "7144:               else",
          "7145:                 g_string_append_printf (new_exec, \" %s\", arg);",
          "7146:             }",
          "",
          "[Removed Lines]",
          "7143:                 g_print (_(\"Skipping invalid Exec argument %s\\n\"), arg);",
          "",
          "[Added Lines]",
          "7143:                 {",
          "7144:                   flatpak_fail_error (error, FLATPAK_ERROR_EXPORT_FAILED,",
          "7145:                                      _(\"Invalid Exec argument %s\"), arg);",
          "7146:                   goto out;",
          "7147:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "936bd2b3e0f4d6c37ed62b8a2ab089aef62d9314",
      "candidate_info": {
        "commit_hash": "936bd2b3e0f4d6c37ed62b8a2ab089aef62d9314",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/936bd2b3e0f4d6c37ed62b8a2ab089aef62d9314",
        "files": [
          "common/flatpak-run.c"
        ],
        "message": "run: Propagate X11 cookies with an address equals to XAUTHLOCALHOSTNAME\n\nOpenSUSE inherits the hostname value from DHCP without updating its X11\nauthentication cookie, and it keeps the initial value in\n`XAUTHLOCALHOSTNAME`.\nTo avoid breaking the X11 applications, OpenSUSE patches libxcb so that\nit also considers the value in `XAUTHLOCALHOSTNAME` as another possible\nhostname.\n\nhttps://bugzilla.opensuse.org/show_bug.cgi?id=262309\n\nTo cope with that behavior we need to check `XAUTHLOCALHOSTNAME` too\nand, if we have a cookie with that address, propagate it inside the\ncontainer adjusting its address to the canonical hostname\n`unames.nodename`.\n\nFixes: #4043\n\nSigned-off-by: Ludovico de Nittis <ludovico.denittis@collabora.com>\n(cherry picked from commit fd6a3b79f4e022e3f41f0c71ab7c6f21393c0db1)",
        "before_after_code_files": [
          "common/flatpak-run.c||common/flatpak-run.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/flatpak/flatpak/pull/4168"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common/flatpak-run.c||common/flatpak-run.c": [
          "File: common/flatpak-run.c -> common/flatpak-run.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   if (xa->family == FamilyLocal && !auth_streq (hostname, xa->address, xa->address_length))",
          "124:   if (xa->number != NULL && !auth_streq (number, xa->number, xa->number_length))",
          "",
          "[Removed Lines]",
          "121:     return FALSE;",
          "",
          "[Added Lines]",
          "121:     {",
          "131:       const char *xauth_local_hostname;",
          "132:       xauth_local_hostname = g_getenv (\"XAUTHLOCALHOSTNAME\");",
          "133:       if (xauth_local_hostname == NULL)",
          "134:         return FALSE;",
          "136:       if (!auth_streq ((char *) xauth_local_hostname, xa->address, xa->address_length))",
          "137:         return FALSE;",
          "138:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:               local_xa.number_length = 2;",
          "161:             }",
          "163:           if (!XauWriteAuth (output, &local_xa))",
          "164:             g_warning (\"xauth write error\");",
          "165:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:           if (local_xa.family == FamilyLocal &&",
          "181:               !auth_streq (unames.nodename, local_xa.address, local_xa.address_length))",
          "182:             {",
          "187:               local_xa.address = unames.nodename;",
          "188:               local_xa.address_length = strlen (local_xa.address);",
          "189:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}