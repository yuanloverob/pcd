{
  "cve_id": "CVE-2019-19645",
  "cve_desc": "alter.c in SQLite through 3.30.1 allows attackers to trigger infinite recursion via certain types of self-referential views in conjunction with ALTER TABLE statements.",
  "repo": "sqlite/sqlite",
  "patch_hash": "38096961c7cd109110ac21d3ed7dad7e0cb0ae06",
  "patch_info": {
    "commit_hash": "38096961c7cd109110ac21d3ed7dad7e0cb0ae06",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/38096961c7cd109110ac21d3ed7dad7e0cb0ae06",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/alter.c",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab3.test"
    ],
    "message": "Avoid infinite recursion in the ALTER TABLE code when a view contains an unused CTE that references, directly or indirectly, the view itself.\n\nFossilOrigin-Name: 1d2e53a39b87e364685e21de137655b6eee725e4c6d27fc90865072d7c5892b5",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/alter.c||src/alter.c",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: c5d44143599f3fe98492b2b900fa3d77925c7be545096251055ceeab899a41f1",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/alter.c||src/alter.c": [
      "File: src/alter.c -> src/alter.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "760:   Parse *pParse = pWalker->pParse;",
      "761:   int i;",
      "762:   if( pParse->nErr ) return WRC_Abort;",
      "763:   if( ALWAYS(p->pEList) ){",
      "764:     ExprList *pList = p->pEList;",
      "765:     for(i=0; i<pList->nExpr; i++){",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "763:   if( p->selFlags & SF_View ) return WRC_Prune;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "853: static int renameColumnSelectCb(Walker *pWalker, Select *p){",
      "854:   renameWalkWith(pWalker, p);",
      "855:   return WRC_Continue;",
      "856: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "855:   if( p->selFlags & SF_View ) return WRC_Prune;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1316:   if( sParse.pNewTable ){",
      "1317:     Select *pSelect = sParse.pNewTable->pSelect;",
      "1318:     if( pSelect ){",
      "1319:       sParse.rc = SQLITE_OK;",
      "1321:       rc = (db->mallocFailed ? SQLITE_NOMEM : sParse.rc);",
      "1322:       if( rc==SQLITE_OK ){",
      "1323:         sqlite3WalkSelect(&sWalker, pSelect);",
      "",
      "[Removed Lines]",
      "1320:       sqlite3SelectPrep(&sParse, sParse.pNewTable->pSelect, 0);",
      "",
      "[Added Lines]",
      "1321:       pSelect->selFlags &= ~SF_View;",
      "1323:       sqlite3SelectPrep(&sParse, pSelect, 0);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1434:   int i;",
      "1435:   RenameCtx *p = pWalker->u.pRename;",
      "1436:   SrcList *pSrc = pSelect->pSrc;",
      "1437:   if( pSrc==0 ){",
      "1438:     assert( pWalker->pParse->db->mallocFailed );",
      "1439:     return WRC_Abort;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1440:   if( pSelect->selFlags & SF_View ) return WRC_Prune;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1514:         if( pTab->pSelect ){",
      "1515:           if( isLegacy==0 ){",
      "1516:             NameContext sNC;",
      "1517:             memset(&sNC, 0, sizeof(sNC));",
      "1518:             sNC.pParse = &sParse;",
      "1520:             sqlite3SelectPrep(&sParse, pTab->pSelect, &sNC);",
      "1521:             if( sParse.nErr ) rc = sParse.rc;",
      "1522:             sqlite3WalkSelect(&sWalker, pTab->pSelect);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1520:             Select *pSelect = pTab->pSelect;",
      "1525:             assert( pSelect->selFlags & SF_View );",
      "1526:             pSelect->selFlags &= ~SF_View;",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2488:   if( IN_RENAME_OBJECT ){",
      "2489:     p->pSelect = pSelect;",
      "2490:     pSelect = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2488:   pSelect->selFlags |= SF_View;",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "487:   ALTER TABLE a RENAME a TO b;",
      "488: }",
      "491: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: #------------------------------------------------------------------------",
      "491: #",
      "492: reset_db",
      "493: do_execsql_test 22.1 {",
      "494:   CREATE TABLE t1(a);",
      "495:   CREATE VIEW v2(b) AS SELECT * FROM v2;",
      "496: }",
      "498: do_catchsql_test 22.2 {",
      "499:   ALTER TABLE t1 RENAME TO t4;",
      "500: } {1 {error in view v2: view v2 is circularly defined}}",
      "502: do_execsql_test 22.3 {",
      "503:   DROP VIEW v2;",
      "504:   CREATE VIEW v2(b) AS WITH t3 AS (SELECT b FROM v2) SELECT * FROM t3;",
      "505: }",
      "507: breakpoint",
      "508: do_catchsql_test 22.4 {",
      "509:   ALTER TABLE t1 RENAME TO t4;",
      "510: } {1 {error in view v2: view v2 is circularly defined}}",
      "512: do_execsql_test 22.5 {",
      "513:   DROP VIEW v2;",
      "514:   CREATE VIEW v2(b) AS WITH t3 AS (SELECT b FROM v2) VALUES(1);",
      "515: }",
      "517: do_catchsql_test 22.6 {",
      "518:   ALTER TABLE t1 RENAME TO t4;",
      "519: } {0 {}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b70b0df8eb8cea79074289826079699a00a0aef4",
      "candidate_info": {
        "commit_hash": "b70b0df8eb8cea79074289826079699a00a0aef4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b70b0df8eb8cea79074289826079699a00a0aef4",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Slightly smaller and faster implementation of the OP_MakeRecord opcode.\n\nFossilOrigin-Name: 3bdce7ef1a6bb03affe978243fec603d5a55c071aa6d87c469a3c199d23f3b5e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a27b0b880d76c6838c0365f66bcd69b1b49b7594470993b608f4e490cbdc4882",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2933:       goto no_mem;",
          "2934:     }",
          "2935:   }",
          "2941:   assert( pData0<=pLast );",
          "2942:   pRec = pData0;",
          "2943:   do{",
          "2944:     serial_type = pRec->uTemp;",
          "2951:   }while( (++pRec)<=pLast );",
          "2955:   assert( pOp->p3>0 && pOp->p3<=(p->nMem+1 - p->nCursor) );",
          "2962:   REGISTER_TRACE(pOp->p3, pOut);",
          "2964:   break;",
          "2965: }",
          "",
          "[Removed Lines]",
          "2936:   zNewRecord = (u8 *)pOut->z;",
          "2939:   i = putVarint32(zNewRecord, nHdr);",
          "2940:   j = nHdr;",
          "2952:   assert( i==nHdr );",
          "2953:   assert( j==nByte );",
          "2956:   pOut->n = (int)nByte;",
          "2957:   pOut->flags = MEM_Blob;",
          "2958:   if( nZero ){",
          "2959:     pOut->u.nZero = nZero;",
          "2960:     pOut->flags |= MEM_Zero;",
          "2961:   }",
          "2963:   UPDATE_MAX_BLOBSIZE(pOut);",
          "",
          "[Added Lines]",
          "2935:   pOut->n = (int)nByte;",
          "2936:   pOut->flags = MEM_Blob;",
          "2937:   if( nZero ){",
          "2938:     pOut->u.nZero = nZero;",
          "2939:     pOut->flags |= MEM_Zero;",
          "2940:   }",
          "2941:   UPDATE_MAX_BLOBSIZE(pOut);",
          "2942:   zHdr = (u8 *)pOut->z;",
          "2943:   zPayload = zHdr + nHdr;",
          "2946:   zHdr += putVarint32(zHdr, nHdr);",
          "2958:   assert( nHdr==(int)(zHdr - (u8*)pOut->z) );",
          "2959:   assert( nByte==(int)(zPayload - (u8*)pOut->z) );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "11d88e68abdf23f131dca81ad8d3517a5cf8449b",
      "candidate_info": {
        "commit_hash": "11d88e68abdf23f131dca81ad8d3517a5cf8449b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/11d88e68abdf23f131dca81ad8d3517a5cf8449b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/main.c",
          "src/select.c",
          "src/shell.c.in",
          "src/sqlite.h.in",
          "src/sqliteInt.h",
          "src/tclsqlite.c",
          "test/tclsqlite.test",
          "test/view.test"
        ],
        "message": "Add the SQLITE_DBCONFIG_ENABLE_VIEW option, together with a \"db config\" command in the TCL interface that can access that option as well as all the other sqlite3_db_config() boolean options.\n\nFossilOrigin-Name: 61b4bccd2984f4c2cf50f58ef08677588e57aa7e079af07473b2e188d9ce4f52",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/main.c||src/main.c",
          "src/select.c||src/select.c",
          "src/shell.c.in||src/shell.c.in",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/tclsqlite.c||src/tclsqlite.c",
          "test/tclsqlite.test||test/tclsqlite.test",
          "test/view.test||test/view.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/sqliteInt.h||src/sqliteInt.h"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/sqliteInt.h||src/sqliteInt.h"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 98357d8c1263920b33a3648ef9214a63c99728bafa7a8d3dd6a1241b2303fd42",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "836:       } aFlagOp[] = {",
          "837:         { SQLITE_DBCONFIG_ENABLE_FKEY,           SQLITE_ForeignKeys    },",
          "838:         { SQLITE_DBCONFIG_ENABLE_TRIGGER,        SQLITE_EnableTrigger  },",
          "839:         { SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER, SQLITE_Fts3Tokenizer  },",
          "840:         { SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION, SQLITE_LoadExtension  },",
          "841:         { SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE,      SQLITE_NoCkptOnClose  },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "839:         { SQLITE_DBCONFIG_ENABLE_VIEW,           SQLITE_EnableView     },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3075:   db->nMaxSorterMmap = 0x7FFFFFFF;",
          "3076:   db->flags |= SQLITE_ShortColNames",
          "3077:                  | SQLITE_EnableTrigger",
          "3078:                  | SQLITE_CacheSpill",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3079:                  | SQLITE_EnableView",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4906:         u8 eCodeOrig = pWalker->eCode;",
          "4907:         if( sqlite3ViewGetColumnNames(pParse, pTab) ) return WRC_Abort;",
          "4908:         assert( pFrom->pSelect==0 );",
          "4909:         pFrom->pSelect = sqlite3SelectDup(db, pTab->pSelect, 0);",
          "4910:         nCol = pTab->nCol;",
          "4911:         pTab->nCol = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4909:         if( pTab->pSelect && (db->flags & SQLITE_EnableView)==0 ){",
          "4910:           sqlite3ErrorMsg(pParse, \"access to view \\\"%s\\\" prohibited\",",
          "4911:               pTab->zName);",
          "4912:         }",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "7135:     } aDbConfig[] = {",
          "7136:         { \"enable_fkey\",        SQLITE_DBCONFIG_ENABLE_FKEY           },",
          "7137:         { \"enable_trigger\",     SQLITE_DBCONFIG_ENABLE_TRIGGER        },",
          "7138:         { \"fts3_tokenizer\",     SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER },",
          "7139:         { \"load_extension\",     SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION },",
          "7140:         { \"no_ckpt_on_close\",   SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE      },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7138:         { \"enable_view\",        SQLITE_DBCONFIG_ENABLE_VIEW           },",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/tclsqlite.c||src/tclsqlite.c": [
          "File: src/tclsqlite.c -> src/tclsqlite.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1917:     \"authorizer\",             \"backup\",                \"bind_fallback\",",
          "1918:     \"busy\",                   \"cache\",                 \"changes\",",
          "1919:     \"close\",                  \"collate\",               \"collation_needed\",",
          "1931:   };",
          "1932:   enum DB_enum {",
          "1933:     DB_AUTHORIZER,            DB_BACKUP,               DB_BIND_FALLBACK,",
          "1934:     DB_BUSY,                  DB_CACHE,                DB_CHANGES,",
          "1935:     DB_CLOSE,                 DB_COLLATE,              DB_COLLATION_NEEDED,",
          "1947:   };",
          "",
          "[Removed Lines]",
          "1920:     \"commit_hook\",            \"complete\",              \"copy\",",
          "1921:     \"deserialize\",            \"enable_load_extension\", \"errorcode\",",
          "1922:     \"eval\",                   \"exists\",                \"function\",",
          "1923:     \"incrblob\",               \"interrupt\",             \"last_insert_rowid\",",
          "1924:     \"nullvalue\",              \"onecolumn\",             \"preupdate\",",
          "1925:     \"profile\",                \"progress\",              \"rekey\",",
          "1926:     \"restore\",                \"rollback_hook\",         \"serialize\",",
          "1927:     \"status\",                 \"timeout\",               \"total_changes\",",
          "1928:     \"trace\",                  \"trace_v2\",              \"transaction\",",
          "1929:     \"unlock_notify\",          \"update_hook\",           \"version\",",
          "1930:     \"wal_hook\",               0",
          "1936:     DB_COMMIT_HOOK,           DB_COMPLETE,             DB_COPY,",
          "1937:     DB_DESERIALIZE,           DB_ENABLE_LOAD_EXTENSION,DB_ERRORCODE,",
          "1938:     DB_EVAL,                  DB_EXISTS,               DB_FUNCTION,",
          "1939:     DB_INCRBLOB,              DB_INTERRUPT,            DB_LAST_INSERT_ROWID,",
          "1940:     DB_NULLVALUE,             DB_ONECOLUMN,            DB_PREUPDATE,",
          "1941:     DB_PROFILE,               DB_PROGRESS,             DB_REKEY,",
          "1942:     DB_RESTORE,               DB_ROLLBACK_HOOK,        DB_SERIALIZE,",
          "1943:     DB_STATUS,                DB_TIMEOUT,              DB_TOTAL_CHANGES,",
          "1944:     DB_TRACE,                 DB_TRACE_V2,             DB_TRANSACTION,",
          "1945:     DB_UNLOCK_NOTIFY,         DB_UPDATE_HOOK,          DB_VERSION,",
          "1946:     DB_WAL_HOOK",
          "",
          "[Added Lines]",
          "1920:     \"commit_hook\",            \"complete\",              \"config\",",
          "1921:     \"copy\",                   \"deserialize\",           \"enable_load_extension\",",
          "1922:     \"errorcode\",              \"eval\",                  \"exists\",",
          "1923:     \"function\",               \"incrblob\",              \"interrupt\",",
          "1924:     \"last_insert_rowid\",      \"nullvalue\",             \"onecolumn\",",
          "1925:     \"preupdate\",              \"profile\",               \"progress\",",
          "1926:     \"rekey\",                  \"restore\",               \"rollback_hook\",",
          "1927:     \"serialize\",              \"status\",                \"timeout\",",
          "1928:     \"total_changes\",          \"trace\",                 \"trace_v2\",",
          "1929:     \"transaction\",            \"unlock_notify\",         \"update_hook\",",
          "1930:     \"version\",                \"wal_hook\",              0",
          "1936:     DB_COMMIT_HOOK,           DB_COMPLETE,             DB_CONFIG,",
          "1937:     DB_COPY,                  DB_DESERIALIZE,          DB_ENABLE_LOAD_EXTENSION,",
          "1938:     DB_ERRORCODE,             DB_EVAL,                 DB_EXISTS,",
          "1939:     DB_FUNCTION,              DB_INCRBLOB,             DB_INTERRUPT,",
          "1940:     DB_LAST_INSERT_ROWID,     DB_NULLVALUE,            DB_ONECOLUMN,",
          "1941:     DB_PREUPDATE,             DB_PROFILE,              DB_PROGRESS,",
          "1942:     DB_REKEY,                 DB_RESTORE,              DB_ROLLBACK_HOOK,",
          "1943:     DB_SERIALIZE,             DB_STATUS,               DB_TIMEOUT,",
          "1944:     DB_TOTAL_CHANGES,         DB_TRACE,                DB_TRACE_V2,",
          "1945:     DB_TRANSACTION,           DB_UNLOCK_NOTIFY,        DB_UPDATE_HOOK,",
          "1946:     DB_VERSION,               DB_WAL_HOOK",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2331:     break;",
          "2332:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2339:   case DB_CONFIG: {",
          "2340:     static const struct DbConfigChoices {",
          "2341:       const char *zName;",
          "2342:       int op;",
          "2343:     } aDbConfig[] = {",
          "2344:         { \"enable_fkey\",        SQLITE_DBCONFIG_ENABLE_FKEY           },",
          "2345:         { \"enable_trigger\",     SQLITE_DBCONFIG_ENABLE_TRIGGER        },",
          "2346:         { \"enable_view\",        SQLITE_DBCONFIG_ENABLE_VIEW           },",
          "2347:         { \"fts3_tokenizer\",     SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER },",
          "2348:         { \"load_extension\",     SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION },",
          "2349:         { \"no_ckpt_on_close\",   SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE      },",
          "2350:         { \"enable_qpsg\",        SQLITE_DBCONFIG_ENABLE_QPSG           },",
          "2351:         { \"trigger_eqp\",        SQLITE_DBCONFIG_TRIGGER_EQP           },",
          "2352:         { \"reset_database\",     SQLITE_DBCONFIG_RESET_DATABASE        },",
          "2353:         { \"defensive\",          SQLITE_DBCONFIG_DEFENSIVE             },",
          "2354:         { \"writable_schema\",    SQLITE_DBCONFIG_WRITABLE_SCHEMA       },",
          "2355:         { \"legacy_alter_table\", SQLITE_DBCONFIG_LEGACY_ALTER_TABLE    },",
          "2356:         { \"dqs_dml\",            SQLITE_DBCONFIG_DQS_DML               },",
          "2357:         { \"dqs_ddl\",            SQLITE_DBCONFIG_DQS_DDL               },",
          "2358:     };",
          "2359:     Tcl_Obj *pResult;",
          "2360:     int ii;",
          "2361:     if( objc>4 ){",
          "2362:       Tcl_WrongNumArgs(interp, 2, objv, \"?OPTION? ?BOOLEAN?\");",
          "2363:       return TCL_ERROR;",
          "2364:     }",
          "2365:     if( objc==2 ){",
          "2368:       pResult = Tcl_NewListObj(0,0);",
          "2369:       for(ii=0; ii<sizeof(aDbConfig)/sizeof(aDbConfig[0]); ii++){",
          "2370:         int v = 0;",
          "2371:         int rc = sqlite3_db_config(pDb->db, aDbConfig[ii].op, -1, &v);",
          "2372:         if( rc!=SQLITE_OK ) continue;",
          "2373:         Tcl_ListObjAppendElement(interp, pResult,",
          "2374:            Tcl_NewStringObj(aDbConfig[ii].zName,-1));",
          "2375:         Tcl_ListObjAppendElement(interp, pResult,",
          "2376:            Tcl_NewIntObj(v));",
          "2377:       }",
          "2378:     }else{",
          "2379:       const char *zOpt = Tcl_GetString(objv[2]);",
          "2380:       int rc;",
          "2381:       int onoff = -1;",
          "2382:       int v = 0;",
          "2383:       if( zOpt[0]=='-' ) zOpt++;",
          "2384:       for(ii=0; ii<sizeof(aDbConfig)/sizeof(aDbConfig[0]); ii++){",
          "2385:         if( strcmp(aDbConfig[ii].zName, zOpt)==0 ) break;",
          "2386:       }",
          "2387:       if( ii>=sizeof(aDbConfig)/sizeof(aDbConfig[0]) ){",
          "2388:         Tcl_AppendResult(interp, \"unknown config option: \\\"\", zOpt,",
          "2389:                                 \"\\\"\", (void*)0);",
          "2390:         return TCL_ERROR;",
          "2391:       }",
          "2392:       if( objc==4 ){",
          "2393:         if( Tcl_GetBooleanFromObj(interp, objv[3], &onoff) ){",
          "2394:           return TCL_ERROR;",
          "2395:         }",
          "2396:       }",
          "2397:       rc = sqlite3_db_config(pDb->db, aDbConfig[ii].op, onoff, &v);",
          "2398:       pResult = Tcl_NewIntObj(v);",
          "2399:     }",
          "2400:     Tcl_SetObjResult(interp, pResult);",
          "2401:     break;",
          "2402:   }",
          "",
          "---------------"
        ],
        "test/tclsqlite.test||test/tclsqlite.test": [
          "File: test/tclsqlite.test -> test/tclsqlite.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: do_test tcl-1.2 {",
          "43:   set v [catch {db bogus} msg]",
          "44:   lappend v $msg",
          "46: do_test tcl-1.2.1 {",
          "47:   set v [catch {db cache bogus} msg]",
          "48:   lappend v $msg",
          "",
          "[Removed Lines]",
          "45: } {1 {bad option \"bogus\": must be authorizer, backup, bind_fallback, busy, cache, changes, close, collate, collation_needed, commit_hook, complete, copy, deserialize, enable_load_extension, errorcode, eval, exists, function, incrblob, interrupt, last_insert_rowid, nullvalue, onecolumn, preupdate, profile, progress, rekey, restore, rollback_hook, serialize, status, timeout, total_changes, trace, trace_v2, transaction, unlock_notify, update_hook, version, or wal_hook}}",
          "",
          "[Added Lines]",
          "45: } {1 {bad option \"bogus\": must be authorizer, backup, bind_fallback, busy, cache, changes, close, collate, collation_needed, commit_hook, complete, config, copy, deserialize, enable_load_extension, errorcode, eval, exists, function, incrblob, interrupt, last_insert_rowid, nullvalue, onecolumn, preupdate, profile, progress, rekey, restore, rollback_hook, serialize, status, timeout, total_changes, trace, trace_v2, transaction, unlock_notify, update_hook, version, or wal_hook}}",
          "",
          "---------------"
        ],
        "test/view.test||test/view.test": [
          "File: test/view.test -> test/view.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     SELECT * FROM v1 ORDER BY a;",
          "39:   }",
          "40: } {1 2 4 5 7 8}",
          "41: do_test view-1.2 {",
          "42:   catchsql {",
          "43:     ROLLBACK;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: do_test view-1.1.100 {",
          "42:   db config enable_view off",
          "43:   catchsql {",
          "44:     SELECT * FROM v1 ORDER BY a;",
          "45:   }",
          "46: } {1 {access to view \"v1\" prohibited}}",
          "47: do_test view-1.1.110 {",
          "48:   db config enable_view on",
          "49:   catchsql {",
          "50:     SELECT * FROM v1 ORDER BY a;",
          "51:   }",
          "52: } {0 {1 2 4 5 7 8}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d0a3fd340b3a74d3811ccd70d9df58b4f772aac",
      "candidate_info": {
        "commit_hash": "7d0a3fd340b3a74d3811ccd70d9df58b4f772aac",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7d0a3fd340b3a74d3811ccd70d9df58b4f772aac",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/index.test"
        ],
        "message": "Add a test case for ticket [ae0f637bddc5290b44669e066a].\n\nFossilOrigin-Name: ece481695fc3c959c3eba0fb485cdda43a10b06d17259b0121e15bfc5e8e8b9f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/index.test||test/index.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5997d075665faca6b70fa647e877ebc84c473b32887b96235865d59ce80247f8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/index.test||test/index.test": [
          "File: test/index.test -> test/index.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "747:   INSERT INTO t1(a,b) VALUES('a',1),('a',0);",
          "748:   SELECT a, b, '|' FROM t1;",
          "749: } {a 1 | a 0 |}",
          "752: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "751: # 2019-05-10 ticket https://www.sqlite.org/src/info/ae0f637bddc5290b",
          "752: do_execsql_test index-23.0 {",
          "753:   DROP TABLE t1;",
          "754:   CREATE TABLE t1(a TEXT, b REAL);",
          "755:   CREATE UNIQUE INDEX t1x1 ON t1(a GLOB b);",
          "756:   INSERT INTO t1(a,b) VALUES('0.0','1'),('1.0','1');",
          "757:   SELECT * FROM t1;",
          "758:   REINDEX;",
          "759: } {0.0 1.0 1.0 1.0}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a509d56bc530940cbaaeb8dca89099d55808fcd",
      "candidate_info": {
        "commit_hash": "6a509d56bc530940cbaaeb8dca89099d55808fcd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6a509d56bc530940cbaaeb8dca89099d55808fcd",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Catch another case of a corrupted structure record in fts5.\n\nFossilOrigin-Name: fb17fea4b9779fbd3adb6ff9500da83a6ca4fa7cba379aa70074e4328814a7f2",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "886:         pLvl->aSeg = (Fts5StructureSegment*)sqlite3Fts5MallocZero(&rc,",
          "887:             nTotal * sizeof(Fts5StructureSegment)",
          "888:         );",
          "889:       }",
          "891:       if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "889:         nSegment -= nTotal;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "901:         }",
          "902:       }",
          "903:     }",
          "904:     if( rc!=SQLITE_OK ){",
          "905:       fts5StructureRelease(pRet);",
          "906:       pRet = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "905:     if( nSegment!=0 && rc==SQLITE_OK ) rc = FTS5_CORRUPT;",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "689:   INSERT INTO t1(t1, rank) VALUES('merge', 500);",
          "690: } {1 {vtable constructor failed: t1}}",
          "692: sqlite3_fts5_may_be_corrupt 0",
          "693: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "692: #-------------------------------------------------------------------------",
          "693: #",
          "694: reset_db",
          "695: do_test 13.0 {",
          "696:   sqlite3 db {}",
          "697:   db deserialize [decode_hexdb {",
          "698: | size 28672 pagesize 4096 filename c13.db",
          "699: | page 1 offset 0",
          "700: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "701: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "702: |     32: 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 04   ................",
          "703: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "704: |     96: 00 00 00 00 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ...............m",
          "705: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "706: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "707: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "708: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "709: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "710: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "711: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "712: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "713: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "714: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "715: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "716: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "717: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "718: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "719: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "720: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "721: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "722: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "723: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "724: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "725: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "726: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "727: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 4f 69 64   ATE TABLE 't1Oid",
          "728: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "729: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "730: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "731: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "732: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "733: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "734: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "735: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "736: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "737: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "738: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "739: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "740: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "741: | page 2 offset 4096",
          "742: |      0: 0d 00 00 00 03 0f bd 00 0f e8 0f ef 0f bd 00 00   ................",
          "743: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 24 84 80   .............$..",
          "744: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "745: |   4048: 63 6b 01 02 02 04 02 66 74 02 02 02 04 04 6e 64   ck.....ft.....nd",
          "746: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 03 03 0f   on..............",
          "747: |   4080: 0a 03 00 24 00 eb 00 00 00 01 01 01 00 01 01 01   ...$............",
          "748: | page 3 offset 8192",
          "749: |      0: 01 0a 00 00 00 01 0f fa 00 0f fa 00 00 00 00 00   ................",
          "750: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "751: | page 4 offset 12288",
          "752: |      0: 0d 00 00 00 03 0f e0 00 0f f6 0f ec 0f e0 00 00   ................",
          "753: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "754: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "755: | page 5 offset 16384",
          "756: |      0: 0d 00 00 00 03 0f ee 00 0f fa 0f f2 0f ee 00 00   ................",
          "757: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 03   ................",
          "758: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "759: | page 6 offset 20480",
          "760: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "761: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "762: | page 7 offset 24576",
          "763: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "764: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "765: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "766: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "767: | end c13.db",
          "768: SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "769: }]} {}",
          "771: do_catchsql_test 14.1 {",
          "772:   SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "773: } {1 {vtable constructor failed: t1}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1daaba9fb46706af8ed0669a661c304df999a69cf639d29d93208f422c515d8c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "813ed78054b8d765631150fad12bd60cd437e263",
      "candidate_info": {
        "commit_hash": "813ed78054b8d765631150fad12bd60cd437e263",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/813ed78054b8d765631150fad12bd60cd437e263",
        "files": [
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Fix a buffer overread in fts3 that could occur in a prefix query on a corrupted database.\n\nFossilOrigin-Name: d0d5689371577b2861d4a9464443d055f3256f3f51d89e0388233a4cbe2601ee",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2552:   if( !aOut ) return SQLITE_NOMEM;",
          "2554:   p = aOut;",
          "",
          "[Removed Lines]",
          "2551:   aOut = sqlite3_malloc64((sqlite3_int64)n1+n2+FTS3_VARINT_MAX-1);",
          "",
          "[Added Lines]",
          "2551:   aOut = sqlite3_malloc64((i64)n1+n2+FTS3_VARINT_MAX-1+FTS3_BUFFER_PADDING);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2577:   if( rc!=SQLITE_OK ){",
          "2578:     sqlite3_free(aOut);",
          "2579:     p = aOut = 0;",
          "2580:   }",
          "2584:   return rc;",
          "2585: }",
          "",
          "[Removed Lines]",
          "2583:   assert( *pnOut<=n1+n2+FTS3_VARINT_MAX-1 );",
          "",
          "[Added Lines]",
          "2580:   }else{",
          "2581:     assert( (p-aOut)<=n1+n2+FTS3_VARINT_MAX-1 );",
          "2582:     memset(&aOut[(p-aOut)], 0, FTS3_BUFFER_PADDING);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2d9cd06715092c312c8c0ec392696a0e90ed090b074e2082e0b830f1399aa941",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "2151:   INSERT INTO t1(t1) VALUES('optimize');",
          "2152: } {1 {database disk image is malformed}}",
          "2154: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2154: #-------------------------------------------------------------------------",
          "2155: reset_db",
          "2156: do_execsql_test 15.0 {",
          "2157:   CREATE VIRTUAL TABLE t1 USING fts3(a, content=\"\");",
          "2158:   INSERT INTO t1_segdir VALUES(0,0,0,0,'0 665',X'000261640303040002086970697363696e670301080001056c6971756103020c00050269700304040001036d65740301060001036e6a6d03080900010375746503050300000663696c6c756d0306020001066f6d6d6f646f0304070002096e736563746574757203010700050471756174030408000104756c7061030804000207706964617461740307050000086465736572756e740308070001016f0302030002036c6f720601040004050005016506020a00040300010375697303050200000265610304060001066975736d6f640302040001036c69740301090001036e696d13030300010373736503050b0002017403080b0001017403020900010175030604000101780304050002076365707465757203070100020a65726369746174696f6e030309000006667567696174030605000002696403080a0001016e070506040003030002086369646964756e740302060001047073756d030103000104727572650305040000066c61626f7265030208000502697303030b000502756d03080c0001046f72656d0301020000056d61676e6103020b000104696e696d0303050001056f6c6c69740308080000046e6973690304020001026f6e0307060002057374727564030308000104756c6c610306060000086f636361656361740307040001066666696369610308060000087061726961747572030607000107726f6964656e740307070000037175690308050003017303030700000d726570726568656e6465726974030507000003736564030202000103696e7403070300020174030105000103756e7403080200000674656d706f72030205000007756c6c616d636f03030a0001017409020700010200010300000576656c697403050a0002046e69616d0303060001086f6c75707461746503050900');",
          "2159: }",
          "2161: do_execsql_test 15.1 {",
          "2162:   SELECT quote(matchinfo(t1, t1 ))==0 FROM t1 WHERE t1 MATCH 'e*';",
          "2163: } {0 0 0 0 0 0}",
          "",
          "---------------"
        ]
      }
    }
  ]
}