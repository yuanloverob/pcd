{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "69f4a3658552dfd205ca3c11b4a34a635d3b5f2d",
      "candidate_info": {
        "commit_hash": "69f4a3658552dfd205ca3c11b4a34a635d3b5f2d",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/69f4a3658552dfd205ca3c11b4a34a635d3b5f2d",
        "files": [
          "include/capstone/arm.h"
        ],
        "message": "fix annotation.",
        "before_after_code_files": [
          "include/capstone/arm.h||include/capstone/arm.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/arm.h||include/capstone/arm.h": [
          "File: include/capstone/arm.h -> include/capstone/arm.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:  ARM_OP_CIMM = 64, // C-Immediate (coprocessor registers)",
          "168:  ARM_OP_PIMM, // P-Immediate (coprocessor registers)",
          "169:  ARM_OP_SETEND, // operand for SETEND instruction",
          "171: } arm_op_type;",
          "",
          "[Removed Lines]",
          "170:  ARM_OP_SYSREG, // MSR/MSR special register operand",
          "",
          "[Added Lines]",
          "170:  ARM_OP_SYSREG, // MSR/MRS special register operand",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8bc95afdd0b0ba0196ecfa2771b30bb0c55bf21",
      "candidate_info": {
        "commit_hash": "b8bc95afdd0b0ba0196ecfa2771b30bb0c55bf21",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/b8bc95afdd0b0ba0196ecfa2771b30bb0c55bf21",
        "files": [
          "arch/X86/X86GenAsmWriter.inc"
        ],
        "message": "x86: fix (AT&T) instruction SLDT for issue #807",
        "before_after_code_files": [
          "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc": [
          "File: arch/X86/X86GenAsmWriter.inc -> arch/X86/X86GenAsmWriter.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19255:       case X86_LGS64rm:",
          "19256:         SStream_concat0(O, \"lgs\\t\");",
          "19257:         break;",
          "19258:     }",
          "19259: #endif",
          "19260:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19258:       case X86_SLDT64m:",
          "19259:         SStream_concat0(O, \"sldt\\t\");",
          "19260:         break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5cb3fe320ef3249e5a2d0b4a0a431636fce312bf",
      "candidate_info": {
        "commit_hash": "5cb3fe320ef3249e5a2d0b4a0a431636fce312bf",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/5cb3fe320ef3249e5a2d0b4a0a431636fce312bf",
        "files": [
          "arch/Mips/MipsMapping.c",
          "bindings/java/capstone/Mips_const.java",
          "bindings/ocaml/mips_const.ml",
          "bindings/python/capstone/mips_const.py",
          "include/capstone/mips.h",
          "suite/test_group_name.py"
        ],
        "message": "Add MIPS_GRP_XXX aliases for generic types.",
        "before_after_code_files": [
          "arch/Mips/MipsMapping.c||arch/Mips/MipsMapping.c",
          "bindings/javcapstone/Mips_const.java||bindings/java/capstone/Mips_const.java",
          "bindings/ocaml/mips_const.ml||bindings/ocaml/mips_const.ml",
          "bindings/python/capstone/mips_const.py||bindings/python/capstone/mips_const.py",
          "include/capstone/mips.h||include/capstone/mips.h",
          "suite/test_group_name.py||suite/test_group_name.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/Mips/MipsMapping.c||arch/Mips/MipsMapping.c": [
          "File: arch/Mips/MipsMapping.c -> arch/Mips/MipsMapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "903:  { MIPS_GRP_INVALID, NULL },",
          "904:  { MIPS_GRP_JUMP, \"jump\" },",
          "907:  { MIPS_GRP_BITCOUNT, \"bitcount\" },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "905:  { MIPS_GRP_CALL, \"call\" },",
          "906:  { MIPS_GRP_RET, \"ret\" },",
          "907:  { MIPS_GRP_INT, \"int\" },",
          "",
          "---------------"
        ],
        "bindings/javcapstone/Mips_const.java||bindings/java/capstone/Mips_const.java": [
          "File: bindings/javcapstone/Mips_const.java -> bindings/java/capstone/Mips_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "847:  public static final int MIPS_GRP_CALL = 2;",
          "848:  public static final int MIPS_GRP_RET = 3;",
          "849:  public static final int MIPS_GRP_INT = 4;",
          "850:  public static final int MIPS_GRP_IRET = 5;",
          "851:  public static final int MIPS_GRP_PRIVILEGE = 6;",
          "",
          "---------------"
        ],
        "bindings/ocaml/mips_const.ml||bindings/ocaml/mips_const.ml": [
          "File: bindings/ocaml/mips_const.ml -> bindings/ocaml/mips_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "842: (* Generic groups *)",
          "843: let _MIPS_GRP_JUMP = 1;;",
          "845: (* Architecture-specific groups *)",
          "846: let _MIPS_GRP_BITCOUNT = 128;;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "844: let _MIPS_GRP_CALL = 2;;",
          "845: let _MIPS_GRP_RET = 3;;",
          "846: let _MIPS_GRP_INT = 4;;",
          "847: let _MIPS_GRP_IRET = 5;;",
          "848: let _MIPS_GRP_PRIVILEGE = 6;;",
          "",
          "---------------"
        ],
        "bindings/python/capstone/mips_const.py||bindings/python/capstone/mips_const.py": [
          "File: bindings/python/capstone/mips_const.py -> bindings/python/capstone/mips_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "842: # Generic groups",
          "843: MIPS_GRP_JUMP = 1",
          "845: # Architecture-specific groups",
          "846: MIPS_GRP_BITCOUNT = 128",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "844: MIPS_GRP_CALL = 2",
          "845: MIPS_GRP_RET = 3",
          "846: MIPS_GRP_INT = 4",
          "847: MIPS_GRP_IRET = 5",
          "848: MIPS_GRP_PRIVILEGE = 6",
          "",
          "---------------"
        ],
        "include/capstone/mips.h||include/capstone/mips.h": [
          "File: include/capstone/mips.h -> include/capstone/mips.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "900:  MIPS_GRP_JUMP, // = CS_GRP_JUMP",
          "903:  MIPS_GRP_BITCOUNT = 128,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "902:  MIPS_GRP_CALL, // = CS_GRP_CALL",
          "904:  MIPS_GRP_RET, // = CS_GRP_RET",
          "906:  MIPS_GRP_INT, // = CS_GRP_INT",
          "908:  MIPS_GRP_IRET, // = CS_GRP_IRET",
          "910:  MIPS_GRP_PRIVILEGE, // = CS_GRP_PRIVILEGE",
          "",
          "---------------"
        ],
        "suite/test_group_name.py||suite/test_group_name.py": [
          "File: suite/test_group_name.py -> suite/test_group_name.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "84: mips_dict = {",
          "85:     MIPS_GRP_JUMP: \"jump\",",
          "86:     MIPS_GRP_BITCOUNT: \"bitcount\",",
          "87:     MIPS_GRP_DSP: \"dsp\",",
          "88:     MIPS_GRP_DSPR2: \"dspr2\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:     MIPS_GRP_CALL: \"call\",",
          "87:     MIPS_GRP_RET: \"ret\",",
          "88:     MIPS_GRP_INT: \"int\",",
          "89:     MIPS_GRP_IRET: \"iret\",",
          "90:     MIPS_GRP_PRIVILEGE: \"privilege\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "abded301c4b0461c4bb8c31615c170608ca03478",
      "candidate_info": {
        "commit_hash": "abded301c4b0461c4bb8c31615c170608ca03478",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/abded301c4b0461c4bb8c31615c170608ca03478",
        "files": [
          "include/capstone/capstone.h"
        ],
        "message": "Update capstone.h\n\nVS2015: error: C2440: 'initializing': cannot convert from 'const char [4]' to 'char *'",
        "before_after_code_files": [
          "include/capstone/capstone.h||include/capstone/capstone.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/capstone.h||include/capstone/capstone.h": [
          "File: include/capstone/capstone.h -> include/capstone/capstone.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:  unsigned int id;",
          "145: } cs_opt_mnem;",
          "",
          "[Removed Lines]",
          "144:  char *mnemonic;",
          "",
          "[Added Lines]",
          "144:  const char *mnemonic;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad25742e89a20fdc507c4ef45cc37369be27374a",
      "candidate_info": {
        "commit_hash": "ad25742e89a20fdc507c4ef45cc37369be27374a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ad25742e89a20fdc507c4ef45cc37369be27374a",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: version 2 could print all debug information for all arch.",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:     }",
          "325:    }",
          "326:    printf(\"  %s\\t%s\\n\", insn[i].mnemonic, insn[i].op_str);",
          "328:                 if (!strcmp(arch, \"x86\")) {",
          "329:                     print_insn_detail_x86(handle, md, &insn[i]);",
          "330:                 }",
          "",
          "[Removed Lines]",
          "327:             if (debug_flag) {//different mode should call different print functions",
          "",
          "[Added Lines]",
          "327:             if (debug_flag) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}