{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3f2d4d535867a99170b4964f2e3db1ef70968c23",
      "candidate_info": {
        "commit_hash": "3f2d4d535867a99170b4964f2e3db1ef70968c23",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/3f2d4d535867a99170b4964f2e3db1ef70968c23",
        "files": [
          "src/unix/loop.c"
        ],
        "message": "unix: req queue must be empty when destroying loop\n\nAssert that the request queue is empty when destroying the event loop.\n\nShould catch errors where people call uv_loop_delete() when there are\nstill in-progress work requests (for example.)",
        "before_after_code_files": [
          "src/unix/loop.c||src/unix/loop.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/loop.c||src/unix/loop.c": [
          "File: src/unix/loop.c -> src/unix/loop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:   uv_mutex_lock(&loop->wq_mutex);",
          "103:   assert(QUEUE_EMPTY(&loop->wq) && \"thread pool work queue not empty!\");",
          "104:   uv_mutex_unlock(&loop->wq_mutex);",
          "105:   uv_mutex_destroy(&loop->wq_mutex);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:   assert(!uv__has_active_reqs(loop));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6bcb799a0d861c01293c2f99159cc8c10ca20f65",
      "candidate_info": {
        "commit_hash": "6bcb799a0d861c01293c2f99159cc8c10ca20f65",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/6bcb799a0d861c01293c2f99159cc8c10ca20f65",
        "files": [
          "include/uv-version.h"
        ],
        "message": "include: fix version number",
        "before_after_code_files": [
          "include/uv-version.h||include/uv-version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv-version.h||include/uv-version.h": [
          "File: include/uv-version.h -> include/uv-version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #define UV_VERSION_MAJOR 0",
          "34: #define UV_VERSION_MINOR 11",
          "36: #define UV_VERSION_IS_RELEASE 0",
          "",
          "[Removed Lines]",
          "35: #define UV_VERSION_PATCH 27",
          "",
          "[Added Lines]",
          "35: #define UV_VERSION_PATCH 28",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c172ea74c92f5162eb71460426a5517ffd5d567",
      "candidate_info": {
        "commit_hash": "3c172ea74c92f5162eb71460426a5517ffd5d567",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/3c172ea74c92f5162eb71460426a5517ffd5d567",
        "files": [
          "uv.gyp"
        ],
        "message": "build: make systemtap probes work with gyp build\n\nThe following now works though the used approach is nothing to write\nhome about:\n\n  $ ./gyp_uv -Duv_use_dtrace=true\n  # <output elided>\n  $ make -C out BUILDTYPE=Debug\n  # <output elided>\n  $ cd out/Debug && stap -L 'process(\"./run-tests\").mark(\"*\")'\n  process(\"./run-tests\").mark(\"tick__start\") $arg1:long $arg2:long\n  process(\"./run-tests\").mark(\"tick__stop\") $arg1:long $arg2:long",
        "before_after_code_files": [
          "uv.gyp||uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "uv.gyp||uv.gyp": [
          "File: uv.gyp -> uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:         ['library==\"shared_library\"', {",
          "269:           'defines': [ 'BUILDING_UV_SHARED=1' ]",
          "270:         }],",
          "271:         ['uv_use_dtrace==\"true\"', {",
          "272:           'defines': [ 'HAVE_DTRACE=1' ],",
          "273:           'dependencies': [ 'uv_dtrace_header' ],",
          "274:           'include_dirs': [ '<(SHARED_INTERMEDIATE_DIR)' ],",
          "275:           'conditions': [",
          "278:             }],",
          "279:           ],",
          "280:         }],",
          "",
          "[Removed Lines]",
          "276:             ['OS != \"mac\"', {",
          "277:               'sources': ['src/unix/dtrace.c' ],",
          "",
          "[Added Lines]",
          "271:         # FIXME(bnoordhuis or tjfontaine) Unify this, it's extremely ugly.",
          "277:             [ 'OS not in \"mac linux\"', {",
          "278:               'sources': [ 'src/unix/dtrace.c' ],",
          "279:             }],",
          "280:             [ 'OS==\"linux\"', {",
          "281:               'sources': [ '<(SHARED_INTERMEDIATE_DIR)/dtrace.o' ]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "480:       ],",
          "481:     },",
          "483:     {",
          "484:       'target_name': 'uv_dtrace_provider',",
          "485:       'type': 'none',",
          "486:       'conditions': [",
          "488:           'actions': [",
          "489:             {",
          "490:               'action_name': 'uv_dtrace_o',",
          "",
          "[Removed Lines]",
          "487:         [ 'uv_use_dtrace==\"true\" and OS!=\"mac\"', {",
          "",
          "[Added Lines]",
          "487:     # FIXME(bnoordhuis or tjfontaine) Unify this, it's extremely ugly.",
          "492:         [ 'uv_use_dtrace==\"true\" and OS not in \"mac linux\"', {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "499:                 '-o', '<@(_outputs)' ]",
          "500:             }",
          "501:           ]",
          "503:       ]",
          "504:     },",
          "",
          "[Removed Lines]",
          "502:         } ]",
          "",
          "[Added Lines]",
          "507:         }],",
          "508:         [ 'uv_use_dtrace==\"true\" and OS==\"linux\"', {",
          "509:           'actions': [",
          "510:             {",
          "511:               'action_name': 'uv_dtrace_o',",
          "512:               'inputs': [ 'src/unix/uv-dtrace.d' ],",
          "513:               'outputs': [ '<(SHARED_INTERMEDIATE_DIR)/dtrace.o' ],",
          "514:               'action': [",
          "515:                 'dtrace', '-C', '-G', '-s', '<@(_inputs)', '-o', '<@(_outputs)'",
          "516:               ],",
          "517:             }",
          "518:           ]",
          "519:         }],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "44ecaa7c9821d41aa3d07e584ea19f60db57f448",
      "candidate_info": {
        "commit_hash": "44ecaa7c9821d41aa3d07e584ea19f60db57f448",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/44ecaa7c9821d41aa3d07e584ea19f60db57f448",
        "files": [
          "src/win/util.c"
        ],
        "message": "windows/timer: fix uv_hrtime discontinuity\n\nLarge performance counter frequency values would cause overflows, even\nwhen 64-bit integers were used to do the multiplication with NANOSEC.\nFix this by using floating point math instead.\n\nFixes #850",
        "before_after_code_files": [
          "src/win/util.c||src/win/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/util.c||src/win/util.c": [
          "File: src/win/util.c -> src/win/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: static char *process_title;",
          "60: static CRITICAL_SECTION process_title_lock;",
          "69: void uv__util_init() {",
          "71:   InitializeCriticalSection(&process_title_lock);",
          "76: }",
          "",
          "[Removed Lines]",
          "63: static uint64_t hrtime_frequency_ = 0;",
          "74:   if (!QueryPerformanceFrequency((LARGE_INTEGER*) &hrtime_frequency_))",
          "75:     hrtime_frequency_ = 0;",
          "",
          "[Added Lines]",
          "63: static double hrtime_frequency_ = 0;",
          "70:   LARGE_INTEGER perf_frequency;",
          "76:   if (QueryPerformanceFrequency(&perf_frequency))",
          "77:     hrtime_frequency_ = (double) perf_frequency.QuadPart / (double) NANOSEC;",
          "78:   else",
          "79:     hrtime_frequency_= 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "447:   uv__once_init();",
          "452:     return 0;",
          "453:   }",
          "",
          "[Removed Lines]",
          "450:   if (!hrtime_frequency_) {",
          "",
          "[Added Lines]",
          "454:   if (hrtime_frequency_ == 0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "457:     return 0;",
          "458:   }",
          "466: }",
          "",
          "[Removed Lines]",
          "463:   return ((uint64_t) counter.LowPart * NANOSEC / hrtime_frequency_) +",
          "464:          (((uint64_t) counter.HighPart * NANOSEC / hrtime_frequency_)",
          "465:          << 32);",
          "",
          "[Added Lines]",
          "468:   return (uint64_t) ((double) counter.QuadPart / hrtime_frequency_);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fc6a2ad24fed0f8c9529d3ef785b0d5a153c3849",
      "candidate_info": {
        "commit_hash": "fc6a2ad24fed0f8c9529d3ef785b0d5a153c3849",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/fc6a2ad24fed0f8c9529d3ef785b0d5a153c3849",
        "files": [
          "LICENSE",
          "common.gypi",
          "include/uv-private/pthread-fixes.h",
          "include/uv-private/uv-unix.h",
          "src/unix/linux-core.c",
          "src/unix/linux-syscalls.h",
          "src/unix/pthread-fixes.c",
          "src/unix/stream.c",
          "src/unix/thread.c",
          "uv.gyp"
        ],
        "message": "unix: support for android builds\n\nAdds targets and fixes to ensure building for android works.\n\nTo build on android, refer to the android standalone toolchain.",
        "before_after_code_files": [
          "common.gypi||common.gypi",
          "include/uv-private/pthread-fixes.h||include/uv-private/pthread-fixes.h",
          "include/uv-private/uv-unix.h||include/uv-private/uv-unix.h",
          "src/unix/linux-core.c||src/unix/linux-core.c",
          "src/unix/linux-syscalls.h||src/unix/linux-syscalls.h",
          "src/unix/pthread-fixes.c||src/unix/pthread-fixes.c",
          "src/unix/stream.c||src/unix/stream.c",
          "src/unix/thread.c||src/unix/thread.c",
          "uv.gyp||uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:           }]",
          "130:         ]",
          "131:       }],",
          "133:         'cflags': [ '-Wall' ],",
          "134:         'cflags_cc': [ '-fno-rtti', '-fno-exceptions' ],",
          "135:         'target_conditions': [",
          "",
          "[Removed Lines]",
          "132:       [ 'OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"solaris\"', {",
          "",
          "[Added Lines]",
          "132:       ['OS in \"android freebsd linux openbsd solaris\"', {",
          "",
          "---------------"
        ],
        "include/uv-private/pthread-fixes.h||include/uv-private/pthread-fixes.h": [
          "File: include/uv-private/pthread-fixes.h -> include/uv-private/pthread-fixes.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3:    All rights reserved.",
          "5:    Redistribution and use in source and binary forms, with or without",
          "6:    modification, are permitted provided that the following conditions are",
          "7:    met:",
          "10:    notice, this list of conditions and the following disclaimer.",
          "12:    copyright notice, this list of conditions and the following disclaimer",
          "13:    in the documentation and/or other materials provided with the",
          "14:    distribution.",
          "16:    contributors may be used to endorse or promote products derived from",
          "17:    this software without specific prior written permission.",
          "19:    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",
          "20:    \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",
          "21:    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR",
          "22:    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",
          "23:    OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,",
          "24:    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT",
          "25:    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,",
          "26:    DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY",
          "27:    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
          "28:    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",
          "29:    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
          "32: #ifndef GOOGLE_BREAKPAD_COMMON_ANDROID_TESTING_PTHREAD_FIXES_H",
          "33: #define GOOGLE_BREAKPAD_COMMON_ANDROID_TESTING_PTHREAD_FIXES_H",
          "35: #include <pthread.h>",
          "39: #ifndef PTHREAD_BARRIER_SERIAL_THREAD",
          "42: #define PTHREAD_BARRIER_SERIAL_THREAD  0x12345",
          "44: typedef struct {",
          "45:   pthread_mutex_t  mutex;",
          "46:   pthread_cond_t   cond;",
          "47:   unsigned         count;",
          "48: } pthread_barrier_t;",
          "50: int pthread_barrier_init(pthread_barrier_t* barrier,",
          "51:                          const void* barrier_attr,",
          "52:                          unsigned count);",
          "54: int pthread_barrier_wait(pthread_barrier_t* barrier);",
          "55: int pthread_barrier_destroy(pthread_barrier_t *barrier);",
          "58: int pthread_yield(void);",
          "",
          "---------------"
        ],
        "include/uv-private/uv-unix.h||include/uv-private/uv-unix.h": [
          "File: include/uv-private/uv-unix.h -> include/uv-private/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: #include <semaphore.h>",
          "39: #include <pthread.h>",
          "40: #include <signal.h>",
          "42: #if defined(__linux__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: #ifdef ANDROID",
          "41: #include \"pthread-fixes.h\"",
          "42: #endif",
          "",
          "---------------"
        ],
        "src/unix/linux-core.c||src/unix/linux-core.c": [
          "File: src/unix/linux-core.c -> src/unix/linux-core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: #include <fcntl.h>",
          "37: #include <time.h>",
          "39: #define HAVE_IFADDRS_H 1",
          "40: #ifdef __UCLIBC__",
          "41: # if __UCLIBC_MAJOR__ < 0 || __UCLIBC_MINOR__ < 9 || __UCLIBC_SUBLEVEL__ < 32",
          "42: #  undef HAVE_IFADDRS_H",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: #ifndef ANDROID",
          "41: #endif",
          "",
          "---------------"
        ],
        "src/unix/linux-syscalls.h||src/unix/linux-syscalls.h": [
          "File: src/unix/linux-syscalls.h -> src/unix/linux-syscalls.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #include <stdint.h>",
          "29: #include <signal.h>",
          "30: #include <sys/types.h>",
          "31: #include <sys/socket.h>",
          "33: #if defined(__alpha__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: #include <sys/time.h>",
          "",
          "---------------"
        ],
        "src/unix/pthread-fixes.c||src/unix/pthread-fixes.c": [
          "File: src/unix/pthread-fixes.c -> src/unix/pthread-fixes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3:    All rights reserved.",
          "5:    Redistribution and use in source and binary forms, with or without",
          "6:    modification, are permitted provided that the following conditions are",
          "7:    met:",
          "10:    notice, this list of conditions and the following disclaimer.",
          "12:    copyright notice, this list of conditions and the following disclaimer",
          "13:    in the documentation and/or other materials provided with the",
          "14:    distribution.",
          "16:    contributors may be used to endorse or promote products derived from",
          "17:    this software without specific prior written permission.",
          "19:    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",
          "20:    \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",
          "21:    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR",
          "22:    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",
          "23:    OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,",
          "24:    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT",
          "25:    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,",
          "26:    DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY",
          "27:    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
          "28:    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",
          "29:    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
          "34: #ifndef PTHREAD_BARRIER_SERIAL_THREAD",
          "36: #include \"pthread-fixes.h\"",
          "38: int pthread_barrier_init(pthread_barrier_t* barrier,",
          "39:                          const void* barrier_attr,",
          "40:                          unsigned count) {",
          "41:   barrier->count = count;",
          "42:   pthread_mutex_init(&barrier->mutex, NULL);",
          "43:   pthread_cond_init(&barrier->cond, NULL);",
          "44:   return 0;",
          "45: }",
          "47: int pthread_barrier_wait(pthread_barrier_t* barrier) {",
          "49:   pthread_mutex_lock(&barrier->mutex);",
          "52:   if (--barrier->count == 0) {",
          "54:     pthread_cond_broadcast(&barrier->cond);",
          "55:     pthread_mutex_unlock(&barrier->mutex);",
          "56:     return PTHREAD_BARRIER_SERIAL_THREAD;",
          "57:   }",
          "60:   do {",
          "61:     pthread_cond_wait(&barrier->cond, &barrier->mutex);",
          "62:   } while (barrier->count > 0);",
          "64:   pthread_mutex_unlock(&barrier->mutex);",
          "65:   return 0;",
          "66: }",
          "68: int pthread_barrier_destroy(pthread_barrier_t *barrier) {",
          "69:   barrier->count = 0;",
          "70:   pthread_cond_destroy(&barrier->cond);",
          "71:   pthread_mutex_destroy(&barrier->mutex);",
          "72:   return 0;",
          "73: }",
          "77: int pthread_yield(void) {",
          "78:   sched_yield();",
          "79:   return 0;",
          "80: }",
          "",
          "---------------"
        ],
        "src/unix/stream.c||src/unix/stream.c": [
          "File: src/unix/stream.c -> src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "696:   }",
          "697: }",
          "700: static void uv__write(uv_stream_t* stream) {",
          "701:   struct iovec* iov;",
          "702:   QUEUE* q;",
          "703:   uv_write_t* req;",
          "704:   int iovcnt;",
          "705:   ssize_t n;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "699: static int uv__getiovmax() {",
          "700: #if defined(IOV_MAX)",
          "701:   return IOV_MAX;",
          "702: #elif defined(_SC_IOV_MAX)",
          "703:   static int iovmax = -1;",
          "704:   if (iovmax == -1)",
          "705:     iovmax = sysconf(_SC_IOV_MAX);",
          "706:   return iovmax;",
          "707: #else",
          "708:   return 1024;",
          "709: #endif",
          "710: }",
          "716:   int iovmax;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "723:   iov = (struct iovec*) &(req->bufs[req->write_index]);",
          "724:   iovcnt = req->bufcnt - req->write_index;",
          "",
          "[Removed Lines]",
          "727:   if (iovcnt > IOV_MAX)",
          "728:     iovcnt = IOV_MAX;",
          "",
          "[Added Lines]",
          "739:   iovmax = uv__getiovmax();",
          "742:   if (iovcnt > iovmax)",
          "743:     iovcnt = iovmax;",
          "",
          "---------------"
        ],
        "src/unix/thread.c||src/unix/thread.c": [
          "File: src/unix/thread.c -> src/unix/thread.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include <assert.h>",
          "27: #include <errno.h>",
          "30: #include <sys/time.h>",
          "33: #undef NANOSEC",
          "34: #define NANOSEC ((uint64_t) 1e9)",
          "",
          "[Removed Lines]",
          "29: #if defined(__APPLE__) && defined(__MACH__)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "283:   if (pthread_condattr_init(&attr))",
          "284:     return -1;",
          "286:   if (pthread_condattr_setclock(&attr, CLOCK_MONOTONIC))",
          "287:     goto error2;",
          "289:   if (pthread_cond_init(cond, &attr))",
          "290:     goto error2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "284: #if !defined(ANDROID)",
          "287: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "336:   timeout += uv__hrtime();",
          "337:   ts.tv_sec = timeout / NANOSEC;",
          "338:   ts.tv_nsec = timeout % NANOSEC;",
          "339:   r = pthread_cond_timedwait(cond, mutex, &ts);",
          "340: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "339: #if defined(ANDROID)",
          "344:   r = pthread_cond_timedwait_monotonic_np(cond, mutex, &ts);",
          "345: #else",
          "",
          "---------------"
        ],
        "uv.gyp||uv.gyp": [
          "File: uv.gyp -> uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:         'conditions': [",
          "21:           ['OS==\"solaris\"', {",
          "22:             'cflags': [ '-pthreads' ],",
          "24:             'cflags': [ '-pthread' ],",
          "25:           }],",
          "26:         ],",
          "",
          "[Removed Lines]",
          "23:           }, {",
          "",
          "[Added Lines]",
          "23:           }],",
          "24:           ['OS not in \"android solaris\"', {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:             'conditions': [",
          "160:               ['OS==\"solaris\"', {",
          "161:                 'ldflags': [ '-pthreads' ],",
          "163:                 'ldflags': [ '-pthread' ],",
          "164:               }],",
          "165:             ],",
          "",
          "[Removed Lines]",
          "162:               }, {",
          "",
          "[Added Lines]",
          "163:               }],",
          "164:               ['OS not in \"android solaris\"', {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "177:             }],",
          "178:           ],",
          "179:         }],",
          "181:           'sources': [ 'src/unix/proctitle.c' ],",
          "182:         }],",
          "183:         [ 'OS==\"mac\"', {",
          "",
          "[Removed Lines]",
          "180:         [ 'OS==\"linux\" or OS==\"mac\"', {",
          "",
          "[Added Lines]",
          "182:         [ 'OS in \"android linux mac\"', {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "213:             'libraries': [ '-ldl', '-lrt' ],",
          "214:           },",
          "215:         }],",
          "216:         [ 'OS==\"solaris\"', {",
          "217:           'sources': [ 'src/unix/sunos.c' ],",
          "218:           'defines': [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "218:         [ 'OS==\"android\"', {",
          "219:           'sources': [",
          "220:             'src/unix/linux-core.c',",
          "221:             'src/unix/linux-inotify.c',",
          "222:             'src/unix/linux-syscalls.c',",
          "223:             'src/unix/linux-syscalls.h',",
          "224:             'src/unix/pthread-fixes.c',",
          "225:           ],",
          "226:           'link_settings': {",
          "227:             'libraries': [ '-ldl' ],",
          "228:           },",
          "229:         }],",
          "",
          "---------------"
        ]
      }
    }
  ]
}