{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3a5f9bc49ce598fa3a3829f5f2c24179d1f44455",
      "candidate_info": {
        "commit_hash": "3a5f9bc49ce598fa3a3829f5f2c24179d1f44455",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3a5f9bc49ce598fa3a3829f5f2c24179d1f44455",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "src/build.c",
          "src/delete.c",
          "src/sqliteInt.h",
          "test/altertab.test"
        ],
        "message": "More restrictions on changes to shadow tables when in defensive mode.\n\nFossilOrigin-Name: bae76a5c40703871e5ce4cd23d6fae5a3836606f524a63b01ac828c7a602c5e9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "src/build.c||src/build.c",
          "src/delete.c||src/delete.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "test/altertab.test||test/altertab.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 70390bbca49e706649ca5b7c031f0baf416fc38798c17e5f3b73746b3e66e3b5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: static int isAlterableTable(Parse *pParse, Table *pTab){",
          "32:   if( 0==sqlite3StrNICmp(pTab->zName, \"sqlite_\", 7)",
          "33: #ifndef SQLITE_OMIT_VIRTUALTABLE",
          "37:    )",
          "38: #endif",
          "39:   ){",
          "",
          "[Removed Lines]",
          "34:    || ( (pTab->tabFlags & TF_Shadow)",
          "35:      && (pParse->db->flags & SQLITE_Defensive)",
          "36:      && pParse->db->nVdbeExec==0",
          "",
          "[Added Lines]",
          "34:    || ( (pTab->tabFlags & TF_Shadow)!=0",
          "35:         && sqlite3ReadOnlyShadowTables(pParse->db)",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "856:       }",
          "857:     }",
          "858:   }else{",
          "861:     ){",
          "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
          "863:                       zName);",
          "864:       return SQLITE_ERROR;",
          "865:     }",
          "866:   }",
          "867:   return SQLITE_OK;",
          "868: }",
          "",
          "[Removed Lines]",
          "859:     if( pParse->nested==0",
          "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
          "",
          "[Added Lines]",
          "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
          "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
          "",
          "[Added Lines]",
          "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
          "2148:   return pMod->pModule->xShadowName(zTail+1);",
          "2149: }",
          "",
          "[Removed Lines]",
          "2150: #else",
          "2151: # define isShadowTableName(x,y) 0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2190:   p = pParse->pNewTable;",
          "2191:   if( p==0 ) return;",
          "2194:     p->tabFlags |= TF_Shadow;",
          "2195:   }",
          "",
          "[Removed Lines]",
          "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
          "",
          "[Added Lines]",
          "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2894:   sqliteViewResetAll(db, iDb);",
          "2895: }",
          "2901:   if( sqlite3StrNICmp(pTab->zName, \"sqlite_\", 7)==0 ){",
          "2902:     if( sqlite3StrNICmp(pTab->zName+7, \"stat\", 4)==0 ) return 0;",
          "2903:     if( sqlite3StrNICmp(pTab->zName+7, \"parameters\", 10)==0 ) return 0;",
          "2904:     return 1;",
          "2905:   }",
          "2909:   }",
          "2910:   return 0;",
          "2911: }",
          "",
          "[Removed Lines]",
          "2900: static int tableMayNotBeDropped(Parse *pParse, Table *pTab){",
          "2906:   if( pTab->tabFlags & TF_Shadow ){",
          "2907:     sqlite3 *db = pParse->db;",
          "2908:     if( (db->flags & SQLITE_Defensive)!=0 && db->nVdbeExec==0 ) return 1;",
          "",
          "[Added Lines]",
          "2900: int sqlite3ReadOnlyShadowTables(sqlite3 *db){",
          "2901: #ifndef SQLITE_OMIT_VIRTUALTABLE",
          "2902:   if( (db->flags & SQLITE_Defensive)!=0",
          "2903:    && db->pVtabCtx==0",
          "2904:    && db->nVdbeExec==0",
          "2905:   ){",
          "2906:     return 1;",
          "2907:   }",
          "2908: #endif",
          "2909:   return 0;",
          "2910: }",
          "2915: static int tableMayNotBeDropped(sqlite3 *db, Table *pTab){",
          "2921:   if( (pTab->tabFlags & TF_Shadow)!=0 && sqlite3ReadOnlyShadowTables(db) ){",
          "2922:     return 1;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2979:     }",
          "2980:   }",
          "2981: #endif",
          "2983:     sqlite3ErrorMsg(pParse, \"table %s may not be dropped\", pTab->zName);",
          "2984:     goto exit_drop_table;",
          "2985:   }",
          "",
          "[Removed Lines]",
          "2982:   if( tableMayNotBeDropped(pParse, pTab) ){",
          "",
          "[Added Lines]",
          "2996:   if( tableMayNotBeDropped(db, pTab) ){",
          "",
          "---------------"
        ],
        "src/delete.c||src/delete.c": [
          "File: src/delete.c -> src/delete.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     return sqlite3WritableSchema(db)==0 && pParse->nested==0;",
          "71:   }",
          "72:   assert( pTab->tabFlags & TF_Shadow );",
          "78: }",
          "",
          "[Removed Lines]",
          "73:   return (db->flags & SQLITE_Defensive)!=0",
          "74: #ifndef SQLITE_OMIT_VIRTUALTABLE",
          "75:           && db->pVtabCtx==0",
          "76: #endif",
          "77:           && db->nVdbeExec==0;",
          "",
          "[Added Lines]",
          "73:   return sqlite3ReadOnlyShadowTables(db);",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4547:    );",
          "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
          "4549: #endif",
          "4550: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
          "4551: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
          "4552: void sqlite3VtabMakeWritable(Parse*,Table*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
          "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
          "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
          "4553: #else",
          "4554: # define sqlite3ShadowTableName(A,B) 0",
          "4555: #endif",
          "",
          "---------------"
        ],
        "test/altertab.test||test/altertab.test": [
          "File: test/altertab.test -> test/altertab.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "547:   } {1 {table y1_segments may not be modified}}",
          "549:   do_catchsql_test 16.20 {",
          "554:     DROP TABLE y1_segments;",
          "555:   } {1 {table y1_segments may not be dropped}}",
          "557:   do_execsql_test 16.30 {",
          "558:     ALTER TABLE y1 RENAME TO z1;",
          "559:   }",
          "",
          "[Removed Lines]",
          "550:     ALTER TABLE y1_segments RENAME TO abc;",
          "551:   } {1 {table y1_segments may not be altered}}",
          "553:   do_catchsql_test 16.21 {",
          "",
          "[Added Lines]",
          "553:   do_catchsql_test 16.20 {",
          "554:     ALTER TABLE y1_segments RENAME TO abc;",
          "555:   } {1 {table y1_segments may not be altered}}",
          "556:   sqlite3_db_config db DEFENSIVE 0",
          "557:   do_catchsql_test 16.22 {",
          "558:     ALTER TABLE y1_segments RENAME TO abc;",
          "559:   } {0 {}}",
          "560:   sqlite3_db_config db DEFENSIVE 1",
          "561:   do_catchsql_test 16.23 {",
          "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
          "563:   } {1 {object name reserved for internal use: y1_segments}}",
          "564:   do_catchsql_test 16.24 {",
          "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
          "566:   } {1 {object name reserved for internal use: y1_segments}}",
          "567:   sqlite3_db_config db DEFENSIVE 0",
          "568:   do_catchsql_test 16.25 {",
          "569:     ALTER TABLE abc RENAME TO y1_segments;",
          "570:   } {0 {}}",
          "571:   sqlite3_db_config db DEFENSIVE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e639128cb064169e63b0c490bcaf7db05d4a49ed",
      "candidate_info": {
        "commit_hash": "e639128cb064169e63b0c490bcaf7db05d4a49ed",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e639128cb064169e63b0c490bcaf7db05d4a49ed",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/releasetest_data.tcl",
          "test/wapptest.tcl"
        ],
        "message": "Further tweaks to wapptest.tcl. Add the ability to run the extra (n)debug tests that releasetest.tcl runs.\n\nFossilOrigin-Name: ec9c4f6d8da25dcc834812c2bb24bda1017833b1c572bdbbf87f0191e1310706",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/releasetest_data.tcl||test/releasetest_data.tcl",
          "test/wapptest.tcl||test/wapptest.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1956eb348170a9a873878b522f377fa7303cdb3beca41f5515b6b9da1b1f544d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/releasetest_data.tcl||test/releasetest_data.tcl": [
          "File: test/releasetest_data.tcl -> test/releasetest_data.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "388:   # Set the sub-directory to use.",
          "389:   #",
          "392:   # Join option lists into strings, using space as delimiter.",
          "393:   #",
          "",
          "[Removed Lines]",
          "390:   set dir [string tolower [string map {- _ \" \" _} $name]]",
          "",
          "[Added Lines]",
          "390:   set dir [string tolower [string map {- _ \" \" _ \"(\" _ \")\" _} $name]]",
          "",
          "---------------"
        ],
        "test/wapptest.tcl||test/wapptest.tcl": [
          "File: test/wapptest.tcl -> test/wapptest.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # \\",
          "3: exec wapptclsh \"$0\" ${1+\"$@\"}",
          "",
          "[Removed Lines]",
          "1: #!/bin/sh",
          "",
          "[Added Lines]",
          "1: #!/bin/sh",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: set G(test)     Normal",
          "23: set G(keep)     0",
          "24: set G(msvc)     0",
          "26: set G(jobs)     3",
          "28: proc wapptest_init {} {",
          "29:   global G",
          "32:   foreach k $lSave { set A($k) $G($k) }",
          "33:   array unset G",
          "34:   foreach k $lSave { set G($k) $A($k) }",
          "",
          "[Removed Lines]",
          "25: set G(tcl)      \"\"",
          "31:   set lSave [list platform test keep msvc tcl jobs]",
          "",
          "[Added Lines]",
          "25: set G(tcl)      [::tcl::pkgconfig get libdir,install]",
          "27: set G(debug)    0",
          "32:   set lSave [list platform test keep msvc tcl jobs debug]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:   # Either \"config\", \"running\" or \"stopped\":",
          "45:   set G(state) \"config\"",
          "49:   append G(host) \" $::tcl_platform(os) $::tcl_platform(osVersion)\"",
          "50:   append G(host) \" $::tcl_platform(machine) $::tcl_platform(byteOrder)\"",
          "51: }",
          "",
          "[Removed Lines]",
          "47:   set G(host) \"(unknown host)\"",
          "48:   catch { set G(host) [exec hostname] }",
          "",
          "[Added Lines]",
          "48:   set G(hostname) \"(unknown host)\"",
          "49:   catch { set G(hostname) [exec hostname] }",
          "50:   set G(host) $G(hostname)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "65:   return $ret",
          "66: }",
          "68: # If the application is in \"config\" state, set the contents of the",
          "69: # ::G(test_array) global to reflect the tests that will be run. If the",
          "70: # app is in some other state (\"running\" or \"stopped\"), this command",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: proc generate_fossil_info {} {",
          "71:   global G",
          "72:   set pwd [pwd]",
          "73:   cd $G(srcdir)",
          "74:   if {[catch {exec fossil info}    r1]} return",
          "75:   if {[catch {exec fossil changes} r2]} return",
          "76:   cd $pwd",
          "78:   foreach line [split $r1 \"\\n\"] {",
          "79:     if {[regexp {^checkout: *(.*)$} $line -> co]} {",
          "80:       wapp-trim { <br> %html($co) }",
          "81:     }",
          "82:   }",
          "84:   if {[string trim $r2]!=\"\"} {",
          "85:     wapp-trim {",
          "86:       <br><span class=warning>",
          "87:       WARNING: Uncommitted changes in checkout",
          "88:       </span>",
          "89:     }",
          "90:   }",
          "91: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "102:       }",
          "104:       lappend G(test_array) [dict create config $config target $target]",
          "105:     }",
          "106:   }",
          "107: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:       set exclude [list checksymbols valgrindtest fuzzoomtest]",
          "132:       if {$G(debug) && !($target in $exclude)} {",
          "133:         set debug_idx [lsearch -glob $::Configs($config) -DSQLITE_DEBUG*]",
          "134:         set xtarget $target",
          "135:         regsub -all {fulltest[a-z]*} $xtarget test xtarget",
          "136:         if {$debug_idx<0} {",
          "137:           lappend G(test_array) [",
          "138:             dict create config $config-(Debug) target $target",
          "139:           ]",
          "140:         } else {",
          "141:           lappend G(test_array) [",
          "142:             dict create config $config-(NDebug) target $xtarget",
          "143:           ]",
          "144:         }",
          "145:       }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "242:         fileevent $fd readable [list slave_fileevent $name]",
          "244:         puts $fd [list 0 $G(msvc) 0 $G(keep)]",
          "246:         puts $fd $L",
          "247:         flush $fd",
          "248:         set G(test.$name.log) [file join [lindex $L 1] test.log]",
          "",
          "[Removed Lines]",
          "245:         set L [make_test_suite $G(msvc) \"\" $name $target $::Configs($name)]",
          "",
          "[Added Lines]",
          "287:         set wtcl \"\"",
          "288:         if {$G(tcl)!=\"\"} { set wtcl \"--with-tcl=$G(tcl)\" }",
          "290:         # If this configuration is named <name>-(Debug) or <name>-(NDebug),",
          "291:         # then add or remove the SQLITE_DEBUG option from the base",
          "292:         # configuration before running the test.",
          "293:         if {[regexp -- {(.*)-(\\(.*\\))} $name -> head tail]} {",
          "294:           set opts $::Configs($head)",
          "295:           if {$tail==\"(Debug)\"} {",
          "296:             append opts \" -DSQLITE_DEBUG=1 -DSQLITE_EXTRA_IFNULLROW=1\"",
          "297:           } else {",
          "298:             regsub { *-DSQLITE_MEMDEBUG[^ ]* *} $opts { } opts",
          "299:             regsub { *-DSQLITE_DEBUG[^ ]* *} $opts { } opts",
          "300:           }",
          "301:         } else {",
          "302:           set opts $::Configs($name)",
          "303:         }",
          "305:         set L [make_test_suite $G(msvc) $wtcl $name $target $opts]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "269:   global G",
          "270:   set_test_array",
          "273:   wapp-trim {",
          "274:     <html>",
          "275:     <head>",
          "276:       <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"/>",
          "277:     </head>",
          "278:     <body>",
          "279:   }",
          "291:   set host $G(host)",
          "292:   wapp-trim {",
          "296:   }",
          "298:   # Build the \"platform\" select widget.",
          "",
          "[Removed Lines]",
          "272:   # <meta http-equiv=\"refresh\" content=\"5; URL=/\">",
          "281:   # If the checkout contains uncommitted changs, put a warning at the top",
          "282:   # of the page.",
          "283:   if {[check_uncommitted]} {",
          "284:     wapp-trim {",
          "285:       <div class=warning>",
          "286:         WARNING: Uncommitted changes in checkout.",
          "287:       </div>",
          "288:     }",
          "289:   }",
          "293:       <div class=div>%string($host)</div>",
          "294:       <div class=div id=controls>",
          "295:       <form action=\"control\" method=\"post\" name=\"control\">",
          "",
          "[Added Lines]",
          "332:   set hostname $G(hostname)",
          "336:       <title> %html($hostname): wapptest.tcl </title>",
          "344:     <div class=\"border\">%string($host)",
          "345:   }",
          "346:   generate_fossil_info",
          "347:   wapp-trim {",
          "348:     </div>",
          "349:     <div class=\"border\" id=controls>",
          "350:     <form action=\"control\" method=\"post\" name=\"control\">",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "336:         </input>",
          "337:         <label> Use MSVC: </label>",
          "338:         <input id=\"control_msvc\" name=\"control_msvc\" type=checkbox value=1>",
          "339:         </input>",
          "340:   }",
          "341:   wapp-trim {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "394:         <label> Debug tests: </label>",
          "395:         <input id=\"control_debug\" name=\"control_debug\" type=checkbox value=1>",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "343:   }",
          "344:   wapp-trim {",
          "345:      </div>",
          "347:   }",
          "348:   wapp-page-tests",
          "",
          "[Removed Lines]",
          "346:      <div class=div2 id=tests>",
          "",
          "[Added Lines]",
          "403:      <div id=tests>",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "363: proc wapp-page-tests {} {",
          "364:   global G",
          "366:   foreach t $G(test_array) {",
          "367:     set config [dict get $t config]",
          "368:     set target [dict get $t target]",
          "",
          "[Removed Lines]",
          "365:   wapp-trim { <table> }",
          "",
          "[Added Lines]",
          "422:   wapp-trim { <table class=\"border\" width=100%> }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "392:     wapp-trim {",
          "393:       <tr class=%string($class)>",
          "398:     }",
          "399:     if {[info exists G(test.$config.log)]} {",
          "400:       set log $G(test.$config.log)",
          "",
          "[Removed Lines]",
          "394:       <td class=testfield> %html($config)",
          "395:       <td class=testfield> %html($target)",
          "396:       <td class=testfield> %html($seconds)",
          "397:       <td class=testfield>",
          "",
          "[Added Lines]",
          "451:       <td class=\"nowrap\"> %html($config)",
          "452:       <td class=\"padleft nowrap\"> %html($target)",
          "453:       <td class=\"padleft nowrap\"> %html($seconds)",
          "454:       <td class=\"padleft nowrap\">",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "407:       set errmsg $G(test.$config.errmsg)",
          "408:       wapp-trim {",
          "409:         <tr class=testfail>",
          "412:       }",
          "413:     }",
          "414:   }",
          "",
          "[Removed Lines]",
          "410:         <td class=testfield>",
          "411:         <td class=testfield colspan=3> %html($errmsg)",
          "",
          "[Added Lines]",
          "467:         <td> <td class=\"padleft\" colspan=3> %html($errmsg)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "430: #",
          "431: proc wapp-page-control {} {",
          "432:   global G",
          "434:   if {$::G(state)==\"config\"} {",
          "436:     set G(msvc) 0",
          "437:     set G(keep) 0",
          "438:   } else {",
          "439:     set lControls [list jobs]",
          "440:   }",
          "",
          "[Removed Lines]",
          "433:   catch { puts [wapp-param control_msvc] }",
          "435:     set lControls [list platform test tcl jobs keep msvc]",
          "",
          "[Added Lines]",
          "490:     set lControls [list platform test tcl jobs keep msvc debug]",
          "493:     set G(debug) 0",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "482: #",
          "483: proc wapp-page-style.css {} {",
          "484:   wapp-subst {",
          "491:     .border {",
          "492:       border: 3px groove #444444;",
          "493:       padding: 1em;",
          "",
          "[Removed Lines]",
          "485:     .div {",
          "486:       border: 3px groove #444444;",
          "487:       margin: 1em;",
          "488:       padding: 1em;",
          "489:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "495:       margin-bottom: 1em;",
          "496:     }",
          "508:     .warning {",
          "510:       color: red;",
          "512:       font-weight: bold;",
          "513:     }",
          "527:   }",
          "528: }",
          "",
          "[Removed Lines]",
          "498:     .div2 {",
          "499:       margin: 1em;",
          "500:     }",
          "502:     table {",
          "503:       padding: 1em;",
          "504:       width:100%;",
          "505:       border: 3px groove #444444;",
          "506:     }",
          "509:       text-align:center;",
          "511:       font-size: 2em;",
          "515:     .testfield {",
          "516:       padding-right: 10ex;",
          "517:       white-space: nowrap;",
          "518:     }",
          "520:     .testwait {}",
          "521:     .testrunning { color: blue }",
          "522:     .testdone { color: green }",
          "523:     .testfail { color: red }",
          "525:     .right { float: right; }",
          "",
          "[Added Lines]",
          "551:     .right { float: right; }",
          "560:     .padleft { padding-left: 5ex; }",
          "561:     .nowrap  { white-space: nowrap; }",
          "564:     .testwait    {              }",
          "565:     .testrunning { color: blue  }",
          "566:     .testdone    { color: green }",
          "567:     .testfail    { color: red   }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "540:   set tcl $::G(tcl)",
          "541:   set keep $::G(keep)",
          "542:   set msvc $::G(msvc)",
          "544:   wapp-subst {",
          "545:     var lElem = \\[\"control_platform\", \"control_test\", \"control_msvc\",",
          "547:     \\];",
          "548:     lElem.forEach(function(e) {",
          "549:       var elem = document.getElementById(e);",
          "",
          "[Removed Lines]",
          "546:         \"control_jobs\"",
          "",
          "[Added Lines]",
          "584:   set debug $::G(debug)",
          "588:         \"control_jobs\", \"control_debug\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "559:     elem = document.getElementById(\"control_msvc\");",
          "560:     elem.checked = %string($msvc);",
          "561:   }",
          "563:   if {$script != \"config.js\"} {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "604:     elem = document.getElementById(\"control_debug\");",
          "605:     elem.checked = %string($debug);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f3e90dd276208493dd89ef477367a0fe23615091",
      "candidate_info": {
        "commit_hash": "f3e90dd276208493dd89ef477367a0fe23615091",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f3e90dd276208493dd89ef477367a0fe23615091",
        "files": [
          "ext/fts5/fts5_index.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a compiler warning in FTS5.\n\nFossilOrigin-Name: d5acf3af65f9608d4096b9b78289d84b21cd1ea463457f858ffeb20d5bd5d123",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2474:     if( pList ){",
          "2475:       pLeaf = fts5IdxMalloc(p, sizeof(Fts5Data));",
          "2476:       if( pLeaf ){",
          "2478:       }",
          "2479:     }",
          "2480:   }else{",
          "",
          "[Removed Lines]",
          "2477:         pLeaf->p = pList;",
          "",
          "[Added Lines]",
          "2477:         pLeaf->p = (u8*)pList;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a420ebd08f5a96b9e61a37cb42e1b3f346c23505630d9c33fe30ce7882959b36",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1cd382e3500588126a91692377254bb807276d83",
      "candidate_info": {
        "commit_hash": "1cd382e3500588126a91692377254bb807276d83",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1cd382e3500588126a91692377254bb807276d83",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/indexexpr2.test"
        ],
        "message": "Avoid assuming that for \"~ (? OR TRUE)\" to be true, \"?\" must not be NULL, just as we do for \"NOT (? OR TRUE)\". Fix for ticket [c0390363].\n\nFossilOrigin-Name: 84ae41fd2f50cb7c0c3f6522d0f94817e1bbf96eae5316279e3e32cee4e46e91",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/indexexpr2.test||test/indexexpr2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c465d0eb478e42045e08efe8b6fa64d4bd4d747cdf743beae4608562b014169e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5027:     }",
          "5028:     case TK_SPAN:",
          "5029:     case TK_COLLATE:",
          "5031:     case TK_UPLUS:",
          "5032:     case TK_UMINUS: {",
          "5033:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, seenNot);",
          "",
          "[Removed Lines]",
          "5030:     case TK_BITNOT:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5037:       if( p->op2!=TK_IS ) return 0;",
          "5038:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, seenNot);",
          "5039:     }",
          "5040:     case TK_NOT: {",
          "5041:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, 1);",
          "5042:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5039:     case TK_BITNOT:",
          "",
          "---------------"
        ],
        "test/indexexpr2.test||test/indexexpr2.test": [
          "File: test/indexexpr2.test -> test/indexexpr2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "295:   REINDEX;",
          "296: } {}",
          "300: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "298: #-------------------------------------------------------------------------",
          "299: reset_db",
          "300: do_execsql_test 8.0 {",
          "301:   CREATE TABLE t0(c0);",
          "302:   CREATE INDEX i0 ON t0(c0) WHERE c0 NOT NULL;",
          "303:   INSERT INTO t0(c0) VALUES (NULL);",
          "304: }",
          "306: breakpoint",
          "307: do_execsql_test 8.1 {",
          "308:   SELECT * FROM t0 WHERE ~('' BETWEEN t0.c0 AND TRUE);",
          "309: } {{}}",
          "311: do_execsql_test 8.2 {",
          "312:   SELECT ~('' BETWEEN t0.c0 AND TRUE) FROM t0;",
          "313: } {-1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc80db69e9c52304b50209a4aca66b1ae908b602",
      "candidate_info": {
        "commit_hash": "cc80db69e9c52304b50209a4aca66b1ae908b602",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cc80db69e9c52304b50209a4aca66b1ae908b602",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Remove an obsolete paragraph from the OP_Column documentation.  No code changes.\n\nFossilOrigin-Name: f6d8956cf8b5993a4332b9330e89d5c3d5f8872ea5a2ce3d2e91127406cc1839",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 63c67a54b4d3e501f3059dcdfc6bb50c6b8dad63a34eb773e4408d9e4e780d7a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c"
        ]
      }
    }
  ]
}