{
  "cve_id": "CVE-2015-3180",
  "cve_desc": "lib/navigationlib.php in Moodle through 2.5.9, 2.6.x before 2.6.11, 2.7.x before 2.7.8, and 2.8.x before 2.8.6 allows remote authenticated users to obtain sensitive course-structure information by leveraging access to a student account with a suspended enrolment.",
  "repo": "moodle/moodle",
  "patch_hash": "8b4568500b305f7ddedbca355b73ce34ea4afbc0",
  "patch_info": {
    "commit_hash": "8b4568500b305f7ddedbca355b73ce34ea4afbc0",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/8b4568500b305f7ddedbca355b73ce34ea4afbc0",
    "files": [
      "lib/navigationlib.php"
    ],
    "message": "MDL-49788 navigation: Ensure we only check active enrolments",
    "before_after_code_files": [
      "lib/navigationlib.php||lib/navigationlib.php"
    ]
  },
  "patch_diff": {
    "lib/navigationlib.php||lib/navigationlib.php": [
      "File: lib/navigationlib.php -> lib/navigationlib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1177:                     if ($coursenode->isexpandable === true) {",
      "",
      "[Removed Lines]",
      "1176:                 if (!can_access_course($course)) {",
      "",
      "[Added Lines]",
      "1176:                 if (!can_access_course($course, null, '', true)) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1189:                         $canviewcourseprofile = false;",
      "1190:                         break;",
      "1191:                     }",
      "",
      "[Removed Lines]",
      "1192:                 }",
      "1194:                 if ($coursenode->isexpandable === false) {",
      "",
      "[Added Lines]",
      "1192:                 } else if ($coursenode->isexpandable === false) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1240:                     $coursenode->make_active();",
      "1241:                     $canviewcourseprofile = false;",
      "1242:                     break;",
      "",
      "[Removed Lines]",
      "1239:                 if (!can_access_course($course)) {",
      "",
      "[Added Lines]",
      "1237:                 if (!can_access_course($course, null, '', true)) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1279:                     $coursenode->make_active();",
      "1280:                     $canviewcourseprofile = false;",
      "1281:                     break;",
      "",
      "[Removed Lines]",
      "1278:                 if (!can_access_course($course)) {",
      "",
      "[Added Lines]",
      "1276:                 if (!can_access_course($course, null, '', true)) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2328:                         $usercoursenode->add(get_string('notes', 'notes'), $url, self::TYPE_SETTING);",
      "2329:                     }",
      "2332:                         $usercoursenode->add(get_string('entercourse'), new moodle_url('/course/view.php',",
      "2333:                                 array('id' => $usercourse->id)), self::TYPE_SETTING, null, null, new pix_icon('i/course', ''));",
      "2334:                     }",
      "",
      "[Removed Lines]",
      "2331:                     if (can_access_course($usercourse, $user->id)) {",
      "",
      "[Added Lines]",
      "2329:                     if (can_access_course($usercourse, $user->id, '', true)) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2430:         } else if ($coursetype == self::COURSE_CURRENT) {",
      "2431:             $parent = $this->rootnodes['currentcourse'];",
      "2432:             $url = new moodle_url('/course/view.php', array('id'=>$course->id));",
      "2433:         } else if ($coursetype == self::COURSE_MY && !$forcegeneric) {",
      "2434:             if (!empty($CFG->navshowmycoursecategories) && ($parent = $this->rootnodes['mycourses']->find($course->category, self::TYPE_MY_CATEGORY))) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2431:             $canexpandcourse = $this->can_expand_course($course);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2509:         $cache = $this->get_expand_course_cache();",
      "2510:         $canexpand = $cache->get($course->id);",
      "2511:         if ($canexpand === false) {",
      "2513:             $canexpand = (int)$canexpand;",
      "2514:             $cache->set($course->id, $canexpand);",
      "2515:         }",
      "",
      "[Removed Lines]",
      "2512:             $canexpand = isloggedin() && can_access_course($course);",
      "",
      "[Added Lines]",
      "2511:             $canexpand = isloggedin() && can_access_course($course, null, '', true);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2865:                 break;",
      "2866:             case self::TYPE_COURSE :",
      "2867:                 $course = $DB->get_record('course', array('id' => $this->instanceid), '*', MUST_EXIST);",
      "2871:                     $this->add_course($course);",
      "",
      "[Removed Lines]",
      "2868:                 if (!can_access_course($course)) {",
      "",
      "[Added Lines]",
      "2867:                 if (!can_access_course($course, null, '', true)) {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "3270:         }",
      "3274:             $courses = $this->page->navigation->get('courses');",
      "3275:             if (!$courses) {",
      "",
      "[Removed Lines]",
      "3273:         if (!is_enrolled(context_course::instance($this->page->course->id))) {",
      "",
      "[Added Lines]",
      "3272:         if (!is_enrolled(context_course::instance($this->page->course->id, null, '', true))) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "4166:                 }",
      "4167:             } else {",
      "4168:                 $canviewusercourse = has_capability('moodle/user:viewdetails', $coursecontext);",
      "4170:                 if ((!$canviewusercourse && !$canviewuser) || !$userisenrolled) {",
      "4171:                     return false;",
      "4172:                 }",
      "",
      "[Removed Lines]",
      "4169:                 $userisenrolled = is_enrolled($coursecontext, $user->id);",
      "",
      "[Added Lines]",
      "4168:                 $userisenrolled = is_enrolled($coursecontext, $user->id, '', true);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b7d307e80761e1c5b310958223640055d23b83f6",
      "candidate_info": {
        "commit_hash": "b7d307e80761e1c5b310958223640055d23b83f6",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/b7d307e80761e1c5b310958223640055d23b83f6",
        "files": [
          "lib/navigationlib.php"
        ],
        "message": "MDL-49788 navigation: Ensure we only check active enrolments",
        "before_after_code_files": [
          "lib/navigationlib.php||lib/navigationlib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/navigationlib.php||lib/navigationlib.php"
          ],
          "candidate": [
            "lib/navigationlib.php||lib/navigationlib.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/navigationlib.php||lib/navigationlib.php": [
          "File: lib/navigationlib.php -> lib/navigationlib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1171:                     if ($coursenode->isexpandable === true) {",
          "",
          "[Removed Lines]",
          "1170:                 if (!can_access_course($course)) {",
          "",
          "[Added Lines]",
          "1170:                 if (!can_access_course($course, null, '', true)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1183:                         $canviewcourseprofile = false;",
          "1184:                         break;",
          "1185:                     }",
          "",
          "[Removed Lines]",
          "1186:                 }",
          "1188:                 if ($coursenode->isexpandable === false) {",
          "",
          "[Added Lines]",
          "1186:                 } else if ($coursenode->isexpandable === false) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1234:                     $coursenode->make_active();",
          "1235:                     $canviewcourseprofile = false;",
          "1236:                     break;",
          "",
          "[Removed Lines]",
          "1233:                 if (!can_access_course($course)) {",
          "",
          "[Added Lines]",
          "1231:                 if (!can_access_course($course, null, '', true)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1273:                     $coursenode->make_active();",
          "1274:                     $canviewcourseprofile = false;",
          "1275:                     break;",
          "",
          "[Removed Lines]",
          "1272:                 if (!can_access_course($course)) {",
          "",
          "[Added Lines]",
          "1270:                 if (!can_access_course($course, null, '', true)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2319:                     $usercoursenode->add(get_string('notes', 'notes'), $url, self::TYPE_SETTING);",
          "2320:                 }",
          "2323:                     $usercoursenode->add(get_string('entercourse'), new moodle_url('/course/view.php', array('id'=>$usercourse->id)), self::TYPE_SETTING, null, null, new pix_icon('i/course', ''));",
          "2324:                 }",
          "",
          "[Removed Lines]",
          "2322:                 if (can_access_course($usercourse, $user->id)) {",
          "",
          "[Added Lines]",
          "2320:                 if (can_access_course($usercourse, $user->id, '', true)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2418:         } else if ($coursetype == self::COURSE_CURRENT) {",
          "2419:             $parent = $this->rootnodes['currentcourse'];",
          "2420:             $url = new moodle_url('/course/view.php', array('id'=>$course->id));",
          "2421:         } else if ($coursetype == self::COURSE_MY && !$forcegeneric) {",
          "2422:             if (!empty($CFG->navshowmycoursecategories) && ($parent = $this->rootnodes['mycourses']->find($course->category, self::TYPE_MY_CATEGORY))) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2419:             $canexpandcourse = $this->can_expand_course($course);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2497:         $cache = $this->get_expand_course_cache();",
          "2498:         $canexpand = $cache->get($course->id);",
          "2499:         if ($canexpand === false) {",
          "2501:             $canexpand = (int)$canexpand;",
          "2502:             $cache->set($course->id, $canexpand);",
          "2503:         }",
          "",
          "[Removed Lines]",
          "2500:             $canexpand = isloggedin() && can_access_course($course);",
          "",
          "[Added Lines]",
          "2499:             $canexpand = isloggedin() && can_access_course($course, null, '', true);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2853:                 break;",
          "2854:             case self::TYPE_COURSE :",
          "2855:                 $course = $DB->get_record('course', array('id' => $this->instanceid), '*', MUST_EXIST);",
          "2859:                     $this->add_course($course);",
          "",
          "[Removed Lines]",
          "2856:                 if (!can_access_course($course)) {",
          "",
          "[Added Lines]",
          "2855:                 if (!can_access_course($course, null, '', true)) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3247:             }",
          "3248:             $categories[] = $categorynode;",
          "3249:         }",
          "3251:             $courses = $this->page->navigation->get('mycourses');",
          "3252:         } else {",
          "3253:             $courses = $this->page->navigation->get('courses');",
          "",
          "[Removed Lines]",
          "3250:         if (is_enrolled(context_course::instance($this->page->course->id))) {",
          "",
          "[Added Lines]",
          "3249:         if (is_enrolled(context_course::instance($this->page->course->id), null, '', true)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4137:                 }",
          "4138:             } else {",
          "4139:                 $canviewusercourse = has_capability('moodle/user:viewdetails', $coursecontext);",
          "4141:                 if ((!$canviewusercourse && !$canviewuser) || !$userisenrolled) {",
          "4142:                     return false;",
          "4143:                 }",
          "",
          "[Removed Lines]",
          "4140:                 $userisenrolled = is_enrolled($coursecontext, $user->id);",
          "",
          "[Added Lines]",
          "4139:                 $userisenrolled = is_enrolled($coursecontext, $user->id, '', true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "271477f593c4acbb84c620015fad19f08282629e",
      "candidate_info": {
        "commit_hash": "271477f593c4acbb84c620015fad19f08282629e",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/271477f593c4acbb84c620015fad19f08282629e",
        "files": [
          "lib/navigationlib.php"
        ],
        "message": "MDL-49788 navigation: Ensure we only check active enrolments",
        "before_after_code_files": [
          "lib/navigationlib.php||lib/navigationlib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/navigationlib.php||lib/navigationlib.php"
          ],
          "candidate": [
            "lib/navigationlib.php||lib/navigationlib.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/navigationlib.php||lib/navigationlib.php": [
          "File: lib/navigationlib.php -> lib/navigationlib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1171:                     if ($coursenode->isexpandable === true) {",
          "",
          "[Removed Lines]",
          "1170:                 if (!can_access_course($course)) {",
          "",
          "[Added Lines]",
          "1170:                 if (!can_access_course($course, null, '', true)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1183:                         $canviewcourseprofile = false;",
          "1184:                         break;",
          "1185:                     }",
          "",
          "[Removed Lines]",
          "1186:                 }",
          "1188:                 if ($coursenode->isexpandable === false) {",
          "",
          "[Added Lines]",
          "1186:                 } else if ($coursenode->isexpandable === false) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1234:                     $coursenode->make_active();",
          "1235:                     $canviewcourseprofile = false;",
          "1236:                     break;",
          "",
          "[Removed Lines]",
          "1233:                 if (!can_access_course($course)) {",
          "",
          "[Added Lines]",
          "1231:                 if (!can_access_course($course, null, '', true)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1273:                     $coursenode->make_active();",
          "1274:                     $canviewcourseprofile = false;",
          "1275:                     break;",
          "",
          "[Removed Lines]",
          "1272:                 if (!can_access_course($course)) {",
          "",
          "[Added Lines]",
          "1270:                 if (!can_access_course($course, null, '', true)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2311:                     $usercoursenode->add(get_string('notes', 'notes'), $url, self::TYPE_SETTING);",
          "2312:                 }",
          "2315:                     $usercoursenode->add(get_string('entercourse'), new moodle_url('/course/view.php', array('id'=>$usercourse->id)), self::TYPE_SETTING, null, null, new pix_icon('i/course', ''));",
          "2316:                 }",
          "",
          "[Removed Lines]",
          "2314:                 if (can_access_course($usercourse, $user->id)) {",
          "",
          "[Added Lines]",
          "2312:                 if (can_access_course($usercourse, $user->id, '', true)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2410:         } else if ($coursetype == self::COURSE_CURRENT) {",
          "2411:             $parent = $this->rootnodes['currentcourse'];",
          "2412:             $url = new moodle_url('/course/view.php', array('id'=>$course->id));",
          "2413:         } else if ($coursetype == self::COURSE_MY && !$forcegeneric) {",
          "2414:             if (!empty($CFG->navshowmycoursecategories) && ($parent = $this->rootnodes['mycourses']->find($course->category, self::TYPE_MY_CATEGORY))) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2411:             $canexpandcourse = $this->can_expand_course($course);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2489:         $cache = $this->get_expand_course_cache();",
          "2490:         $canexpand = $cache->get($course->id);",
          "2491:         if ($canexpand === false) {",
          "2493:             $canexpand = (int)$canexpand;",
          "2494:             $cache->set($course->id, $canexpand);",
          "2495:         }",
          "",
          "[Removed Lines]",
          "2492:             $canexpand = isloggedin() && can_access_course($course);",
          "",
          "[Added Lines]",
          "2491:             $canexpand = isloggedin() && can_access_course($course, null, '', true);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2845:                 break;",
          "2846:             case self::TYPE_COURSE :",
          "2847:                 $course = $DB->get_record('course', array('id' => $this->instanceid), '*', MUST_EXIST);",
          "2851:                     $this->add_course($course);",
          "",
          "[Removed Lines]",
          "2848:                 if (!can_access_course($course)) {",
          "",
          "[Added Lines]",
          "2847:                 if (!can_access_course($course, null, '', true)) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3239:             }",
          "3240:             $categories[] = $categorynode;",
          "3241:         }",
          "3243:             $courses = $this->page->navigation->get('mycourses');",
          "3244:         } else {",
          "3245:             $courses = $this->page->navigation->get('courses');",
          "",
          "[Removed Lines]",
          "3242:         if (is_enrolled(context_course::instance($this->page->course->id))) {",
          "",
          "[Added Lines]",
          "3241:         if (is_enrolled(context_course::instance($this->page->course->id), null, '', true)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4129:                 }",
          "4130:             } else {",
          "4131:                 $canviewusercourse = has_capability('moodle/user:viewdetails', $coursecontext);",
          "4133:                 if ((!$canviewusercourse && !$canviewuser) || !$userisenrolled) {",
          "4134:                     return false;",
          "4135:                 }",
          "",
          "[Removed Lines]",
          "4132:                 $userisenrolled = is_enrolled($coursecontext, $user->id);",
          "",
          "[Added Lines]",
          "4131:                 $userisenrolled = is_enrolled($coursecontext, $user->id, '', true);",
          "",
          "---------------"
        ]
      }
    }
  ]
}