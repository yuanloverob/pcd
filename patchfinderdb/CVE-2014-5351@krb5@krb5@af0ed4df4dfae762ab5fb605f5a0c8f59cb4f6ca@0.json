{
  "cve_id": "CVE-2014-5351",
  "cve_desc": "The kadm5_randkey_principal_3 function in lib/kadm5/srv/svr_principal.c in kadmind in MIT Kerberos 5 (aka krb5) before 1.13 sends old keys in a response to a -randkey -keepold request, which allows remote authenticated users to forge tickets by leveraging administrative access.",
  "repo": "krb5/krb5",
  "patch_hash": "af0ed4df4dfae762ab5fb605f5a0c8f59cb4f6ca",
  "patch_info": {
    "commit_hash": "af0ed4df4dfae762ab5fb605f5a0c8f59cb4f6ca",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/af0ed4df4dfae762ab5fb605f5a0c8f59cb4f6ca",
    "files": [
      "src/lib/kadm5/srv/svr_principal.c"
    ],
    "message": "Return only new keys in randkey [CVE-2014-5351]\n\nIn kadmind's randkey operation, if a client specifies the keepold\nflag, do not include the preserved old keys in the response.\n\nCVE-2014-5351:\n\nAn authenticated remote attacker can retrieve the current keys for a\nservice principal when generating a new set of keys for that\nprincipal.  The attacker needs to be authenticated as a user who has\nthe elevated privilege for randomizing the keys of other principals.\n\nNormally, when a Kerberos administrator randomizes the keys of a\nservice principal, kadmind returns only the new keys.  This prevents\nan administrator who lacks legitimate privileged access to a service\nfrom forging tickets to authenticate to that service.  If the\n\"keepold\" flag to the kadmin randkey RPC operation is true, kadmind\nretains the old keys in the KDC database as intended, but also\nunexpectedly returns the old keys to the client, which exposes the\nservice to ticket forgery attacks from the administrator.\n\nA mitigating factor is that legitimate clients of the affected service\nwill start failing to authenticate to the service once they begin to\nreceive service tickets encrypted in the new keys.  The affected\nservice will be unable to decrypt the newly issued tickets, possibly\nalerting the legitimate administrator of the affected service.\n\nCVSSv2: AV:N/AC:H/Au:S/C:P/I:N/A:N/E:POC/RL:OF/RC:C\n\n[tlyu@mit.edu: CVE description and CVSS score]\n\nticket: 8018 (new)\ntarget_version: 1.13\ntags: pullup",
    "before_after_code_files": [
      "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
    ]
  },
  "patch_diff": {
    "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c": [
      "File: src/lib/kadm5/srv/svr_principal.c -> src/lib/kadm5/srv/svr_principal.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "345: }",
      "347: kadm5_ret_t",
      "348: kadm5_create_principal(void *server_handle,",
      "349:                        kadm5_principal_ent_t entry, long mask,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "349: static int",
      "350: count_new_keys(int n_key_data, krb5_key_data *key_data)",
      "351: {",
      "352:     int n;",
      "354:     for (n = 1; n < n_key_data; n++) {",
      "355:         if (key_data[n - 1].key_data_kvno != key_data[n].key_data_kvno)",
      "356:             return n;",
      "357:     }",
      "358:     return n_key_data;",
      "359: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1593:     osa_princ_ent_rec           adb;",
      "1594:     krb5_int32                  now;",
      "1595:     kadm5_policy_ent_rec        pol;",
      "1597:     krb5_boolean                have_pol = FALSE;",
      "1598:     kadm5_server_handle_t       handle = server_handle;",
      "1599:     krb5_keyblock               *act_mkey;",
      "",
      "[Removed Lines]",
      "1596:     int                         ret, last_pwd;",
      "",
      "[Added Lines]",
      "1610:     int                         ret, last_pwd, n_new_keys;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1686:     kdb->fail_auth_count = 0;",
      "1688:     if (keyblocks) {",
      "1691:                                keyblocks, n_keys);",
      "1692:         if (ret)",
      "1693:             goto done;",
      "",
      "[Removed Lines]",
      "1689:         ret = decrypt_key_data(handle->context,",
      "1690:                                kdb->n_key_data, kdb->key_data,",
      "",
      "[Added Lines]",
      "1704:         n_new_keys = count_new_keys(kdb->n_key_data, kdb->key_data);",
      "1705:         ret = decrypt_key_data(handle->context, n_new_keys, kdb->key_data,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3bf9e33f9d66c0eef486cbd83f9e4f13a74d12c3",
      "candidate_info": {
        "commit_hash": "3bf9e33f9d66c0eef486cbd83f9e4f13a74d12c3",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/3bf9e33f9d66c0eef486cbd83f9e4f13a74d12c3",
        "files": [
          "src/lib/kadm5/srv/svr_principal.c"
        ],
        "message": "Return only new keys in randkey [CVE-2014-5351]\n\nIn kadmind's randkey operation, if a client specifies the keepold\nflag, do not include the preserved old keys in the response.\n\nCVE-2014-5351:\n\nAn authenticated remote attacker can retrieve the current keys for a\nservice principal when generating a new set of keys for that\nprincipal.  The attacker needs to be authenticated as a user who has\nthe elevated privilege for randomizing the keys of other principals.\n\nNormally, when a Kerberos administrator randomizes the keys of a\nservice principal, kadmind returns only the new keys.  This prevents\nan administrator who lacks legitimate privileged access to a service\nfrom forging tickets to authenticate to that service.  If the\n\"keepold\" flag to the kadmin randkey RPC operation is true, kadmind\nretains the old keys in the KDC database as intended, but also\nunexpectedly returns the old keys to the client, which exposes the\nservice to ticket forgery attacks from the administrator.\n\nA mitigating factor is that legitimate clients of the affected service\nwill start failing to authenticate to the service once they begin to\nreceive service tickets encrypted in the new keys.  The affected\nservice will be unable to decrypt the newly issued tickets, possibly\nalerting the legitimate administrator of the affected service.\n\nCVSSv2: AV:N/AC:H/Au:S/C:P/I:N/A:N/E:POC/RL:OF/RC:C\n\n[tlyu@mit.edu: CVE description and CVSS score]\n\n(cherry picked from commit af0ed4df4dfae762ab5fb605f5a0c8f59cb4f6ca)\n\nticket: 8018\nversion_fixed: 1.13\nstatus: resolved",
        "before_after_code_files": [
          "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
          ],
          "candidate": [
            "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/kadm5/srv/svr_principal.c||src/lib/kadm5/srv/svr_principal.c": [
          "File: src/lib/kadm5/srv/svr_principal.c -> src/lib/kadm5/srv/svr_principal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "345: }",
          "347: kadm5_ret_t",
          "348: kadm5_create_principal(void *server_handle,",
          "349:                        kadm5_principal_ent_t entry, long mask,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "349: static int",
          "350: count_new_keys(int n_key_data, krb5_key_data *key_data)",
          "351: {",
          "352:     int n;",
          "354:     for (n = 1; n < n_key_data; n++) {",
          "355:         if (key_data[n - 1].key_data_kvno != key_data[n].key_data_kvno)",
          "356:             return n;",
          "357:     }",
          "358:     return n_key_data;",
          "359: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1593:     osa_princ_ent_rec           adb;",
          "1594:     krb5_int32                  now;",
          "1595:     kadm5_policy_ent_rec        pol;",
          "1597:     krb5_boolean                have_pol = FALSE;",
          "1598:     kadm5_server_handle_t       handle = server_handle;",
          "1599:     krb5_keyblock               *act_mkey;",
          "",
          "[Removed Lines]",
          "1596:     int                         ret, last_pwd;",
          "",
          "[Added Lines]",
          "1610:     int                         ret, last_pwd, n_new_keys;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1686:     kdb->fail_auth_count = 0;",
          "1688:     if (keyblocks) {",
          "1691:                                keyblocks, n_keys);",
          "1692:         if (ret)",
          "1693:             goto done;",
          "",
          "[Removed Lines]",
          "1689:         ret = decrypt_key_data(handle->context,",
          "1690:                                kdb->n_key_data, kdb->key_data,",
          "",
          "[Added Lines]",
          "1704:         n_new_keys = count_new_keys(kdb->n_key_data, kdb->key_data);",
          "1705:         ret = decrypt_key_data(handle->context, n_new_keys, kdb->key_data,",
          "",
          "---------------"
        ]
      }
    }
  ]
}