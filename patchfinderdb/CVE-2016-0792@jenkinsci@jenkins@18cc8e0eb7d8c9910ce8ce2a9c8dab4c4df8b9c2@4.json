{
  "cve_id": "CVE-2016-0792",
  "cve_desc": "Multiple unspecified API endpoints in Jenkins before 1.650 and LTS before 1.642.2 allow remote authenticated users to execute arbitrary code via serialized data in an XML file, related to XStream and groovy.util.Expando.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "18cc8e0eb7d8c9910ce8ce2a9c8dab4c4df8b9c2",
  "patch_info": {
    "commit_hash": "18cc8e0eb7d8c9910ce8ce2a9c8dab4c4df8b9c2",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/18cc8e0eb7d8c9910ce8ce2a9c8dab4c4df8b9c2",
    "files": [
      "core/src/main/java/hudson/util/XStream2.java",
      "test/src/test/java/hudson/util/XStream2Security247Test.java",
      "test/src/test/resources/hudson/util/XStream2Security247Test/config.xml"
    ],
    "message": "[FIX SECURITY-247] Prevent loading of MethodClosure from XML",
    "before_after_code_files": [
      "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java",
      "test/src/test/java/hudson/util/XStream2Security247Test.java||test/src/test/java/hudson/util/XStream2Security247Test.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java": [
      "File: core/src/main/java/hudson/util/XStream2.java -> core/src/main/java/hudson/util/XStream2.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "160:         registerConverter(new AssociatedConverterImpl(this), -10);",
      "162:         registerConverter(new DynamicProxyConverter(getMapper()) { // SECURITY-105 defense",
      "163:             @Override public boolean canConvert(Class type) {",
      "164:                 return /* this precedes NullConverter */ type != null && super.canConvert(type);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "162:         registerConverter(new BlacklistedTypesConverter(), PRIORITY_VERY_HIGH); // SECURITY-247 defense",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "435:     }",
      "437: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "439:     private static class BlacklistedTypesConverter implements Converter {",
      "440:         @Override",
      "441:         public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {",
      "442:             throw new UnsupportedOperationException(\"Cannot marshal MethodClosure\");",
      "443:         }",
      "445:         @Override",
      "446:         public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {",
      "447:             throw new ConversionException(\"Cannot load MethodClosure for security reasons\");",
      "448:         }",
      "450:         @Override",
      "451:         public boolean canConvert(Class type) {",
      "452:             return type != null && \"org.codehaus.groovy.runtime.MethodClosure\".equals(type.getName());",
      "453:         }",
      "454:     }",
      "",
      "---------------"
    ],
    "test/src/test/java/hudson/util/XStream2Security247Test.java||test/src/test/java/hudson/util/XStream2Security247Test.java": [
      "File: test/src/test/java/hudson/util/XStream2Security247Test.java -> test/src/test/java/hudson/util/XStream2Security247Test.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package hudson.util;",
      "3: import hudson.Functions;",
      "4: import hudson.model.Items;",
      "5: import org.apache.commons.io.FileUtils;",
      "6: import org.junit.Rule;",
      "7: import org.junit.Test;",
      "8: import org.jvnet.hudson.test.Issue;",
      "9: import org.jvnet.hudson.test.JenkinsRule;",
      "11: import java.io.File;",
      "13: import static org.junit.Assert.assertFalse;",
      "15: public class XStream2Security247Test {",
      "17:     @Rule",
      "18:     public JenkinsRule j = new JenkinsRule();",
      "20:     @Test",
      "21:     @Issue(\"SECURITY-247\")",
      "22:     public void dontUnmarshalMethodClosure() throws Exception {",
      "23:         if (Functions.isWindows())  return;",
      "24:         File exploitFile = new File(\"/tmp/jenkins-security247test\");",
      "25:         try {",
      "27:             if (exploitFile.exists() && !exploitFile.delete()) {",
      "28:                 throw new IllegalStateException(\"file exists and cannot be deleted\");",
      "29:             }",
      "30:             File tempJobDir = new File(j.jenkins.getRootDir(), \"security247\");",
      "31:             FileUtils.copyInputStreamToFile(XStream2Security247Test.class.getResourceAsStream(\"/hudson/util/XStream2Security247Test/config.xml\"),",
      "32:                     new File(tempJobDir, \"config.xml\"));",
      "33:             try {",
      "34:                 Items.load(j.jenkins, tempJobDir);",
      "35:             } catch (Exception e) {",
      "37:             }",
      "38:             assertFalse(\"no file should be created here\", exploitFile.exists());",
      "39:         } finally {",
      "40:             exploitFile.delete();",
      "41:         }",
      "42:     }",
      "43: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d6bcfdac70bf8b1a8004420f8ce9b7b30ced7159",
      "candidate_info": {
        "commit_hash": "d6bcfdac70bf8b1a8004420f8ce9b7b30ced7159",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d6bcfdac70bf8b1a8004420f8ce9b7b30ced7159",
        "files": [
          "core/src/main/java/hudson/util/XStream2.java",
          "pom.xml"
        ],
        "message": "Integrating newer remoting snapshot, and adding better diagnostics to BlacklistedTypesConverter.",
        "before_after_code_files": [
          "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/util/XStream2.java||core/src/main/java/hudson/util/XStream2.java": [
          "File: core/src/main/java/hudson/util/XStream2.java -> core/src/main/java/hudson/util/XStream2.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "440:     private static class BlacklistedTypesConverter implements Converter {",
          "441:         @Override",
          "442:         public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) {",
          "444:         }",
          "446:         @Override",
          "447:         public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {",
          "449:         }",
          "451:         @Override",
          "",
          "[Removed Lines]",
          "443:             throw new UnsupportedOperationException(\"Refusing to marshal for security reasons\");",
          "448:             throw new ConversionException(\"Refusing to unmarshal for security reasons\");",
          "",
          "[Added Lines]",
          "443:             throw new UnsupportedOperationException(\"Refusing to marshal \" + source.getClass().getName() + \" for security reasons\");",
          "448:             throw new ConversionException(\"Refusing to unmarshal \" + reader.getNodeName() + \" for security reasons\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}