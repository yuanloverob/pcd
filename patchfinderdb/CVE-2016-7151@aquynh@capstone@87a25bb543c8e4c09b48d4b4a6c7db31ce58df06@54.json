{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bc954d0ac749b07e2cd03c2ebd6d79d1a8c10271",
      "candidate_info": {
        "commit_hash": "bc954d0ac749b07e2cd03c2ebd6d79d1a8c10271",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/bc954d0ac749b07e2cd03c2ebd6d79d1a8c10271",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "fix compile error with capstone_static_winkernel\n\nThe MSVC project capstone_static_winkernel uses __stdcall as a\ndefault calling convention to fit with environment for Windows driver\ndevelopment. This leads to a compile error in a use of qsort() with\nregs_cmp() since it is compiled as a __stdcall function while qsort()\nexpects a __cdelc function.\n\nThis fix adds explicit calling convention to regs_cmp() for MSVC.\n\nSigned-off-by: Satoshi Tanda <tanda.sat@gmail.com>",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2924: static struct insn_reg insn_regs_intel_sorted [ARR_SIZE(insn_regs_intel)];",
          "2927: {",
          "2928:  uint16_t l = ((struct insn_reg *)a)->insn;",
          "2929:  uint16_t r = ((struct insn_reg *)b)->insn;",
          "",
          "[Removed Lines]",
          "2926: static int regs_cmp(const void *a, const void *b)",
          "",
          "[Added Lines]",
          "2926: static int CAPSTONE_API regs_cmp(const void *a, const void *b)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "079d94d7f081a93c3465325819e0d6e030b9882a",
      "candidate_info": {
        "commit_hash": "079d94d7f081a93c3465325819e0d6e030b9882a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/079d94d7f081a93c3465325819e0d6e030b9882a",
        "files": [
          "arch/ARM/ARMInstPrinter.c"
        ],
        "message": "arm: POP {reg} read/write SP register. this fixes #913",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "588:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].type = ARM_OP_REG;",
          "589:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].reg = MCOperand_getReg(MCInst_getOperand(MI, 0));",
          "590:          MI->flat_insn->detail->arm.op_count++;",
          "591:         }",
          "592:         SStream_concat0(O, \"}\");",
          "593:         return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "592:                                     MI->flat_insn->detail->regs_read[MI->flat_insn->detail->regs_read_count] = ARM_REG_SP;",
          "593:                                     MI->flat_insn->detail->regs_read_count++;",
          "594:                                     MI->flat_insn->detail->regs_write[MI->flat_insn->detail->regs_write_count] = ARM_REG_SP;",
          "595:                                     MI->flat_insn->detail->regs_write_count++;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d17fc90767b7cd402a8613f788e62a3f873a9769",
      "candidate_info": {
        "commit_hash": "d17fc90767b7cd402a8613f788e62a3f873a9769",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d17fc90767b7cd402a8613f788e62a3f873a9769",
        "files": [
          "suite/arm/test_arm_regression.c"
        ],
        "message": "fix a MSVC 2015 warning",
        "before_after_code_files": [
          "suite/arm/test_arm_regression.c||suite/arm/test_arm_regression.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "suite/arm/test_arm_regression.c||suite/arm/test_arm_regression.c": [
          "File: suite/arm/test_arm_regression.c -> suite/arm/test_arm_regression.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #ifdef _MSC_VER",
          "8: #endif",
          "9: #include <stdio.h>",
          "10: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "6: #define _CRT_SECURE_NO_WARNINGS",
          "7: #define snprintf _snprintf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a668317b5d9475770b9586fff3aef2b36a97df1",
      "candidate_info": {
        "commit_hash": "2a668317b5d9475770b9586fff3aef2b36a97df1",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/2a668317b5d9475770b9586fff3aef2b36a97df1",
        "files": [
          "bindings/Makefile",
          "bindings/const_generator.py",
          "bindings/powershell/Capstone/Capstone.psm1",
          "bindings/powershell/Capstone/Const/capstone_h.cs"
        ],
        "message": "Revert constant generation + Quality of service change",
        "before_after_code_files": [
          "bindings/const_generator.py||bindings/const_generator.py",
          "bindings/powershell/Capstone/Capstone.psm1||bindings/powershell/Capstone/Capstone.psm1",
          "bindings/powershell/Capstone/Const/capstone_h.cs||bindings/powershell/Capstone/Const/capstone_h.cs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/const_generator.py||bindings/const_generator.py": [
          "File: bindings/const_generator.py -> bindings/const_generator.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: include = [ 'arm.h', 'arm64.h', 'mips.h', 'x86.h', 'ppc.h', 'sparc.h', 'systemz.h', 'xcore.h' ]",
          "10: template = {",
          "21:     'java': {",
          "22:             'header': \"// For Capstone Engine. AUTO-GENERATED FILE, DO NOT EDIT\\npackage capstone;\\n\\npublic class %s_const {\\n\",",
          "23:             'footer': \"}\",",
          "",
          "[Removed Lines]",
          "11:     'powershell': {",
          "12:             'header': \"# For Capstone Engine. AUTO-GENERATED FILE, DO NOT EDIT [%s_h.cs]\\n\",",
          "13:             'footer': \"\",",
          "14:             'line_format': '%s = %s\\n',",
          "15:             'out_file': './powershell/Capstone/Const/%s_h.cs',",
          "16:             # only capstone.h required, but it is not included above on line 8?",
          "17:             'capstone.h': 'capstone',",
          "18:             'comment_open': '///',",
          "19:             'comment_close': '',",
          "20:         },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "bindings/powershell/Capstone/Capstone.psm1||bindings/powershell/Capstone/Capstone.psm1": [
          "File: bindings/powershell/Capstone/Capstone.psm1 -> bindings/powershell/Capstone/Capstone.psm1",
          "--- Hunk 1 ---",
          "[Context before]",
          "149:   Return",
          "150:  }",
          "157:  # Inline C# to parse the unmanaged capstone DLL",
          "158:  Add-Type -TypeDefinition @\"",
          "159:  using System;",
          "",
          "[Removed Lines]",
          "152:  # Load C# constants",
          "153:  $cs_err = Select-String \"CS_ERR_\" $($PSScriptRoot + '\\Const\\capstone_h.cs') |select -exp line",
          "154:  $cs_arch = Select-String \"CS_ARCH_\" $($PSScriptRoot + '\\Const\\capstone_h.cs') |select -exp line",
          "155:  $cs_mode = Select-String \"CS_MODE_\" $($PSScriptRoot + '\\Const\\capstone_h.cs') |select -exp line",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "194:  public enum cs_err : int",
          "195:  {",
          "197:  }",
          "199:  public enum cs_arch : int",
          "200:  {",
          "202:  }",
          "204:  public enum cs_mode : int",
          "205:  {",
          "207:  }",
          "209:  public static class Capstone",
          "",
          "[Removed Lines]",
          "196:   $cs_err",
          "201:   $cs_arch",
          "206:   $cs_mode",
          "",
          "[Added Lines]",
          "191:   CS_ERR_OK = 0,    /// No error: everything was fine",
          "192:   CS_ERR_MEM,       /// Out-Of-Memory error: cs_open(), cs_disasm(), cs_disasm_iter()",
          "193:   CS_ERR_ARCH,      /// Unsupported architecture: cs_open()",
          "194:   CS_ERR_HANDLE,    /// Invalid handle: cs_op_count(), cs_op_index()",
          "195:   CS_ERR_CSH,       /// Invalid csh argument: cs_close(), cs_errno(), cs_option()",
          "196:   CS_ERR_MODE,      /// Invalid/unsupported mode: cs_open()",
          "197:   CS_ERR_OPTION,    /// Invalid/unsupported option: cs_option()",
          "198:   CS_ERR_DETAIL,    /// Information is unavailable because detail option is OFF",
          "199:   CS_ERR_MEMSETUP,  /// Dynamic memory management uninitialized (see CS_OPT_MEM)",
          "200:   CS_ERR_VERSION,   /// Unsupported version (bindings)",
          "201:   CS_ERR_DIET,      /// Access irrelevant data in \"diet\" engine",
          "202:   CS_ERR_SKIPDATA,  /// Access irrelevant data for \"data\" instruction in SKIPDATA mode",
          "203:   CS_ERR_X86_ATT,   /// X86 AT&T syntax is unsupported (opt-out at compile time)",
          "204:   CS_ERR_X86_INTEL, /// X86 Intel syntax is unsupported (opt-out at compile time)",
          "208:   CS_ARCH_ARM = 0,      /// ARM architecture (including Thumb, Thumb-2)",
          "209:   CS_ARCH_ARM64,        /// ARM-64, also called AArch64",
          "210:   CS_ARCH_MIPS,         /// Mips architecture",
          "211:   CS_ARCH_X86,          /// X86 architecture (including x86 & x86-64)",
          "212:   CS_ARCH_PPC,          /// PowerPC architecture",
          "213:   CS_ARCH_SPARC,        /// Sparc architecture",
          "214:   CS_ARCH_SYSZ,         /// SystemZ architecture",
          "215:   CS_ARCH_XCORE,        /// XCore architecture",
          "216:   CS_ARCH_MAX,",
          "217:   CS_ARCH_ALL = 0xFFFF, /// All architectures - for cs_support()",
          "221:   CS_MODE_LITTLE_ENDIAN = 0,    /// little-endian mode (default mode)",
          "222:   CS_MODE_ARM = 0,              /// 32-bit ARM",
          "223:   CS_MODE_16 = 1 << 1,          /// 16-bit mode (X86)",
          "224:   CS_MODE_32 = 1 << 2,          /// 32-bit mode (X86)",
          "225:   CS_MODE_64 = 1 << 3,          /// 64-bit mode (X86, PPC)",
          "226:   CS_MODE_THUMB = 1 << 4,       /// ARM's Thumb mode, including Thumb-2",
          "227:   CS_MODE_MCLASS = 1 << 5,      /// ARM's Cortex-M series",
          "228:   CS_MODE_V8 = 1 << 6,          /// ARMv8 A32 encodings for ARM",
          "229:   CS_MODE_MICRO = 1 << 4,       /// MicroMips mode (MIPS)",
          "230:   CS_MODE_MIPS3 = 1 << 5,       /// Mips III ISA",
          "231:   CS_MODE_MIPS32R6 = 1 << 6,    /// Mips32r6 ISA",
          "232:   CS_MODE_MIPSGP64 = 1 << 7,    /// General Purpose Registers are 64-bit wide (MIPS)",
          "233:   CS_MODE_V9 = 1 << 4,          /// SparcV9 mode (Sparc)",
          "234:   CS_MODE_BIG_ENDIAN = 1 << 31, /// big-endian mode",
          "235:   CS_MODE_MIPS32 = CS_MODE_32,  /// Mips32 ISA (Mips)",
          "236:   CS_MODE_MIPS64 = CS_MODE_64,  /// Mips64 ISA (Mips)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "361:    $Cast = [system.runtime.interopservices.marshal]::PtrToStructure($InsnPointer,[type]$cs_insn)",
          "363:    if ($CS_OPT -eq 0) {",
          "371:     }",
          "372:    } else {",
          "373:     $DetailCast = [system.runtime.interopservices.marshal]::PtrToStructure($Cast.detail,[type]$cs_detail)",
          "374:     if($DetailCast.regs_read_count -gt 0) {",
          "",
          "[Removed Lines]",
          "364:     # Some dirty tricks for spacing, sorry mmkay!",
          "365:     if ($i -eq 0) {",
          "366:      $Disasm += echo \"`n\"",
          "367:     }",
          "368:     $Disasm += echo \"$($Cast.mnemonic) $($Cast.operands)\"",
          "369:     if ($i -eq $($count-1)){",
          "370:      $Disasm += echo \"`n\"",
          "",
          "[Added Lines]",
          "394:     $HashTable = @{",
          "395:      Address = echo \"0x$(\"{0:X}\" -f $Cast.address)\"",
          "396:      Instruction = echo \"$($Cast.mnemonic) $($Cast.operands)\"",
          "398:     $Object = New-Object PSObject -Property $HashTable",
          "399:     $Disasm += $Object |Select-Object Address,Instruction",
          "",
          "---------------"
        ],
        "bindings/powershell/Capstone/Const/capstone_h.cs||bindings/powershell/Capstone/Const/capstone_h.cs": [
          "File: bindings/powershell/Capstone/Const/capstone_h.cs -> bindings/powershell/Capstone/Const/capstone_h.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "10730fa971544a02a8061d25650c5fe2c61db639",
      "candidate_info": {
        "commit_hash": "10730fa971544a02a8061d25650c5fe2c61db639",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/10730fa971544a02a8061d25650c5fe2c61db639",
        "files": [
          "arch/X86/X86IntelInstPrinter.c"
        ],
        "message": "x86: do not print 'ptr' for fxsave & fxrstor instructions. this fixes issue #492",
        "before_after_code_files": [
          "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c": [
          "File: arch/X86/X86IntelInstPrinter.c -> arch/X86/X86IntelInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:   case X86_INS_SIDT:",
          "73:   case X86_INS_LGDT:",
          "74:   case X86_INS_LIDT:",
          "76:    break;",
          "77:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:   case X86_INS_FXRSTOR:",
          "77:   case X86_INS_FXSAVE:",
          "",
          "---------------"
        ]
      }
    }
  ]
}