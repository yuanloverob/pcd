{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ae02bf1c5d15f9746c4187baa3a0510b0d87867b",
      "candidate_info": {
        "commit_hash": "ae02bf1c5d15f9746c4187baa3a0510b0d87867b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ae02bf1c5d15f9746c4187baa3a0510b0d87867b",
        "files": [
          "CMakeLists.txt",
          "cstool/CMakeLists.txt",
          "cstool/cstool.c"
        ],
        "message": "cstool: compile with CMake using CMakeLists.txt in root dir",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: static void usage(char *prog)",
          "54: {",
          "56:  printf(\"Syntax: %s <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "57:  printf(\"\\nThe following <arch+mode> options are supported:\\n\");",
          "",
          "[Removed Lines]",
          "55:  printf(\"Cstool v%s for Capstone Disassembler Engine (www.capstone-engine.org)\\n\", VERSION);",
          "",
          "[Added Lines]",
          "55:  printf(\"Cstool v%s for Capstone Disassembler Engine (www.capstone-engine.org)\\n\\n\", VERSION);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "972a6a67f3b49d851e14d1e31449b202966e9169",
      "candidate_info": {
        "commit_hash": "972a6a67f3b49d851e14d1e31449b202966e9169",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/972a6a67f3b49d851e14d1e31449b202966e9169",
        "files": [
          "suite/regress.py"
        ],
        "message": "added regression test for issue #702",
        "before_after_code_files": [
          "suite/regress.py||suite/regress.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "suite/regress.py||suite/regress.py": [
          "File: suite/regress.py -> suite/regress.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "460:         (CS_ARCH_X86, CS_MODE_64, CS_OPT_SYNTAX_INTEL, 0x649123ffe1, b\"\\x0f\\x01\\x1d\\xa0\\x90\\x04\\x08\", \"lidt [rip + 0x80490a0]\"),",
          "461:         (CS_ARCH_X86, CS_MODE_32, CS_OPT_SYNTAX_INTEL, 0x9123ffe1, b\"\\x0f\\x01\\x1d\\xa0\\x90\\x04\\x08\", \"lidt [0x80490a0]\"),",
          "462:         (CS_ARCH_X86, CS_MODE_16, CS_OPT_SYNTAX_INTEL, 0xffe1, b\"\\x0f\\x01\\x1d\", \"lidt [di]\"),",
          "463: )",
          "465: _python3 = sys.version_info.major == 3",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "464:         # issues 702 https://github.com/aquynh/capstone/issues/702",
          "465:         (CS_ARCH_X86, CS_MODE_32, CS_OPT_SYNTAX_INTEL, 0, b\"\\x85\\xC8\", \"test eax, ecx\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a9ec8b0df2eeb99af56d4dbd614ed51245ae5cad",
      "candidate_info": {
        "commit_hash": "a9ec8b0df2eeb99af56d4dbd614ed51245ae5cad",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/a9ec8b0df2eeb99af56d4dbd614ed51245ae5cad",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: print out core version",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74: static void usage(char *prog)",
          "75: {",
          "77:  printf(\"Syntax: %s [-d:print all detail information] <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "78:  printf(\"\\nThe following <arch+mode> options are supported:\\n\");",
          "",
          "[Removed Lines]",
          "76:  printf(\"Cstool v%s for Capstone Disassembler Engine (www.capstone-engine.org)\\n\\n\", VERSION);",
          "",
          "[Added Lines]",
          "76:  printf(\"Cstool v%s for Capstone Disassembler Engine (core v%u.%u)\\n\\n\", VERSION, CS_API_MAJOR, CS_API_MINOR);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f456b3379e31ab16030ebe075533092f7430bc0",
      "candidate_info": {
        "commit_hash": "0f456b3379e31ab16030ebe075533092f7430bc0",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/0f456b3379e31ab16030ebe075533092f7430bc0",
        "files": [
          "arch/AArch64/AArch64Module.c",
          "arch/ARM/ARMModule.c",
          "arch/Mips/MipsModule.c",
          "arch/PowerPC/PPCModule.c",
          "arch/Sparc/SparcModule.c"
        ],
        "message": "switch endian mode with cs_option() for Arm/Arm64/Mips/Sparc. fix issue #849",
        "before_after_code_files": [
          "arch/AArch64/AArch64Module.c||arch/AArch64/AArch64Module.c",
          "arch/ARM/ARMModule.c||arch/ARM/ARMModule.c",
          "arch/Mips/MipsModule.c||arch/Mips/MipsModule.c",
          "arch/PowerPC/PPCModule.c||arch/PowerPC/PPCModule.c",
          "arch/Sparc/SparcModule.c||arch/Sparc/SparcModule.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64Module.c||arch/AArch64/AArch64Module.c": [
          "File: arch/AArch64/AArch64Module.c -> arch/AArch64/AArch64Module.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: static cs_err option(cs_struct *handle, cs_opt_type type, size_t value)",
          "37: {",
          "38:  return CS_ERR_OK;",
          "39: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:  if (type == CS_OPT_MODE) {",
          "39:   handle->big_endian = (((cs_mode)value & CS_MODE_BIG_ENDIAN) != 0);",
          "40:  }",
          "",
          "---------------"
        ],
        "arch/ARM/ARMModule.c||arch/ARM/ARMModule.c": [
          "File: arch/ARM/ARMModule.c -> arch/ARM/ARMModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     handle->disasm = ARM_getInstruction;",
          "51:    handle->mode = (cs_mode)value;",
          "52:    break;",
          "53:   case CS_OPT_SYNTAX:",
          "54:    ARM_getRegName(handle, (int)value);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:    handle->big_endian = ((handle->mode & CS_MODE_BIG_ENDIAN) != 0);",
          "",
          "---------------"
        ],
        "arch/Mips/MipsModule.c||arch/Mips/MipsModule.c": [
          "File: arch/Mips/MipsModule.c -> arch/Mips/MipsModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:    handle->disasm = Mips64_getInstruction;",
          "49:   handle->mode = (cs_mode)value;",
          "50:  }",
          "51:  return CS_ERR_OK;",
          "52: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:   handle->big_endian = ((handle->mode & CS_MODE_BIG_ENDIAN) != 0);",
          "",
          "---------------"
        ],
        "arch/PowerPC/PPCModule.c||arch/PowerPC/PPCModule.c": [
          "File: arch/PowerPC/PPCModule.c -> arch/PowerPC/PPCModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:  if (type == CS_OPT_SYNTAX)",
          "41:   handle->syntax = (int) value;",
          "43:  return CS_ERR_OK;",
          "44: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:  if (type == CS_OPT_MODE) {",
          "44:   handle->big_endian = (((cs_mode)value & CS_MODE_BIG_ENDIAN) != 0);",
          "45:  }",
          "",
          "---------------"
        ],
        "arch/Sparc/SparcModule.c||arch/Sparc/SparcModule.c": [
          "File: arch/Sparc/SparcModule.c -> arch/Sparc/SparcModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:  if (type == CS_OPT_SYNTAX)",
          "40:   handle->syntax = (int) value;",
          "42:  return CS_ERR_OK;",
          "43: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:  if (type == CS_OPT_MODE) {",
          "43:   handle->big_endian = (((cs_mode)value & CS_MODE_BIG_ENDIAN) != 0);",
          "44:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "560479273768cc9238455f9b072a130b261369fd",
      "candidate_info": {
        "commit_hash": "560479273768cc9238455f9b072a130b261369fd",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/560479273768cc9238455f9b072a130b261369fd",
        "files": [
          "tests/test_x86.c"
        ],
        "message": "Remove X86_OP_FP case",
        "before_after_code_files": [
          "tests/test_x86.c||tests/test_x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/test_x86.c||tests/test_x86.c": [
          "File: tests/test_x86.c -> tests/test_x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:    case X86_OP_IMM:",
          "105:     printf(\"\\t\\toperands[%u].type: IMM = 0x%\" PRIx64 \"\\n\", i, op->imm);",
          "106:     break;",
          "110:    case X86_OP_MEM:",
          "111:     printf(\"\\t\\toperands[%u].type: MEM\\n\", i);",
          "112:     if (op->mem.segment != X86_REG_INVALID)",
          "",
          "[Removed Lines]",
          "107:    case X86_OP_FP:",
          "108:     printf(\"\\t\\toperands[%u].type: FP = %f\\n\", i, op->fp);",
          "109:     break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}