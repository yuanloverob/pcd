{
  "cve_id": "CVE-2021-29580",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. The implementation of `tf.raw_ops.FractionalMaxPoolGrad` triggers an undefined behavior if one of the input tensors is empty. The code is also vulnerable to a denial of service attack as a `CHECK` condition becomes false and aborts the process. The implementation(https://github.com/tensorflow/tensorflow/blob/169054888d50ce488dfde9ca55d91d6325efbd5b/tensorflow/core/kernels/fractional_max_pool_op.cc#L215) fails to validate that input and output tensors are not empty and are of the same rank. Each of these unchecked assumptions is responsible for the above issues. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "32fdcbff9d06d010d908fcc4bd4b36eb3ce15925",
  "patch_info": {
    "commit_hash": "32fdcbff9d06d010d908fcc4bd4b36eb3ce15925",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925",
    "files": [
      "tensorflow/core/kernels/fractional_max_pool_op.cc"
    ],
    "message": "Validate arguments of `FractionalMaxPoolGrad`\n\nPiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c",
    "before_after_code_files": [
      "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc": [
      "File: tensorflow/core/kernels/fractional_max_pool_op.cc -> tensorflow/core/kernels/fractional_max_pool_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "237:     constexpr int tensor_in_and_out_dims = 4;",
      "238:     std::vector<int64> input_size(tensor_in_and_out_dims);",
      "239:     std::vector<int64> output_size(tensor_in_and_out_dims);",
      "240:     for (int i = 0; i < tensor_in_and_out_dims; ++i) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "238:     OP_REQUIRES(",
      "239:         context, tensor_in.dims() == tensor_in_and_out_dims,",
      "240:         errors::InvalidArgument(\"orig_input should be a tensor of rank 4, got \",",
      "241:                                 tensor_in.DebugString()));",
      "242:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
      "243:                 errors::InvalidArgument(\"orig_input must not be empty, got \",",
      "244:                                         tensor_in.DebugString()));",
      "245:     OP_REQUIRES(context, tensor_out.dims() == tensor_in_and_out_dims,",
      "246:                 errors::InvalidArgument(",
      "247:                     \"orig_output should be a tensor of rank 4, got \",",
      "248:                     tensor_out.DebugString()));",
      "249:     OP_REQUIRES(context, tensor_out.NumElements() > 0,",
      "250:                 errors::InvalidArgument(\"orig_output must not be empty, got \",",
      "251:                                         tensor_out.DebugString()));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "36150d5b1d83cb7af204d7558f9343a69e93d928",
      "candidate_info": {
        "commit_hash": "36150d5b1d83cb7af204d7558f9343a69e93d928",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/36150d5b1d83cb7af204d7558f9343a69e93d928",
        "files": [
          "tensorflow/core/kernels/fractional_max_pool_op.cc"
        ],
        "message": "Validate arguments of `FractionalMaxPoolGrad`\n\nPiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c",
        "before_after_code_files": [
          "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc": [
          "File: tensorflow/core/kernels/fractional_max_pool_op.cc -> tensorflow/core/kernels/fractional_max_pool_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:     constexpr int tensor_in_and_out_dims = 4;",
          "238:     std::vector<int64> input_size(tensor_in_and_out_dims);",
          "239:     std::vector<int64> output_size(tensor_in_and_out_dims);",
          "240:     for (int i = 0; i < tensor_in_and_out_dims; ++i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:     OP_REQUIRES(",
          "239:         context, tensor_in.dims() == tensor_in_and_out_dims,",
          "240:         errors::InvalidArgument(\"orig_input should be a tensor of rank 4, got \",",
          "241:                                 tensor_in.DebugString()));",
          "242:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
          "243:                 errors::InvalidArgument(\"orig_input must not be empty, got \",",
          "244:                                         tensor_in.DebugString()));",
          "245:     OP_REQUIRES(context, tensor_out.dims() == tensor_in_and_out_dims,",
          "246:                 errors::InvalidArgument(",
          "247:                     \"orig_output should be a tensor of rank 4, got \",",
          "248:                     tensor_out.DebugString()));",
          "249:     OP_REQUIRES(context, tensor_out.NumElements() > 0,",
          "250:                 errors::InvalidArgument(\"orig_output must not be empty, got \",",
          "251:                                         tensor_out.DebugString()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61bff3aa1e56b143a4ee15053ceacc205459e39c",
      "candidate_info": {
        "commit_hash": "61bff3aa1e56b143a4ee15053ceacc205459e39c",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/61bff3aa1e56b143a4ee15053ceacc205459e39c",
        "files": [
          "tensorflow/core/kernels/fractional_max_pool_op.cc"
        ],
        "message": "Validate arguments of `FractionalMaxPoolGrad`\n\nPiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c",
        "before_after_code_files": [
          "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc": [
          "File: tensorflow/core/kernels/fractional_max_pool_op.cc -> tensorflow/core/kernels/fractional_max_pool_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:     constexpr int tensor_in_and_out_dims = 4;",
          "238:     std::vector<int64> input_size(tensor_in_and_out_dims);",
          "239:     std::vector<int64> output_size(tensor_in_and_out_dims);",
          "240:     for (int i = 0; i < tensor_in_and_out_dims; ++i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:     OP_REQUIRES(",
          "239:         context, tensor_in.dims() == tensor_in_and_out_dims,",
          "240:         errors::InvalidArgument(\"orig_input should be a tensor of rank 4, got \",",
          "241:                                 tensor_in.DebugString()));",
          "242:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
          "243:                 errors::InvalidArgument(\"orig_input must not be empty, got \",",
          "244:                                         tensor_in.DebugString()));",
          "245:     OP_REQUIRES(context, tensor_out.dims() == tensor_in_and_out_dims,",
          "246:                 errors::InvalidArgument(",
          "247:                     \"orig_output should be a tensor of rank 4, got \",",
          "248:                     tensor_out.DebugString()));",
          "249:     OP_REQUIRES(context, tensor_out.NumElements() > 0,",
          "250:                 errors::InvalidArgument(\"orig_output must not be empty, got \",",
          "251:                                         tensor_out.DebugString()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc9088ccf3ff8fb4edfcda68e2359ec2b6a81323",
      "candidate_info": {
        "commit_hash": "dc9088ccf3ff8fb4edfcda68e2359ec2b6a81323",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/dc9088ccf3ff8fb4edfcda68e2359ec2b6a81323",
        "files": [
          "tensorflow/core/kernels/fractional_max_pool_op.cc"
        ],
        "message": "Validate arguments of `FractionalMaxPoolGrad`\n\nPiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c",
        "before_after_code_files": [
          "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc": [
          "File: tensorflow/core/kernels/fractional_max_pool_op.cc -> tensorflow/core/kernels/fractional_max_pool_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:     constexpr int tensor_in_and_out_dims = 4;",
          "238:     std::vector<int64> input_size(tensor_in_and_out_dims);",
          "239:     std::vector<int64> output_size(tensor_in_and_out_dims);",
          "240:     for (int i = 0; i < tensor_in_and_out_dims; ++i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:     OP_REQUIRES(",
          "239:         context, tensor_in.dims() == tensor_in_and_out_dims,",
          "240:         errors::InvalidArgument(\"orig_input should be a tensor of rank 4, got \",",
          "241:                                 tensor_in.DebugString()));",
          "242:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
          "243:                 errors::InvalidArgument(\"orig_input must not be empty, got \",",
          "244:                                         tensor_in.DebugString()));",
          "245:     OP_REQUIRES(context, tensor_out.dims() == tensor_in_and_out_dims,",
          "246:                 errors::InvalidArgument(",
          "247:                     \"orig_output should be a tensor of rank 4, got \",",
          "248:                     tensor_out.DebugString()));",
          "249:     OP_REQUIRES(context, tensor_out.NumElements() > 0,",
          "250:                 errors::InvalidArgument(\"orig_output must not be empty, got \",",
          "251:                                         tensor_out.DebugString()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acc0e451aeaa1100ae012caf35198fc43f60f4fa",
      "candidate_info": {
        "commit_hash": "acc0e451aeaa1100ae012caf35198fc43f60f4fa",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/acc0e451aeaa1100ae012caf35198fc43f60f4fa",
        "files": [
          "tensorflow/core/kernels/fractional_max_pool_op.cc"
        ],
        "message": "Validate arguments of `FractionalMaxPoolGrad`\n\nPiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c",
        "before_after_code_files": [
          "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc": [
          "File: tensorflow/core/kernels/fractional_max_pool_op.cc -> tensorflow/core/kernels/fractional_max_pool_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:     constexpr int tensor_in_and_out_dims = 4;",
          "238:     std::vector<int64> input_size(tensor_in_and_out_dims);",
          "239:     std::vector<int64> output_size(tensor_in_and_out_dims);",
          "240:     for (int i = 0; i < tensor_in_and_out_dims; ++i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:     OP_REQUIRES(",
          "239:         context, tensor_in.dims() == tensor_in_and_out_dims,",
          "240:         errors::InvalidArgument(\"orig_input should be a tensor of rank 4, got \",",
          "241:                                 tensor_in.DebugString()));",
          "242:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
          "243:                 errors::InvalidArgument(\"orig_input must not be empty, got \",",
          "244:                                         tensor_in.DebugString()));",
          "245:     OP_REQUIRES(context, tensor_out.dims() == tensor_in_and_out_dims,",
          "246:                 errors::InvalidArgument(",
          "247:                     \"orig_output should be a tensor of rank 4, got \",",
          "248:                     tensor_out.DebugString()));",
          "249:     OP_REQUIRES(context, tensor_out.NumElements() > 0,",
          "250:                 errors::InvalidArgument(\"orig_output must not be empty, got \",",
          "251:                                         tensor_out.DebugString()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8c23237701464d2c8ddf5a7d39d35366d37e690",
      "candidate_info": {
        "commit_hash": "d8c23237701464d2c8ddf5a7d39d35366d37e690",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/d8c23237701464d2c8ddf5a7d39d35366d37e690",
        "files": [
          "tensorflow/core/kernels/fractional_max_pool_op.cc"
        ],
        "message": "Validate arguments of `FractionalMaxPoolGrad`\n\nPiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c",
        "before_after_code_files": [
          "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/fractional_max_pool_op.cc||tensorflow/core/kernels/fractional_max_pool_op.cc": [
          "File: tensorflow/core/kernels/fractional_max_pool_op.cc -> tensorflow/core/kernels/fractional_max_pool_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:     constexpr int tensor_in_and_out_dims = 4;",
          "238:     std::vector<int64> input_size(tensor_in_and_out_dims);",
          "239:     std::vector<int64> output_size(tensor_in_and_out_dims);",
          "240:     for (int i = 0; i < tensor_in_and_out_dims; ++i) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:     OP_REQUIRES(",
          "239:         context, tensor_in.dims() == tensor_in_and_out_dims,",
          "240:         errors::InvalidArgument(\"orig_input should be a tensor of rank 4, got \",",
          "241:                                 tensor_in.DebugString()));",
          "242:     OP_REQUIRES(context, tensor_in.NumElements() > 0,",
          "243:                 errors::InvalidArgument(\"orig_input must not be empty, got \",",
          "244:                                         tensor_in.DebugString()));",
          "245:     OP_REQUIRES(context, tensor_out.dims() == tensor_in_and_out_dims,",
          "246:                 errors::InvalidArgument(",
          "247:                     \"orig_output should be a tensor of rank 4, got \",",
          "248:                     tensor_out.DebugString()));",
          "249:     OP_REQUIRES(context, tensor_out.NumElements() > 0,",
          "250:                 errors::InvalidArgument(\"orig_output must not be empty, got \",",
          "251:                                         tensor_out.DebugString()));",
          "",
          "---------------"
        ]
      }
    }
  ]
}