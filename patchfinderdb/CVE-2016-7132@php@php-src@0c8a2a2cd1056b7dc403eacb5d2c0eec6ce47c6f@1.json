{
  "cve_id": "CVE-2016-7132",
  "cve_desc": "ext/wddx/wddx.c in PHP before 5.6.25 and 7.x before 7.0.10 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) or possibly have unspecified other impact via an invalid wddxPacket XML document that is mishandled in a wddx_deserialize call, as demonstrated by a stray element inside a boolean element, leading to incorrect pop processing.",
  "repo": "php/php-src",
  "patch_hash": "0c8a2a2cd1056b7dc403eacb5d2c0eec6ce47c6f",
  "patch_info": {
    "commit_hash": "0c8a2a2cd1056b7dc403eacb5d2c0eec6ce47c6f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/0c8a2a2cd1056b7dc403eacb5d2c0eec6ce47c6f",
    "files": [
      "ext/wddx/tests/bug72790.phpt",
      "ext/wddx/tests/bug72799.phpt",
      "ext/wddx/wddx.c"
    ],
    "message": "Fix for bug #72790 and bug #72799\n\n(cherry picked from commit a14fdb9746262549bbbb96abb87338bacd147e1b)\n\nConflicts:\n\text/wddx/wddx.c",
    "before_after_code_files": [
      "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
      "ext/wddx/tests/bug72799.phpt||ext/wddx/tests/bug72799.phpt",
      "ext/wddx/wddx.c||ext/wddx/wddx.c"
    ]
  },
  "patch_diff": {
    "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt": [
      "File: ext/wddx/tests/bug72790.phpt -> ext/wddx/tests/bug72790.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug 72790: wddx_deserialize null dereference with invalid xml",
      "3: --SKIPIF--",
      "4: <?php",
      "5: if (!extension_loaded('wddx')) {",
      "6:     die('skip. wddx not available');",
      "7: }",
      "8: ?>",
      "9: --FILE--",
      "10: <?php",
      "12: $xml = <<< XML",
      "13: <?xml version='1.0' ?>",
      "14: <!DOCTYPE wddxPacket SYSTEM 'wddx_0100.dtd'>",
      "15: <wddxPacket version='1.0'>",
      "16:         |array>",
      "17:                 <var name=\"XXXX\">",
      "18:                         <boolean value=\"this\">",
      "19:                         </boolean>",
      "20:                 </var>",
      "21:                 <var name=\"YYYY\">",
      "22:                         <var name=\"UUUU\">",
      "23:                                 <var name=\"EZEZ\">",
      "24:                                 </var>",
      "25:                         </var>",
      "26:                 </var>",
      "27:         </array>",
      "28: </wddxPacket>",
      "29: XML;",
      "31: $array = wddx_deserialize($xml);",
      "32: var_dump($array);",
      "33: ?>",
      "34: --EXPECT--",
      "35: NULL",
      "",
      "---------------"
    ],
    "ext/wddx/tests/bug72799.phpt||ext/wddx/tests/bug72799.phpt": [
      "File: ext/wddx/tests/bug72799.phpt -> ext/wddx/tests/bug72799.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #72799: wddx_deserialize null dereference in php_wddx_pop_element",
      "3: --SKIPIF--",
      "4: <?php",
      "5: if (!extension_loaded('wddx')) {",
      "6:     die('skip. wddx not available');",
      "7: }",
      "8: ?>",
      "9: --FILE--",
      "10: <?php",
      "12: $xml = <<<XML",
      "13: <?xml version='1.0'?>",
      "14: <!DOCTYPE wddxPacket SYSTEM 'wddx_0100.dtd'>",
      "15: <wddxPacket version=\"1.0\">",
      "16:     <var name=\"XXXX\">",
      "17:         <boolean value=\"1\">",
      "18:             <dateTime>1998-06-12T04:32:12+00</dateTime>",
      "19:         </boolean>",
      "20:     </var>",
      "21: </wddxPacket>",
      "22: XML;",
      "24: $array = wddx_deserialize($xml);",
      "25: var_dump($array);",
      "26: ?>",
      "27: --EXPECT--",
      "28: NULL",
      "",
      "---------------"
    ],
    "ext/wddx/wddx.c||ext/wddx/wddx.c": [
      "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "886:   if (Z_TYPE(ent1->data) == IS_UNDEF) {",
      "887:    if (stack->top > 1) {",
      "888:     stack->top--;",
      "889:    } else {",
      "890:     stack->done = 1;",
      "891:    }",
      "893:    return;",
      "894:   }",
      "",
      "[Removed Lines]",
      "892:    efree(ent1);",
      "",
      "[Added Lines]",
      "889:     efree(ent1);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9e1bc792df55712850b705d2d1379742a37c7c4a",
      "candidate_info": {
        "commit_hash": "9e1bc792df55712850b705d2d1379742a37c7c4a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/9e1bc792df55712850b705d2d1379742a37c7c4a",
        "files": [
          "ext/pdo/pdo_stmt.c",
          "ext/wddx/tests/bug45901.phpt",
          "ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug73331.phpt",
          "ext/wddx/wddx.c"
        ],
        "message": "Fix bug #73331 - do not try to serialize/unserialize objects wddx can not handle\n\nProper soltion would be to call serialize/unserialize and deal with the result,\nbut this requires more work that should be done by wddx maintainer (not me).\n\n(cherry picked from commit 6045de69c7dedcba3eadf7c4bba424b19c81d00d)\n\nConflicts:\n\text/wddx/wddx.c\n\n(cherry picked from commit 8c67460a10865f53435c705d08bbc2d60a49f781)",
        "before_after_code_files": [
          "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
          "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
          "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
          "ext/wddx/wddx.c||ext/wddx/wddx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ],
          "candidate": [
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c": [
          "File: ext/pdo/pdo_stmt.c -> ext/pdo/pdo_stmt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2300:  pdo_row_ce->create_object = pdo_row_new;",
          "2301:  pdo_row_ce->serialize = pdo_row_serialize;",
          "2302: }",
          "2304: PDO_API void php_pdo_free_statement(pdo_stmt_t *stmt)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2302:  pdo_row_ce->unserialize = zend_class_unserialize_deny;",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt": [
          "File: ext/wddx/tests/bug45901.phpt -> ext/wddx/tests/bug45901.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: echo \"DONE\";",
          "15: ?>",
          "16: --EXPECTF--",
          "18: DONE",
          "",
          "[Removed Lines]",
          "17: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data><struct><var name='php_class_name'><string>SimpleXMLElement</string></var><var name='test'><struct><var name='php_class_name'><string>SimpleXMLElement</string></var></struct></var></struct></data></wddxPacket>",
          "",
          "[Added Lines]",
          "18: Warning: wddx_serialize_value(): Class SimpleXMLElement can not be serialized in %sbug45901.php on line %d",
          "19: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data></data></wddxPacket>",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt": [
          "File: ext/wddx/tests/bug72790.phpt -> ext/wddx/tests/bug72790.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: --TEST--",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded('wddx')) {",
          "",
          "[Removed Lines]",
          "2: Bug 72790: wddx_deserialize null dereference with invalid xml",
          "",
          "[Added Lines]",
          "2: Bug #72790: wddx_deserialize null dereference with invalid xml",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt": [
          "File: ext/wddx/tests/bug73331.phpt -> ext/wddx/tests/bug73331.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73331 (NULL Pointer Dereference in WDDX Packet Deserialization with PDORow)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"wddx\") || !extension_loaded(\"pdo\")) print \"skip\"; ?>",
          "5: --FILE--",
          "6: <?php",
          "8: $wddx = \"<wddxPacket version='1.0'><header/><data><struct><var name='php_class_name'><string>PDORow</string></var></struct></data></wddxPacket>\";",
          "9: var_dump(wddx_deserialize($wddx));",
          "10: ?>",
          "11: --EXPECTF--",
          "13: Warning: wddx_deserialize(): Class pdorow can not be unserialized in %s73331.php on line %d",
          "14: NULL",
          "",
          "---------------"
        ],
        "ext/wddx/wddx.c||ext/wddx/wddx.c": [
          "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "453:  zend_ulong idx;",
          "454:  char tmp_buf[WDDX_BUF_LEN];",
          "455:  HashTable *objhash, *sleephash;",
          "457:  ZVAL_STRING(&fname, \"__sleep\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "456:  zend_class_entry *ce;",
          "457:  PHP_CLASS_ATTRIBUTES;",
          "459:  PHP_SET_CLASS_ATTRIBUTES(obj);",
          "460:  ce = Z_OBJCE_P(obj);",
          "461:  if (!ce || ce->serialize || ce->unserialize) {",
          "462:   php_error_docref(NULL, E_WARNING, \"Class %s can not be serialized\", ZSTR_VAL(class_name));",
          "463:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "464:   return;",
          "465:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "473:    php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
          "474:    php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
          "478:    objhash = Z_OBJPROP_P(obj);",
          "480:    ZEND_HASH_FOREACH_VAL(sleephash, varname) {",
          "",
          "[Removed Lines]",
          "476:    PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "491:    php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "492:   }",
          "493:  } else {",
          "498:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_S);",
          "499:   snprintf(tmp_buf, WDDX_BUF_LEN, WDDX_VAR_S, PHP_CLASS_NAME_VAR);",
          "",
          "[Removed Lines]",
          "494:   PHP_CLASS_ATTRIBUTES;",
          "496:   PHP_SET_CLASS_ATTRIBUTES(obj);",
          "",
          "[Added Lines]",
          "502:   uint key_len;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "503:   php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
          "504:   php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
          "508:   objhash = Z_OBJPROP_P(obj);",
          "509:   ZEND_HASH_FOREACH_KEY_VAL(objhash, idx, key, ent) {",
          "510:    if (ent == obj) {",
          "",
          "[Removed Lines]",
          "506:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "528:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "529:  }",
          "531:  zval_ptr_dtor(&fname);",
          "532:  zval_ptr_dtor(&retval);",
          "533: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "535:  PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "947:        pce = PHP_IC_ENTRY;",
          "948:       }",
          "969:       zval_ptr_dtor(&ent1->data);",
          "",
          "[Removed Lines]",
          "951:       object_init_ex(&obj, pce);",
          "954:       zend_hash_merge(Z_OBJPROP(obj),",
          "955:           Z_ARRVAL(ent2->data),",
          "956:           zval_add_ref, 0);",
          "958:       if (incomplete_class) {",
          "959:        php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));",
          "960:       }",
          "963:       zval_ptr_dtor(&ent2->data);",
          "966:       ZVAL_COPY_VALUE(&ent2->data, &obj);",
          "",
          "[Added Lines]",
          "956:       if (pce != PHP_IC_ENTRY && (pce->serialize || pce->unserialize)) {",
          "957:        ZVAL_UNDEF(&ent2->data);",
          "958:        php_error_docref(NULL, E_WARNING, \"Class %s can not be unserialized\", Z_STRVAL(ent1->data));",
          "959:       } else {",
          "961:        object_init_ex(&obj, pce);",
          "964:        zend_hash_merge(Z_OBJPROP(obj),",
          "965:            Z_ARRVAL(ent2->data),",
          "966:            zval_add_ref, 0);",
          "968:        if (incomplete_class) {",
          "969:         php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));",
          "970:        }",
          "973:        zval_ptr_dtor(&ent2->data);",
          "976:        ZVAL_COPY_VALUE(&ent2->data, &obj);",
          "977:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c67460a10865f53435c705d08bbc2d60a49f781",
      "candidate_info": {
        "commit_hash": "8c67460a10865f53435c705d08bbc2d60a49f781",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/8c67460a10865f53435c705d08bbc2d60a49f781",
        "files": [
          "ext/pdo/pdo_stmt.c",
          "ext/wddx/tests/bug45901.phpt",
          "ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug73331.phpt",
          "ext/wddx/wddx.c"
        ],
        "message": "Fix bug #73331 - do not try to serialize/unserialize objects wddx can not handle\n\nProper soltion would be to call serialize/unserialize and deal with the result,\nbut this requires more work that should be done by wddx maintainer (not me).\n\n(cherry picked from commit 6045de69c7dedcba3eadf7c4bba424b19c81d00d)\n\nConflicts:\n\text/wddx/wddx.c",
        "before_after_code_files": [
          "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
          "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
          "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
          "ext/wddx/wddx.c||ext/wddx/wddx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ],
          "candidate": [
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c": [
          "File: ext/pdo/pdo_stmt.c -> ext/pdo/pdo_stmt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2300:  pdo_row_ce->create_object = pdo_row_new;",
          "2301:  pdo_row_ce->serialize = pdo_row_serialize;",
          "2302: }",
          "2304: PDO_API void php_pdo_free_statement(pdo_stmt_t *stmt)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2302:  pdo_row_ce->unserialize = zend_class_unserialize_deny;",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt": [
          "File: ext/wddx/tests/bug45901.phpt -> ext/wddx/tests/bug45901.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: echo \"DONE\";",
          "15: ?>",
          "16: --EXPECTF--",
          "18: DONE",
          "",
          "[Removed Lines]",
          "17: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data><struct><var name='php_class_name'><string>SimpleXMLElement</string></var><var name='test'><struct><var name='php_class_name'><string>SimpleXMLElement</string></var></struct></var></struct></data></wddxPacket>",
          "",
          "[Added Lines]",
          "18: Warning: wddx_serialize_value(): Class SimpleXMLElement can not be serialized in %sbug45901.php on line %d",
          "19: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data></data></wddxPacket>",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt": [
          "File: ext/wddx/tests/bug72790.phpt -> ext/wddx/tests/bug72790.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: --TEST--",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded('wddx')) {",
          "",
          "[Removed Lines]",
          "2: Bug 72790: wddx_deserialize null dereference with invalid xml",
          "",
          "[Added Lines]",
          "2: Bug #72790: wddx_deserialize null dereference with invalid xml",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt": [
          "File: ext/wddx/tests/bug73331.phpt -> ext/wddx/tests/bug73331.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73331 (NULL Pointer Dereference in WDDX Packet Deserialization with PDORow)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"wddx\") || !extension_loaded(\"pdo\")) print \"skip\"; ?>",
          "5: --FILE--",
          "6: <?php",
          "8: $wddx = \"<wddxPacket version='1.0'><header/><data><struct><var name='php_class_name'><string>PDORow</string></var></struct></data></wddxPacket>\";",
          "9: var_dump(wddx_deserialize($wddx));",
          "10: ?>",
          "11: --EXPECTF--",
          "13: Warning: wddx_deserialize(): Class pdorow can not be unserialized in %s73331.php on line %d",
          "14: NULL",
          "",
          "---------------"
        ],
        "ext/wddx/wddx.c||ext/wddx/wddx.c": [
          "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "453:  zend_ulong idx;",
          "454:  char tmp_buf[WDDX_BUF_LEN];",
          "455:  HashTable *objhash, *sleephash;",
          "457:  ZVAL_STRING(&fname, \"__sleep\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "456:  zend_class_entry *ce;",
          "457:  PHP_CLASS_ATTRIBUTES;",
          "459:  PHP_SET_CLASS_ATTRIBUTES(obj);",
          "460:  ce = Z_OBJCE_P(obj);",
          "461:  if (!ce || ce->serialize || ce->unserialize) {",
          "462:   php_error_docref(NULL, E_WARNING, \"Class %s can not be serialized\", ZSTR_VAL(class_name));",
          "463:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "464:   return;",
          "465:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "473:    php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
          "474:    php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
          "478:    objhash = Z_OBJPROP_P(obj);",
          "480:    ZEND_HASH_FOREACH_VAL(sleephash, varname) {",
          "",
          "[Removed Lines]",
          "476:    PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "491:    php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "492:   }",
          "493:  } else {",
          "498:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_S);",
          "499:   snprintf(tmp_buf, WDDX_BUF_LEN, WDDX_VAR_S, PHP_CLASS_NAME_VAR);",
          "",
          "[Removed Lines]",
          "494:   PHP_CLASS_ATTRIBUTES;",
          "496:   PHP_SET_CLASS_ATTRIBUTES(obj);",
          "",
          "[Added Lines]",
          "502:   uint key_len;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "503:   php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
          "504:   php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
          "508:   objhash = Z_OBJPROP_P(obj);",
          "509:   ZEND_HASH_FOREACH_KEY_VAL(objhash, idx, key, ent) {",
          "510:    if (ent == obj) {",
          "",
          "[Removed Lines]",
          "506:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "528:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "529:  }",
          "531:  zval_ptr_dtor(&fname);",
          "532:  zval_ptr_dtor(&retval);",
          "533: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "535:  PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "947:        pce = PHP_IC_ENTRY;",
          "948:       }",
          "969:       zval_ptr_dtor(&ent1->data);",
          "",
          "[Removed Lines]",
          "951:       object_init_ex(&obj, pce);",
          "954:       zend_hash_merge(Z_OBJPROP(obj),",
          "955:           Z_ARRVAL(ent2->data),",
          "956:           zval_add_ref, 0);",
          "958:       if (incomplete_class) {",
          "959:        php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));",
          "960:       }",
          "963:       zval_ptr_dtor(&ent2->data);",
          "966:       ZVAL_COPY_VALUE(&ent2->data, &obj);",
          "",
          "[Added Lines]",
          "956:       if (pce != PHP_IC_ENTRY && (pce->serialize || pce->unserialize)) {",
          "957:        ZVAL_UNDEF(&ent2->data);",
          "958:        php_error_docref(NULL, E_WARNING, \"Class %s can not be unserialized\", Z_STRVAL(ent1->data));",
          "959:       } else {",
          "961:        object_init_ex(&obj, pce);",
          "964:        zend_hash_merge(Z_OBJPROP(obj),",
          "965:            Z_ARRVAL(ent2->data),",
          "966:            zval_add_ref, 0);",
          "968:        if (incomplete_class) {",
          "969:         php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));",
          "970:        }",
          "973:        zval_ptr_dtor(&ent2->data);",
          "976:        ZVAL_COPY_VALUE(&ent2->data, &obj);",
          "977:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f6078e4a5c67733bfdbd20bb2706501ac56a344",
      "candidate_info": {
        "commit_hash": "1f6078e4a5c67733bfdbd20bb2706501ac56a344",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/1f6078e4a5c67733bfdbd20bb2706501ac56a344",
        "files": [
          "ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug72799.phpt",
          "ext/wddx/wddx.c"
        ],
        "message": "Fix for bug #72790 and bug #72799",
        "before_after_code_files": [
          "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug72799.phpt||ext/wddx/tests/bug72799.phpt",
          "ext/wddx/wddx.c||ext/wddx/wddx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/tests/bug72799.phpt||ext/wddx/tests/bug72799.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ],
          "candidate": [
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/tests/bug72799.phpt||ext/wddx/tests/bug72799.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt": [
          "File: ext/wddx/tests/bug72790.phpt -> ext/wddx/tests/bug72790.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug 72790: wddx_deserialize null dereference with invalid xml",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded('wddx')) {",
          "6:     die('skip. wddx not available');",
          "7: }",
          "8: ?>",
          "9: --FILE--",
          "10: <?php",
          "12: $xml = <<< XML",
          "13: <?xml version='1.0' ?>",
          "14: <!DOCTYPE wddxPacket SYSTEM 'wddx_0100.dtd'>",
          "15: <wddxPacket version='1.0'>",
          "16:         |array>",
          "17:                 <var name=\"XXXX\">",
          "18:                         <boolean value=\"this\">",
          "19:                         </boolean>",
          "20:                 </var>",
          "21:                 <var name=\"YYYY\">",
          "22:                         <var name=\"UUUU\">",
          "23:                                 <var name=\"EZEZ\">",
          "24:                                 </var>",
          "25:                         </var>",
          "26:                 </var>",
          "27:         </array>",
          "28: </wddxPacket>",
          "29: XML;",
          "31: $array = wddx_deserialize($xml);",
          "32: var_dump($array);",
          "33: ?>",
          "34: --EXPECT--",
          "35: NULL",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug72799.phpt||ext/wddx/tests/bug72799.phpt": [
          "File: ext/wddx/tests/bug72799.phpt -> ext/wddx/tests/bug72799.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #72799: wddx_deserialize null dereference in php_wddx_pop_element",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded('wddx')) {",
          "6:     die('skip. wddx not available');",
          "7: }",
          "8: ?>",
          "9: --FILE--",
          "10: <?php",
          "12: $xml = <<<XML",
          "13: <?xml version='1.0'?>",
          "14: <!DOCTYPE wddxPacket SYSTEM 'wddx_0100.dtd'>",
          "15: <wddxPacket version=\"1.0\">",
          "16:     <var name=\"XXXX\">",
          "17:         <boolean value=\"1\">",
          "18:             <dateTime>1998-06-12T04:32:12+00</dateTime>",
          "19:         </boolean>",
          "20:     </var>",
          "21: </wddxPacket>",
          "22: XML;",
          "24: $array = wddx_deserialize($xml);",
          "25: var_dump($array);",
          "26: ?>",
          "27: --EXPECT--",
          "28: NULL",
          "",
          "---------------"
        ],
        "ext/wddx/wddx.c||ext/wddx/wddx.c": [
          "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "946:   if (!ent1->data) {",
          "947:    if (stack->top > 1) {",
          "948:     stack->top--;",
          "949:    } else {",
          "950:     stack->done = 1;",
          "951:    }",
          "953:    return;",
          "954:   }",
          "",
          "[Removed Lines]",
          "952:    efree(ent1);",
          "",
          "[Added Lines]",
          "949:     efree(ent1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "988:    wddx_stack_top(stack, (void**)&ent2);",
          "992:     zval_ptr_dtor(&ent1->data);",
          "993:     efree(ent1);",
          "994:     return;",
          "",
          "[Removed Lines]",
          "991:    if (ent2->type == ST_FIELD && ent2->data == NULL) {",
          "",
          "[Added Lines]",
          "991:    if (ent2->data == NULL) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1180:  if (stack.top == 1) {",
          "1181:   wddx_stack_top(&stack, (void**)&ent);",
          "1185:  } else {",
          "1186:   retval = FAILURE;",
          "1187:  }",
          "",
          "[Removed Lines]",
          "1183:   zval_copy_ctor(return_value);",
          "1184:   retval = SUCCESS;",
          "",
          "[Added Lines]",
          "1182:   if(ent->data == NULL) {",
          "1183:    retval = FAILURE;",
          "1184:   } else {",
          "1186:    zval_copy_ctor(return_value);",
          "1187:    retval = SUCCESS;",
          "1188:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}