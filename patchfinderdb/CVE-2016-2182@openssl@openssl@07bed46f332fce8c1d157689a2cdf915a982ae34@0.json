{
  "cve_id": "CVE-2016-2182",
  "cve_desc": "The BN_bn2dec function in crypto/bn/bn_print.c in OpenSSL before 1.1.0 does not properly validate division results, which allows remote attackers to cause a denial of service (out-of-bounds write and application crash) or possibly have unspecified other impact via unknown vectors.",
  "repo": "openssl/openssl",
  "patch_hash": "07bed46f332fce8c1d157689a2cdf915a982ae34",
  "patch_info": {
    "commit_hash": "07bed46f332fce8c1d157689a2cdf915a982ae34",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/07bed46f332fce8c1d157689a2cdf915a982ae34",
    "files": [
      "crypto/bn/bn_print.c"
    ],
    "message": "Check for errors in BN_bn2dec()\n\nIf an oversize BIGNUM is presented to BN_bn2dec() it can cause\nBN_div_word() to fail and not reduce the value of 't' resulting\nin OOB writes to the bn_data buffer and eventually crashing.\n\nFix by checking return value of BN_div_word() and checking writes\ndon't overflow buffer.\n\nThanks to Shi Lei for reporting this bug.\n\nCVE-2016-2182\n\nReviewed-by: Tim Hudson <tjh@openssl.org>",
    "before_after_code_files": [
      "crypto/bn/bn_print.c||crypto/bn/bn_print.c"
    ]
  },
  "patch_diff": {
    "crypto/bn/bn_print.c||crypto/bn/bn_print.c": [
      "File: crypto/bn/bn_print.c -> crypto/bn/bn_print.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "62:     char *p;",
      "63:     BIGNUM *t = NULL;",
      "64:     BN_ULONG *bn_data = NULL, *lp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "65:     int bn_data_num;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "72:     i = BN_num_bits(a) * 3;",
      "73:     num = (i / 10 + i / 1000 + 1) + 1;",
      "75:     buf = OPENSSL_malloc(num + 3);",
      "76:     if ((buf == NULL) || (bn_data == NULL)) {",
      "77:         BNerr(BN_F_BN_BN2DEC, ERR_R_MALLOC_FAILURE);",
      "",
      "[Removed Lines]",
      "74:     bn_data = OPENSSL_malloc((num / BN_DEC_NUM + 1) * sizeof(BN_ULONG));",
      "",
      "[Added Lines]",
      "75:     bn_data_num = num / BN_DEC_NUM + 1;",
      "76:     bn_data = OPENSSL_malloc(bn_data_num * sizeof(BN_ULONG));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "93:         i = 0;",
      "94:         while (!BN_is_zero(t)) {",
      "96:             lp++;",
      "97:         }",
      "98:         lp--;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "98:             if (*lp == (BN_ULONG)-1)",
      "99:                 goto err;",
      "101:             if (lp - bn_data >= bn_data_num)",
      "102:                 goto err;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e36f27ddb80a48e579783bc29fb3758988342b71",
      "candidate_info": {
        "commit_hash": "e36f27ddb80a48e579783bc29fb3758988342b71",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e36f27ddb80a48e579783bc29fb3758988342b71",
        "files": [
          "crypto/bn/bn_print.c"
        ],
        "message": "Check for errors in BN_bn2dec()\n\nIf an oversize BIGNUM is presented to BN_bn2dec() it can cause\nBN_div_word() to fail and not reduce the value of 't' resulting\nin OOB writes to the bn_data buffer and eventually crashing.\n\nFix by checking return value of BN_div_word() and checking writes\ndon't overflow buffer.\n\nThanks to Shi Lei for reporting this bug.\n\nCVE-2016-2182\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(cherry picked from commit 07bed46f332fce8c1d157689a2cdf915a982ae34)\n\nConflicts:\n\tcrypto/bn/bn_print.c",
        "before_after_code_files": [
          "crypto/bn/bn_print.c||crypto/bn/bn_print.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/bn/bn_print.c||crypto/bn/bn_print.c"
          ],
          "candidate": [
            "crypto/bn/bn_print.c||crypto/bn/bn_print.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_print.c||crypto/bn/bn_print.c": [
          "File: crypto/bn/bn_print.c -> crypto/bn/bn_print.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:     char *p;",
          "112:     BIGNUM *t = NULL;",
          "113:     BN_ULONG *bn_data = NULL, *lp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114:     int bn_data_num;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:     i = BN_num_bits(a) * 3;",
          "122:     num = (i / 10 + i / 1000 + 1) + 1;",
          "126:     if ((buf == NULL) || (bn_data == NULL)) {",
          "127:         BNerr(BN_F_BN_BN2DEC, ERR_R_MALLOC_FAILURE);",
          "128:         goto err;",
          "",
          "[Removed Lines]",
          "123:     bn_data =",
          "124:         (BN_ULONG *)OPENSSL_malloc((num / BN_DEC_NUM + 1) * sizeof(BN_ULONG));",
          "125:     buf = (char *)OPENSSL_malloc(num + 3);",
          "",
          "[Added Lines]",
          "124:     bn_data_num = num / BN_DEC_NUM + 1;",
          "125:     bn_data = OPENSSL_malloc(bn_data_num * sizeof(BN_ULONG));",
          "126:     buf = OPENSSL_malloc(num + 3);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "143:         i = 0;",
          "144:         while (!BN_is_zero(t)) {",
          "146:             lp++;",
          "147:         }",
          "148:         lp--;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:             if (*lp == (BN_ULONG)-1)",
          "148:                 goto err;",
          "150:             if (lp - bn_data >= bn_data_num)",
          "151:                 goto err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "28a89639da50b1caed4ff3015508f23173bf3e49",
      "candidate_info": {
        "commit_hash": "28a89639da50b1caed4ff3015508f23173bf3e49",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/28a89639da50b1caed4ff3015508f23173bf3e49",
        "files": [
          "crypto/bn/bn_print.c"
        ],
        "message": "Check for errors in BN_bn2dec()\n\nIf an oversize BIGNUM is presented to BN_bn2dec() it can cause\nBN_div_word() to fail and not reduce the value of 't' resulting\nin OOB writes to the bn_data buffer and eventually crashing.\n\nFix by checking return value of BN_div_word() and checking writes\ndon't overflow buffer.\n\nThanks to Shi Lei for reporting this bug.\n\nCVE-2016-2182\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(cherry picked from commit 07bed46f332fce8c1d157689a2cdf915a982ae34)\n\nConflicts:\n\tcrypto/bn/bn_print.c",
        "before_after_code_files": [
          "crypto/bn/bn_print.c||crypto/bn/bn_print.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/bn/bn_print.c||crypto/bn/bn_print.c"
          ],
          "candidate": [
            "crypto/bn/bn_print.c||crypto/bn/bn_print.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_print.c||crypto/bn/bn_print.c": [
          "File: crypto/bn/bn_print.c -> crypto/bn/bn_print.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:     char *p;",
          "112:     BIGNUM *t = NULL;",
          "113:     BN_ULONG *bn_data = NULL, *lp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114:     int bn_data_num;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:     i = BN_num_bits(a) * 3;",
          "122:     num = (i / 10 + i / 1000 + 1) + 1;",
          "126:     if ((buf == NULL) || (bn_data == NULL)) {",
          "127:         BNerr(BN_F_BN_BN2DEC, ERR_R_MALLOC_FAILURE);",
          "128:         goto err;",
          "",
          "[Removed Lines]",
          "123:     bn_data =",
          "124:         (BN_ULONG *)OPENSSL_malloc((num / BN_DEC_NUM + 1) * sizeof(BN_ULONG));",
          "125:     buf = (char *)OPENSSL_malloc(num + 3);",
          "",
          "[Added Lines]",
          "124:     bn_data_num = num / BN_DEC_NUM + 1;",
          "125:     bn_data = OPENSSL_malloc(bn_data_num * sizeof(BN_ULONG));",
          "126:     buf = OPENSSL_malloc(num + 3);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "143:         i = 0;",
          "144:         while (!BN_is_zero(t)) {",
          "146:             lp++;",
          "147:         }",
          "148:         lp--;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:             if (*lp == (BN_ULONG)-1)",
          "148:                 goto err;",
          "150:             if (lp - bn_data >= bn_data_num)",
          "151:                 goto err;",
          "",
          "---------------"
        ]
      }
    }
  ]
}