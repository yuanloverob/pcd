{
  "cve_id": "CVE-2021-40153",
  "cve_desc": "squashfs_opendir in unsquash-1.c in Squashfs-Tools 4.5 stores the filename in the directory entry; this is then used by unsquashfs to create the new file during the unsquash. The filename is not validated for traversal outside of the destination directory, and thus allows writing to locations outside of the destination.",
  "repo": "plougher/squashfs-tools",
  "patch_hash": "79b5a555058eef4e1e7ff220c344d39f8cd09646",
  "patch_info": {
    "commit_hash": "79b5a555058eef4e1e7ff220c344d39f8cd09646",
    "repo": "plougher/squashfs-tools",
    "commit_url": "https://github.com/plougher/squashfs-tools/commit/79b5a555058eef4e1e7ff220c344d39f8cd09646",
    "files": [
      "squashfs-tools/Makefile",
      "squashfs-tools/unsquash-1.c",
      "squashfs-tools/unsquash-1234.c",
      "squashfs-tools/unsquash-2.c",
      "squashfs-tools/unsquash-3.c",
      "squashfs-tools/unsquash-4.c",
      "squashfs-tools/unsquashfs.c",
      "squashfs-tools/unsquashfs.h"
    ],
    "message": "Unsquashfs: fix write outside destination directory exploit\n\nAn issue on Github (https://github.com/plougher/squashfs-tools/issues/72)\nshows how some specially crafted Squashfs filesystems containing\ninvalid file names (with '/' and ..) can cause Unsquashfs to write\nfiles outside of the destination directory.\n\nThis commit fixes this exploit by checking all names for\nvalidity.\n\nIn doing so I have also added checks for '.' and for names that\nare shorter than they should be (names in the file system should\nnot have '\\0' terminators).\n\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>",
    "before_after_code_files": [
      "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
      "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c",
      "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
      "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c",
      "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c",
      "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c",
      "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
    ]
  },
  "patch_diff": {
    "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c": [
      "File: squashfs-tools/unsquash-1.c -> squashfs-tools/unsquash-1.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "285:    memcpy(dire->name, directory_table + bytes,",
      "286:     dire->size + 1);",
      "287:    dire->name[dire->size + 1] = '\\0';",
      "288:    TRACE(\"squashfs_opendir: directory entry %s, inode \"",
      "289:     \"%d:%d, type %d\\n\", dire->name,",
      "290:     dirh.start_block, dire->offset, dire->type);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "290:    if(check_name(dire->name, dire->size + 1) == FALSE) {",
      "291:     ERROR(\"File system corrupted: invalid characters in name\\n\");",
      "292:     goto corrupted;",
      "293:    }",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c": [
      "File: squashfs-tools/unsquash-1234.c -> squashfs-tools/unsquash-1234.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: #define TRUE 1",
      "29: #define FALSE 0",
      "37: int check_name(char *name, int size)",
      "38: {",
      "39:  char *start = name;",
      "41:  if(name[0] == '.') {",
      "42:   if(name[1] == '.')",
      "43:    name++;",
      "44:   if(name[1] == '/' || name[1] == '\\0')",
      "45:    return FALSE;",
      "46:  }",
      "48:  while(name[0] != '/' && name[0] != '\\0')",
      "49:   name ++;",
      "51:  if(name[0] == '/')",
      "52:   return FALSE;",
      "54:  if((name - start) != size)",
      "55:   return FALSE;",
      "57:  return TRUE;",
      "58: }",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c": [
      "File: squashfs-tools/unsquash-2.c -> squashfs-tools/unsquash-2.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "386:    memcpy(dire->name, directory_table + bytes,",
      "387:     dire->size + 1);",
      "388:    dire->name[dire->size + 1] = '\\0';",
      "389:    TRACE(\"squashfs_opendir: directory entry %s, inode \"",
      "390:     \"%d:%d, type %d\\n\", dire->name,",
      "391:     dirh.start_block, dire->offset, dire->type);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "391:    if(check_name(dire->name, dire->size + 1) == FALSE) {",
      "392:     ERROR(\"File system corrupted: invalid characters in name\\n\");",
      "393:     goto corrupted;",
      "394:    }",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c": [
      "File: squashfs-tools/unsquash-3.c -> squashfs-tools/unsquash-3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "413:    memcpy(dire->name, directory_table + bytes,",
      "414:     dire->size + 1);",
      "415:    dire->name[dire->size + 1] = '\\0';",
      "416:    TRACE(\"squashfs_opendir: directory entry %s, inode \"",
      "417:     \"%d:%d, type %d\\n\", dire->name,",
      "418:     dirh.start_block, dire->offset, dire->type);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "418:    if(check_name(dire->name, dire->size + 1) == FALSE) {",
      "419:     ERROR(\"File system corrupted: invalid characters in name\\n\");",
      "420:     goto corrupted;",
      "421:    }",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c": [
      "File: squashfs-tools/unsquash-4.c -> squashfs-tools/unsquash-4.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "349:    memcpy(dire->name, directory_table + bytes,",
      "350:     dire->size + 1);",
      "351:    dire->name[dire->size + 1] = '\\0';",
      "352:    TRACE(\"squashfs_opendir: directory entry %s, inode \"",
      "353:     \"%d:%d, type %d\\n\", dire->name,",
      "354:     dirh.start_block, dire->offset, dire->type);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "354:    if(check_name(dire->name, dire->size + 1) == FALSE) {",
      "355:     ERROR(\"File system corrupted: invalid characters in name\\n\");",
      "356:     goto corrupted;",
      "357:    }",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c": [
      "File: squashfs-tools/unsquashfs.c -> squashfs-tools/unsquashfs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2672: #define VERSION() \\",
      "2674:  printf(\"copyright (C) 2021 Phillip Lougher \"\\",
      "2675:   \"<phillip@squashfs.org.uk>\\n\\n\");\\",
      "2676:      printf(\"This program is free software; you can redistribute it and/or\"\\",
      "",
      "[Removed Lines]",
      "2673:  printf(\"unsquashfs version 4.4-git (2021/01/09)\\n\");\\",
      "",
      "[Added Lines]",
      "2673:  printf(\"unsquashfs version 4.4-git (2021/01/17)\\n\");\\",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h": [
      "File: squashfs-tools/unsquashfs.h -> squashfs-tools/unsquashfs.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "263: extern long long *alloc_index_table(int);",
      "264: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "266: extern int check_name(char *, int);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e0485802ec72996c20026da320650d8362f555bd",
      "candidate_info": {
        "commit_hash": "e0485802ec72996c20026da320650d8362f555bd",
        "repo": "plougher/squashfs-tools",
        "commit_url": "https://github.com/plougher/squashfs-tools/commit/e0485802ec72996c20026da320650d8362f555bd",
        "files": [
          "squashfs-tools/Makefile",
          "squashfs-tools/unsquash-1.c",
          "squashfs-tools/unsquash-12.c",
          "squashfs-tools/unsquash-1234.c",
          "squashfs-tools/unsquash-2.c",
          "squashfs-tools/unsquash-3.c",
          "squashfs-tools/unsquash-4.c",
          "squashfs-tools/unsquashfs.h"
        ],
        "message": "Unsquashfs: additional write outside destination directory exploit fix\n\nAn issue on github (https://github.com/plougher/squashfs-tools/issues/72)\nshowed how some specially crafted Squashfs filesystems containing\ninvalid file names (with '/' and '..') can cause Unsquashfs to write\nfiles outside of the destination directory.\n\nSince then it has been shown that specially crafted Squashfs filesystems\nthat contain a symbolic link pointing outside of the destination directory,\ncoupled with an identically named file within the same directory, can\ncause Unsquashfs to write files outside of the destination directory.\n\nSpecifically the symbolic link produces a pathname pointing outside\nof the destination directory, which is then followed when writing the\nduplicate identically named file within the directory.\n\nThis commit fixes this exploit by explictly checking for duplicate\nfilenames within a directory.  As directories in v2.1, v3.x, and v4.0\nfilesystems are sorted, this is achieved by checking for consecutively\nidentical filenames.  Additionally directories are checked to\nensure they are sorted, to avoid attempts to evade the duplicate\ncheck.\n\nVersion 1.x and 2.0 filesystems (where the directories were unsorted)\nare sorted and then the above duplicate filename check is applied.\n\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>",
        "before_after_code_files": [
          "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
          "squashfs-tools/unsquash-12.c||squashfs-tools/unsquash-12.c",
          "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c",
          "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
          "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c",
          "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c",
          "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
            "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c",
            "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
            "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c",
            "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c",
            "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
          ],
          "candidate": [
            "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
            "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c",
            "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
            "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c",
            "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c",
            "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
          ]
        }
      },
      "candidate_diff": {
        "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c": [
          "File: squashfs-tools/unsquash-1.c -> squashfs-tools/unsquash-1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "370:   }",
          "371:  }",
          "373:  return dir;",
          "375: corrupted:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "374:  sort_directory(dir);",
          "375:  if(check_directory(dir) == FALSE) {",
          "376:   ERROR(\"File system corrupted: directory has duplicate names\\n\");",
          "377:   goto corrupted;",
          "378:  }",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-12.c||squashfs-tools/unsquash-12.c": [
          "File: squashfs-tools/unsquash-12.c -> squashfs-tools/unsquash-12.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include \"unsquashfs.h\"",
          "33: void sort_directory(struct dir *dir)",
          "34: {",
          "35:  struct dir_ent *cur, *l1, *l2, *next;",
          "36:  int len1, len2, stride = 1;",
          "38:  if(dir->dir_count < 2)",
          "39:   return;",
          "51:  do {",
          "61:   while(l2) {",
          "62:    l1 = l2;",
          "63:    for(len1 = 0; l2 && len1 < stride; len1 ++, l2 = l2->next);",
          "64:    len2 = stride;",
          "71:    while(len1 && l2 && len2) {",
          "72:     if(strcmp(l1->name, l2->name) <= 0) {",
          "73:      next = l1;",
          "74:      l1 = l1->next;",
          "75:      len1 --;",
          "76:     } else {",
          "77:      next = l2;",
          "78:      l2 = l2->next;",
          "79:      len2 --;",
          "80:     }",
          "82:     if(cur) {",
          "83:      cur->next = next;",
          "84:      cur = next;",
          "85:     } else",
          "86:      dir->dirs = cur = next;",
          "87:    }",
          "92:    for(; len1; len1 --, l1 = l1->next) {",
          "93:     if(cur) {",
          "94:      cur->next = l1;",
          "95:      cur = l1;",
          "96:     } else",
          "97:      dir->dirs = cur = l1;",
          "98:    }",
          "99:    for(; l2 && len2; len2 --, l2 = l2->next) {",
          "100:     if(cur) {",
          "101:      cur->next = l2;",
          "102:      cur = l2;",
          "103:     } else",
          "104:      dir->dirs = cur = l2;",
          "105:    }",
          "106:   }",
          "107:   cur->next = NULL;",
          "108:   stride = stride << 1;",
          "109:  } while(stride < dir->dir_count);",
          "110: }",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c": [
          "File: squashfs-tools/unsquash-1234.c -> squashfs-tools/unsquash-1234.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:  free(dir);",
          "74: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: int check_directory(struct dir *dir)",
          "83: {",
          "84:  int i;",
          "85:  struct dir_ent *ent;",
          "87:  if(dir->dir_count < 2)",
          "88:   return TRUE;",
          "90:  for(ent = dir->dirs, i = 0; i < dir->dir_count - 1; ent = ent->next, i++)",
          "91:   if(strcmp(ent->name, ent->next->name) >= 0)",
          "92:    return FALSE;",
          "94:  return TRUE;",
          "95: }",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c": [
          "File: squashfs-tools/unsquash-2.c -> squashfs-tools/unsquash-2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: static squashfs_fragment_entry_2 *fragment_table;",
          "30: static unsigned int *uid_table, *guid_table;",
          "31: static squashfs_operations ops;",
          "34: static void read_block_list(unsigned int *block_list, long long start,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: static int needs_sorting = FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "463:   }",
          "464:  }",
          "466:  return dir;",
          "468: corrupted:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "467:  if(needs_sorting)",
          "468:   sort_directory(dir);",
          "471:  if(check_directory(dir) == FALSE) {",
          "472:   if(needs_sorting)",
          "473:    ERROR(\"File system corrupted: directory has duplicate names\\n\");",
          "474:   else",
          "475:    ERROR(\"File system corrupted: directory has duplicate names or is unsorted\\n\");",
          "476:   goto corrupted;",
          "477:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "598:  comp = lookup_compressor(\"gzip\");",
          "599:  return TRUE;",
          "600: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "612:  if(sBlk_3->s_minor == 0)",
          "613:   needs_sorting = TRUE;",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c": [
          "File: squashfs-tools/unsquash-3.c -> squashfs-tools/unsquash-3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "497:   }",
          "498:  }",
          "500:  return dir;",
          "502: corrupted:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "501:  if(check_directory(dir) == FALSE) {",
          "502:   ERROR(\"File system corrupted: directory has duplicate names or is unsorted\\n\");",
          "503:   goto corrupted;",
          "504:  }",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c": [
          "File: squashfs-tools/unsquash-4.c -> squashfs-tools/unsquash-4.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "434:   }",
          "435:  }",
          "437:  return dir;",
          "439: corrupted:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "438:  if(check_directory(dir) == FALSE) {",
          "439:   ERROR(\"File system corrupted: directory has duplicate names or is unsorted\\n\");",
          "440:   goto corrupted;",
          "441:  }",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h": [
          "File: squashfs-tools/unsquashfs.h -> squashfs-tools/unsquashfs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "294: extern int check_name(char *, int);",
          "295: extern void squashfs_closedir(struct dir *);",
          "296: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "296: extern int check_directory(struct dir *);",
          "299: extern void sort_directory(struct dir *);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38fa0720526222827da44b3b6c3f7eb63e8f5c2f",
      "candidate_info": {
        "commit_hash": "38fa0720526222827da44b3b6c3f7eb63e8f5c2f",
        "repo": "plougher/squashfs-tools",
        "commit_url": "https://github.com/plougher/squashfs-tools/commit/38fa0720526222827da44b3b6c3f7eb63e8f5c2f",
        "files": [
          "squashfs-tools/mksquashfs.c",
          "squashfs-tools/unsquashfs.c"
        ],
        "message": "Use string concatenation for VERSION and DATE\n\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>",
        "before_after_code_files": [
          "squashfs-tools/mksquashfs.c||squashfs-tools/mksquashfs.c",
          "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
          ],
          "candidate": [
            "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
          ]
        }
      },
      "candidate_diff": {
        "squashfs-tools/mksquashfs.c||squashfs-tools/mksquashfs.c": [
          "File: squashfs-tools/mksquashfs.c -> squashfs-tools/mksquashfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5352: #define PRINT_VERSION() \\",
          "5354:  printf(\"copyright (C) 2021 Phillip Lougher \"\\",
          "5355:   \"<phillip@squashfs.org.uk>\\n\\n\"); \\",
          "5356:  printf(\"This program is free software; you can redistribute it and/or\"\\",
          "",
          "[Removed Lines]",
          "5353:  printf(\"mksquashfs version %s (%s)\\n\", VERSION, DATE);\\",
          "",
          "[Added Lines]",
          "5353:  printf(\"mksquashfs version \" VERSION \" (\" DATE \")\\n\");\\",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c": [
          "File: squashfs-tools/unsquashfs.c -> squashfs-tools/unsquashfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2672: #define PRINT_VERSION() \\",
          "2674:  printf(\"copyright (C) 2021 Phillip Lougher \"\\",
          "2675:   \"<phillip@squashfs.org.uk>\\n\\n\");\\",
          "2676:      printf(\"This program is free software; you can redistribute it and/or\"\\",
          "",
          "[Removed Lines]",
          "2673:  printf(\"unsquashfs version %s (%s)\\n\", VERSION, DATE);\\",
          "",
          "[Added Lines]",
          "2673:  printf(\"unsquashfs version \" VERSION \" (\" DATE \")\\n\");\\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d33039c66638abacf01e11904b7284788f6cf1f0",
      "candidate_info": {
        "commit_hash": "d33039c66638abacf01e11904b7284788f6cf1f0",
        "repo": "plougher/squashfs-tools",
        "commit_url": "https://github.com/plougher/squashfs-tools/commit/d33039c66638abacf01e11904b7284788f6cf1f0",
        "files": [
          ".gitattributes",
          "squashfs-tools/Makefile",
          "squashfs-tools/mksquashfs.c",
          "squashfs-tools/unsquashfs.c",
          "squashfs-tools/version.mk"
        ],
        "message": "Automatically generate Mksquashfs/Unsquashfs VERSION and DATE strings\n\nGet VERSION and DATE for Mksquashfs/Unsquashfs version strings.\n\nIf RELEASE_VERSION/RELEASE_DATE set, use them.\n\nIf not set, this is a development version, therefore\n\nIf this source has been exported by \"git archive\" use automatically\nexpanded strings.\n\nOtherwise ask git for the details from current HEAD.\n\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>",
        "before_after_code_files": [
          "squashfs-tools/mksquashfs.c||squashfs-tools/mksquashfs.c",
          "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c",
          "squashfs-tools/version.mk||squashfs-tools/version.mk"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
          ],
          "candidate": [
            "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
          ]
        }
      },
      "candidate_diff": {
        "squashfs-tools/mksquashfs.c||squashfs-tools/mksquashfs.c": [
          "File: squashfs-tools/mksquashfs.c -> squashfs-tools/mksquashfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5349: }",
          "5354:  printf(\"copyright (C) 2021 Phillip Lougher \"\\",
          "5355:   \"<phillip@squashfs.org.uk>\\n\\n\"); \\",
          "5356:  printf(\"This program is free software; you can redistribute it and/or\"\\",
          "",
          "[Removed Lines]",
          "5352: #define VERSION() \\",
          "5353:  printf(\"mksquashfs version 4.4-git (2021/01/16)\\n\");\\",
          "",
          "[Added Lines]",
          "5352: #define PRINT_VERSION() \\",
          "5353:  printf(\"mksquashfs version %s (%s)\\n\", VERSION, DATE);\\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5384:  struct file_buffer **fragment = NULL;",
          "5386:  if(argc > 1 && strcmp(argv[1], \"-version\") == 0) {",
          "5388:   exit(0);",
          "5389:  }",
          "",
          "[Removed Lines]",
          "5387:   VERSION();",
          "",
          "[Added Lines]",
          "5387:   PRINT_VERSION();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5852:    }",
          "5853:    root_name = argv[i];",
          "5854:   } else if(strcmp(argv[i], \"-version\") == 0) {",
          "5856:   } else {",
          "5857:    ERROR(\"%s: invalid option\\n\\n\", argv[0]);",
          "5858: printOptions:",
          "",
          "[Removed Lines]",
          "5855:    VERSION();",
          "",
          "[Added Lines]",
          "5855:    PRINT_VERSION();",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c": [
          "File: squashfs-tools/unsquashfs.c -> squashfs-tools/unsquashfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2669: }",
          "2674:  printf(\"copyright (C) 2021 Phillip Lougher \"\\",
          "2675:   \"<phillip@squashfs.org.uk>\\n\\n\");\\",
          "2676:      printf(\"This program is free software; you can redistribute it and/or\"\\",
          "",
          "[Removed Lines]",
          "2672: #define VERSION() \\",
          "2673:  printf(\"unsquashfs version 4.4-git (2021/01/17)\\n\");\\",
          "",
          "[Added Lines]",
          "2672: #define PRINT_VERSION() \\",
          "2673:  printf(\"unsquashfs version %s (%s)\\n\", VERSION, DATE);\\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2720:    quiet = TRUE;",
          "2721:   else if(strcmp(argv[i], \"-version\") == 0 ||",
          "2722:     strcmp(argv[i], \"-v\") == 0) {",
          "2724:    version = TRUE;",
          "2725:   } else if(strcmp(argv[i], \"-info\") == 0 ||",
          "2726:     strcmp(argv[i], \"-i\") == 0)",
          "",
          "[Removed Lines]",
          "2723:    VERSION();",
          "",
          "[Added Lines]",
          "2723:    PRINT_VERSION();",
          "",
          "---------------"
        ],
        "squashfs-tools/version.mk||squashfs-tools/version.mk": [
          "File: squashfs-tools/version.mk -> squashfs-tools/version.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: HASH := $Format:%h$",
          "2: FULLDATE := $Format:%ci$",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "839fa2becd76a9f1b24538c4dae4397317702585",
      "candidate_info": {
        "commit_hash": "839fa2becd76a9f1b24538c4dae4397317702585",
        "repo": "plougher/squashfs-tools",
        "commit_url": "https://github.com/plougher/squashfs-tools/commit/839fa2becd76a9f1b24538c4dae4397317702585",
        "files": [
          "squashfs-tools/unsquashfs.c"
        ],
        "message": "Unsquashfs: improve performance in directory table reading\n\nWhen reading very large filesystems, a large amount of time is\nspent reallocing the directory table, due to the fact the realloc\nsize used is SQUASHFS_METADATA_SIZE (8 Kbytes).\n\nThis commit improves performance by basing the allocation\nsize on the compressed size of the directory table.\n\nFor different compression ratios, this will significantly\nreduce allocs.\n\nWith a 50% compression ratio, this should require 2 alloc calls\nWith a 25% compression ratio, this should require 4 alloc calls\nWith a 12.5% compression ratio, this should require 8 alloc calls\n\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>",
        "before_after_code_files": [
          "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
          ],
          "candidate": [
            "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
          ]
        }
      },
      "candidate_diff": {
        "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c": [
          "File: squashfs-tools/unsquashfs.c -> squashfs-tools/unsquashfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1254:  long long bytes = 0;",
          "1255:  long long size = 0;",
          "1256:  void *directory_table = malloc(1);",
          "1258:  TRACE(\"read_directory_table: start %lld, end %lld\\n\", start, end);",
          "1260:  while(start < end) {",
          "1261:   if(size - bytes < SQUASHFS_METADATA_SIZE) {",
          "1264:    if(directory_table == NULL) {",
          "1265:     ERROR(\"Out of memory in \"",
          "1266:       \"read_directory_table\\n\");",
          "",
          "[Removed Lines]",
          "1262:    directory_table = realloc(directory_table, size +=",
          "1263:     SQUASHFS_METADATA_SIZE);",
          "",
          "[Added Lines]",
          "1257:  int alloc_size;",
          "1272:  alloc_size = ((end - start) + SQUASHFS_METADATA_SIZE) & ~(SQUASHFS_METADATA_SIZE - 1);",
          "1276:    directory_table = realloc(directory_table, size += alloc_size);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1293:   }",
          "1294:  }",
          "1296:  return directory_table;",
          "1298: failed:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1310:  directory_table = realloc(directory_table, bytes);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2645: #define VERSION() \\",
          "2647:  printf(\"copyright (C) 2021 Phillip Lougher \"\\",
          "2648:   \"<phillip@squashfs.org.uk>\\n\\n\");\\",
          "2649:      printf(\"This program is free software; you can redistribute it and/or\"\\",
          "",
          "[Removed Lines]",
          "2646:  printf(\"unsquashfs version 4.4-git (2021/01/08)\\n\");\\",
          "",
          "[Added Lines]",
          "2662:  printf(\"unsquashfs version 4.4-git (2021/01/09)\\n\");\\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92130a7bf610c80a18c7aa0db9cf2a2cbc8466fd",
      "candidate_info": {
        "commit_hash": "92130a7bf610c80a18c7aa0db9cf2a2cbc8466fd",
        "repo": "plougher/squashfs-tools",
        "commit_url": "https://github.com/plougher/squashfs-tools/commit/92130a7bf610c80a18c7aa0db9cf2a2cbc8466fd",
        "files": [
          "squashfs-tools/unsquashfs.c"
        ],
        "message": "Unsquashfs: Add stream argument to print_options()\n\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>",
        "before_after_code_files": [
          "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
          ],
          "candidate": [
            "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c"
          ]
        }
      },
      "candidate_diff": {
        "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c": [
          "File: squashfs-tools/unsquashfs.c -> squashfs-tools/unsquashfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3772: }",
          "3776: {",
          "3850: }",
          "",
          "[Removed Lines]",
          "3775: static void print_options(char *name)",
          "3777:  ERROR(\"SYNTAX: %s [options] filesystem [files \", name);",
          "3778:  ERROR(\"to extract or exclude (with -excludes) or cat (with -cat )]\\n\");",
          "3779:  ERROR(\"\\t-v[ersion]\\t\\tprint version, licence and copyright \");",
          "3780:  ERROR(\"information\\n\");",
          "3781:  ERROR(\"\\t-cat\\t\\t\\tcat the listed files to stdout\\n\");",
          "3782:  ERROR(\"\\t-d[est] <pathname>\\tunsquash to <pathname>, default \");",
          "3783:  ERROR(\"\\\"squashfs-root\\\"\\n\");",
          "3784:  ERROR(\"\\t-max[-depth] <levels>\\tdescend at most <levels> of \");",
          "3785:  ERROR(\"directories when\\n\\t\\t\\t\\tunsquashing or listing\\n\");",
          "3786:  ERROR(\"\\t-excludes\\t\\ttreat files on command line as exclude files\\n\");",
          "3787:  ERROR(\"\\t-ex[clude-list]\\t\\tlist of files/dirs to be excluded, \");",
          "3788:  ERROR(\"terminated with ';'\\n\");",
          "3789:  ERROR(\"\\t-follow[-symlinks]\\tfollow symlinks in extract files, and \");",
          "3790:  ERROR(\"add all\\n\\t\\t\\t\\tfiles/symlinks needed to resolve extract \");",
          "3791:  ERROR(\"file.\\n\\t\\t\\t\\tImplies -no-wildcards\\n\");",
          "3792:  ERROR(\"\\t-missing[-symlinks]\\tUnsquashfs will abort if any symlink \");",
          "3793:  ERROR(\"can't be\\n\\t\\t\\t\\tresolved in -follow-symlinks\\n\");",
          "3794:  ERROR(\"\\t-q[uiet]\\t\\tno verbose output\\n\");",
          "3795:  ERROR(\"\\t-n[o-progress]\\t\\tdon't display the progress bar\\n\");",
          "3796:  ERROR(\"\\t-no[-xattrs]\\t\\tdon't extract xattrs in file system\");",
          "3797:  ERROR(NOXOPT_STR\"\\n\");",
          "3798:  ERROR(\"\\t-x[attrs]\\t\\textract xattrs in file system\" XOPT_STR \"\\n\");",
          "3799:  ERROR(\"\\t-u[ser-xattrs]\\t\\tonly extract user xattrs in file \");",
          "3800:  ERROR(\"system.\\n\\t\\t\\t\\tEnables extracting xattrs\\n\");",
          "3801:  ERROR(\"\\t-p[rocessors] <number>\\tuse <number> processors.  \");",
          "3802:  ERROR(\"By default will use\\n\");",
          "3803:  ERROR(\"\\t\\t\\t\\tnumber of processors available\\n\");",
          "3804:  ERROR(\"\\t-i[nfo]\\t\\t\\tprint files as they are unsquashed\\n\");",
          "3805:  ERROR(\"\\t-li[nfo]\\t\\tprint files as they are unsquashed with file\\n\");",
          "3806:  ERROR(\"\\t\\t\\t\\tattributes (like ls -l output)\\n\");",
          "3807:  ERROR(\"\\t-l[s]\\t\\t\\tlist filesystem, but don't unsquash\\n\");",
          "3808:  ERROR(\"\\t-ll[s]\\t\\t\\tlist filesystem with file attributes (like\\n\");",
          "3809:  ERROR(\"\\t\\t\\t\\tls -l output), but don't unsquash\\n\");",
          "3810:  ERROR(\"\\t-lln[umeric]\\t\\t-lls but with numeric uids and gids\\n\");",
          "3811:  ERROR(\"\\t-lc\\t\\t\\tlist filesystem concisely, displaying only \");",
          "3812:  ERROR(\"files\\n\\t\\t\\t\\tand empty directories.  Don't unsquash\\n\");",
          "3813:  ERROR(\"\\t-llc\\t\\t\\tlist filesystem concisely with file \");",
          "3814:  ERROR(\"attributes,\\n\\t\\t\\t\\tdisplaying only files and empty \");",
          "3815:  ERROR(\"directories.\\n\\t\\t\\t\\tDon't unsquash\\n\");",
          "3816:  ERROR(\"\\t-o[ffset] <bytes>\\tskip <bytes> at start of <dest>.  \");",
          "3817:  ERROR(\"Optionally a\\n\\t\\t\\t\\tsuffix of K, M or G can be given to \");",
          "3818:  ERROR(\"specify\\n\\t\\t\\t\\tKbytes, Mbytes or Gbytes respectively \");",
          "3819:  ERROR(\"(default\\n\\t\\t\\t\\t0 bytes).\\n\");",
          "3820:  ERROR(\"\\t-f[orce]\\t\\tif file already exists then overwrite\\n\");",
          "3821:  ERROR(\"\\t-ig[nore-errors]\\ttreat errors writing files to output \");",
          "3822:  ERROR(\"as\\n\\t\\t\\t\\tnon-fatal\\n\");",
          "3823:  ERROR(\"\\t-st[rict-errors]\\ttreat all errors as fatal\\n\");",
          "3824:  ERROR(\"\\t-no-exit[-code]\\t\\tdon't set exit code (to nonzero) on \");",
          "3825:  ERROR(\"non-fatal\\n\\t\\t\\t\\terrors\\n\");",
          "3826:  ERROR(\"\\t-s[tat]\\t\\t\\tdisplay filesystem superblock information\\n\");",
          "3827:  ERROR(\"\\t-UTC\\t\\t\\tuse UTC rather than local time zone \");",
          "3828:  ERROR(\"when\\n\\t\\t\\t\\tdisplaying time\\n\");",
          "3829:  ERROR(\"\\t-mkfs-time\\t\\tdisplay filesystem superblock time\\n\");",
          "3830:  ERROR(\"\\t-fstime\\t\\t\\tsynonym for -mkfs-time\\n\");",
          "3831:  ERROR(\"\\t-extract-file <file>\\tlist of directories or files to \");",
          "3832:  ERROR(\"extract.\\n\\t\\t\\t\\tOne per line\\n\");",
          "3833:  ERROR(\"\\t-exclude-file <file>\\tlist of directories or files to \");",
          "3834:  ERROR(\"exclude.\\n\\t\\t\\t\\tOne per line\\n\");",
          "3835:  ERROR(\"\\t-e[f] <extract file>\\tsynonym for -extract-file\\n\");",
          "3836:  ERROR(\"\\t-exc[f] <exclude file>\\tsynonym for -exclude-file\\n\");",
          "3837:  ERROR(\"\\t-da[ta-queue] <size>\\tset data queue to <size> Mbytes.  \");",
          "3838:  ERROR(\"Default %d\\n\\t\\t\\t\\tMbytes\\n\", DATA_BUFFER_DEFAULT);",
          "3839:  ERROR(\"\\t-fr[ag-queue] <size>\\tset fragment queue to <size> Mbytes.  \");",
          "3840:  ERROR(\"Default\\n\\t\\t\\t\\t%d Mbytes\\n\", FRAGMENT_BUFFER_DEFAULT);",
          "3841:  ERROR(\"\\t-no-wild[cards]\\t\\tdo not use wildcard matching in extract \");",
          "3842:  ERROR(\"names\\n\");",
          "3843:  ERROR(\"\\t-r[egex]\\t\\ttreat extract names as POSIX regular \");",
          "3844:  ERROR(\"expressions\\n\");",
          "3845:  ERROR(\"\\t\\t\\t\\trather than use the default shell \");",
          "3846:  ERROR(\"wildcard\\n\\t\\t\\t\\texpansion (globbing)\\n\");",
          "3847:  ERROR(\"\\t-L\\t\\t\\tsynonym for -follow-symlinks\\n\");",
          "3848:  ERROR(\"\\nDecompressors available:\\n\");",
          "3849:  display_compressors(stderr, \"\", \"\");",
          "",
          "[Added Lines]",
          "3775: static void print_options(FILE *stream, char *name)",
          "3777:  fprintf(stream, \"SYNTAX: %s [options] filesystem [files \", name);",
          "3778:  fprintf(stream, \"to extract or exclude (with -excludes) or cat (with -cat )]\\n\");",
          "3779:  fprintf(stream, \"\\t-v[ersion]\\t\\tprint version, licence and copyright \");",
          "3780:  fprintf(stream, \"information\\n\");",
          "3781:  fprintf(stream, \"\\t-cat\\t\\t\\tcat the listed files to stdout\\n\");",
          "3782:  fprintf(stream, \"\\t-d[est] <pathname>\\tunsquash to <pathname>, default \");",
          "3783:  fprintf(stream, \"\\\"squashfs-root\\\"\\n\");",
          "3784:  fprintf(stream, \"\\t-max[-depth] <levels>\\tdescend at most <levels> of \");",
          "3785:  fprintf(stream, \"directories when\\n\\t\\t\\t\\tunsquashing or listing\\n\");",
          "3786:  fprintf(stream, \"\\t-excludes\\t\\ttreat files on command line as exclude files\\n\");",
          "3787:  fprintf(stream, \"\\t-ex[clude-list]\\t\\tlist of files/dirs to be excluded, \");",
          "3788:  fprintf(stream, \"terminated with ';'\\n\");",
          "3789:  fprintf(stream, \"\\t-follow[-symlinks]\\tfollow symlinks in extract files, and \");",
          "3790:  fprintf(stream, \"add all\\n\\t\\t\\t\\tfiles/symlinks needed to resolve extract \");",
          "3791:  fprintf(stream, \"file.\\n\\t\\t\\t\\tImplies -no-wildcards\\n\");",
          "3792:  fprintf(stream, \"\\t-missing[-symlinks]\\tUnsquashfs will abort if any symlink \");",
          "3793:  fprintf(stream, \"can't be\\n\\t\\t\\t\\tresolved in -follow-symlinks\\n\");",
          "3794:  fprintf(stream, \"\\t-q[uiet]\\t\\tno verbose output\\n\");",
          "3795:  fprintf(stream, \"\\t-n[o-progress]\\t\\tdon't display the progress bar\\n\");",
          "3796:  fprintf(stream, \"\\t-no[-xattrs]\\t\\tdon't extract xattrs in file system\");",
          "3797:  fprintf(stream, NOXOPT_STR\"\\n\");",
          "3798:  fprintf(stream, \"\\t-x[attrs]\\t\\textract xattrs in file system\" XOPT_STR \"\\n\");",
          "3799:  fprintf(stream, \"\\t-u[ser-xattrs]\\t\\tonly extract user xattrs in file \");",
          "3800:  fprintf(stream, \"system.\\n\\t\\t\\t\\tEnables extracting xattrs\\n\");",
          "3801:  fprintf(stream, \"\\t-p[rocessors] <number>\\tuse <number> processors.  \");",
          "3802:  fprintf(stream, \"By default will use\\n\");",
          "3803:  fprintf(stream, \"\\t\\t\\t\\tnumber of processors available\\n\");",
          "3804:  fprintf(stream, \"\\t-i[nfo]\\t\\t\\tprint files as they are unsquashed\\n\");",
          "3805:  fprintf(stream, \"\\t-li[nfo]\\t\\tprint files as they are unsquashed with file\\n\");",
          "3806:  fprintf(stream, \"\\t\\t\\t\\tattributes (like ls -l output)\\n\");",
          "3807:  fprintf(stream, \"\\t-l[s]\\t\\t\\tlist filesystem, but don't unsquash\\n\");",
          "3808:  fprintf(stream, \"\\t-ll[s]\\t\\t\\tlist filesystem with file attributes (like\\n\");",
          "3809:  fprintf(stream, \"\\t\\t\\t\\tls -l output), but don't unsquash\\n\");",
          "3810:  fprintf(stream, \"\\t-lln[umeric]\\t\\t-lls but with numeric uids and gids\\n\");",
          "3811:  fprintf(stream, \"\\t-lc\\t\\t\\tlist filesystem concisely, displaying only \");",
          "3812:  fprintf(stream, \"files\\n\\t\\t\\t\\tand empty directories.  Don't unsquash\\n\");",
          "3813:  fprintf(stream, \"\\t-llc\\t\\t\\tlist filesystem concisely with file \");",
          "3814:  fprintf(stream, \"attributes,\\n\\t\\t\\t\\tdisplaying only files and empty \");",
          "3815:  fprintf(stream, \"directories.\\n\\t\\t\\t\\tDon't unsquash\\n\");",
          "3816:  fprintf(stream, \"\\t-o[ffset] <bytes>\\tskip <bytes> at start of <dest>.  \");",
          "3817:  fprintf(stream, \"Optionally a\\n\\t\\t\\t\\tsuffix of K, M or G can be given to \");",
          "3818:  fprintf(stream, \"specify\\n\\t\\t\\t\\tKbytes, Mbytes or Gbytes respectively \");",
          "3819:  fprintf(stream, \"(default\\n\\t\\t\\t\\t0 bytes).\\n\");",
          "3820:  fprintf(stream, \"\\t-f[orce]\\t\\tif file already exists then overwrite\\n\");",
          "3821:  fprintf(stream, \"\\t-ig[nore-errors]\\ttreat errors writing files to output \");",
          "3822:  fprintf(stream, \"as\\n\\t\\t\\t\\tnon-fatal\\n\");",
          "3823:  fprintf(stream, \"\\t-st[rict-errors]\\ttreat all errors as fatal\\n\");",
          "3824:  fprintf(stream, \"\\t-no-exit[-code]\\t\\tdon't set exit code (to nonzero) on \");",
          "3825:  fprintf(stream, \"non-fatal\\n\\t\\t\\t\\terrors\\n\");",
          "3826:  fprintf(stream, \"\\t-s[tat]\\t\\t\\tdisplay filesystem superblock information\\n\");",
          "3827:  fprintf(stream, \"\\t-UTC\\t\\t\\tuse UTC rather than local time zone \");",
          "3828:  fprintf(stream, \"when\\n\\t\\t\\t\\tdisplaying time\\n\");",
          "3829:  fprintf(stream, \"\\t-mkfs-time\\t\\tdisplay filesystem superblock time\\n\");",
          "3830:  fprintf(stream, \"\\t-fstime\\t\\t\\tsynonym for -mkfs-time\\n\");",
          "3831:  fprintf(stream, \"\\t-extract-file <file>\\tlist of directories or files to \");",
          "3832:  fprintf(stream, \"extract.\\n\\t\\t\\t\\tOne per line\\n\");",
          "3833:  fprintf(stream, \"\\t-exclude-file <file>\\tlist of directories or files to \");",
          "3834:  fprintf(stream, \"exclude.\\n\\t\\t\\t\\tOne per line\\n\");",
          "3835:  fprintf(stream, \"\\t-e[f] <extract file>\\tsynonym for -extract-file\\n\");",
          "3836:  fprintf(stream, \"\\t-exc[f] <exclude file>\\tsynonym for -exclude-file\\n\");",
          "3837:  fprintf(stream, \"\\t-da[ta-queue] <size>\\tset data queue to <size> Mbytes.  \");",
          "3838:  fprintf(stream, \"Default %d\\n\\t\\t\\t\\tMbytes\\n\", DATA_BUFFER_DEFAULT);",
          "3839:  fprintf(stream, \"\\t-fr[ag-queue] <size>\\tset fragment queue to <size> Mbytes.  \");",
          "3840:  fprintf(stream, \"Default\\n\\t\\t\\t\\t%d Mbytes\\n\", FRAGMENT_BUFFER_DEFAULT);",
          "3841:  fprintf(stream, \"\\t-no-wild[cards]\\t\\tdo not use wildcard matching in extract \");",
          "3842:  fprintf(stream, \"names\\n\");",
          "3843:  fprintf(stream, \"\\t-r[egex]\\t\\ttreat extract names as POSIX regular \");",
          "3844:  fprintf(stream, \"expressions\\n\");",
          "3845:  fprintf(stream, \"\\t\\t\\t\\trather than use the default shell \");",
          "3846:  fprintf(stream, \"wildcard\\n\\t\\t\\t\\texpansion (globbing)\\n\");",
          "3847:  fprintf(stream, \"\\t-L\\t\\t\\tsynonym for -follow-symlinks\\n\");",
          "3848:  fprintf(stream, \"\\nDecompressors available:\\n\");",
          "3849:  display_compressors(stream, \"\", \"\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4186:     exit(1);",
          "4187:    }",
          "4188:   } else {",
          "4190:    exit(1);",
          "4191:   }",
          "4192:  }",
          "",
          "[Removed Lines]",
          "4189:    print_options(argv[0]);",
          "",
          "[Added Lines]",
          "4189:    print_options(stderr, argv[0]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4225:  if(i == argc) {",
          "4226:   if(!version)",
          "4228:   exit(1);",
          "4229:  }",
          "",
          "[Removed Lines]",
          "4227:    print_options(argv[0]);",
          "",
          "[Added Lines]",
          "4227:    print_options(stderr, argv[0]);",
          "",
          "---------------"
        ]
      }
    }
  ]
}