{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0a21ea997dfcf520be78957dedd1e905b55446b2",
      "candidate_info": {
        "commit_hash": "0a21ea997dfcf520be78957dedd1e905b55446b2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0a21ea997dfcf520be78957dedd1e905b55446b2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/window1.test"
        ],
        "message": "Fix a problem with window functions occuring within sub-selects that are part of an OR term in a WHERE clause of the outer SELECT.\n\nFossilOrigin-Name: 1e174ed0d29366eb56ad1a0cc8defcb440b426bfd9525aed2f93468248606efc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9c3136a722715952d155aae55cbc6d1fb921c6940d8e7d3e32fcba000f6ac1ed",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1910:   Window *pWin;",
          "1911:   for(pWin=pMWin; pWin; pWin=pWin->pNextWin){",
          "1912:     FuncDef *pFunc = pWin->pFunc;",
          "1913:     sqlite3VdbeAddOp2(v, OP_Null, 0, pWin->regAccum);",
          "1914:     nArg = MAX(nArg, windowArgCount(pWin));",
          "1915:     if( pMWin->regStartRowid==0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1913:     assert( pWin->regAccum );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2288:       pNew->eStart = p->eStart;",
          "2289:       pNew->eExclude = p->eExclude;",
          "2290:       pNew->regResult = p->regResult;",
          "2291:       pNew->pStart = sqlite3ExprDup(db, p->pStart, 0);",
          "2292:       pNew->pEnd = sqlite3ExprDup(db, p->pEnd, 0);",
          "2293:       pNew->pOwner = pOwner;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2292:       pNew->regAccum = p->regAccum;",
          "2293:       pNew->iArgCol = p->iArgCol;",
          "2294:       pNew->iEphCsr = p->iEphCsr;",
          "2295:       pNew->bExprArgs = p->bExprArgs;",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1593:     FROM (SELECT (SELECT sum(a) FROM t1 GROUP BY a) AS x FROM t1);",
          "1594: } {2 2 2}",
          "1597: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1596: #-------------------------------------------------------------------------",
          "1597: reset_db",
          "1598: do_execsql_test 49.1 {",
          "1599:   CREATE TABLE t1 (a PRIMARY KEY);",
          "1600:   INSERT INTO t1 VALUES(1);",
          "1601: }",
          "1603: do_execsql_test 49.2 {",
          "1604:   SELECT b AS c FROM (",
          "1605:     SELECT a AS b FROM (",
          "1606:       SELECT a FROM t1 WHERE a=1 OR (SELECT sum(a) OVER ())",
          "1607:     )",
          "1608:     WHERE b=1 OR b<10",
          "1609:   )",
          "1610:   WHERE c=1 OR c>=10;",
          "1611: } {1}",
          "1614: #-------------------------------------------------------------------------",
          "1615: reset_db",
          "1616: do_execsql_test 50.0 {",
          "1617:   CREATE TABLE t1 (a DOUBLE PRIMARY KEY);",
          "1618:   INSERT INTO t1 VALUES(10.0);",
          "1619: }",
          "1621: do_execsql_test 50.1 {",
          "1622:   SELECT * FROM t1 WHERE a%1 OR (SELECT sum(a) OVER (ORDER BY a%2))",
          "1623: } {10.0}",
          "1625: do_execsql_test 50.2 {",
          "1626:   SELECT * FROM (",
          "1627:     SELECT * FROM t1 WHERE a%1 OR (SELECT sum(a) OVER (ORDER BY a%2))",
          "1628:   )",
          "1629:   WHERE a=1 OR ( (SELECT sum(a) OVER (ORDER BY a%4)) AND a<=10 )",
          "1630: } {10.0}",
          "1632: do_execsql_test 50.3 {",
          "1633:   SELECT a FROM (",
          "1634:     SELECT * FROM (",
          "1635:       SELECT * FROM t1 WHERE a%1 OR (SELECT sum(a) OVER (ORDER BY a%2))",
          "1636:     )",
          "1637:     WHERE a=1 OR ( (SELECT sum(a) OVER (ORDER BY a%4)) AND a<=10 )",
          "1638:   )",
          "1639:   WHERE a=1 OR a=10.0",
          "1640: } {10.0}",
          "1642: do_execsql_test 50.4 {",
          "1643:   SELECT a FROM (",
          "1644:     SELECT * FROM (",
          "1645:       SELECT * FROM t1 WHERE a%1 OR (SELECT sum(a) OVER (ORDER BY a%2))",
          "1646:     )",
          "1647:     WHERE a=1 OR ( (SELECT sum(a) OVER (ORDER BY a%4)) AND a<=10 )",
          "1648:   )",
          "1649:   WHERE a=1 OR ((SELECT sum(a) OVER(ORDER BY a%8)) AND 10<=a)",
          "1650: } {10.0}",
          "1652: do_execsql_test 50.5 {",
          "1653: SELECT * FROM (SELECT * FROM t1 NATURAL JOIN t1 WHERE a%1 OR ((SELECT sum(a)OVER(ORDER BY a)) AND a<=10)) NATURAL JOIN t1 WHERE a=1 OR ((SELECT sum((SELECT * FROM (SELECT * FROM (SELECT * FROM t1 NATURAL JOIN t1 WHERE a%1 OR ((SELECT sum(a)OVER(ORDER BY a)) AND a<=10)) NATURAL JOIN t1 WHERE a=1 OR ((SELECT sum((SELECT * FROM t1 NATURAL JOIN t1 WHERE a=1 OR ((SELECT sum(a)OVER(ORDER BY a)) AND a<=10)))OVER(ORDER BY a% 1 )) AND a<=10)) NATURAL JOIN t1 WHERE a=1 OR ((SELECT sum(a)OVER(ORDER BY a)) AND 10<=a)))OVER(ORDER BY a%5)) AND a<=10);",
          "1654: } {10.0}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b2ab3dcff084764aeb7a6236f8c457cf34123bc5",
      "candidate_info": {
        "commit_hash": "b2ab3dcff084764aeb7a6236f8c457cf34123bc5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b2ab3dcff084764aeb7a6236f8c457cf34123bc5",
        "files": [
          "ext/fts3/fts3.c",
          "ext/fts5/fts5_storage.c",
          "manifest",
          "manifest.uuid",
          "src/alter.c"
        ],
        "message": "Fix harmless compiler warnings.\n\nFossilOrigin-Name: 2bbd014c900e0d71fd30ec647739b82c5dc3aa237a0203f5a1db50593dae199e",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "ext/fts5/fts5_storage.c||ext/fts5/fts5_storage.c",
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c"
        ],
        "ext/fts5/fts5_storage.c||ext/fts5/fts5_storage.c": [
          "File: ext/fts5/fts5_storage.c -> ext/fts5/fts5_storage.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "738:   for(ctx.iCol=0; rc==SQLITE_OK && ctx.iCol<pConfig->nCol; ctx.iCol++){",
          "739:     ctx.szCol = 0;",
          "740:     if( pConfig->abUnindexed[ctx.iCol]==0 ){",
          "742:       int nText = sqlite3_value_bytes(apVal[ctx.iCol+2]);",
          "743:       rc = sqlite3Fts5Tokenize(pConfig,",
          "744:           FTS5_TOKENIZE_DOCUMENT,",
          "",
          "[Removed Lines]",
          "741:       const char *zText = sqlite3_value_text(apVal[ctx.iCol+2]);",
          "",
          "[Added Lines]",
          "741:       const char *zText = (const char*)sqlite3_value_text(apVal[ctx.iCol+2]);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c16305eba0eb14368f2631b9a82b7eb4483c93f3b31257ee7c33f9b00c344379",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1306: #ifndef SQLITE_OMIT_AUTHORIZATION",
          "1307:   db->xAuth = 0;",
          "1308: #endif",
          "1312:   memset(&sWalker, 0, sizeof(Walker));",
          "",
          "[Removed Lines]",
          "1309:   rc = renameParseSql(&sParse, zDb, 0, db, zSql, bTemp);",
          "",
          "[Added Lines]",
          "1308:   rc = renameParseSql(&sParse, zDb, db, zSql, bTemp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1510:     sWalker.xSelectCallback = renameTableSelectCb;",
          "1511:     sWalker.u.pRename = &sCtx;",
          "1515:     if( rc==SQLITE_OK ){",
          "1516:       int isLegacy = (db->flags & SQLITE_LegacyAlter);",
          "",
          "[Removed Lines]",
          "1513:     rc = renameParseSql(&sParse, zDb, 1, db, zInput, bTemp);",
          "",
          "[Added Lines]",
          "1512:     rc = renameParseSql(&sParse, zDb, db, zInput, bTemp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1652:   if( zDb && zInput ){",
          "1653:     int rc;",
          "1654:     Parse sParse;",
          "1656:     if( rc==SQLITE_OK ){",
          "1657:       if( isLegacy==0 && sParse.pNewTable && sParse.pNewTable->pSelect ){",
          "1658:         NameContext sNC;",
          "",
          "[Removed Lines]",
          "1655:     rc = renameParseSql(&sParse, zDb, 1, db, zInput, bTemp);",
          "",
          "[Added Lines]",
          "1654:     rc = renameParseSql(&sParse, zDb, db, zInput, bTemp);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4fb8452875d6053fa55bbe18c0fcea8c13ba4f31",
      "candidate_info": {
        "commit_hash": "4fb8452875d6053fa55bbe18c0fcea8c13ba4f31",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4fb8452875d6053fa55bbe18c0fcea8c13ba4f31",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in"
        ],
        "message": "Fix typo in the documentation for the new sqlite3_txn_state() interface.\n\nFossilOrigin-Name: 23f7d01758cbcf22bd34e78fb8284c7af18f3059a03c4ff6ab3e556ca11fce19",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5b905d7d7714d1d2c433ff58f5d6917d6d27302d44ca347aa740e768f1354b16",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ]
      }
    },
    {
      "candidate_hash": "e93986a93b07e63ae5c92e1c9e9b193c1484531d",
      "candidate_info": {
        "commit_hash": "e93986a93b07e63ae5c92e1c9e9b193c1484531d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e93986a93b07e63ae5c92e1c9e9b193c1484531d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c"
        ],
        "message": "Fix an incorrect printf() in debugging logic in where.c. Problem reported [forum:/info/80a9c47769772207|by forum post 80a9c47769772207].\n\nFossilOrigin-Name: 883da4dadc88809192e4ed2f753f8883471fb43aa330bc58b017c66e1acedc6c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ed3bb818f58b75c087f2875331ec944397b6c61a5b14d8af4b9ec6f376bd1872",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1758:       sqlite3_snprintf(sizeof(zLeft),zLeft,\"left={%d:%d}\",",
          "1759:                        pTerm->leftCursor, pTerm->u.x.leftColumn);",
          "1760:     }else if( (pTerm->eOperator & WO_OR)!=0 && pTerm->u.pOrInfo!=0 ){",
          "1762:                        pTerm->u.pOrInfo->indexable);",
          "1763:     }else{",
          "1764:       sqlite3_snprintf(sizeof(zLeft),zLeft,\"left=%d\", pTerm->leftCursor);",
          "",
          "[Removed Lines]",
          "1761:       sqlite3_snprintf(sizeof(zLeft),zLeft,\"indexable=0x%lld\",",
          "",
          "[Added Lines]",
          "1761:       sqlite3_snprintf(sizeof(zLeft),zLeft,\"indexable=0x%llx\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a623e1d25f471394ac5550c6eac496ac70fbc1d",
      "candidate_info": {
        "commit_hash": "7a623e1d25f471394ac5550c6eac496ac70fbc1d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7a623e1d25f471394ac5550c6eac496ac70fbc1d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/os_unix.c"
        ],
        "message": "Fix a problem preventing building without SQLITE_ENABLE_SETLK_TIMEOUT defined.\n\nFossilOrigin-Name: 98eb54c6d83992886f17a00b6fc8998df230e3b5f45bafc6fae0d15a9ee5a4c6",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/os_unix.c||src/os_unix.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f3ef9c7c2b4ba3de1057ad569f068b241d5f23e6629d8e0dacf85e57fd13b8aa",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/os_unix.c||src/os_unix.c": [
          "File: src/os_unix.c -> src/os_unix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4325:     f.l_len = n;",
          "4326:     res = osSetPosixAdvisoryLock(pShmNode->hShm, &f, pFile);",
          "4327:     if( res==-1 ){",
          "4328:       rc = (pFile->iBusyTimeout ? SQLITE_BUSY_TIMEOUT : SQLITE_BUSY);",
          "4329:     }",
          "4330:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4328: #ifdef SQLITE_ENABLE_SETLK_TIMEOUT",
          "4330: #else",
          "4331:       rc = SQLITE_BUSY;",
          "4332: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}