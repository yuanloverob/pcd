{
  "cve_id": "CVE-2015-6242",
  "cve_desc": "The wmem_block_split_free_chunk function in epan/wmem/wmem_allocator_block.c in the wmem block allocator in the memory manager in Wireshark 1.12.x before 1.12.7 does not properly consider a certain case of multiple realloc operations that restore a memory chunk to its original size, which allows remote attackers to cause a denial of service (incorrect free operation and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "eaf1aad31e7c0a4908c20a42ae118c4dc8d474b6",
  "patch_info": {
    "commit_hash": "eaf1aad31e7c0a4908c20a42ae118c4dc8d474b6",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/eaf1aad31e7c0a4908c20a42ae118c4dc8d474b6",
    "files": [
      "epan/wmem/wmem_allocator_block.c"
    ],
    "message": "wmem: don't remove tiny blocks from the recycler\n\nThey were never put in it in the first place because they can't hold the\nnecessary pointers.\n\nBug: 11373\nChange-Id: I9e2ec76850929b5ac86e6f7a344d70f56ad3911c\nReviewed-on: https://code.wireshark.org/review/9672\nReviewed-by: Evan Huus <eapache@gmail.com>",
    "before_after_code_files": [
      "epan/wmem/wmem_allocator_block.c||epan/wmem/wmem_allocator_block.c"
    ]
  },
  "patch_diff": {
    "epan/wmem/wmem_allocator_block.c||epan/wmem/wmem_allocator_block.c": [
      "File: epan/wmem/wmem_allocator_block.c -> epan/wmem/wmem_allocator_block.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "591:         if (chunk == allocator->master_head) {",
      "592:             wmem_block_pop_master(allocator);",
      "593:         }",
      "595:             wmem_block_remove_from_recycler(allocator, chunk);",
      "596:         }",
      "597:         return;",
      "",
      "[Removed Lines]",
      "594:         else {",
      "",
      "[Added Lines]",
      "594:         else if (WMEM_CHUNK_DATA_LEN(chunk) >= sizeof(wmem_block_free_t)) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1774ad6ef53312c636dd241956cee8ba9f39210b",
      "candidate_info": {
        "commit_hash": "1774ad6ef53312c636dd241956cee8ba9f39210b",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1774ad6ef53312c636dd241956cee8ba9f39210b",
        "files": [
          "epan/wmem/wmem_allocator_block.c"
        ],
        "message": "wmem: don't remove tiny blocks from the recycler\n\nThey were never put in it in the first place because they can't hold the\nnecessary pointers.\n\nBug: 11373\nChange-Id: I9e2ec76850929b5ac86e6f7a344d70f56ad3911c\nReviewed-on: https://code.wireshark.org/review/9673\nReviewed-by: Evan Huus <eapache@gmail.com>\n(cherry picked from commit 1abc148210cb5c28b24770d1c5897babb43eb581)\nReviewed-on: https://code.wireshark.org/review/10583",
        "before_after_code_files": [
          "epan/wmem/wmem_allocator_block.c||epan/wmem/wmem_allocator_block.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/wmem/wmem_allocator_block.c||epan/wmem/wmem_allocator_block.c"
          ],
          "candidate": [
            "epan/wmem/wmem_allocator_block.c||epan/wmem/wmem_allocator_block.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/wmem/wmem_allocator_block.c||epan/wmem/wmem_allocator_block.c": [
          "File: epan/wmem/wmem_allocator_block.c -> epan/wmem/wmem_allocator_block.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "591:         if (chunk == allocator->master_head) {",
          "592:             wmem_block_pop_master(allocator);",
          "593:         }",
          "595:             wmem_block_remove_from_recycler(allocator, chunk);",
          "596:         }",
          "597:         return;",
          "",
          "[Removed Lines]",
          "594:         else {",
          "",
          "[Added Lines]",
          "594:         else if (WMEM_CHUNK_DATA_LEN(chunk) >= sizeof(wmem_block_free_t)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1abc148210cb5c28b24770d1c5897babb43eb581",
      "candidate_info": {
        "commit_hash": "1abc148210cb5c28b24770d1c5897babb43eb581",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1abc148210cb5c28b24770d1c5897babb43eb581",
        "files": [
          "epan/wmem/wmem_allocator_block.c"
        ],
        "message": "wmem: don't remove tiny blocks from the recycler\n\nThey were never put in it in the first place because they can't hold the\nnecessary pointers.\n\nBug: 11373\nChange-Id: I9e2ec76850929b5ac86e6f7a344d70f56ad3911c\nReviewed-on: https://code.wireshark.org/review/9673\nReviewed-by: Evan Huus <eapache@gmail.com>",
        "before_after_code_files": [
          "epan/wmem/wmem_allocator_block.c||epan/wmem/wmem_allocator_block.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/wmem/wmem_allocator_block.c||epan/wmem/wmem_allocator_block.c"
          ],
          "candidate": [
            "epan/wmem/wmem_allocator_block.c||epan/wmem/wmem_allocator_block.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/wmem/wmem_allocator_block.c||epan/wmem/wmem_allocator_block.c": [
          "File: epan/wmem/wmem_allocator_block.c -> epan/wmem/wmem_allocator_block.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "591:         if (chunk == allocator->master_head) {",
          "592:             wmem_block_pop_master(allocator);",
          "593:         }",
          "595:             wmem_block_remove_from_recycler(allocator, chunk);",
          "596:         }",
          "597:         return;",
          "",
          "[Removed Lines]",
          "594:         else {",
          "",
          "[Added Lines]",
          "594:         else if (WMEM_CHUNK_DATA_LEN(chunk) >= sizeof(wmem_block_free_t)) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}