{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d320e803d97fe9cef872a3eafa3359886b42a7da",
      "candidate_info": {
        "commit_hash": "d320e803d97fe9cef872a3eafa3359886b42a7da",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d320e803d97fe9cef872a3eafa3359886b42a7da",
        "files": [
          "crypto/bn/bn_lib.c",
          "crypto/bn/bn_mont.c"
        ],
        "message": "Revert BN_copy() flag copy semantics change\n\nCommit 9f9442918a changed the semantics of BN_copy() to additionally\ncopy the BN_FLG_CONSTTIME flag if it is set. This turns out to be\nill advised as it has unintended consequences. For example calling\nBN_mod_inverse_no_branch() can sometimes return a result with the flag\nset and sometimes not as a result. This can lead to later failures if we\ngo down code branches that do not support constant time, but check for\nthe presence of the flag.\n\nThe original commit was made due to an issue in BN_MOD_CTX_set(). The\noriginal PR fixed the problem in that function, but it was changed in\nreview to fix it in BN_copy() instead. The solution seems to be to revert\nthe BN_copy() change and go back to the originally proposed way.\n\nReviewed-by: Paul Dale <paul.dale@oracle.com>\n(Merged from https://github.com/openssl/openssl/pull/5080)\n\n(cherry picked from commit 7d461736f7bd3af3c2f266f8541034ecf6f41ed9)",
        "before_after_code_files": [
          "crypto/bn/bn_lib.c||crypto/bn/bn_lib.c",
          "crypto/bn/bn_mont.c||crypto/bn/bn_mont.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_lib.c||crypto/bn/bn_lib.c": [
          "File: crypto/bn/bn_lib.c -> crypto/bn/bn_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:     memcpy(a->d, b->d, sizeof(b->d[0]) * b->top);",
          "407: #endif",
          "412:     a->top = b->top;",
          "413:     a->neg = b->neg;",
          "414:     bn_check_top(a);",
          "",
          "[Removed Lines]",
          "409:     if (BN_get_flags(b, BN_FLG_CONSTTIME) != 0)",
          "410:         BN_set_flags(a, BN_FLG_CONSTTIME);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/bn/bn_mont.c||crypto/bn/bn_mont.c": [
          "File: crypto/bn/bn_mont.c -> crypto/bn/bn_mont.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:     if (!BN_copy(&(mont->N), mod))",
          "261:     mont->N.neg = 0;",
          "263: #ifdef MONT_WORD",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "261:     if (BN_get_flags(mod, BN_FLG_CONSTTIME) != 0)",
          "262:         BN_set_flags(&(mont->N), BN_FLG_CONSTTIME);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a6c1e4b01298da42fe6bb8f65642945c208eeafb",
      "candidate_info": {
        "commit_hash": "a6c1e4b01298da42fe6bb8f65642945c208eeafb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a6c1e4b01298da42fe6bb8f65642945c208eeafb",
        "files": [
          "include/openssl/ssl.h"
        ],
        "message": "Clean up SSL_OP_* a bit\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3439)\n(cherry picked from commit 80a2fc4100daf6f1001eee33ef2f9b9eee05bedf)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "269: # define SSL_OP_LEGACY_SERVER_CONNECT                    0x00000004U",
          "273: # define SSL_OP_TLSEXT_PADDING                           0x00000010U",
          "275: # define SSL_OP_SAFARI_ECDHE_ECDSA_BUG                   0x00000040U",
          "298: # define SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS              0x00000800U",
          "312: # ifndef OPENSSL_NO_DTLS1_METHOD",
          "316: # endif",
          "",
          "[Removed Lines]",
          "272: # define SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG         0x0U",
          "274: # define SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER               0x0U",
          "277: # define SSL_OP_SSLEAY_080_CLIENT_DH_BUG                 0x0",
          "278: # define SSL_OP_TLS_D5_BUG                               0x0U",
          "280: # define SSL_OP_TLS_BLOCK_PADDING_BUG                    0x0U",
          "283: # define SSL_OP_MSIE_SSLV2_RSA_PADDING                   0x0",
          "285: # define SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG              0x0",
          "287: # define SSL_OP_MICROSOFT_SESS_ID_BUG                    0x0",
          "288: # define SSL_OP_NETSCAPE_CHALLENGE_BUG                   0x0",
          "304: # define SSL_OP_ALL                                      0x80000BFFU",
          "307: # define SSL_OP_NO_QUERY_MTU                 0x00001000U",
          "309: # define SSL_OP_COOKIE_EXCHANGE              0x00002000U",
          "311: # define SSL_OP_NO_TICKET                    0x00004000U",
          "315: #  define SSL_OP_CISCO_ANYCONNECT             0x00008000U",
          "",
          "[Added Lines]",
          "283: # define SSL_OP_NO_QUERY_MTU                             0x00001000U",
          "285: # define SSL_OP_COOKIE_EXCHANGE                          0x00002000U",
          "287: # define SSL_OP_NO_TICKET                                0x00004000U",
          "291: #  define SSL_OP_CISCO_ANYCONNECT                        0x00008000U",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "321: # define SSL_OP_NO_COMPRESSION                           0x00020000U",
          "323: # define SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION        0x00040000U",
          "",
          "[Removed Lines]",
          "325: # define SSL_OP_SINGLE_ECDH_USE                          0x0",
          "327: # define SSL_OP_SINGLE_DH_USE                            0x0",
          "329: # define SSL_OP_EPHEMERAL_RSA                            0x0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "340: # define SSL_OP_TLS_ROLLBACK_BUG                         0x00800000U",
          "343: # define SSL_OP_NO_SSLv3                                 0x02000000U",
          "344: # define SSL_OP_NO_TLSv1                                 0x04000000U",
          "345: # define SSL_OP_NO_TLSv1_2                               0x08000000U",
          "",
          "[Removed Lines]",
          "342: # define SSL_OP_NO_SSLv2                                 0x00000000U",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "352:         SSL_OP_NO_TLSv1|SSL_OP_NO_TLSv1_1|SSL_OP_NO_TLSv1_2)",
          "353: # define SSL_OP_NO_DTLS_MASK (SSL_OP_NO_DTLSv1|SSL_OP_NO_DTLSv1_2)",
          "",
          "[Removed Lines]",
          "357: # define SSL_OP_PKCS1_CHECK_1                            0x0",
          "358: # define SSL_OP_PKCS1_CHECK_2                            0x0",
          "359: # define SSL_OP_NETSCAPE_CA_DN_BUG                       0x0",
          "360: # define SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG          0x0U",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "366: # define SSL_OP_CRYPTOPRO_TLSEXT_BUG                     0x80000000U",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336: # define SSL_OP_ALL        (SSL_OP_CRYPTOPRO_TLSEXT_BUG|\\",
          "337:                             SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS|\\",
          "338:                             SSL_OP_LEGACY_SERVER_CONNECT|\\",
          "339:                             SSL_OP_TLSEXT_PADDING|\\",
          "340:                             SSL_OP_SAFARI_ECDHE_ECDSA_BUG)",
          "346: # define SSL_OP_MICROSOFT_SESS_ID_BUG                    0x0",
          "349: # define SSL_OP_NETSCAPE_CHALLENGE_BUG                   0x0",
          "352: # define SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG         0x0",
          "355: # define SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG              0x0",
          "357: # define SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER               0x0",
          "359: # define SSL_OP_MSIE_SSLV2_RSA_PADDING                   0x0",
          "362: # define SSL_OP_SSLEAY_080_CLIENT_DH_BUG                 0x0",
          "364: # define SSL_OP_TLS_D5_BUG                               0x0",
          "366: # define SSL_OP_TLS_BLOCK_PADDING_BUG                    0x0",
          "368: # define SSL_OP_SINGLE_ECDH_USE                          0x0",
          "370: # define SSL_OP_SINGLE_DH_USE                            0x0",
          "372: # define SSL_OP_EPHEMERAL_RSA                            0x0",
          "374: # define SSL_OP_NO_SSLv2                                 0x0",
          "376: # define SSL_OP_PKCS1_CHECK_1                            0x0",
          "378: # define SSL_OP_PKCS1_CHECK_2                            0x0",
          "380: # define SSL_OP_NETSCAPE_CA_DN_BUG                       0x0",
          "382: # define SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG          0x0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b3c5b898eb0d9bbaf192c84ade90346bc49899e",
      "candidate_info": {
        "commit_hash": "6b3c5b898eb0d9bbaf192c84ade90346bc49899e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6b3c5b898eb0d9bbaf192c84ade90346bc49899e",
        "files": [
          "Configurations/descrip.mms.tmpl",
          "Configurations/unix-Makefile.tmpl",
          "Configurations/windows-makefile.tmpl"
        ],
        "message": "Use the possibility to have test results in a different directory\n\nRESULT_D can be used to provide a separate directory for test results.\nLet's use that to separate them from other files.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4507)\n\n(cherry picked from commit 41f571e10c31cd58aada3cfde3be6a8a94cea64a)",
        "before_after_code_files": [
          "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl",
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl",
          "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl": [
          "File: Configurations/descrip.mms.tmpl -> Configurations/descrip.mms.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "268: {- dependmagic('tests'); -} : build_programs_nodep, build_engines_nodep",
          "269:         @ ! {- output_off() if $disabled{tests}; \"\" -}",
          "270:         SET DEFAULT [.test]{- move(\"test\") -}",
          "271:         DEFINE SRCTOP {- sourcedir() -}",
          "272:         DEFINE BLDTOP {- builddir() -}",
          "273:         DEFINE OPENSSL_ENGINES {- builddir(\"engines\") -}",
          "274:         DEFINE OPENSSL_DEBUG_MEMORY \"on\"",
          "275:         IF \"$(VERBOSE)\" .NES. \"\" THEN DEFINE VERBOSE \"$(VERBOSE)\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "271:         CREATE/DIR [.test-runs]",
          "274:         DEFINE RESULT_D {- builddir(qw(test test-runs)) -}",
          "",
          "---------------"
        ],
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "244: {- dependmagic('tests'); -}: build_programs_nodep build_engines_nodep link-utils",
          "245:  @ : {- output_off() if $disabled{tests}; \"\" -}",
          "246:  ( cd test; \\",
          "247:    SRCTOP=../$(SRCDIR) \\",
          "248:    BLDTOP=../$(BLDDIR) \\",
          "249:    PERL=\"$(PERL)\" \\",
          "250:    EXE_EXT={- $exeext -} \\",
          "252:    OPENSSL_DEBUG_MEMORY=on \\",
          "253:      $(PERL) ../$(SRCDIR)/test/run_tests.pl $(TESTS) )",
          "254:  @ : {- if ($disabled{tests}) { output_on(); } else { output_off(); } \"\" -}",
          "",
          "[Removed Lines]",
          "251:    OPENSSL_ENGINES=../$(BLDDIR)/engines \\",
          "",
          "[Added Lines]",
          "247:    mkdir -p test-runs; \\",
          "250:    RESULT_D=test-runs \\",
          "253:    OPENSSL_ENGINES=`cd ../$(BLDDIR)/engines; pwd` \\",
          "",
          "---------------"
        ],
        "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl": [
          "File: Configurations/windows-makefile.tmpl -> Configurations/windows-makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "204: test: tests",
          "205: {- dependmagic('tests'); -}: build_programs_nodep build_engines_nodep",
          "206:  @rem {- output_off() if $disabled{tests}; \"\" -}",
          "207:  set SRCTOP=$(SRCDIR)",
          "208:  set BLDTOP=$(BLDDIR)",
          "209:  set PERL=$(PERL)",
          "210:  set OPENSSL_DEBUG_MEMORY=on",
          "211:  \"$(PERL)\" \"$(SRCDIR)\\test\\run_tests.pl\" $(TESTS)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207:  -mkdir $(BLDDIR)\\test\\test-runs",
          "210:  set RESULT_D=$(BLDDIR)\\test\\test-runs",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a5034bea281e3b6b79a4ad33c2471afee483d6bc",
      "candidate_info": {
        "commit_hash": "a5034bea281e3b6b79a4ad33c2471afee483d6bc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a5034bea281e3b6b79a4ad33c2471afee483d6bc",
        "files": [
          "crypto/x509v3/v3_utl.c"
        ],
        "message": "crypto/x509v3/v3_utl.c: fix Coverity problems.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4492)\n\n(cherry picked from commit 32f3b98d1302d4c0950dc1bf94b50269b6edbd95)\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/4514)",
        "before_after_code_files": [
          "crypto/x509v3/v3_utl.c||crypto/x509v3/v3_utl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509v3/v3_utl.c||crypto/x509v3/v3_utl.c": [
          "File: crypto/x509v3/v3_utl.c -> crypto/x509v3/v3_utl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: {",
          "38:     CONF_VALUE *vtmp = NULL;",
          "39:     char *tname = NULL, *tvalue = NULL;",
          "41:     if (name && (tname = OPENSSL_strdup(name)) == NULL)",
          "42:         goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:     int sk_allocated = (*extlist == NULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:         goto err;",
          "45:     if ((vtmp = OPENSSL_malloc(sizeof(*vtmp))) == NULL)",
          "46:         goto err;",
          "48:         goto err;",
          "49:     vtmp->section = NULL;",
          "50:     vtmp->name = tname;",
          "",
          "[Removed Lines]",
          "47:     if (*extlist == NULL && (*extlist = sk_CONF_VALUE_new_null()) == NULL)",
          "",
          "[Added Lines]",
          "48:     if (sk_allocated && (*extlist = sk_CONF_VALUE_new_null()) == NULL)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54:     return 1;",
          "55:  err:",
          "56:     X509V3err(X509V3_F_X509V3_ADD_VALUE, ERR_R_MALLOC_FAILURE);",
          "57:     OPENSSL_free(vtmp);",
          "58:     OPENSSL_free(tname);",
          "59:     OPENSSL_free(tvalue);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:     if (sk_allocated)",
          "59:         sk_CONF_VALUE_free(*extlist);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "84a85b5755befabd450fbb7cc63d5e23a268ddb0",
      "candidate_info": {
        "commit_hash": "84a85b5755befabd450fbb7cc63d5e23a268ddb0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/84a85b5755befabd450fbb7cc63d5e23a268ddb0",
        "files": [
          "crypto/bn/bn_lib.c"
        ],
        "message": "Correct value for BN_security_bits()\n\nThe function BN_security_bits() uses the values from SP800-57 to assign\nsecurity bit values for different FF key sizes. However the value for 192\nsecurity bits is wrong. SP800-57 has it as 7680 but the code had it as\n7690.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4546)\n\n(cherry picked from commit c9fe362303fc54ff19bde7511475f28663f7d554)",
        "before_after_code_files": [
          "crypto/bn/bn_lib.c||crypto/bn/bn_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_lib.c||crypto/bn/bn_lib.c": [
          "File: crypto/bn/bn_lib.c -> crypto/bn/bn_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "897:     int secbits, bits;",
          "898:     if (L >= 15360)",
          "899:         secbits = 256;",
          "901:         secbits = 192;",
          "902:     else if (L >= 3072)",
          "903:         secbits = 128;",
          "",
          "[Removed Lines]",
          "900:     else if (L >= 7690)",
          "",
          "[Added Lines]",
          "900:     else if (L >= 7680)",
          "",
          "---------------"
        ]
      }
    }
  ]
}