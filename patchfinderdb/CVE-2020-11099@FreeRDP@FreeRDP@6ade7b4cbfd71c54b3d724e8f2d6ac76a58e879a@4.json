{
  "cve_id": "CVE-2020-11099",
  "cve_desc": "In FreeRDP before version 2.1.2, there is an out of bounds read in license_read_new_or_upgrade_license_packet. A manipulated license packet can lead to out of bound reads to an internal buffer. This is fixed in version 2.1.2.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "6ade7b4cbfd71c54b3d724e8f2d6ac76a58e879a",
  "patch_info": {
    "commit_hash": "6ade7b4cbfd71c54b3d724e8f2d6ac76a58e879a",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/6ade7b4cbfd71c54b3d724e8f2d6ac76a58e879a",
    "files": [
      "libfreerdp/core/license.c"
    ],
    "message": "Fixed OOB Read in license_read_new_or_upgrade_license_packet\n\nCVE-2020-11099 thanks to @antonio-morales for finding this.",
    "before_after_code_files": [
      "libfreerdp/core/license.c||libfreerdp/core/license.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/core/license.c||libfreerdp/core/license.c": [
      "File: libfreerdp/core/license.c -> libfreerdp/core/license.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1252:  if (!licenseStream)",
      "1253:   goto out_free_blob;",
      "1255:  Stream_Read_UINT16(licenseStream, os_minor);",
      "1256:  Stream_Read_UINT16(licenseStream, os_major);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1255:  if (Stream_GetRemainingLength(licenseStream) < 8)",
      "1256:   goto out_free_stream;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1266:  Stream_Seek(licenseStream, cbScope);",
      "1269:  Stream_Read_UINT32(licenseStream, cbCompanyName);",
      "1270:  if (Stream_GetRemainingLength(licenseStream) < cbCompanyName)",
      "1271:   goto out_free_stream;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1272:  if (Stream_GetRemainingLength(licenseStream) < 4)",
      "1273:   goto out_free_stream;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1276:  Stream_Seek(licenseStream, cbCompanyName);",
      "1279:  Stream_Read_UINT32(licenseStream, cbProductId);",
      "1280:  if (Stream_GetRemainingLength(licenseStream) < cbProductId)",
      "1281:   goto out_free_stream;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1284:  if (Stream_GetRemainingLength(licenseStream) < 4)",
      "1285:   goto out_free_stream;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1286:  Stream_Seek(licenseStream, cbProductId);",
      "1289:  Stream_Read_UINT32(licenseStream, cbLicenseInfo);",
      "1290:  if (Stream_GetRemainingLength(licenseStream) < cbLicenseInfo)",
      "1291:   goto out_free_stream;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1296:  if (Stream_GetRemainingLength(licenseStream) < 4)",
      "1297:   goto out_free_stream;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1c6a6923f87dcfb295c508963f21bebbbc4292ae",
      "candidate_info": {
        "commit_hash": "1c6a6923f87dcfb295c508963f21bebbbc4292ae",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/1c6a6923f87dcfb295c508963f21bebbbc4292ae",
        "files": [
          "channels/rdpdr/client/rdpdr_main.c"
        ],
        "message": "Fixed broken const variable.",
        "before_after_code_files": [
          "channels/rdpdr/client/rdpdr_main.c||channels/rdpdr/client/rdpdr_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6295"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/rdpdr/client/rdpdr_main.c||channels/rdpdr/client/rdpdr_main.c": [
          "File: channels/rdpdr/client/rdpdr_main.c -> channels/rdpdr/client/rdpdr_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "598:  size_t x;",
          "599:  char buffer[MAX_PATH];",
          "600:  uid_t uid = getuid();",
          "603:  if (getlogin_r(uname, sizeof(uname)) != 0)",
          "604:   return FALSE;",
          "",
          "[Removed Lines]",
          "601:  const char uname[MAX_PATH] = { 0 };",
          "",
          "[Added Lines]",
          "601:  char uname[MAX_PATH] = { 0 };",
          "",
          "---------------"
        ]
      }
    }
  ]
}