{
  "cve_id": "CVE-2017-16840",
  "cve_desc": "The VC-2 Video Compression encoder in FFmpeg 3.0 and 3.4 allows remote attackers to cause a denial of service (out-of-bounds read) because of incorrect buffer padding for non-Haar wavelets, related to libavcodec/vc2enc.c and libavcodec/vc2enc_dwt.c.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "3228ac730c11eca49d5680d5550128e397061c85",
  "patch_info": {
    "commit_hash": "3228ac730c11eca49d5680d5550128e397061c85",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/3228ac730c11eca49d5680d5550128e397061c85",
    "files": [
      "libavcodec/vc2enc.c",
      "libavcodec/vc2enc_dwt.c",
      "libavcodec/vc2enc_dwt.h"
    ],
    "message": "vc2enc_dwt: pad the temporary buffer by the slice size\n\nSince non-Haar wavelets need to look into pixels outside the frame, we\nneed to pad the buffer. The old factor of two seemed to be a workaround\nthat fact and only padded to the left and bottom. This correctly pads\nby the slice size and as such reduces memory usage and potential\nexploits.\nReported by Liu Bingchang.\n\nIdeally, there should be no temporary buffer but the encoder is designed\nto deinterleave the coefficients into the classical wavelet structure\nwith the lower frequency values in the top left corner.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>",
    "before_after_code_files": [
      "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
      "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
      "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
    ]
  },
  "patch_diff": {
    "libavcodec/vc2enc.c||libavcodec/vc2enc.c": [
      "File: libavcodec/vc2enc.c -> libavcodec/vc2enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1193:         if (ff_vc2enc_init_transforms(&s->transform_args[i].t,",
      "1194:                                       s->plane[i].coef_stride,",
      "1196:             goto alloc_fail;",
      "1197:     }",
      "",
      "[Removed Lines]",
      "1195:                                       s->plane[i].dwt_height))",
      "",
      "[Added Lines]",
      "1195:                                       s->plane[i].dwt_height,",
      "1196:                                       s->slice_width, s->slice_height))",
      "",
      "---------------"
    ],
    "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c": [
      "File: libavcodec/vc2enc_dwt.c -> libavcodec/vc2enc_dwt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "255:     dwt_haar(t, data, stride, width, height, 1);",
      "256: }",
      "259: {",
      "260:     s->vc2_subband_dwt[VC2_TRANSFORM_9_7]    = vc2_subband_dwt_97;",
      "261:     s->vc2_subband_dwt[VC2_TRANSFORM_5_3]    = vc2_subband_dwt_53;",
      "262:     s->vc2_subband_dwt[VC2_TRANSFORM_HAAR]   = vc2_subband_dwt_haar;",
      "263:     s->vc2_subband_dwt[VC2_TRANSFORM_HAAR_S] = vc2_subband_dwt_haar_shift;",
      "266:     if (!s->buffer)",
      "267:         return 1;",
      "269:     return 0;",
      "270: }",
      "272: av_cold void ff_vc2enc_free_transforms(VC2TransformContext *s)",
      "273: {",
      "275: }",
      "",
      "[Removed Lines]",
      "258: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_width, int p_height)",
      "265:     s->buffer = av_malloc(2*p_width*p_height*sizeof(dwtcoef));",
      "274:     av_freep(&s->buffer);",
      "",
      "[Added Lines]",
      "258: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_stride,",
      "259:                                       int p_height, int slice_w, int slice_h)",
      "267:     s->buffer = av_calloc((p_stride + slice_w)*(p_height + slice_h), sizeof(dwtcoef));",
      "271:     s->padding = (slice_h >> 1)*p_stride + (slice_w >> 1);",
      "272:     s->buffer += s->padding;",
      "279:     av_free(s->buffer - s->padding);",
      "280:     s->buffer = NULL;",
      "",
      "---------------"
    ],
    "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h": [
      "File: libavcodec/vc2enc_dwt.h -> libavcodec/vc2enc_dwt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "42: typedef struct VC2TransformContext {",
      "43:     dwtcoef *buffer;",
      "44:     void (*vc2_subband_dwt[VC2_TRANSFORMS_NB])(struct VC2TransformContext *t,",
      "45:                                                dwtcoef *data, ptrdiff_t stride,",
      "46:                                                int width, int height);",
      "47: } VC2TransformContext;",
      "50: void ff_vc2enc_free_transforms(VC2TransformContext *t);",
      "",
      "[Removed Lines]",
      "49: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_width, int p_height);",
      "",
      "[Added Lines]",
      "44:     int padding;",
      "50: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_stride, int p_height,",
      "51:                                int slice_w, int slice_h);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "519a54cc195b92fe6ba71fd156e31e944d862d7e",
      "candidate_info": {
        "commit_hash": "519a54cc195b92fe6ba71fd156e31e944d862d7e",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/519a54cc195b92fe6ba71fd156e31e944d862d7e",
        "files": [
          "libavcodec/vc2enc.c",
          "libavcodec/vc2enc_dwt.c",
          "libavcodec/vc2enc_dwt.h"
        ],
        "message": "vc2enc_dwt: pad the temporary buffer by the slice size\n\nSince non-Haar wavelets need to look into pixels outside the frame, we\nneed to pad the buffer. The old factor of two seemed to be a workaround\nthat fact and only padded to the left and bottom. This correctly pads\nby the slice size and as such reduces memory usage and potential\nexploits.\nReported by Liu Bingchang.\n\nIdeally, there should be no temporary buffer but the encoder is designed\nto deinterleave the coefficients into the classical wavelet structure\nwith the lower frequency values in the top left corner.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>\n(cherry picked from commit 3228ac730c11eca49d5680d5550128e397061c85)",
        "before_after_code_files": [
          "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
          "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
          "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
            "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
            "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
          ],
          "candidate": [
            "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
            "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
            "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vc2enc.c||libavcodec/vc2enc.c": [
          "File: libavcodec/vc2enc.c -> libavcodec/vc2enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1191:         if (ff_vc2enc_init_transforms(&s->transform_args[i].t,",
          "1192:                                       s->plane[i].coef_stride,",
          "1194:             goto alloc_fail;",
          "1195:     }",
          "",
          "[Removed Lines]",
          "1193:                                       s->plane[i].dwt_height))",
          "",
          "[Added Lines]",
          "1193:                                       s->plane[i].dwt_height,",
          "1194:                                       s->slice_width, s->slice_height))",
          "",
          "---------------"
        ],
        "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c": [
          "File: libavcodec/vc2enc_dwt.c -> libavcodec/vc2enc_dwt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:     dwt_haar(t, data, stride, width, height, 1);",
          "256: }",
          "259: {",
          "260:     s->vc2_subband_dwt[VC2_TRANSFORM_9_7]    = vc2_subband_dwt_97;",
          "261:     s->vc2_subband_dwt[VC2_TRANSFORM_5_3]    = vc2_subband_dwt_53;",
          "262:     s->vc2_subband_dwt[VC2_TRANSFORM_HAAR]   = vc2_subband_dwt_haar;",
          "263:     s->vc2_subband_dwt[VC2_TRANSFORM_HAAR_S] = vc2_subband_dwt_haar_shift;",
          "266:     if (!s->buffer)",
          "267:         return 1;",
          "269:     return 0;",
          "270: }",
          "272: av_cold void ff_vc2enc_free_transforms(VC2TransformContext *s)",
          "273: {",
          "275: }",
          "",
          "[Removed Lines]",
          "258: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_width, int p_height)",
          "265:     s->buffer = av_malloc(2*p_width*p_height*sizeof(dwtcoef));",
          "274:     av_freep(&s->buffer);",
          "",
          "[Added Lines]",
          "258: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_stride,",
          "259:                                       int p_height, int slice_w, int slice_h)",
          "267:     s->buffer = av_calloc((p_stride + slice_w)*(p_height + slice_h), sizeof(dwtcoef));",
          "271:     s->padding = (slice_h >> 1)*p_stride + (slice_w >> 1);",
          "272:     s->buffer += s->padding;",
          "279:     av_free(s->buffer - s->padding);",
          "280:     s->buffer = NULL;",
          "",
          "---------------"
        ],
        "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h": [
          "File: libavcodec/vc2enc_dwt.h -> libavcodec/vc2enc_dwt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: typedef struct VC2TransformContext {",
          "43:     dwtcoef *buffer;",
          "44:     void (*vc2_subband_dwt[VC2_TRANSFORMS_NB])(struct VC2TransformContext *t,",
          "45:                                                dwtcoef *data, ptrdiff_t stride,",
          "46:                                                int width, int height);",
          "47: } VC2TransformContext;",
          "50: void ff_vc2enc_free_transforms(VC2TransformContext *t);",
          "",
          "[Removed Lines]",
          "49: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_width, int p_height);",
          "",
          "[Added Lines]",
          "44:     int padding;",
          "50: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_stride, int p_height,",
          "51:                                int slice_w, int slice_h);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7cce800930556e691e23a092a442102bb68e0f6f",
      "candidate_info": {
        "commit_hash": "7cce800930556e691e23a092a442102bb68e0f6f",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/7cce800930556e691e23a092a442102bb68e0f6f",
        "files": [
          "libavcodec/vc2enc.c",
          "libavcodec/vc2enc_dwt.c",
          "libavcodec/vc2enc_dwt.h"
        ],
        "message": "vc2enc_dwt: pad the temporary buffer by the slice size\n\nSince non-Haar wavelets need to look into pixels outside the frame, we\nneed to pad the buffer. The old factor of two seemed to be a workaround\nthat fact and only padded to the left and bottom. This correctly pads\nby the slice size and as such reduces memory usage and potential\nexploits.\nReported by Liu Bingchang.\n\nIdeally, there should be no temporary buffer but the encoder is designed\nto deinterleave the coefficients into the classical wavelet structure\nwith the lower frequency values in the top left corner.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>\n(cherry picked from commit 3228ac730c11eca49d5680d5550128e397061c85)",
        "before_after_code_files": [
          "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
          "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
          "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
            "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
            "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
          ],
          "candidate": [
            "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
            "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
            "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vc2enc.c||libavcodec/vc2enc.c": [
          "File: libavcodec/vc2enc.c -> libavcodec/vc2enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1194:         if (ff_vc2enc_init_transforms(&s->transform_args[i].t,",
          "1195:                                       s->plane[i].coef_stride,",
          "1197:             goto alloc_fail;",
          "1198:     }",
          "",
          "[Removed Lines]",
          "1196:                                       s->plane[i].dwt_height))",
          "",
          "[Added Lines]",
          "1196:                                       s->plane[i].dwt_height,",
          "1197:                                       s->slice_width, s->slice_height))",
          "",
          "---------------"
        ],
        "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c": [
          "File: libavcodec/vc2enc_dwt.c -> libavcodec/vc2enc_dwt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:     dwt_haar(t, data, stride, width, height, 1);",
          "256: }",
          "259: {",
          "260:     s->vc2_subband_dwt[VC2_TRANSFORM_9_7]    = vc2_subband_dwt_97;",
          "261:     s->vc2_subband_dwt[VC2_TRANSFORM_5_3]    = vc2_subband_dwt_53;",
          "262:     s->vc2_subband_dwt[VC2_TRANSFORM_HAAR]   = vc2_subband_dwt_haar;",
          "263:     s->vc2_subband_dwt[VC2_TRANSFORM_HAAR_S] = vc2_subband_dwt_haar_shift;",
          "266:     if (!s->buffer)",
          "267:         return 1;",
          "269:     return 0;",
          "270: }",
          "272: av_cold void ff_vc2enc_free_transforms(VC2TransformContext *s)",
          "273: {",
          "275: }",
          "",
          "[Removed Lines]",
          "258: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_width, int p_height)",
          "265:     s->buffer = av_malloc(2*p_width*p_height*sizeof(dwtcoef));",
          "274:     av_freep(&s->buffer);",
          "",
          "[Added Lines]",
          "258: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_stride,",
          "259:                                       int p_height, int slice_w, int slice_h)",
          "267:     s->buffer = av_calloc((p_stride + slice_w)*(p_height + slice_h), sizeof(dwtcoef));",
          "271:     s->padding = (slice_h >> 1)*p_stride + (slice_w >> 1);",
          "272:     s->buffer += s->padding;",
          "279:     av_free(s->buffer - s->padding);",
          "280:     s->buffer = NULL;",
          "",
          "---------------"
        ],
        "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h": [
          "File: libavcodec/vc2enc_dwt.h -> libavcodec/vc2enc_dwt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: typedef struct VC2TransformContext {",
          "43:     dwtcoef *buffer;",
          "44:     void (*vc2_subband_dwt[VC2_TRANSFORMS_NB])(struct VC2TransformContext *t,",
          "45:                                                dwtcoef *data, ptrdiff_t stride,",
          "46:                                                int width, int height);",
          "47: } VC2TransformContext;",
          "50: void ff_vc2enc_free_transforms(VC2TransformContext *t);",
          "",
          "[Removed Lines]",
          "49: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_width, int p_height);",
          "",
          "[Added Lines]",
          "44:     int padding;",
          "50: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_stride, int p_height,",
          "51:                                int slice_w, int slice_h);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94e538aebbc9f9c529e8b1f2eda860cfb8c473b1",
      "candidate_info": {
        "commit_hash": "94e538aebbc9f9c529e8b1f2eda860cfb8c473b1",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/94e538aebbc9f9c529e8b1f2eda860cfb8c473b1",
        "files": [
          "libavcodec/vc2enc.c",
          "libavcodec/vc2enc_dwt.c",
          "libavcodec/vc2enc_dwt.h"
        ],
        "message": "vc2enc_dwt: pad the temporary buffer by the slice size\n\nSince non-Haar wavelets need to look into pixels outside the frame, we\nneed to pad the buffer. The old factor of two seemed to be a workaround\nthat fact and only padded to the left and bottom. This correctly pads\nby the slice size and as such reduces memory usage and potential\nexploits.\nReported by Liu Bingchang.\n\nIdeally, there should be no temporary buffer but the encoder is designed\nto deinterleave the coefficients into the classical wavelet structure\nwith the lower frequency values in the top left corner.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>\n(cherry picked from commit 3228ac730c11eca49d5680d5550128e397061c85)",
        "before_after_code_files": [
          "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
          "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
          "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
            "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
            "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
          ],
          "candidate": [
            "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
            "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
            "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vc2enc.c||libavcodec/vc2enc.c": [
          "File: libavcodec/vc2enc.c -> libavcodec/vc2enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1108:         if (ff_vc2enc_init_transforms(&s->transform_args[i].t,",
          "1111:             goto alloc_fail;",
          "1112:     }",
          "",
          "[Removed Lines]",
          "1109:                                         s->plane[0].coef_stride,",
          "1110:                                         s->plane[0].dwt_height))",
          "",
          "[Added Lines]",
          "1109:                                       s->plane[i].coef_stride,",
          "1110:                                       s->plane[i].dwt_height,",
          "1111:                                       s->slice_width, s->slice_height))",
          "",
          "---------------"
        ],
        "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c": [
          "File: libavcodec/vc2enc_dwt.c -> libavcodec/vc2enc_dwt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:     deinterleave(data, stride, width, height, synth);",
          "212: }",
          "215: {",
          "216:     s->vc2_subband_dwt[VC2_TRANSFORM_9_7]    = vc2_subband_dwt_97;",
          "217:     s->vc2_subband_dwt[VC2_TRANSFORM_5_3]    = vc2_subband_dwt_53;",
          "220:     if (!s->buffer)",
          "221:         return 1;",
          "223:     return 0;",
          "224: }",
          "226: av_cold void ff_vc2enc_free_transforms(VC2TransformContext *s)",
          "227: {",
          "229: }",
          "",
          "[Removed Lines]",
          "214: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_width, int p_height)",
          "219:     s->buffer = av_malloc(2*p_width*p_height*sizeof(dwtcoef));",
          "228:     av_freep(&s->buffer);",
          "",
          "[Added Lines]",
          "214: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_stride,",
          "215:                                       int p_height, int slice_w, int slice_h)",
          "221:     s->buffer = av_calloc((p_stride + slice_w)*(p_height + slice_h), sizeof(dwtcoef));",
          "225:     s->padding = (slice_h >> 1)*p_stride + (slice_w >> 1);",
          "226:     s->buffer += s->padding;",
          "233:     av_free(s->buffer - s->padding);",
          "234:     s->buffer = NULL;",
          "",
          "---------------"
        ],
        "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h": [
          "File: libavcodec/vc2enc_dwt.h -> libavcodec/vc2enc_dwt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: typedef struct VC2TransformContext {",
          "46:     dwtcoef *buffer;",
          "47:     void (*vc2_subband_dwt[VC2_TRANSFORMS_NB])(struct VC2TransformContext *t,",
          "48:                                                dwtcoef *data, ptrdiff_t stride,",
          "49:                                                int width, int height);",
          "50: } VC2TransformContext;",
          "53: void ff_vc2enc_free_transforms(VC2TransformContext *t);",
          "",
          "[Removed Lines]",
          "52: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_width, int p_height);",
          "",
          "[Added Lines]",
          "47:     int padding;",
          "53: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_stride, int p_height,",
          "54:                                int slice_w, int slice_h);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7aac19933a91e22d77b0b4dd4ecd61edf52d43f",
      "candidate_info": {
        "commit_hash": "a7aac19933a91e22d77b0b4dd4ecd61edf52d43f",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/a7aac19933a91e22d77b0b4dd4ecd61edf52d43f",
        "files": [
          "libavcodec/vc2enc.c",
          "libavcodec/vc2enc_dwt.c",
          "libavcodec/vc2enc_dwt.h"
        ],
        "message": "vc2enc_dwt: pad the temporary buffer by the slice size\n\nSince non-Haar wavelets need to look into pixels outside the frame, we\nneed to pad the buffer. The old factor of two seemed to be a workaround\nthat fact and only padded to the left and bottom. This correctly pads\nby the slice size and as such reduces memory usage and potential\nexploits.\nReported by Liu Bingchang.\n\nIdeally, there should be no temporary buffer but the encoder is designed\nto deinterleave the coefficients into the classical wavelet structure\nwith the lower frequency values in the top left corner.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>\n(cherry picked from commit 3228ac730c11eca49d5680d5550128e397061c85)",
        "before_after_code_files": [
          "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
          "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
          "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
            "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
            "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
          ],
          "candidate": [
            "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
            "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
            "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vc2enc.c||libavcodec/vc2enc.c": [
          "File: libavcodec/vc2enc.c -> libavcodec/vc2enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1191:         if (ff_vc2enc_init_transforms(&s->transform_args[i].t,",
          "1192:                                       s->plane[i].coef_stride,",
          "1194:             goto alloc_fail;",
          "1195:     }",
          "",
          "[Removed Lines]",
          "1193:                                       s->plane[i].dwt_height))",
          "",
          "[Added Lines]",
          "1193:                                       s->plane[i].dwt_height,",
          "1194:                                       s->slice_width, s->slice_height))",
          "",
          "---------------"
        ],
        "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c": [
          "File: libavcodec/vc2enc_dwt.c -> libavcodec/vc2enc_dwt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:     dwt_haar(t, data, stride, width, height, 1);",
          "256: }",
          "259: {",
          "260:     s->vc2_subband_dwt[VC2_TRANSFORM_9_7]    = vc2_subband_dwt_97;",
          "261:     s->vc2_subband_dwt[VC2_TRANSFORM_5_3]    = vc2_subband_dwt_53;",
          "262:     s->vc2_subband_dwt[VC2_TRANSFORM_HAAR]   = vc2_subband_dwt_haar;",
          "263:     s->vc2_subband_dwt[VC2_TRANSFORM_HAAR_S] = vc2_subband_dwt_haar_shift;",
          "266:     if (!s->buffer)",
          "267:         return 1;",
          "269:     return 0;",
          "270: }",
          "272: av_cold void ff_vc2enc_free_transforms(VC2TransformContext *s)",
          "273: {",
          "275: }",
          "",
          "[Removed Lines]",
          "258: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_width, int p_height)",
          "265:     s->buffer = av_malloc(2*p_width*p_height*sizeof(dwtcoef));",
          "274:     av_freep(&s->buffer);",
          "",
          "[Added Lines]",
          "258: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_stride,",
          "259:                                       int p_height, int slice_w, int slice_h)",
          "267:     s->buffer = av_calloc((p_stride + slice_w)*(p_height + slice_h), sizeof(dwtcoef));",
          "271:     s->padding = (slice_h >> 1)*p_stride + (slice_w >> 1);",
          "272:     s->buffer += s->padding;",
          "279:     av_free(s->buffer - s->padding);",
          "280:     s->buffer = NULL;",
          "",
          "---------------"
        ],
        "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h": [
          "File: libavcodec/vc2enc_dwt.h -> libavcodec/vc2enc_dwt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: typedef struct VC2TransformContext {",
          "43:     dwtcoef *buffer;",
          "44:     void (*vc2_subband_dwt[VC2_TRANSFORMS_NB])(struct VC2TransformContext *t,",
          "45:                                                dwtcoef *data, ptrdiff_t stride,",
          "46:                                                int width, int height);",
          "47: } VC2TransformContext;",
          "50: void ff_vc2enc_free_transforms(VC2TransformContext *t);",
          "",
          "[Removed Lines]",
          "49: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_width, int p_height);",
          "",
          "[Added Lines]",
          "44:     int padding;",
          "50: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_stride, int p_height,",
          "51:                                int slice_w, int slice_h);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a94cb36ab2ad99d3a1331c9f91831ef593d94f74",
      "candidate_info": {
        "commit_hash": "a94cb36ab2ad99d3a1331c9f91831ef593d94f74",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/a94cb36ab2ad99d3a1331c9f91831ef593d94f74",
        "files": [
          "libavcodec/vc2enc.c",
          "libavcodec/vc2enc_dwt.c",
          "libavcodec/vc2enc_dwt.h"
        ],
        "message": "vc2enc_dwt: pad the temporary buffer by the slice size\n\nSince non-Haar wavelets need to look into pixels outside the frame, we\nneed to pad the buffer. The old factor of two seemed to be a workaround\nthat fact and only padded to the left and bottom. This correctly pads\nby the slice size and as such reduces memory usage and potential\nexploits.\nReported by Liu Bingchang.\n\nIdeally, there should be no temporary buffer but the encoder is designed\nto deinterleave the coefficients into the classical wavelet structure\nwith the lower frequency values in the top left corner.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>\n(cherry picked from commit 3228ac730c11eca49d5680d5550128e397061c85)",
        "before_after_code_files": [
          "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
          "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
          "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
            "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
            "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
          ],
          "candidate": [
            "libavcodec/vc2enc.c||libavcodec/vc2enc.c",
            "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c",
            "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vc2enc.c||libavcodec/vc2enc.c": [
          "File: libavcodec/vc2enc.c -> libavcodec/vc2enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1191:         if (ff_vc2enc_init_transforms(&s->transform_args[i].t,",
          "1192:                                       s->plane[i].coef_stride,",
          "1194:             goto alloc_fail;",
          "1195:     }",
          "",
          "[Removed Lines]",
          "1193:                                       s->plane[i].dwt_height))",
          "",
          "[Added Lines]",
          "1193:                                       s->plane[i].dwt_height,",
          "1194:                                       s->slice_width, s->slice_height))",
          "",
          "---------------"
        ],
        "libavcodec/vc2enc_dwt.c||libavcodec/vc2enc_dwt.c": [
          "File: libavcodec/vc2enc_dwt.c -> libavcodec/vc2enc_dwt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:     dwt_haar(t, data, stride, width, height, 1);",
          "256: }",
          "259: {",
          "260:     s->vc2_subband_dwt[VC2_TRANSFORM_9_7]    = vc2_subband_dwt_97;",
          "261:     s->vc2_subband_dwt[VC2_TRANSFORM_5_3]    = vc2_subband_dwt_53;",
          "262:     s->vc2_subband_dwt[VC2_TRANSFORM_HAAR]   = vc2_subband_dwt_haar;",
          "263:     s->vc2_subband_dwt[VC2_TRANSFORM_HAAR_S] = vc2_subband_dwt_haar_shift;",
          "266:     if (!s->buffer)",
          "267:         return 1;",
          "269:     return 0;",
          "270: }",
          "272: av_cold void ff_vc2enc_free_transforms(VC2TransformContext *s)",
          "273: {",
          "275: }",
          "",
          "[Removed Lines]",
          "258: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_width, int p_height)",
          "265:     s->buffer = av_malloc(2*p_width*p_height*sizeof(dwtcoef));",
          "274:     av_freep(&s->buffer);",
          "",
          "[Added Lines]",
          "258: av_cold int ff_vc2enc_init_transforms(VC2TransformContext *s, int p_stride,",
          "259:                                       int p_height, int slice_w, int slice_h)",
          "267:     s->buffer = av_calloc((p_stride + slice_w)*(p_height + slice_h), sizeof(dwtcoef));",
          "271:     s->padding = (slice_h >> 1)*p_stride + (slice_w >> 1);",
          "272:     s->buffer += s->padding;",
          "279:     av_free(s->buffer - s->padding);",
          "280:     s->buffer = NULL;",
          "",
          "---------------"
        ],
        "libavcodec/vc2enc_dwt.h||libavcodec/vc2enc_dwt.h": [
          "File: libavcodec/vc2enc_dwt.h -> libavcodec/vc2enc_dwt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: typedef struct VC2TransformContext {",
          "43:     dwtcoef *buffer;",
          "44:     void (*vc2_subband_dwt[VC2_TRANSFORMS_NB])(struct VC2TransformContext *t,",
          "45:                                                dwtcoef *data, ptrdiff_t stride,",
          "46:                                                int width, int height);",
          "47: } VC2TransformContext;",
          "50: void ff_vc2enc_free_transforms(VC2TransformContext *t);",
          "",
          "[Removed Lines]",
          "49: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_width, int p_height);",
          "",
          "[Added Lines]",
          "44:     int padding;",
          "50: int  ff_vc2enc_init_transforms(VC2TransformContext *t, int p_stride, int p_height,",
          "51:                                int slice_w, int slice_h);",
          "",
          "---------------"
        ]
      }
    }
  ]
}