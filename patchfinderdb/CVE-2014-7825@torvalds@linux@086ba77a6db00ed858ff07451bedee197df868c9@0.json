{
  "cve_id": "CVE-2014-7825",
  "cve_desc": "kernel/trace/trace_syscalls.c in the Linux kernel through 3.17.2 does not properly handle private syscall numbers during use of the perf subsystem, which allows local users to cause a denial of service (out-of-bounds read and OOPS) or bypass the ASLR protection mechanism via a crafted application.",
  "repo": "torvalds/linux",
  "patch_hash": "086ba77a6db00ed858ff07451bedee197df868c9",
  "patch_info": {
    "commit_hash": "086ba77a6db00ed858ff07451bedee197df868c9",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/086ba77a6db00ed858ff07451bedee197df868c9",
    "files": [
      "kernel/trace/trace_syscalls.c"
    ],
    "message": "tracing/syscalls: Ignore numbers outside NR_syscalls' range\n\nARM has some private syscalls (for example, set_tls(2)) which lie\noutside the range of NR_syscalls.  If any of these are called while\nsyscall tracing is being performed, out-of-bounds array access will\noccur in the ftrace and perf sys_{enter,exit} handlers.\n\n # trace-cmd record -e raw_syscalls:* true && trace-cmd report\n ...\n true-653   [000]   384.675777: sys_enter:            NR 192 (0, 1000, 3, 4000022, ffffffff, 0)\n true-653   [000]   384.675812: sys_exit:             NR 192 = 1995915264\n true-653   [000]   384.675971: sys_enter:            NR 983045 (76f74480, 76f74000, 76f74b28, 76f74480, 76f76f74, 1)\n true-653   [000]   384.675988: sys_exit:             NR 983045 = 0\n ...\n\n # trace-cmd record -e syscalls:* true\n [   17.289329] Unable to handle kernel paging request at virtual address aaaaaace\n [   17.289590] pgd = 9e71c000\n [   17.289696] [aaaaaace] *pgd=00000000\n [   17.289985] Internal error: Oops: 5 [#1] PREEMPT SMP ARM\n [   17.290169] Modules linked in:\n [   17.290391] CPU: 0 PID: 704 Comm: true Not tainted 3.18.0-rc2+ #21\n [   17.290585] task: 9f4dab00 ti: 9e710000 task.ti: 9e710000\n [   17.290747] PC is at ftrace_syscall_enter+0x48/0x1f8\n [   17.290866] LR is at syscall_trace_enter+0x124/0x184\n\nFix this by ignoring out-of-NR_syscalls-bounds syscall numbers.\n\nCommit cd0980fc8add \"tracing: Check invalid syscall nr while tracing syscalls\"\nadded the check for less than zero, but it should have also checked\nfor greater than NR_syscalls.\n\nLink: http://lkml.kernel.org/p/1414620418-29472-1-git-send-email-rabin@rab.in\n\nFixes: cd0980fc8add \"tracing: Check invalid syscall nr while tracing syscalls\"\nCc: stable@vger.kernel.org # 2.6.33+\nSigned-off-by: Rabin Vincent <rabin@rab.in>\nSigned-off-by: Steven Rostedt <rostedt@goodmis.org>",
    "before_after_code_files": [
      "kernel/trace/trace_syscalls.c||kernel/trace/trace_syscalls.c"
    ]
  },
  "patch_diff": {
    "kernel/trace/trace_syscalls.c||kernel/trace/trace_syscalls.c": [
      "File: kernel/trace/trace_syscalls.c -> kernel/trace/trace_syscalls.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "313:  int size;",
      "315:  syscall_nr = trace_get_syscall_nr(current, regs);",
      "317:   return;",
      "",
      "[Removed Lines]",
      "316:  if (syscall_nr < 0)",
      "",
      "[Added Lines]",
      "316:  if (syscall_nr < 0 || syscall_nr >= NR_syscalls)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "360:  int syscall_nr;",
      "362:  syscall_nr = trace_get_syscall_nr(current, regs);",
      "364:   return;",
      "",
      "[Removed Lines]",
      "363:  if (syscall_nr < 0)",
      "",
      "[Added Lines]",
      "363:  if (syscall_nr < 0 || syscall_nr >= NR_syscalls)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "567:  int size;",
      "569:  syscall_nr = trace_get_syscall_nr(current, regs);",
      "571:   return;",
      "572:  if (!test_bit(syscall_nr, enabled_perf_enter_syscalls))",
      "573:   return;",
      "",
      "[Removed Lines]",
      "570:  if (syscall_nr < 0)",
      "",
      "[Added Lines]",
      "570:  if (syscall_nr < 0 || syscall_nr >= NR_syscalls)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "641:  int size;",
      "643:  syscall_nr = trace_get_syscall_nr(current, regs);",
      "645:   return;",
      "646:  if (!test_bit(syscall_nr, enabled_perf_exit_syscalls))",
      "647:   return;",
      "",
      "[Removed Lines]",
      "644:  if (syscall_nr < 0)",
      "",
      "[Added Lines]",
      "644:  if (syscall_nr < 0 || syscall_nr >= NR_syscalls)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4750a0d112cbfcc744929f1530ffe3193436766c",
      "candidate_info": {
        "commit_hash": "4750a0d112cbfcc744929f1530ffe3193436766c",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/4750a0d112cbfcc744929f1530ffe3193436766c",
        "files": [
          "arch/x86/kernel/cpu/microcode/amd_early.c"
        ],
        "message": "x86, microcode, AMD: Fix early ucode loading on 32-bit\n\nKonrad triggered the following splat below in a 32-bit guest on an AMD\nbox. As it turns out, in save_microcode_in_initrd_amd() we're using the\n*physical* address of the container *after* we have enabled paging and\nthus we #PF in load_microcode_amd() when trying to access the microcode\ncontainer in the ramdisk range.\n\nBecause the ramdisk is exactly there:\n\n[    0.000000] RAMDISK: [mem 0x35e04000-0x36ef9fff]\n\nand we fault at 0x35e04304.\n\nAnd since this guest doesn't relocate the ramdisk, we don't do the\ncomputation which will give us the correct virtual address and we end up\nwith the PA.\n\nSo, we should actually be using virtual addresses on 32-bit too by the\ntime we're freeing the initrd. Do that then!\n\nUnpacking initramfs...\nBUG: unable to handle kernel paging request at 35d4e304\nIP: [<c042e905>] load_microcode_amd+0x25/0x4a0\n*pde = 00000000\nOops: 0000 [#1] SMP\nModules linked in:\nCPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.17.1-302.fc21.i686 #1\nHardware name: Xen HVM domU, BIOS 4.4.1 10/01/2014\ntask: f5098000 ti: f50d0000 task.ti: f50d0000\nEIP: 0060:[<c042e905>] EFLAGS: 00010246 CPU: 0\nEIP is at load_microcode_amd+0x25/0x4a0\nEAX: 00000000 EBX: f6e9ec4c ECX: 00001ec4 EDX: 00000000\nESI: f5d4e000 EDI: 35d4e2fc EBP: f50d1ed0 ESP: f50d1e94\n DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068\nCR0: 8005003b CR2: 35d4e304 CR3: 00e33000 CR4: 000406d0\nStack:\n 00000000 00000000 f50d1ebc f50d1ec4 f5d4e000 c0d7735a f50d1ed0 15a3d17f\n f50d1ec4 00600f20 00001ec4 bfb83203 f6e9ec4c f5d4e000 c0d7735a f50d1ed8\n c0d80861 f50d1ee0 c0d80429 f50d1ef0 c0d889a9 f5d4e000 c0000000 f50d1f04\nCall Trace:\n? unpack_to_rootfs\n? unpack_to_rootfs\nsave_microcode_in_initrd_amd\nsave_microcode_in_initrd\nfree_initrd_mem\npopulate_rootfs\n? unpack_to_rootfs\ndo_one_initcall\n? unpack_to_rootfs\n? repair_env_string\n? proc_mkdir\nkernel_init_freeable\nkernel_init\nret_from_kernel_thread\n? rest_init\n\nReported-and-tested-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nReferences: https://bugzilla.redhat.com/show_bug.cgi?id=1158204\nFixes: 75a1ba5b2c52 (\"x86, microcode, AMD: Unify valid container checks\")\nSigned-off-by: Borislav Petkov <bp@suse.de>\nCc: <stable@vger.kernel.org> # v3.14+\nLink: http://lkml.kernel.org/r/20141101100100.GA4462@pd.tnic\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>",
        "before_after_code_files": [
          "arch/x86/kernel/cpu/microcode/amd_early.c||arch/x86/kernel/cpu/microcode/amd_early.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/x86/kernel/cpu/microcode/amd_early.c||arch/x86/kernel/cpu/microcode/amd_early.c": [
          "File: arch/x86/kernel/cpu/microcode/amd_early.c -> arch/x86/kernel/cpu/microcode/amd_early.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "348: {",
          "349:  unsigned long cont;",
          "350:  enum ucode_state ret;",
          "351:  u32 eax;",
          "353:  if (!container)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:  u8 *cont_va;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "356: #ifdef CONFIG_X86_32",
          "357:  get_bsp_sig();",
          "359: #else",
          "365: #endif",
          "",
          "[Removed Lines]",
          "358:  cont = (unsigned long)container;",
          "364:  cont = __pa(container);",
          "",
          "[Added Lines]",
          "359:  cont = (unsigned long)container;",
          "360:  cont_va = __va(container);",
          "366:  cont    = __pa(container);",
          "367:  cont_va = container;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "372:  if (relocated_ramdisk)",
          "373:   container = (u8 *)(__va(relocated_ramdisk) +",
          "374:         (cont - boot_params.hdr.ramdisk_image));",
          "376:  if (ucode_new_rev)",
          "377:   pr_info(\"microcode: updated early to new patch_level=0x%08x\\n\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "378:  else",
          "379:   container = cont_va;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "805dbe17d1c832ad341f14fae8cedf41b67ca6fa",
      "candidate_info": {
        "commit_hash": "805dbe17d1c832ad341f14fae8cedf41b67ca6fa",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/805dbe17d1c832ad341f14fae8cedf41b67ca6fa",
        "files": [
          "drivers/net/wireless/mac80211_hwsim.c"
        ],
        "message": "mac80211_hwsim: release driver when ieee80211_register_hw fails\n\nThe driver is not released when ieee80211_register_hw fails in\nmac80211_hwsim_create_radio, leading to the access to the unregistered (and\npossibly freed) device in platform_driver_unregister:\n\n[    0.447547] mac80211_hwsim: ieee80211_register_hw failed (-2)\n[    0.448292] ------------[ cut here ]------------\n[    0.448854] WARNING: CPU: 0 PID: 1 at ../include/linux/kref.h:47 kobject_get+0x33/0x50()\n[    0.449839] CPU: 0 PID: 1 Comm: swapper Not tainted 3.17.0-00001-gdd46990-dirty #2\n[    0.450813] Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011\n[    0.451512]  00000000 00000000 78025e38 7967c6c6 78025e68 7905e09b 7988b480 00000000\n[    0.452579]  00000001 79887d62 0000002f 79170bb3 79170bb3 78397008 79ac9d74 00000001\n[    0.453614]  78025e78 7905e15d 00000009 00000000 78025e84 79170bb3 78397000 78025e8c\n[    0.454632] Call Trace:\n[    0.454921]  [<7967c6c6>] dump_stack+0x16/0x18\n[    0.455453]  [<7905e09b>] warn_slowpath_common+0x6b/0x90\n[    0.456067]  [<79170bb3>] ? kobject_get+0x33/0x50\n[    0.456612]  [<79170bb3>] ? kobject_get+0x33/0x50\n[    0.457155]  [<7905e15d>] warn_slowpath_null+0x1d/0x20\n[    0.457748]  [<79170bb3>] kobject_get+0x33/0x50\n[    0.458274]  [<7925824f>] get_device+0xf/0x20\n[    0.458779]  [<7925b5cd>] driver_detach+0x3d/0xa0\n[    0.459331]  [<7925a3ff>] bus_remove_driver+0x8f/0xb0\n[    0.459927]  [<7925bf80>] ? class_unregister+0x40/0x80\n[    0.460660]  [<7925bad7>] driver_unregister+0x47/0x50\n[    0.461248]  [<7925c033>] ? class_destroy+0x13/0x20\n[    0.461824]  [<7925d07b>] platform_driver_unregister+0xb/0x10\n[    0.462507]  [<79b51ba0>] init_mac80211_hwsim+0x3e8/0x3f9\n[    0.463161]  [<79b30c58>] do_one_initcall+0x106/0x1a9\n[    0.463758]  [<79b517b8>] ? if_spi_init_module+0xac/0xac\n[    0.464393]  [<79b517b8>] ? if_spi_init_module+0xac/0xac\n[    0.465001]  [<79071935>] ? parse_args+0x2f5/0x480\n[    0.465569]  [<7906b41e>] ? __usermodehelper_set_disable_depth+0x3e/0x50\n[    0.466345]  [<79b30dd9>] kernel_init_freeable+0xde/0x17d\n[    0.466972]  [<79b304d6>] ? do_early_param+0x7a/0x7a\n[    0.467546]  [<79677b1b>] kernel_init+0xb/0xe0\n[    0.468072]  [<79075f42>] ? schedule_tail+0x12/0x40\n[    0.468658]  [<79686580>] ret_from_kernel_thread+0x20/0x30\n[    0.469303]  [<79677b10>] ? rest_init+0xc0/0xc0\n[    0.469829] ---[ end trace ad8ac403ff8aef5c ]---\n[    0.470509] ------------[ cut here ]------------\n[    0.471047] WARNING: CPU: 0 PID: 1 at ../kernel/locking/lockdep.c:3161 __lock_acquire.isra.22+0x7aa/0xb00()\n[    0.472163] DEBUG_LOCKS_WARN_ON(id >= MAX_LOCKDEP_KEYS)\n[    0.472774] CPU: 0 PID: 1 Comm: swapper Tainted: G        W      3.17.0-00001-gdd46990-dirty #2\n[    0.473815] Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011\n[    0.474492]  78025de0 78025de0 78025da0 7967c6c6 78025dd0 7905e09b 79888931 78025dfc\n[    0.475515]  00000001 79888a93 00000c59 7907f33a 7907f33a 78028000 fffe9d09 00000000\n[    0.476519]  78025de8 7905e10e 00000009 78025de0 79888931 78025dfc 78025e24 7907f33a\n[    0.477523] Call Trace:\n[    0.477821]  [<7967c6c6>] dump_stack+0x16/0x18\n[    0.478352]  [<7905e09b>] warn_slowpath_common+0x6b/0x90\n[    0.478976]  [<7907f33a>] ? __lock_acquire.isra.22+0x7aa/0xb00\n[    0.479658]  [<7907f33a>] ? __lock_acquire.isra.22+0x7aa/0xb00\n[    0.480417]  [<7905e10e>] warn_slowpath_fmt+0x2e/0x30\n[    0.480479]  [<7907f33a>] __lock_acquire.isra.22+0x7aa/0xb00\n[    0.480479]  [<79078aa5>] ? sched_clock_cpu+0xb5/0xf0\n[    0.480479]  [<7907fd06>] lock_acquire+0x56/0x70\n[    0.480479]  [<7925b5e8>] ? driver_detach+0x58/0xa0\n[    0.480479]  [<79682d11>] mutex_lock_nested+0x61/0x2a0\n[    0.480479]  [<7925b5e8>] ? driver_detach+0x58/0xa0\n[    0.480479]  [<7925b5e8>] ? driver_detach+0x58/0xa0\n[    0.480479]  [<7925b5e8>] driver_detach+0x58/0xa0\n[    0.480479]  [<7925a3ff>] bus_remove_driver+0x8f/0xb0\n[    0.480479]  [<7925bf80>] ? class_unregister+0x40/0x80\n[    0.480479]  [<7925bad7>] driver_unregister+0x47/0x50\n[    0.480479]  [<7925c033>] ? class_destroy+0x13/0x20\n[    0.480479]  [<7925d07b>] platform_driver_unregister+0xb/0x10\n[    0.480479]  [<79b51ba0>] init_mac80211_hwsim+0x3e8/0x3f9\n[    0.480479]  [<79b30c58>] do_one_initcall+0x106/0x1a9\n[    0.480479]  [<79b517b8>] ? if_spi_init_module+0xac/0xac\n[    0.480479]  [<79b517b8>] ? if_spi_init_module+0xac/0xac\n[    0.480479]  [<79071935>] ? parse_args+0x2f5/0x480\n[    0.480479]  [<7906b41e>] ? __usermodehelper_set_disable_depth+0x3e/0x50\n[    0.480479]  [<79b30dd9>] kernel_init_freeable+0xde/0x17d\n[    0.480479]  [<79b304d6>] ? do_early_param+0x7a/0x7a\n[    0.480479]  [<79677b1b>] kernel_init+0xb/0xe0\n[    0.480479]  [<79075f42>] ? schedule_tail+0x12/0x40\n[    0.480479]  [<79686580>] ret_from_kernel_thread+0x20/0x30\n[    0.480479]  [<79677b10>] ? rest_init+0xc0/0xc0\n[    0.480479] ---[ end trace ad8ac403ff8aef5d ]---\n[    0.495478] BUG: unable to handle kernel paging request at 00200200\n[    0.496257] IP: [<79682de5>] mutex_lock_nested+0x135/0x2a0\n[    0.496923] *pde = 00000000\n[    0.497290] Oops: 0002 [#1]\n[    0.497653] CPU: 0 PID: 1 Comm: swapper Tainted: G        W      3.17.0-00001-gdd46990-dirty #2\n[    0.498659] Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011\n[    0.499321] task: 78028000 ti: 78024000 task.ti: 78024000\n[    0.499955] EIP: 0060:[<79682de5>] EFLAGS: 00010097 CPU: 0\n[    0.500620] EIP is at mutex_lock_nested+0x135/0x2a0\n[    0.501145] EAX: 00200200 EBX: 78397434 ECX: 78397460 EDX: 78025e70\n[    0.501816] ESI: 00000246 EDI: 78028000 EBP: 78025e8c ESP: 78025e54\n[    0.502497]  DS: 007b ES: 007b FS: 0000 GS: 0000 SS: 0068\n[    0.503076] CR0: 8005003b CR2: 00200200 CR3: 01b9d000 CR4: 00000690\n[    0.503773] Stack:\n[    0.503998]  00000000 00000001 00000000 7925b5e8 78397460 7925b5e8 78397474 78397460\n[    0.504944]  00200200 11111111 78025e70 78397000 79ac9d74 00000001 78025ea0 7925b5e8\n[    0.505451]  79ac9d74 fffffffe 00000001 78025ebc 7925a3ff 7a251398 78025ec8 7925bf80\n[    0.505451] Call Trace:\n[    0.505451]  [<7925b5e8>] ? driver_detach+0x58/0xa0\n[    0.505451]  [<7925b5e8>] ? driver_detach+0x58/0xa0\n[    0.505451]  [<7925b5e8>] driver_detach+0x58/0xa0\n[    0.505451]  [<7925a3ff>] bus_remove_driver+0x8f/0xb0\n[    0.505451]  [<7925bf80>] ? class_unregister+0x40/0x80\n[    0.505451]  [<7925bad7>] driver_unregister+0x47/0x50\n[    0.505451]  [<7925c033>] ? class_destroy+0x13/0x20\n[    0.505451]  [<7925d07b>] platform_driver_unregister+0xb/0x10\n[    0.505451]  [<79b51ba0>] init_mac80211_hwsim+0x3e8/0x3f9\n[    0.505451]  [<79b30c58>] do_one_initcall+0x106/0x1a9\n[    0.505451]  [<79b517b8>] ? if_spi_init_module+0xac/0xac\n[    0.505451]  [<79b517b8>] ? if_spi_init_module+0xac/0xac\n[    0.505451]  [<79071935>] ? parse_args+0x2f5/0x480\n[    0.505451]  [<7906b41e>] ? __usermodehelper_set_disable_depth+0x3e/0x50\n[    0.505451]  [<79b30dd9>] kernel_init_freeable+0xde/0x17d\n[    0.505451]  [<79b304d6>] ? do_early_param+0x7a/0x7a\n[    0.505451]  [<79677b1b>] kernel_init+0xb/0xe0\n[    0.505451]  [<79075f42>] ? schedule_tail+0x12/0x40\n[    0.505451]  [<79686580>] ret_from_kernel_thread+0x20/0x30\n[    0.505451]  [<79677b10>] ? rest_init+0xc0/0xc0\n[    0.505451] Code: 89 d8 e8 cf 9b 9f ff 8b 4f 04 8d 55 e4 89 d8 e8 72 9d 9f ff 8d 43 2c 89 c1 89 45 d8 8b 43 30 8d 55 e4 89 53 30 89 4d e4 89 45 e8 <89> 10 8b 55 dc 8b 45 e0 89 7d ec e8 db af 9f ff eb 11 90 31 c0\n[    0.505451] EIP: [<79682de5>] mutex_lock_nested+0x135/0x2a0 SS:ESP 0068:78025e54\n[    0.505451] CR2: 0000000000200200\n[    0.505451] ---[ end trace ad8ac403ff8aef5e ]---\n[    0.505451] Kernel panic - not syncing: Fatal exception\n\nFixes: 9ea927748ced (\"mac80211_hwsim: Register and bind to driver\")\nReported-by: Fengguang Wu <fengguang.wu@intel.com>\nSigned-off-by: Junjie Mao <eternal.n08@gmail.com>\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
        "before_after_code_files": [
          "drivers/net/wireless/mac80211_hwsim.c||drivers/net/wireless/mac80211_hwsim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/mac80211_hwsim.c||drivers/net/wireless/mac80211_hwsim.c": [
          "File: drivers/net/wireless/mac80211_hwsim.c -> drivers/net/wireless/mac80211_hwsim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1987:  if (err != 0) {",
          "1988:   printk(KERN_DEBUG \"mac80211_hwsim: device_bind_driver failed (%d)\\n\",",
          "1989:          err);",
          "1991:  }",
          "1993:  skb_queue_head_init(&data->pending);",
          "",
          "[Removed Lines]",
          "1990:   goto failed_hw;",
          "",
          "[Added Lines]",
          "1990:   goto failed_bind;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2183:  return idx;",
          "2185: failed_hw:",
          "2186:  device_unregister(data->dev);",
          "2187: failed_drvdata:",
          "2188:  ieee80211_free_hw(hw);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2186:  device_release_driver(data->dev);",
          "2187: failed_bind:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a41537e69b4aa43f0fea02498c2595a81267383b",
      "candidate_info": {
        "commit_hash": "a41537e69b4aa43f0fea02498c2595a81267383b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a41537e69b4aa43f0fea02498c2595a81267383b",
        "files": [
          "fs/ext4/file.c"
        ],
        "message": "ext4: prevent bugon on race between write/fcntl\n\nO_DIRECT flags can be toggeled via fcntl(F_SETFL). But this value checked\ntwice inside ext4_file_write_iter() and __generic_file_write() which\nresult in BUG_ON inside ext4_direct_IO.\n\nLet's initialize iocb->private unconditionally.\n\nTESTCASE: xfstest:generic/036  https://patchwork.ozlabs.org/patch/402445/\n\n#TYPICAL STACK TRACE:\nkernel BUG at fs/ext4/inode.c:2960!\ninvalid opcode: 0000 [#1] SMP\nModules linked in: brd iTCO_wdt lpc_ich mfd_core igb ptp dm_mirror dm_region_hash dm_log dm_mod\nCPU: 6 PID: 5505 Comm: aio-dio-fcntl-r Not tainted 3.17.0-rc2-00176-gff5c017 #161\nHardware name: Intel Corporation W2600CR/W2600CR, BIOS SE5C600.86B.99.99.x028.061320111235 06/13/2011\ntask: ffff88080e95a7c0 ti: ffff88080f908000 task.ti: ffff88080f908000\nRIP: 0010:[<ffffffff811fabf2>]  [<ffffffff811fabf2>] ext4_direct_IO+0x162/0x3d0\nRSP: 0018:ffff88080f90bb58  EFLAGS: 00010246\nRAX: 0000000000000400 RBX: ffff88080fdb2a28 RCX: 00000000a802c818\nRDX: 0000040000080000 RSI: ffff88080d8aeb80 RDI: 0000000000000001\nRBP: ffff88080f90bbc8 R08: 0000000000000000 R09: 0000000000001581\nR10: 0000000000000000 R11: 0000000000000000 R12: ffff88080d8aeb80\nR13: ffff88080f90bbf8 R14: ffff88080fdb28c8 R15: ffff88080fdb2a28\nFS:  00007f23b2055700(0000) GS:ffff880818400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f23b2045000 CR3: 000000080cedf000 CR4: 00000000000407e0\nStack:\n ffff88080f90bb98 0000000000000000 7ffffffffffffffe ffff88080fdb2c30\n 0000000000000200 0000000000000200 0000000000000001 0000000000000200\n ffff88080f90bbc8 ffff88080fdb2c30 ffff88080f90be08 0000000000000200\nCall Trace:\n [<ffffffff8112ca9d>] generic_file_direct_write+0xed/0x180\n [<ffffffff8112f2b2>] __generic_file_write_iter+0x222/0x370\n [<ffffffff811f495b>] ext4_file_write_iter+0x34b/0x400\n [<ffffffff811bd709>] ? aio_run_iocb+0x239/0x410\n [<ffffffff811bd709>] ? aio_run_iocb+0x239/0x410\n [<ffffffff810990e5>] ? local_clock+0x25/0x30\n [<ffffffff810abd94>] ? __lock_acquire+0x274/0x700\n [<ffffffff811f4610>] ? ext4_unwritten_wait+0xb0/0xb0\n [<ffffffff811bd756>] aio_run_iocb+0x286/0x410\n [<ffffffff810990e5>] ? local_clock+0x25/0x30\n [<ffffffff810ac359>] ? lock_release_holdtime+0x29/0x190\n [<ffffffff811bc05b>] ? lookup_ioctx+0x4b/0xf0\n [<ffffffff811bde3b>] do_io_submit+0x55b/0x740\n [<ffffffff811bdcaa>] ? do_io_submit+0x3ca/0x740\n [<ffffffff811be030>] SyS_io_submit+0x10/0x20\n [<ffffffff815ce192>] system_call_fastpath+0x16/0x1b\nCode: 01 48 8b 80 f0 01 00 00 48 8b 18 49 8b 45 10 0f 85 f1 01 00 00 48 03 45 c8 48 3b 43 48 0f 8f e3 01 00 00 49 83 7c\n24 18 00 75 04 <0f> 0b eb fe f0 ff 83 ec 01 00 00 49 8b 44 24 18 8b 00 85 c0 89\nRIP  [<ffffffff811fabf2>] ext4_direct_IO+0x162/0x3d0\n RSP <ffff88080f90bb58>\n\nReported-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>\nSigned-off-by: Dmitry Monakhov <dmonakhov@openvz.org>\nCc: stable@vger.kernel.org",
        "before_after_code_files": [
          "fs/ext4/file.c||fs/ext4/file.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/ext4/file.c||fs/ext4/file.c": [
          "File: fs/ext4/file.c -> fs/ext4/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:    iov_iter_truncate(from, sbi->s_bitmap_maxbytes - pos);",
          "138:  }",
          "140:  if (o_direct) {",
          "141:   blk_start_plug(&plug);",
          "146:   if (ext4_should_dioread_nolock(inode) && !aio_mutex &&",
          "",
          "[Removed Lines]",
          "143:   iocb->private = &overwrite;",
          "",
          "[Added Lines]",
          "140:  iocb->private = &overwrite;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4c4a4e068a3f43b84bc1bcb9beb295dd5ff2529",
      "candidate_info": {
        "commit_hash": "f4c4a4e068a3f43b84bc1bcb9beb295dd5ff2529",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f4c4a4e068a3f43b84bc1bcb9beb295dd5ff2529",
        "files": [
          "drivers/net/ethernet/freescale/fec_main.c"
        ],
        "message": "net: fec: fix suspend broken on multiple MACs sillicons\n\nOn i.MX6SX sdb platform, there has two same enet MACs, after system up,\njust eth0 is up, and then do suspend/resume test:\n\n[   50.437967] PM: Syncing filesystems ... done.\n[   50.476924] Freezing user space processes ... (elapsed 0.005 seconds) done.\n[   50.490093] Freezing remaining freezable tasks ... (elapsed 0.004 seconds) done.\n[   50.559771] ------------[ cut here ]------------\n[   50.564453] WARNING: CPU: 0 PID: 575 at drivers/clk/clk.c:851 __clk_disable+0x60/0x6c()\n[   50.572475] Modules linked in:\n[   50.575578] CPU: 0 PID: 575 Comm: sh Not tainted 3.18.0-rc2-next-20141031-00007-gf61135b #21\n[   50.584031] Backtrace:\n[   50.586550] [<80011ecc>] (dump_backtrace) from [<8001206c>] (show_stack+0x18/0x1c)\n[   50.594136]  r6:808a7a54 r5:00000000 r4:00000000 r3:00000000\n[   50.599920] [<80012054>] (show_stack) from [<806ab3c0>] (dump_stack+0x80/0x9c)\n[   50.607187] [<806ab340>] (dump_stack) from [<8002a3e8>] (warn_slowpath_common+0x6c/0x8c)\n[   50.615294]  r5:00000353 r4:00000000\n[   50.618940] [<8002a37c>] (warn_slowpath_common) from [<8002a42c>] (warn_slowpath_null+0x24/0x2c)\n[   50.627738]  r8:00000000 r7:be144c44 r6:be015600 r5:80070013 r4:be015600\n[   50.634573] [<8002a408>] (warn_slowpath_null) from [<804f8d4c>] (__clk_disable+0x60/0x6c)\n[   50.642777] [<804f8cec>] (__clk_disable) from [<804f8e5c>] (clk_disable+0x2c/0x38)\n[   50.650359]  r4:be015600 r3:00000000\n[   50.654006] [<804f8e30>] (clk_disable) from [<80420ab4>] (fec_enet_clk_enable+0xc4/0x258)\n[   50.662196]  r5:be3cb620 r4:be3cb000\n[   50.665838] [<804209f0>] (fec_enet_clk_enable) from [<80421178>] (fec_suspend+0x30/0x180)\n[   50.674026]  r7:be144c44 r6:be144c10 r5:8037f5a4 r4:be3cb000\n[   50.679802] [<80421148>] (fec_suspend) from [<8037f5d8>] (platform_pm_suspend+0x34/0x64)\n[   50.687906]  r10:00000000 r9:00000000 r8:00000000 r7:be144c44 r6:be144c10 r5:8037f5a4\n[   50.695852]  r4:be144c10 r3:80421148\n[   50.699511] [<8037f5a4>] (platform_pm_suspend) from [<8038784c>] (dpm_run_callback.isra.14+0x34/0x6c)\n[   50.708764] [<80387818>] (dpm_run_callback.isra.14) from [<80387f00>] (__device_suspend+0x12c/0x2a4)\n[   50.717909]  r9:8098ec8c r8:80973bec r6:00000002 r5:811c7038 r4:be144c10\n[   50.724746] [<80387dd4>] (__device_suspend) from [<803894fc>] (dpm_suspend+0x64/0x224)\n[   50.732675]  r8:80973bec r7:be144c10 r6:8098ec24 r5:811c7038 r4:be144cc4\n[   50.739509] [<80389498>] (dpm_suspend) from [<8038999c>] (dpm_suspend_start+0x60/0x68)\n[   50.747438]  r10:8082fa24 r9:00000000 r8:00000004 r7:00000003 r6:00000000 r5:8116ec80\n[   50.755386]  r4:00000002\n[   50.757969] [<8038993c>] (dpm_suspend_start) from [<800679d8>] (suspend_devices_and_enter+0x90/0x3ec)\n[   50.767202]  r4:00000003 r3:8116eca0\n[   50.770843] [<80067948>] (suspend_devices_and_enter) from [<80067f40>] (pm_suspend+0x20c/0x2a4)\n[   50.779553]  r8:00000004 r7:00000003 r6:00000000 r5:8116ec8c r4:00000003\n[   50.786394] [<80067d34>] (pm_suspend) from [<80066858>] (state_store+0x70/0xc0)\n[   50.793718]  r6:8116ec90 r5:00000003 r4:bd88a800 r3:0000006d\n[   50.799496] [<800667e8>] (state_store) from [<802b0384>] (kobj_attr_store+0x1c/0x28)\n[   50.807251]  r10:bd399f78 r8:00000000 r7:bd88a800 r6:bd88a800 r5:00000004 r4:bd085680\n[   50.815219] [<802b0368>] (kobj_attr_store) from [<80153090>] (sysfs_kf_write+0x54/0x58)\n[   50.823252] [<8015303c>] (sysfs_kf_write) from [<80151fd8>] (kernfs_fop_write+0xd0/0x194)\n[   50.831441]  r6:00000004 r5:bd08568c r4:bd085680 r3:8015303c\n[   50.837220] [<80151f08>] (kernfs_fop_write) from [<800eddb4>] (vfs_write+0xb8/0x1a8)\n[   50.844975]  r10:00000000 r9:00000000 r8:00000000 r7:bd399f78 r6:01336408 r5:00000004\n[   50.852924]  r4:bc584dc0\n[   50.855505] [<800edcfc>] (vfs_write) from [<800ee0b8>] (SyS_write+0x48/0x88)\n[   50.862567]  r10:00000000 r8:00000000 r7:01336408 r6:00000004 r5:bc584dc0 r4:bc584dc0\n[   50.870537] [<800ee070>] (SyS_write) from [<8000eb00>] (ret_fast_syscall+0x0/0x48)\n[   50.878120]  r9:bd398000 r8:8000ecc4 r7:00000004 r6:76f42b48 r5:01336408 r4:00000004\n[   50.885983] ---[ end trace 7545115d752a316a ]---\n[   50.890765] ------------[ cut here ]------------\n\nThe root cause is that eth1 is not opened and clock is not enabled, and .suspend() still\ncall .fec_enet_clk_enable() to disable clock.\n\nTo avoid the broken, let it check network device up status by calling .netif_running()\nbefore disable/enable clocks.\n\nSigned-off-by: Fugang Duan <B38611@freescale.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "drivers/net/ethernet/freescale/fec_main.c||drivers/net/ethernet/freescale/fec_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/ethernet/freescale/fec_main.c||drivers/net/ethernet/freescale/fec_main.c": [
          "File: drivers/net/ethernet/freescale/fec_main.c -> drivers/net/ethernet/freescale/fec_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3343:   netif_device_detach(ndev);",
          "3344:   netif_tx_unlock_bh(ndev);",
          "3345:   fec_stop(ndev);",
          "3346:  }",
          "3347:  rtnl_unlock();",
          "3352:  if (fep->reg_phy)",
          "3353:   regulator_disable(fep->reg_phy);",
          "",
          "[Removed Lines]",
          "3349:  fec_enet_clk_enable(ndev, false);",
          "3350:  pinctrl_pm_select_sleep_state(&fep->pdev->dev);",
          "",
          "[Added Lines]",
          "3346:   fec_enet_clk_enable(ndev, false);",
          "3347:   pinctrl_pm_select_sleep_state(&fep->pdev->dev);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3367:    return ret;",
          "3368:  }",
          "3375:  rtnl_lock();",
          "3376:  if (netif_running(ndev)) {",
          "3377:   fec_restart(ndev);",
          "3378:   netif_tx_lock_bh(ndev);",
          "3379:   netif_device_attach(ndev);",
          "",
          "[Removed Lines]",
          "3370:  pinctrl_pm_select_default_state(&fep->pdev->dev);",
          "3371:  ret = fec_enet_clk_enable(ndev, true);",
          "3372:  if (ret)",
          "3373:   goto failed_clk;",
          "",
          "[Added Lines]",
          "3371:   pinctrl_pm_select_default_state(&fep->pdev->dev);",
          "3372:   ret = fec_enet_clk_enable(ndev, true);",
          "3373:   if (ret) {",
          "3374:    rtnl_unlock();",
          "3375:    goto failed_clk;",
          "3376:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "31ca09dd6becfd954098ca7ddb6c1e27b13fe5d7",
      "candidate_info": {
        "commit_hash": "31ca09dd6becfd954098ca7ddb6c1e27b13fe5d7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/31ca09dd6becfd954098ca7ddb6c1e27b13fe5d7",
        "files": [
          "drivers/net/wireless/iwlwifi/mvm/d3.c"
        ],
        "message": "iwlwifi: mvm: hold the rtnl when resuming from a d3 test\n\nWe use ieee80211_iter_keys() which requires the rtnl to be held.  If\nwe don't lock the rtnl, like we do when we suspend during a d3 test,\nwe get the following splat:\n\n RTNL: assertion failed at net/mac80211/key.c (566)\n CPU: 1 PID: 26529 Comm: cat Tainted: G        W  O 3.10.29-dev #1\n Hardware name: Dell Inc. Latitude E6430/0CPWYR, BIOS A09 12/13/2012\n  e7b15008 e7b15008 e68adc1c c168aa62 e68adc54 f91f20b6 f923700c f9236fd8\n  00000236 00000000 ece23874 00000000 f94941e0 00000000 e43b8e48 e7b15008\n  00000000 e8b69e78 e68adcc0 f9493ab9 e68adc68 00000000 e43b8e48 e7b15008\n Call Trace:\n  [<c168aa62>] dump_stack+0x16/0x18\n  [<f91f20b6>] ieee80211_iter_keys+0x166/0x170 [mac80211]\n  [<f94941e0>] ? iwl_mvm_query_wakeup_reasons+0x5f0/0x5f0 [iwlmvm]\n  [<f9493ab9>] iwl_mvm_setup_connection_keep.isra.5+0x99/0x1d0 [iwlmvm]\n  [<f9165e28>] ? cfg80211_report_wowlan_wakeup+0x308/0x510 [cfg80211]\n  [<f9493fe5>] iwl_mvm_query_wakeup_reasons+0x3f5/0x5f0 [iwlmvm]\n  [<c116125a>] ? init_object+0x3a/0x70\n  [<f8a5b8ee>] ? iwl_trans_pcie_d3_resume+0x1be/0x3a0 [iwlwifi]\n  [<f94956da>] __iwl_mvm_resume+0x14a/0x180 [iwlmvm]\n  [<f9495736>] iwl_mvm_d3_test_release+0x26/0xc0 [iwlmvm]\n  [<c117a64d>] __fput+0xad/0x210\n  [<c117a7bd>] ____fput+0xd/0x10\n  [<c10601a1>] task_work_run+0x81/0xb0\n  [<c1040fa5>] do_exit+0x255/0xac0\n  [<c104e511>] ? dequeue_signal+0x31/0x1a0\n  [<c1041888>] do_group_exit+0x38/0xa0\n  [<c10a6cfb>] ? trace_hardirqs_on+0xb/0x10\n  [<c1051c31>] get_signal_to_deliver+0x1e1/0x8e0\n  [<c104bd52>] ? try_to_del_timer_sync+0x42/0x60\n  [<c104bd70>] ? try_to_del_timer_sync+0x60/0x60\n  [<c168dc82>] ? schedule_timeout+0x102/0x2a0\n  [<c10011ba>] do_signal+0x3a/0x8e0\n  [<c104b190>] ? __internal_add_timer+0xb0/0xb0\n  [<c168de7a>] ? schedule_timeout_interruptible+0x1a/0x20\n  [<c104ce39>] ? msleep_interruptible+0x39/0x40\n  [<f94939a9>] ? iwl_mvm_d3_test_read+0x49/0x70 [iwlmvm]\n  [<c11797fc>] ? vfs_read+0x8c/0x160\n  [<c11243af>] ? SyS_fadvise64_64+0x15f/0x2b0\n  [<f9493960>] ? iwl_mvm_wowlan_program_keys+0x4a0/0x4a0 [iwlmvm]\n  [<c1179a57>] ? SyS_read+0x57/0xa0\n  [<c1001acf>] do_notify_resume+0x6f/0xa0\n  [<c1692500>] work_notifysig+0x29/0x31\n\nFix this by hold the rtnl lock when calling __iwl_mvm_resume() in the\nd3 test wake up path.\n\nSigned-off-by: Luciano Coelho <luciano.coelho@intel.com>\nSigned-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>",
        "before_after_code_files": [
          "drivers/net/wireless/iwlwifi/mvm/d3.c||drivers/net/wireless/iwlwifi/mvm/d3.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/iwlwifi/mvm/d3.c||drivers/net/wireless/iwlwifi/mvm/d3.c": [
          "File: drivers/net/wireless/iwlwifi/mvm/d3.c -> drivers/net/wireless/iwlwifi/mvm/d3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1741:  int remaining_time = 10;",
          "1743:  mvm->d3_test_active = false;",
          "1744:  __iwl_mvm_resume(mvm, true);",
          "1745:  iwl_abort_notification_waits(&mvm->notif_wait);",
          "1746:  ieee80211_restart_hw(mvm->hw);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1744:  rtnl_lock();",
          "1746:  rtnl_unlock();",
          "",
          "---------------"
        ]
      }
    }
  ]
}