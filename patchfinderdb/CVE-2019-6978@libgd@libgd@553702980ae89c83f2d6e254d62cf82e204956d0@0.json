{
  "cve_id": "CVE-2019-6978",
  "cve_desc": "The GD Graphics Library (aka LibGD) 2.2.5 has a double free in the gdImage*Ptr() functions in gd_gif_out.c, gd_jpeg.c, and gd_wbmp.c. NOTE: PHP is unaffected.",
  "repo": "libgd/libgd",
  "patch_hash": "553702980ae89c83f2d6e254d62cf82e204956d0",
  "patch_info": {
    "commit_hash": "553702980ae89c83f2d6e254d62cf82e204956d0",
    "repo": "libgd/libgd",
    "commit_url": "https://github.com/libgd/libgd/commit/553702980ae89c83f2d6e254d62cf82e204956d0",
    "files": [
      "src/gd_gif_out.c",
      "src/gd_jpeg.c",
      "src/gd_wbmp.c",
      "tests/jpeg/.gitignore",
      "tests/jpeg/CMakeLists.txt",
      "tests/jpeg/Makemodule.am",
      "tests/jpeg/jpeg_ptr_double_free.c"
    ],
    "message": "Fix #492: Potential double-free in gdImage*Ptr()\n\nWhenever `gdImage*Ptr()` calls `gdImage*Ctx()` and the latter fails, we\nmust not call `gdDPExtractData()`; otherwise a double-free would\nhappen.  Since `gdImage*Ctx()` are void functions, and we can't change\nthat for BC reasons, we're introducing static helpers which are used\ninternally.\n\nWe're adding a regression test for `gdImageJpegPtr()`, but not for\n`gdImageGifPtr()` and `gdImageWbmpPtr()` since we don't know how to\ntrigger failure of the respective `gdImage*Ctx()` calls.\n\nThis potential security issue has been reported by Solmaz Salimi (aka.\nRooney).",
    "before_after_code_files": [
      "src/gd_gif_out.c||src/gd_gif_out.c",
      "src/gd_jpeg.c||src/gd_jpeg.c",
      "src/gd_wbmp.c||src/gd_wbmp.c",
      "tests/jpeg/Makemodule.am||tests/jpeg/Makemodule.am",
      "tests/jpeg/jpeg_ptr_double_free.c||tests/jpeg/jpeg_ptr_double_free.c"
    ]
  },
  "patch_diff": {
    "src/gd_gif_out.c||src/gd_gif_out.c": [
      "File: src/gd_gif_out.c -> src/gd_gif_out.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "99: static void char_out(int c, GifCtx *ctx);",
      "100: static void flush_char(GifCtx *ctx);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "102: static int _gdImageGifCtx(gdImagePtr im, gdIOCtxPtr out);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "131:  void *rv;",
      "132:  gdIOCtx *out = gdNewDynamicCtx(2048, NULL);",
      "133:  if (out == NULL) return NULL;",
      "136:  out->gd_free(out);",
      "137:  return rv;",
      "138: }",
      "",
      "[Removed Lines]",
      "134:  gdImageGifCtx(im, out);",
      "135:  rv = gdDPExtractData(out, size);",
      "",
      "[Added Lines]",
      "135:  if (!_gdImageGifCtx(im, out)) {",
      "136:   rv = gdDPExtractData(out, size);",
      "137:  } else {",
      "138:   rv = NULL;",
      "139:  }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "222: BGD_DECLARE(void) gdImageGifCtx(gdImagePtr im, gdIOCtxPtr out)",
      "223: {",
      "224:  gdImagePtr pim = 0, tim = im;",
      "225:  int interlace, BitsPerPixel;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "227: {",
      "228:  _gdImageGifCtx(im, out);",
      "229: }",
      "232: static int _gdImageGifCtx(gdImagePtr im, gdIOCtxPtr out)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "232:   pim = gdImageCreatePaletteFromTrueColor(im, 1, 256);",
      "233:   if(!pim) {",
      "235:   }",
      "236:   tim = pim;",
      "237:  }",
      "",
      "[Removed Lines]",
      "234:    return;",
      "",
      "[Added Lines]",
      "244:    return 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "248:   gdImageDestroy( pim);",
      "249:  }",
      "250: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "261:  return 0;",
      "",
      "---------------"
    ],
    "src/gd_jpeg.c||src/gd_jpeg.c": [
      "File: src/gd_jpeg.c -> src/gd_jpeg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "117:  exit(99);",
      "118: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "120: static int _gdImageJpegCtx(gdImagePtr im, gdIOCtx *outfile, int quality);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "231:  void *rv;",
      "232:  gdIOCtx *out = gdNewDynamicCtx(2048, NULL);",
      "233:  if (out == NULL) return NULL;",
      "236:  out->gd_free(out);",
      "237:  return rv;",
      "238: }",
      "",
      "[Removed Lines]",
      "234:  gdImageJpegCtx(im, out, quality);",
      "235:  rv = gdDPExtractData(out, size);",
      "",
      "[Added Lines]",
      "236:  if (!_gdImageJpegCtx(im, out, quality)) {",
      "237:   rv = gdDPExtractData(out, size);",
      "238:  } else {",
      "239:   rv = NULL;",
      "240:  }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "255: BGD_DECLARE(void) gdImageJpegCtx(gdImagePtr im, gdIOCtx *outfile, int quality)",
      "256: {",
      "257:  struct jpeg_compress_struct cinfo;",
      "258:  struct jpeg_error_mgr jerr;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "261: {",
      "262:  _gdImageJpegCtx(im, outfile, quality);",
      "263: }",
      "266: static int _gdImageJpegCtx(gdImagePtr im, gdIOCtx *outfile, int quality)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "287:   if(row) {",
      "288:    gdFree(row);",
      "289:   }",
      "291:  }",
      "293:  cinfo.err->emit_message = jpeg_emit_message;",
      "",
      "[Removed Lines]",
      "290:   return;",
      "",
      "[Added Lines]",
      "301:   return 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "328:  if(row == 0) {",
      "329:   gd_error(\"gd-jpeg: error: unable to allocate JPEG row structure: gdCalloc returns NULL\\n\");",
      "330:   jpeg_destroy_compress(&cinfo);",
      "332:  }",
      "334:  rowptr[0] = row;",
      "",
      "[Removed Lines]",
      "331:   return;",
      "",
      "[Added Lines]",
      "342:   return 1;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "405:  jpeg_finish_compress(&cinfo);",
      "406:  jpeg_destroy_compress(&cinfo);",
      "407:  gdFree(row);",
      "408: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "419:  return 0;",
      "",
      "---------------"
    ],
    "src/gd_wbmp.c||src/gd_wbmp.c": [
      "File: src/gd_wbmp.c -> src/gd_wbmp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "88:  return (gdGetC((gdIOCtx *)in));",
      "89: }",
      "92:  Function: gdImageWBMPCtx",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "91: static int _gdImageWBMPCtx(gdImagePtr image, int fg, gdIOCtx *out);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "100:   out   - the stream where to write",
      "102: BGD_DECLARE(void) gdImageWBMPCtx(gdImagePtr image, int fg, gdIOCtx *out)",
      "103: {",
      "104:  int x, y, pos;",
      "105:  Wbmp *wbmp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "105: {",
      "106:  _gdImageWBMPCtx(image, fg, out);",
      "107: }",
      "110: static int _gdImageWBMPCtx(gdImagePtr image, int fg, gdIOCtx *out)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "108:  if((wbmp = createwbmp(gdImageSX(image), gdImageSY(image), WBMP_WHITE)) == NULL) {",
      "109:   gd_error(\"Could not create WBMP\\n\");",
      "111:  }",
      "",
      "[Removed Lines]",
      "110:   return;",
      "",
      "[Added Lines]",
      "118:   return 1;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "125:  if(writewbmp(wbmp, &gd_putout, out)) {",
      "126:   gd_error(\"Could not save WBMP\\n\");",
      "127:  }",
      "130:  freewbmp(wbmp);",
      "131: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "134:   freewbmp(wbmp);",
      "136:   return 1;",
      "142:  return 0;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "271:  void *rv;",
      "272:  gdIOCtx *out = gdNewDynamicCtx(2048, NULL);",
      "273:  if (out == NULL) return NULL;",
      "276:  out->gd_free(out);",
      "277:  return rv;",
      "278: }",
      "",
      "[Removed Lines]",
      "274:  gdImageWBMPCtx(im, fg, out);",
      "275:  rv = gdDPExtractData(out, size);",
      "",
      "[Added Lines]",
      "286:  if (!_gdImageWBMPCtx(im, fg, out)) {",
      "287:   rv = gdDPExtractData(out, size);",
      "288:  } else {",
      "289:   rv = NULL;",
      "290:  }",
      "",
      "---------------"
    ],
    "tests/jpeg/Makemodule.am||tests/jpeg/Makemodule.am": [
      "File: tests/jpeg/Makemodule.am -> tests/jpeg/Makemodule.am",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: libgd_test_programs += \\",
      "3:  jpeg/jpeg_empty_file \\",
      "4:  jpeg/jpeg_im2im \\",
      "7: if HAVE_LIBPNG",
      "8: libgd_test_programs += \\",
      "",
      "[Removed Lines]",
      "5:  jpeg/jpeg_null",
      "",
      "[Added Lines]",
      "5:  jpeg/jpeg_null \\",
      "6:  jpeg/jpeg_ptr_double_free",
      "",
      "---------------"
    ],
    "tests/jpeg/jpeg_ptr_double_free.c||tests/jpeg/jpeg_ptr_double_free.c": [
      "File: tests/jpeg/jpeg_ptr_double_free.c -> tests/jpeg/jpeg_ptr_double_free.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11: #include \"gd.h\"",
      "12: #include \"gdtest.h\"",
      "15: int main()",
      "16: {",
      "17:     gdImagePtr src, dst;",
      "18:     int size;",
      "20:     src = gdImageCreateTrueColor(1, 10);",
      "21:     gdTestAssert(src != NULL);",
      "25:     dst = gdImageJpegPtr(src, &size, 0);",
      "26:     gdTestAssert(dst == NULL);",
      "28:     gdImageDestroy(src);",
      "30:     return gdNumFailures();",
      "31: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b1151dedb1676926bf256e4a035f616aa1c0a160",
      "candidate_info": {
        "commit_hash": "b1151dedb1676926bf256e4a035f616aa1c0a160",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/b1151dedb1676926bf256e4a035f616aa1c0a160",
        "files": [
          "tests/bmp/CMakeLists.txt",
          "tests/bmp/Makemodule.am",
          "tests/gd/CMakeLists.txt",
          "tests/gd/Makemodule.am",
          "tests/gd2/CMakeLists.txt",
          "tests/gd2/Makemodule.am",
          "tests/gdimagecolorclosest/CMakeLists.txt",
          "tests/gdimagecolorclosest/Makemodule.am",
          "tests/gdimagecolorexact/CMakeLists.txt",
          "tests/gdimagecolorexact/Makemodule.am",
          "tests/gdimagecolorreplace/CMakeLists.txt",
          "tests/gdimagecolorreplace/Makemodule.am",
          "tests/gdimagecolorresolve/CMakeLists.txt",
          "tests/gdimagecolorresolve/Makemodule.am",
          "tests/gdimagecopyresampled/CMakeLists.txt",
          "tests/gdimagecopyresampled/Makemodule.am",
          "tests/gdimagecrop/CMakeLists.txt",
          "tests/gdimagefilltoborder/CMakeLists.txt",
          "tests/gdimagefilltoborder/Makemodule.am",
          "tests/gdimagerotate/CMakeLists.txt",
          "tests/gdimagerotate/Makemodule.am",
          "tests/gdimagestringft/CMakeLists.txt",
          "tests/gdimagestringft/Makemodule.am",
          "tests/gif/CMakeLists.txt",
          "tests/gif/Makemodule.am",
          "tests/jpeg/CMakeLists.txt",
          "tests/jpeg/Makemodule.am",
          "tests/wbmp/CMakeLists.txt",
          "tests/wbmp/Makemodule.am",
          "tests/xbm/CMakeLists.txt",
          "tests/xbm/Makemodule.am"
        ],
        "message": "tests: Correct some test depend errors",
        "before_after_code_files": [
          "tests/bmp/Makemodule.am||tests/bmp/Makemodule.am",
          "tests/gd/Makemodule.am||tests/gd/Makemodule.am",
          "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am",
          "tests/gdimagecolorclosest/Makemodule.am||tests/gdimagecolorclosest/Makemodule.am",
          "tests/gdimagecolorexact/Makemodule.am||tests/gdimagecolorexact/Makemodule.am",
          "tests/gdimagecolorreplace/Makemodule.am||tests/gdimagecolorreplace/Makemodule.am",
          "tests/gdimagecolorresolve/Makemodule.am||tests/gdimagecolorresolve/Makemodule.am",
          "tests/gdimagecopyresampled/Makemodule.am||tests/gdimagecopyresampled/Makemodule.am",
          "tests/gdimagefilltoborder/Makemodule.am||tests/gdimagefilltoborder/Makemodule.am",
          "tests/gdimagerotate/Makemodule.am||tests/gdimagerotate/Makemodule.am",
          "tests/gdimagestringft/Makemodule.am||tests/gdimagestringft/Makemodule.am",
          "tests/gif/Makemodule.am||tests/gif/Makemodule.am",
          "tests/jpeg/Makemodule.am||tests/jpeg/Makemodule.am",
          "tests/wbmp/Makemodule.am||tests/wbmp/Makemodule.am",
          "tests/xbm/Makemodule.am||tests/xbm/Makemodule.am"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/jpeg/Makemodule.am||tests/jpeg/Makemodule.am"
          ],
          "candidate": [
            "tests/jpeg/Makemodule.am||tests/jpeg/Makemodule.am"
          ]
        }
      },
      "candidate_diff": {
        "tests/bmp/Makemodule.am||tests/bmp/Makemodule.am": [
          "File: tests/bmp/Makemodule.am -> tests/bmp/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: libgd_test_programs += \\",
          "2:  bmp/bmp_null \\",
          "3:  bmp/bug00275 \\",
          "8:  bmp/bmp_im2im \\",
          "9:  bmp/bug00276",
          "12: EXTRA_DIST += \\",
          "13:  bmp/bug00450.bmp \\",
          "",
          "[Removed Lines]",
          "4:  bmp/bug00450",
          "6: if HAVE_LIBPNG",
          "7: libgd_test_programs += \\",
          "10: endif",
          "",
          "[Added Lines]",
          "4:  bmp/bug00450 \\",
          "",
          "---------------"
        ],
        "tests/gd/Makemodule.am||tests/gd/Makemodule.am": [
          "File: tests/gd/Makemodule.am -> tests/gd/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: libgd_test_programs += \\",
          "6:  gd/bug00383 \\",
          "7:  gd/gd_null \\",
          "12:  gd/gd_im2im",
          "13: endif",
          "16: EXTRA_DIST += \\",
          "17:  gd/bug00383.gd \\",
          "",
          "[Removed Lines]",
          "8:  gd/gd_num_colors",
          "10: if HAVE_LIBPNG",
          "11: libgd_test_programs += \\",
          "14: endif",
          "",
          "[Added Lines]",
          "8:  gd/gd_num_colors \\",
          "",
          "---------------"
        ],
        "tests/gd2/Makemodule.am||tests/gd2/Makemodule.am": [
          "File: tests/gd2/Makemodule.am -> tests/gd2/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  gd2/php_bug_72339 \\",
          "12:  gd2/gd2_null \\",
          "13:  gd2/gd2_read_corrupt \\",
          "16: if HAVE_LIBPNG",
          "17: libgd_test_programs += \\",
          "19:  gd2/gd2_read",
          "20: endif",
          "21: endif",
          "",
          "[Removed Lines]",
          "14:  gd2/too_few_image_data",
          "18:  gd2/gd2_im2im \\",
          "",
          "[Added Lines]",
          "14:  gd2/too_few_image_data \\",
          "15:  gd2/gd2_im2im",
          "",
          "---------------"
        ],
        "tests/gdimagecolorclosest/Makemodule.am||tests/gdimagecolorclosest/Makemodule.am": [
          "File: tests/gdimagecolorclosest/Makemodule.am -> tests/gdimagecolorclosest/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: libgd_test_programs += \\",
          "3:  gdimagecolorclosest/gdimagecolorclosest",
          "6: EXTRA_DIST += \\",
          "7:  gdimagecolorclosest/CMakeLists.txt",
          "",
          "[Removed Lines]",
          "1: if HAVE_LIBPNG",
          "4: endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/gdimagecolorexact/Makemodule.am||tests/gdimagecolorexact/Makemodule.am": [
          "File: tests/gdimagecolorexact/Makemodule.am -> tests/gdimagecolorexact/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: libgd_test_programs += \\",
          "3:  gdimagecolorexact/gdimagecolorexact",
          "6: EXTRA_DIST += \\",
          "7:  gdimagecolorexact/CMakeLists.txt",
          "",
          "[Removed Lines]",
          "1: if HAVE_LIBPNG",
          "4: endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/gdimagecolorreplace/Makemodule.am||tests/gdimagecolorreplace/Makemodule.am": [
          "File: tests/gdimagecolorreplace/Makemodule.am -> tests/gdimagecolorreplace/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: libgd_test_programs += \\",
          "3:  gdimagecolorreplace/gdimagecolorreplace",
          "6: EXTRA_DIST += \\",
          "7:  gdimagecolorreplace/CMakeLists.txt",
          "",
          "[Removed Lines]",
          "1: if HAVE_LIBPNG",
          "4: endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/gdimagecolorresolve/Makemodule.am||tests/gdimagecolorresolve/Makemodule.am": [
          "File: tests/gdimagecolorresolve/Makemodule.am -> tests/gdimagecolorresolve/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: libgd_test_programs += \\",
          "3:  gdimagecolorresolve/gdimagecolorresolve",
          "6: EXTRA_DIST += \\",
          "7:  gdimagecolorresolve/CMakeLists.txt",
          "",
          "[Removed Lines]",
          "1: if HAVE_LIBPNG",
          "4: endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/gdimagecopyresampled/Makemodule.am||tests/gdimagecopyresampled/Makemodule.am": [
          "File: tests/gdimagecopyresampled/Makemodule.am -> tests/gdimagecopyresampled/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: if HAVE_LIBPNG",
          "2: libgd_test_programs += \\",
          "3:  gdimagecopyresampled/basic \\",
          "4:  gdimagecopyresampled/basic_alpha \\",
          "6:  gdimagecopyresampled/bug00201",
          "7: endif",
          "",
          "[Removed Lines]",
          "5:  gdimagecopyresampled/exact_alpha \\",
          "",
          "[Added Lines]",
          "1: libgd_test_programs += \\",
          "2:  gdimagecopyresampled/exact_alpha",
          "",
          "---------------"
        ],
        "tests/gdimagefilltoborder/Makemodule.am||tests/gdimagefilltoborder/Makemodule.am": [
          "File: tests/gdimagefilltoborder/Makemodule.am -> tests/gdimagefilltoborder/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: libgd_test_programs += \\",
          "3:  gdimagefilltoborder/bug00037 \\",
          "4:  gdimagefilltoborder/github_bug_215",
          "7: EXTRA_DIST += \\",
          "8:  gdimagefilltoborder/CMakeLists.txt",
          "",
          "[Removed Lines]",
          "1: if HAVE_LIBPNG",
          "5: endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/gdimagerotate/Makemodule.am||tests/gdimagerotate/Makemodule.am": [
          "File: tests/gdimagerotate/Makemodule.am -> tests/gdimagerotate/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: if HAVE_LIBPNG",
          "7: libgd_test_programs += \\",
          "8:  gdimagerotate/php_bug_64898 \\",
          "9:  gdimagerotate/php_bug_65070",
          "10: endif",
          "",
          "[Removed Lines]",
          "2: if HAVE_LIBJPEG",
          "3: libgd_test_programs += \\",
          "4:  gdimagerotate/bug00067",
          "5: endif",
          "",
          "[Added Lines]",
          "3:  gdimagerotate/bug00067 \\",
          "",
          "---------------"
        ],
        "tests/gdimagestringft/Makemodule.am||tests/gdimagestringft/Makemodule.am": [
          "File: tests/gdimagestringft/Makemodule.am -> tests/gdimagestringft/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: if HAVE_LIBFREETYPE",
          "3: libgd_test_programs += \\",
          "4:  gdimagestringft/gdimagestringft_bbox",
          "5: endif",
          "8: EXTRA_DIST += \\",
          "9:  gdimagestringft/CMakeLists.txt",
          "",
          "[Removed Lines]",
          "2: if HAVE_LIBPNG",
          "6: endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/gif/Makemodule.am||tests/gif/Makemodule.am": [
          "File: tests/gif/Makemodule.am -> tests/gif/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  gif/gif_null \\",
          "7:  gif/ossfuzz5700 \\",
          "8:  gif/php_bug_75571 \\",
          "11: if HAVE_LIBPNG",
          "12: libgd_test_programs += \\",
          "13:  gif/bug00005 \\",
          "18: endif",
          "20: EXTRA_DIST += \\",
          "",
          "[Removed Lines]",
          "9:  gif/uninitialized_memory_read",
          "14:  gif/bug00006 \\",
          "15:  gif/bug00060 \\",
          "16:  gif/bug00066 \\",
          "17:  gif/gif_im2im",
          "",
          "[Added Lines]",
          "9:  gif/uninitialized_memory_read \\",
          "10:  gif/bug00006 \\",
          "11:  gif/bug00060 \\",
          "12:  gif/gif_im2im",
          "17:  gif/bug00066",
          "",
          "---------------"
        ],
        "tests/jpeg/Makemodule.am||tests/jpeg/Makemodule.am": [
          "File: tests/jpeg/Makemodule.am -> tests/jpeg/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:  jpeg/jpeg_empty_file \\",
          "4:  jpeg/jpeg_im2im \\",
          "5:  jpeg/jpeg_null \\",
          "8: if HAVE_LIBPNG",
          "9: libgd_test_programs += \\",
          "10:  jpeg/bug_github_18 \\",
          "11:  jpeg/bug00338 \\",
          "14: endif",
          "15: endif",
          "",
          "[Removed Lines]",
          "6:  jpeg/jpeg_ptr_double_free",
          "12:  jpeg/jpeg_read \\",
          "13:  jpeg/jpeg_resolution",
          "",
          "[Added Lines]",
          "6:  jpeg/jpeg_ptr_double_free \\",
          "7:  jpeg/jpeg_resolution",
          "13:  jpeg/jpeg_read",
          "",
          "---------------"
        ],
        "tests/wbmp/Makemodule.am||tests/wbmp/Makemodule.am": [
          "File: tests/wbmp/Makemodule.am -> tests/wbmp/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: libgd_test_programs += \\",
          "6:  wbmp/wbmp_im2im",
          "9: EXTRA_DIST += \\",
          "10:  wbmp/CMakeLists.txt",
          "",
          "[Removed Lines]",
          "2:  wbmp/wbmp_null",
          "4: if HAVE_LIBPNG",
          "5: libgd_test_programs += \\",
          "7: endif",
          "",
          "[Added Lines]",
          "2:  wbmp/wbmp_null \\",
          "",
          "---------------"
        ],
        "tests/xbm/Makemodule.am||tests/xbm/Makemodule.am": [
          "File: tests/xbm/Makemodule.am -> tests/xbm/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: libgd_test_programs += \\",
          "4: if HAVE_LIBPNG",
          "5: libgd_test_programs += \\",
          "6:  xbm/github_bug_109 \\",
          "8:  xbm/x10_basic_read",
          "9: endif",
          "",
          "[Removed Lines]",
          "2:  xbm/github_bug_501",
          "7:  xbm/github_bug_170 \\",
          "",
          "[Added Lines]",
          "2:  xbm/github_bug_501 \\",
          "3:  xbm/github_bug_170",
          "",
          "---------------"
        ]
      }
    }
  ]
}