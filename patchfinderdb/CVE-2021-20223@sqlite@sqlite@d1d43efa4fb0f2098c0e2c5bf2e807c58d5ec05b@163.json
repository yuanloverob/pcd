{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "997d7434b7688f9fbd48fdacdbf1769e2f4cccbe",
      "candidate_info": {
        "commit_hash": "997d7434b7688f9fbd48fdacdbf1769e2f4cccbe",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/997d7434b7688f9fbd48fdacdbf1769e2f4cccbe",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/window1.test"
        ],
        "message": "Do not attempt to flatten compound sub-queries in a FROM clause into the parent if any component of the sub-query uses a window function.\n\nFossilOrigin-Name: eeb76f621de2f930a548db0fbb9fe25b4479b73581826b8dfa2e63cd1f1ab783",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 82be135dee7ccfde5f8a67f3621b7ced449dce89bae9cadf025154a4de848c11",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1516:   SELECT (0, 1) IN(SELECT MIN(c0), NTILE(1) OVER()) FROM t0;",
          "1517: } {1}",
          "1519: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1519: #-------------------------------------------------------------------------",
          "1520: reset_db",
          "1521: do_execsql_test 45.1 {",
          "1522:   CREATE TABLE t0(x);",
          "1523:   CREATE TABLE t1(a);",
          "1524:   INSERT INTO t1 VALUES(1000);",
          "1525:   INSERT INTO t1 VALUES(1000);",
          "1526:   INSERT INTO t0 VALUES(10000);",
          "1527: }",
          "1528: do_execsql_test 45.2 {",
          "1529:   SELECT * FROM (",
          "1530:       SELECT sum (a) OVER() FROM t1 UNION ALL SELECT x FROM t0",
          "1531:   );",
          "1532: } {2000 2000 10000}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c48428899d5ba5f8689455d0a82174a1fe3fa4c3",
      "candidate_info": {
        "commit_hash": "c48428899d5ba5f8689455d0a82174a1fe3fa4c3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c48428899d5ba5f8689455d0a82174a1fe3fa4c3",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/main.c"
        ],
        "message": "Extra memory barrier during initialization.\n\nFossilOrigin-Name: 043a7e142dfc2b0da5fbc0b025d005ccad4886f0b0ff65426ba9155ca40394ca",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/main.c||src/main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6f857d0e9e0893524c2f828a1a1600fefb6efeff12ecbc9bb1da106a5aff9c1c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "313:     if( rc==SQLITE_OK ){",
          "314:       sqlite3PCacheBufferSetup( sqlite3GlobalConfig.pPage,",
          "315:           sqlite3GlobalConfig.szPage, sqlite3GlobalConfig.nPage);",
          "316:       sqlite3GlobalConfig.isInit = 1;",
          "317: #ifdef SQLITE_EXTRA_INIT",
          "318:       bRunExtraInit = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "316:       sqlite3MemoryBarrier();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa328b6ab13d97f092bced55f8faeb13b4c42237",
      "candidate_info": {
        "commit_hash": "aa328b6ab13d97f092bced55f8faeb13b4c42237",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/aa328b6ab13d97f092bced55f8faeb13b4c42237",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/window1.test"
        ],
        "message": "Ensure that when a Select object is reset a new, empty, SrcList is allocated.\n\nFossilOrigin-Name: 4889cbf898d7ec54f061b21b6d3621b22fc482cbeaa7115d40995a4cc30e41db",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ff9492d3ff733c222ea67f23d478df1547641b5e2e6dd870b0b29e25c13f3739",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "202:     memset(&p->iLimit, 0, sizeof(Select) - offsetof(Select,iLimit));",
          "203:     p->pEList = sqlite3ExprListAppend(pParse, 0,",
          "204:                      sqlite3ExprAlloc(pParse->db,TK_NULL,0,0));",
          "205:   }",
          "206: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205:     p->pSrc = sqlite3DbMallocZero(pParse->db, sizeof(SrcList));",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1554:     OR ((SELECT sum(a)OVER(ORDER BY a)) AND a<=10)",
          "1555: } 10",
          "1557: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1557: #-------------------------------------------------------------------------",
          "1558: reset_db",
          "1559: do_execsql_test 47.0 {",
          "1560:   CREATE TABLE t1(",
          "1561:       a,",
          "1562:       e,",
          "1563:       f,",
          "1564:       g UNIQUE,",
          "1565:       h UNIQUE",
          "1566:   );",
          "1567: }",
          "1569: do_execsql_test 47.1 {",
          "1570:   CREATE VIEW t2(k) AS",
          "1571:      SELECT e FROM t1 WHERE g = 'abc' OR h BETWEEN 10 AND f;",
          "1572: }",
          "1574: do_catchsql_test 47.2 {",
          "1575:   SELECT 234 FROM t2",
          "1576:     WHERE k=1",
          "1577:     OR (SELECT k FROM t2 WHERE (SELECT sum(a) OVER() FROM t1 GROUP BY 1));",
          "1578: } {1 {misuse of window function sum()}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92a27f7bf2866cf2b99713559b39e1e725b489bd",
      "candidate_info": {
        "commit_hash": "92a27f7bf2866cf2b99713559b39e1e725b489bd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/92a27f7bf2866cf2b99713559b39e1e725b489bd",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Extend the OP_Copy-coalesce optimization fix of check-in [b36126c1889e323c] so that it is also correctly disabled by the CASE operator. Ticket [9d3666754ac37d5a].\n\nFossilOrigin-Name: 29a969d6b1709b80d9cb88b60971e4eb021f7f5f8ee9a619be74b833a78a35ef",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: af63e95dcdd6e9741cdddc3698e857e3b8be40048d3036f939f3583e517c4eff",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3637:   return iResult;",
          "3638: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3644: static void setDoNotMergeFlagOnCopy(Vdbe *v){",
          "3645:   if( sqlite3VdbeGetOp(v, -1)->opcode==OP_Copy ){",
          "3647:   }",
          "3648: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3668:         VdbeCoverage(v);",
          "3669:         sqlite3ExprCode(pParse, pFarg->a[i].pExpr, target);",
          "3670:       }",
          "3674:       sqlite3VdbeResolveLabel(v, endCoalesce);",
          "3675:       break;",
          "3676:     }",
          "",
          "[Removed Lines]",
          "3671:       if( sqlite3VdbeGetOp(v, -1)->opcode==OP_Copy ){",
          "3673:       }",
          "",
          "[Added Lines]",
          "3681:       setDoNotMergeFlagOnCopy(v);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4441:         sqlite3VdbeAddOp2(v, OP_Null, 0, target);",
          "4442:       }",
          "4443:       sqlite3ExprDelete(db, pDel);",
          "4444:       sqlite3VdbeResolveLabel(v, endLabel);",
          "4445:       break;",
          "4446:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4452:       setDoNotMergeFlagOnCopy(v);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b9e73689857bd4449145515e7d45bec1020e090",
      "candidate_info": {
        "commit_hash": "4b9e73689857bd4449145515e7d45bec1020e090",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4b9e73689857bd4449145515e7d45bec1020e090",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/fuzzdata7.db"
        ],
        "message": "Remove a NEVER() macro and add a test case to cause its argument to be true.\n\nFossilOrigin-Name: ee034fe916448e953ee7824e5c0db99a36a0ad138ebfb25f751bf84cb80a8fa7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9469f36ac89e4b75d0ab25fefbeff25201992c53141da915dcaa017083cab6db",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1449:         int sz2 = 0;",
          "1450:         int sz = get2byte(&data[iFree+2]);",
          "1451:         int top = get2byte(&data[hdr+5]);",
          "1453:           return SQLITE_CORRUPT_PAGE(pPage);",
          "1454:         }",
          "1455:         if( iFree2 ){",
          "",
          "[Removed Lines]",
          "1452:         if( NEVER(top>=iFree) ){",
          "",
          "[Added Lines]",
          "1452:         if( top>=iFree ){",
          "",
          "---------------"
        ]
      }
    }
  ]
}