{
  "cve_id": "CVE-2012-2100",
  "cve_desc": "The ext4_fill_flex_info function in fs/ext4/super.c in the Linux kernel before 3.2.2, on the x86 platform and unspecified other platforms, allows user-assisted remote attackers to trigger inconsistent filesystem-groups data and possibly cause a denial of service via a malformed ext4 filesystem containing a super block with a large FLEX_BG group size (aka s_log_groups_per_flex value).  NOTE: this vulnerability exists because of an incomplete fix for CVE-2009-4307.",
  "repo": "torvalds/linux",
  "patch_hash": "d50f2ab6f050311dbf7b8f5501b25f0bf64a439b",
  "patch_info": {
    "commit_hash": "d50f2ab6f050311dbf7b8f5501b25f0bf64a439b",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/d50f2ab6f050311dbf7b8f5501b25f0bf64a439b",
    "files": [
      "fs/ext4/super.c"
    ],
    "message": "ext4: fix undefined behavior in ext4_fill_flex_info()\n\nCommit 503358ae01b70ce6909d19dd01287093f6b6271c (\"ext4: avoid divide by\nzero when trying to mount a corrupted file system\") fixes CVE-2009-4307\nby performing a sanity check on s_log_groups_per_flex, since it can be\nset to a bogus value by an attacker.\n\n\tsbi->s_log_groups_per_flex = sbi->s_es->s_log_groups_per_flex;\n\tgroups_per_flex = 1 << sbi->s_log_groups_per_flex;\n\n\tif (groups_per_flex < 2) { ... }\n\nThis patch fixes two potential issues in the previous commit.\n\n1) The sanity check might only work on architectures like PowerPC.\nOn x86, 5 bits are used for the shifting amount.  That means, given a\nlarge s_log_groups_per_flex value like 36, groups_per_flex = 1 << 36\nis essentially 1 << 4 = 16, rather than 0.  This will bypass the check,\nleaving s_log_groups_per_flex and groups_per_flex inconsistent.\n\n2) The sanity check relies on undefined behavior, i.e., oversized shift.\nA standard-confirming C compiler could rewrite the check in unexpected\nways.  Consider the following equivalent form, assuming groups_per_flex\nis unsigned for simplicity.\n\n\tgroups_per_flex = 1 << sbi->s_log_groups_per_flex;\n\tif (groups_per_flex == 0 || groups_per_flex == 1) {\n\nWe compile the code snippet using Clang 3.0 and GCC 4.6.  Clang will\ncompletely optimize away the check groups_per_flex == 0, leaving the\npatched code as vulnerable as the original.  GCC keeps the check, but\nthere is no guarantee that future versions will do the same.\n\nSigned-off-by: Xi Wang <xi.wang@gmail.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>\nCc: stable@vger.kernel.org",
    "before_after_code_files": [
      "fs/ext4/super.c||fs/ext4/super.c"
    ]
  },
  "patch_diff": {
    "fs/ext4/super.c||fs/ext4/super.c": [
      "File: fs/ext4/super.c -> fs/ext4/super.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2006:  struct ext4_group_desc *gdp = NULL;",
      "2007:  ext4_group_t flex_group_count;",
      "2008:  ext4_group_t flex_group;",
      "2010:  size_t size;",
      "2011:  int i;",
      "2013:  sbi->s_log_groups_per_flex = sbi->s_es->s_log_groups_per_flex;",
      "2017:   sbi->s_log_groups_per_flex = 0;",
      "2018:   return 1;",
      "2019:  }",
      "2022:  flex_group_count = ((sbi->s_groups_count + groups_per_flex - 1) +",
      "",
      "[Removed Lines]",
      "2009:  int groups_per_flex = 0;",
      "2014:  groups_per_flex = 1 << sbi->s_log_groups_per_flex;",
      "2016:  if (groups_per_flex < 2) {",
      "",
      "[Added Lines]",
      "2009:  unsigned int groups_per_flex = 0;",
      "2014:  if (sbi->s_log_groups_per_flex < 1 || sbi->s_log_groups_per_flex > 31) {",
      "2018:  groups_per_flex = 1 << sbi->s_log_groups_per_flex;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "76495ec1d47e1c0fe0673faf9179bda6bc8ab5c2",
      "candidate_info": {
        "commit_hash": "76495ec1d47e1c0fe0673faf9179bda6bc8ab5c2",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/76495ec1d47e1c0fe0673faf9179bda6bc8ab5c2",
        "files": [
          "fs/ext4/super.c"
        ],
        "message": "ext4: fix undefined bit shift result in ext4_fill_flex_info\n\nThe result of the bit shift expression in\n'1 << sbi->s_log_groups_per_flex' can be undefined in the case that\ns_log_groups_per_flex is 31 because the result of the shift is bigger\nthan INT_MAX. In reality this probably should not cause much problems\nsince we'll end up with INT_MIN which will then be converted into\n'unsigned int' type, but nevertheless according to the ISO C99 the\nresult is actually undefined.\n\nFix this by changing the left operand to 'unsigned int' type.\n\nNote that the commit d50f2ab6f050311dbf7b8f5501b25f0bf64a439b already\ntried to fix the undefined behaviour, but this was missed.\n\nThanks to Laszlo Ersek for pointing this out and suggesting the fix.\n\nSigned-off-by: Lukas Czerner <lczerner@redhat.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>\nReviewed-by: Carlos Maiolino <cmaiolino@redhat.com>\nReported-by: Laszlo Ersek <lersek@redhat.com>",
        "before_after_code_files": [
          "fs/ext4/super.c||fs/ext4/super.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/ext4/super.c||fs/ext4/super.c"
          ],
          "candidate": [
            "fs/ext4/super.c||fs/ext4/super.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/ext4/super.c||fs/ext4/super.c": [
          "File: fs/ext4/super.c -> fs/ext4/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1970:   sbi->s_log_groups_per_flex = 0;",
          "1971:   return 1;",
          "1972:  }",
          "1975:  err = ext4_alloc_flex_bg_array(sb, sbi->s_groups_count);",
          "1976:  if (err)",
          "",
          "[Removed Lines]",
          "1973:  groups_per_flex = 1 << sbi->s_log_groups_per_flex;",
          "",
          "[Added Lines]",
          "1973:  groups_per_flex = 1U << sbi->s_log_groups_per_flex;",
          "",
          "---------------"
        ]
      }
    }
  ]
}