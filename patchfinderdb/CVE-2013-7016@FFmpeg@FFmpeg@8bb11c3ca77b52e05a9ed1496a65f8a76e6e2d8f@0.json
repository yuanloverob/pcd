{
  "cve_id": "CVE-2013-7016",
  "cve_desc": "The get_siz function in libavcodec/jpeg2000dec.c in FFmpeg before 2.1 does not ensure the expected sample separation, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted JPEG2000 data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "8bb11c3ca77b52e05a9ed1496a65f8a76e6e2d8f",
  "patch_info": {
    "commit_hash": "8bb11c3ca77b52e05a9ed1496a65f8a76e6e2d8f",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/8bb11c3ca77b52e05a9ed1496a65f8a76e6e2d8f",
    "files": [
      "libavcodec/jpeg2000dec.c"
    ],
    "message": "avcodec/jpeg2000dec: Check cdx/y values more carefully\n\nSome invalid values where not handled correctly in the later pixel\nformat matching code.\nFixes out of array accesses\nFixes Ticket2848\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
      "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "273:         s->sgnd[i]   = !!(x & 0x80);",
      "274:         s->cdx[i]    = bytestream2_get_byteu(&s->g);",
      "275:         s->cdy[i]    = bytestream2_get_byteu(&s->g);",
      "277:             av_log(s->avctx, AV_LOG_ERROR, \"Invalid sample seperation\\n\");",
      "278:             return AVERROR_INVALIDDATA;",
      "279:         }",
      "",
      "[Removed Lines]",
      "276:         if (!s->cdx[i] || !s->cdy[i]) {",
      "",
      "[Added Lines]",
      "276:         if (   !s->cdx[i] || s->cdx[i] == 3 || s->cdx[i] > 4",
      "277:             || !s->cdy[i] || s->cdy[i] == 3 || s->cdy[i] > 4) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e2eb0d23269043357cdab90a9fca4fca2895d2ac",
      "candidate_info": {
        "commit_hash": "e2eb0d23269043357cdab90a9fca4fca2895d2ac",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/e2eb0d23269043357cdab90a9fca4fca2895d2ac",
        "files": [
          "libavcodec/jpeg2000dec.c"
        ],
        "message": "avcodec/jpeg2000dec: Check cdx/y values more carefully\n\nSome invalid values where not handled correctly in the later pixel\nformat matching code.\nFixes out of array accesses\nFixes Ticket2848\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 8bb11c3ca77b52e05a9ed1496a65f8a76e6e2d8f)\n\nConflicts:\n\n\tlibavcodec/jpeg2000dec.c",
        "before_after_code_files": [
          "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ],
          "candidate": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
          "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "273:         s->sgnd[i]   = !!(x & 0x80);",
          "274:         s->cdx[i]    = bytestream2_get_byteu(&s->g);",
          "275:         s->cdy[i]    = bytestream2_get_byteu(&s->g);",
          "276:         log2_chroma_wh |= s->cdy[i] >> 1 << i * 4 | s->cdx[i] >> 1 << i * 4 + 2;",
          "277:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "276:         if (   !s->cdx[i] || s->cdx[i] == 3 || s->cdx[i] > 4",
          "277:             || !s->cdy[i] || s->cdy[i] == 3 || s->cdy[i] > 4) {",
          "278:             av_log(s->avctx, AV_LOG_ERROR, \"Invalid sample seperation\\n\");",
          "279:             return AVERROR_INVALIDDATA;",
          "280:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5cd57e8758e336e86698d4994ee088077869e42d",
      "candidate_info": {
        "commit_hash": "5cd57e8758e336e86698d4994ee088077869e42d",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/5cd57e8758e336e86698d4994ee088077869e42d",
        "files": [
          "libavcodec/jpeg2000dec.c"
        ],
        "message": "avcodec/jpeg2000dec: check sample sepration for validity\n\nFixes division by 0\nFixes Ticket2841\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ],
          "candidate": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
          "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "273:         s->sgnd[i]   = !!(x & 0x80);",
          "274:         s->cdx[i]    = bytestream2_get_byteu(&s->g);",
          "275:         s->cdy[i]    = bytestream2_get_byteu(&s->g);",
          "276:         log2_chroma_wh |= s->cdy[i] >> 1 << i * 4 | s->cdx[i] >> 1 << i * 4 + 2;",
          "277:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "276:         if (!s->cdx[i] || !s->cdy[i]) {",
          "277:             av_log(s->avctx, AV_LOG_ERROR, \"Invalid sample seperation\\n\");",
          "278:             return AVERROR_INVALIDDATA;",
          "279:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}