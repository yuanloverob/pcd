{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e011ee28309f489703fc29365837b1e791b461c7",
      "candidate_info": {
        "commit_hash": "e011ee28309f489703fc29365837b1e791b461c7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e011ee28309f489703fc29365837b1e791b461c7",
        "files": [
          "ext/fts3/fts3_snippet.c",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Fix a problem in the fts3 matchinfo() function with corrupt database handling.\n\nFossilOrigin-Name: 24ed5fb6aea30b098d2faf3cf9d638933e518657217e903239ffaa1e25d34f66",
        "before_after_code_files": [
          "ext/fts3/fts3_snippet.c||ext/fts3/fts3_snippet.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_snippet.c||ext/fts3/fts3_snippet.c": [
          "File: ext/fts3/fts3_snippet.c -> ext/fts3/fts3_snippet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1121:   int i;",
          "1122:   int iCol;",
          "1123:   int nToken = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1124:   int rc = SQLITE_OK;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1143:     for(i=0; i<pInfo->nPhrase; i++){",
          "1145:       LcsIterator *pIt = &aIter[i];",
          "1146:       rc = sqlite3Fts3EvalPhrasePoslist(pCsr, pIt->pExpr, iCol, &pIt->pRead);",
          "1148:       if( pIt->pRead ){",
          "1149:         pIt->iPos = pIt->iPosOffset;",
          "1151:         nLive++;",
          "1152:       }",
          "1153:     }",
          "",
          "[Removed Lines]",
          "1144:       int rc;",
          "1147:       if( rc!=SQLITE_OK ) return rc;",
          "1150:         fts3LcsIteratorAdvance(&aIter[i]);",
          "",
          "[Added Lines]",
          "1147:       if( rc!=SQLITE_OK ) goto matchinfo_lcs_out;",
          "1150:         fts3LcsIteratorAdvance(pIt);",
          "1151:         if( pIt->pRead==0 ){",
          "1152:           rc = FTS_CORRUPT_VTAB;",
          "1153:           goto matchinfo_lcs_out;",
          "1154:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1179:     pInfo->aMatchinfo[iCol] = nLcs;",
          "1180:   }",
          "1182:   sqlite3_free(aIter);",
          "1184: }",
          "",
          "[Removed Lines]",
          "1183:   return SQLITE_OK;",
          "",
          "[Added Lines]",
          "1186:  matchinfo_lcs_out:",
          "1188:   return rc;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 49fcde2f1f981ac0c75728bed3444e7c1d3167311db282d3375c96ce090b2210",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1210:   INSERT INTO t1(t1) VALUES('optimize');",
          "1211: } {1 {database disk image is malformed}}",
          "1214: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1213: #-------------------------------------------------------------------------",
          "1214: reset_db",
          "1215: do_test 11.0 {",
          "1216:   sqlite3 db {}",
          "1217:   db deserialize [decode_hexdb {",
          "1218: | size 28672 pagesize 4096 filename crash-843cb8447eaf14.db",
          "1219: | page 1 offset 0",
          "1220: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "1221: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "1222: |     32: 00 00 00 02 00 00 00 01 00 00 00 07 00 00 00 04   ................",
          "1223: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "1224: |     96: 00 00 00 00 0d 0e b1 00 06 0d a4 00 0f 8d 0f 21   ...............!",
          "1225: |    112: 0e b9 0d c8 0e 7e 0d a4 0d a4 00 00 00 00 00 00   .....~..........",
          "1226: |   3488: 00 00 00 00 22 07 06 17 11 11 01 31 74 61 62 6c   ...........1tabl",
          "1227: |   3504: 65 74 32 74 32 07 43 52 45 41 54 45 20 54 41 42   et2t2.CREATE TAB",
          "1228: |   3520: 4c 45 20 74 32 28 78 29 81 33 05 07 17 1f 1f 01   LE t2(x).3......",
          "1229: |   3536: 82 35 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72   .5tablet1_segdir",
          "1230: |   3552: 74 31 5f 73 65 67 64 69 72 05 43 52 45 41 54 45   t1_segdir.CREATE",
          "1231: |   3568: 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69    TABLE 't1_segdi",
          "1232: |   3584: 72 27 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 52   r'(level INTEGER",
          "1233: |   3600: 2c 69 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61   ,idx INTEGER,sta",
          "1234: |   3616: 72 74 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52   rt_block INTEGER",
          "1235: |   3632: 2c 6c 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63   ,leaves_end_bloc",
          "1236: |   3648: 6b 20 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c   k INTEGER,end_bl",
          "1237: |   3664: 6f 63 6b 20 49 4e 54 45 47 45 52 2c 72 6f 6f 74   ock INTEGER,root",
          "1238: |   3680: 20 42 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45    BLOB,PRIMARY KE",
          "1239: |   3696: 59 28 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 06   Y(level, idx))1.",
          "1240: |   3712: 06 17 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74   ..E...indexsqlit",
          "1241: |   3728: 65 5f 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73   e_autoindex_t1_s",
          "1242: |   3744: 65 67 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72   egdir_1t1_segdir",
          "1243: |   3760: 06 0f c7 00 08 00 00 00 00 66 04 07 17 23 23 01   .........f...##.",
          "1244: |   3776: 81 13 74 61 62 6c 65 74 31 5f 73 65 67 6d 65 6e   ..tablet1_segmen",
          "1245: |   3792: 74 73 74 31 5f 73 65 67 6d 65 6e 74 73 04 43 52   tst1_segments.CR",
          "1246: |   3808: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73   EATE TABLE 't1_s",
          "1247: |   3824: 65 67 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64   egments'(blockid",
          "1248: |   3840: 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59    INTEGER PRIMARY",
          "1249: |   3856: 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42    KEY, block BLOB",
          "1250: |   3872: 29 6a 03 07 17 21 21 01 81 1f 74 61 62 6c 65 74   )j...!!...tablet",
          "1251: |   3888: 31 5f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1_contentt1_cont",
          "1252: |   3904: 65 6e 74 03 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "1253: |   3920: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f    't1_content'(do",
          "1254: |   3936: 63 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   cid INTEGER PRIM",
          "1255: |   3952: 41 52 59 20 4b 45 59 2c 20 27 63 30 61 27 2c 20   ARY KEY, 'c0a',",
          "1256: |   3968: 27 63 31 62 27 2c 20 27 63 32 63 27 29 38 02 06   'c1b', 'c2c')8..",
          "1257: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "1258: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "1259: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "1260: |   4032: 28 61 2c 62 2c 63 29 00 00 00 39 00 00 00 00 00   (a,b,c)...9.....",
          "1261: | page 3 offset 8192",
          "1262: |      0: 0d 00 00 00 25 0b 48 00 0f d8 0f af 0f 86 0f 74   ....%.H........t",
          "1263: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "1264: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 0d d4   ...t.[.@.$......",
          "1265: |     48: dd bb 0d a0 0d 84 0d 68 0d 4f 0d 35 0d 1b 0c fb   .......h.O.5....",
          "1266: |     64: 0c da 0c b9 35 99 0c 78 0c 57 0c 3e 0c 24 0c 0a   ....5..x.W.>.$..",
          "1267: |     80: 0b 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00   .H..............",
          "1268: |   2880: 00 00 00 00 00 00 00 00 81 3f 25 06 00 82 7f 00   .........?%.....",
          "1269: |   2896: 00 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e   .COMPILER=gcc-5.",
          "1270: |   2912: 34 2e 30 20 32 30 31 36 30 36 30 39 20 44 45 42   4.0 20160609 DEB",
          "1271: |   2928: 55 47 20 45 4e 41 42 4c 45 20 44 42 53 54 41 54   UG ENABLE DBSTAT",
          "1272: |   2944: 20 56 54 41 42 20 45 4e 41 42 4c 45 20 46 54 53    VTAB ENABLE FTS",
          "1273: |   2960: 34 20 45 4e 41 42 4c 45 20 46 54 53 35 20 45 4e   4 ENABLE FTS5 EN",
          "1274: |   2976: 41 42 4c 45 20 47 45 4f 50 4f 4c 59 20 45 4e 41   ABLE GEOPOLY ENA",
          "1275: |   2992: 42 4c 45 20 4a 53 4f 4e 31 20 45 4e 41 42 4c 45   BLE JSON1 ENABLE",
          "1276: |   3008: 20 4d 45 4d 53 59 53 35 20 45 4e 41 42 4c 45 20    MEMSYS5 ENABLE",
          "1277: |   3024: 52 54 52 45 45 20 4d 41 58 20 4d 45 4d 4f 52 59   RTREE MAX MEMORY",
          "1278: |   3040: 3d 35 30 30 30 30 30 30 30 20 4f 4d 49 54 20 4c   =50000000 OMIT L",
          "1279: |   3056: 4f 41 44 20 45 58 54 45 4e 53 49 4f 4e 20 54 48   OAD EXTENSION TH",
          "1280: |   3072: 52 45 41 44 53 41 46 45 3d 30 18 24 05 00 25 0f   READSAFE=0.$..%.",
          "1281: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "1282: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "1283: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 22   DSAFE=0XNOCASE..",
          "1284: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 45 3d   ..%..THREADSAFE=",
          "1285: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "1286: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49 4f   IT LOAD EXTENSIO",
          "1287: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "1288: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "1289: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "1290: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "1291: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "1292: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30 30   MAX MEMORY=50000",
          "1293: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "1294: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "1295: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "1296: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "1297: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "1298: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "1299: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "1300: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 43 41 53 45 17   LE RTREEXNOCASE.",
          "1301: |   3408: 19 05 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   ...%..ENABLE RTR",
          "1302: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "1303: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "1304: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "1305: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "1306: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "1307: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 15 05 00 25   MSYS5XRTRIM....%",
          "1308: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "1309: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "1310: |   3552: 4c 45 20 4a 53 4f 4e 31 58 4e 4f 43 41 53 45 17   LE JSON1XNOCASE.",
          "1311: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "1312: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "1313: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "1314: |   3616: 4e 41 52 59 1a 11 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "1315: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 43 41 53 45   E GEOPOLYXNOCASE",
          "1316: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "1317: |   3664: 4f 50 4f 4c 59 58 52 54 52 49 4d 17 0f 05 00 23   OPOLYXRTRIM....#",
          "1318: |   3680: 0f 19 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "1319: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "1320: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0d 05   E FTS5XNOCASE...",
          "1321: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "1322: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "1323: |   3760: 4c 45 20 46 54 53 34 58 42 49 4e 41 52 59 17 0b   LE FTS4XBINARY..",
          "1324: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 34   ..#..ENABLE FTS4",
          "1325: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "1326: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "1327: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "1328: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "1329: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "1330: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "1331: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "1332: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   TAT VTABXRTRIM..",
          "1333: |   3920: 05 00 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "1334: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "1335: |   3952: 43 41 53 45 10 04 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "1336: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "1337: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "1338: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "1339: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "1340: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "1341: |   4048: 39 58 4e 4f 43 41 53 45 26 01 05 00 43 0f 17 43   9XNOCASE&...C..C",
          "1342: |   4064: 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPILER=gcc-5.4.",
          "1343: |   4080: 30 20 32 30 31 36 30 36 30 39 58 52 54 52 49 4d   0 20160609XRTRIM",
          "1344: | page 4 offset 12288",
          "1345: |      0: 0d 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00   ................",
          "1346: | page 5 offset 16384",
          "1347: |      0: 0d 00 00 00 02 0b a0 00 0c ad 0b a0 00 00 00 00   ................",
          "1348: |   2976: 82 0a 02 08 08 09 08 08 17 84 06 30 20 32 35 33   ...........0 253",
          "1349: |   2992: 00 01 30 04 25 06 1b 00 00 08 32 30 31 36 30 36   ..0.%.....201606",
          "1350: |   3008: 30 39 03 25 07 00 00 01 34 03 25 05 00 00 01 35   09.%....4.%....5",
          "1351: |   3024: 03 25 04 00 01 07 30 30 30 30 30 30 30 03 25 1a   .%....0000000.%.",
          "1352: |   3040: 00 00 08 63 6f 6d 70 69 6c 65 72 03 25 02 00 00   ...compiler.%...",
          "1353: |   3056: 06 64 62 73 74 61 74 03 25 0a 00 01 04 65 62 75   .dbstat.%....ebu",
          "1354: |   3072: 67 03 25 08 00 00 06 65 6e 61 62 6c 65 09 25 09   g.%....enable.%.",
          "1355: |   3088: 05 04 04 04 04 04 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "1356: |   3104: 6e 03 25 1d 00 00 04 66 74 73 34 03 25 0d 00 03   n.%....fts4.%...",
          "1357: |   3120: 01 35 03 25 0f 00 00 03 67 63 63 03 25 03 00 01   .5.%....gcc.%...",
          "1358: |   3136: 06 65 6f 70 6f 6c 79 03 25 11 00 00 05 6a 73 6f   .eopoly.%....jso",
          "1359: |   3152: 6e 31 03 25 13 00 00 04 6c 6f 61 64 03 25 1c 00   n1.%....load.%..",
          "1360: |   3168: 00 03 6d 61 78 03 25 18 00 01 05 65 6d 6f 72 79   ..max.%....emory",
          "1361: |   3184: 03 25 19 00 03 04 73 79 73 35 03 25 15 00 00 04   .%....sys5.%....",
          "1362: |   3200: 6f 6d 69 74 03 25 1b 00 00 05 72 74 72 65 65 03   omit.%....rtree.",
          "1363: |   3216: 25 17 00 00 0a 74 68 72 65 61 64 73 61 66 65 03   %....threadsafe.",
          "1364: |   3232: 25 1e 00 00 04 76 74 61 62 03 25 0b 00 86 50 01   %....vtab.%...P.",
          "1365: |   3248: 08 08 08 08 08 17 8d 12 30 20 38 33 35 00 01 30   ........0 835..0",
          "1366: |   3264: 12 01 06 00 01 06 00 01 06 00 1f 03 00 01 03 00   ................",
          "1367: |   3280: 01 03 00 00 08 32 30 31 36 30 36 30 39 09 01 07   .....20160609...",
          "1368: |   3296: 00 01 07 00 01 07 00 00 01 34 09 01 05 00 01 05   .........4......",
          "1369: |   3312: 00 01 05 00 00 01 35 09 01 04 00 01 04 00 01 04   ......5.........",
          "1370: |   3328: 00 01 07 30 30 30 30 30 30 30 09 1c 04 00 01 04   ...0000000......",
          "1371: |   3344: 00 01 04 00 00 06 62 69 6e 61 72 79 3c 03 01 02   ......binary<...",
          "1372: |   3360: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "1373: |   3376: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "1374: |   3392: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "1375: |   3408: 01 02 02 00 03 01 02 02 00 00 08 63 6f 6d 70 69   ...........compi",
          "1376: |   3424: 6c 65 72 09 01 02 00 01 02 00 01 02 00 00 06 64   ler............d",
          "1377: |   3440: 62 73 74 61 74 09 07 03 00 01 03 00 01 03 00 01   bstat...........",
          "1378: |   3456: 04 65 62 75 67 09 04 02 00 01 02 00 01 02 00 00   .ebug...........",
          "1379: |   3472: 06 65 6e 61 62 6c 65 3f 07 02 00 01 02 00 01 02   .enable?........",
          "1380: |   3488: 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00   ................",
          "1381: |   3504: 01 02 00 01 02 00 01 02 00 01 02 00 01 01 00 01   ................",
          "1382: |   3520: 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02   ................",
          "1383: |   3536: 00 01 02 00 01 02 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "1384: |   3552: 6e 09 1f 04 00 01 04 00 01 04 00 00 04 66 74 73   n............fts",
          "1385: |   3568: 34 09 0a 03 00 01 03 00 01 03 00 03 01 35 09 0d   4............5..",
          "1386: |   3584: 03 00 01 03 00 01 03 00 00 03 67 63 63 09 01 03   ..........gcc...",
          "1387: |   3600: 00 01 03 00 01 03 00 01 06 65 6f 70 6f 6c 79 09   .........eopoly.",
          "1388: |   3616: 10 03 00 01 03 00 01 03 00 00 05 6a 73 6f 6e 31   ...........json1",
          "1389: |   3632: 09 13 03 00 01 03 00 01 03 00 00 04 6c 6f 61 64   ............load",
          "1390: |   3648: 09 1f 03 00 01 03 00 01 03 00 00 03 6d 61 78 09   ............max.",
          "1391: |   3664: 1c 02 00 01 02 00 01 02 00 01 05 65 6d 6f 72 79   ...........emory",
          "1392: |   3680: 09 1c 03 00 01 03 00 01 03 00 03 04 73 79 73 35   ............sys5",
          "1393: |   3696: 09 16 03 00 01 03 00 01 03 00 00 06 6e 6f 63 61   ............noca",
          "1394: |   3712: 73 65 3c 02 01 02 02 00 03 01 02 02 00 03 01 02   se<.............",
          "1395: |   3728: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "1396: |   3744: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "1397: |   3760: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 00   ................",
          "1398: |   3776: 04 6f 6d 69 74 09 1f 02 00 01 02 00 01 02 00 00   .omit...........",
          "1399: |   3792: 05 72 74 72 65 65 09 19 03 00 01 03 00 01 03 00   .rtree..........",
          "1400: |   3808: 03 02 69 6d 3c 01 01 02 02 00 03 01 02 02 00 03   ..im<...........",
          "1401: |   3824: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "1402: |   3840: 02 02 00 03 01 02 02 00 03 01 a2 02 00 03 01 02   ................",
          "1403: |   3856: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "1404: |   3872: 00 00 0a 74 68 72 65 61 64 73 61 66 65 09 22 02   ...threadsafe...",
          "1405: |   3888: 00 01 02 00 01 02 00 00 04 76 74 61 62 09 07 04   .........vtab...",
          "1406: |   3904: 00 01 04 00 01 04 00 00 01 78 b4 01 01 01 01 02   .........x......",
          "1407: |   3920: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "1408: |   3936: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "1409: |   3952: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "1410: |   3968: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "1411: |   3984: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "1412: |   4000: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "1413: |   4016: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "1414: |   4032: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "1415: |   4048: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "1416: |   4064: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "1417: |   4080: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "1418: | page 6 offset 20480",
          "1419: |      0: 0a 00 00 00 02 0f f5 00 0f fb 0f f5 00 00 00 00   ................",
          "1420: |   4080: 00 00 00 00 00 05 04 08 09 01 02 04 04 08 08 09   ................",
          "1421: | page 7 offset 24576",
          "1422: |      0: 0d 00 00 00 05 0f b8 00 0f f4 0f e9 0f d6 0f c7   ................",
          "1423: |     16: 0f b8 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "1424: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 75 74 6f   ...........#auto",
          "1425: |   4032: 6d 65 72 67 65 3d 35 0d 04 02 23 6d 65 72 67 65   merge=5...#merge",
          "1426: |   4048: 3d 31 30 30 2c 38 11 03 02 2b 69 6e 74 65 67 72   =100,8...+integr",
          "1427: |   4064: 69 74 79 2d 63 68 65 63 6b 09 02 02 1b 72 65 62   ity-check....reb",
          "1428: |   4080: 75 69 6c 64 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   uild....optimize",
          "1429: | end crash-843cb8447eaf14.db",
          "1430: }]} {}",
          "1432: do_catchsql_test 11.1 {",
          "1433:   SELECT rowid, quote(matchinfo(t1,'pcxybs')) FROM t1 WHERE t1 MATCH 'e*'",
          "1434: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c324d44690c7b6dc640c46670e358d7f939e24f5",
      "candidate_info": {
        "commit_hash": "c324d44690c7b6dc640c46670e358d7f939e24f5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c324d44690c7b6dc640c46670e358d7f939e24f5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/in5.test"
        ],
        "message": "When populating an ephemeral b-tree for the RHS of an IN(...) clause, avoid applying an affinity to a value that may be used later on for some other purpose. Fix for [c7a117190].\n\nFossilOrigin-Name: 43e8b14314d876178d487c3b519296ac1de065fdcaa70768e40d684015bceb9d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/in5.test||test/in5.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 500c9152daaf11cf69d778aa8592175f6088337c6667c59af6df3a24cd81eb0e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2787:     int i;",
          "2788:     ExprList *pList = pExpr->x.pList;",
          "2789:     struct ExprList_item *pItem;",
          "2791:     affinity = sqlite3ExprAffinity(pLeft);",
          "2792:     if( affinity<=SQLITE_AFF_NONE ){",
          "2793:       affinity = SQLITE_AFF_BLOB;",
          "",
          "[Removed Lines]",
          "2790:     int r1, r2, r3;",
          "",
          "[Added Lines]",
          "2790:     int r1, r2;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2815:       }",
          "2821:     }",
          "2822:     sqlite3ReleaseTempReg(pParse, r1);",
          "2823:     sqlite3ReleaseTempReg(pParse, r2);",
          "",
          "[Removed Lines]",
          "2818:       r3 = sqlite3ExprCodeTarget(pParse, pE2, r1);",
          "2819:       sqlite3VdbeAddOp4(v, OP_MakeRecord, r3, 1, r2, &affinity, 1);",
          "2820:       sqlite3VdbeAddOp4Int(v, OP_IdxInsert, iTab, r2, r3, 1);",
          "",
          "[Added Lines]",
          "2818:       sqlite3ExprCode(pParse, pE2, r1);",
          "2819:       sqlite3VdbeAddOp4(v, OP_MakeRecord, r1, 1, r2, &affinity, 1);",
          "2820:       sqlite3VdbeAddOp4Int(v, OP_IdxInsert, iTab, r2, r1, 1);",
          "",
          "---------------"
        ],
        "test/in5.test||test/in5.test": [
          "File: test/in5.test -> test/in5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "248:   SELECT * FROM t9 WHERE a IN (44, 45, 44, 45)",
          "249: } {44 45}",
          "252: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251: #-------------------------------------------------------------------------",
          "252: # Test that ticket c7a117190 is fixed.",
          "253: #",
          "254: reset_db",
          "255: do_execsql_test 9.0 {",
          "256:   CREATE TABLE t0(c0);",
          "257:   CREATE VIEW v0(c0) AS SELECT LOWER(CAST('1e500' AS TEXT)) FROM t0;",
          "258:   INSERT INTO t0(c0) VALUES (NULL);",
          "259: }",
          "261: do_execsql_test 9.1 {",
          "262:   SELECT lower('1e500') FROM t0 WHERE rowid NOT IN (0, 0, lower('1e500'));",
          "263: } {1e500}",
          "265: do_execsql_test 9.2 {",
          "266:   SELECT lower('1e500') FROM t0 WHERE rowid != lower('1e500');",
          "267: } {1e500}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "012b15e2d7dfc7cc443a00e2d977c17d90160745",
      "candidate_info": {
        "commit_hash": "012b15e2d7dfc7cc443a00e2d977c17d90160745",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/012b15e2d7dfc7cc443a00e2d977c17d90160745",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/dbstat.c",
          "test/stat.test"
        ],
        "message": "Get the aggregate=TRUE feature working on the DBSTAT virtual  table.\n\nFossilOrigin-Name: 16fef3db063830884de46d53a289f637a7204fe84fcdee7ea81dbb8bca578952",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/dbstat.c||src/dbstat.c",
          "test/stat.test||test/stat.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9b5722f0fe666b99677e5f333dd8413aefb9ace7a461d74f6558f0ac53768719",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/dbstat.c||src/dbstat.c": [
          "File: src/dbstat.c -> src/dbstat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "76: typedef struct StatTable StatTable;",
          "",
          "[Removed Lines]",
          "59: #define VTAB_SCHEMA                                                          \\",
          "60:   \"CREATE TABLE xx( \"                                                        \\",
          "61:   \"  name       TEXT,\"          /*  0 Name of table or index */              \\",
          "62:   \"  path       TEXT,\"          /*  1 Path to page from root */              \\",
          "63:   \"  pageno     INTEGER,\"       /*  2 Page number */                         \\",
          "64:   \"  pagetype   TEXT,\"          /*  3 'internal', 'leaf' or 'overflow' */    \\",
          "65:   \"  ncell      INTEGER,\"       /*  4 Cells on page (0 for overflow) */      \\",
          "66:   \"  payload    INTEGER,\"       /*  5 Bytes of payload on this page */       \\",
          "67:   \"  unused     INTEGER,\"       /*  6 Bytes of unused space on this page */  \\",
          "68:   \"  mx_payload INTEGER,\"       /*  7 Largest payload size of all cells */   \\",
          "69:   \"  pgoffset   INTEGER,\"       /*  8 Offset of page in file */              \\",
          "70:   \"  pgsize     INTEGER,\"       /*  9 Size of the page */                    \\",
          "71:   \"  schema     TEXT HIDDEN,\"   /* 10 Database schema being analyzed */      \\",
          "72:   \"  aggregate  BOOLEAN HIDDEN\" /* 11 aggregate info for each table */       \\",
          "73:   \");\"",
          "",
          "[Added Lines]",
          "59: static const char zDbstatSchema[] =",
          "60:   \"CREATE TABLE x(\"",
          "73:   \")\"",
          "74: ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:   }else{",
          "166:     iDb = 0;",
          "167:   }",
          "169:   if( rc==SQLITE_OK ){",
          "170:     pTab = (StatTable *)sqlite3_malloc64(sizeof(StatTable));",
          "171:     if( pTab==0 ) rc = SQLITE_NOMEM_BKPT;",
          "",
          "[Removed Lines]",
          "168:   rc = sqlite3_declare_vtab(db, VTAB_SCHEMA);",
          "",
          "[Added Lines]",
          "170:   rc = sqlite3_declare_vtab(db, zDbstatSchema);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "323:   pCsr->isEof = 0;",
          "324: }",
          "329: static int statClose(sqlite3_vtab_cursor *pCursor){",
          "330:   StatCursor *pCsr = (StatCursor *)pCursor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329: static void statResetCounts(StatCursor *pCsr){",
          "330:   pCsr->nCell = 0;",
          "331:   pCsr->nMxPayload = 0;",
          "332:   pCsr->nUnused = 0;",
          "333:   pCsr->nPayload = 0;",
          "334:   pCsr->szPage = 0;",
          "335:   pCsr->nPage = 0;",
          "336: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "481:   sqlite3_file *fd;",
          "482:   sqlite3_int64 x[2];",
          "491:   fd = sqlite3PagerFile(pPager);",
          "492:   x[0] = pCsr->iPageno;",
          "493:   if( sqlite3OsFileControl(fd, 230440, &x)==SQLITE_OK ){",
          "494:     pCsr->iOffset = x[0];",
          "496:   }",
          "497: }",
          "502: static int statNext(sqlite3_vtab_cursor *pCursor){",
          "503:   int rc;",
          "",
          "[Removed Lines]",
          "485:   pCsr->szPage = sqlite3BtreeGetPageSize(pBt);",
          "486:   pCsr->iOffset = (i64)pCsr->szPage * (pCsr->iPageno - 1);",
          "495:     pCsr->szPage = (int)x[1];",
          "",
          "[Added Lines]",
          "506:     pCsr->szPage += x[1];",
          "507:   }else{",
          "509:     pCsr->szPage += sqlite3BtreeGetPageSize(pBt);",
          "510:     pCsr->iOffset = (i64)pCsr->szPage * (pCsr->iPageno - 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "514: statNextRestart:",
          "515:   if( pCsr->aPage[0].pPg==0 ){",
          "516:     rc = sqlite3_step(pCsr->pStmt);",
          "517:     if( rc==SQLITE_ROW ){",
          "518:       int nPage;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "534:     statResetCounts(pCsr);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "525:       rc = sqlite3PagerGet(pPager, iRoot, &pCsr->aPage[0].pPg, 0);",
          "526:       pCsr->aPage[0].iPgno = iRoot;",
          "527:       pCsr->aPage[0].iCell = 0;",
          "529:       pCsr->iPage = 0;",
          "531:     }else{",
          "532:       pCsr->isEof = 1;",
          "533:       return sqlite3_reset(pCsr->pStmt);",
          "534:     }",
          "535:   }else{",
          "538:     StatPage *p = &pCsr->aPage[pCsr->iPage];",
          "540:     while( p->iCell<p->nCell ){",
          "541:       StatCell *pCell = &p->aCell[p->iCell];",
          "544:         sqlite3BtreeEnter(pBt);",
          "545:         nUsable = sqlite3BtreeGetPageSize(pBt) -",
          "546:                         sqlite3BtreeGetReserveNoMutex(pBt);",
          "547:         sqlite3BtreeLeave(pBt);",
          "556:         if( pCell->iOvfl<pCell->nOvfl-1 ){",
          "559:         }else{",
          "562:         }",
          "563:         pCell->iOvfl++;",
          "566:       }",
          "567:       if( p->iRightChildPg ) break;",
          "568:       p->iCell++;",
          "",
          "[Removed Lines]",
          "528:       pCsr->aPage[0].zPath = z = sqlite3_mprintf(\"/\");",
          "530:       if( z==0 ) rc = SQLITE_NOMEM_BKPT;",
          "542:       if( pCell->iOvfl<pCell->nOvfl ){",
          "543:         int nUsable;",
          "548:         pCsr->zName = (char *)sqlite3_column_text(pCsr->pStmt, 0);",
          "549:         pCsr->iPageno = pCell->aOvfl[pCell->iOvfl];",
          "550:         pCsr->zPagetype = \"overflow\";",
          "551:         pCsr->nCell = 0;",
          "552:         pCsr->nMxPayload = 0;",
          "553:         pCsr->zPath = z = sqlite3_mprintf(",
          "554:             \"%s%.3x+%.6x\", p->zPath, p->iCell, pCell->iOvfl",
          "555:         );",
          "557:           pCsr->nUnused = 0;",
          "558:           pCsr->nPayload = nUsable - 4;",
          "560:           pCsr->nPayload = pCell->nLastOvfl;",
          "561:           pCsr->nUnused = nUsable - 4 - pCsr->nPayload;",
          "564:         statSizeAndOffset(pCsr);",
          "565:         return z==0 ? SQLITE_NOMEM_BKPT : SQLITE_OK;",
          "",
          "[Added Lines]",
          "547:       if( !pCsr->isAgg ){",
          "548:         pCsr->aPage[0].zPath = z = sqlite3_mprintf(\"/\");",
          "549:         if( z==0 ) rc = SQLITE_NOMEM_BKPT;",
          "550:       }",
          "552:       pCsr->nPage = 1;",
          "560:     if( !pCsr->isAgg ) statResetCounts(pCsr);",
          "563:       while( pCell->iOvfl<pCell->nOvfl ){",
          "564:         int nUsable, iOvfl;",
          "569:         pCsr->nPage++;",
          "570:         statSizeAndOffset(pCsr);",
          "572:           pCsr->nPayload += nUsable - 4;",
          "574:           pCsr->nPayload += pCell->nLastOvfl;",
          "575:           pCsr->nUnused += nUsable - 4 - pCell->nLastOvfl;",
          "577:         iOvfl = pCell->iOvfl;",
          "579:         if( !pCsr->isAgg ){",
          "580:           pCsr->zName = (char *)sqlite3_column_text(pCsr->pStmt, 0);",
          "581:           pCsr->iPageno = pCell->aOvfl[iOvfl];",
          "582:           pCsr->zPagetype = \"overflow\";",
          "583:           pCsr->zPath = z = sqlite3_mprintf(",
          "584:               \"%s%.3x+%.6x\", p->zPath, p->iCell, iOvfl",
          "585:           );",
          "586:           return z==0 ? SQLITE_NOMEM_BKPT : SQLITE_OK;",
          "587:         }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "571:     if( !p->iRightChildPg || p->iCell>p->nCell ){",
          "572:       statClearPage(p);",
          "576:     }",
          "577:     pCsr->iPage++;",
          "",
          "[Removed Lines]",
          "573:       if( pCsr->iPage==0 ) return statNext(pCursor);",
          "574:       pCsr->iPage--;",
          "",
          "[Added Lines]",
          "595:       if( pCsr->iPage>0 ){",
          "596:         pCsr->iPage--;",
          "597:       }else if( pCsr->isAgg ){",
          "600:         return SQLITE_OK;",
          "601:       }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "587:       p[1].iPgno = p->aCell[p->iCell].iChildPg;",
          "588:     }",
          "589:     rc = sqlite3PagerGet(pPager, p[1].iPgno, &p[1].pPg, 0);",
          "590:     p[1].iCell = 0;",
          "592:     p->iCell++;",
          "594:   }",
          "",
          "[Removed Lines]",
          "591:     p[1].zPath = z = sqlite3_mprintf(\"%s%.3x/\", p->zPath, p->iCell);",
          "593:     if( z==0 ) rc = SQLITE_NOMEM_BKPT;",
          "",
          "[Added Lines]",
          "617:     pCsr->nPage++;",
          "619:     if( !pCsr->isAgg ){",
          "620:       p[1].zPath = z = sqlite3_mprintf(\"%s%.3x/\", p->zPath, p->iCell);",
          "621:       if( z==0 ) rc = SQLITE_NOMEM_BKPT;",
          "622:     }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "620:           pCsr->zPagetype = \"corrupted\";",
          "621:           break;",
          "622:       }",
          "628:       nPayload = 0;",
          "629:       for(i=0; i<p->nCell; i++){",
          "630:         nPayload += p->aCell[i].nLocal;",
          "631:       }",
          "633:     }",
          "634:   }",
          "",
          "[Removed Lines]",
          "623:       pCsr->nCell = p->nCell;",
          "624:       pCsr->nUnused = p->nUnused;",
          "625:       pCsr->nMxPayload = p->nMxPayload;",
          "626:       pCsr->zPath = z = sqlite3_mprintf(\"%s\", p->zPath);",
          "627:       if( z==0 ) rc = SQLITE_NOMEM_BKPT;",
          "632:       pCsr->nPayload = nPayload;",
          "",
          "[Added Lines]",
          "653:       pCsr->nCell += p->nCell;",
          "654:       pCsr->nUnused += p->nUnused;",
          "655:       if( p->nMxPayload>pCsr->nMxPayload ) pCsr->nMxPayload = p->nMxPayload;",
          "656:       if( !pCsr->isAgg ){",
          "657:         pCsr->zPath = z = sqlite3_mprintf(\"%s\", p->zPath);",
          "658:         if( z==0 ) rc = SQLITE_NOMEM_BKPT;",
          "659:       }",
          "664:       pCsr->nPayload += nPayload;",
          "669:       if( pCsr->isAgg ) goto statNextRestart;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "722:       sqlite3_result_text(ctx, pCsr->zName, -1, SQLITE_TRANSIENT);",
          "723:       break;",
          "726:       break;",
          "729:       break;",
          "732:       break;",
          "734:       sqlite3_result_int(ctx, pCsr->nCell);",
          "",
          "[Removed Lines]",
          "725:       sqlite3_result_text(ctx, pCsr->zPath, -1, SQLITE_TRANSIENT);",
          "728:       sqlite3_result_int64(ctx, pCsr->iPageno);",
          "731:       sqlite3_result_text(ctx, pCsr->zPagetype, -1, SQLITE_STATIC);",
          "",
          "[Added Lines]",
          "762:       if( !pCsr->isAgg ){",
          "763:         sqlite3_result_text(ctx, pCsr->zPath, -1, SQLITE_TRANSIENT);",
          "764:       }",
          "767:       if( pCsr->isAgg ){",
          "768:         sqlite3_result_int64(ctx, pCsr->nPage);",
          "769:       }else{",
          "770:         sqlite3_result_int64(ctx, pCsr->iPageno);",
          "771:       }",
          "774:       if( !pCsr->isAgg ){",
          "775:         sqlite3_result_text(ctx, pCsr->zPagetype, -1, SQLITE_STATIC);",
          "776:       }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "743:       sqlite3_result_int(ctx, pCsr->nMxPayload);",
          "744:       break;",
          "747:       break;",
          "749:       sqlite3_result_int(ctx, pCsr->szPage);",
          "",
          "[Removed Lines]",
          "746:       sqlite3_result_int64(ctx, pCsr->iOffset);",
          "",
          "[Added Lines]",
          "791:       if( !pCsr->isAgg ){",
          "792:         sqlite3_result_int64(ctx, pCsr->iOffset);",
          "793:       }",
          "",
          "---------------"
        ],
        "test/stat.test||test/stat.test": [
          "File: test/stat.test -> test/stat.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:   t3 /00f/ 23 leaf 2 738 268 370                         \\",
          "135: ]",
          "137: # With every index entry overflowing, make sure no pages are missed",
          "138: # (other than the locking page which is 64 in this test build.)",
          "139: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137: do_execsql_test stat-2.1agg {",
          "138:   SELECT * FROM dbstat WHERE aggregate=TRUE ORDER BY name;",
          "139: } [list \\",
          "140:   sqlite_autoindex_t3_1 {}  5 {} 32  3898 1065 132 {}  5120 \\",
          "141:   sqlite_master         {}  1 {}  2    84  824  49 {}  1024 \\",
          "142:   t3                    {} 17 {} 47 11188 5815 370 {} 17408 \\",
          "143: ]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:   t4 /000+000006 18 overflow 0 1020 0 0      \\",
          "172: ]",
          "174: do_execsql_test stat-4.1 {",
          "175:   CREATE TABLE t5(x);",
          "176:   CREATE INDEX i5 ON t5(x);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182: do_execsql_test stat-3.2 {",
          "183:   SELECT *, '|' FROM dbstat WHERE aggregate=TRUE ORDER BY name;",
          "184: } [list \\",
          "185:   i4            {} 9 {} 1 7782 1386 7782 {} 9216 | \\",
          "186:   sqlite_master {} 1 {} 2   74  834   40 {} 1024 | \\",
          "187:   t4            {} 8 {} 1 7780  367 7780 {} 8192 | \\",
          "188: ]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "201:   t1 /001+000000 4 overflow 0 1020 0 0    \\",
          "202: ]",
          "204: do_catchsql_test stat-6.1 {",
          "205:   CREATE VIRTUAL TABLE temp.s2 USING dbstat(mainx);",
          "206: } {1 {no such database: mainx}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221: do_execsql_test stat-5.20 {",
          "222:   SELECT name, quote(path), pageno, quote(pagetype), ncell, payload,",
          "223:          unused, mx_payload, '|' FROM dbstat('main',1);",
          "224: } {sqlite_master NULL 1 NULL 1 34 878 34 | tx NULL 1 NULL 0 0 1016 0 |}",
          "225: do_execsql_test stat-5.21 {",
          "226:   SELECT name, quote(path), pageno, quote(pagetype), ncell, payload,",
          "227:          unused, mx_payload, '|' FROM dbstat('aux1',1);",
          "228: } {sqlite_master NULL 1 NULL 1 34 878 34 | t1 NULL 3 NULL 2 3033 5 1517 |}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa243aa7cdf69b1e5bdecb4358517aa10681c235",
      "candidate_info": {
        "commit_hash": "aa243aa7cdf69b1e5bdecb4358517aa10681c235",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/aa243aa7cdf69b1e5bdecb4358517aa10681c235",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/btree02.test"
        ],
        "message": "Modify the btree02.test module so that it does not depend on whether TCL interprets a value as a string or as an integer.\n\nFossilOrigin-Name: d9e4f9574659c6285deba3dca68eca9989e615971cea3a901ffcda12fb4ee36f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/btree02.test||test/btree02.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ff45f9dd69fe1e1c7875e5bb73ac3dde2a31746475d3765cda9233f8e06e26ca",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/btree02.test||test/btree02.test": [
          "File: test/btree02.test -> test/btree02.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: do_execsql_test btree02-100 {",
          "22:   CREATE TABLE t1(a TEXT, ax INTEGER, b INT, PRIMARY KEY(a,ax)) WITHOUT ROWID;",
          "23:   WITH RECURSIVE c(i) AS (VALUES(1) UNION ALL SELECT i+1 FROM c WHERE i<10)",
          "25:   CREATE INDEX t1a ON t1(a);",
          "26:   CREATE TABLE t2(x,y);",
          "27:   CREATE TABLE t3(cnt);",
          "",
          "[Removed Lines]",
          "24:     INSERT INTO t1(a,ax,b) SELECT printf('%02x',i), random(), i FROM c;",
          "",
          "[Added Lines]",
          "24:     INSERT INTO t1(a,ax,b) SELECT printf('%02x',i+160), random(), i FROM c;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:     INSERT INTO t3(cnt) SELECT i FROM c;",
          "30:   SELECT count(*) FROM t1;",
          "31: } {10}",
          "32: do_test btree02-110 {",
          "33:   db eval BEGIN",
          "34:   set i 0",
          "35:   db eval {SELECT a, ax, b, cnt FROM t1 CROSS JOIN t3 WHERE b IS NOT NULL} {",
          "38:     db eval {INSERT INTO t2(x,y) VALUES($b,$cnt)}",
          "39:     # puts \"a,b,cnt = ($a,$b,$cnt)\"",
          "40:     incr i",
          "41:     if {$i%2==1} {",
          "42:       set bx [expr {$b+1000}]",
          "44:       db eval {INSERT INTO t1(a,ax,b) VALUES(printf('(%s)',$a),random(),$bx)}",
          "45:     } else {",
          "46:       # puts \"DELETE a=$a\"",
          "47:       db eval {DELETE FROM t1 WHERE a=$a}",
          "48:     }",
          "49:     db eval {COMMIT; BEGIN}",
          "50:   }",
          "51:   db one {COMMIT; SELECT count(*) FROM t1;}",
          "54: finish_test",
          "",
          "[Removed Lines]",
          "36:     if {$a==\"\"} {set a 0}",
          "37:     if {$b==\"\"} {set b 0}",
          "43:       # puts \"INSERT ($a),$bx\"",
          "52: } {27}",
          "",
          "[Added Lines]",
          "33: proc showt1 {} {",
          "34:   puts -nonewline \"t1: \"",
          "35:   puts [db eval {SELECT printf('(%s,%s)',quote(a),quote(b)) FROM t1}]",
          "36: }",
          "41:   # showt1",
          "43:     if {$a==\"\"} continue",
          "49:       #  puts \"INSERT ($a),$bx\"",
          "51:       # showt1",
          "55:       # showt1",
          "60: } {10}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2eb2ca839185e9bd5ef57da7078adecbd2e56994",
      "candidate_info": {
        "commit_hash": "2eb2ca839185e9bd5ef57da7078adecbd2e56994",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2eb2ca839185e9bd5ef57da7078adecbd2e56994",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbesort.c"
        ],
        "message": "Avoid a sanitizer error (pointer arithmatic overflow) in vdbesort.c.\n\nFossilOrigin-Name: af61a2fc45a0fa1277d7453779238b77de4c298a9f60714b7dc62ddca5874f80",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbesort.c||src/vdbesort.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4de4480ffdea1e923c4b964692ccde92d713c8b6c056bb04bddf1ff55ee891ec",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbesort.c||src/vdbesort.c": [
          "File: src/vdbesort.c -> src/vdbesort.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1829:     if( nMin>pSorter->nMemory ){",
          "1830:       u8 *aNew;",
          "1832:       sqlite3_int64 nNew = 2 * (sqlite3_int64)pSorter->nMemory;",
          "1833:       while( nNew < nMin ) nNew = nNew*2;",
          "1834:       if( nNew > pSorter->mxPmaSize ) nNew = pSorter->mxPmaSize;",
          "1835:       if( nNew < nMin ) nNew = nMin;",
          "1837:       aNew = sqlite3Realloc(pSorter->list.aMemory, nNew);",
          "1838:       if( !aNew ) return SQLITE_NOMEM_BKPT;",
          "1840:       pSorter->list.aMemory = aNew;",
          "1841:       pSorter->nMemory = nNew;",
          "1842:     }",
          "",
          "[Removed Lines]",
          "1831:       int iListOff = (u8*)pSorter->list.pList - pSorter->list.aMemory;",
          "1839:       pSorter->list.pList = (SorterRecord*)&aNew[iListOff];",
          "",
          "[Added Lines]",
          "1832:       int iListOff = -1;",
          "1833:       if( pSorter->list.pList ){",
          "1834:         iListOff = (u8*)pSorter->list.pList - pSorter->list.aMemory;",
          "1835:       }",
          "1841:       if( iListOff>=0 ){",
          "1842:         pSorter->list.pList = (SorterRecord*)&aNew[iListOff];",
          "1843:       }",
          "",
          "---------------"
        ]
      }
    }
  ]
}