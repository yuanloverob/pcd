{
  "cve_id": "CVE-2019-19242",
  "cve_desc": "SQLite 3.30.1 mishandles pExpr->y.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
  "repo": "sqlite/sqlite",
  "patch_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
  "patch_info": {
    "commit_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/wherecode.c",
      "test/gencol1.test"
    ],
    "message": "Fix a problem that comes up when using generated columns that evaluate to a constant in an index and then making use of that index in a join.\n\nFossilOrigin-Name: 8b12e95fec7ce6e0de82a04ca3dfcf1a8e62e233b7382aa28a8a9be6e862b1af",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/wherecode.c||src/wherecode.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 2d53a30cc23e53033af8e8666457654db5dcc453ed6cd176ce1d0bff4f528159",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3607:         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);",
      "3609:         if( aff>SQLITE_AFF_BLOB ){",
      "3610:           static const char zAff[] = \"B\\000C\\000D\\000E\";",
      "3611:           assert( SQLITE_AFF_BLOB=='A' );",
      "",
      "[Removed Lines]",
      "3608:         int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "",
      "[Added Lines]",
      "3608:         int aff;",
      "3609:         if( pExpr->y.pTab ){",
      "3610:           aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "3611:         }else{",
      "3612:           aff = pExpr->affExpr;",
      "3613:         }",
      "",
      "---------------"
    ],
    "src/wherecode.c||src/wherecode.c": [
      "File: src/wherecode.c -> src/wherecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:   if( pExpr->op==TK_COLUMN ){",
      "1142:     IdxExprTrans *pX = p->u.pIdxTrans;",
      "1143:     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){",
      "1144:       pExpr->iTable = pX->iIdxCur;",
      "1145:       pExpr->iColumn = pX->iIdxCol;",
      "1146:       pExpr->y.pTab = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1144:       assert( pExpr->y.pTab!=0 );",
      "1145:       pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:   UPDATE t0 SET c0 = NULL;",
      "244: } {1 {generated column loop on \"c2\"}}",
      "247: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246: # 2019-11-21 Problems in the new generated column logic",
      "247: # reported by Yongheng Chen and Rui Zhong",
      "248: do_execsql_test gencol1-9.10 {",
      "249:   DROP TABLE IF EXISTS t1;",
      "250:   DROP TABLE IF EXISTS t2;",
      "251:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
      "252:   INSERT INTO t1 VALUES(17);",
      "253:   CREATE TABLE t2(cc);",
      "254:   INSERT INTO t2 VALUES(41);",
      "255:   SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;",
      "256: } {41 17 17}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2ad07d96b69b031f5dd2cec52e0155d8bf0d5850",
      "candidate_info": {
        "commit_hash": "2ad07d96b69b031f5dd2cec52e0155d8bf0d5850",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2ad07d96b69b031f5dd2cec52e0155d8bf0d5850",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c",
          "test/skipscan1.test"
        ],
        "message": "Improved fix for ticket [ced41c7c7d6b4d36] that keeps skip-scan enabled, but avoids identifying a skip-scan as order-distinct (because it is not) and thus forces a separate b-tree to implement the DISTINCT clause of a query.  This undoes check-in [a871d69c6de65038] and substitutes a new fix.\n\nFossilOrigin-Name: 89bf0399e87be76e7b264e0a35e8a6d3af0f9e71123a929c20754882b636ca70",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c",
          "test/skipscan1.test||test/skipscan1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a871d69c6de65038360aa6142fbad22689fb347e526cca56bb83e695c1441fbe",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2723:    && pProbe->noSkipScan==0",
          "2724:    && OptimizationEnabled(db, SQLITE_SkipScan)",
          "2727:    && (rc = whereLoopResize(db, pNew, pNew->nLTerm+1))==SQLITE_OK",
          "2728:   ){",
          "2729:     LogEst nIter;",
          "",
          "[Removed Lines]",
          "2726:    && (pWInfo->wctrlFlags & (WHERE_WANT_DISTINCT|WHERE_DISTINCTBY))==0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3745:         assert( nColumn==nKeyCol+1 || !HasRowid(pIndex->pTable) );",
          "3746:         assert( pIndex->aiColumn[nColumn-1]==XN_ROWID",
          "3747:                           || !HasRowid(pIndex->pTable));",
          "3749:       }",
          "",
          "[Removed Lines]",
          "3748:         isOrderDistinct = IsUniqueIndex(pIndex);",
          "",
          "[Added Lines]",
          "3747:         isOrderDistinct = IsUniqueIndex(pIndex)",
          "3748:                           && (pLoop->wsFlags & WHERE_SKIPSCAN)==0;",
          "",
          "---------------"
        ],
        "test/skipscan1.test||test/skipscan1.test": [
          "File: test/skipscan1.test -> test/skipscan1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "374: } {}",
          "376: # 2019-07-29 Ticket ced41c7c7d6b4d36",
          "378: #",
          "379: db close",
          "380: sqlite3 db :memory:",
          "381: do_execsql_test skipscan1-3.1 {",
          "382:   CREATE TABLE t1 (c1, c2, c3, c4, PRIMARY KEY(c4, c3));",
          "386:   ANALYZE sqlite_master;",
          "387:   INSERT INTO sqlite_stat1 VALUES('t1','sqlite_autoindex_t1_1','18 18 6');",
          "388:   ANALYZE sqlite_master;",
          "389:   SELECT DISTINCT quote(c1), quote(c2), quote(c3), quote(c4), '|'",
          "390:     FROM t1 WHERE t1.c3 = 1;",
          "393: finish_test",
          "",
          "[Removed Lines]",
          "377: # Skip-scan is disabled for DISTINCT queries",
          "383:   INSERT INTO t1 VALUES(NULL,0,1,NULL);",
          "384:   INSERT INTO t1 VALUES(0,NULL,1,NULL);",
          "385:   INSERT INTO t1 VALUES(NULL,NULL,1,NULL);",
          "391: } {NULL 0 1 NULL | 0 NULL 1 NULL | NULL NULL 1 NULL |}",
          "",
          "[Added Lines]",
          "377: # A skipscan query is not order-distinct",
          "383:   INSERT INTO t1 VALUES(3,0,1,NULL);",
          "384:   INSERT INTO t1 VALUES(0,4,1,NULL);",
          "385:   INSERT INTO t1 VALUES(5,6,1,NULL);",
          "386:   INSERT INTO t1 VALUES(0,4,1,NULL);",
          "392: } {3 0 1 NULL | 0 4 1 NULL | 5 6 1 NULL |}",
          "393: do_eqp_test skipscan1-3.2 {",
          "394:   SELECT DISTINCT quote(c1), quote(c2), quote(c3), quote(c4), '|'",
          "395:     FROM t1 WHERE t1.c3 = 1;",
          "396: } {",
          "397:   QUERY PLAN",
          "398:   |--SEARCH TABLE t1 USING INDEX sqlite_autoindex_t1_1 (ANY(c4) AND c3=?)",
          "399:   `--USE TEMP B-TREE FOR DISTINCT",
          "400: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "378a7d356b954de44ea5274422d0ba5dfaf11501",
      "candidate_info": {
        "commit_hash": "378a7d356b954de44ea5274422d0ba5dfaf11501",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/378a7d356b954de44ea5274422d0ba5dfaf11501",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/util.c",
          "test/cast.test"
        ],
        "message": "A string consisting of a single '.' is not a floating point literal with extra text at the end.  Fix for ticket [412bba9b22c677da]\n\nFossilOrigin-Name: 57050162294efec90caa5cc3c2f8c1a85215526adcf57b284ce2d2e799286b78",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/util.c||src/util.c",
          "test/cast.test||test/cast.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 71643deb6bbad4b4a511bfd43b32245b50a555b508b90f33adf0656ae53292c6",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "561:   if( z==zEnd && nDigit>0 && eValid && eType>0 ){",
          "562:     return eType;",
          "564:     return -1;",
          "565:   }else{",
          "566:     return 0;",
          "",
          "[Removed Lines]",
          "563:   }else if( eType>=2 && (eType==3 || eValid) ){",
          "",
          "[Added Lines]",
          "563:   }else if( eType>=2 && (eType==3 || eValid) && nDigit>0 ){",
          "",
          "---------------"
        ],
        "test/cast.test||test/cast.test": [
          "File: test/cast.test -> test/cast.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:   SELECT CAST(c0 AS NUMERIC) FROM t0;",
          "432: } {1}",
          "434: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "434: # 2019-06-10",
          "435: # https://sqlite.org/src/info/27de823723a41df45af3",
          "436: #",
          "437: do_execsql_test cast-7.30 {",
          "438:   SELECT -'.';",
          "439: } 0",
          "440: do_execsql_test cast-7.31 {",
          "441:   SELECT '.'+0;",
          "442: } 0",
          "443: do_execsql_test cast-7.32 {",
          "444:   SELECT CAST('.' AS numeric);",
          "445: } 0",
          "446: do_execsql_test cast-7.33 {",
          "447:   SELECT -CAST('.' AS numeric);",
          "448: } 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "11d07ed64364346dc13df20b1641e3bcdb76f828",
      "candidate_info": {
        "commit_hash": "11d07ed64364346dc13df20b1641e3bcdb76f828",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/11d07ed64364346dc13df20b1641e3bcdb76f828",
        "files": [
          "ext/fts5/test/fts5aa.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix one more instance of excess whitespace in test result strings.\n\nFossilOrigin-Name: c064964deb0b7220ba784f07ca9c603680f3c8bb936d56ab4eca1962beac1359",
        "before_after_code_files": [
          "ext/fts5/test/fts5aa.test||ext/fts5/test/fts5aa.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/test/fts5aa.test||ext/fts5/test/fts5aa.test": [
          "File: ext/fts5/test/fts5aa.test -> ext/fts5/test/fts5aa.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: do_execsql_test 1.1 {",
          "39:   DROP TABLE t1;",
          "40:   SELECT name, sql FROM sqlite_master;",
          "44: #-------------------------------------------------------------------------",
          "45: #",
          "",
          "[Removed Lines]",
          "41: } {",
          "42: }",
          "",
          "[Added Lines]",
          "41: } {}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ad70f03ceda74163903d247a975666b35fae722a27c48dd3efd31c1164b5627e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa0f2d0efad49391f44be9ee16c2df61a355c32c",
      "candidate_info": {
        "commit_hash": "aa0f2d0efad49391f44be9ee16c2df61a355c32c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/aa0f2d0efad49391f44be9ee16c2df61a355c32c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c"
        ],
        "message": "Add the SQLITE_ENABLE_EARLY_CURSOR_CLOSE compile-time option which causes read cursors to be closed after their usefulness ends during a two-pass UPDATE.\n\nFossilOrigin-Name: 7def6c8edd85f19ee09038e01541f75b1f71ca39b9fb782b8f0fcac89207c353",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3910b5639d5c96d1840d4feeea64d3a55073531b7365a4e75d9cda6f119f3cfc",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5262:       continue;",
          "5263:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5265: #ifdef SQLITE_ENABLE_EARLY_CURSOR_CLOSE",
          "5271:     if( (pTab->tabFlags & TF_Ephemeral)==0",
          "5272:      && pTab->pSelect==0",
          "5273:      && (pWInfo->wctrlFlags & WHERE_OR_SUBCLAUSE)==0",
          "5274:     ){",
          "5275:       int ws = pLoop->wsFlags;",
          "5276:       if( pWInfo->eOnePass==ONEPASS_OFF && (ws & WHERE_IDX_ONLY)==0 ){",
          "5277:         sqlite3VdbeAddOp1(v, OP_Close, pTabItem->iCursor);",
          "5278:       }",
          "5279:       if( (ws & WHERE_INDEXED)!=0",
          "5280:        && (ws & (WHERE_IPK|WHERE_AUTO_INDEX))==0",
          "5281:        && pLevel->iIdxCur!=pWInfo->aiCurOnePass[1]",
          "5282:       ){",
          "5283:         sqlite3VdbeAddOp1(v, OP_Close, pLevel->iIdxCur);",
          "5284:       }",
          "5285:     }",
          "5286: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7bf3133fef1265b9d600554fb8c3b72ecd3bf509",
      "candidate_info": {
        "commit_hash": "7bf3133fef1265b9d600554fb8c3b72ecd3bf509",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7bf3133fef1265b9d600554fb8c3b72ecd3bf509",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata7.db"
        ],
        "message": "New dbfuzz2 test cases added to test/fuzzdata7.db\n\nFossilOrigin-Name: 25975e1fb2be0c011542c0a6b001385cec8113662df93dc618f725f2a4692bc2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c1ac00706bae45fe9735061ada025880606cdfb8ecfdaa36b4e2d04275820861",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}