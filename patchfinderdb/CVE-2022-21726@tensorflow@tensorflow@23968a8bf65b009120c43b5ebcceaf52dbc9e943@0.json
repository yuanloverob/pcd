{
  "cve_id": "CVE-2022-21726",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `Dequantize` does not fully validate the value of `axis` and can result in heap OOB accesses. The `axis` argument can be `-1` (the default value for the optional argument) or any other positive value at most the number of dimensions of the input. Unfortunately, the upper bound is not checked and this results in reading past the end of the array containing the dimensions of the input tensor. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "23968a8bf65b009120c43b5ebcceaf52dbc9e943",
  "patch_info": {
    "commit_hash": "23968a8bf65b009120c43b5ebcceaf52dbc9e943",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/23968a8bf65b009120c43b5ebcceaf52dbc9e943",
    "files": [
      "tensorflow/core/kernels/dequantize_op.cc"
    ],
    "message": "Fix out of bound access in DequantizeOp by adding check for axis < input dimension\n\nPiperOrigin-RevId: 411214268\nChange-Id: I3249d2a69ddc82f182c589a3a5bbfb71543f4b29",
    "before_after_code_files": [
      "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc": [
      "File: tensorflow/core/kernels/dequantize_op.cc -> tensorflow/core/kernels/dequantize_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "94:     const Tensor& input_min_tensor = ctx->input(1);",
      "95:     const Tensor& input_max_tensor = ctx->input(2);",
      "97:     int num_slices = 1;",
      "98:     if (axis_ > -1) {",
      "99:       num_slices = input.dim_size(axis_);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97:     OP_REQUIRES(",
      "98:         ctx, axis_ < input.dims(),",
      "99:         errors::InvalidArgument(\"Axis must be less than input dimension(\",",
      "100:                                 input.dims(), \"), got \", axis_));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0e152251b3ce5e98745569d78f604f282a75d19c",
      "candidate_info": {
        "commit_hash": "0e152251b3ce5e98745569d78f604f282a75d19c",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0e152251b3ce5e98745569d78f604f282a75d19c",
        "files": [
          "tensorflow/core/kernels/dequantize_op.cc"
        ],
        "message": "Fix out of bound access in DequantizeOp by adding check for axis < input dimension\n\nPiperOrigin-RevId: 411214268\nChange-Id: I3249d2a69ddc82f182c589a3a5bbfb71543f4b29",
        "before_after_code_files": [
          "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc": [
          "File: tensorflow/core/kernels/dequantize_op.cc -> tensorflow/core/kernels/dequantize_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:     const Tensor& input_min_tensor = ctx->input(1);",
          "95:     const Tensor& input_max_tensor = ctx->input(2);",
          "97:     int num_slices = 1;",
          "98:     if (axis_ > -1) {",
          "99:       num_slices = input.dim_size(axis_);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     OP_REQUIRES(",
          "98:         ctx, axis_ < input.dims(),",
          "99:         errors::InvalidArgument(\"Axis must be less than input dimension(\",",
          "100:                                 input.dims(), \"), got \", axis_));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "89f21a0a1fe320935a3c7c567b26a07384b95b65",
      "candidate_info": {
        "commit_hash": "89f21a0a1fe320935a3c7c567b26a07384b95b65",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/89f21a0a1fe320935a3c7c567b26a07384b95b65",
        "files": [
          "tensorflow/core/kernels/dequantize_op.cc"
        ],
        "message": "Fix out of bound access in DequantizeOp by adding check for axis < input dimension\n\nPiperOrigin-RevId: 411214268\nChange-Id: I3249d2a69ddc82f182c589a3a5bbfb71543f4b29",
        "before_after_code_files": [
          "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc": [
          "File: tensorflow/core/kernels/dequantize_op.cc -> tensorflow/core/kernels/dequantize_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:     const Tensor& input_min_tensor = ctx->input(1);",
          "95:     const Tensor& input_max_tensor = ctx->input(2);",
          "97:     int num_slices = 1;",
          "98:     if (axis_ > -1) {",
          "99:       num_slices = input.dim_size(axis_);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     OP_REQUIRES(",
          "98:         ctx, axis_ < input.dims(),",
          "99:         errors::InvalidArgument(\"Axis must be less than input dimension(\",",
          "100:                                 input.dims(), \"), got \", axis_));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81156a5ad731c7dd2b2952c301e0f1d705e0dd14",
      "candidate_info": {
        "commit_hash": "81156a5ad731c7dd2b2952c301e0f1d705e0dd14",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/81156a5ad731c7dd2b2952c301e0f1d705e0dd14",
        "files": [
          "tensorflow/core/kernels/dequantize_op.cc"
        ],
        "message": "Fix out of bound access in DequantizeOp by adding check for axis < input dimension\n\nPiperOrigin-RevId: 411214268\nChange-Id: I3249d2a69ddc82f182c589a3a5bbfb71543f4b29",
        "before_after_code_files": [
          "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/dequantize_op.cc||tensorflow/core/kernels/dequantize_op.cc": [
          "File: tensorflow/core/kernels/dequantize_op.cc -> tensorflow/core/kernels/dequantize_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:     const Tensor& input_min_tensor = ctx->input(1);",
          "95:     const Tensor& input_max_tensor = ctx->input(2);",
          "97:     int num_slices = 1;",
          "98:     if (axis_ > -1) {",
          "99:       num_slices = input.dim_size(axis_);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     OP_REQUIRES(",
          "98:         ctx, axis_ < input.dims(),",
          "99:         errors::InvalidArgument(\"Axis must be less than input dimension(\",",
          "100:                                 input.dims(), \"), got \", axis_));",
          "",
          "---------------"
        ]
      }
    }
  ]
}