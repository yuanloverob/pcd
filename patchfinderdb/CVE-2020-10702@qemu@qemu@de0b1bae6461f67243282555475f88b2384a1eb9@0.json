{
  "cve_id": "CVE-2020-10702",
  "cve_desc": "A flaw was found in QEMU in the implementation of the Pointer Authentication (PAuth) support for ARM introduced in version 4.0 and fixed in version 5.0.0. A general failure of the signature generation process caused every PAuth-enforced pointer to be signed with the same signature. A local attacker could obtain the signature of a protected pointer and abuse this flaw to bypass PAuth protection for all programs running on QEMU.",
  "repo": "qemu/qemu",
  "patch_hash": "de0b1bae6461f67243282555475f88b2384a1eb9",
  "patch_info": {
    "commit_hash": "de0b1bae6461f67243282555475f88b2384a1eb9",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/de0b1bae6461f67243282555475f88b2384a1eb9",
    "files": [
      "target/arm/pauth_helper.c"
    ],
    "message": "target/arm: Fix PAuth sbox functions\n\nIn the PAC computation, sbox was applied over wrong bits.\nAs this is a 4-bit sbox, bit index should be incremented by 4 instead of 16.\n\nTest vector from QARMA paper (https://eprint.iacr.org/2016/444.pdf) was\nused to verify one computation of the pauth_computepac() function which\nuses sbox2.\n\nLaunchpad: https://bugs.launchpad.net/bugs/1859713\nReviewed-by: Richard Henderson <richard.henderson@linaro.org>\nSigned-off-by: Vincent DEHORS <vincent.dehors@smile.fr>\nSigned-off-by: Adrien GRASSEIN <adrien.grassein@smile.fr>\nMessage-id: 20200116230809.19078-2-richard.henderson@linaro.org\nReviewed-by: Peter Maydell <peter.maydell@linaro.org>\nSigned-off-by: Peter Maydell <peter.maydell@linaro.org>",
    "before_after_code_files": [
      "target/arm/pauth_helper.c||target/arm/pauth_helper.c"
    ]
  },
  "patch_diff": {
    "target/arm/pauth_helper.c||target/arm/pauth_helper.c": [
      "File: target/arm/pauth_helper.c -> target/arm/pauth_helper.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "89:     uint64_t o = 0;",
      "90:     int b;",
      "93:         o |= (uint64_t)sub[(i >> b) & 0xf] << b;",
      "94:     }",
      "95:     return o;",
      "",
      "[Removed Lines]",
      "92:     for (b = 0; b < 64; b += 16) {",
      "",
      "[Added Lines]",
      "92:     for (b = 0; b < 64; b += 4) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "104:     uint64_t o = 0;",
      "105:     int b;",
      "108:         o |= (uint64_t)inv_sub[(i >> b) & 0xf] << b;",
      "109:     }",
      "110:     return o;",
      "",
      "[Removed Lines]",
      "107:     for (b = 0; b < 64; b += 16) {",
      "",
      "[Added Lines]",
      "107:     for (b = 0; b < 64; b += 4) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "abf9ffa7b3dd0d621c0cf5596cd59949ad66d81a",
      "candidate_info": {
        "commit_hash": "abf9ffa7b3dd0d621c0cf5596cd59949ad66d81a",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/abf9ffa7b3dd0d621c0cf5596cd59949ad66d81a",
        "files": [
          "target/arm/pauth_helper.c"
        ],
        "message": "target/arm: Fix PAuth sbox functions\n\nIn the PAC computation, sbox was applied over wrong bits.\nAs this is a 4-bit sbox, bit index should be incremented by 4 instead of 16.\n\nTest vector from QARMA paper (https://eprint.iacr.org/2016/444.pdf) was\nused to verify one computation of the pauth_computepac() function which\nuses sbox2.\n\nLaunchpad: https://bugs.launchpad.net/bugs/1859713\nReviewed-by: Richard Henderson <richard.henderson@linaro.org>\nSigned-off-by: Vincent DEHORS <vincent.dehors@smile.fr>\nSigned-off-by: Adrien GRASSEIN <adrien.grassein@smile.fr>\nMessage-id: 20200116230809.19078-2-richard.henderson@linaro.org\nReviewed-by: Peter Maydell <peter.maydell@linaro.org>\nSigned-off-by: Peter Maydell <peter.maydell@linaro.org>\n(cherry picked from commit de0b1bae6461f67243282555475f88b2384a1eb9)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "target/arm/pauth_helper.c||target/arm/pauth_helper.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "target/arm/pauth_helper.c||target/arm/pauth_helper.c"
          ],
          "candidate": [
            "target/arm/pauth_helper.c||target/arm/pauth_helper.c"
          ]
        }
      },
      "candidate_diff": {
        "target/arm/pauth_helper.c||target/arm/pauth_helper.c": [
          "File: target/arm/pauth_helper.c -> target/arm/pauth_helper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     uint64_t o = 0;",
          "90:     int b;",
          "93:         o |= (uint64_t)sub[(i >> b) & 0xf] << b;",
          "94:     }",
          "95:     return o;",
          "",
          "[Removed Lines]",
          "92:     for (b = 0; b < 64; b += 16) {",
          "",
          "[Added Lines]",
          "92:     for (b = 0; b < 64; b += 4) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104:     uint64_t o = 0;",
          "105:     int b;",
          "108:         o |= (uint64_t)inv_sub[(i >> b) & 0xf] << b;",
          "109:     }",
          "110:     return o;",
          "",
          "[Removed Lines]",
          "107:     for (b = 0; b < 64; b += 16) {",
          "",
          "[Added Lines]",
          "107:     for (b = 0; b < 64; b += 4) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}