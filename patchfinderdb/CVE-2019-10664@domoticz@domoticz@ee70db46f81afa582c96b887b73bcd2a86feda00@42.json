{
  "cve_id": "CVE-2019-10664",
  "cve_desc": "Domoticz before 4.10578 allows SQL Injection via the idx parameter in CWebServer::GetFloorplanImage in WebServer.cpp.",
  "repo": "domoticz/domoticz",
  "patch_hash": "ee70db46f81afa582c96b887b73bcd2a86feda00",
  "patch_info": {
    "commit_hash": "ee70db46f81afa582c96b887b73bcd2a86feda00",
    "repo": "domoticz/domoticz",
    "commit_url": "https://github.com/domoticz/domoticz/commit/ee70db46f81afa582c96b887b73bcd2a86feda00",
    "files": [
      "main/WebServer.cpp"
    ],
    "message": "Fixed possible SQL Injection Vulnerability (Thanks to Fabio Carretto!)",
    "before_after_code_files": [
      "main/WebServer.cpp||main/WebServer.cpp"
    ]
  },
  "patch_diff": {
    "main/WebServer.cpp||main/WebServer.cpp": [
      "File: main/WebServer.cpp -> main/WebServer.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10772:     return;",
      "10773:    }",
      "10774:    std::vector<std::vector<std::string> > result;",
      "10776:    if (result.empty())",
      "10777:     return;",
      "10778:    reply::set_content(&rep, result[0][0].begin(), result[0][0].end());",
      "",
      "[Removed Lines]",
      "10775:    result = m_sql.safe_queryBlob(\"SELECT Image FROM Floorplans WHERE ID=%s\", idx.c_str());",
      "",
      "[Added Lines]",
      "10775:    result = m_sql.safe_queryBlob(\"SELECT Image FROM Floorplans WHERE ID=%d\", atol(idx.c_str()));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "edf0249be2be4d106f9151a97555ded435d1eb5e",
      "candidate_info": {
        "commit_hash": "edf0249be2be4d106f9151a97555ded435d1eb5e",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/edf0249be2be4d106f9151a97555ded435d1eb5e",
        "files": [
          "dzVents/runtime/integration-tests/stage1.lua"
        ],
        "message": "Fix test. All's fine again.",
        "before_after_code_files": [
          "dzVents/runtime/integration-tests/stage1.lua||dzVents/runtime/integration-tests/stage1.lua"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "dzVents/runtime/integration-tests/stage1.lua||dzVents/runtime/integration-tests/stage1.lua": [
          "File: dzVents/runtime/integration-tests/stage1.lua -> dzVents/runtime/integration-tests/stage1.lua",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:  local dev = dz.devices(name)",
          "165:  local res = true",
          "169:  res = res and checkAttributes(dev, {",
          "170:   [\"id\"] = 5,",
          "171:   [\"name\"] = name,",
          "173:   [\"deviceSubType\"] = \"Current\";",
          "174:   [\"baseType\"] = dz.BASETYPE_DEVICE,",
          "175:   [\"hardwareType\"] = \"Dummy (Does nothing, use for virtual switches only)\";",
          "",
          "[Removed Lines]",
          "167:  res = res and expectEql(64, math.floor(dev.current * 10))",
          "172:   [\"state\"] = \"6.4\",",
          "",
          "[Added Lines]",
          "167:  res = res and expectEql(0, dev.current)",
          "172:   [\"state\"] = \"0.0\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2fe5bc1249bc1a77065c4f7c2a6410d53bbe6230",
      "candidate_info": {
        "commit_hash": "2fe5bc1249bc1a77065c4f7c2a6410d53bbe6230",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/2fe5bc1249bc1a77065c4f7c2a6410d53bbe6230",
        "files": [
          "libusb/hid.lib",
          "libusb/hidpi.h",
          "libusb/hidsdi.h",
          "libusb/hidusage.h",
          "libusb/libusb-1.0.lib",
          "libusb/usb.h",
          "libusb/usb100.h",
          "libusb/usb200.h",
          "libusb/winusb.h",
          "libusb/winusb.lib",
          "libusb/winusbio.h",
          "msbuild/domoticz.vcxproj"
        ],
        "message": "Remove libusb folder",
        "before_after_code_files": [
          "libusb/hidpi.h||libushidpi.h",
          "libusb/hidsdi.h||libushidsdi.h",
          "libusb/hidusage.h||libushidusage.h",
          "libusb/usb.h||libususb.h",
          "libusb/usb100.h||libususb100.h",
          "libusb/usb200.h||libususb200.h",
          "libusb/winusb.h||libuswinusb.h",
          "libusb/winusbio.h||libuswinusbio.h",
          "msbuild/domoticz.vcxproj||msbuild/domoticz.vcxproj"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libusb/hidpi.h||libushidpi.h": [
          "File: libusb/hidpi.h -> libushidpi.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libusb/hidsdi.h||libushidsdi.h": [
          "File: libusb/hidsdi.h -> libushidsdi.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libusb/hidusage.h||libushidusage.h": [
          "File: libusb/hidusage.h -> libushidusage.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libusb/usb.h||libususb.h": [
          "File: libusb/usb.h -> libususb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libusb/usb100.h||libususb100.h": [
          "File: libusb/usb100.h -> libususb100.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libusb/usb200.h||libususb200.h": [
          "File: libusb/usb200.h -> libususb200.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libusb/winusb.h||libuswinusb.h": [
          "File: libusb/winusb.h -> libuswinusb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libusb/winusbio.h||libuswinusbio.h": [
          "File: libusb/winusbio.h -> libuswinusbio.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "msbuild/domoticz.vcxproj||msbuild/domoticz.vcxproj": [
          "File: msbuild/domoticz.vcxproj -> msbuild/domoticz.vcxproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:       <WarningLevel>Level3</WarningLevel>",
          "60:       <Optimization>Disabled</Optimization>",
          "61:       <PreprocessorDefinitions>WIN32;NOMINMAX;ENABLE_PYTHON;_DEBUG;PTW32_STATIC_LIB;WITH_OPENZWAVE;OPENZWAVE_USEDLL;WWW_ENABLE_SSL;_CONSOLE;BOOST_CONFIG_SUPPRESS_OUTDATED_MESSAGE;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "63:       <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>",
          "64:       <EnablePREfast>false</EnablePREfast>",
          "65:       <MultiProcessorCompilation>true</MultiProcessorCompilation>",
          "",
          "[Removed Lines]",
          "62:       <AdditionalIncludeDirectories>./Windows Libraries/Boost;./libusb;../MQTT;..\\hardware\\openzwave;..\\zip;..\\zlib;./Windows Libraries/openssl;./Windows Libraries/Curl;./Windows Libraries/pthread;../hardware/plugins/Include;../tinyxpath;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "",
          "[Added Lines]",
          "62:       <AdditionalIncludeDirectories>./Windows Libraries/Boost;../MQTT;..\\hardware\\openzwave;..\\zip;..\\zlib;./Windows Libraries/openssl;./Windows Libraries/Curl;./Windows Libraries/pthread;../hardware/plugins/Include;../tinyxpath;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:     <Link>",
          "69:       <SubSystem>Windows</SubSystem>",
          "70:       <GenerateDebugInformation>true</GenerateDebugInformation>",
          "72:       <AdditionalDependencies>./Windows Libraries/pthread/pthread.lib;./Windows Libraries/Curl/libcurl.lib;./Windows Libraries/openssl/ssleay32MT.lib;./Windows Libraries/openssl/libeay32MT.lib;./Windows Libraries/Lua/Debug/LuaMSVS.lib;./Windows Libraries/OpenZwave/Debug/OpenZWaveD.lib;./Windows Libraries/ZLib/zlib.lib;Setupapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;dnsapi.lib;%(AdditionalDependencies)</AdditionalDependencies>",
          "73:       <UACExecutionLevel>AsInvoker</UACExecutionLevel>",
          "74:       <Profile>false</Profile>",
          "",
          "[Removed Lines]",
          "71:       <AdditionalLibraryDirectories>./Windows Libraries/Boost/Stage;../libusb;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>",
          "",
          "[Added Lines]",
          "71:       <AdditionalLibraryDirectories>./Windows Libraries/Boost/Stage;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:       <FunctionLevelLinking>true</FunctionLevelLinking>",
          "89:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "90:       <PreprocessorDefinitions>WIN32;NOMINMAX;ENABLE_PYTHON;NDEBUG;PTW32_STATIC_LIB;WITH_OPENZWAVE;OPENZWAVE_USEDLL;_CONSOLE;WWW_ENABLE_SSL;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "92:       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>",
          "93:       <AdditionalOptions>/d2guardspecload %(AdditionalOptions)</AdditionalOptions>",
          "94:     </ClCompile>",
          "",
          "[Removed Lines]",
          "91:       <AdditionalIncludeDirectories>./Windows Libraries/Boost;./libusb;../MQTT;..\\hardware\\openzwave;..\\zip;..\\zlib;./Windows Libraries/openssl;./Windows Libraries/Curl;./Windows Libraries/pthread;../hardware/plugins/Include;../tinyxpath;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "",
          "[Added Lines]",
          "91:       <AdditionalIncludeDirectories>./Windows Libraries/Boost;../MQTT;..\\hardware\\openzwave;..\\zip;..\\zlib;./Windows Libraries/openssl;./Windows Libraries/Curl;./Windows Libraries/pthread;../hardware/plugins/Include;../tinyxpath;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97:       <GenerateDebugInformation>true</GenerateDebugInformation>",
          "98:       <EnableCOMDATFolding>false</EnableCOMDATFolding>",
          "99:       <OptimizeReferences>false</OptimizeReferences>",
          "101:       <AdditionalDependencies>./Windows Libraries/pthread/pthread.lib;./Windows Libraries/Curl/libcurl.lib;./Windows Libraries/openssl/ssleay32MT.lib;./Windows Libraries/openssl/libeay32MT.lib;./Windows Libraries/Lua/Release/LuaMSVS.lib;./Windows Libraries/OpenZwave/Release/OpenZWave.lib;./Windows Libraries/ZLib/zlib.lib;Setupapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;dnsapi.lib;%(AdditionalDependencies)</AdditionalDependencies>",
          "102:       <UACExecutionLevel>AsInvoker</UACExecutionLevel>",
          "103:       <IgnoreSpecificDefaultLibraries>",
          "",
          "[Removed Lines]",
          "100:       <AdditionalLibraryDirectories>./Windows Libraries/Boost/Stage;../libusb;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>",
          "",
          "[Added Lines]",
          "100:       <AdditionalLibraryDirectories>./Windows Libraries/Boost/Stage;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9395fab4074b26e04016572ecc5f05ac9ea54f12",
      "candidate_info": {
        "commit_hash": "9395fab4074b26e04016572ecc5f05ac9ea54f12",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/9395fab4074b26e04016572ecc5f05ac9ea54f12",
        "files": [
          "hardware/TTNMQTT.cpp"
        ],
        "message": "Fixing non-trivially-copyable type errors (fixed #3063)",
        "before_after_code_files": [
          "hardware/TTNMQTT.cpp||hardware/TTNMQTT.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/TTNMQTT.cpp||hardware/TTNMQTT.cpp": [
          "File: hardware/TTNMQTT.cpp -> hardware/TTNMQTT.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "333:  int ID;",
          "335:  std::vector<std::vector<std::string> > result;",
          "337:  if (result.empty())",
          "338:  {",
          "339:   m_sql.safe_query(\"INSERT INTO UserVariables (Name, ValueType, Value) VALUES ('%q',%d,'%q')\", varName.c_str(), USERVARTYPE_STRING, varValue.c_str());",
          "341:   if (result.empty())",
          "342:    return;",
          "343:   ID = atoi(result[0][0].c_str());",
          "",
          "[Removed Lines]",
          "336:  result = m_sql.safe_query(\"SELECT ID FROM UserVariables WHERE (Name=='%q')\", varName);",
          "340:   result = m_sql.safe_query(\"SELECT ID FROM UserVariables WHERE (Name=='%q')\", varName);",
          "",
          "[Added Lines]",
          "336:  result = m_sql.safe_query(\"SELECT ID FROM UserVariables WHERE (Name=='%q')\", varName.c_str());",
          "340:   result = m_sql.safe_query(\"SELECT ID FROM UserVariables WHERE (Name=='%q')\", varName.c_str());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "345:  else",
          "346:  {",
          "347:   ID = atoi(result[0][0].c_str());",
          "349:  }",
          "351:  m_mainworker.m_eventsystem.SetEventTrigger(ID, m_mainworker.m_eventsystem.REASON_USERVARIABLE, 0);",
          "",
          "[Removed Lines]",
          "348:   m_sql.safe_query(\"UPDATE UserVariables SET Value='%q', LastUpdate='%q' WHERE (ID==%d)\", varValue.c_str(), szLastUpdate, ID);",
          "",
          "[Added Lines]",
          "348:   m_sql.safe_query(\"UPDATE UserVariables SET Value='%q', LastUpdate='%q' WHERE (ID==%d)\", varValue.c_str(), szLastUpdate.c_str(), ID);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e46055b780482b7a3fdd9ff6ad9b597da429f87a",
      "candidate_info": {
        "commit_hash": "e46055b780482b7a3fdd9ff6ad9b597da429f87a",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/e46055b780482b7a3fdd9ff6ad9b597da429f87a",
        "files": [
          "hardware/PhilipsHue/PhilipsHue.cpp"
        ],
        "message": "Corrected PhilipsHue code (removed to much)",
        "before_after_code_files": [
          "hardware/PhilipsHue/PhilipsHue.cpp||hardware/PhilipsHue/PhilipsHue.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/PhilipsHue/PhilipsHue.cpp||hardware/PhilipsHue/PhilipsHue.cpp": [
          "File: hardware/PhilipsHue/PhilipsHue.cpp -> hardware/PhilipsHue/PhilipsHue.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "335:  if (nodeID < 1000)",
          "336:  {",
          "339:   if (ittLight != m_lights.end())",
          "340:   {",
          "341:    pState = &ittLight->second;",
          "",
          "[Removed Lines]",
          "338:   std::map<int, _tHueLightState>::iterator ittLight = m_lights.find(nodeID);",
          "",
          "[Added Lines]",
          "338:   auto && ittLight = m_lights.find(nodeID);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "344:  else if (nodeID < 2000)",
          "345:  {",
          "348:   if (ittGroup != m_groups.end())",
          "349:   {",
          "350:    pState = &ittGroup->second.gstate;",
          "",
          "[Removed Lines]",
          "347:   std::map<int, _tHueGroup>::iterator ittGroup = m_groups.find(nodeID - 1000);",
          "",
          "[Added Lines]",
          "347:   auto && ittGroup = m_groups.find(nodeID - 1000);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "828:    _tHueLightState tlight;",
          "829:    _eHueLightType LType;",
          "830:    LightStateFromJSON(light[\"state\"], tlight, LType);",
          "833:    if (myLight != m_lights.end())",
          "834:    {",
          "842:    }",
          "843:   }",
          "844:  }",
          "",
          "[Removed Lines]",
          "832:    std::map<int, _tHueLightState>::iterator myLight = m_lights.find(lID);",
          "835:     if (!StatesSimilar(myLight->second, tlight))",
          "836:     {",
          "838:      myLight->second = tlight;",
          "839:      std::string modelid = light[\"modelid\"].asString();",
          "840:      InsertUpdateSwitch(lID, LType, tlight, light[\"name\"].asString(), \"\", modelid, true);",
          "841:     }",
          "",
          "[Added Lines]",
          "830:    bool bDoSend = true;",
          "833:    auto myLight = m_lights.find(lID);",
          "836:     if (StatesSimilar(myLight->second, tlight))",
          "837:      bDoSend = false;",
          "838:    }",
          "839:    if (bDoSend)",
          "840:    {",
          "842:     m_lights[lID] = tlight;",
          "843:     std::string modelid = light[\"modelid\"].asString();",
          "844:     InsertUpdateSwitch(lID, LType, tlight, light[\"name\"].asString(), \"\", modelid, true);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "863:    _tHueLightState tstate;",
          "864:    _eHueLightType LType;",
          "865:    LightStateFromJSON(group[\"action\"], tstate, LType); //TODO: Verify there is no crash with \"bad\" key",
          "868:    if (myGroup != m_groups.end())",
          "869:    {",
          "876:    }",
          "877:   }",
          "878:  }",
          "",
          "[Removed Lines]",
          "867:    std::map<int, _tHueGroup>::iterator myGroup = m_groups.find(gID);",
          "870:     if (!StatesSimilar(myGroup->second.gstate, tstate))",
          "871:     {",
          "872:      myGroup->second.gstate = tstate;",
          "873:      string Name = \"Group \" + group[\"name\"].asString();",
          "874:      InsertUpdateSwitch(1000 + gID, LType, tstate, Name, \"\", \"\", m_add_groups);",
          "875:     }",
          "",
          "[Added Lines]",
          "868:    bool bDoSend = true;",
          "871:    auto myGroup = m_groups.find(gID);",
          "874:     if (StatesSimilar(myGroup->second.gstate, tstate))",
          "875:      bDoSend = false;",
          "876:    }",
          "877:    if (bDoSend)",
          "878:    {",
          "879:     m_groups[gID].gstate = tstate;",
          "880:     string Name = \"Group \" + group[\"name\"].asString();",
          "881:     InsertUpdateSwitch(1000 + gID, LType, tstate, Name, \"\", \"\", m_add_groups);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21b5c58fa676274ec720267a7292e9b43443b193",
      "candidate_info": {
        "commit_hash": "21b5c58fa676274ec720267a7292e9b43443b193",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/21b5c58fa676274ec720267a7292e9b43443b193",
        "files": [
          "hardware/Yeelight.cpp"
        ],
        "message": "Yeelight, added safety checks",
        "before_after_code_files": [
          "hardware/Yeelight.cpp||hardware/Yeelight.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/Yeelight.cpp||hardware/Yeelight.cpp": [
          "File: hardware/Yeelight.cpp -> hardware/Yeelight.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "100: {",
          "101:  _log.Log(LOG_STATUS, \"YeeLight Worker started...\");",
          "106:  while (!m_stoprequested)",
          "107:  {",
          "112:   }",
          "114:   {",
          "117:   }",
          "118:  }",
          "119:  _log.Log(LOG_STATUS, \"YeeLight stopped\");",
          "120: }",
          "",
          "[Removed Lines]",
          "103:  boost::asio::io_service io_service;",
          "104:  udp_server server(io_service, m_HwdID);",
          "105:  int sec_counter = YEELIGHT_POLL_INTERVAL - 5;",
          "108:   sleep_seconds(1);",
          "109:   sec_counter++;",
          "110:   if (sec_counter % 12 == 0) {",
          "111:    m_LastHeartbeat = mytime(NULL);",
          "113:   if (sec_counter % 60 == 0) //poll YeeLights every minute",
          "115:    server.start_send();",
          "116:    io_service.run();",
          "",
          "[Added Lines]",
          "105:   try",
          "106:   {",
          "107:    boost::asio::io_service io_service;",
          "108:    udp_server server(io_service, m_HwdID);",
          "109:    int sec_counter = YEELIGHT_POLL_INTERVAL - 5;",
          "110:    while (!m_stoprequested)",
          "111:    {",
          "112:     sleep_seconds(1);",
          "113:     sec_counter++;",
          "114:     if (sec_counter % 12 == 0) {",
          "115:      m_LastHeartbeat = mytime(NULL);",
          "116:     }",
          "117:     if (sec_counter % 60 == 0) //poll YeeLights every minute",
          "118:     {",
          "119:      server.start_send();",
          "120:      io_service.run();",
          "121:     }",
          "122:    }",
          "124:   catch (const std::exception &e)",
          "126:    _log.Log(LOG_ERROR, \"YeeLight: Exception: %s\", e.what());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "228:  sprintf(szTmp, \"%d.%d.%d.%d\", ID1, ID2, ID3, ID4);",
          "235:  try",
          "236:  {",
          "237:   boost::asio::connect(sendSocket, iterator);",
          "288:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[100, \\\"smooth\\\", 500]}\\r\\n\";",
          "297:    sendOnFirst = true;",
          "298:    if (pLed->color.mode == ColorModeWhite)",
          "299:    {",
          "",
          "[Removed Lines]",
          "230:  boost::asio::io_service io_service;",
          "231:  boost::asio::ip::tcp::socket sendSocket(io_service);",
          "232:  boost::asio::ip::tcp::resolver resolver(io_service);",
          "233:  boost::asio::ip::tcp::resolver::query query(boost::asio::ip::tcp::v4(), szTmp, \"55443\");",
          "234:  boost::asio::ip::tcp::resolver::iterator iterator = resolver.resolve(query);",
          "238:  }",
          "239:  catch (const std::exception &e)",
          "240:  {",
          "241:   _log.Log(LOG_ERROR, \"YeeLight: Exception: %s\", e.what());",
          "242:   return false;",
          "243:  }",
          "245:  std::string message = \"\";",
          "246:  std::string message2 = \"\";",
          "247:  char request[1024];",
          "248:  size_t request_length;",
          "249:  std::stringstream ss;",
          "251:  switch (pLed->command)",
          "252:  {",
          "253:  case Color_LedOn:",
          "254:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_power\\\",\\\"params\\\":[\\\"on\\\", \\\"smooth\\\", 500]}\\r\\n\";",
          "255:   break;",
          "256:  case Color_LedOff:",
          "257:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_power\\\",\\\"params\\\":[\\\"off\\\", \\\"smooth\\\", 500]}\\r\\n\";",
          "258:   break;",
          "259:  case Color_LedNight:",
          "260:   if (pLed->subtype == sTypeColor_RGB_W) {",
          "261:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_scene\\\", \\\"params\\\": [\\\"color\\\", 16750848, 1]}\\r\\n\";",
          "262:   }",
          "263:   else {",
          "264:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[1, \\\"smooth\\\", 500]}\\r\\n\";",
          "265:   }",
          "266:   break;",
          "267:  case Color_LedFull:",
          "268:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[100, \\\"smooth\\\", 500]}\\r\\n\";",
          "269:   break;",
          "270:  case Color_BrightnessUp:",
          "271:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"increase\\\", \\\"bright\\\"]}\\r\\n\";",
          "272:   break;",
          "273:  case Color_BrightnessDown:",
          "274:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"decrease\\\", \\\"bright\\\"]}\\r\\n\";",
          "275:   break;",
          "276:  case Color_ColorTempUp:",
          "277:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"increase\\\", \\\"ct\\\"]}\\r\\n\";",
          "278:   break;",
          "279:  case Color_ColorTempDown:",
          "280:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"decrease\\\", \\\"ct\\\"]}\\r\\n\";",
          "281:   break;",
          "282:  case Color_SetColorToWhite:",
          "283:   sendOnFirst = true;",
          "284:   if (pLed->subtype == sTypeColor_RGB_W) {",
          "285:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_rgb\\\",\\\"params\\\":[16777215, \\\"smooth\\\", 500]}\\r\\n\";",
          "286:   }",
          "287:   else {",
          "289:   }",
          "290:   break;",
          "291:  case Color_SetBrightnessLevel:",
          "292:   sendOnFirst = true;",
          "293:   ss << \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[\" << int(pLed->value) << \", \\\"smooth\\\", 500]}\\r\\n\";",
          "294:   message = ss.str();",
          "295:   break;",
          "296:  case Color_SetColor: {",
          "",
          "[Added Lines]",
          "243:   boost::asio::io_service io_service;",
          "244:   boost::asio::ip::tcp::socket sendSocket(io_service);",
          "245:   boost::asio::ip::tcp::resolver resolver(io_service);",
          "246:   boost::asio::ip::tcp::resolver::query query(boost::asio::ip::tcp::v4(), szTmp, \"55443\");",
          "247:   boost::asio::ip::tcp::resolver::iterator iterator = resolver.resolve(query);",
          "250:   std::string message = \"\";",
          "251:   std::string message2 = \"\";",
          "252:   char request[1024];",
          "253:   size_t request_length;",
          "254:   std::stringstream ss;",
          "256:   switch (pLed->command)",
          "257:   {",
          "258:   case Color_LedOn:",
          "259:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_power\\\",\\\"params\\\":[\\\"on\\\", \\\"smooth\\\", 500]}\\r\\n\";",
          "260:    break;",
          "261:   case Color_LedOff:",
          "262:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_power\\\",\\\"params\\\":[\\\"off\\\", \\\"smooth\\\", 500]}\\r\\n\";",
          "263:    break;",
          "264:   case Color_LedNight:",
          "265:    if (pLed->subtype == sTypeColor_RGB_W) {",
          "266:     message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_scene\\\", \\\"params\\\": [\\\"color\\\", 16750848, 1]}\\r\\n\";",
          "267:    }",
          "268:    else {",
          "269:     message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[1, \\\"smooth\\\", 500]}\\r\\n\";",
          "270:    }",
          "271:    break;",
          "272:   case Color_LedFull:",
          "274:    break;",
          "275:   case Color_BrightnessUp:",
          "276:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"increase\\\", \\\"bright\\\"]}\\r\\n\";",
          "277:    break;",
          "278:   case Color_BrightnessDown:",
          "279:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"decrease\\\", \\\"bright\\\"]}\\r\\n\";",
          "280:    break;",
          "281:   case Color_ColorTempUp:",
          "282:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"increase\\\", \\\"ct\\\"]}\\r\\n\";",
          "283:    break;",
          "284:   case Color_ColorTempDown:",
          "285:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"decrease\\\", \\\"ct\\\"]}\\r\\n\";",
          "286:    break;",
          "287:   case Color_SetColorToWhite:",
          "288:    sendOnFirst = true;",
          "289:    if (pLed->subtype == sTypeColor_RGB_W) {",
          "290:     message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_rgb\\\",\\\"params\\\":[16777215, \\\"smooth\\\", 500]}\\r\\n\";",
          "291:    }",
          "292:    else {",
          "293:     message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[100, \\\"smooth\\\", 500]}\\r\\n\";",
          "294:    }",
          "295:    break;",
          "296:   case Color_SetBrightnessLevel:",
          "297:    sendOnFirst = true;",
          "298:    ss << \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[\" << int(pLed->value) << \", \\\"smooth\\\", 500]}\\r\\n\";",
          "299:    message = ss.str();",
          "300:    break;",
          "301:   case Color_SetColor: {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "308:    else if (pLed->color.mode == ColorModeTemp)",
          "309:    {",
          "312:     ss << \"{\\\"id\\\":1,\\\"method\\\":\\\"set_ct_abx\\\",\\\"params\\\":[\" << kelvin << \", \\\"smooth\\\", 2000]}\\r\\n\";",
          "313:     message = ss.str();",
          "314:    }",
          "",
          "[Removed Lines]",
          "311:     int kelvin = (int(float((255-pLed->color.t))*(6500.0f-1700.0f)/255.0f)) + 1700;",
          "",
          "[Added Lines]",
          "316:     int kelvin = (int(float((255 - pLed->color.t))*(6500.0f - 1700.0f) / 255.0f)) + 1700;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "327:    ss << \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[\" << pLed->value << \", \\\"smooth\\\", 500]}\\r\\n\";",
          "328:    message2 = ss.str();",
          "329:   }",
          "354:    sendOnFirst = true;",
          "355:    ss << \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[100, \\\"smooth\\\", 500]}\\r\\n\";",
          "356:    message = ss.str();",
          "357:   }",
          "381:   request_length = strlen(request);",
          "382:   _log.Debug(DEBUG_HARDWARE, \"Yeelight: sending request '%s'\", request);",
          "383:   boost::asio::write(sendSocket, boost::asio::buffer(request, request_length));",
          "384:   sleep_milliseconds(50);",
          "394:  {",
          "400:  }",
          "401:  return true;",
          "402: }",
          "",
          "[Removed Lines]",
          "330:   break;",
          "331:  case Color_SetBrightUp:",
          "332:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"increase\\\", \\\"bright\\\"]}\\r\\n\";",
          "333:   break;",
          "334:  case Color_SetBrightDown:",
          "335:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"decrease\\\", \\\"bright\\\"]}\\r\\n\";",
          "336:   break;",
          "337:  case Color_WarmWhiteIncrease:",
          "339:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_ct_abx\\\",\\\"params\\\":[3500, \\\"smooth\\\", 500]}\\r\\n\";",
          "340:   break;",
          "341:  case Color_CoolWhiteIncrease:",
          "343:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_ct_abx\\\",\\\"params\\\":[6000, \\\"smooth\\\", 500]}\\r\\n\";",
          "344:   break;",
          "345:  case Color_NightMode:",
          "346:   if (pLed->subtype == sTypeColor_RGB_W) {",
          "347:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_scene\\\", \\\"params\\\": [\\\"color\\\", 16750848, 1]}\\r\\n\";",
          "348:   }",
          "349:   else {",
          "350:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[1, \\\"smooth\\\", 500]}\\r\\n\";",
          "351:   }",
          "352:   break;",
          "353:  case Color_FullBrightness: {",
          "358:   break;",
          "359:  case Color_DiscoMode:",
          "360:   sendOnFirst = true;",
          "362:   _log.Log(LOG_STATUS, \"Yeelight: Disco Mode - simulate strobe effect, if you have a suggestion for what it should do, please post on the Domoticz forum\");",
          "363:   message = \"{\\\"id\\\":1,\\\"method\\\":\\\"start_cf\\\",\\\"params\\\":[ 50, 0, \\\"\";",
          "364:   message += \"50, 2, 5000, 100, \";",
          "365:   message += \"50, 2, 5000, 1\\\"]}\\r\\n\";",
          "366:   break;",
          "367:  case Color_DiscoSpeedFasterLong:",
          "368:   _log.Log(LOG_STATUS, \"Yeelight: Exclude Lamp - This command is unhandled, if you have a suggestion for what it should do, please post on the Domoticz forum\");",
          "369:   break;",
          "370:  default:",
          "371:   _log.Log(LOG_STATUS, \"YeeLight: Unhandled WriteToHardware command: %d - if you have a suggestion for what it should do, please post on the Domoticz forum\", command);",
          "372:   break;",
          "373:  }",
          "375:  if (message.empty()) {",
          "376:   return false;",
          "377:  }",
          "379:  if (sendOnFirst) {",
          "380:   strcpy(request, \"{\\\"id\\\":1,\\\"method\\\":\\\"set_power\\\",\\\"params\\\":[\\\"on\\\", \\\"smooth\\\", 500]}\\r\\n\");",
          "385:  }",
          "387:  strcpy(request, message.c_str());",
          "388:  request_length = strlen(request);",
          "389:  _log.Debug(DEBUG_HARDWARE, \"Yeelight: sending request '%s'\", request);",
          "390:  boost::asio::write(sendSocket, boost::asio::buffer(request, request_length));",
          "391:  sleep_milliseconds(50);",
          "393:  if (!message2.empty())",
          "395:   strcpy(request, message2.c_str());",
          "396:   request_length = strlen(request);",
          "397:   _log.Debug(DEBUG_HARDWARE, \"Yeelight: sending request '%s'\", request);",
          "398:   boost::asio::write(sendSocket, boost::asio::buffer(request, request_length));",
          "399:   sleep_milliseconds(50);",
          "",
          "[Added Lines]",
          "335:         break;",
          "336:   case Color_SetBrightUp:",
          "337:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"increase\\\", \\\"bright\\\"]}\\r\\n\";",
          "338:    break;",
          "339:   case Color_SetBrightDown:",
          "340:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_adjust\\\",\\\"params\\\":[\\\"decrease\\\", \\\"bright\\\"]}\\r\\n\";",
          "341:    break;",
          "342:   case Color_WarmWhiteIncrease:",
          "344:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_ct_abx\\\",\\\"params\\\":[3500, \\\"smooth\\\", 500]}\\r\\n\";",
          "345:    break;",
          "346:   case Color_CoolWhiteIncrease:",
          "348:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_ct_abx\\\",\\\"params\\\":[6000, \\\"smooth\\\", 500]}\\r\\n\";",
          "349:    break;",
          "350:   case Color_NightMode:",
          "351:    if (pLed->subtype == sTypeColor_RGB_W) {",
          "352:     message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_scene\\\", \\\"params\\\": [\\\"color\\\", 16750848, 1]}\\r\\n\";",
          "353:    }",
          "354:    else {",
          "355:     message = \"{\\\"id\\\":1,\\\"method\\\":\\\"set_bright\\\",\\\"params\\\":[1, \\\"smooth\\\", 500]}\\r\\n\";",
          "356:    }",
          "357:    break;",
          "358:   case Color_FullBrightness: {",
          "363:            break;",
          "364:   case Color_DiscoMode:",
          "365:    sendOnFirst = true;",
          "367:    _log.Log(LOG_STATUS, \"Yeelight: Disco Mode - simulate strobe effect, if you have a suggestion for what it should do, please post on the Domoticz forum\");",
          "368:    message = \"{\\\"id\\\":1,\\\"method\\\":\\\"start_cf\\\",\\\"params\\\":[ 50, 0, \\\"\";",
          "369:    message += \"50, 2, 5000, 100, \";",
          "370:    message += \"50, 2, 5000, 1\\\"]}\\r\\n\";",
          "371:    break;",
          "372:   case Color_DiscoSpeedFasterLong:",
          "373:    _log.Log(LOG_STATUS, \"Yeelight: Exclude Lamp - This command is unhandled, if you have a suggestion for what it should do, please post on the Domoticz forum\");",
          "374:    break;",
          "375:   default:",
          "376:    _log.Log(LOG_STATUS, \"YeeLight: Unhandled WriteToHardware command: %d - if you have a suggestion for what it should do, please post on the Domoticz forum\", command);",
          "377:    break;",
          "378:   }",
          "380:   if (message.empty()) {",
          "381:    return false;",
          "382:   }",
          "384:   if (sendOnFirst) {",
          "385:    strcpy(request, \"{\\\"id\\\":1,\\\"method\\\":\\\"set_power\\\",\\\"params\\\":[\\\"on\\\", \\\"smooth\\\", 500]}\\r\\n\");",
          "386:    request_length = strlen(request);",
          "387:    _log.Debug(DEBUG_HARDWARE, \"Yeelight: sending request '%s'\", request);",
          "388:    boost::asio::write(sendSocket, boost::asio::buffer(request, request_length));",
          "389:    sleep_milliseconds(50);",
          "390:   }",
          "392:   strcpy(request, message.c_str());",
          "398:   if (!message2.empty())",
          "399:   {",
          "400:    strcpy(request, message2.c_str());",
          "401:    request_length = strlen(request);",
          "402:    _log.Debug(DEBUG_HARDWARE, \"Yeelight: sending request '%s'\", request);",
          "403:    boost::asio::write(sendSocket, boost::asio::buffer(request, request_length));",
          "404:    sleep_milliseconds(50);",
          "405:   }",
          "407:  }",
          "408:  catch (const std::exception &e)",
          "410:   _log.Log(LOG_ERROR, \"YeeLight: Exception: %s\", e.what());",
          "411:   return false;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "417: void Yeelight::udp_server::start_send()",
          "418: {",
          "427: }",
          "429: void Yeelight::udp_server::start_receive()",
          "",
          "[Removed Lines]",
          "419:  std::string testMessage = \"M-SEARCH * HTTP/1.1\\r\\nHOST: 239.255.255.250:1982\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\nST: wifi_bulb\";",
          "421:  std::shared_ptr<std::string> message(",
          "422:   new std::string(testMessage));",
          "423:  remote_endpoint_ = boost::asio::ip::udp::endpoint(boost::asio::ip::address::from_string(\"239.255.255.250\"), 1982);",
          "424:  socket_.send_to(boost::asio::buffer(*message), remote_endpoint_);",
          "425:  sleep_milliseconds(150);",
          "426:  start_receive();",
          "",
          "[Added Lines]",
          "432:  try",
          "433:  {",
          "434:   std::string testMessage = \"M-SEARCH * HTTP/1.1\\r\\nHOST: 239.255.255.250:1982\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\nST: wifi_bulb\";",
          "436:   std::shared_ptr<std::string> message(",
          "437:    new std::string(testMessage));",
          "438:   remote_endpoint_ = boost::asio::ip::udp::endpoint(boost::asio::ip::address::from_string(\"239.255.255.250\"), 1982);",
          "439:   socket_.send_to(boost::asio::buffer(*message), remote_endpoint_);",
          "440:   sleep_milliseconds(150);",
          "441:   start_receive();",
          "442:  }",
          "443:  catch (const std::exception &e)",
          "444:  {",
          "445:   _log.Log(LOG_ERROR, \"YeeLight: Exception: %s\", e.what());",
          "446:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "431: #ifdef DEBUG_YeeLightR",
          "432:  std::string szData = ReadFile(\"E:\\\\YeeLight_receive.txt\");",
          "433:  HandleIncoming(szData);",
          "434: #endif",
          "441:  }",
          "442: }",
          "",
          "[Removed Lines]",
          "436:  std::vector<std::string> receivedip;",
          "438:  while (socket_.available() > 0) {",
          "439:   socket_.receive_from(boost::asio::buffer(recv_buffer_), remote_endpoint_);",
          "440:   HandleIncoming(recv_buffer_.data(), receivedip);",
          "",
          "[Added Lines]",
          "454:  return;",
          "456:  try",
          "457:  {",
          "459:   std::vector<std::string> receivedip;",
          "461:   while (socket_.available() > 0) {",
          "462:    socket_.receive_from(boost::asio::buffer(recv_buffer_), remote_endpoint_);",
          "463:    HandleIncoming(recv_buffer_.data(), receivedip);",
          "464:   }",
          "465:  }",
          "466:  catch (const std::exception &e)",
          "467:  {",
          "468:   _log.Log(LOG_ERROR, \"YeeLight: Exception: %s\", e.what());",
          "",
          "---------------"
        ]
      }
    }
  ]
}