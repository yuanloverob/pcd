{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e0796b6f1f854126adf5b2bbeca4cb580d0ca84a",
      "candidate_info": {
        "commit_hash": "e0796b6f1f854126adf5b2bbeca4cb580d0ca84a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e0796b6f1f854126adf5b2bbeca4cb580d0ca84a",
        "files": [
          "deps/uv/config-unix.mk",
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/core.c",
          "deps/uv/src/unix/dl.c",
          "deps/uv/src/win/dl.c",
          "deps/uv/src/win/util.c",
          "deps/uv/test/fixtures/load_error.node",
          "deps/uv/test/test-dlerror.c",
          "deps/uv/test/test-list.h",
          "deps/uv/uv.gyp"
        ],
        "message": "uv: upgrade to a93dc7e",
        "before_after_code_files": [
          "deps/uv/config-unix.mk||deps/uv/config-unix.mk",
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c",
          "deps/uv/src/unix/dl.c||deps/uv/src/unix/dl.c",
          "deps/uv/src/win/dl.c||deps/uv/src/win/dl.c",
          "deps/uv/src/win/util.c||deps/uv/src/win/util.c",
          "deps/uv/test/fixtures/load_error.node||deps/uv/test/fixtures/load_error.node",
          "deps/uv/test/test-dlerror.c||deps/uv/test/test-dlerror.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/uv.gyp||deps/uv/uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/config-unix.mk||deps/uv/config-unix.mk": [
          "File: deps/uv/config-unix.mk -> deps/uv/config-unix.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: EIO_CONFIG=config_linux.h",
          "63: CSTDFLAG += -D_GNU_SOURCE",
          "64: CPPFLAGS += -Isrc/ares/config_linux",
          "66: OBJS += src/unix/linux/core.o src/unix/linux/inotify.o",
          "67: endif",
          "",
          "[Removed Lines]",
          "65: LINKFLAGS+=-lrt",
          "",
          "[Added Lines]",
          "65: LINKFLAGS+=-ldl -lrt",
          "",
          "---------------"
        ],
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1400: UV_EXTERN uv_err_t uv_dlsym(uv_lib_t library, const char* name, void** ptr);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1405: UV_EXTERN const char *uv_dlerror(uv_lib_t library);",
          "1406: UV_EXTERN void uv_dlerror_free(uv_lib_t library, const char *msg);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c": [
          "File: deps/uv/src/unix/core.c -> deps/uv/src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "542:   assert(uv__timer_active(timer));",
          "546:   if (!uv__timer_repeating(timer)) {",
          "547:     timer->flags &= ~UV_TIMER_ACTIVE;",
          "548:     ev_ref(EV_A);",
          "",
          "[Removed Lines]",
          "544:   assert(uv__timer_active(timer));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/dl.c||deps/uv/src/unix/dl.c": [
          "File: deps/uv/src/unix/dl.c -> deps/uv/src/unix/dl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include <dlfcn.h>",
          "26: #include <errno.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include <string.h>",
          "28: #include <locale.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:   return uv_ok_;",
          "69: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74: const char *uv_dlerror(uv_lib_t library) {",
          "75:   const char* buf = NULL;",
          "77:   char* loc = setlocale(LC_MESSAGES, NULL);",
          "78:   if(strcmp(loc, \"C\") == 0) {",
          "79:     return strdup(dlerror());",
          "80:   } else {",
          "81:     setlocale(LC_MESSAGES, \"C\");",
          "82:     buf = dlerror();",
          "83:     setlocale(LC_MESSAGES, loc);",
          "84:     return strdup(buf);",
          "85:   }",
          "86: }",
          "89: void uv_dlerror_free(uv_lib_t library, const char *msg) {",
          "90:   free((void*)msg);",
          "91: }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/dl.c||deps/uv/src/win/dl.c": [
          "File: deps/uv/src/win/dl.c -> deps/uv/src/win/dl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"uv.h\"",
          "23: #include \"internal.h\"",
          "26: uv_err_t uv_dlopen(const char* filename, uv_lib_t* library) {",
          "27:   wchar_t filename_w[32768];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: __declspec( thread ) DWORD saved_errno = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:   if (!uv_utf8_to_utf16(filename,",
          "31:                         filename_w,",
          "32:                         sizeof(filename_w) / sizeof(wchar_t))) {",
          "34:   }",
          "36:   handle = LoadLibraryW(filename_w);",
          "37:   if (handle == NULL) {",
          "39:   }",
          "",
          "[Removed Lines]",
          "33:     return uv__new_sys_error(GetLastError());",
          "38:     return uv__new_sys_error(GetLastError());",
          "",
          "[Added Lines]",
          "34:     saved_errno = GetLastError();",
          "35:     return uv__new_sys_error(saved_errno);",
          "40:     saved_errno = GetLastError();",
          "41:     return uv__new_sys_error(saved_errno);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46: uv_err_t uv_dlclose(uv_lib_t library) {",
          "47:   if (!FreeLibrary(library)) {",
          "49:   }",
          "51:   return uv_ok_;",
          "",
          "[Removed Lines]",
          "48:     return uv__new_sys_error(GetLastError());",
          "",
          "[Added Lines]",
          "51:     saved_errno = GetLastError();",
          "52:     return uv__new_sys_error(saved_errno);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "55: uv_err_t uv_dlsym(uv_lib_t library, const char* name, void** ptr) {",
          "56:   FARPROC proc = GetProcAddress(library, name);",
          "57:   if (proc == NULL) {",
          "59:   }",
          "62:   return uv_ok_;",
          "63: }",
          "",
          "[Removed Lines]",
          "58:     return uv__new_sys_error(GetLastError());",
          "",
          "[Added Lines]",
          "62:     saved_errno = GetLastError();",
          "63:     return uv__new_sys_error(saved_errno);",
          "71: const char *uv_dlerror(uv_lib_t library) {",
          "72:   char* buf = NULL;",
          "73:   FormatMessageA(FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM |",
          "74:                  FORMAT_MESSAGE_IGNORE_INSERTS, NULL, saved_errno,",
          "75:                  MAKELANGID(LANG_ENGLISH, SUBLANG_ENGLISH_US), (LPSTR)&buf, 0, NULL);",
          "76:   return buf;",
          "77: }",
          "80: void uv_dlerror_free(uv_lib_t library, const char *msg) {",
          "81:   LocalFree((LPVOID)msg);",
          "82: }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/util.c||deps/uv/src/win/util.c": [
          "File: deps/uv/src/win/util.c -> deps/uv/src/win/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "610:     time.tm_hour = system_time.wHour;",
          "611:     time.tm_min = system_time.wMinute;",
          "612:     time.tm_sec = system_time.wSecond;",
          "616:   } else {",
          "",
          "[Removed Lines]",
          "613:     time.tm_isdst = -1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/fixtures/load_error.node||deps/uv/test/fixtures/load_error.node": [
          "File: deps/uv/test/fixtures/load_error.node -> deps/uv/test/fixtures/load_error.node",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: foobar",
          "",
          "---------------"
        ],
        "deps/uv/test/test-dlerror.c||deps/uv/test/test-dlerror.c": [
          "File: deps/uv/test/test-dlerror.c -> deps/uv/test/test-dlerror.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"uv.h\"",
          "23: #include \"task.h\"",
          "24: #include <string.h>",
          "26: const char* path = \"test/fixtures/load_error.node\";",
          "27: const char* msg;",
          "29: #ifdef __linux__",
          "30:   const char* dlerror_desc = \"file too short\";",
          "31: #elif defined (__sun__)",
          "32:   const char* dlerror_desc = \"unknown file type\";",
          "33: #elif defined (_WIN32)",
          "34:   const char* dlerror_desc = \"%1 is not a valid Win32 application\";",
          "35: #else",
          "36:   const char* dlerror_desc = \"\";",
          "37: #endif",
          "39: uv_lib_t lib;",
          "40: uv_err_t r;",
          "42: TEST_IMPL(dlerror) {",
          "43:   r = uv_dlopen(path, &lib);",
          "44:   msg = uv_dlerror(lib);",
          "45:   ASSERT(msg != NULL);",
          "46:   ASSERT(strstr(msg, dlerror_desc) != NULL);",
          "47:   uv_dlerror_free(lib, msg);",
          "48:   return 0;",
          "49: }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "142: TEST_DECLARE   (strlcpy)",
          "143: TEST_DECLARE   (strlcat)",
          "144: TEST_DECLARE   (counters_init)",
          "145: #ifdef _WIN32",
          "146: TEST_DECLARE   (spawn_detect_pipe_name_collisions_on_windows)",
          "147: TEST_DECLARE   (argument_escaping)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145: TEST_DECLARE   (dlerror)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "326:   TEST_ENTRY  (strlcpy)",
          "327:   TEST_ENTRY  (strlcat)",
          "328:   TEST_ENTRY  (counters_init)",
          "329: #if 0",
          "331:   TEST_ENTRY  (fail_always)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "330:   TEST_ENTRY  (dlerror)",
          "",
          "---------------"
        ],
        "deps/uv/uv.gyp||deps/uv/uv.gyp": [
          "File: deps/uv/uv.gyp -> deps/uv/uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:       ],",
          "33:       'direct_dependent_settings': {",
          "34:         'include_dirs': [ 'include' ],",
          "35:       },",
          "37:       'defines': [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:         'conditions': [",
          "36:           ['OS==\"linux\"', {",
          "37:             'libraries': [ '-ldl' ],",
          "38:           }],",
          "39:         ],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "338:         'test/test-udp-send-and-recv.c',",
          "339:         'test/test-udp-multicast-join.c',",
          "340:         'test/test-counters-init.c',",
          "341:         'test/test-udp-multicast-ttl.c',",
          "342:       ],",
          "343:       'conditions': [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346:         'test/test-dlerror.c',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e28f77cbad1dea617aeda18513b61e6ecce8e294",
      "candidate_info": {
        "commit_hash": "e28f77cbad1dea617aeda18513b61e6ecce8e294",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e28f77cbad1dea617aeda18513b61e6ecce8e294",
        "files": [
          "lib/readline.js",
          "test/simple/test-readline-interface.js"
        ],
        "message": "readline: buffer data to only emit 'line' on '\\n'\n\nIn \"terminal: false\" mode.\n\n(And fire it multiple times if multiple lines arrive at once.)\n\nThis is necessary because the Windows telnet client sends every single\nkeystroke as it's typed.\n\nSee: http://stackoverflow.com/questions/9962197/node-js-readline-not-waiting-for-a-full-line-on-socket-connections\n\nCloses #3059.",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js",
          "test/simple/test-readline-interface.js||test/simple/test-readline-interface.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "264:   this.terminal ? this._ttyWrite(d, key) : this._normalWrite(d, key);",
          "265: };",
          "268: Interface.prototype._normalWrite = function(b) {",
          "273: };",
          "275: Interface.prototype._insertString = function(c) {",
          "",
          "[Removed Lines]",
          "271:   if (b !== undefined)",
          "272:     this._onLine(b.toString());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-readline-interface.js||test/simple/test-readline-interface.js": [
          "File: test/simple/test-readline-interface.js -> test/simple/test-readline-interface.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: var assert = require('assert');",
          "25: var readline = require('readline');",
          "26: var EventEmitter = require('events').EventEmitter;",
          "27: var inherits = require('util').inherits;",
          "29: function FakeInput() {",
          "30:   EventEmitter.call(this);",
          "31: }",
          "32: inherits(FakeInput, EventEmitter);",
          "33: FakeInput.prototype.resume = function() {};",
          "35: var fi;",
          "36: var rli;",
          "37: var called;",
          "40: fi = new FakeInput();",
          "41: rli = new readline.Interface(fi, {});",
          "42: called = false;",
          "43: rli.on('line', function(line) {",
          "44:   called = true;",
          "45:   assert.equal(line, 'asdf\\n');",
          "46: });",
          "47: fi.emit('data', 'asdf\\n');",
          "48: assert.ok(called);",
          "51: fi = new FakeInput();",
          "52: rli = new readline.Interface(fi, {});",
          "53: called = false;",
          "54: rli.on('line', function(line) {",
          "55:   called = true;",
          "56:   assert.equal(line, '\\n');",
          "57: });",
          "58: fi.emit('data', '\\n');",
          "59: assert.ok(called);",
          "62: fi = new FakeInput();",
          "63: rli = new readline.Interface(fi, {});",
          "64: called = false;",
          "65: rli.on('line', function(line) {",
          "66:   called = true;",
          "67: });",
          "68: fi.emit('data', 'a');",
          "69: assert.ok(!called);",
          "72: fi = new FakeInput();",
          "73: rli = new readline.Interface(fi, {});",
          "74: called = false;",
          "75: rli.on('line', function(line) {",
          "76:   called = true;",
          "77:   assert.equal(line, 'a\\n');",
          "78: });",
          "79: fi.emit('data', 'a');",
          "80: assert.ok(!called);",
          "81: fi.emit('data', '\\n');",
          "82: assert.ok(called);",
          "85: fi = new FakeInput();",
          "86: rli = new readline.Interface(fi, {});",
          "87: var expectedLines = ['foo\\n', 'bar\\n', 'baz\\n'];",
          "88: var callCount = 0;",
          "89: rli.on('line', function(line) {",
          "90:   assert.equal(line, expectedLines[callCount]);",
          "91:   callCount++;",
          "92: });",
          "93: fi.emit('data', expectedLines.join(''));",
          "94: assert.equal(callCount, expectedLines.length);",
          "97: fi = new FakeInput();",
          "98: rli = new readline.Interface(fi, {});",
          "99: var expectedLines = ['foo\\n', 'bar\\n', 'baz\\n', 'bat'];",
          "100: var callCount = 0;",
          "101: rli.on('line', function(line) {",
          "102:   assert.equal(line, expectedLines[callCount]);",
          "103:   callCount++;",
          "104: });",
          "105: fi.emit('data', expectedLines.join(''));",
          "106: assert.equal(callCount, expectedLines.length - 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06a058d731f387883bba6ba70d682f13fa6b0ce5",
      "candidate_info": {
        "commit_hash": "06a058d731f387883bba6ba70d682f13fa6b0ce5",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/06a058d731f387883bba6ba70d682f13fa6b0ce5",
        "files": [
          "lib/readline.js",
          "lib/repl.js",
          "lib/tty.js"
        ],
        "message": "readline: row-agnostic multiline readline implementation\n\nFixes #2959.",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js",
          "lib/repl.js||lirepl.js",
          "lib/tty.js||litty.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:       process.on('SIGWINCH', function() {",
          "103:         var winSize = output.getWindowSize();",
          "104:         exports.columns = winSize[0];",
          "105:       });",
          "106:     }",
          "107:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "166:   if (this.line.length === 0) return '';",
          "168:   this.history.unshift(this.line);",
          "170:   this.historyIndex = -1;",
          "175:   if (this.history.length > kHistorySize) this.history.pop();",
          "",
          "[Removed Lines]",
          "169:   this.line = '';",
          "172:   this.cursor = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "181: Interface.prototype._refreshLine = function() {",
          "183:   this.output.cursorTo(0);",
          "194: };",
          "",
          "[Removed Lines]",
          "186:   this.output.write(this._prompt);",
          "187:   this.output.write(this.line);",
          "190:   this.output.clearLine(1);",
          "193:   this.output.cursorTo(this._promptLength + this.cursor);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "242:     this.line += c;",
          "243:     this.cursor += c.length;",
          "244:     this.output.write(c);",
          "245:   }",
          "246: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "342:   if (this.cursor > 0) {",
          "343:     var leading = this.line.slice(0, this.cursor);",
          "344:     var match = leading.match(/([^\\w\\s]+|\\w+|)\\s*$/);",
          "347:   }",
          "348: };",
          "",
          "[Removed Lines]",
          "345:     this.cursor -= match[0].length;",
          "346:     this._refreshLine();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "352:   if (this.cursor < this.line.length) {",
          "353:     var trailing = this.line.slice(this.cursor);",
          "354:     var match = trailing.match(/^(\\s+|\\W+|\\w+)\\s*/);",
          "357:   }",
          "358: };",
          "",
          "[Removed Lines]",
          "355:     this.cursor += match[0].length;",
          "356:     this._refreshLine();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "412: };",
          "415: Interface.prototype._line = function() {",
          "416:   var line = this._addHistory();",
          "418:   this._onLine(line);",
          "419: };",
          "",
          "[Removed Lines]",
          "417:   this.output.write('\\r\\n');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "446: };",
          "450: Interface.prototype._ttyWrite = function(s, key) {",
          "451:   var next_word, next_non_word, previous_word, previous_non_word;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "502:         break;",
          "504:       case 'a': // go to the start of the line",
          "507:         break;",
          "509:       case 'e': // go to the end of the line",
          "512:         break;",
          "514:       case 'b': // back one character",
          "519:         break;",
          "521:       case 'f': // forward one character",
          "526:         break;",
          "528:       case 'n': // next history item",
          "",
          "[Removed Lines]",
          "505:         this.cursor = 0;",
          "506:         this._refreshLine();",
          "510:         this.cursor = this.line.length;",
          "511:         this._refreshLine();",
          "515:         if (this.cursor > 0) {",
          "516:           this.cursor--;",
          "517:           this._refreshLine();",
          "518:         }",
          "522:         if (this.cursor != this.line.length) {",
          "523:           this.cursor++;",
          "524:           this._refreshLine();",
          "525:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "618:         break;",
          "620:       case 'left':",
          "625:         break;",
          "627:       case 'right':",
          "632:         break;",
          "634:       case 'home':",
          "637:         break;",
          "639:       case 'end':",
          "642:         break;",
          "644:       case 'up':",
          "",
          "[Removed Lines]",
          "621:         if (this.cursor > 0) {",
          "622:           this.cursor--;",
          "623:           this.output.moveCursor(-1, 0);",
          "624:         }",
          "628:         if (this.cursor != this.line.length) {",
          "629:           this.cursor++;",
          "630:           this.output.moveCursor(1, 0);",
          "631:         }",
          "635:         this.cursor = 0;",
          "636:         this._refreshLine();",
          "640:         this.cursor = this.line.length;",
          "641:         this._refreshLine();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:   var sawSIGINT = false;",
          "140:   rli.on('SIGINT', function() {",
          "145:       if (sawSIGINT) {",
          "146:         rli.pause();",
          "147:         self.emit('exit');",
          "",
          "[Removed Lines]",
          "141:     rli.output.write('\\n');",
          "143:     if (!(self.bufferedCommand && self.bufferedCommand.length > 0) &&",
          "144:         rli.line.length === 0) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "154:       sawSIGINT = false;",
          "155:     }",
          "159:     self.bufferedCommand = '';",
          "160:     self.displayPrompt();",
          "161:   });",
          "",
          "[Removed Lines]",
          "157:     rli.line = '';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/tty.js||litty.js": [
          "File: lib/tty.js -> litty.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "393: };",
          "396: WriteStream.prototype.getWindowSize = function() {",
          "397:   return this._handle.getWindowSize();",
          "398: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9b237f478c372fd55e4590d7399dcd8f25f3603",
      "candidate_info": {
        "commit_hash": "f9b237f478c372fd55e4590d7399dcd8f25f3603",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f9b237f478c372fd55e4590d7399dcd8f25f3603",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "src/node_version.h"
        ],
        "message": "2012.07.20, Version 0.9.0 (Unstable)\n\n* punycode: update to v1.1.1 (Mathias Bynens)\n\n* c-ares: upgrade to 1.9.0 (Sa\u00fal Ibarra Corretg\u00e9)\n\n* dns: ignore rogue DNS servers reported by windows (Sa\u00fal Ibarra Corretg\u00e9)\n\n* unix: speed up uv_async_send() (Ben Noordhuis)\n\n* darwin: get cpu model correctly on mac (Xidorn Quan)\n\n* nextTick: Handle tick callbacks before any other I/O (isaacs)\n\n* Enable color customization of `util.inspect` (Pavel Lang)\n\n* tls: Speed and memory improvements (Fedor Indutny)\n\n* readline: Use one history item for reentered line (Vladimir Beloborodov)\n\n* Fix #3521 Make process.env more like a regular Object (isaacs)",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #define NODE_MAJOR_VERSION 0",
          "26: #define NODE_MINOR_VERSION 9",
          "27: #define NODE_PATCH_VERSION 0",
          "30: #ifndef NODE_STRINGIFY",
          "31: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "28: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "28: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2b15cf57dda55aa2048f28f4125bfb92662c960e",
      "candidate_info": {
        "commit_hash": "2b15cf57dda55aa2048f28f4125bfb92662c960e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2b15cf57dda55aa2048f28f4125bfb92662c960e",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.7.12",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 7",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "31: #define NODE_PATCH_VERSION 11",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "31: #define NODE_PATCH_VERSION 12",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    }
  ]
}