{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ae6ff57f2667614c0bd6310f9a2856b3f5defd2",
      "candidate_info": {
        "commit_hash": "6ae6ff57f2667614c0bd6310f9a2856b3f5defd2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6ae6ff57f2667614c0bd6310f9a2856b3f5defd2",
        "files": [
          "test/ct_test.c"
        ],
        "message": "Use valid signature in test_decode_tls_sct()\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1548)\n(cherry picked from commit e2635c49f35c615820b1c6d92d180e31e28adeb2)",
        "before_after_code_files": [
          "test/ct_test.c||test/ct_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ct_test.c||test/ct_test.c": [
          "File: test/ct_test.c -> test/ct_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "513:     const char log_id[] = \"3xwuwRUAlFJHqWFoMl3cXHlZ6PfG04j8AC4LvT9012Q=\";",
          "514:     const uint64_t timestamp = 1;",
          "515:     const char extensions[] = \"\";",
          "519:     SETUP_CT_TEST_FIXTURE();",
          "",
          "[Removed Lines]",
          "516:     const char signature[] = \"RQIgSC9nUa8126ZUNr4f1mQPPb+aQUKUlZJFMCiPo+XiPgY\"",
          "517:         \"CIQDk7cDbOsVyseL16KtqaAZTmH3PQQJ9/v+hBVGdie2/CA==\";",
          "",
          "[Added Lines]",
          "516:     const char signature[] = \"BAMARzBAMiBIL2dRrzXbplQ2vh/WZA89v5pBQpSVkkUwKI+j5\"",
          "517:             \"eI+BgIhAOTtwNs6xXKx4vXoq2poBlOYfc9BAn3+/6EFUZ2J7b8I\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9a1525cdba39bfe1717773dda156fe6696102f8",
      "candidate_info": {
        "commit_hash": "c9a1525cdba39bfe1717773dda156fe6696102f8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c9a1525cdba39bfe1717773dda156fe6696102f8",
        "files": [
          "test/recipes/15-test_dsa.t",
          "test/recipes/15-test_rsa.t",
          "test/recipes/tconversion.pl"
        ],
        "message": "Add conversion test for MSBLOB format.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit d922634d0c63cee01c89869d79306cd2df628855)",
        "before_after_code_files": [
          "test/recipes/15-test_dsa.t||test/recipes/15-test_dsa.t",
          "test/recipes/15-test_rsa.t||test/recipes/15-test_rsa.t",
          "test/recipes/tconversion.pl||test/recipes/tconversion.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/15-test_dsa.t||test/recipes/15-test_dsa.t": [
          "File: test/recipes/15-test_dsa.t -> test/recipes/15-test_dsa.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:   tconversion(\"dsa\", srctop_file(\"test\",\"testdsa.pem\"), \"pkey\");",
          "35:      };",
          "36:      subtest 'dsa conversions -- public key' => sub {",
          "39:      };",
          "40: }",
          "",
          "[Removed Lines]",
          "37:   tconversion(\"dsa\", srctop_file(\"test\",\"testdsapub.pem\"), \"dsa\",",
          "38:        \"-pubin\", \"-pubout\");",
          "",
          "[Added Lines]",
          "37:   tconversion(\"msb\", srctop_file(\"test\",\"testdsapub.pem\"), \"dsa\",",
          "38:            \"-pubin\", \"-pubout\");",
          "",
          "---------------"
        ],
        "test/recipes/15-test_rsa.t||test/recipes/15-test_rsa.t": [
          "File: test/recipes/15-test_rsa.t -> test/recipes/15-test_rsa.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:   tconversion(\"rsa\", srctop_file(\"test\",\"testrsa.pem\"), \"pkey\");",
          "36:      };",
          "37:      subtest 'rsa conversions -- public key' => sub {",
          "39:        \"-pubin\", \"-pubout\");",
          "40:      };",
          "41: }",
          "",
          "[Removed Lines]",
          "38:   tconversion(\"rsa\", srctop_file(\"test\",\"testrsapub.pem\"), \"rsa\",",
          "",
          "[Added Lines]",
          "38:   tconversion(\"msb\", srctop_file(\"test\",\"testrsapub.pem\"), \"rsa\",",
          "",
          "---------------"
        ],
        "test/recipes/tconversion.pl||test/recipes/tconversion.pl": [
          "File: test/recipes/tconversion.pl -> test/recipes/tconversion.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:     # Default conversion forms.  Other series may be added with",
          "20:     # specific test types as key.",
          "21:     \"*\"  => [ \"d\", \"p\" ],",
          "22:     );",
          "23: sub tconversion {",
          "24:     my $testtype = shift;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:     \"msb\" => [ \"d\", \"p\", \"msblob\" ],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea42bd40595faefb19e2ec8d7a9efad4f75cff80",
      "candidate_info": {
        "commit_hash": "ea42bd40595faefb19e2ec8d7a9efad4f75cff80",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ea42bd40595faefb19e2ec8d7a9efad4f75cff80",
        "files": [
          "crypto/bio/b_addr.c",
          "crypto/engine/eng_lib.c",
          "crypto/err/err.c",
          "crypto/ex_data.c",
          "crypto/rand/md_rand.c"
        ],
        "message": "Fix mem leaks during auto-deinit\n\nCertain functions are automatically called during auto-deinit in order\nto deallocate resources. However, if we have never entered a function which\nmarks lib crypto as inited then they never get called. This can happen if\nthe user only ever makes use of a small sub-set of functions that don't hit\nthe auto-init code.\n\nThis commit ensures all such resources deallocated by these functions also\ninit libcrypto when they are initially allocated.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Ben Laurie <ben@openssl.org>\n(cherry picked from commit 135648bcd0e9db029582d3d7627a90a1b566c5d6)",
        "before_after_code_files": [
          "crypto/bio/b_addr.c||crypto/bio/b_addr.c",
          "crypto/engine/eng_lib.c||crypto/engine/eng_lib.c",
          "crypto/err/err.c||crypto/err/err.c",
          "crypto/ex_data.c||crypto/ex_data.c",
          "crypto/rand/md_rand.c||crypto/rand/md_rand.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/b_addr.c||crypto/bio/b_addr.c": [
          "File: crypto/bio/b_addr.c -> crypto/bio/b_addr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "605: DEFINE_RUN_ONCE_STATIC(do_bio_lookup_init)",
          "606: {",
          "607:     bio_lookup_lock = CRYPTO_THREAD_lock_new();",
          "608:     return bio_lookup_lock != NULL;",
          "609: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "607:     OPENSSL_init_crypto(0, NULL);",
          "",
          "---------------"
        ],
        "crypto/engine/eng_lib.c||crypto/engine/eng_lib.c": [
          "File: crypto/engine/eng_lib.c -> crypto/engine/eng_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: DEFINE_RUN_ONCE(do_engine_lock_init)",
          "20: {",
          "21:     global_engine_lock = CRYPTO_THREAD_lock_new();",
          "22:     return global_engine_lock != NULL;",
          "23: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:     OPENSSL_init_crypto(0, NULL);",
          "",
          "---------------"
        ],
        "crypto/err/err.c||crypto/err/err.c": [
          "File: crypto/err/err.c -> crypto/err/err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "252: DEFINE_RUN_ONCE_STATIC(do_err_strings_init)",
          "253: {",
          "254:     err_string_lock = CRYPTO_THREAD_lock_new();",
          "255:     return err_string_lock != NULL;",
          "256: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "254:     OPENSSL_init_crypto(0, NULL);",
          "",
          "---------------"
        ],
        "crypto/ex_data.c||crypto/ex_data.c": [
          "File: crypto/ex_data.c -> crypto/ex_data.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: DEFINE_RUN_ONCE_STATIC(do_ex_data_init)",
          "40: {",
          "41:     ex_data_lock = CRYPTO_THREAD_lock_new();",
          "42:     return ex_data_lock != NULL;",
          "43: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:     OPENSSL_init_crypto(0, NULL);",
          "",
          "---------------"
        ],
        "crypto/rand/md_rand.c||crypto/rand/md_rand.c": [
          "File: crypto/rand/md_rand.c -> crypto/rand/md_rand.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: DEFINE_RUN_ONCE_STATIC(do_rand_lock_init)",
          "91: {",
          "92:     rand_lock = CRYPTO_THREAD_lock_new();",
          "93:     rand_tmp_lock = CRYPTO_THREAD_lock_new();",
          "94:     return rand_lock != NULL && rand_tmp_lock != NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     OPENSSL_init_crypto(0, NULL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "73ff84721302f20c56090886fe1fad4cf5544da2",
      "candidate_info": {
        "commit_hash": "73ff84721302f20c56090886fe1fad4cf5544da2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/73ff84721302f20c56090886fe1fad4cf5544da2",
        "files": [
          "crypto/rand/rand_egd.c"
        ],
        "message": "Fixed the return code of RAND_query_egd_bytes when connect fails.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1886)\n(cherry picked from commit 1381684daf8800487b48a70cd634f433b1d6366f)",
        "before_after_code_files": [
          "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c": [
          "File: crypto/rand/rand_egd.c -> crypto/rand/rand_egd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:                 break;",
          "134: #  endif",
          "135:             default:",
          "137:             }",
          "138:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:                 ret = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230:     int num, ret = 0;",
          "232:     num = RAND_query_egd_bytes(path, NULL, bytes);",
          "236:         ret = num;",
          "237:  err:",
          "238:     return (ret);",
          "",
          "[Removed Lines]",
          "233:     if (num < 1)",
          "234:         goto err;",
          "235:     if (RAND_status() == 1)",
          "",
          "[Added Lines]",
          "234:     if (num < 1 || RAND_status() == 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9df0b74d0fbd1edd4b464b7a9ddc496e04bcc50f",
      "candidate_info": {
        "commit_hash": "9df0b74d0fbd1edd4b464b7a9ddc496e04bcc50f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9df0b74d0fbd1edd4b464b7a9ddc496e04bcc50f",
        "files": [
          "Configurations/10-main.conf",
          "Configurations/90-team.conf"
        ],
        "message": "Efence is antiquated, remove all traces of using it\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1768)\n(cherry picked from commit 4fab3e24d62c810bc9165920af1c67c6215c7418)",
        "before_after_code_files": [
          "Configurations/10-main.conf||Configurations/10-main.conf",
          "Configurations/90-team.conf||Configurations/90-team.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/10-main.conf||Configurations/10-main.conf": [
          "File: Configurations/10-main.conf -> Configurations/10-main.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "735:         inherit_from     => [ \"linux-generic32\", asm(\"x86_elf_asm\") ],",
          "736:         cflags           => add(picker(default => \"-DL_ENDIAN\",",
          "737:                                        release => \"-fomit-frame-pointer\")),",
          "739:         bn_ops           => \"BN_LLONG\",",
          "740:     },",
          "741:     \"linux-aout\" => {",
          "",
          "[Removed Lines]",
          "738:         ex_libs          => add(picker(debug => \"-lefence\")),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Configurations/90-team.conf||Configurations/90-team.conf": [
          "File: Configurations/90-team.conf -> Configurations/90-team.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:         cc               => \"gcc\",",
          "13:         cflags           => \"-DBN_DEBUG -DREF_DEBUG -DCONF_DEBUG -DBN_CTX_DEBUG -DOPENSSL_NO_ASM -ggdb -g2 -Wformat -Wshadow -Wmissing-prototypes -Wmissing-declarations -Werror\",",
          "14:         thread_scheme    => \"(unknown)\",",
          "16:     },",
          "17:     \"debug-erbridge\" => {",
          "18:         inherit_from     => [ \"x86_64_asm\" ],",
          "",
          "[Removed Lines]",
          "15:         ex_libs          => add(\" \",\"-lefence\"),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:         thread_scheme    => \"pthreads\",",
          "51:         dso_scheme       => \"dlfcn\",",
          "52:     },",
          "66:     \"debug-linux-ia32-aes\" => {",
          "67:         cc               => \"gcc\",",
          "68:         cflags           => combine(\"-DL_ENDIAN -O3 -fomit-frame-pointer -Wall\",",
          "",
          "[Removed Lines]",
          "53:     \"debug-linux-elf-noefence\" => {",
          "54:         inherit_from     => [ \"x86_elf_asm\" ],",
          "55:         cc               => \"gcc\",",
          "56:         cflags           => combine(\"-DBN_DEBUG -DREF_DEBUG -DCONF_DEBUG -DBN_CTX_DEBUG -DL_ENDIAN -g -Wall\",",
          "57:                                     threads(\"-D_REENTRANT\")),",
          "58:         ex_libs          => add(\" \",\"-ldl\"),",
          "59:         bn_ops           => \"BN_LLONG\",",
          "60:         thread_scheme    => \"pthreads\",",
          "61:         dso_scheme       => \"dlfcn\",",
          "62:         shared_target    => \"linux-shared\",",
          "63:         shared_cflag     => \"-fPIC\",",
          "64:         shared_extension => \".so.\\$(SHLIB_MAJOR).\\$(SHLIB_MINOR)\",",
          "65:     },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}