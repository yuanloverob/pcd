{
  "cve_id": "CVE-2017-16820",
  "cve_desc": "The csnmp_read_table function in snmp.c in the SNMP plugin in collectd before 5.6.3 is susceptible to a double free in a certain error case, which could lead to a crash (or potentially have other impact).",
  "repo": "collectd/collectd",
  "patch_hash": "d16c24542b2f96a194d43a73c2e5778822b9cb47",
  "patch_info": {
    "commit_hash": "d16c24542b2f96a194d43a73c2e5778822b9cb47",
    "repo": "collectd/collectd",
    "commit_url": "https://github.com/collectd/collectd/commit/d16c24542b2f96a194d43a73c2e5778822b9cb47",
    "files": [
      "src/snmp.c"
    ],
    "message": "snmp plugin: Fix double free of request PDU\n\nsnmp_sess_synch_response() always frees request PDU, in both case of request\nerror and success. If error condition occurs inside of `while (status == 0)`\nloop, double free of `req` happens.\n\nIssue: #2291\nSigned-off-by: Florian Forster <octo@collectd.org>",
    "before_after_code_files": [
      "src/snmp.c||src/snmp.c"
    ]
  },
  "patch_diff": {
    "src/snmp.c||src/snmp.c": [
      "File: src/snmp.c -> src/snmp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1357:     if (oid_list_todo_num == 0) {",
      "1359:       DEBUG(\"snmp plugin: all variables have left their subtree\");",
      "1360:       status = 0;",
      "1361:       break;",
      "1362:     }",
      "1364:     res = NULL;",
      "1365:     status = snmp_sess_synch_response(host->sess_handle, req, &res);",
      "1366:     if ((status != STAT_SUCCESS) || (res == NULL)) {",
      "1367:       char *errstr = NULL;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1360:       snmp_free_pdu(req);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1376:         snmp_free_pdu(res);",
      "1377:       res = NULL;",
      "1381:       sfree(errstr);",
      "1382:       csnmp_host_close_session(host);",
      "",
      "[Removed Lines]",
      "1380:       req = NULL;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1492:     snmp_free_pdu(res);",
      "1493:   res = NULL;",
      "1499:   if (status == 0)",
      "1500:     csnmp_dispatch_table(host, data, instance_list_head, value_list_head);",
      "",
      "[Removed Lines]",
      "1495:   if (req != NULL)",
      "1496:     snmp_free_pdu(req);",
      "1497:   req = NULL;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a71c3ebcfc6ca265c702117c89f1bb552723d1fa",
      "candidate_info": {
        "commit_hash": "a71c3ebcfc6ca265c702117c89f1bb552723d1fa",
        "repo": "collectd/collectd",
        "commit_url": "https://github.com/collectd/collectd/commit/a71c3ebcfc6ca265c702117c89f1bb552723d1fa",
        "files": [
          "src/snmp.c"
        ],
        "message": "snmp plugin: Style fix\n\nIssue: #2291\nSigned-off-by: Florian Forster <octo@collectd.org>",
        "before_after_code_files": [
          "src/snmp.c||src/snmp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "src/snmp.c||src/snmp.c"
          ],
          "candidate": [
            "src/snmp.c||src/snmp.c"
          ]
        }
      },
      "candidate_diff": {
        "src/snmp.c||src/snmp.c": [
          "File: src/snmp.c -> src/snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1363:     }",
          "1365:     res = NULL;",
          "1367:     status = snmp_sess_synch_response(host->sess_handle, req, &res);",
          "1368:     if ((status != STAT_SUCCESS) || (res == NULL)) {",
          "1369:       char *errstr = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1369:     req = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9816488b3c779b85e285956e8a920bfceac43840",
      "candidate_info": {
        "commit_hash": "9816488b3c779b85e285956e8a920bfceac43840",
        "repo": "collectd/collectd",
        "commit_url": "https://github.com/collectd/collectd/commit/9816488b3c779b85e285956e8a920bfceac43840",
        "files": [
          "src/snmp.c"
        ],
        "message": "snmp plugin: Added res->errstat check\n\nCollectd does not check for `res->errstat` value after\n`snmp_sess_synch_response()` call. In case of error, there is no any data in\n`res->variables` actually, but variables are tried to be processed as usual.\nSuffix calculation will fail, so all subtrees will be marked as failed, not\nonly one subtree which caused an error.\n\nThe csnmp_instance_list_add() call will fail too, and, as result,\n`csnmp_read_table` will finish it's work without any data submission.\n\nThe log message like\n\"snmp plugin: host HOSTNAME: csnmp_instance_list_add failed\",\nwhich is put into logs in this case, also has no enough diagnostic data.\n\nAdded code to proper check for `res->errstat` and to try to get available data.\n\nIssue: #2291",
        "before_after_code_files": [
          "src/snmp.c||src/snmp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "src/snmp.c||src/snmp.c"
          ],
          "candidate": [
            "src/snmp.c||src/snmp.c"
          ]
        }
      },
      "candidate_diff": {
        "src/snmp.c||src/snmp.c": [
          "File: src/snmp.c -> src/snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1388:       break;",
          "1389:     }",
          "1391:     for (vb = res->variables, i = 0; (vb != NULL);",
          "1392:          vb = vb->next_variable, i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1391:     if (res->errstat != SNMP_ERR_NOERROR) {",
          "1392:       if (res->errindex != 0 && res->errindex < oid_list_len) {",
          "1394:         for (i = 1, vb = res->variables; vb != NULL && i != res->errindex;",
          "1395:              vb = vb->next_variable, i++)",
          "1398:         char oid_buffer[1024] = {0};",
          "1399:         snprint_objid(oid_buffer, sizeof(oid_buffer) - 1, vb->name,",
          "1400:                       vb->name_length);",
          "1401:         NOTICE(\"snmp plugin: host %s; data %s: OID `%s` failed: %s\",",
          "1402:                host->name, data->name, oid_buffer,",
          "1403:                snmp_errstring(res->errstat));",
          "1406:         i = res->errindex - 1;",
          "1407:         while ((i < oid_list_len) && !oid_list_todo[i])",
          "1408:           i++;",
          "1410:         oid_list_todo[i] = 0;",
          "1412:         snmp_free_pdu(res);",
          "1413:         res = NULL;",
          "1414:         continue;",
          "1415:       }",
          "1417:       ERROR(\"snmp plugin: host %s; data %s: response error: %s (%li) \",",
          "1418:             host->name, data->name, snmp_errstring(res->errstat), res->errstat);",
          "1419:       status = -1;",
          "1420:       break;",
          "1421:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}