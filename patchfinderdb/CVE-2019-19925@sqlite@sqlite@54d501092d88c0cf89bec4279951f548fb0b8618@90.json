{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4e61e88348693cde472989b3dc1a06b5ff9dd9c0",
      "candidate_info": {
        "commit_hash": "4e61e88348693cde472989b3dc1a06b5ff9dd9c0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4e61e88348693cde472989b3dc1a06b5ff9dd9c0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c",
          "src/sqliteInt.h",
          "src/vacuum.c",
          "test/e_vacuum.test"
        ],
        "message": "Only preserve rowid values for VACUUM INTO.  Keep the legacy behavior of renumbering rowids for ordinary VACUUM.\n\nFossilOrigin-Name: 13a0ea6466b051ea5281865ed5285b8b5a99ec4307f400c5f7b03692723f1cd1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/vacuum.c||src/vacuum.c",
          "test/e_vacuum.test||test/e_vacuum.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8d3af2010f4f652865f5c0d18e3bc793de05f8e75e75cc77786f61004b2ad28f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2352:       sqlite3RowidConstraint(pParse, onError, pDest);",
          "2353:       sqlite3VdbeJumpHere(v, addr2);",
          "2354:       autoIncStep(pParse, regAutoinc, regRowid);",
          "2356:       addr1 = sqlite3VdbeAddOp2(v, OP_NewRowid, iDest, regRowid);",
          "2357:     }else{",
          "2358:       addr1 = sqlite3VdbeAddOp2(v, OP_Rowid, iSrc, regRowid);",
          "",
          "[Removed Lines]",
          "2355:     }else if( pDest->pIndex==0 && !(db->mDbFlags & DBFLAG_Vacuum) ){",
          "",
          "[Added Lines]",
          "2355:     }else if( pDest->pIndex==0 && !(db->mDbFlags & DBFLAG_VacuumInto) ){",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/vacuum.c||src/vacuum.c": [
          "File: src/vacuum.c -> src/vacuum.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:     return SQLITE_ERROR;",
          "171:   }",
          "172:   saved_openFlags = db->openFlags;",
          "173:   if( pOut ){",
          "174:     if( sqlite3_value_type(pOut)!=SQLITE_TEXT ){",
          "175:       sqlite3SetString(pzErrMsg, db, \"non-text filename\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173:   saved_mDbFlags = db->mDbFlags;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:     zOut = (const char*)sqlite3_value_text(pOut);",
          "179:     db->openFlags &= ~SQLITE_OPEN_READONLY;",
          "180:     db->openFlags |= SQLITE_OPEN_CREATE|SQLITE_OPEN_READWRITE;",
          "181:   }else{",
          "182:     zOut = \"\";",
          "183:   }",
          "188:   saved_flags = db->flags;",
          "190:   saved_nChange = db->nChange;",
          "191:   saved_nTotalChange = db->nTotalChange;",
          "192:   saved_mTrace = db->mTrace;",
          "193:   db->flags |= SQLITE_WriteSchema | SQLITE_IgnoreChecks;",
          "195:   db->flags &= ~(u64)(SQLITE_ForeignKeys | SQLITE_ReverseOrder",
          "196:                    | SQLITE_Defensive | SQLITE_CountRows);",
          "197:   db->mTrace = 0;",
          "",
          "[Removed Lines]",
          "189:   saved_mDbFlags = db->mDbFlags;",
          "194:   db->mDbFlags |= DBFLAG_PreferBuiltin | DBFLAG_Vacuum;",
          "",
          "[Added Lines]",
          "182:     db->mDbFlags |= DBFLAG_PreferBuiltin | DBFLAG_Vacuum | DBFLAG_VacuumInto;",
          "185:     db->mDbFlags |= DBFLAG_PreferBuiltin | DBFLAG_Vacuum;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "307:       zDbMain",
          "308:   );",
          "309:   assert( (db->mDbFlags & DBFLAG_Vacuum)!=0 );",
          "311:   if( rc!=SQLITE_OK ) goto end_of_vacuum;",
          "",
          "[Removed Lines]",
          "310:   db->mDbFlags &= ~DBFLAG_Vacuum;",
          "",
          "[Added Lines]",
          "311:   db->mDbFlags &= ~(DBFLAG_Vacuum|DBFLAG_VacuumInto);",
          "",
          "---------------"
        ],
        "test/e_vacuum.test||test/e_vacuum.test": [
          "File: test/e_vacuum.test -> test/e_vacuum.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "232: do_execsql_test e_vacuum-3.1.2 {",
          "233:   VACUUM;",
          "234:   SELECT rowid, x FROM t4;",
          "238: do_execsql_test e_vacuum-3.1.3 {",
          "239:   CREATE TABLE t5(x, y INTEGER PRIMARY KEY);",
          "240:   INSERT INTO t5(x) VALUES('x');",
          "",
          "[Removed Lines]",
          "235: } {1 x 3 z}",
          "236: # Was: {1 x 2 z}",
          "",
          "[Added Lines]",
          "235: } {1 x 2 z}",
          "237: # Rowids are preserved if an INTEGER PRIMARY KEY is used",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248:   SELECT rowid, x FROM t5;",
          "249: } {1 x 3 z}",
          "251: # EVIDENCE-OF: R-49563-33883 A VACUUM will fail if there is an open",
          "252: # transaction, or if there are one or more active SQL statements when it",
          "253: # is run.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251: # Rowid is preserved for VACUUM INTO",
          "252: do_execsql_test e_vacuum-3.1.5 {",
          "253:   DROP TABLE t5;",
          "254:   CREATE TABLE t5(x);",
          "255:   INSERT INTO t5(x) VALUES('x');",
          "256:   INSERT INTO t5(x) VALUES('y');",
          "257:   INSERT INTO t5(x) VALUES('z');",
          "258:   DELETE FROM t5 WHERE x = 'y';",
          "259:   SELECT rowid, x FROM t5;",
          "260: } {1 x 3 z}",
          "261: forcedelete test2.db",
          "262: do_execsql_test e_vacuum-3.1.6 {",
          "263:   VACUUM INTO 'test2.db';",
          "264:   ATTACH 'test2.db' AS aux1;",
          "265:   SELECT rowid, x FROM aux1.t5;",
          "266:   DETACH aux1;",
          "267: } {1 x 3 z}",
          "269: # Rowids are renumbered even if the table being vacuumed",
          "270: # has indexes.",
          "271: do_execsql_test e_vacuum-3.1.7 {",
          "272:   DROP TABLE t5;",
          "273:   CREATE TABLE t5(x,y,z);",
          "274:   INSERT INTO t5(x) VALUES('x');",
          "275:   INSERT INTO t5(x) VALUES('y');",
          "276:   INSERT INTO t5(x) VALUES('z');",
          "277:   UPDATE t5 SET y=x, z=random();",
          "278:   DELETE FROM t5 WHERE x = 'y';",
          "279:   CREATE INDEX t5x ON t5(x);",
          "280:   CREATE UNIQUE INDEX t5y ON t5(y);",
          "281:   CREATE INDEX t5zxy ON t5(z,x,y);",
          "282:   SELECT rowid, x FROM t5;",
          "283: } {1 x 3 z}",
          "284: do_execsql_test e_vacuum-3.1.8 {",
          "285:   VACUUM;",
          "286:   SELECT rowid, x FROM t5;",
          "287: } {1 x 3 z}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a1ac03590baf0fffea9437436adeaf4a1db64a65",
      "candidate_info": {
        "commit_hash": "a1ac03590baf0fffea9437436adeaf4a1db64a65",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a1ac03590baf0fffea9437436adeaf4a1db64a65",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/walker.c",
          "test/altertab3.test"
        ],
        "message": "Fix a faulty assert() in walker.c that could fail when processing an ALTER TABLE statement on a schema containing invalid table references that are part of a WINDOW definition.\n\nFossilOrigin-Name: ee076c28d8ee0f5b099cdef83ae6cea6ef5aa209ab528d7c49949dd653ce019c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/walker.c||src/walker.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 47e23064ba0205148f89e12803a62d5a4d6d2054f593f60c031e815112170b9b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/walker.c||src/walker.c": [
          "File: src/walker.c -> src/walker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   {",
          "121:     Parse *pParse = pWalker->pParse;",
          "122:     if( pParse && IN_RENAME_OBJECT ){",
          "123:       int rc = walkWindowList(pWalker, p->pWinDefn);",
          "125:       return rc;",
          "126:     }",
          "127:   }",
          "",
          "[Removed Lines]",
          "124:       assert( rc==WRC_Continue );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:   ) IN () OR t1.a=5}",
          "238: }",
          "241: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "240: #-------------------------------------------------------------------------",
          "241: reset_db",
          "242: do_execsql_test 11.1 {",
          "243:   CREATE TABLE t1(",
          "244:       a,b,c,d,e,f,g,h,j,jj,jjb,k,aa,bb,cc,dd,ee DEFAULT 3.14,",
          "245:       ff DEFAULT('hiccup'),Wg NOD NULL DEFAULT(false)",
          "246:   );",
          "248:   CREATE TRIGGER b AFTER INSERT ON t1 WHEN new.a BEGIN",
          "249:     SELECT a, sum() w3 FROM t1",
          "250:     WINDOW b AS (ORDER BY NOT EXISTS(SELECT 1 FROM abc));",
          "251:   END;",
          "252: }",
          "254: do_catchsql_test 11.2 {",
          "255:   ALTER TABLE t1 RENAME TO t1x;",
          "256: } {1 {error in trigger b: no such table: abc}}",
          "258: do_execsql_test 11.3 {",
          "259:   DROP TRIGGER b;",
          "260:   CREATE TRIGGER b AFTER INSERT ON t1 WHEN new.a BEGIN",
          "261:     SELECT a, sum() w3 FROM t1",
          "262:     WINDOW b AS (ORDER BY NOT EXISTS(SELECT 1 FROM t1));",
          "263:   END;",
          "264: } {}",
          "266: do_execsql_test 11.4 {",
          "267:   ALTER TABLE t1 RENAME TO t1x;",
          "268:   SELECT sql FROM sqlite_master WHERE name = 'b';",
          "269: } {",
          "270: {CREATE TRIGGER b AFTER INSERT ON \"t1x\" WHEN new.a BEGIN",
          "271:     SELECT a, sum() w3 FROM \"t1x\"",
          "272:     WINDOW b AS (ORDER BY NOT EXISTS(SELECT 1 FROM \"t1x\"));",
          "273:   END}",
          "274: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ecc05bc3fb414a0a184b4d69d5ecc38ddb24951",
      "candidate_info": {
        "commit_hash": "3ecc05bc3fb414a0a184b4d69d5ecc38ddb24951",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3ecc05bc3fb414a0a184b4d69d5ecc38ddb24951",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/lemon.c"
        ],
        "message": "Fix goofy string formatting in lemon.c that dates from the K&amp;R-C days.\n\nFossilOrigin-Name: 48ba5e5a2227257cebafacbb09e9dd91d9b89ab2d52a8b4e4113c1d017d95f41",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/lemon.c||tool/lemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4d6d2fc046d586a1e5989bbb2757f13d0371fbfad0acf45a0e2fd77dffd8d8f9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/lemon.c||tool/lemon.c": [
          "File: tool/lemon.c -> tool/lemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "910:     sp = Symbol_find(lemp->start);",
          "911:     if( sp==0 ){",
          "912:       ErrorMsg(lemp->filename,0,",
          "916:       lemp->errorcnt++;",
          "917:       sp = lemp->startRule->lhs;",
          "918:     }",
          "",
          "[Removed Lines]",
          "913: \"The specified start symbol \\\"%s\\\" is not \\",
          "914: in a nonterminal of the grammar.  \\\"%s\\\" will be used as the start \\",
          "915: symbol instead.\",lemp->start,lemp->startRule->lhs->name);",
          "",
          "[Added Lines]",
          "913:         \"The specified start symbol \\\"%s\\\" is not \"",
          "914:         \"in a nonterminal of the grammar.  \\\"%s\\\" will be used as the start \"",
          "915:         \"symbol instead.\",lemp->start,lemp->startRule->lhs->name);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "928:     for(i=0; i<rp->nrhs; i++){",
          "930:         ErrorMsg(lemp->filename,0,",
          "934:         lemp->errorcnt++;",
          "935:       }",
          "936:     }",
          "",
          "[Removed Lines]",
          "931: \"The start symbol \\\"%s\\\" occurs on the \\",
          "932: right-hand side of a rule. This will result in a parser which \\",
          "933: does not work properly.\",sp->name);",
          "",
          "[Added Lines]",
          "931:           \"The start symbol \\\"%s\\\" occurs on the \"",
          "932:           \"right-hand side of a rule. This will result in a parser which \"",
          "933:           \"does not work properly.\",sp->name);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2274:       }else if( x[0]=='{' ){",
          "2275:         if( psp->prevrule==0 ){",
          "2276:           ErrorMsg(psp->filename,psp->tokenlineno,",
          "2279:           psp->errorcnt++;",
          "2280:         }else if( psp->prevrule->code!=0 ){",
          "2281:           ErrorMsg(psp->filename,psp->tokenlineno,",
          "2284:           psp->errorcnt++;",
          "2285:         }else if( strcmp(x, \"{NEVER-REDUCE\")==0 ){",
          "2286:           psp->prevrule->neverReduce = 1;",
          "",
          "[Removed Lines]",
          "2277: \"There is no prior rule upon which to attach the code \\",
          "2278: fragment which begins on this line.\");",
          "2282: \"Code fragment beginning on this line is not the first \\",
          "2283: to follow the previous rule.\");",
          "",
          "[Added Lines]",
          "2277:             \"There is no prior rule upon which to attach the code \"",
          "2278:             \"fragment which begins on this line.\");",
          "2282:             \"Code fragment beginning on this line is not the first \"",
          "2283:             \"to follow the previous rule.\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2309:         psp->errorcnt++;",
          "2310:       }else if( psp->prevrule->precsym!=0 ){",
          "2311:         ErrorMsg(psp->filename,psp->tokenlineno,",
          "2314:         psp->errorcnt++;",
          "2315:       }else{",
          "2316:         psp->prevrule->precsym = Symbol_new(x);",
          "",
          "[Removed Lines]",
          "2312: \"Precedence mark on this line is not the first \\",
          "2313: to follow the previous rule.\");",
          "",
          "[Added Lines]",
          "2312:           \"Precedence mark on this line is not the first \"",
          "2313:           \"to follow the previous rule.\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2913:       }",
          "2914:       if( c==0 ){",
          "2915:         ErrorMsg(ps.filename,startline,",
          "2917:         ps.errorcnt++;",
          "2918:         nextcp = cp;",
          "2919:       }else{",
          "",
          "[Removed Lines]",
          "2916: \"String starting on this line is not terminated before the end of the file.\");",
          "",
          "[Added Lines]",
          "2916:             \"String starting on this line is not terminated before \"",
          "2917:             \"the end of the file.\");",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2952:       }",
          "2953:       if( c==0 ){",
          "2954:         ErrorMsg(ps.filename,ps.tokenlineno,",
          "2956:         ps.errorcnt++;",
          "2957:         nextcp = cp;",
          "2958:       }else{",
          "",
          "[Removed Lines]",
          "2955: \"C code starting on this line is not terminated before the end of the file.\");",
          "",
          "[Added Lines]",
          "2956:           \"C code starting on this line is not terminated before \"",
          "2957:           \"the end of the file.\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3bf0d7a8813a7e40f1ad37e10cad744bfd295e74",
      "candidate_info": {
        "commit_hash": "3bf0d7a8813a7e40f1ad37e10cad744bfd295e74",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3bf0d7a8813a7e40f1ad37e10cad744bfd295e74",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/memdb.c"
        ],
        "message": "Remove an incorrect assert() from the deserialize in-memory database VFS.\n\nFossilOrigin-Name: 80151d7e3b9fd84086874a1cebed024b9e14005ea2d0108cf6efcd07373fcf51",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/memdb.c||src/memdb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: cb72ee0478ce98c48aae059fd5de4e36caf2b8c953e08fcb799bfd119ad46b73",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/memdb.c||src/memdb.c": [
          "File: src/memdb.c -> src/memdb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "306: ){",
          "307:   MemFile *p = (MemFile *)pFile;",
          "308:   if( iOfst+iAmt>p->sz ){",
          "311:   }else{",
          "312:     p->nMmap++;",
          "",
          "[Removed Lines]",
          "309:     assert( CORRUPT_DB );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1a39d2bb5cb1a72f5e91aaabfd94fc0e9759bf82",
      "candidate_info": {
        "commit_hash": "1a39d2bb5cb1a72f5e91aaabfd94fc0e9759bf82",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1a39d2bb5cb1a72f5e91aaabfd94fc0e9759bf82",
        "files": [
          "ext/fts5/fts5_aux.c",
          "ext/fts5/test/fts5ak.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Handle SQL NULL values without crashing in the fts5 snippet() and highlight() functions.\n\nFossilOrigin-Name: a5e9cc794f17566160c4b2b5791601a744a21ace987b19ff8a5816fd78dce56a",
        "before_after_code_files": [
          "ext/fts5/fts5_aux.c||ext/fts5/fts5_aux.c",
          "ext/fts5/test/fts5ak.test||ext/fts5/test/fts5ak.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_aux.c||ext/fts5/fts5_aux.c": [
          "File: ext/fts5/fts5_aux.c -> ext/fts5/fts5_aux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:   HighlightContext *p,",
          "137:   const char *z, int n",
          "138: ){",
          "140:     if( n<0 ) n = (int)strlen(z);",
          "141:     p->zOut = sqlite3_mprintf(\"%z%.*s\", p->zOut, n, z);",
          "142:     if( p->zOut==0 ) *pRc = SQLITE_NOMEM;",
          "",
          "[Removed Lines]",
          "139:   if( *pRc==SQLITE_OK ){",
          "",
          "[Added Lines]",
          "139:   if( *pRc==SQLITE_OK && z ){",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5ak.test||ext/fts5/test/fts5ak.test": [
          "File: ext/fts5/test/fts5ak.test -> ext/fts5/test/fts5ak.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:   {[a b c d e]}",
          "145: }",
          "147: }",
          "149: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147: do_execsql_test 3.2 {",
          "148:   SELECT highlight(ft, 0, NULL, NULL) FROM ft WHERE ft MATCH 'a+b+c AND c+d+e';",
          "149: } {",
          "150:   {a b c x c d e}",
          "151:   {a b c c d e}",
          "152:   {a b c d e}",
          "153: }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e54efd60c20bbfc5d70ddb9e1dd6ffb68cbbcfa57b4f07cb104767ef08c1a559",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}