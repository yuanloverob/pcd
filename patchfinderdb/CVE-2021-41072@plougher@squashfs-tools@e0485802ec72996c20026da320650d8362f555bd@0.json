{
  "cve_id": "CVE-2021-41072",
  "cve_desc": "squashfs_opendir in unsquash-2.c in Squashfs-Tools 4.5 allows Directory Traversal, a different vulnerability than CVE-2021-40153. A squashfs filesystem that has been crafted to include a symbolic link and then contents under the same filename in a filesystem can cause unsquashfs to first create the symbolic link pointing outside the expected directory, and then the subsequent write operation will cause the unsquashfs process to write through the symbolic link elsewhere in the filesystem.",
  "repo": "plougher/squashfs-tools",
  "patch_hash": "e0485802ec72996c20026da320650d8362f555bd",
  "patch_info": {
    "commit_hash": "e0485802ec72996c20026da320650d8362f555bd",
    "repo": "plougher/squashfs-tools",
    "commit_url": "https://github.com/plougher/squashfs-tools/commit/e0485802ec72996c20026da320650d8362f555bd",
    "files": [
      "squashfs-tools/Makefile",
      "squashfs-tools/unsquash-1.c",
      "squashfs-tools/unsquash-12.c",
      "squashfs-tools/unsquash-1234.c",
      "squashfs-tools/unsquash-2.c",
      "squashfs-tools/unsquash-3.c",
      "squashfs-tools/unsquash-4.c",
      "squashfs-tools/unsquashfs.h"
    ],
    "message": "Unsquashfs: additional write outside destination directory exploit fix\n\nAn issue on github (https://github.com/plougher/squashfs-tools/issues/72)\nshowed how some specially crafted Squashfs filesystems containing\ninvalid file names (with '/' and '..') can cause Unsquashfs to write\nfiles outside of the destination directory.\n\nSince then it has been shown that specially crafted Squashfs filesystems\nthat contain a symbolic link pointing outside of the destination directory,\ncoupled with an identically named file within the same directory, can\ncause Unsquashfs to write files outside of the destination directory.\n\nSpecifically the symbolic link produces a pathname pointing outside\nof the destination directory, which is then followed when writing the\nduplicate identically named file within the directory.\n\nThis commit fixes this exploit by explictly checking for duplicate\nfilenames within a directory.  As directories in v2.1, v3.x, and v4.0\nfilesystems are sorted, this is achieved by checking for consecutively\nidentical filenames.  Additionally directories are checked to\nensure they are sorted, to avoid attempts to evade the duplicate\ncheck.\n\nVersion 1.x and 2.0 filesystems (where the directories were unsorted)\nare sorted and then the above duplicate filename check is applied.\n\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>",
    "before_after_code_files": [
      "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
      "squashfs-tools/unsquash-12.c||squashfs-tools/unsquash-12.c",
      "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c",
      "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
      "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c",
      "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c",
      "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
    ]
  },
  "patch_diff": {
    "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c": [
      "File: squashfs-tools/unsquash-1.c -> squashfs-tools/unsquash-1.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "370:   }",
      "371:  }",
      "373:  return dir;",
      "375: corrupted:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "374:  sort_directory(dir);",
      "375:  if(check_directory(dir) == FALSE) {",
      "376:   ERROR(\"File system corrupted: directory has duplicate names\\n\");",
      "377:   goto corrupted;",
      "378:  }",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquash-12.c||squashfs-tools/unsquash-12.c": [
      "File: squashfs-tools/unsquash-12.c -> squashfs-tools/unsquash-12.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "27: #include \"unsquashfs.h\"",
      "33: void sort_directory(struct dir *dir)",
      "34: {",
      "35:  struct dir_ent *cur, *l1, *l2, *next;",
      "36:  int len1, len2, stride = 1;",
      "38:  if(dir->dir_count < 2)",
      "39:   return;",
      "51:  do {",
      "61:   while(l2) {",
      "62:    l1 = l2;",
      "63:    for(len1 = 0; l2 && len1 < stride; len1 ++, l2 = l2->next);",
      "64:    len2 = stride;",
      "71:    while(len1 && l2 && len2) {",
      "72:     if(strcmp(l1->name, l2->name) <= 0) {",
      "73:      next = l1;",
      "74:      l1 = l1->next;",
      "75:      len1 --;",
      "76:     } else {",
      "77:      next = l2;",
      "78:      l2 = l2->next;",
      "79:      len2 --;",
      "80:     }",
      "82:     if(cur) {",
      "83:      cur->next = next;",
      "84:      cur = next;",
      "85:     } else",
      "86:      dir->dirs = cur = next;",
      "87:    }",
      "92:    for(; len1; len1 --, l1 = l1->next) {",
      "93:     if(cur) {",
      "94:      cur->next = l1;",
      "95:      cur = l1;",
      "96:     } else",
      "97:      dir->dirs = cur = l1;",
      "98:    }",
      "99:    for(; l2 && len2; len2 --, l2 = l2->next) {",
      "100:     if(cur) {",
      "101:      cur->next = l2;",
      "102:      cur = l2;",
      "103:     } else",
      "104:      dir->dirs = cur = l2;",
      "105:    }",
      "106:   }",
      "107:   cur->next = NULL;",
      "108:   stride = stride << 1;",
      "109:  } while(stride < dir->dir_count);",
      "110: }",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c": [
      "File: squashfs-tools/unsquash-1234.c -> squashfs-tools/unsquash-1234.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "73:  free(dir);",
      "74: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "82: int check_directory(struct dir *dir)",
      "83: {",
      "84:  int i;",
      "85:  struct dir_ent *ent;",
      "87:  if(dir->dir_count < 2)",
      "88:   return TRUE;",
      "90:  for(ent = dir->dirs, i = 0; i < dir->dir_count - 1; ent = ent->next, i++)",
      "91:   if(strcmp(ent->name, ent->next->name) >= 0)",
      "92:    return FALSE;",
      "94:  return TRUE;",
      "95: }",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c": [
      "File: squashfs-tools/unsquash-2.c -> squashfs-tools/unsquash-2.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "29: static squashfs_fragment_entry_2 *fragment_table;",
      "30: static unsigned int *uid_table, *guid_table;",
      "31: static squashfs_operations ops;",
      "34: static void read_block_list(unsigned int *block_list, long long start,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32: static int needs_sorting = FALSE;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "463:   }",
      "464:  }",
      "466:  return dir;",
      "468: corrupted:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "467:  if(needs_sorting)",
      "468:   sort_directory(dir);",
      "471:  if(check_directory(dir) == FALSE) {",
      "472:   if(needs_sorting)",
      "473:    ERROR(\"File system corrupted: directory has duplicate names\\n\");",
      "474:   else",
      "475:    ERROR(\"File system corrupted: directory has duplicate names or is unsorted\\n\");",
      "476:   goto corrupted;",
      "477:  }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "598:  comp = lookup_compressor(\"gzip\");",
      "599:  return TRUE;",
      "600: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "612:  if(sBlk_3->s_minor == 0)",
      "613:   needs_sorting = TRUE;",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c": [
      "File: squashfs-tools/unsquash-3.c -> squashfs-tools/unsquash-3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "497:   }",
      "498:  }",
      "500:  return dir;",
      "502: corrupted:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "501:  if(check_directory(dir) == FALSE) {",
      "502:   ERROR(\"File system corrupted: directory has duplicate names or is unsorted\\n\");",
      "503:   goto corrupted;",
      "504:  }",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c": [
      "File: squashfs-tools/unsquash-4.c -> squashfs-tools/unsquash-4.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "434:   }",
      "435:  }",
      "437:  return dir;",
      "439: corrupted:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "438:  if(check_directory(dir) == FALSE) {",
      "439:   ERROR(\"File system corrupted: directory has duplicate names or is unsorted\\n\");",
      "440:   goto corrupted;",
      "441:  }",
      "",
      "---------------"
    ],
    "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h": [
      "File: squashfs-tools/unsquashfs.h -> squashfs-tools/unsquashfs.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "294: extern int check_name(char *, int);",
      "295: extern void squashfs_closedir(struct dir *);",
      "296: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "296: extern int check_directory(struct dir *);",
      "299: extern void sort_directory(struct dir *);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "79b5a555058eef4e1e7ff220c344d39f8cd09646",
      "candidate_info": {
        "commit_hash": "79b5a555058eef4e1e7ff220c344d39f8cd09646",
        "repo": "plougher/squashfs-tools",
        "commit_url": "https://github.com/plougher/squashfs-tools/commit/79b5a555058eef4e1e7ff220c344d39f8cd09646",
        "files": [
          "squashfs-tools/Makefile",
          "squashfs-tools/unsquash-1.c",
          "squashfs-tools/unsquash-1234.c",
          "squashfs-tools/unsquash-2.c",
          "squashfs-tools/unsquash-3.c",
          "squashfs-tools/unsquash-4.c",
          "squashfs-tools/unsquashfs.c",
          "squashfs-tools/unsquashfs.h"
        ],
        "message": "Unsquashfs: fix write outside destination directory exploit\n\nAn issue on Github (https://github.com/plougher/squashfs-tools/issues/72)\nshows how some specially crafted Squashfs filesystems containing\ninvalid file names (with '/' and ..) can cause Unsquashfs to write\nfiles outside of the destination directory.\n\nThis commit fixes this exploit by checking all names for\nvalidity.\n\nIn doing so I have also added checks for '.' and for names that\nare shorter than they should be (names in the file system should\nnot have '\\0' terminators).\n\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>",
        "before_after_code_files": [
          "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
          "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c",
          "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
          "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c",
          "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c",
          "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c",
          "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
            "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c",
            "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
            "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c",
            "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c",
            "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
          ],
          "candidate": [
            "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
            "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c",
            "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
            "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c",
            "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c",
            "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
          ]
        }
      },
      "candidate_diff": {
        "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c": [
          "File: squashfs-tools/unsquash-1.c -> squashfs-tools/unsquash-1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "285:    memcpy(dire->name, directory_table + bytes,",
          "286:     dire->size + 1);",
          "287:    dire->name[dire->size + 1] = '\\0';",
          "288:    TRACE(\"squashfs_opendir: directory entry %s, inode \"",
          "289:     \"%d:%d, type %d\\n\", dire->name,",
          "290:     dirh.start_block, dire->offset, dire->type);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "290:    if(check_name(dire->name, dire->size + 1) == FALSE) {",
          "291:     ERROR(\"File system corrupted: invalid characters in name\\n\");",
          "292:     goto corrupted;",
          "293:    }",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-1234.c||squashfs-tools/unsquash-1234.c": [
          "File: squashfs-tools/unsquash-1234.c -> squashfs-tools/unsquash-1234.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #define TRUE 1",
          "29: #define FALSE 0",
          "37: int check_name(char *name, int size)",
          "38: {",
          "39:  char *start = name;",
          "41:  if(name[0] == '.') {",
          "42:   if(name[1] == '.')",
          "43:    name++;",
          "44:   if(name[1] == '/' || name[1] == '\\0')",
          "45:    return FALSE;",
          "46:  }",
          "48:  while(name[0] != '/' && name[0] != '\\0')",
          "49:   name ++;",
          "51:  if(name[0] == '/')",
          "52:   return FALSE;",
          "54:  if((name - start) != size)",
          "55:   return FALSE;",
          "57:  return TRUE;",
          "58: }",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c": [
          "File: squashfs-tools/unsquash-2.c -> squashfs-tools/unsquash-2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "386:    memcpy(dire->name, directory_table + bytes,",
          "387:     dire->size + 1);",
          "388:    dire->name[dire->size + 1] = '\\0';",
          "389:    TRACE(\"squashfs_opendir: directory entry %s, inode \"",
          "390:     \"%d:%d, type %d\\n\", dire->name,",
          "391:     dirh.start_block, dire->offset, dire->type);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "391:    if(check_name(dire->name, dire->size + 1) == FALSE) {",
          "392:     ERROR(\"File system corrupted: invalid characters in name\\n\");",
          "393:     goto corrupted;",
          "394:    }",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-3.c||squashfs-tools/unsquash-3.c": [
          "File: squashfs-tools/unsquash-3.c -> squashfs-tools/unsquash-3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "413:    memcpy(dire->name, directory_table + bytes,",
          "414:     dire->size + 1);",
          "415:    dire->name[dire->size + 1] = '\\0';",
          "416:    TRACE(\"squashfs_opendir: directory entry %s, inode \"",
          "417:     \"%d:%d, type %d\\n\", dire->name,",
          "418:     dirh.start_block, dire->offset, dire->type);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "418:    if(check_name(dire->name, dire->size + 1) == FALSE) {",
          "419:     ERROR(\"File system corrupted: invalid characters in name\\n\");",
          "420:     goto corrupted;",
          "421:    }",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-4.c||squashfs-tools/unsquash-4.c": [
          "File: squashfs-tools/unsquash-4.c -> squashfs-tools/unsquash-4.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "349:    memcpy(dire->name, directory_table + bytes,",
          "350:     dire->size + 1);",
          "351:    dire->name[dire->size + 1] = '\\0';",
          "352:    TRACE(\"squashfs_opendir: directory entry %s, inode \"",
          "353:     \"%d:%d, type %d\\n\", dire->name,",
          "354:     dirh.start_block, dire->offset, dire->type);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "354:    if(check_name(dire->name, dire->size + 1) == FALSE) {",
          "355:     ERROR(\"File system corrupted: invalid characters in name\\n\");",
          "356:     goto corrupted;",
          "357:    }",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquashfs.c||squashfs-tools/unsquashfs.c": [
          "File: squashfs-tools/unsquashfs.c -> squashfs-tools/unsquashfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2672: #define VERSION() \\",
          "2674:  printf(\"copyright (C) 2021 Phillip Lougher \"\\",
          "2675:   \"<phillip@squashfs.org.uk>\\n\\n\");\\",
          "2676:      printf(\"This program is free software; you can redistribute it and/or\"\\",
          "",
          "[Removed Lines]",
          "2673:  printf(\"unsquashfs version 4.4-git (2021/01/09)\\n\");\\",
          "",
          "[Added Lines]",
          "2673:  printf(\"unsquashfs version 4.4-git (2021/01/17)\\n\");\\",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h": [
          "File: squashfs-tools/unsquashfs.h -> squashfs-tools/unsquashfs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "263: extern long long *alloc_index_table(int);",
          "264: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "266: extern int check_name(char *, int);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "73a2ee2a7bd17ada95a129cda2e78e74dca4232a",
      "candidate_info": {
        "commit_hash": "73a2ee2a7bd17ada95a129cda2e78e74dca4232a",
        "repo": "plougher/squashfs-tools",
        "commit_url": "https://github.com/plougher/squashfs-tools/commit/73a2ee2a7bd17ada95a129cda2e78e74dca4232a",
        "files": [
          "squashfs-tools/unsquash-1.c",
          "squashfs-tools/unsquash-12.c",
          "squashfs-tools/unsquash-2.c",
          "squashfs-tools/unsquashfs.h"
        ],
        "message": "unsquashfs: replace merge sort with template\n\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>",
        "before_after_code_files": [
          "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
          "squashfs-tools/unsquash-12.c||squashfs-tools/unsquash-12.c",
          "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
          "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
            "squashfs-tools/unsquash-12.c||squashfs-tools/unsquash-12.c",
            "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
            "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
          ],
          "candidate": [
            "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c",
            "squashfs-tools/unsquash-12.c||squashfs-tools/unsquash-12.c",
            "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c",
            "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h"
          ]
        }
      },
      "candidate_diff": {
        "squashfs-tools/unsquash-1.c||squashfs-tools/unsquash-1.c": [
          "File: squashfs-tools/unsquash-1.c -> squashfs-tools/unsquash-1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "387:  }",
          "391:  if(check_directory(dir) == FALSE) {",
          "392:   ERROR(\"File system corrupted: directory has duplicate names\\n\");",
          "393:   goto corrupted;",
          "",
          "[Removed Lines]",
          "390:  sort_directory(dir);",
          "",
          "[Added Lines]",
          "390:  sort_directory(&(dir->dirs), dir->dir_count);",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-12.c||squashfs-tools/unsquash-12.c": [
          "File: squashfs-tools/unsquash-12.c -> squashfs-tools/unsquash-12.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"unsquashfs.h\"",
          "",
          "[Removed Lines]",
          "33: void sort_directory(struct dir *dir)",
          "34: {",
          "35:  struct dir_ent *cur, *l1, *l2, *next;",
          "36:  int len1, len2, stride = 1;",
          "38:  if(dir->dir_count < 2)",
          "39:   return;",
          "51:  do {",
          "61:   while(l2) {",
          "62:    l1 = l2;",
          "63:    for(len1 = 0; l2 && len1 < stride; len1 ++, l2 = l2->next);",
          "64:    len2 = stride;",
          "71:    while(len1 && l2 && len2) {",
          "72:     if(strcmp(l1->name, l2->name) <= 0) {",
          "73:      next = l1;",
          "74:      l1 = l1->next;",
          "75:      len1 --;",
          "76:     } else {",
          "77:      next = l2;",
          "78:      l2 = l2->next;",
          "79:      len2 --;",
          "80:     }",
          "82:     if(cur) {",
          "83:      cur->next = next;",
          "84:      cur = next;",
          "85:     } else",
          "86:      dir->dirs = cur = next;",
          "87:    }",
          "92:    for(; len1; len1 --, l1 = l1->next) {",
          "93:     if(cur) {",
          "94:      cur->next = l1;",
          "95:      cur = l1;",
          "96:     } else",
          "97:      dir->dirs = cur = l1;",
          "98:    }",
          "99:    for(; l2 && len2; len2 --, l2 = l2->next) {",
          "100:     if(cur) {",
          "101:      cur->next = l2;",
          "102:      cur = l2;",
          "103:     } else",
          "104:      dir->dirs = cur = l2;",
          "105:    }",
          "106:   }",
          "107:   cur->next = NULL;",
          "108:   stride = stride << 1;",
          "109:  } while(stride < dir->dir_count);",
          "110: }",
          "",
          "[Added Lines]",
          "28: #include \"merge_sort.h\"",
          "30: SORT(sort_directory, dir_ent);",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquash-2.c||squashfs-tools/unsquash-2.c": [
          "File: squashfs-tools/unsquash-2.c -> squashfs-tools/unsquash-2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "478:  }",
          "480:  if(needs_sorting)",
          "484:  if(check_directory(dir) == FALSE) {",
          "",
          "[Removed Lines]",
          "481:   sort_directory(dir);",
          "",
          "[Added Lines]",
          "481:   sort_directory(&(dir->dirs), dir->dir_count);",
          "",
          "---------------"
        ],
        "squashfs-tools/unsquashfs.h||squashfs-tools/unsquashfs.h": [
          "File: squashfs-tools/unsquashfs.h -> squashfs-tools/unsquashfs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "334: extern int check_directory(struct dir *);",
          "338: #endif",
          "",
          "[Removed Lines]",
          "337: extern void sort_directory(struct dir *);",
          "",
          "[Added Lines]",
          "337: extern void sort_directory(struct dir_ent **, int);",
          "",
          "---------------"
        ]
      }
    }
  ]
}