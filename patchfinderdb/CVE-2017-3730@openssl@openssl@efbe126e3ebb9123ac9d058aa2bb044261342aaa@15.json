{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6d1584aebae9e6f34b80fef4fb147c298cc723d2",
      "candidate_info": {
        "commit_hash": "6d1584aebae9e6f34b80fef4fb147c298cc723d2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6d1584aebae9e6f34b80fef4fb147c298cc723d2",
        "files": [
          "crypto/ct/ct_policy.c"
        ],
        "message": "Don't check for time() failing in CT_POLICY_EVAL_CTX_new\n\nSee https://github.com/openssl/openssl/pull/1554#issuecomment-246354677.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit f0f535e92b096db4a308ecc49ba7f0fd3f0f7945)",
        "before_after_code_files": [
          "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c": [
          "File: crypto/ct/ct_policy.c -> crypto/ct/ct_policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: CT_POLICY_EVAL_CTX *CT_POLICY_EVAL_CTX_new(void)",
          "21: {",
          "22:     CT_POLICY_EVAL_CTX *ctx = OPENSSL_zalloc(sizeof(CT_POLICY_EVAL_CTX));",
          "25:     if (ctx == NULL) {",
          "26:         CTerr(CT_F_CT_POLICY_EVAL_CTX_NEW, ERR_R_MALLOC_FAILURE);",
          "27:         return NULL;",
          "28:     }",
          "35:     return ctx;",
          "36: }",
          "",
          "[Removed Lines]",
          "23:     time_t epoch_time_in_s;",
          "31:     time(&epoch_time_in_s);",
          "32:     if (epoch_time_in_s != -1)",
          "33:         ctx->epoch_time_in_ms = epoch_time_in_s * 1000;",
          "",
          "[Added Lines]",
          "30:     ctx->epoch_time_in_ms = time(NULL) * 1000;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5edd178ca6895fd0e263eacef83e48e374669e5",
      "candidate_info": {
        "commit_hash": "b5edd178ca6895fd0e263eacef83e48e374669e5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b5edd178ca6895fd0e263eacef83e48e374669e5",
        "files": [
          "Configurations/descrip.mms.tmpl",
          "Configurations/unix-Makefile.tmpl",
          "Configurations/windows-makefile.tmpl"
        ],
        "message": "Use the registered conf file names as dependencies to build configdata.pm\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(cherry picked from commit dc660c70b52c552aa4eb9659963bfbe6ab18bec0)",
        "before_after_code_files": [
          "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl",
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl",
          "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl": [
          "File: Configurations/descrip.mms.tmpl -> Configurations/descrip.mms.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "509: # Building targets ###################################################",
          "512:         @ WRITE SYS$OUTPUT \"Reconfiguring...\"",
          "513:         perl $(SRCDIR)Configure reconf",
          "514:         @ WRITE SYS$OUTPUT \"*************************************************\"",
          "",
          "[Removed Lines]",
          "511: configdata.pm : {- join(\" \", sourcefile(\"Configurations\", \"descrip.mms.tmpl\"), sourcefile(\"Configurations\", \"common.tmpl\")) -} $(SRCDIR)Configure $(SRCDIR)config.com {- join(\" \", @{$config{build_infos}}) -}",
          "",
          "[Added Lines]",
          "511: configdata.pm : {- join(\" \", sourcefile(\"Configurations\", \"descrip.mms.tmpl\"), sourcefile(\"Configurations\", \"common.tmpl\")) -} $(SRCDIR)Configure $(SRCDIR)config.com {- join(\" \", @{$config{build_infos}}, @{$config{conf_files}}) -}",
          "",
          "---------------"
        ],
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "827:      echo 'Version: '$(VERSION); \\",
          "828:      echo 'Requires: libssl libcrypto' ) > openssl.pc",
          "831:  @echo \"Detected changed: $?\"",
          "832:  @echo \"Reconfiguring...\"",
          "833:  $(SRCDIR)/Configure reconf",
          "",
          "[Removed Lines]",
          "830: configdata.pm: {- $config{build_file_template} -} $(SRCDIR)/Configurations/common.tmpl $(SRCDIR)/Configure $(SRCDIR)/config {- join(\" \", @{$config{build_infos}}) -}",
          "",
          "[Added Lines]",
          "830: configdata.pm: {- $config{build_file_template} -} $(SRCDIR)/Configurations/common.tmpl $(SRCDIR)/Configure $(SRCDIR)/config {- join(\" \", @{$config{build_infos}}, @{$config{conf_files}}) -}",
          "",
          "---------------"
        ],
        "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl": [
          "File: Configurations/windows-makefile.tmpl -> Configurations/windows-makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "323: # Building targets ###################################################",
          "326:  @echo \"Detected changed: $?\"",
          "327:  @echo \"Reconfiguring...\"",
          "328:  \"$(PERL)\" \"$(SRCDIR)\\Configure\" reconf",
          "",
          "[Removed Lines]",
          "325: configdata.pm: \"{- $config{build_file_template} -}\" \"$(SRCDIR)\\Configurations\\common.tmpl\" \"$(SRCDIR)\\Configure\" {- join(\" \", map { '\"'.$_.'\"' } @{$config{build_infos}}) -}",
          "",
          "[Added Lines]",
          "325: configdata.pm: \"{- $config{build_file_template} -}\" \"$(SRCDIR)\\Configurations\\common.tmpl\" \"$(SRCDIR)\\Configure\" {- join(\" \", map { '\"'.$_.'\"' } @{$config{build_infos}}, @{$config{conf_files}}) -}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cccaf5d60b5ac37c7c300199a88a46edf6fe3fb5",
      "candidate_info": {
        "commit_hash": "cccaf5d60b5ac37c7c300199a88a46edf6fe3fb5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/cccaf5d60b5ac37c7c300199a88a46edf6fe3fb5",
        "files": [
          "test/handshake_helper.c",
          "test/recipes/80-test_ssl_new.t",
          "test/ssl-tests/17-renegotiate.conf",
          "test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl_test_ctx.h"
        ],
        "message": "Add support for testing renegotiation\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit e42c4544c88046a01c53a81aeb9d48685d708cf9)",
        "before_after_code_files": [
          "test/handshake_helper.c||test/handshake_helper.c",
          "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t",
          "test/ssl-tests/17-renegotiate.conf||test/ssl-tests/17-renegotiate.conf",
          "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in",
          "test/ssl_test_ctx.h||test/ssl_test_ctx.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/handshake_helper.c||test/handshake_helper.c": [
          "File: test/handshake_helper.c -> test/handshake_helper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "583:     }",
          "584: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "586: static void do_reneg_setup_step(PEER *peer)",
          "587: {",
          "588:     int ret;",
          "589:     char buf;",
          "591:     TEST_check(peer->status == PEER_RETRY);",
          "594:     if (!SSL_is_server(peer->ssl)) {",
          "595:         ret = SSL_renegotiate(peer->ssl);",
          "596:         if (!ret) {",
          "597:             peer->status = PEER_ERROR;",
          "598:             return;",
          "599:         }",
          "600:         do_handshake_step(peer);",
          "607:         if (peer->status == PEER_RETRY)",
          "608:             peer->status = PEER_SUCCESS;",
          "609:         return;",
          "610:     }",
          "617:     ret = SSL_read(peer->ssl, &buf, sizeof(buf));",
          "618:     if (ret >= 0) {",
          "620:         peer->status = PEER_ERROR;",
          "621:         return;",
          "622:     } else {",
          "623:         int error = SSL_get_error(peer->ssl, ret);",
          "624:         if (error != SSL_ERROR_WANT_READ || !SSL_in_init(peer->ssl)) {",
          "625:             peer->status = PEER_ERROR;",
          "626:             return;",
          "627:         }",
          "628:     }",
          "630:     peer->status = PEER_SUCCESS;",
          "631: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "618: typedef enum {",
          "619:     HANDSHAKE,",
          "620:     APPLICATION_DATA,",
          "621:     SHUTDOWN,",
          "622:     CONNECTION_DONE",
          "623: } connect_phase_t;",
          "626: {",
          "627:     switch (phase) {",
          "628:     case HANDSHAKE:",
          "629:         return APPLICATION_DATA;",
          "630:     case APPLICATION_DATA:",
          "631:         return SHUTDOWN;",
          "",
          "[Removed Lines]",
          "625: static connect_phase_t next_phase(connect_phase_t phase)",
          "",
          "[Added Lines]",
          "668:     RENEG_APPLICATION_DATA,",
          "669:     RENEG_SETUP,",
          "670:     RENEG_HANDSHAKE,",
          "676: static connect_phase_t next_phase(const SSL_TEST_CTX *test_ctx,",
          "677:                                   connect_phase_t phase)",
          "681:         if (test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEGOTIATE)",
          "682:             return RENEG_APPLICATION_DATA;",
          "683:         return APPLICATION_DATA;",
          "684:     case RENEG_APPLICATION_DATA:",
          "685:         return RENEG_SETUP;",
          "686:     case RENEG_SETUP:",
          "687:         return RENEG_HANDSHAKE;",
          "688:     case RENEG_HANDSHAKE:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "642:     case HANDSHAKE:",
          "643:         do_handshake_step(peer);",
          "644:         break;",
          "645:     case APPLICATION_DATA:",
          "646:         do_app_data_step(peer);",
          "647:         break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "705:     case RENEG_APPLICATION_DATA:",
          "706:         do_app_data_step(peer);",
          "707:         break;",
          "708:     case RENEG_SETUP:",
          "709:         do_reneg_setup_step(peer);",
          "710:         break;",
          "711:     case RENEG_HANDSHAKE:",
          "712:         do_handshake_step(peer);",
          "713:         break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "855:         switch (status) {",
          "856:         case HANDSHAKE_SUCCESS:",
          "858:             if (phase == CONNECTION_DONE) {",
          "859:                 ret->result = SSL_TEST_SUCCESS;",
          "860:                 goto err;",
          "",
          "[Removed Lines]",
          "857:             phase = next_phase(phase);",
          "",
          "[Added Lines]",
          "926:             phase = next_phase(test_ctx, phase);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "942:     result = do_handshake_internal(server_ctx, server2_ctx, client_ctx,",
          "943:                                    test_ctx, &test_ctx->extra,",
          "944:                                    NULL, &session);",
          "946:         goto end;",
          "950:     if (result->result != SSL_TEST_SUCCESS) {",
          "951:         result->result = SSL_TEST_FIRST_HANDSHAKE_FAILED;",
          "952:         goto end;",
          "",
          "[Removed Lines]",
          "945:     if (test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_SIMPLE)",
          "948:     TEST_check(test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RESUME);",
          "",
          "[Added Lines]",
          "1014:     if (test_ctx->handshake_mode != SSL_TEST_HANDSHAKE_RESUME)",
          "",
          "---------------"
        ],
        "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t": [
          "File: test/recipes/80-test_ssl_new.t -> test/recipes/80-test_ssl_new.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: # We hard-code the number of tests to double-check that the globbing above",
          "31: # finds all files as expected.",
          "34: # Some test results depend on the configuration of enabled protocols. We only",
          "35: # verify generated sources in the default configuration.",
          "",
          "[Removed Lines]",
          "32: plan tests => 16;  # = scalar @conf_srcs",
          "",
          "[Added Lines]",
          "32: plan tests => 17;  # = scalar @conf_srcs",
          "",
          "---------------"
        ],
        "test/ssl-tests/17-renegotiate.conf||test/ssl-tests/17-renegotiate.conf": [
          "File: test/ssl-tests/17-renegotiate.conf -> test/ssl-tests/17-renegotiate.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Generated with generate_ssl_tests.pl",
          "3: num_tests = 1",
          "5: test-0 = 0-renegotiate",
          "6: # ===========================================================",
          "8: [0-renegotiate]",
          "9: ssl_conf = 0-renegotiate-ssl",
          "11: [0-renegotiate-ssl]",
          "12: server = 0-renegotiate-server",
          "13: client = 0-renegotiate-client",
          "15: [0-renegotiate-server]",
          "16: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "17: CipherString = DEFAULT",
          "18: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "20: [0-renegotiate-client]",
          "21: CipherString = DEFAULT",
          "22: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "23: VerifyMode = Peer",
          "25: [test-0]",
          "26: ExpectedResult = Success",
          "27: HandshakeMode = Renegotiate",
          "28: Method = TLS",
          "",
          "---------------"
        ],
        "test/ssl-tests/17-renegotiate.conf.in||test/ssl-tests/17-renegotiate.conf.in": [
          "File: test/ssl-tests/17-renegotiate.conf.in -> test/ssl-tests/17-renegotiate.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # -*- mode: perl; -*-",
          "2: # Copyright 2016-2016 The OpenSSL Project Authors. All Rights Reserved.",
          "3: #",
          "4: # Licensed under the OpenSSL license (the \"License\").  You may not use",
          "5: # this file except in compliance with the License.  You can obtain a copy",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "10: ## Test Renegotiation",
          "12: use strict;",
          "13: use warnings;",
          "15: package ssltests;",
          "18: our @tests = (",
          "19:     {",
          "20:         name => \"renegotiate\",",
          "21:         server => {},",
          "22:         client => {},",
          "23:         test => {",
          "24:             \"Method\" => \"TLS\",",
          "25:             \"HandshakeMode\" => \"Renegotiate\",",
          "26:             \"ExpectedResult\" => \"Success\"",
          "27:         }",
          "28:     },",
          "29: );",
          "",
          "---------------"
        ],
        "test/ssl_test_ctx.h||test/ssl_test_ctx.h": [
          "File: test/ssl_test_ctx.h -> test/ssl_test_ctx.h"
        ]
      }
    },
    {
      "candidate_hash": "bc931874e97db89284175e11761cee777b29928d",
      "candidate_info": {
        "commit_hash": "bc931874e97db89284175e11761cee777b29928d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bc931874e97db89284175e11761cee777b29928d",
        "files": [
          "ssl/ssl_asn1.c"
        ],
        "message": "Fix i2d_SSL_SESSION pp output parameter should point to end of asn1 data.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2607)\n(cherry picked from commit a0179d0afb621a0875ddcfd939719a9628ac4444)",
        "before_after_code_files": [
          "ssl/ssl_asn1.c||ssl/ssl_asn1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_asn1.c||ssl/ssl_asn1.c": [
          "File: ssl/ssl_asn1.c -> ssl/ssl_asn1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:         goto err;",
          "279:     }",
          "284:     ret->cipher = NULL;",
          "285:     ret->cipher_id = id;",
          "",
          "[Removed Lines]",
          "281:     p = as->cipher->data;",
          "282:     id = 0x03000000L | ((unsigned long)p[0] << 8L) | (unsigned long)p[1];",
          "",
          "[Added Lines]",
          "281:     id = 0x03000000L | ((unsigned long)as->cipher->data[0] << 8L)",
          "282:                      | (unsigned long)as->cipher->data[1];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25a127bde9ec5022125158bba82e86b02afa76b1",
      "candidate_info": {
        "commit_hash": "25a127bde9ec5022125158bba82e86b02afa76b1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/25a127bde9ec5022125158bba82e86b02afa76b1",
        "files": [
          "test/srptest.c"
        ],
        "message": "Add SRP test vectors from RFC5054\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 198d805900b183943a1ced0f5a230d55c8493a04)",
        "before_after_code_files": [
          "test/srptest.c||test/srptest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/srptest.c||test/srptest.c": [
          "File: test/srptest.c -> test/srptest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:     return ret;",
          "131: }",
          "133: int main(int argc, char **argv)",
          "134: {",
          "135:     BIO *bio_err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133: static int check_bn(const char *name, const BIGNUM *bn, const char *hexbn)",
          "134: {",
          "135:     BIGNUM *tmp = NULL;",
          "136:     int rv;",
          "137:     if (BN_hex2bn(&tmp, hexbn) == 0)",
          "138:         return 0;",
          "139:     rv = BN_cmp(bn, tmp);",
          "140:     if (rv == 0) {",
          "141:         printf(\"%s = \", name);",
          "142:         BN_print_fp(stdout, bn);",
          "143:         printf(\"\\n\");",
          "144:         BN_free(tmp);",
          "145:         return 1;",
          "146:     }",
          "147:     printf(\"Unexpected %s value\\n\", name);",
          "148:     printf(\"Expecting: \");",
          "149:     BN_print_fp(stdout, tmp);",
          "150:     printf(\"\\nReceived: \");",
          "151:     BN_print_fp(stdout, bn);",
          "152:     printf(\"\\n\");",
          "153:     BN_free(tmp);",
          "154:     return 0;",
          "155: }",
          "158: static int run_srp_kat(void)",
          "159: {",
          "160:     int ret = 0;",
          "161:     BIGNUM *s = NULL;",
          "162:     BIGNUM *v = NULL;",
          "163:     BIGNUM *a = NULL;",
          "164:     BIGNUM *b = NULL;",
          "165:     BIGNUM *u = NULL;",
          "166:     BIGNUM *x = NULL;",
          "167:     BIGNUM *Apub = NULL;",
          "168:     BIGNUM *Bpub = NULL;",
          "169:     BIGNUM *Kclient = NULL;",
          "170:     BIGNUM *Kserver = NULL;",
          "172:     const SRP_gN *GN = SRP_get_default_gN(\"1024\");",
          "174:     if (GN == NULL) {",
          "175:         fprintf(stderr, \"Failed to get SRP parameters\\n\");",
          "176:         goto err;",
          "177:     }",
          "178:     BN_hex2bn(&s, \"BEB25379D1A8581EB5A727673A2441EE\");",
          "180:     if (!SRP_create_verifier_BN(\"alice\", \"password123\", &s, &v, GN->N,",
          "181:                                 GN->g)) {",
          "182:         fprintf(stderr, \"Failed to create SRP verifier\\n\");",
          "183:         goto err;",
          "184:     }",
          "186:     if (!check_bn(\"v\", v,",
          "187:                  \"7E273DE8696FFC4F4E337D05B4B375BEB0DDE1569E8FA00A9886D812\"",
          "188:                  \"9BADA1F1822223CA1A605B530E379BA4729FDC59F105B4787E5186F5\"",
          "189:                  \"C671085A1447B52A48CF1970B4FB6F8400BBF4CEBFBB168152E08AB5\"",
          "190:                  \"EA53D15C1AFF87B2B9DA6E04E058AD51CC72BFC9033B564E26480D78\"",
          "191:                  \"E955A5E29E7AB245DB2BE315E2099AFB\"))",
          "192:         goto err;",
          "195:     BN_hex2bn(&b, \"E487CB59D31AC550471E81F00F6928E01DDA08E974A004F49E61F5D1\"",
          "196:                   \"05284D20\");",
          "199:     Bpub = SRP_Calc_B(b, GN->N, GN->g, v);",
          "201:     if (!SRP_Verify_B_mod_N(Bpub, GN->N)) {",
          "202:         fprintf(stderr, \"Invalid B\\n\");",
          "203:         goto err;",
          "204:     }",
          "206:     if (!check_bn(\"B\", Bpub,",
          "207:                   \"BD0C61512C692C0CB6D041FA01BB152D4916A1E77AF46AE105393011\"",
          "208:                   \"BAF38964DC46A0670DD125B95A981652236F99D9B681CBF87837EC99\"",
          "209:                   \"6C6DA04453728610D0C6DDB58B318885D7D82C7F8DEB75CE7BD4FBAA\"",
          "210:                   \"37089E6F9C6059F388838E7A00030B331EB76840910440B1B27AAEAE\"",
          "211:                   \"EB4012B7D7665238A8E3FB004B117B58\"))",
          "212:         goto err;",
          "215:     BN_hex2bn(&a, \"60975527035CF2AD1989806F0407210BC81EDC04E2762A56AFD529DD\"",
          "216:                   \"DA2D4393\");",
          "219:     Apub = SRP_Calc_A(a, GN->N, GN->g);",
          "221:     if (!SRP_Verify_A_mod_N(Apub, GN->N)) {",
          "222:         fprintf(stderr, \"Invalid A\\n\");",
          "223:         return -1;",
          "224:     }",
          "226:     if (!check_bn(\"A\", Apub,",
          "227:                   \"61D5E490F6F1B79547B0704C436F523DD0E560F0C64115BB72557EC4\"",
          "228:                   \"4352E8903211C04692272D8B2D1A5358A2CF1B6E0BFCF99F921530EC\"",
          "229:                   \"8E39356179EAE45E42BA92AEACED825171E1E8B9AF6D9C03E1327F44\"",
          "230:                   \"BE087EF06530E69F66615261EEF54073CA11CF5858F0EDFDFE15EFEA\"",
          "231:                   \"B349EF5D76988A3672FAC47B0769447B\"))",
          "232:         goto err;",
          "235:     u = SRP_Calc_u(Apub, Bpub, GN->N);",
          "237:     if (!check_bn(\"u\", u, \"CE38B9593487DA98554ED47D70A7AE5F462EF019\"))",
          "238:         goto err;",
          "241:     x = SRP_Calc_x(s, \"alice\", \"password123\");",
          "242:     Kclient = SRP_Calc_client_key(GN->N, Bpub, GN->g, x, a, u);",
          "243:     if (!check_bn(\"Client's key\", Kclient,",
          "244:                   \"B0DC82BABCF30674AE450C0287745E7990A3381F63B387AAF271A10D\"",
          "245:                   \"233861E359B48220F7C4693C9AE12B0A6F67809F0876E2D013800D6C\"",
          "246:                   \"41BB59B6D5979B5C00A172B4A2A5903A0BDCAF8A709585EB2AFAFA8F\"",
          "247:                   \"3499B200210DCC1F10EB33943CD67FC88A2F39A4BE5BEC4EC0A3212D\"",
          "248:                   \"C346D7E474B29EDE8A469FFECA686E5A\"))",
          "249:         goto err;",
          "251:     Kserver = SRP_Calc_server_key(Apub, v, u, b, GN->N);",
          "252:     if (!check_bn(\"Server's key\", Kserver,",
          "253:                   \"B0DC82BABCF30674AE450C0287745E7990A3381F63B387AAF271A10D\"",
          "254:                   \"233861E359B48220F7C4693C9AE12B0A6F67809F0876E2D013800D6C\"",
          "255:                   \"41BB59B6D5979B5C00A172B4A2A5903A0BDCAF8A709585EB2AFAFA8F\"",
          "256:                   \"3499B200210DCC1F10EB33943CD67FC88A2F39A4BE5BEC4EC0A3212D\"",
          "257:                   \"C346D7E474B29EDE8A469FFECA686E5A\"))",
          "258:         goto err;",
          "260:     ret = 1;",
          "262:     err:",
          "263:     BN_clear_free(Kclient);",
          "264:     BN_clear_free(Kserver);",
          "265:     BN_clear_free(x);",
          "266:     BN_free(u);",
          "267:     BN_free(Apub);",
          "268:     BN_clear_free(a);",
          "269:     BN_free(Bpub);",
          "270:     BN_clear_free(b);",
          "271:     BN_free(s);",
          "272:     BN_clear_free(v);",
          "274:     return ret;",
          "275: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "151:         return 1;",
          "152:     }",
          "154: #ifndef OPENSSL_NO_CRYPTO_MDEBUG",
          "155:     if (CRYPTO_mem_leaks(bio_err) <= 0)",
          "156:         return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "299:     if (run_srp_kat() != 1) {",
          "300:         fprintf(stderr, \"SRP KAT failed\\n\");",
          "301:         return 1;",
          "302:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}