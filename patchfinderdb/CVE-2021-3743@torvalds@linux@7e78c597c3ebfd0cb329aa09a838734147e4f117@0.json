{
  "cve_id": "CVE-2021-3743",
  "cve_desc": "An out-of-bounds (OOB) memory read flaw was found in the Qualcomm IPC router protocol in the Linux kernel. A missing sanity check allows a local attacker to gain access to out-of-bounds memory, leading to a system crash or a leak of internal kernel information. The highest threat from this vulnerability is to system availability.",
  "repo": "torvalds/linux",
  "patch_hash": "7e78c597c3ebfd0cb329aa09a838734147e4f117",
  "patch_info": {
    "commit_hash": "7e78c597c3ebfd0cb329aa09a838734147e4f117",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/7e78c597c3ebfd0cb329aa09a838734147e4f117",
    "files": [
      "net/qrtr/qrtr.c"
    ],
    "message": "net: qrtr: fix another OOB Read in qrtr_endpoint_post\n\nThis check was incomplete, did not consider size is 0:\n\n\tif (len != ALIGN(size, 4) + hdrlen)\n                    goto err;\n\nif size from qrtr_hdr is 0, the result of ALIGN(size, 4)\nwill be 0, In case of len == hdrlen and size == 0\nin header this check won't fail and\n\n\tif (cb->type == QRTR_TYPE_NEW_SERVER) {\n                /* Remote node endpoint can bridge other distant nodes */\n                const struct qrtr_ctrl_pkt *pkt = data + hdrlen;\n\n                qrtr_node_assign(node, le32_to_cpu(pkt->server.node));\n        }\n\nwill also read out of bound from data, which is hdrlen allocated block.\n\nFixes: 194ccc88297a (\"net: qrtr: Support decoding incoming v2 packets\")\nFixes: ad9d24c9429e (\"net: qrtr: fix OOB Read in qrtr_endpoint_post\")\nSigned-off-by: Xiaolong Huang <butterflyhuangxx@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/qrtr/qrtr.c||net/qrtr/qrtr.c"
    ]
  },
  "patch_diff": {
    "net/qrtr/qrtr.c||net/qrtr/qrtr.c": [
      "File: net/qrtr/qrtr.c -> net/qrtr/qrtr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:   goto err;",
      "494:  }",
      "497:   goto err;",
      "499:  if (cb->dst_port != QRTR_PORT_CTRL && cb->type != QRTR_TYPE_DATA &&",
      "",
      "[Removed Lines]",
      "496:  if (len != ALIGN(size, 4) + hdrlen)",
      "",
      "[Added Lines]",
      "496:  if (!size || len != ALIGN(size, 4) + hdrlen)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d2cabd2dc8da78faf9b690ea521d03776686c9fe",
      "candidate_info": {
        "commit_hash": "d2cabd2dc8da78faf9b690ea521d03776686c9fe",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d2cabd2dc8da78faf9b690ea521d03776686c9fe",
        "files": [
          "net/qrtr/qrtr.c"
        ],
        "message": "net: qrtr: revert check in qrtr_endpoint_post()\n\nI tried to make this check stricter as a hardenning measure but it broke\naudo and wifi on these devices so revert it.\n\nFixes: aaa8e4922c88 (\"net: qrtr: make checks in qrtr_endpoint_post() stricter\")\nReported-by: John Stultz <john.stultz@linaro.org>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nTested-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "net/qrtr/qrtr.c||net/qrtr/qrtr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/qrtr/qrtr.c||net/qrtr/qrtr.c"
          ],
          "candidate": [
            "net/qrtr/qrtr.c||net/qrtr/qrtr.c"
          ]
        }
      },
      "candidate_diff": {
        "net/qrtr/qrtr.c||net/qrtr/qrtr.c": [
          "File: net/qrtr/qrtr.c -> net/qrtr/qrtr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "493:   goto err;",
          "494:  }",
          "497:   goto err;",
          "499:  if (cb->dst_port != QRTR_PORT_CTRL && cb->type != QRTR_TYPE_DATA &&",
          "",
          "[Removed Lines]",
          "496:  if (!size || size & 3 || len != size + hdrlen)",
          "",
          "[Added Lines]",
          "496:  if (!size || len != ALIGN(size, 4) + hdrlen)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aaa8e4922c887ff47ad66ef918193682bccc1905",
      "candidate_info": {
        "commit_hash": "aaa8e4922c887ff47ad66ef918193682bccc1905",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/aaa8e4922c887ff47ad66ef918193682bccc1905",
        "files": [
          "net/qrtr/qrtr.c"
        ],
        "message": "net: qrtr: make checks in qrtr_endpoint_post() stricter\n\nThese checks are still not strict enough.  The main problem is that if\n\"cb->type == QRTR_TYPE_NEW_SERVER\" is true then \"len - hdrlen\" is\nguaranteed to be 4 but we need to be at least 16 bytes.  In fact, we\ncan reject everything smaller than sizeof(*pkt) which is 20 bytes.\n\nAlso I don't like the ALIGN(size, 4).  It's better to just insist that\ndata is needs to be aligned at the start.\n\nFixes: 0baa99ee353c (\"net: qrtr: Allow non-immediate node routing\")\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "net/qrtr/qrtr.c||net/qrtr/qrtr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/qrtr/qrtr.c||net/qrtr/qrtr.c"
          ],
          "candidate": [
            "net/qrtr/qrtr.c||net/qrtr/qrtr.c"
          ]
        }
      },
      "candidate_diff": {
        "net/qrtr/qrtr.c||net/qrtr/qrtr.c": [
          "File: net/qrtr/qrtr.c -> net/qrtr/qrtr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "493:   goto err;",
          "494:  }",
          "497:   goto err;",
          "499:  if (cb->dst_port != QRTR_PORT_CTRL && cb->type != QRTR_TYPE_DATA &&",
          "",
          "[Removed Lines]",
          "496:  if (!size || len != ALIGN(size, 4) + hdrlen)",
          "",
          "[Added Lines]",
          "496:  if (!size || size & 3 || len != size + hdrlen)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "507:  if (cb->type == QRTR_TYPE_NEW_SERVER) {",
          "511:   qrtr_node_assign(node, le32_to_cpu(pkt->server.node));",
          "512:  }",
          "",
          "[Removed Lines]",
          "509:   const struct qrtr_ctrl_pkt *pkt = data + hdrlen;",
          "",
          "[Added Lines]",
          "509:   const struct qrtr_ctrl_pkt *pkt;",
          "511:   if (size < sizeof(*pkt))",
          "512:    goto err;",
          "514:   pkt = data + hdrlen;",
          "",
          "---------------"
        ]
      }
    }
  ]
}