{
  "cve_id": "CVE-2014-4342",
  "cve_desc": "MIT Kerberos 5 (aka krb5) 1.7.x through 1.12.x before 1.12.2 allows remote attackers to cause a denial of service (buffer over-read or NULL pointer dereference, and application crash) by injecting invalid tokens into a GSSAPI application session.",
  "repo": "krb5/krb5",
  "patch_hash": "e6ae703ae597d798e310368d52b8f38ee11c6a73",
  "patch_info": {
    "commit_hash": "e6ae703ae597d798e310368d52b8f38ee11c6a73",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/e6ae703ae597d798e310368d52b8f38ee11c6a73",
    "files": [
      "src/lib/gssapi/krb5/k5unseal.c",
      "src/lib/gssapi/krb5/k5unsealiov.c"
    ],
    "message": "Handle invalid RFC 1964 tokens [CVE-2014-4341...]\n\nDetect the following cases which would otherwise cause invalid memory\naccesses and/or integer underflow:\n\n* An RFC 1964 token being processed by an RFC 4121-only context\n  [CVE-2014-4342]\n\n* A header with fewer than 22 bytes after the token ID or an\n  incomplete checksum [CVE-2014-4341 CVE-2014-4342]\n\n* A ciphertext shorter than the confounder [CVE-2014-4341]\n\n* A declared padding length longer than the plaintext [CVE-2014-4341]\n\nIf we detect a bad pad byte, continue on to compute the checksum to\navoid creating a padding oracle, but treat the checksum as invalid\neven if it compares equal.\n\nCVE-2014-4341:\n\nIn MIT krb5, an unauthenticated remote attacker with the ability to\ninject packets into a legitimately established GSSAPI application\nsession can cause a program crash due to invalid memory references\nwhen attempting to read beyond the end of a buffer.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C\n\nCVE-2014-4342:\n\nIn MIT krb5 releases krb5-1.7 and later, an unauthenticated remote\nattacker with the ability to inject packets into a legitimately\nestablished GSSAPI application session can cause a program crash due\nto invalid memory references when reading beyond the end of a buffer\nor by causing a null pointer dereference.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C\n\n[tlyu@mit.edu: CVE summaries, CVSS]\n\n(cherry picked from commit fb99962cbd063ac04c9a9d2cc7c75eab73f3533d)\n\nticket: 7949\nversion_fixed: 1.12.2\nstatus: resolved",
    "before_after_code_files": [
      "src/lib/gssapi/krb5/k5unseal.c||src/lib/gssapi/krb5/k5unseal.c",
      "src/lib/gssapi/krb5/k5unsealiov.c||src/lib/gssapi/krb5/k5unsealiov.c"
    ]
  },
  "patch_diff": {
    "src/lib/gssapi/krb5/k5unseal.c||src/lib/gssapi/krb5/k5unseal.c": [
      "File: src/lib/gssapi/krb5/k5unseal.c -> src/lib/gssapi/krb5/k5unseal.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "74:     int conflen = 0;",
      "75:     int signalg;",
      "76:     int sealalg;",
      "77:     gss_buffer_desc token;",
      "78:     krb5_checksum cksum;",
      "79:     krb5_checksum md5cksum;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "77:     int bad_pad = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "86:     krb5_ui_4 seqnum;",
      "87:     OM_uint32 retval;",
      "88:     size_t sumlen;",
      "89:     krb5_keyusage sign_usage = KG_USAGE_SIGN;",
      "91:     if (toktype == KG_TOK_SEAL_MSG) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "90:     size_t padlen;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "93:         message_buffer->value = NULL;",
      "94:     }",
      "105:         return GSS_S_DEFECTIVE_TOKEN;",
      "106:     }",
      "108:     if ((toktype != KG_TOK_SEAL_MSG) &&",
      "109:         (sealalg != 0xffff)) {",
      "",
      "[Removed Lines]",
      "98:     signalg = ptr[0] + (ptr[1]<<8);",
      "99:     sealalg = ptr[2] + (ptr[3]<<8);",
      "103:     if ((ptr[4] != 0xff) || (ptr[5] != 0xff)) {",
      "",
      "[Added Lines]",
      "100:     if (ctx->seq == NULL) {",
      "104:         return GSS_S_DEFECTIVE_TOKEN;",
      "105:     }",
      "107:     if ((bodysize < 22) || (ptr[4] != 0xff) || (ptr[5] != 0xff)) {",
      "112:     signalg = ptr[0] + (ptr[1]<<8);",
      "113:     sealalg = ptr[2] + (ptr[3]<<8);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "153:         return GSS_S_DEFECTIVE_TOKEN;",
      "154:     }",
      "158:     if ((code = kg_get_seq_num(context, ctx->seq, ptr+14, ptr+6, &direction,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "163:     if ((size_t)bodysize < 14 + cksum_len) {",
      "165:         return GSS_S_DEFECTIVE_TOKEN;",
      "166:     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "207:         plainlen = tmsglen;",
      "209:         conflen = kg_confounder_size(context, ctx->enc->keyblock.enctype);",
      "212:         if (token.length) {",
      "213:             if ((token.value = (void *) gssalloc_malloc(token.length)) == NULL) {",
      "",
      "[Removed Lines]",
      "210:         token.length = tmsglen - conflen - plain[tmsglen-1];",
      "",
      "[Added Lines]",
      "222:         if (tmsglen < conflen) {",
      "223:             if (sealalg != 0xffff)",
      "224:                 xfree(plain);",
      "226:             return(GSS_S_DEFECTIVE_TOKEN);",
      "227:         }",
      "228:         padlen = plain[tmsglen - 1];",
      "229:         if (tmsglen - conflen < padlen) {",
      "232:             padlen = 0;",
      "233:             bad_pad = 1;",
      "234:         }",
      "235:         token.length = tmsglen - conflen - padlen;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "407:         if (toktype == KG_TOK_SEAL_MSG)",
      "408:             gssalloc_free(token.value);",
      "",
      "[Removed Lines]",
      "406:     if (code) {",
      "",
      "[Added Lines]",
      "431:     if (code || bad_pad) {",
      "",
      "---------------"
    ],
    "src/lib/gssapi/krb5/k5unsealiov.c||src/lib/gssapi/krb5/k5unsealiov.c": [
      "File: src/lib/gssapi/krb5/k5unsealiov.c -> src/lib/gssapi/krb5/k5unsealiov.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "69:         return GSS_S_DEFECTIVE_TOKEN;",
      "70:     }",
      "74:         return GSS_S_DEFECTIVE_TOKEN;",
      "75:     }",
      "",
      "[Removed Lines]",
      "72:     if (header->buffer.length < token_wrapper_len + 14) {",
      "",
      "[Added Lines]",
      "72:     if (ctx->seq == NULL) {",
      "76:         return GSS_S_DEFECTIVE_TOKEN;",
      "77:     }",
      "79:     if (header->buffer.length < token_wrapper_len + 22) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8a9a2d09c93b55ad0dbdd16ae36e952a04f27466",
      "candidate_info": {
        "commit_hash": "8a9a2d09c93b55ad0dbdd16ae36e952a04f27466",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/8a9a2d09c93b55ad0dbdd16ae36e952a04f27466",
        "files": [
          "src/lib/gssapi/krb5/k5unseal.c",
          "src/lib/gssapi/krb5/k5unsealiov.c"
        ],
        "message": "Handle invalid RFC 1964 tokens [CVE-2014-4341...]\n\nDetect the following cases which would otherwise cause invalid memory\naccesses and/or integer underflow:\n\n* An RFC 1964 token being processed by an RFC 4121-only context\n  [CVE-2014-4342]\n\n* A header with fewer than 22 bytes after the token ID or an\n  incomplete checksum [CVE-2014-4341 CVE-2014-4342]\n\n* A ciphertext shorter than the confounder [CVE-2014-4341]\n\n* A declared padding length longer than the plaintext [CVE-2014-4341]\n\nIf we detect a bad pad byte, continue on to compute the checksum to\navoid creating a padding oracle, but treat the checksum as invalid\neven if it compares equal.\n\nCVE-2014-4341:\n\nIn MIT krb5, an unauthenticated remote attacker with the ability to\ninject packets into a legitimately established GSSAPI application\nsession can cause a program crash due to invalid memory references\nwhen attempting to read beyond the end of a buffer.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C\n\nCVE-2014-4342:\n\nIn MIT krb5 releases krb5-1.7 and later, an unauthenticated remote\nattacker with the ability to inject packets into a legitimately\nestablished GSSAPI application session can cause a program crash due\nto invalid memory references when reading beyond the end of a buffer\nor by causing a null pointer dereference.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C\n\n[tlyu@mit.edu: CVE summaries, CVSS]\n\n(cherry picked from commit fb99962cbd063ac04c9a9d2cc7c75eab73f3533d)\n\nticket: 8108 (new)\nsubject: Handle invalid RFC 1964 tokens [CVE-2014-4341 CVE-2014-4342]\nversion_fixed: 1.11.6\nstatus: resolved",
        "before_after_code_files": [
          "src/lib/gssapi/krb5/k5unseal.c||src/lib/gssapi/krb5/k5unseal.c",
          "src/lib/gssapi/krb5/k5unsealiov.c||src/lib/gssapi/krb5/k5unsealiov.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/gssapi/krb5/k5unseal.c||src/lib/gssapi/krb5/k5unseal.c",
            "src/lib/gssapi/krb5/k5unsealiov.c||src/lib/gssapi/krb5/k5unsealiov.c"
          ],
          "candidate": [
            "src/lib/gssapi/krb5/k5unseal.c||src/lib/gssapi/krb5/k5unseal.c",
            "src/lib/gssapi/krb5/k5unsealiov.c||src/lib/gssapi/krb5/k5unsealiov.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/gssapi/krb5/k5unseal.c||src/lib/gssapi/krb5/k5unseal.c": [
          "File: src/lib/gssapi/krb5/k5unseal.c -> src/lib/gssapi/krb5/k5unseal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     int conflen = 0;",
          "75:     int signalg;",
          "76:     int sealalg;",
          "77:     gss_buffer_desc token;",
          "78:     krb5_checksum cksum;",
          "79:     krb5_checksum md5cksum;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     int bad_pad = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:     krb5_ui_4 seqnum;",
          "87:     OM_uint32 retval;",
          "88:     size_t sumlen;",
          "89:     krb5_keyusage sign_usage = KG_USAGE_SIGN;",
          "91:     if (toktype == KG_TOK_SEAL_MSG) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:     size_t padlen;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93:         message_buffer->value = NULL;",
          "94:     }",
          "105:         return GSS_S_DEFECTIVE_TOKEN;",
          "106:     }",
          "108:     if ((toktype != KG_TOK_SEAL_MSG) &&",
          "109:         (sealalg != 0xffff)) {",
          "",
          "[Removed Lines]",
          "98:     signalg = ptr[0] + (ptr[1]<<8);",
          "99:     sealalg = ptr[2] + (ptr[3]<<8);",
          "103:     if ((ptr[4] != 0xff) || (ptr[5] != 0xff)) {",
          "",
          "[Added Lines]",
          "100:     if (ctx->seq == NULL) {",
          "104:         return GSS_S_DEFECTIVE_TOKEN;",
          "105:     }",
          "107:     if ((bodysize < 22) || (ptr[4] != 0xff) || (ptr[5] != 0xff)) {",
          "112:     signalg = ptr[0] + (ptr[1]<<8);",
          "113:     sealalg = ptr[2] + (ptr[3]<<8);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "153:         return GSS_S_DEFECTIVE_TOKEN;",
          "154:     }",
          "158:     if ((code = kg_get_seq_num(context, ctx->seq, ptr+14, ptr+6, &direction,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:     if ((size_t)bodysize < 14 + cksum_len) {",
          "165:         return GSS_S_DEFECTIVE_TOKEN;",
          "166:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "207:         plainlen = tmsglen;",
          "209:         conflen = kg_confounder_size(context, ctx->enc->keyblock.enctype);",
          "212:         if (token.length) {",
          "213:             if ((token.value = (void *) gssalloc_malloc(token.length)) == NULL) {",
          "",
          "[Removed Lines]",
          "210:         token.length = tmsglen - conflen - plain[tmsglen-1];",
          "",
          "[Added Lines]",
          "222:         if (tmsglen < conflen) {",
          "223:             if (sealalg != 0xffff)",
          "224:                 xfree(plain);",
          "226:             return(GSS_S_DEFECTIVE_TOKEN);",
          "227:         }",
          "228:         padlen = plain[tmsglen - 1];",
          "229:         if (tmsglen - conflen < padlen) {",
          "232:             padlen = 0;",
          "233:             bad_pad = 1;",
          "234:         }",
          "235:         token.length = tmsglen - conflen - padlen;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "407:         if (toktype == KG_TOK_SEAL_MSG)",
          "408:             gssalloc_free(token.value);",
          "",
          "[Removed Lines]",
          "406:     if (code) {",
          "",
          "[Added Lines]",
          "431:     if (code || bad_pad) {",
          "",
          "---------------"
        ],
        "src/lib/gssapi/krb5/k5unsealiov.c||src/lib/gssapi/krb5/k5unsealiov.c": [
          "File: src/lib/gssapi/krb5/k5unsealiov.c -> src/lib/gssapi/krb5/k5unsealiov.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:         return GSS_S_DEFECTIVE_TOKEN;",
          "72:     }",
          "76:         return GSS_S_DEFECTIVE_TOKEN;",
          "77:     }",
          "",
          "[Removed Lines]",
          "74:     if (header->buffer.length < token_wrapper_len + 14) {",
          "",
          "[Added Lines]",
          "74:     if (ctx->seq == NULL) {",
          "78:         return GSS_S_DEFECTIVE_TOKEN;",
          "79:     }",
          "81:     if (header->buffer.length < token_wrapper_len + 22) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb99962cbd063ac04c9a9d2cc7c75eab73f3533d",
      "candidate_info": {
        "commit_hash": "fb99962cbd063ac04c9a9d2cc7c75eab73f3533d",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/fb99962cbd063ac04c9a9d2cc7c75eab73f3533d",
        "files": [
          "src/lib/gssapi/krb5/k5unseal.c",
          "src/lib/gssapi/krb5/k5unsealiov.c"
        ],
        "message": "Handle invalid RFC 1964 tokens [CVE-2014-4341...]\n\nDetect the following cases which would otherwise cause invalid memory\naccesses and/or integer underflow:\n\n* An RFC 1964 token being processed by an RFC 4121-only context\n  [CVE-2014-4342]\n\n* A header with fewer than 22 bytes after the token ID or an\n  incomplete checksum [CVE-2014-4341 CVE-2014-4342]\n\n* A ciphertext shorter than the confounder [CVE-2014-4341]\n\n* A declared padding length longer than the plaintext [CVE-2014-4341]\n\nIf we detect a bad pad byte, continue on to compute the checksum to\navoid creating a padding oracle, but treat the checksum as invalid\neven if it compares equal.\n\nCVE-2014-4341:\n\nIn MIT krb5, an unauthenticated remote attacker with the ability to\ninject packets into a legitimately established GSSAPI application\nsession can cause a program crash due to invalid memory references\nwhen attempting to read beyond the end of a buffer.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C\n\nCVE-2014-4342:\n\nIn MIT krb5 releases krb5-1.7 and later, an unauthenticated remote\nattacker with the ability to inject packets into a legitimately\nestablished GSSAPI application session can cause a program crash due\nto invalid memory references when reading beyond the end of a buffer\nor by causing a null pointer dereference.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:POC/RL:OF/RC:C\n\n[tlyu@mit.edu: CVE summaries, CVSS]\n\nticket: 7949 (new)\nsubject: Handle invalid RFC 1964 tokens [CVE-2014-4341 CVE-2014-4342]\ntaget_version: 1.12.2\ntags: pullup",
        "before_after_code_files": [
          "src/lib/gssapi/krb5/k5unseal.c||src/lib/gssapi/krb5/k5unseal.c",
          "src/lib/gssapi/krb5/k5unsealiov.c||src/lib/gssapi/krb5/k5unsealiov.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/gssapi/krb5/k5unseal.c||src/lib/gssapi/krb5/k5unseal.c",
            "src/lib/gssapi/krb5/k5unsealiov.c||src/lib/gssapi/krb5/k5unsealiov.c"
          ],
          "candidate": [
            "src/lib/gssapi/krb5/k5unseal.c||src/lib/gssapi/krb5/k5unseal.c",
            "src/lib/gssapi/krb5/k5unsealiov.c||src/lib/gssapi/krb5/k5unsealiov.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/gssapi/krb5/k5unseal.c||src/lib/gssapi/krb5/k5unseal.c": [
          "File: src/lib/gssapi/krb5/k5unseal.c -> src/lib/gssapi/krb5/k5unseal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     int conflen = 0;",
          "75:     int signalg;",
          "76:     int sealalg;",
          "77:     gss_buffer_desc token;",
          "78:     krb5_checksum cksum;",
          "79:     krb5_checksum md5cksum;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     int bad_pad = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:     krb5_ui_4 seqnum;",
          "87:     OM_uint32 retval;",
          "88:     size_t sumlen;",
          "89:     krb5_keyusage sign_usage = KG_USAGE_SIGN;",
          "91:     if (toktype == KG_TOK_SEAL_MSG) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:     size_t padlen;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93:         message_buffer->value = NULL;",
          "94:     }",
          "105:         return GSS_S_DEFECTIVE_TOKEN;",
          "106:     }",
          "108:     if ((toktype != KG_TOK_SEAL_MSG) &&",
          "109:         (sealalg != 0xffff)) {",
          "",
          "[Removed Lines]",
          "98:     signalg = ptr[0] + (ptr[1]<<8);",
          "99:     sealalg = ptr[2] + (ptr[3]<<8);",
          "103:     if ((ptr[4] != 0xff) || (ptr[5] != 0xff)) {",
          "",
          "[Added Lines]",
          "100:     if (ctx->seq == NULL) {",
          "104:         return GSS_S_DEFECTIVE_TOKEN;",
          "105:     }",
          "107:     if ((bodysize < 22) || (ptr[4] != 0xff) || (ptr[5] != 0xff)) {",
          "112:     signalg = ptr[0] + (ptr[1]<<8);",
          "113:     sealalg = ptr[2] + (ptr[3]<<8);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "153:         return GSS_S_DEFECTIVE_TOKEN;",
          "154:     }",
          "158:     if ((code = kg_get_seq_num(context, ctx->seq, ptr+14, ptr+6, &direction,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:     if ((size_t)bodysize < 14 + cksum_len) {",
          "165:         return GSS_S_DEFECTIVE_TOKEN;",
          "166:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "207:         plainlen = tmsglen;",
          "209:         conflen = kg_confounder_size(context, ctx->enc->keyblock.enctype);",
          "212:         if (token.length) {",
          "213:             if ((token.value = (void *) gssalloc_malloc(token.length)) == NULL) {",
          "",
          "[Removed Lines]",
          "210:         token.length = tmsglen - conflen - plain[tmsglen-1];",
          "",
          "[Added Lines]",
          "222:         if (tmsglen < conflen) {",
          "223:             if (sealalg != 0xffff)",
          "224:                 xfree(plain);",
          "226:             return(GSS_S_DEFECTIVE_TOKEN);",
          "227:         }",
          "228:         padlen = plain[tmsglen - 1];",
          "229:         if (tmsglen - conflen < padlen) {",
          "232:             padlen = 0;",
          "233:             bad_pad = 1;",
          "234:         }",
          "235:         token.length = tmsglen - conflen - padlen;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "407:         if (toktype == KG_TOK_SEAL_MSG)",
          "408:             gssalloc_free(token.value);",
          "",
          "[Removed Lines]",
          "406:     if (code) {",
          "",
          "[Added Lines]",
          "431:     if (code || bad_pad) {",
          "",
          "---------------"
        ],
        "src/lib/gssapi/krb5/k5unsealiov.c||src/lib/gssapi/krb5/k5unsealiov.c": [
          "File: src/lib/gssapi/krb5/k5unsealiov.c -> src/lib/gssapi/krb5/k5unsealiov.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:         return GSS_S_DEFECTIVE_TOKEN;",
          "70:     }",
          "74:         return GSS_S_DEFECTIVE_TOKEN;",
          "75:     }",
          "",
          "[Removed Lines]",
          "72:     if (header->buffer.length < token_wrapper_len + 14) {",
          "",
          "[Added Lines]",
          "72:     if (ctx->seq == NULL) {",
          "76:         return GSS_S_DEFECTIVE_TOKEN;",
          "77:     }",
          "79:     if (header->buffer.length < token_wrapper_len + 22) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}