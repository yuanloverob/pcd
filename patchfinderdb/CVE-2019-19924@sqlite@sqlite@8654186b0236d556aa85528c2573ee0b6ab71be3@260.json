{
  "cve_id": "CVE-2019-19924",
  "cve_desc": "SQLite 3.30.1 mishandles certain parser-tree rewriting, related to expr.c, vdbeaux.c, and window.c. This is caused by incorrect sqlite3WindowRewrite() error handling.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8654186b0236d556aa85528c2573ee0b6ab71be3",
  "patch_info": {
    "commit_hash": "8654186b0236d556aa85528c2573ee0b6ab71be3",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8654186b0236d556aa85528c2573ee0b6ab71be3",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/vdbeaux.c",
      "src/window.c"
    ],
    "message": "When an error occurs while rewriting the parser tree for window functions in the sqlite3WindowRewrite() routine, make sure that pParse->nErr is set, and make sure that this shuts down any subsequent code generation that might depend on the transformations that were implemented.  This fixes a problem discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: e2bddcd4c55ba3cbe0130332679ff4b048630d0ced9a8899982edb5a3569ba7f",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/vdbeaux.c||src/vdbeaux.c",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 4417c5bf0aabb34ed174f01afd981c924ae965a42128719d8d6735536631d12f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "376:   int addr;",
      "377:   CollSeq *p4;",
      "379:   if( isCommuted ){",
      "380:     p4 = sqlite3BinaryCompareCollSeq(pParse, pRight, pLeft);",
      "381:   }else{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "379:   if( pParse->nErr ) return 0;",
      "",
      "---------------"
    ],
    "src/vdbeaux.c||src/vdbeaux.c": [
      "File: src/vdbeaux.c -> src/vdbeaux.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1304: static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){",
      "1305:   assert( p->nOp>0 || p->aOp==0 );",
      "1307:   if( p->nOp ){",
      "1308:     assert( p->aOp );",
      "1309:     sqlite3DbFree(p->db, p->aOp[p->nOp-1].zComment);",
      "",
      "[Removed Lines]",
      "1306:   assert( p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed );",
      "",
      "[Added Lines]",
      "1306:   assert( p->aOp==0 || p->aOp[p->nOp-1].zComment==0 || p->db->mallocFailed",
      "1307:           || p->pParse->nErr>0 );",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "935:     pTab = sqlite3DbMallocZero(db, sizeof(Table));",
      "936:     if( pTab==0 ){",
      "938:     }",
      "940:     p->pSrc = 0;",
      "",
      "[Removed Lines]",
      "937:       return SQLITE_NOMEM;",
      "",
      "[Added Lines]",
      "937:       return sqlite3ErrorToParser(db, SQLITE_NOMEM);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1039:     sqlite3DbFree(db, pTab);",
      "1040:   }",
      "1042:   return rc;",
      "1043: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1042:   if( rc && pParse->nErr==0 ){",
      "1043:     assert( pParse->db->mallocFailed );",
      "1044:     return sqlite3ErrorToParser(pParse->db, SQLITE_NOMEM);",
      "1045:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6a19865ff2f39ed313462da7e0e204b6ff3eb8b0",
      "candidate_info": {
        "commit_hash": "6a19865ff2f39ed313462da7e0e204b6ff3eb8b0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6a19865ff2f39ed313462da7e0e204b6ff3eb8b0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/wherecode.c"
        ],
        "message": "Remove some affinity tests that became unreachable due to the prior change.\n\nFossilOrigin-Name: e2db1123faac26c0e0b6a1ebef1685ea7633bfcafd1ff743ba5380700f7745af",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/wherecode.c||src/wherecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e0d909c740b774d8a46731696e33342be83206cc4a95d07f42fdb3d8cc2d7a8e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2203:   if( op==TK_REGISTER ) op = p->op2;",
          "2204:   switch( op ){",
          "2205:     case TK_INTEGER: {",
          "2207:     }",
          "2208:     case TK_FLOAT: {",
          "2210:     }",
          "2211:     case TK_STRING: {",
          "2212:       return !unaryMinus && aff==SQLITE_AFF_TEXT;",
          "",
          "[Removed Lines]",
          "2206:       return aff==SQLITE_AFF_INTEGER || aff==SQLITE_AFF_NUMERIC;",
          "2209:       return aff==SQLITE_AFF_REAL || aff==SQLITE_AFF_NUMERIC;",
          "",
          "[Added Lines]",
          "2206:       return aff>=SQLITE_AFF_NUMERIC;",
          "2209:       return aff>=SQLITE_AFF_NUMERIC;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2216:     }",
          "2217:     case TK_COLUMN: {",
          "2221:     }",
          "2222:     default: {",
          "2223:       return 0;",
          "",
          "[Removed Lines]",
          "2219:       return p->iColumn<0",
          "2220:           && (aff==SQLITE_AFF_INTEGER || aff==SQLITE_AFF_NUMERIC);",
          "",
          "[Added Lines]",
          "2219:       return aff>=SQLITE_AFF_NUMERIC && p->iColumn<0;",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "755:         if( sqlite3ExprNeedsNoAffinityChange(pRight, zAff[j]) ){",
          "756:           zAff[j] = SQLITE_AFF_BLOB;",
          "757:         }",
          "759:       }",
          "760:     }",
          "761:   }",
          "",
          "[Removed Lines]",
          "758:         if( zAff[j]==SQLITE_AFF_REAL ) zAff[j] = SQLITE_AFF_NUMERIC;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b16216f9eb297ddebc36fd83d3c3816baad0163",
      "candidate_info": {
        "commit_hash": "1b16216f9eb297ddebc36fd83d3c3816baad0163",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1b16216f9eb297ddebc36fd83d3c3816baad0163",
        "files": [
          "ext/misc/dbdata.c",
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix building the shell with SQLITE_OMIT_VIRTUAL_TABLE. And without SQLITE_ENABLE_DBPAGE_VTAB.\n\nFossilOrigin-Name: 425d708c3908fe74f69b62e6dd1722a0018088977e12f14b312dad1df0fbb804",
        "before_after_code_files": [
          "ext/misc/dbdata.c||ext/misc/dbdata.c",
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/dbdata.c||ext/misc/dbdata.c": [
          "File: ext/misc/dbdata.c -> ext/misc/dbdata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75: #include \"sqlite3ext.h\"",
          "77: typedef unsigned char u8;",
          "80: #endif",
          "81: SQLITE_EXTENSION_INIT1",
          "",
          "[Removed Lines]",
          "78: typedef unsigned long u32;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "557:         if( nPayload>nLocal ){",
          "558:           sqlite3_int64 nRem = nPayload - nLocal;",
          "560:           while( nRem>0 ){",
          "561:             u8 *aOvfl = 0;",
          "562:             int nOvfl = 0;",
          "",
          "[Removed Lines]",
          "559:           u32 pgnoOvfl = get_uint32(&pCsr->aPage[iOff]);",
          "",
          "[Added Lines]",
          "558:           unsigned int pgnoOvfl = get_uint32(&pCsr->aPage[iOff]);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b91d819bd16de43fc99e379da0ba9c915b0c5afc68e804a50c3c1662c1f9a740",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "948: INCLUDE ../ext/expert/sqlite3expert.h",
          "949: INCLUDE ../ext/expert/sqlite3expert.c",
          "951: INCLUDE ../ext/misc/dbdata.c",
          "953: #if defined(SQLITE_ENABLE_SESSION)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "951: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "953: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3576:   \".prompt MAIN CONTINUE    Replace the standard prompts\",",
          "3577:   \".quit                    Exit this program\",",
          "3578:   \".read FILE               Read input from FILE\",",
          "3579:   \".recover                 Recover as much data as possible from corrupt db.\",",
          "3580:   \".restore ?DB? FILE       Restore content of DB (default \\\"main\\\") from FILE\",",
          "3581:   \".save FILE               Write in-memory database into FILE\",",
          "3582:   \".scanstats on|off        Turn sqlite3_stmt_scanstatus() metrics on or off\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3581: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "3583: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4121:     sqlite3_fileio_init(p->db, 0, 0);",
          "4122:     sqlite3_shathree_init(p->db, 0, 0);",
          "4123:     sqlite3_completion_init(p->db, 0, 0);",
          "4124:     sqlite3_dbdata_init(p->db, 0, 0);",
          "4125: #ifdef SQLITE_HAVE_ZLIB",
          "4126:     sqlite3_zipfile_init(p->db, 0, 0);",
          "4127:     sqlite3_sqlar_init(p->db, 0, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4128: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "4130: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5390:   return SQLITE_ERROR;",
          "5391: }",
          "5397: static void shellPrepare(",
          "5398:   sqlite3 *db,",
          "5399:   int *pRc,",
          "",
          "[Removed Lines]",
          "5393: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_HAVE_ZLIB)",
          "",
          "[Added Lines]",
          "5399: #if !defined SQLITE_OMIT_VIRTUALTABLE",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5465:   }",
          "5466: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5472: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_HAVE_ZLIB)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6165: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7063:     rc = shell_dbinfo_command(p, nArg, azArg);",
          "7064:   }else",
          "7066:   if( c=='r' && strncmp(azArg[0], \"recover\", n)==0 ){",
          "7067:     open_db(p, 0);",
          "7068:     rc = recoverDatabaseCmd(p, nArg, azArg);",
          "7069:   }else",
          "7071:   if( c=='d' && strncmp(azArg[0], \"dump\", n)==0 ){",
          "7072:     const char *zLike = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7077: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "97b02505992903d03379b9f9f1462713760a5db0",
      "candidate_info": {
        "commit_hash": "97b02505992903d03379b9f9f1462713760a5db0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/97b02505992903d03379b9f9f1462713760a5db0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/func.c",
          "src/vdbemem.c"
        ],
        "message": "Fix the instr() SQL function so that it makes a copy of its argument before changing the datatype, since the datatype affects processing. Also fix the sqlite3_value_text() routine so that it always works even for values obtained form sqlite3_value_dup().  Ticket [587791f92620090e]\n\nFossilOrigin-Name: 3fb40f518086c1e8d11eb1f4134e965450dbedfa4277bce39ef1e969fc747d38",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/func.c||src/func.c",
          "src/vdbemem.c||src/vdbemem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ee83d8e30d6f9ca8f1cce653ee094ff151f633f4b6a21dd814ab07e8cfb901eb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/func.c||src/func.c": [
          "File: src/func.c -> src/func.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:   int N = 1;",
          "204:   int isText;",
          "205:   unsigned char firstChar;",
          "207:   UNUSED_PARAMETER(argc);",
          "208:   typeHaystack = sqlite3_value_type(argv[0]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "206:   sqlite3_value *pC1 = 0;",
          "207:   sqlite3_value *pC2 = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215:       zHaystack = sqlite3_value_blob(argv[0]);",
          "216:       zNeedle = sqlite3_value_blob(argv[1]);",
          "217:       isText = 0;",
          "219:       zHaystack = sqlite3_value_text(argv[0]);",
          "220:       zNeedle = sqlite3_value_text(argv[1]);",
          "221:       isText = 1;",
          "222:     }",
          "224:     firstChar = zNeedle[0];",
          "225:     while( nNeedle<=nHaystack",
          "226:        && (zHaystack[0]!=firstChar || memcmp(zHaystack, zNeedle, nNeedle)!=0)",
          "",
          "[Removed Lines]",
          "218:     }else{",
          "223:     if( zNeedle==0 || (nHaystack && zHaystack==0) ) return;",
          "",
          "[Added Lines]",
          "220:     }else if( typeHaystack!=SQLITE_BLOB && typeNeedle!=SQLITE_BLOB ){",
          "224:     }else{",
          "225:       pC1 = sqlite3_value_dup(argv[0]);",
          "226:       zHaystack = sqlite3_value_text(pC1);",
          "227:       pC2 = sqlite3_value_dup(argv[1]);",
          "228:       zNeedle = sqlite3_value_text(pC2);",
          "229:       isText = 1;",
          "230:     }",
          "231:     if( zNeedle==0 || (nHaystack && zHaystack==0) ){",
          "232:       sqlite3_result_error_nomem(context);",
          "233:       goto endInstr;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "234:     if( nNeedle>nHaystack ) N = 0;",
          "235:   }",
          "236:   sqlite3_result_int(context, N);",
          "237: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "248: endInstr:",
          "249:   sqlite3_value_free(pC1);",
          "250:   sqlite3_value_free(pC2);",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:   assert( pMem->szMalloc==0",
          "233:        || pMem->szMalloc==sqlite3DbMallocSize(pMem->db, pMem->zMalloc) );",
          "234:   if( pMem->szMalloc>0 && bPreserve && pMem->z==pMem->zMalloc ){",
          "236:     bPreserve = 0;",
          "237:   }else{",
          "238:     if( pMem->szMalloc>0 ) sqlite3DbFreeNN(pMem->db, pMem->zMalloc);",
          "",
          "[Removed Lines]",
          "235:     pMem->z = pMem->zMalloc = sqlite3DbReallocOrFree(pMem->db, pMem->z, n);",
          "",
          "[Added Lines]",
          "235:     if( pMem->db ){",
          "236:       pMem->z = pMem->zMalloc = sqlite3DbReallocOrFree(pMem->db, pMem->z, n);",
          "237:     }else{",
          "238:       pMem->zMalloc = sqlite3Realloc(pMem->z, n);",
          "239:       if( pMem->zMalloc==0 ) sqlite3_free(pMem->z);",
          "240:       pMem->z = pMem->zMalloc;",
          "241:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b4439eef10940384ddcd4518b6aed814952f4086",
      "candidate_info": {
        "commit_hash": "b4439eef10940384ddcd4518b6aed814952f4086",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b4439eef10940384ddcd4518b6aed814952f4086",
        "files": [
          "ext/fts3/fts3_snippet.c",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Fix a problem with corrupt database handling in the fts3 matchinfo() function.\n\nFossilOrigin-Name: 703646b1b5c84d550fe0d74e399c0eeb729da1d263e4693320f69e6509678985",
        "before_after_code_files": [
          "ext/fts3/fts3_snippet.c||ext/fts3/fts3_snippet.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_snippet.c||ext/fts3/fts3_snippet.c": [
          "File: ext/fts3/fts3_snippet.c -> ext/fts3/fts3_snippet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "858: ){",
          "",
          "[Removed Lines]",
          "855: static void fts3ExprLHits(",
          "",
          "[Added Lines]",
          "855: static int fts3ExprLHits(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "882:     if( *pIter!=0x01 ) break;",
          "883:     pIter++;",
          "884:     pIter += fts3GetVarint32(pIter, &iCol);",
          "885:   }",
          "886: }",
          "892:   Fts3Expr *pExpr,",
          "893:   MatchInfo *p",
          "894: ){",
          "895:   assert( (pExpr->pLeft==0)==(pExpr->pRight==0) );",
          "896:   if( pExpr->bEof==0 && pExpr->iDocid==p->pCursor->iPrevId ){",
          "897:     if( pExpr->pLeft ){",
          "900:     }else{",
          "902:     }",
          "903:   }",
          "904: }",
          "",
          "[Removed Lines]",
          "891: static void fts3ExprLHitGather(",
          "898:       fts3ExprLHitGather(pExpr->pLeft, p);",
          "899:       fts3ExprLHitGather(pExpr->pRight, p);",
          "901:       fts3ExprLHits(pExpr, p);",
          "",
          "[Added Lines]",
          "885:     if( iCol>=p->nCol ) return FTS_CORRUPT_VTAB;",
          "887:   return SQLITE_OK;",
          "893: static int fts3ExprLHitGather(",
          "897:   int rc = SQLITE_OK;",
          "901:       rc = fts3ExprLHitGather(pExpr->pLeft, p);",
          "902:       if( rc==SQLITE_OK ) rc = fts3ExprLHitGather(pExpr->pRight, p);",
          "904:       rc = fts3ExprLHits(pExpr, p);",
          "907:   return rc;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1272:       case FTS3_MATCHINFO_LHITS: {",
          "1273:         int nZero = fts3MatchinfoSize(pInfo, zArg[i]) * sizeof(u32);",
          "1274:         memset(pInfo->aMatchinfo, 0, nZero);",
          "1276:         break;",
          "1277:       }",
          "",
          "[Removed Lines]",
          "1275:         fts3ExprLHitGather(pCsr->pExpr, pInfo);",
          "",
          "[Added Lines]",
          "1279:         rc = fts3ExprLHitGather(pCsr->pExpr, pInfo);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b74e5f3f3057ee7a98ebcb14ca0751048eacbec8fca3e11e241883029a57ecdf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "266:   INSERT INTO Table0(Table0) VALUES('optimize');",
          "267: } {0 {}}",
          "269: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "269: #-------------------------------------------------------------------------",
          "270: reset_db",
          "271: do_test 7.0 {",
          "272:   sqlite3 db {}",
          "273:   db deserialize [decode_hexdb {",
          "274: | size 32768 pagesize 4096 filename crash-04bb6e7c811ce9.db",
          "275: | page 1 offset 0",
          "276: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "277: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "278: |     32: 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 04   ................",
          "279: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "280: |     96: 00 00 00 00 0d 0e ef 00 07 0d 4d 00 0f bd 0f 5f   ..........M...._",
          "281: |    112: 0e f7 0e 06 0e bc 0d a4 0d 4d 00 00 00 00 00 00   .........M......",
          "282: |   3392: 00 00 00 00 00 00 00 00 00 00 00 00 00 55 07 07   .............U..",
          "283: |   3408: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 73 74   ......tablet1_st",
          "284: |   3424: 61 74 74 31 5f 73 74 61 74 07 43 52 45 41 54 45   att1_stat.CREATE",
          "285: |   3440: 20 54 41 42 4c 45 20 27 74 31 5f 73 74 61 74 27    TABLE 't1_stat'",
          "286: |   3456: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "287: |   3472: 41 52 59 20 4b 45 59 2c 20 76 61 6c 75 65 20 42   ARY KEY, value B",
          "288: |   3488: 4c 4f 42 29 60 06 07 17 21 21 01 81 0b 74 61 62   LOB)`...!!...tab",
          "289: |   3504: 6c 65 74 31 5f 64 6f 63 73 69 7a 65 74 31 5f 64   let1_docsizet1_d",
          "290: |   3520: 6f 63 73 69 7a 65 06 43 52 45 41 54 45 20 54 41   ocsize.CREATE TA",
          "291: |   3536: 42 4c 45 20 27 74 31 5f 64 6f 63 73 69 7a 65 27   BLE 't1_docsize'",
          "292: |   3552: 28 64 6f 63 69 64 20 49 4e 54 45 47 45 52 20 50   (docid INTEGER P",
          "293: |   3568: 52 49 4d 41 52 59 20 4b 45 59 2c 20 73 69 7a 65   RIMARY KEY, size",
          "294: |   3584: 20 42 4c 4f 42 29 81 33 04 07 17 1f 1f 01 82 35    BLOB).3.......5",
          "295: |   3600: 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72 74 31   tablet1_segdirt1",
          "296: |   3616: 5f 73 65 67 64 69 72 04 43 52 45 41 54 45 20 54   _segdir.CREATE T",
          "297: |   3632: 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69 72 27   ABLE 't1_segdir'",
          "298: |   3648: 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 52 2c 69   (level INTEGER,i",
          "299: |   3664: 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61 72 74   dx INTEGER,start",
          "300: |   3680: 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52 2c 6c   _block INTEGER,l",
          "301: |   3696: 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63 6b 20   eaves_end_block",
          "302: |   3712: 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c 6f 63   INTEGER,end_bloc",
          "303: |   3728: 6b 20 49 4e 54 45 47 45 52 2c 72 6f 6f 74 20 42   k INTEGER,root B",
          "304: |   3744: 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45 59 28   LOB,PRIMARY KEY(",
          "305: |   3760: 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 05 06 17   level, idx))1...",
          "306: |   3776: 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74 65 5f   E...indexsqlite_",
          "307: |   3792: 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73 65 67   autoindex_t1_seg",
          "308: |   3808: 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72 05 00   dir_1t1_segdir..",
          "309: |   3824: 00 00 08 00 00 00 00 66 03 07 17 23 23 01 81 13   .......f...##...",
          "310: |   3840: 74 61 62 6c 65 74 31 5f 73 65 67 6d 65 6e 74 73   tablet1_segments",
          "311: |   3856: 74 31 5f 73 65 67 6d 65 6e 74 73 03 43 52 45 41   t1_segments.CREA",
          "312: |   3872: 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67   TE TABLE 't1_seg",
          "313: |   3888: 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64 20 49   ments'(blockid I",
          "314: |   3904: 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b   NTEGER PRIMARY K",
          "315: |   3920: 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 5c   EY, block BLOB).",
          "316: |   3936: 02 07 17 21 21 01 81 03 74 61 62 6c 65 74 31 5f   ...!!...tablet1_",
          "317: |   3952: 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74 65 6e   contentt1_conten",
          "318: |   3968: 74 02 43 52 45 41 54 45 20 54 41 42 4c 45 20 27   t.CREATE TABLE '",
          "319: |   3984: 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f 63 69   t1_content'(doci",
          "320: |   4000: 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52   d INTEGER PRIMAR",
          "321: |   4016: 59 20 4b 45 59 2c 20 27 63 30 61 27 29 41 01 06   Y KEY, 'c0a')A..",
          "322: |   4032: 17 11 11 08 71 74 61 62 6c 65 74 31 74 31 43 52   ....qtablet1t1CR",
          "323: |   4048: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "324: |   4064: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 34   LE t1 USING fts4",
          "325: |   4080: 28 61 2c 70 72 65 66 69 78 3d 27 31 2c 32 27 29   (a,prefix='1,2')",
          "326: | page 2 offset 4096",
          "327: |      0: 0d 00 00 00 08 0e 1f 00 0f c4 0f 7c 0f 34 0f 07   ...........|.4..",
          "328: |     16: 0e c3 0e 97 0e 63 0e 1f 00 00 00 00 00 00 00 00   .....c..........",
          "329: |   3600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 42   ...............B",
          "330: |   3616: 08 04 00 81 09 73 75 6e 74 20 69 6e 20 63 75 6c   .....sunt in cul",
          "331: |   3632: 70 61 20 71 75 69 20 6f 66 66 69 63 69 61 20 64   pa qui officia d",
          "332: |   3648: 65 73 65 72 75 6e 74 20 6d 6f 6c 6c 69 74 20 61   eserunt mollit a",
          "333: |   3664: 6e 69 6d 20 69 64 20 65 73 74 20 6c 61 62 6f 72   nim id est labor",
          "334: |   3680: 75 6d 2e 32 07 03 00 6b 45 78 63 65 70 74 65 75   um.2...kExcepteu",
          "335: |   3696: 72 20 73 69 6e 74 20 6f 63 63 61 65 63 67 42 06   r sint occaecgB.",
          "336: |   3712: 37 57 06 96 46 17 46 17 42 06 e6 f6 e2 07 07 26   7W..F.F.B......&",
          "337: |   3728: f6 96 46 56 e7 42 c2 a0 60 30 05 b6 36 96 c6 c7   ..FV.B..`0..6...",
          "338: |   3744: 56 d2 06 46 f6 c6 f7 26 52 06 57 52 06 67 56 7c   V..F...&R.WR.gV|",
          "339: |   3760: 65 3f 04 20 6e 75 6c 6c 61 20 70 61 72 69 61 74   e?. nulla pariat",
          "340: |   3776: 75 72 2e 42 05 04 00 81 09 44 75 69 73 20 61 75   ur.B.....Duis au",
          "341: |   3792: 74 65 20 69 72 75 72 65 20 64 6f 6c 6f 72 20 69   te irure dolor i",
          "342: |   3808: 6e 20 72 65 70 72 65 68 65 6e 64 65 72 69 74 20   n reprehenderit",
          "343: |   3824: 69 6e 20 76 6f 6c 75 70 74 61 74 65 20 76 65 6c   in voluptate vel",
          "344: |   3840: 69 74 20 65 73 73 65 2b 04 03 00 5d 6e 69 73 69   it esse+...]nisi",
          "345: |   3856: 20 75 74 20 61 6c 69 71 75 69 70 20 65 78 20 65    ut aliquip ex e",
          "346: |   3872: 61 20 63 6f 6d 6d 6f 64 6f 20 63 6f 6e 73 65 71   a commodo conseq",
          "347: |   3888: 75 61 74 2e 46 03 04 00 81 11 55 74 20 65 6e 69   uat.F.....Ut eni",
          "348: |   3904: 6d 20 61 64 20 6d 69 6e 69 6d 20 76 65 6e 69 61   m ad minim venia",
          "349: |   3920: 6d 2c 20 71 75 69 73 20 6e 6f 73 74 72 75 64 20   m, quis nostrud",
          "350: |   3936: 65 78 65 72 63 69 74 61 74 69 6f 6e 20 75 6c 6c   exercitation ull",
          "351: |   3952: 61 6d 63 6f 20 6c 61 62 6f 72 69 73 46 02 04 00   amco laborisF...",
          "352: |   3968: 81 11 73 65 64 20 64 6f 20 65 69 75 73 6d 6f 64   ..sed do eiusmod",
          "353: |   3984: 20 74 65 6d 70 6f 72 20 69 6e 63 69 64 69 64 75    tempor incididu",
          "354: |   4000: 6e 74 20 75 74 20 6c 61 62 6f 72 65 20 65 74 20   nt ut labore et",
          "355: |   4016: 64 6f 6c 6f 72 65 20 6d 61 67 6e 61 20 61 6c 69   dolore magna ali",
          "356: |   4032: 71 75 61 2e 3a 01 03 00 7b 4c 6f 72 65 6d 20 69   qua.:....Lorem i",
          "357: |   4048: 70 73 75 6d 20 64 6f 6c 6f 72 20 73 69 72 12 29   psum dolor sir.)",
          "358: |   4064: 0d 65 74 2c 20 63 6f 6e 73 65 63 74 65 74 75 72   .et, consectetur",
          "359: |   4080: 20 61 64 69 70 69 73 63 69 6e 67 20 65 6c 69 74    adipiscing elit",
          "360: | page 3 offset 8192",
          "361: |      0: 0d 00 00 00 00 10 30 00 10 17 50 30 80 20 00 00   ......0...P0. ..",
          "362: |     16: 27 46 50 30 20 50 00 00 27 56 c0 30 30 a0 00 10   'FP0 P..'V.00...",
          "363: |     32: 17 40 90 20 70 00 10 20 00 10 30 00 00 27 66 50   .@. p.. ..0..'fP",
          "364: |     48: 60 30 60 00 20 a0 00 10 16 f0 30 50 90 08 20 a0   `0`. .....0P.. .",
          "365: |     64: 20 80 20 80 80 81 78 40 20 40 03 02 03 23 53 10    . ...x@ @...#S.",
          "366: |     80: 00 16 11 30 10 60 40 00 10 c0 00 10 40 00 00 00   ...0.`@.....@...",
          "367: |     96: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 78 24   ..............x$",
          "368: |    112: 41 71 83 37 10 27 97 60 10 40 00 00 16 41 10 10   Aq.7.'.`.@...A..",
          "369: |    128: 40 00 10 30 90 00 30 20 50 00 10 30 00 20 70 00   @..0..0 P..0. p.",
          "370: |    144: 00 16 51 b0 10 90 00 10 40 70 00 10 30 80 00 10   ..Q.....@p..0...",
          "371: |    160: 50 30 00 10 b0 00 10 40 00 10 20 00 10 b0 00 00   P0.....@.. .....",
          "372: |    176: 16 60 30 60 50 00 00 16 90 f0 10 30 00 10 60 00   .`0`P......0..`.",
          "373: |    192: 30 40 40 40 00 30 30 90 00 00 16 c0 c0 10 20 00   0@@@.00....... .",
          "374: |    208: 10 80 00 10 b0 00 50 c0 00 00 16 d0 90 20 b0 00   ......P...... ..",
          "375: |    224: 10 50 00 50 80 00 00 16 e0 c0 30 80 00 10 20 00   .P.P......0... .",
          "376: |    240: 20 60 00 10 60 00 00 16 f0 60 70 40 00 10 60 00    `..`....`p@..`.",
          "377: |    256: 00 17 00 60 60 70 00 10 70 00 00 17 10 60 30 70   ...``p..p....`0p",
          "378: |    272: 00 50 50 00 00 17 20 30 50 70 00 00 17 30 c0 10   .PP... 0Pp...0..",
          "379: |    288: 50 00 10 20 00 50 30 00 10 20 00 00 17 40 30 20   P.. .P0.. ...@0",
          "380: |    304: 50 00 00 17 50 a0 20 70 00 10 20 a0 00 10 30 00   P...P. p.. ...0.",
          "381: |    320: 00 17 60 70 30 60 00 20 90 30 08 52 60 10 80 80   ..`p0`. .0.R`...",
          "382: |    336: 80 80 81 78 a3 e3 02 03 63 63 50 00 26 16 40 30   ...x....ccP.&.@0",
          "383: |    352: 30 40 00 20 86 97 06 97 36 36 96 e6 70 30 10 80   0@. ....66..p0..",
          "384: |    368: 00 10 56 c6 97 17 56 10 30 20 c0 00 50 26 97 00   ..V...V.0 ..P&..",
          "385: |    384: 30 40 40 00 10 36 d6 57 40 30 10 60 00 10 36 e6   0@@..6.W@0.`..6.",
          "386: |    400: 96 d0 30 80 90 00 10 37 57 46 50 30 50 30 00 00   ..0....7WFP0P0..",
          "387: |    416: 66 36 96 c6 c7 56 d0 30 60 20 00 10 66 f6 d6 d6   f6...V.0` ..f...",
          "388: |    432: f6 46 f0 30 40 70 00 20 96 e7 36 56 37 46 57 47   .F.0@p. ..6V7FWG",
          "389: |    448: 57 20 30 10 70 00 50 47 17 56 17 40 30 40 80 00   W 0.p.PG.V.@0@..",
          "390: |    464: 10 47 56 c7 06 10 30 80 40 00 20 77 06 96 46 17   .GV...0.@. w..F.",
          "391: |    480: 46 17 40 30 70 50 00 00 86 46 57 36 57 27 56 e7   F.@0pP...FW6W'V.",
          "392: |    496: 40 30 80 70 00 10 16 f0 30 20 30 00 20 36 c6 f7   @0.p....0 0. 6..",
          "393: |    512: 20 60 10 40 00 40 50 00 50 16 50 60 20 a0 00 40    `.@.@P.P.P` ..@",
          "394: |    528: 30 00 10 37 56 97 30 30 50 20 00 00 26 56 10 30   0..7V.00P ..&V.0",
          "395: |    544: 40 60 00 10 66 97 57 36 d6 f6 40 30 20 40 00 10   @`..f.W6..@0 @..",
          "396: |    560: 36 c6 97 40 30 10 90 00 15 35 14 c6 97 46 52 06   6..@0....5...FR.",
          "397: |    576: 66 f7 26 d6 17 42 03 30 01 00 00 10 10 04 02 02   f.&..B.0........",
          "398: |    592: 00 00 00 00 00 00 00 00 70 00 00 00 00 00 00 00   ........p.......",
          "399: |    608: 00 00 00 00 60 00 00 00 40 00 00 00 00 00 00 00   ....`...@.......",
          "400: | page 4 offset 12288",
          "401: |      0: 0d 00 00 00 03 0a a6 00 0d 57 0c 4a 0a a6 00 00   .........W.J....",
          "402: |   2720: 00 00 00 00 00 00 83 21 03 08 02 08 08 08 17 86   .......!........",
          "403: |   2736: 30 08 00 30 20 34 30 32 00 02 61 64 06 01 08 00   0..0 402..ad....",
          "404: |   2752: 02 04 00 01 01 6c 06 02 0c 00 02 04 00 01 01 6d   .....l.........m",
          "405: |   2768: 03 01 06 00 01 01 6e 03 08 00 00 91 01 75 03 05   ......n......u..",
          "406: |   2784: 03 00 00 02 63 69 03 06 02 00 01 01 6f 07 01 07   ....ci......o...",
          "407: |   2800: 00 03 07 03 00 01 01 75 06 07 05 00 01 04 00 00   .......u........",
          "408: |   2816: 02 64 65 03 08 07 00 01 01 6f 0d 01 04 00 01 03   .de......o......",
          "409: |   2832: 09 00 03 05 00 01 03 00 01 01 75 03 05 02 00 00   ..........u.....",
          "410: |   2848: 02 65 61 03 04 06 00 01 01 69 03 02 04 00 01 01   .ea......i......",
          "411: |   2864: 6c 03 01 09 00 01 01 6e 30 03 03 00 01 01 73 06   l......n0.....s.",
          "412: |   2880: 05 0b 00 03 0b 00 01 01 74 03 02 09 00 01 01 75   ........t......u",
          "413: |   2896: 03 06 04 00 01 01 78 09 03 09 00 01 05 00 03 02   ......x.........",
          "414: |   2912: 00 00 02 66 75 03 06 05 00 00 02 69 64 03 08 0a   ...fu......id...",
          "415: |   2928: 00 01 01 6e 0a 02 06 00 03 06 04 00 03 03 00 01   ...n............",
          "416: |   2944: 01 70 03 01 03 00 01 01 72 03 05 04 00 00 02 6c   .p......r......l",
          "417: |   2960: 61 09 02 08 00 01 0b 00 05 0c 00 01 01 6f 03 01   a............o..",
          "418: |   2976: 02 00 00 02 6d 61 03 02 0b 00 01 01 69 03 03 05   ....ma......i...",
          "419: |   2992: 00 01 01 6f 03 08 08 00 00 02 6e 69 03 04 02 00   ...o......ni....",
          "420: |   3008: 01 01 6f 06 03 08 00 04 06 00 01 01 75 03 06 06   ..o.........u...",
          "421: |   3024: 00 00 02 6f 63 03 07 04 00 01 01 66 03 08 06 00   ...oc......f....",
          "422: |   3040: 00 02 70 61 03 06 07 00 01 01 72 03 07 07 00 00   ..pa......r.....",
          "423: |   3056: 02 71 75 06 03 07 00 05 05 00 00 02 72 65 03 05   .qu.........re..",
          "424: |   3072: 07 00 00 02 73 65 03 02 02 00 01 01 69 06 01 05   ....se......i...",
          "425: |   3088: 00 06 03 00 01 01 75 03 08 02 00 00 02 74 65 03   ......u......te.",
          "426: |   3104: 02 05 00 00 02 75 6c 03 03 0a 00 01 01 74 09 02   .....ul......t..",
          "427: |   3120: 07 00 01 02 00 01 03 00 00 02 76 65 06 03 06 00   ..........ve....",
          "428: |   3136: 02 0a 00 01 01 6f 03 05 09 00 82 0a 02 08 02 08   .....o..........",
          "429: |   3152: 08 08 17 84 02 04 00 30 20 32 35 31 00 01 61 13   .......0 251..a.",
          "430: |   3168: 01 06 04 00 01 0c 00 01 04 00 01 04 00 01 03 00   ................",
          "431: |   3184: 03 09 00 00 01 63 10 01 07 00 03 07 03 00 02 02   .....c..........",
          "432: |   3200: 00 01 05 00 01 04 00 00 01 64 11 01 04 00 01 03   .........d......",
          "433: |   3216: 09 00 03 02 05 00 01 03 00 02 07 00 00 01 65 1b   ..............e.",
          "434: |   3232: 01 09 00 01 04 01 70 00 03 01 80 00 05 03 00 01   ......p.........",
          "435: |   3248: 0b 00 01 04 00 01 02 00 01 0b 00 00 01 66 03 06   .............f..",
          "436: |   3264: 05 00 00 01 69 0f 01 03 00 01 06 00 03 04 04 04   ....i...........",
          "437: |   3280: 00 03 03 09 00 00 01 6c 0c 01 02 00 01 08 00 01   .......l........",
          "438: |   3296: 0b 00 05 0c 00 00 01 6d 09 02 0b 00 01 05 00 05   .......m........",
          "439: |   3312: 08 00 00 01 6e 0c 03 08 00 01 02 00 02 06 00 01   ....n...........",
          "440: |   3328: 06 00 00 01 6f 06 07 04 00 01 06 00 00 01 70 06   ....o.........p.",
          "441: |   3344: 06 07 00 01 07 00 00 01 71 06 03 07 00 05 05 00   ........q.......",
          "442: |   3360: 00 01 72 03 05 07 00 00 01 73 0c 01 05 00 01 02   ..r......s......",
          "443: |   3376: 00 05 03 00 01 02 00 00 01 74 03 02 05 00 00 01   .........t......",
          "444: |   3392: 75 0a 02 07 00 01 02 0a 00 01 03 00 00 01 76 07   u.............v.",
          "445: |   3408: 03 06 00 02 09 03 00 85 26 01 08 08 08 08 08 17   ........&.......",
          "446: |   3424: 8a 3e 30 20 36 36 35 00 02 61 64 03 03 04 00 02   .>0 665..ad.....",
          "447: |   3440: 08 69 70 69 73 63 69 6e 67 03 01 08 00 01 05 6c   .ipiscing......l",
          "448: |   3456: 69 71 75 61 03 02 0c 00 05 02 69 70 03 04 04 00   iqua......ip....",
          "449: |   3472: 01 03 6d 65 74 03 01 06 00 01 03 6e 69 6d 03 08   ..met......nim..",
          "450: |   3488: 09 00 01 03 75 74 65 03 05 03 00 00 06 63 69 6c   ....ute......cil",
          "451: |   3504: 6c 75 6d 03 06 02 00 01 06 6f 6d 6d 6f 64 6f 03   lum......ommodo.",
          "452: |   3520: 04 07 00 02 09 6e 73 65 63 74 65 74 75 72 03 01   .....nsectetur..",
          "453: |   3536: 07 00 05 04 71 75 61 74 03 04 08 00 01 04 75 6c   ....quat......ul",
          "454: |   3552: 70 61 03 08 04 00 02 07 70 69 64 61 74 61 74 03   pa......pidatat.",
          "455: |   3568: 07 05 00 00 08 64 65 73 65 72 75 6e 74 03 08 07   .....deserunt...",
          "456: |   3584: 00 01 01 6f 03 02 03 00 02 03 6c 6f 72 06 01 04   ...o......lor...",
          "457: |   3600: 00 04 05 00 05 01 65 06 02 0a 00 04 03 00 01 03   ......e.........",
          "458: |   3616: 75 69 73 03 05 02 00 00 02 65 61 03 04 06 00 01   uis......ea.....",
          "459: |   3632: 06 69 75 73 6d 6f 64 03 02 04 00 01 03 6c 69 74   .iusmod......lit",
          "460: |   3648: 03 01 09 00 01 03 6e 69 6d 03 03 03 00 01 03 73   ......nim......s",
          "461: |   3664: 73 65 03 05 0b 00 02 01 74 03 08 0b 00 01 01 74   se......t......t",
          "462: |   3680: 03 02 09 00 01 01 75 03 06 04 00 01 01 78 03 04   ......u......x..",
          "463: |   3696: 05 00 02 07 63 65 70 74 65 75 72 03 07 02 00 02   ....cepteur.....",
          "464: |   3712: 0a 65 72 63 69 74 61 74 69 6f 6e 03 03 09 00 00   .ercitation.....",
          "465: |   3728: 06 66 75 67 69 61 74 03 06 05 00 00 02 69 64 03   .fugiat......id.",
          "466: |   3744: 08 0a 00 01 01 6e 07 05 06 04 00 03 03 00 02 08   .....n..........",
          "467: |   3760: 63 69 64 69 64 75 6e 74 03 02 06 00 01 04 70 73   cididunt......ps",
          "468: |   3776: 75 6d 03 01 03 00 01 04 72 75 72 65 03 05 04 00   um......rure....",
          "469: |   3792: 00 06 6c 61 62 6f 72 65 03 02 08 00 05 02 69 73   ..labore......is",
          "470: |   3808: 03 03 0b 00 05 02 75 6d 03 08 0c 00 01 04 6f 72   ......um......or",
          "471: |   3824: 65 6d 03 01 02 00 00 05 6d 61 67 6e 61 03 02 0b   em......magna...",
          "472: |   3840: 00 01 04 69 6e 69 6d 03 03 05 00 01 05 6f 6c 6c   ...inim......oll",
          "473: |   3856: 69 74 03 08 08 00 00 04 6e 69 73 69 03 04 02 00   it......nisi....",
          "474: |   3872: 01 02 6f 6e 03 07 06 00 02 05 73 74 72 75 64 03   ..on......strud.",
          "475: |   3888: 03 08 00 01 04 75 6c 6c 61 03 06 06 00 00 08 6f   .....ulla......o",
          "476: |   3904: 63 63 61 65 63 61 74 03 07 04 00 01 06 66 66 69   ccaecat......ffi",
          "477: |   3920: 63 69 61 03 08 06 00 00 08 70 61 72 69 61 74 75   cia......pariatu",
          "478: |   3936: 72 03 06 07 00 01 07 72 6f 69 64 65 6e 74 03 07   r......roident..",
          "479: |   3952: 07 00 00 03 71 75 69 03 08 05 00 03 01 73 03 03   ....qui......s..",
          "480: |   3968: 07 00 00 0d 72 65 70 72 65 68 65 6e 64 65 72 69   ....reprehenderi",
          "481: |   3984: 74 03 05 07 00 00 03 73 65 64 03 02 02 00 01 03   t......sed......",
          "482: |   4000: 69 6e 74 03 07 03 00 02 01 74 03 01 05 00 01 03   int......t......",
          "483: |   4016: 75 6e 74 03 08 02 00 00 06 74 65 6d 70 6f 72 03   unt......tempor.",
          "484: |   4032: 02 05 00 00 07 75 6c 6c 61 6d 63 6f 03 03 0a 00   .....ullamco....",
          "485: |   4048: 01 01 74 09 02 07 00 01 02 00 01 03 00 00 05 76   ..t............v",
          "486: |   4064: 65 6c 69 74 03 05 0a 00 02 04 6e 69 61 6d 03 03   elit......niam..",
          "487: |   4080: 06 00 01 08 6f 6c 75 70 74 61 74 65 03 05 09 00   ....oluptate....",
          "488: | page 5 offset 16384",
          "489: |      0: 0a 00 00 00 03 0f eb 00 0f fb 0f f3 0f eb 00 00   ................",
          "490: |   4064: 00 00 00 00 00 00 00 00 00 00 00 07 04 02 08 01   ................",
          "491: |   4080: 08 00 03 07 04 02 08 01 04 00 02 04 04 08 08 09   ................",
          "492: | page 6 offset 20480",
          "493: |      0: 0d 00 00 00 08 0f d0 00 0f fa 0f f4 0f ee 0f e8   ................",
          "494: |     16: 0f e2 0f dc 0f d6 0f d0 00 00 00 00 00 00 00 00   ................",
          "495: |   4048: 04 08 03 00 0e 0b 04 07 03 00 0e 06 04 06 03 00   ................",
          "496: |   4064: 0e 06 04 05 03 00 0e 0a 04 04 03 00 0e 07 04 03   ................",
          "497: |   4080: 03 00 0e 0a 04 02 03 00 0e 0b 04 01 03 00 0e 08   ................",
          "498: | page 7 offset 24576",
          "499: |      0: 0d 00 00 00 01 0f f7 00 0f f7 00 00 00 00 00 00   ................",
          "500: |   4080: 00 00 00 00 00 00 00 07 00 03 00 14 08 45 b5 03   .............E..",
          "501: | page 8 offset 28672",
          "502: |      0: 6f ee cd e1 f1 ee 1a ca be ed ee ec de ac f1 cb   o...............",
          "503: |     16: f1 ee 1a ce de ee f1 ee 0a cc de ed ae 90 87 88   ................",
          "504: |     32: ec 5e dc ec fc 11 72 32 75 0a da be ec ed eb de   .^....r2u.......",
          "505: |     48: ce c1 aa e0 ae ec 1f c1 ee 99 c2 aa e0 a9 ad 15   ................",
          "506: |     64: 0e ec ab ef 1e e0 48 ad 15 04 24 80 00 00 00 00   ......H...$.....",
          "507: |     80: 00 00 00 00 e0 00 00 00 04 2c 80 00 10 42 4e c1   .........,...BN.",
          "508: |     96: 20 4b 45 59 2c 6e 6f 64 65 6e 6f 2c 61 30 29 46    KEY,nodeno,a0)F",
          "509: |    112: 02 06 17 11 11 08 7b 74 61 62 6c 65 74 31 74 31   .......tablet1t1",
          "510: |    128: 43 52 45 41 54 e1 ec eb ea eb eb ac ee ce be de   CREAT...........",
          "511: |    144: ee f1 ee 1a ca ba de 47 80 30 00 14 90 47 70 30   .......G.0...Gp0",
          "512: |    160: 00 11 60 47 60 30 00 15 f0 47 50 30 00 10 f0 47   ..`G`0...GP0...G",
          "513: |    176: 40 30 00 11 f0 47 45 20 30 00 11 d0 45 10 30 00   @0...GE 0...E.0.",
          "514: |    192: 12 10 45 00 30 00 14 e0 44 f0 30 00 11 e0 44 e0   ..E.0...D.0...D.",
          "515: |    208: 30 00 12 a0 44 d0 30 00 15 e0 44 c0 30 00 10 40   0...D.0...D.0..@",
          "516: |    224: 44 b0 30 00 15 10 44 a0 30 00 14 c0 44 90 30 00   D.0...D.0...D.0.",
          "517: |    240: 16 20 44 80 30 00 52 45 41 54 45 20 54 41 42 4c   . D.0.REATE TABL",
          "518: |    256: 45 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 69   E 't1_content'(i",
          "519: |    272: 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52   d INTEGER PRIMAR",
          "520: |    288: 59 20 4b 45 59 2c 20 63 30 29 69 03 07 17 19 19   Y KEY, c0)i.....",
          "521: |    304: 01 81 2d 74 61 62 6c 65 74 31 5f 69 64 78 74 31   ..-tablet1_idxt1",
          "522: |    320: 5f 69 64 78 03 43 52 45 41 54 45 20 54 41 42 4c   _idx.CREATE TABL",
          "523: |    336: 45 20 27 70 31 5f 69 64 78 03 6e 69 6d 03 03 03   E 'p1_idx.nim...",
          "524: |    352: 00 01 03 73 73 65 03 05 0b 00 02 01 74 03 08 0b   ...sse......t...",
          "525: |    368: 00 01 01 74 03 02 09 00 01 01 75 03 06 04 00 01   ...t......u.....",
          "526: |    384: 01 78 03 04 05 00 02 07 63 65 70 74 65 75 72 03   .x......cepteur.",
          "527: |    400: 07 02 00 02 0a 65 72 63 69 74 61 74 69 6f 6e 03   .....ercitation.",
          "528: |    416: 03 09 00 00 06 66 75 67 69 61 74 03 06 05 00 00   .....fugiat.....",
          "529: |    432: 02 69 64 03 08 0a 00 01 01 6e 07 05 06 04 00 03   .id......n......",
          "530: |    448: 03 00 02 08 63 69 64 69 64 75 6e 74 03 02 06 00   ....cididunt....",
          "531: |    464: 01 04 70 73 75 6d 03 01 03 00 01 04 72 75 72 65   ..psum......rure",
          "532: |    480: 03 05 04 00 00 06 6c 61 62 6f 72 65 03 02 08 00   ......labore....",
          "533: |    496: 05 02 69 73 03 03 0b 00 05 02 75 6d 03 08 0c 00   ..is......um....",
          "534: |    512: 01 04 6f 72 65 6d 03 01 02 00 00 05 6d 61 67 6e   ..orem......magn",
          "535: |    528: 61 03 02 0b 00 01 04 69 6e 69 6d 03 03 05 00 01   a......inim.....",
          "536: |    544: 05 6f 6c 6c 69 74 03 08 08 00 00 04 6e 69 73 69   .ollit......nisi",
          "537: |    560: 03 04 02 00 01 02 6f 6e 03 07 06 00 02 05 73 74   ......on......st",
          "538: |    576: 72 75 64 03 03 08 00 01 04 75 6c 6c 61 03 06 06   rud......ulla...",
          "539: |    592: 00 00 08 6f 63 63 61 65 63 61 74 03 07 04 00 01   ...occaecat.....",
          "540: |    608: 06 66 66 69 63 69 61 03 08 06 00 00 08 70 61 72   .fficia......par",
          "541: |    624: 69 61 74 75 72 03 06 07 00 01 07 72 6f ed ce de   iatur......ro...",
          "542: |    640: 69 64 65 6e 74 03 07 07 00 00 03 71 75 69 03 08   ident......qui..",
          "543: |    656: 05 00 03 01 73 03 03 07 00 00 0d 72 65 70 72 65   ....s......repre",
          "544: |    672: 68 65 6e 64 65 72 69 74 03 05 07 00 00 03 73 65   henderit......se",
          "545: |    688: 64 03 02 02 00 01 03 69 6e 74 03 07 03 00 02 01   d......int......",
          "546: |    704: 74 03 01 05 00 01 03 75 6e 74 03 08 02 00 00 06   t......unt......",
          "547: |    720: 74 65 6d 70 6f 72 03 02 05 00 00 07 75 6c 6c 61   tempor......ulla",
          "548: |    736: 6d 63 6f 03 03 0a 00 01 01 74 09 02 07 00 01 02   mco......t......",
          "549: |    752: 00 01 03 00 00 05 76 65 6c 69 74 03 05 0a 00 02   ......velit.....",
          "550: |    768: 04 6e 69 61 6d 03 03 06 00 01 08 6f 6c 75 70 74   .niam......olupt",
          "551: |    784: 61 74 65 03 05 09 00 0a 00 00 00 03 0f eb 00 0f   ate.............",
          "552: |    800: fb 0f f3 0f eb 00 00 00 00 00 00 00 00 00 00 00   ................",
          "553: | end crash-04bb6e7c811ce9.db",
          "554: }]} {}",
          "556: do_catchsql_test 7.1 {",
          "557:   SELECT matchinfo(t1,'y') FROM t1 WHERE t1 MATCH 'e*';",
          "558: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d00ad9a6561174ec7214af82e21b7a9a313ae156",
      "candidate_info": {
        "commit_hash": "d00ad9a6561174ec7214af82e21b7a9a313ae156",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d00ad9a6561174ec7214af82e21b7a9a313ae156",
        "files": [
          "ext/rtree/geopoly.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Typecasts added to the GeoPoly extension to avoid harmless UBSAN warnings.\n\nFossilOrigin-Name: a1f6a093ac4a2de8c5b02c30fe57e09770460fd5bdddfe9c7a9a24fb83a6b491",
        "before_after_code_files": [
          "ext/rtree/geopoly.c||ext/rtree/geopoly.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/geopoly.c||ext/rtree/geopoly.c": [
          "File: ext/rtree/geopoly.c -> ext/rtree/geopoly.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "125: #define GEOPOLY_SZ(N)  (sizeof(GeoPoly) + sizeof(GeoCoord)*2*((N)-4))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131: #define GeoX(P,I)  (((GeoCoord*)(P)->a)[(I)*2])",
          "132: #define GeoY(P,I)  (((GeoCoord*)(P)->a)[(I)*2+1])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "316:         memcpy(p->hdr, a, nByte);",
          "317:         if( a[0] != *(unsigned char*)&x ){",
          "318:           int ii;",
          "321:           }",
          "322:           p->hdr[0] ^= 1;",
          "323:         }",
          "",
          "[Removed Lines]",
          "319:           for(ii=0; ii<nVertex*2; ii++){",
          "320:             geopolySwab32((unsigned char*)&p->a[ii]);",
          "",
          "[Added Lines]",
          "327:           for(ii=0; ii<nVertex; ii++){",
          "328:             geopolySwab32((unsigned char*)&GeoX(p,ii));",
          "329:             geopolySwab32((unsigned char*)&GeoY(p,ii));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "376:     int i;",
          "377:     sqlite3_str_append(x, \"[\", 1);",
          "378:     for(i=0; i<p->nVertex; i++){",
          "380:     }",
          "382:     sqlite3_result_text(context, sqlite3_str_finish(x), -1, sqlite3_free);",
          "383:     sqlite3_free(p);",
          "384:   }",
          "",
          "[Removed Lines]",
          "379:       sqlite3_str_appendf(x, \"[%!g,%!g],\", p->a[i*2], p->a[i*2+1]);",
          "381:     sqlite3_str_appendf(x, \"[%!g,%!g]]\", p->a[0], p->a[1]);",
          "",
          "[Added Lines]",
          "388:       sqlite3_str_appendf(x, \"[%!g,%!g],\", GeoX(p,i), GeoY(p,i));",
          "390:     sqlite3_str_appendf(x, \"[%!g,%!g]]\", GeoX(p,0), GeoY(p,0));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "405:     char cSep = '\\'';",
          "406:     sqlite3_str_appendf(x, \"<polyline points=\");",
          "407:     for(i=0; i<p->nVertex; i++){",
          "409:       cSep = ' ';",
          "410:     }",
          "412:     for(i=1; i<argc; i++){",
          "413:       const char *z = (const char*)sqlite3_value_text(argv[i]);",
          "414:       if( z && z[0] ){",
          "",
          "[Removed Lines]",
          "408:       sqlite3_str_appendf(x, \"%c%g,%g\", cSep, p->a[i*2], p->a[i*2+1]);",
          "411:     sqlite3_str_appendf(x, \" %g,%g'\", p->a[0], p->a[1]);",
          "",
          "[Added Lines]",
          "417:       sqlite3_str_appendf(x, \"%c%g,%g\", cSep, GeoX(p,i), GeoY(p,i));",
          "420:     sqlite3_str_appendf(x, \" %g,%g'\", GeoX(p,0), GeoY(p,0));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "453:   int ii;",
          "454:   if( p ){",
          "455:     for(ii=0; ii<p->nVertex; ii++){",
          "458:       x1 = (GeoCoord)(A*x0 + B*y0 + E);",
          "459:       y1 = (GeoCoord)(C*x0 + D*y0 + F);",
          "462:     }",
          "463:     sqlite3_result_blob(context, p->hdr,",
          "464:        4+8*p->nVertex, SQLITE_TRANSIENT);",
          "",
          "[Removed Lines]",
          "456:       x0 = p->a[ii*2];",
          "457:       y0 = p->a[ii*2+1];",
          "460:       p->a[ii*2] = x1;",
          "461:       p->a[ii*2+1] = y1;",
          "",
          "[Added Lines]",
          "465:       x0 = GeoX(p,ii);",
          "466:       y0 = GeoY(p,ii);",
          "469:       GeoX(p,ii) = x1;",
          "470:       GeoY(p,ii) = y1;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "529:   if( p ){",
          "530:     if( geopolyArea(p)<0.0 ){",
          "531:       int ii, jj;",
          "539:       }",
          "540:     }",
          "541:     sqlite3_result_blob(context, p->hdr,",
          "",
          "[Removed Lines]",
          "532:       for(ii=2, jj=p->nVertex*2 - 2; ii<jj; ii+=2, jj-=2){",
          "533:         GeoCoord t = p->a[ii];",
          "534:         p->a[ii] = p->a[jj];",
          "535:         p->a[jj] = t;",
          "536:         t = p->a[ii+1];",
          "537:         p->a[ii+1] = p->a[jj+1];",
          "538:         p->a[jj+1] = t;",
          "",
          "[Added Lines]",
          "541:       for(ii=1, jj=p->nVertex-1; ii<jj; ii++, jj--){",
          "542:         GeoCoord t = GeoX(p,ii);",
          "543:         GeoX(p,ii) = GeoX(p,jj);",
          "544:         GeoX(p,jj) = t;",
          "545:         t = GeoY(p,ii);",
          "546:         GeoY(p,ii) = GeoY(p,jj);",
          "547:         GeoY(p,jj) = t;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "595:   p->hdr[3] = n&0xff;",
          "596:   for(i=0; i<n; i++){",
          "597:     double rAngle = 2.0*GEOPOLY_PI*i/n;",
          "600:   }",
          "601:   sqlite3_result_blob(context, p->hdr, 4+8*n, SQLITE_TRANSIENT);",
          "602:   sqlite3_free(p);",
          "",
          "[Removed Lines]",
          "598:     p->a[i*2] = x - r*geopolySine(rAngle-0.5*GEOPOLY_PI);",
          "599:     p->a[i*2+1] = y + r*geopolySine(rAngle);",
          "",
          "[Added Lines]",
          "607:     GeoX(p,i) = x - r*geopolySine(rAngle-0.5*GEOPOLY_PI);",
          "608:     GeoY(p,i) = y + r*geopolySine(rAngle);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "633:   }",
          "634:   if( p ){",
          "635:     int ii;",
          "638:     for(ii=1; ii<p->nVertex; ii++){",
          "640:       if( r<mnX ) mnX = (float)r;",
          "641:       else if( r>mxX ) mxX = (float)r;",
          "643:       if( r<mnY ) mnY = (float)r;",
          "644:       else if( r>mxY ) mxY = (float)r;",
          "645:     }",
          "",
          "[Removed Lines]",
          "636:     mnX = mxX = p->a[0];",
          "637:     mnY = mxY = p->a[1];",
          "639:       double r = p->a[ii*2];",
          "642:       r = p->a[ii*2+1];",
          "",
          "[Added Lines]",
          "645:     mnX = mxX = GeoX(p,0);",
          "646:     mnY = mxY = GeoY(p,0);",
          "648:       double r = GeoX(p,ii);",
          "651:       r = GeoY(p,ii);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "659:       pOut->hdr[1] = 0;",
          "660:       pOut->hdr[2] = 0;",
          "661:       pOut->hdr[3] = 4;",
          "670:     }else{",
          "671:       sqlite3_free(p);",
          "672:       aCoord[0].f = mnX;",
          "",
          "[Removed Lines]",
          "662:       pOut->a[0] = mnX;",
          "663:       pOut->a[1] = mnY;",
          "664:       pOut->a[2] = mxX;",
          "665:       pOut->a[3] = mnY;",
          "666:       pOut->a[4] = mxX;",
          "667:       pOut->a[5] = mxY;",
          "668:       pOut->a[6] = mnX;",
          "669:       pOut->a[7] = mxY;",
          "",
          "[Added Lines]",
          "671:       GeoX(pOut,0) = mnX;",
          "672:       GeoY(pOut,0) = mnY;",
          "673:       GeoX(pOut,1) = mxX;",
          "674:       GeoY(pOut,1) = mnY;",
          "675:       GeoX(pOut,2) = mxX;",
          "676:       GeoY(pOut,2) = mxY;",
          "677:       GeoX(pOut,3) = mnX;",
          "678:       GeoY(pOut,3) = mxY;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "804:   int ii;",
          "805:   if( p1==0 ) return;",
          "806:   for(ii=0; ii<p1->nVertex-1; ii++){",
          "809:     if( v==2 ) break;",
          "810:     cnt += v;",
          "811:   }",
          "812:   if( v!=2 ){",
          "815:   }",
          "816:   if( v==2 ){",
          "817:     sqlite3_result_int(context, 1);",
          "",
          "[Removed Lines]",
          "807:     v = pointBeneathLine(x0,y0,p1->a[ii*2],p1->a[ii*2+1],",
          "808:                                p1->a[ii*2+2],p1->a[ii*2+3]);",
          "813:     v = pointBeneathLine(x0,y0,p1->a[ii*2],p1->a[ii*2+1],",
          "814:                                p1->a[0],p1->a[1]);",
          "",
          "[Added Lines]",
          "816:     v = pointBeneathLine(x0,y0,GeoX(p1,ii), GeoY(p1,ii),",
          "817:                                GeoX(p1,ii+1),GeoY(p1,ii+1));",
          "822:     v = pointBeneathLine(x0,y0,GeoX(p1,ii), GeoY(p1,ii),",
          "823:                                GeoX(p1,0),  GeoY(p1,0));",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "933:   unsigned int i;",
          "934:   GeoCoord *x;",
          "935:   for(i=0; i<(unsigned)pPoly->nVertex-1; i++){",
          "937:     geopolyAddOneSegment(p, x[0], x[1], x[2], x[3], side, i);",
          "938:   }",
          "940:   geopolyAddOneSegment(p, x[0], x[1], pPoly->a[0], pPoly->a[1], side, i);",
          "941: }",
          "",
          "[Removed Lines]",
          "936:     x = pPoly->a + (i*2);",
          "939:   x = pPoly->a + (i*2);",
          "",
          "[Added Lines]",
          "945:     x = &GeoX(pPoly,i);",
          "948:   x = &GeoX(pPoly,i);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b90dbaed3092236e97f9796fa63989a3648060e16189e1267c430f4a7e799fac",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}