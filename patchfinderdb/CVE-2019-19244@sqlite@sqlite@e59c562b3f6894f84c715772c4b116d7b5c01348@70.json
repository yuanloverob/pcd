{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8851e10017893cfaf88acf80e223149fea1a1a37",
      "candidate_info": {
        "commit_hash": "8851e10017893cfaf88acf80e223149fea1a1a37",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8851e10017893cfaf88acf80e223149fea1a1a37",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c",
          "test/join5.test"
        ],
        "message": "Do not do the optimization that attempts to pull expression values from an index on that expression when processing a multi-index OR (see check-in [a47efb7c8520a0111]) because the expression transformations that are applied become invalid when the processing moves off of the current index and on to the next index.  Fix for ticket [4e8e4857d32d401f].\n\nFossilOrigin-Name: 440a7cda000164d3b46109caf2e1dde80681ba9b0d94ba9be6847d2b917445cf",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c",
          "test/join5.test||test/join5.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 49e5d11d463de078c2b8a963f5ed436210937e6dfddf06942132db9ec685bfd8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1761:       whereIndexExprTrans(pIdx, iCur, iIdxCur, pWInfo);",
          "1762:     }",
          "",
          "[Removed Lines]",
          "1760:     if( pLevel->iLeftJoin==0 ){",
          "",
          "[Added Lines]",
          "1765:     if( pLevel->iLeftJoin==0 && (pWInfo->wctrlFlags & WHERE_OR_SUBCLAUSE)==0 ){",
          "",
          "---------------"
        ],
        "test/join5.test||test/join5.test": [
          "File: test/join5.test -> test/join5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:   SELECT ifnull(z, '!!!') FROM t3 LEFT JOIN t4 ON (x=y);",
          "242: } {!!!}",
          "244: #-------------------------------------------------------------------------",
          "245: #",
          "246: reset_db",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "244: # 2019-02-08 https://sqlite.org/src/info/4e8e4857d32d401f",
          "245: reset_db",
          "246: do_execsql_test 6.100 {",
          "247:   CREATE TABLE t1(aa, bb);",
          "248:   CREATE INDEX t1x1 on t1(abs(aa), abs(bb));",
          "249:   INSERT INTO t1 VALUES(-2,-3),(+2,-3),(-2,+3),(+2,+3);",
          "250:   SELECT * FROM (t1)",
          "251:    WHERE ((abs(aa)=1 AND 1=2) OR abs(aa)=2)",
          "252:      AND abs(bb)=3",
          "253:   ORDER BY +1, +2;",
          "254: } {-2 -3 -2 3 2 -3 2 3}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b0c4c949966415a7f31d3862213527fd2d8ab0e7",
      "candidate_info": {
        "commit_hash": "b0c4c949966415a7f31d3862213527fd2d8ab0e7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b0c4c949966415a7f31d3862213527fd2d8ab0e7",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/corruptL.test",
          "test/dbfuzz001.test"
        ],
        "message": "Fix a potential problem with \"INSERT INTO ... SELECT * FROM\" (or VACUUM) statements on a corrupted database.\n\nFossilOrigin-Name: db4b4c2c1e9f1adacfb1b2fedb717a4d8bb0a299c3b11835404a99fcd67bf24b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "test/corruptL.test||test/corruptL.test",
          "test/dbfuzz001.test||test/dbfuzz001.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1b536f6fd8d58800042f130842f0586aaa357841ee0d1b690a9815c865d50826",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "806:   if( pKey ){",
          "807:     assert( nKey==(i64)(int)nKey );",
          "809:     if( pIdxKey==0 ) return SQLITE_NOMEM_BKPT;",
          "812:       rc = SQLITE_CORRUPT_BKPT;",
          "813:       goto moveto_done;",
          "814:     }",
          "",
          "[Removed Lines]",
          "808:     pIdxKey = sqlite3VdbeAllocUnpackedRecord(pCur->pKeyInfo);",
          "810:     sqlite3VdbeRecordUnpack(pCur->pKeyInfo, (int)nKey, pKey, pIdxKey);",
          "811:     if( pIdxKey->nField==0 ){",
          "",
          "[Added Lines]",
          "807:     KeyInfo *pKeyInfo = pCur->pKeyInfo;",
          "809:     pIdxKey = sqlite3VdbeAllocUnpackedRecord(pKeyInfo);",
          "811:     sqlite3VdbeRecordUnpack(pKeyInfo, (int)nKey, pKey, pIdxKey);",
          "812:     if( pIdxKey->nField==0 || pIdxKey->nField>pKeyInfo->nAllField ){",
          "",
          "---------------"
        ],
        "test/corruptL.test||test/corruptL.test": [
          "File: test/corruptL.test -> test/corruptL.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "230:   SELECT b,c FROM t1 ORDER BY a;",
          "231: } {1 {database disk image is malformed}}",
          "233: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233: #-------------------------------------------------------------------------",
          "234: reset_db",
          "235: do_execsql_test 3.0 {",
          "236:   CREATE TABLE t1(a, b, c, d INTEGER PRIMARY KEY);",
          "237:   CREATE TABLE t2(a, b, c, d INTEGER PRIMARY KEY);",
          "239:   INSERT INTO t1(a, b, c, d) VALUES (1, 2, 3, 100), (4, 5, 6, 101);",
          "240:   INSERT INTO t2(a, b, c, d) VALUES (1, 100, 3, 1000), (4, 101, 6, 1001);",
          "242:   CREATE INDEX t1a ON t1(a);",
          "243:   CREATE INDEX t2a ON t2(a, b, c);",
          "245:   PRAGMA writable_schema = 1;",
          "246:   UPDATE sqlite_master SET sql = 'CREATE INDEX t2a ON t2(a)' WHERE name='t2a';",
          "247: }",
          "249: db close",
          "250: sqlite3 db test.db",
          "252: do_catchsql_test 3.1 {",
          "253:   INSERT INTO t1 SELECT * FROM t2;",
          "254: } {1 {database disk image is malformed}}",
          "256: #-------------------------------------------------------------------------",
          "257: reset_db",
          "258: do_test 4.0 {",
          "259:   sqlite3 db {}",
          "260:   db deserialize [decode_hexdb {",
          "261: | size 4096 pagesize 512 filename crash-6b48ba69806134.db",
          "262: | page 1 offset 0",
          "263: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "264: |     16: 02 00 01 01 00 40 20 20 00 ff ff ff ff 00 00 07   .....@  ........",
          "265: |     32: 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 04   ................",
          "266: |     48: 00 00 00 00 00 00 00 05 00 eb 00 01 00 00 00 00   ................",
          "267: |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0c   ................",
          "268: |     96: 00 2e 2c 50 0d 00 00 00 06 01 06 00 01 da 01 b0   ..,P............",
          "269: |    112: 05 56 01 86 01 2a 01 06 00 00 00 00 00 00 00 00   .V...*..........",
          "270: |    128: 00 ff 00 00 ff ff ff e1 00 00 00 00 00 00 00 00   ................",
          "271: |    144: 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00   ................",
          "272: |    160: 00 00 00 00 00 00 00 00 f2 00 00 00 00 00 00 00   ................",
          "273: |    176: 00 00 f9 ff ff ff ff ff ff ff 00 00 00 00 00 fb   ................",
          "274: |    208: 00 00 00 00 00 00 00 00 1e 00 00 00 fe 00 00 00   ................",
          "275: |    224: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ca 00   ................",
          "276: |    256: 00 00 00 00 ef ff 22 07 06 17 11 11 01 31 74 61   .............1ta",
          "277: |    272: 62 6c 65 74 38 38 74 04 43 52 45 41 54 45 20 54   blet88t.CREATE T",
          "278: |    288: 41 42 4c 45 20 74 34 28 87 29 2a 06 06 17 13 11   ABLE t4(.)*.....",
          "279: |    304: 01 3f 69 4f 64 65 78 74 33 78 74 33 05 43 52 45   .?iOdext3xt3.CRE",
          "280: |    320: 41 54 45 20 49 6e 44 45 58 20 74 33 78 20 4f 4e   ATE InDEX t3x ON",
          "281: |    336: 20 74 33 28 78 29 2e 04 06 17 15 11 01 45 69 6e    t3(x).......Ein",
          "282: |    352: 64 65 2e 74 32 63 64 74 3d 05 43 52 45 41 54 45   de.t2cdt=.CREATE",
          "283: |    368: 20 49 4e 44 45 58 20 74 32 63 64 20 4f 4e 20 74    INDEX t2cd ON t",
          "284: |    384: 32 28 0a 0c 44 29 28 05 06 17 11 11 01 3d 74 61   2(..D)(......=ta",
          "285: |    400: 62 6c 65 d4 33 74 33 04 43 52 45 41 54 45 20 54   ble.3t3.CREATE T",
          "286: |    416: 41 42 4c 45 20 74 33 28 63 2c 78 2c 65 2c 66 29   ABLE t3(c,x,e,f)",
          "287: |    432: 28 02 06 17 11 11 01 3d 74 61 62 6c 65 74 32 74   (......=tablet2t",
          "288: |    448: 32 03 43 52 45 41 54 45 20 54 41 42 4c 45 20 74   2.CREATE TABLE t",
          "289: |    464: 32 28 63 2c 64 2c 65 2c 66 29 24 01 06 17 11 11   2(c,d,e,f)$.....",
          "290: |    480: 01 35 74 60 62 6c 65 74 31 74 31 02 43 52 45 41   .5t`blet1t1.CREA",
          "291: |    496: 54 45 20 54 41 42 4c 45 20 74 30 28 61 2c 62 29   TE TABLE t0(a,b)",
          "292: | page 2 offset 512",
          "293: |      0: 0d 00 ff 11 04 01 cf 00 01 fa 01 f3 01 de 01 cf   ................",
          "294: |     32: 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 13   ................",
          "295: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 20 00 00   ............. ..",
          "296: |     64: 00 00 00 00 00 00 f8 ff ff ff 00 00 00 00 00 00   ................",
          "297: |    160: 01 64 00 00 00 00 00 80 ff ff ff 00 00 00 00 00   .d..............",
          "298: |    176: 00 00 00 00 00 00 00 00 1f 00 00 00 00 00 00 03   ................",
          "299: |    192: 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00 00   ..@.............",
          "300: |    288: 00 00 00 00 00 00 ff ff ff e9 00 00 00 00 00 00   ................",
          "301: |    336: 01 00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00   ................",
          "302: |    368: 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ...............",
          "303: |    384: 00 de ff 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "304: |    464: 00 00 00 00 00 13 76 65 6e 65 69 67 68 74 13 03   ......veneight..",
          "305: |    480: 03 40 07 07 14 00 54 45 20 49 4e 44 45 58 20 74   .@....TE INDEX t",
          "306: |    496: 32 63 64 20 4f 4e 20 74 32 28 0a 0c 44 09 01 02   2cd ON t2(..D...",
          "307: | page 3 offset 1024",
          "308: |      0: 0d 00 00 00 48 01 54 00 01 f7 01 ec 01 c5 01 aa   ....H.T.........",
          "309: |     16: 30 34 28 87 29 2a 06 06 17 13 11 01 3f 69 4f 64   04(.)*......?iOd",
          "310: |     32: 65 79 74 33 78 74 33 6d 6d 6d 6d 6d 6d 7d 6d 6d   eyt3xt3mmmmmm.mm",
          "311: |     48: 6d 41 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d   mAmmmmmmmmmmmmmm",
          "312: |     64: 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 66 6d 6d 6d 6d   mmmmmmmmmmmfmmmm",
          "313: |     80: 6d 4e 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d   mNmmmmmmmmmmmmmm",
          "314: |     96: 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d   mmmmmmmmmmmmmmmm",
          "315: |    112: 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d 6d   mmmmmmmmmmmmmmmm",
          "316: |    128: 6d 6d 6d 6d 6d 00 00 00 00 00 00 00 00 00 00 00   mmmmm...........",
          "317: |    160: 80 00 00 00 00 00 00 03 00 00 00 ff e4 00 00 00   ................",
          "318: |    208: 00 00 00 00 00 00 00 00 00 00 00 00 00 c5 00 00   ................",
          "319: |    240: 14 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00   ................",
          "320: |    256: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0f ec   ................",
          "321: |    304: 00 00 00 00 19 08 05 17 17 17 17 65 69 67 68 74   ...........eight",
          "322: |    320: 65 69 67 68 74 73 65 00 00 00 00 00 00 00 00 00   eightse.........",
          "323: |    336: 00 00 00 00 19 08 05 17 17 17 17 65 69 67 68 74   ...........eight",
          "324: |    352: 65 69 67 68 74 73 65 01 65 6e 00 00 00 10 25 07   eightse.en....%.",
          "325: |    368: 07 6e 25 07 07 07 40 18 00 00 00 00 00 00 40 18   .n%...@.......@.",
          "326: |    384: 00 00 00 00 00 00 40 14 00 00 00 00 00 00 40 14   ......@.......@.",
          "327: |    400: 00 00 00 00 00 00 09 06 05 01 01 01 01 04 04 03   ................",
          "328: |    416: 03 07 05 05 01 01 09 09 02 02 19 04 05 17 17 17   ................",
          "329: |    432: 17 10 65 76 65 6e 65 69 67 68 74 65 69 67 68 74   ..eveneighteight",
          "330: |    448: 73 65 76 65 6e 25 03 05 07 07 07 07 40 14 00 00   seven%......@...",
          "331: |    464: 00 00 00 00 40 18 00 00 00 00 00 00 40 18 00 00   ....@.......@...",
          "332: |    480: 00 00 00 00 40 14 00 00 00 00 e8 f6 09 02 00 00   ....@...........",
          "333: |    496: 00 00 00 00 00 00 00 00 00 00 64 00 00 00 00 02   ..........d.....",
          "334: | page 4 offset 1536",
          "335: |      0: 0d 00 00 00 00 02 00 00 00 00 00 00 00 00 00 fa   ................",
          "336: |     16: 1f a1 07 00 00 00 00 00 01 00 00 00 00 00 00 00   ................",
          "337: |     32: 00 00 00 00 00 00 00 00 00 00 00 00 00 73 69 6d   .............sim",
          "338: |     48: 70 6c 65 00 00 00 00 00 00 00 00 00 00 00 00 00   ple.............",
          "339: |     80: 00 00 00 00 00 10 00 00 00 00 00 00 01 00 00 00   ................",
          "340: |     96: 00 00 00 00 00 00 00 00 00 00 00 00 00 fe ff ff   ................",
          "341: |    112: ff 00 00 00 00 00 00 00 00 00 00 00 4a 00 00 00   ............J...",
          "342: |    144: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "343: |    176: e5 ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "344: |    208: 00 00 00 00 00 00 00 00 00 00 36 36 00 00 00 00   ..........66....",
          "345: |    240: 00 00 00 6c 00 00 00 00 00 00 00 00 00 00 00 00   ...l............",
          "346: |    256: 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "347: |    320: 00 00 00 00 00 00 00 00 01 00 00 02 00 80 00 00   ................",
          "348: |    336: 00 00 00 00 00 19 08 05 17 17 17 17 65 69 67 68   ............eigh",
          "349: |    352: 74 65 69 67 68 74 73 65 76 65 6e 73 65 76 65 6e   teightsevenseven",
          "350: |    368: 25 07 05 07 07 07 07 40 18 00 00 00 00 00 00 40   %......@.......@",
          "351: |    384: 18 00 20 00 00 00 40 00 14 00 00 00 00 00 00 40   .. ...@........@",
          "352: |    400: 14 00 00 00 00 00 1c 09 06 05 01 01 01 01 04 04   ................",
          "353: |    416: 03 03 07 05 05 01 01 00 00 00 00 00 00 00 00 00   ................",
          "354: |    448: 74 73 65 76 65 6e 00 80 ff ff 00 00 00 00 00 aa   tseven..........",
          "355: |    464: 00 9e 00 00 00 00 00 00 00 00 00 00 00 70 6f 72   .............por",
          "356: |    480: 74 65 72 00 00 00 00 00 00 00 00 00 00 00 00 00   ter.............",
          "357: |    496: 00 00 00 00 00 00 29 00 00 00 00 00 00 00 00 00   ......).........",
          "358: | page 5 offset 2048",
          "359: |      0: 0a 00 00 00 08 01 96 00 01 fa 01 c5 01 f2 01 bc   ................",
          "360: |     16: 01 dc 01 a6 01 96 01 cc 00 00 00 00 00 00 00 00   ................",
          "361: |    112: 00 00 00 09 00 00 00 00 01 00 00 00 00 00 00 00   ................",
          "362: |    160: 74 72 69 67 62 ff ff ff ff fc 00 00 00 00 00 00   trigb...........",
          "363: |    240: 00 00 00 00 00 00 00 00 00 00 ff 00 00 00 00 00   ................",
          "364: |    256: e5 ff ff ff 00 00 54 00 00 00 00 00 00 00 00 00   ......T.........",
          "365: |    304: 00 00 00 00 00 00 09 00 00 00 00 00 00 00 00 00   ................",
          "366: |    400: 00 00 00 00 00 09 00 00 00 00 01 00 00 00 00 00   ................",
          "367: |    448: 00 00 74 72 69 67 62 ff ff ff ff fc 00 00 07 05   ..trigb.........",
          "368: |    464: 05 01 01 09 09 02 02 19 04 05 17 17 17 17 10 65   ...............e",
          "369: |    480: 76 65 6e 65 69 67 68 74 65 40 18 00 00 00 00 01   veneighte@......",
          "370: |    496: 02 03 07 04 01 01 01 03 04 02 05 04 09 01 ff fd   ................",
          "371: | end crash-6b48ba69806134.db",
          "372: }]} {}",
          "374: do_catchsql_test 4.1 {",
          "375:   INSERT INTO t3 SELECT * FROM t2;",
          "376: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "test/dbfuzz001.test||test/dbfuzz001.test": [
          "File: test/dbfuzz001.test -> test/dbfuzz001.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "347: |    496: 04 03 03 02 01 04 03 02 02 01 02 03 01 02 01 02   ................",
          "348: | end x/c02.db",
          "349:   }]",
          "353: } {}",
          "355: finish_test",
          "",
          "[Removed Lines]",
          "350:   execsql {",
          "351:     DELETE FROM t3 WHERE x IN (SELECT x FROM t4);",
          "352:   }",
          "",
          "[Added Lines]",
          "352: do_catchsql_test dbfuzz001-120 {",
          "353:   PRAGMA integrity_check;",
          "354: } {1 {database disk image is malformed}}",
          "356: do_catchsql_test dbfuzz001-130 {",
          "357:   DELETE FROM t3 WHERE x IN (SELECT x FROM t4);",
          "358: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f49c321e81905648abdb55f7fdf17dc06750a90",
      "candidate_info": {
        "commit_hash": "3f49c321e81905648abdb55f7fdf17dc06750a90",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3f49c321e81905648abdb55f7fdf17dc06750a90",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/window1.test",
          "test/window8.tcl",
          "test/window8.test"
        ],
        "message": "Fix a couple of problems with \"RANGE BETWEEN <expr> PRECEDING AND <expr> PRECEDING\" frames.\n\nFossilOrigin-Name: 39225cc77579896214dceb93b7f224b4b3bc95b3505a2e19b41b0b18b184fbc4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/window1.test||test/window1.test",
          "test/window8.tcl||test/window8.tcl",
          "test/window8.test||test/window8.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "test/window1.test||test/window1.test"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "test/window1.test||test/window1.test"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bce01d9584e52b23d7c07c2e832d5fa5d6e6235711c856b903a296725f61ed6e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2597:     }",
          "2598:   }else",
          "2599:   if( pMWin->eEnd==TK_PRECEDING ){",
          "2600:     windowCodeOp(&s, WINDOW_AGGSTEP, regEnd, 0);",
          "2601:     windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 0);",
          "2603:   }else{",
          "2604:     int addr = 0;",
          "2605:     windowCodeOp(&s, WINDOW_AGGSTEP, 0, 0);",
          "",
          "[Removed Lines]",
          "2602:     windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "",
          "[Added Lines]",
          "2605:     int bRPS = (pMWin->eStart==TK_PRECEDING && pMWin->eFrmType==TK_RANGE);",
          "2607:     if( bRPS ) windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "2609:     if( !bRPS ) windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2642:   addrEmpty = sqlite3VdbeAddOp1(v, OP_Rewind, csrWrite);",
          "2643:   VdbeCoverage(v);",
          "2644:   if( pMWin->eEnd==TK_PRECEDING ){",
          "2645:     windowCodeOp(&s, WINDOW_AGGSTEP, regEnd, 0);",
          "2646:     windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 0);",
          "2647:   }else if( pMWin->eStart==TK_FOLLOWING ){",
          "2648:     int addrStart;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2652:     int bRPS = (pMWin->eStart==TK_PRECEDING && pMWin->eFrmType==TK_RANGE);",
          "2654:     if( bRPS ) windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1081:   WINDOW win AS (ORDER BY rowid ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING)",
          "1082: } {1 1 1 2 3 4}",
          "1085: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1084: #-------------------------------------------------------------------------",
          "1086: reset_db",
          "1087: do_execsql_test 28.1.1 {",
          "1088:   CREATE TABLE t1(a INTEGER PRIMARY KEY, b CHAR(1), c CHAR(2), d ANY);",
          "1089:   INSERT INTO t1 VALUES (3, 'C', 'cc', 1.0);",
          "1090:   INSERT INTO t1 VALUES (13,'M', 'cc', NULL);",
          "1091: }",
          "1093: do_execsql_test 28.1.2 {",
          "1094:   SELECT group_concat(b,'') OVER w1 FROM t1",
          "1095:     WINDOW w1 AS (ORDER BY a RANGE BETWEEN 3 PRECEDING AND 1 PRECEDING)",
          "1096: } {",
          "1097:   {} {}",
          "1098: }",
          "1100: do_execsql_test 28.2.1 {",
          "1101:   CREATE TABLE t2(a TEXT, b INTEGER);",
          "1102:   INSERT INTO t2 VALUES('A', NULL);",
          "1103:   INSERT INTO t2 VALUES('B', NULL);",
          "1104: }",
          "1106: do_execsql_test 28.2.1 {",
          "1107:   DROP TABLE IF EXISTS t1;",
          "1108:   CREATE TABLE t1(a INTEGER PRIMARY KEY, b CHAR(1), c CHAR(2), d ANY);",
          "1109:   INSERT INTO t1 VALUES",
          "1110:     (10,'J', 'cc', NULL),",
          "1111:     (11,'K', 'cc', 'xyz'),",
          "1112:     (13,'M', 'cc', NULL);",
          "1113: }",
          "1115: do_execsql_test 28.2.2 {",
          "1116:   SELECT a, b, c, quote(d), group_concat(b,'') OVER w1, '|' FROM t1",
          "1117:     WINDOW w1 AS",
          "1118:     (ORDER BY d DESC RANGE BETWEEN 7.0 PRECEDING AND 2.5 PRECEDING)",
          "1119:     ORDER BY c, d, a;",
          "1120: } {",
          "1121:   10 J cc NULL JM |",
          "1122:   13 M cc NULL JM |",
          "1123:   11 K cc 'xyz' K |",
          "1124: }",
          "1126: #-------------------------------------------------------------------------",
          "1127: reset_db",
          "1129: do_execsql_test 29.1 {",
          "1130:   DROP TABLE IF EXISTS t1;",
          "1131:   CREATE TABLE t1(a INTEGER PRIMARY KEY, b CHAR(1), c CHAR(2), d ANY);",
          "1132:   INSERT INTO t1 VALUES",
          "1133:     (1, 'A', 'aa', 2.5),",
          "1134:     (2, 'B', 'bb', 3.75),",
          "1135:     (3, 'C', 'cc', 1.0),",
          "1136:     (4, 'D', 'cc', 8.25),",
          "1137:     (5, 'E', 'bb', 6.5),",
          "1138:     (6, 'F', 'aa', 6.5),",
          "1139:     (7, 'G', 'aa', 6.0),",
          "1140:     (8, 'H', 'bb', 9.0),",
          "1141:     (9, 'I', 'aa', 3.75),",
          "1142:     (10,'J', 'cc', NULL),",
          "1143:     (11,'K', 'cc', 'xyz'),",
          "1144:     (12,'L', 'cc', 'xyZ'),",
          "1145:     (13,'M', 'cc', NULL);",
          "1146: }",
          "1148: do_execsql_test 29.2 {",
          "1149:   SELECT a, b, c, quote(d), group_concat(b,'') OVER w1, '|' FROM t1",
          "1150:     WINDOW w1 AS",
          "1151:     (PARTITION BY c ORDER BY d DESC",
          "1152:      RANGE BETWEEN 7.0 PRECEDING AND 2.5 PRECEDING)",
          "1153:     ORDER BY c, d, a;",
          "1154: } {",
          "1155:   1 A aa 2.5 FG |",
          "1156:   9 I aa 3.75 F |",
          "1157:   7 G aa 6 {} |",
          "1158:   6 F aa 6.5 {} |",
          "1159:   2 B bb 3.75 HE |",
          "1160:   5 E bb 6.5 H |",
          "1161:   8 H bb 9 {} |",
          "1162:   10 J cc NULL JM |",
          "1163:   13 M cc NULL JM |",
          "1164:   3 C cc 1 {} |",
          "1165:   4 D cc 8.25 {} |",
          "1166:   12 L cc 'xyZ' L |",
          "1167:   11 K cc 'xyz' K |",
          "1168: }",
          "",
          "---------------"
        ],
        "test/window8.tcl||test/window8.tcl": [
          "File: test/window8.tcl -> test/window8.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "269:   }",
          "270: }",
          "272: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272: ==========",
          "274: execsql_test 6.0 {",
          "275:   DROP TABLE IF EXISTS t2;",
          "276:   CREATE TABLE t2(a TEXT, b INTEGER);",
          "277:   INSERT INTO t2 VALUES('A', NULL);",
          "278:   INSERT INTO t2 VALUES('B', NULL);",
          "279:   INSERT INTO t2 VALUES('C', 1);",
          "280: }",
          "282: execsql_test 6.1 {",
          "283:   SELECT string_agg(a, '.') OVER (",
          "284:     ORDER BY b NULLS FIRST RANGE BETWEEN 7 PRECEDING AND 2 PRECEDING",
          "285:   )",
          "286:   FROM t2",
          "287: }",
          "289: execsql_test 6.2 {",
          "290:   SELECT string_agg(a, '.') OVER (",
          "291:     ORDER BY b DESC NULLS LAST RANGE BETWEEN 7 PRECEDING AND 2 PRECEDING",
          "292:   )",
          "293:   FROM t2",
          "294: }",
          "",
          "---------------"
        ],
        "test/window8.test||test/window8.test": [
          "File: test/window8.test -> test/window8.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "3841:              count(a) OVER win",
          "3842:       FROM t3",
          "3843:       WINDOW win AS (  ORDER BY c , b , a",
          "3845:       ORDER BY 1 , 2 , 3",
          "3846: } {979 102 83   979 102 83   979 102 83   979 102 83   979 102 83   979 102 83",
          "3847:   979 102 83   979 113 81   979 113 82   979 133 80   979 148 79   979 158 77",
          "",
          "[Removed Lines]",
          "3844:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING  EXCLUDE NO OTHERS  )",
          "",
          "[Added Lines]",
          "3844:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING   EXCLUDE NO OTHERS  )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3865:              dense_rank() OVER win",
          "3866:       FROM t3",
          "3867:       WINDOW win AS (  ORDER BY c , b , a",
          "3869:       ORDER BY 1 , 2 , 3",
          "3870: } {3830 89 89   4741 88 88   5640 84 84   5640 85 85   5640 86 86   5640 87 87",
          "3871:   6485 81 81   6485 82 82   6485 83 83   7324 80 80   8163 78 78   8163 79 79",
          "",
          "[Removed Lines]",
          "3868:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING  EXCLUDE NO OTHERS  )",
          "",
          "[Added Lines]",
          "3868:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING   EXCLUDE NO OTHERS  )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4166:              count(a) OVER win",
          "4167:       FROM t3",
          "4168:       WINDOW win AS (  ORDER BY c , b , a",
          "4170:       ORDER BY 1 , 2 , 3",
          "4171: } {963 929 6   979 102 82   979 102 82   979 102 82   979 102 82   979 102 82",
          "4172:   979 102 83   979 113 80   979 113 81   979 113 82   979 133 79   979 148 78",
          "",
          "[Removed Lines]",
          "4169:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING  EXCLUDE CURRENT ROW  )",
          "",
          "[Added Lines]",
          "4169:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING   EXCLUDE CURRENT ROW  )",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4190:              dense_rank() OVER win",
          "4191:       FROM t3",
          "4192:       WINDOW win AS (  ORDER BY c , b , a",
          "4194:       ORDER BY 1 , 2 , 3",
          "4195: } {2851 89 89   3778 88 88   4681 87 87   5556 83 83   5574 82 82   5586 81 81",
          "4196:   5640 84 84   5640 85 85   5640 86 86   7324 80 80   8123 77 77   8129 73 73",
          "",
          "[Removed Lines]",
          "4193:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING  EXCLUDE CURRENT ROW  )",
          "",
          "[Added Lines]",
          "4193:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING   EXCLUDE CURRENT ROW  )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4481:              count(a) OVER win",
          "4482:       FROM t3",
          "4483:       WINDOW win AS (  ORDER BY c , b , a",
          "4485:       ORDER BY 1 , 2 , 3",
          "4486: } {963 929 6   979 102 82   979 102 82   979 102 82   979 102 82   979 102 82",
          "4487:   979 102 83   979 113 80   979 113 81   979 113 82   979 133 79   979 148 78",
          "",
          "[Removed Lines]",
          "4484:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING  EXCLUDE GROUP  )",
          "",
          "[Added Lines]",
          "4484:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING   EXCLUDE GROUP  )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4505:              dense_rank() OVER win",
          "4506:       FROM t3",
          "4507:       WINDOW win AS (  ORDER BY c , b , a",
          "4509:       ORDER BY 1 , 2 , 3",
          "4510: } {2851 89 89   3778 88 88   4681 87 87   5556 83 83   5574 82 82   5586 81 81",
          "4511:   5640 84 84   5640 85 85   5640 86 86   7324 80 80   8123 77 77   8129 73 73",
          "",
          "[Removed Lines]",
          "4508:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING  EXCLUDE GROUP  )",
          "",
          "[Added Lines]",
          "4508:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING   EXCLUDE GROUP  )",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4804:              count(a) OVER win",
          "4805:       FROM t3",
          "4806:       WINDOW win AS (  ORDER BY c , b , a",
          "4808:       ORDER BY 1 , 2 , 3",
          "4809: } {979 102 83   979 102 83   979 102 83   979 102 83   979 102 83   979 102 83",
          "4810:   979 102 83   979 113 81   979 113 82   979 133 80   979 148 79   979 158 77",
          "",
          "[Removed Lines]",
          "4807:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING  EXCLUDE TIES  )",
          "",
          "[Added Lines]",
          "4807:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING   EXCLUDE TIES  )",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4828:              dense_rank() OVER win",
          "4829:       FROM t3",
          "4830:       WINDOW win AS (  ORDER BY c , b , a",
          "4832:       ORDER BY 1 , 2 , 3",
          "4833: } {3830 89 89   4741 88 88   5640 84 84   5640 85 85   5640 86 86   5640 87 87",
          "4834:   6485 81 81   6485 82 82   6485 83 83   7324 80 80   8163 78 78   8163 79 79",
          "",
          "[Removed Lines]",
          "4831:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING  EXCLUDE TIES  )",
          "",
          "[Added Lines]",
          "4831:         ROWS BETWEEN 6 PRECEDING AND UNBOUNDED FOLLOWING   EXCLUDE TIES  )",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4848:   22796 16 16   22929 10 10   23042 9 9   23155 1 1   23155 2 2   23155 3 3",
          "4849:   23155 4 4   23155 5 5   23155 6 6   23155 7 7   23155 8 8}",
          "4851: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4851: #==========================================================================",
          "4853: do_execsql_test 6.0 {",
          "4854:   DROP TABLE IF EXISTS t2;",
          "4855:   CREATE TABLE t2(a TEXT, b INTEGER);",
          "4856:   INSERT INTO t2 VALUES('A', NULL);",
          "4857:   INSERT INTO t2 VALUES('B', NULL);",
          "4858:   INSERT INTO t2 VALUES('C', 1);",
          "4859: } {}",
          "4861: do_execsql_test 6.1 {",
          "4862:   SELECT group_concat(a, '.') OVER (",
          "4863:     ORDER BY b  RANGE BETWEEN 7 PRECEDING AND 2 PRECEDING",
          "4864:   )",
          "4865:   FROM t2",
          "4866: } {A.B   A.B   {}}",
          "4868: do_execsql_test 6.2 {",
          "4869:   SELECT group_concat(a, '.') OVER (",
          "4870:     ORDER BY b DESC  RANGE BETWEEN 7 PRECEDING AND 2 PRECEDING",
          "4871:   )",
          "4872:   FROM t2",
          "4873: } {{}   A.B   A.B}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8852ae083d8e8ea60ca331f4c3b5619dda00aac",
      "candidate_info": {
        "commit_hash": "b8852ae083d8e8ea60ca331f4c3b5619dda00aac",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b8852ae083d8e8ea60ca331f4c3b5619dda00aac",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pager.c",
          "test/fallocate.test"
        ],
        "message": "Remove a broken assert() triggered by a \"PRAGMA max_page_count = N\" invocation, where N is larger than the number of pages in the database image, but smaller than the number of pages in the database file.\n\nFossilOrigin-Name: 7cd56cad5efead5097e9918c87313bb46e583fe62bae0df1be60e10117e2c3cb",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pager.c||src/pager.c",
          "test/fallocate.test||test/fallocate.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 908ff7fffa302255a74e2334ca3a1779ed43acb0268fce5a83a56fd16794dc88",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c"
        ],
        "test/fallocate.test||test/fallocate.test": [
          "File: test/fallocate.test -> test/fallocate.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: } {1024}",
          "71: do_test fallocate-1.8 { execsql { COMMIT } } {}",
          "74: #-------------------------------------------------------------------------",
          "75: # The following tests - fallocate-2.* - test that things work in WAL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73: do_test 1.8 {",
          "74:   set nPg [db one {PRAGMA page_count}]",
          "75:   set nFile [expr [file size test.db] / 1024]",
          "76:   list [expr $nPg<100] [expr $nFile>100]",
          "77: } {1 1}",
          "79: do_execsql_test 1.9 {",
          "80:   PRAGMA max_page_count = 100;",
          "81: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9fd04bfd29b9df1c30f2f573c8f339b2d00f4bca",
      "candidate_info": {
        "commit_hash": "9fd04bfd29b9df1c30f2f573c8f339b2d00f4bca",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9fd04bfd29b9df1c30f2f573c8f339b2d00f4bca",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases added to test/fuzzdata8.db.\n\nFossilOrigin-Name: b68d21e93a0839b42f49845918df7738ee7fa2a05c7f4ae2f89fdbb5e47ad8eb",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 01ba4641ab436c6065c8725908fc0913f2abded4ea62e004b7534e0116b9451a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}