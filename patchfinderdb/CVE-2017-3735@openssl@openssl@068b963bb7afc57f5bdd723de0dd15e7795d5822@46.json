{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5a3d24ad5af3a2fee1d5381bda5329c07b6328d8",
      "candidate_info": {
        "commit_hash": "5a3d24ad5af3a2fee1d5381bda5329c07b6328d8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5a3d24ad5af3a2fee1d5381bda5329c07b6328d8",
        "files": [
          "crypto/evp/evp_enc.c"
        ],
        "message": "Only reset the ctx when a cipher is given\n\nThis restores the 1.0.2 behaviour\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Benjamin Kaduk <bkaduk@akamai.com>\nGH: #4613\n(cherry picked from commit ffd23209933ea0ad5543f15ca6303d63d8dac826)",
        "before_after_code_files": [
          "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c": [
          "File: crypto/evp/evp_enc.c -> crypto/evp/evp_enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: int EVP_CipherInit(EVP_CIPHER_CTX *ctx, const EVP_CIPHER *cipher,",
          "51:                    const unsigned char *key, const unsigned char *iv, int enc)",
          "52: {",
          "54:     return EVP_CipherInit_ex(ctx, cipher, NULL, key, iv, enc);",
          "55: }",
          "",
          "[Removed Lines]",
          "53:     EVP_CIPHER_CTX_reset(ctx);",
          "",
          "[Added Lines]",
          "53:     if (cipher != NULL)",
          "54:         EVP_CIPHER_CTX_reset(ctx);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "523ea2721581cf9eaa20036327b53b36ba2135ba",
      "candidate_info": {
        "commit_hash": "523ea2721581cf9eaa20036327b53b36ba2135ba",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/523ea2721581cf9eaa20036327b53b36ba2135ba",
        "files": [
          "util/TLSProxy/Proxy.pm"
        ],
        "message": "Fix a Proxy race condition\n\nIssue #3562 describes a problem where a race condition can occur in the\nProxy such that a test \"ok\" line can appear in the middle of other text\ncausing the test harness to miss it. The issue is that we do not wait for\nthe client process to finish after the test is complete, so that process may\ncontinue to write data to stdout/stderr at the same time that the test\nharness does.\n\nThis commit fixes TLSProxy so that we always wait for the client process to\nfinish before continuing.\n\nFixes #3562\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3567)\n(cherry picked from commit b72668a0d3586ee2560f0536c43e18991a4cfc6f)",
        "before_after_code_files": [
          "util/TLSProxy/Proxy.pm||util/TLSProxy/Proxy.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/TLSProxy/Proxy.pm||util/TLSProxy/Proxy.pm": [
          "File: util/TLSProxy/Proxy.pm -> util/TLSProxy/Proxy.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:         clientflags => \"\",",
          "43:         serverconnects => 1,",
          "44:         serverpid => 0,",
          "45:         reneg => 0,",
          "47:         #Public read",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:         clientpid => 0,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104:     $self->{record_list} = [];",
          "105:     $self->{message_list} = [];",
          "106:     $self->{clientflags} = \"\";",
          "108:     TLSProxy::Message->clear();",
          "109:     TLSProxy::Record->clear();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "108:     $self->{clientpid} = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225:             }",
          "226:             exec($execcmd);",
          "227:         }",
          "228:     }",
          "230:     # Wait for incoming connection from client",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "230:         $self->clientpid($pid);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "315:         waitpid( $self->serverpid, 0);",
          "316:         die \"exit code $? from server process\\n\" if $? != 0;",
          "317:     }",
          "318:     return 1;",
          "319: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "321:     die \"clientpid is zero\\n\" if $self->clientpid == 0;",
          "322:     print \"Waiting for client process to close: \".$self->clientpid.\"\\n\";",
          "323:     waitpid($self->clientpid, 0);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "508:     }",
          "509:     return $self->{serverpid};",
          "510: }",
          "512: sub fill_known_data",
          "513: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "518: sub clientpid",
          "519: {",
          "520:     my $self = shift;",
          "521:     if (@_) {",
          "522:         $self->{clientpid} = shift;",
          "523:     }",
          "524:     return $self->{clientpid};",
          "525: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b6f28b1243fdcddc872cb170ea87ab2138b5c388",
      "candidate_info": {
        "commit_hash": "b6f28b1243fdcddc872cb170ea87ab2138b5c388",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b6f28b1243fdcddc872cb170ea87ab2138b5c388",
        "files": [
          "crypto/bio/bss_fd.c",
          "crypto/bio/bss_log.c",
          "crypto/evp/bio_b64.c",
          "crypto/evp/bio_enc.c",
          "crypto/evp/bio_md.c",
          "crypto/evp/bio_ok.c",
          "ssl/bio_ssl.c"
        ],
        "message": "Make BIO_METHOD struct definitions consistent\n\nI noticed that some of the BIO_METHOD structs are placing the name on\nthe same line as the type and some don't. This commit places the name\non a separate line for consistency (which looks like what the majority\ndo)\n\nCLA: trivial\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Paul Dale <paul.dale@oracle.com>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4878)\n\n(cherry picked from commit 27ab91951c96364351f1ea0652dbf14622440345)",
        "before_after_code_files": [
          "crypto/bio/bss_fd.c||crypto/bio/bss_fd.c",
          "crypto/bio/bss_log.c||crypto/bio/bss_log.c",
          "crypto/evp/bio_b64.c||crypto/evp/bio_b64.c",
          "crypto/evp/bio_enc.c||crypto/evp/bio_enc.c",
          "crypto/evp/bio_md.c||crypto/evp/bio_md.c",
          "crypto/evp/bio_ok.c||crypto/evp/bio_ok.c",
          "ssl/bio_ssl.c||ssl/bio_ssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/bss_fd.c||crypto/bio/bss_fd.c": [
          "File: crypto/bio/bss_fd.c -> crypto/bio/bss_fd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: int BIO_fd_should_retry(int s);",
          "60: static const BIO_METHOD methods_fdp = {",
          "62:     fd_write,",
          "63:     fd_read,",
          "64:     fd_puts,",
          "",
          "[Removed Lines]",
          "61:     BIO_TYPE_FD, \"file descriptor\",",
          "",
          "[Added Lines]",
          "61:     BIO_TYPE_FD,",
          "62:     \"file descriptor\",",
          "",
          "---------------"
        ],
        "crypto/bio/bss_log.c||crypto/bio/bss_log.c": [
          "File: crypto/bio/bss_log.c -> crypto/bio/bss_log.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: static void xcloselog(BIO *bp);",
          "87: static const BIO_METHOD methods_slg = {",
          "89:     slg_write,",
          "90:     NULL,",
          "91:     slg_puts,",
          "",
          "[Removed Lines]",
          "88:     BIO_TYPE_MEM, \"syslog\",",
          "",
          "[Added Lines]",
          "88:     BIO_TYPE_MEM,",
          "89:     \"syslog\",",
          "",
          "---------------"
        ],
        "crypto/evp/bio_b64.c||crypto/evp/bio_b64.c": [
          "File: crypto/evp/bio_b64.c -> crypto/evp/bio_b64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: } BIO_B64_CTX;",
          "49: static const BIO_METHOD methods_b64 = {",
          "51:     b64_write,",
          "52:     b64_read,",
          "53:     b64_puts,",
          "",
          "[Removed Lines]",
          "50:     BIO_TYPE_BASE64, \"base64 encoding\",",
          "",
          "[Added Lines]",
          "50:     BIO_TYPE_BASE64,",
          "51:     \"base64 encoding\",",
          "",
          "---------------"
        ],
        "crypto/evp/bio_enc.c||crypto/evp/bio_enc.c": [
          "File: crypto/evp/bio_enc.c -> crypto/evp/bio_enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: } BIO_ENC_CTX;",
          "48: static const BIO_METHOD methods_enc = {",
          "50:     enc_write,",
          "51:     enc_read,",
          "",
          "[Removed Lines]",
          "49:     BIO_TYPE_CIPHER, \"cipher\",",
          "",
          "[Added Lines]",
          "49:     BIO_TYPE_CIPHER,",
          "50:     \"cipher\",",
          "",
          "---------------"
        ],
        "crypto/evp/bio_md.c||crypto/evp/bio_md.c": [
          "File: crypto/evp/bio_md.c -> crypto/evp/bio_md.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: static long md_callback_ctrl(BIO *h, int cmd, bio_info_cb *fp);",
          "34: static const BIO_METHOD methods_md = {",
          "36:     md_write,",
          "37:     md_read,",
          "",
          "[Removed Lines]",
          "35:     BIO_TYPE_MD, \"message digest\",",
          "",
          "[Added Lines]",
          "35:     BIO_TYPE_MD,",
          "36:     \"message digest\",",
          "",
          "---------------"
        ],
        "crypto/evp/bio_ok.c||crypto/evp/bio_ok.c": [
          "File: crypto/evp/bio_ok.c -> crypto/evp/bio_ok.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: } BIO_OK_CTX;",
          "110: static const BIO_METHOD methods_ok = {",
          "112:     ok_write,",
          "113:     ok_read,",
          "",
          "[Removed Lines]",
          "111:     BIO_TYPE_CIPHER, \"reliable\",",
          "",
          "[Added Lines]",
          "111:     BIO_TYPE_CIPHER,",
          "112:     \"reliable\",",
          "",
          "---------------"
        ],
        "ssl/bio_ssl.c||ssl/bio_ssl.c": [
          "File: ssl/bio_ssl.c -> ssl/bio_ssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: } BIO_SSL;",
          "36: static const BIO_METHOD methods_sslp = {",
          "38:     ssl_write,",
          "39:     ssl_read,",
          "40:     ssl_puts,",
          "",
          "[Removed Lines]",
          "37:     BIO_TYPE_SSL, \"ssl\",",
          "",
          "[Added Lines]",
          "37:     BIO_TYPE_SSL,",
          "38:     \"ssl\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "819d18f6116e97845ebe453128f3c2a78e42a785",
      "candidate_info": {
        "commit_hash": "819d18f6116e97845ebe453128f3c2a78e42a785",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/819d18f6116e97845ebe453128f3c2a78e42a785",
        "files": [
          "crypto/err/err.c"
        ],
        "message": "Fix a possible crash in the error handling.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3672)\n\n(cherry picked from commit 4fc426b78964b3d234cb7b1b6112c9b80e16a13a)",
        "before_after_code_files": [
          "crypto/err/err.c||crypto/err/err.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/err/err.c||crypto/err/err.c": [
          "File: crypto/err/err.c -> crypto/err/err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "361:     }",
          "362: #endif",
          "363:     es = ERR_get_state();",
          "365:     es->top = (es->top + 1) % ERR_NUM_ERRORS;",
          "366:     if (es->top == es->bottom)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "364:     if (es == NULL)",
          "365:         return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "378:     ERR_STATE *es;",
          "380:     es = ERR_get_state();",
          "382:     for (i = 0; i < ERR_NUM_ERRORS; i++) {",
          "383:         err_clear(es, i);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "383:     if (es == NULL)",
          "384:         return;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "442:     unsigned long ret;",
          "444:     es = ERR_get_state();",
          "446:     if (inc && top) {",
          "447:         if (file)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "449:     if (es == NULL)",
          "450:         return 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "692:     int i;",
          "694:     es = ERR_get_state();",
          "696:     i = es->top;",
          "697:     if (i == 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "701:     if (es == NULL)",
          "702:         return;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "747:     ERR_STATE *es;",
          "749:     es = ERR_get_state();",
          "751:     if (es->bottom == es->top)",
          "752:         return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "758:     if (es == NULL)",
          "759:         return 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "759:     ERR_STATE *es;",
          "761:     es = ERR_get_state();",
          "763:     while (es->bottom != es->top",
          "764:            && (es->err_flags[es->top] & ERR_FLAG_MARK) == 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "772:     if (es == NULL)",
          "773:         return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "575d492222ef457b456672e2d62a18daca03459a",
      "candidate_info": {
        "commit_hash": "575d492222ef457b456672e2d62a18daca03459a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/575d492222ef457b456672e2d62a18daca03459a",
        "files": [
          "apps/s_server.c"
        ],
        "message": "Add missing HTML tag in www_body in s_server.c\n\nIn the generated HTML document, the `<pre>` tag is not closed. This patch\nalso has a trivial code-style improvement, unrelated to the bug fix.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4088)\n\n(cherry picked from commit 1a9f5cf0d58629ab8972f50e937d8ab78bf27b6f)",
        "before_after_code_files": [
          "apps/s_server.c||apps/s_server.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_server.c||apps/s_server.c": [
          "File: apps/s_server.c -> apps/s_server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2853:                 PEM_write_bio_X509(io, peer);",
          "2854:                 X509_free(peer);",
          "2855:                 peer = NULL;",
          "2857:                 BIO_puts(io, \"no client certificate available\\n\");",
          "2859:             break;",
          "2860:         } else if ((www == 2 || www == 3)",
          "2861:                    && (strncmp(\"GET /\", buf, 5) == 0)) {",
          "",
          "[Removed Lines]",
          "2856:             } else",
          "2858:             BIO_puts(io, \"</BODY></HTML>\\r\\n\\r\\n\");",
          "",
          "[Added Lines]",
          "2856:             } else {",
          "2858:             }",
          "2859:             BIO_puts(io, \"</pre></BODY></HTML>\\r\\n\\r\\n\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}