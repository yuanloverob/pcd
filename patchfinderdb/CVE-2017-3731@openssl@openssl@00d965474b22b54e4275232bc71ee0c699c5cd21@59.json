{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "38bf0e64f7a06f35edf66968b991222017e41984",
      "candidate_info": {
        "commit_hash": "38bf0e64f7a06f35edf66968b991222017e41984",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/38bf0e64f7a06f35edf66968b991222017e41984",
        "files": [
          "crypto/evp/pmeth_fn.c"
        ],
        "message": "Reformat M_check_autoarg to match our coding style\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2121)\n(cherry picked from commit 2629440d42e4d64cd0cb849c1b19fa87a4fcb90f)",
        "before_after_code_files": [
          "crypto/evp/pmeth_fn.c||crypto/evp/pmeth_fn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/pmeth_fn.c||crypto/evp/pmeth_fn.c": [
          "File: crypto/evp/pmeth_fn.c -> crypto/evp/pmeth_fn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #include \"internal/evp_int.h\"",
          "17: #define M_check_autoarg(ctx, arg, arglen, err) \\",
          "38: int EVP_PKEY_sign_init(EVP_PKEY_CTX *ctx)",
          "39: {",
          "",
          "[Removed Lines]",
          "18:         if (ctx->pmeth->flags & EVP_PKEY_FLAG_AUTOARGLEN) \\",
          "19:                 { \\",
          "20:                 size_t pksize = (size_t)EVP_PKEY_size(ctx->pkey); \\",
          "21:                 if (pksize == 0) \\",
          "22:                         { \\",
          "23:                         EVPerr(err, EVP_R_INVALID_KEY); /*ckerr_ignore*/\\",
          "24:                         return 0; \\",
          "25:                         } \\",
          "26:                 else if (!arg)                 \\",
          "27:                         { \\",
          "29:                         return 1; \\",
          "30:                         } \\",
          "31:                 else if (*arglen < pksize) \\",
          "32:                         { \\",
          "33:                         EVPerr(err, EVP_R_BUFFER_TOO_SMALL); /*ckerr_ignore*/\\",
          "34:                         return 0; \\",
          "35:                         } \\",
          "36:                 }",
          "",
          "[Added Lines]",
          "18:     if (ctx->pmeth->flags & EVP_PKEY_FLAG_AUTOARGLEN) {           \\",
          "19:         size_t pksize = (size_t)EVP_PKEY_size(ctx->pkey);         \\",
          "20:                                                                   \\",
          "21:         if (pksize == 0) {                                        \\",
          "22:             EVPerr(err, EVP_R_INVALID_KEY); /*ckerr_ignore*/      \\",
          "23:             return 0;                                             \\",
          "24:         }                                                         \\",
          "25:         if (!arg) {                                               \\",
          "27:             return 1;                                             \\",
          "28:         }                                                         \\",
          "29:         if (*arglen < pksize) {                                   \\",
          "30:             EVPerr(err, EVP_R_BUFFER_TOO_SMALL); /*ckerr_ignore*/ \\",
          "31:             return 0;                                             \\",
          "32:         }                                                         \\",
          "33:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a2a5d26cea54f490474a366100cf4860a54e030",
      "candidate_info": {
        "commit_hash": "0a2a5d26cea54f490474a366100cf4860a54e030",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0a2a5d26cea54f490474a366100cf4860a54e030",
        "files": [
          "test/evp_test.c"
        ],
        "message": "Skipping tests in evp_test leaks memory\n\nWhen configured with \"no-mdc2 enable-crypto-mdebug\" the evp_test\nwill leak memory due to skipped tests, and error out.\n\nAlso fix a skip condition\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1946)",
        "before_after_code_files": [
          "test/evp_test.c||test/evp_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/evp_test.c||test/evp_test.c": [
          "File: test/evp_test.c -> test/evp_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "351:     if (t->meth) {",
          "352:         t->ntests++;",
          "353:         if (t->skip) {",
          "355:             t->nskip++;",
          "368:         }",
          "369:         ERR_clear_error();",
          "373:         OPENSSL_free(t->expected_err);",
          "374:         t->expected_err = NULL;",
          "375:         free_expected(t);",
          "",
          "[Removed Lines]",
          "354:             t->meth = tmeth;",
          "356:             return 1;",
          "357:         }",
          "358:         t->err = NULL;",
          "359:         if (t->meth->run_test(t) != 1) {",
          "360:             fprintf(stderr, \"%s test error line %d\\n\",",
          "361:                     t->meth->name, t->start_line);",
          "362:             return 0;",
          "363:         }",
          "364:         if (!check_test_error(t)) {",
          "365:             if (t->err)",
          "366:                 ERR_print_errors_fp(stderr);",
          "367:             t->errors++;",
          "370:         t->meth->cleanup(t);",
          "371:         OPENSSL_free(t->data);",
          "372:         t->data = NULL;",
          "",
          "[Added Lines]",
          "355:         } else {",
          "357:             t->err = NULL;",
          "358:             if (t->meth->run_test(t) != 1) {",
          "359:                 fprintf(stderr, \"%s test error line %d\\n\",",
          "360:                         t->meth->name, t->start_line);",
          "361:                 return 0;",
          "362:             }",
          "363:             if (!check_test_error(t)) {",
          "364:                 if (t->err)",
          "365:                     ERR_print_errors_fp(stderr);",
          "366:                 t->errors++;",
          "367:             }",
          "371:         if (t->data != NULL) {",
          "372:             t->meth->cleanup(t);",
          "373:             OPENSSL_free(t->data);",
          "374:             t->data = NULL;",
          "375:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1212:         rv = find_key(&pkey, name, t->public);",
          "1213:     if (!rv)",
          "1214:         rv = find_key(&pkey, name, t->private);",
          "1218:         t->skip = 1;",
          "1219:         return 1;",
          "1220:     }",
          "",
          "[Removed Lines]",
          "1215:     if (!rv)",
          "1216:         return 0;",
          "1217:     if (!pkey) {",
          "",
          "[Added Lines]",
          "1218:     if (!rv || pkey == NULL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "28991705b71d47066997c0afe5060b470c5ac09f",
      "candidate_info": {
        "commit_hash": "28991705b71d47066997c0afe5060b470c5ac09f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/28991705b71d47066997c0afe5060b470c5ac09f",
        "files": [
          "test/recipes/80-test_ssl_old.t"
        ],
        "message": "Fix test/recipes/80-test_ssl_old.t\n\nCherry-pick error\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3006)",
        "before_after_code_files": [
          "test/recipes/80-test_ssl_old.t||test/recipes/80-test_ssl_old.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/80-test_ssl_old.t||test/recipes/80-test_ssl_old.t": [
          "File: test/recipes/80-test_ssl_old.t -> test/recipes/80-test_ssl_old.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "469:  foreach my $protocol (sort keys %ciphersuites) {",
          "470:      note \"Testing ciphersuites for $protocol\";",
          "471:      foreach my $cipher (@{$ciphersuites{$protocol}}) {",
          "472:                 if ($protocol eq \"-ssl3\" && $cipher =~ /ECDH/ ) {",
          "473:                     note \"*****SKIPPING $protocol $cipher\";",
          "474:                     ok(1);",
          "475:                 } else {",
          "478:                        \"Testing $cipher\");",
          "479:                }",
          "480:      }",
          "",
          "[Removed Lines]",
          "476:                     ok(run(test([@ssltest, @exkeys, \"-cipher\", $cipher,",
          "477:                                  $protocol eq \"SSLv3\" ? (\"-ssl3\") : ()])),",
          "",
          "[Added Lines]",
          "471:      # ssltest_old doesn't know -tls1_2, but that's fine, since that's",
          "472:      # the default choice if TLSv1.2 enabled",
          "473:      my $flag = $protocol eq \"-tls1_2\" ? \"\" : $protocol;",
          "479:                     ok(run(test([@ssltest, @exkeys, \"-cipher\", $cipher, $flag])),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7bd011d70e85b2fff2928e30adf6965d34af9f04",
      "candidate_info": {
        "commit_hash": "7bd011d70e85b2fff2928e30adf6965d34af9f04",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7bd011d70e85b2fff2928e30adf6965d34af9f04",
        "files": [
          "ssl/s3_enc.c"
        ],
        "message": "fix a memory leak in ssl3_generate_key_block fix the error handling in ssl3_change_cipher_state\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2164)\n(cherry picked from commit a6fd7c1dbef2c3da3c87f1582ae48e4c29aa303c)",
        "before_after_code_files": [
          "ssl/s3_enc.c||ssl/s3_enc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/s3_enc.c||ssl/s3_enc.c": [
          "File: ssl/s3_enc.c -> ssl/s3_enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     EVP_MD_CTX_set_flags(m5, EVP_MD_CTX_FLAG_NON_FIPS_ALLOW);",
          "62:     for (i = 0; (int)i < num; i += MD5_DIGEST_LENGTH) {",
          "63:         k++;",
          "66:             SSLerr(SSL_F_SSL3_GENERATE_KEY_BLOCK, ERR_R_INTERNAL_ERROR);",
          "68:         }",
          "70:         for (j = 0; j < k; j++)",
          "",
          "[Removed Lines]",
          "64:         if (k > sizeof buf) {",
          "67:             return 0;",
          "",
          "[Added Lines]",
          "64:         if (k > sizeof(buf)) {",
          "67:             goto err;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "226:     memcpy(mac_secret, ms, i);",
          "230: #ifdef OPENSSL_SSL_TRACE_CRYPTO",
          "231:     if (s->msg_callback) {",
          "",
          "[Removed Lines]",
          "228:     EVP_CipherInit_ex(dd, c, NULL, key, iv, (which & SSL3_CC_WRITE));",
          "",
          "[Added Lines]",
          "228:     if (!EVP_CipherInit_ex(dd, c, NULL, key, iv, (which & SSL3_CC_WRITE)))",
          "229:         goto err2;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc4667333bf5b712aa3c17b9713a6dda32d5feb1",
      "candidate_info": {
        "commit_hash": "dc4667333bf5b712aa3c17b9713a6dda32d5feb1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dc4667333bf5b712aa3c17b9713a6dda32d5feb1",
        "files": [
          "ssl/record/rec_layer_s3.c"
        ],
        "message": "Mark a HelloRequest record as read if we ignore it\n\nOtherwise the client will try to process it again. The second time around\nit will try and move the record data into handshake fragment storage and\nrealise that there is no data left. At that point it marks it as read\nanyway. However, it is a bug that we go around the loop a second time, so\nwe prevent that.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2200)\n(cherry picked from commit 290a0419f0c13a30fb3a1d1a279125c8aeafd17e)",
        "before_after_code_files": [
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1297:                         return (-1);",
          "1298:                     }",
          "1299:                 }",
          "1300:             }",
          "1301:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1300:             } else {",
          "1301:                 SSL3_RECORD_set_read(rr);",
          "1303:         } else {",
          "1305:             SSL3_RECORD_set_read(rr);",
          "",
          "---------------"
        ]
      }
    }
  ]
}