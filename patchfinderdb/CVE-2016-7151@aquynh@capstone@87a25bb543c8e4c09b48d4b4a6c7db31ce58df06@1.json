{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9d3e929ae6d2b89ae9f3fa2a41375331bfb86164",
      "candidate_info": {
        "commit_hash": "9d3e929ae6d2b89ae9f3fa2a41375331bfb86164",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9d3e929ae6d2b89ae9f3fa2a41375331bfb86164",
        "files": [
          "bindings/python/prebuilt/.gitkeep",
          "bindings/python/setup.py"
        ],
        "message": "Add ability to copy prebuilt libraries from prebuilt directory during python build",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:     # copy public headers",
          "118:     shutil.copytree(os.path.join(BUILD_DIR, 'include'), os.path.join(HEADERS_DIR, 'capstone'))",
          "120:     os.chdir(BUILD_DIR)",
          "122:     # platform description refers at https://docs.python.org/2/library/sys.html#sys.platform",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120:     # if prebuilt libraries are available, use those and cancel build",
          "121:     if os.path.exists(os.path.join(ROOT_DIR, 'prebuilt', LIBRARY_FILE)) and \\",
          "122:             (not STATIC_LIBRARY_FILE or os.path.exists(os.path.join(ROOT_DIR, 'prebuilt', STATIC_LIBRARY_FILE))):",
          "123:         shutil.copy(os.path.join(ROOT_DIR, 'prebuilt', LIBRARY_FILE), LIBS_DIR)",
          "124:         if STATIC_LIBRARY_FILE is not None:",
          "125:             shutil.copy(os.path.join(ROOT_DIR, 'prebuilt', STATIC_LIBRARY_FILE), LIBS_DIR)",
          "126:         return",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c856f151e927af258166ff526577913f16b613e0",
      "candidate_info": {
        "commit_hash": "c856f151e927af258166ff526577913f16b613e0",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/c856f151e927af258166ff526577913f16b613e0",
        "files": [
          "include/capstone/m68k.h"
        ],
        "message": "[M68K] typo on m68k_address_mode private struct",
        "before_after_code_files": [
          "include/capstone/m68k.h||include/capstone/m68k.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/m68k.h||include/capstone/m68k.h": [
          "File: include/capstone/m68k.h -> include/capstone/m68k.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: } m68k_reg;",
          "81:  M68K_AM_NONE = 0,   // No address mode.",
          "83:  M68K_AM_REG_DIRECT_DATA,  // Register Direct - Data",
          "",
          "[Removed Lines]",
          "80: typedef enum m68k_adress_mode {",
          "",
          "[Added Lines]",
          "80: typedef enum m68k_address_mode {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105:  M68K_AM_ABSOLUTE_DATA_SHORT, // Absolute Data Addressing  - Short",
          "106:  M68K_AM_ABSOLUTE_DATA_LONG,  // Absolute Data Addressing  - Long",
          "107:  M68K_AM_IMMIDIATE,    // Immidate value",
          "111: typedef enum m68k_op_type {",
          "",
          "[Removed Lines]",
          "108: } m68k_adress_mode;",
          "",
          "[Added Lines]",
          "108: } m68k_address_mode;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "145:   uint32_t register_bits; // register bits for movem/cas2/etc (always in d0-d7, a0-a7, fp0 - fp7 order)",
          "146:  };",
          "147:  m68k_op_type type;",
          "149: } cs_m68k_op;",
          "",
          "[Removed Lines]",
          "148:  m68k_adress_mode address_mode; // M68K addressing mode for this op",
          "",
          "[Added Lines]",
          "148:  m68k_address_mode address_mode; // M68K addressing mode for this op",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1555b5b87013df4d6119344473c30ce4e90923e5",
      "candidate_info": {
        "commit_hash": "1555b5b87013df4d6119344473c30ce4e90923e5",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/1555b5b87013df4d6119344473c30ce4e90923e5",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "use stdlib's qsort",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #ifdef CAPSTONE_HAS_X86",
          "6: #include <string.h>",
          "8: #include \"X86Mapping.h\"",
          "9: #include \"X86DisassemblerDecoder.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: #include <stdlib.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2754: struct insn_reg insn_regs_intel_sorted [ARR_SIZE(insn_regs_intel)];",
          "2760: {",
          "2787: }",
          "2790: static bool intel_resgs_sorted = false;",
          "",
          "[Removed Lines]",
          "2756: static int partition_regs(struct insn_reg a[], int l, int r);",
          "2757: static void qsort_regs(struct insn_reg a[], int l, int r);",
          "2759: static void qsort_regs(struct insn_reg a[], int l, int r)",
          "2761:  int j;",
          "2762:  if (l < r) {",
          "2763:   j = partition_regs(a, l, r);",
          "2764:   qsort_regs(a, l, j-1);",
          "2765:   qsort_regs(a, j+1, r);",
          "2766:  }",
          "2767: }",
          "2769: static int partition_regs(struct insn_reg a[], int l, int r) {",
          "2770:  struct insn_reg pivot, t;",
          "2771:  int i, j;",
          "2772:  pivot = a[l];",
          "2773:  i = l;",
          "2774:  j = r+1;",
          "2775:  while(1) {",
          "2776:   do ++i; while(a[i].insn <= pivot.insn && i <= r);",
          "2777:   do --j; while(a[j].insn > pivot.insn);",
          "2778:   if (i >= j) {",
          "2779:    break;",
          "2780:   }",
          "2781:   t = a[i]; a[i] = a[j]; a[j] = t;",
          "2782:  }",
          "2783:  t = a[l];",
          "2784:  a[l] = a[j];",
          "2785:  a[j] = t;",
          "2786:  return j;",
          "",
          "[Added Lines]",
          "2757: static void regs_cmp(const void *a, const void *b)",
          "2759:  uint16_t l = ((struct insn_reg *)a)->insn;",
          "2760:  uint16_t r = ((struct insn_reg *)b)->insn;",
          "2761:  return (l - r);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2800:  if (!intel_resgs_sorted) {",
          "2801:   memcpy (insn_regs_intel_sorted, insn_regs_intel,",
          "2802:     sizeof(insn_regs_intel_sorted));",
          "2804:   intel_resgs_sorted = true;",
          "2805:  }",
          "",
          "[Removed Lines]",
          "2803:   qsort_regs (insn_regs_intel_sorted, first, last);",
          "",
          "[Added Lines]",
          "2777:   qsort ((void*)insn_regs_intel_sorted,",
          "2778:     ARR_SIZE(insn_regs_intel_sorted), sizeof(struct insn_reg), regs_cmp);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b04dce3732e9b3c0c63b36c91b895184ee8ddf1b",
      "candidate_info": {
        "commit_hash": "b04dce3732e9b3c0c63b36c91b895184ee8ddf1b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/b04dce3732e9b3c0c63b36c91b895184ee8ddf1b",
        "files": [
          "arch/ARM/ARMInstPrinter.c"
        ],
        "message": "arm: UADD8 updates flags. fix #980",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "240:  { ARM_INS_SUB, \"subs\" },",
          "241:  { ARM_INS_UMLAL, \"umlals\" },",
          "242:  { ARM_INS_UMULL, \"umulls\" },",
          "243: };",
          "245: void ARM_post_printer(csh ud, cs_insn *insn, char *insn_asm, MCInst *mci)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "244:  { ARM_INS_UADD8, \"uadd8\" },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bbc5fe3fe6c0dc2d3c383bbb36ecf5bc6391a844",
      "candidate_info": {
        "commit_hash": "bbc5fe3fe6c0dc2d3c383bbb36ecf5bc6391a844",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/bbc5fe3fe6c0dc2d3c383bbb36ecf5bc6391a844",
        "files": [
          "arch/TMS320C64x/TMS320C64xGenAsmWriter.inc",
          "arch/TMS320C64x/TMS320C64xInstPrinter.c",
          "tests/test_tms320c64x.c"
        ],
        "message": "Fixed myinttypes.h",
        "before_after_code_files": [
          "arch/TMS320C64x/TMS320C64xGenAsmWriter.inc||arch/TMS320C64x/TMS320C64xGenAsmWriter.inc",
          "arch/TMS320C64x/TMS320C64xInstPrinter.c||arch/TMS320C64x/TMS320C64xInstPrinter.c",
          "tests/test_tms320c64x.c||tests/test_tms320c64x.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/TMS320C64x/TMS320C64xGenAsmWriter.inc||arch/TMS320C64x/TMS320C64xGenAsmWriter.inc": [
          "File: arch/TMS320C64x/TMS320C64xGenAsmWriter.inc -> arch/TMS320C64x/TMS320C64xGenAsmWriter.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: #include <stdio.h>",
          "",
          "[Removed Lines]",
          "10: #include \"../../myinttypes.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "arch/TMS320C64x/TMS320C64xInstPrinter.c||arch/TMS320C64x/TMS320C64xInstPrinter.c": [
          "File: arch/TMS320C64x/TMS320C64xInstPrinter.c -> arch/TMS320C64x/TMS320C64xInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: #include <ctype.h>",
          "7: #include <string.h>",
          "11: #include \"TMS320C64xInstPrinter.h\"",
          "12: #include \"../../MCInst.h\"",
          "13: #include \"../../utils.h\"",
          "",
          "[Removed Lines]",
          "9: #include \"../../myinttypes.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/test_tms320c64x.c||tests/test_tms320c64x.c": [
          "File: tests/test_tms320c64x.c -> tests/test_tms320c64x.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <stdio.h>",
          "7: #include <capstone/capstone.h>",
          "",
          "[Removed Lines]",
          "5: #include \"../myinttypes.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}