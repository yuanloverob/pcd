{
  "cve_id": "CVE-2022-36752",
  "cve_desc": "png2webp v1.0.4 was discovered to contain an out-of-bounds write via the function w2p. This vulnerability is exploitable via a crafted png file.",
  "repo": "landfillbaby/png2webp",
  "patch_hash": "8f21ad79b0cd98fc22d5b49734543101946abbff",
  "patch_info": {
    "commit_hash": "8f21ad79b0cd98fc22d5b49734543101946abbff",
    "repo": "landfillbaby/png2webp",
    "commit_url": "https://github.com/landfillbaby/png2webp/commit/8f21ad79b0cd98fc22d5b49734543101946abbff",
    "files": [
      "png2webp.c"
    ],
    "message": "v1.0.5: fix buffer overrun when reading bad WebPs",
    "before_after_code_files": [
      "png2webp.c||png2webp.c"
    ]
  },
  "patch_diff": {
    "png2webp.c||png2webp.c": [
      "File: png2webp.c -> png2webp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include <errno.h>",
      "5: #include <inttypes.h>",
      "6: #include <limits.h>",
      "",
      "[Removed Lines]",
      "3: #define VERSION \"v1.0.4\"",
      "",
      "[Added Lines]",
      "3: #define VERSION \"v1.0.5\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "319:   }",
      "320:   size_t l = ((uint32_t)(i[4] | (i[5] << 8) | (i[6] << 16) | (i[7] << 24))) + 8;",
      "322:   x = malloc(l);",
      "323:   if(!x) {",
      "324:     PF(\"ERROR reading %s: %s\", IP, *k);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "322:   if(l <= 12",
      "323: #ifdef SSIZE_MAX",
      "324:     || l - 12 > SSIZE_MAX",
      "325: #endif",
      "326:   ) {",
      "327:     PF(\"ERROR reading %s: %s\", IP, k[2]);",
      "328:     goto w2p_close;",
      "329:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ba07cafce8b5191ea0efd5256f976271999f1739",
      "candidate_info": {
        "commit_hash": "ba07cafce8b5191ea0efd5256f976271999f1739",
        "repo": "landfillbaby/png2webp",
        "commit_url": "https://github.com/landfillbaby/png2webp/commit/ba07cafce8b5191ea0efd5256f976271999f1739",
        "files": [
          "png2webp.c"
        ],
        "message": "v1.1.3",
        "before_after_code_files": [
          "png2webp.c||png2webp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "png2webp.c||png2webp.c"
          ],
          "candidate": [
            "png2webp.c||png2webp.c"
          ]
        }
      },
      "candidate_diff": {
        "png2webp.c||png2webp.c": [
          "File: png2webp.c -> png2webp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <errno.h>",
          "5: #include <inttypes.h>",
          "6: #include <limits.h>",
          "",
          "[Removed Lines]",
          "3: #define VERSION \"v1.1.2\"",
          "",
          "[Added Lines]",
          "3: #define VERSION \"v1.1.3\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7aea05d63a64ab00ced785dface44092b99d3aa",
      "candidate_info": {
        "commit_hash": "b7aea05d63a64ab00ced785dface44092b99d3aa",
        "repo": "landfillbaby/png2webp",
        "commit_url": "https://github.com/landfillbaby/png2webp/commit/b7aea05d63a64ab00ced785dface44092b99d3aa",
        "files": [
          "Makefile",
          "petimestamp.c",
          "png2webp.c"
        ],
        "message": "v1.0.1: better timestamp in Windows build",
        "before_after_code_files": [
          "petimestamp.c||petimestamp.c",
          "png2webp.c||png2webp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "png2webp.c||png2webp.c"
          ],
          "candidate": [
            "png2webp.c||png2webp.c"
          ]
        }
      },
      "candidate_diff": {
        "petimestamp.c||petimestamp.c": [
          "File: petimestamp.c -> petimestamp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: #include <assert.h>",
          "4: #include <inttypes.h>",
          "5: #include <limits.h>",
          "6: #include <stdio.h>",
          "7: static uint32_t le32(uint8_t x[4]) {",
          "8:   return (uint32_t)((x[3] << 24) | (x[2] << 16) | (x[1] << 8) | x[0]);",
          "9: }",
          "10: int main(int argc, char **argv) {",
          "11:   static_assert(CHAR_BIT == 8, \"char isn't 8-bit\");",
          "12:   if(argc != 3) {",
          "13:     fputs(\"Usage: petimestamp <file> <timestamp>\\n\", stderr);",
          "14:     return -1;",
          "15:   }",
          "16:   char *end;",
          "17:   uintmax_t t = strtoumax(argv[2], &end, 0);",
          "18:   if(t > 0xFFFFFFFF || *end) {",
          "19:     fputs(\"Invalid timestamp!\\n\"",
          "20:    \"Should be decimal, octal (leading 0), or hexadecimal (leading 0x),\\n\"",
          "21:    \"as seconds since the epoch, in range 0 to 0xFFFFFFFF\\n\",",
          "22:       stderr);",
          "23:     return 1;",
          "24:   }",
          "25:   FILE *f = fopen(argv[1], \"r+b\");",
          "26:   if(!f) {",
          "27:     fputs(\"Couldn't open file\\n\", stderr);",
          "28:     return 1;",
          "29:   }",
          "30:   char dos[2];",
          "31:   if(!fread(dos, 2, 1, f)) {",
          "32:   bad:",
          "33:     fputs(\"Invalid Windows PE(64) file\\n\", stderr);",
          "34:     fclose(f);",
          "35:     return 1;",
          "36:   }",
          "37:   if(*dos != 'M' || dos[1] != 'Z') goto bad;",
          "38:   if(fseek(f, 60, SEEK_SET)) goto bad;",
          "39:   uint8_t buf[4];",
          "40:   if(!fread(buf, 4, 1, f)) goto bad;",
          "41:   uint32_t offset = le32(buf);",
          "42:   if(fseek(f, offset, SEEK_SET)) goto bad;",
          "43:   if(!fread(buf, 4, 1, f)) goto bad;",
          "44:   if(*buf != 'P' || buf[1] != 'E' || buf[2] || buf[3]) goto bad;",
          "45:   if(fseek(f, offset + 8, SEEK_SET)) goto bad;",
          "46: #ifndef NO_PRINT_ORIG",
          "47:   if(!fread(buf, 4, 1, f)) goto bad;",
          "48:   uint32_t origts = le32(buf);",
          "49:   fprintf(stderr, \"Original timestamp: %\" PRIu32 \"\\n\", origts);",
          "50:   if(fseek(f, offset + 8, SEEK_SET)) goto bad;",
          "51: #endif",
          "52:   if(!fwrite(",
          "53:        (char[4]){(char)t, (char)(t >> 8), (char)(t >> 16), (char)(t >> 24)}, 4,",
          "54:        1, f)) {",
          "55:     fputs(\"Couldn't write new timestamp\\n\", stderr);",
          "56:     fclose(f);",
          "57:     return 1;",
          "58:   }",
          "59:   if(fclose(f)) {",
          "60:     fputs(\"Error while closing file\\n\", stderr);",
          "61:     return 1;",
          "62:   }",
          "63: }",
          "",
          "---------------"
        ],
        "png2webp.c||png2webp.c": [
          "File: png2webp.c -> png2webp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <assert.h>",
          "5: #include <errno.h>",
          "6: #include <limits.h>",
          "",
          "[Removed Lines]",
          "3: #define VERSION \"v1.0\"",
          "",
          "[Added Lines]",
          "3: #define VERSION \"v1.0.1\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b33fbe621f7b9b772ae75f18c9d3336fdcd7ac4",
      "candidate_info": {
        "commit_hash": "0b33fbe621f7b9b772ae75f18c9d3336fdcd7ac4",
        "repo": "landfillbaby/png2webp",
        "commit_url": "https://github.com/landfillbaby/png2webp/commit/0b33fbe621f7b9b772ae75f18c9d3336fdcd7ac4",
        "files": [
          "Makefile",
          "README.md",
          "png2webp.c"
        ],
        "message": "v1.1.10: Makefile png2webp_dynamic",
        "before_after_code_files": [
          "png2webp.c||png2webp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "png2webp.c||png2webp.c"
          ],
          "candidate": [
            "png2webp.c||png2webp.c"
          ]
        }
      },
      "candidate_diff": {
        "png2webp.c||png2webp.c": [
          "File: png2webp.c -> png2webp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include \"p2wconf.h\"",
          "5: #endif",
          "6: #ifndef VERSION",
          "8: #endif",
          "9: #define _FILE_OFFSET_BITS 64",
          "10: #include <inttypes.h>",
          "",
          "[Removed Lines]",
          "7: #define VERSION \"v1.1.9\"",
          "",
          "[Added Lines]",
          "7: #define VERSION \"v1.1.10\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d96a5457529da9feee485935a0021c1689a5416f",
      "candidate_info": {
        "commit_hash": "d96a5457529da9feee485935a0021c1689a5416f",
        "repo": "landfillbaby/png2webp",
        "commit_url": "https://github.com/landfillbaby/png2webp/commit/d96a5457529da9feee485935a0021c1689a5416f",
        "files": [
          "Makefile",
          "README.md",
          "png2webp.c"
        ],
        "message": "v1.0.8: verbose text tweaks\n\ndimensions once per image\ngamma only when nonstandard (always FIXEDGAMMA)\npercentage after bar\nturns out the fread fix isn't in android 13",
        "before_after_code_files": [
          "png2webp.c||png2webp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "png2webp.c||png2webp.c"
          ],
          "candidate": [
            "png2webp.c||png2webp.c"
          ]
        }
      },
      "candidate_diff": {
        "png2webp.c||png2webp.c": [
          "File: png2webp.c -> png2webp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <errno.h>",
          "5: #include <inttypes.h>",
          "6: #include <limits.h>",
          "",
          "[Removed Lines]",
          "3: #define VERSION \"v1.0.7\"",
          "",
          "[Added Lines]",
          "3: #define VERSION \"v1.0.8\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148: }",
          "149: static int progress(int percent, const WebPPicture *x) {",
          "150:   (void)x;",
          "153:   return 1;",
          "154: }",
          "155: #define E(x, ...) \\",
          "",
          "[Removed Lines]",
          "151:   fprintf(stderr, \"\\r%3d%% [%-60.*s]\", percent, percent * 3 / 5,",
          "152:     (char[60]){\"############################################################\"});",
          "",
          "[Added Lines]",
          "151:   fprintf(stderr, \"\\r[%-60.*s] %u%%\", (unsigned)percent * 3 / 5,",
          "152:     (char[60]){\"############################################################\"},",
          "153:     percent);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "205:   if((unsigned)bitdepth > 8)",
          "206:     P(\"Warning: %s is 16-bit, will be downsampled to 8-bit\", IP);",
          "207:   bool trns = png_get_valid(p, n, PNG_INFO_tRNS);",
          "210:   int32_t gamma = 45455;",
          "212:     png_set_gamma_fixed(p, 22e4, gamma);",
          "219: #define S(x) png_set_##x(p)",
          "220:   S(scale_16);",
          "221:   S(expand);",
          "",
          "[Removed Lines]",
          "208: #ifdef FIXEDGAMMA",
          "209: #define GAMMA ((uint32_t)gamma) / 1e5",
          "211:   if(png_get_valid(p, n, PNG_INFO_sRGB) || png_get_gAMA_fixed(p, n, &gamma))",
          "213: #else",
          "214: #define GAMMA gamma",
          "215:   double gamma = 1 / 2.2;",
          "216:   if(png_get_valid(p, n, PNG_INFO_sRGB) || png_get_gAMA(p, n, &gamma))",
          "217:     png_set_gamma(p, 2.2, gamma);",
          "218: #endif",
          "",
          "[Added Lines]",
          "210:   if(png_get_valid(p, n, PNG_INFO_sRGB) || png_get_gAMA_fixed(p, n, &gamma)) {",
          "211:     if(gamma != 45455)",
          "212:       P(\"Warning: %s has nonstandard gamma of %.5g\", IP, (uint32_t)gamma / 1e5);",
          "214:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "257:   char *f[] = {",
          "258:     \"grayscale\", \"???\", \"RGB\", \"paletted\", \"grayscale + alpha\", \"???\", \"RGBA\"};",
          "259:   PV(\"Info: %s:\\nDimensions: %\" PRIu32 \" x %\" PRIu32",
          "261:     IP, width, height, pnglen, (double)pnglen * 8 / (width * height), bitdepth,",
          "262:     f[(unsigned)colortype], trns ? \", with transparency\" : \"\",",
          "264:   WebPConfig c;",
          "265:   if(!WebPConfigPreset(&c, WEBP_PRESET_ICON, 100)) {",
          "266:     P(\"ERROR writing %s: %s\", OP, k[3]);",
          "",
          "[Removed Lines]",
          "260:      \"\\nSize: %zu bytes (%.15g bpp)\\nFormat: %u-bit %s%s%s\\nGamma: %.5g\",",
          "263:     (unsigned)passes > 1 ? \", interlaced\" : \"\", GAMMA);",
          "",
          "[Added Lines]",
          "256:      \"\\nSize: %zu bytes (%.15g bpp)\\nFormat: %u-bit %s%s%s\",",
          "259:     (unsigned)passes > 1 ? \", interlaced\" : \"\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "294:   free(b);",
          "295: #define F s.lossless_features",
          "296: #define C s.palette_size",
          "298: Header size: %u, image data size: %u\\nUses alpha: %s\\n\\",
          "299: Precision bits: histogram=%u transform=%u cache=%u\\n\\",
          "300: Lossless features:%s%s%s%s\\nColors: %s%u\",",
          "302:     (unsigned)s.lossless_size * 8. / (uint32_t)(o.width * o.height),",
          "303:     s.lossless_hdr_size, s.lossless_data_size, trns ? \"yes\" : \"no\",",
          "304:     s.histogram_bits, s.transform_bits, s.cache_bits,",
          "",
          "[Removed Lines]",
          "297:   PV(\"\\nInfo: %s:\\nDimensions: %u x %u\\nSize: %u bytes (%.15g bpp)\\n\\",
          "301:     OP, o.width, o.height, s.lossless_size,",
          "",
          "[Added Lines]",
          "293:   PV(\"\\nInfo: %s:\\nSize: %u bytes (%.15g bpp)\\n\\",
          "297:     OP, s.lossless_size,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "340:   memcpy(x, i, 12); // should optimize out",
          "341:   uint8_t *z = x + 12;",
          "342:   uint32_t m = l - 12;",
          "344:   if(m > 0x7fffffff) { // https://issuetracker.google.com/240139009",
          "345:     if(!fread(z, 0x7fffffff, 1, fp)) {",
          "346:       P(\"ERROR reading %s: %s\", IP, k[6]);",
          "",
          "[Removed Lines]",
          "343: #if defined __ANDROID__ && __ANDROID_API__ < 33",
          "",
          "[Added Lines]",
          "339: #if defined __ANDROID__ // TODO? && __ANDROID_API__ < 34",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "466:     P(\"ERROR closing %s: %s\", OP, strerror(errno));",
          "467:     goto w2p_free;",
          "468:   }",
          "473:   return 0;",
          "474: }",
          "475: int main(int argc, char **argv) {",
          "",
          "[Removed Lines]",
          "469:   PV(\"Info: %s:\\nDimensions: %\" PRIu32 \" x %\" PRIu32",
          "470:      \"\\nSize: %zu bytes (%.15g bpp)\\nFormat: %u-bit %s%s%s\\nGamma: %.5g\",",
          "471:     OP, W, H, pnglen, (double)pnglen * 8 / (W * H), 8, A ? \"RGBA\" : \"RGB\", \"\",",
          "472:     \"\", 1 / 2.2);",
          "",
          "[Added Lines]",
          "465:   PV(\"Info: %s:\\nSize: %zu bytes (%.15g bpp)\\nFormat: 8-bit %s\", OP, pnglen,",
          "466:     (double)pnglen * 8 / (W * H), A ? \"RGBA\" : \"RGB\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5201f99796b0b079f8a7754597548f0d605414f2",
      "candidate_info": {
        "commit_hash": "5201f99796b0b079f8a7754597548f0d605414f2",
        "repo": "landfillbaby/png2webp",
        "commit_url": "https://github.com/landfillbaby/png2webp/commit/5201f99796b0b079f8a7754597548f0d605414f2",
        "files": [
          ".gitignore",
          "Makefile",
          "README.md",
          "TODO.txt",
          "configure",
          "png2webp.c",
          "test/fopenx.c",
          "test/fopenx.txt"
        ],
        "message": "v1.1.5: better configure and Makefile",
        "before_after_code_files": [
          "png2webp.c||png2webp.c",
          "test/fopenx.c||test/fopenx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "png2webp.c||png2webp.c"
          ],
          "candidate": [
            "png2webp.c||png2webp.c"
          ]
        }
      },
      "candidate_diff": {
        "png2webp.c||png2webp.c": [
          "File: png2webp.c -> png2webp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <errno.h>",
          "5: #include <inttypes.h>",
          "6: #include <limits.h>",
          "",
          "[Removed Lines]",
          "3: #define VERSION \"v1.1.4\"",
          "",
          "[Added Lines]",
          "3: #define VERSION \"v1.1.5\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: #if SIZE_MAX < 0xffffffff",
          "16: #error \"size_t isn't at least 32-bit\"",
          "17: #endif",
          "19: #define NOFOPENX",
          "20: #endif",
          "21: #ifdef NOFOPENX",
          "",
          "[Removed Lines]",
          "18: #if __STDC_VERSION__ < 201112L && !defined NOFOPENX",
          "",
          "[Added Lines]",
          "18: #ifdef _WIN32",
          "19: #define _CRT_NONSTDC_NO_WARNINGS",
          "20: #include <fcntl.h>",
          "21: #include <io.h>",
          "22: #else",
          "23: #include <unistd.h>",
          "24: #endif",
          "25: #ifdef P2WCONF",
          "26: #include \"p2wconf.h\"",
          "27: #endif",
          "28: #if !defined NOFOPENX && __STDC_VERSION__ < 201112L",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "25: #define O_BINARY 0",
          "26: #endif",
          "27: #endif",
          "35: #include \"png.h\"",
          "36: #include \"webp/decode.h\"",
          "37: #include \"webp/encode.h\"",
          "",
          "[Removed Lines]",
          "28: #ifdef _WIN32",
          "29: #define _CRT_NONSTDC_NO_WARNINGS",
          "30: #include <fcntl.h>",
          "31: #include <io.h>",
          "32: #else",
          "33: #include <unistd.h>",
          "34: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fopenx.c||test/fopenx.c": [
          "File: test/fopenx.c -> test/fopenx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #include <stdio.h>",
          "2: #include <errno.h>",
          "3: int main(void) {",
          "4: #if defined EEXIST && __STDC_VERSION__ >= 201112L",
          "5:  FILE *f = fopen(\"fopenx.txt\", \"wbx\");",
          "6:  if(errno == EEXIST) return 0;",
          "7:  if(f) fclose(f);",
          "8: #endif",
          "9:  return 1;",
          "10: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}