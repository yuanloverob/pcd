{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a4bdbc81575ff5d9e571237be09b30823cdde122",
      "candidate_info": {
        "commit_hash": "a4bdbc81575ff5d9e571237be09b30823cdde122",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/a4bdbc81575ff5d9e571237be09b30823cdde122",
        "files": [
          "arch/X86/X86IntelInstPrinter.c"
        ],
        "message": "x86: do not print LJMP/LCALL with ptr. this fixes issue #429",
        "before_after_code_files": [
          "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c": [
          "File: arch/X86/X86IntelInstPrinter.c -> arch/X86/X86IntelInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:   case X86_INS_LIDT:",
          "76:   case X86_INS_FXRSTOR:",
          "77:   case X86_INS_FXSAVE:",
          "79:    break;",
          "80:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:   case X86_INS_LJMP:",
          "79:   case X86_INS_LCALL:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1144608f0f6b16f099551ebabb4cc2935693eec8",
      "candidate_info": {
        "commit_hash": "1144608f0f6b16f099551ebabb4cc2935693eec8",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/1144608f0f6b16f099551ebabb4cc2935693eec8",
        "files": [
          "arch/X86/X86ATTInstPrinter.c",
          "arch/X86/X86Disassembler.c",
          "arch/X86/X86IntelInstPrinter.c",
          "msvc/cstool/cstool.vcxproj"
        ],
        "message": "Fix MSVC build (#1080)",
        "before_after_code_files": [
          "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c",
          "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c",
          "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c",
          "msvc/cstool/cstool.vcxproj||msvc/cstool/cstool.vcxproj"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c": [
          "File: arch/X86/X86ATTInstPrinter.c -> arch/X86/X86ATTInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #if defined(CAPSTONE_HAS_X86) && !defined(CAPSTONE_DIET) && !defined(CAPSTONE_X86_ATT_DISABLE)",
          "21: #if !defined(CAPSTONE_HAS_OSXKERNEL)",
          "22: #include <ctype.h>",
          "23: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #if defined (WIN32) || defined (WIN64) || defined (_WIN32) || defined (_WIN64)",
          "22: #pragma warning(disable:4996)   // disable MSVC's warning on strncpy()",
          "23: #pragma warning(disable:28719)  // disable MSVC's warning on strncpy()",
          "24: #endif",
          "",
          "---------------"
        ],
        "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c": [
          "File: arch/X86/X86Disassembler.c -> arch/X86/X86Disassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #ifdef CAPSTONE_HAS_X86",
          "22: #include <capstone/platform.h>",
          "23: #include <string.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #if defined (WIN32) || defined (WIN64) || defined (_WIN32) || defined (_WIN64)",
          "23: #pragma warning(disable:4996)   // disable MSVC's warning on strncpy()",
          "24: #pragma warning(disable:28719)  // disable MSVC's warning on strncpy()",
          "25: #endif",
          "",
          "---------------"
        ],
        "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c": [
          "File: arch/X86/X86IntelInstPrinter.c -> arch/X86/X86IntelInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #ifdef CAPSTONE_HAS_X86",
          "20: #if !defined(CAPSTONE_HAS_OSXKERNEL)",
          "21: #include <ctype.h>",
          "22: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: #if defined (WIN32) || defined (WIN64) || defined (_WIN32) || defined (_WIN64)",
          "21: #pragma warning(disable:4996)   // disable MSVC's warning on strncpy()",
          "22: #pragma warning(disable:28719)  // disable MSVC's warning on strncpy()",
          "23: #endif",
          "",
          "---------------"
        ],
        "msvc/cstool/cstool.vcxproj||msvc/cstool/cstool.vcxproj": [
          "File: msvc/cstool/cstool.vcxproj -> msvc/cstool/cstool.vcxproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:     <ClCompile Include=\"..\\..\\cstool\\cstool.c\" />",
          "158:     <ClCompile Include=\"..\\..\\cstool\\cstool_arm.c\" />",
          "159:     <ClCompile Include=\"..\\..\\cstool\\cstool_arm64.c\" />",
          "160:     <ClCompile Include=\"..\\..\\cstool\\cstool_m68k.c\" />",
          "161:     <ClCompile Include=\"..\\..\\cstool\\cstool_mips.c\" />",
          "162:     <ClCompile Include=\"..\\..\\cstool\\cstool_ppc.c\" />",
          "163:     <ClCompile Include=\"..\\..\\cstool\\cstool_sparc.c\" />",
          "164:     <ClCompile Include=\"..\\..\\cstool\\cstool_systemz.c\" />",
          "165:     <ClCompile Include=\"..\\..\\cstool\\cstool_x86.c\" />",
          "166:     <ClCompile Include=\"..\\..\\cstool\\cstool_xcore.c\" />",
          "167:   </ItemGroup>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160:     <ClCompile Include=\"..\\..\\cstool\\cstool_m680x.c\" />",
          "166:     <ClCompile Include=\"..\\..\\cstool\\cstool_tms320c64x.c\" />",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "570db5f6797c27b4cb43f019ef2b4fd0a9daf340",
      "candidate_info": {
        "commit_hash": "570db5f6797c27b4cb43f019ef2b4fd0a9daf340",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/570db5f6797c27b4cb43f019ef2b4fd0a9daf340",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: use switch",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "356:    printf(\"  %s\\t%s\\n\", insn[i].mnemonic, insn[i].op_str);",
          "358:    if (detail_flag) {",
          "393:     }",
          "394:    }",
          "395:   }",
          "396:   cs_free(insn, count);",
          "397:  } else {",
          "398:   printf(\"ERROR: invalid assembly code\\n\");",
          "",
          "[Removed Lines]",
          "359:     if (arch == CS_ARCH_X86) {",
          "360:      print_insn_detail_x86(handle, md, &insn[i]);",
          "361:     }",
          "363:     if (arch == CS_ARCH_ARM) {",
          "364:      print_insn_detail_arm(handle, &insn[i]);",
          "365:     }",
          "367:     if (arch == CS_ARCH_ARM64) {",
          "368:      print_insn_detail_arm64(handle,&insn[i]);",
          "369:     }",
          "371:     if (arch == CS_ARCH_MIPS) {",
          "372:      print_insn_detail_mips(handle, &insn[i]);",
          "373:     }",
          "375:     if (arch == CS_ARCH_PPC) {",
          "376:      print_insn_detail_ppc(handle, &insn[i]);",
          "377:     }",
          "379:     if (arch == CS_ARCH_SPARC) {",
          "380:      print_insn_detail_sparc(handle, &insn[i]);",
          "381:     }",
          "383:     if (arch == CS_ARCH_SYSZ) {",
          "384:      print_insn_detail_sysz(handle, &insn[i]);",
          "385:     }",
          "387:     if (arch == CS_ARCH_XCORE) {",
          "388:      print_insn_detail_xcore(handle, &insn[i]);",
          "389:     }",
          "391:     if (arch == CS_ARCH_M68K) {",
          "392:      print_insn_detail_m68k(handle, &insn[i]);",
          "",
          "[Added Lines]",
          "359:     switch(arch) {",
          "360:      default: break;",
          "362:      case CS_ARCH_X86:",
          "363:         print_insn_detail_x86(handle, md, &insn[i]);",
          "364:         break;",
          "366:      case CS_ARCH_ARM:",
          "367:         print_insn_detail_arm(handle, &insn[i]);",
          "368:         break;",
          "369:      case CS_ARCH_ARM64:",
          "370:         print_insn_detail_arm64(handle,&insn[i]);",
          "371:         break;",
          "372:      case CS_ARCH_MIPS:",
          "373:         print_insn_detail_mips(handle, &insn[i]);",
          "374:         break;",
          "375:      case CS_ARCH_PPC:",
          "376:         print_insn_detail_ppc(handle, &insn[i]);",
          "377:         break;",
          "378:      case CS_ARCH_SPARC:",
          "379:         print_insn_detail_sparc(handle, &insn[i]);",
          "380:         break;",
          "381:      case CS_ARCH_SYSZ:",
          "382:         print_insn_detail_sysz(handle, &insn[i]);",
          "383:         break;",
          "384:      case CS_ARCH_XCORE:",
          "385:         print_insn_detail_xcore(handle, &insn[i]);",
          "386:         break;",
          "387:      case CS_ARCH_M68K:",
          "388:         print_insn_detail_m68k(handle, &insn[i]);",
          "389:         break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e199eb9cfe903c018fc76eaf2d9e32f262392eaf",
      "candidate_info": {
        "commit_hash": "e199eb9cfe903c018fc76eaf2d9e32f262392eaf",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/e199eb9cfe903c018fc76eaf2d9e32f262392eaf",
        "files": [
          "bindings/python/setup.py"
        ],
        "message": "python-bindings: fix setup.py for wheel installation\n\nWhen the python bindings are installed using the new wheels\ninfrastructure, data_files are relative to the site-packages directory\neven if using absolute paths.\n\nThe following example demonstrates the bug fixed by this commit: (ran on archlinux)\n\n```bash\n$ pip install wheel       # if this package is installed, wheel installation is made the default\nCollecting wheel\n  Downloading wheel-0.29.0-py2.py3-none-any.whl (66kB)\n    100% |################################| 71kB 124kB/s\nInstalling collected packages: wheel\nSuccessfully installed wheel-0.29.0\n\n$ pip install capstone    # this will use the wheel installation method now\nCollecting capstone\n  Using cached capstone-3.0.4.tar.gz\nBuilding wheels for collected packages: capstone\n  Running setup.py bdist_wheel for capstone ... done\n  Stored in directory: /root/.cache/pip/wheels/7c/d1/d0/db6e2c5ef1063aabb9de2dd8b92b4c27ee6f9fd213240099b8\nSuccessfully built capstone\nInstalling collected packages: capstone\nSuccessfully installed capstone-3.0.4\n\n$ find /usr/lib/ -name \"libcapstone.so\"\n/usr/lib/python3.5/site-packages/usr/lib/python3.5/site-packages/capstone/libcapstone.so\n```\n\nSo the path `SITE_PACKAGES` in the `data_files` specification of the\nsetup.py file was interpreted relative to the python site-packages\ndirectory. The fix for this is simple: use `/capstone` instead of an\nabsolute path for `SITE_PACKAGES`.",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     except ImportError:",
          "34:         pass",
          "37: # adapted from commit e504b81 of Nguyen Tan Cong",
          "38: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: # If building a wheel, the path listed in data_files is interpreted relative to",
          "37: # python's site-packages directory, even if it starts with a slash. So we need",
          "38: # to use only `/capstone` as path in this case.",
          "39: #",
          "40: # Note: using `capstone` does not work, since that for some reason is interpreted",
          "41: # relative to the the python installation prefix, not to the site-packages directory.",
          "42: if \"bdist_wheel\" in sys.argv:",
          "43:     SITE_PACKAGES = \"/capstone\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03de8c6a5c06b9f7b5d185e4e30e6a7d0c8c78ab",
      "candidate_info": {
        "commit_hash": "03de8c6a5c06b9f7b5d185e4e30e6a7d0c8c78ab",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/03de8c6a5c06b9f7b5d185e4e30e6a7d0c8c78ab",
        "files": [
          "arch/TMS320C64x/TMS320C64xInstPrinter.c"
        ],
        "message": "Corrected a bug\n\nCorrected a bug that would cause capstone to crash under certain invalid\ninstructions.",
        "before_after_code_files": [
          "arch/TMS320C64x/TMS320C64xInstPrinter.c||arch/TMS320C64x/TMS320C64xInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/TMS320C64x/TMS320C64xInstPrinter.c||arch/TMS320C64x/TMS320C64xInstPrinter.c": [
          "File: arch/TMS320C64x/TMS320C64xInstPrinter.c -> arch/TMS320C64x/TMS320C64xInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:   SStream_concat0(&ss, insn_asm);",
          "70:   if((p != NULL) && (((p2 = strchr(p, '[')) != NULL) || ((p2 = strchr(p, '(')) != NULL))) {",
          "72:     p2--;",
          "77:   } else {",
          "78:    tmp[0] = '\\0';",
          "79:   }",
          "",
          "[Removed Lines]",
          "71:    while((*p2 != 'A') && (*p2 != 'B'))",
          "73:    if(*p2 == 'A')",
          "74:     strcpy(tmp, \"1T\");",
          "75:    else",
          "76:     strcpy(tmp, \"2T\");",
          "",
          "[Added Lines]",
          "71:    while((p2 > p) && ((*p2 != 'A') && (*p2 != 'B')))",
          "73:             if(p2 == p) {",
          "74:                 strcpy(insn_asm, \"Invalid!\");",
          "75:                 return;",
          "76:             } else {",
          "77:        if(*p2 == 'A')",
          "78:         strcpy(tmp, \"1T\");",
          "79:        else",
          "80:         strcpy(tmp, \"2T\");",
          "81:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}