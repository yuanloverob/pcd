{
  "cve_id": "CVE-2015-8374",
  "cve_desc": "fs/btrfs/inode.c in the Linux kernel before 4.3.3 mishandles compressed inline extents, which allows local users to obtain sensitive pre-truncation information from a file via a clone action.",
  "repo": "torvalds/linux",
  "patch_hash": "0305cd5f7fca85dae392b9ba85b116896eb7c1c7",
  "patch_info": {
    "commit_hash": "0305cd5f7fca85dae392b9ba85b116896eb7c1c7",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/0305cd5f7fca85dae392b9ba85b116896eb7c1c7",
    "files": [
      "fs/btrfs/inode.c"
    ],
    "message": "Btrfs: fix truncation of compressed and inlined extents\n\nWhen truncating a file to a smaller size which consists of an inline\nextent that is compressed, we did not discard (or made unusable) the\ndata between the new file size and the old file size, wasting metadata\nspace and allowing for the truncated data to be leaked and the data\ncorruption/loss mentioned below.\nWe were also not correctly decrementing the number of bytes used by the\ninode, we were setting it to zero, giving a wrong report for callers of\nthe stat(2) syscall. The fsck tool also reported an error about a mismatch\nbetween the nbytes of the file versus the real space used by the file.\n\nNow because we weren't discarding the truncated region of the file, it\nwas possible for a caller of the clone ioctl to actually read the data\nthat was truncated, allowing for a security breach without requiring root\naccess to the system, using only standard filesystem operations. The\nscenario is the following:\n\n   1) User A creates a file which consists of an inline and compressed\n      extent with a size of 2000 bytes - the file is not accessible to\n      any other users (no read, write or execution permission for anyone\n      else);\n\n   2) The user truncates the file to a size of 1000 bytes;\n\n   3) User A makes the file world readable;\n\n   4) User B creates a file consisting of an inline extent of 2000 bytes;\n\n   5) User B issues a clone operation from user A's file into its own\n      file (using a length argument of 0, clone the whole range);\n\n   6) User B now gets to see the 1000 bytes that user A truncated from\n      its file before it made its file world readbale. User B also lost\n      the bytes in the range [1000, 2000[ bytes from its own file, but\n      that might be ok if his/her intention was reading stale data from\n      user A that was never supposed to be public.\n\nNote that this contrasts with the case where we truncate a file from 2000\nbytes to 1000 bytes and then truncate it back from 1000 to 2000 bytes. In\nthis case reading any byte from the range [1000, 2000[ will return a value\nof 0x00, instead of the original data.\n\nThis problem exists since the clone ioctl was added and happens both with\nand without my recent data loss and file corruption fixes for the clone\nioctl (patch \"Btrfs: fix file corruption and data loss after cloning\ninline extents\").\n\nSo fix this by truncating the compressed inline extents as we do for the\nnon-compressed case, which involves decompressing, if the data isn't already\nin the page cache, compressing the truncated version of the extent, writing\nthe compressed content into the inline extent and then truncate it.\n\nThe following test case for fstests reproduces the problem. In order for\nthe test to pass both this fix and my previous fix for the clone ioctl\nthat forbids cloning a smaller inline extent into a larger one,\nwhich is titled \"Btrfs: fix file corruption and data loss after cloning\ninline extents\", are needed. Without that other fix the test fails in a\ndifferent way that does not leak the truncated data, instead part of\ndestination file gets replaced with zeroes (because the destination file\nhas a larger inline extent than the source).\n\n  seq=`basename $0`\n  seqres=$RESULT_DIR/$seq\n  echo \"QA output created by $seq\"\n  tmp=/tmp/$$\n  status=1\t# failure is the default!\n  trap \"_cleanup; exit \\$status\" 0 1 2 3 15\n\n  _cleanup()\n  {\n      rm -f $tmp.*\n  }\n\n  # get standard environment, filters and checks\n  . ./common/rc\n  . ./common/filter\n\n  # real QA test starts here\n  _need_to_be_root\n  _supported_fs btrfs\n  _supported_os Linux\n  _require_scratch\n  _require_cloner\n\n  rm -f $seqres.full\n\n  _scratch_mkfs >>$seqres.full 2>&1\n  _scratch_mount \"-o compress\"\n\n  # Create our test files. File foo is going to be the source of a clone operation\n  # and consists of a single inline extent with an uncompressed size of 512 bytes,\n  # while file bar consists of a single inline extent with an uncompressed size of\n  # 256 bytes. For our test's purpose, it's important that file bar has an inline\n  # extent with a size smaller than foo's inline extent.\n  $XFS_IO_PROG -f -c \"pwrite -S 0xa1 0 128\"   \\\n          -c \"pwrite -S 0x2a 128 384\" \\\n          $SCRATCH_MNT/foo | _filter_xfs_io\n  $XFS_IO_PROG -f -c \"pwrite -S 0xbb 0 256\" $SCRATCH_MNT/bar | _filter_xfs_io\n\n  # Now durably persist all metadata and data. We do this to make sure that we get\n  # on disk an inline extent with a size of 512 bytes for file foo.\n  sync\n\n  # Now truncate our file foo to a smaller size. Because it consists of a\n  # compressed and inline extent, btrfs did not shrink the inline extent to the\n  # new size (if the extent was not compressed, btrfs would shrink it to 128\n  # bytes), it only updates the inode's i_size to 128 bytes.\n  $XFS_IO_PROG -c \"truncate 128\" $SCRATCH_MNT/foo\n\n  # Now clone foo's inline extent into bar.\n  # This clone operation should fail with errno EOPNOTSUPP because the source\n  # file consists only of an inline extent and the file's size is smaller than\n  # the inline extent of the destination (128 bytes < 256 bytes). However the\n  # clone ioctl was not prepared to deal with a file that has a size smaller\n  # than the size of its inline extent (something that happens only for compressed\n  # inline extents), resulting in copying the full inline extent from the source\n  # file into the destination file.\n  #\n  # Note that btrfs' clone operation for inline extents consists of removing the\n  # inline extent from the destination inode and copy the inline extent from the\n  # source inode into the destination inode, meaning that if the destination\n  # inode's inline extent is larger (N bytes) than the source inode's inline\n  # extent (M bytes), some bytes (N - M bytes) will be lost from the destination\n  # file. Btrfs could copy the source inline extent's data into the destination's\n  # inline extent so that we would not lose any data, but that's currently not\n  # done due to the complexity that would be needed to deal with such cases\n  # (specially when one or both extents are compressed), returning EOPNOTSUPP, as\n  # it's normally not a very common case to clone very small files (only case\n  # where we get inline extents) and copying inline extents does not save any\n  # space (unlike for normal, non-inlined extents).\n  $CLONER_PROG -s 0 -d 0 -l 0 $SCRATCH_MNT/foo $SCRATCH_MNT/bar\n\n  # Now because the above clone operation used to succeed, and due to foo's inline\n  # extent not being shinked by the truncate operation, our file bar got the whole\n  # inline extent copied from foo, making us lose the last 128 bytes from bar\n  # which got replaced by the bytes in range [128, 256[ from foo before foo was\n  # truncated - in other words, data loss from bar and being able to read old and\n  # stale data from foo that should not be possible to read anymore through normal\n  # filesystem operations. Contrast with the case where we truncate a file from a\n  # size N to a smaller size M, truncate it back to size N and then read the range\n  # [M, N[, we should always get the value 0x00 for all the bytes in that range.\n\n  # We expected the clone operation to fail with errno EOPNOTSUPP and therefore\n  # not modify our file's bar data/metadata. So its content should be 256 bytes\n  # long with all bytes having the value 0xbb.\n  #\n  # Without the btrfs bug fix, the clone operation succeeded and resulted in\n  # leaking truncated data from foo, the bytes that belonged to its range\n  # [128, 256[, and losing data from bar in that same range. So reading the\n  # file gave us the following content:\n  #\n  # 0000000 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1\n  # *\n  # 0000200 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a\n  # *\n  # 0000400\n  echo \"File bar's content after the clone operation:\"\n  od -t x1 $SCRATCH_MNT/bar\n\n  # Also because the foo's inline extent was not shrunk by the truncate\n  # operation, btrfs' fsck, which is run by the fstests framework everytime a\n  # test completes, failed reporting the following error:\n  #\n  #  root 5 inode 257 errors 400, nbytes wrong\n\n  status=0\n  exit\n\nCc: stable@vger.kernel.org\nSigned-off-by: Filipe Manana <fdmanana@suse.com>",
    "before_after_code_files": [
      "fs/btrfs/inode.c||fs/btrfs/inode.c"
    ]
  },
  "patch_diff": {
    "fs/btrfs/inode.c||fs/btrfs/inode.c": [
      "File: fs/btrfs/inode.c -> fs/btrfs/inode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4218: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4220: static int truncate_inline_extent(struct inode *inode,",
      "4221:       struct btrfs_path *path,",
      "4222:       struct btrfs_key *found_key,",
      "4223:       const u64 item_end,",
      "4224:       const u64 new_size)",
      "4225: {",
      "4226:  struct extent_buffer *leaf = path->nodes[0];",
      "4227:  int slot = path->slots[0];",
      "4228:  struct btrfs_file_extent_item *fi;",
      "4229:  u32 size = (u32)(new_size - found_key->offset);",
      "4230:  struct btrfs_root *root = BTRFS_I(inode)->root;",
      "4232:  fi = btrfs_item_ptr(leaf, slot, struct btrfs_file_extent_item);",
      "4234:  if (btrfs_file_extent_compression(leaf, fi) != BTRFS_COMPRESS_NONE) {",
      "4235:   loff_t offset = new_size;",
      "4236:   loff_t page_end = ALIGN(offset, PAGE_CACHE_SIZE);",
      "4247:   btrfs_release_path(path);",
      "4248:   return btrfs_truncate_page(inode, offset, page_end - offset, 0);",
      "4249:  }",
      "4251:  btrfs_set_file_extent_ram_bytes(leaf, fi, size);",
      "4252:  size = btrfs_file_extent_calc_inline_size(size);",
      "4253:  btrfs_truncate_item(root, path, size, 1);",
      "4255:  if (test_bit(BTRFS_ROOT_REF_COWS, &root->state))",
      "4256:   inode_sub_bytes(inode, item_end + 1 - new_size);",
      "4258:  return 0;",
      "4259: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4413:    if (!del_item &&",
      "4415:        btrfs_file_extent_encryption(leaf, fi) == 0 &&",
      "4416:        btrfs_file_extent_other_encoding(leaf, fi) == 0) {",
      "4431:    } else if (test_bit(BTRFS_ROOT_REF_COWS,",
      "4432:          &root->state)) {",
      "4435:    }",
      "4436:   }",
      "4437: delete:",
      "",
      "[Removed Lines]",
      "4414:        btrfs_file_extent_compression(leaf, fi) == 0 &&",
      "4417:     u32 size = new_size - found_key.offset;",
      "4419:     if (test_bit(BTRFS_ROOT_REF_COWS, &root->state))",
      "4420:      inode_sub_bytes(inode, item_end + 1 -",
      "4421:        new_size);",
      "4427:     btrfs_set_file_extent_ram_bytes(leaf, fi, size);",
      "4428:     size =",
      "4429:         btrfs_file_extent_calc_inline_size(size);",
      "4430:     btrfs_truncate_item(root, path, size, 1);",
      "4433:     inode_sub_bytes(inode, item_end + 1 -",
      "4434:       found_key.offset);",
      "",
      "[Added Lines]",
      "4463:     if (btrfs_file_extent_compression(leaf, fi) !=",
      "4464:         BTRFS_COMPRESS_NONE && pending_del_nr) {",
      "4465:      err = btrfs_del_items(trans, root, path,",
      "4466:              pending_del_slot,",
      "4467:              pending_del_nr);",
      "4468:      if (err) {",
      "4469:       btrfs_abort_transaction(trans,",
      "4470:          root,",
      "4471:          err);",
      "4472:       goto error;",
      "4473:      }",
      "4474:      pending_del_nr = 0;",
      "4475:     }",
      "4477:     err = truncate_inline_extent(inode, path,",
      "4478:             &found_key,",
      "4479:             item_end,",
      "4480:             new_size);",
      "4481:     if (err) {",
      "4482:      btrfs_abort_transaction(trans,",
      "4483:         root, err);",
      "4484:      goto error;",
      "4485:     }",
      "4488:     inode_sub_bytes(inode, item_end + 1 - new_size);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "66642832f06a4351e23cea6cf254967c227f8224",
      "candidate_info": {
        "commit_hash": "66642832f06a4351e23cea6cf254967c227f8224",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/66642832f06a4351e23cea6cf254967c227f8224",
        "files": [
          "fs/btrfs/ctree.c",
          "fs/btrfs/ctree.h",
          "fs/btrfs/delayed-inode.c",
          "fs/btrfs/extent-tree.c",
          "fs/btrfs/file-item.c",
          "fs/btrfs/file.c",
          "fs/btrfs/free-space-cache.c",
          "fs/btrfs/free-space-tree.c",
          "fs/btrfs/inode-map.c",
          "fs/btrfs/inode.c",
          "fs/btrfs/ioctl.c",
          "fs/btrfs/relocation.c",
          "fs/btrfs/root-tree.c",
          "fs/btrfs/super.c",
          "fs/btrfs/transaction.c",
          "fs/btrfs/tree-log.c",
          "fs/btrfs/volumes.c"
        ],
        "message": "btrfs: btrfs_abort_transaction, drop root parameter\n\n__btrfs_abort_transaction doesn't use its root parameter except to\nobtain an fs_info pointer.  We can obtain that from trans->root->fs_info\nfor now and from trans->fs_info in a later patch.\n\nSigned-off-by: Jeff Mahoney <jeffm@suse.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
        "before_after_code_files": [
          "fs/btrfs/ctree.c||fs/btrfs/ctree.c",
          "fs/btrfs/ctree.h||fs/btrfs/ctree.h",
          "fs/btrfs/delayed-inode.c||fs/btrfs/delayed-inode.c",
          "fs/btrfs/extent-tree.c||fs/btrfs/extent-tree.c",
          "fs/btrfs/file-item.c||fs/btrfs/file-item.c",
          "fs/btrfs/file.c||fs/btrfs/file.c",
          "fs/btrfs/free-space-cache.c||fs/btrfs/free-space-cache.c",
          "fs/btrfs/free-space-tree.c||fs/btrfs/free-space-tree.c",
          "fs/btrfs/inode-map.c||fs/btrfs/inode-map.c",
          "fs/btrfs/inode.c||fs/btrfs/inode.c",
          "fs/btrfs/ioctl.c||fs/btrfs/ioctl.c",
          "fs/btrfs/relocation.c||fs/btrfs/relocation.c",
          "fs/btrfs/root-tree.c||fs/btrfs/root-tree.c",
          "fs/btrfs/super.c||fs/btrfs/super.c",
          "fs/btrfs/transaction.c||fs/btrfs/transaction.c",
          "fs/btrfs/tree-log.c||fs/btrfs/tree-log.c",
          "fs/btrfs/volumes.c||fs/btrfs/volumes.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/btrfs/inode.c||fs/btrfs/inode.c"
          ],
          "candidate": [
            "fs/btrfs/inode.c||fs/btrfs/inode.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/btrfs/ctree.c||fs/btrfs/ctree.c": [
          "File: fs/btrfs/ctree.c -> fs/btrfs/ctree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1154:  ret = update_ref_for_cow(trans, root, buf, cow, &last_ref);",
          "1155:  if (ret) {",
          "1157:   return ret;",
          "1158:  }",
          "1160:  if (test_bit(BTRFS_ROOT_REF_COWS, &root->state)) {",
          "1161:   ret = btrfs_reloc_cow_block(trans, root, buf, cow);",
          "1162:   if (ret) {",
          "1164:    return ret;",
          "1165:   }",
          "1166:  }",
          "",
          "[Removed Lines]",
          "1156:   btrfs_abort_transaction(trans, root, ret);",
          "1163:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1156:   btrfs_abort_transaction(trans, ret);",
          "1163:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1198:   if (last_ref) {",
          "1199:    ret = tree_mod_log_free_eb(root->fs_info, buf);",
          "1200:    if (ret) {",
          "1202:     return ret;",
          "1203:    }",
          "1204:   }",
          "",
          "[Removed Lines]",
          "1201:     btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1201:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3255:  ret = tree_mod_log_eb_copy(root->fs_info, dst, src, dst_nritems, 0,",
          "3256:        push_items);",
          "3257:  if (ret) {",
          "3259:   return ret;",
          "3260:  }",
          "3261:  copy_extent_buffer(dst, src,",
          "",
          "[Removed Lines]",
          "3258:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3258:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3330:  ret = tree_mod_log_eb_copy(root->fs_info, dst, src, 0,",
          "3331:        src_nritems - push_items, push_items);",
          "3332:  if (ret) {",
          "3334:   return ret;",
          "3335:  }",
          "3336:  copy_extent_buffer(dst, src,",
          "",
          "[Removed Lines]",
          "3333:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3333:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3534:  ret = tree_mod_log_eb_copy(root->fs_info, split, c, 0,",
          "3535:        mid, c_nritems - mid);",
          "3536:  if (ret) {",
          "3538:   return ret;",
          "3539:  }",
          "3540:  copy_extent_buffer(split, c,",
          "",
          "[Removed Lines]",
          "3537:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3537:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/ctree.h||fs/btrfs/ctree.h": [
          "File: fs/btrfs/ctree.h -> fs/btrfs/ctree.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3380: __cold",
          "3381: void __btrfs_abort_transaction(struct btrfs_trans_handle *trans,",
          "3383:           unsigned int line, int errno);",
          "3390: do {        \\",
          "3392:  if (!test_and_set_bit(BTRFS_FS_STATE_TRANS_ABORTED, \\",
          "3394:   WARN(1, KERN_DEBUG    \\",
          "3395:   \"BTRFS: Transaction aborted (error %d)\\n\", \\",
          "3396:   (errno));     \\",
          "3397:  }       \\",
          "3399:       __LINE__, (errno));  \\",
          "3400: } while (0)",
          "",
          "[Removed Lines]",
          "3382:           struct btrfs_root *root, const char *function,",
          "3389: #define btrfs_abort_transaction(trans, root, errno)  \\",
          "3393:    &((root)->fs_info->fs_state))) { \\",
          "3398:  __btrfs_abort_transaction((trans), (root), __func__, \\",
          "",
          "[Added Lines]",
          "3382:           const char *function,",
          "3389: #define btrfs_abort_transaction(trans, errno)  \\",
          "3393:    &((trans)->fs_info->fs_state))) { \\",
          "3398:  __btrfs_abort_transaction((trans), __func__,  \\",
          "",
          "---------------"
        ],
        "fs/btrfs/delayed-inode.c||fs/btrfs/delayed-inode.c": [
          "File: fs/btrfs/delayed-inode.c -> fs/btrfs/delayed-inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1170:   if (ret) {",
          "1171:    btrfs_release_delayed_node(curr_node);",
          "1172:    curr_node = NULL;",
          "1174:    break;",
          "1175:   }",
          "",
          "[Removed Lines]",
          "1173:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1173:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/extent-tree.c||fs/btrfs/extent-tree.c": [
          "File: fs/btrfs/extent-tree.c -> fs/btrfs/extent-tree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2180:         path, bytenr, parent, root_objectid,",
          "2181:         owner, offset, refs_to_add);",
          "2182:  if (ret)",
          "2184: out:",
          "2185:  btrfs_free_path(path);",
          "2186:  return ret;",
          "",
          "[Removed Lines]",
          "2183:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2183:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2971:  trans->can_flush_pending_bgs = false;",
          "2972:  ret = __btrfs_run_delayed_refs(trans, root, count);",
          "2973:  if (ret < 0) {",
          "2975:   return ret;",
          "2976:  }",
          "",
          "[Removed Lines]",
          "2974:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2974:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3434:   goto out_put;",
          "3435:  }",
          "3436:  WARN_ON(ret);",
          "",
          "[Removed Lines]",
          "3433:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3433:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3670:     }",
          "3671:     spin_unlock(&cur_trans->dirty_bgs_lock);",
          "3672:    } else if (ret) {",
          "3674:    }",
          "3675:   }",
          "",
          "[Removed Lines]",
          "3673:     btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3673:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3816:            cache);",
          "3817:    }",
          "3818:    if (ret)",
          "3820:   }",
          "",
          "[Removed Lines]",
          "3819:     btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3819:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6881:           NULL, refs_to_drop,",
          "6882:           is_data, &last_ref);",
          "6883:    if (ret) {",
          "6885:     goto out;",
          "6886:    }",
          "6887:    btrfs_release_path(path);",
          "",
          "[Removed Lines]",
          "6884:     btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "6884:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "6930:         path->nodes[0]);",
          "6931:    }",
          "6932:    if (ret < 0) {",
          "6934:     goto out;",
          "6935:    }",
          "6936:    extent_slot = path->slots[0];",
          "",
          "[Removed Lines]",
          "6933:     btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "6933:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "6941:    \"unable to find ref byte nr %llu parent %llu root %llu  owner %llu offset %llu\",",
          "6942:    bytenr, parent, root_objectid, owner_objectid,",
          "6943:    owner_offset);",
          "6945:   goto out;",
          "6946:  } else {",
          "6948:   goto out;",
          "6949:  }",
          "",
          "[Removed Lines]",
          "6944:   btrfs_abort_transaction(trans, extent_root, ret);",
          "6947:   btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "6944:   btrfs_abort_transaction(trans, ret);",
          "6947:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "6956:   ret = convert_extent_item_v0(trans, extent_root, path,",
          "6957:           owner_objectid, 0);",
          "6958:   if (ret < 0) {",
          "6960:    goto out;",
          "6961:   }",
          "",
          "[Removed Lines]",
          "6959:    btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "6959:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "6975:    btrfs_print_leaf(extent_root, path->nodes[0]);",
          "6976:   }",
          "6977:   if (ret < 0) {",
          "6979:    goto out;",
          "6980:   }",
          "",
          "[Removed Lines]",
          "6978:    btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "6978:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "7000:   btrfs_err(info, \"trying to drop %d refs but we only have %Lu \"",
          "7001:      \"for bytenr %Lu\", refs_to_drop, refs, bytenr);",
          "7002:   ret = -EINVAL;",
          "7004:   goto out;",
          "7005:  }",
          "7006:  refs -= refs_to_drop;",
          "",
          "[Removed Lines]",
          "7003:   btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "7003:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "7023:           iref, refs_to_drop,",
          "7024:           is_data, &last_ref);",
          "7025:    if (ret) {",
          "7027:     goto out;",
          "7028:    }",
          "7029:   }",
          "",
          "[Removed Lines]",
          "7026:     btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "7026:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "7046:   ret = btrfs_del_items(trans, extent_root, path, path->slots[0],",
          "7047:           num_to_del);",
          "7048:   if (ret) {",
          "7050:    goto out;",
          "7051:   }",
          "7052:   btrfs_release_path(path);",
          "",
          "[Removed Lines]",
          "7049:    btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "7049:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "7054:   if (is_data) {",
          "7055:    ret = btrfs_del_csums(trans, root, bytenr, num_bytes);",
          "7056:    if (ret) {",
          "7058:     goto out;",
          "7059:    }",
          "7060:   }",
          "",
          "[Removed Lines]",
          "7057:     btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "7057:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "7062:   ret = add_to_free_space_tree(trans, root->fs_info, bytenr,",
          "7063:           num_bytes);",
          "7064:   if (ret) {",
          "7066:    goto out;",
          "7067:   }",
          "7069:   ret = update_block_group(trans, root, bytenr, num_bytes, 0);",
          "7070:   if (ret) {",
          "7072:    goto out;",
          "7073:   }",
          "7074:  }",
          "",
          "[Removed Lines]",
          "7065:    btrfs_abort_transaction(trans, extent_root, ret);",
          "7071:    btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "7065:    btrfs_abort_transaction(trans, ret);",
          "7071:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "7854:    if (ret < 0 && ret != -ENOSPC)",
          "7857:    else",
          "7858:     ret = 0;",
          "7859:    if (!exist)",
          "",
          "[Removed Lines]",
          "7855:     btrfs_abort_transaction(trans,",
          "7856:        root, ret);",
          "",
          "[Added Lines]",
          "7855:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "9329:       &root->root_key,",
          "9330:       root_item);",
          "9331:    if (ret) {",
          "9333:     err = ret;",
          "9334:     goto out_end_trans;",
          "9335:    }",
          "",
          "[Removed Lines]",
          "9332:     btrfs_abort_transaction(trans, tree_root, ret);",
          "",
          "[Added Lines]",
          "9331:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "9357:  ret = btrfs_del_root(trans, tree_root, &root->root_key);",
          "9358:  if (ret) {",
          "9360:   goto out_end_trans;",
          "9361:  }",
          "",
          "[Removed Lines]",
          "9359:   btrfs_abort_transaction(trans, tree_root, ret);",
          "",
          "[Added Lines]",
          "9358:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "9364:   ret = btrfs_find_root(tree_root, &root->root_key, path,",
          "9365:           NULL, NULL);",
          "9366:   if (ret < 0) {",
          "9368:    err = ret;",
          "9369:    goto out_end_trans;",
          "9370:   } else if (ret > 0) {",
          "",
          "[Removed Lines]",
          "9367:    btrfs_abort_transaction(trans, tree_root, ret);",
          "",
          "[Added Lines]",
          "9366:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "10324:   ret = btrfs_insert_item(trans, extent_root, &key, &item,",
          "10325:      sizeof(item));",
          "10326:   if (ret)",
          "10328:   ret = btrfs_finish_chunk_alloc(trans, extent_root,",
          "10329:             key.objectid, key.offset);",
          "10330:   if (ret)",
          "10332:   add_block_group_free_space(trans, root->fs_info, block_group);",
          "10334: next:",
          "",
          "[Removed Lines]",
          "10327:    btrfs_abort_transaction(trans, extent_root, ret);",
          "10331:    btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "10326:    btrfs_abort_transaction(trans, ret);",
          "10330:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/file-item.c||fs/btrfs/file-item.c": [
          "File: fs/btrfs/file-item.c -> fs/btrfs/file-item.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "699:    ret = btrfs_split_item(trans, root, path, &key, offset);",
          "700:    if (ret && ret != -EAGAIN) {",
          "702:     goto out;",
          "703:    }",
          "",
          "[Removed Lines]",
          "701:     btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "701:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/file.c||fs/btrfs/file.c": [
          "File: fs/btrfs/file.c -> fs/btrfs/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "950:    ret = btrfs_del_items(trans, root, path, del_slot,",
          "951:            del_nr);",
          "952:    if (ret) {",
          "954:     break;",
          "955:    }",
          "",
          "[Removed Lines]",
          "953:     btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "953:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "974:   path->slots[0] = del_slot;",
          "975:   ret = btrfs_del_items(trans, root, path, del_slot, del_nr);",
          "976:   if (ret)",
          "978:  }",
          "980:  leaf = path->nodes[0];",
          "",
          "[Removed Lines]",
          "977:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "977:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1190:    goto again;",
          "1191:   }",
          "1192:   if (ret < 0) {",
          "1194:    goto out;",
          "1195:   }",
          "",
          "[Removed Lines]",
          "1193:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1193:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1279:   ret = btrfs_del_items(trans, root, path, del_slot, del_nr);",
          "1280:   if (ret < 0) {",
          "1282:    goto out;",
          "1283:   }",
          "1284:  }",
          "",
          "[Removed Lines]",
          "1281:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1281:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/free-space-cache.c||fs/btrfs/free-space-cache.c": [
          "File: fs/btrfs/free-space-cache.c -> fs/btrfs/free-space-cache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "280:  if (locked)",
          "281:   mutex_unlock(&trans->transaction->cache_write_mutex);",
          "282:  if (ret)",
          "285:  return ret;",
          "286: }",
          "",
          "[Removed Lines]",
          "283:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "283:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/free-space-tree.c||fs/btrfs/free-space-tree.c": [
          "File: fs/btrfs/free-space-tree.c -> fs/btrfs/free-space-tree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "305: out:",
          "306:  kvfree(bitmap);",
          "307:  if (ret)",
          "309:  return ret;",
          "310: }",
          "",
          "[Removed Lines]",
          "308:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "308:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "454: out:",
          "455:  kvfree(bitmap);",
          "456:  if (ret)",
          "458:  return ret;",
          "459: }",
          "",
          "[Removed Lines]",
          "457:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "457:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "851: out:",
          "852:  btrfs_free_path(path);",
          "853:  if (ret)",
          "855:  return ret;",
          "856: }",
          "",
          "[Removed Lines]",
          "854:   btrfs_abort_transaction(trans, fs_info->free_space_root, ret);",
          "",
          "[Added Lines]",
          "854:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1047: out:",
          "1048:  btrfs_free_path(path);",
          "1049:  if (ret)",
          "1051:  return ret;",
          "1052: }",
          "",
          "[Removed Lines]",
          "1050:   btrfs_abort_transaction(trans, fs_info->free_space_root, ret);",
          "",
          "[Added Lines]",
          "1050:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1194: abort:",
          "1195:  fs_info->creating_free_space_tree = 0;",
          "1197:  btrfs_end_transaction(trans, tree_root);",
          "1198:  return ret;",
          "1199: }",
          "",
          "[Removed Lines]",
          "1196:  btrfs_abort_transaction(trans, tree_root, ret);",
          "",
          "[Added Lines]",
          "1196:  btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1280:  return 0;",
          "1282: abort:",
          "1284:  btrfs_end_transaction(trans, tree_root);",
          "1285:  return ret;",
          "1286: }",
          "",
          "[Removed Lines]",
          "1283:  btrfs_abort_transaction(trans, tree_root, ret);",
          "",
          "[Added Lines]",
          "1283:  btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1333:  btrfs_free_path(path);",
          "1334:  mutex_unlock(&block_group->free_space_lock);",
          "1335:  if (ret)",
          "1337:  return ret;",
          "1338: }",
          "",
          "[Removed Lines]",
          "1336:   btrfs_abort_transaction(trans, fs_info->free_space_root, ret);",
          "",
          "[Added Lines]",
          "1336:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1410: out:",
          "1411:  btrfs_free_path(path);",
          "1412:  if (ret)",
          "1414:  return ret;",
          "1415: }",
          "",
          "[Removed Lines]",
          "1413:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1413:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/inode-map.c||fs/btrfs/inode-map.c": [
          "File: fs/btrfs/inode-map.c -> fs/btrfs/inode-map.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "458:  BTRFS_I(inode)->generation = 0;",
          "459:  ret = btrfs_update_inode(trans, root, inode);",
          "460:  if (ret) {",
          "462:   goto out_put;",
          "463:  }",
          "",
          "[Removed Lines]",
          "461:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "461:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "466:   ret = btrfs_truncate_free_space_cache(root, trans, NULL, inode);",
          "467:   if (ret) {",
          "468:    if (ret != -ENOSPC)",
          "470:    goto out_put;",
          "471:   }",
          "472:  }",
          "",
          "[Removed Lines]",
          "469:     btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "469:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/inode.c||fs/btrfs/inode.c": [
          "File: fs/btrfs/inode.c -> fs/btrfs/inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "296:        start, aligned_end, NULL,",
          "297:        1, 1, extent_item_size, &extent_inserted);",
          "298:  if (ret) {",
          "300:   goto out;",
          "301:  }",
          "",
          "[Removed Lines]",
          "299:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "299:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "307:        inline_len, compressed_size,",
          "308:        compress_type, compressed_pages);",
          "309:  if (ret && ret != -ENOSPC) {",
          "311:   goto out;",
          "312:  } else if (ret == -ENOSPC) {",
          "313:   ret = 1;",
          "",
          "[Removed Lines]",
          "310:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "310:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2603:  ret = btrfs_insert_empty_item(trans, root, path, &key,",
          "2604:      sizeof(*extent));",
          "2605:  if (ret) {",
          "2607:   goto out_free_path;",
          "2608:  }",
          "",
          "[Removed Lines]",
          "2606:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2606:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2630:    backref->root_id, backref->inum,",
          "2632:  if (ret) {",
          "2634:   goto out_free_path;",
          "2635:  }",
          "",
          "[Removed Lines]",
          "2633:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2633:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2899:   trans->block_rsv = &root->fs_info->delalloc_block_rsv;",
          "2900:   ret = btrfs_update_inode_fallback(trans, root, inode);",
          "2903:   goto out;",
          "2904:  }",
          "",
          "[Removed Lines]",
          "2902:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2902:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2959:       ordered_extent->file_offset, ordered_extent->len,",
          "2960:       trans->transid);",
          "2961:  if (ret < 0) {",
          "2963:   goto out_unlock;",
          "2964:  }",
          "",
          "[Removed Lines]",
          "2962:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2962:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2969:  btrfs_ordered_update_i_size(inode, 0, ordered_extent);",
          "2970:  ret = btrfs_update_inode_fallback(trans, root, inode);",
          "2973:   goto out_unlock;",
          "2974:  }",
          "2975:  ret = 0;",
          "",
          "[Removed Lines]",
          "2972:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2972:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3213:   ret = btrfs_del_orphan_item(trans, root->fs_info->tree_root,",
          "3214:          root->root_key.objectid);",
          "3215:   if (ret)",
          "3217:   else",
          "3218:    clear_bit(BTRFS_ROOT_ORPHAN_ITEM_INSERTED,",
          "3219:       &root->state);",
          "",
          "[Removed Lines]",
          "3216:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3216:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3304:    if (ret != -EEXIST) {",
          "3305:     clear_bit(BTRFS_INODE_HAS_ORPHAN_ITEM,",
          "3306:        &BTRFS_I(inode)->runtime_flags);",
          "3308:     return ret;",
          "3309:    }",
          "3310:   }",
          "",
          "[Removed Lines]",
          "3307:     btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3307:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3316:   ret = btrfs_insert_orphan_item(trans, root->fs_info->tree_root,",
          "3317:             root->root_key.objectid);",
          "3318:   if (ret && ret != -EEXIST) {",
          "3320:    return ret;",
          "3321:   }",
          "3322:  }",
          "",
          "[Removed Lines]",
          "3319:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3319:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4015:   btrfs_info(root->fs_info,",
          "4016:    \"failed to delete reference to %.*s, inode %llu parent %llu\",",
          "4017:    name_len, name, ino, dir_ino);",
          "4019:   goto err;",
          "4020:  }",
          "4021: skip_backref:",
          "4022:  ret = btrfs_delete_delayed_dir_index(trans, root, dir, index);",
          "4023:  if (ret) {",
          "4025:   goto err;",
          "4026:  }",
          "4028:  ret = btrfs_del_inode_ref_in_log(trans, root, name, name_len,",
          "4029:       inode, dir_ino);",
          "4030:  if (ret != 0 && ret != -ENOENT) {",
          "4032:   goto err;",
          "4033:  }",
          "",
          "[Removed Lines]",
          "4018:   btrfs_abort_transaction(trans, root, ret);",
          "4024:   btrfs_abort_transaction(trans, root, ret);",
          "4031:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "4018:   btrfs_abort_transaction(trans, ret);",
          "4024:   btrfs_abort_transaction(trans, ret);",
          "4031:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4037:  if (ret == -ENOENT)",
          "4038:   ret = 0;",
          "4039:  else if (ret)",
          "4041: err:",
          "4042:  btrfs_free_path(path);",
          "4043:  if (ret)",
          "",
          "[Removed Lines]",
          "4040:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "4040:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4151:  WARN_ON(key.type != BTRFS_ROOT_ITEM_KEY || key.objectid != objectid);",
          "4152:  ret = btrfs_delete_one_dir_name(trans, root, path, di);",
          "4153:  if (ret) {",
          "4155:   goto out;",
          "4156:  }",
          "4157:  btrfs_release_path(path);",
          "",
          "[Removed Lines]",
          "4154:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "4154:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4161:      dir_ino, &index, name, name_len);",
          "4162:  if (ret < 0) {",
          "4163:   if (ret != -ENOENT) {",
          "4165:    goto out;",
          "4166:   }",
          "4167:   di = btrfs_search_dir_index_item(root, path, dir_ino,",
          "",
          "[Removed Lines]",
          "4164:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "4164:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4171:     ret = -ENOENT;",
          "4172:    else",
          "4173:     ret = PTR_ERR(di);",
          "4175:    goto out;",
          "4176:   }",
          "",
          "[Removed Lines]",
          "4174:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "4174:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4185:  ret = btrfs_delete_delayed_dir_index(trans, root, dir, index);",
          "4186:  if (ret) {",
          "4188:   goto out;",
          "4189:  }",
          "",
          "[Removed Lines]",
          "4187:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "4187:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4193:  dir->i_mtime = dir->i_ctime = current_fs_time(dir->i_sb);",
          "4194:  ret = btrfs_update_inode_fallback(trans, root, dir);",
          "4195:  if (ret)",
          "4197: out:",
          "4198:  btrfs_free_path(path);",
          "4199:  return ret;",
          "",
          "[Removed Lines]",
          "4196:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "4196:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4514:              pending_del_nr);",
          "4515:      if (err) {",
          "4516:       btrfs_abort_transaction(trans,",
          "4518:          err);",
          "4519:       goto error;",
          "4520:      }",
          "",
          "[Removed Lines]",
          "4517:          root,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4526:             item_end,",
          "4527:             new_size);",
          "4528:     if (err) {",
          "4531:      goto error;",
          "4532:     }",
          "4533:    } else if (test_bit(BTRFS_ROOT_REF_COWS,",
          "",
          "[Removed Lines]",
          "4529:      btrfs_abort_transaction(trans,",
          "4530:         root, err);",
          "",
          "[Added Lines]",
          "4528:      btrfs_abort_transaction(trans, err);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "4591:       pending_del_slot,",
          "4592:       pending_del_nr);",
          "4593:     if (ret) {",
          "4596:      goto error;",
          "4597:     }",
          "4598:     pending_del_nr = 0;",
          "",
          "[Removed Lines]",
          "4594:      btrfs_abort_transaction(trans,",
          "4595:         root, ret);",
          "",
          "[Added Lines]",
          "4592:      btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "4625:   ret = btrfs_del_items(trans, root, path, pending_del_slot,",
          "4626:           pending_del_nr);",
          "4627:   if (ret)",
          "4629:  }",
          "4630: error:",
          "4631:  if (root->root_key.objectid != BTRFS_TREE_LOG_OBJECTID)",
          "",
          "[Removed Lines]",
          "4628:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "4625:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "4795:  ret = btrfs_drop_extents(trans, root, inode, offset, offset + len, 1);",
          "4796:  if (ret) {",
          "4798:   btrfs_end_transaction(trans, root);",
          "4799:   return ret;",
          "4800:  }",
          "",
          "[Removed Lines]",
          "4797:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "4794:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "4802:  ret = btrfs_insert_file_extent(trans, root, btrfs_ino(inode), offset,",
          "4803:            0, 0, len, 0, len, 0, 0, 0);",
          "4804:  if (ret)",
          "4806:  else",
          "4807:   btrfs_update_inode(trans, root, inode);",
          "4808:  btrfs_end_transaction(trans, root);",
          "",
          "[Removed Lines]",
          "4805:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "4802:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "5029:    i_size_write(inode, BTRFS_I(inode)->disk_i_size);",
          "5030:    err = btrfs_orphan_del(trans, inode);",
          "5031:    if (err)",
          "5033:    btrfs_end_transaction(trans, root);",
          "5034:   }",
          "5035:  }",
          "",
          "[Removed Lines]",
          "5032:     btrfs_abort_transaction(trans, root, err);",
          "",
          "[Added Lines]",
          "5029:     btrfs_abort_transaction(trans, err);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "6335:  if (ret == -EEXIST || ret == -EOVERFLOW)",
          "6336:   goto fail_dir_item;",
          "6337:  else if (ret) {",
          "6339:   return ret;",
          "6340:  }",
          "",
          "[Removed Lines]",
          "6338:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "6335:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "6346:   current_fs_time(parent_inode->i_sb);",
          "6347:  ret = btrfs_update_inode(trans, root, parent_inode);",
          "6348:  if (ret)",
          "6350:  return ret;",
          "6352: fail_dir_item:",
          "",
          "[Removed Lines]",
          "6349:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "6346:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "9568:    ret = btrfs_update_inode(trans, root, old_inode);",
          "9569:  }",
          "9570:  if (ret) {",
          "9572:   goto out_fail;",
          "9573:  }",
          "",
          "[Removed Lines]",
          "9571:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "9568:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "9588:    ret = btrfs_update_inode(trans, dest, new_inode);",
          "9589:  }",
          "9590:  if (ret) {",
          "9592:   goto out_fail;",
          "9593:  }",
          "",
          "[Removed Lines]",
          "9591:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "9588:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "9596:         new_dentry->d_name.name,",
          "9597:         new_dentry->d_name.len, 0, old_idx);",
          "9598:  if (ret) {",
          "9600:   goto out_fail;",
          "9601:  }",
          "",
          "[Removed Lines]",
          "9599:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "9596:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "9604:         old_dentry->d_name.name,",
          "9605:         old_dentry->d_name.len, 0, new_idx);",
          "9606:  if (ret) {",
          "9608:   goto out_fail;",
          "9609:  }",
          "",
          "[Removed Lines]",
          "9607:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "9604:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "9843:    ret = btrfs_update_inode(trans, root, old_inode);",
          "9844:  }",
          "9845:  if (ret) {",
          "9847:   goto out_fail;",
          "9848:  }",
          "",
          "[Removed Lines]",
          "9846:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "9843:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "9867:   if (!ret && new_inode->i_nlink == 0)",
          "9868:    ret = btrfs_orphan_add(trans, d_inode(new_dentry));",
          "9869:   if (ret) {",
          "9871:    goto out_fail;",
          "9872:   }",
          "9873:  }",
          "",
          "[Removed Lines]",
          "9870:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "9867:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "9876:         new_dentry->d_name.name,",
          "9877:         new_dentry->d_name.len, 0, index);",
          "9878:  if (ret) {",
          "9880:   goto out_fail;",
          "9881:  }",
          "",
          "[Removed Lines]",
          "9879:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "9876:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "9896:       old_dentry);",
          "9898:   if (ret) {",
          "9900:    goto out_fail;",
          "9901:   }",
          "9902:  }",
          "",
          "[Removed Lines]",
          "9899:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "9896:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "10322:   if (ret) {",
          "10323:    btrfs_free_reserved_extent(root, ins.objectid,",
          "10324:          ins.offset, 0);",
          "10326:    if (own_trans)",
          "10327:     btrfs_end_transaction(trans, root);",
          "10328:    break;",
          "",
          "[Removed Lines]",
          "10325:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "10322:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "10382:   ret = btrfs_update_inode(trans, root, inode);",
          "10384:   if (ret) {",
          "10386:    if (own_trans)",
          "10387:     btrfs_end_transaction(trans, root);",
          "10388:    break;",
          "",
          "[Removed Lines]",
          "10385:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "10382:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/ioctl.c||fs/btrfs/ioctl.c": [
          "File: fs/btrfs/ioctl.c -> fs/btrfs/ioctl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "561:  new_root = btrfs_read_fs_root_no_name(root->fs_info, &key);",
          "562:  if (IS_ERR(new_root)) {",
          "563:   ret = PTR_ERR(new_root);",
          "565:   goto fail;",
          "566:  }",
          "",
          "[Removed Lines]",
          "564:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "564:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "570:  ret = btrfs_create_subvol_root(trans, new_root, root, new_dirid);",
          "571:  if (ret) {",
          "574:   goto fail;",
          "575:  }",
          "",
          "[Removed Lines]",
          "573:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "573:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "584:  ret = btrfs_set_inode_index(dir, &index);",
          "585:  if (ret) {",
          "587:   goto fail;",
          "588:  }",
          "",
          "[Removed Lines]",
          "586:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "586:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "591:         name, namelen, dir, &key,",
          "592:         BTRFS_FT_DIR, index);",
          "593:  if (ret) {",
          "595:   goto fail;",
          "596:  }",
          "",
          "[Removed Lines]",
          "594:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "594:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "608:       root_item->uuid, BTRFS_UUID_KEY_SUBVOL,",
          "609:       objectid);",
          "610:  if (ret)",
          "613: fail:",
          "614:  kfree(root_item);",
          "",
          "[Removed Lines]",
          "611:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "611:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2488:     dentry->d_name.len);",
          "2489:  if (ret) {",
          "2490:   err = ret;",
          "2492:   goto out_end_trans;",
          "2493:  }",
          "",
          "[Removed Lines]",
          "2491:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2491:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2504:      root->fs_info->tree_root,",
          "2505:      dest->root_key.objectid);",
          "2506:   if (ret) {",
          "2508:    err = ret;",
          "2509:    goto out_end_trans;",
          "2510:   }",
          "",
          "[Removed Lines]",
          "2507:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2507:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2514:       dest->root_item.uuid, BTRFS_UUID_KEY_SUBVOL,",
          "2515:       dest->root_key.objectid);",
          "2516:  if (ret && ret != -ENOENT) {",
          "2518:   err = ret;",
          "2519:   goto out_end_trans;",
          "2520:  }",
          "",
          "[Removed Lines]",
          "2517:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2517:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2524:        BTRFS_UUID_KEY_RECEIVED_SUBVOL,",
          "2525:        dest->root_key.objectid);",
          "2526:   if (ret && ret != -ENOENT) {",
          "2528:    err = ret;",
          "2529:    goto out_end_trans;",
          "2530:   }",
          "",
          "[Removed Lines]",
          "2527:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2527:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3292:  ret = btrfs_update_inode(trans, root, inode);",
          "3293:  if (ret) {",
          "3295:   btrfs_end_transaction(trans, root);",
          "3296:   goto out;",
          "3297:  }",
          "",
          "[Removed Lines]",
          "3294:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3294:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3693:     if (ret) {",
          "3694:      if (ret != -EOPNOTSUPP)",
          "3695:       btrfs_abort_transaction(trans,",
          "3697:      btrfs_end_transaction(trans, root);",
          "3698:      goto out;",
          "3699:     }",
          "",
          "[Removed Lines]",
          "3696:         root, ret);",
          "",
          "[Added Lines]",
          "3696:          ret);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3701:     ret = btrfs_insert_empty_item(trans, root, path,",
          "3702:              &new_key, size);",
          "3703:     if (ret) {",
          "3706:      btrfs_end_transaction(trans, root);",
          "3707:      goto out;",
          "3708:     }",
          "",
          "[Removed Lines]",
          "3704:      btrfs_abort_transaction(trans, root,",
          "3705:         ret);",
          "",
          "[Added Lines]",
          "3704:      btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3734:        new_key.offset - datao);",
          "3735:      if (ret) {",
          "3736:       btrfs_abort_transaction(trans,",
          "3738:          ret);",
          "3739:       btrfs_end_transaction(trans,",
          "3740:               root);",
          "",
          "[Removed Lines]",
          "3737:          root,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3771:     if (ret) {",
          "3772:      if (ret != -EOPNOTSUPP)",
          "3773:       btrfs_abort_transaction(trans,",
          "3775:          ret);",
          "3776:      btrfs_end_transaction(trans, root);",
          "3777:      goto out;",
          "",
          "[Removed Lines]",
          "3774:          root,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3827:       last_dest_end, destoff + len, 1);",
          "3828:   if (ret) {",
          "3829:    if (ret != -EOPNOTSUPP)",
          "3831:    btrfs_end_transaction(trans, root);",
          "3832:    goto out;",
          "3833:   }",
          "",
          "[Removed Lines]",
          "3830:     btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3827:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "5163:        BTRFS_UUID_KEY_RECEIVED_SUBVOL,",
          "5164:        root->root_key.objectid);",
          "5165:   if (ret < 0 && ret != -EEXIST) {",
          "5167:    goto out;",
          "5168:   }",
          "5169:  }",
          "5170:  ret = btrfs_commit_transaction(trans, root);",
          "5171:  if (ret < 0) {",
          "5173:   goto out;",
          "5174:  }",
          "",
          "[Removed Lines]",
          "5166:    btrfs_abort_transaction(trans, root, ret);",
          "5172:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "5163:    btrfs_abort_transaction(trans, ret);",
          "5169:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/relocation.c||fs/btrfs/relocation.c": [
          "File: fs/btrfs/relocation.c -> fs/btrfs/relocation.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1723:         btrfs_header_owner(leaf),",
          "1724:         key.objectid, key.offset);",
          "1725:   if (ret) {",
          "1727:    break;",
          "1728:   }",
          "",
          "[Removed Lines]",
          "1726:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1726:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1731:      parent, btrfs_header_owner(leaf),",
          "1732:      key.objectid, key.offset);",
          "1733:   if (ret) {",
          "1735:    break;",
          "1736:   }",
          "1737:  }",
          "",
          "[Removed Lines]",
          "1734:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1734:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/root-tree.c||fs/btrfs/root-tree.c": [
          "File: fs/btrfs/root-tree.c -> fs/btrfs/root-tree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:  ret = btrfs_search_slot(trans, root, key, path, 0, 1);",
          "152:  if (ret < 0) {",
          "154:   goto out;",
          "155:  }",
          "",
          "[Removed Lines]",
          "153:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "153:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "176:   ret = btrfs_search_slot(trans, root, key, path,",
          "177:     -1, 1);",
          "178:   if (ret < 0) {",
          "180:    goto out;",
          "181:   }",
          "183:   ret = btrfs_del_item(trans, root, path);",
          "184:   if (ret < 0) {",
          "186:    goto out;",
          "187:   }",
          "188:   btrfs_release_path(path);",
          "189:   ret = btrfs_insert_empty_item(trans, root, path,",
          "190:     key, sizeof(*item));",
          "191:   if (ret < 0) {",
          "193:    goto out;",
          "194:   }",
          "195:   l = path->nodes[0];",
          "",
          "[Removed Lines]",
          "179:    btrfs_abort_transaction(trans, root, ret);",
          "185:    btrfs_abort_transaction(trans, root, ret);",
          "192:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "179:    btrfs_abort_transaction(trans, ret);",
          "185:    btrfs_abort_transaction(trans, ret);",
          "192:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "448:  ret = btrfs_insert_empty_item(trans, tree_root, path, &key,",
          "449:           sizeof(*ref) + name_len);",
          "450:  if (ret) {",
          "452:   btrfs_free_path(path);",
          "453:   return ret;",
          "454:  }",
          "",
          "[Removed Lines]",
          "451:   btrfs_abort_transaction(trans, tree_root, ret);",
          "",
          "[Added Lines]",
          "451:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/super.c||fs/btrfs/super.c": [
          "File: fs/btrfs/super.c -> fs/btrfs/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "252: __cold",
          "253: void __btrfs_abort_transaction(struct btrfs_trans_handle *trans,",
          "255:           unsigned int line, int errno)",
          "256: {",
          "257:  trans->aborted = errno;",
          "",
          "[Removed Lines]",
          "254:           struct btrfs_root *root, const char *function,",
          "",
          "[Added Lines]",
          "254:           const char *function,",
          "257:  struct btrfs_fs_info *fs_info = trans->fs_info;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "261:   const char *errstr;",
          "263:   errstr = btrfs_decode_error(errno);",
          "265:              \"%s:%d: Aborting unused transaction(%s).\",",
          "266:              function, line, errstr);",
          "267:   return;",
          "268:  }",
          "269:  ACCESS_ONCE(trans->transaction->aborted) = errno;",
          "274: }",
          "",
          "[Removed Lines]",
          "264:   btrfs_warn(root->fs_info,",
          "271:  wake_up(&root->fs_info->transaction_wait);",
          "272:  wake_up(&root->fs_info->transaction_blocked_wait);",
          "273:  __btrfs_handle_fs_error(root->fs_info, function, line, errno, NULL);",
          "",
          "[Added Lines]",
          "266:   btrfs_warn(fs_info,",
          "273:  wake_up(&fs_info->transaction_wait);",
          "274:  wake_up(&fs_info->transaction_blocked_wait);",
          "275:  __btrfs_handle_fs_error(fs_info, function, line, errno, NULL);",
          "",
          "---------------"
        ],
        "fs/btrfs/transaction.c||fs/btrfs/transaction.c": [
          "File: fs/btrfs/transaction.c -> fs/btrfs/transaction.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1492:   goto dir_item_existed;",
          "1493:  } else if (IS_ERR(dir_item)) {",
          "1494:   ret = PTR_ERR(dir_item);",
          "1496:   goto fail;",
          "1497:  }",
          "1498:  btrfs_release_path(path);",
          "",
          "[Removed Lines]",
          "1495:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1495:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1506:  ret = btrfs_run_delayed_items(trans, root);",
          "1509:   goto fail;",
          "1510:  }",
          "",
          "[Removed Lines]",
          "1508:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1508:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1544:  if (ret) {",
          "1545:   btrfs_tree_unlock(old);",
          "1546:   free_extent_buffer(old);",
          "1548:   goto fail;",
          "1549:  }",
          "",
          "[Removed Lines]",
          "1547:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1547:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1555:  btrfs_tree_unlock(old);",
          "1556:  free_extent_buffer(old);",
          "1557:  if (ret) {",
          "1559:   goto fail;",
          "1560:  }",
          "",
          "[Removed Lines]",
          "1558:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1558:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1569:  btrfs_tree_unlock(tmp);",
          "1570:  free_extent_buffer(tmp);",
          "1571:  if (ret) {",
          "1573:   goto fail;",
          "1574:  }",
          "",
          "[Removed Lines]",
          "1572:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1572:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1581:      btrfs_ino(parent_inode), index,",
          "1582:      dentry->d_name.name, dentry->d_name.len);",
          "1583:  if (ret) {",
          "1585:   goto fail;",
          "1586:  }",
          "",
          "[Removed Lines]",
          "1584:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1584:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1589:  pending->snap = btrfs_read_fs_root_no_name(root->fs_info, &key);",
          "1590:  if (IS_ERR(pending->snap)) {",
          "1591:   ret = PTR_ERR(pending->snap);",
          "1593:   goto fail;",
          "1594:  }",
          "1596:  ret = btrfs_reloc_post_snapshot(trans, pending);",
          "1597:  if (ret) {",
          "1599:   goto fail;",
          "1600:  }",
          "1602:  ret = btrfs_run_delayed_refs(trans, root, (unsigned long)-1);",
          "1603:  if (ret) {",
          "1605:   goto fail;",
          "1606:  }",
          "",
          "[Removed Lines]",
          "1592:   btrfs_abort_transaction(trans, root, ret);",
          "1598:   btrfs_abort_transaction(trans, root, ret);",
          "1604:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1592:   btrfs_abort_transaction(trans, ret);",
          "1598:   btrfs_abort_transaction(trans, ret);",
          "1604:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1624:  BUG_ON(ret == -EEXIST || ret == -EOVERFLOW);",
          "1625:  if (ret) {",
          "1627:   goto fail;",
          "1628:  }",
          "",
          "[Removed Lines]",
          "1626:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1626:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1633:   current_fs_time(parent_inode->i_sb);",
          "1634:  ret = btrfs_update_inode_fallback(trans, parent_root, parent_inode);",
          "1635:  if (ret) {",
          "1637:   goto fail;",
          "1638:  }",
          "1639:  ret = btrfs_uuid_tree_add(trans, fs_info->uuid_root, new_uuid.b,",
          "1640:       BTRFS_UUID_KEY_SUBVOL, objectid);",
          "1641:  if (ret) {",
          "1643:   goto fail;",
          "1644:  }",
          "1645:  if (!btrfs_is_empty_uuid(new_root_item->received_uuid)) {",
          "",
          "[Removed Lines]",
          "1636:   btrfs_abort_transaction(trans, root, ret);",
          "1642:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1636:   btrfs_abort_transaction(trans, ret);",
          "1642:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1648:        BTRFS_UUID_KEY_RECEIVED_SUBVOL,",
          "1649:        objectid);",
          "1650:   if (ret && ret != -EEXIST) {",
          "1652:    goto fail;",
          "1653:   }",
          "1654:  }",
          "1656:  ret = btrfs_run_delayed_refs(trans, root, (unsigned long)-1);",
          "1657:  if (ret) {",
          "1659:   goto fail;",
          "1660:  }",
          "",
          "[Removed Lines]",
          "1651:    btrfs_abort_transaction(trans, root, ret);",
          "1658:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "1651:    btrfs_abort_transaction(trans, ret);",
          "1658:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1852:  WARN_ON(trans->use_count > 1);",
          "1856:  spin_lock(&root->fs_info->trans_lock);",
          "",
          "[Removed Lines]",
          "1854:  btrfs_abort_transaction(trans, root, err);",
          "",
          "[Added Lines]",
          "1854:  btrfs_abort_transaction(trans, err);",
          "",
          "---------------"
        ],
        "fs/btrfs/tree-log.c||fs/btrfs/tree-log.c": [
          "File: fs/btrfs/tree-log.c -> fs/btrfs/tree-log.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2788:  ret = btrfs_write_marked_extents(log, &log->dirty_log_pages, mark);",
          "2789:  if (ret) {",
          "2790:   blk_finish_plug(&plug);",
          "2792:   btrfs_free_logged_extents(log, log_transid);",
          "2793:   btrfs_set_log_full_commit(root->fs_info, trans);",
          "2794:   mutex_unlock(&root->log_mutex);",
          "",
          "[Removed Lines]",
          "2791:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2791:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2838:   btrfs_set_log_full_commit(root->fs_info, trans);",
          "2840:   if (ret != -ENOSPC) {",
          "2842:    mutex_unlock(&log_root_tree->log_mutex);",
          "2843:    goto out;",
          "2844:   }",
          "",
          "[Removed Lines]",
          "2841:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2841:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2898:  blk_finish_plug(&plug);",
          "2899:  if (ret) {",
          "2900:   btrfs_set_log_full_commit(root->fs_info, trans);",
          "2902:   btrfs_free_logged_extents(log, log_transid);",
          "2903:   mutex_unlock(&log_root_tree->log_mutex);",
          "2904:   goto out_wake_log_root;",
          "",
          "[Removed Lines]",
          "2901:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2901:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2934:  ret = write_ctree_super(trans, root->fs_info->tree_root, 1);",
          "2935:  if (ret) {",
          "2936:   btrfs_set_log_full_commit(root->fs_info, trans);",
          "2938:   goto out_wake_log_root;",
          "2939:  }",
          "",
          "[Removed Lines]",
          "2937:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2937:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2991:  ret = walk_log_tree(trans, log, &wc);",
          "2993:  if (ret)",
          "2996:  while (1) {",
          "2997:   ret = find_first_extent_bit(&log->dirty_log_pages,",
          "",
          "[Removed Lines]",
          "2994:   btrfs_abort_transaction(trans, log, ret);",
          "",
          "[Added Lines]",
          "2994:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3160:   btrfs_set_log_full_commit(root->fs_info, trans);",
          "3161:   ret = 0;",
          "3162:  } else if (ret < 0)",
          "3165:  btrfs_end_log_trans(root);",
          "",
          "[Removed Lines]",
          "3163:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3163:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3193:   btrfs_set_log_full_commit(root->fs_info, trans);",
          "3194:   ret = 0;",
          "3195:  } else if (ret < 0 && ret != -ENOENT)",
          "3197:  btrfs_end_log_trans(root);",
          "3199:  return ret;",
          "",
          "[Removed Lines]",
          "3196:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "3196:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/volumes.c||fs/btrfs/volumes.c": [
          "File: fs/btrfs/volumes.c -> fs/btrfs/volumes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2438:   ret = init_first_rw_device(trans, root, device);",
          "2439:   unlock_chunks(root);",
          "2440:   if (ret) {",
          "2442:    goto error_trans;",
          "2443:   }",
          "2444:  }",
          "2446:  ret = btrfs_add_device(trans, root, device);",
          "2447:  if (ret) {",
          "2449:   goto error_trans;",
          "2450:  }",
          "",
          "[Removed Lines]",
          "2441:    btrfs_abort_transaction(trans, root, ret);",
          "2448:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2441:    btrfs_abort_transaction(trans, ret);",
          "2448:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2455:   ret = btrfs_finish_sprout(trans, root);",
          "2456:   if (ret) {",
          "2458:    goto error_trans;",
          "2459:   }",
          "",
          "[Removed Lines]",
          "2457:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2457:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2840:          &dev_extent_len);",
          "2841:   if (ret) {",
          "2842:    mutex_unlock(&fs_devices->device_list_mutex);",
          "2844:    goto out;",
          "2845:   }",
          "",
          "[Removed Lines]",
          "2843:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2843:    btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2859:    ret = btrfs_update_device(trans, map->stripes[i].dev);",
          "2860:    if (ret) {",
          "2861:     mutex_unlock(&fs_devices->device_list_mutex);",
          "2863:     goto out;",
          "2864:    }",
          "2865:   }",
          "",
          "[Removed Lines]",
          "2862:     btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2862:     btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2869:  ret = btrfs_free_chunk(trans, root, chunk_objectid, chunk_offset);",
          "2870:  if (ret) {",
          "2872:   goto out;",
          "2873:  }",
          "",
          "[Removed Lines]",
          "2871:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "[Added Lines]",
          "2871:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2877:  if (map->type & BTRFS_BLOCK_GROUP_SYSTEM) {",
          "2878:   ret = btrfs_del_sys_chunk(root, chunk_objectid, chunk_offset);",
          "2879:   if (ret) {",
          "2881:    goto out;",
          "2882:   }",
          "2883:  }",
          "2885:  ret = btrfs_remove_block_group(trans, extent_root, chunk_offset, em);",
          "2886:  if (ret) {",
          "2888:   goto out;",
          "2889:  }",
          "",
          "[Removed Lines]",
          "2880:    btrfs_abort_transaction(trans, root, ret);",
          "2887:   btrfs_abort_transaction(trans, extent_root, ret);",
          "",
          "[Added Lines]",
          "2880:    btrfs_abort_transaction(trans, ret);",
          "2887:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4299:           BTRFS_UUID_TREE_OBJECTID);",
          "4300:  if (IS_ERR(uuid_root)) {",
          "4301:   ret = PTR_ERR(uuid_root);",
          "4303:   btrfs_end_transaction(trans, tree_root);",
          "4304:   return ret;",
          "4305:  }",
          "",
          "[Removed Lines]",
          "4302:   btrfs_abort_transaction(trans, tree_root, ret);",
          "",
          "[Added Lines]",
          "4302:   btrfs_abort_transaction(trans, ret);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9703fefe0b137bb4475187b5d82ec5823445616b",
      "candidate_info": {
        "commit_hash": "9703fefe0b137bb4475187b5d82ec5823445616b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/9703fefe0b137bb4475187b5d82ec5823445616b",
        "files": [
          "fs/btrfs/ctree.h",
          "fs/btrfs/file.c",
          "fs/btrfs/inode.c"
        ],
        "message": "Btrfs: fallocate: Work with sectorsized blocks\n\nWhile at it, this commit changes btrfs_truncate_page() to truncate sectorsized\nblocks instead of pages. Hence the function has been renamed to\nbtrfs_truncate_block().\n\nSigned-off-by: Chandan Rajendra <chandan@linux.vnet.ibm.com>\nSigned-off-by: David Sterba <dsterba@suse.com>",
        "before_after_code_files": [
          "fs/btrfs/ctree.h||fs/btrfs/ctree.h",
          "fs/btrfs/file.c||fs/btrfs/file.c",
          "fs/btrfs/inode.c||fs/btrfs/inode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/btrfs/inode.c||fs/btrfs/inode.c"
          ],
          "candidate": [
            "fs/btrfs/inode.c||fs/btrfs/inode.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/btrfs/ctree.h||fs/btrfs/ctree.h": [
          "File: fs/btrfs/ctree.h -> fs/btrfs/ctree.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4030:    struct btrfs_root *root,",
          "4031:    struct inode *dir, u64 objectid,",
          "4032:    const char *name, int name_len);",
          "4034:    int front);",
          "4035: int btrfs_truncate_inode_items(struct btrfs_trans_handle *trans,",
          "4036:           struct btrfs_root *root,",
          "",
          "[Removed Lines]",
          "4033: int btrfs_truncate_page(struct inode *inode, loff_t from, loff_t len,",
          "",
          "[Added Lines]",
          "4033: int btrfs_truncate_block(struct inode *inode, loff_t from, loff_t len,",
          "",
          "---------------"
        ],
        "fs/btrfs/file.c||fs/btrfs/file.c": [
          "File: fs/btrfs/file.c -> fs/btrfs/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2310:  int ret = 0;",
          "2311:  int err = 0;",
          "2312:  unsigned int rsv_count;",
          "2314:  bool no_holes = btrfs_fs_incompat(root->fs_info, NO_HOLES);",
          "2315:  u64 ino_size;",
          "2317:  bool updated_inode = false;",
          "2319:  ret = btrfs_wait_ordered_range(inode, offset, len);",
          "",
          "[Removed Lines]",
          "2313:  bool same_page;",
          "2316:  bool truncated_page = false;",
          "",
          "[Added Lines]",
          "2313:  bool same_block;",
          "2316:  bool truncated_block = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2321:   return ret;",
          "2323:  mutex_lock(&inode->i_mutex);",
          "2325:  ret = find_first_non_hole(inode, &offset, &len);",
          "2326:  if (ret < 0)",
          "2327:   goto out_only_mutex;",
          "",
          "[Removed Lines]",
          "2324:  ino_size = round_up(inode->i_size, PAGE_CACHE_SIZE);",
          "",
          "[Added Lines]",
          "2324:  ino_size = round_up(inode->i_size, root->sectorsize);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2334:  lockstart = round_up(offset, BTRFS_I(inode)->root->sectorsize);",
          "2335:  lockend = round_down(offset + len,",
          "2336:         BTRFS_I(inode)->root->sectorsize) - 1;",
          "2349:   if (offset < ino_size) {",
          "2352:   } else {",
          "2353:    ret = 0;",
          "2354:   }",
          "2355:   goto out_only_mutex;",
          "2356:  }",
          "2359:  if (offset < ino_size) {",
          "2362:   if (ret) {",
          "2363:    mutex_unlock(&inode->i_mutex);",
          "2364:    return ret;",
          "",
          "[Removed Lines]",
          "2337:  same_page = ((offset >> PAGE_CACHE_SHIFT) ==",
          "2338:       ((offset + len - 1) >> PAGE_CACHE_SHIFT));",
          "2348:  if (same_page && len < PAGE_CACHE_SIZE) {",
          "2350:    truncated_page = true;",
          "2351:    ret = btrfs_truncate_page(inode, offset, len, 0);",
          "2360:   truncated_page = true;",
          "2361:   ret = btrfs_truncate_page(inode, offset, 0, 0);",
          "",
          "[Added Lines]",
          "2337:  same_block = (BTRFS_BYTES_TO_BLKS(root->fs_info, offset))",
          "2338:   == (BTRFS_BYTES_TO_BLKS(root->fs_info, offset + len - 1));",
          "2347:  if (same_block && len < root->sectorsize) {",
          "2349:    truncated_block = true;",
          "2350:    ret = btrfs_truncate_block(inode, offset, len, 0);",
          "2359:   truncated_block = true;",
          "2360:   ret = btrfs_truncate_block(inode, offset, 0, 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2393:   if (!ret) {",
          "2395:    if (tail_start + tail_len < ino_size) {",
          "2399:     if (ret)",
          "2400:      goto out_only_mutex;",
          "2401:    }",
          "",
          "[Removed Lines]",
          "2396:     truncated_page = true;",
          "2397:     ret = btrfs_truncate_page(inode,",
          "2398:       tail_start + tail_len, 0, 1);",
          "",
          "[Added Lines]",
          "2395:     truncated_block = true;",
          "2396:     ret = btrfs_truncate_block(inode,",
          "2397:        tail_start + tail_len,",
          "2398:        0, 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2575:  unlock_extent_cached(&BTRFS_I(inode)->io_tree, lockstart, lockend,",
          "2576:         &cached_state, GFP_NOFS);",
          "2577: out_only_mutex:",
          "",
          "[Removed Lines]",
          "2578:  if (!updated_inode && truncated_page && !ret && !err) {",
          "",
          "[Added Lines]",
          "2578:  if (!updated_inode && truncated_block && !ret && !err) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2695:  } else if (offset + len > inode->i_size) {",
          "2702:   if (ret)",
          "2703:    goto out;",
          "2704:  }",
          "",
          "[Removed Lines]",
          "2701:   ret = btrfs_truncate_page(inode, inode->i_size, 0, 0);",
          "",
          "[Added Lines]",
          "2701:   ret = btrfs_truncate_block(inode, inode->i_size, 0, 0);",
          "",
          "---------------"
        ],
        "fs/btrfs/inode.c||fs/btrfs/inode.c": [
          "File: fs/btrfs/inode.c -> fs/btrfs/inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4249:   btrfs_release_path(path);",
          "4251:  }",
          "4253:  btrfs_set_file_extent_ram_bytes(leaf, fi, size);",
          "",
          "[Removed Lines]",
          "4250:   return btrfs_truncate_page(inode, offset, page_end - offset, 0);",
          "",
          "[Added Lines]",
          "4250:   return btrfs_truncate_block(inode, offset, page_end - offset,",
          "4251:      0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4600: }",
          "4614:    int front)",
          "4615: {",
          "4616:  struct address_space *mapping = inode->i_mapping;",
          "",
          "[Removed Lines]",
          "4613: int btrfs_truncate_page(struct inode *inode, loff_t from, loff_t len,",
          "",
          "[Added Lines]",
          "4614: int btrfs_truncate_block(struct inode *inode, loff_t from, loff_t len,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4621:  char *kaddr;",
          "4622:  u32 blocksize = root->sectorsize;",
          "4623:  pgoff_t index = from >> PAGE_CACHE_SHIFT;",
          "4625:  struct page *page;",
          "4626:  gfp_t mask = btrfs_alloc_write_mask(mapping);",
          "4627:  int ret = 0;",
          "4631:  if ((offset & (blocksize - 1)) == 0 &&",
          "4632:      (!len || ((len & (blocksize - 1)) == 0)))",
          "4633:   goto out;",
          "4634:  ret = btrfs_delalloc_reserve_space(inode,",
          "4636:  if (ret)",
          "4637:   goto out;",
          "",
          "[Removed Lines]",
          "4624:  unsigned offset = from & (PAGE_CACHE_SIZE-1);",
          "4628:  u64 page_start;",
          "4629:  u64 page_end;",
          "4635:    round_down(from, PAGE_CACHE_SIZE), PAGE_CACHE_SIZE);",
          "",
          "[Added Lines]",
          "4625:  unsigned offset = from & (blocksize - 1);",
          "4629:  u64 block_start;",
          "4630:  u64 block_end;",
          "4637:    round_down(from, blocksize), blocksize);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4640:  page = find_or_create_page(mapping, index, mask);",
          "4641:  if (!page) {",
          "4642:   btrfs_delalloc_release_space(inode,",
          "4645:   ret = -ENOMEM;",
          "4646:   goto out;",
          "4647:  }",
          "4652:  if (!PageUptodate(page)) {",
          "4653:   ret = btrfs_readpage(NULL, page);",
          "",
          "[Removed Lines]",
          "4643:     round_down(from, PAGE_CACHE_SIZE),",
          "4644:     PAGE_CACHE_SIZE);",
          "4649:  page_start = page_offset(page);",
          "4650:  page_end = page_start + PAGE_CACHE_SIZE - 1;",
          "",
          "[Added Lines]",
          "4645:     round_down(from, blocksize),",
          "4646:     blocksize);",
          "4651:  block_start = round_down(from, blocksize);",
          "4652:  block_end = block_start + blocksize - 1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4664:  }",
          "4665:  wait_on_page_writeback(page);",
          "4668:  set_page_extent_mapped(page);",
          "4671:  if (ordered) {",
          "4673:          &cached_state, GFP_NOFS);",
          "4674:   unlock_page(page);",
          "4675:   page_cache_release(page);",
          "",
          "[Removed Lines]",
          "4667:  lock_extent_bits(io_tree, page_start, page_end, &cached_state);",
          "4670:  ordered = btrfs_lookup_ordered_extent(inode, page_start);",
          "4672:   unlock_extent_cached(io_tree, page_start, page_end,",
          "",
          "[Added Lines]",
          "4669:  lock_extent_bits(io_tree, block_start, block_end, &cached_state);",
          "4672:  ordered = btrfs_lookup_ordered_extent(inode, block_start);",
          "4674:   unlock_extent_cached(io_tree, block_start, block_end,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4678:   goto again;",
          "4679:  }",
          "4682:      EXTENT_DIRTY | EXTENT_DELALLOC |",
          "4683:      EXTENT_DO_ACCOUNTING | EXTENT_DEFRAG,",
          "4684:      0, 0, &cached_state, GFP_NOFS);",
          "4687:      &cached_state);",
          "4688:  if (ret) {",
          "4690:          &cached_state, GFP_NOFS);",
          "4691:   goto out_unlock;",
          "4692:  }",
          "4695:   if (!len)",
          "4697:   kaddr = kmap(page);",
          "4698:   if (front)",
          "4700:   else",
          "4702:   flush_dcache_page(page);",
          "4703:   kunmap(page);",
          "4704:  }",
          "4705:  ClearPageChecked(page);",
          "4706:  set_page_dirty(page);",
          "4708:         GFP_NOFS);",
          "4710: out_unlock:",
          "4711:  if (ret)",
          "4714:  unlock_page(page);",
          "4715:  page_cache_release(page);",
          "4716: out:",
          "",
          "[Removed Lines]",
          "4681:  clear_extent_bit(&BTRFS_I(inode)->io_tree, page_start, page_end,",
          "4686:  ret = btrfs_set_extent_delalloc(inode, page_start, page_end,",
          "4689:   unlock_extent_cached(io_tree, page_start, page_end,",
          "4694:  if (offset != PAGE_CACHE_SIZE) {",
          "4696:    len = PAGE_CACHE_SIZE - offset;",
          "4699:    memset(kaddr, 0, offset);",
          "4701:    memset(kaddr + offset, 0, len);",
          "4707:  unlock_extent_cached(io_tree, page_start, page_end, &cached_state,",
          "4712:   btrfs_delalloc_release_space(inode, page_start,",
          "4713:           PAGE_CACHE_SIZE);",
          "",
          "[Added Lines]",
          "4683:  clear_extent_bit(&BTRFS_I(inode)->io_tree, block_start, block_end,",
          "4688:  ret = btrfs_set_extent_delalloc(inode, block_start, block_end,",
          "4691:   unlock_extent_cached(io_tree, block_start, block_end,",
          "4696:  if (offset != blocksize) {",
          "4698:    len = blocksize - offset;",
          "4701:    memset(kaddr + (block_start - page_offset(page)),",
          "4702:     0, offset);",
          "4704:    memset(kaddr + (block_start - page_offset(page)) +  offset,",
          "4705:     0, len);",
          "4711:  unlock_extent_cached(io_tree, block_start, block_end, &cached_state,",
          "4716:   btrfs_delalloc_release_space(inode, block_start,",
          "4717:           blocksize);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4781:  int err = 0;",
          "4789:  if (err)",
          "4790:   return err;",
          "",
          "[Removed Lines]",
          "4788:  err = btrfs_truncate_page(inode, oldsize, 0, 0);",
          "",
          "[Added Lines]",
          "4792:  err = btrfs_truncate_block(inode, oldsize, 0, 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}