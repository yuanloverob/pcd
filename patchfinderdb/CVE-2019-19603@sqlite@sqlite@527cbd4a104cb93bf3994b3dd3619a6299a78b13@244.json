{
  "cve_id": "CVE-2019-19603",
  "cve_desc": "SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.",
  "repo": "sqlite/sqlite",
  "patch_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
  "patch_info": {
    "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab.test"
    ],
    "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab.test||test/altertab.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:       }",
      "857:     }",
      "858:   }else{",
      "861:     ){",
      "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
      "863:                       zName);",
      "864:       return SQLITE_ERROR;",
      "865:     }",
      "866:   }",
      "867:   return SQLITE_OK;",
      "868: }",
      "",
      "[Removed Lines]",
      "859:     if( pParse->nested==0",
      "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
      "",
      "[Added Lines]",
      "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
      "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
      "",
      "[Added Lines]",
      "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
      "2148:   return pMod->pModule->xShadowName(zTail+1);",
      "2149: }",
      "",
      "[Removed Lines]",
      "2150: #else",
      "2151: # define isShadowTableName(x,y) 0",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2190:   p = pParse->pNewTable;",
      "2191:   if( p==0 ) return;",
      "2194:     p->tabFlags |= TF_Shadow;",
      "2195:   }",
      "",
      "[Removed Lines]",
      "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
      "",
      "[Added Lines]",
      "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
      "4549: #endif",
      "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
      "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
      "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
      "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
      "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
      "4553: #else",
      "4554: # define sqlite3ShadowTableName(A,B) 0",
      "4555: #endif",
      "",
      "---------------"
    ],
    "test/altertab.test||test/altertab.test": [
      "File: test/altertab.test -> test/altertab.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "547:   } {1 {table y1_segments may not be modified}}",
      "549:   do_catchsql_test 16.20 {",
      "554:     DROP TABLE y1_segments;",
      "555:   } {1 {table y1_segments may not be dropped}}",
      "557:   do_execsql_test 16.30 {",
      "558:     ALTER TABLE y1 RENAME TO z1;",
      "559:   }",
      "",
      "[Removed Lines]",
      "550:     ALTER TABLE y1_segments RENAME TO abc;",
      "551:   } {1 {table y1_segments may not be altered}}",
      "553:   do_catchsql_test 16.21 {",
      "",
      "[Added Lines]",
      "553:   do_catchsql_test 16.20 {",
      "554:     ALTER TABLE y1_segments RENAME TO abc;",
      "555:   } {1 {table y1_segments may not be altered}}",
      "556:   sqlite3_db_config db DEFENSIVE 0",
      "557:   do_catchsql_test 16.22 {",
      "558:     ALTER TABLE y1_segments RENAME TO abc;",
      "559:   } {0 {}}",
      "560:   sqlite3_db_config db DEFENSIVE 1",
      "561:   do_catchsql_test 16.23 {",
      "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
      "563:   } {1 {object name reserved for internal use: y1_segments}}",
      "564:   do_catchsql_test 16.24 {",
      "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
      "566:   } {1 {object name reserved for internal use: y1_segments}}",
      "567:   sqlite3_db_config db DEFENSIVE 0",
      "568:   do_catchsql_test 16.25 {",
      "569:     ALTER TABLE abc RENAME TO y1_segments;",
      "570:   } {0 {}}",
      "571:   sqlite3_db_config db DEFENSIVE 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f6febee0e23977215e824caa261d328036b3b3f0",
      "candidate_info": {
        "commit_hash": "f6febee0e23977215e824caa261d328036b3b3f0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f6febee0e23977215e824caa261d328036b3b3f0",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/permutations.test",
          "test/snapshot_fault.test"
        ],
        "message": "Update the coverage-wal permutation to cover branches enabled by SQLITE_ENABLE_SNAPSHOT.\n\nFossilOrigin-Name: 6821c61f1d71be2be7f867e59fd94582a1eaf45a4d1fb88be995807a77cc22ea",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/permutations.test||test/permutations.test",
          "test/snapshot_fault.test||test/snapshot_fault.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 14a64df36efe0dc36795311d58385f9c65dc465b214059e07c2ee6b95ea99c87",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/permutations.test||test/permutations.test": [
          "File: test/permutations.test -> test/permutations.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "438:   walprotocol2.test walprotocol.test walro2.test walrofault.test",
          "439:   walro.test walshared.test walslow.test walvfs.test",
          "440:   walfault2.test",
          "442:   nockpt.test",
          "443: }",
          "445: test_suite \"coverage-pager\" -description {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "443:   snapshot2.test snapshot3.test snapshot4.test",
          "444:   snapshot_fault.test snapshot.test snapshot_up.test",
          "",
          "---------------"
        ],
        "test/snapshot_fault.test||test/snapshot_fault.test": [
          "File: test/snapshot_fault.test -> test/snapshot_fault.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:   faultsim_test_result {0 {}} {1 SQLITE_IOERR}",
          "222: }",
          "226: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224: #-------------------------------------------------------------------------",
          "225: # Test the handling of faults that occur within sqlite3_snapshot_get().",
          "226: #",
          "227: reset_db",
          "228: do_execsql_test 5.0 {",
          "229:   PRAGMA page_size = 512;",
          "230:   PRAGMA journal_mode = wal;",
          "231:   PRAGMA wal_autocheckpoint = 0;",
          "232:   CREATE TABLE t1(zzz);",
          "233:   INSERT INTO t1 VALUES(randomblob( 5000 ));",
          "234:   PRAGMA user_version = 211;",
          "235: } {wal 0}",
          "236: faultsim_save_and_close",
          "238: do_faultsim_test 5 -prep {",
          "239:   faultsim_restore_and_reopen",
          "240:   execsql { SELECT count(*) FROM sqlite_master }",
          "241:   execsql BEGIN",
          "242: } -body {",
          "243:   sqlite3_snapshot_get_blob db main",
          "244:   set {} {}",
          "245: } -test {",
          "246:   execsql END",
          "247:   faultsim_test_result {0 {}} {1 SQLITE_IOERR} {1 SQLITE_NOMEM}",
          "248: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e20945729559e42520d786652c09b00cc9e414f2",
      "candidate_info": {
        "commit_hash": "e20945729559e42520d786652c09b00cc9e414f2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e20945729559e42520d786652c09b00cc9e414f2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "src/sqliteInt.h",
          "src/window.c"
        ],
        "message": "Consolidate the removal of Window objects from the Select.pWin list into a single subroutine.\n\nFossilOrigin-Name: e46b2afc99329c43de08d4a2e6ade4d2239d7409c5d5626bf272a3e0dd24d1b4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/sqliteInt.h||src/sqliteInt.h"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/sqliteInt.h||src/sqliteInt.h"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 05080344dceafcfb670fbf01f7d69a1d713a54b6845f968a9cfe941fb53b13af",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1305: static int resolveRemoveWindowsCb(Walker *pWalker, Expr *pExpr){",
          "1306:   if( ExprHasProperty(pExpr, EP_WinFunc) ){",
          "1307:     Window *pWin = pExpr->y.pWin;",
          "1313:   }",
          "1314:   return WRC_Continue;",
          "1315: }",
          "",
          "[Removed Lines]",
          "1308:     if( pWin->ppThis ){",
          "1310:       if( pWin->pNextWin ) pWin->pNextWin->ppThis = pWin->ppThis;",
          "1311:       pWin->ppThis = 0;",
          "1312:     }",
          "",
          "[Added Lines]",
          "1308:     sqlite3WindowUnlinkFromSelect(pWin);",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3615: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "3616: void sqlite3WindowDelete(sqlite3*, Window*);",
          "3617: void sqlite3WindowListDelete(sqlite3 *db, Window *p);",
          "3618: Window *sqlite3WindowAlloc(Parse*, int, int, Expr*, int , Expr*, u8);",
          "3619: void sqlite3WindowAttach(Parse*, Expr*, Window*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3617: void sqlite3WindowUnlinkFromSelect(Window*);",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1017:   return rc;",
          "1018: }",
          "1023: void sqlite3WindowDelete(sqlite3 *db, Window *p){",
          "1024:   if( p ){",
          "1029:     sqlite3ExprDelete(db, p->pFilter);",
          "1030:     sqlite3ExprListDelete(db, p->pPartition);",
          "1031:     sqlite3ExprListDelete(db, p->pOrderBy);",
          "",
          "[Removed Lines]",
          "1025:     if( p->ppThis ){",
          "1027:       if( p->pNextWin ) p->pNextWin->ppThis = p->ppThis;",
          "1028:     }",
          "",
          "[Added Lines]",
          "1024: void sqlite3WindowUnlinkFromSelect(Window *p){",
          "1025:   if( p->ppThis ){",
          "1027:     if( p->pNextWin ) p->pNextWin->ppThis = p->ppThis;",
          "1028:     p->ppThis = 0;",
          "1029:   }",
          "1030: }",
          "1037:     sqlite3WindowUnlinkFromSelect(p);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "495ed62e850f449e566a06ff827db1447cf03fcb",
      "candidate_info": {
        "commit_hash": "495ed62e850f449e566a06ff827db1447cf03fcb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/495ed62e850f449e566a06ff827db1447cf03fcb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Frame range comparisons can never be NULL because the values will have been checked for NULL prior to the test.\n\nFossilOrigin-Name: fa37cf9a6aa3e4325674cb6af68f617d25e349c3f694d0117a19a36fc42daf15",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a69bb4f257500e40ef4056d5628ef25266def5bcef07eebdb471a79fffe80237",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2543:   if( pMWin->eStart==pMWin->eEnd && regStart ){",
          "2544:     int op = ((pMWin->eStart==TK_FOLLOWING) ? OP_Ge : OP_Le);",
          "2545:     int addrGe = sqlite3VdbeAddOp3(v, op, regStart, 0, regEnd);",
          "2549:     windowAggFinal(&s, 0);",
          "2550:     sqlite3VdbeAddOp2(v, OP_Rewind, s.current.csr, 1);",
          "2551:     VdbeCoverageNeverTaken(v);",
          "",
          "[Removed Lines]",
          "2546:     VdbeCoverage(v);",
          "2547:     VdbeCoverageIf(v, op==OP_Ge);",
          "2548:     VdbeCoverageIf(v, op==OP_Le);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3fd7eaf3f291044b6a5154f43e7281c9adb592a9",
      "candidate_info": {
        "commit_hash": "3fd7eaf3f291044b6a5154f43e7281c9adb592a9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3fd7eaf3f291044b6a5154f43e7281c9adb592a9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pager.c"
        ],
        "message": "Avoid using non-ANSI return statement in void function sqlite3WalSnapshotUnlock().\n\nFossilOrigin-Name: 4a4952d38e8177ed8d59aaa575410bebf76787dd6d801fdbdb809d4f8c670da0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pager.c||src/pager.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7b41222428dcebaae2e9a0e8192e091b6fdee5b1163a5fa14ca1cd4f06354983",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7698: void sqlite3PagerSnapshotUnlock(Pager *pPager){",
          "7699:   assert( pPager->pWal );",
          "7701: }",
          "",
          "[Removed Lines]",
          "7700:   return sqlite3WalSnapshotUnlock(pPager->pWal);",
          "",
          "[Added Lines]",
          "7700:   sqlite3WalSnapshotUnlock(pPager->pWal);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7dc3547eeb691d5397e9dc55206daab0927937d8",
      "candidate_info": {
        "commit_hash": "7dc3547eeb691d5397e9dc55206daab0927937d8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7dc3547eeb691d5397e9dc55206daab0927937d8",
        "files": [
          "Makefile.linux-gcc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Updates to the default settings in Makefile.linux-gcc.\n\nFossilOrigin-Name: 3044cf6917ea8324175fc91657e9a5978af9748f72e1914bc361753f0b2d897d",
        "before_after_code_files": [
          "Makefile.linux-gcc||Makefile.linux-gcc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.linux-gcc||Makefile.linux-gcc": [
          "File: Makefile.linux-gcc -> Makefile.linux-gcc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #### C Compiler and options for use in building executables that",
          "20: #    will run on the platform that is doing the build.",
          "21: #",
          "23: #BCC = /opt/ancic/bin/c89 -0",
          "25: #### If the target operating system supports the \"usleep()\" system",
          "",
          "[Removed Lines]",
          "22: BCC = gcc -g -O2",
          "",
          "[Added Lines]",
          "22: BCC = gcc -g -O0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: #### Specify any extra linker options needed to make the library",
          "39: #    thread safe",
          "40: #",
          "44: #### Specify any extra libraries needed to access required functions.",
          "45: #",
          "",
          "[Removed Lines]",
          "41: #THREADLIB = -lpthread",
          "42: THREADLIB =",
          "",
          "[Added Lines]",
          "41: THREADLIB = -lpthread -lm -ldl",
          "42: #THREADLIB =",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: #    You can make the library go almost twice as fast if you compile",
          "55: #    with -DNDEBUG=1",
          "56: #",
          "63: #### The suffix to add to executable files.  \".exe\" for windows.",
          "64: #    Nothing for unix.",
          "",
          "[Removed Lines]",
          "57: #OPTS = -DSQLITE_DEBUG=2",
          "58: #OPTS = -DSQLITE_DEBUG=1",
          "59: #OPTS =",
          "60: OPTS = -DNDEBUG=1",
          "61: OPTS += -DHAVE_FDATASYNC=1",
          "",
          "[Added Lines]",
          "57: OPTS += -DSQLITE_DEBUG=1",
          "58: OPTS += -DSQLITE_ENABLE_WHERETRACE",
          "59: OPTS += -DSQLITE_ENABLE_SELECTTRACE",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70: #    will run on the target platform.  This is usually the same",
          "71: #    as BCC, unless you are cross-compiling.",
          "72: #",
          "74: #TCC = gcc -g -O0 -Wall",
          "75: #TCC = gcc -g -O0 -Wall -fprofile-arcs -ftest-coverage",
          "76: #TCC = /opt/mingw/bin/i386-mingw32-gcc -O6",
          "",
          "[Removed Lines]",
          "73: TCC = gcc -O6",
          "",
          "[Added Lines]",
          "71: TCC = gcc -O0",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "92: #### Extra compiler options needed for programs that use the TCL library.",
          "93: #",
          "100: #### Linker options needed to link against the TCL library.",
          "101: #",
          "102: #LIBTCL = -ltcl -lm -ldl",
          "107: #### Additional objects for SQLite library when TCL support is enabled.",
          "108: #TCLOBJ =",
          "",
          "[Removed Lines]",
          "94: #TCL_FLAGS =",
          "95: #TCL_FLAGS = -DSTATIC_BUILD=1",
          "96: TCL_FLAGS = -I/home/drh/tcltk/8.5linux",
          "97: #TCL_FLAGS = -I/home/drh/tcltk/8.5win -DSTATIC_BUILD=1",
          "98: #TCL_FLAGS = -I/home/drh/tcltk/8.3hpux",
          "103: LIBTCL = /home/drh/tcltk/8.5linux/libtcl8.5g.a -lm -ldl",
          "104: #LIBTCL = /home/drh/tcltk/8.5win/libtcl85s.a -lmsvcrt",
          "105: #LIBTCL = /home/drh/tcltk/8.3hpux/libtcl8.3.a -ldld -lm -lc",
          "",
          "[Added Lines]",
          "92: TCL_FLAGS = -I/home/drh/tcl/include/tcl8.6",
          "97: LIBTCL = /home/drh/tcl/lib/libtcl8.6.a -lm -lpthread -ldl -lz",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5351e920f489562f959ab8a376ff720f845ea165e0cdc7c3a271aac53c2aa64a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}