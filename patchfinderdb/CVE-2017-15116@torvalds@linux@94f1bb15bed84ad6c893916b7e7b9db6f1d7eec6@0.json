{
  "cve_id": "CVE-2017-15116",
  "cve_desc": "The rngapi_reset function in crypto/rng.c in the Linux kernel before 4.2 allows attackers to cause a denial of service (NULL pointer dereference).",
  "repo": "torvalds/linux",
  "patch_hash": "94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6",
  "patch_info": {
    "commit_hash": "94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6",
    "files": [
      "crypto/rng.c",
      "include/crypto/internal/rng.h",
      "include/crypto/rng.h",
      "include/linux/crypto.h"
    ],
    "message": "crypto: rng - Remove old low-level rng interface\n\nNow that all rng implementations have switched over to the new\ninterface, we can remove the old low-level interface.\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "before_after_code_files": [
      "crypto/rng.c||crypto/rng.c",
      "include/crypto/internal/rng.h||include/crypto/internal/rng.h",
      "include/crypto/rng.h||include/crypto/rng.h",
      "include/linux/crypto.h||include/linux/crypto.h"
    ]
  },
  "patch_diff": {
    "crypto/rng.c||crypto/rng.c": [
      "File: crypto/rng.c -> crypto/rng.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "36:  return container_of(tfm, struct crypto_rng, base);",
      "37: }",
      "72: int crypto_rng_reset(struct crypto_rng *tfm, const u8 *seed, unsigned int slen)",
      "73: {",
      "74:  u8 *buf = NULL;",
      "",
      "[Removed Lines]",
      "39: static inline struct old_rng_alg *crypto_old_rng_alg(struct crypto_rng *tfm)",
      "40: {",
      "41:  return &crypto_rng_tfm(tfm)->__crt_alg->cra_rng;",
      "42: }",
      "44: static int generate(struct crypto_rng *tfm, const u8 *src, unsigned int slen,",
      "45:       u8 *dst, unsigned int dlen)",
      "46: {",
      "47:  return crypto_old_rng_alg(tfm)->rng_make_random(tfm, dst, dlen);",
      "48: }",
      "50: static int rngapi_reset(struct crypto_rng *tfm, const u8 *seed,",
      "51:    unsigned int slen)",
      "52: {",
      "53:  u8 *buf = NULL;",
      "54:  u8 *src = (u8 *)seed;",
      "55:  int err;",
      "57:  if (slen) {",
      "58:   buf = kmalloc(slen, GFP_KERNEL);",
      "59:   if (!buf)",
      "60:    return -ENOMEM;",
      "62:   memcpy(buf, seed, slen);",
      "63:   src = buf;",
      "64:  }",
      "66:  err = crypto_old_rng_alg(tfm)->rng_reset(tfm, src, slen);",
      "68:  kzfree(buf);",
      "69:  return err;",
      "70: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "83:   seed = buf;",
      "84:  }",
      "88:  kfree(buf);",
      "89:  return err;",
      "",
      "[Removed Lines]",
      "86:  err = tfm->seed(tfm, seed, slen);",
      "",
      "[Added Lines]",
      "54:  err = crypto_rng_alg(tfm)->seed(tfm, seed, slen);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "93: static int crypto_rng_init_tfm(struct crypto_tfm *tfm)",
      "94: {",
      "110:  return 0;",
      "111: }",
      "",
      "[Removed Lines]",
      "95:  struct crypto_rng *rng = __crypto_rng_cast(tfm);",
      "96:  struct rng_alg *alg = crypto_rng_alg(rng);",
      "97:  struct old_rng_alg *oalg = crypto_old_rng_alg(rng);",
      "99:  if (oalg->rng_make_random) {",
      "100:   rng->generate = generate;",
      "101:   rng->seed = rngapi_reset;",
      "102:   rng->seedsize = oalg->seedsize;",
      "103:   return 0;",
      "104:  }",
      "106:  rng->generate = alg->generate;",
      "107:  rng->seed = alg->seed;",
      "108:  rng->seedsize = alg->seedsize;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "114: {",
      "115:  struct rng_alg *ralg = container_of(alg, struct rng_alg, base);",
      "119: }",
      "121: #ifdef CONFIG_NET",
      "",
      "[Removed Lines]",
      "117:  return alg->cra_rng.rng_make_random ?",
      "118:         alg->cra_rng.seedsize : ralg->seedsize;",
      "",
      "[Added Lines]",
      "70:  return ralg->seedsize;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "150:  seq_printf(m, \"seedsize     : %u\\n\", seedsize(alg));",
      "151: }",
      "154:  .extsize = crypto_alg_extsize,",
      "155:  .init_tfm = crypto_rng_init_tfm,",
      "156: #ifdef CONFIG_PROC_FS",
      "",
      "[Removed Lines]",
      "153: const struct crypto_type crypto_rng_type = {",
      "",
      "[Added Lines]",
      "105: static const struct crypto_type crypto_rng_type = {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "162:  .type = CRYPTO_ALG_TYPE_RNG,",
      "163:  .tfmsize = offsetof(struct crypto_rng, base),",
      "164: };",
      "167: struct crypto_rng *crypto_alloc_rng(const char *alg_name, u32 type, u32 mask)",
      "168: {",
      "",
      "[Removed Lines]",
      "165: EXPORT_SYMBOL_GPL(crypto_rng_type);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "include/crypto/internal/rng.h||include/crypto/internal/rng.h": [
      "File: include/crypto/internal/rng.h -> include/crypto/internal/rng.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "16: #include <crypto/algapi.h>",
      "17: #include <crypto/rng.h>",
      "21: int crypto_register_rng(struct rng_alg *alg);",
      "22: void crypto_unregister_rng(struct rng_alg *alg);",
      "23: int crypto_register_rngs(struct rng_alg *algs, int count);",
      "",
      "[Removed Lines]",
      "19: extern const struct crypto_type crypto_rng_type;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "include/crypto/rng.h||include/crypto/rng.h": [
      "File: include/crypto/rng.h -> include/crypto/rng.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "56: };",
      "58: struct crypto_rng {",
      "64:  struct crypto_tfm base;",
      "65: };",
      "",
      "[Removed Lines]",
      "59:  int (*generate)(struct crypto_rng *tfm,",
      "60:    const u8 *src, unsigned int slen,",
      "61:    u8 *dst, unsigned int dlen);",
      "62:  int (*seed)(struct crypto_rng *tfm, const u8 *seed, unsigned int slen);",
      "63:  unsigned int seedsize;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "144:           const u8 *src, unsigned int slen,",
      "145:           u8 *dst, unsigned int dlen)",
      "146: {",
      "148: }",
      "",
      "[Removed Lines]",
      "147:  return tfm->generate(tfm, src, slen, dst, dlen);",
      "",
      "[Added Lines]",
      "143:  return crypto_rng_alg(tfm)->generate(tfm, src, slen, dst, dlen);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "199: static inline int crypto_rng_seedsize(struct crypto_rng *tfm)",
      "200: {",
      "202: }",
      "204: #endif",
      "",
      "[Removed Lines]",
      "201:  return tfm->seedsize;",
      "",
      "[Added Lines]",
      "197:  return crypto_rng_alg(tfm)->seedsize;",
      "",
      "---------------"
    ],
    "include/linux/crypto.h||include/linux/crypto.h": [
      "File: include/linux/crypto.h -> include/linux/crypto.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "138: struct crypto_aead;",
      "139: struct crypto_blkcipher;",
      "140: struct crypto_hash;",
      "142: struct crypto_tfm;",
      "143: struct crypto_type;",
      "144: struct aead_givcrypt_request;",
      "",
      "[Removed Lines]",
      "141: struct crypto_rng;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "426:          unsigned int slen, u8 *dst, unsigned int *dlen);",
      "427: };",
      "457: #define cra_ablkcipher cra_u.ablkcipher",
      "458: #define cra_aead cra_u.aead",
      "459: #define cra_blkcipher cra_u.blkcipher",
      "460: #define cra_cipher cra_u.cipher",
      "461: #define cra_compress cra_u.compress",
      "",
      "[Removed Lines]",
      "448: struct old_rng_alg {",
      "449:  int (*rng_make_random)(struct crypto_rng *tfm, u8 *rdata,",
      "450:           unsigned int dlen);",
      "451:  int (*rng_reset)(struct crypto_rng *tfm, u8 *seed, unsigned int slen);",
      "453:  unsigned int seedsize;",
      "454: };",
      "462: #define cra_rng  cra_u.rng",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "559:   struct blkcipher_alg blkcipher;",
      "560:   struct cipher_alg cipher;",
      "561:   struct compress_alg compress;",
      "563:  } cra_u;",
      "565:  int (*cra_init)(struct crypto_tfm *tfm);",
      "",
      "[Removed Lines]",
      "562:   struct old_rng_alg rng;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ff030b099a21a4753af575b4304249e88400e506",
      "candidate_info": {
        "commit_hash": "ff030b099a21a4753af575b4304249e88400e506",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/ff030b099a21a4753af575b4304249e88400e506",
        "files": [
          "crypto/rng.c",
          "include/crypto/rng.h"
        ],
        "message": "crypto: rng - Introduce crypto_rng_generate\n\nThis patch adds the new top-level function crypto_rng_generate\nwhich generates random numbers with additional input.  It also\nextends the mid-level rng_gen_random function to take additional\ndata as input.\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "crypto/rng.c||crypto/rng.c",
          "include/crypto/rng.h||include/crypto/rng.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/rng.c||crypto/rng.c",
            "include/crypto/rng.h||include/crypto/rng.h"
          ],
          "candidate": [
            "crypto/rng.c||crypto/rng.c",
            "include/crypto/rng.h||include/crypto/rng.h"
          ]
        }
      },
      "candidate_diff": {
        "crypto/rng.c||crypto/rng.c": [
          "File: crypto/rng.c -> crypto/rng.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:  return container_of(tfm, struct crypto_rng, base);",
          "37: }",
          "39: static int rngapi_reset(struct crypto_rng *tfm, u8 *seed, unsigned int slen)",
          "40: {",
          "41:  u8 *buf = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: static int generate(struct crypto_rng *tfm, const u8 *src, unsigned int slen,",
          "40:       u8 *dst, unsigned int dlen)",
          "41: {",
          "42:  return crypto_rng_alg(tfm)->rng_make_random(tfm, dst, dlen);",
          "43: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: static int crypto_rng_init_tfm(struct crypto_tfm *tfm)",
          "60: {",
          "61:  struct crypto_rng *rng = __crypto_rng_cast(tfm);",
          "65:  rng->seed = rngapi_reset;",
          "67:  return 0;",
          "",
          "[Removed Lines]",
          "62:  struct rng_alg *alg = &tfm->__crt_alg->cra_rng;",
          "64:  rng->generate = alg->rng_make_random;",
          "",
          "[Added Lines]",
          "69:  rng->generate = generate;",
          "",
          "---------------"
        ],
        "include/crypto/rng.h||include/crypto/rng.h": [
          "File: include/crypto/rng.h -> include/crypto/rng.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <linux/crypto.h>",
          "18: struct crypto_rng {",
          "20:  int (*seed)(struct crypto_rng *tfm, u8 *seed, unsigned int slen);",
          "21:  struct crypto_tfm base;",
          "22: };",
          "",
          "[Removed Lines]",
          "19:  int (*generate)(struct crypto_rng *tfm, u8 *rdata, unsigned int dlen);",
          "",
          "[Added Lines]",
          "19:  int (*generate)(struct crypto_rng *tfm,",
          "20:    const u8 *src, unsigned int slen,",
          "21:    u8 *dst, unsigned int dlen);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:  crypto_destroy_tfm(tfm, crypto_rng_tfm(tfm));",
          "83: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101: static inline int crypto_rng_generate(struct crypto_rng *tfm,",
          "102:           const u8 *src, unsigned int slen,",
          "103:           u8 *dst, unsigned int dlen)",
          "104: {",
          "105:  return tfm->generate(tfm, src, slen, dst, dlen);",
          "106: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "96: static inline int crypto_rng_get_bytes(struct crypto_rng *tfm,",
          "97:            u8 *rdata, unsigned int dlen)",
          "98: {",
          "100: }",
          "",
          "[Removed Lines]",
          "99:  return tfm->generate(tfm, rdata, dlen);",
          "",
          "[Added Lines]",
          "122:  return crypto_rng_generate(tfm, NULL, 0, rdata, dlen);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa1b6fbcbeaca21038db3e7a98d739786ae93511",
      "candidate_info": {
        "commit_hash": "aa1b6fbcbeaca21038db3e7a98d739786ae93511",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/aa1b6fbcbeaca21038db3e7a98d739786ae93511",
        "files": [
          "include/crypto/rng.h"
        ],
        "message": "crypto: doc - RNG API documentation\n\nThe API function calls exported by the kernel crypto API for RNGs to\nbe used by consumers are documented.\n\nSigned-off-by: Stephan Mueller <smueller@chronox.de>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "include/crypto/rng.h||include/crypto/rng.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/crypto/rng.h||include/crypto/rng.h"
          ],
          "candidate": [
            "include/crypto/rng.h||include/crypto/rng.h"
          ]
        }
      },
      "candidate_diff": {
        "include/crypto/rng.h||include/crypto/rng.h": [
          "File: include/crypto/rng.h -> include/crypto/rng.h"
        ]
      }
    },
    {
      "candidate_hash": "3c5d8fa9f56ad0928e7a1f06003e5034f5eedb52",
      "candidate_info": {
        "commit_hash": "3c5d8fa9f56ad0928e7a1f06003e5034f5eedb52",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3c5d8fa9f56ad0928e7a1f06003e5034f5eedb52",
        "files": [
          "crypto/rng.c",
          "include/crypto/rng.h"
        ],
        "message": "crypto: rng - Mark crypto_rng_reset seed as const\n\nThere is no reason why crypto_rng_reset should modify the seed\nso this patch marks it as const.  Since our algorithms don't\nexport a const seed function yet we have to go through some\ncontortions for now.\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "crypto/rng.c||crypto/rng.c",
          "include/crypto/rng.h||include/crypto/rng.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/rng.c||crypto/rng.c",
            "include/crypto/rng.h||include/crypto/rng.h"
          ],
          "candidate": [
            "crypto/rng.c||crypto/rng.c",
            "include/crypto/rng.h||include/crypto/rng.h"
          ]
        }
      },
      "candidate_diff": {
        "crypto/rng.c||crypto/rng.c": [
          "File: crypto/rng.c -> crypto/rng.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:  return crypto_rng_alg(tfm)->rng_make_random(tfm, dst, dlen);",
          "43: }",
          "46: {",
          "47:  u8 *buf = NULL;",
          "48:  int err;",
          "",
          "[Removed Lines]",
          "45: static int rngapi_reset(struct crypto_rng *tfm, u8 *seed, unsigned int slen)",
          "",
          "[Added Lines]",
          "45: static int rngapi_reset(struct crypto_rng *tfm, const u8 *seed,",
          "46:    unsigned int slen)",
          "47: {",
          "48:  u8 *buf = NULL;",
          "49:  u8 *src = (u8 *)seed;",
          "50:  int err;",
          "52:  if (slen) {",
          "53:   buf = kmalloc(slen, GFP_KERNEL);",
          "54:   if (!buf)",
          "55:    return -ENOMEM;",
          "57:   memcpy(buf, seed, slen);",
          "58:   src = buf;",
          "59:  }",
          "61:  err = crypto_rng_alg(tfm)->rng_reset(tfm, src, slen);",
          "63:  kzfree(buf);",
          "64:  return err;",
          "65: }",
          "67: int crypto_rng_reset(struct crypto_rng *tfm, const u8 *seed, unsigned int slen)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:   seed = buf;",
          "57:  }",
          "61:  kfree(buf);",
          "62:  return err;",
          "63: }",
          "65: static int crypto_rng_init_tfm(struct crypto_tfm *tfm)",
          "66: {",
          "",
          "[Removed Lines]",
          "59:  err = crypto_rng_alg(tfm)->rng_reset(tfm, seed, slen);",
          "",
          "[Added Lines]",
          "81:  err = tfm->seed(tfm, seed, slen);",
          "86: EXPORT_SYMBOL_GPL(crypto_rng_reset);",
          "",
          "---------------"
        ],
        "include/crypto/rng.h||include/crypto/rng.h": [
          "File: include/crypto/rng.h -> include/crypto/rng.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  int (*generate)(struct crypto_rng *tfm,",
          "20:    const u8 *src, unsigned int slen,",
          "21:    u8 *dst, unsigned int dlen);",
          "23:  struct crypto_tfm base;",
          "24: };",
          "",
          "[Removed Lines]",
          "22:  int (*seed)(struct crypto_rng *tfm, u8 *seed, unsigned int slen);",
          "",
          "[Added Lines]",
          "22:  int (*seed)(struct crypto_rng *tfm, const u8 *seed, unsigned int slen);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "142: static inline int crypto_rng_reset(struct crypto_rng *tfm,",
          "143:        u8 *seed, unsigned int slen)",
          "144: {",
          "145:  return tfm->seed(tfm, seed, slen);",
          "146: }",
          "",
          "[Added Lines]",
          "142: int crypto_rng_reset(struct crypto_rng *tfm, const u8 *seed,",
          "143:        unsigned int slen);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acec27ff35af9caf34d76d16ee17ff3b292e7d83",
      "candidate_info": {
        "commit_hash": "acec27ff35af9caf34d76d16ee17ff3b292e7d83",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/acec27ff35af9caf34d76d16ee17ff3b292e7d83",
        "files": [
          "crypto/rng.c",
          "include/crypto/internal/rng.h",
          "include/crypto/rng.h",
          "include/linux/crypto.h"
        ],
        "message": "crypto: rng - Convert low-level crypto_rng to new style\n\nThis patch converts the low-level crypto_rng interface to the\n\"new\" style.\n\nThis allows existing implementations to be converted over one-\nby-one.  Once that is complete we can then remove the old rng\ninterface.\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "crypto/rng.c||crypto/rng.c",
          "include/crypto/internal/rng.h||include/crypto/internal/rng.h",
          "include/crypto/rng.h||include/crypto/rng.h",
          "include/linux/crypto.h||include/linux/crypto.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/rng.c||crypto/rng.c",
            "include/crypto/internal/rng.h||include/crypto/internal/rng.h",
            "include/crypto/rng.h||include/crypto/rng.h",
            "include/linux/crypto.h||include/linux/crypto.h"
          ],
          "candidate": [
            "crypto/rng.c||crypto/rng.c",
            "include/crypto/internal/rng.h||include/crypto/internal/rng.h",
            "include/crypto/rng.h||include/crypto/rng.h",
            "include/linux/crypto.h||include/linux/crypto.h"
          ]
        }
      },
      "candidate_diff": {
        "crypto/rng.c||crypto/rng.c": [
          "File: crypto/rng.c -> crypto/rng.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:  return container_of(tfm, struct crypto_rng, base);",
          "37: }",
          "39: static int generate(struct crypto_rng *tfm, const u8 *src, unsigned int slen,",
          "40:       u8 *dst, unsigned int dlen)",
          "41: {",
          "43: }",
          "45: static int rngapi_reset(struct crypto_rng *tfm, const u8 *seed,",
          "",
          "[Removed Lines]",
          "42:  return crypto_rng_alg(tfm)->rng_make_random(tfm, dst, dlen);",
          "",
          "[Added Lines]",
          "39: static inline struct old_rng_alg *crypto_old_rng_alg(struct crypto_rng *tfm)",
          "40: {",
          "41:  return &crypto_rng_tfm(tfm)->__crt_alg->cra_rng;",
          "42: }",
          "47:  return crypto_old_rng_alg(tfm)->rng_make_random(tfm, dst, dlen);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:   src = buf;",
          "59:  }",
          "63:  kzfree(buf);",
          "64:  return err;",
          "",
          "[Removed Lines]",
          "61:  err = crypto_rng_alg(tfm)->rng_reset(tfm, src, slen);",
          "",
          "[Added Lines]",
          "66:  err = crypto_old_rng_alg(tfm)->rng_reset(tfm, src, slen);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88: static int crypto_rng_init_tfm(struct crypto_tfm *tfm)",
          "89: {",
          "90:  struct crypto_rng *rng = __crypto_rng_cast(tfm);",
          "95:  return 0;",
          "96: }",
          "98: #ifdef CONFIG_NET",
          "99: static int crypto_rng_report(struct sk_buff *skb, struct crypto_alg *alg)",
          "100: {",
          "",
          "[Removed Lines]",
          "92:  rng->generate = generate;",
          "93:  rng->seed = rngapi_reset;",
          "",
          "[Added Lines]",
          "96:  struct rng_alg *alg = crypto_rng_alg(rng);",
          "97:  struct old_rng_alg *oalg = crypto_old_rng_alg(rng);",
          "99:  if (oalg->rng_make_random) {",
          "100:   rng->generate = generate;",
          "101:   rng->seed = rngapi_reset;",
          "102:   rng->seedsize = oalg->seedsize;",
          "103:   return 0;",
          "104:  }",
          "106:  rng->generate = alg->generate;",
          "107:  rng->seed = alg->seed;",
          "108:  rng->seedsize = alg->seedsize;",
          "113: static unsigned int seedsize(struct crypto_alg *alg)",
          "114: {",
          "115:  struct rng_alg *ralg = container_of(alg, struct rng_alg, base);",
          "117:  return alg->cra_rng.rng_make_random ?",
          "118:         alg->cra_rng.seedsize : ralg->seedsize;",
          "119: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "103:  strncpy(rrng.type, \"rng\", sizeof(rrng.type));",
          "107:  if (nla_put(skb, CRYPTOCFGA_REPORT_RNG,",
          "108:       sizeof(struct crypto_report_rng), &rrng))",
          "",
          "[Removed Lines]",
          "105:  rrng.seedsize = alg->cra_rng.seedsize;",
          "",
          "[Added Lines]",
          "128:  rrng.seedsize = seedsize(alg);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "124: static void crypto_rng_show(struct seq_file *m, struct crypto_alg *alg)",
          "125: {",
          "126:  seq_printf(m, \"type         : rng\\n\");",
          "128: }",
          "130: const struct crypto_type crypto_rng_type = {",
          "",
          "[Removed Lines]",
          "127:  seq_printf(m, \"seedsize     : %u\\n\", alg->cra_rng.seedsize);",
          "",
          "[Added Lines]",
          "150:  seq_printf(m, \"seedsize     : %u\\n\", seedsize(alg));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "189: }",
          "190: EXPORT_SYMBOL_GPL(crypto_put_default_rng);",
          "192: MODULE_LICENSE(\"GPL\");",
          "193: MODULE_DESCRIPTION(\"Random Number Generator\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215: int crypto_register_rng(struct rng_alg *alg)",
          "216: {",
          "217:  struct crypto_alg *base = &alg->base;",
          "219:  if (alg->seedsize > PAGE_SIZE / 8)",
          "220:   return -EINVAL;",
          "222:  base->cra_type = &crypto_rng_type;",
          "223:  base->cra_flags &= ~CRYPTO_ALG_TYPE_MASK;",
          "224:  base->cra_flags |= CRYPTO_ALG_TYPE_RNG;",
          "226:  return crypto_register_alg(base);",
          "227: }",
          "228: EXPORT_SYMBOL_GPL(crypto_register_rng);",
          "230: void crypto_unregister_rng(struct rng_alg *alg)",
          "231: {",
          "232:  crypto_unregister_alg(&alg->base);",
          "233: }",
          "234: EXPORT_SYMBOL_GPL(crypto_unregister_rng);",
          "",
          "---------------"
        ],
        "include/crypto/internal/rng.h||include/crypto/internal/rng.h": [
          "File: include/crypto/internal/rng.h -> include/crypto/internal/rng.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: extern const struct crypto_type crypto_rng_type;",
          "21: static inline void *crypto_rng_ctx(struct crypto_rng *tfm)",
          "22: {",
          "23:  return crypto_tfm_ctx(&tfm->base);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: int crypto_register_rng(struct rng_alg *alg);",
          "22: void crypto_unregister_rng(struct rng_alg *alg);",
          "",
          "---------------"
        ],
        "include/crypto/rng.h||include/crypto/rng.h": [
          "File: include/crypto/rng.h -> include/crypto/rng.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <linux/crypto.h>",
          "18: struct crypto_rng {",
          "19:  int (*generate)(struct crypto_rng *tfm,",
          "20:    const u8 *src, unsigned int slen,",
          "21:    u8 *dst, unsigned int dlen);",
          "22:  int (*seed)(struct crypto_rng *tfm, const u8 *seed, unsigned int slen);",
          "23:  struct crypto_tfm base;",
          "24: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: struct crypto_rng;",
          "43: struct rng_alg {",
          "44:  int (*generate)(struct crypto_rng *tfm,",
          "45:    const u8 *src, unsigned int slen,",
          "46:    u8 *dst, unsigned int dlen);",
          "47:  int (*seed)(struct crypto_rng *tfm, const u8 *seed, unsigned int slen);",
          "49:  unsigned int seedsize;",
          "51:  struct crypto_alg base;",
          "52: };",
          "59:  unsigned int seedsize;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73: static inline struct rng_alg *crypto_rng_alg(struct crypto_rng *tfm)",
          "74: {",
          "76: }",
          "",
          "[Removed Lines]",
          "75:  return &crypto_rng_tfm(tfm)->__crt_alg->cra_rng;",
          "",
          "[Added Lines]",
          "112:  return container_of(crypto_rng_tfm(tfm)->__crt_alg,",
          "113:        struct rng_alg, base);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157: static inline int crypto_rng_seedsize(struct crypto_rng *tfm)",
          "158: {",
          "160: }",
          "162: #endif",
          "",
          "[Removed Lines]",
          "159:  return crypto_rng_alg(tfm)->seedsize;",
          "",
          "[Added Lines]",
          "197:  return tfm->seedsize;",
          "",
          "---------------"
        ],
        "include/linux/crypto.h||include/linux/crypto.h": [
          "File: include/linux/crypto.h -> include/linux/crypto.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "449:  int (*rng_make_random)(struct crypto_rng *tfm, u8 *rdata,",
          "450:           unsigned int dlen);",
          "451:  int (*rng_reset)(struct crypto_rng *tfm, u8 *seed, unsigned int slen);",
          "",
          "[Removed Lines]",
          "448: struct rng_alg {",
          "",
          "[Added Lines]",
          "448: struct old_rng_alg {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "559:   struct blkcipher_alg blkcipher;",
          "560:   struct cipher_alg cipher;",
          "561:   struct compress_alg compress;",
          "563:  } cra_u;",
          "565:  int (*cra_init)(struct crypto_tfm *tfm);",
          "",
          "[Removed Lines]",
          "562:   struct rng_alg rng;",
          "",
          "[Added Lines]",
          "562:   struct old_rng_alg rng;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d7f488f0305a9caffab0a18a882f9980f8bc936",
      "candidate_info": {
        "commit_hash": "0d7f488f0305a9caffab0a18a882f9980f8bc936",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0d7f488f0305a9caffab0a18a882f9980f8bc936",
        "files": [
          "include/linux/crypto.h"
        ],
        "message": "crypto: doc - cipher data structures\n\nThe data structure of struct crypto_alg together with various other\ndata structures needed by cipher developers is documented wit all\nparameters that can be set by a developer of a transformation. All\nparameters that are internal to the crypto API are marked as such.\n\nSigned-off-by: Stephan Mueller <smueller@chronox.de>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "include/linux/crypto.h||include/linux/crypto.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/linux/crypto.h||include/linux/crypto.h"
          ],
          "candidate": [
            "include/linux/crypto.h||include/linux/crypto.h"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/crypto.h||include/linux/crypto.h": [
          "File: include/linux/crypto.h -> include/linux/crypto.h"
        ]
      }
    }
  ]
}