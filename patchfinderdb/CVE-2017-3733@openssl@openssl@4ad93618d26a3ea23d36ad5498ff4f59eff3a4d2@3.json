{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "39ff4d7adde80b87c994649559921b9189b9612f",
      "candidate_info": {
        "commit_hash": "39ff4d7adde80b87c994649559921b9189b9612f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/39ff4d7adde80b87c994649559921b9189b9612f",
        "files": [
          "crypto/asn1/a_int.c",
          "crypto/asn1/x_long.c",
          "crypto/bio/b_print.c"
        ],
        "message": "Fix VC warnings about unary minus to an unsigned type.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nGH: #2230\n(cherry picked from commit 68d4bcfd0651c7ea5d37ca52abc0d2e6e6b3bd20)",
        "before_after_code_files": [
          "crypto/asn1/a_int.c||crypto/asn1/a_int.c",
          "crypto/asn1/x_long.c||crypto/asn1/x_long.c",
          "crypto/bio/b_print.c||crypto/bio/b_print.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_int.c||crypto/asn1/a_int.c": [
          "File: crypto/asn1/a_int.c -> crypto/asn1/a_int.c"
        ],
        "crypto/asn1/x_long.c||crypto/asn1/x_long.c": [
          "File: crypto/asn1/x_long.c -> crypto/asn1/x_long.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     if (ltmp < 0)",
          "80:     else",
          "81:         utmp = ltmp;",
          "82:     clen = BN_num_bits_word(utmp);",
          "",
          "[Removed Lines]",
          "79:         utmp = -(unsigned long)ltmp - 1;",
          "",
          "[Added Lines]",
          "79:         utmp = 0 - (unsigned long)ltmp - 1;",
          "",
          "---------------"
        ],
        "crypto/bio/b_print.c||crypto/bio/b_print.c": [
          "File: crypto/bio/b_print.c -> crypto/bio/b_print.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "451:     if (!(flags & DP_F_UNSIGNED)) {",
          "452:         if (value < 0) {",
          "453:             signvalue = '-';",
          "455:         } else if (flags & DP_F_PLUS)",
          "456:             signvalue = '+';",
          "457:         else if (flags & DP_F_SPACE)",
          "",
          "[Removed Lines]",
          "454:             uvalue = -(unsigned LLONG)value;",
          "",
          "[Added Lines]",
          "454:             uvalue = 0 - (unsigned LLONG)value;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa25177560344e78d55aaaf20927b5cf42a294b7",
      "candidate_info": {
        "commit_hash": "aa25177560344e78d55aaaf20927b5cf42a294b7",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/aa25177560344e78d55aaaf20927b5cf42a294b7",
        "files": [
          "util/build.info",
          "util/local_shlib.com.in",
          "util/shareable_image_wrap.c.in",
          "util/unlocal_shlib.com.in"
        ],
        "message": "VMS: throw away [.util]shareable_image_wrap.c.in and add replacement scripts\n\n[.util]shareable_image_wrap.c.in was never useful because lib$spawn()\ninsisted on combining stdout and stderr into one.\n\nInstead, we introduce two scripts that create and destroy a temporary\nenvironment where the local shareable images become available,\n[.util]local_shlib.com and [.util]unlocal_shlib.com.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2948)",
        "before_after_code_files": [
          "util/build.info||util/build.info",
          "util/local_shlib.com.in||util/local_shlib.com.in",
          "util/shareable_image_wrap.c.in||util/shareable_image_wrap.c.in",
          "util/unlocal_shlib.com.in||util/unlocal_shlib.com.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/build.info||util/build.info": [
          "File: util/build.info -> util/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: IF[{- $target{build_scheme}->[1] eq \"VMS\" -}]",
          "5: ELSIF[{- $target{build_scheme}->[1] eq \"unix\" -}]",
          "6:  SCRIPTS_NO_INST=shlib_wrap.sh",
          "7:  SOURCE[shlib_wrap.sh]=shlib_wrap.sh.in",
          "",
          "[Removed Lines]",
          "2:  PROGRAMS_NO_INST=shlib_wrap",
          "3:  SOURCE[shlib_wrap]=shareable_image_wrap.c",
          "4:  GENERATE[shareable_image_wrap.c]=shareable_image_wrap.c.in",
          "",
          "[Added Lines]",
          "2:  SCRIPTS_NO_INST=local_shlib.com unlocal_shlib.com",
          "3:  SOURCE[local_shlib.com]=local_shlib.com.in",
          "4:  SOURCE[unlocal_shlib.com]=unlocal_shlib.com.in",
          "",
          "---------------"
        ],
        "util/local_shlib.com.in||util/local_shlib.com.in": [
          "File: util/local_shlib.com.in -> util/local_shlib.com.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: ${-",
          "2:   use File::Spec::Functions qw(rel2abs);",
          "4:   my $bldtop = rel2abs($config{builddir});",
          "5:   our %names = ( map { $_ => $bldtop.$_.\".EXE\" }",
          "6:                  map { $unified_info{sharednames}->{$_} || () }",
          "7:                  @{$unified_info{libraries}} );",
          "8:   \"\" -}",
          "9: $       ! Create a local environment with the shared library logical names",
          "10: $       ! properly set.  Undo this with unlocal_shlib.com",
          "11: $",
          "12: $       OPENSSL_NAMES := OPENSSL_NAMES_'F$GETJPI(\"\",\"PID\")'",
          "13: $       CREATE/NAME_TABLE/PARENT_TABLE=LNM$PROCESS_DIRECTORY 'OPENSSL_NAMES'",
          "14: $       DEFINE/TABLE='OPENSSL_NAMES' OSSL_FLAG YES",
          "15: $",
          "16: $       NAMES := {- join(\",\", keys %names); -}",
          "17: {-",
          "18:   join(\"\\n\", map { \"\\$       __$_ = \\\"\".$names{$_}.\"\\\"\" } keys %names);",
          "19: -}",
          "20: $       I = 0",
          "21: $       LOOP:",
          "22: $           E = F$ELEMENT(I,\",\",NAMES)",
          "23: $           I = I + 1",
          "24: $           IF E .EQS. \",\" THEN GOTO ENDLOOP",
          "25: $           EV = __'E'",
          "26: $           OLDV = F$TRNLNM(E,\"LNM$PROCESS\")",
          "27: $           IF OLDV .NES. \"\" THEN DEFINE/TABLE='OPENSSL_NAMES' 'E' 'OLDV'",
          "28: $           DEFINE 'E' 'EV'",
          "29: $           GOTO LOOP",
          "30: $       ENDLOOP:",
          "",
          "---------------"
        ],
        "util/shareable_image_wrap.c.in||util/shareable_image_wrap.c.in": [
          "File: util/shareable_image_wrap.c.in -> util/shareable_image_wrap.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "util/unlocal_shlib.com.in||util/unlocal_shlib.com.in": [
          "File: util/unlocal_shlib.com.in -> util/unlocal_shlib.com.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: ${-",
          "2:   use File::Spec::Functions qw(rel2abs);",
          "4:   my $bldtop = rel2abs($config{builddir});",
          "5:   our %names = ( map { $_ => $bldtop.$_.\".EXE\" }",
          "6:                  map { $unified_info{sharednames}->{$_} || () }",
          "7:                  @{$unified_info{libraries}} );",
          "8:   \"\" -}",
          "9: $       ! Remove the local environment created by local_shlib.com",
          "10: $",
          "11: $       OPENSSL_NAMES := OPENSSL_NAMES_'F$GETJPI(\"\",\"PID\")'",
          "12: $       IF F$TRNLNM(\"OSSL_FLAG\",OPENSSL_NAMES) .EQS. \"\" THEN EXIT 0",
          "13: $",
          "14: $       NAMES := {- join(\",\", keys %names); -}",
          "15: $       I = 0",
          "16: $       LOOP:",
          "17: $           E = F$ELEMENT(I,\",\",NAMES)",
          "18: $           I = I + 1",
          "19: $           IF E .EQS. \",\" THEN GOTO ENDLOOP",
          "20: $           OLDV = F$TRNLNM(E,OPENSSL_NAMES)",
          "21: $           DEASSIGN 'E'",
          "22: $           IF OLDV .NES. \"\" THEN DEFINE 'E' 'OLDV'",
          "23: $           GOTO LOOP",
          "24: $       ENDLOOP:",
          "25: $",
          "26: $       DEASSIGN 'OPENSSL_NAMES' /TABLE=LNM$PROCESS_DIRECTORY",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "955286c9f38c11b8be719d632fa9267eb13467f8",
      "candidate_info": {
        "commit_hash": "955286c9f38c11b8be719d632fa9267eb13467f8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/955286c9f38c11b8be719d632fa9267eb13467f8",
        "files": [
          "crypto/async/async_wait.c"
        ],
        "message": "Further improvements to ASYNC_WAIT_CTX_clear_fd\n\nRemove call to cleanup function\nUse only one loop to find previous element\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2581)\n(cherry picked from commit 219aa86cb04e1bfc9c156fab18da2f767502afb2)",
        "before_after_code_files": [
          "crypto/async/async_wait.c||crypto/async/async_wait.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/async/async_wait.c||crypto/async/async_wait.c": [
          "File: crypto/async/async_wait.c -> crypto/async/async_wait.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "139: int ASYNC_WAIT_CTX_clear_fd(ASYNC_WAIT_CTX *ctx, const void *key)",
          "140: {",
          "143:     curr = ctx->fds;",
          "144:     while (curr != NULL) {",
          "147:             curr = curr->next;",
          "148:             continue;",
          "",
          "[Removed Lines]",
          "141:     struct fd_lookup_st *curr;",
          "145:         if (curr->del) {",
          "",
          "[Added Lines]",
          "141:     struct fd_lookup_st *curr, *prev;",
          "144:     prev = NULL;",
          "146:         if (curr->del == 1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:             if (curr->add == 1) {",
          "153:                 if (ctx->fds == curr) {",
          "154:                     ctx->fds = curr->next;",
          "164:                     prev->next = curr->next;",
          "165:                 }",
          "173:                 OPENSSL_free(curr);",
          "174:                 ctx->numadd--;",
          "175:                 return 1;",
          "",
          "[Removed Lines]",
          "155:                 }",
          "156:                 else {",
          "157:                     struct fd_lookup_st *prev = ctx->fds;",
          "158:                     while (prev->next != curr && prev->next != NULL) {",
          "159:                         prev = prev->next;",
          "160:                     }",
          "161:                     if (prev->next == NULL) {",
          "162:                         return 1;",
          "163:                     }",
          "171:                 if (curr->cleanup != NULL)",
          "172:                     curr->cleanup(ctx, curr->key, curr->fd, curr->custom_data);",
          "",
          "[Added Lines]",
          "156:                 } else {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "184:             ctx->numdel++;",
          "185:             return 1;",
          "186:         }",
          "187:         curr = curr->next;",
          "188:     }",
          "189:     return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:         prev = curr;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "98bdd4363bd657304d88fb4b64a684e26c66b774",
      "candidate_info": {
        "commit_hash": "98bdd4363bd657304d88fb4b64a684e26c66b774",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/98bdd4363bd657304d88fb4b64a684e26c66b774",
        "files": [
          "crypto/x509/t_x509.c"
        ],
        "message": "Add missing braces.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nGH: #2234\n(cherry picked from commit c4a60150914fc260c3fc2854e13372c870bdde76)",
        "before_after_code_files": [
          "crypto/x509/t_x509.c||crypto/x509/t_x509.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/t_x509.c||crypto/x509/t_x509.c": [
          "File: crypto/x509/t_x509.c -> crypto/x509/t_x509.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:             if (bs->type == V_ASN1_NEG_INTEGER) {",
          "98:                 ul = 0 - (unsigned long)l;",
          "99:                 neg = \"-\";",
          "101:                 ul = l;",
          "102:                 neg = \"\";",
          "103:             if (BIO_printf(bp, \" %s%lu (%s0x%lx)\\n\", neg, ul, neg, ul) <= 0)",
          "104:                 goto err;",
          "105:         } else {",
          "",
          "[Removed Lines]",
          "100:             } else",
          "",
          "[Added Lines]",
          "100:             } else {",
          "103:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "91eaf079b7430cb4ebb7f3ccabe74aa383b27c4e",
      "candidate_info": {
        "commit_hash": "91eaf079b7430cb4ebb7f3ccabe74aa383b27c4e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/91eaf079b7430cb4ebb7f3ccabe74aa383b27c4e",
        "files": [
          "CHANGES",
          "NEWS",
          "README",
          "include/openssl/opensslv.h"
        ],
        "message": "Prepare for 1.1.0c release\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "include/openssl/opensslv.h||include/openssl/opensslv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/opensslv.h||include/openssl/opensslv.h": [
          "File: include/openssl/opensslv.h -> include/openssl/opensslv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: # ifdef OPENSSL_FIPS",
          "45: # else",
          "47: # endif",
          "",
          "[Removed Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x10100030L",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0c-fips-dev  xx XXX xxxx\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0c-dev  xx XXX xxxx\"",
          "",
          "[Added Lines]",
          "42: # define OPENSSL_VERSION_NUMBER  0x1010003fL",
          "44: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0c-fips  10 Nov 2016\"",
          "46: #  define OPENSSL_VERSION_TEXT    \"OpenSSL 1.1.0c  10 Nov 2016\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}