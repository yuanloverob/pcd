{
  "cve_id": "CVE-2015-3315",
  "cve_desc": "Automatic Bug Reporting Tool (ABRT) allows local users to read, change the ownership of, or have other unspecified impact on arbitrary files via a symlink attack on (1) /var/tmp/abrt/*/maps, (2) /tmp/jvm-*/hs_error.log, (3) /proc/*/exe, (4) /etc/os-release in a chroot, or (5) an unspecified root directory related to librpm.",
  "repo": "abrt/abrt",
  "patch_hash": "d6e2f6f128cef4c21cb80941ae674c9842681aa7",
  "patch_info": {
    "commit_hash": "d6e2f6f128cef4c21cb80941ae674c9842681aa7",
    "repo": "abrt/abrt",
    "commit_url": "https://github.com/abrt/abrt/commit/d6e2f6f128cef4c21cb80941ae674c9842681aa7",
    "files": [
      "src/hooks/abrt-hook-ccpp.c"
    ],
    "message": "ccpp: open file for dump_fd_info with O_EXCL\n\nTo avoid possible races.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
    "before_after_code_files": [
      "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
    ]
  },
  "patch_diff": {
    "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c": [
      "File: src/hooks/abrt-hook-ccpp.c -> src/hooks/abrt-hook-ccpp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "400: static bool dump_fd_info(const char *dest_filename, char *source_filename, int source_base_ofs, uid_t uid, gid_t gid)",
      "401: {",
      "403:     if (!fp)",
      "404:         return false;",
      "",
      "[Removed Lines]",
      "402:     FILE *fp = fopen(dest_filename, \"w\");",
      "",
      "[Added Lines]",
      "402:     FILE *fp = fopen(dest_filename, \"wx\");",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "17cb66b13997b0159b4253b3f5722db79f476d68",
      "candidate_info": {
        "commit_hash": "17cb66b13997b0159b4253b3f5722db79f476d68",
        "repo": "abrt/abrt",
        "commit_url": "https://github.com/abrt/abrt/commit/17cb66b13997b0159b4253b3f5722db79f476d68",
        "files": [
          "src/hooks/abrt-hook-ccpp.c"
        ],
        "message": "ccpp: stop reading hs_error.log from /tmp\n\nThe file might contain anything and there is no way to verify its\ncontents.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abrt/abrt/pull/950"
        ],
        "olp_code_files": {
          "patch": [
            "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
          ],
          "candidate": [
            "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
          ]
        }
      },
      "candidate_diff": {
        "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c": [
          "File: src/hooks/abrt-hook-ccpp.c -> src/hooks/abrt-hook-ccpp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "795:             unlink(core_basename);",
          "796:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "799: #if 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "827:                 close(src_fd);",
          "828:             }",
          "829:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "832: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a4794b39efc62c9ba92b38b419de3babbbcd8cfb",
      "candidate_info": {
        "commit_hash": "a4794b39efc62c9ba92b38b419de3babbbcd8cfb",
        "repo": "abrt/abrt",
        "commit_url": "https://github.com/abrt/abrt/commit/a4794b39efc62c9ba92b38b419de3babbbcd8cfb",
        "files": [
          "src/hooks/abrt-hook-ccpp.c"
        ],
        "message": "ccpp: postpone changing ownership of new dump directories\n\nFlorian Weimer <fweimer@redhat.com>:\n\n    Currently, dd_create changes ownership of the directory immediately,\n    when it is still empty. This means that any operations within the\n    directory (which happen as the root user) can race with changes to\n    the directory contents by the user. If you delay changing directory\n    ownership until all the files have created and written, this is no\n    longer a problem.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abrt/abrt/pull/950"
        ],
        "olp_code_files": {
          "patch": [
            "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
          ],
          "candidate": [
            "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c"
          ]
        }
      },
      "candidate_diff": {
        "src/hooks/abrt-hook-ccpp.c||src/hooks/abrt-hook-ccpp.c": [
          "File: src/hooks/abrt-hook-ccpp.c -> src/hooks/abrt-hook-ccpp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "677:     if (dd)",
          "678:     {",
          "679:         char *rootdir = get_rootdir(pid);",
          "",
          "[Removed Lines]",
          "676:     dd = dd_create(path, fsuid, DEFAULT_DUMP_DIR_MODE);",
          "",
          "[Added Lines]",
          "680:     dd = dd_create_skeleton(path, fsuid, DEFAULT_DUMP_DIR_MODE);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "831:         }",
          "832: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "839:         dd_reset_ownership(dd);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fdf93685d4f3fc36fe50d34a11e24662c4cb2d8c",
      "candidate_info": {
        "commit_hash": "fdf93685d4f3fc36fe50d34a11e24662c4cb2d8c",
        "repo": "abrt/abrt",
        "commit_url": "https://github.com/abrt/abrt/commit/fdf93685d4f3fc36fe50d34a11e24662c4cb2d8c",
        "files": [
          "src/daemon/abrt-action-save-package-data.c"
        ],
        "message": "a-a-save-package-data: turn off reading data from root directories\n\nMaking copies of files from arbitrary root directories is not secure.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "src/daemon/abrt-action-save-package-data.c||src/daemon/abrt-action-save-package-data.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abrt/abrt/pull/950"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/daemon/abrt-action-save-package-data.c||src/daemon/abrt-action-save-package-data.c": [
          "File: src/daemon/abrt-action-save-package-data.c -> src/daemon/abrt-action-save-package-data.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "224:     char *cmdline = NULL;",
          "225:     char *executable = NULL;",
          "227:     char *package_short_name = NULL;",
          "228:     struct pkg_envra *pkg_name = NULL;",
          "229:     char *component = NULL;",
          "",
          "[Removed Lines]",
          "226:     char *rootdir = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234:     cmdline = dd_load_text_ext(dd, FILENAME_CMDLINE, DD_FAIL_QUIETLY_ENOENT);",
          "235:     executable = dd_load_text(dd, FILENAME_EXECUTABLE);",
          "",
          "[Removed Lines]",
          "236:     rootdir = dd_load_text_ext(dd, FILENAME_ROOTDIR,",
          "237:                                DD_FAIL_QUIETLY_ENOENT | DD_LOAD_TEXT_RETURN_NULL_ON_FAILURE);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "247:     }",
          "250:     if (!pkg_name)",
          "251:     {",
          "252:         if (settings_bProcessUnpackaged)",
          "",
          "[Removed Lines]",
          "249:     pkg_name = rpm_get_package_nvr(executable, rootdir);",
          "",
          "[Added Lines]",
          "246:     pkg_name = rpm_get_package_nvr(executable, NULL);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "330:     }",
          "334:     dd = dd_opendir(dump_dir_name, /*flags:*/ 0);",
          "335:     if (!dd)",
          "",
          "[Removed Lines]",
          "332:     component = rpm_get_component(executable, rootdir);",
          "",
          "[Added Lines]",
          "329:     component = rpm_get_component(executable, NULL);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "355:  ret:",
          "356:     free(cmdline);",
          "357:     free(executable);",
          "359:     free(package_short_name);",
          "360:     free_pkg_envra(pkg_name);",
          "361:     free(component);",
          "",
          "[Removed Lines]",
          "358:     free(rootdir);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d023c32a565e83306cddf34c894477b7aaf33d1",
      "candidate_info": {
        "commit_hash": "7d023c32a565e83306cddf34c894477b7aaf33d1",
        "repo": "abrt/abrt",
        "commit_url": "https://github.com/abrt/abrt/commit/7d023c32a565e83306cddf34c894477b7aaf33d1",
        "files": [
          "configure.ac",
          "src/daemon/abrt.conf"
        ],
        "message": "configure: move the default dump location to /var/spool\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/daemon/abrt.conf||src/daemon/abrt.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abrt/abrt/pull/950"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "147: AC_ARG_WITH([defaultdumplocation],",
          "148:             AS_HELP_STRING([--with-defaultdumplocation=DIR],",
          "151: AC_SUBST([DEFAULT_DUMP_LOCATION], [$with_defaultdumplocation])",
          "153: AC_ARG_WITH(augeaslenslibdir,",
          "",
          "[Removed Lines]",
          "149:                            [Default dump location ('LOCALSTATEDIR/tmp/abrt')]),",
          "150:             [], [with_defaultdumplocation=${localstatedir}/tmp/abrt])",
          "",
          "[Added Lines]",
          "149:                            [Default dump location ('LOCALSTATEDIR/spool/abrt')]),",
          "150:             [], [with_defaultdumplocation=${localstatedir}/spool/abrt])",
          "",
          "---------------"
        ],
        "src/daemon/abrt.conf||src/daemon/abrt.conf": [
          "File: src/daemon/abrt.conf -> src/daemon/abrt.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: MaxCrashReportsSize = 1000",
          "12: # Specify where you want to store coredumps and all files which are needed for",
          "14: #",
          "15: # Changing dump location could cause problems with SELinux. See man abrt_selinux(8).",
          "16: #",
          "19: # If you want to automatically clean the upload directory you have to tweak the",
          "20: # selinux policy.",
          "",
          "[Removed Lines]",
          "13: # reporting. (default:/var/tmp/abrt)",
          "17: #DumpLocation = /var/tmp/abrt",
          "",
          "[Added Lines]",
          "13: # reporting. (default:/var/spool/abrt)",
          "17: #DumpLocation = /var/spool/abrt",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e6dc5900266663ed6c2d170f9c3ed3c9b033d1ba",
      "candidate_info": {
        "commit_hash": "e6dc5900266663ed6c2d170f9c3ed3c9b033d1ba",
        "repo": "abrt/abrt",
        "commit_url": "https://github.com/abrt/abrt/commit/e6dc5900266663ed6c2d170f9c3ed3c9b033d1ba",
        "files": [
          "abrt.spec.in"
        ],
        "message": "spec: add libselinux-devel to BRs\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "abrt.spec.in||abrt.spec.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abrt/abrt/pull/950"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "abrt.spec.in||abrt.spec.in": [
          "File: abrt.spec.in -> abrt.spec.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "74: BuildRequires: satyr-devel >= 0.11",
          "75: BuildRequires: systemd-python",
          "76: BuildRequires: augeas",
          "78: Requires: libreport >= %{libreport_ver}",
          "79: Requires: satyr >= 0.11",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77: BuildRequires: libselinux-devel",
          "",
          "---------------"
        ]
      }
    }
  ]
}