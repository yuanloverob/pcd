{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ed22c21a8f4e0c98045efb6de245fba79ec7e961",
      "candidate_info": {
        "commit_hash": "ed22c21a8f4e0c98045efb6de245fba79ec7e961",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ed22c21a8f4e0c98045efb6de245fba79ec7e961",
        "files": [
          "ChangeLog",
          "test/ruby/test_refinement.rb",
          "version.h",
          "vm_method.c"
        ],
        "message": "merge revision(s) r49184: [Backport #10707]\n\n\t* vm_method.c (rb_method_entry): if no super class, no original\n\t  method entry.  [ruby-core:67389] [Bug #10707]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50131 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_refinement.rb||test/ruby/test_refinement.rb",
          "version.h||version.h",
          "vm_method.c||vm_method.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_refinement.rb||test/ruby/test_refinement.rb": [
          "File: test/ruby/test_refinement.rb -> test/ruby/test_refinement.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1166:     assert_raise(NoMethodError, bug10106) {Object.new.foo}",
          "1167:     end;",
          "1168:   end",
          "1170:   def test_change_refined_new_method_visibility",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1169:     assert_separately([], <<-\"end;\")",
          "1170:     bug10707 = '[ruby-core:67389] [Bug #10707]'",
          "1171:     module RefinementBug",
          "1172:       refine BasicObject do",
          "1173:         def foo",
          "1174:         end",
          "1175:       end",
          "1176:     end",
          "1178:     assert(methods, bug10707)",
          "1179:     assert_raise(NameError, bug10707) {method(:foo)}",
          "1180:     end;",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-03-31\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 326",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 327",
          "",
          "---------------"
        ],
        "vm_method.c||vm_method.c": [
          "File: vm_method.c -> vm_method.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "639:      const rb_method_entry_t *me,",
          "640:      VALUE *defined_class_ptr)",
          "641: {",
          "642:     if (me->def->body.orig_me) {",
          "643:  return me->def->body.orig_me;",
          "644:     }",
          "645:     else {",
          "646:  rb_method_entry_t *tmp_me;",
          "648:      defined_class_ptr);",
          "649:  return rb_resolve_refined_method(refinements, tmp_me,",
          "650:       defined_class_ptr);",
          "",
          "[Removed Lines]",
          "647:  tmp_me = rb_method_entry(RCLASS_SUPER(me->klass), me->called_id,",
          "",
          "[Added Lines]",
          "642:     VALUE super;",
          "647:     else if (!(super = RCLASS_SUPER(me->klass))) {",
          "648:  return 0;",
          "649:     }",
          "652:  tmp_me = rb_method_entry(super, me->called_id,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "59f1eaaf8fc39422f6ee8bbc666624e2ea754e7f",
      "candidate_info": {
        "commit_hash": "59f1eaaf8fc39422f6ee8bbc666624e2ea754e7f",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/59f1eaaf8fc39422f6ee8bbc666624e2ea754e7f",
        "files": [
          "ChangeLog",
          "test/ruby/test_literal.rb",
          "version.h",
          "vm.c"
        ],
        "message": "merge revision(s) 51263,51264: [Backport #11352]\n\n\t* vm.c (m_core_hash_merge_ptr): copy the arguments to the machine\n\t  stack before rewinding the control frame pointer and leaving the\n\t  arguments outside valid region of the value stack.\n\t  [ruby-core:69969] [Bug #11352]\n\n\t* vm.c (REWIND_CFP): keep the arguments region inside the valid\n\t  value stack.  [ruby-core:69969] [Bug #11352]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51601 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_literal.rb||test/ruby/test_literal.rb",
          "version.h||version.h",
          "vm.c||vm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_literal.rb||test/ruby/test_literal.rb": [
          "File: test/ruby/test_literal.rb -> test/ruby/test_literal.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:     assert_normal_exit %q{GC.disable=true; x = nil; raise if eval(\"[#{(1..1_000_000).to_a.join(\", \")}]\").size != 1_000_000}, \"\", timeout: 300, child_env: %[--disable-gems]",
          "194:     assert_normal_exit %q{GC.disable=true; x = nil; raise if eval(\"{#{(1..1_000_000).map{|n| \"#{n} => x\"}.join(', ')}}\").size != 1_000_000}, \"\", timeout: 300, child_env: %[--disable-gems]",
          "195:     assert_normal_exit %q{GC.disable=true; x = nil; raise if eval(\"{#{(1..1_000_000).map{|n| \"#{n} => #{n}\"}.join(', ')}}\").size != 1_000_000}, \"\", timeout: 300, child_env: %[--disable-gems]",
          "197:     bug7466 = '[ruby-dev:46658]'",
          "198:     h = {",
          "199:       0xFE042 => 0xE5CD,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "196:   end",
          "198:   def test_big_hash_literal",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "328:     }",
          "329:     k = h.keys",
          "330:     assert_equal([129, 0xFE331], [k.size, k.last], bug7466)",
          "331:   end",
          "333:   def test_range",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:     code = [",
          "335:       \"h = {\",",
          "336:       (1..128).map {|i| \"#{i} => 0,\"},",
          "337:       (129..140).map {|i| \"#{i} => [],\"},",
          "338:       \"}\",",
          "339:     ].join",
          "340:     assert_separately([], <<-\"end;\")",
          "341:       GC.stress = true",
          "342:       #{code}",
          "343:       GC.stress = false",
          "344:       assert_equal(140, h.size)",
          "345:     end;",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 8",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 384",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 385",
          "",
          "---------------"
        ],
        "vm.c||vm.c": [
          "File: vm.c -> vm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2270: #define REWIND_CFP(expr) do { \\",
          "2271:     rb_thread_t *th__ = GET_THREAD(); \\",
          "2273: } while (0)",
          "2275: static VALUE",
          "",
          "[Removed Lines]",
          "2272:     th__->cfp++; expr; th__->cfp--; \\",
          "",
          "[Added Lines]",
          "2272:     VALUE *const curr_sp = (th__->cfp++)->sp; \\",
          "2273:     VALUE *const saved_sp = th__->cfp->sp; \\",
          "2274:     th__->cfp->sp = curr_sp; \\",
          "2275:     expr; \\",
          "2276:     (th__->cfp--)->sp = saved_sp; \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "facd02511b30aa27fd1a33d39b9c28109738652e",
      "candidate_info": {
        "commit_hash": "facd02511b30aa27fd1a33d39b9c28109738652e",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/facd02511b30aa27fd1a33d39b9c28109738652e",
        "files": [
          "ChangeLog",
          "numeric.c",
          "test/ruby/test_float.rb",
          "test/ruby/test_numeric.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53949: [Backport #9810]\n\n\t* numeric.c (num_step_scan_args): comparison String with Numeric\n\t  should raise TypeError. it is an invalid type, but not a\n\t  mismatch the number of arguments.  [ruby-core:62430] [Bug #9810]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54276 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "numeric.c||numeric.c",
          "test/ruby/test_float.rb||test/ruby/test_float.rb",
          "test/ruby/test_numeric.rb||test/ruby/test_numeric.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "numeric.c||numeric.c": [
          "File: numeric.c -> numeric.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "254: }",
          "256: static int",
          "257: do_coerce(VALUE *x, VALUE *y, int err)",
          "258: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256: static VALUE",
          "257: coerce_rescue_quiet(VALUE arg, VALUE errinfo)",
          "258: {",
          "259:     return Qundef;",
          "260: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1864:     }",
          "1865: }",
          "1867: static int",
          "1868: num_step_scan_args(int argc, const VALUE *argv, VALUE *to, VALUE *step)",
          "1869: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1873: static VALUE",
          "1874: num_step_compare_with_zero(VALUE num)",
          "1875: {",
          "1876:     VALUE zero = INT2FIX(0);",
          "1877:     return rb_check_funcall(num, '>', 1, &zero);",
          "1878: }",
          "1880: static int",
          "1881: num_step_negative_p(VALUE num)",
          "1882: {",
          "1883:     const ID mid = '<';",
          "1884:     VALUE r;",
          "1886:     if (FIXNUM_P(num)) {",
          "1887:  if (method_basic_p(rb_cFixnum))",
          "1888:      return (SIGNED_VALUE)num < 0;",
          "1889:     }",
          "1890:     else if (RB_TYPE_P(num, T_BIGNUM)) {",
          "1891:  if (method_basic_p(rb_cBignum))",
          "1892:      return RBIGNUM_NEGATIVE_P(num);",
          "1893:     }",
          "1894:     r = rb_rescue(num_step_compare_with_zero, num, coerce_rescue_quiet, Qnil);",
          "1895:     if (r == Qundef) {",
          "1896:  coerce_failed(num, INT2FIX(0));",
          "1897:     }",
          "1898:     return !RTEST(r);",
          "1899: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1898:     if (NIL_P(*step)) {",
          "1900:     }",
          "1902:     if (NIL_P(*to)) {",
          "1904:     }",
          "",
          "[Removed Lines]",
          "1901:     desc = !positive_int_p(*step);",
          "",
          "[Added Lines]",
          "1935:     desc = num_step_negative_p(*step);",
          "",
          "---------------"
        ],
        "test/ruby/test_float.rb||test/ruby/test_float.rb": [
          "File: test/ruby/test_float.rb -> test/ruby/test_float.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "558:   end",
          "560:   def test_num2dbl",
          "562:       1.0.step(2.0, \"0.5\") {}",
          "563:     end",
          "564:     assert_raise(TypeError) do",
          "",
          "[Removed Lines]",
          "561:     assert_raise(ArgumentError) do",
          "",
          "[Added Lines]",
          "561:     assert_raise(TypeError) do",
          "",
          "---------------"
        ],
        "test/ruby/test_numeric.rb||test/ruby/test_numeric.rb": [
          "File: test/ruby/test_numeric.rb -> test/ruby/test_numeric.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "247:     assert_raise(ArgumentError) { 1.step(10, 1, 0).size }",
          "248:     assert_raise(ArgumentError) { 1.step(10, 0) { } }",
          "249:     assert_raise(ArgumentError) { 1.step(10, 0).size }",
          "252:     assert_raise(TypeError) { 1.step(10, nil) { } }",
          "253:     assert_raise(TypeError) { 1.step(10, nil).size }",
          "254:     assert_nothing_raised { 1.step(by: 0, to: nil) }",
          "",
          "[Removed Lines]",
          "250:     assert_raise(ArgumentError) { 1.step(10, \"1\") { } }",
          "251:     assert_raise(ArgumentError) { 1.step(10, \"1\").size }",
          "",
          "[Added Lines]",
          "250:     assert_raise(TypeError) { 1.step(10, \"1\") { } }",
          "251:     assert_raise(TypeError) { 1.step(10, \"1\").size }",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-03-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 473",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 474",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ad3a5c32c25ff5ea58d45f44be6f76aca81cb87",
      "candidate_info": {
        "commit_hash": "4ad3a5c32c25ff5ea58d45f44be6f76aca81cb87",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/4ad3a5c32c25ff5ea58d45f44be6f76aca81cb87",
        "files": [
          "ChangeLog",
          "lib/net/http.rb",
          "test/net/http/test_http.rb",
          "version.h"
        ],
        "message": "merge revision(s) r49104,r49105: [Backport #10692]\n\n\t* test/net/http/test_http.rb (_test_send_request__HEAD): Added\n\t  failing test for send_request with HEAD method.\n\n\t* lib/net/http.rb (Net::HTTP#send_request): there is no response body\n\t  with HEAD request. Patch by @rodrigosaito [fix GH-520]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49784 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/net/http.rb||lib/net/http.rb",
          "test/net/http/test_http.rb||test/net/http/test_http.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/net/http.rb||lib/net/http.rb": [
          "File: lib/net/http.rb -> lib/net/http.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1350:     #    puts response.body",
          "1351:     #",
          "1352:     def send_request(name, path, data = nil, header = nil)",
          "1354:       request r, data",
          "1355:     end",
          "",
          "[Removed Lines]",
          "1353:       r = HTTPGenericRequest.new(name,(data ? true : false),true,path,header)",
          "",
          "[Added Lines]",
          "1353:       has_response_body = name != 'HEAD'",
          "1354:       r = HTTPGenericRequest.new(name,(data ? true : false),has_response_body,path,header)",
          "",
          "---------------"
        ],
        "test/net/http/test_http.rb||test/net/http/test_http.rb": [
          "File: test/net/http/test_http.rb -> test/net/http/test_http.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "574:   def test_send_request",
          "575:     start {|http|",
          "576:       _test_send_request__GET http",
          "577:       _test_send_request__POST http",
          "578:     }",
          "579:   end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "577:       _test_send_request__HEAD http",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "588:     assert_equal $test_net_http_data, res.body",
          "589:   end",
          "591:   def _test_send_request__POST(http)",
          "592:     data = 'aaabbb cc ddddddddddd lkjoiu4j3qlkuoa'",
          "593:     res = http.send_request('POST', '/', data, 'content-type' => 'application/x-www-form-urlencoded')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "592:   def _test_send_request__HEAD(http)",
          "593:     res = http.send_request('HEAD', '/')",
          "594:     assert_kind_of Net::HTTPResponse, res",
          "595:     unless self.is_a?(TestNetHTTP_v1_2_chunked)",
          "596:       assert_not_nil res['content-length']",
          "597:       assert_equal $test_net_http_data.size, res['content-length'].to_i",
          "598:     end",
          "599:     assert_nil res.body",
          "600:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-03-01\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 301",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 302",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8402690742a2af5d7d0fa71943ac354c9833ae9",
      "candidate_info": {
        "commit_hash": "e8402690742a2af5d7d0fa71943ac354c9833ae9",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/e8402690742a2af5d7d0fa71943ac354c9833ae9",
        "files": [
          "ChangeLog",
          "tool/config_files.rb",
          "version.h"
        ],
        "message": "merge revision r48961 partially.\n\n* tool/config_files.rb: use config.guess in gcc repo.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49172 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "tool/config_files.rb||tool/config_files.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "tool/config_files.rb||tool/config_files.rb": [
          "File: tool/config_files.rb -> tool/config_files.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: require 'open-uri'",
          "4: def ConfigFiles.download(name, dir = nil)",
          "5:   data = URI(self % name).read",
          "6:   file = dir ? File.join(dir, name) : name",
          "",
          "[Removed Lines]",
          "3: ConfigFiles = \"http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=%s;hb=HEAD\"",
          "",
          "[Added Lines]",
          "3: ConfigFiles = \"http://gcc.gnu.org/git/?p=gcc.git;a=blob_plain;f=%s;hb=HEAD\"",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 1",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-01-06\"",
          "3: #define RUBY_PATCHLEVEL 277",
          "7: #define RUBY_RELEASE_DAY 6",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-01-07\"",
          "3: #define RUBY_PATCHLEVEL 278",
          "7: #define RUBY_RELEASE_DAY 7",
          "",
          "---------------"
        ]
      }
    }
  ]
}