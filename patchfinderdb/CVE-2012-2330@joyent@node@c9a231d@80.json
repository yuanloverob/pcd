{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7d2e68fdbde04b683242d82c26b8cf1d47407729",
      "candidate_info": {
        "commit_hash": "7d2e68fdbde04b683242d82c26b8cf1d47407729",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7d2e68fdbde04b683242d82c26b8cf1d47407729",
        "files": [
          "src/stream_wrap.cc",
          "src/stream_wrap.h"
        ],
        "message": "stream_wrap: fix compilation errors",
        "before_after_code_files": [
          "src/stream_wrap.cc||src/stream_wrap.cc",
          "src/stream_wrap.h||src/stream_wrap.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/stream_wrap.cc||src/stream_wrap.cc": [
          "File: src/stream_wrap.cc -> src/stream_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #include \"req_wrap.h\"",
          "31: #include <stdlib.h> // abort()",
          "33: #define SLAB_SIZE (1024 * 1024)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: #include <limits.h> // INT_MAX",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "293: }",
          "302: template <WriteEncoding encoding>",
          "303: Handle<Value> StreamWrap::WriteStringImpl(const Arguments& args) {",
          "304:   HandleScope scope;",
          "",
          "[Removed Lines]",
          "296: enum WriteEncoding {",
          "297:   kAscii,",
          "298:   kUtf8,",
          "299:   kUcs2",
          "300: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/stream_wrap.h||src/stream_wrap.h": [
          "File: src/stream_wrap.h -> src/stream_wrap.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: namespace node {",
          "31: class StreamWrap : public HandleWrap {",
          "32:  public:",
          "33:   uv_stream_t* GetStream() { return stream_; }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: enum WriteEncoding {",
          "33:   kAscii,",
          "34:   kUtf8,",
          "35:   kUcs2",
          "36: };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "74c8041fb6d781981e5f7e58167dd4ac3c487a7d",
      "candidate_info": {
        "commit_hash": "74c8041fb6d781981e5f7e58167dd4ac3c487a7d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/74c8041fb6d781981e5f7e58167dd4ac3c487a7d",
        "files": [
          "test/pummel/test-child-process-spawn-loop.js"
        ],
        "message": "test-child-process-spawn-loop: make it pass on Windows.\n\nIt wasn't waiting for the child process' stderr to close, so not an\nassertion was made *before* all the data that the child process sent\nwas received by node.",
        "before_after_code_files": [
          "test/pummel/test-child-process-spawn-loop.js||test/pummel/test-child-process-spawn-loop.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/pummel/test-child-process-spawn-loop.js||test/pummel/test-child-process-spawn-loop.js": [
          "File: test/pummel/test-child-process-spawn-loop.js -> test/pummel/test-child-process-spawn-loop.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     console.log('stderr: ' + chunk);",
          "47:   });",
          "51:     assert.equal(SIZE + (is_windows ? 2 : 1), count);",
          "52:     if (i < N) {",
          "",
          "[Removed Lines]",
          "49:   child.on('exit', function() {",
          "",
          "[Added Lines]",
          "49:   child.on('close', function() {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "744ed46970ad2acd25b7e8539578b856ec35383a",
      "candidate_info": {
        "commit_hash": "744ed46970ad2acd25b7e8539578b856ec35383a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/744ed46970ad2acd25b7e8539578b856ec35383a",
        "files": [
          "lib/repl.js"
        ],
        "message": "repl: fix repl.start not passing the `ignoreUndefined` arg to the REPLServer constructor",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "252:   if (!exports.repl) exports.repl = repl;",
          "253:   return repl;",
          "254: };",
          "",
          "[Removed Lines]",
          "250: exports.start = function(prompt, source, eval, useGlobal) {",
          "251:   var repl = new REPLServer(prompt, source, eval, useGlobal);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4f46ee440005676b2724f41dfba3e81aa66d0d73",
      "candidate_info": {
        "commit_hash": "4f46ee440005676b2724f41dfba3e81aa66d0d73",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4f46ee440005676b2724f41dfba3e81aa66d0d73",
        "files": [
          "src/node.cc",
          "src/node_isolate.cc",
          "src/node_isolate.h"
        ],
        "message": "Add link-list of all isolates",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "src/node_isolate.cc||src/node_isolate.cc",
          "src/node_isolate.h||src/node_isolate.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1894:   Isolate* isolate = Isolate::New();",
          "1896:   StartThread(isolate, ti->argc_, ti->argv_);",
          "1897:   delete ti;",
          "1898: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1897:   isolate->Dispose();",
          "1900:   delete isolate;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1927: }",
          "1930: static Handle<Value> JoinIsolate(const Arguments& args) {",
          "1931:   HandleScope scope;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1933: static Handle<Value> CountIsolate(const Arguments& args) {",
          "1934:   HandleScope scope;",
          "1935:   return scope.Close(Integer::New(Isolate::Count()));",
          "1936: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2218:   NODE_SET_METHOD(process, \"binding\", Binding);",
          "2220:   NODE_SET_METHOD(process, \"_newIsolate\", NewIsolate);",
          "2221:   NODE_SET_METHOD(process, \"_joinIsolate\", JoinIsolate);",
          "2223:   return process;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2230:   NODE_SET_METHOD(process, \"_countIsolate\", CountIsolate);",
          "",
          "---------------"
        ],
        "src/node_isolate.cc||src/node_isolate.cc": [
          "File: src/node_isolate.cc -> src/node_isolate.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: namespace node {",
          "32: static volatile bool initialized;",
          "33: static volatile int id;",
          "36: void Isolate::Initialize() {",
          "37:   if (!initialized) {",
          "38:     initialized = true;",
          "40:   }",
          "41: }",
          "",
          "[Removed Lines]",
          "34: static uv_mutex_t id_lock;",
          "39:     if (uv_mutex_init(&id_lock)) abort();",
          "",
          "[Added Lines]",
          "35: static volatile int isolate_count;",
          "36: static uv_mutex_t list_lock;",
          "37: static ngx_queue_t list_head;",
          "43:     if (uv_mutex_init(&list_lock)) abort();",
          "44:     ngx_queue_init(&list_head);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46: }",
          "49: Isolate::Isolate() {",
          "50:   assert(initialized && \"node::Isolate::Initialize() hasn't been called\");",
          "53:   id_ = ++id;",
          "56:   if (id_ == 1) {",
          "57:     loop_ = uv_default_loop();",
          "",
          "[Removed Lines]",
          "52:   uv_mutex_lock(&id_lock);",
          "54:   uv_mutex_unlock(&id_lock);",
          "",
          "[Added Lines]",
          "54: int Isolate::Count() {",
          "55:   return isolate_count;",
          "56: }",
          "60:   uv_mutex_lock(&list_lock);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:   ngx_queue_init(&at_exit_callbacks_);",
          "64:   v8_isolate_ = v8::Isolate::GetCurrent();",
          "65:   if (v8_isolate_ == NULL) {",
          "66:     v8_isolate_ = v8::Isolate::New();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:   ngx_queue_init(&list_member_);",
          "77:   ngx_queue_insert_tail(&list_head, &list_member_);",
          "78:   isolate_count++;",
          "80:   uv_mutex_unlock(&list_lock);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97: void Isolate::Dispose() {",
          "98:   struct AtExitCallbackInfo* it;",
          "99:   ngx_queue_t* q;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:   uv_mutex_lock(&list_lock);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "115:   v8_isolate_->Exit();",
          "116:   v8_isolate_->Dispose();",
          "117:   v8_isolate_ = NULL;",
          "118: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:   ngx_queue_remove(&list_member_);",
          "140:   isolate_count--;",
          "141:   assert(isolate_count >= 0);",
          "142:   assert(isolate_count > 0 || ngx_queue_empty(&list_head));",
          "144:   uv_mutex_unlock(&list_lock);",
          "",
          "---------------"
        ],
        "src/node_isolate.h||src/node_isolate.h": [
          "File: src/node_isolate.h -> src/node_isolate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: public:",
          "47:   static void Initialize();",
          "49:   typedef void (*AtExitCallback)(void* arg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:   static int Count();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:   v8::Isolate* v8_isolate_;",
          "96:   uv_loop_t* loop_;",
          "99:   struct globals globals_;",
          "100: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:   ngx_queue_t list_member_;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aef62a03ee27ffb149950df5caccc2b4965169d8",
      "candidate_info": {
        "commit_hash": "aef62a03ee27ffb149950df5caccc2b4965169d8",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/aef62a03ee27ffb149950df5caccc2b4965169d8",
        "files": [
          "test/simple/test-dgram-multicast-multi-process.js"
        ],
        "message": "test: join multicast group *after* binding",
        "before_after_code_files": [
          "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js": [
          "File: test/simple/test-dgram-multicast-multi-process.js -> test/simple/test-dgram-multicast-multi-process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:   var receivedMessages = [];",
          "130:   var listenSocket = dgram.createSocket('udp4');",
          "134:   listenSocket.on('message', function(buf, rinfo) {",
          "135:     console.error('%s received %s from %j', process.pid",
          "136:                 ,util.inspect(buf.toString()), rinfo);",
          "",
          "[Removed Lines]",
          "132:   listenSocket.addMembership(LOCAL_BROADCAST_HOST);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:   });",
          "159:   listenSocket.bind(common.PORT);",
          "160: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:   listenSocket.addMembership(LOCAL_BROADCAST_HOST);",
          "",
          "---------------"
        ]
      }
    }
  ]
}