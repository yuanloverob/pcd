{
  "cve_id": "CVE-2021-24037",
  "cve_desc": "A use after free in hermes, while emitting certain error messages, prior to commit d86e185e485b6330216dee8e854455c694e3a36e allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
  "repo": "facebook/hermes",
  "patch_hash": "d86e185e485b6330216dee8e854455c694e3a36e",
  "patch_info": {
    "commit_hash": "d86e185e485b6330216dee8e854455c694e3a36e",
    "repo": "facebook/hermes",
    "commit_url": "https://github.com/facebook/hermes/commit/d86e185e485b6330216dee8e854455c694e3a36e",
    "files": [
      "include/hermes/VM/StringView.h",
      "lib/VM/Interpreter.cpp"
    ],
    "message": "Fix a bug in transient object property assignment and getUTF16Ref\n\nSummary:\nThe returned `UTF16Ref` from `StringView::getUTF16Ref` can be invalidated by\nappending more contents to the same allocator.\nThis case was encountered in `transientObjectPutErrorMessage`, resulting in\nusing free'd memory.\n\nReviewed By: tmikov\n\nDifferential Revision: D23034855\n\nfbshipit-source-id: 4c25a5369934bf3bdfc5582385503f4b87de3792",
    "before_after_code_files": [
      "include/hermes/VM/StringView.h||include/hermes/VM/StringView.h",
      "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp"
    ]
  },
  "patch_diff": {
    "include/hermes/VM/StringView.h||include/hermes/VM/StringView.h": [
      "File: include/hermes/VM/StringView.h -> include/hermes/VM/StringView.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "324:   UTF16Ref getUTF16Ref(llvh::SmallVectorImpl<char16_t> &allocator) const {",
      "325:     return getUTF16Ref(allocator, false);",
      "326:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "324:     assert(allocator.empty() && \"Shouldn't use a non-empty allocator\");",
      "",
      "---------------"
    ],
    "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp": [
      "File: lib/VM/Interpreter.cpp -> lib/VM/Interpreter.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "445:   StringView valueAsStringPrintable =",
      "446:       StringPrimitive::createStringView(runtime, valueAsString);",
      "449:   return runtime->raiseTypeError(",
      "450:       TwineChar16(\"Cannot create property '\") + propName + \"' on \" +",
      "453: }",
      "455: ExecutionStatus Interpreter::putByIdTransient_RJS(",
      "",
      "[Removed Lines]",
      "448:   SmallU16String<32> tmp;",
      "451:       baseTypeAsString.getUTF16Ref(tmp) + \" '\" +",
      "452:       valueAsStringPrintable.getUTF16Ref(tmp) + \"'\");",
      "",
      "[Added Lines]",
      "448:   SmallU16String<32> tmp1;",
      "449:   SmallU16String<32> tmp2;",
      "452:       baseTypeAsString.getUTF16Ref(tmp1) + \" '\" +",
      "453:       valueAsStringPrintable.getUTF16Ref(tmp2) + \"'\");",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0c29003b140073551a5f24580d1f49706dcb41d2",
      "candidate_info": {
        "commit_hash": "0c29003b140073551a5f24580d1f49706dcb41d2",
        "repo": "facebook/hermes",
        "commit_url": "https://github.com/facebook/hermes/commit/0c29003b140073551a5f24580d1f49706dcb41d2",
        "files": [
          "lib/VM/Interpreter.cpp",
          "test/hermes/error_messages.js"
        ],
        "message": "Improve transient object error message\n\nSummary:\nPutting a property on a non-object didn't give a great error message that\nmade it obvious what the problem was.\nImprove the error message to mention the property getting created, the type of the\nproperty holder, and the toString value of the property holder.\n\nReviewed By: avp\n\nDifferential Revision: D20120455\n\nfbshipit-source-id: 90336b8f4c8877c151cea3d9d0ab16f7ec646dff",
        "before_after_code_files": [
          "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp",
          "test/hermes/error_messages.js||test/hermes/error_messages.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp"
          ],
          "candidate": [
            "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp"
          ]
        }
      },
      "candidate_diff": {
        "lib/VM/Interpreter.cpp||lib/VM/Interpreter.cpp": [
          "File: lib/VM/Interpreter.cpp -> lib/VM/Interpreter.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #include \"hermes/VM/RuntimeModule-inline.h\"",
          "29: #include \"hermes/VM/StackFrame-inline.h\"",
          "30: #include \"hermes/VM/StringPrimitive.h\"",
          "32: #include \"llvm/ADT/SmallSet.h\"",
          "33: #include \"llvm/Support/Debug.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: #include \"hermes/VM/StringView.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "415:       runtime->makeHandle<JSObject>(res.getValue()), runtime, name, base);",
          "416: }",
          "418: ExecutionStatus Interpreter::putByIdTransient_RJS(",
          "419:     Runtime *runtime,",
          "420:     Handle<> base,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "419: static ExecutionStatus",
          "420: transientObjectPutErrorMessage(Runtime *runtime, Handle<> base, SymbolID id) {",
          "423:   StringView propName =",
          "424:       runtime->getIdentifierTable().getStringView(runtime, id);",
          "425:   Handle<StringPrimitive> baseType =",
          "426:       runtime->makeHandle(vmcast<StringPrimitive>(typeOf(runtime, base)));",
          "427:   StringView baseTypeAsString =",
          "428:       StringPrimitive::createStringView(runtime, baseType);",
          "429:   MutableHandle<StringPrimitive> valueAsString{runtime};",
          "430:   if (base->isSymbol()) {",
          "432:     auto str = symbolDescriptiveString(runtime, Handle<SymbolID>::vmcast(base));",
          "433:     if (str != ExecutionStatus::EXCEPTION) {",
          "434:       valueAsString = *str;",
          "435:     } else {",
          "436:       runtime->clearThrownValue();",
          "437:       valueAsString = StringPrimitive::createNoThrow(",
          "438:           runtime, \"<<Exception occurred getting the value>>\");",
          "439:     }",
          "440:   } else {",
          "441:     auto str = toString_RJS(runtime, base);",
          "442:     assert(",
          "443:         str != ExecutionStatus::EXCEPTION &&",
          "444:         \"Primitives should be convertible to string without exceptions\");",
          "445:     valueAsString = std::move(*str);",
          "446:   }",
          "447:   StringView valueAsStringPrintable =",
          "448:       StringPrimitive::createStringView(runtime, valueAsString);",
          "450:   SmallU16String<32> tmp;",
          "451:   return runtime->raiseTypeError(",
          "452:       TwineChar16(\"Cannot create property '\") + propName + \"' on \" +",
          "453:       baseTypeAsString.getUTF16Ref(tmp) + \" '\" +",
          "454:       valueAsStringPrintable.getUTF16Ref(tmp) + \"'\");",
          "455: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "445:       (propObj != O.get() &&",
          "446:        (!desc.flags.accessor && !desc.flags.proxyObject))) {",
          "447:     if (strictMode) {",
          "450:     }",
          "451:     return ExecutionStatus::RETURNED;",
          "452:   }",
          "",
          "[Removed Lines]",
          "448:       return runtime->raiseTypeError(",
          "449:           \"Cannot create a new property on a transient object\");",
          "",
          "[Added Lines]",
          "487:       return transientObjectPutErrorMessage(runtime, base, id);",
          "",
          "---------------"
        ],
        "test/hermes/error_messages.js||test/hermes/error_messages.js": [
          "File: test/hermes/error_messages.js -> test/hermes/error_messages.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: (function strict() {",
          "40:   'use strict';",
          "41:   try {",
          "42:     'hello'.x = 2;",
          "43:   } catch (e) {",
          "44:     print(e);",
          "45:   }",
          "48:   try {",
          "49:     (2).y = 'hello';",
          "50:   } catch (e) {",
          "51:     print(e);",
          "52:   }",
          "55:   try {",
          "56:     Symbol.iterator.z = undefined;",
          "57:   } catch (e) {",
          "58:     print(e);",
          "59:   }",
          "61: })();",
          "",
          "---------------"
        ]
      }
    }
  ]
}