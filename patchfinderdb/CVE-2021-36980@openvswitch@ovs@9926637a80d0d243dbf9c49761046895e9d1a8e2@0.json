{
  "cve_id": "CVE-2021-36980",
  "cve_desc": "Open vSwitch (aka openvswitch) 2.11.0 through 2.15.0 has a use-after-free in decode_NXAST_RAW_ENCAP (called from ofpact_decode and ofpacts_decode) during the decoding of a RAW_ENCAP action.",
  "repo": "openvswitch/ovs",
  "patch_hash": "9926637a80d0d243dbf9c49761046895e9d1a8e2",
  "patch_info": {
    "commit_hash": "9926637a80d0d243dbf9c49761046895e9d1a8e2",
    "repo": "openvswitch/ovs",
    "commit_url": "https://github.com/openvswitch/ovs/commit/9926637a80d0d243dbf9c49761046895e9d1a8e2",
    "files": [
      "lib/ofp-actions.c",
      "tests/automake.mk",
      "tests/fuzz-regression-list.at",
      "tests/fuzz-regression/ofp_print_fuzzer-6540965472632832"
    ],
    "message": "ofp-actions: Fix use-after-free while decoding RAW_ENCAP.\n\nWhile decoding RAW_ENCAP action, decode_ed_prop() might re-allocate\nofpbuf if there is no enough space left.  However, function\n'decode_NXAST_RAW_ENCAP' continues to use old pointer to 'encap'\nstructure leading to write-after-free and incorrect decoding.\n\n  ==3549105==ERROR: AddressSanitizer: heap-use-after-free on address\n  0x60600000011a at pc 0x0000005f6cc6 bp 0x7ffc3a2d4410 sp 0x7ffc3a2d4408\n  WRITE of size 2 at 0x60600000011a thread T0\n    #0 0x5f6cc5 in decode_NXAST_RAW_ENCAP lib/ofp-actions.c:4461:20\n    #1 0x5f0551 in ofpact_decode ./lib/ofp-actions.inc2:4777:16\n    #2 0x5ed17c in ofpacts_decode lib/ofp-actions.c:7752:21\n    #3 0x5eba9a in ofpacts_pull_openflow_actions__ lib/ofp-actions.c:7791:13\n    #4 0x5eb9fc in ofpacts_pull_openflow_actions lib/ofp-actions.c:7835:12\n    #5 0x64bb8b in ofputil_decode_packet_out lib/ofp-packet.c:1113:17\n    #6 0x65b6f4 in ofp_print_packet_out lib/ofp-print.c:148:13\n    #7 0x659e3f in ofp_to_string__ lib/ofp-print.c:1029:16\n    #8 0x659b24 in ofp_to_string lib/ofp-print.c:1244:21\n    #9 0x65a28c in ofp_print lib/ofp-print.c:1288:28\n    #10 0x540d11 in ofctl_ofp_parse utilities/ovs-ofctl.c:2814:9\n    #11 0x564228 in ovs_cmdl_run_command__ lib/command-line.c:247:17\n    #12 0x56408a in ovs_cmdl_run_command lib/command-line.c:278:5\n    #13 0x5391ae in main utilities/ovs-ofctl.c:179:9\n    #14 0x7f6911ce9081 in __libc_start_main (/lib64/libc.so.6+0x27081)\n    #15 0x461fed in _start (utilities/ovs-ofctl+0x461fed)\n\nFix that by getting a new pointer before using.\n\nCredit to OSS-Fuzz.\n\nFuzzer regression test will fail only with AddressSanitizer enabled.\n\nReported-at: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=27851\nFixes: f839892a206a (\"OF support and translation of generic encap and decap\")\nAcked-by: William Tu <u9012063@gmail.com>\nSigned-off-by: Ilya Maximets <i.maximets@ovn.org>",
    "before_after_code_files": [
      "lib/ofp-actions.c||lib/ofp-actions.c",
      "tests/automake.mk||tests/automake.mk",
      "tests/fuzz-regression-list.at||tests/fuzz-regression-list.at"
    ]
  },
  "patch_diff": {
    "lib/ofp-actions.c||lib/ofp-actions.c": [
      "File: lib/ofp-actions.c -> lib/ofp-actions.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4346:     ds_put_format(fp->s, \"%s)%s\", colors.paren, colors.end);",
      "4347: }",
      "4350: static enum ofperr",
      "4351: check_FIN_TIMEOUT(const struct ofpact_fin_timeout *a OVS_UNUSED,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4373: static enum ofperr",
      "4374: decode_NXAST_RAW_ENCAP(const struct nx_action_encap *nae,",
      "4375:                        enum ofp_version ofp_version OVS_UNUSED,",
      "4376:                        struct ofpbuf *out)",
      "4377: {",
      "4378:     struct ofpact_encap *encap;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4377: {",
      "",
      "---------------"
    ],
    "tests/automake.mk||tests/automake.mk": [
      "File: tests/automake.mk -> tests/automake.mk",
      "--- Hunk 1 ---",
      "[Context before]",
      "139:  tests/fuzz-regression/ofp_print_fuzzer-5722747668791296 \\",
      "140:  tests/fuzz-regression/ofp_print_fuzzer-6285128790704128 \\",
      "141:  tests/fuzz-regression/ofp_print_fuzzer-6470117922701312 \\",
      "143: $(srcdir)/tests/fuzz-regression-list.at: tests/automake.mk",
      "144:  $(AM_V_GEN)for name in $(FUZZ_REGRESSION_TESTS); do \\",
      "145:             basename=`echo $$name | sed 's,^.*/,,'`; \\",
      "",
      "[Removed Lines]",
      "142:  tests/fuzz-regression/ofp_print_fuzzer-6502620041576448",
      "",
      "[Added Lines]",
      "142:  tests/fuzz-regression/ofp_print_fuzzer-6502620041576448 \\",
      "143:  tests/fuzz-regression/ofp_print_fuzzer-6540965472632832",
      "",
      "---------------"
    ],
    "tests/fuzz-regression-list.at||tests/fuzz-regression-list.at": [
      "File: tests/fuzz-regression-list.at -> tests/fuzz-regression-list.at",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: TEST_FUZZ_REGRESSION([ofp_print_fuzzer-6285128790704128])",
      "22: TEST_FUZZ_REGRESSION([ofp_print_fuzzer-6470117922701312])",
      "23: TEST_FUZZ_REGRESSION([ofp_print_fuzzer-6502620041576448])",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24: TEST_FUZZ_REGRESSION([ofp_print_fuzzer-6540965472632832])",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5aea50cd22ac3e53432cebdfec6b3ce2bb0df9d4",
      "candidate_info": {
        "commit_hash": "5aea50cd22ac3e53432cebdfec6b3ce2bb0df9d4",
        "repo": "openvswitch/ovs",
        "commit_url": "https://github.com/openvswitch/ovs/commit/5aea50cd22ac3e53432cebdfec6b3ce2bb0df9d4",
        "files": [
          "lib/dpif-netdev.c"
        ],
        "message": "dpif-netdev: Fix use-after-free on PACKET_OUT of IP fragments.\n\nIP fragmentation engine may not only steal the packet but also add\nmore.  For example, after receiving the last fragment, it will\nadd all previous fragments to a batch.  Unfortunately, it will also\nfree the original last fragment and replace it with a copy.\nThis invalidates the 'packet_clone' pointer in the dpif_netdev_execute()\nleading to the use-after-free:\n\n==3525086==ERROR: AddressSanitizer: heap-use-after-free on\n                  address 0x61600020439c at pc 0x000000688a6d\nREAD of size 1 at 0x61600020439c thread T0\n    #0 0x688a6c in dp_packet_swap ./lib/dp-packet.h:265:5\n    #1 0x68781d in dpif_netdev_execute lib/dpif-netdev.c:4103:9\n    #2 0x6675db in dpif_netdev_operate lib/dpif-netdev.c:4129:25\n    #3 0x691e5e in dpif_operate lib/dpif.c:1367:13\n    #4 0x692909 in dpif_execute lib/dpif.c:1321:9\n    #5 0x5b19c6 in packet_execute ofproto/ofproto-dpif.c:4991:5\n    #6 0x5a2861 in ofproto_packet_out_finish ofproto/ofproto.c:3662:5\n    #7 0x5a65c6 in do_bundle_commit ofproto/ofproto.c:8270:13\n    #8 0x5a0cae in handle_bundle_control ofproto/ofproto.c:8309:17\n    #9 0x59a476 in handle_single_part_openflow ofproto/ofproto.c:8593:16\n    #10 0x5877ac in handle_openflow ofproto/ofproto.c:8674:21\n    #11 0x6296f1 in ofconn_run ofproto/connmgr.c:1329:13\n    #12 0x62925d in connmgr_run ofproto/connmgr.c:356:9\n    #13 0x586904 in ofproto_run ofproto/ofproto.c:1879:5\n    #14 0x55c830 in bridge_run__ vswitchd/bridge.c:3251:9\n    #15 0x55c015 in bridge_run vswitchd/bridge.c:3310:5\n    #16 0x575f31 in main vswitchd/ovs-vswitchd.c:127:9\n    #17 0x7f01099d3492 in __libc_start_main (/lib64/libc.so.6+0x23492)\n    #18 0x47d96d in _start (vswitchd/ovs-vswitchd+0x47d96d)\n\n0x61600020439c is located 28 bytes inside of 560-byte region\nfreed by thread T0 here:\n    #0 0x5177a8 in free (vswitchd/ovs-vswitchd+0x5177a8)\n    #1 0x6b17b6 in dp_packet_delete ./lib/dp-packet.h:256:9\n    #2 0x6afeee in ipf_extract_frags_from_batch lib/ipf.c:947:17\n    #3 0x6afd63 in ipf_preprocess_conntrack lib/ipf.c:1232:9\n    #4 0x946b2c in conntrack_execute lib/conntrack.c:1446:5\n    #5 0x67e3ed in dp_execute_cb lib/dpif-netdev.c:8277:9\n    #6 0x7097d7 in odp_execute_actions lib/odp-execute.c:865:17\n    #7 0x66409e in dp_netdev_execute_actions lib/dpif-netdev.c:8322:5\n    #8 0x6877ad in dpif_netdev_execute lib/dpif-netdev.c:4090:5\n    #9 0x6675db in dpif_netdev_operate lib/dpif-netdev.c:4129:25\n    #10 0x691e5e in dpif_operate lib/dpif.c:1367:13\n    #11 0x692909 in dpif_execute lib/dpif.c:1321:9\n    #12 0x5b19c6 in packet_execute ofproto/ofproto-dpif.c:4991:5\n    #13 0x5a2861 in ofproto_packet_out_finish ofproto/ofproto.c:3662:5\n    #14 0x5a65c6 in do_bundle_commit ofproto/ofproto.c:8270:13\n    #15 0x5a0cae in handle_bundle_control ofproto/ofproto.c:8309:17\n    #16 0x59a476 in handle_single_part_openflow ofproto/ofproto.c:8593:16\n    #17 0x5877ac in handle_openflow ofproto/ofproto.c:8674:21\n    #18 0x6296f1 in ofconn_run ofproto/connmgr.c:1329:13\n    #19 0x62925d in connmgr_run ofproto/connmgr.c:356:9\n    #20 0x586904 in ofproto_run ofproto/ofproto.c:1879:5\n    #21 0x55c830 in bridge_run__ vswitchd/bridge.c:3251:9\n    #22 0x55c015 in bridge_run vswitchd/bridge.c:3310:5\n    #23 0x575f31 in main vswitchd/ovs-vswitchd.c:127:9\n    #24 0x7f01099d3492 in __libc_start_main (/lib64/libc.so.6+0x23492)\n\nThe issue can be reproduced with system-userspace testsuite on the\n'conntrack - IPv4 fragmentation with fragments specified' test.\nPreviously, there was a leak inside the IP fragmentation module that\nkept the original segment, so 'packet_clone' remained a valid pointer.\nBut commit 803ed12e31b0 (\"ipf: release unhandled packets from the batch\")\nfixed the leak leading to use-after-free.\n\nUsing the packet from a batch instead of 'packet_clone' to swap packet\ncontent to avoid the issue.\n\nWhile investigating this problem, more issues uncovered.  One of them\nis that IP fragmentation engine can add more packets to the batch, but\nthere is no way to get them to a caller.  Adding an extra branch for\nthis case with a 'FIXME' comment in order to highlight the issue.\n\nAnother one is that IP fragmentation engine will keep only 32 fragments\ndropping all other fragments while refilling a batch, but that should\nbe fixed separately.\n\nFixes: 7e6b41ac8d9d (\"dpif-netdev: Fix crash when PACKET_OUT is metered.\")\nSigned-off-by: Ilya Maximets <i.maximets@ovn.org>\nAcked-by: Aaron Conole <aconole@redhat.com>",
        "before_after_code_files": [
          "lib/dpif-netdev.c||lib/dpif-netdev.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/dpif-netdev.c||lib/dpif-netdev.c": [
          "File: lib/dpif-netdev.c -> lib/dpif-netdev.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3759:     if (pmd->core_id == NON_PMD_CORE_ID) {",
          "3760:         ovs_mutex_unlock(&dp->non_pmd_mutex);",
          "3762:     }",
          "3764:     if (dp_packet_batch_size(&pp)) {",
          "3768:         dp_packet_swap(execute->packet, packet_clone);",
          "",
          "[Removed Lines]",
          "3761:         dp_netdev_pmd_unref(pmd);",
          "",
          "[Added Lines]",
          "3761:         dp_netdev_pmd_unref(pmd);",
          "3770:         dp_packet_swap(execute->packet, pp.packets[0]);",
          "3771:         dp_packet_delete_batch(&pp, true);",
          "3772:     } else if (dp_packet_batch_size(&pp)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94cfdef8d4a5c6d1e27e0a9ceedc965f64964f42",
      "candidate_info": {
        "commit_hash": "94cfdef8d4a5c6d1e27e0a9ceedc965f64964f42",
        "repo": "openvswitch/ovs",
        "commit_url": "https://github.com/openvswitch/ovs/commit/94cfdef8d4a5c6d1e27e0a9ceedc965f64964f42",
        "files": [
          "lib/ovsdb-idl.c",
          "tests/idltest.ovsschema",
          "tests/ovsdb-idl.at",
          "tests/test-ovsdb.c"
        ],
        "message": "ovsdb-idl: Fix iteration over tracked rows with no actual data.\n\nWhen idl removes orphan rows, those rows are inserted into the\n'track_list'.  This allows iterators such as *_FOR_EACH_TRACKED () to\nreturn orphan rows that never had any data to the IDL user.  In this\ncase, it is difficult for the user to understand whether it is a row\nwith no data (there was no \"insert\" / \"modify\" for this row) or it is\na row with zero data (columns were cleared by DB transaction).\n\nThe main problem with this condition is that rows without data will\nhave NULL pointers instead of references that should be there according\nto the database schema.  For example, ovn-controller might crash:\n\n ERROR: AddressSanitizer: SEGV on unknown address 0x000000000100\n       (pc 0x00000055e9b2 bp 0x7ffef6180880 sp 0x7ffef6180860 T0)\n The signal is caused by a READ memory access.\n Hint: address points to the zero page.\n    #0 0x55e9b1 in handle_deleted_lport /controller/binding.c\n    #1 0x55e903 in handle_deleted_vif_lport /controller/binding.c:2072:5\n    #2 0x55e059 in binding_handle_port_binding_changes /controller/binding.c:2155:23\n    #3 0x5a6395 in runtime_data_sb_port_binding_handler /controller/ovn-controller.c:1454:10\n    #4 0x5e15b3 in engine_compute /lib/inc-proc-eng.c:306:18\n    #5 0x5e0faf in engine_run_node /lib/inc-proc-eng.c:352:14\n    #6 0x5e0e04 in engine_run /lib/inc-proc-eng.c:377:9\n    #7 0x5a03de in main /controller/ovn-controller.c\n    #8 0x7f4fd9c991a2 in __libc_start_main (/lib64/libc.so.6+0x271a2)\n    #9 0x483f0d in _start (/controller/ovn-controller+0x483f0d)\n\nIt doesn't make much sense to return non-real rows to the user, so it's\nbest to exclude them from iteration.\n\nTest included.  Without the fix, provided test will print empty orphan\nrows that was never received by idl as tracked changes.\n\nFixes: 932104f483ef (\"ovsdb-idl: Add support for change tracking.\")\nSigned-off-by: Ilya Maximets <i.maximets@ovn.org>\nAcked-by: Dumitru Ceara <dceara@redhat.com>",
        "before_after_code_files": [
          "lib/ovsdb-idl.c||lib/ovsdb-idl.c",
          "tests/idltest.ovsschema||tests/idltest.ovsschema",
          "tests/ovsdb-idl.at||tests/ovsdb-idl.at",
          "tests/test-ovsdb.c||tests/test-ovsdb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/ovsdb-idl.c||lib/ovsdb-idl.c": [
          "File: lib/ovsdb-idl.c -> lib/ovsdb-idl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1875:             return true;",
          "1876:         }",
          "1877:     }",
          "1878:    return false;",
          "1879: }",
          "1883: const struct ovsdb_idl_row *",
          "1884: ovsdb_idl_track_get_first(const struct ovsdb_idl *idl,",
          "1885:                           const struct ovsdb_idl_table_class *table_class)",
          "1888:         = ovsdb_idl_db_table_from_class(&idl->data, table_class);",
          "1890:     if (!ovs_list_is_empty(&table->track_list)) {",
          "1891:         return CONTAINER_OF(ovs_list_front(&table->track_list), struct ovsdb_idl_row, track_node);",
          "1892:     }",
          "1893:     return NULL;",
          "1894: }",
          "1900: {",
          "1901:     if (row->track_node.next != &row->table->track_list) {",
          "1902:         return CONTAINER_OF(row->track_node.next, struct ovsdb_idl_row, track_node);",
          "1903:     }",
          "",
          "[Removed Lines]",
          "1886: {",
          "1887:     struct ovsdb_idl_table *table",
          "1898: const struct ovsdb_idl_row *",
          "1899: ovsdb_idl_track_get_next(const struct ovsdb_idl_row *row)",
          "",
          "[Added Lines]",
          "1886:                           const struct ovsdb_idl_table_class *table_class)",
          "1888:     struct ovsdb_idl_table *table",
          "1889:         = ovsdb_idl_db_table_from_class(&idl->data, table_class);",
          "1890:     struct ovsdb_idl_row *row;",
          "1904: ovsdb_idl_track_get_next(const struct ovsdb_idl_row *row)",
          "1905: {",
          "1906:     struct ovsdb_idl_table *table = row->table;",
          "1908:     LIST_FOR_EACH_CONTINUE (row, track_node, &table->track_list) {",
          "",
          "---------------"
        ],
        "tests/idltest.ovsschema||tests/idltest.ovsschema": [
          "File: tests/idltest.ovsschema -> tests/idltest.ovsschema",
          "--- Hunk 1 ---",
          "[Context before]",
          "195:       },",
          "196:       \"isRoot\": true",
          "197:     },",
          "198:     \"singleton\" : {",
          "199:       \"columns\" : {",
          "200:         \"name\" : {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198:     \"simple6\": {",
          "199:       \"columns\" : {",
          "200:         \"name\": {\"type\": \"string\"},",
          "201:         \"weak_ref\": {",
          "202:           \"type\": {",
          "203:             \"key\": {\"type\": \"uuid\",",
          "204:                     \"refTable\": \"simple\",",
          "205:                     \"refType\": \"weak\"},",
          "206:             \"min\": 0,",
          "207:             \"max\": \"unlimited\"",
          "208:           }",
          "209:         }",
          "210:       },",
          "211:       \"isRoot\": true",
          "212:     },",
          "",
          "---------------"
        ],
        "tests/ovsdb-idl.at||tests/ovsdb-idl.at": [
          "File: tests/ovsdb-idl.at -> tests/ovsdb-idl.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "1030: test-ovsdb|ovsdb_idl|idltest database lacks indexed table (database needs upgrade?)",
          "1031: test-ovsdb|ovsdb_idl|idltest database lacks link2 table (database needs upgrade?)",
          "1032: test-ovsdb|ovsdb_idl|idltest database lacks simple5 table (database needs upgrade?)",
          "1033: test-ovsdb|ovsdb_idl|idltest database lacks singleton table (database needs upgrade?)",
          "1034: test-ovsdb|ovsdb_idl|link1 table in idltest database lacks l2 column (database needs upgrade?)",
          "1035: ])",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1033: test-ovsdb|ovsdb_idl|idltest database lacks simple6 table (database needs upgrade?)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1249: 003: done",
          "1250: ]])",
          "1252: OVSDB_CHECK_IDL_TRACK([track, simple idl, initially empty, various ops],",
          "1253:   [],",
          "1254:   [['[\"idltest\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1253: dnl This test creates database with weak references and checks that orphan",
          "1254: dnl rows created for weak references are not available for iteration via",
          "1255: dnl list of tracked changes.",
          "1256: OVSDB_CHECK_IDL_TRACK([track, simple idl, initially populated, orphan weak references],",
          "1257:   [['[\"idltest\",",
          "1258:       {\"op\": \"insert\",",
          "1259:        \"table\": \"simple\",",
          "1260:        \"row\": {\"s\": \"row0_s\"},",
          "1261:        \"uuid-name\": \"weak_row0\"},",
          "1262:       {\"op\": \"insert\",",
          "1263:        \"table\": \"simple\",",
          "1264:        \"row\": {\"s\": \"row1_s\"},",
          "1265:        \"uuid-name\": \"weak_row1\"},",
          "1266:       {\"op\": \"insert\",",
          "1267:        \"table\": \"simple\",",
          "1268:        \"row\": {\"s\": \"row2_s\"},",
          "1269:        \"uuid-name\": \"weak_row2\"},",
          "1270:       {\"op\": \"insert\",",
          "1271:        \"table\": \"simple6\",",
          "1272:        \"row\": {\"name\": \"first_row\",",
          "1273:                \"weak_ref\": [\"set\",",
          "1274:                              [[\"named-uuid\", \"weak_row0\"],",
          "1275:                               [\"named-uuid\", \"weak_row1\"],",
          "1276:                               [\"named-uuid\", \"weak_row2\"]]",
          "1277:                            ]}}]']],",
          "1278:   [['condition simple []' \\",
          "1279:     'condition simple [[\"s\",\"==\",\"row1_s\"]]' \\",
          "1280:     '[\"idltest\",",
          "1281:       {\"op\": \"update\",",
          "1282:       \"table\": \"simple6\",",
          "1283:       \"where\": [],",
          "1284:       \"row\": {\"name\": \"new_name\"}}]' \\",
          "1285:     '[\"idltest\",",
          "1286:       {\"op\": \"delete\",",
          "1287:       \"table\": \"simple6\",",
          "1288:       \"where\": []}]']],",
          "1289:   [[000: change conditions",
          "1290: 001: inserted row: uuid=<0>",
          "1291: 001: name=first_row weak_ref=[] uuid=<0>",
          "1292: 001: updated columns: name weak_ref",
          "1293: 002: change conditions",
          "1294: 003: i=0 r=0 b=false s=row1_s u=<1> ia=[] ra=[] ba=[] sa=[] ua=[] uuid=<2>",
          "1295: 003: inserted row: uuid=<2>",
          "1296: 003: name=first_row weak_ref=[<2>] uuid=<0>",
          "1297: 003: updated columns: s",
          "1298: 004: {\"error\":null,\"result\":[{\"count\":1}]}",
          "1299: 005: name=new_name weak_ref=[<2>] uuid=<0>",
          "1300: 005: updated columns: name",
          "1301: 006: {\"error\":null,\"result\":[{\"count\":1}]}",
          "1302: 007: i=0 r=0 b=false s=row1_s u=<1> ia=[] ra=[] ba=[] sa=[] ua=[] uuid=<2>",
          "1303: 008: done",
          "1304: ]])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1324: 010: updated columns: s",
          "1325: 011: {\"error\":null,\"result\":[{\"count\":1}]}",
          "1326: 012: deleted row: uuid=<1>",
          "1327: 013: reconnect",
          "1328: 014: i=-1 r=125 b=false s=newstring u=<5> ia=[1] ra=[1.5] ba=[false] sa=[] ua=[] uuid=<6>",
          "1329: 014: i=1 r=123.5 b=true s=mystring u=<2> ia=[1 2 3] ra=[-0.5] ba=[true] sa=[abc def] ua=[<3> <4>] uuid=<0>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1381: 012: i=0 r=123.5 b=true s=newstring u=<5> ia=[] ra=[] ba=[] sa=[] ua=[] uuid=<1>",
          "",
          "---------------"
        ],
        "tests/test-ovsdb.c||tests/test-ovsdb.c": [
          "File: tests/test-ovsdb.c -> tests/test-ovsdb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1904:     }",
          "1905:     if (updated) {",
          "1906:         printf(\"\\n\");",
          "1907:     }",
          "1908: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1907:     }",
          "1908: }",
          "1910: static void",
          "1911: print_idl_row_updated_simple6(const struct idltest_simple6 *s6, int step)",
          "1912: {",
          "1913:     size_t i;",
          "1914:     bool updated = false;",
          "1916:     for (i = 0; i < IDLTEST_SIMPLE6_N_COLUMNS; i++) {",
          "1917:         if (idltest_simple6_is_updated(s6, i)) {",
          "1918:             if (!updated) {",
          "1919:                 printf(\"%03d: updated columns:\", step);",
          "1920:                 updated = true;",
          "1921:             }",
          "1922:             printf(\" %s\", idltest_simple6_columns[i].name);",
          "1923:         }",
          "1924:     }",
          "1925:     if (updated) {",
          "1926:         printf(\"\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1991:         printf(\"%\"PRId64, l2->l1->i);",
          "1992:     }",
          "1993:     printf(\" uuid=\"UUID_FMT\"\\n\", UUID_ARGS(&l2->header_.uuid));",
          "1994:     print_idl_row_updated_link2(l2, step);",
          "1995: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2014:     print_idl_row_updated_link2(l2, step);",
          "2015: }",
          "2017: static void",
          "2018: print_idl_row_simple6(const struct idltest_simple6 *s6, int step)",
          "2019: {",
          "2020:     int i;",
          "2022:     printf(\"%03d: name=%s \", step, s6->name);",
          "2023:     printf(\"weak_ref=[\");",
          "2024:     for (i = 0; i < s6->n_weak_ref; i++) {",
          "2025:         printf(\"%s\"UUID_FMT, i ? \" \" : \"\",",
          "2026:                UUID_ARGS(&s6->weak_ref[i]->header_.uuid));",
          "2027:     }",
          "2029:     printf(\"] uuid=\"UUID_FMT\"\\n\", UUID_ARGS(&s6->header_.uuid));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2032:     }",
          "2033: }",
          "2035: static void",
          "2036: print_idl_track(struct ovsdb_idl *idl, int step)",
          "2037: {",
          "2038:     const struct idltest_simple *s;",
          "2039:     const struct idltest_link1 *l1;",
          "2040:     const struct idltest_link2 *l2;",
          "2041:     int n = 0;",
          "2043:     IDLTEST_SIMPLE_FOR_EACH_TRACKED (s, idl) {",
          "2050:                 printf(\"%03d: inserted row: uuid=\"UUID_FMT\"\\n\", step,",
          "2051:                        UUID_ARGS(&s->header_.uuid));",
          "2052:             }",
          "",
          "[Removed Lines]",
          "2044:         if (idltest_simple_is_deleted(s)) {",
          "2045:             printf(\"%03d: deleted row: uuid=\"UUID_FMT\"\\n\", step,",
          "2046:                    UUID_ARGS(&s->header_.uuid));",
          "2047:         } else {",
          "2048:             print_idl_row_simple(s, step);",
          "2049:             if (idltest_simple_is_new(s)) {",
          "",
          "[Added Lines]",
          "2071: static void",
          "2078:     int n = 0;",
          "2082:         if (idltest_simple_is_deleted(s)) {",
          "2083:             printf(\"%03d: deleted row: uuid=\"UUID_FMT\"\\n\", step,",
          "2084:                    UUID_ARGS(&s->header_.uuid));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2077:                        UUID_ARGS(&l2->header_.uuid));",
          "2078:             }",
          "2080:         }",
          "2081:         n++;",
          "2082:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2115:         }",
          "2116:         n++;",
          "2117:     }",
          "2118:     IDLTEST_SIMPLE6_FOR_EACH_TRACKED (s6, idl) {",
          "2119:         print_idl_row_simple6(s6, step);",
          "2120:         if (idltest_simple6_is_deleted(s6)) {",
          "2121:             printf(\"%03d: deleted row: uuid=\"UUID_FMT\"\\n\", step,",
          "2122:                    UUID_ARGS(&s6->header_.uuid));",
          "2123:         } else if (idltest_simple6_is_new(s6)) {",
          "2124:             printf(\"%03d: inserted row: uuid=\"UUID_FMT\"\\n\", step,",
          "2125:                    UUID_ARGS(&s6->header_.uuid));",
          "2126:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2298:     if (!strcmp(name, \"simple\")) {",
          "2299:         return &idltest_table_simple;",
          "2300:     } else if (!strcmp(name, \"link1\")) {",
          "2301:         return &idltest_table_link1;",
          "2302:     } else if (!strcmp(name, \"link2\")) {",
          "2303:         return &idltest_table_link2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2348:         return &idltest_table_link1;",
          "2349:     } else if (!strcmp(name, \"link2\")) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed16fb1be072dc2e12193ac236ff5bd5020012b2",
      "candidate_info": {
        "commit_hash": "ed16fb1be072dc2e12193ac236ff5bd5020012b2",
        "repo": "openvswitch/ovs",
        "commit_url": "https://github.com/openvswitch/ovs/commit/ed16fb1be072dc2e12193ac236ff5bd5020012b2",
        "files": [
          "lib/ofp-ed-props.c",
          "tests/ofp-actions.at"
        ],
        "message": "ofp-ed-props: Fix using uninitialized padding for NSH encap actions.\n\nOVS uses memcmp to compare actions of existing and new flows, but\n'struct ofp_ed_prop_nsh_md_type' and corresponding ofpact structure has\n3 bytes of padding that never initialized and passed around within OF\ndata structures and messages.\n\n  Uninitialized bytes in MemcmpInterceptorCommon\n    at offset 21 inside [0x7090000003f8, 136)\n  WARNING: MemorySanitizer: use-of-uninitialized-value\n    #0 0x4a184e in bcmp (vswitchd/ovs-vswitchd+0x4a184e)\n    #1 0x896c8a in ofpacts_equal lib/ofp-actions.c:9121:31\n    #2 0x564403 in replace_rule_finish ofproto/ofproto.c:5650:37\n    #3 0x563462 in add_flow_finish ofproto/ofproto.c:5218:13\n    #4 0x54a1ff in ofproto_flow_mod_finish ofproto/ofproto.c:8091:17\n    #5 0x5433b2 in handle_flow_mod__ ofproto/ofproto.c:6216:17\n    #6 0x56a2fc in handle_flow_mod ofproto/ofproto.c:6190:17\n    #7 0x565bda in handle_single_part_openflow ofproto/ofproto.c:8504:16\n    #8 0x540b25 in handle_openflow ofproto/ofproto.c:8685:21\n    #9 0x6697fd in ofconn_run ofproto/connmgr.c:1329:13\n    #10 0x668e6e in connmgr_run ofproto/connmgr.c:356:9\n    #11 0x53f1bc in ofproto_run ofproto/ofproto.c:1890:5\n    #12 0x4ead0c in bridge_run__ vswitchd/bridge.c:3250:9\n    #13 0x4e9bc8 in bridge_run vswitchd/bridge.c:3309:5\n    #14 0x51c072 in main vswitchd/ovs-vswitchd.c:127:9\n    #15 0x7f23a99011a2 in __libc_start_main (/lib64/libc.so.6)\n    #16 0x46b92d in _start (vswitchd/ovs-vswitchd+0x46b92d)\n\n  Uninitialized value was stored to memory at\n    #0 0x4745aa in __msan_memcpy.part.0 (vswitchd/ovs-vswitchd)\n    #1 0x54529f in rule_actions_create ofproto/ofproto.c:3134:5\n    #2 0x54915e in ofproto_rule_create ofproto/ofproto.c:5284:11\n    #3 0x55d419 in add_flow_init ofproto/ofproto.c:5123:17\n    #4 0x54841f in ofproto_flow_mod_init ofproto/ofproto.c:7987:17\n    #5 0x543250 in handle_flow_mod__ ofproto/ofproto.c:6206:13\n    #6 0x56a2fc in handle_flow_mod ofproto/ofproto.c:6190:17\n    #7 0x565bda in handle_single_part_openflow ofproto/ofproto.c:8504:16\n    #8 0x540b25 in handle_openflow ofproto/ofproto.c:8685:21\n    #9 0x6697fd in ofconn_run ofproto/connmgr.c:1329:13\n    #10 0x668e6e in connmgr_run ofproto/connmgr.c:356:9\n    #11 0x53f1bc in ofproto_run ofproto/ofproto.c:1890:5\n    #12 0x4ead0c in bridge_run__ vswitchd/bridge.c:3250:9\n    #13 0x4e9bc8 in bridge_run vswitchd/bridge.c:3309:5\n    #14 0x51c072 in main vswitchd/ovs-vswitchd.c:127:9\n    #15 0x7f23a99011a2 in __libc_start_main (/lib64/libc.so.6)\n\n  Uninitialized value was created by an allocation of 'ofpacts_stub'\n  in the stack frame of function 'handle_flow_mod'\n    #0 0x569e80 in handle_flow_mod ofproto/ofproto.c:6170\n\nThis could cause issues with flow modifications or other operations.\n\nTo reproduce, some NSH tests could be run under valgrind or clang\nMemorySantizer. Ex. \"nsh - md1 encap over a veth link\" test.\n\nFix that by clearing padding bytes while encoding and decoding.\nOVS will still accept OF messages with non-zero padding from\ncontrollers.\n\nNew tests added to tests/ofp-actions.at.\n\nFixes: 1fc11c5948cf (\"Generic encap and decap support for NSH\")\nSigned-off-by: Ilya Maximets <i.maximets@ovn.org>\nAcked-by: Jan Scheurich <jan.scheurich@ericsson.com>",
        "before_after_code_files": [
          "lib/ofp-ed-props.c||lib/ofp-ed-props.c",
          "tests/ofp-actions.at||tests/ofp-actions.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/ofp-ed-props.c||lib/ofp-ed-props.c": [
          "File: lib/ofp-ed-props.c -> lib/ofp-ed-props.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:                 return OFPERR_NXBAC_BAD_ED_PROP;",
          "50:             }",
          "51:             struct ofpact_ed_prop_nsh_md_type *pnmt =",
          "53:             pnmt->header.prop_class = prop_class;",
          "54:             pnmt->header.type = prop_type;",
          "55:             pnmt->header.len = len;",
          "",
          "[Removed Lines]",
          "52:                     ofpbuf_put_uninit(out, sizeof(*pnmt));",
          "",
          "[Added Lines]",
          "52:                     ofpbuf_put_zeros(out, sizeof *pnmt);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "108:             opnmt->header.len =",
          "109:                     offsetof(struct ofp_ed_prop_nsh_md_type, pad);",
          "110:             opnmt->md_type = pnmt->md_type;",
          "111:             prop_len = sizeof(*pnmt);",
          "112:             break;",
          "113:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:             memset(opnmt->pad, 0, sizeof opnmt->pad);",
          "",
          "---------------"
        ],
        "tests/ofp-actions.at||tests/ofp-actions.at": [
          "File: tests/ofp-actions.at -> tests/ofp-actions.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "766: & 00000010  00 00 00 10 00 00 00 01-",
          "767: 0019 0010 80000807 000102030405 000000000010 00000001",
          "769: ])",
          "770: sed '/^[[#&]]/d' < test-data > input.txt",
          "771: sed -n 's/^# //p; /^$/p' < test-data > expout",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "769: dnl Check NSH encap (experimenter extension).",
          "770: # actions=encap(nsh(md_type=1))",
          "771: ffff 0018 00002320 002e 0000 0001894f 0004 01 05 01 000000",
          "773: dnl NSH encap with non-zero padding.",
          "774: # actions=encap(nsh(md_type=1))",
          "775: # 21: 12 -> 00",
          "776: # 22: 34 -> 00",
          "777: # 23: 56 -> 00",
          "778: ffff 0018 00002320 002e 0000 0001894f 0004 01 05 01 123456",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "90a988b17c41d95f7f0c7372cbc3d3ece49d8227",
      "candidate_info": {
        "commit_hash": "90a988b17c41d95f7f0c7372cbc3d3ece49d8227",
        "repo": "openvswitch/ovs",
        "commit_url": "https://github.com/openvswitch/ovs/commit/90a988b17c41d95f7f0c7372cbc3d3ece49d8227",
        "files": [
          "lib/netlink.c",
          "lib/odp-util.c",
          "tests/tunnel.at"
        ],
        "message": "odp-util: Fix overflow of nested netlink attributes.\n\nLength of nested attributes must be checked before storing to the\nheader.  If current length exceeds the maximum value parsing should\nfail, otherwise the length value will be truncated leading to\ncorrupted netlink message and out-of-bound memory accesses:\n\n  ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6310002cc838\n         at pc 0x000000575470 bp 0x7ffc6c322d60 sp 0x7ffc6c322d58\n  READ of size 1 at 0x6310002cc838 thread T0\n  SCARINESS: 12 (1-byte-read-heap-buffer-overflow)\n    #0 0x57546f in format_generic_odp_key lib/odp-util.c:2738:39\n    #1 0x559e70 in check_attr_len lib/odp-util.c:3572:13\n    #2 0x56581a in format_odp_key_attr lib/odp-util.c:4392:9\n    #3 0x5563b9 in format_odp_action lib/odp-util.c:1192:9\n    #4 0x555d75 in format_odp_actions lib/odp-util.c:1279:13\n    ...\n\nFix that by checking the length of nested netlink attributes before\nupdating 'nla_len' inside the header.  Additionally introduced\nassertion inside nl_msg_end_nested() to catch this kind of issues\nbefore actual overflow happened.\n\nCredit to OSS-Fuzz.\n\nReported-at: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=20003\nFixes: 65da723b40a5 (\"odp-util: Format tunnel attributes directly from netlink.\")\nAcked-by: Flavio Leitner <fbl@sysclose.org>\nSigned-off-by: Ilya Maximets <i.maximets@ovn.org>",
        "before_after_code_files": [
          "lib/netlink.c||lib/netlink.c",
          "lib/odp-util.c||lib/odp-util.c",
          "tests/tunnel.at||tests/tunnel.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/netlink.c||lib/netlink.c": [
          "File: lib/netlink.c -> lib/netlink.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "498: nl_msg_end_nested(struct ofpbuf *msg, size_t offset)",
          "499: {",
          "500:     struct nlattr *attr = ofpbuf_at_assert(msg, offset, sizeof *attr);",
          "501:     attr->nla_len = msg->size - offset;",
          "502: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "501:     ovs_assert(!nl_attr_oversized(msg->size - offset - NLA_HDRLEN));",
          "",
          "---------------"
        ],
        "lib/odp-util.c||lib/odp-util.c": [
          "File: lib/odp-util.c -> lib/odp-util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5397:         }                                                  \\",
          "5398:         do {                                               \\",
          "5399:             len = 0;",
          "5407:         return s - start;                               \\",
          "5408:     }",
          "",
          "[Removed Lines]",
          "5401: #define SCAN_END_NESTED()                               \\",
          "5402:         SCAN_FINISH();                                  \\",
          "5403:         nl_msg_end_nested(key, key_offset);             \\",
          "5404:         if (mask) {                                     \\",
          "5405:             nl_msg_end_nested(mask, mask_offset);       \\",
          "5406:         }                                               \\",
          "",
          "[Added Lines]",
          "5401: #define SCAN_END_NESTED()                                                     \\",
          "5402:         SCAN_FINISH();                                                        \\",
          "5403:         if (nl_attr_oversized(key->size - key_offset - NLA_HDRLEN)) {         \\",
          "5404:             return -E2BIG;                                                    \\",
          "5405:         }                                                                     \\",
          "5406:         nl_msg_end_nested(key, key_offset);                                   \\",
          "5407:         if (mask) {                                                           \\",
          "5408:             nl_msg_end_nested(mask, mask_offset);                             \\",
          "5409:         }                                                                     \\",
          "",
          "---------------"
        ],
        "tests/tunnel.at||tests/tunnel.at": [
          "File: tests/tunnel.at -> tests/tunnel.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "109: OVS_VSWITCHD_STOP([\"/dropping tunnel packet marked ECN CE but is not ECN capable/d\"])",
          "110: AT_CLEANUP",
          "112: AT_SETUP([tunnel - output])",
          "113: OVS_VSWITCHD_START([add-port br0 p1 -- set Interface p1 type=gre \\",
          "114:                     options:remote_ip=1.1.1.1 options:local_ip=2.2.2.2 \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112: AT_SETUP([tunnel - too long nested attributes])",
          "113: OVS_VSWITCHD_START([add-port br0 p1 \\",
          "114:     -- set Interface p1 type=gre options:remote_ip=1.1.1.1 ofport_request=1 \\",
          "115:     -- add-port br0 p2 -- set Interface p2 type=dummy ofport_request=2])",
          "117: AT_CHECK([ovs-appctl dpif/show | tail -n +3], [0], [dnl",
          "118:     br0 65534/100: (dummy-internal)",
          "119:     p1 1/1: (gre: remote_ip=1.1.1.1)",
          "120:     p2 2/2: (dummy)",
          "121: ])",
          "123: dst_single=\"dst=1.1.1.1\"",
          "124: dst_rep=${dst_single}",
          "125: dnl Size of one OVS_TUNNEL_KEY_ATTR_IPV4_DST is 4 bytes + NLA_HDRLEN (4 bytes).",
          "126: dnl One nested message has room for UINT16_MAX - NLA_HDRLEN (4) bytes, i.e.",
          "127: dnl (UINT16_MAX - NLA_HDRLEN) / (4 + NLA_HDRLEN) = 8191.375 of dst addresses.",
          "128: for i in `seq 1 8192` ; do",
          "129:     dst_rep=\"${dst_rep},${dst_single}\"",
          "130: done",
          "132: AT_CHECK([ovs-appctl dpctl/add-flow \"tunnel(${dst_rep})\" \"2\" 2>&1 | dnl",
          "133:           sed \"s/${dst_single},//g\"], [], [dnl",
          "134: ovs-vswitchd: parsing flow key (syntax error at tunnel(dst=1.1.1.1)) (Argument list too long)",
          "135: ovs-appctl: ovs-vswitchd: server returned an error",
          "136: ])",
          "138: OVS_VSWITCHD_STOP",
          "139: AT_CLEANUP",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "65c61b0c23a0d474696d7b1cea522a5016a8aeb3",
      "candidate_info": {
        "commit_hash": "65c61b0c23a0d474696d7b1cea522a5016a8aeb3",
        "repo": "openvswitch/ovs",
        "commit_url": "https://github.com/openvswitch/ovs/commit/65c61b0c23a0d474696d7b1cea522a5016a8aeb3",
        "files": [
          "lib/ofp-actions.c",
          "tests/automake.mk",
          "tests/fuzz-regression-list.at",
          "tests/fuzz-regression/ofp_print_fuzzer-6540965472632832"
        ],
        "message": "ofp-actions: Fix use-after-free while decoding RAW_ENCAP.\n\nWhile decoding RAW_ENCAP action, decode_ed_prop() might re-allocate\nofpbuf if there is no enough space left.  However, function\n'decode_NXAST_RAW_ENCAP' continues to use old pointer to 'encap'\nstructure leading to write-after-free and incorrect decoding.\n\n  ==3549105==ERROR: AddressSanitizer: heap-use-after-free on address\n  0x60600000011a at pc 0x0000005f6cc6 bp 0x7ffc3a2d4410 sp 0x7ffc3a2d4408\n  WRITE of size 2 at 0x60600000011a thread T0\n    #0 0x5f6cc5 in decode_NXAST_RAW_ENCAP lib/ofp-actions.c:4461:20\n    #1 0x5f0551 in ofpact_decode ./lib/ofp-actions.inc2:4777:16\n    #2 0x5ed17c in ofpacts_decode lib/ofp-actions.c:7752:21\n    #3 0x5eba9a in ofpacts_pull_openflow_actions__ lib/ofp-actions.c:7791:13\n    #4 0x5eb9fc in ofpacts_pull_openflow_actions lib/ofp-actions.c:7835:12\n    #5 0x64bb8b in ofputil_decode_packet_out lib/ofp-packet.c:1113:17\n    #6 0x65b6f4 in ofp_print_packet_out lib/ofp-print.c:148:13\n    #7 0x659e3f in ofp_to_string__ lib/ofp-print.c:1029:16\n    #8 0x659b24 in ofp_to_string lib/ofp-print.c:1244:21\n    #9 0x65a28c in ofp_print lib/ofp-print.c:1288:28\n    #10 0x540d11 in ofctl_ofp_parse utilities/ovs-ofctl.c:2814:9\n    #11 0x564228 in ovs_cmdl_run_command__ lib/command-line.c:247:17\n    #12 0x56408a in ovs_cmdl_run_command lib/command-line.c:278:5\n    #13 0x5391ae in main utilities/ovs-ofctl.c:179:9\n    #14 0x7f6911ce9081 in __libc_start_main (/lib64/libc.so.6+0x27081)\n    #15 0x461fed in _start (utilities/ovs-ofctl+0x461fed)\n\nFix that by getting a new pointer before using.\n\nCredit to OSS-Fuzz.\n\nFuzzer regression test will fail only with AddressSanitizer enabled.\n\nReported-at: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=27851\nFixes: f839892a206a (\"OF support and translation of generic encap and decap\")\nAcked-by: William Tu <u9012063@gmail.com>\nSigned-off-by: Ilya Maximets <i.maximets@ovn.org>",
        "before_after_code_files": [
          "lib/ofp-actions.c||lib/ofp-actions.c",
          "tests/automake.mk||tests/automake.mk",
          "tests/fuzz-regression-list.at||tests/fuzz-regression-list.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/ofp-actions.c||lib/ofp-actions.c",
            "tests/automake.mk||tests/automake.mk",
            "tests/fuzz-regression-list.at||tests/fuzz-regression-list.at"
          ],
          "candidate": [
            "lib/ofp-actions.c||lib/ofp-actions.c",
            "tests/automake.mk||tests/automake.mk",
            "tests/fuzz-regression-list.at||tests/fuzz-regression-list.at"
          ]
        }
      },
      "candidate_diff": {
        "lib/ofp-actions.c||lib/ofp-actions.c": [
          "File: lib/ofp-actions.c -> lib/ofp-actions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4322:     ds_put_format(fp->s, \"%s)%s\", colors.paren, colors.end);",
          "4323: }",
          "4326: static enum ofperr",
          "4327: check_FIN_TIMEOUT(const struct ofpact_fin_timeout *a OVS_UNUSED,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4349: static enum ofperr",
          "4350: decode_NXAST_RAW_ENCAP(const struct nx_action_encap *nae,",
          "4351:                        enum ofp_version ofp_version OVS_UNUSED,",
          "4352:                        struct ofpbuf *out)",
          "4353: {",
          "4354:     struct ofpact_encap *encap;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4353: {",
          "",
          "---------------"
        ],
        "tests/automake.mk||tests/automake.mk": [
          "File: tests/automake.mk -> tests/automake.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:  tests/fuzz-regression/ofp_print_fuzzer-5722747668791296 \\",
          "135:  tests/fuzz-regression/ofp_print_fuzzer-6285128790704128 \\",
          "136:  tests/fuzz-regression/ofp_print_fuzzer-6470117922701312 \\",
          "138: $(srcdir)/tests/fuzz-regression-list.at: tests/automake.mk",
          "139:  $(AM_V_GEN)for name in $(FUZZ_REGRESSION_TESTS); do \\",
          "140:             basename=`echo $$name | sed 's,^.*/,,'`; \\",
          "",
          "[Removed Lines]",
          "137:  tests/fuzz-regression/ofp_print_fuzzer-6502620041576448",
          "",
          "[Added Lines]",
          "137:  tests/fuzz-regression/ofp_print_fuzzer-6502620041576448 \\",
          "138:  tests/fuzz-regression/ofp_print_fuzzer-6540965472632832",
          "",
          "---------------"
        ],
        "tests/fuzz-regression-list.at||tests/fuzz-regression-list.at": [
          "File: tests/fuzz-regression-list.at -> tests/fuzz-regression-list.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: TEST_FUZZ_REGRESSION([ofp_print_fuzzer-6285128790704128])",
          "22: TEST_FUZZ_REGRESSION([ofp_print_fuzzer-6470117922701312])",
          "23: TEST_FUZZ_REGRESSION([ofp_print_fuzzer-6502620041576448])",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: TEST_FUZZ_REGRESSION([ofp_print_fuzzer-6540965472632832])",
          "",
          "---------------"
        ]
      }
    }
  ]
}