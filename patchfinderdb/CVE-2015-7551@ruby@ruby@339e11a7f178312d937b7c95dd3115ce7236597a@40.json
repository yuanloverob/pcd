{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ed737b87d46521e5bf082138f251eb3018966821",
      "candidate_info": {
        "commit_hash": "ed737b87d46521e5bf082138f251eb3018966821",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ed737b87d46521e5bf082138f251eb3018966821",
        "files": [
          "ChangeLog",
          "hash.c",
          "internal.h",
          "numeric.c",
          "test/ruby/test_float.rb",
          "version.h"
        ],
        "message": "merge revision(s) 49999,50000: [Backport #10979]\n\n\t* hash.c (rb_any_hash): use same hash values with Float#hash so\n\t  that -0.0 and +0.0 will be identical.\n\t  [ruby-core:68541] [Bug #10979]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50655 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "hash.c||hash.c",
          "internal.h||internal.h",
          "numeric.c||numeric.c",
          "test/ruby/test_float.rb||test/ruby/test_float.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "hash.c||hash.c": [
          "File: hash.c -> hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:     if (SPECIAL_CONST_P(a)) {",
          "135:  if (a == Qundef) return 0;",
          "136:  hnum = rb_objid_hash((st_index_t)a);",
          "137:     }",
          "138:     else if (BUILTIN_TYPE(a) == T_STRING) {",
          "139:  hnum = rb_str_hash(a);",
          "140:     }",
          "141:     else {",
          "142:         hval = rb_hash(a);",
          "143:  hnum = FIX2LONG(hval);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:  if (FLONUM_P(a)) {",
          "138:      return rb_dbl_hash(rb_float_value(a));",
          "139:  }",
          "145:     else if (BUILTIN_TYPE(a) == T_FLOAT) {",
          "146:  return rb_dbl_hash(rb_float_value(a));",
          "147:     }",
          "",
          "---------------"
        ],
        "internal.h||internal.h": [
          "File: internal.h -> internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "529: int rb_num_negative_p(VALUE);",
          "530: VALUE rb_int_succ(VALUE num);",
          "531: VALUE rb_int_pred(VALUE num);",
          "533: #if USE_FLONUM",
          "534: #define RUBY_BIT_ROTL(v, n) (((v) << (n)) | ((v) >> ((sizeof(v) * 8) - n)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "532: VALUE rb_dbl_hash(double d);",
          "",
          "---------------"
        ],
        "numeric.c||numeric.c": [
          "File: numeric.c -> numeric.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1110: static VALUE",
          "1111: flo_hash(VALUE num)",
          "1112: {",
          "1114:     st_index_t hash;",
          "1118:     if (d == 0.0) d = 0.0;",
          "1119:     hash = rb_memhash(&d, sizeof(d));",
          "",
          "[Removed Lines]",
          "1113:     double d;",
          "1116:     d = RFLOAT_VALUE(num);",
          "",
          "[Added Lines]",
          "1113:     return rb_dbl_hash(RFLOAT_VALUE(num));",
          "1114: }",
          "1116: VALUE",
          "1117: rb_dbl_hash(double d)",
          "1118: {",
          "",
          "---------------"
        ],
        "test/ruby/test_float.rb||test/ruby/test_float.rb": [
          "File: test/ruby/test_float.rb -> test/ruby/test_float.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "619:     assert_in_epsilon(10.0, (\"1.\"+\"1\"*300000).to_f*9)",
          "620:     end;",
          "621:   end",
          "622: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "623:   def test_hash_0",
          "624:     bug10979 = '[ruby-core:68541] [Bug #10979]'",
          "625:     assert_equal(+0.0.hash, -0.0.hash)",
          "626:     assert_operator(+0.0, :eql?, -0.0)",
          "627:     h = {0.0 => bug10979}",
          "628:     assert_equal(bug10979, h[-0.0])",
          "629:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 5",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-05-21\"",
          "3: #define RUBY_PATCHLEVEL 357",
          "7: #define RUBY_RELEASE_DAY 21",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-05-28\"",
          "3: #define RUBY_PATCHLEVEL 358",
          "7: #define RUBY_RELEASE_DAY 28",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba94b8ce0f10e8a51be1b80da3b7d906b9a5d424",
      "candidate_info": {
        "commit_hash": "ba94b8ce0f10e8a51be1b80da3b7d906b9a5d424",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ba94b8ce0f10e8a51be1b80da3b7d906b9a5d424",
        "files": [
          "ChangeLog",
          "ext/tk/lib/tk/menubar.rb",
          "ext/tk/sample/menubar1.rb",
          "ext/tk/sample/menubar2.rb",
          "ext/tk/sample/menubar3.rb",
          "version.h"
        ],
        "message": "merge revision(s) 54018: [Backport #11886]\n\n\t* ext/tk/lib/tk/menubar.rb: fix a typo in font name. [ruby-core:72505]\n\t  [Bug #11886] The patch provided by Akira Matsuda.\n\n\t* ext/tk/sample/*.rb: ditto.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54278 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/tk/lib/tk/menubar.rb||ext/tk/lib/tk/menubar.rb",
          "ext/tk/sample/menubar1.rb||ext/tk/sample/menubar1.rb",
          "ext/tk/sample/menubar2.rb||ext/tk/sample/menubar2.rb",
          "ext/tk/sample/menubar3.rb||ext/tk/sample/menubar3.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/tk/lib/tk/menubar.rb||ext/tk/lib/tk/menubar.rb": [
          "File: ext/tk/lib/tk/menubar.rb -> ext/tk/lib/tk/menubar.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "76: #                        'tearoff'=>false,",
          "77: #                        'foreground'=>'grey40',",
          "78: #                        'activeforeground'=>'red',",
          "80: # menubar.pack('side'=>'top', 'fill'=>'x')",
          "82: # See tk/menuspce.rb about the format of the menu_spec",
          "",
          "[Removed Lines]",
          "79: #                        'font'=>'Helvetia 12 bold')",
          "",
          "[Added Lines]",
          "79: #                        'font'=>'Helvetica 12 bold')",
          "",
          "---------------"
        ],
        "ext/tk/sample/menubar1.rb||ext/tk/sample/menubar1.rb": [
          "File: ext/tk/sample/menubar1.rb -> ext/tk/sample/menubar1.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:                        'tearoff'=>false,",
          "44:                        'foreground'=>'grey40',",
          "45:                        'activeforeground'=>'red',",
          "47: menubar.pack('side'=>'top', 'fill'=>'x')",
          "49: TkText.new(:wrap=>'word').pack.insert('1.0', 'Please read the sample source, and check how to override default configure options of menu entries on a menu_spec. Maybe, on windows, this menubar does not work properly about keyboard shortcuts. Then, please use \"menu\" option of root/toplevel widget (see sample/menubar2.rb).')",
          "",
          "[Removed Lines]",
          "46:                        'font'=>'Helvetia 12 bold')",
          "",
          "[Added Lines]",
          "46:                        'font'=>'Helvetica 12 bold')",
          "",
          "---------------"
        ],
        "ext/tk/sample/menubar2.rb||ext/tk/sample/menubar2.rb": [
          "File: ext/tk/sample/menubar2.rb -> ext/tk/sample/menubar2.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:                            'tearoff'=>'false',",
          "45:                            'foreground'=>'grey40',",
          "46:                            'activeforeground'=>'red',",
          "48: # This (default configure options) is NOT same the following.",
          "49: #",
          "50: #  mbar = Tk.root.add_menubar(menu_spec)",
          "51: #  mbar.configure('foreground'=>'grey40', 'activeforeground'=>'red',",
          "54: TkText.new(:wrap=>'word').pack.insert('1.0', 'Please read the sample source, and check how to override default configure options of menu entries on a menu_spec.')",
          "",
          "[Removed Lines]",
          "47:                            'font'=>'Helvetia 12 bold')",
          "52: #                 'font'=>'Helvetia 12 bold')",
          "",
          "[Added Lines]",
          "47:                            'font'=>'Helvetica 12 bold')",
          "52: #                 'font'=>'Helvetica 12 bold')",
          "",
          "---------------"
        ],
        "ext/tk/sample/menubar3.rb||ext/tk/sample/menubar3.rb": [
          "File: ext/tk/sample/menubar3.rb -> ext/tk/sample/menubar3.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:                         'tearoff'=>false,",
          "63:                         'foreground'=>'grey40',",
          "64:                         'activeforeground'=>'red',",
          "66: menubar.pack('side'=>'left', 'fill'=>'y')",
          "68: TkText.new(:wrap=>'word').pack.insert('1.0', 'This sample script generates \"Menu Sidebar\".",
          "",
          "[Removed Lines]",
          "65:                         'font'=>'Helvetia 12 bold')",
          "",
          "[Added Lines]",
          "65:                         'font'=>'Helvetica 12 bold')",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-03-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 475",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 476",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ee1519777bbd4f57463e23b267653f8f37d7afaa",
      "candidate_info": {
        "commit_hash": "ee1519777bbd4f57463e23b267653f8f37d7afaa",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ee1519777bbd4f57463e23b267653f8f37d7afaa",
        "files": [
          "ChangeLog",
          "compar.c",
          "numeric.c",
          "test/ruby/test_numeric.rb",
          "version.h"
        ],
        "message": "merge revision(s) 49224,49225,49234,49235: [Backport #10711]\n\n\t* numeric.c (bit_coerce): use original value for error message\n\t  [ruby-core:67405] [Bug #10711]\n\n\t* test/ruby/test_numeric.rb (test_coerce): check error message\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51067 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "compar.c||compar.c",
          "numeric.c||numeric.c",
          "test/ruby/test_numeric.rb||test/ruby/test_numeric.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "compar.c||compar.c": [
          "File: compar.c -> compar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: {",
          "21:     const char *classname;",
          "24:  y = rb_inspect(y);",
          "25:  classname = StringValuePtr(y);",
          "26:     }",
          "",
          "[Removed Lines]",
          "23:     if (SPECIAL_CONST_P(y)) {",
          "",
          "[Added Lines]",
          "23:     if (SPECIAL_CONST_P(y) || BUILTIN_TYPE(y) == T_FLOAT) {",
          "",
          "---------------"
        ],
        "numeric.c||numeric.c": [
          "File: numeric.c -> numeric.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3299: bit_coerce(VALUE *x, VALUE *y, int err)",
          "3300: {",
          "3301:     if (!FIXNUM_P(*y) && !RB_TYPE_P(*y, T_BIGNUM)) {",
          "3302:  do_coerce(x, y, err);",
          "3303:  if (!FIXNUM_P(*x) && !RB_TYPE_P(*x, T_BIGNUM)",
          "3304:      && !FIXNUM_P(*y) && !RB_TYPE_P(*y, T_BIGNUM)) {",
          "3305:      if (!err) return FALSE;",
          "3307:  }",
          "3308:     }",
          "3309:     return TRUE;",
          "",
          "[Removed Lines]",
          "3306:      coerce_failed(*x, *y);",
          "",
          "[Added Lines]",
          "3302:  VALUE orig = *x;",
          "3307:      coerce_failed(orig, *y);",
          "",
          "---------------"
        ],
        "test/ruby/test_numeric.rb||test/ruby/test_numeric.rb": [
          "File: test/ruby/test_numeric.rb -> test/ruby/test_numeric.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:       assert_raise_with_message(TypeError, /:\"\\\\u3042\"/) {1|:\"\\u{3042}\"}",
          "29:       assert_raise_with_message(TypeError, /:\"\\\\u3042\"/) {1^:\"\\u{3042}\"}",
          "30:     end",
          "31:   end",
          "33:   def test_dummynumeric",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:     bug10711 = '[ruby-core:67405] [Bug #10711]'",
          "33:     exp = \"1.2 can't be coerced into Fixnum\"",
          "34:     assert_raise_with_message(TypeError, exp, bug10711) { 1 & 1.2 }",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 6",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-06-29\"",
          "3: #define RUBY_PATCHLEVEL 368",
          "7: #define RUBY_RELEASE_DAY 29",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-06-30\"",
          "3: #define RUBY_PATCHLEVEL 369",
          "7: #define RUBY_RELEASE_DAY 30",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4def2274b2685eab2c2a3bc4cd831faf1382e5e9",
      "candidate_info": {
        "commit_hash": "4def2274b2685eab2c2a3bc4cd831faf1382e5e9",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/4def2274b2685eab2c2a3bc4cd831faf1382e5e9",
        "files": [
          "ChangeLog",
          "load.c",
          "test/ruby/test_autoload.rb",
          "version.h"
        ],
        "message": "merge revision(s) 50515: [Backport #11155]\n\n\t* load.c (loaded_feature_path): stop returning false negatives for\n\t  filenames which are trailing substrings of file extensions.  For\n\t  example, 'b', which a trailing substring of \".rb\" should not return\n\t  false. [Bug #11155][ruby-core:69206]\n\n\t* test/ruby/test_autoload.rb: test for fix\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50805 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "load.c||load.c",
          "test/ruby/test_autoload.rb||test/ruby/test_autoload.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "load.c||load.c": [
          "File: load.c -> load.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "319:     const char *e;",
          "321:     if (vlen < len+1) return 0;",
          "323:  plen = vlen - len;",
          "324:     }",
          "325:     else {",
          "",
          "[Removed Lines]",
          "322:     if (!strncmp(name+(vlen-len), feature, len)) {",
          "",
          "[Added Lines]",
          "322:     if (strchr(feature, '.') && !strncmp(name+(vlen-len), feature, len)) {",
          "",
          "---------------"
        ],
        "test/ruby/test_autoload.rb||test/ruby/test_autoload.rb": [
          "File: test/ruby/test_autoload.rb -> test/ruby/test_autoload.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:     }",
          "57:   end",
          "59:   def test_require_explicit",
          "60:     Tempfile.create(['autoload', '.rb']) {|file|",
          "61:       file.puts 'class Object; AutoloadTest = 1; end'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:   def test_autoload_with_unqualified_file_name # [ruby-core:69206]",
          "60:     lp = $LOAD_PATH.dup",
          "61:     lf = $LOADED_FEATURES.dup",
          "63:     Dir.mktmpdir('autoload') { |tmpdir|",
          "64:       $LOAD_PATH << tmpdir",
          "66:       Dir.chdir(tmpdir) do",
          "67:         eval <<-END",
          "68:           class ::Object",
          "69:             module A",
          "70:               autoload :C, 'b'",
          "71:             end",
          "72:           end",
          "73:         END",
          "75:         File.open('b.rb', 'w') {|file| file.puts 'module A; class C; end; end'}",
          "76:         assert_kind_of Class, ::A::C",
          "77:       end",
          "78:     }",
          "79:   ensure",
          "80:     $LOAD_PATH.replace lp",
          "81:     $LOADED_FEATURES.replace lf",
          "82:     Object.send(:remove_const, :A) if Object.const_defined?(:A)",
          "83:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-05-29\"",
          "3: #define RUBY_PATCHLEVEL 362",
          "6: #define RUBY_RELEASE_MONTH 5",
          "7: #define RUBY_RELEASE_DAY 29",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-06-09\"",
          "3: #define RUBY_PATCHLEVEL 363",
          "6: #define RUBY_RELEASE_MONTH 6",
          "7: #define RUBY_RELEASE_DAY 9",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67e62b9216f812ebed238e01cb6a41a550323e46",
      "candidate_info": {
        "commit_hash": "67e62b9216f812ebed238e01cb6a41a550323e46",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/67e62b9216f812ebed238e01cb6a41a550323e46",
        "files": [
          "version.h"
        ],
        "message": "* 2014-12-30\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49075 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "3: #define RUBY_PATCHLEVEL 274",
          "5: #define RUBY_RELEASE_YEAR 2014",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2014-11-27\"",
          "6: #define RUBY_RELEASE_MONTH 11",
          "7: #define RUBY_RELEASE_DAY 27",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2014-12-30\"",
          "6: #define RUBY_RELEASE_MONTH 12",
          "7: #define RUBY_RELEASE_DAY 30",
          "",
          "---------------"
        ]
      }
    }
  ]
}