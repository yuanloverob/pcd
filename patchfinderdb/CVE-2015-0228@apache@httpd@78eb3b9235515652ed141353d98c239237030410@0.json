{
  "cve_id": "CVE-2015-0228",
  "cve_desc": "The lua_websocket_read function in lua_request.c in the mod_lua module in the Apache HTTP Server through 2.4.12 allows remote attackers to cause a denial of service (child-process crash) by sending a crafted WebSocket Ping frame after a Lua script has called the wsupgrade function.",
  "repo": "apache/httpd",
  "patch_hash": "78eb3b9235515652ed141353d98c239237030410",
  "patch_info": {
    "commit_hash": "78eb3b9235515652ed141353d98c239237030410",
    "repo": "apache/httpd",
    "commit_url": "https://github.com/apache/httpd/commit/78eb3b9235515652ed141353d98c239237030410",
    "files": [
      "CHANGES",
      "modules/lua/lua_request.c"
    ],
    "message": "*) SECURITY: CVE-2015-0228 (cve.mitre.org)      mod_lua: A maliciously crafted websockets PING after a script      calls r:wsupgrade() can cause a child process crash.      [Edward Lu <Chaosed0 gmail.com>]\n\nDiscovered by Guido Vranken <guidovranken gmail.com>\n\nSubmitted by: Edward Lu\nCommitted by: covener\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@1657261 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "modules/lua/lua_request.c||modules/lua/lua_request.c"
    ]
  },
  "patch_diff": {
    "modules/lua/lua_request.c||modules/lua/lua_request.c": [
      "File: modules/lua/lua_request.c -> modules/lua/lua_request.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2227: {",
      "2228:     apr_socket_t *sock;",
      "2229:     apr_status_t rv;",
      "2230:     int n = 0;",
      "2231:     apr_size_t len = 1;",
      "2232:     apr_size_t plen = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2230:     int do_read = 1;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2244:     mask_bytes = apr_pcalloc(r->pool, 4);",
      "2245:     sock = ap_get_conn_socket(r->connection);",
      "2248:     if (plaintext) {",
      "2249:         rv = apr_socket_recv(sock, &byte, &len);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2248:     while (do_read) {",
      "2249:     do_read = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2377:                 frame[0] = 0x8A;",
      "2378:                 frame[1] = 0;",
      "2381:             }",
      "2382:         }",
      "2383:     }",
      "2384:     return 0;",
      "2385: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2383:                 do_read = 1;",
      "2387:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6c0cf71485b85ba1742d4b3528030e029c62a3e3",
      "candidate_info": {
        "commit_hash": "6c0cf71485b85ba1742d4b3528030e029c62a3e3",
        "repo": "apache/httpd",
        "commit_url": "https://github.com/apache/httpd/commit/6c0cf71485b85ba1742d4b3528030e029c62a3e3",
        "files": [
          "modules/lua/lua_request.c"
        ],
        "message": "followup to r1657261 whitespace only -- reindent body of while loop.\n\n(no change under svn diff -x-w)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@1657263 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "modules/lua/lua_request.c||modules/lua/lua_request.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "modules/lua/lua_request.c||modules/lua/lua_request.c"
          ],
          "candidate": [
            "modules/lua/lua_request.c||modules/lua/lua_request.c"
          ]
        }
      },
      "candidate_diff": {
        "modules/lua/lua_request.c||modules/lua/lua_request.c": [
          "File: modules/lua/lua_request.c -> modules/lua/lua_request.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2245:     mask_bytes = apr_pcalloc(r->pool, 4);",
          "2246:     sock = ap_get_conn_socket(r->connection);",
          "2266:         if (plaintext) {",
          "2267:             rv = apr_socket_recv(sock, &byte, &len);",
          "2268:         }",
          "",
          "[Removed Lines]",
          "2248:     while (do_read) {",
          "2249:     do_read = 0;",
          "2251:     if (plaintext) {",
          "2252:         rv = apr_socket_recv(sock, &byte, &len);",
          "2253:     }",
          "2254:     else {",
          "2255:         rv = lua_websocket_readbytes(r->connection, &byte, 1);",
          "2256:     }",
          "2257:     if (rv == APR_SUCCESS) {",
          "2258:         unsigned char ubyte, fin, opcode, mask, payload;",
          "2259:         ubyte = (unsigned char)byte;",
          "2261:         fin = ubyte >> (CHAR_BIT - 1);",
          "2263:         opcode = ubyte & 0xf;",
          "",
          "[Added Lines]",
          "2248:     while (do_read) {",
          "2249:         do_read = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2270:             rv = lua_websocket_readbytes(r->connection, &byte, 1);",
          "2271:         }",
          "2272:         if (rv == APR_SUCCESS) {",
          "2273:             ubyte = (unsigned char)byte;",
          "2299:             }",
          "2316:             }",
          "2327:                 }",
          "2331:                 }",
          "2334:                 }",
          "2350:                         }",
          "2351:                     }",
          "2367:                     }",
          "2368:                 }",
          "2384:             }",
          "2385:         }",
          "2386:     }",
          "2388:     return 0;",
          "2389: }",
          "",
          "[Removed Lines]",
          "2275:             mask = ubyte >> (CHAR_BIT - 1);",
          "2277:             payload = ubyte & 0x7f;",
          "2278:             plen = payload;",
          "2281:             if (payload == 126) {",
          "2282:                 len = 2;",
          "2283:                 if (plaintext) {",
          "2285:                     rv = apr_socket_recv(sock, (char*) &payload_short, &len);",
          "2286:                 }",
          "2287:                 else {",
          "2288:                     rv = lua_websocket_readbytes(r->connection,",
          "2289:                         (char*) &payload_short, 2);",
          "2290:                 }",
          "2291:                 payload_short = ntohs(payload_short);",
          "2293:                 if (rv == APR_SUCCESS) {",
          "2294:                     plen = payload_short;",
          "2295:                 }",
          "2296:                 else {",
          "2297:                     return 0;",
          "2298:                 }",
          "2301:             if (payload == 127) {",
          "2302:                 len = 8;",
          "2303:                 if (plaintext) {",
          "2304:                     rv = apr_socket_recv(sock, (char*) &payload_long, &len);",
          "2305:                 }",
          "2306:                 else {",
          "2307:                     rv = lua_websocket_readbytes(r->connection,",
          "2308:                             (char*) &payload_long, 8);",
          "2309:                 }",
          "2310:                 if (rv == APR_SUCCESS) {",
          "2311:                     plen = ap_ntoh64(&payload_long);",
          "2312:                 }",
          "2313:                 else {",
          "2314:                     return 0;",
          "2315:                 }",
          "2317:             ap_log_rerror(APLOG_MARK, APLOG_DEBUG, 0, r,",
          "2318:                     \"Websocket: Reading %\" APR_SIZE_T_FMT \" (%s) bytes, masking is %s. %s\",",
          "2319:                     plen,",
          "2320:                     (payload >= 126) ? \"extra payload\" : \"no extra payload\",",
          "2321:                     mask ? \"on\" : \"off\",",
          "2322:                     fin ? \"This is a final frame\" : \"more to follow\");",
          "2323:             if (mask) {",
          "2324:                 len = 4;",
          "2325:                 if (plaintext) {",
          "2326:                     rv = apr_socket_recv(sock, (char*) mask_bytes, &len);",
          "2328:                 else {",
          "2329:                     rv = lua_websocket_readbytes(r->connection,",
          "2330:                             (char*) mask_bytes, 4);",
          "2332:                 if (rv != APR_SUCCESS) {",
          "2333:                     return 0;",
          "2335:             }",
          "2336:             if (plen < (HUGE_STRING_LEN*1024) && plen > 0) {",
          "2337:                 apr_size_t remaining = plen;",
          "2338:                 apr_size_t received;",
          "2339:                 apr_off_t at = 0;",
          "2340:                 char *buffer = apr_palloc(r->pool, plen+1);",
          "2341:                 buffer[plen] = 0;",
          "2343:                 if (plaintext) {",
          "2344:                     while (remaining > 0) {",
          "2345:                         received = remaining;",
          "2346:                         rv = apr_socket_recv(sock, buffer+at, &received);",
          "2347:                         if (received > 0 ) {",
          "2348:                             remaining -= received;",
          "2349:                             at += received;",
          "2352:                     ap_log_rerror(APLOG_MARK, APLOG_TRACE1, 0, r,",
          "2353:                     \"Websocket: Frame contained %\" APR_OFF_T_FMT \" bytes, pushed to Lua stack\",",
          "2354:                         at);",
          "2355:                 }",
          "2356:                 else {",
          "2357:                     rv = lua_websocket_readbytes(r->connection, buffer,",
          "2358:                             remaining);",
          "2359:                     ap_log_rerror(APLOG_MARK, APLOG_TRACE1, 0, r,",
          "2360:                     \"Websocket: SSL Frame contained %\" APR_SIZE_T_FMT \" bytes, \"\\",
          "2361:                             \"pushed to Lua stack\",",
          "2362:                         remaining);",
          "2363:                 }",
          "2364:                 if (mask) {",
          "2365:                     for (n = 0; n < plen; n++) {",
          "2366:                         buffer[n] ^= mask_bytes[n%4];",
          "2372:                 return 2;",
          "2373:             }",
          "2378:                 char frame[2];",
          "2379:                 plen = 2;",
          "2380:                 frame[0] = 0x8A;",
          "2381:                 frame[1] = 0;",
          "2383:                 do_read = 1;",
          "2387:     }",
          "",
          "[Added Lines]",
          "2258:             unsigned char ubyte, fin, opcode, mask, payload;",
          "2261:             fin = ubyte >> (CHAR_BIT - 1);",
          "2263:             opcode = ubyte & 0xf;",
          "2266:             if (plaintext) {",
          "2267:                 rv = apr_socket_recv(sock, &byte, &len);",
          "2269:             else {",
          "2270:                 rv = lua_websocket_readbytes(r->connection, &byte, 1);",
          "2272:             if (rv == APR_SUCCESS) {",
          "2273:                 ubyte = (unsigned char)byte;",
          "2275:                 mask = ubyte >> (CHAR_BIT - 1);",
          "2277:                 payload = ubyte & 0x7f;",
          "2278:                 plen = payload;",
          "2281:                 if (payload == 126) {",
          "2282:                     len = 2;",
          "2283:                     if (plaintext) {",
          "2285:                         rv = apr_socket_recv(sock, (char*) &payload_short, &len);",
          "2286:                     }",
          "2287:                     else {",
          "2288:                         rv = lua_websocket_readbytes(r->connection,",
          "2289:                                 (char*) &payload_short, 2);",
          "2290:                     }",
          "2291:                     payload_short = ntohs(payload_short);",
          "2293:                     if (rv == APR_SUCCESS) {",
          "2294:                         plen = payload_short;",
          "2295:                     }",
          "2296:                     else {",
          "2297:                         return 0;",
          "2298:                     }",
          "2301:                 if (payload == 127) {",
          "2302:                     len = 8;",
          "2303:                     if (plaintext) {",
          "2304:                         rv = apr_socket_recv(sock, (char*) &payload_long, &len);",
          "2305:                     }",
          "2306:                     else {",
          "2307:                         rv = lua_websocket_readbytes(r->connection,",
          "2308:                                 (char*) &payload_long, 8);",
          "2309:                     }",
          "2310:                     if (rv == APR_SUCCESS) {",
          "2311:                         plen = ap_ntoh64(&payload_long);",
          "2312:                     }",
          "2313:                     else {",
          "2314:                         return 0;",
          "2315:                     }",
          "2317:                 ap_log_rerror(APLOG_MARK, APLOG_DEBUG, 0, r,",
          "2318:                         \"Websocket: Reading %\" APR_SIZE_T_FMT \" (%s) bytes, masking is %s. %s\",",
          "2319:                         plen,",
          "2320:                         (payload >= 126) ? \"extra payload\" : \"no extra payload\",",
          "2321:                         mask ? \"on\" : \"off\",",
          "2322:                         fin ? \"This is a final frame\" : \"more to follow\");",
          "2323:                 if (mask) {",
          "2324:                     len = 4;",
          "2325:                     if (plaintext) {",
          "2326:                         rv = apr_socket_recv(sock, (char*) mask_bytes, &len);",
          "2327:                     }",
          "2328:                     else {",
          "2329:                         rv = lua_websocket_readbytes(r->connection,",
          "2330:                                 (char*) mask_bytes, 4);",
          "2331:                     }",
          "2332:                     if (rv != APR_SUCCESS) {",
          "2333:                         return 0;",
          "2334:                     }",
          "2336:                 if (plen < (HUGE_STRING_LEN*1024) && plen > 0) {",
          "2337:                     apr_size_t remaining = plen;",
          "2338:                     apr_size_t received;",
          "2339:                     apr_off_t at = 0;",
          "2340:                     char *buffer = apr_palloc(r->pool, plen+1);",
          "2341:                     buffer[plen] = 0;",
          "2343:                     if (plaintext) {",
          "2344:                         while (remaining > 0) {",
          "2345:                             received = remaining;",
          "2346:                             rv = apr_socket_recv(sock, buffer+at, &received);",
          "2347:                             if (received > 0 ) {",
          "2348:                                 remaining -= received;",
          "2349:                                 at += received;",
          "2350:                             }",
          "2352:                         ap_log_rerror(APLOG_MARK, APLOG_TRACE1, 0, r,",
          "2353:                                 \"Websocket: Frame contained %\" APR_OFF_T_FMT \" bytes, pushed to Lua stack\",",
          "2354:                                 at);",
          "2356:                     else {",
          "2357:                         rv = lua_websocket_readbytes(r->connection, buffer,",
          "2358:                                 remaining);",
          "2359:                         ap_log_rerror(APLOG_MARK, APLOG_TRACE1, 0, r,",
          "2360:                                 \"Websocket: SSL Frame contained %\" APR_SIZE_T_FMT \" bytes, \"\\",
          "2361:                                 \"pushed to Lua stack\",",
          "2362:                                 remaining);",
          "2363:                     }",
          "2364:                     if (mask) {",
          "2365:                         for (n = 0; n < plen; n++) {",
          "2366:                             buffer[n] ^= mask_bytes[n%4];",
          "2367:                         }",
          "2372:                     return 2;",
          "2373:                 }",
          "2378:                     char frame[2];",
          "2379:                     plen = 2;",
          "2380:                     frame[0] = 0x8A;",
          "2381:                     frame[1] = 0;",
          "2383:                     do_read = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "52dd3e5e00672ba7e3c41296e53d4f53b0fada6a",
      "candidate_info": {
        "commit_hash": "52dd3e5e00672ba7e3c41296e53d4f53b0fada6a",
        "repo": "apache/httpd",
        "commit_url": "https://github.com/apache/httpd/commit/52dd3e5e00672ba7e3c41296e53d4f53b0fada6a",
        "files": [
          "CHANGES",
          "STATUS",
          "modules/lua/lua_request.c"
        ],
        "message": "Merge r1657261 from trunk:\n\n  *) SECURITY: CVE-2015-0228 (cve.mitre.org)\n     mod_lua: A maliciously crafted websockets PING after a script\n     calls r:wsupgrade() can cause a child process crash.\n     [Edward Lu <Chaosed0 gmail.com>]\n\nDiscovered by Guido Vranken <guidovranken gmail.com>\n\nSubmitted by: Edward Lu\nCommitted by: covener\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x@1664118 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "modules/lua/lua_request.c||modules/lua/lua_request.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "modules/lua/lua_request.c||modules/lua/lua_request.c"
          ],
          "candidate": [
            "modules/lua/lua_request.c||modules/lua/lua_request.c"
          ]
        }
      },
      "candidate_diff": {
        "modules/lua/lua_request.c||modules/lua/lua_request.c": [
          "File: modules/lua/lua_request.c -> modules/lua/lua_request.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2229: {",
          "2230:     apr_socket_t *sock;",
          "2231:     apr_status_t rv;",
          "2232:     int n = 0;",
          "2233:     apr_size_t len = 1;",
          "2234:     apr_size_t plen = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2232:     int do_read = 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2246:     mask_bytes = apr_pcalloc(r->pool, 4);",
          "2247:     sock = ap_get_conn_socket(r->connection);",
          "2250:     if (plaintext) {",
          "2251:         rv = apr_socket_recv(sock, &byte, &len);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2250:     while (do_read) {",
          "2251:     do_read = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2379:                 frame[0] = 0x8A;",
          "2380:                 frame[1] = 0;",
          "2383:             }",
          "2384:         }",
          "2385:     }",
          "2386:     return 0;",
          "2387: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2385:                 do_read = 1;",
          "2389:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}