{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "535e109a3ab8cc756504a9204fdcd428cbae7cba",
      "candidate_info": {
        "commit_hash": "535e109a3ab8cc756504a9204fdcd428cbae7cba",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/535e109a3ab8cc756504a9204fdcd428cbae7cba",
        "files": [
          "lib/domain.js",
          "test/simple/test-domain.js"
        ],
        "message": "domain: run now return callback result\n\nboth domain.bind and domain.intercept act this way",
        "before_after_code_files": [
          "lib/domain.js||lidomain.js",
          "test/simple/test-domain.js||test/simple/test-domain.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/domain.js||lidomain.js": [
          "File: lib/domain.js -> lidomain.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "136: };",
          "138: Domain.prototype.run = function(fn) {",
          "140: };",
          "142: Domain.prototype.intercept = function(cb) {",
          "",
          "[Removed Lines]",
          "139:   this.bind(fn)();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-domain.js||test/simple/test-domain.js": [
          "File: test/simple/test-domain.js -> test/simple/test-domain.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "199:   });",
          "200: });",
          "204: var fst = fs.createReadStream('stream for nonexistent file')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202: var result = d.run(function () {",
          "203:   return 'return value';",
          "204: });",
          "205: assert.equal(result, 'return value');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b48f7f7eacb910b060515be9940f459f50fdeb02",
      "candidate_info": {
        "commit_hash": "b48f7f7eacb910b060515be9940f459f50fdeb02",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b48f7f7eacb910b060515be9940f459f50fdeb02",
        "files": [
          "test/simple/test-fs-watch.js"
        ],
        "message": "test: Solaris is not as granular with rename fs watch events",
        "before_after_code_files": [
          "test/simple/test-fs-watch.js||test/simple/test-fs-watch.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-fs-watch.js||test/simple/test-fs-watch.js": [
          "File: test/simple/test-fs-watch.js -> test/simple/test-fs-watch.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: assert.doesNotThrow(",
          "109:     function() {",
          "110:       var watcher = fs.watch(testsubdir, function(event, filename) {",
          "112:         if (expectFilePath) {",
          "113:           assert.equal('newfile.txt', filename);",
          "114:         } else {",
          "",
          "[Removed Lines]",
          "111:         assert.equal('rename', event);",
          "",
          "[Added Lines]",
          "111:         var renameEv = process.platform === 'solaris' ? 'change' : 'rename';",
          "112:         assert.equal(renameEv, event);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3883f22ad18998e24246358e0d87e68bd9d2b2b0",
      "candidate_info": {
        "commit_hash": "3883f22ad18998e24246358e0d87e68bd9d2b2b0",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3883f22ad18998e24246358e0d87e68bd9d2b2b0",
        "files": [
          "src/pipe_wrap.cc"
        ],
        "message": "pipe_wrap: don't assert() on pipe accept errors\n\nPass errors to the onconnection callback.",
        "before_after_code_files": [
          "src/pipe_wrap.cc||src/pipe_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/pipe_wrap.cc||src/pipe_wrap.cc": [
          "File: src/pipe_wrap.cc -> src/pipe_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "191:   assert(wrap->object_.IsEmpty() == false);",
          "193:   if (status != 0) {",
          "196:     return;",
          "197:   }",
          "",
          "[Removed Lines]",
          "195:     assert(0);",
          "",
          "[Added Lines]",
          "194:     SetErrno(uv_last_error(uv_default_loop()));",
          "195:     MakeCallback(wrap->object_, \"onconnection\", 0, NULL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35bcb1d6a96252a1711675dfc9615be835bc26b8",
      "candidate_info": {
        "commit_hash": "35bcb1d6a96252a1711675dfc9615be835bc26b8",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/35bcb1d6a96252a1711675dfc9615be835bc26b8",
        "files": [
          "src/process_wrap.cc"
        ],
        "message": "Indentation fix",
        "before_after_code_files": [
          "src/process_wrap.cc||src/process_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/process_wrap.cc||src/process_wrap.cc": [
          "File: src/process_wrap.cc -> src/process_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:     Local<Value> cwd_v = js_options->Get(String::NewSymbol(\"cwd\"));",
          "165:     String::Utf8Value cwd(cwd_v->IsString() ? cwd_v : Local<Value>());",
          "167:       options.cwd = *cwd;",
          "171:     Local<Value> env_v = js_options->Get(String::NewSymbol(\"envPairs\"));",
          "",
          "[Removed Lines]",
          "166:       if (cwd.length() > 0) {",
          "168:       }",
          "",
          "[Added Lines]",
          "166:     if (cwd.length() > 0) {",
          "168:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea50ebd36da2da4a7a8b5fe6e0925ecd113c9d59",
      "candidate_info": {
        "commit_hash": "ea50ebd36da2da4a7a8b5fe6e0925ecd113c9d59",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ea50ebd36da2da4a7a8b5fe6e0925ecd113c9d59",
        "files": [
          "Makefile",
          "tools/installer.js"
        ],
        "message": "build: support make install \"DESTDIR=/path\"",
        "before_after_code_files": [
          "tools/installer.js||tools/installer.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/installer.js||tools/installer.js": [
          "File: tools/installer.js -> tools/installer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: var fs = require('fs'),",
          "2:     path = require('path'),",
          "3:     exec = require('child_process').exec,",
          "6: if (cmd !== 'install' && cmd !== 'uninstall') {",
          "7:   console.error('Unknown command: ' + cmd);",
          "",
          "[Removed Lines]",
          "4:     cmd = process.argv[2];",
          "",
          "[Added Lines]",
          "4:     cmd = process.argv[2],",
          "5:     dest_dir = process.argv[3] || '';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:     return;",
          "27:   }",
          "30:   var dir = dst.replace(/\\/[^\\/]*$/, '/');",
          "",
          "[Removed Lines]",
          "29:   dst = path.join(node_prefix, dst);",
          "",
          "[Added Lines]",
          "30:   dst = path.join(dest_dir, node_prefix, dst);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43: function remove(files) {",
          "44:   files.forEach(function(file) {",
          "46:     queue.push('rm -rf ' + file);",
          "47:   });",
          "48: }",
          "",
          "[Removed Lines]",
          "45:     file = path.join(node_prefix, file);",
          "",
          "[Added Lines]",
          "46:     file = path.join(dest_dir, node_prefix, file);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "127:   if (variables.node_install_npm) {",
          "128:     copy('deps/npm', 'lib/node_modules/npm');",
          "129:     queue.push('ln -sf ../lib/node_modules/npm/bin/npm-cli.js ' +",
          "131:     queue.push([shebang, '#!' + path.join(node_prefix, 'bin/node'),",
          "133:   }",
          "134: } else {",
          "135:   remove([",
          "",
          "[Removed Lines]",
          "130:                path.join(node_prefix, 'bin/npm'));",
          "132:                path.join(node_prefix, 'lib/node_modules/npm/bin/npm-cli.js')]);",
          "",
          "[Added Lines]",
          "131:                path.join(dest_dir, node_prefix, 'bin/npm'));",
          "133:                path.join(dest_dir, node_prefix,",
          "134:                          'lib/node_modules/npm/bin/npm-cli.js')]);",
          "",
          "---------------"
        ]
      }
    }
  ]
}