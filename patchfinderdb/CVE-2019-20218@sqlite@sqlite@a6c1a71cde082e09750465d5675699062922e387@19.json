{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9e35a61e59fa735eb73c49fbad051d2f144470d3",
      "candidate_info": {
        "commit_hash": "9e35a61e59fa735eb73c49fbad051d2f144470d3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9e35a61e59fa735eb73c49fbad051d2f144470d3",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Add a new test case to fuzzdata8.db.\n\nFossilOrigin-Name: ce8e279a7d37594e865c2d9197a5efe5d647e11f074dbaf4a4ee31c74c71dbc9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6089d5dba73437d787259033e94a38cf1b0c87cac4a89c27e69d8239c22f496e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "04307c8a3f457760348fd56f474cedc940fd7dc3",
      "candidate_info": {
        "commit_hash": "04307c8a3f457760348fd56f474cedc940fd7dc3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/04307c8a3f457760348fd56f474cedc940fd7dc3",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/gencol1.test"
        ],
        "message": "Ignore differences in Expr.op2 in sqlite3ExprCompare() in cases where it does matter.  Ticket [1d2a8efc6c3a595a].\n\nFossilOrigin-Name: 329820673a12ff6a6c8759f40989d4ccf272441064b0366a5f491695b55ad0e9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/gencol1.test||test/gencol1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: aceeaf9e28767a0880a16872867a1f57bff163acd0f10d19d5688068077590fa",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5028:      && (combinedFlags & EP_Reduced)==0",
          "5029:     ){",
          "5030:       if( pA->iColumn!=pB->iColumn ) return 2;",
          "5032:       if( pA->op!=TK_IN && pA->iTable!=pB->iTable && pA->iTable!=iTab ){",
          "5033:         return 2;",
          "5034:       }",
          "",
          "[Removed Lines]",
          "5031:       if( pA->op2!=pB->op2 && (pA->op!=TK_FUNCTION || iTab<0) ) return 2;",
          "",
          "[Added Lines]",
          "5031:       if( pA->op2!=pB->op2 ){",
          "5032:         if( pA->op==TK_TRUTH ) return 2;",
          "5033:         if( pA->op==TK_FUNCTION && iTab<0 ){",
          "5043:           return 2;",
          "5044:         }",
          "5045:       }",
          "",
          "---------------"
        ],
        "test/gencol1.test||test/gencol1.test": [
          "File: test/gencol1.test -> test/gencol1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019-10-31",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #***********************************************************************",
          "11: #",
          "12: # Test cases for generated columns.",
          "13: #",
          "15: set testdir [file dirname $argv0]",
          "16: source $testdir/tester.tcl",
          "18: # ticket 830277d9db6c3ba1 on 2019-10-31",
          "19: do_execsql_test gencol1-100 {",
          "20:   CREATE TABLE t0(c0 AS(TYPEOF(c1)), c1);",
          "21:   INSERT INTO t0(c1) VALUES(0);",
          "22:   CREATE TABLE t1(x AS (typeof(y)), y);",
          "23:   INSERT INTO t1 SELECT * FROM t0;",
          "24:   SELECT * FROM t1;",
          "25: } {integer 0}",
          "27: finish_test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f012dc4eb911a68cb5531b94d91cad7922d9999d",
      "candidate_info": {
        "commit_hash": "f012dc4eb911a68cb5531b94d91cad7922d9999d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f012dc4eb911a68cb5531b94d91cad7922d9999d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "When computing the amount of scratch memory needed during a rebalance operation, assume the worst case for the number of cells per page, rather than relying on the BtPage.nCell value, which might be incorrect for a corrupt database.\n\nFossilOrigin-Name: a420ebd08f5a96b9e61a37cb42e1b3f346c23505630d9c33fe30ce7882959b36",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a026189aa46114d2de4f1da5882aeef9cf446a5aa6ea068d51c27df0d7302ddb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7559:         goto balance_cleanup;",
          "7560:       }",
          "7561:     }",
          "7563:     if( (i--)==0 ) break;",
          "7565:     if( pParent->nOverflow && i+nxDiv==pParent->aiOvfl[0] ){",
          "",
          "[Removed Lines]",
          "7562:     nMaxCells += 1+apOld[i]->nCell+apOld[i]->nOverflow;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7606:   nMaxCells = (nMaxCells + 3)&~3;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7605:   nMaxCells = nOld*(MX_CELL(pBt) + ArraySize(pParent->apOvfl));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7617:   b.apCell = sqlite3StackAllocRaw(0, szScratch );",
          "7618:   if( b.apCell==0 ){",
          "7619:     rc = SQLITE_NOMEM_BKPT;",
          "",
          "[Removed Lines]",
          "7616:   assert( szScratch<=6*(int)pBt->pageSize );",
          "",
          "[Added Lines]",
          "7616:   assert( szScratch<=7*(int)pBt->pageSize );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "569b1d9119c0b05564236f1494c5c328e3fcc757",
      "candidate_info": {
        "commit_hash": "569b1d9119c0b05564236f1494c5c328e3fcc757",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/569b1d9119c0b05564236f1494c5c328e3fcc757",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Omit the \".progress\" command from the shell if it is compiled with the SQLITE_OMIT_PROGRESS_CALLBACK option.\n\nFossilOrigin-Name: 4d0a949fd92e19fbf243a2e3a1a7c2cdb111f9a6943949d2420dd846bc7d9285",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2f468da4e9fb3edb5e902fa5d3c528726d1fb64d749d29e558ba3243c76bcb95",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1792:   }",
          "1793: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1795: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3496:   \".output ?FILE?           Send output to FILE or stdout if FILE is omitted\",",
          "3497:   \"     If FILE begins with '|' then open it as a pipe.\",",
          "3498:   \".print STRING...         Print literal STRING\",",
          "3499:   \".progress N              Invoke progress handler after every N opcodes\",",
          "3500:   \"   --limit N                 Interrupt after N progress callbacks\",",
          "3501:   \"   --once                    Do no more than one progress interrupt\",",
          "3502:   \"   --quiet|-q                No output except at interrupts\",",
          "3503:   \"   --reset                   Reset the count for each input and interrupt\",",
          "3504:   \".prompt MAIN CONTINUE    Replace the standard prompts\",",
          "3505:   \".quit                    Exit this program\",",
          "3506:   \".read FILE               Read input from FILE\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3501: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "3507: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7033:     raw_printf(p->out, \"\\n\");",
          "7034:   }else",
          "7036:   if( c=='p' && n>=3 && strncmp(azArg[0], \"progress\", n)==0 ){",
          "7037:     int i;",
          "7038:     int nn = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7040: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "40e9c8328ecbad58b01da806e4fec14a9c90856b",
      "candidate_info": {
        "commit_hash": "40e9c8328ecbad58b01da806e4fec14a9c90856b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/40e9c8328ecbad58b01da806e4fec14a9c90856b",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Load new dbsqlfuzz test cases into test/fuzzdata8.db.\n\nFossilOrigin-Name: 01aeeb5c4c70a0f19651448e94ad5c6810cab3d6957b5bc7a9b4b8e0b887f3de",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 365dd8b663d5a28af33556b2b3820c6b5482114ef741a1d82b55c6e154f3043a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}