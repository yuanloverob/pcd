{
  "cve_id": "CVE-2014-9634",
  "cve_desc": "Jenkins before 1.586 does not set the secure flag on session cookies when run on Tomcat 7.0.41 or later, which makes it easier for remote attackers to capture cookies by intercepting their transmission within an HTTP session.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "582128b9ac179a788d43c1478be8a5224dc19710",
  "patch_info": {
    "commit_hash": "582128b9ac179a788d43c1478be8a5224dc19710",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/582128b9ac179a788d43c1478be8a5224dc19710",
    "files": [
      "changelog.html",
      "core/src/main/java/hudson/WebAppMain.java",
      "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java"
    ],
    "message": "[FIXED JENKINS-25019]\n\nA truly conforming servlet 3.0 container does not allow us to set \"secure cookie\" flag beyond ServletContextListener.onInitialized().\nIf we see that, don't scare the users.",
    "before_after_code_files": [
      "changelog.html||changelog.html",
      "core/src/main/java/hudson/WebAppMain.java||core/src/main/java/hudson/WebAppMain.java",
      "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java||core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java"
    ]
  },
  "patch_diff": {
    "changelog.html||changelog.html": [
      "File: changelog.html -> changelog.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "61:   <li class=bug>",
      "62:     Prevent empty file creation if file parameter is left empty.",
      "63:     (<a href=\"https://issues.jenkins-ci.org/browse/JENKINS-3539\">issue 3539</a>)",
      "64: </ul>",
      "65: </div><!--=TRUNK-END=-->",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "64:   <li class=bug>",
      "65:     Servlet containers may refuse to let us set <a href=\"https://www.owasp.org/index.php/SecureFlag\">secure cookie flag</a>.",
      "66:     Deal with it gracefully.",
      "67:     (<a href=\"https://issues.jenkins-ci.org/browse/JENKINS-25019\">issue 25019</a>)",
      "",
      "---------------"
    ],
    "core/src/main/java/hudson/WebAppMain.java||core/src/main/java/hudson/WebAppMain.java": [
      "File: core/src/main/java/hudson/WebAppMain.java -> core/src/main/java/hudson/WebAppMain.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "56: import java.io.File;",
      "57: import java.io.FileOutputStream;",
      "58: import java.io.IOException;",
      "59: import java.net.URL;",
      "60: import java.net.URLClassLoader;",
      "61: import java.util.Date;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "59: import java.lang.reflect.Method;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "117:             installLogger();",
      "119:             final FileAndDescription describedHomeDir = getHomeDir(event);",
      "120:             home = describedHomeDir.file.getAbsoluteFile();",
      "121:             home.mkdirs();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "120:             markCookieAsHttpOnly(context);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "251:         }",
      "252:     }",
      "254:     public void joinInit() throws InterruptedException {",
      "255:         initThread.join();",
      "256:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "262:     private void markCookieAsHttpOnly(ServletContext context) {",
      "263:         try {",
      "264:             Method m;",
      "265:             try {",
      "266:                 m = context.getClass().getMethod(\"getSessionCookieConfig\");",
      "267:             } catch (NoSuchMethodException x) { // 3.0+",
      "268:                 LOGGER.log(Level.FINE, \"Failed to set secure cookie flag\", x);",
      "269:                 return;",
      "270:             }",
      "271:             Object sessionCookieConfig = m.invoke(context);",
      "274:             Class scc = Class.forName(\"javax.servlet.SessionCookieConfig\");",
      "275:             Method setHttpOnly = scc.getMethod(\"setHttpOnly\",boolean.class);",
      "276:             setHttpOnly.invoke(sessionCookieConfig,true);",
      "277:         } catch (Exception e) {",
      "278:             LOGGER.log(Level.WARNING, \"Failed to set HTTP-only cookie flag\", e);",
      "279:         }",
      "280:     }",
      "",
      "---------------"
    ],
    "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java||core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java": [
      "File: core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java -> core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "14: import javax.servlet.ServletContext;",
      "15: import java.io.File;",
      "16: import java.io.IOException;",
      "17: import java.lang.reflect.Method;",
      "18: import java.util.logging.Level;",
      "19: import java.util.logging.Logger;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: import java.lang.reflect.InvocationTargetException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "117:             }",
      "118:             Object sessionCookieConfig = m.invoke(context);",
      "121:             Class scc = Class.forName(\"javax.servlet.SessionCookieConfig\");",
      "126:             boolean v = fixNull(jenkinsUrl).startsWith(\"https\");",
      "128:         } catch (Exception e) {",
      "129:             LOGGER.log(Level.WARNING, \"Failed to set secure cookie flag\", e);",
      "130:         }",
      "",
      "[Removed Lines]",
      "122:             Method setHttpOnly = scc.getMethod(\"setHttpOnly\",boolean.class);",
      "123:             setHttpOnly.invoke(sessionCookieConfig,true);",
      "125:             Method setSecure = scc.getMethod(\"setSecure\",boolean.class);",
      "127:             setSecure.invoke(sessionCookieConfig,v);",
      "",
      "[Added Lines]",
      "122:             Method setSecure = scc.getMethod(\"setSecure\", boolean.class);",
      "124:             setSecure.invoke(sessionCookieConfig, v);",
      "125:         } catch (InvocationTargetException e) {",
      "126:             if (e.getTargetException() instanceof IllegalStateException) {",
      "129:                 return;",
      "130:             }",
      "131:             LOGGER.log(Level.WARNING, \"Failed to set secure cookie flag\", e);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "79c905e6d0b03b075eef5339b73a6e8c55acd620",
      "candidate_info": {
        "commit_hash": "79c905e6d0b03b075eef5339b73a6e8c55acd620",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/79c905e6d0b03b075eef5339b73a6e8c55acd620",
        "files": [
          "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java"
        ],
        "message": "[FIXED SECURITY-120]\n\nIf Jenkins URL is set to https, force the secure flag. Also force the\ncookie to be HTTP only, which mitigates the damage that XSS can cause.\n\nSee https://www.owasp.org/index.php/SecureFlag",
        "before_after_code_files": [
          "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java||core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java||core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java"
          ],
          "candidate": [
            "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java||core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java||core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java": [
          "File: core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java -> core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: import javax.mail.internet.AddressException;",
          "13: import javax.mail.internet.InternetAddress;",
          "14: import java.io.File;",
          "15: import java.io.IOException;",
          "16: import java.util.logging.Level;",
          "17: import java.util.logging.Logger;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: import javax.servlet.ServletContext;",
          "17: import java.lang.reflect.InvocationTargetException;",
          "18: import java.lang.reflect.Method;",
          "22: import static hudson.Util.fixNull;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:         } else {",
          "64:             super.load();",
          "65:         }",
          "66:     }",
          "68:     public String getAdminAddress() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:         updateSecureSessionFlag();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:             url += '/';",
          "92:         this.jenkinsUrl = url;",
          "93:         save();",
          "94:     }",
          "96:     @Override",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:         updateSecureSessionFlag();",
          "102:     }",
          "109:     private void updateSecureSessionFlag() {",
          "110:         try {",
          "111:             boolean v = fixNull(jenkinsUrl).startsWith(\"https\");",
          "112:             ServletContext context = Jenkins.getInstance().servletContext;",
          "113:             Method m = context.getClass().getMethod(\"getSessionCookieConfig\");",
          "114:             Object sessionCookieConfig = m.invoke(context);",
          "117:             Class scc = Class.forName(\"javax.servlet.SessionCookieConfig\");",
          "118:             Method setHttpOnly = scc.getMethod(\"setHttpOnly\",boolean.class);",
          "119:             setHttpOnly.invoke(sessionCookieConfig,true);",
          "121:             Method setSecure = scc.getMethod(\"setSecure\",boolean.class);",
          "122:             setSecure.invoke(sessionCookieConfig,v);",
          "123:         } catch (Exception e) {",
          "124:             LOGGER.log(Level.WARNING, \"Failed to set secure cookie flag. Maybe running on Servlet 2.5 and younger?\", e);",
          "125:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67f23793fcd912ba344cf07c098c1e2f13b7851f",
      "candidate_info": {
        "commit_hash": "67f23793fcd912ba344cf07c098c1e2f13b7851f",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/67f23793fcd912ba344cf07c098c1e2f13b7851f",
        "files": [
          "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java"
        ],
        "message": "[SECURITY-120] Do not print a warning with stack trace just because we are using a 2.x servlet container.",
        "before_after_code_files": [
          "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java||core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java||core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java"
          ],
          "candidate": [
            "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java||core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java||core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java": [
          "File: core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java -> core/src/main/java/jenkins/model/JenkinsLocationConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: import javax.servlet.ServletContext;",
          "15: import java.io.File;",
          "16: import java.io.IOException;",
          "18: import java.lang.reflect.Method;",
          "19: import java.util.logging.Level;",
          "20: import java.util.logging.Logger;",
          "",
          "[Removed Lines]",
          "17: import java.lang.reflect.InvocationTargetException;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:     private void updateSecureSessionFlag() {",
          "110:         try {",
          "112:             ServletContext context = Jenkins.getInstance().servletContext;",
          "114:             Object sessionCookieConfig = m.invoke(context);",
          "",
          "[Removed Lines]",
          "111:             boolean v = fixNull(jenkinsUrl).startsWith(\"https\");",
          "113:             Method m = context.getClass().getMethod(\"getSessionCookieConfig\");",
          "",
          "[Added Lines]",
          "111:             Method m;",
          "112:             try {",
          "113:                 m = context.getClass().getMethod(\"getSessionCookieConfig\");",
          "114:             } catch (NoSuchMethodException x) { // 3.0+",
          "115:                 LOGGER.log(Level.FINE, \"Failed to set secure cookie flag\", x);",
          "116:                 return;",
          "117:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "119:             setHttpOnly.invoke(sessionCookieConfig,true);",
          "121:             Method setSecure = scc.getMethod(\"setSecure\",boolean.class);",
          "122:             setSecure.invoke(sessionCookieConfig,v);",
          "123:         } catch (Exception e) {",
          "125:         }",
          "126:     }",
          "",
          "[Removed Lines]",
          "124:             LOGGER.log(Level.WARNING, \"Failed to set secure cookie flag. Maybe running on Servlet 2.5 and younger?\", e);",
          "",
          "[Added Lines]",
          "126:             boolean v = fixNull(jenkinsUrl).startsWith(\"https\");",
          "129:             LOGGER.log(Level.WARNING, \"Failed to set secure cookie flag\", e);",
          "",
          "---------------"
        ]
      }
    }
  ]
}