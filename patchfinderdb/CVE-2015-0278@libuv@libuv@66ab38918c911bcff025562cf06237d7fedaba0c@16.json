{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fd082901f1aff03ce8221a2bad58b70bf2d95fd9",
      "candidate_info": {
        "commit_hash": "fd082901f1aff03ce8221a2bad58b70bf2d95fd9",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/fd082901f1aff03ce8221a2bad58b70bf2d95fd9",
        "files": [
          "test/task.h"
        ],
        "message": "test: add windows-only snprintf() function\n\nShould fix the build after 96f32a2 inadvertently broke it.\n\nThere is no snprintf() on Windows because, hey, it's a C99 addition\nand the people from Redmond, WA are still firmly stuck in 1989.",
        "before_after_code_files": [
          "test/task.h||test/task.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/task.h||test/task.h": [
          "File: test/task.h -> test/task.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:     return TEST_SKIP;                                                         \\",
          "154:   } while (0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156: #ifdef _WIN32",
          "158: #include <stdarg.h>",
          "163: static int snprintf(char* buf, size_t len, const char* fmt, ...) {",
          "164:   va_list ap;",
          "165:   int n;",
          "167:   va_start(ap, fmt);",
          "168:   n = _vsprintf_p(buf, len, fmt, ap);",
          "169:   va_end(ap);",
          "175:   if (n < 0)",
          "176:     if (len > 0)",
          "177:       buf[0] = '\\0';",
          "179:   return n;",
          "180: }",
          "182: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c8607675b91203e57fa30f62e26ce23cb53e4d88",
      "candidate_info": {
        "commit_hash": "c8607675b91203e57fa30f62e26ce23cb53e4d88",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/c8607675b91203e57fa30f62e26ce23cb53e4d88",
        "files": [
          "ChangeLog",
          "src/version.c"
        ],
        "message": "Now working on v0.11.11",
        "before_after_code_files": [
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #define UV_VERSION_MAJOR 0",
          "33: #define UV_VERSION_MINOR 11",
          "38: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "",
          "[Removed Lines]",
          "34: #define UV_VERSION_PATCH 10",
          "35: #define UV_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "34: #define UV_VERSION_PATCH 11",
          "35: #define UV_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eee4776549f4fc1b941506962dfa6e11a9773976",
      "candidate_info": {
        "commit_hash": "eee4776549f4fc1b941506962dfa6e11a9773976",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/eee4776549f4fc1b941506962dfa6e11a9773976",
        "files": [
          "Makefile.am",
          "src/win/poll.c",
          "test/test-list.h",
          "test/test-poll-closesocket.c",
          "uv.gyp"
        ],
        "message": "windows: fix handling closed socket while poll handle is closing\n\nfixes #1278",
        "before_after_code_files": [
          "Makefile.am||Makefile.am",
          "src/win/poll.c||src/win/poll.c",
          "test/test-list.h||test/test-list.h",
          "test/test-poll-closesocket.c||test/test-poll-closesocket.c",
          "uv.gyp||uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:                          test/test-pipe-server-close.c \\",
          "167:                          test/test-platform-output.c \\",
          "168:                          test/test-poll-close.c \\",
          "169:                          test/test-poll.c \\",
          "170:                          test/test-process-title.c \\",
          "171:                          test/test-ref.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "169:                          test/test-poll-closesocket.c \\",
          "",
          "---------------"
        ],
        "src/win/poll.c||src/win/poll.c": [
          "File: src/win/poll.c -> src/win/poll.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:     if (afd_poll_info->Handles[0].Events & AFD_POLL_LOCAL_CLOSE) {",
          "189:       handle->events = 0;",
          "191:     }",
          "193:     if (events != 0) {",
          "",
          "[Removed Lines]",
          "190:       uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "190:       if (uv__is_active(handle))",
          "191:         uv__handle_stop(handle);",
          "",
          "---------------"
        ],
        "test/test-list.h||test/test-list.h": [
          "File: test/test-list.h -> test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "240: TEST_DECLARE   (poll_duplex)",
          "241: TEST_DECLARE   (poll_unidirectional)",
          "242: TEST_DECLARE   (poll_close)",
          "243: TEST_DECLARE   (ip4_addr)",
          "244: TEST_DECLARE   (ip6_addr_link_local)",
          "245: #ifdef _WIN32",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243: #ifdef _WIN32",
          "244: TEST_DECLARE   (poll_closesocket)",
          "245: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "483:   TEST_ENTRY  (poll_duplex)",
          "484:   TEST_ENTRY  (poll_unidirectional)",
          "485:   TEST_ENTRY  (poll_close)",
          "487:   TEST_ENTRY  (spawn_fails)",
          "488:   TEST_ENTRY  (spawn_exit_code)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "489: #ifdef _WIN32",
          "490:   TEST_ENTRY  (poll_closesocket)",
          "491: #endif",
          "",
          "---------------"
        ],
        "test/test-poll-closesocket.c||test/test-poll-closesocket.c": [
          "File: test/test-poll-closesocket.c -> test/test-poll-closesocket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #ifdef _WIN32",
          "24: #include <errno.h>",
          "26: #include \"uv.h\"",
          "27: #include \"task.h\"",
          "29: uv_os_sock_t sock;",
          "30: uv_poll_t handle;",
          "32: static int close_cb_called = 0;",
          "35: static void close_cb(uv_handle_t* h) {",
          "36:   close_cb_called++;",
          "37: }",
          "40: static void poll_cb(uv_poll_t* h, int status, int events) {",
          "41:   int r;",
          "43:   ASSERT(status == 0);",
          "44:   ASSERT(h == &handle);",
          "46:   r = uv_poll_start(&handle, UV_READABLE, poll_cb);",
          "47:   ASSERT(r == 0);",
          "49:   closesocket(sock);",
          "50:   uv_close((uv_handle_t*) &handle, close_cb);",
          "52: }",
          "55: TEST_IMPL(poll_closesocket) {",
          "56:   struct WSAData wsa_data;",
          "57:   int r;",
          "58:   unsigned long on;",
          "59:   struct sockaddr_in addr;",
          "61:   r = WSAStartup(MAKEWORD(2, 2), &wsa_data);",
          "62:   ASSERT(r == 0);",
          "64:   sock = socket(AF_INET, SOCK_STREAM, 0);",
          "65:   ASSERT(sock != INVALID_SOCKET);",
          "66:   on = 1;",
          "67:   r = ioctlsocket(sock, FIONBIO, &on);",
          "68:   ASSERT(r == 0);",
          "70:   r = uv_ip4_addr(\"127.0.0.1\", TEST_PORT, &addr);",
          "71:   ASSERT(r == 0);",
          "73:   r = connect(sock, (const struct sockaddr*) &addr, sizeof addr);",
          "74:   ASSERT(r != 0);",
          "75:   ASSERT(WSAGetLastError() == WSAEWOULDBLOCK);",
          "77:   r = uv_poll_init_socket(uv_default_loop(), &handle, sock);",
          "78:   ASSERT(r == 0);",
          "79:   r = uv_poll_start(&handle, UV_WRITABLE, poll_cb);",
          "80:   ASSERT(r == 0);",
          "82:   uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "84:   ASSERT(close_cb_called == 1);",
          "86:   MAKE_VALGRIND_HAPPY();",
          "87:   return 0;",
          "88: }",
          "89: #endif",
          "",
          "---------------"
        ],
        "uv.gyp||uv.gyp": [
          "File: uv.gyp -> uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "347:         'test/test-platform-output.c',",
          "348:         'test/test-poll.c',",
          "349:         'test/test-poll-close.c',",
          "350:         'test/test-process-title.c',",
          "351:         'test/test-ref.c',",
          "352:         'test/test-run-nowait.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "350:         'test/test-poll-closesocket.c',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c82cea1ec5ec1f6e1a9c9f664a869ba4e6677fcb",
      "candidate_info": {
        "commit_hash": "c82cea1ec5ec1f6e1a9c9f664a869ba4e6677fcb",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/c82cea1ec5ec1f6e1a9c9f664a869ba4e6677fcb",
        "files": [
          ".gitignore",
          "Makefile.am",
          "configure.ac"
        ],
        "message": "build: enable AM_INIT_AUTOMAKE([subdir-objects])\n\nSquelches (justified) warnings with automake 1.14.\n\nObject files are built in subdirectories now so fix up the dtrace\npostprocessing step to scan for *.lo files in said subdirectories.\n\nFixes #866.",
        "before_after_code_files": [
          "Makefile.am||Makefile.am",
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "215: # every created .o, most projects don't need to include more than one .d",
          "216: .d.o:",
          "217:  $(AM_V_GEN)$(DTRACE) $(DTRACEFLAGS) -G -o $(top_builddir)/uv-dtrace.o -s $< \\",
          "219:  $(AM_V_GEN)printf %s\\\\n \\",
          "220:   '# ${top_builddir}/uv-dtrace.lo - a libtool object file' \\",
          "221:   '# Generated by libtool (GNU libtool) 2.4' \\",
          "",
          "[Removed Lines]",
          "218:   `grep '^pic_object' ${top_builddir}/*.lo | cut -f 2 -d\\'`",
          "",
          "[Added Lines]",
          "218:   `grep '^pic_object' $$(find ${top_builddir} -name \"*.lo\") | cut -f 2 -d\\'`",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: AC_PREREQ(2.57)",
          "16: AC_INIT([libuv], [0.11.5], [https://github.com/joyent/libuv/issues])",
          "18: AC_CONFIG_MACRO_DIR([m4])",
          "19: AC_CANONICAL_HOST",
          "20: AC_ENABLE_SHARED",
          "21: AC_ENABLE_STATIC",
          "22: AC_PROG_CC",
          "23: # AM_PROG_AR is not available in automake v0.11 but it's essential in v0.12.",
          "24: m4_ifdef([AM_PROG_AR], [AM_PROG_AR])",
          "25: m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])",
          "",
          "[Removed Lines]",
          "17: AM_INIT_AUTOMAKE([foreign -Wall -Werror])",
          "",
          "[Added Lines]",
          "17: AM_INIT_AUTOMAKE([foreign subdir-objects -Wall -Werror])",
          "23: AM_PROG_CC_C_O",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed948c29f6e8c290f79325a6f0bc9ef35bcde644",
      "candidate_info": {
        "commit_hash": "ed948c29f6e8c290f79325a6f0bc9ef35bcde644",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/ed948c29f6e8c290f79325a6f0bc9ef35bcde644",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "configure.ac",
          "include/uv-version.h"
        ],
        "message": "2014.04.15, Version 0.11.24 (Unstable)\n\nChanges since version 0.11.23:\n\n* linux: reduce file descriptor count of async pipe (Ben Noordhuis)\n\n* sunos: support IPv6 qualified link-local addresses (Sa\u00fal Ibarra\n  Corretg\u00e9)\n\n* windows: fix opening of read-only stdin pipes (Alexis Campailla)\n\n* windows: Fix an infinite loop in uv_spawn (Alex Crichton)\n\n* windows: fix console signal handler refcount (\u674e\u6e2f\u5e73)\n\n* inet: allow scopeid in uv_inet_pton (Fedor Indutny)\n\n* win: always leave crit section in get_proc_title (Fedor Indutny)",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "include/uv-version.h||include/uv-version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: # OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
          "15: AC_PREREQ(2.57)",
          "17: AC_CONFIG_MACRO_DIR([m4])",
          "18: m4_include([m4/libuv-extra-automake-flags.m4])",
          "19: m4_include([m4/as_case.m4])",
          "",
          "[Removed Lines]",
          "16: AC_INIT([libuv], [0.11.23], [https://github.com/joyent/libuv/issues])",
          "",
          "[Added Lines]",
          "16: AC_INIT([libuv], [0.11.24], [https://github.com/joyent/libuv/issues])",
          "",
          "---------------"
        ],
        "include/uv-version.h||include/uv-version.h": [
          "File: include/uv-version.h -> include/uv-version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #define UV_VERSION_MAJOR 0",
          "34: #define UV_VERSION_MINOR 11",
          "35: #define UV_VERSION_PATCH 24",
          "",
          "[Removed Lines]",
          "36: #define UV_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "36: #define UV_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    }
  ]
}