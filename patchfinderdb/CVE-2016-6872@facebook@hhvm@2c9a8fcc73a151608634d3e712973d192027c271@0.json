{
  "cve_id": "CVE-2016-6872",
  "cve_desc": "Integer overflow in StringUtil::implode in Facebook HHVM before 3.15.0 allows attackers to have unspecified impact via unknown vectors.",
  "repo": "facebook/hhvm",
  "patch_hash": "2c9a8fcc73a151608634d3e712973d192027c271",
  "patch_info": {
    "commit_hash": "2c9a8fcc73a151608634d3e712973d192027c271",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/2c9a8fcc73a151608634d3e712973d192027c271",
    "files": [
      "hphp/runtime/base/string-util.cpp",
      "hphp/test/slow/string_length_overflow/implode.php",
      "hphp/test/slow/string_length_overflow/implode.php.expectf"
    ],
    "message": "Fix integer overflow in StringUtil::implode\n\nReviewed By: ricklavoie\n\nDifferential Revision: D3623922\n\nfbshipit-source-id: 136d124a850c07cc6c63535afc11d36499d576fc",
    "before_after_code_files": [
      "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
      "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php",
      "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
    ]
  },
  "patch_diff": {
    "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp": [
      "File: hphp/runtime/base/string-util.cpp -> hphp/runtime/base/string-util.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "125:   req::vector<String> sitems;",
      "126:   sitems.reserve(size);",
      "129:   for (ArrayIter iter(items); iter; ++iter) {",
      "130:     sitems.emplace_back(iter.second().toString());",
      "131:     len += sitems.back().size() + lenDelim;",
      "",
      "[Removed Lines]",
      "127:   int len = 0;",
      "128:   int lenDelim = delim.size();",
      "",
      "[Added Lines]",
      "127:   size_t len = 0;",
      "128:   size_t lenDelim = delim.size();",
      "",
      "---------------"
    ],
    "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php": [
      "File: hphp/test/slow/string_length_overflow/implode.php -> hphp/test/slow/string_length_overflow/implode.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: $stringLarge = str_repeat('*', 300289);",
      "4: $arrayLarge = array_fill(0, 49981, '*');",
      "5: $string_implode_2 = implode($stringLarge, $arrayLarge);",
      "",
      "---------------"
    ],
    "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf": [
      "File: hphp/test/slow/string_length_overflow/implode.php.expectf -> hphp/test/slow/string_length_overflow/implode.php.expectf",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: Fatal error: String length exceeded 2^31-2: 15008494201 in %s/test/slow/string_length_overflow/implode.php on line 5",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "54a894318e16fd7e093f1eb942a0866b7a3923ab",
      "candidate_info": {
        "commit_hash": "54a894318e16fd7e093f1eb942a0866b7a3923ab",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/54a894318e16fd7e093f1eb942a0866b7a3923ab",
        "files": [
          "hphp/runtime/base/string-data.cpp",
          "hphp/runtime/base/string-data.h",
          "hphp/runtime/base/string-util.cpp",
          "hphp/runtime/ext/string/ext_string.cpp",
          "hphp/test/slow/ext_string/chunk_split_overflow.php.expectf",
          "hphp/test/slow/string/escapeshellarg.php.expectf",
          "hphp/test/slow/string/quoted_printable.php.expectf",
          "hphp/test/slow/string/urlencode.php.expectf",
          "hphp/test/slow/string_length_overflow/fread.php.expectf",
          "hphp/test/slow/string_length_overflow/implode.php.expectf",
          "hphp/test/slow/string_length_overflow/nzuncompress.php.expectf",
          "hphp/test/slow/string_length_overflow/thrift.php.expectf",
          "hphp/test/slow/string_length_overflow/utf8_encode.php.expectf"
        ],
        "message": "Make \"String length exceeded\" fatal consistent and correct.\n\nSummary: Merge different ways of producing a \"String length exceeded\" fatal into one helper, and make the error message reflect the actual limit.\n\nReviewed By: markw65\n\nDifferential Revision: D4893949\n\nfbshipit-source-id: 13b7018976de61c1d85d0152b9de4fa69c05241a",
        "before_after_code_files": [
          "hphp/runtime/base/string-data.cpp||hphp/runtime/base/string-data.cpp",
          "hphp/runtime/base/string-data.h||hphp/runtime/base/string-data.h",
          "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
          "hphp/runtime/ext/string/ext_string.cpp||hphp/runtime/ext/string/ext_string.cpp",
          "hphp/test/slow/ext_string/chunk_split_overflow.php.expectf||hphp/test/slow/ext_string/chunk_split_overflow.php.expectf",
          "hphp/test/slow/string/escapeshellarg.php.expectf||hphp/test/slow/string/escapeshellarg.php.expectf",
          "hphp/test/slow/string/quoted_printable.php.expectf||hphp/test/slow/string/quoted_printable.php.expectf",
          "hphp/test/slow/string/urlencode.php.expectf||hphp/test/slow/string/urlencode.php.expectf",
          "hphp/test/slow/string_length_overflow/fread.php.expectf||hphp/test/slow/string_length_overflow/fread.php.expectf",
          "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf",
          "hphp/test/slow/string_length_overflow/nzuncompress.php.expectf||hphp/test/slow/string_length_overflow/nzuncompress.php.expectf",
          "hphp/test/slow/string_length_overflow/thrift.php.expectf||hphp/test/slow/string_length_overflow/thrift.php.expectf",
          "hphp/test/slow/string_length_overflow/utf8_encode.php.expectf||hphp/test/slow/string_length_overflow/utf8_encode.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
            "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
            "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/string-data.cpp||hphp/runtime/base/string-data.cpp": [
          "File: hphp/runtime/base/string-data.cpp -> hphp/runtime/base/string-data.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: }",
          "52: ALWAYS_INLINE StringData* allocFlat(size_t len) {",
          "53:   if (UNLIKELY(len > StringData::MaxSize)) {",
          "55:   }",
          "56:   auto const sizeClass = MemoryManager::size2Index(len + kStringOverhead);",
          "57:   StringData* sd;",
          "",
          "[Removed Lines]",
          "43: namespace {",
          "45: NEVER_INLINE void throw_string_too_large(size_t len) {",
          "46:   raise_error(\"String length exceeded 2^31-2: %zu\", len);",
          "47: }",
          "54:     throw_string_too_large(len);",
          "",
          "[Added Lines]",
          "43: NEVER_INLINE void raiseStringLengthExceededError(size_t len) {",
          "44:   raise_error(\"String length exceeded: %zu > %u\", len, StringData::MaxSize);",
          "50:     raiseStringLengthExceededError(len);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95: template <bool trueStatic> ALWAYS_INLINE",
          "96: StringData* StringData::MakeShared(folly::StringPiece sl) {",
          "97:   if (UNLIKELY(sl.size() > StringData::MaxSize)) {",
          "99:   }",
          "101:   auto const allocSize = sl.size() + kStringOverhead;",
          "",
          "[Removed Lines]",
          "98:     throw_string_too_large(sl.size());",
          "",
          "[Added Lines]",
          "94:     raiseStringLengthExceededError(sl.size());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "235: StringData* StringData::Make(const char* data, size_t len, CopyStringMode) {",
          "236:   if (UNLIKELY(len > StringData::MaxSize)) {",
          "238:   }",
          "240:   return Make(folly::StringPiece(data, len), CopyString);",
          "",
          "[Removed Lines]",
          "237:     throw_string_too_large(len);",
          "",
          "[Added Lines]",
          "233:     raiseStringLengthExceededError(len);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "259: StringData* StringData::Make(char* data, size_t len, AttachStringMode) {",
          "260:   if (UNLIKELY(len > StringData::MaxSize)) {",
          "262:   }",
          "263:   auto const sd = Make(folly::StringPiece(data, len), CopyString);",
          "264:   free(data);",
          "",
          "[Removed Lines]",
          "261:     throw_string_too_large(len);",
          "",
          "[Added Lines]",
          "257:     raiseStringLengthExceededError(len);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "422:   auto const newLen = size_t(m_len) + size_t(len);",
          "424:   if (UNLIKELY(newLen > MaxSize)) {",
          "426:   }",
          "",
          "[Removed Lines]",
          "425:     throw_string_too_large(newLen);",
          "",
          "[Added Lines]",
          "421:     raiseStringLengthExceededError(newLen);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "450:   if (len == 0) return this;",
          "451:   if (UNLIKELY(size_t(m_len) + size_t(len) > MaxSize)) {",
          "453:   }",
          "455:   auto const newLen = m_len + len;",
          "",
          "[Removed Lines]",
          "452:     throw_string_too_large(size_t(len) + size_t(m_len));",
          "",
          "[Added Lines]",
          "448:     raiseStringLengthExceededError(size_t(len) + size_t(m_len));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "490:   if (len == 0) return this;",
          "491:   if (UNLIKELY(size_t(m_len) + size_t(len) > MaxSize)) {",
          "493:   }",
          "495:   auto const newLen = m_len + len;",
          "",
          "[Removed Lines]",
          "492:     throw_string_too_large(size_t(len) + size_t(m_len));",
          "",
          "[Added Lines]",
          "488:     raiseStringLengthExceededError(size_t(len) + size_t(m_len));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "700:   if (carry) {",
          "701:     if (UNLIKELY(len + 1 > MaxSize)) {",
          "703:     }",
          "705:     assert(len + 1 <= capacity());",
          "",
          "[Removed Lines]",
          "702:       throw_string_too_large(len + 1);",
          "",
          "[Added Lines]",
          "698:       raiseStringLengthExceededError(len + 1);",
          "",
          "---------------"
        ],
        "hphp/runtime/base/string-data.h||hphp/runtime/base/string-data.h": [
          "File: hphp/runtime/base/string-data.h -> hphp/runtime/base/string-data.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "540: #undef SIZE_CLASS",
          "541: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "546: void raiseStringLengthExceededError(size_t len);",
          "",
          "---------------"
        ],
        "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp": [
          "File: hphp/runtime/base/string-util.cpp -> hphp/runtime/base/string-util.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "475:   uint64_t result =",
          "476:     (uint64_t) nmemb * (uint64_t) size + (uint64_t) offset;",
          "477:   if (UNLIKELY(result > StringData::MaxSize)) {",
          "480:   }",
          "481:   return result;",
          "482: }",
          "",
          "[Removed Lines]",
          "478:     throw",
          "479:       FatalErrorException(0, \"String length exceeded 2^31-2: %\" PRIu64, result);",
          "",
          "[Added Lines]",
          "478:     raiseStringLengthExceededError(result);",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/string/ext_string.cpp||hphp/runtime/ext/string/ext_string.cpp": [
          "File: hphp/runtime/ext/string/ext_string.cpp -> hphp/runtime/ext/string/ext_string.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "912:   auto size = multiplier * size_t(input.size());",
          "913:   if (multiplier >= StringData::MaxSize || size > StringData::MaxSize) {",
          "916:   }",
          "918:   StringBuffer ret(input.size() * multiplier);",
          "",
          "[Removed Lines]",
          "914:     throw",
          "915:       FatalErrorException(0, \"String length exceeded 2^31-2: %\" PRIu64, size);",
          "",
          "[Added Lines]",
          "914:     raiseStringLengthExceededError(size);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_string/chunk_split_overflow.php.expectf||hphp/test/slow/ext_string/chunk_split_overflow.php.expectf": [
          "File: hphp/test/slow/ext_string/chunk_split_overflow.php.expectf -> hphp/test/slow/ext_string/chunk_split_overflow.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2: Fatal error: String length exceeded 2^31-2: 4000004000000 in %s on line 3",
          "",
          "[Added Lines]",
          "1: Fatal error: String length exceeded: %d > %d in %s on line %d",
          "",
          "---------------"
        ],
        "hphp/test/slow/string/escapeshellarg.php.expectf||hphp/test/slow/string/escapeshellarg.php.expectf": [
          "File: hphp/test/slow/string/escapeshellarg.php.expectf -> hphp/test/slow/string/escapeshellarg.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: String length exceeded 2^31-2: %d in %s on line 2",
          "",
          "[Added Lines]",
          "1: Fatal error: String length exceeded: %d > %d in %s on line %d",
          "",
          "---------------"
        ],
        "hphp/test/slow/string/quoted_printable.php.expectf||hphp/test/slow/string/quoted_printable.php.expectf": [
          "File: hphp/test/slow/string/quoted_printable.php.expectf -> hphp/test/slow/string/quoted_printable.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: String length exceeded 2^31-2: %d in %s on line 3",
          "",
          "[Added Lines]",
          "1: Fatal error: String length exceeded: %d > %d in %s on line %d",
          "",
          "---------------"
        ],
        "hphp/test/slow/string/urlencode.php.expectf||hphp/test/slow/string/urlencode.php.expectf": [
          "File: hphp/test/slow/string/urlencode.php.expectf -> hphp/test/slow/string/urlencode.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: String length exceeded 2^31-2: %d in %s on line 2",
          "",
          "[Added Lines]",
          "1: Fatal error: String length exceeded: %d > %d in %s on line %d",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/fread.php.expectf||hphp/test/slow/string_length_overflow/fread.php.expectf": [
          "File: hphp/test/slow/string_length_overflow/fread.php.expectf -> hphp/test/slow/string_length_overflow/fread.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: String length exceeded %s",
          "",
          "[Added Lines]",
          "1: Fatal error: String length exceeded: %d > %d in %s on line %d",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf": [
          "File: hphp/test/slow/string_length_overflow/implode.php.expectf -> hphp/test/slow/string_length_overflow/implode.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2: Fatal error: String length exceeded 2^31-2: 15008494201 in %s/test/slow/string_length_overflow/implode.php on line 5",
          "",
          "[Added Lines]",
          "1: Fatal error: String length exceeded: %d > %d in %s on line %d",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/nzuncompress.php.expectf||hphp/test/slow/string_length_overflow/nzuncompress.php.expectf": [
          "File: hphp/test/slow/string_length_overflow/nzuncompress.php.expectf -> hphp/test/slow/string_length_overflow/nzuncompress.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: String length exceeded %s",
          "",
          "[Added Lines]",
          "1: Fatal error: String length exceeded: %d > %d in %s on line %d",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/thrift.php.expectf||hphp/test/slow/string_length_overflow/thrift.php.expectf": [
          "File: hphp/test/slow/string_length_overflow/thrift.php.expectf -> hphp/test/slow/string_length_overflow/thrift.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: String length exceeded %s",
          "",
          "[Added Lines]",
          "1: Fatal error: String length exceeded: %d > %d in %s on line %d",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/utf8_encode.php.expectf||hphp/test/slow/string_length_overflow/utf8_encode.php.expectf": [
          "File: hphp/test/slow/string_length_overflow/utf8_encode.php.expectf -> hphp/test/slow/string_length_overflow/utf8_encode.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: Fatal error: String length exceeded %s",
          "",
          "[Added Lines]",
          "1: Fatal error: String length exceeded: %d > %d in %s on line %d",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "86c51770e06619ecad1d7fcd3604c6a10792141f",
      "candidate_info": {
        "commit_hash": "86c51770e06619ecad1d7fcd3604c6a10792141f",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/86c51770e06619ecad1d7fcd3604c6a10792141f",
        "files": [
          "hphp/runtime/base/string-util.cpp",
          "hphp/test/slow/string_length_overflow/implode.php",
          "hphp/test/slow/string_length_overflow/implode.php.expectf"
        ],
        "message": "Fix integer overflow in StringUtil::implode\n\nReviewed By: ricklavoie\n\nDifferential Revision: D3623922\n\nfbshipit-source-id: 136d124a850c07cc6c63535afc11d36499d576fc",
        "before_after_code_files": [
          "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
          "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php",
          "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
            "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php",
            "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
            "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php",
            "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp": [
          "File: hphp/runtime/base/string-util.cpp -> hphp/runtime/base/string-util.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:   req::vector<String> sitems;",
          "126:   sitems.reserve(size);",
          "129:   for (ArrayIter iter(items); iter; ++iter) {",
          "130:     sitems.emplace_back(iter.second().toString());",
          "131:     len += sitems.back().size() + lenDelim;",
          "",
          "[Removed Lines]",
          "127:   int len = 0;",
          "128:   int lenDelim = delim.size();",
          "",
          "[Added Lines]",
          "127:   size_t len = 0;",
          "128:   size_t lenDelim = delim.size();",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php": [
          "File: hphp/test/slow/string_length_overflow/implode.php -> hphp/test/slow/string_length_overflow/implode.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: $stringLarge = str_repeat('*', 300289);",
          "4: $arrayLarge = array_fill(0, 49981, '*');",
          "5: $string_implode_2 = implode($stringLarge, $arrayLarge);",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf": [
          "File: hphp/test/slow/string_length_overflow/implode.php.expectf -> hphp/test/slow/string_length_overflow/implode.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: Fatal error: String length exceeded 2^31-2: 15008494201 in %s/test/slow/string_length_overflow/implode.php on line 5",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9625214cc1589b6bd21f6f15157654640874feac",
      "candidate_info": {
        "commit_hash": "9625214cc1589b6bd21f6f15157654640874feac",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/9625214cc1589b6bd21f6f15157654640874feac",
        "files": [
          "hphp/runtime/base/string-util.cpp",
          "hphp/test/slow/string_length_overflow/implode.php",
          "hphp/test/slow/string_length_overflow/implode.php.expectf"
        ],
        "message": "Fix integer overflow in StringUtil::implode\n\nReviewed By: ricklavoie\n\nDifferential Revision: D3623922\n\nfbshipit-source-id: 136d124a850c07cc6c63535afc11d36499d576fc",
        "before_after_code_files": [
          "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
          "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php",
          "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
            "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php",
            "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
            "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php",
            "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp": [
          "File: hphp/runtime/base/string-util.cpp -> hphp/runtime/base/string-util.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:   if (size == 0) return empty_string();",
          "125:   String* sitems = (String*)req::malloc(size * sizeof(String));",
          "129:   for (ArrayIter iter(items); iter; ++iter) {",
          "130:     new (&sitems[i]) String(iter.second().toString());",
          "131:     len += sitems[i].size() + lenDelim;",
          "",
          "[Removed Lines]",
          "126:   int len = 0;",
          "127:   int lenDelim = delim.size();",
          "128:   int i = 0;",
          "",
          "[Added Lines]",
          "126:   size_t len = 0;",
          "127:   size_t lenDelim = delim.size();",
          "128:   size_t i = 0;",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php": [
          "File: hphp/test/slow/string_length_overflow/implode.php -> hphp/test/slow/string_length_overflow/implode.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: $stringLarge = str_repeat('*', 300289);",
          "4: $arrayLarge = array_fill(0, 49981, '*');",
          "5: $string_implode_2 = implode($stringLarge, $arrayLarge);",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf": [
          "File: hphp/test/slow/string_length_overflow/implode.php.expectf -> hphp/test/slow/string_length_overflow/implode.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: Fatal error: String length exceeded 2^31-2: 15008494201 in %s/test/slow/string_length_overflow/implode.php on line 5",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "686979a01803cd4dff13c3e0a3415b0ce1c95b32",
      "candidate_info": {
        "commit_hash": "686979a01803cd4dff13c3e0a3415b0ce1c95b32",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/686979a01803cd4dff13c3e0a3415b0ce1c95b32",
        "files": [
          "hphp/runtime/base/string-util.cpp",
          "hphp/test/slow/string_length_overflow/implode.php",
          "hphp/test/slow/string_length_overflow/implode.php.expectf"
        ],
        "message": "Fix integer overflow in StringUtil::implode\n\nReviewed By: ricklavoie\n\nDifferential Revision: D3623922\n\nfbshipit-source-id: 136d124a850c07cc6c63535afc11d36499d576fc",
        "before_after_code_files": [
          "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
          "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php",
          "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
            "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php",
            "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp",
            "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php",
            "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/string-util.cpp||hphp/runtime/base/string-util.cpp": [
          "File: hphp/runtime/base/string-util.cpp -> hphp/runtime/base/string-util.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:   if (size == 0) return empty_string();",
          "125:   String* sitems = (String*)req::malloc(size * sizeof(String));",
          "129:   for (ArrayIter iter(items); iter; ++iter) {",
          "130:     new (&sitems[i]) String(iter.second().toString());",
          "131:     len += sitems[i].size() + lenDelim;",
          "",
          "[Removed Lines]",
          "126:   int len = 0;",
          "127:   int lenDelim = delim.size();",
          "128:   int i = 0;",
          "",
          "[Added Lines]",
          "126:   size_t len = 0;",
          "127:   size_t lenDelim = delim.size();",
          "128:   size_t i = 0;",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/implode.php||hphp/test/slow/string_length_overflow/implode.php": [
          "File: hphp/test/slow/string_length_overflow/implode.php -> hphp/test/slow/string_length_overflow/implode.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: $stringLarge = str_repeat('*', 300289);",
          "4: $arrayLarge = array_fill(0, 49981, '*');",
          "5: $string_implode_2 = implode($stringLarge, $arrayLarge);",
          "",
          "---------------"
        ],
        "hphp/test/slow/string_length_overflow/implode.php.expectf||hphp/test/slow/string_length_overflow/implode.php.expectf": [
          "File: hphp/test/slow/string_length_overflow/implode.php.expectf -> hphp/test/slow/string_length_overflow/implode.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: Fatal error: String length exceeded 2^31-2: 15008494201 in %s/test/slow/string_length_overflow/implode.php on line 5",
          "",
          "---------------"
        ]
      }
    }
  ]
}