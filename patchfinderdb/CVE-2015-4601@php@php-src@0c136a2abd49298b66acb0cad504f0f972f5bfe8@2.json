{
  "cve_id": "CVE-2015-4601",
  "cve_desc": "PHP before 5.6.7 might allow remote attackers to cause a denial of service (application crash) or possibly execute arbitrary code via an unexpected data type, related to \"type confusion\" issues in (1) ext/soap/php_encoding.c, (2) ext/soap/php_http.c, and (3) ext/soap/soap.c, a different issue than CVE-2015-4600.",
  "repo": "php/php-src",
  "patch_hash": "0c136a2abd49298b66acb0cad504f0f972f5bfe8",
  "patch_info": {
    "commit_hash": "0c136a2abd49298b66acb0cad504f0f972f5bfe8",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/0c136a2abd49298b66acb0cad504f0f972f5bfe8",
    "files": [
      "ext/soap/php_encoding.c",
      "ext/soap/php_http.c",
      "ext/soap/soap.c"
    ],
    "message": "Added type checks",
    "before_after_code_files": [
      "ext/soap/php_encoding.c||ext/soap/php_encoding.c",
      "ext/soap/php_http.c||ext/soap/php_http.c",
      "ext/soap/soap.c||ext/soap/soap.c"
    ]
  },
  "patch_diff": {
    "ext/soap/php_encoding.c||ext/soap/php_encoding.c": [
      "File: ext/soap/php_encoding.c -> ext/soap/php_encoding.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3649:       Z_OBJCE_PP(tmp) == soap_var_class_entry) {",
      "3650:    zval **ztype;",
      "3653:     soap_error0(E_ERROR,  \"Encoding: SoapVar has no 'enc_type' property\");",
      "3654:    }",
      "3655:    cur_type = Z_LVAL_PP(ztype);",
      "3658:     cur_stype = Z_STRVAL_PP(ztype);",
      "3659:    } else {",
      "3660:     cur_stype = NULL;",
      "3661:    }",
      "3664:     cur_ns = Z_STRVAL_PP(ztype);",
      "3665:    } else {",
      "3666:     cur_ns = NULL;",
      "",
      "[Removed Lines]",
      "3652:    if (zend_hash_find(Z_OBJPROP_PP(tmp), \"enc_type\", sizeof(\"enc_type\"), (void **)&ztype) == FAILURE) {",
      "3657:    if (zend_hash_find(Z_OBJPROP_PP(tmp), \"enc_stype\", sizeof(\"enc_stype\"), (void **)&ztype) == SUCCESS) {",
      "3663:    if (zend_hash_find(Z_OBJPROP_PP(tmp), \"enc_ns\", sizeof(\"enc_ns\"), (void **)&ztype) == SUCCESS) {",
      "",
      "[Added Lines]",
      "3652:    if (zend_hash_find(Z_OBJPROP_PP(tmp), \"enc_type\", sizeof(\"enc_type\"), (void **)&ztype) == FAILURE ||",
      "3653:        Z_TYPE_PP(ztype) != IS_LONG) {",
      "3658:    if (zend_hash_find(Z_OBJPROP_PP(tmp), \"enc_stype\", sizeof(\"enc_stype\"), (void **)&ztype) == SUCCESS &&",
      "3659:        Z_TYPE_PP(ztype) == IS_STRING) {",
      "3665:    if (zend_hash_find(Z_OBJPROP_PP(tmp), \"enc_ns\", sizeof(\"enc_ns\"), (void **)&ztype) == SUCCESS &&",
      "3666:        Z_TYPE_PP(ztype) == IS_STRING) {",
      "",
      "---------------"
    ],
    "ext/soap/php_http.c||ext/soap/php_http.c": [
      "File: ext/soap/php_http.c -> ext/soap/php_http.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "36: {",
      "37:  zval **login, **password;",
      "40:   unsigned char* buf;",
      "41:   int len;",
      "42:   smart_str auth = {0};",
      "44:   smart_str_appendl(&auth, Z_STRVAL_PP(login), Z_STRLEN_PP(login));",
      "45:   smart_str_appendc(&auth, ':');",
      "47:    smart_str_appendl(&auth, Z_STRVAL_PP(password), Z_STRLEN_PP(password));",
      "48:   }",
      "49:   smart_str_0(&auth);",
      "",
      "[Removed Lines]",
      "39:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_proxy_login\", sizeof(\"_proxy_login\"), (void **)&login) == SUCCESS) {",
      "46:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_proxy_password\", sizeof(\"_proxy_password\"), (void **)&password) == SUCCESS) {",
      "",
      "[Added Lines]",
      "39:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_proxy_login\", sizeof(\"_proxy_login\"), (void **)&login) == SUCCESS &&",
      "40:      Z_TYPE_PP(login) == IS_STRING) {",
      "47:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_proxy_password\", sizeof(\"_proxy_password\"), (void **)&password) == SUCCESS &&",
      "48:       Z_TYPE_PP(password) == IS_STRING) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "64:  zval **login, **password;",
      "66:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_login\", sizeof(\"_login\"), (void **)&login) == SUCCESS &&",
      "68:   unsigned char* buf;",
      "69:   int len;",
      "70:   smart_str auth = {0};",
      "72:   smart_str_appendl(&auth, Z_STRVAL_PP(login), Z_STRLEN_PP(login));",
      "73:   smart_str_appendc(&auth, ':');",
      "75:    smart_str_appendl(&auth, Z_STRVAL_PP(password), Z_STRLEN_PP(password));",
      "76:   }",
      "77:   smart_str_0(&auth);",
      "",
      "[Removed Lines]",
      "67:    !zend_hash_exists(Z_OBJPROP_P(this_ptr), \"_digest\", sizeof(\"_digest\"))) {",
      "74:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_password\", sizeof(\"_password\"), (void **)&password) == SUCCESS) {",
      "",
      "[Added Lines]",
      "69:      Z_TYPE_PP(login) == IS_STRING &&",
      "70:      !zend_hash_exists(Z_OBJPROP_P(this_ptr), \"_digest\", sizeof(\"_digest\"))) {",
      "77:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_password\", sizeof(\"_password\"), (void **)&password) == SUCCESS &&",
      "78:       Z_TYPE_PP(password) == IS_STRING) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "509:   }",
      "510:   if (!http_1_1 ||",
      "511:    (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_keep_alive\", sizeof(\"_keep_alive\"), (void **)&tmp) == SUCCESS &&",
      "512:     Z_LVAL_PP(tmp) == 0)) {",
      "513:    smart_str_append_const(&soap_headers, \"\\r\\n\"",
      "514:     \"Connection: close\\r\\n\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "516:     (Z_TYPE_PP(tmp) == IS_BOOL || Z_TYPE_PP(tmp) == IS_LONG) &&",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "742:   }",
      "746:    zval **data;",
      "747:    char *key;",
      "748:    int i, n;",
      "",
      "[Removed Lines]",
      "745:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) == SUCCESS) {",
      "",
      "[Added Lines]",
      "750:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) == SUCCESS &&",
      "751:       Z_TYPE_PP(cookies) == IS_ARRAY) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "785:   smart_str_append_const(&soap_headers, \"\\r\\n\");",
      "786:   smart_str_0(&soap_headers);",
      "787:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"trace\", sizeof(\"trace\"), (void **) &trace) == SUCCESS &&",
      "789:    add_property_stringl(this_ptr, \"__last_request_headers\", soap_headers.c, soap_headers.len, 1);",
      "790:   }",
      "791:   smart_str_appendl(&soap_headers, request, request_size);",
      "",
      "[Removed Lines]",
      "788:       Z_LVAL_PP(trace) > 0) {",
      "",
      "[Added Lines]",
      "794:       (Z_TYPE_PP(trace) == IS_BOOL || Z_TYPE_PP(trace) == IS_LONG) && Z_LVAL_PP(trace) != 0) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "830:   }",
      "832:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"trace\", sizeof(\"trace\"), (void **) &trace) == SUCCESS &&",
      "834:    add_property_stringl(this_ptr, \"__last_response_headers\", http_headers, http_header_size, 1);",
      "835:   }",
      "",
      "[Removed Lines]",
      "833:       Z_LVAL_PP(trace) > 0) {",
      "",
      "[Added Lines]",
      "839:       (Z_TYPE_PP(trace) == IS_BOOL || Z_TYPE_PP(trace) == IS_LONG) && Z_LVAL_PP(trace) != 0) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "879:   char *eqpos, *sempos;",
      "880:   zval **cookies;",
      "883:    zval *tmp_cookies;",
      "884:    MAKE_STD_ZVAL(tmp_cookies);",
      "885:    array_init(tmp_cookies);",
      "",
      "[Removed Lines]",
      "882:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) == FAILURE) {",
      "",
      "[Added Lines]",
      "888:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) == FAILURE ||",
      "889:       Z_TYPE_PP(cookies) != IS_ARRAY) {",
      "",
      "---------------"
    ],
    "ext/soap/soap.c||ext/soap/soap.c": [
      "File: ext/soap/soap.c -> ext/soap/soap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2554:  }",
      "2556:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"trace\", sizeof(\"trace\"), (void **) &trace) == SUCCESS &&",
      "2558:   add_property_stringl(this_ptr, \"__last_request\", buf, buf_size, 1);",
      "2559:  }",
      "",
      "[Removed Lines]",
      "2557:      Z_LVAL_PP(trace) > 0) {",
      "",
      "[Added Lines]",
      "2557:      (Z_LVAL_PP(trace) == IS_BOOL || Z_LVAL_PP(trace) == IS_LONG) && Z_LVAL_PP(trace) != 0) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2594:   }",
      "2595:   ret = FALSE;",
      "2596:  } else if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"trace\", sizeof(\"trace\"), (void **) &trace) == SUCCESS &&",
      "2598:   add_property_stringl(this_ptr, \"__last_response\", Z_STRVAL_P(response), Z_STRLEN_P(response), 1);",
      "2599:  }",
      "2600:  xmlFree(buf);",
      "",
      "[Removed Lines]",
      "2597:      Z_LVAL_PP(trace) > 0) {",
      "",
      "[Added Lines]",
      "2597:             (Z_LVAL_PP(trace) == IS_BOOL || Z_LVAL_PP(trace) == IS_LONG) && Z_LVAL_PP(trace) != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2634:  SOAP_CLIENT_BEGIN_CODE();",
      "2638:   zend_hash_del(Z_OBJPROP_P(this_ptr), \"__last_request\", sizeof(\"__last_request\"));",
      "2639:   zend_hash_del(Z_OBJPROP_P(this_ptr), \"__last_response\", sizeof(\"__last_response\"));",
      "2640:  }",
      "2643:   soap_version = SOAP_1_2;",
      "2644:  } else {",
      "2645:   soap_version = SOAP_1_1;",
      "",
      "[Removed Lines]",
      "2636:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"trace\", sizeof(\"trace\"), (void **) &trace) == SUCCESS",
      "2637:   && Z_LVAL_PP(trace) > 0) {",
      "2641:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_soap_version\", sizeof(\"_soap_version\"), (void **) &tmp) == SUCCESS",
      "2642:   && Z_LVAL_PP(tmp) == SOAP_1_2) {",
      "",
      "[Added Lines]",
      "2636:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"trace\", sizeof(\"trace\"), (void **) &trace) == SUCCESS &&",
      "2637:      (Z_LVAL_PP(trace) == IS_BOOL || Z_LVAL_PP(trace) == IS_LONG) && Z_LVAL_PP(trace) != 0) {",
      "2641:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_soap_version\", sizeof(\"_soap_version\"), (void **) &tmp) == SUCCESS &&",
      "2642:   Z_TYPE_PP(tmp) == IS_LONG && Z_LVAL_PP(tmp) == SOAP_1_2) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2735:   zval **uri;",
      "2736:   smart_str action = {0};",
      "2739:    add_soap_fault(this_ptr, \"Client\", \"Error finding \\\"uri\\\" property\", NULL, NULL TSRMLS_CC);",
      "2740:   } else if (location == NULL) {",
      "2741:    add_soap_fault(this_ptr, \"Client\", \"Error could not find \\\"location\\\" property\", NULL, NULL TSRMLS_CC);",
      "",
      "[Removed Lines]",
      "2738:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"uri\", sizeof(\"uri\"), (void *)&uri) == FAILURE) {",
      "",
      "[Added Lines]",
      "2738:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"uri\", sizeof(\"uri\"), (void *)&uri) == FAILURE || Z_TYPE_PP(uri) != IS_STRING) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "3006:   return;",
      "3007:  }",
      "3010:   RETURN_STRINGL(Z_STRVAL_PP(tmp), Z_STRLEN_PP(tmp), 1);",
      "3011:  }",
      "3012:  RETURN_NULL();",
      "",
      "[Removed Lines]",
      "3009:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"__last_request\", sizeof(\"__last_request\"), (void **)&tmp) == SUCCESS) {",
      "",
      "[Added Lines]",
      "3009:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"__last_request\", sizeof(\"__last_request\"), (void **)&tmp) == SUCCESS &&",
      "3010:      Z_TYPE_PP(tmp) == IS_STRING) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "3024:   return;",
      "3025:  }",
      "3028:   RETURN_STRINGL(Z_STRVAL_PP(tmp), Z_STRLEN_PP(tmp), 1);",
      "3029:  }",
      "3030:  RETURN_NULL();",
      "",
      "[Removed Lines]",
      "3027:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"__last_response\", sizeof(\"__last_response\"), (void **)&tmp) == SUCCESS) {",
      "",
      "[Added Lines]",
      "3028:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"__last_response\", sizeof(\"__last_response\"), (void **)&tmp) == SUCCESS &&",
      "3029:      Z_TYPE_PP(tmp) == IS_STRING) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "3042:   return;",
      "3043:  }",
      "3046:   RETURN_STRINGL(Z_STRVAL_PP(tmp), Z_STRLEN_PP(tmp), 1);",
      "3047:  }",
      "3048:  RETURN_NULL();",
      "",
      "[Removed Lines]",
      "3045:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"__last_request_headers\", sizeof(\"__last_request_headers\"), (void **)&tmp) == SUCCESS) {",
      "",
      "[Added Lines]",
      "3047:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"__last_request_headers\", sizeof(\"__last_request_headers\"), (void **)&tmp) == SUCCESS &&",
      "3048:      Z_TYPE_PP(tmp) == IS_STRING) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "3060:   return;",
      "3061:  }",
      "3064:   RETURN_STRINGL(Z_STRVAL_PP(tmp), Z_STRLEN_PP(tmp), 1);",
      "3065:  }",
      "3066:  RETURN_NULL();",
      "",
      "[Removed Lines]",
      "3063:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"__last_response_headers\", sizeof(\"__last_response_headers\"), (void **)&tmp) == SUCCESS) {",
      "",
      "[Added Lines]",
      "3066:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"__last_response_headers\", sizeof(\"__last_response_headers\"), (void **)&tmp) == SUCCESS &&",
      "3067:      Z_TYPE_PP(tmp) == IS_STRING) {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "3116:  }",
      "3118:  if (val == NULL) {",
      "3120:    zend_hash_del(Z_ARRVAL_PP(cookies), name, name_len+1);",
      "3121:   }",
      "3122:  } else {",
      "3123:   zval *zcookie;",
      "3126:    zval *tmp_cookies;",
      "3128:    MAKE_STD_ZVAL(tmp_cookies);",
      "",
      "[Removed Lines]",
      "3119:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) == SUCCESS) {",
      "3125:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) == FAILURE) {",
      "",
      "[Added Lines]",
      "3123:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) == SUCCESS &&",
      "3124:       Z_TYPE_PP(cookies) == IS_ARRAY) {",
      "3130:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) == FAILURE ||",
      "3131:       Z_TYPE_PP(cookies) != IS_ARRAY) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "3151:  array_init(return_value);",
      "3154:   zend_hash_copy(Z_ARRVAL_P(return_value), Z_ARRVAL_P(*cookies), (copy_ctor_func_t) zval_add_ref, (void *)&tmp, sizeof(zval*));",
      "3155:  }",
      "3156: }",
      "",
      "[Removed Lines]",
      "3153:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) != FAILURE) {",
      "",
      "[Added Lines]",
      "3159:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) != FAILURE &&",
      "3160:      Z_TYPE_PP(cookies) == IS_ARRAY) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "4237:    }",
      "4238:   }",
      "4239:  } else {",
      "4241:    style = Z_LVAL_PP(zstyle);",
      "4242:   } else {",
      "4243:    style = SOAP_RPC;",
      "",
      "[Removed Lines]",
      "4240:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"style\", sizeof(\"style\"), (void **)&zstyle) == SUCCESS) {",
      "",
      "[Added Lines]",
      "4247:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"style\", sizeof(\"style\"), (void **)&zstyle) == SUCCESS &&",
      "4248:       Z_TYPE_PP(zstyle) == IS_LONG) {",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "4260:   }",
      "4262:   if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"use\", sizeof(\"use\"), (void **)&zuse) == SUCCESS &&",
      "4264:    use = SOAP_LITERAL;",
      "4265:   } else {",
      "4266:    use = SOAP_ENCODED;",
      "",
      "[Removed Lines]",
      "4263:      Z_LVAL_PP(zuse) == SOAP_LITERAL) {",
      "",
      "[Added Lines]",
      "4271:       Z_TYPE_PP(zuse) == IS_LONG && Z_LVAL_PP(zuse) == SOAP_LITERAL) {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "4390:   zval **param_data;",
      "4392:   if (zend_hash_find(Z_OBJPROP_P(param_val), \"param_name\", sizeof(\"param_name\"), (void **)&param_name) == SUCCESS &&",
      "4393:       zend_hash_find(Z_OBJPROP_P(param_val), \"param_data\", sizeof(\"param_data\"), (void **)&param_data) == SUCCESS) {",
      "4394:    param_val = *param_data;",
      "4395:    name = Z_STRVAL_PP(param_name);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4401:       Z_TYPE_PP(param_name) == IS_STRING &&",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aebb23e4dbfd9eee3f0ace6e37c876684aa62b20",
      "candidate_info": {
        "commit_hash": "aebb23e4dbfd9eee3f0ace6e37c876684aa62b20",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/aebb23e4dbfd9eee3f0ace6e37c876684aa62b20",
        "files": [
          "ext/soap/soap.c",
          "ext/soap/tests/bug49898.phpt"
        ],
        "message": "Bug 49898 __getCookies() method implementation",
        "before_after_code_files": [
          "ext/soap/soap.c||ext/soap/soap.c",
          "ext/soap/tests/bug49898.phpt||ext/soap/tests/bug49898.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/soap/soap.c||ext/soap/soap.c"
          ],
          "candidate": [
            "ext/soap/soap.c||ext/soap/soap.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/soap/soap.c||ext/soap/soap.c": [
          "File: ext/soap/soap.c -> ext/soap/soap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "225: PHP_METHOD(SoapClient, __getTypes);",
          "226: PHP_METHOD(SoapClient, __doRequest);",
          "227: PHP_METHOD(SoapClient, __setCookie);",
          "228: PHP_METHOD(SoapClient, __setLocation);",
          "229: PHP_METHOD(SoapClient, __setSoapHeaders);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228: PHP_METHOD(SoapClient, __getCookies);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368:  ZEND_ARG_INFO(0, value)",
          "369: ZEND_END_ARG_INFO()",
          "371: ZEND_BEGIN_ARG_INFO_EX(arginfo_soapclient___setsoapheaders, 0, 0, 1)",
          "372:  ZEND_ARG_INFO(0, soapheaders)",
          "373: ZEND_END_ARG_INFO()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "372: ZEND_BEGIN_ARG_INFO(arginfo_soapclient___getcookies, 0)",
          "373: ZEND_END_ARG_INFO()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "422:  PHP_ME(SoapClient, __getTypes,      arginfo_soapclient___gettypes, 0)",
          "423:  PHP_ME(SoapClient, __doRequest,     arginfo_soapclient___dorequest, 0)",
          "424:  PHP_ME(SoapClient, __setCookie,     arginfo_soapclient___setcookie, 0)",
          "425:  PHP_ME(SoapClient, __setLocation,     arginfo_soapclient___setlocation, 0)",
          "426:  PHP_ME(SoapClient, __setSoapHeaders,    arginfo_soapclient___setsoapheaders, 0)",
          "427:  PHP_FE_END",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "429:  PHP_ME(SoapClient, __getCookies,     arginfo_soapclient___getcookies, 0)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3132: }",
          "3136:    Sets SOAP headers for subsequent calls (replaces any previous",
          "3137:    values).",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3142: PHP_METHOD(SoapClient, __getCookies)",
          "3143: {",
          "3144:  zval **cookies, *tmp;",
          "3146:  if (zend_parse_parameters_none() == FAILURE) {",
          "3147:   return;",
          "3148:  }",
          "3150:  array_init(return_value);",
          "3152:  if (zend_hash_find(Z_OBJPROP_P(this_ptr), \"_cookies\", sizeof(\"_cookies\"), (void **)&cookies) != FAILURE) {",
          "3153:   zend_hash_copy(Z_ARRVAL_P(return_value), Z_ARRVAL_P(*cookies), (copy_ctor_func_t) zval_add_ref, (void *)&tmp, sizeof(zval*));",
          "3154:  }",
          "3155: }",
          "",
          "---------------"
        ],
        "ext/soap/tests/bug49898.phpt||ext/soap/tests/bug49898.phpt": [
          "File: ext/soap/tests/bug49898.phpt -> ext/soap/tests/bug49898.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Test for bug #49898: SoapClient::__getCookies() implementation",
          "3: --CREDITS--",
          "4: Boro Sitnikovski <buritomath@yahoo.com>",
          "5: --SKIPIF--",
          "6: <?php require_once('skipif.inc'); ?>",
          "7: --FILE--",
          "8: <?php",
          "9: $client = new SoapClient(null, array('uri' => 'mo:http://www.w3.org/', 'location' => 'http://some.url'));",
          "10: $client->__setCookie(\"CookieTest\", \"HelloWorld\");",
          "11: var_dump($client->__getCookies()['CookieTest'][0]);",
          "12: ?>",
          "13: --EXPECT--",
          "14: string(10) \"HelloWorld\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}