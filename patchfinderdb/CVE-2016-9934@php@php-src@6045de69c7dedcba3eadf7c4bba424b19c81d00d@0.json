{
  "cve_id": "CVE-2016-9934",
  "cve_desc": "ext/wddx/wddx.c in PHP before 5.6.28 and 7.x before 7.0.13 allows remote attackers to cause a denial of service (NULL pointer dereference) via crafted serialized data in a wddxPacket XML document, as demonstrated by a PDORow string.",
  "repo": "php/php-src",
  "patch_hash": "6045de69c7dedcba3eadf7c4bba424b19c81d00d",
  "patch_info": {
    "commit_hash": "6045de69c7dedcba3eadf7c4bba424b19c81d00d",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/6045de69c7dedcba3eadf7c4bba424b19c81d00d",
    "files": [
      "ext/pdo/pdo_stmt.c",
      "ext/wddx/tests/bug45901.phpt",
      "ext/wddx/tests/bug72790.phpt",
      "ext/wddx/tests/bug73331.phpt",
      "ext/wddx/wddx.c"
    ],
    "message": "Fix bug #73331 - do not try to serialize/unserialize objects wddx can not handle\n\nProper soltion would be to call serialize/unserialize and deal with the result,\nbut this requires more work that should be done by wddx maintainer (not me).",
    "before_after_code_files": [
      "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
      "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
      "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
      "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
      "ext/wddx/wddx.c||ext/wddx/wddx.c"
    ]
  },
  "patch_diff": {
    "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c": [
      "File: ext/pdo/pdo_stmt.c -> ext/pdo/pdo_stmt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2339:  pdo_row_ce->create_object = pdo_row_new;",
      "2340:  pdo_row_ce->serialize = pdo_row_serialize;",
      "2341: }",
      "2343: static void free_statement(pdo_stmt_t *stmt TSRMLS_DC)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2341:  pdo_row_ce->unserialize = zend_class_unserialize_deny;",
      "",
      "---------------"
    ],
    "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt": [
      "File: ext/wddx/tests/bug45901.phpt -> ext/wddx/tests/bug45901.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "14: echo \"DONE\";",
      "15: ?>",
      "16: --EXPECTF--",
      "18: DONE",
      "",
      "[Removed Lines]",
      "17: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data><struct><var name='php_class_name'><string>SimpleXMLElement</string></var><var name='test'><struct><var name='php_class_name'><string>SimpleXMLElement</string></var></struct></var></struct></data></wddxPacket>",
      "",
      "[Added Lines]",
      "18: Warning: wddx_serialize_value(): Class SimpleXMLElement can not be serialized in %sbug45901.php on line %d",
      "19: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data></data></wddxPacket>",
      "",
      "---------------"
    ],
    "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt": [
      "File: ext/wddx/tests/bug72790.phpt -> ext/wddx/tests/bug72790.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: --TEST--",
      "3: --SKIPIF--",
      "4: <?php",
      "5: if (!extension_loaded('wddx')) {",
      "",
      "[Removed Lines]",
      "2: Bug 72790: wddx_deserialize null dereference with invalid xml",
      "",
      "[Added Lines]",
      "2: Bug #72790: wddx_deserialize null dereference with invalid xml",
      "",
      "---------------"
    ],
    "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt": [
      "File: ext/wddx/tests/bug73331.phpt -> ext/wddx/tests/bug73331.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #73331 (NULL Pointer Dereference in WDDX Packet Deserialization with PDORow)",
      "3: --SKIPIF--",
      "4: <?php if (!extension_loaded(\"wddx\") || !extension_loaded(\"pdo\")) print \"skip\"; ?>",
      "5: --FILE--",
      "6: <?php",
      "8: $wddx = \"<wddxPacket version='1.0'><header/><data><struct><var name='php_class_name'><string>PDORow</string></var></struct></data></wddxPacket>\";",
      "9: var_dump(wddx_deserialize($wddx));",
      "10: ?>",
      "11: --EXPECTF--",
      "13: Warning: wddx_deserialize(): Class pdorow can not be unserialized in %s73331.php on line %d",
      "14: NULL",
      "",
      "---------------"
    ],
    "ext/wddx/wddx.c||ext/wddx/wddx.c": [
      "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "471:  ulong idx;",
      "472:  char tmp_buf[WDDX_BUF_LEN];",
      "473:  HashTable *objhash, *sleephash;",
      "474:  TSRMLS_FETCH();",
      "476:  MAKE_STD_ZVAL(fname);",
      "477:  ZVAL_STRING(fname, \"__sleep\", 1);",
      "483:  if (call_user_function_ex(CG(function_table), &obj, fname, &retval, 0, 0, 1, NULL TSRMLS_CC) == SUCCESS) {",
      "484:   if (retval && (sleephash = HASH_OF(retval))) {",
      "489:    php_wddx_add_chunk_static(packet, WDDX_STRUCT_S);",
      "490:    snprintf(tmp_buf, WDDX_BUF_LEN, WDDX_VAR_S, PHP_CLASS_NAME_VAR);",
      "491:    php_wddx_add_chunk(packet, tmp_buf);",
      "",
      "[Removed Lines]",
      "485:    PHP_CLASS_ATTRIBUTES;",
      "487:    PHP_SET_CLASS_ATTRIBUTES(obj);",
      "",
      "[Added Lines]",
      "474:  zend_class_entry *ce;",
      "475:  PHP_CLASS_ATTRIBUTES;",
      "478:  PHP_SET_CLASS_ATTRIBUTES(obj);",
      "479:  ce = Z_OBJCE_P(obj);",
      "480:  if (!ce || ce->serialize || ce->unserialize) {",
      "481:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Class %s can not be serialized\", class_name);",
      "482:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
      "483:   return;",
      "484:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "494:    php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
      "495:    php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
      "499:    objhash = HASH_OF(obj);",
      "501:    for (zend_hash_internal_pointer_reset(sleephash);",
      "",
      "[Removed Lines]",
      "497:    PHP_CLEANUP_CLASS_ATTRIBUTES();",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "516:  } else {",
      "517:   uint key_len;",
      "523:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_S);",
      "524:   snprintf(tmp_buf, WDDX_BUF_LEN, WDDX_VAR_S, PHP_CLASS_NAME_VAR);",
      "525:   php_wddx_add_chunk(packet, tmp_buf);",
      "",
      "[Removed Lines]",
      "519:   PHP_CLASS_ATTRIBUTES;",
      "521:   PHP_SET_CLASS_ATTRIBUTES(obj);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "528:   php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
      "529:   php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
      "533:   objhash = HASH_OF(obj);",
      "534:   for (zend_hash_internal_pointer_reset(objhash);",
      "535:     zend_hash_get_current_data(objhash, (void**)&ent) == SUCCESS;",
      "",
      "[Removed Lines]",
      "531:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "551:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
      "552:  }",
      "554:  zval_dtor(fname);",
      "555:  FREE_ZVAL(fname);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "551:  PHP_CLEANUP_CLASS_ATTRIBUTES();",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1012:        pce = &PHP_IC_ENTRY;",
      "1013:       }",
      "1027:       }",
      "1036:       zval_ptr_dtor(&ent1->data);",
      "1037:      } else if (Z_TYPE_P(ent2->data) == IS_OBJECT) {",
      "",
      "[Removed Lines]",
      "1016:       MAKE_STD_ZVAL(obj);",
      "1017:       object_init_ex(obj, *pce);",
      "1020:       zend_hash_merge(Z_OBJPROP_P(obj),",
      "1021:           Z_ARRVAL_P(ent2->data),",
      "1022:           (void (*)(void *)) zval_add_ref,",
      "1023:           (void *) &tmp, sizeof(zval *), 0);",
      "1025:       if (incomplete_class) {",
      "1026:        php_store_class_name(obj, Z_STRVAL_P(ent1->data), Z_STRLEN_P(ent1->data));",
      "1030:       zval_ptr_dtor(&ent2->data);",
      "1033:       ent2->data = obj;",
      "",
      "[Added Lines]",
      "1014:       if (pce != &PHP_IC_ENTRY && ((*pce)->serialize || (*pce)->unserialize)) {",
      "1015:        ent2->data = NULL;",
      "1016:        php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Class %s can not be unserialized\", Z_STRVAL_P(ent1->data));",
      "1017:       } else {",
      "1019:        MAKE_STD_ZVAL(obj);",
      "1020:        object_init_ex(obj, *pce);",
      "1023:        zend_hash_merge(Z_OBJPROP_P(obj),",
      "1024:            Z_ARRVAL_P(ent2->data),",
      "1025:            (void (*)(void *)) zval_add_ref,",
      "1026:            (void *) &tmp, sizeof(zval *), 0);",
      "1028:        if (incomplete_class) {",
      "1029:         php_store_class_name(obj, Z_STRVAL_P(ent1->data), Z_STRLEN_P(ent1->data));",
      "1030:        }",
      "1033:        zval_ptr_dtor(&ent2->data);",
      "1036:        ent2->data = obj;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9e1bc792df55712850b705d2d1379742a37c7c4a",
      "candidate_info": {
        "commit_hash": "9e1bc792df55712850b705d2d1379742a37c7c4a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/9e1bc792df55712850b705d2d1379742a37c7c4a",
        "files": [
          "ext/pdo/pdo_stmt.c",
          "ext/wddx/tests/bug45901.phpt",
          "ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug73331.phpt",
          "ext/wddx/wddx.c"
        ],
        "message": "Fix bug #73331 - do not try to serialize/unserialize objects wddx can not handle\n\nProper soltion would be to call serialize/unserialize and deal with the result,\nbut this requires more work that should be done by wddx maintainer (not me).\n\n(cherry picked from commit 6045de69c7dedcba3eadf7c4bba424b19c81d00d)\n\nConflicts:\n\text/wddx/wddx.c\n\n(cherry picked from commit 8c67460a10865f53435c705d08bbc2d60a49f781)",
        "before_after_code_files": [
          "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
          "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
          "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
          "ext/wddx/wddx.c||ext/wddx/wddx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
            "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ],
          "candidate": [
            "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
            "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c": [
          "File: ext/pdo/pdo_stmt.c -> ext/pdo/pdo_stmt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2300:  pdo_row_ce->create_object = pdo_row_new;",
          "2301:  pdo_row_ce->serialize = pdo_row_serialize;",
          "2302: }",
          "2304: PDO_API void php_pdo_free_statement(pdo_stmt_t *stmt)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2302:  pdo_row_ce->unserialize = zend_class_unserialize_deny;",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt": [
          "File: ext/wddx/tests/bug45901.phpt -> ext/wddx/tests/bug45901.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: echo \"DONE\";",
          "15: ?>",
          "16: --EXPECTF--",
          "18: DONE",
          "",
          "[Removed Lines]",
          "17: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data><struct><var name='php_class_name'><string>SimpleXMLElement</string></var><var name='test'><struct><var name='php_class_name'><string>SimpleXMLElement</string></var></struct></var></struct></data></wddxPacket>",
          "",
          "[Added Lines]",
          "18: Warning: wddx_serialize_value(): Class SimpleXMLElement can not be serialized in %sbug45901.php on line %d",
          "19: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data></data></wddxPacket>",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt": [
          "File: ext/wddx/tests/bug72790.phpt -> ext/wddx/tests/bug72790.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: --TEST--",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded('wddx')) {",
          "",
          "[Removed Lines]",
          "2: Bug 72790: wddx_deserialize null dereference with invalid xml",
          "",
          "[Added Lines]",
          "2: Bug #72790: wddx_deserialize null dereference with invalid xml",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt": [
          "File: ext/wddx/tests/bug73331.phpt -> ext/wddx/tests/bug73331.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73331 (NULL Pointer Dereference in WDDX Packet Deserialization with PDORow)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"wddx\") || !extension_loaded(\"pdo\")) print \"skip\"; ?>",
          "5: --FILE--",
          "6: <?php",
          "8: $wddx = \"<wddxPacket version='1.0'><header/><data><struct><var name='php_class_name'><string>PDORow</string></var></struct></data></wddxPacket>\";",
          "9: var_dump(wddx_deserialize($wddx));",
          "10: ?>",
          "11: --EXPECTF--",
          "13: Warning: wddx_deserialize(): Class pdorow can not be unserialized in %s73331.php on line %d",
          "14: NULL",
          "",
          "---------------"
        ],
        "ext/wddx/wddx.c||ext/wddx/wddx.c": [
          "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "453:  zend_ulong idx;",
          "454:  char tmp_buf[WDDX_BUF_LEN];",
          "455:  HashTable *objhash, *sleephash;",
          "457:  ZVAL_STRING(&fname, \"__sleep\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "456:  zend_class_entry *ce;",
          "457:  PHP_CLASS_ATTRIBUTES;",
          "459:  PHP_SET_CLASS_ATTRIBUTES(obj);",
          "460:  ce = Z_OBJCE_P(obj);",
          "461:  if (!ce || ce->serialize || ce->unserialize) {",
          "462:   php_error_docref(NULL, E_WARNING, \"Class %s can not be serialized\", ZSTR_VAL(class_name));",
          "463:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "464:   return;",
          "465:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "473:    php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
          "474:    php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
          "478:    objhash = Z_OBJPROP_P(obj);",
          "480:    ZEND_HASH_FOREACH_VAL(sleephash, varname) {",
          "",
          "[Removed Lines]",
          "476:    PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "491:    php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "492:   }",
          "493:  } else {",
          "498:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_S);",
          "499:   snprintf(tmp_buf, WDDX_BUF_LEN, WDDX_VAR_S, PHP_CLASS_NAME_VAR);",
          "",
          "[Removed Lines]",
          "494:   PHP_CLASS_ATTRIBUTES;",
          "496:   PHP_SET_CLASS_ATTRIBUTES(obj);",
          "",
          "[Added Lines]",
          "502:   uint key_len;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "503:   php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
          "504:   php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
          "508:   objhash = Z_OBJPROP_P(obj);",
          "509:   ZEND_HASH_FOREACH_KEY_VAL(objhash, idx, key, ent) {",
          "510:    if (ent == obj) {",
          "",
          "[Removed Lines]",
          "506:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "528:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "529:  }",
          "531:  zval_ptr_dtor(&fname);",
          "532:  zval_ptr_dtor(&retval);",
          "533: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "535:  PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "947:        pce = PHP_IC_ENTRY;",
          "948:       }",
          "969:       zval_ptr_dtor(&ent1->data);",
          "",
          "[Removed Lines]",
          "951:       object_init_ex(&obj, pce);",
          "954:       zend_hash_merge(Z_OBJPROP(obj),",
          "955:           Z_ARRVAL(ent2->data),",
          "956:           zval_add_ref, 0);",
          "958:       if (incomplete_class) {",
          "959:        php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));",
          "960:       }",
          "963:       zval_ptr_dtor(&ent2->data);",
          "966:       ZVAL_COPY_VALUE(&ent2->data, &obj);",
          "",
          "[Added Lines]",
          "956:       if (pce != PHP_IC_ENTRY && (pce->serialize || pce->unserialize)) {",
          "957:        ZVAL_UNDEF(&ent2->data);",
          "958:        php_error_docref(NULL, E_WARNING, \"Class %s can not be unserialized\", Z_STRVAL(ent1->data));",
          "959:       } else {",
          "961:        object_init_ex(&obj, pce);",
          "964:        zend_hash_merge(Z_OBJPROP(obj),",
          "965:            Z_ARRVAL(ent2->data),",
          "966:            zval_add_ref, 0);",
          "968:        if (incomplete_class) {",
          "969:         php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));",
          "970:        }",
          "973:        zval_ptr_dtor(&ent2->data);",
          "976:        ZVAL_COPY_VALUE(&ent2->data, &obj);",
          "977:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c67460a10865f53435c705d08bbc2d60a49f781",
      "candidate_info": {
        "commit_hash": "8c67460a10865f53435c705d08bbc2d60a49f781",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/8c67460a10865f53435c705d08bbc2d60a49f781",
        "files": [
          "ext/pdo/pdo_stmt.c",
          "ext/wddx/tests/bug45901.phpt",
          "ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug73331.phpt",
          "ext/wddx/wddx.c"
        ],
        "message": "Fix bug #73331 - do not try to serialize/unserialize objects wddx can not handle\n\nProper soltion would be to call serialize/unserialize and deal with the result,\nbut this requires more work that should be done by wddx maintainer (not me).\n\n(cherry picked from commit 6045de69c7dedcba3eadf7c4bba424b19c81d00d)\n\nConflicts:\n\text/wddx/wddx.c",
        "before_after_code_files": [
          "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
          "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
          "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
          "ext/wddx/wddx.c||ext/wddx/wddx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
            "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ],
          "candidate": [
            "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
            "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c": [
          "File: ext/pdo/pdo_stmt.c -> ext/pdo/pdo_stmt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2300:  pdo_row_ce->create_object = pdo_row_new;",
          "2301:  pdo_row_ce->serialize = pdo_row_serialize;",
          "2302: }",
          "2304: PDO_API void php_pdo_free_statement(pdo_stmt_t *stmt)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2302:  pdo_row_ce->unserialize = zend_class_unserialize_deny;",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt": [
          "File: ext/wddx/tests/bug45901.phpt -> ext/wddx/tests/bug45901.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: echo \"DONE\";",
          "15: ?>",
          "16: --EXPECTF--",
          "18: DONE",
          "",
          "[Removed Lines]",
          "17: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data><struct><var name='php_class_name'><string>SimpleXMLElement</string></var><var name='test'><struct><var name='php_class_name'><string>SimpleXMLElement</string></var></struct></var></struct></data></wddxPacket>",
          "",
          "[Added Lines]",
          "18: Warning: wddx_serialize_value(): Class SimpleXMLElement can not be serialized in %sbug45901.php on line %d",
          "19: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data></data></wddxPacket>",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt": [
          "File: ext/wddx/tests/bug72790.phpt -> ext/wddx/tests/bug72790.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: --TEST--",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded('wddx')) {",
          "",
          "[Removed Lines]",
          "2: Bug 72790: wddx_deserialize null dereference with invalid xml",
          "",
          "[Added Lines]",
          "2: Bug #72790: wddx_deserialize null dereference with invalid xml",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt": [
          "File: ext/wddx/tests/bug73331.phpt -> ext/wddx/tests/bug73331.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73331 (NULL Pointer Dereference in WDDX Packet Deserialization with PDORow)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"wddx\") || !extension_loaded(\"pdo\")) print \"skip\"; ?>",
          "5: --FILE--",
          "6: <?php",
          "8: $wddx = \"<wddxPacket version='1.0'><header/><data><struct><var name='php_class_name'><string>PDORow</string></var></struct></data></wddxPacket>\";",
          "9: var_dump(wddx_deserialize($wddx));",
          "10: ?>",
          "11: --EXPECTF--",
          "13: Warning: wddx_deserialize(): Class pdorow can not be unserialized in %s73331.php on line %d",
          "14: NULL",
          "",
          "---------------"
        ],
        "ext/wddx/wddx.c||ext/wddx/wddx.c": [
          "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "453:  zend_ulong idx;",
          "454:  char tmp_buf[WDDX_BUF_LEN];",
          "455:  HashTable *objhash, *sleephash;",
          "457:  ZVAL_STRING(&fname, \"__sleep\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "456:  zend_class_entry *ce;",
          "457:  PHP_CLASS_ATTRIBUTES;",
          "459:  PHP_SET_CLASS_ATTRIBUTES(obj);",
          "460:  ce = Z_OBJCE_P(obj);",
          "461:  if (!ce || ce->serialize || ce->unserialize) {",
          "462:   php_error_docref(NULL, E_WARNING, \"Class %s can not be serialized\", ZSTR_VAL(class_name));",
          "463:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "464:   return;",
          "465:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "473:    php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
          "474:    php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
          "478:    objhash = Z_OBJPROP_P(obj);",
          "480:    ZEND_HASH_FOREACH_VAL(sleephash, varname) {",
          "",
          "[Removed Lines]",
          "476:    PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "491:    php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "492:   }",
          "493:  } else {",
          "498:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_S);",
          "499:   snprintf(tmp_buf, WDDX_BUF_LEN, WDDX_VAR_S, PHP_CLASS_NAME_VAR);",
          "",
          "[Removed Lines]",
          "494:   PHP_CLASS_ATTRIBUTES;",
          "496:   PHP_SET_CLASS_ATTRIBUTES(obj);",
          "",
          "[Added Lines]",
          "502:   uint key_len;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "503:   php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
          "504:   php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
          "508:   objhash = Z_OBJPROP_P(obj);",
          "509:   ZEND_HASH_FOREACH_KEY_VAL(objhash, idx, key, ent) {",
          "510:    if (ent == obj) {",
          "",
          "[Removed Lines]",
          "506:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "528:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "529:  }",
          "531:  zval_ptr_dtor(&fname);",
          "532:  zval_ptr_dtor(&retval);",
          "533: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "535:  PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "947:        pce = PHP_IC_ENTRY;",
          "948:       }",
          "969:       zval_ptr_dtor(&ent1->data);",
          "",
          "[Removed Lines]",
          "951:       object_init_ex(&obj, pce);",
          "954:       zend_hash_merge(Z_OBJPROP(obj),",
          "955:           Z_ARRVAL(ent2->data),",
          "956:           zval_add_ref, 0);",
          "958:       if (incomplete_class) {",
          "959:        php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));",
          "960:       }",
          "963:       zval_ptr_dtor(&ent2->data);",
          "966:       ZVAL_COPY_VALUE(&ent2->data, &obj);",
          "",
          "[Added Lines]",
          "956:       if (pce != PHP_IC_ENTRY && (pce->serialize || pce->unserialize)) {",
          "957:        ZVAL_UNDEF(&ent2->data);",
          "958:        php_error_docref(NULL, E_WARNING, \"Class %s can not be unserialized\", Z_STRVAL(ent1->data));",
          "959:       } else {",
          "961:        object_init_ex(&obj, pce);",
          "964:        zend_hash_merge(Z_OBJPROP(obj),",
          "965:            Z_ARRVAL(ent2->data),",
          "966:            zval_add_ref, 0);",
          "968:        if (incomplete_class) {",
          "969:         php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data));",
          "970:        }",
          "973:        zval_ptr_dtor(&ent2->data);",
          "976:        ZVAL_COPY_VALUE(&ent2->data, &obj);",
          "977:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a34bd6d1e6b4d31221c50bcf477c9508553a646",
      "candidate_info": {
        "commit_hash": "5a34bd6d1e6b4d31221c50bcf477c9508553a646",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/5a34bd6d1e6b4d31221c50bcf477c9508553a646",
        "files": [
          "ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug72799.phpt",
          "ext/wddx/wddx.c"
        ],
        "message": "Fix for bug #72790 and bug #72799",
        "before_after_code_files": [
          "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug72799.phpt||ext/wddx/tests/bug72799.phpt",
          "ext/wddx/wddx.c||ext/wddx/wddx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ],
          "candidate": [
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt": [
          "File: ext/wddx/tests/bug72790.phpt -> ext/wddx/tests/bug72790.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug 72790: wddx_deserialize null dereference with invalid xml",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded('wddx')) {",
          "6:     die('skip. wddx not available');",
          "7: }",
          "8: ?>",
          "9: --FILE--",
          "10: <?php",
          "12: $xml = <<< XML",
          "13: <?xml version='1.0' ?>",
          "14: <!DOCTYPE wddxPacket SYSTEM 'wddx_0100.dtd'>",
          "15: <wddxPacket version='1.0'>",
          "16:         |array>",
          "17:                 <var name=\"XXXX\">",
          "18:                         <boolean value=\"this\">",
          "19:                         </boolean>",
          "20:                 </var>",
          "21:                 <var name=\"YYYY\">",
          "22:                         <var name=\"UUUU\">",
          "23:                                 <var name=\"EZEZ\">",
          "24:                                 </var>",
          "25:                         </var>",
          "26:                 </var>",
          "27:         </array>",
          "28: </wddxPacket>",
          "29: XML;",
          "31: $array = wddx_deserialize($xml);",
          "32: var_dump($array);",
          "33: ?>",
          "34: --EXPECT--",
          "35: NULL",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug72799.phpt||ext/wddx/tests/bug72799.phpt": [
          "File: ext/wddx/tests/bug72799.phpt -> ext/wddx/tests/bug72799.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #72799: wddx_deserialize null dereference in php_wddx_pop_element",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded('wddx')) {",
          "6:     die('skip. wddx not available');",
          "7: }",
          "8: ?>",
          "9: --FILE--",
          "10: <?php",
          "12: $xml = <<<XML",
          "13: <?xml version='1.0'?>",
          "14: <!DOCTYPE wddxPacket SYSTEM 'wddx_0100.dtd'>",
          "15: <wddxPacket version=\"1.0\">",
          "16:     <var name=\"XXXX\">",
          "17:         <boolean value=\"1\">",
          "18:             <dateTime>1998-06-12T04:32:12+00</dateTime>",
          "19:         </boolean>",
          "20:     </var>",
          "21: </wddxPacket>",
          "22: XML;",
          "24: $array = wddx_deserialize($xml);",
          "25: var_dump($array);",
          "26: ?>",
          "27: --EXPECT--",
          "28: NULL",
          "",
          "---------------"
        ],
        "ext/wddx/wddx.c||ext/wddx/wddx.c": [
          "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "946:   if (!ent1->data) {",
          "947:    if (stack->top > 1) {",
          "948:     stack->top--;",
          "949:    } else {",
          "950:     stack->done = 1;",
          "951:    }",
          "953:    return;",
          "954:   }",
          "",
          "[Removed Lines]",
          "952:    efree(ent1);",
          "",
          "[Added Lines]",
          "949:     efree(ent1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "988:    wddx_stack_top(stack, (void**)&ent2);",
          "992:     zval_ptr_dtor(&ent1->data);",
          "993:     efree(ent1);",
          "994:     return;",
          "",
          "[Removed Lines]",
          "991:    if (ent2->type == ST_FIELD && ent2->data == NULL) {",
          "",
          "[Added Lines]",
          "991:    if (ent2->data == NULL) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1180:  if (stack.top == 1) {",
          "1181:   wddx_stack_top(&stack, (void**)&ent);",
          "1185:  } else {",
          "1186:   retval = FAILURE;",
          "1187:  }",
          "",
          "[Removed Lines]",
          "1183:   zval_copy_ctor(return_value);",
          "1184:   retval = SUCCESS;",
          "",
          "[Added Lines]",
          "1182:   if(ent->data == NULL) {",
          "1183:    retval = FAILURE;",
          "1184:   } else {",
          "1186:    zval_copy_ctor(return_value);",
          "1187:    retval = SUCCESS;",
          "1188:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1785d2b805f64eaaacf98c14c9e13107bf085ab1",
      "candidate_info": {
        "commit_hash": "1785d2b805f64eaaacf98c14c9e13107bf085ab1",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/1785d2b805f64eaaacf98c14c9e13107bf085ab1",
        "files": [
          "NEWS",
          "ext/wddx/tests/bug70741.phpt",
          "ext/wddx/wddx.c"
        ],
        "message": "Fixed bug #70741: Session WDDX Packet Deserialization Type Confusion Vulnerability",
        "before_after_code_files": [
          "ext/wddx/tests/bug70741.phpt||ext/wddx/tests/bug70741.phpt",
          "ext/wddx/wddx.c||ext/wddx/wddx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ],
          "candidate": [
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/wddx/tests/bug70741.phpt||ext/wddx/tests/bug70741.phpt": [
          "File: ext/wddx/tests/bug70741.phpt -> ext/wddx/tests/bug70741.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70741 (Session WDDX Packet Deserialization Type Confusion Vulnerability)",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded(\"wddx\")) print \"skip\";",
          "6: ?>",
          "7: --FILE--",
          "8: <?php",
          "9: ini_set('session.serialize_handler', 'wddx');",
          "10: session_start();",
          "12: $hashtable = str_repeat('A', 66);",
          "13: $wddx = \"<?xml version='1.0'?>",
          "14: <wddxPacket version='1.0'>",
          "15: <header/>",
          "16:  <data>",
          "17:   <string>$hashtable</string>",
          "18:  </data>",
          "19: </wddxPacket>\";",
          "20: session_decode($wddx);",
          "21: ?>",
          "22: DONE",
          "23: --EXPECTF--",
          "25: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s on line %d",
          "26: DONE",
          "",
          "---------------"
        ],
        "ext/wddx/wddx.c||ext/wddx/wddx.c": [
          "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:     efree(((st_entry *)stack->elements[i])->varname);",
          "240:    }",
          "241:    efree(stack->elements[i]);",
          "243:   efree(stack->elements);",
          "244:  }",
          "245:  return SUCCESS;",
          "",
          "[Removed Lines]",
          "242:   }",
          "",
          "[Added Lines]",
          "242:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "304:  if (vallen == 0) {",
          "305:   return SUCCESS;",
          "306:  }",
          "308:  MAKE_STD_ZVAL(retval);",
          "310:  if ((ret = php_wddx_deserialize_ex((char *)val, vallen, retval)) == SUCCESS) {",
          "312:   for (zend_hash_internal_pointer_reset(Z_ARRVAL_P(retval));",
          "313:     zend_hash_get_current_data(Z_ARRVAL_P(retval), (void **) &ent) == SUCCESS;",
          "314:     zend_hash_move_forward(Z_ARRVAL_P(retval))) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "311:   if (Z_TYPE_P(retval) != IS_ARRAY) {",
          "312:    zval_ptr_dtor(&retval);",
          "313:    return FAILURE;",
          "314:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "343:  php_session_register_serializer(\"wddx\",",
          "344:          PS_SERIALIZER_ENCODE_NAME(wddx),",
          "345:          PS_SERIALIZER_DECODE_NAME(wddx));",
          "348:  return SUCCESS;",
          "349: }",
          "",
          "[Removed Lines]",
          "346: #endif",
          "",
          "[Added Lines]",
          "349: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "387: void php_wddx_packet_end(wddx_packet *packet)",
          "388: {",
          "389:  php_wddx_add_chunk_static(packet, WDDX_DATA_E);",
          "391: }",
          "",
          "[Removed Lines]",
          "390:  php_wddx_add_chunk_static(packet, WDDX_PACKET_E);",
          "",
          "[Added Lines]",
          "393:  php_wddx_add_chunk_static(packet, WDDX_PACKET_E);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "423: {",
          "424:  char tmp_buf[WDDX_BUF_LEN];",
          "425:  zval tmp;",
          "427:  tmp = *var;",
          "428:  zval_copy_ctor(&tmp);",
          "429:  convert_to_string(&tmp);",
          "430:  snprintf(tmp_buf, sizeof(tmp_buf), WDDX_NUMBER, Z_STRVAL(tmp));",
          "431:  zval_dtor(&tmp);",
          "434: }",
          "",
          "[Removed Lines]",
          "433:  php_wddx_add_chunk(packet, tmp_buf);",
          "",
          "[Added Lines]",
          "436:  php_wddx_add_chunk(packet, tmp_buf);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "657:   case IS_NULL:",
          "658:    php_wddx_serialize_unset(packet);",
          "659:    break;",
          "661:   case IS_ARRAY:",
          "662:    ht = Z_ARRVAL_P(var);",
          "663:    if (ht->nApplyCount > 1) {",
          "664:     php_error_docref(NULL TSRMLS_CC, E_RECOVERABLE_ERROR, \"WDDX doesn't support circular references\");",
          "665:     return;",
          "666:    }",
          "668:    php_wddx_serialize_array(packet, var);",
          "669:    ht->nApplyCount--;",
          "670:    break;",
          "",
          "[Removed Lines]",
          "667:    ht->nApplyCount++;",
          "",
          "[Added Lines]",
          "670:    ht->nApplyCount++;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "702:   if (zend_hash_find(EG(active_symbol_table), Z_STRVAL_P(name_var),",
          "703:        Z_STRLEN_P(name_var)+1, (void**)&val) != FAILURE) {",
          "704:    php_wddx_serialize_var(packet, *val, Z_STRVAL_P(name_var), Z_STRLEN_P(name_var) TSRMLS_CC);",
          "706:  } else if (Z_TYPE_P(name_var) == IS_ARRAY || Z_TYPE_P(name_var) == IS_OBJECT) {",
          "707:   int is_array = Z_TYPE_P(name_var) == IS_ARRAY;",
          "709:   target_hash = HASH_OF(name_var);",
          "711:   if (is_array && target_hash->nApplyCount > 1) {",
          "712:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"recursion detected\");",
          "713:    return;",
          "",
          "[Removed Lines]",
          "705:   }",
          "",
          "[Added Lines]",
          "708:   }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1048:  if (!wddx_stack_is_empty(stack) && !stack->done) {",
          "1049:   wddx_stack_top(stack, (void**)&ent);",
          "1050:   switch (Z_TYPE_P(ent)) {",
          "1052:     if (Z_STRLEN_P(ent->data) == 0) {",
          "1053:      STR_FREE(Z_STRVAL_P(ent->data));",
          "1054:      Z_STRVAL_P(ent->data) = estrndup(s, len);",
          "",
          "[Removed Lines]",
          "1051:    case ST_STRING:",
          "",
          "[Added Lines]",
          "1054:    case ST_STRING:",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1190:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"+\", &args, &num_args) == FAILURE) {",
          "1191:   return;",
          "1192:  }",
          "1194:  packet = php_wddx_constructor();",
          "1196:  php_wddx_packet_start(packet, NULL, 0);",
          "1197:  php_wddx_add_chunk_static(packet, WDDX_STRUCT_S);",
          "1199:  for (i=0; i<num_args; i++) {",
          "1200:   if (Z_TYPE_PP(args[i]) != IS_ARRAY && Z_TYPE_PP(args[i]) != IS_OBJECT) {",
          "1201:    convert_to_string_ex(args[i]);",
          "1202:   }",
          "1203:   php_wddx_add_var(packet, *args[i]);",
          "1206:  php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "1207:  php_wddx_packet_end(packet);",
          "",
          "[Removed Lines]",
          "1204:  }",
          "",
          "[Added Lines]",
          "1207:  }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1265: {",
          "1266:  zval *packet_id;",
          "1267:  wddx_packet *packet = NULL;",
          "1269:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"r\", &packet_id) == FAILURE) {",
          "1270:   return;",
          "1271:  }",
          "1273:  ZEND_FETCH_RESOURCE(packet, wddx_packet *, &packet_id, -1, \"WDDX packet ID\", le_wddx);",
          "1277:  php_wddx_packet_end(packet);",
          "1279:  ZVAL_STRINGL(return_value, packet->c, packet->len, 1);",
          "",
          "[Removed Lines]",
          "1275:  php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "",
          "[Added Lines]",
          "1278:  php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0cd5cdeb04946f4fa2f6613220deb6c82ea71ff7",
      "candidate_info": {
        "commit_hash": "0cd5cdeb04946f4fa2f6613220deb6c82ea71ff7",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/0cd5cdeb04946f4fa2f6613220deb6c82ea71ff7",
        "files": [
          "ext/pdo/pdo_stmt.c",
          "ext/wddx/tests/bug45901.phpt",
          "ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug73331.phpt",
          "ext/wddx/wddx.c"
        ],
        "message": "Fix bug #73331 - do not try to serialize/unserialize objects wddx can not handle\n\nProper soltion would be to call serialize/unserialize and deal with the result,\nbut this requires more work that should be done by wddx maintainer (not me).",
        "before_after_code_files": [
          "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
          "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
          "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
          "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
          "ext/wddx/wddx.c||ext/wddx/wddx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
            "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ],
          "candidate": [
            "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c",
            "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt",
            "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt",
            "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt",
            "ext/wddx/wddx.c||ext/wddx/wddx.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/pdo/pdo_stmt.c||ext/pdo/pdo_stmt.c": [
          "File: ext/pdo/pdo_stmt.c -> ext/pdo/pdo_stmt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2339:  pdo_row_ce->create_object = pdo_row_new;",
          "2340:  pdo_row_ce->serialize = pdo_row_serialize;",
          "2341: }",
          "2343: static void free_statement(pdo_stmt_t *stmt TSRMLS_DC)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2341:  pdo_row_ce->unserialize = zend_class_unserialize_deny;",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug45901.phpt||ext/wddx/tests/bug45901.phpt": [
          "File: ext/wddx/tests/bug45901.phpt -> ext/wddx/tests/bug45901.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: echo \"DONE\";",
          "15: ?>",
          "16: --EXPECTF--",
          "18: DONE",
          "",
          "[Removed Lines]",
          "17: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data><struct><var name='php_class_name'><string>SimpleXMLElement</string></var><var name='test'><struct><var name='php_class_name'><string>SimpleXMLElement</string></var></struct></var></struct></data></wddxPacket>",
          "",
          "[Added Lines]",
          "18: Warning: wddx_serialize_value(): Class SimpleXMLElement can not be serialized in %sbug45901.php on line %d",
          "19: <wddxPacket version='1.0'><header><comment>Variables</comment></header><data></data></wddxPacket>",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug72790.phpt||ext/wddx/tests/bug72790.phpt": [
          "File: ext/wddx/tests/bug72790.phpt -> ext/wddx/tests/bug72790.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: --TEST--",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded('wddx')) {",
          "",
          "[Removed Lines]",
          "2: Bug 72790: wddx_deserialize null dereference with invalid xml",
          "",
          "[Added Lines]",
          "2: Bug #72790: wddx_deserialize null dereference with invalid xml",
          "",
          "---------------"
        ],
        "ext/wddx/tests/bug73331.phpt||ext/wddx/tests/bug73331.phpt": [
          "File: ext/wddx/tests/bug73331.phpt -> ext/wddx/tests/bug73331.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73331 (NULL Pointer Dereference in WDDX Packet Deserialization with PDORow)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"wddx\") || !extension_loaded(\"pdo\")) print \"skip\"; ?>",
          "5: --FILE--",
          "6: <?php",
          "8: $wddx = \"<wddxPacket version='1.0'><header/><data><struct><var name='php_class_name'><string>PDORow</string></var></struct></data></wddxPacket>\";",
          "9: var_dump(wddx_deserialize($wddx));",
          "10: ?>",
          "11: --EXPECTF--",
          "13: Warning: wddx_deserialize(): Class pdorow can not be unserialized in %s73331.php on line %d",
          "14: NULL",
          "",
          "---------------"
        ],
        "ext/wddx/wddx.c||ext/wddx/wddx.c": [
          "File: ext/wddx/wddx.c -> ext/wddx/wddx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "471:  ulong idx;",
          "472:  char tmp_buf[WDDX_BUF_LEN];",
          "473:  HashTable *objhash, *sleephash;",
          "474:  TSRMLS_FETCH();",
          "476:  MAKE_STD_ZVAL(fname);",
          "477:  ZVAL_STRING(fname, \"__sleep\", 1);",
          "483:  if (call_user_function_ex(CG(function_table), &obj, fname, &retval, 0, 0, 1, NULL TSRMLS_CC) == SUCCESS) {",
          "484:   if (retval && (sleephash = HASH_OF(retval))) {",
          "489:    php_wddx_add_chunk_static(packet, WDDX_STRUCT_S);",
          "490:    snprintf(tmp_buf, WDDX_BUF_LEN, WDDX_VAR_S, PHP_CLASS_NAME_VAR);",
          "491:    php_wddx_add_chunk(packet, tmp_buf);",
          "",
          "[Removed Lines]",
          "485:    PHP_CLASS_ATTRIBUTES;",
          "487:    PHP_SET_CLASS_ATTRIBUTES(obj);",
          "",
          "[Added Lines]",
          "474:  zend_class_entry *ce;",
          "475:  PHP_CLASS_ATTRIBUTES;",
          "478:  PHP_SET_CLASS_ATTRIBUTES(obj);",
          "479:  ce = Z_OBJCE_P(obj);",
          "480:  if (!ce || ce->serialize || ce->unserialize) {",
          "481:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Class %s can not be serialized\", class_name);",
          "482:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "483:   return;",
          "484:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "494:    php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
          "495:    php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
          "499:    objhash = HASH_OF(obj);",
          "501:    for (zend_hash_internal_pointer_reset(sleephash);",
          "",
          "[Removed Lines]",
          "497:    PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "516:  } else {",
          "517:   uint key_len;",
          "523:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_S);",
          "524:   snprintf(tmp_buf, WDDX_BUF_LEN, WDDX_VAR_S, PHP_CLASS_NAME_VAR);",
          "525:   php_wddx_add_chunk(packet, tmp_buf);",
          "",
          "[Removed Lines]",
          "519:   PHP_CLASS_ATTRIBUTES;",
          "521:   PHP_SET_CLASS_ATTRIBUTES(obj);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "528:   php_wddx_add_chunk_static(packet, WDDX_STRING_E);",
          "529:   php_wddx_add_chunk_static(packet, WDDX_VAR_E);",
          "533:   objhash = HASH_OF(obj);",
          "534:   for (zend_hash_internal_pointer_reset(objhash);",
          "535:     zend_hash_get_current_data(objhash, (void**)&ent) == SUCCESS;",
          "",
          "[Removed Lines]",
          "531:   PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "551:   php_wddx_add_chunk_static(packet, WDDX_STRUCT_E);",
          "552:  }",
          "554:  zval_dtor(fname);",
          "555:  FREE_ZVAL(fname);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "551:  PHP_CLEANUP_CLASS_ATTRIBUTES();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1012:        pce = &PHP_IC_ENTRY;",
          "1013:       }",
          "1027:       }",
          "1036:       zval_ptr_dtor(&ent1->data);",
          "1037:      } else if (Z_TYPE_P(ent2->data) == IS_OBJECT) {",
          "",
          "[Removed Lines]",
          "1016:       MAKE_STD_ZVAL(obj);",
          "1017:       object_init_ex(obj, *pce);",
          "1020:       zend_hash_merge(Z_OBJPROP_P(obj),",
          "1021:           Z_ARRVAL_P(ent2->data),",
          "1022:           (void (*)(void *)) zval_add_ref,",
          "1023:           (void *) &tmp, sizeof(zval *), 0);",
          "1025:       if (incomplete_class) {",
          "1026:        php_store_class_name(obj, Z_STRVAL_P(ent1->data), Z_STRLEN_P(ent1->data));",
          "1030:       zval_ptr_dtor(&ent2->data);",
          "1033:       ent2->data = obj;",
          "",
          "[Added Lines]",
          "1014:       if (pce != &PHP_IC_ENTRY && ((*pce)->serialize || (*pce)->unserialize)) {",
          "1015:        ent2->data = NULL;",
          "1016:        php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Class %s can not be unserialized\", Z_STRVAL_P(ent1->data));",
          "1017:       } else {",
          "1019:        MAKE_STD_ZVAL(obj);",
          "1020:        object_init_ex(obj, *pce);",
          "1023:        zend_hash_merge(Z_OBJPROP_P(obj),",
          "1024:            Z_ARRVAL_P(ent2->data),",
          "1025:            (void (*)(void *)) zval_add_ref,",
          "1026:            (void *) &tmp, sizeof(zval *), 0);",
          "1028:        if (incomplete_class) {",
          "1029:         php_store_class_name(obj, Z_STRVAL_P(ent1->data), Z_STRLEN_P(ent1->data));",
          "1030:        }",
          "1033:        zval_ptr_dtor(&ent2->data);",
          "1036:        ent2->data = obj;",
          "",
          "---------------"
        ]
      }
    }
  ]
}