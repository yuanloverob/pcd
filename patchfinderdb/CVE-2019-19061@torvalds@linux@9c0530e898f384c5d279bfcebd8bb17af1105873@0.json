{
  "cve_id": "CVE-2019-19061",
  "cve_desc": "A memory leak in the adis_update_scan_mode_burst() function in drivers/iio/imu/adis_buffer.c in the Linux kernel before 5.3.9 allows attackers to cause a denial of service (memory consumption), aka CID-9c0530e898f3.",
  "repo": "torvalds/linux",
  "patch_hash": "9c0530e898f384c5d279bfcebd8bb17af1105873",
  "patch_info": {
    "commit_hash": "9c0530e898f384c5d279bfcebd8bb17af1105873",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/9c0530e898f384c5d279bfcebd8bb17af1105873",
    "files": [
      "drivers/iio/imu/adis_buffer.c"
    ],
    "message": "iio: imu: adis16400: fix memory leak\n\nIn adis_update_scan_mode_burst, if adis->buffer allocation fails release\nthe adis->xfer.\n\nSigned-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>\nReviewed-by: Alexandru Ardelean <alexandru.ardelean@analog.com>\nSigned-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>",
    "before_after_code_files": [
      "drivers/iio/imu/adis_buffer.c||drivers/iio/imu/adis_buffer.c"
    ]
  },
  "patch_diff": {
    "drivers/iio/imu/adis_buffer.c||drivers/iio/imu/adis_buffer.c": [
      "File: drivers/iio/imu/adis_buffer.c -> drivers/iio/imu/adis_buffer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35:   return -ENOMEM;",
      "37:  adis->buffer = kzalloc(burst_length + sizeof(u16), GFP_KERNEL);",
      "39:   return -ENOMEM;",
      "41:  tx = adis->buffer + burst_length;",
      "42:  tx[0] = ADIS_READ_REG(adis->burst->reg_cmd);",
      "",
      "[Removed Lines]",
      "38:  if (!adis->buffer)",
      "",
      "[Added Lines]",
      "38:  if (!adis->buffer) {",
      "39:   kfree(adis->xfer);",
      "40:   adis->xfer = NULL;",
      "42:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0e92e2d036232da1543599dc9b7acc1ce4289d1b",
      "candidate_info": {
        "commit_hash": "0e92e2d036232da1543599dc9b7acc1ce4289d1b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0e92e2d036232da1543599dc9b7acc1ce4289d1b",
        "files": [
          "drivers/iio/imu/Makefile",
          "drivers/iio/imu/adis16400.h",
          "drivers/iio/imu/adis16400_buffer.c",
          "drivers/iio/imu/adis16400_core.c",
          "drivers/iio/imu/adis_buffer.c"
        ],
        "message": "iio: imu: adis16400: move burst logic to ADIS lib\n\nThis change has been done separately, so that it's easier to visualize the\nchanged logic in the adis_scan_update() function.\n\nMost of the function in this `adis16400_update_scan_mode()` that deals with\nburst-mode will be re-used in the ADIS16480, but with different parameters.\n\nSigned-off-by: Alexandru Ardelean <alexandru.ardelean@analog.com>\nSigned-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>",
        "before_after_code_files": [
          "drivers/iio/imu/adis16400.h||drivers/iio/imu/adis16400.h",
          "drivers/iio/imu/adis16400_buffer.c||drivers/iio/imu/adis16400_buffer.c",
          "drivers/iio/imu/adis16400_core.c||drivers/iio/imu/adis16400_core.c",
          "drivers/iio/imu/adis_buffer.c||drivers/iio/imu/adis_buffer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/iio/imu/adis_buffer.c||drivers/iio/imu/adis_buffer.c"
          ],
          "candidate": [
            "drivers/iio/imu/adis_buffer.c||drivers/iio/imu/adis_buffer.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/iio/imu/adis16400.h||drivers/iio/imu/adis16400.h": [
          "File: drivers/iio/imu/adis16400.h -> drivers/iio/imu/adis16400.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:  ADIS16400_SCAN_TIMESTAMP,",
          "195: };",
          "",
          "[Removed Lines]",
          "197: #ifdef CONFIG_IIO_BUFFER",
          "199: ssize_t adis16400_read_data_from_ring(struct device *dev,",
          "200:           struct device_attribute *attr,",
          "201:           char *buf);",
          "204: int adis16400_update_scan_mode(struct iio_dev *indio_dev,",
          "205:  const unsigned long *scan_mask);",
          "209: #define adis16400_update_scan_mode NULL",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/iio/imu/adis16400_buffer.c||drivers/iio/imu/adis16400_buffer.c": [
          "File: drivers/iio/imu/adis16400_buffer.c -> drivers/iio/imu/adis16400_buffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/iio/imu/adis16400_core.c||drivers/iio/imu/adis16400_core.c": [
          "File: drivers/iio/imu/adis16400_core.c -> drivers/iio/imu/adis16400_core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "886: static const struct iio_info adis16400_info = {",
          "887:  .read_raw = &adis16400_read_raw,",
          "888:  .write_raw = &adis16400_write_raw,",
          "890:  .debugfs_reg_access = adis_debugfs_reg_access,",
          "891: };",
          "",
          "[Removed Lines]",
          "889:  .update_scan_mode = adis16400_update_scan_mode,",
          "",
          "[Added Lines]",
          "889:  .update_scan_mode = adis_update_scan_mode,",
          "",
          "---------------"
        ],
        "drivers/iio/imu/adis_buffer.c||drivers/iio/imu/adis_buffer.c": [
          "File: drivers/iio/imu/adis_buffer.c -> drivers/iio/imu/adis_buffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #include <linux/iio/triggered_buffer.h>",
          "21: #include <linux/iio/imu/adis.h>",
          "23: int adis_update_scan_mode(struct iio_dev *indio_dev,",
          "24:  const unsigned long *scan_mask)",
          "25: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: static int adis_update_scan_mode_burst(struct iio_dev *indio_dev,",
          "24:  const unsigned long *scan_mask)",
          "25: {",
          "26:  struct adis *adis = iio_device_get_drvdata(indio_dev);",
          "27:  unsigned int burst_length;",
          "28:  u8 *tx;",
          "31:  burst_length = (indio_dev->num_channels - 1) * sizeof(u16);",
          "32:  burst_length += adis->burst->extra_len;",
          "34:  adis->xfer = kcalloc(2, sizeof(*adis->xfer), GFP_KERNEL);",
          "35:  if (!adis->xfer)",
          "36:   return -ENOMEM;",
          "38:  adis->buffer = kzalloc(burst_length + sizeof(u16), GFP_KERNEL);",
          "39:  if (!adis->buffer)",
          "40:   return -ENOMEM;",
          "42:  tx = adis->buffer + burst_length;",
          "43:  tx[0] = ADIS_READ_REG(adis->burst->reg_cmd);",
          "44:  tx[1] = 0;",
          "46:  adis->xfer[0].tx_buf = tx;",
          "47:  adis->xfer[0].bits_per_word = 8;",
          "48:  adis->xfer[0].len = 2;",
          "49:  adis->xfer[1].rx_buf = adis->buffer;",
          "50:  adis->xfer[1].bits_per_word = 8;",
          "51:  adis->xfer[1].len = burst_length;",
          "53:  spi_message_init(&adis->msg);",
          "54:  spi_message_add_tail(&adis->xfer[0], &adis->msg);",
          "55:  spi_message_add_tail(&adis->xfer[1], &adis->msg);",
          "57:  return 0;",
          "58: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:  kfree(adis->xfer);",
          "33:  kfree(adis->buffer);",
          "35:  scan_count = indio_dev->scan_bytes / 2;",
          "37:  adis->xfer = kcalloc(scan_count + 1, sizeof(*adis->xfer), GFP_KERNEL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:  if (adis->burst && adis->burst->en)",
          "73:   return adis_update_scan_mode_burst(indio_dev, scan_mask);",
          "",
          "---------------"
        ]
      }
    }
  ]
}