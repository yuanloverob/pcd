{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e612143a896828f24ce81b9ba7745b8268670847",
      "candidate_info": {
        "commit_hash": "e612143a896828f24ce81b9ba7745b8268670847",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e612143a896828f24ce81b9ba7745b8268670847",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.7.4",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 7",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "31: #define NODE_PATCH_VERSION 3",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "31: #define NODE_PATCH_VERSION 4",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f5bb15f353d607783a5937972bc990fcd67892a",
      "candidate_info": {
        "commit_hash": "3f5bb15f353d607783a5937972bc990fcd67892a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3f5bb15f353d607783a5937972bc990fcd67892a",
        "files": [
          "src/udp_wrap.cc"
        ],
        "message": "dgram: fix memory leak in error path",
        "before_after_code_files": [
          "src/udp_wrap.cc||src/udp_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/udp_wrap.cc||src/udp_wrap.cc": [
          "File: src/udp_wrap.cc -> src/udp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "366:   if (nread == -1) {",
          "367:     SetErrno(uv_last_error(uv_default_loop()));",
          "368:   }",
          "369:   else {",
          "370:     Local<Object> rinfo = Object::New();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "368:     ReleaseMemory(buf.base, NULL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9fc7283a403bb0dec096b76991226cba8e7b73c2",
      "candidate_info": {
        "commit_hash": "9fc7283a403bb0dec096b76991226cba8e7b73c2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9fc7283a403bb0dec096b76991226cba8e7b73c2",
        "files": [
          "lib/url.js",
          "test/simple/test-url.js"
        ],
        "message": "Fix #3270 Escape url.parse delims\n\nRather than omitting them.",
        "before_after_code_files": [
          "lib/url.js||liurl.js",
          "test/simple/test-url.js||test/simple/test-url.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/url.js||liurl.js": [
          "File: lib/url.js -> liurl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: var protocolPattern = /^([a-z0-9.+-]+:)/i,",
          "34:     portPattern = /:[0-9]*$/,",
          "36:     delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],",
          "38:     unwise = ['{', '}', '|', '\\\\', '^', '~', '`'].concat(delims),",
          "",
          "[Removed Lines]",
          "40:     autoEscape = ['\\''],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:   var out = {},",
          "96:       rest = url;",
          "106:   var proto = protocolPattern.exec(rest);",
          "107:   if (proto) {",
          "",
          "[Removed Lines]",
          "100:   for (var i = 0, l = rest.length; i < l; i++) {",
          "101:     if (delims.indexOf(rest.charAt(i)) === -1) break;",
          "102:   }",
          "103:   if (i !== 0) rest = rest.substr(i);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "271:       }",
          "272:       rest = rest.split(ae).join(esc);",
          "273:     }",
          "284:   }",
          "",
          "[Removed Lines]",
          "276:     var chop = rest.length;",
          "277:     for (var i = 0, l = delims.length; i < l; i++) {",
          "278:       var c = rest.indexOf(delims[i]);",
          "279:       if (c !== -1) {",
          "280:         chop = Math.min(c, chop);",
          "281:       }",
          "282:     }",
          "283:     rest = rest.substr(0, chop);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-url.js||test/simple/test-url.js": [
          "File: test/simple/test-url.js -> test/simple/test-url.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:     'pathname': '/',",
          "92:     'path': '/'",
          "93:   },",
          "94:   'http://x.com/path?that\\'s#all, folks' : {",
          "96:     'protocol': 'http:',",
          "97:     'slashes': true,",
          "98:     'host': 'x.com',",
          "",
          "[Removed Lines]",
          "95:     'href': 'http://x.com/path?that%27s#all,',",
          "",
          "[Added Lines]",
          "102:     'href': 'http://x.com/path?that%27s#all,%20folks',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100:     'search': '?that%27s',",
          "101:     'query': 'that%27s',",
          "102:     'pathname': '/path',",
          "104:     'path': '/path?that%27s'",
          "105:   },",
          "106:   'HTTP://X.COM/Y' : {",
          "107:     'href': 'http://x.com/Y',",
          "108:     'protocol': 'http:',",
          "",
          "[Removed Lines]",
          "103:     'hash': '#all,',",
          "",
          "[Added Lines]",
          "110:     'hash': '#all,%20folks',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "112:     'pathname': '/Y',",
          "113:     'path': '/Y'",
          "114:   },",
          "116:   'HtTp://x.y.cOm*a/b/c?d=e#f g<h>i' : {",
          "118:     'protocol': 'http:',",
          "119:     'slashes': true,",
          "120:     'host': 'x.y.com',",
          "",
          "[Removed Lines]",
          "117:     'href': 'http://x.y.com/*a/b/c?d=e#f',",
          "",
          "[Added Lines]",
          "126:     'href': 'http://x.y.com/*a/b/c?d=e#f%20g%3Ch%3Ei',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "122:     'pathname': '/*a/b/c',",
          "123:     'search': '?d=e',",
          "124:     'query': 'd=e',",
          "126:     'path': '/*a/b/c?d=e'",
          "127:   },",
          "129:   'HtTp://x.y.cOm*A/b/c?d=e#f g<h>i' : {",
          "131:     'protocol': 'http:',",
          "132:     'slashes': true,",
          "133:     'host': 'x.y.com',",
          "",
          "[Removed Lines]",
          "125:     'hash': '#f',",
          "130:     'href': 'http://x.y.com/*A/b/c?d=e#f',",
          "",
          "[Added Lines]",
          "134:     'hash': '#f%20g%3Ch%3Ei',",
          "140:     'href': 'http://x.y.com/*A/b/c?d=e#f%20g%3Ch%3Ei',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "135:     'pathname': '/*A/b/c',",
          "136:     'search': '?d=e',",
          "137:     'query': 'd=e',",
          "139:     'path': '/*A/b/c?d=e'",
          "140:   },",
          "141:   'http://x...y...#p': {",
          "142:     'href': 'http://x...y.../#p',",
          "143:     'protocol': 'http:',",
          "",
          "[Removed Lines]",
          "138:     'hash': '#f',",
          "",
          "[Added Lines]",
          "148:     'hash': '#f%20g%3Ch%3Ei',",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "148:     'pathname': '/',",
          "149:     'path': '/'",
          "150:   },",
          "151:   'http://x/p/\"quoted\"': {",
          "153:     'protocol': 'http:',",
          "154:     'slashes': true,",
          "155:     'host': 'x',",
          "156:     'hostname': 'x',",
          "159:   },",
          "160:   '<http://goo.corn/bread> Is a URL!': {",
          "168:   },",
          "169:   'http://www.narwhaljs.org/blog/categories?id=news' : {",
          "170:     'href': 'http://www.narwhaljs.org/blog/categories?id=news',",
          "171:     'protocol': 'http:',",
          "",
          "[Removed Lines]",
          "152:     'href': 'http://x/p/',",
          "157:     'pathname': '/p/',",
          "158:     'path': '/p/'",
          "161:     'href': 'http://goo.corn/bread',",
          "162:     'protocol': 'http:',",
          "163:     'slashes': true,",
          "164:     'host': 'goo.corn',",
          "165:     'hostname': 'goo.corn',",
          "166:     'pathname': '/bread',",
          "167:     'path': '/bread'",
          "",
          "[Added Lines]",
          "164:     'href': 'http://x/p/%22quoted%22',",
          "169:     'pathname': '/p/%22quoted%22',",
          "170:     'path': '/p/%22quoted%22'",
          "174:     'href': '%3Chttp://goo.corn/bread%3E%20Is%20a%20URL!',",
          "175:     'pathname': '%3Chttp://goo.corn/bread%3E%20Is%20a%20URL!',",
          "176:     'path': '%3Chttp://goo.corn/bread%3E%20Is%20a%20URL!'",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "424:     'pathname': '/',",
          "425:     'path': '/'",
          "426:   },",
          "427:   'http://www.\u00c4ffchen.cOm*A/b/c?d=e#f g<h>i' : {",
          "429:     'protocol': 'http:',",
          "430:     'slashes': true,",
          "431:     'host': 'www.xn--ffchen-9ta.com',",
          "",
          "[Removed Lines]",
          "428:     'href': 'http://www.xn--ffchen-9ta.com/*A/b/c?d=e#f',",
          "",
          "[Added Lines]",
          "465:     'href': 'http://www.xn--ffchen-9ta.com/*A/b/c?d=e#f%20g%3Ch%3Ei',",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "433:     'pathname': '/*A/b/c',",
          "434:     'search': '?d=e',",
          "435:     'query': 'd=e',",
          "437:     'path': '/*A/b/c?d=e'",
          "438:   },",
          "439:   'http://S\u00c9LIER.COM/' : {",
          "440:     'href': 'http://xn--slier-bsa.com/',",
          "441:     'protocol': 'http:',",
          "",
          "[Removed Lines]",
          "436:     'hash': '#f',",
          "",
          "[Added Lines]",
          "473:     'hash': '#f%20g%3Ch%3Ei',",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "603: for (var u in parseTests) {",
          "604:   var actual = url.parse(u),",
          "605:       expected = parseTests[u];",
          "607:   assert.deepEqual(actual, expected);",
          "609:   var expected = parseTests[u].href,",
          "610:       actual = url.format(parseTests[u]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "659:       spaced = url.parse('     \\t  ' + u + '\\n\\t');",
          "663:   assert.deepEqual(spaced, expected);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "705:     'pathname': '/'",
          "706:   },",
          "707:   'http://google.com\" onload=\"alert(42)/' : {",
          "709:     'protocol': 'http:',",
          "710:     'host': 'google.com',",
          "712:   },",
          "713:   'http://a.com/a/b/c?s#h' : {",
          "714:     'href': 'http://a.com/a/b/c?s#h',",
          "",
          "[Removed Lines]",
          "708:     'href': 'http://google.com/',",
          "711:     'pathname': '/'",
          "",
          "[Added Lines]",
          "764:     'href': 'http://google.com/%22%20onload=%22alert(42)/',",
          "767:     'pathname': '/%22%20onload=%22alert(42)/'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2eb181d28c71e20307166c06317cdd03d102854c",
      "candidate_info": {
        "commit_hash": "2eb181d28c71e20307166c06317cdd03d102854c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2eb181d28c71e20307166c06317cdd03d102854c",
        "files": [
          "test/fixtures/parent-process-nonpersistent.js",
          "test/simple/test-child-process-detached.js"
        ],
        "message": "child_process: fix test implementation for options.detached",
        "before_after_code_files": [
          "test/fixtures/parent-process-nonpersistent.js||test/fixtures/parent-process-nonpersistent.js",
          "test/simple/test-child-process-detached.js||test/simple/test-child-process-detached.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/fixtures/parent-process-nonpersistent.js||test/fixtures/parent-process-nonpersistent.js": [
          "File: test/fixtures/parent-process-nonpersistent.js -> test/fixtures/parent-process-nonpersistent.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: var spawn = require('child_process').spawn,",
          "3:     path = require('path'),",
          "4:     childPath = path.join(__dirname, 'child-process-persistent.js');",
          "6: var child = spawn(process.execPath, [ childPath ], {",
          "7:   detached: true,",
          "8:   stdio: 'ignore'",
          "9: });",
          "11: console.log(child.pid);",
          "13: child.unref();",
          "",
          "---------------"
        ],
        "test/simple/test-child-process-detached.js||test/simple/test-child-process-detached.js": [
          "File: test/simple/test-child-process-detached.js -> test/simple/test-child-process-detached.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: var path = require('path');",
          "26: var spawn = require('child_process').spawn;",
          "32: });",
          "34: process.on('exit', function () {",
          "37: });",
          "",
          "[Removed Lines]",
          "27: var childPath = path.join(__dirname, '..', 'fixtures', 'child-process-persistent.js');",
          "29: var child = spawn(process.execPath, [ childPath ], {",
          "30:   detached: true,",
          "31:   stdio: 'ignore'",
          "35:   process.kill(child.pid);",
          "36:   assert.throws(process.kill(child.pid), Error);",
          "",
          "[Added Lines]",
          "27: var childPath = path.join(__dirname, '..', 'fixtures', 'parent-process-nonpersistent.js');",
          "28: var persistentPid = -1;",
          "30: var child = spawn(process.execPath, [ childPath ]);",
          "32: child.stdout.on('data', function (data) {",
          "33:   persistentPid = parseInt(data, 10);",
          "37:   assert(persistentPid !== -1);",
          "38:   assert.throws(function () {",
          "39:     process.kill(child.pid);",
          "40:   });",
          "41:   assert.doesNotThrow(function () {",
          "42:     process.kill(persistentPid);",
          "43:   });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a9db6cfb139a6cb5941b2ae09ab5671e474e160",
      "candidate_info": {
        "commit_hash": "7a9db6cfb139a6cb5941b2ae09ab5671e474e160",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7a9db6cfb139a6cb5941b2ae09ab5671e474e160",
        "files": [
          "tools/install.py"
        ],
        "message": "install: add a \"portable\" mode to the shebang-rewriting logic\n\nThis \"portable\" mode rewrites the npm shebang to use the \"node\" executable\nin the same directory relative to the \"npm\" script. This makes the \"npm\"\nscript \"just work\" even when \"node\" is not in the user's $PATH.\n\nThis mode is necessary for the precompiled binary packages that may potentially\nbe extracted to anywhere. The regular shebang-rewriting logic would normally\nset the npm script's shebang to \"/bin/node\" which will not be present on anyone's\nmachine. In the end, we want the precompiled packages to be as user-friendly as\npossible.",
        "before_after_code_files": [
          "tools/install.py||tools/install.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/install.py||tools/install.py": [
          "File: tools/install.py -> tools/install.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:     action([link_path], 'bin/npm')",
          "155:   elif action == install:",
          "156:     try_symlink('../lib/node_modules/npm/bin/npm-cli.js', link_path)",
          "158:     update_shebang(link_path, shebang)",
          "159:   else:",
          "160:     assert(0) # unhandled action type",
          "",
          "[Removed Lines]",
          "157:     shebang = os.path.join(node_prefix, 'bin/node')",
          "",
          "[Added Lines]",
          "157:     if os.environ['PORTABLE']:",
          "158:       # This crazy hack is necessary to make the shebang execute the copy",
          "159:       # of node relative to the same directory as the npm script. The precompiled",
          "160:       # binary tarballs use a prefix of \"/\" which gets translated to \"/bin/node\"",
          "161:       # in the regular shebang modifying logic, which is incorrect since the",
          "162:       # precompiled bundle should be able to be extracted anywhere and \"just work\"",
          "163:       shebang = '/bin/sh\\n// 2>/dev/null; exec \"`dirname \"$0\"`/node\" \"$0\" \"$@\"'",
          "164:     else:",
          "165:       shebang = os.path.join(node_prefix, 'bin/node')",
          "",
          "---------------"
        ]
      }
    }
  ]
}