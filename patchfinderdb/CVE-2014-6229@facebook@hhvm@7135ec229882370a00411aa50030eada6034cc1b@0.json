{
  "cve_id": "CVE-2014-6229",
  "cve_desc": "The HashContext class in hphp/runtime/ext/ext_hash.cpp in Facebook HipHop Virtual Machine (HHVM) before 3.3.0 incorrectly expects that a certain key string uses '\\0' for termination, which allows remote attackers to obtain sensitive information by leveraging read access beyond the end of the string, and makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging truncation of a string containing an internal '\\0' character.",
  "repo": "facebook/hhvm",
  "patch_hash": "7135ec229882370a00411aa50030eada6034cc1b",
  "patch_info": {
    "commit_hash": "7135ec229882370a00411aa50030eada6034cc1b",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/7135ec229882370a00411aa50030eada6034cc1b",
    "files": [
      "hphp/runtime/ext/ext_hash.cpp"
    ],
    "message": "Fix potential security leak in HashContext\n\nSummary: CVE-2014-6229\n\nThis is not a NUL-terminated string, it's a fixed-size block of data.\nThe risks were key truncation (if there happens to be a NUL byte in the\nkey) or over-reading (which would be information leakage).\n\nReviewed By: @ptarjan\n\nDifferential Revision: D1533546",
    "before_after_code_files": [
      "hphp/runtime/ext/ext_hash.cpp||hphp/runtime/ext/ext_hash.cpp"
    ]
  },
  "patch_diff": {
    "hphp/runtime/ext/ext_hash.cpp||hphp/runtime/ext/ext_hash.cpp": [
      "File: hphp/runtime/ext/ext_hash.cpp -> hphp/runtime/ext/ext_hash.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "152:     context = malloc(ops->context_size);",
      "153:     ops->hash_copy(context, ctx->context);",
      "154:     options = ctx->options;",
      "156:   }",
      "158:   ~HashContext() {",
      "",
      "[Removed Lines]",
      "155:     key = ctx->key ? strdup(ctx->key) : nullptr;",
      "",
      "[Added Lines]",
      "155:     if (ctx->key) {",
      "156:       key = static_cast<char*>(malloc(ops->block_size));",
      "157:       memcpy(key, ctx->key, ops->block_size);",
      "158:     } else {",
      "159:       key = nullptr;",
      "160:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8525d97318a81080c94ea21ae24c3c70bd1ea26a",
      "candidate_info": {
        "commit_hash": "8525d97318a81080c94ea21ae24c3c70bd1ea26a",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/8525d97318a81080c94ea21ae24c3c70bd1ea26a",
        "files": [
          "hphp/runtime/ext/ext_hash.cpp",
          "hphp/runtime/ext/ext_hash.h",
          "hphp/runtime/ext/hash/hash_engine.h",
          "hphp/system/php/hash/hash.php",
          "hphp/test/slow/ext_hash/hash_copy.php",
          "hphp/test/slow/ext_hash/hash_copy.php.expect",
          "hphp/test/zend/bad/ext/hash/tests/hash_copy_002.php",
          "hphp/test/zend/bad/ext/hash/tests/hash_copy_002.php.expectf",
          "hphp/test/zend/good/ext/hash/tests/hash_copy_002.php",
          "hphp/test/zend/good/ext/hash/tests/hash_copy_002.php.expectf"
        ],
        "message": "Add hash_copy()\n\nMissing piece of hash API\n\nReviewed By: @ptarjan\n\nDifferential Revision: D1104737",
        "before_after_code_files": [
          "hphp/runtime/ext/ext_hash.cpp||hphp/runtime/ext/ext_hash.cpp",
          "hphp/runtime/ext/ext_hash.h||hphp/runtime/ext/ext_hash.h",
          "hphp/runtime/ext/hash/hash_engine.h||hphp/runtime/ext/hash/hash_engine.h",
          "hphp/system/php/hash/hash.php||hphp/system/php/hash/hash.php",
          "hphp/test/slow/ext_hash/hash_copy.php||hphp/test/slow/ext_hash/hash_copy.php",
          "hphp/test/slow/ext_hash/hash_copy.php.expect||hphp/test/slow/ext_hash/hash_copy.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/ext_hash.cpp||hphp/runtime/ext/ext_hash.cpp"
          ],
          "candidate": [
            "hphp/runtime/ext/ext_hash.cpp||hphp/runtime/ext/ext_hash.cpp"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/ext_hash.cpp||hphp/runtime/ext/ext_hash.cpp": [
          "File: hphp/runtime/ext/ext_hash.cpp -> hphp/runtime/ext/ext_hash.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:     HHVM_FE(hash_final);",
          "51:     HHVM_FE(hash_init);",
          "52:     HHVM_FE(hash_update);",
          "53:     HHVM_FE(furchash_hphp_ext);",
          "54:     HHVM_FE(hphp_murmurhash);",
          "55:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:     HHVM_FE(hash_copy);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:     : ops(ops_), context(context_), options(options_), key(nullptr) {",
          "135:   }",
          "137:   ~HashContext() {",
          "138:     HashContext::sweep();",
          "139:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138:   explicit HashContext(const HashContext* ctx) {",
          "139:     assert(ctx->ops);",
          "140:     assert(ctx->ops->context_size >= 0);",
          "141:     ops = ctx->ops;",
          "142:     context = malloc(ops->context_size);",
          "143:     ops->hash_copy(context, ctx->context);",
          "144:     options = ctx->options;",
          "145:     key = ctx->key ? strdup(ctx->key) : nullptr;",
          "146:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "321:   return f_bin2hex(raw);",
          "322: }",
          "324: int64_t HHVM_FUNCTION(furchash_hphp_ext, const String& key,",
          "325:                                          int64_t len, int64_t nPart) {",
          "326:   len = std::max<int64_t>(std::min<int64_t>(len, key.size()), 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "335: Resource HHVM_FUNCTION(hash_copy, CResRef context) {",
          "336:   HashContext *oldhash = context.getTyped<HashContext>();",
          "337:   auto const hash = new HashContext(oldhash);",
          "338:   return Resource(hash);",
          "339: }",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/ext_hash.h||hphp/runtime/ext/ext_hash.h": [
          "File: hphp/runtime/ext/ext_hash.h -> hphp/runtime/ext/ext_hash.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:                                  bool raw_output = false);",
          "35: String HHVM_FUNCTION(hash_final, CResRef context, bool raw_output = false);",
          "36: bool HHVM_FUNCTION(hash_update, CResRef context, const String& data);",
          "37: int64_t HHVM_FUNCTION(furchash_hphp_ext, const String& key,",
          "38:                                          int64_t len, int64_t nPart);",
          "39: int64_t HHVM_FUNCTION(hphp_murmurhash, const String& key,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: Resource HHVM_FUNCTION(hash_copy, CResRef context);",
          "",
          "---------------"
        ],
        "hphp/runtime/ext/hash/hash_engine.h||hphp/runtime/ext/hash/hash_engine.h": [
          "File: hphp/runtime/ext/hash/hash_engine.h -> hphp/runtime/ext/hash/hash_engine.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:   virtual void hash_update(void *context, const unsigned char *buf,",
          "38:                            unsigned int count) = 0;",
          "39:   virtual void hash_final(unsigned char *digest, void *context) = 0;",
          "41:   int digest_size;",
          "42:   int block_size;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   virtual void hash_copy(void *new_context, void *old_context) {",
          "41:     assert(new_context != nullptr);",
          "42:     assert(old_context != nullptr);",
          "43:     assert(context_size >= 0);",
          "44:     memcpy(new_context, old_context, context_size);",
          "45:   }",
          "",
          "---------------"
        ],
        "hphp/system/php/hash/hash.php||hphp/system/php/hash/hash.php": [
          "File: hphp/system/php/hash/hash.php -> hphp/system/php/hash/hash.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:   }",
          "218:   return $didread;",
          "219: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228: <<__Native>>",
          "229: function hash_copy(resource $context): resource;",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_hash/hash_copy.php||hphp/test/slow/ext_hash/hash_copy.php": [
          "File: hphp/test/slow/ext_hash/hash_copy.php -> hphp/test/slow/ext_hash/hash_copy.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: $c = hash_init(\"crc32\");",
          "4: hash_update($c, \"Hello\");",
          "5: $d = hash_copy($c);",
          "6: hash_update($c, \"World\");",
          "7: hash_update($d, \"Goodbye\");",
          "8: var_dump(hash_final($c));",
          "9: var_dump(hash(\"crc32\", \"HelloWorld\"));",
          "10: var_dump(hash_final($d));",
          "11: var_dump(hash(\"crc32\", \"HelloGoodbye\"));",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_hash/hash_copy.php.expect||hphp/test/slow/ext_hash/hash_copy.php.expect": [
          "File: hphp/test/slow/ext_hash/hash_copy.php.expect -> hphp/test/slow/ext_hash/hash_copy.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: string(8) \"3f930b28\"",
          "2: string(8) \"3f930b28\"",
          "3: string(8) \"4ca2dbcf\"",
          "4: string(8) \"4ca2dbcf\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "040dd1786a4438aab3e96125cfaa293111863661",
      "candidate_info": {
        "commit_hash": "040dd1786a4438aab3e96125cfaa293111863661",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/040dd1786a4438aab3e96125cfaa293111863661",
        "files": [
          "hphp/runtime/ext/ext_hash.cpp"
        ],
        "message": "Fix potential security leak in HashContext\n\nSummary: CVE-2014-6229\n\nThis is not a NUL-terminated string, it's a fixed-size block of data.\nThe risks were key truncation (if there happens to be a NUL byte in the\nkey) or over-reading (which would be information leakage).\n\nReviewed By: @ptarjan\n\nDifferential Revision: D1533546",
        "before_after_code_files": [
          "hphp/runtime/ext/ext_hash.cpp||hphp/runtime/ext/ext_hash.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/ext_hash.cpp||hphp/runtime/ext/ext_hash.cpp"
          ],
          "candidate": [
            "hphp/runtime/ext/ext_hash.cpp||hphp/runtime/ext/ext_hash.cpp"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/ext_hash.cpp||hphp/runtime/ext/ext_hash.cpp": [
          "File: hphp/runtime/ext/ext_hash.cpp -> hphp/runtime/ext/ext_hash.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:     context = malloc(ops->context_size);",
          "153:     ops->hash_copy(context, ctx->context);",
          "154:     options = ctx->options;",
          "156:   }",
          "158:   ~HashContext() {",
          "",
          "[Removed Lines]",
          "155:     key = ctx->key ? strdup(ctx->key) : nullptr;",
          "",
          "[Added Lines]",
          "155:     if (ctx->key) {",
          "156:       key = static_cast<char*>(malloc(ops->block_size));",
          "157:       memcpy(key, ctx->key, ops->block_size);",
          "158:     } else {",
          "159:       key = nullptr;",
          "160:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}