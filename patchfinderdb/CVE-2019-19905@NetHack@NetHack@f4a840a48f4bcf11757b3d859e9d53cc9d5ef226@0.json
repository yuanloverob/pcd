{
  "cve_id": "CVE-2019-19905",
  "cve_desc": "NetHack 3.6.x before 3.6.4 is prone to a buffer overflow vulnerability when reading very long lines from configuration files. This affects systems that have NetHack installed suid/sgid, and shared systems that allow users to upload their own configuration files.",
  "repo": "NetHack/NetHack",
  "patch_hash": "f4a840a48f4bcf11757b3d859e9d53cc9d5ef226",
  "patch_info": {
    "commit_hash": "f4a840a48f4bcf11757b3d859e9d53cc9d5ef226",
    "repo": "NetHack/NetHack",
    "commit_url": "https://github.com/NetHack/NetHack/commit/f4a840a48f4bcf11757b3d859e9d53cc9d5ef226",
    "files": [
      "doc/fixes36.4",
      "src/files.c"
    ],
    "message": "fix potential buffer overflow loading config file",
    "before_after_code_files": [
      "src/files.c||src/files.c"
    ]
  },
  "patch_diff": {
    "src/files.c||src/files.c": [
      "File: src/files.c -> src/files.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2309:     int len;",
      "2310:     boolean retval = TRUE;",
      "2313:        remove leading and trailing spaces (exception: if there is nothing",
      "2318:     bufp = find_optparam(buf);",
      "",
      "[Removed Lines]",
      "2315:     mungspaces(strcpy(buf, origbuf));",
      "",
      "[Added Lines]",
      "2314:     (void) strncpy(buf, origbuf, sizeof buf - 1);",
      "2319:     mungspaces(buf);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3034: proc_wizkit_line(buf)",
      "3035: char *buf;",
      "3036: {",
      "3039:     if (otmp) {",
      "3040:         if (otmp != &zeroobj)",
      "",
      "[Removed Lines]",
      "3037:     struct obj *otmp = readobjnam(buf, (struct obj *) 0);",
      "",
      "[Added Lines]",
      "3041:     struct obj *otmp;",
      "3043:     if (strlen(buf) >= BUFSZ)",
      "3044:         buf[BUFSZ - 1] = '\\0';",
      "3045:     otmp = readobjnam(buf, (struct obj *) 0);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3144:                 if (!ignoreline) {",
      "3146:                     if (buf)",
      "3148:                     tmpbuf = (char *) alloc(len);",
      "3149:                     if (buf) {",
      "3151:                         free(buf);",
      "3155:                 }",
      "3157:                 if (morelines || (ignoreline && !oldline))",
      "3158:                     continue;",
      "3161:                     free(buf);",
      "3162:                     buf = (char *) 0;",
      "3163:                     continue;",
      "",
      "[Removed Lines]",
      "3145:                     len = (int) strlen(inbuf) + 1;",
      "3147:                         len += (int) strlen(buf);",
      "3150:                         Sprintf(tmpbuf, \"%s %s\", buf, inbuf);",
      "3152:                     } else",
      "3153:                         Strcpy(tmpbuf, inbuf);",
      "3154:                     buf = tmpbuf;",
      "3160:                 if (handle_config_section(ep)) {",
      "",
      "[Added Lines]",
      "3159:                         Strcat(strcpy(tmpbuf, buf), \" \");",
      "3161:                     }",
      "3162:                     buf = strcat(tmpbuf, ep);",
      "3163:                     buf[sizeof inbuf - 1] = '\\0';",
      "3169:                 if (handle_config_section(buf)) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3179:                     }",
      "3180:                     bufp++;",
      "3181:                     if (config_section_chosen)",
      "3183:                     section = choose_random_part(bufp, ',');",
      "3185:                         config_section_chosen = dupstr(section);",
      "3187:                         config_error_add(\"No config section to choose\");",
      "3188:                         rv = FALSE;",
      "3189:                     }",
      "",
      "[Removed Lines]",
      "3182:                         free(config_section_chosen);",
      "3184:                     if (section)",
      "3186:                     else {",
      "",
      "[Added Lines]",
      "3191:                         free(config_section_chosen), config_section_chosen = 0;",
      "3193:                     if (section) {",
      "3195:                     } else {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "3300:     struct symparse *symp;",
      "3301:     char *bufp, *commentp, *altp;",
      "3305:     mungspaces(buf);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3312:     if (strlen(buf) >= BUFSZ)",
      "3313:         buf[BUFSZ - 1] = '\\0';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f001de79542b8c38b1f8e6d7eaefbbd28ab94b47",
      "candidate_info": {
        "commit_hash": "f001de79542b8c38b1f8e6d7eaefbbd28ab94b47",
        "repo": "NetHack/NetHack",
        "commit_url": "https://github.com/NetHack/NetHack/commit/f001de79542b8c38b1f8e6d7eaefbbd28ab94b47",
        "files": [
          "src/files.c"
        ],
        "message": "parse_conf_file fix fix",
        "before_after_code_files": [
          "src/files.c||src/files.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/files.c||src/files.c"
          ],
          "candidate": [
            "src/files.c||src/files.c"
          ]
        }
      },
      "candidate_diff": {
        "src/files.c||src/files.c": [
          "File: src/files.c -> src/files.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3160:                         free(buf);",
          "3161:                     }",
          "3162:                     buf = strcat(tmpbuf, ep);",
          "3164:                 }",
          "3166:                 if (morelines || (ignoreline && !oldline))",
          "",
          "[Removed Lines]",
          "3163:                     buf[sizeof inbuf - 1] = '\\0';",
          "",
          "[Added Lines]",
          "3163:                     if (strlen(buf) >= sizeof inbuf)",
          "3164:                         buf[sizeof inbuf - 1] = '\\0';",
          "",
          "---------------"
        ]
      }
    }
  ]
}