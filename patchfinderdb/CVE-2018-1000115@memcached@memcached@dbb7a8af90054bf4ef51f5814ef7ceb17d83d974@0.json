{
  "cve_id": "CVE-2018-1000115",
  "cve_desc": "Memcached version 1.5.5 contains an Insufficient Control of Network Message Volume (Network Amplification, CWE-406) vulnerability in the UDP support of the memcached server that can result in denial of service via network flood (traffic amplification of 1:50,000 has been reported by reliable sources). This attack appear to be exploitable via network connectivity to port 11211 UDP. This vulnerability appears to have been fixed in 1.5.6 due to the disabling of the UDP protocol by default.",
  "repo": "memcached/memcached",
  "patch_hash": "dbb7a8af90054bf4ef51f5814ef7ceb17d83d974",
  "patch_info": {
    "commit_hash": "dbb7a8af90054bf4ef51f5814ef7ceb17d83d974",
    "repo": "memcached/memcached",
    "commit_url": "https://github.com/memcached/memcached/commit/dbb7a8af90054bf4ef51f5814ef7ceb17d83d974",
    "files": [
      "memcached.c",
      "t/issue_67.t"
    ],
    "message": "disable UDP port by default\n\nAs reported, UDP amplification attacks have started to use insecure\ninternet-exposed memcached instances. UDP used to be a lot more popular as a\ntransport for memcached many years ago, but I'm not aware of many recent\nusers.\n\nTen years ago, the TCP connection overhead from many clients was relatively\nhigh (dozens or hundreds per client server), but these days many clients are\nbatched, or user fewer processes, or simply anre't worried about it.\n\nWhile changing the default to listen on localhost only would also help, the\ntrue culprit is UDP. There are many more use cases for using memcached over\nthe network than there are for using the UDP protocol.",
    "before_after_code_files": [
      "memcached.c||memcached.c",
      "t/issue_67.t||t/issue_67.t"
    ]
  },
  "patch_diff": {
    "memcached.c||memcached.c": [
      "File: memcached.c -> memcached.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "222:     settings.use_cas = true;",
      "223:     settings.access = 0700;",
      "224:     settings.port = 11211;",
      "227:     settings.inter = NULL;",
      "",
      "[Removed Lines]",
      "225:     settings.udpport = 11211;",
      "",
      "[Added Lines]",
      "225:     settings.udpport = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7479:         }",
      "7480:     }",
      "7485:         settings.port = settings.udpport;",
      "7486:     }",
      "",
      "[Removed Lines]",
      "7482:     if (tcp_specified && settings.port != 0 && !udp_specified) {",
      "7483:         settings.udpport = settings.port;",
      "7484:     } else if (udp_specified && settings.udpport != 0 && !tcp_specified) {",
      "",
      "[Added Lines]",
      "7482:     if (udp_specified && settings.udpport != 0 && !tcp_specified) {",
      "",
      "---------------"
    ],
    "t/issue_67.t||t/issue_67.t": [
      "File: t/issue_67.t -> t/issue_67.t",
      "--- Hunk 1 ---",
      "[Context before]",
      "78: # Disabling the defaults since it conflicts with a running instance.",
      "79: # when('no arguments', '', 11211, 11211);",
      "81: when('specifying udp port', '-U 11222', 11222, 11222);",
      "82: when('specifying tcp ephemeral port', '-p -1', 0, 0);",
      "83: when('specifying udp ephemeral port', '-U -1', 0, 0);",
      "85: when('udp port disabled', '-U 0', 11211, -1);",
      "86: when('specifying tcp and udp ports', '-p 11232 -U 11233', 11232, 11233);",
      "87: when('specifying tcp and disabling udp', '-p 11242 -U 0', 11242, -1);",
      "",
      "[Removed Lines]",
      "80: when('specifying tcp port', '-p 11212', 11212, 11212);",
      "84: when('tcp port disabled', '-p 0', -1, 11211);",
      "",
      "[Added Lines]",
      "80: when('specifying tcp port', '-p 11212', 11212, -1);",
      "84: when('tcp port disabled', '-p 0', -1, -1);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "46a2f17c7df192c0ca662f6c63a3b407df890c40",
      "candidate_info": {
        "commit_hash": "46a2f17c7df192c0ca662f6c63a3b407df890c40",
        "repo": "memcached/memcached",
        "commit_url": "https://github.com/memcached/memcached/commit/46a2f17c7df192c0ca662f6c63a3b407df890c40",
        "files": [
          "memcached.c",
          "t/binary-extstore.t",
          "t/chunked-extstore.t",
          "t/extstore.t",
          "t/issue_67.t"
        ],
        "message": "extstore: don't start with UDP support\n\nalso fixes a bug where setting -U 0 would disable TCP automatically...\nand vice versa.",
        "before_after_code_files": [
          "memcached.c||memcached.c",
          "t/binary-extstore.t||t/binary-extstore.t",
          "t/chunked-extstore.t||t/chunked-extstore.t",
          "t/extstore.t||t/extstore.t",
          "t/issue_67.t||t/issue_67.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "memcached.c||memcached.c",
            "t/issue_67.t||t/issue_67.t"
          ],
          "candidate": [
            "memcached.c||memcached.c",
            "t/issue_67.t||t/issue_67.t"
          ]
        }
      },
      "candidate_diff": {
        "memcached.c||memcached.c": [
          "File: memcached.c -> memcached.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7285:             fprintf(stderr, \"Cannot use inline_ascii_response with extstore enabled\\n\");",
          "7286:             exit(EX_USAGE);",
          "7287:         }",
          "7288:     }",
          "7289: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7289:         if (settings.udpport) {",
          "7290:             fprintf(stderr, \"Cannot use UDP with extstore enabled (-U 0 to disable)\\n\");",
          "7291:             exit(EX_USAGE);",
          "7292:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7337:         }",
          "7338:     }",
          "7341:         settings.udpport = settings.port;",
          "7343:         settings.port = settings.udpport;",
          "7344:     }",
          "",
          "[Removed Lines]",
          "7340:     if (tcp_specified && !udp_specified) {",
          "7342:     } else if (udp_specified && !tcp_specified) {",
          "",
          "[Added Lines]",
          "7345:     if (tcp_specified && settings.port != 0 && !udp_specified) {",
          "7347:     } else if (udp_specified && settings.udpport != 0 && !tcp_specified) {",
          "",
          "---------------"
        ],
        "t/binary-extstore.t||t/binary-extstore.t": [
          "File: t/binary-extstore.t -> t/binary-extstore.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: $ext_path = \"/tmp/extstore.$$\";",
          "21: ok($server, \"started the server\");",
          "23: # Based almost 100% off testClient.py which is:",
          "",
          "[Removed Lines]",
          "20: my $server = new_memcached(\"-m 64 -o ext_page_size=8,ext_page_count=8,ext_wbuf_size=2,ext_wbuf_count=3,ext_threads=1,ext_io_depth=2,ext_item_size=512,ext_item_age=2,ext_recache_rate=10000,ext_max_frag=0.9,ext_path=$ext_path,no_lru_crawler\");",
          "",
          "[Added Lines]",
          "20: my $server = new_memcached(\"-m 64 -U 0 -o ext_page_size=8,ext_page_count=8,ext_wbuf_size=2,ext_wbuf_count=3,ext_threads=1,ext_io_depth=2,ext_item_size=512,ext_item_age=2,ext_recache_rate=10000,ext_max_frag=0.9,ext_path=$ext_path,no_lru_crawler\");",
          "",
          "---------------"
        ],
        "t/chunked-extstore.t||t/chunked-extstore.t": [
          "File: t/chunked-extstore.t -> t/chunked-extstore.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: $ext_path = \"/tmp/extstore.$$\";",
          "22: my $sock = $server->sock;",
          "24: # We're testing to ensure item chaining doesn't corrupt or poorly overlap",
          "",
          "[Removed Lines]",
          "21: my $server = new_memcached(\"-m 64 -o ext_page_size=8,ext_page_count=8,ext_wbuf_size=2,ext_wbuf_count=3,ext_threads=1,ext_io_depth=2,ext_item_size=512,ext_item_age=2,ext_recache_rate=10000,ext_max_frag=0.9,ext_path=$ext_path,slab_chunk_max=16384\");",
          "",
          "[Added Lines]",
          "21: my $server = new_memcached(\"-m 64 -U 0 -o ext_page_size=8,ext_page_count=8,ext_wbuf_size=2,ext_wbuf_count=3,ext_threads=1,ext_io_depth=2,ext_item_size=512,ext_item_age=2,ext_recache_rate=10000,ext_max_frag=0.9,ext_path=$ext_path,slab_chunk_max=16384\");",
          "",
          "---------------"
        ],
        "t/extstore.t||t/extstore.t": [
          "File: t/extstore.t -> t/extstore.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: $ext_path = \"/tmp/extstore.$$\";",
          "21: my $sock = $server->sock;",
          "23: my $value;",
          "",
          "[Removed Lines]",
          "20: my $server = new_memcached(\"-m 64 -o ext_page_size=8,ext_page_count=8,ext_wbuf_size=2,ext_wbuf_count=3,ext_threads=1,ext_io_depth=2,ext_item_size=512,ext_item_age=2,ext_recache_rate=10000,ext_max_frag=0.9,ext_path=$ext_path\");",
          "",
          "[Added Lines]",
          "20: my $server = new_memcached(\"-m 64 -U 0 -o ext_page_size=8,ext_page_count=8,ext_wbuf_size=2,ext_wbuf_count=3,ext_threads=1,ext_io_depth=2,ext_item_size=512,ext_item_age=2,ext_recache_rate=10000,ext_max_frag=0.9,ext_path=$ext_path\");",
          "",
          "---------------"
        ],
        "t/issue_67.t||t/issue_67.t": [
          "File: t/issue_67.t -> t/issue_67.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "81: when('specifying udp port', '-U 11222', 11222, 11222);",
          "82: when('specifying tcp ephemeral port', '-p -1', 0, 0);",
          "83: when('specifying udp ephemeral port', '-U -1', 0, 0);",
          "86: when('specifying tcp and udp ports', '-p 11232 -U 11233', 11232, 11233);",
          "87: when('specifying tcp and disabling udp', '-p 11242 -U 0', 11242, -1);",
          "88: when('specifying udp and disabling tcp', '-p -1 -U 11252', 0, 11252);",
          "",
          "[Removed Lines]",
          "84: when('tcp port disabled', '-p 0', -1, -1);",
          "85: when('udp port disabled', '-U 0', -1, -1);",
          "",
          "[Added Lines]",
          "84: when('tcp port disabled', '-p 0', -1, 11211);",
          "85: when('udp port disabled', '-U 0', 11211, -1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}