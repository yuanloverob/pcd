{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4834cd2700bc852baa30180f16701a4c79aee2fa",
      "candidate_info": {
        "commit_hash": "4834cd2700bc852baa30180f16701a4c79aee2fa",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/4834cd2700bc852baa30180f16701a4c79aee2fa",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: initialize i in preprocess(). this fixes compilation issue for MSVC",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: static uint8_t *preprocess(char *code, size_t *size)",
          "30: {",
          "32:  uint8_t high, low;",
          "33:  uint8_t *result;",
          "",
          "[Removed Lines]",
          "31:  size_t i, j = 0;",
          "",
          "[Added Lines]",
          "31:  size_t i = 0, j = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cff66503aa7baba1d3ab27c26d92ea1b133a6317",
      "candidate_info": {
        "commit_hash": "cff66503aa7baba1d3ab27c26d92ea1b133a6317",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/cff66503aa7baba1d3ab27c26d92ea1b133a6317",
        "files": [
          "cstool/Makefile",
          "cstool/cstool.c",
          "cstool/getopt.h"
        ],
        "message": "Refactor cstool to use getopt -100LOC (#953)\n\n* Refactor cstool to use getopt -100LOC\n\n* Add getopt.h for portability\n\n* Do not use os-specific separators in include paths",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c",
          "cstool/getopt.h||cstool/getopt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: #include <string.h>",
          "3: #include <ctype.h>",
          "4: #include <errno.h>",
          "6: #include <capstone/capstone.h>",
          "8: void print_insn_detail_x86(csh ud, cs_mode mode, cs_insn *ins);",
          "9: void print_insn_detail_arm(csh handle, cs_insn *ins);",
          "10: void print_insn_detail_arm64(csh handle, cs_insn *ins);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: #include \"getopt.h\"",
          "11: static struct {",
          "12:  const char *name;",
          "13:  cs_arch arch;",
          "14:  cs_mode mode;",
          "15: } Arch[] = {",
          "16:  { \"arm\", CS_ARCH_ARM, CS_MODE_ARM },",
          "17:  { \"armb\", CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_BIG_ENDIAN },",
          "18:  { \"armbe\", CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_BIG_ENDIAN },",
          "19:  { \"arml\", CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_LITTLE_ENDIAN },",
          "20:  { \"armle\", CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_LITTLE_ENDIAN },",
          "21:  { \"thumb\", CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_THUMB },",
          "22:  { \"thumbbe\", CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_THUMB | CS_MODE_BIG_ENDIAN },",
          "23:  { \"thumble\", CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_THUMB | CS_MODE_LITTLE_ENDIAN },",
          "24:  { \"arm64\", CS_ARCH_ARM64, CS_MODE_LITTLE_ENDIAN },",
          "25:  { \"arm64be\", CS_ARCH_ARM64, CS_MODE_BIG_ENDIAN },",
          "26:  { \"mips\", CS_ARCH_MIPS, CS_MODE_MIPS32 | CS_MODE_LITTLE_ENDIAN },",
          "27:  { \"mipsbe\", CS_ARCH_MIPS, CS_MODE_MIPS32 | CS_MODE_BIG_ENDIAN },",
          "28:  { \"mips64\", CS_ARCH_MIPS, CS_MODE_MIPS64 | CS_MODE_LITTLE_ENDIAN },",
          "29:  { \"mips64be\", CS_ARCH_MIPS, CS_MODE_MIPS64 | CS_MODE_BIG_ENDIAN },",
          "30:  { \"x16\", CS_ARCH_X86, CS_MODE_16 }, // CS_MODE_16",
          "31:  { \"x16att\", CS_ARCH_X86, CS_MODE_16 }, // CS_MODE_16 , CS_OPT_SYNTAX_ATT",
          "32:  { \"x32\", CS_ARCH_X86, CS_MODE_32 }, // CS_MODE_32",
          "33:  { \"x32att\", CS_ARCH_X86, CS_MODE_32 }, // CS_MODE_32, CS_OPT_SYNTAX_ATT",
          "34:  { \"x64\", CS_ARCH_X86, CS_MODE_64 }, // CS_MODE_64",
          "35:  { \"x64att\", CS_ARCH_X86, CS_MODE_64 }, // CS_MODE_64, CS_OPT_SYNTAX_ATT",
          "36:  { \"ppc64\", CS_ARCH_PPC, CS_MODE_64 | CS_MODE_LITTLE_ENDIAN },",
          "37:  { \"ppc64be\", CS_ARCH_PPC, CS_MODE_64 | CS_MODE_BIG_ENDIAN },",
          "38:  { \"sparc\", CS_ARCH_SPARC, CS_MODE_BIG_ENDIAN },",
          "39:  { \"systemz\", CS_ARCH_SYSZ, CS_MODE_BIG_ENDIAN },",
          "40:  { \"sysz\", CS_ARCH_SYSZ, CS_MODE_BIG_ENDIAN },",
          "41:  { \"s390x\", CS_ARCH_SYSZ, CS_MODE_BIG_ENDIAN },",
          "42:  { \"xcore\", CS_ARCH_XCORE, CS_MODE_BIG_ENDIAN },",
          "43:  { \"m68k\", CS_ARCH_M68K, CS_MODE_BIG_ENDIAN },",
          "44:  { \"m68k40\", CS_ARCH_M68K, CS_MODE_M68K_040 },",
          "45:  { \"tms320c64x\", CS_ARCH_TMS320C64X, CS_MODE_BIG_ENDIAN },",
          "46:  { \"tms320c64x\", CS_ARCH_TMS320C64X, CS_MODE_BIG_ENDIAN },",
          "47:  { NULL }",
          "48: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: void print_insn_detail_xcore(csh handle, cs_insn *ins);",
          "16: void print_insn_detail_m68k(csh handle, cs_insn *ins);",
          "17: void print_insn_detail_tms320c64x(csh handle, cs_insn *ins);",
          "19: void print_string_hex(char *comment, unsigned char *str, size_t len)",
          "20: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60: static void print_details(csh handle, cs_arch arch, cs_mode md, cs_insn *ins);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:  printf(\"Cstool for Capstone Disassembler Engine v%u.%u.%u\\n\\n\", CS_VERSION_MAJOR, CS_VERSION_MINOR, CS_VERSION_EXTRA);",
          "75:  printf(\"Syntax: %s [-u|-d] <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "76:  printf(\"\\nThe following <arch+mode> options are supported:\\n\");",
          "78:  if (cs_support(CS_ARCH_X86)) {",
          "79:   printf(\"        x16:       16-bit mode (X86)\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120:  printf(\"\\n -d show detailed information of the instructions\\n\");",
          "121:  printf(\"\\n -u show immediates as unsigned\\n\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "132:  printf(\"\\n\");",
          "133: }",
          "135: int main(int argc, char **argv)",
          "136: {",
          "137:  csh handle;",
          "138:  char *mode;",
          "139:  uint8_t *assembly;",
          "140:  size_t count, size;",
          "142:  cs_insn *insn;",
          "143:  cs_err err;",
          "144:  cs_mode md;",
          "146:  bool detail_flag = false;",
          "147:  bool unsigned_flag = false;",
          "162:    unsigned_flag = true;",
          "176:    usage(argv[0]);",
          "177:    return -1;",
          "178:   }",
          "231:  }",
          "274:  }",
          "282:   }",
          "283:  }",
          "291:   }",
          "292:  }",
          "344:  if (err) {",
          "345:   printf(\"ERROR: Failed on cs_open(), quit!\\n\");",
          "",
          "[Removed Lines]",
          "141:  uint64_t address = 0;",
          "145:  cs_arch arch;",
          "149:  if (argc != 3 && argc != 4 && argc != 5) {",
          "150:   usage(argv[0]);",
          "151:   return -1;",
          "152:  }",
          "154:  if (!strcmp(argv[1], \"-d\") || !strcmp(argv[1], \"-u\")) {",
          "155:   if (argc == 3) {",
          "156:    usage(argv[0]);",
          "157:    return -1;",
          "158:   }",
          "159:   if (argv[1][1] == 'd') {",
          "160:    detail_flag = true;",
          "161:   } else {",
          "163:   }",
          "164:   mode = argv[2];",
          "165:   assembly = preprocess(argv[3], &size);",
          "166:   if (argc == 5) {",
          "167:    char *temp;",
          "168:    address = strtoull(argv[4], &temp, 16);",
          "169:    if (temp == argv[4] || *temp != '\\0' || errno == ERANGE) {",
          "170:     printf(\"ERROR: invalid address argument, quit!\\n\");",
          "171:     return -2;",
          "172:    }",
          "173:   }",
          "174:  } else {",
          "175:   if (argc == 5) {",
          "180:   mode = argv[1];",
          "181:   assembly = preprocess(argv[2], &size);",
          "182:   if (assembly == NULL) {",
          "183:    printf(\"ERROR: invalid assembler-string argument, quit!\\n\");",
          "184:    return -3;",
          "185:   }",
          "187:   if (argc == 4) {",
          "189:    char *temp;",
          "190:    address = strtoull(argv[3], &temp, 16);",
          "191:    if (temp == argv[3] || *temp != '\\0' || errno == ERANGE) {",
          "192:     printf(\"ERROR: invalid address argument, quit!\\n\");",
          "193:     return -2;",
          "194:    }",
          "195:   }",
          "196:  }",
          "198:  if (!strcmp(mode, \"arm\")) {",
          "199:   arch = CS_ARCH_ARM;",
          "200:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM, &handle);",
          "201:  }",
          "203:  if (!strcmp(mode, \"armb\") || !strcmp(mode, \"armbe\") ) {",
          "204:   arch = CS_ARCH_ARM;",
          "205:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_BIG_ENDIAN, &handle);",
          "206:  }",
          "208:  if (!strcmp(mode, \"arml\")) {",
          "209:   arch = CS_ARCH_ARM;",
          "210:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_LITTLE_ENDIAN, &handle);",
          "211:  }",
          "213:  if (!strcmp(mode, \"thumb\")) {",
          "214:   arch = CS_ARCH_ARM;",
          "215:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB | CS_MODE_LITTLE_ENDIAN, &handle);",
          "216:  }",
          "218:  if (!strcmp(mode, \"thumbbe\")) {",
          "219:   arch = CS_ARCH_ARM;",
          "220:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB | CS_MODE_BIG_ENDIAN, &handle);",
          "221:  }",
          "223:  if (!strcmp(mode, \"thumble\")) {",
          "224:   arch = CS_ARCH_ARM;",
          "225:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_LITTLE_ENDIAN, &handle);",
          "226:  }",
          "228:  if (!strcmp(mode, \"arm64\")) {",
          "229:   arch = CS_ARCH_ARM64;",
          "230:   err = cs_open(CS_ARCH_ARM64, CS_MODE_LITTLE_ENDIAN, &handle);",
          "233:  if (!strcmp(mode, \"arm64be\")) {",
          "234:   arch = CS_ARCH_ARM64;",
          "235:   err = cs_open(CS_ARCH_ARM64, CS_MODE_BIG_ENDIAN, &handle);",
          "236:  }",
          "238:  if (!strcmp(mode, \"mips\")) {",
          "239:   arch = CS_ARCH_MIPS;",
          "240:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 | CS_MODE_LITTLE_ENDIAN, &handle);",
          "241:  }",
          "243:  if (!strcmp(mode, \"mipsbe\")) {",
          "244:   arch = CS_ARCH_MIPS;",
          "245:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 | CS_MODE_BIG_ENDIAN, &handle);",
          "246:  }",
          "248:  if (!strcmp(mode, \"mips64\")) {",
          "249:   arch = CS_ARCH_MIPS;",
          "250:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 | CS_MODE_LITTLE_ENDIAN, &handle);",
          "251:  }",
          "253:  if (!strcmp(mode, \"mips64be\")) {",
          "254:   arch = CS_ARCH_MIPS;",
          "255:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 | CS_MODE_BIG_ENDIAN, &handle);",
          "256:  }",
          "258:  if (!strcmp(mode, \"x16\")) {",
          "259:   md = CS_MODE_16;",
          "260:   arch = CS_ARCH_X86;",
          "261:   err = cs_open(CS_ARCH_X86, CS_MODE_16, &handle);",
          "262:  }",
          "264:  if (!strcmp(mode, \"x32\")) {",
          "265:   md = CS_MODE_32;",
          "266:   arch = CS_ARCH_X86;",
          "267:   err = cs_open(CS_ARCH_X86, CS_MODE_32, &handle);",
          "268:  }",
          "270:  if (!strcmp(mode, \"x64\")) {",
          "271:   md = CS_MODE_64;",
          "272:   arch = CS_ARCH_X86;",
          "273:   err = cs_open(CS_ARCH_X86, CS_MODE_64, &handle);",
          "276:  if (!strcmp(mode, \"x16att\")) {",
          "277:   md = CS_MODE_16;",
          "278:   arch = CS_ARCH_X86;",
          "279:   err = cs_open(CS_ARCH_X86, CS_MODE_16, &handle);",
          "280:   if (!err) {",
          "281:    cs_option(handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);",
          "285:  if (!strcmp(mode,\"x32att\")) {",
          "286:   md = CS_MODE_32;",
          "287:   arch = CS_ARCH_X86;",
          "288:   err = cs_open(CS_ARCH_X86, CS_MODE_32, &handle);",
          "289:   if (!err) {",
          "290:    cs_option(handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);",
          "294:  if (!strcmp(mode,\"x64att\")) {",
          "295:   md = CS_MODE_64;",
          "296:   arch = CS_ARCH_X86;",
          "297:   err = cs_open(CS_ARCH_X86, CS_MODE_64, &handle);",
          "298:   if (!err) {",
          "299:    cs_option(handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);",
          "300:   }",
          "301:  }",
          "303:  if (!strcmp(mode,\"ppc64\")) {",
          "304:   arch = CS_ARCH_PPC;",
          "305:   err = cs_open(CS_ARCH_PPC, CS_MODE_64 | CS_MODE_LITTLE_ENDIAN, &handle);",
          "306:  }",
          "308:  if (!strcmp(mode,\"ppc64be\")) {",
          "309:   arch = CS_ARCH_PPC;",
          "310:   err = cs_open(CS_ARCH_PPC,CS_MODE_64 | CS_MODE_BIG_ENDIAN, &handle);",
          "311:  }",
          "313:  if (!strcmp(mode,\"sparc\")) {",
          "314:   arch = CS_ARCH_SPARC;",
          "315:   err = cs_open(CS_ARCH_SPARC, CS_MODE_BIG_ENDIAN, &handle);",
          "316:  }",
          "318:  if (!strcmp(mode, \"systemz\") || !strcmp(mode, \"sysz\") || !strcmp(mode, \"s390x\")) {",
          "319:   arch = CS_ARCH_SYSZ;",
          "320:   err = cs_open(CS_ARCH_SYSZ, CS_MODE_BIG_ENDIAN, &handle);",
          "321:  }",
          "323:  if (!strcmp(mode,\"xcore\")) {",
          "324:   arch = CS_ARCH_XCORE;",
          "325:   err = cs_open(CS_ARCH_XCORE, CS_MODE_BIG_ENDIAN, &handle);",
          "326:  }",
          "328:  if (!strcmp(mode,\"m68k\")) {",
          "329:   arch = CS_ARCH_M68K;",
          "330:   err = cs_open(CS_ARCH_M68K, CS_MODE_BIG_ENDIAN, &handle);",
          "331:  }",
          "333:  if (!strcmp(mode,\"m68k40\")) {",
          "334:   arch = CS_ARCH_M68K;",
          "335:   err = cs_open(CS_ARCH_M68K, CS_MODE_M68K_040, &handle);",
          "336:  }",
          "338:  if (!strcmp(mode,\"tms320c64x\")) {",
          "339:   arch = CS_ARCH_TMS320C64X;",
          "340:   err = cs_open(CS_ARCH_TMS320C64X, CS_MODE_BIG_ENDIAN, &handle);",
          "341:  }",
          "",
          "[Added Lines]",
          "180: static void print_details(csh handle, cs_arch arch, cs_mode md, cs_insn *ins)",
          "181: {",
          "182:  switch(arch) {",
          "183:   case CS_ARCH_X86:",
          "184:    print_insn_detail_x86(handle, md, ins);",
          "185:    break;",
          "186:   case CS_ARCH_ARM:",
          "187:    print_insn_detail_arm(handle, ins);",
          "188:    break;",
          "189:   case CS_ARCH_ARM64:",
          "190:    print_insn_detail_arm64(handle, ins);",
          "191:    break;",
          "192:   case CS_ARCH_MIPS:",
          "193:    print_insn_detail_mips(handle, ins);",
          "194:    break;",
          "195:   case CS_ARCH_PPC:",
          "196:    print_insn_detail_ppc(handle, ins);",
          "197:    break;",
          "198:   case CS_ARCH_SPARC:",
          "199:    print_insn_detail_sparc(handle, ins);",
          "200:    break;",
          "201:   case CS_ARCH_SYSZ:",
          "202:    print_insn_detail_sysz(handle, ins);",
          "203:    break;",
          "204:   case CS_ARCH_XCORE:",
          "205:    print_insn_detail_xcore(handle, ins);",
          "206:    break;",
          "207:   case CS_ARCH_M68K:",
          "208:    print_insn_detail_m68k(handle, ins);",
          "209:    break;",
          "210:   case CS_ARCH_TMS320C64X:",
          "211:    print_insn_detail_tms320c64x(handle, ins);",
          "212:    break;",
          "213:   default: break;",
          "214:  }",
          "216:  if (ins->detail->groups_count) {",
          "217:   int j;",
          "219:   printf(\"\\tGroups: \");",
          "220:   for(j = 0; j < ins->detail->groups_count; j++) {",
          "221:    printf(\"%s \", cs_group_name(handle, ins->detail->groups[j]));",
          "222:   }",
          "223:   printf(\"\\n\");",
          "224:  }",
          "226:  printf(\"\\n\");",
          "227: }",
          "231:  int i, c;",
          "236:  uint64_t address = 0LL;",
          "240:  cs_arch arch = -1;",
          "244:  while ((c = getopt (argc, argv, \"udhv\")) != -1) {",
          "245:   switch (c) {",
          "246:   case 'u':",
          "248:    break;",
          "249:   case 'd':",
          "250:    detail_flag = true;",
          "251:    break;",
          "252:   case 'v':",
          "253:    printf(\"%u.%u.%u\\n\", CS_VERSION_MAJOR, CS_VERSION_MINOR, CS_VERSION_EXTRA);",
          "254:    return 0;",
          "255:   case 'h':",
          "256:    usage(argv[0]);",
          "257:    return 0;",
          "258:   default:",
          "263:  int args_left = argc - optind;",
          "264:  if (args_left < 2 || args_left > 3) {",
          "265:   usage(argv[0]);",
          "266:   return -1;",
          "269:  mode = argv[optind];",
          "270:  assembly = preprocess(argv[optind + 1], &size);",
          "271:  if (args_left == 3) {",
          "272:   char *temp, *src = argv[optind + 2];",
          "273:   address = strtoull(src, &temp, 16);",
          "274:   if (temp == src || *temp != '\\0' || errno == ERANGE) {",
          "275:    printf(\"ERROR: invalid address argument, quit!\\n\");",
          "276:    return -2;",
          "280:  for (i = 0; Arch[i].name; i++) {",
          "281:   if (!strcmp(Arch[i].name, mode)) {",
          "282:    arch = Arch[i].arch;",
          "283:    err = cs_open(Arch[i].arch, Arch[i].mode, &handle);",
          "284:    if (!err) {",
          "285:     md = Arch[i].mode;",
          "286:     if (strstr (mode, \"att\")) {",
          "287:      cs_option(handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);",
          "288:     }",
          "289:    }",
          "290:    break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "376:    printf(\"  %s\\t%s\\n\", insn[i].mnemonic, insn[i].op_str);",
          "378:    if (detail_flag) {",
          "426:    }",
          "427:   }",
          "",
          "[Removed Lines]",
          "379:     switch(arch) {",
          "380:      default: break;",
          "382:      case CS_ARCH_X86:",
          "383:         print_insn_detail_x86(handle, md, &insn[i]);",
          "384:         break;",
          "386:      case CS_ARCH_ARM:",
          "387:         print_insn_detail_arm(handle, &insn[i]);",
          "388:         break;",
          "389:      case CS_ARCH_ARM64:",
          "390:         print_insn_detail_arm64(handle,&insn[i]);",
          "391:         break;",
          "392:      case CS_ARCH_MIPS:",
          "393:         print_insn_detail_mips(handle, &insn[i]);",
          "394:         break;",
          "395:      case CS_ARCH_PPC:",
          "396:         print_insn_detail_ppc(handle, &insn[i]);",
          "397:         break;",
          "398:      case CS_ARCH_SPARC:",
          "399:         print_insn_detail_sparc(handle, &insn[i]);",
          "400:         break;",
          "401:      case CS_ARCH_SYSZ:",
          "402:         print_insn_detail_sysz(handle, &insn[i]);",
          "403:         break;",
          "404:      case CS_ARCH_XCORE:",
          "405:         print_insn_detail_xcore(handle, &insn[i]);",
          "406:         break;",
          "407:      case CS_ARCH_M68K:",
          "408:         print_insn_detail_m68k(handle, &insn[i]);",
          "409:         break;",
          "410:      case CS_ARCH_TMS320C64X:",
          "411:         print_insn_detail_tms320c64x(handle, &insn[i]);",
          "412:         break;",
          "413:     }",
          "415:     if (insn[i].detail->groups_count) {",
          "416:      int j;",
          "418:      printf(\"\\tGroups: \");",
          "419:      for(j = 0; j < insn[i].detail->groups_count; j++) {",
          "420:       printf(\"%s \", cs_group_name(handle, insn[i].detail->groups[j]));",
          "421:      }",
          "422:      printf(\"\\n\");",
          "423:     }",
          "425:     printf(\"\\n\");",
          "",
          "[Added Lines]",
          "330:     print_details(handle, arch, md, &insn[i]);",
          "",
          "---------------"
        ],
        "cstool/getopt.h||cstool/getopt.h": [
          "File: cstool/getopt.h -> cstool/getopt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #include <string.h>",
          "2: #include <stdio.h>",
          "11: #define BADCH (int)'?'",
          "12: #define BADARG (int)':'",
          "13: #define EMSG \"\"",
          "19: int",
          "20: getopt (int nargc, char * const nargv[], const char *ostr)",
          "21: {",
          "26:   optreset = 0;",
          "27:   if (optind >= nargc || *(place = nargv[optind]) != '-') {",
          "28:    place = EMSG;",
          "29:    return (-1);",
          "30:   }",
          "32:    ++optind;",
          "33:    place = EMSG;",
          "34:    return (-1);",
          "35:   }",
          "37:  if ((optopt = (int)*place++) == (int)':' ||",
          "38:   !(oli = strchr (ostr, optopt))) {",
          "43:   if (optopt == (int)'-')",
          "44:    return (-1);",
          "45:   if (!*place)",
          "46:    ++optind;",
          "47:   if (opterr && *ostr != ':')",
          "48:    (void)printf (\"illegal option -- %c\\n\", optopt);",
          "49:   return (BADCH);",
          "50:  }",
          "52:   optarg = NULL;",
          "53:   if (!*place)",
          "54:    ++optind;",
          "55:  }",
          "58:    optarg = place;",
          "60:    place = EMSG;",
          "61:    if (*ostr == ':')",
          "62:     return (BADARG);",
          "63:    if (opterr)",
          "64:     (void)printf (\"option requires an argument -- %c\\n\", optopt);",
          "65:    return (BADCH);",
          "66:   }",
          "68:    optarg = nargv[optind];",
          "69:   place = EMSG;",
          "70:   ++optind;",
          "71:  }",
          "73: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0652e62cd8a2713dfebbc9f1c1f43ffc25dd0a37",
      "candidate_info": {
        "commit_hash": "0652e62cd8a2713dfebbc9f1c1f43ffc25dd0a37",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/0652e62cd8a2713dfebbc9f1c1f43ffc25dd0a37",
        "files": [
          "bindings/java/capstone/Arm64_const.java",
          "bindings/java/capstone/Arm_const.java",
          "bindings/java/capstone/M68k_const.java",
          "bindings/java/capstone/Mips_const.java",
          "bindings/java/capstone/X86_const.java",
          "bindings/ocaml/arm64_const.ml",
          "bindings/ocaml/arm_const.ml",
          "bindings/ocaml/m68k_const.ml",
          "bindings/ocaml/mips_const.ml",
          "bindings/ocaml/x86_const.ml",
          "bindings/python/capstone/arm64_const.py",
          "bindings/python/capstone/arm_const.py",
          "bindings/python/capstone/m68k_const.py",
          "bindings/python/capstone/mips_const.py",
          "bindings/python/capstone/x86_const.py"
        ],
        "message": "binding: update following addition of GRP_BRANCH_RELATIVE",
        "before_after_code_files": [
          "bindings/javcapstone/Arm64_const.java||bindings/java/capstone/Arm64_const.java",
          "bindings/javcapstone/Arm_const.java||bindings/java/capstone/Arm_const.java",
          "bindings/javcapstone/M68k_const.java||bindings/java/capstone/M68k_const.java",
          "bindings/javcapstone/Mips_const.java||bindings/java/capstone/Mips_const.java",
          "bindings/javcapstone/X86_const.java||bindings/java/capstone/X86_const.java",
          "bindings/ocaml/arm64_const.ml||bindings/ocaml/arm64_const.ml",
          "bindings/ocaml/arm_const.ml||bindings/ocaml/arm_const.ml",
          "bindings/ocaml/m68k_const.ml||bindings/ocaml/m68k_const.ml",
          "bindings/ocaml/mips_const.ml||bindings/ocaml/mips_const.ml",
          "bindings/ocaml/x86_const.ml||bindings/ocaml/x86_const.ml",
          "bindings/python/capstone/arm64_const.py||bindings/python/capstone/arm64_const.py",
          "bindings/python/capstone/arm_const.py||bindings/python/capstone/arm_const.py",
          "bindings/python/capstone/m68k_const.py||bindings/python/capstone/m68k_const.py",
          "bindings/python/capstone/mips_const.py||bindings/python/capstone/mips_const.py",
          "bindings/python/capstone/x86_const.py||bindings/python/capstone/x86_const.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/javcapstone/Arm64_const.java||bindings/java/capstone/Arm64_const.java": [
          "File: bindings/javcapstone/Arm64_const.java -> bindings/java/capstone/Arm64_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1046:  public static final int ARM64_GRP_BRANCH_RELATIVE = 7;",
          "",
          "---------------"
        ],
        "bindings/javcapstone/Arm_const.java||bindings/java/capstone/Arm_const.java": [
          "File: bindings/javcapstone/Arm_const.java -> bindings/java/capstone/Arm_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "773:  public static final int ARM_GRP_BRANCH_RELATIVE = 7;",
          "",
          "---------------"
        ],
        "bindings/javcapstone/M68k_const.java||bindings/java/capstone/M68k_const.java": [
          "File: bindings/javcapstone/M68k_const.java -> bindings/java/capstone/M68k_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "490:  public static final int M68K_GRP_BRANCH_RELATIVE = 7;",
          "491:  public static final int M68K_GRP_ENDING = 8;",
          "",
          "---------------"
        ],
        "bindings/javcapstone/Mips_const.java||bindings/java/capstone/Mips_const.java": [
          "File: bindings/javcapstone/Mips_const.java -> bindings/java/capstone/Mips_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "852:  public static final int MIPS_GRP_BRANCH_RELATIVE = 7;",
          "",
          "---------------"
        ],
        "bindings/javcapstone/X86_const.java||bindings/java/capstone/X86_const.java": [
          "File: bindings/javcapstone/X86_const.java -> bindings/java/capstone/X86_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1944:  public static final int X86_GRP_BRANCH_RELATIVE = 7;",
          "",
          "---------------"
        ],
        "bindings/ocaml/arm64_const.ml||bindings/ocaml/arm64_const.ml": [
          "File: bindings/ocaml/arm64_const.ml -> bindings/ocaml/arm64_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "1040: let _ARM64_GRP_RET = 3;;",
          "1041: let _ARM64_GRP_INT = 4;;",
          "1042: let _ARM64_GRP_PRIVILEGE = 6;;",
          "1044: (* Architecture-specific groups *)",
          "1045: let _ARM64_GRP_CRYPTO = 128;;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1043: let _ARM64_GRP_BRANCH_RELATIVE = 7;;",
          "",
          "---------------"
        ],
        "bindings/ocaml/arm_const.ml||bindings/ocaml/arm_const.ml": [
          "File: bindings/ocaml/arm_const.ml -> bindings/ocaml/arm_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "767: let _ARM_GRP_CALL = 2;;",
          "768: let _ARM_GRP_INT = 4;;",
          "769: let _ARM_GRP_PRIVILEGE = 6;;",
          "771: (* Architecture-specific groups *)",
          "772: let _ARM_GRP_CRYPTO = 128;;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "770: let _ARM_GRP_BRANCH_RELATIVE = 7;;",
          "",
          "---------------"
        ],
        "bindings/ocaml/m68k_const.ml||bindings/ocaml/m68k_const.ml": [
          "File: bindings/ocaml/m68k_const.ml -> bindings/ocaml/m68k_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "484: let _M68K_GRP_JUMP = 1;;",
          "485: let _M68K_GRP_RET = 3;;",
          "486: let _M68K_GRP_IRET = 5;;",
          "",
          "[Removed Lines]",
          "487: let _M68K_GRP_ENDING = 6;;",
          "",
          "[Added Lines]",
          "487: let _M68K_GRP_BRANCH_RELATIVE = 7;;",
          "488: let _M68K_GRP_ENDING = 8;;",
          "",
          "---------------"
        ],
        "bindings/ocaml/mips_const.ml||bindings/ocaml/mips_const.ml": [
          "File: bindings/ocaml/mips_const.ml -> bindings/ocaml/mips_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "846: let _MIPS_GRP_INT = 4;;",
          "847: let _MIPS_GRP_IRET = 5;;",
          "848: let _MIPS_GRP_PRIVILEGE = 6;;",
          "850: (* Architecture-specific groups *)",
          "851: let _MIPS_GRP_BITCOUNT = 128;;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "849: let _MIPS_GRP_BRANCH_RELATIVE = 7;;",
          "",
          "---------------"
        ],
        "bindings/ocaml/x86_const.ml||bindings/ocaml/x86_const.ml": [
          "File: bindings/ocaml/x86_const.ml -> bindings/ocaml/x86_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "1938: let _X86_GRP_INT = 4;;",
          "1939: let _X86_GRP_IRET = 5;;",
          "1940: let _X86_GRP_PRIVILEGE = 6;;",
          "1942: (* Architecture-specific groups *)",
          "1943: let _X86_GRP_VM = 128;;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1941: let _X86_GRP_BRANCH_RELATIVE = 7;;",
          "",
          "---------------"
        ],
        "bindings/python/capstone/arm64_const.py||bindings/python/capstone/arm64_const.py": [
          "File: bindings/python/capstone/arm64_const.py -> bindings/python/capstone/arm64_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1040: ARM64_GRP_RET = 3",
          "1041: ARM64_GRP_INT = 4",
          "1042: ARM64_GRP_PRIVILEGE = 6",
          "1044: # Architecture-specific groups",
          "1045: ARM64_GRP_CRYPTO = 128",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1043: ARM64_GRP_BRANCH_RELATIVE = 7",
          "",
          "---------------"
        ],
        "bindings/python/capstone/arm_const.py||bindings/python/capstone/arm_const.py": [
          "File: bindings/python/capstone/arm_const.py -> bindings/python/capstone/arm_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "767: ARM_GRP_CALL = 2",
          "768: ARM_GRP_INT = 4",
          "769: ARM_GRP_PRIVILEGE = 6",
          "771: # Architecture-specific groups",
          "772: ARM_GRP_CRYPTO = 128",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "770: ARM_GRP_BRANCH_RELATIVE = 7",
          "",
          "---------------"
        ],
        "bindings/python/capstone/m68k_const.py||bindings/python/capstone/m68k_const.py": [
          "File: bindings/python/capstone/m68k_const.py -> bindings/python/capstone/m68k_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "484: M68K_GRP_JUMP = 1",
          "485: M68K_GRP_RET = 3",
          "486: M68K_GRP_IRET = 5",
          "",
          "[Removed Lines]",
          "487: M68K_GRP_ENDING = 6",
          "",
          "[Added Lines]",
          "487: M68K_GRP_BRANCH_RELATIVE = 7",
          "488: M68K_GRP_ENDING = 8",
          "",
          "---------------"
        ],
        "bindings/python/capstone/mips_const.py||bindings/python/capstone/mips_const.py": [
          "File: bindings/python/capstone/mips_const.py -> bindings/python/capstone/mips_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "846: MIPS_GRP_INT = 4",
          "847: MIPS_GRP_IRET = 5",
          "848: MIPS_GRP_PRIVILEGE = 6",
          "850: # Architecture-specific groups",
          "851: MIPS_GRP_BITCOUNT = 128",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "849: MIPS_GRP_BRANCH_RELATIVE = 7",
          "",
          "---------------"
        ],
        "bindings/python/capstone/x86_const.py||bindings/python/capstone/x86_const.py": [
          "File: bindings/python/capstone/x86_const.py -> bindings/python/capstone/x86_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1938: X86_GRP_INT = 4",
          "1939: X86_GRP_IRET = 5",
          "1940: X86_GRP_PRIVILEGE = 6",
          "1942: # Architecture-specific groups",
          "1943: X86_GRP_VM = 128",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1941: X86_GRP_BRANCH_RELATIVE = 7",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fea5f12c14dfbae57b69b02b6e84423a58fb57ec",
      "candidate_info": {
        "commit_hash": "fea5f12c14dfbae57b69b02b6e84423a58fb57ec",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/fea5f12c14dfbae57b69b02b6e84423a58fb57ec",
        "files": [
          "bindings/python/capstone/__init__.py"
        ],
        "message": "Fixed python bindings.",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "300:     return [copy_ctypes(n) for n in src]",
          "302: # Weird import placement because these modules are needed by the below code but need the above functions",
          "305: class _cs_arch(ctypes.Union):",
          "306:     _fields_ = (",
          "",
          "[Removed Lines]",
          "303: from . import arm, arm64, m68k, mips, ppc, sparc, systemz, x86, xcore",
          "",
          "[Added Lines]",
          "303: from . import arm, arm64, m68k, mips, ppc, sparc, systemz, x86, xcore, tms320c64x",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "088340d2c3ab9a583c7528057db97248aee1eb43",
      "candidate_info": {
        "commit_hash": "088340d2c3ab9a583c7528057db97248aee1eb43",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/088340d2c3ab9a583c7528057db97248aee1eb43",
        "files": [
          "pkgconfig.mk"
        ],
        "message": "bump PKG_TAG to rc3",
        "before_after_code_files": [
          "pkgconfig.mk||pkgconfig.mk"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pkgconfig.mk||pkgconfig.mk": [
          "File: pkgconfig.mk -> pkgconfig.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: PKG_EXTRA = 5",
          "11: # version tag. Examples: rc1, b2, post1",
          "",
          "[Removed Lines]",
          "12: PKG_TAG = rc2",
          "",
          "[Added Lines]",
          "12: PKG_TAG = rc3",
          "",
          "---------------"
        ]
      }
    }
  ]
}