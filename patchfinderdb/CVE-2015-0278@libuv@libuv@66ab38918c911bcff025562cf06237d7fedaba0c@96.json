{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fcac38abe43ac49f16989669edd35a1302b52a65",
      "candidate_info": {
        "commit_hash": "fcac38abe43ac49f16989669edd35a1302b52a65",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/fcac38abe43ac49f16989669edd35a1302b52a65",
        "files": [
          "ChangeLog",
          "src/version.c"
        ],
        "message": "Now working on v0.11.2",
        "before_after_code_files": [
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #define UV_VERSION_MAJOR 0",
          "31: #define UV_VERSION_MINOR 11",
          "36: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "",
          "[Removed Lines]",
          "32: #define UV_VERSION_PATCH 1",
          "33: #define UV_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "32: #define UV_VERSION_PATCH 2",
          "33: #define UV_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "269ff0beaeb8560dc6156ef34aa5dcf9b574540d",
      "candidate_info": {
        "commit_hash": "269ff0beaeb8560dc6156ef34aa5dcf9b574540d",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/269ff0beaeb8560dc6156ef34aa5dcf9b574540d",
        "files": [
          "src/unix/fs.c"
        ],
        "message": "fs: use preadv on Linux if available",
        "before_after_code_files": [
          "src/unix/fs.c||src/unix/fs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/fs.c||src/unix/fs.c": [
          "File: src/unix/fs.c -> src/unix/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     defined(__OpenBSD__)    ||                                            \\",
          "50:     defined(__NetBSD__)",
          "51: # define HAVE_PREADV 1",
          "52: #else",
          "53: # define HAVE_PREADV 0",
          "54: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52: #elif defined(__linux__)",
          "53: # include <linux/version.h>",
          "54: # if defined(__GLIBC_PREREQ)",
          "55: #   if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,30) &&                    \\",
          "56:        __GLIBC_PREREQ(2,10)",
          "57: #    define HAVE_PREADV 1",
          "58: #   else",
          "59: #    define HAVE_PREADV 0",
          "60: #   endif",
          "61: # else",
          "62: #  define HAVE_PREADV 0",
          "63: # endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b83109c5248ea0e7aef2accce01d77e7f9576c8b",
      "candidate_info": {
        "commit_hash": "b83109c5248ea0e7aef2accce01d77e7f9576c8b",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/b83109c5248ea0e7aef2accce01d77e7f9576c8b",
        "files": [
          "include/uv.h"
        ],
        "message": "include: fix typo in comment in uv.h",
        "before_after_code_files": [
          "include/uv.h||include/uv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h"
        ]
      }
    },
    {
      "candidate_hash": "1fbecefa70479eb9a621e575f3c16621b500136f",
      "candidate_info": {
        "commit_hash": "1fbecefa70479eb9a621e575f3c16621b500136f",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/1fbecefa70479eb9a621e575f3c16621b500136f",
        "files": [
          "Makefile.mingw"
        ],
        "message": "build: remove unneeded EXTRA_CFLAGS from Makefile.mingw",
        "before_after_code_files": [
          "Makefile.mingw||Makefile.mingw"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.mingw||Makefile.mingw": [
          "File: Makefile.mingw -> Makefile.mingw",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:  $(AR) crs $@ $^",
          "81: $(OBJS): %.o : %.c $(INCLUDES)",
          "",
          "[Removed Lines]",
          "82:  $(CC) $(CFLAGS) $(EXTRA_CFLAGS) -c -o $@ $<",
          "",
          "[Added Lines]",
          "82:  $(CC) $(CFLAGS) -c -o $@ $<",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d7fe6a9bcf8a37f081fe008af9422e9976167d0",
      "candidate_info": {
        "commit_hash": "7d7fe6a9bcf8a37f081fe008af9422e9976167d0",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/7d7fe6a9bcf8a37f081fe008af9422e9976167d0",
        "files": [
          "src/unix/stream.c"
        ],
        "message": "unix: clean up uv_accept()",
        "before_after_code_files": [
          "src/unix/stream.c||src/unix/stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/stream.c||src/unix/stream.c": [
          "File: src/unix/stream.c -> src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "538: int uv_accept(uv_stream_t* server, uv_stream_t* client) {",
          "541:   int saved_errno;",
          "542:   int status;",
          "",
          "[Removed Lines]",
          "539:   uv_stream_t* streamServer;",
          "540:   uv_stream_t* streamClient;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "547:   saved_errno = errno;",
          "548:   status = -1;",
          "554:     uv__set_sys_error(server->loop, EAGAIN);",
          "555:     goto out;",
          "556:   }",
          "559:     case UV_NAMED_PIPE:",
          "560:     case UV_TCP:",
          "566:         goto out;",
          "567:       }",
          "568:       break;",
          "570:     case UV_UDP:",
          "574:         goto out;",
          "575:       }",
          "576:       break;",
          "",
          "[Removed Lines]",
          "550:   streamServer = (uv_stream_t*)server;",
          "551:   streamClient = (uv_stream_t*)client;",
          "553:   if (streamServer->accepted_fd < 0) {",
          "558:   switch (streamClient->type) {",
          "561:       if (uv__stream_open(streamClient, streamServer->accepted_fd,",
          "562:             UV_STREAM_READABLE | UV_STREAM_WRITABLE)) {",
          "564:         close(streamServer->accepted_fd);",
          "565:         streamServer->accepted_fd = -1;",
          "571:       if (uv_udp_open((uv_udp_t*) client, streamServer->accepted_fd)) {",
          "572:         close(streamServer->accepted_fd);",
          "573:         streamServer->accepted_fd = -1;",
          "",
          "[Added Lines]",
          "548:   if (server->accepted_fd < 0) {",
          "553:   switch (client->type) {",
          "556:       if (uv__stream_open(client,",
          "557:                           server->accepted_fd,",
          "558:                           UV_STREAM_READABLE | UV_STREAM_WRITABLE)) {",
          "560:         close(server->accepted_fd);",
          "561:         server->accepted_fd = -1;",
          "567:       if (uv_udp_open((uv_udp_t*) client, server->accepted_fd)) {",
          "568:         close(server->accepted_fd);",
          "569:         server->accepted_fd = -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "579:       assert(0);",
          "580:   }",
          "584:   status = 0;",
          "586: out:",
          "",
          "[Removed Lines]",
          "582:   uv__io_start(streamServer->loop, &streamServer->io_watcher, UV__POLLIN);",
          "583:   streamServer->accepted_fd = -1;",
          "",
          "[Added Lines]",
          "578:   uv__io_start(server->loop, &server->io_watcher, UV__POLLIN);",
          "579:   server->accepted_fd = -1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}