{
  "cve_id": "CVE-2022-25044",
  "cve_desc": "Espruino 2v11.251 was discovered to contain a stack buffer overflow via src/jsvar.c in jsvNewFromString.",
  "repo": "espruino/Espruino",
  "patch_hash": "e069be2ecc5060ef47391716e4de94999595b260",
  "patch_info": {
    "commit_hash": "e069be2ecc5060ef47391716e4de94999595b260",
    "repo": "espruino/Espruino",
    "commit_url": "https://github.com/espruino/Espruino/commit/e069be2ecc5060ef47391716e4de94999595b260",
    "files": [
      "ChangeLog",
      "src/jsparse.c",
      "src/jsparse.h",
      "src/jsvar.c"
    ],
    "message": "Fix potential corruption issue caused by `delete [].__proto__` (fix #2142)",
    "before_after_code_files": [
      "src/jsparse.c||src/jsparse.c",
      "src/jsparse.h||src/jsparse.h",
      "src/jsvar.c||src/jsvar.c"
    ]
  },
  "patch_diff": {
    "src/jsparse.c||src/jsparse.c": [
      "File: src/jsparse.c -> src/jsparse.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "952:     } else if (strcmp(name, JSPARSE_INHERITS_VAR)==0) {",
      "953:       const char *objName = jswGetBasicObjectName(object);",
      "954:       if (objName) {",
      "956:       }",
      "957:     }",
      "958:   }",
      "",
      "[Removed Lines]",
      "955:         child = jspNewPrototype(objName);",
      "",
      "[Added Lines]",
      "955:         JsVar *p = jsvSkipNameAndUnLock(jspNewPrototype(objName));",
      "958:         JsVar *i = jsvNewFromString(JSPARSE_INHERITS_VAR);",
      "959:         if (p) child = jsvCreateNewChild(object, i, p);",
      "960:         jsvUnLock(i);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1372:       if (!parent && jsvIsChild(execInfo.root, a))",
      "1373:         parent = jsvLockAgain(execInfo.root);",
      "1377:         if (jsvIsArray(parent)) {",
      "1379:           JsVarInt l = jsvGetArrayLength(parent);",
      "",
      "[Removed Lines]",
      "1375:       if (jsvHasChildren(parent)) {",
      "",
      "[Added Lines]",
      "1380: #ifdef DEBUG",
      "1381:       if (jsvHasChildren(parent)) assert(jsvIsChild(parent, a));",
      "1382: #endif",
      "1383:       if (jsvHasChildren(parent) && jsvIsChild(parent, a)) {",
      "",
      "---------------"
    ],
    "src/jsparse.h||src/jsparse.h": [
      "File: src/jsparse.h -> src/jsparse.h"
    ],
    "src/jsvar.c||src/jsvar.c": [
      "File: src/jsvar.c -> src/jsvar.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2555:     }",
      "2557:     if (insertAfter) {",
      "2558:       if (jsvGetNextSibling(insertAfter)) {",
      "2560:         JsVar *insertBefore = jsvLock(jsvGetNextSibling(insertAfter));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2558:       assert(jsvIsName(insertAfter));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2761: void jsvRemoveChild(JsVar *parent, JsVar *child) {",
      "2762:   assert(jsvHasChildren(parent));",
      "2763:   assert(jsvIsName(child));",
      "2764:   JsVarRef childref = jsvGetRef(child);",
      "2765:   bool wasChild = false;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2765: #ifdef DEBUG",
      "2766:   assert(jsvIsChild(parent, child));",
      "2767: #endif",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "156d5999d0978c3adb9d650c7671d5a8b754f34e",
      "candidate_info": {
        "commit_hash": "156d5999d0978c3adb9d650c7671d5a8b754f34e",
        "repo": "espruino/Espruino",
        "commit_url": "https://github.com/espruino/Espruino/commit/156d5999d0978c3adb9d650c7671d5a8b754f34e",
        "files": [
          "src/jsparse.c",
          "src/jsvar.c"
        ],
        "message": "minor tweaks after e069be2ecc5060ef47391716e4de94999595b260",
        "before_after_code_files": [
          "src/jsparse.c||src/jsparse.c",
          "src/jsvar.c||src/jsvar.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/jsparse.c||src/jsparse.c",
            "src/jsvar.c||src/jsvar.c"
          ],
          "candidate": [
            "src/jsparse.c||src/jsparse.c",
            "src/jsvar.c||src/jsvar.c"
          ]
        }
      },
      "candidate_diff": {
        "src/jsparse.c||src/jsparse.c": [
          "File: src/jsparse.c -> src/jsparse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "958:         JsVar *i = jsvNewFromString(JSPARSE_INHERITS_VAR);",
          "959:         if (p) child = jsvCreateNewChild(object, i, p);",
          "961:       }",
          "962:     }",
          "963:   }",
          "",
          "[Removed Lines]",
          "960:         jsvUnLock(i);",
          "",
          "[Added Lines]",
          "960:         jsvUnLock2(p, i);",
          "",
          "---------------"
        ],
        "src/jsvar.c||src/jsvar.c": [
          "File: src/jsvar.c -> src/jsvar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2763:   assert(jsvHasChildren(parent));",
          "2764:   assert(jsvIsName(child));",
          "2765: #ifdef DEBUG",
          "2767: #endif",
          "2768:   JsVarRef childref = jsvGetRef(child);",
          "2769:   bool wasChild = false;",
          "",
          "[Removed Lines]",
          "2766:   assert(jsvIsChild(parent, child));",
          "",
          "[Added Lines]",
          "2766:   assert(!(jsvGetPrevSibling(child) || jsvGetNextSibling(child)) || jsvIsChild(parent, child));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2821: bool jsvIsChild(JsVar *parent, JsVar *child) {",
          "2823:   assert(jsvIsName(child));",
          "2824:   JsVarRef childref = jsvGetRef(child);",
          "2825:   JsVarRef indexref;",
          "",
          "[Removed Lines]",
          "2822:   assert(jsvIsArray(parent) || jsvIsObject(parent));",
          "",
          "[Added Lines]",
          "2822:   assert(jsvIsArray(parent) || jsvIsObject(parent) || jsvIsFunction(parent));",
          "",
          "---------------"
        ]
      }
    }
  ]
}