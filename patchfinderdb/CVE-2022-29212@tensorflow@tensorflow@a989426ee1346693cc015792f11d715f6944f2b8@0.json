{
  "cve_id": "CVE-2022-29212",
  "cve_desc": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, certain TFLite models that were created using TFLite model converter would crash when loaded in the TFLite interpreter. The culprit is that during quantization the scale of values could be greater than 1 but code was always assuming sub-unit scaling. Thus, since code was calling `QuantizeMultiplierSmallerThanOneExp`, the `TFLITE_CHECK_LT` assertion would trigger and abort the process. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "a989426ee1346693cc015792f11d715f6944f2b8",
  "patch_info": {
    "commit_hash": "a989426ee1346693cc015792f11d715f6944f2b8",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/a989426ee1346693cc015792f11d715f6944f2b8",
    "files": [
      "tensorflow/lite/kernels/comparisons.cc",
      "tensorflow/lite/kernels/comparisons_test.cc"
    ],
    "message": "Improve to cover scale value greater than one\n\nPiperOrigin-RevId: 433050921",
    "before_after_code_files": [
      "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc",
      "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc": [
      "File: tensorflow/lite/kernels/comparisons.cc -> tensorflow/lite/kernels/comparisons.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "81:   return ComparisonPrepareCommon(context, node, true);",
      "82: }",
      "84: template <typename input_dtype, reference_ops::ComparisonFn<int32> opname>",
      "85: void ComparisonQuantized(const TfLiteTensor* input1, const TfLiteTensor* input2,",
      "86:                          TfLiteTensor* output, bool requires_broadcast) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "84: void QuantizeMultiplier(double double_multiplier, int32_t* quantized_multiplier,",
      "85:                         int* left_shift) {",
      "86:   if (double_multiplier < 1.0) {",
      "87:     QuantizeMultiplierSmallerThanOneExp(double_multiplier, quantized_multiplier,",
      "88:                                         left_shift);",
      "89:   } else {",
      "90:     QuantizeMultiplierGreaterThanOne(double_multiplier, quantized_multiplier,",
      "91:                                      left_shift);",
      "92:   }",
      "93: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "90:     const int left_shift = 8;",
      "92:     int32 input1_multiplier;",
      "96:     int32 input2_multiplier;",
      "97:     int input2_shift;",
      "101:     ComparisonParams op_params;",
      "102:     op_params.left_shift = left_shift;",
      "",
      "[Removed Lines]",
      "93:     int input1_shift;",
      "94:     QuantizeMultiplierSmallerThanOneExp(input1->params.scale,",
      "95:                                         &input1_multiplier, &input1_shift);",
      "98:     QuantizeMultiplierSmallerThanOneExp(input2->params.scale,",
      "99:                                         &input2_multiplier, &input2_shift);",
      "",
      "[Added Lines]",
      "105:     int input1_shift;",
      "107:     QuantizeMultiplier(input1->params.scale, &input1_multiplier, &input1_shift);",
      "108:     QuantizeMultiplier(input2->params.scale, &input2_multiplier, &input2_shift);",
      "",
      "---------------"
    ],
    "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc": [
      "File: tensorflow/lite/kernels/comparisons_test.cc -> tensorflow/lite/kernels/comparisons_test.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "653:   }",
      "654: }",
      "656: TEST(ComparisonsTest, QuantizedUInt8GreaterEqualWithBroadcast) {",
      "657:   const float kMin = -1.f;",
      "658:   const float kMax = 128.f;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "656: TEST(ComparisonsTest,",
      "657:      QuantizedInt8GreaterWithBroadcastMultiplierGreaterThanOne) {",
      "658:   const float kMin = -127.f;",
      "659:   const float kMax = 127.f;",
      "660:   std::vector<std::vector<int>> test_shapes = {",
      "661:       {6}, {2, 3}, {2, 1, 3}, {1, 3, 1, 2}};",
      "662:   for (int i = 0; i < test_shapes.size(); ++i) {",
      "663:     ComparisonOpModel model({TensorType_INT8, test_shapes[i], kMin, kMax},",
      "664:                             {TensorType_INT8, {}, kMin, kMax}, TensorType_INT8,",
      "665:                             BuiltinOperator_GREATER);",
      "666:     model.QuantizeAndPopulate<int8_t>(model.input1(),",
      "667:                                       {572, -2, -71, 8, 11, 20});",
      "668:     model.QuantizeAndPopulate<int8_t>(model.input2(), {8});",
      "669:     model.Invoke();",
      "670:     EXPECT_THAT(model.GetOutput(),",
      "671:                 ElementsAre(true, false, false, false, true, true))",
      "672:         << \"With shape number \" << i;",
      "673:   }",
      "674: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ea5c7d222a862354b9d603e555379f37a4ed2c93",
      "candidate_info": {
        "commit_hash": "ea5c7d222a862354b9d603e555379f37a4ed2c93",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ea5c7d222a862354b9d603e555379f37a4ed2c93",
        "files": [
          "tensorflow/lite/kernels/comparisons.cc",
          "tensorflow/lite/kernels/comparisons_test.cc"
        ],
        "message": "Improve to cover scale value greater than one\n\nPiperOrigin-RevId: 433050921",
        "before_after_code_files": [
          "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc",
          "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc",
            "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc",
            "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc": [
          "File: tensorflow/lite/kernels/comparisons.cc -> tensorflow/lite/kernels/comparisons.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:   return ComparisonPrepareCommon(context, node, true);",
          "82: }",
          "84: template <typename input_dtype, reference_ops::ComparisonFn<int32> opname>",
          "85: void ComparisonQuantized(const TfLiteTensor* input1, const TfLiteTensor* input2,",
          "86:                          TfLiteTensor* output, bool requires_broadcast) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: void QuantizeMultiplier(double double_multiplier, int32_t* quantized_multiplier,",
          "85:                         int* left_shift) {",
          "86:   if (double_multiplier < 1.0) {",
          "87:     QuantizeMultiplierSmallerThanOneExp(double_multiplier, quantized_multiplier,",
          "88:                                         left_shift);",
          "89:   } else {",
          "90:     QuantizeMultiplierGreaterThanOne(double_multiplier, quantized_multiplier,",
          "91:                                      left_shift);",
          "92:   }",
          "93: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:     const int left_shift = 8;",
          "92:     int32 input1_multiplier;",
          "96:     int32 input2_multiplier;",
          "97:     int input2_shift;",
          "101:     ComparisonParams op_params;",
          "102:     op_params.left_shift = left_shift;",
          "",
          "[Removed Lines]",
          "93:     int input1_shift;",
          "94:     QuantizeMultiplierSmallerThanOneExp(input1->params.scale,",
          "95:                                         &input1_multiplier, &input1_shift);",
          "98:     QuantizeMultiplierSmallerThanOneExp(input2->params.scale,",
          "99:                                         &input2_multiplier, &input2_shift);",
          "",
          "[Added Lines]",
          "105:     int input1_shift;",
          "107:     QuantizeMultiplier(input1->params.scale, &input1_multiplier, &input1_shift);",
          "108:     QuantizeMultiplier(input2->params.scale, &input2_multiplier, &input2_shift);",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc": [
          "File: tensorflow/lite/kernels/comparisons_test.cc -> tensorflow/lite/kernels/comparisons_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "653:   }",
          "654: }",
          "656: TEST(ComparisonsTest, QuantizedUInt8GreaterEqualWithBroadcast) {",
          "657:   const float kMin = -1.f;",
          "658:   const float kMax = 128.f;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "656: TEST(ComparisonsTest,",
          "657:      QuantizedInt8GreaterWithBroadcastMultiplierGreaterThanOne) {",
          "658:   const float kMin = -127.f;",
          "659:   const float kMax = 127.f;",
          "660:   std::vector<std::vector<int>> test_shapes = {",
          "661:       {6}, {2, 3}, {2, 1, 3}, {1, 3, 1, 2}};",
          "662:   for (int i = 0; i < test_shapes.size(); ++i) {",
          "663:     ComparisonOpModel model({TensorType_INT8, test_shapes[i], kMin, kMax},",
          "664:                             {TensorType_INT8, {}, kMin, kMax}, TensorType_INT8,",
          "665:                             BuiltinOperator_GREATER);",
          "666:     model.QuantizeAndPopulate<int8_t>(model.input1(),",
          "667:                                       {572, -2, -71, 8, 11, 20});",
          "668:     model.QuantizeAndPopulate<int8_t>(model.input2(), {8});",
          "669:     model.Invoke();",
          "670:     EXPECT_THAT(model.GetOutput(),",
          "671:                 ElementsAre(true, false, false, false, true, true))",
          "672:         << \"With shape number \" << i;",
          "673:   }",
          "674: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f9852e32917d80b8ac75f96805a71faf4fa2d75",
      "candidate_info": {
        "commit_hash": "9f9852e32917d80b8ac75f96805a71faf4fa2d75",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/9f9852e32917d80b8ac75f96805a71faf4fa2d75",
        "files": [
          "tensorflow/lite/kernels/comparisons.cc",
          "tensorflow/lite/kernels/comparisons_test.cc"
        ],
        "message": "Improve to cover scale value greater than one\n\nPiperOrigin-RevId: 433050921",
        "before_after_code_files": [
          "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc",
          "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc",
            "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc",
            "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc": [
          "File: tensorflow/lite/kernels/comparisons.cc -> tensorflow/lite/kernels/comparisons.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:   return ComparisonPrepareCommon(context, node, true);",
          "82: }",
          "84: template <typename input_dtype, reference_ops::ComparisonFn<int32> opname>",
          "85: void ComparisonQuantized(const TfLiteTensor* input1, const TfLiteTensor* input2,",
          "86:                          TfLiteTensor* output, bool requires_broadcast) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: void QuantizeMultiplier(double double_multiplier, int32_t* quantized_multiplier,",
          "85:                         int* left_shift) {",
          "86:   if (double_multiplier < 1.0) {",
          "87:     QuantizeMultiplierSmallerThanOneExp(double_multiplier, quantized_multiplier,",
          "88:                                         left_shift);",
          "89:   } else {",
          "90:     QuantizeMultiplierGreaterThanOne(double_multiplier, quantized_multiplier,",
          "91:                                      left_shift);",
          "92:   }",
          "93: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:     const int left_shift = 8;",
          "92:     int32 input1_multiplier;",
          "96:     int32 input2_multiplier;",
          "97:     int input2_shift;",
          "101:     ComparisonParams op_params;",
          "102:     op_params.left_shift = left_shift;",
          "",
          "[Removed Lines]",
          "93:     int input1_shift;",
          "94:     QuantizeMultiplierSmallerThanOneExp(input1->params.scale,",
          "95:                                         &input1_multiplier, &input1_shift);",
          "98:     QuantizeMultiplierSmallerThanOneExp(input2->params.scale,",
          "99:                                         &input2_multiplier, &input2_shift);",
          "",
          "[Added Lines]",
          "105:     int input1_shift;",
          "107:     QuantizeMultiplier(input1->params.scale, &input1_multiplier, &input1_shift);",
          "108:     QuantizeMultiplier(input2->params.scale, &input2_multiplier, &input2_shift);",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc": [
          "File: tensorflow/lite/kernels/comparisons_test.cc -> tensorflow/lite/kernels/comparisons_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "653:   }",
          "654: }",
          "656: TEST(ComparisonsTest, QuantizedUInt8GreaterEqualWithBroadcast) {",
          "657:   const float kMin = -1.f;",
          "658:   const float kMax = 128.f;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "656: TEST(ComparisonsTest,",
          "657:      QuantizedInt8GreaterWithBroadcastMultiplierGreaterThanOne) {",
          "658:   const float kMin = -127.f;",
          "659:   const float kMax = 127.f;",
          "660:   std::vector<std::vector<int>> test_shapes = {",
          "661:       {6}, {2, 3}, {2, 1, 3}, {1, 3, 1, 2}};",
          "662:   for (int i = 0; i < test_shapes.size(); ++i) {",
          "663:     ComparisonOpModel model({TensorType_INT8, test_shapes[i], kMin, kMax},",
          "664:                             {TensorType_INT8, {}, kMin, kMax}, TensorType_INT8,",
          "665:                             BuiltinOperator_GREATER);",
          "666:     model.QuantizeAndPopulate<int8_t>(model.input1(),",
          "667:                                       {572, -2, -71, 8, 11, 20});",
          "668:     model.QuantizeAndPopulate<int8_t>(model.input2(), {8});",
          "669:     model.Invoke();",
          "670:     EXPECT_THAT(model.GetOutput(),",
          "671:                 ElementsAre(true, false, false, false, true, true))",
          "672:         << \"With shape number \" << i;",
          "673:   }",
          "674: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd66d4fa0b95084c36c367a7ff1f4ba75982f0b6",
      "candidate_info": {
        "commit_hash": "bd66d4fa0b95084c36c367a7ff1f4ba75982f0b6",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/bd66d4fa0b95084c36c367a7ff1f4ba75982f0b6",
        "files": [
          "tensorflow/lite/kernels/comparisons.cc",
          "tensorflow/lite/kernels/comparisons_test.cc"
        ],
        "message": "Improve to cover scale value greater than one\n\nPiperOrigin-RevId: 433050921",
        "before_after_code_files": [
          "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc",
          "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc",
            "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc",
            "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/comparisons.cc||tensorflow/lite/kernels/comparisons.cc": [
          "File: tensorflow/lite/kernels/comparisons.cc -> tensorflow/lite/kernels/comparisons.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:   return ComparisonPrepareCommon(context, node, true);",
          "82: }",
          "84: template <typename input_dtype, reference_ops::ComparisonFn<int32> opname>",
          "85: void ComparisonQuantized(const TfLiteTensor* input1, const TfLiteTensor* input2,",
          "86:                          TfLiteTensor* output, bool requires_broadcast) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: void QuantizeMultiplier(double double_multiplier, int32_t* quantized_multiplier,",
          "85:                         int* left_shift) {",
          "86:   if (double_multiplier < 1.0) {",
          "87:     QuantizeMultiplierSmallerThanOneExp(double_multiplier, quantized_multiplier,",
          "88:                                         left_shift);",
          "89:   } else {",
          "90:     QuantizeMultiplierGreaterThanOne(double_multiplier, quantized_multiplier,",
          "91:                                      left_shift);",
          "92:   }",
          "93: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:     const int left_shift = 8;",
          "92:     int32 input1_multiplier;",
          "96:     int32 input2_multiplier;",
          "97:     int input2_shift;",
          "101:     ComparisonParams op_params;",
          "102:     op_params.left_shift = left_shift;",
          "",
          "[Removed Lines]",
          "93:     int input1_shift;",
          "94:     QuantizeMultiplierSmallerThanOneExp(input1->params.scale,",
          "95:                                         &input1_multiplier, &input1_shift);",
          "98:     QuantizeMultiplierSmallerThanOneExp(input2->params.scale,",
          "99:                                         &input2_multiplier, &input2_shift);",
          "",
          "[Added Lines]",
          "105:     int input1_shift;",
          "107:     QuantizeMultiplier(input1->params.scale, &input1_multiplier, &input1_shift);",
          "108:     QuantizeMultiplier(input2->params.scale, &input2_multiplier, &input2_shift);",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/comparisons_test.cc||tensorflow/lite/kernels/comparisons_test.cc": [
          "File: tensorflow/lite/kernels/comparisons_test.cc -> tensorflow/lite/kernels/comparisons_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "653:   }",
          "654: }",
          "656: TEST(ComparisonsTest, QuantizedUInt8GreaterEqualWithBroadcast) {",
          "657:   const float kMin = -1.f;",
          "658:   const float kMax = 128.f;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "656: TEST(ComparisonsTest,",
          "657:      QuantizedInt8GreaterWithBroadcastMultiplierGreaterThanOne) {",
          "658:   const float kMin = -127.f;",
          "659:   const float kMax = 127.f;",
          "660:   std::vector<std::vector<int>> test_shapes = {",
          "661:       {6}, {2, 3}, {2, 1, 3}, {1, 3, 1, 2}};",
          "662:   for (int i = 0; i < test_shapes.size(); ++i) {",
          "663:     ComparisonOpModel model({TensorType_INT8, test_shapes[i], kMin, kMax},",
          "664:                             {TensorType_INT8, {}, kMin, kMax}, TensorType_INT8,",
          "665:                             BuiltinOperator_GREATER);",
          "666:     model.QuantizeAndPopulate<int8_t>(model.input1(),",
          "667:                                       {572, -2, -71, 8, 11, 20});",
          "668:     model.QuantizeAndPopulate<int8_t>(model.input2(), {8});",
          "669:     model.Invoke();",
          "670:     EXPECT_THAT(model.GetOutput(),",
          "671:                 ElementsAre(true, false, false, false, true, true))",
          "672:         << \"With shape number \" << i;",
          "673:   }",
          "674: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}