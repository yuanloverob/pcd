{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "743bf536e0c14b4934c7d92cd5c749eef1baf258",
      "candidate_info": {
        "commit_hash": "743bf536e0c14b4934c7d92cd5c749eef1baf258",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/743bf536e0c14b4934c7d92cd5c749eef1baf258",
        "files": [
          "myinttypes.h"
        ],
        "message": "Supported a WDK project",
        "before_after_code_files": [
          "myinttypes.h||myinttypes.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "myinttypes.h||myinttypes.h": [
          "File: myinttypes.h -> myinttypes.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #ifndef CS_MYINTTYPES_H",
          "5: #define CS_MYINTTYPES_H",
          "11: typedef signed char  int8_t;",
          "12: typedef signed short int16_t;",
          "13: typedef signed int   int32_t;",
          "",
          "[Removed Lines]",
          "7: #if defined(CAPSTONE_HAS_OSXKERNEL) || (defined(_MSC_VER) && _MSC_VER <= 1700)",
          "10: #if defined(_MSC_VER) && _MSC_VER <= 1700",
          "",
          "[Added Lines]",
          "7: #if defined(CAPSTONE_HAS_OSXKERNEL) || (defined(_MSC_VER) && (_MSC_VER <= 1700 || defined(_KERNEL_MODE)))",
          "10: #if defined(_MSC_VER) && (_MSC_VER <= 1700 || defined(_KERNEL_MODE))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d19cedc51433370bd239e40fb1d227f399f6fc3d",
      "candidate_info": {
        "commit_hash": "d19cedc51433370bd239e40fb1d227f399f6fc3d",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d19cedc51433370bd239e40fb1d227f399f6fc3d",
        "files": [
          "bindings/python/capstone/sparc.py",
          "cstool/cstool_sparc.c",
          "include/capstone/sparc.h",
          "tests/test_sparc.c"
        ],
        "message": "sparc: change imm type from int32_t to int64_t",
        "before_after_code_files": [
          "bindings/python/capstone/sparc.py||bindings/python/capstone/sparc.py",
          "cstool/cstool_sparc.c||cstool/cstool_sparc.c",
          "include/capstone/sparc.h||include/capstone/sparc.h",
          "tests/test_sparc.c||tests/test_sparc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/sparc.py||bindings/python/capstone/sparc.py": [
          "File: bindings/python/capstone/sparc.py -> bindings/python/capstone/sparc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: class SparcOpValue(ctypes.Union):",
          "16:     _fields_ = (",
          "17:         ('reg', ctypes.c_uint),",
          "19:         ('mem', SparcOpMem),",
          "20:     )",
          "",
          "[Removed Lines]",
          "18:         ('imm', ctypes.c_int32),",
          "",
          "[Added Lines]",
          "18:         ('imm', ctypes.c_int64),",
          "",
          "---------------"
        ],
        "cstool/cstool_sparc.c||cstool/cstool_sparc.c": [
          "File: cstool/cstool_sparc.c -> cstool/cstool_sparc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:     printf(\"\\t\\toperands[%u].type: REG = %s\\n\", i, cs_reg_name(handle, op->reg));",
          "30:     break;",
          "31:    case SPARC_OP_IMM:",
          "33:     break;",
          "34:    case SPARC_OP_MEM:",
          "35:     printf(\"\\t\\toperands[%u].type: MEM\\n\", i);",
          "",
          "[Removed Lines]",
          "32:     printf(\"\\t\\toperands[%u].type: IMM = 0x%x\\n\", i, op->imm);",
          "",
          "[Added Lines]",
          "32:     printf(\"\\t\\toperands[%u].type: IMM = 0x%\" PRIx64 \"\\n\", i, op->imm);",
          "",
          "---------------"
        ],
        "include/capstone/sparc.h||include/capstone/sparc.h": [
          "File: include/capstone/sparc.h -> include/capstone/sparc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "190:  sparc_op_type type; // operand type",
          "191:  union {",
          "192:   sparc_reg reg; // register value for REG operand",
          "194:   sparc_op_mem mem;  // base/disp value for MEM operand",
          "195:  };",
          "196: } cs_sparc_op;",
          "",
          "[Removed Lines]",
          "193:   int32_t imm;  // immediate value for IMM operand",
          "",
          "[Added Lines]",
          "193:   int64_t imm;  // immediate value for IMM operand",
          "",
          "---------------"
        ],
        "tests/test_sparc.c||tests/test_sparc.c": [
          "File: tests/test_sparc.c -> tests/test_sparc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:     printf(\"\\t\\toperands[%u].type: REG = %s\\n\", i, cs_reg_name(handle, op->reg));",
          "51:     break;",
          "52:    case SPARC_OP_IMM:",
          "54:     break;",
          "55:    case SPARC_OP_MEM:",
          "56:     printf(\"\\t\\toperands[%u].type: MEM\\n\", i);",
          "",
          "[Removed Lines]",
          "53:     printf(\"\\t\\toperands[%u].type: IMM = 0x%x\\n\", i, op->imm);",
          "",
          "[Added Lines]",
          "53:     printf(\"\\t\\toperands[%u].type: IMM = 0x%\" PRIx64 \"\\n\", i, op->imm);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3cebee33019c8bfabfcdb8018b79a8228ede4c38",
      "candidate_info": {
        "commit_hash": "3cebee33019c8bfabfcdb8018b79a8228ede4c38",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/3cebee33019c8bfabfcdb8018b79a8228ede4c38",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "x86: lock nop is a valid instruction. #915",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2133:     return true;",
          "2136:    case X86_DEC16m:",
          "2137:    case X86_DEC32m:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2136:    case X86_NOOPL:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2b84c0cf2c992e7010d7f67535cc791bd1d2e427",
      "candidate_info": {
        "commit_hash": "2b84c0cf2c992e7010d7f67535cc791bd1d2e427",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/2b84c0cf2c992e7010d7f67535cc791bd1d2e427",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "x86: handle f2/f3 prefix for 16bit. see issue #452",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1246:    attrMask |= ATTR_OPSIZE;",
          "1247:   } else if (isPrefixAtLocation(insn, 0x67, insn->necessaryPrefixLocation)) {",
          "1248:    attrMask |= ATTR_ADSIZE;",
          "1250:    attrMask |= ATTR_XS;",
          "1252:    attrMask |= ATTR_XD;",
          "1253:   }",
          "1254:  }",
          "",
          "[Removed Lines]",
          "1249:   } else if (isPrefixAtLocation(insn, 0xf3, insn->necessaryPrefixLocation)) {",
          "1251:   } else if (isPrefixAtLocation(insn, 0xf2, insn->necessaryPrefixLocation)) {",
          "",
          "[Added Lines]",
          "1249:   } else if (insn->mode != MODE_16BIT && isPrefixAtLocation(insn, 0xf3, insn->necessaryPrefixLocation)) {",
          "1251:   } else if (insn->mode != MODE_16BIT && isPrefixAtLocation(insn, 0xf2, insn->necessaryPrefixLocation)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "59cbe183897344270341ae4ec8fed1125b5a9f38",
      "candidate_info": {
        "commit_hash": "59cbe183897344270341ae4ec8fed1125b5a9f38",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/59cbe183897344270341ae4ec8fed1125b5a9f38",
        "files": [
          "include/platform.h"
        ],
        "message": "add *_MIN *_MAX defines for system has no stdint.h",
        "before_after_code_files": [
          "include/platform.h||include/platform.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/platform.h||include/platform.h": [
          "File: include/platform.h -> include/platform.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: typedef unsigned int   uint32_t;",
          "42: typedef signed long long   int64_t;",
          "43: typedef unsigned long long uint64_t;",
          "44: #endif",
          "46: #define __PRI_8_LENGTH_MODIFIER__ \"hh\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: #define INT8_MIN         (-127i8 - 1)",
          "47: #define INT16_MIN        (-32767i16 - 1)",
          "48: #define INT32_MIN        (-2147483647i32 - 1)",
          "49: #define INT64_MIN        (-9223372036854775807i64 - 1)",
          "50: #define INT8_MAX         127i8",
          "51: #define INT16_MAX        32767i16",
          "52: #define INT32_MAX        2147483647i32",
          "53: #define INT64_MAX        9223372036854775807i64",
          "54: #define UINT8_MAX        0xffui8",
          "55: #define UINT16_MAX       0xffffui16",
          "56: #define UINT32_MAX       0xffffffffui32",
          "57: #define UINT64_MAX       0xffffffffffffffffui64",
          "",
          "---------------"
        ]
      }
    }
  ]
}