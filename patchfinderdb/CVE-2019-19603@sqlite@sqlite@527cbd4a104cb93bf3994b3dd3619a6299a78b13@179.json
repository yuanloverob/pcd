{
  "cve_id": "CVE-2019-19603",
  "cve_desc": "SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.",
  "repo": "sqlite/sqlite",
  "patch_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
  "patch_info": {
    "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab.test"
    ],
    "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab.test||test/altertab.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:       }",
      "857:     }",
      "858:   }else{",
      "861:     ){",
      "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
      "863:                       zName);",
      "864:       return SQLITE_ERROR;",
      "865:     }",
      "866:   }",
      "867:   return SQLITE_OK;",
      "868: }",
      "",
      "[Removed Lines]",
      "859:     if( pParse->nested==0",
      "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
      "",
      "[Added Lines]",
      "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
      "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
      "",
      "[Added Lines]",
      "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
      "2148:   return pMod->pModule->xShadowName(zTail+1);",
      "2149: }",
      "",
      "[Removed Lines]",
      "2150: #else",
      "2151: # define isShadowTableName(x,y) 0",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2190:   p = pParse->pNewTable;",
      "2191:   if( p==0 ) return;",
      "2194:     p->tabFlags |= TF_Shadow;",
      "2195:   }",
      "",
      "[Removed Lines]",
      "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
      "",
      "[Added Lines]",
      "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
      "4549: #endif",
      "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
      "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
      "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
      "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
      "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
      "4553: #else",
      "4554: # define sqlite3ShadowTableName(A,B) 0",
      "4555: #endif",
      "",
      "---------------"
    ],
    "test/altertab.test||test/altertab.test": [
      "File: test/altertab.test -> test/altertab.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "547:   } {1 {table y1_segments may not be modified}}",
      "549:   do_catchsql_test 16.20 {",
      "554:     DROP TABLE y1_segments;",
      "555:   } {1 {table y1_segments may not be dropped}}",
      "557:   do_execsql_test 16.30 {",
      "558:     ALTER TABLE y1 RENAME TO z1;",
      "559:   }",
      "",
      "[Removed Lines]",
      "550:     ALTER TABLE y1_segments RENAME TO abc;",
      "551:   } {1 {table y1_segments may not be altered}}",
      "553:   do_catchsql_test 16.21 {",
      "",
      "[Added Lines]",
      "553:   do_catchsql_test 16.20 {",
      "554:     ALTER TABLE y1_segments RENAME TO abc;",
      "555:   } {1 {table y1_segments may not be altered}}",
      "556:   sqlite3_db_config db DEFENSIVE 0",
      "557:   do_catchsql_test 16.22 {",
      "558:     ALTER TABLE y1_segments RENAME TO abc;",
      "559:   } {0 {}}",
      "560:   sqlite3_db_config db DEFENSIVE 1",
      "561:   do_catchsql_test 16.23 {",
      "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
      "563:   } {1 {object name reserved for internal use: y1_segments}}",
      "564:   do_catchsql_test 16.24 {",
      "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
      "566:   } {1 {object name reserved for internal use: y1_segments}}",
      "567:   sqlite3_db_config db DEFENSIVE 0",
      "568:   do_catchsql_test 16.25 {",
      "569:     ALTER TABLE abc RENAME TO y1_segments;",
      "570:   } {0 {}}",
      "571:   sqlite3_db_config db DEFENSIVE 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e7579a53fb91ec9c0a473bc928518239671235a2",
      "candidate_info": {
        "commit_hash": "e7579a53fb91ec9c0a473bc928518239671235a2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e7579a53fb91ec9c0a473bc928518239671235a2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/windowB.test"
        ],
        "message": "Further simplifications to window-function code.\n\nFossilOrigin-Name: 5fe15c1d8383989257e11d1806e6b035acacd1b504ae385ba58d20db10f26eee",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/windowB.test||test/windowB.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 77b0db22d6c7a031f332bfcf1c8fcd94e464de9f2396f0327ee761a30ebc8b60",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1599:         VdbeCoverage(v);",
          "1600:         sqlite3ReleaseTempReg(pParse, regTmp);",
          "1601:       }",
          "1634:       if( pWin->bExprArgs ){",
          "1635:         int iStart = sqlite3VdbeCurrentAddr(v);",
          "1636:         VdbeOp *pOp, *pEnd;",
          "",
          "[Removed Lines]",
          "1611:       if( pWin->eFrmType==TK_RANGE",
          "1612:        && pWin->eStart==pWin->eEnd",
          "1613:        && pWin->eStart==TK_PRECEDING",
          "1614:       ){",
          "1615:         int regPeer = sqlite3GetTempReg(pParse);",
          "1616:         int regString = sqlite3GetTempReg(pParse);",
          "1617:         int lbl = sqlite3VdbeMakeLabel(pParse);",
          "1618:         VdbeModuleComment((v, \"windowAggStep \\\"peer is numeric?\\\" test\"));",
          "1620:         sqlite3VdbeAddOp3(v, OP_Le, p->regStart, lbl, p->regEnd);",
          "1622:         windowReadPeerValues(p, csr, regPeer);",
          "1623:         sqlite3VdbeAddOp2(v, OP_IsNull, regPeer, lbl);",
          "1624:         sqlite3VdbeAddOp4(v, OP_String8, 0, regString, 0, \"\", P4_STATIC);",
          "1625:         addrIf2 = sqlite3VdbeAddOp3(v, OP_Lt, regString, 0, regPeer);",
          "1626:         sqlite3ReleaseTempReg(pParse, regPeer);",
          "1627:         sqlite3ReleaseTempReg(pParse, regString);",
          "1628:         sqlite3VdbeResolveLabel(v, lbl);",
          "1629:         VdbeModuleComment((v, \"windowAggStep end \\\"peer is numeric?\\\"\"));",
          "1630:         assert( pWin->eStart==TK_PRECEDING || pWin->eStart==TK_FOLLOWING );",
          "1631:         assert( pMWin->pOrderBy && pMWin->pOrderBy->nExpr==1 );",
          "1632:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2180:     windowAggFinal(p, 0);",
          "2181:   }",
          "2182:   addrContinue = sqlite3VdbeCurrentAddr(v);",
          "2183:   switch( op ){",
          "2184:     case WINDOW_RETURN_ROW:",
          "2185:       csr = p->current.csr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2155:   if( pMWin->eStart==pMWin->eEnd && regCountdown",
          "2156:    && pMWin->eFrmType==TK_RANGE && op==WINDOW_AGGINVERSE",
          "2157:   ){",
          "2158:     int regRowid1 = sqlite3GetTempReg(pParse);",
          "2159:     int regRowid2 = sqlite3GetTempReg(pParse);",
          "2160:     sqlite3VdbeAddOp2(v, OP_Rowid, p->start.csr, regRowid1);",
          "2161:     sqlite3VdbeAddOp2(v, OP_Rowid, p->end.csr, regRowid2);",
          "2162:     sqlite3VdbeAddOp3(v, OP_Ge, regRowid2, lblDone, regRowid1);",
          "2163:     sqlite3ReleaseTempReg(pParse, regRowid1);",
          "2164:     sqlite3ReleaseTempReg(pParse, regRowid2);",
          "2165:     assert( pMWin->eStart==TK_PRECEDING || pMWin->eStart==TK_FOLLOWING );",
          "2166:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2231:   if( bPeer ){",
          "2232:     int nReg = (pMWin->pOrderBy ? pMWin->pOrderBy->nExpr : 0);",
          "2250:     windowReadPeerValues(p, csr, regTmp);",
          "2251:     windowIfNewPeer(pParse, pMWin->pOrderBy, regTmp, reg, addrContinue);",
          "2252:     sqlite3ReleaseTempRange(pParse, regTmp, nReg);",
          "",
          "[Removed Lines]",
          "2233:     int regTmp;",
          "2238:     if( pMWin->eStart==TK_FOLLOWING && pMWin->eEnd==TK_FOLLOWING",
          "2239:      && pMWin->eFrmType==TK_RANGE && op==WINDOW_AGGINVERSE",
          "2240:     ){",
          "2241:       int regRowid1 = sqlite3GetTempReg(pParse);",
          "2242:       int regRowid2 = sqlite3GetTempReg(pParse);",
          "2243:       sqlite3VdbeAddOp2(v, OP_Rowid, p->start.csr, regRowid1);",
          "2244:       sqlite3VdbeAddOp2(v, OP_Rowid, p->end.csr, regRowid2);",
          "2245:       sqlite3VdbeAddOp3(v, OP_Ge, regRowid2, lblDone, regRowid1);",
          "2246:       sqlite3ReleaseTempReg(pParse, regRowid1);",
          "2247:       sqlite3ReleaseTempReg(pParse, regRowid2);",
          "2248:     }",
          "2249:     regTmp = (nReg ? sqlite3GetTempRange(pParse, nReg) : 0);",
          "",
          "[Added Lines]",
          "2218:     int regTmp = (nReg ? sqlite3GetTempRange(pParse, nReg) : 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2761:   if( pMWin->eStart==TK_PRECEDING || pMWin->eStart==TK_FOLLOWING ){",
          "2763:   }",
          "2764:   if( pMWin->eEnd==TK_PRECEDING || pMWin->eEnd==TK_FOLLOWING ){",
          "2766:   }",
          "",
          "[Removed Lines]",
          "2762:     s.regStart = ++pParse->nMem;",
          "2765:     s.regEnd = ++pParse->nMem;",
          "",
          "[Added Lines]",
          "2733:     regStart = ++pParse->nMem;",
          "2736:     regEnd = ++pParse->nMem;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2818:   s.regArg = windowInitAccum(pParse, pMWin);",
          "2823:   }",
          "2827:   }",
          "2830:     int op = ((pMWin->eStart==TK_FOLLOWING) ? OP_Ge : OP_Le);",
          "2834:     windowAggFinal(&s, 0);",
          "",
          "[Removed Lines]",
          "2820:   if( s.regStart ){",
          "2821:     sqlite3ExprCode(pParse, pMWin->pStart, s.regStart);",
          "2822:     windowCheckValue(pParse, s.regStart, 0 + (pMWin->eFrmType==TK_RANGE?3:0));",
          "2824:   if( s.regEnd ){",
          "2825:     sqlite3ExprCode(pParse, pMWin->pEnd, s.regEnd);",
          "2826:     windowCheckValue(pParse, s.regEnd, 1 + (pMWin->eFrmType==TK_RANGE?3:0));",
          "2829:   if( pMWin->eFrmType!=TK_RANGE && pMWin->eStart==pMWin->eEnd && s.regStart ){",
          "2831:     int addrGe = sqlite3VdbeAddOp3(v, op, s.regStart, 0, s.regEnd);",
          "",
          "[Added Lines]",
          "2791:   if( regStart ){",
          "2792:     sqlite3ExprCode(pParse, pMWin->pStart, regStart);",
          "2793:     windowCheckValue(pParse, regStart, 0 + (pMWin->eFrmType==TK_RANGE?3:0));",
          "2795:   if( regEnd ){",
          "2796:     sqlite3ExprCode(pParse, pMWin->pEnd, regEnd);",
          "2797:     windowCheckValue(pParse, regEnd, 1 + (pMWin->eFrmType==TK_RANGE?3:0));",
          "2800:   if( pMWin->eFrmType!=TK_RANGE && pMWin->eStart==pMWin->eEnd && regStart ){",
          "2802:     int addrGe = sqlite3VdbeAddOp3(v, op, regStart, 0, regEnd);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2839:     sqlite3VdbeAddOp2(v, OP_Goto, 0, lblWhereEnd);",
          "2840:     sqlite3VdbeJumpHere(v, addrGe);",
          "2841:   }",
          "2843:     assert( pMWin->eEnd==TK_FOLLOWING );",
          "2845:   }",
          "2847:   if( pMWin->eStart!=TK_UNBOUNDED ){",
          "",
          "[Removed Lines]",
          "2842:   if( pMWin->eStart==TK_FOLLOWING && pMWin->eFrmType!=TK_RANGE && s.regEnd ){",
          "2844:     sqlite3VdbeAddOp3(v, OP_Subtract, s.regStart, s.regEnd, s.regStart);",
          "",
          "[Added Lines]",
          "2813:   if( pMWin->eStart==TK_FOLLOWING && pMWin->eFrmType!=TK_RANGE && regEnd ){",
          "2815:     sqlite3VdbeAddOp3(v, OP_Subtract, regStart, regEnd, regStart);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2873:       if( pMWin->eFrmType==TK_RANGE ){",
          "2874:         int lbl = sqlite3VdbeMakeLabel(pParse);",
          "2875:         int addrNext = sqlite3VdbeCurrentAddr(v);",
          "2878:         windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 0);",
          "2879:         sqlite3VdbeAddOp2(v, OP_Goto, 0, addrNext);",
          "2880:         sqlite3VdbeResolveLabel(v, lbl);",
          "2881:       }else{",
          "2884:       }",
          "2885:     }",
          "2886:   }else",
          "2887:   if( pMWin->eEnd==TK_PRECEDING ){",
          "2888:     int bRPS = (pMWin->eStart==TK_PRECEDING && pMWin->eFrmType==TK_RANGE);",
          "2891:     windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 0);",
          "2893:   }else{",
          "2894:     int addr = 0;",
          "2895:     windowCodeOp(&s, WINDOW_AGGSTEP, 0, 0);",
          "",
          "[Removed Lines]",
          "2876:         windowCodeRangeTest(&s, OP_Ge, s.current.csr, s.regEnd, s.end.csr, lbl);",
          "2877:         windowCodeOp(&s, WINDOW_AGGINVERSE, s.regStart, 0);",
          "2882:         windowCodeOp(&s, WINDOW_RETURN_ROW, s.regEnd, 0);",
          "2883:         windowCodeOp(&s, WINDOW_AGGINVERSE, s.regStart, 0);",
          "2889:     windowCodeOp(&s, WINDOW_AGGSTEP, s.regEnd, 0);",
          "2890:     if( bRPS ) windowCodeOp(&s, WINDOW_AGGINVERSE, s.regStart, 0);",
          "2892:     if( !bRPS ) windowCodeOp(&s, WINDOW_AGGINVERSE, s.regStart, 0);",
          "",
          "[Added Lines]",
          "2847:         windowCodeRangeTest(&s, OP_Ge, s.current.csr, regEnd, s.end.csr, lbl);",
          "2848:         windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "2853:         windowCodeOp(&s, WINDOW_RETURN_ROW, regEnd, 0);",
          "2854:         windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "2860:     windowCodeOp(&s, WINDOW_AGGSTEP, regEnd, 0);",
          "2861:     if( bRPS ) windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "2863:     if( !bRPS ) windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2897:       if( pMWin->eFrmType==TK_RANGE ){",
          "2898:         int lbl = 0;",
          "2899:         addr = sqlite3VdbeCurrentAddr(v);",
          "2901:           lbl = sqlite3VdbeMakeLabel(pParse);",
          "2903:         }",
          "2904:         windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 0);",
          "2907:           sqlite3VdbeAddOp2(v, OP_Goto, 0, addr);",
          "2908:           sqlite3VdbeResolveLabel(v, lbl);",
          "2909:         }",
          "2910:       }else{",
          "2913:           VdbeCoverage(v);",
          "2914:         }",
          "2915:         windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 0);",
          "2918:       }",
          "2919:     }",
          "2920:   }",
          "",
          "[Removed Lines]",
          "2900:         if( s.regEnd ){",
          "2902:           windowCodeRangeTest(&s, OP_Ge, s.current.csr,s.regEnd,s.end.csr,lbl);",
          "2905:         windowCodeOp(&s, WINDOW_AGGINVERSE, s.regStart, 0);",
          "2906:         if( s.regEnd ){",
          "2911:         if( s.regEnd ){",
          "2912:           addr = sqlite3VdbeAddOp3(v, OP_IfPos, s.regEnd, 0, 1);",
          "2916:         windowCodeOp(&s, WINDOW_AGGINVERSE, s.regStart, 0);",
          "2917:         if( s.regEnd ) sqlite3VdbeJumpHere(v, addr);",
          "",
          "[Added Lines]",
          "2871:         if( regEnd ){",
          "2873:           windowCodeRangeTest(&s, OP_Ge, s.current.csr, regEnd, s.end.csr, lbl);",
          "2876:         windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "2877:         if( regEnd ){",
          "2882:         if( regEnd ){",
          "2883:           addr = sqlite3VdbeAddOp3(v, OP_IfPos, regEnd, 0, 1);",
          "2887:         windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "2888:         if( regEnd ) sqlite3VdbeJumpHere(v, addr);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2933:   VdbeCoverage(v);",
          "2934:   if( pMWin->eEnd==TK_PRECEDING ){",
          "2935:     int bRPS = (pMWin->eStart==TK_PRECEDING && pMWin->eFrmType==TK_RANGE);",
          "2938:     windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 0);",
          "2939:   }else if( pMWin->eStart==TK_FOLLOWING ){",
          "2940:     int addrStart;",
          "",
          "[Removed Lines]",
          "2936:     windowCodeOp(&s, WINDOW_AGGSTEP, s.regEnd, 0);",
          "2937:     if( bRPS ) windowCodeOp(&s, WINDOW_AGGINVERSE, s.regStart, 0);",
          "",
          "[Added Lines]",
          "2907:     windowCodeOp(&s, WINDOW_AGGSTEP, regEnd, 0);",
          "2908:     if( bRPS ) windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2944:     windowCodeOp(&s, WINDOW_AGGSTEP, 0, 0);",
          "2945:     if( pMWin->eFrmType==TK_RANGE ){",
          "2946:       addrStart = sqlite3VdbeCurrentAddr(v);",
          "2948:       addrBreak1 = windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 1);",
          "2949:     }else",
          "2950:     if( pMWin->eEnd==TK_UNBOUNDED ){",
          "2951:       addrStart = sqlite3VdbeCurrentAddr(v);",
          "2953:       addrBreak2 = windowCodeOp(&s, WINDOW_AGGINVERSE, 0, 1);",
          "2954:     }else{",
          "2955:       assert( pMWin->eEnd==TK_FOLLOWING );",
          "2956:       addrStart = sqlite3VdbeCurrentAddr(v);",
          "2959:     }",
          "2960:     sqlite3VdbeAddOp2(v, OP_Goto, 0, addrStart);",
          "2961:     sqlite3VdbeJumpHere(v, addrBreak2);",
          "",
          "[Removed Lines]",
          "2947:       addrBreak2 = windowCodeOp(&s, WINDOW_AGGINVERSE, s.regStart, 1);",
          "2952:       addrBreak1 = windowCodeOp(&s, WINDOW_RETURN_ROW, s.regStart, 1);",
          "2957:       addrBreak1 = windowCodeOp(&s, WINDOW_RETURN_ROW, s.regEnd, 1);",
          "2958:       addrBreak2 = windowCodeOp(&s, WINDOW_AGGINVERSE, s.regStart, 1);",
          "",
          "[Added Lines]",
          "2918:       addrBreak2 = windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 1);",
          "2923:       addrBreak1 = windowCodeOp(&s, WINDOW_RETURN_ROW, regStart, 1);",
          "2928:       addrBreak1 = windowCodeOp(&s, WINDOW_RETURN_ROW, regEnd, 1);",
          "2929:       addrBreak2 = windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 1);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2970:     windowCodeOp(&s, WINDOW_AGGSTEP, 0, 0);",
          "2971:     addrStart = sqlite3VdbeCurrentAddr(v);",
          "2972:     addrBreak = windowCodeOp(&s, WINDOW_RETURN_ROW, 0, 1);",
          "2974:     sqlite3VdbeAddOp2(v, OP_Goto, 0, addrStart);",
          "2975:     sqlite3VdbeJumpHere(v, addrBreak);",
          "2976:   }",
          "",
          "[Removed Lines]",
          "2973:     windowCodeOp(&s, WINDOW_AGGINVERSE, s.regStart, 0);",
          "",
          "[Added Lines]",
          "2944:     windowCodeOp(&s, WINDOW_AGGINVERSE, regStart, 0);",
          "",
          "---------------"
        ],
        "test/windowB.test||test/windowB.test": [
          "File: test/windowB.test -> test/windowB.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "297:   ) FROM t1;",
          "298: } {7 {} 8 {} abc 1001}",
          "300: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "300: #-------------------------------------------------------------------------",
          "301: reset_db",
          "302: do_execsql_test 7.0 {",
          "303:   CREATE TABLE t1(a, c);",
          "304:   CREATE INDEX i1 ON t1(a);",
          "306:   INSERT INTO t1 VALUES(NULL, 46);",
          "307:   INSERT INTO t1 VALUES(NULL, 45);",
          "308:   INSERT INTO t1 VALUES(7,  997);",
          "309:   INSERT INTO t1 VALUES(7,  1000);",
          "310:   INSERT INTO t1 VALUES(8,  997);",
          "311:   INSERT INTO t1 VALUES(8,  1000);",
          "312:   INSERT INTO t1 VALUES('abc', 1001);",
          "313:   INSERT INTO t1 VALUES('abc', 1004);",
          "314:   INSERT INTO t1 VALUES('xyz', 3333);",
          "315: }",
          "317: do_execsql_test 7.1 {",
          "318:   SELECT a, max(c) OVER (",
          "319:     ORDER BY a RANGE BETWEEN 2 FOLLOWING AND 0 FOLLOWING",
          "320:   ) FROM t1;",
          "321: } {{} 46 {} 46  7 {} 7 {} 8 {} 8 {}  abc 1004 abc 1004 xyz 3333}",
          "322: do_execsql_test 7.2 {",
          "323:   SELECT a, min(c) OVER (",
          "324:     ORDER BY a RANGE BETWEEN 2 FOLLOWING AND 0 FOLLOWING",
          "325:   ) FROM t1;",
          "326: } {{} 45 {} 45  7 {} 7 {} 8 {} 8 {}  abc 1001 abc 1001 xyz 3333}",
          "328: do_execsql_test 7.3 {",
          "329:   SELECT a, max(c) OVER (",
          "330:     ORDER BY a RANGE BETWEEN 0 PRECEDING AND 2 PRECEDING",
          "331:   ) FROM t1;",
          "332: } {{} 46 {} 46  7 {} 7 {} 8 {} 8 {}  abc 1004 abc 1004 xyz 3333}",
          "333: do_execsql_test 7.4 {",
          "334:   SELECT a, min(c) OVER (",
          "335:     ORDER BY a RANGE BETWEEN 0 PRECEDING AND 2 PRECEDING",
          "336:   ) FROM t1;",
          "337: } {{} 45 {} 45  7 {} 7 {} 8 {} 8 {}  abc 1001 abc 1001 xyz 3333}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71f059c88067736471c631cba95211c1bd100392",
      "candidate_info": {
        "commit_hash": "71f059c88067736471c631cba95211c1bd100392",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/71f059c88067736471c631cba95211c1bd100392",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "test/altertab3.test"
        ],
        "message": "Fix a problem in ALTER TABLE triggered by views or triggers that include the construction \"ORDER BY true\" or \"ORDER BY false\".\n\nFossilOrigin-Name: 8168021f9ab5fb8b4888257963c9ec68fd1dfeedaf6bba4b8e07438001d0be0f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 559c2dd6724b2fc238760863d4be7132b591457e72ca5758fdd4002fbf7df4bc",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1278:   ExprList *pEList;",
          "1279:   struct ExprList_item *pItem;",
          "1282:   if( pOrderBy->nExpr>db->aLimit[SQLITE_LIMIT_COLUMN] ){",
          "1283:     sqlite3ErrorMsg(pParse, \"too many terms in %s BY clause\", zType);",
          "1284:     return 1;",
          "",
          "[Removed Lines]",
          "1281:   if( pOrderBy==0 || pParse->db->mallocFailed ) return 0;",
          "",
          "[Added Lines]",
          "1281:   if( pOrderBy==0 || pParse->db->mallocFailed || IN_RENAME_OBJECT ) return 0;",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "345:   ALTER TABLE t1 RENAME TO t1x;",
          "346: } {1 {error in trigger AFTER: no such column: a}}",
          "348: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "348: #-------------------------------------------------------------------------",
          "349: reset_db",
          "351: do_execsql_test 16.1 {",
          "352:   CREATE TABLE t1(x);",
          "353:   CREATE TRIGGER AFTER INSERT ON t1 BEGIN",
          "354:     SELECT (WITH t2 AS (WITH t3 AS (SELECT true)",
          "355:           SELECT * FROM t3 ORDER BY true COLLATE nocase)",
          "356:         SELECT 11);",
          "358:     WITH t4 AS (SELECT * FROM t1) SELECT 33;",
          "359:   END;",
          "360: }",
          "362: do_execsql_test 16.2 {",
          "363:   ALTER TABLE t1 RENAME TO t1x;",
          "364: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76baf799a284623a4c73c518b7814bf0c92fb60c",
      "candidate_info": {
        "commit_hash": "76baf799a284623a4c73c518b7814bf0c92fb60c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/76baf799a284623a4c73c518b7814bf0c92fb60c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/parse.y"
        ],
        "message": "ALWAYS macro added for coverage.\n\nFossilOrigin-Name: a1e1ba9145049491c593ac70d9e05149662d34770129c270d702f284cd19a481",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6d1bbba9a004a2491c76b4a7d09edb9b738102c46fdcb3e0f7b22bffa719518e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1075:   A = sqlite3PExpr(pParse, TK_VECTOR, 0, 0);",
          "1076:   if( A ){",
          "1077:     A->x.pList = pList;",
          "1079:       A->flags |= pList->a[0].pExpr->flags & EP_Propagate;",
          "1080:     }",
          "1081:   }else{",
          "",
          "[Removed Lines]",
          "1078:     if( pList->nExpr ){",
          "",
          "[Added Lines]",
          "1078:     if( ALWAYS(pList->nExpr) ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0e16a22614ae2fb63487cff12f71551baedc005",
      "candidate_info": {
        "commit_hash": "a0e16a22614ae2fb63487cff12f71551baedc005",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a0e16a22614ae2fb63487cff12f71551baedc005",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c"
        ],
        "message": "Improved detection of attempts to use a generated column as part of the primary key.  Ticket [91e86951016a6802]\n\nFossilOrigin-Name: 6d1bbba9a004a2491c76b4a7d09edb9b738102c46fdcb3e0f7b22bffa719518e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/build.c||src/build.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/build.c||src/build.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5b4c0f2ddc6f324e23bbde0ee3d1ab672cfe8ab5044c9b693f4c33cdd75c211e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1649:   assert( TF_HasVirtual==COLFLAG_VIRTUAL );",
          "1650:   assert( TF_HasStored==COLFLAG_STORED );",
          "1651:   pTab->tabFlags |= eType;",
          "1652:   pCol->pDflt = pExpr;",
          "1653:   pExpr = 0;",
          "1654:   goto generated_done;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1652:   if( pCol->colFlags & COLFLAG_PRIMKEY ){",
          "1654:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fff1dc8e058f8f676196a39d349ae7f8d81fd7e7",
      "candidate_info": {
        "commit_hash": "fff1dc8e058f8f676196a39d349ae7f8d81fd7e7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fff1dc8e058f8f676196a39d349ae7f8d81fd7e7",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix another case in fts5 where a corrupt database could cause a buffer overread.\n\nFossilOrigin-Name: f7e6cdc5625664f449d0edbe39af2d45910c4137bfd856ae1f770dd826c138ff",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2311:         iPgidx += fts5GetVarint32(&pIter->pLeaf->p[iPgidx], iOff);",
          "2312:         if( iOff<4 || iOff>=pIter->pLeaf->szLeaf ){",
          "2313:           p->rc = FTS5_CORRUPT;",
          "2314:         }else{",
          "2315:           nKeep = 0;",
          "2316:           iTermOff = iOff;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2314:           return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2323:   }",
          "2325:  search_success:",
          "2327:   pIter->iLeafOffset = iOff + nNew;",
          "2328:   pIter->iTermLeafOffset = pIter->iLeafOffset;",
          "2329:   pIter->iTermLeafPgno = pIter->iLeafPgno;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2328:   if( pIter->iLeafOffset>n ){",
          "2329:     p->rc = FTS5_CORRUPT;",
          "2330:     return;",
          "2331:   }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1631:   SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "1632: } {1 {vtable constructor failed: t1}}",
          "1635: sqlite3_fts5_may_be_corrupt 0",
          "1636: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1634: #-------------------------------------------------------------------------",
          "1635: reset_db",
          "1636: do_test 21.0 {",
          "1637:   sqlite3 db {}",
          "1638:   db deserialize [decode_hexdb {",
          "1639: | size 28672 pagesize 4096 filename c22b.db",
          "1640: | page 1 offset 0",
          "1641: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "1642: |     16: 10 00 01 01 00 40 20 20 00 00 00 01 00 00 00 07   .....@  ........",
          "1643: |     32: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "1644: |     48: 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00   ................",
          "1645: |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01   ................",
          "1646: |     96: 00 2e 30 38 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ..08...........m",
          "1647: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "1648: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "1649: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "1650: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "1651: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "1652: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "1653: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "1654: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "1655: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "1656: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "1657: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "1658: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "1659: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "1660: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "1661: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "1662: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "1663: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "1664: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "1665: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "1666: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "1667: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "1668: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "1669: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "1670: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "1671: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "1672: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "1673: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "1674: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "1675: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "1676: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "1677: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "1678: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "1679: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "1680: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "1681: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "1682: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "1683: | page 2 offset 4096",
          "1684: |      0: 0d 0e 8e 00 06 0e 2f 00 0f e8 0e 2f 0f bd 0f 3b   ....../..../...;",
          "1685: |     16: 0e a5 0e 49 00 00 00 00 00 00 00 00 00 00 00 00   ...I............",
          "1686: |   3616: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 18   ................",
          "1687: |   3632: 0a 03 00 36 00 00 00 00 01 04 04 00 04 01 01 01   ...6............",
          "1688: |   3648: 02 01 01 03 01 01 04 01 01 3e 90 80 80 80 80 01   .........>......",
          "1689: |   3664: 04 00 81 00 00 00 00 36 06 30 62 61 63 6b 75 05   .......6.0backu.",
          "1690: |   3680: 02 04 05 02 04 02 05 65 61 6d 65 72 05 02 02 05   .......eamer....",
          "1691: |   3696: 02 02 02 05 6f 6f 6d 65 72 05 01 05 01 02 05 75   ....oomer......u",
          "1692: |   3712: 6d 6d 65 72 05 02 03 05 02 03 04 0d 0d 0b 0f 27   mmer...........'",
          "1693: |   3728: 00 17 30 00 00 00 00 01 03 03 00 03 01 01 01 02   ..0.............",
          "1694: |   3744: 01 01 03 01 01 7b 8c 80 80 80 80 01 04 00 81 7a   ...............z",
          "1695: |   3760: 00 00 00 6d 06 30 61 62 61 63 6b 0d 02 07 04 04   ...m.0aback.....",
          "1696: |   3776: 6e 64 6f 6e 0d 02 05 02 05 63 74 69 76 65 09 02   ndon.....ctive..",
          "1697: |   3792: 02 04 02 0b 02 04 6c 70 68 61 0d 04 02 0a 02 03   ......lpha......",
          "1698: |   3808: 74 6f 6d 0b 02 02 02 02 09 05 02 69 63 0c 02 02   tom........ic...",
          "1699: |   3824: 01 06 62 61 63 6b 75 70 0d 02 04 02 05 6f 6f 6d   ..backup.....oom",
          "1700: |   3840: 65 72 0a 02 02 03 02 08 01 07 63 68 61 6e 6e 65   er........channe",
          "1701: |   3856: 6c 0d 02 03 01 04 74 65 73 74 0d 02 06 04 0a 09   l.....test......",
          "1702: |   3872: 0d 0a 0b 07 0b 0d 0c 0f ef 00 14 2a 00 00 00 00   ...........*....",
          "1703: |   3888: 01 02 02 00 02 01 01 01 02 01 01 7b 88 80 80 80   ................",
          "1704: |   3904: 80 01 04 00 81 7a 00 00 00 6d 06 30 61 62 61 63   .....z...m.0abac",
          "1705: |   3920: 6b 08 02 07 04 04 6e 64 6f 6e 08 02 05 02 05 63   k.....ndon.....c",
          "1706: |   3936: 74 69 76 65 04 02 02 04 02 0b 02 04 6c 70 68 61   tive........lpha",
          "1707: |   3952: 08 04 02 0a 02 03 74 6f 6d 06 02 02 02 02 09 05   ......tom.......",
          "1708: |   3968: 02 69 63 07 02 02 01 06 62 61 63 6b 75 70 08 02   .ic.....backup..",
          "1709: |   3984: 04 02 05 6f 6f 6d 65 72 05 02 02 03 02 08 01 07   ...oomer........",
          "1710: |   4000: 63 68 61 6e 6e 65 6c 08 02 03 01 04 74 65 73 74   channel.....test",
          "1711: |   4016: 08 02 06 04 0a 09 0d 0a 0b 07 0b 0d 0c 24 84 80   .............$..",
          "1712: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "1713: |   4048: 63 6b 01 02 02 04 02 66 74 00 02 22 04 04 6e 64   ck.....ft.....nd",
          "1714: |   4064: 6f 6e 03 02 02 08 0a 07 05 01 03 00 10 0d 23 00   on............#.",
          "1715: |   4080: 00 00 11 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "1716: | page 3 offset 8192",
          "1717: |      0: 0a 00 00 00 04 0f e5 00 0f fa 0f f3 0f ec 0f e5   ................",
          "1718: |   4064: 00 00 00 00 00 06 04 01 0c 01 04 02 06 04 01 0c   ................",
          "1719: |   4080: 01 03 02 06 04 01 0c 01 02 02 05 04 09 0c 01 02   ................",
          "1720: | page 4 offset 12288",
          "1721: |      0: 0d 0f 5a 00 0d 0e ce 00 0f f6 0f ec 0f e0 0f d5   ..Z.............",
          "1722: |     16: 0e e7 0f c1 0f b6 0f 70 0f 65 0e ce 0f 51 0f 46   .......p.e...Q.F",
          "1723: |     32: 0f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "1724: |   3776: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 17 0a   ................",
          "1725: |   3792: 03 00 35 62 65 61 6d 65 72 20 62 75 6d 6d 65 72   ..5beamer bummer",
          "1726: |   3808: 20 62 61 63 6b 75 29 17 05 03 00 35 62 65 61 6d    backu)....5beam",
          "1727: |   3824: 65 72 20 62 75 6d 6d 65 72 20 62 61 63 6b 75 29   er bummer backu)",
          "1728: |   3840: 44 0d 04 00 81 0d 61 6c 70 68 61 20 63 68 61 6e   D.....alpha chan",
          "1729: |   3856: 6e 65 6c 20 62 61 63 6b 75 70 20 61 62 61 6e 64   nel backup aband",
          "1730: |   3872: 6f 6e 20 74 65 73 74 20 61 62 61 63 6b 20 62 6f   on test aback bo",
          "1731: |   3888: 6f 6d 65 72 20 61 74 6f 6d 20 61 6c 70 68 61 20   omer atom alpha",
          "1732: |   3904: 61 63 74 69 76 65 09 0c 03 00 19 61 74 6f 6d 69   active.....atomi",
          "1733: |   3920: 63 07 0b 03 00 15 61 74 6f 6d 0f ca 00 0b 19 62   c.....atom.....b",
          "1734: |   3936: 6f 6f 6d 65 72 09 09 03 00 19 61 63 74 69 76 65   oomer.....active",
          "1735: |   3952: 44 08 04 00 81 0d 61 6c 70 68 61 20 63 68 61 6e   D.....alpha chan",
          "1736: |   3968: 6e 65 6c 20 62 61 63 6b 75 70 20 61 62 61 6e 64   nel backup aband",
          "1737: |   3984: 6f 6e 20 74 65 73 74 20 61 62 61 63 6b 20 62 6f   on test aback bo",
          "1738: |   4000: 6f 6d 65 72 20 61 74 6f 6d 20 61 6c 70 68 61 20   omer atom alpha",
          "1739: |   4016: 61 63 74 69 76 65 09 07 03 00 19 61 74 6f 6d 69   active.....atomi",
          "1740: |   4032: 63 07 06 03 00 15 61 74 6f 6d 00 00 00 0b 19 62   c.....atom.....b",
          "1741: |   4048: 6f 6f 6d 65 72 09 04 03 00 19 61 63 74 69 76 65   oomer.....active",
          "1742: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "1743: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "1744: | page 5 offset 16384",
          "1745: |      0: 0d 00 00 00 0d 0f b2 00 0f fa 0f f4 0f ee 0f e8   ................",
          "1746: |     16: 0f e2 0f dc 0f d6 0f d0 0f ca 0f c4 0f be 0f b8   ................",
          "1747: |     32: 0f b2 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "1748: |   4016: 00 00 04 0d 03 00 0e 0a 04 0c 03 00 0e 01 04 0b   ................",
          "1749: |   4032: 03 00 0e 01 04 0a 03 00 0e 03 04 09 03 00 0e 01   ................",
          "1750: |   4048: 04 08 03 00 0e 0a 04 07 03 00 0e 01 04 06 03 00   ................",
          "1751: |   4064: 0e 01 04 05 03 00 0e 03 04 04 03 00 0e 01 04 03   ................",
          "1752: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "1753: | page 6 offset 20480",
          "1754: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "1755: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "1756: | page 7 offset 24576",
          "1757: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "1758: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "1759: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "1760: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "1761: | end c22b.db",
          "1762: }]} {}",
          "1764: do_catchsql_test 21.1 {",
          "1765:   DELETE FROM t1 WHERE t1 MATCH 'ab*ndon';",
          "1766: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b57c545a384ab5d62becf3164945b32b1e108b2fb4c8dbd939a1706c2079e18b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}