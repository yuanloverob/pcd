{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e9c17ef92f66e31cee5193f6e1e449d6d197780e",
      "candidate_info": {
        "commit_hash": "e9c17ef92f66e31cee5193f6e1e449d6d197780e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e9c17ef92f66e31cee5193f6e1e449d6d197780e",
        "files": [
          "test/recipes/90-test_shlibload.t"
        ],
        "message": "test/recipes/90-test_shlibload.t: Make sure to handle library renames\n\nVMS renames our libraries to fit VMS conventions.  This must be accounted\nfor when we want to load them.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3880)\n\n(cherry picked from commit bfa3480f7609351563ac36dddd7c64e97aa6f446)",
        "before_after_code_files": [
          "test/recipes/90-test_shlibload.t||test/recipes/90-test_shlibload.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/90-test_shlibload.t||test/recipes/90-test_shlibload.t": [
          "File: test/recipes/90-test_shlibload.t -> test/recipes/90-test_shlibload.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: plan tests => 3;",
          "25: my $libcrypto =",
          "27: my $libssl =",
          "30: ok(run(test([\"shlibloadtest\", \"-crypto_first\", $libcrypto, $libssl])),",
          "31:    \"running shlibloadtest -crypto_first\");",
          "",
          "[Removed Lines]",
          "26:     $unified_info{sharednames}->{libcrypto}.$target{shared_extension_simple};",
          "28:     $unified_info{sharednames}->{libssl}.$target{shared_extension_simple};",
          "",
          "[Added Lines]",
          "25: my $libcrypto_idx = $unified_info{rename}->{libcrypto} // \"libcrypto\";",
          "26: my $libssl_idx = $unified_info{rename}->{libssl} // \"libssl\";",
          "28:     $unified_info{sharednames}->{$libcrypto_idx}.$target{shared_extension_simple};",
          "30:     $unified_info{sharednames}->{$libssl_idx}.$target{shared_extension_simple};",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f0067ec9a8d2ab71132604b4a1a5dd9ffab4f23",
      "candidate_info": {
        "commit_hash": "1f0067ec9a8d2ab71132604b4a1a5dd9ffab4f23",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1f0067ec9a8d2ab71132604b4a1a5dd9ffab4f23",
        "files": [
          "crypto/ocsp/ocsp_vfy.c",
          "doc/crypto/OCSP_resp_find_status.pod",
          "include/openssl/ocsp.h"
        ],
        "message": "Add an API to get the signer of an OCSP response\n\nAdd a new function OCSP_resp_get0_signer() that looks in the\ncerts bundled with the response as well as in additional certificates\nprovided as a function argument, returning the certificate that signed\nthe given response (if present).\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>\n\n(cherry picked from commit ce5886dda80b6f60fb30762381506d5c6f2d995c)\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4723)",
        "before_after_code_files": [
          "crypto/ocsp/ocsp_vfy.c||crypto/ocsp/ocsp_vfy.c",
          "include/openssl/ocsp.h||include/openssl/ocsp.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ocsp/ocsp_vfy.c||crypto/ocsp/ocsp_vfy.c": [
          "File: crypto/ocsp/ocsp_vfy.c -> crypto/ocsp/ocsp_vfy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:     goto end;",
          "139: }",
          "141: static int ocsp_find_signer(X509 **psigner, OCSP_BASICRESP *bs,",
          "142:                             STACK_OF(X509) *certs, unsigned long flags)",
          "143: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141: int OCSP_resp_get0_signer(OCSP_BASICRESP *bs, X509 **signer,",
          "142:                      STACK_OF(X509) *extra_certs)",
          "143: {",
          "144:     int ret;",
          "146:     ret = ocsp_find_signer(signer, bs, extra_certs, 0);",
          "147:     return (ret > 0) ? 1 : 0;",
          "148: }",
          "",
          "---------------"
        ],
        "include/openssl/ocsp.h||include/openssl/ocsp.h": [
          "File: include/openssl/ocsp.h -> include/openssl/ocsp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "194: OCSP_BASICRESP *OCSP_response_get1_basic(OCSP_RESPONSE *resp);",
          "196: const ASN1_OCTET_STRING *OCSP_resp_get0_signature(const OCSP_BASICRESP *bs);",
          "198: int OCSP_resp_count(OCSP_BASICRESP *bs);",
          "199: OCSP_SINGLERESP *OCSP_resp_get0(OCSP_BASICRESP *bs, int idx);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "197: int OCSP_resp_get0_signer(OCSP_BASICRESP *bs, X509 **signer,",
          "198:                           STACK_OF(X509) *extra_certs);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb9f42e04d1f20ac7d0179d07f4ab7f559948fa6",
      "candidate_info": {
        "commit_hash": "fb9f42e04d1f20ac7d0179d07f4ab7f559948fa6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/fb9f42e04d1f20ac7d0179d07f4ab7f559948fa6",
        "files": [
          "apps/s_time.c"
        ],
        "message": "Retry SSL_read on ERROR_WANT_READ. This resolves the retry issue in general, but also the specific case where a TLS 1.3 server sends a post-handshake NewSessionTicket message prior to appdata.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3925)",
        "before_after_code_files": [
          "apps/s_time.c||apps/s_time.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_time.c||apps/s_time.c": [
          "File: apps/s_time.c -> apps/s_time.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229:                                    fmt_http_get_cmd, www_path);",
          "230:             if (SSL_write(scon, buf, buf_len) <= 0)",
          "231:                 goto end;",
          "234:         }",
          "235: #ifdef NO_SHUTDOWN",
          "236:         SSL_set_shutdown(scon, SSL_SENT_SHUTDOWN | SSL_RECEIVED_SHUTDOWN);",
          "",
          "[Removed Lines]",
          "232:             while ((i = SSL_read(scon, buf, sizeof(buf))) > 0)",
          "233:                 bytes_read += i;",
          "",
          "[Added Lines]",
          "232:             while ((i = SSL_read(scon, buf, sizeof(buf))) > 0 || SSL_get_error(scon, i) == SSL_ERROR_WANT_READ)",
          "233:                 if (i > 0) bytes_read += i;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "287:                                fmt_http_get_cmd, www_path);",
          "288:         if (SSL_write(scon, buf, buf_len) <= 0)",
          "289:             goto end;",
          "291:             continue;",
          "292:     }",
          "293: #ifdef NO_SHUTDOWN",
          "",
          "[Removed Lines]",
          "290:         while (SSL_read(scon, buf, sizeof(buf)) > 0)",
          "",
          "[Added Lines]",
          "290:         while ((i = SSL_read(scon, buf, sizeof(buf))) > 0 || SSL_get_error(scon, i) == SSL_ERROR_WANT_READ)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "318:                          www_path);",
          "319:             if (SSL_write(scon, buf, strlen(buf)) <= 0)",
          "320:                 goto end;",
          "323:         }",
          "324: #ifdef NO_SHUTDOWN",
          "325:         SSL_set_shutdown(scon, SSL_SENT_SHUTDOWN | SSL_RECEIVED_SHUTDOWN);",
          "",
          "[Removed Lines]",
          "321:             while ((i = SSL_read(scon, buf, sizeof(buf))) > 0)",
          "322:                 bytes_read += i;",
          "",
          "[Added Lines]",
          "321:             while ((i = SSL_read(scon, buf, sizeof(buf))) > 0 || SSL_get_error(scon, i) == SSL_ERROR_WANT_READ)",
          "322:                 if (i > 0) bytes_read += i;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba8bd957b86051310dd58a8dba9665b97c62d0d9",
      "candidate_info": {
        "commit_hash": "ba8bd957b86051310dd58a8dba9665b97c62d0d9",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ba8bd957b86051310dd58a8dba9665b97c62d0d9",
        "files": [
          "crypto/bn/asm/x86_64-gcc.c",
          "crypto/bn/bn_add.c"
        ],
        "message": "bn/bn_add.c: address performance regression.\n\nPerformance regression was reported for EC key generation between\n1.0.2 and 1.1.x [in GH#2891]. It naturally depends on platform,\nvalues between 6 and 9% were observed.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4743)\n\n(cherry picked from commit a78324d95bd4568ce2c3b34bfa1d6f14cddf92ef)",
        "before_after_code_files": [
          "crypto/bn/asm/x86_64-gcc.c||crypto/bn/asm/x86_64-gcc.c",
          "crypto/bn/bn_add.c||crypto/bn/bn_add.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/asm/x86_64-gcc.c||crypto/bn/asm/x86_64-gcc.c": [
          "File: crypto/bn/asm/x86_64-gcc.c -> crypto/bn/asm/x86_64-gcc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "225:                   \"       adcq    (%5,%2,8),%0    \\n\"",
          "226:                   \"       movq    %0,(%3,%2,8)    \\n\"",
          "227:                   \"       lea     1(%2),%2        \\n\"",
          "231:                   :\"r\"(rp), \"r\"(ap), \"r\"(bp)",
          "232:                   :\"cc\", \"memory\");",
          "",
          "[Removed Lines]",
          "228:                   \"       loop    1b              \\n\"",
          "229:                   \"       sbbq    %0,%0           \\n\":\"=&r\" (ret), \"+c\"(n),",
          "230:                   \"+r\"(i)",
          "",
          "[Added Lines]",
          "228:                   \"       dec     %1              \\n\"",
          "229:                   \"       jnz     1b              \\n\"",
          "230:                   \"       sbbq    %0,%0           \\n\"",
          "231:                   :\"=&r\" (ret), \"+c\"(n), \"+r\"(i)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "251:                   \"       sbbq    (%5,%2,8),%0    \\n\"",
          "252:                   \"       movq    %0,(%3,%2,8)    \\n\"",
          "253:                   \"       lea     1(%2),%2        \\n\"",
          "257:                   :\"r\"(rp), \"r\"(ap), \"r\"(bp)",
          "258:                   :\"cc\", \"memory\");",
          "",
          "[Removed Lines]",
          "254:                   \"       loop    1b              \\n\"",
          "255:                   \"       sbbq    %0,%0           \\n\":\"=&r\" (ret), \"+c\"(n),",
          "256:                   \"+r\"(i)",
          "",
          "[Added Lines]",
          "255:                   \"       dec     %1              \\n\"",
          "256:                   \"       jnz     1b              \\n\"",
          "257:                   \"       sbbq    %0,%0           \\n\"",
          "258:                   :\"=&r\" (ret), \"+c\"(n), \"+r\"(i)",
          "",
          "---------------"
        ],
        "crypto/bn/bn_add.c||crypto/bn/bn_add.c": [
          "File: crypto/bn/bn_add.c -> crypto/bn/bn_add.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:         borrow &= (t1 == 0);",
          "142:     }",
          "144:     r->top = max;",
          "145:     r->neg = 0;",
          "147:     return 1;",
          "148: }",
          "",
          "[Removed Lines]",
          "146:     bn_correct_top(r);",
          "",
          "[Added Lines]",
          "144:     while (max && *--rp == 0)",
          "145:         max--;",
          "149:     bn_pollute(r);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9ddcd7aa6ed7cb4d8b165895339ca66170f2da5",
      "candidate_info": {
        "commit_hash": "b9ddcd7aa6ed7cb4d8b165895339ca66170f2da5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b9ddcd7aa6ed7cb4d8b165895339ca66170f2da5",
        "files": [
          "test/build.info",
          "test/fatalerrtest.c",
          "test/recipes/90-test_fatalerr.t"
        ],
        "message": "Add a test for CVE-2017-3737\n\nTest reading/writing to an SSL object after a fatal error has been\ndetected. This CVE only affected 1.0.2, but we should add it to other\nbranches for completeness.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "test/build.info||test/build.info",
          "test/fatalerrtest.c||test/fatalerrtest.c",
          "test/recipes/90-test_fatalerr.t||test/recipes/90-test_fatalerr.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:           packettest asynctest secmemtest srptest memleaktest \\",
          "17:           dtlsv1listentest ct_test threadstest afalgtest d2i_test \\",
          "18:           ssl_test_ctx_test ssl_test x509aux cipherlist_test asynciotest \\",
          "21:   SOURCE[aborttest]=aborttest.c",
          "22:   INCLUDE[aborttest]=../include",
          "",
          "[Removed Lines]",
          "19:           bioprinttest sslapitest dtlstest sslcorrupttest bio_enc_test",
          "",
          "[Added Lines]",
          "19:           bioprinttest sslapitest dtlstest sslcorrupttest bio_enc_test \\",
          "20:           fatalerrtest",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "146:   INCLUDE[rsa_test]=.. ../include",
          "147:   DEPEND[rsa_test]=../libcrypto",
          "149:   SOURCE[evp_test]=evp_test.c",
          "150:   INCLUDE[evp_test]=../include",
          "151:   DEPEND[evp_test]=../libcrypto",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150:   SOURCE[fatalerrtest]=fatalerrtest.c ssltestlib.c testutil.c",
          "151:   INCLUDE[fatalerrtest]=../include ..",
          "152:   DEPEND[fatalerrtest]=../libcrypto ../libssl",
          "",
          "---------------"
        ],
        "test/fatalerrtest.c||test/fatalerrtest.c": [
          "File: test/fatalerrtest.c -> test/fatalerrtest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: #include <openssl/ssl.h>",
          "11: #include <openssl/err.h>",
          "12: #include \"ssltestlib.h\"",
          "13: #include \"testutil.h\"",
          "14: #include <string.h>",
          "16: static char *cert = NULL;",
          "17: static char *privkey = NULL;",
          "19: static int test_fatalerr(void)",
          "20: {",
          "21:     SSL_CTX *sctx = NULL, *cctx = NULL;",
          "22:     SSL *sssl = NULL, *cssl = NULL;",
          "23:     const char *msg = \"Dummy\";",
          "24:     BIO *wbio = NULL;",
          "25:     int ret = 0, len;",
          "26:     char buf[80];",
          "27:     unsigned char dummyrec[] = {",
          "28:         0x17, 0x03, 0x03, 0x00, 0x05, 'D', 'u', 'm', 'm', 'y'",
          "29:     };",
          "31:     if (!create_ssl_ctx_pair(SSLv23_method(), SSLv23_method(), &sctx, &cctx,",
          "32:                              cert, privkey)) {",
          "33:         printf(\"Failed to create SSL_CTX pair\\n\");",
          "34:         goto err;",
          "35:     }",
          "41:     if (!SSL_CTX_set_cipher_list(sctx, \"AES128-SHA\")",
          "42:             || !SSL_CTX_set_cipher_list(cctx, \"AES256-SHA\")) {",
          "43:         printf(\"Failed to set cipher lists\\n\");",
          "44:         goto err;",
          "45:     }",
          "47:     if (!create_ssl_objects(sctx, cctx, &sssl, &cssl, NULL, NULL)) {",
          "48:         printf(\"Failed to create SSL objectx\\n\");",
          "49:         goto err;",
          "50:     }",
          "52:     wbio = SSL_get_wbio(cssl);",
          "53:     if (wbio == NULL) {",
          "54:         printf(\"Unexpected NULL bio received\\n\");",
          "55:         goto err;",
          "56:     }",
          "58:     if (create_ssl_connection(sssl, cssl)) {",
          "59:         printf(\"Unexpected success creating a connection\\n\");",
          "60:         goto err;",
          "61:     }",
          "63:     ERR_clear_error();",
          "66:     if (BIO_write(wbio, dummyrec, sizeof(dummyrec)) <= 0) {",
          "67:         printf(\"Unexpected failure injecting dummy record\\n\");",
          "68:         goto err;",
          "69:     }",
          "72:     if ((len = SSL_read(sssl, buf, sizeof(buf - 1))) > 0) {",
          "73:         buf[len] = '\\0';",
          "74:         printf(\"Unexpected success reading data: %s\\n\", buf);",
          "75:         goto err;",
          "76:     }",
          "77:     if (SSL_write(sssl, msg, strlen(msg)) > 0) {",
          "78:         printf(\"Unexpected success writing data\\n\");",
          "79:         goto err;",
          "80:     }",
          "82:     ret = 1;",
          "83:  err:",
          "84:     SSL_free(sssl);",
          "85:     SSL_free(cssl);",
          "86:     SSL_CTX_free(sctx);",
          "87:     SSL_CTX_free(cctx);",
          "89:     return ret;",
          "90: }",
          "92: int main(int argc, char *argv[])",
          "93: {",
          "94:     BIO *err = NULL;",
          "95:     int testresult = 1;",
          "97:     if (argc != 3) {",
          "98:         printf(\"Invalid argument count\\n\");",
          "99:         return 1;",
          "100:     }",
          "102:     cert = argv[1];",
          "103:     privkey = argv[2];",
          "105:     err = BIO_new_fp(stderr, BIO_NOCLOSE | BIO_FP_TEXT);",
          "107:     CRYPTO_set_mem_debug(1);",
          "108:     CRYPTO_mem_ctrl(CRYPTO_MEM_CHECK_ON);",
          "110:     ADD_TEST(test_fatalerr);",
          "112:     testresult = run_tests(argv[0]);",
          "114: #ifndef OPENSSL_NO_CRYPTO_MDEBUG",
          "115:     if (CRYPTO_mem_leaks(err) <= 0)",
          "116:         testresult = 1;",
          "117: #endif",
          "118:     BIO_free(err);",
          "120:     if (!testresult)",
          "121:         printf(\"PASS\\n\");",
          "123:     return testresult;",
          "124: }",
          "",
          "---------------"
        ],
        "test/recipes/90-test_fatalerr.t||test/recipes/90-test_fatalerr.t": [
          "File: test/recipes/90-test_fatalerr.t -> test/recipes/90-test_fatalerr.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #! /usr/bin/env perl",
          "2: # Copyright 2016 The OpenSSL Project Authors. All Rights Reserved.",
          "3: #",
          "4: # Licensed under the OpenSSL license (the \"License\").  You may not use",
          "5: # this file except in compliance with the License.  You can obtain a copy",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "10: use OpenSSL::Test::Utils;",
          "11: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "13: setup(\"test_fatalerr\");",
          "15: plan skip_all => \"No TLS/SSL protocols are supported by this OpenSSL build\"",
          "16:     if alldisabled(grep { $_ ne \"ssl3\" } available_protocols(\"tls\"));",
          "18: plan tests => 1;",
          "20: ok(run(test([\"fatalerrtest\", srctop_file(\"apps\", \"server.pem\"),",
          "21:              srctop_file(\"apps\", \"server.pem\")])), \"running fatalerrtest\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}