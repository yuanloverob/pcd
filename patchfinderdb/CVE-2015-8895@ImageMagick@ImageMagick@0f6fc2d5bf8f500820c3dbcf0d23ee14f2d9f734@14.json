{
  "cve_id": "CVE-2015-8895",
  "cve_desc": "Integer overflow in coders/icon.c in ImageMagick 6.9.1-3 and later allows remote attackers to cause a denial of service (application crash) via a crafted length value, which triggers a buffer overflow.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
  "patch_info": {
    "commit_hash": "0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
    "files": [
      "MagickCore/memory.c",
      "MagickCore/studio.h",
      "MagickCore/version.c",
      "MagickCore/version.h",
      "MagickWand/studio.h",
      "coders/icon.c",
      "coders/pict.c",
      "configure",
      "configure.ac"
    ],
    "message": "",
    "before_after_code_files": [
      "MagickCore/memory.c||MagickCore/memory.c",
      "MagickCore/studio.h||MagickCore/studio.h",
      "MagickCore/version.c||MagickCore/version.c",
      "MagickCore/version.h||MagickCore/version.h",
      "MagickWand/studio.h||MagickWand/studio.h",
      "coders/icon.c||coders/icon.c",
      "coders/pict.c||coders/pict.c",
      "configure.ac||configure.ac"
    ]
  },
  "patch_diff": {
    "MagickCore/memory.c||MagickCore/memory.c": [
      "File: MagickCore/memory.c -> MagickCore/memory.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "606:     }",
      "607:   if ((memory_info->blob == NULL) &&",
      "608:       (AcquireMagickResource(MapResource,length) != MagickFalse))",
      "611:         Heap memory failed, try anonymous memory mapping.",
      "",
      "[Removed Lines]",
      "609:     {",
      "",
      "[Added Lines]",
      "609:     {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "615:         memory_info->type=MapVirtualMemory;",
      "616:       else",
      "617:         RelinquishMagickResource(MapResource,length);",
      "619:   if (memory_info->blob == NULL)",
      "621:       int",
      "627:       file=AcquireUniqueFileResource(memory_info->filename);",
      "628:       if (file != -1)",
      "629:         {",
      "",
      "[Removed Lines]",
      "618:     }",
      "620:     {",
      "622:         file;",
      "625:         Anonymous memory mapping failed, try file-backed memory mapping.",
      "",
      "[Added Lines]",
      "619:   if ((memory_info->blob == NULL) &&",
      "620:       (AcquireMagickResource(DiskResource,length) != MagickFalse))",
      "621:     {",
      "623:         file;",
      "628:       file=AcquireUniqueFileResource(memory_info->filename);",
      "629:       if (file == -1)",
      "631:       else",
      "632:         {",
      "633:           if ((lseek(file,length-1,SEEK_SET) < 0) || (write(file,\"\",1) != 1))",
      "634:             RelinquishMagickResource(DiskResource,length);",
      "635:           else",
      "636:             {",
      "637:               if (AcquireMagickResource(MapResource,length) == MagickFalse)",
      "638:                 RelinquishMagickResource(DiskResource,length);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1033: %",
      "1035: MagickExport MemoryInfo *RelinquishVirtualMemory(MemoryInfo *memory_info)",
      "1037:   assert(memory_info != (MemoryInfo *) NULL);",
      "1038:   assert(memory_info->signature == MagickSignature);",
      "1039:   if (memory_info->blob != (void *) NULL)",
      "",
      "[Removed Lines]",
      "1036: {",
      "",
      "[Added Lines]",
      "1048: {",
      "1049:   assert(memory_info != (MemoryInfo *) NULL);",
      "1050:   assert(memory_info->signature == MagickSignature);",
      "1051:   if (memory_info->blob != (void *) NULL)",
      "",
      "---------------"
    ],
    "MagickCore/studio.h||MagickCore/studio.h": [
      "File: MagickCore/studio.h -> MagickCore/studio.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "46: #if defined(_magickcore_inline) && !defined(inline)",
      "47: # define inline  _magickcore_inline",
      "48: #endif",
      "52: # if defined(__cplusplus) || defined(c_plusplus)",
      "53: #  undef inline",
      "54: # endif",
      "",
      "[Removed Lines]",
      "49: #if defined(_magickcore_restrict) && !defined(restrict)",
      "50: # define restrict  _magickcore_restrict",
      "51: #endif",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75: #  include <stdlib.h>",
      "76: # endif",
      "77: #endif",
      "78: #if defined(MAGICKCORE_HAVE_STRING_H)",
      "79: # if !defined(STDC_HEADERS) && defined(MAGICKCORE_HAVE_MEMORY_H)",
      "80: #  include <memory.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "75: #if defined(_magickcore_restrict) && !defined(restrict)",
      "76: # define restrict  _magickcore_restrict",
      "77: #endif",
      "",
      "---------------"
    ],
    "MagickCore/version.c||MagickCore/version.c": [
      "File: MagickCore/version.c -> MagickCore/version.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "219: %      const char *GetMagickFeatures(void)",
      "220: %",
      "221: %  No parameters are required.",
      "224: MagickExport const char *GetMagickFeatures(void)",
      "225: {",
      "226:   return \"DPC\"",
      "227: #if defined(MAGICKCORE_BUILD_MODULES) || defined(_DLL)",
      "228:   \" Modules\"",
      "229: #endif",
      "230: #if defined(MAGICKCORE_HDRI_SUPPORT)",
      "231:   \" HDRI\"",
      "232: #endif",
      "233: #if defined(MAGICKCORE_OPENCL_SUPPORT)",
      "234:   \" OpenCL\"",
      "235: #endif",
      "",
      "[Removed Lines]",
      "222: %",
      "",
      "[Added Lines]",
      "222: %",
      "224: MagickExport const char *GetMagickFeatures(void)",
      "225: {",
      "226:   return \"DPC\"",
      "231:   \" Cipher\"",
      "232: #endif",
      "233: #if defined(MAGICKCORE_HDRI_SUPPORT)",
      "239: #if defined(MAGICKCORE_OPENCL_SUPPORT)",
      "240:   \" OpenCL\"",
      "241: #endif",
      "",
      "---------------"
    ],
    "MagickCore/version.h||MagickCore/version.h": [
      "File: MagickCore/version.h -> MagickCore/version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: #define MagickPackageName \"ImageMagick\"",
      "29: #define MagickCopyright  \"Copyright (C) 1999-2015 ImageMagick Studio LLC\"",
      "31: #define MagickLibVersion  0x700",
      "32: #define MagickLibVersionText  \"7.0.0\"",
      "33: #define MagickLibVersionNumber  0,0,0",
      "",
      "[Removed Lines]",
      "30: #define MagickSVNRevision  \"18658:18662M\"",
      "",
      "[Added Lines]",
      "30: #define MagickSVNRevision  \"18670M\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "48: #define MagickppLibAddendum  \"-0\"",
      "49: #define MagickppLibInterface  0",
      "50: #define MagickppLibMinInterface  0",
      "52: #define MagickChangeDate   \"20120427\"",
      "53: #define MagickAuthoritativeLicense  \\",
      "54:   \"http://www.imagemagick.org/script/license.php\"",
      "55: #define MagickAuthoritativeURL  \"http://www.imagemagick.org\"",
      "57: #define MagickDelegates \"bzlib djvu mpeg fftw fpx fontconfig freetype jbig jng jpeg lcms lzma openexr pango png ps tiff webp x xml zlib\"",
      "58: #define MagickHomeURL  \"file:///usr/local/share/doc/ImageMagick-7/index.html\"",
      "59: #if (MAGICKCORE_QUANTUM_DEPTH == 8)",
      "",
      "[Removed Lines]",
      "51: #define MagickReleaseDate  \"2015-05-26\"",
      "56: #define MagickFeatures \"DPC HDRI OpenMP\"",
      "",
      "[Added Lines]",
      "51: #define MagickReleaseDate  \"2015-05-29\"",
      "56: #define MagickFeatures \"DPC HDRI Cipher OpenMP\"",
      "",
      "---------------"
    ],
    "MagickWand/studio.h||MagickWand/studio.h": [
      "File: MagickWand/studio.h -> MagickWand/studio.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "46: #if defined(_magickcore_inline) && !defined(inline)",
      "47: # define inline _magickcore_inline",
      "48: #endif",
      "52: # if defined(__cplusplus) || defined(c_plusplus)",
      "53: #  undef inline",
      "54: # endif",
      "",
      "[Removed Lines]",
      "49: #if defined(_magickcore_restrict) && !defined(restrict)",
      "50: # define restrict  _magickcore_restrict",
      "51: #endif",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: #  include <stdlib.h>",
      "78: # endif",
      "79: #endif",
      "80: #if defined(MAGICKCORE_HAVE_STRING_H)",
      "81: # if !defined(STDC_HEADERS) && defined(MAGICKCORE_HAVE_MEMORY_H)",
      "82: #  include <memory.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "77: #if defined(_magickcore_restrict) && !defined(restrict)",
      "78: # define restrict  _magickcore_restrict",
      "79: #endif",
      "",
      "---------------"
    ],
    "coders/icon.c||coders/icon.c": [
      "File: coders/icon.c -> coders/icon.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "183:     size_t",
      "184:       size;",
      "189:     size=(size_t)strtol(p,&q,10);",
      "190:     if (p == q || size < 16 || size > 256)",
      "",
      "[Removed Lines]",
      "186:     while ((isspace((int) ((unsigned char) *p)) != 0))",
      "187:       p++;",
      "",
      "[Added Lines]",
      "186:     while ((isspace((int) ((unsigned char) *p)) != 0))",
      "187:       p++;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "355:         unsigned char",
      "359:           Icon image encoded as a compressed PNG image.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "coders/pict.c||coders/pict.c": [
      "File: coders/pict.c -> coders/pict.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1637:     source_rectangle;",
      "1639:   register const Quantum",
      "1642:   register ssize_t",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1649:     storage_class;",
      "1651:   ssize_t",
      "1654:   unsigned char",
      "",
      "[Removed Lines]",
      "1652:     y;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1682:     Initialize image info.",
      "1685:   size_rectangle.left=0;",
      "1686:   size_rectangle.bottom=(short) image->rows;",
      "1687:   size_rectangle.right=(short) image->columns;",
      "",
      "[Removed Lines]",
      "1684:   size_rectangle.top=0;",
      "",
      "[Added Lines]",
      "1684:   size_rectangle.top=0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1711:   y_resolution=image->resolution.y != 0.0 ? image->resolution.y :",
      "1712:     DefaultResolution;",
      "1713:   storage_class=image->storage_class;",
      "1715:     storage_class=DirectClass;",
      "1716:   if (storage_class == DirectClass)",
      "1717:     {",
      "",
      "[Removed Lines]",
      "1714:   if (image_info->compression == JPEGCompression)",
      "",
      "[Added Lines]",
      "1714:   if (image_info->compression == JPEGCompression)",
      "",
      "---------------"
    ],
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "643: if test \"$enable_cipher\" = 'yes'; then",
      "644:     AC_DEFINE(CIPHER_SUPPORT,1,[permit enciphering and deciphering image pixels])",
      "645: fi",
      "647: # Build a zero-configuration version of ImageMagick.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "645:     MAGICK_FEATURES=\"Cipher $MAGICK_FEATURES\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "654: if test \"$enable_zero_configuration\" = 'yes'; then",
      "655:     AC_DEFINE(ZERO_CONFIGURATION_SUPPORT,1,[Build self-contained, embeddable, zero-configuration ImageMagick])",
      "657: fi",
      "659: # Build a high dynamic range version of ImageMagick.",
      "",
      "[Removed Lines]",
      "656:     MAGICK_FEATURES=\"Zero-Configuration $MAGICK_FEATURES\"",
      "",
      "[Added Lines]",
      "657:     MAGICK_FEATURES=\"Zero-configuration $MAGICK_FEATURES\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3996: if test \"$build_modules\" != 'no'; then",
      "3997:     MAGICK_DEP_LIBS=\"$USER_LIBS $LCMS_LIBS $FREETYPE_LIBS $LQR_LIBS $FFTW_LIBS $FONTCONFIG_LIBS $XEXT_LIBS $IPC_LIBS $X11_LIBS $XT_LIBS $LZMA_LIBS $BZLIB_LIBS $ZLIB_LIBS $LTDL_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
      "3998: else",
      "4000: fi",
      "4001: AC_SUBST(MAGICK_DEP_LIBS)",
      "",
      "[Removed Lines]",
      "3999:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $OPENJPEG_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
      "",
      "[Added Lines]",
      "4000:     MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIB $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "058d15f1f431fc05fdb549e24c46a6972850ce87",
      "candidate_info": {
        "commit_hash": "058d15f1f431fc05fdb549e24c46a6972850ce87",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/058d15f1f431fc05fdb549e24c46a6972850ce87",
        "files": [
          "MagickCore/version.h",
          "configure",
          "configure.ac"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/version.h||MagickCore/version.h",
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h",
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h",
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2014 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  1,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"16339:16340M\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"16339:16343M\"",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3267: AC_PATH_PROG(MANDelegate, \"$MANDelegateDefault\", \"$MANDelegateDefault\")",
          "3268: AC_PATH_PROG(MogrifyDelegate, \"$MogrifyDelegateDefault\", \"$MogrifyDelegateDefault\")",
          "3269: AC_PATH_PROG(MPEGDecodeDelegate, \"$MPEGDecodeDelegateDefault\", \"$MPEGDecodeDelegateDefault\")",
          "3271:   MPEGDecodeDelegateDefault='ffmpeg'",
          "3272:   AC_PATH_PROG(MPEGDecodeDelegate, \"$MPEGDecodeDelegateDefault\", \"$MPEGDecodeDelegateDefault\")",
          "3273: fi;",
          "3274: AC_PATH_PROG(MPEGEncodeDelegate, \"$MPEGEncodeDelegateDefault\", \"$MPEGEncodeDelegateDefault\")",
          "3276:   MPEGEncodeDelegateDefault='ffmpeg'",
          "3277:   AC_PATH_PROG(MPEGEncodeDelegate, \"$MPEGEncodeDelegateDefault\", \"$MPEGEncodeDelegateDefault\")",
          "3278: fi;",
          "",
          "[Removed Lines]",
          "3270: if test \"$MPEGDecodeDelegate\" == \"$MPEGDecodeDelegateDefault\" ; then",
          "3275: if test \"$MPEGEncodeDelegate\" == \"$MPEGEncodeDelegateDefault\" ; then",
          "",
          "[Added Lines]",
          "3270: if test \"$MPEGDecodeDelegate\" = \"$MPEGDecodeDelegateDefault\" ; then",
          "3275: if test \"$MPEGEncodeDelegate\" = \"$MPEGEncodeDelegateDefault\" ; then",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "17491be31b9bc274e26bac55802194f9e529a5a4",
      "candidate_info": {
        "commit_hash": "17491be31b9bc274e26bac55802194f9e529a5a4",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/17491be31b9bc274e26bac55802194f9e529a5a4",
        "files": [
          "Magick++/Makefile.am",
          "MagickCore/version.h",
          "Makefile.in",
          "PerlMagick/Makefile.PL",
          "aclocal.m4",
          "configure",
          "m4/Makefile.am",
          "m4/ax_append_flag.m4",
          "m4/ax_cflags_warn_all.m4",
          "m4/ax_check_compile_flag.m4",
          "m4/ax_compiler_vendor.m4",
          "m4/ax_cxx_namespaces.m4",
          "m4/ax_gcc_archflag.m4",
          "m4/ax_prefix_config_h.m4",
          "m4/ax_prog_perl_version.m4",
          "m4/ax_pthread.m4"
        ],
        "message": "",
        "before_after_code_files": [
          "Magick++/Makefile.am||Magick++/Makefile.am",
          "MagickCore/version.h||MagickCore/version.h",
          "Makefile.in||Makefile.in",
          "PerlMagick/Makefile.PL||PerlMagick/Makefile.PL",
          "aclocal.m4||aclocal.m4",
          "m4/Makefile.am||m4/Makefile.am",
          "m4/ax_append_flag.m4||m4/ax_append_flag.m4",
          "m4/ax_cflags_warn_all.m4||m4/ax_cflags_warn_all.m4",
          "m4/ax_check_compile_flag.m4||m4/ax_check_compile_flag.m4",
          "m4/ax_compiler_vendor.m4||m4/ax_compiler_vendor.m4",
          "m4/ax_cxx_namespaces.m4||m4/ax_cxx_namespaces.m4",
          "m4/ax_gcc_archflag.m4||m4/ax_gcc_archflag.m4",
          "m4/ax_prefix_config_h.m4||m4/ax_prefix_config_h.m4",
          "m4/ax_prog_perl_version.m4||m4/ax_prog_perl_version.m4",
          "m4/ax_pthread.m4||m4/ax_pthread.m4"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h"
          ]
        }
      },
      "candidate_diff": {
        "Magick++/Makefile.am||Magick++/Makefile.am": [
          "File: Magick++/Makefile.am -> Magick++/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:  Magick++/lib/Magick++/Thread.h \\",
          "111:  Magick++/lib/Magick++/TypeMetric.h",
          "116: magickpptopincdir = $(INCLUDE_PATH)",
          "",
          "[Removed Lines]",
          "113: Magick___lib_libMagick___@MAGICK_MAJOR_VERSION@_@MAGICK_ABI_SUFFIX@_la_CPPFLAGS = \\",
          "114:  $(MAGICKPP_CPPFLAGS)",
          "",
          "[Added Lines]",
          "113: Magick___lib_libMagick___@MAGICK_MAJOR_VERSION@_@MAGICK_ABI_SUFFIX@_la_CPPFLAGS = \\",
          "114:  $(MAGICKPP_CPPFLAGS) $(LIBRARY_EXTRA_CPPFLAGS)",
          "",
          "---------------"
        ],
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2014 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  1,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"16049M\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"16049:16055M\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: #define MagickppLibAddendum  \"-0\"",
          "49: #define MagickppLibInterface  1",
          "50: #define MagickppLibMinInterface  1",
          "52: #define MagickChangeDate   \"20120427\"",
          "53: #define MagickAuthoritativeURL  \"http://www.imagemagick.org\"",
          "54: #define MagickFeatures \"DPC HDRI OpenMP\"",
          "",
          "[Removed Lines]",
          "51: #define MagickReleaseDate  \"2014-06-22\"",
          "",
          "[Added Lines]",
          "51: #define MagickReleaseDate  \"2014-06-23\"",
          "",
          "---------------"
        ],
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "309: subdir = .",
          "310: ACLOCAL_M4 = $(top_srcdir)/aclocal.m4",
          "311: am__aclocal_m4_deps = $(top_srcdir)/m4/ac_func_fseeko.m4 \\",
          "312:  $(top_srcdir)/m4/ax_c___attribute__.m4 \\",
          "313:  $(top_srcdir)/m4/ax_cflags_warn_all.m4 \\",
          "314:  $(top_srcdir)/m4/ax_check_compile_flag.m4 \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "312:  $(top_srcdir)/m4/ax_append_flag.m4 \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "324:  $(top_srcdir)/m4/ax_prefix_config_h.m4 \\",
          "325:  $(top_srcdir)/m4/ax_prog_perl_version.m4 \\",
          "326:  $(top_srcdir)/m4/ax_pthread.m4 \\",
          "327:  $(top_srcdir)/m4/cxx_have_std_libs.m4 \\",
          "328:  $(top_srcdir)/m4/framework.m4 \\",
          "329:  $(top_srcdir)/m4/ld-version-script.m4 \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "328:  $(top_srcdir)/m4/ax_require_defined.m4 \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2995: MOSTLYCLEANFILES =",
          "2996: M4_EXTRA_DIST = \\",
          "2997:  ac_func_fseeko.m4  \\",
          "2998:  ax_c___attribute__.m4  \\",
          "2999:  ax_cflags_warn_all.m4  \\",
          "3000:  ax_compare_version.m4  \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3000:  ax_append_flag.m4 \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3006:  ax_prefix_config_h.m4  \\",
          "3007:  ax_prog_perl_version.m4  \\",
          "3008:  ax_pthread.m4  \\",
          "3009:  cxx_have_lstring.m4  \\",
          "3010:  cxx_have_std_libs.m4  \\",
          "3011:  framework.m4  \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3012:  ax_require_defined.m4 \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4791:  Magick++/lib/Magick++/TypeMetric.h",
          "4793: Magick___lib_libMagick___@MAGICK_MAJOR_VERSION@_@MAGICK_ABI_SUFFIX@_la_CPPFLAGS = \\",
          "4796: magickpptopincdir = $(INCLUDE_PATH)",
          "4797: magickpptopinc_HEADERS = $(MAGICKPP_TOP_INCHEADERS)",
          "",
          "[Removed Lines]",
          "4794:  $(MAGICKPP_CPPFLAGS)",
          "",
          "[Added Lines]",
          "4798:  $(MAGICKPP_CPPFLAGS) $(LIBRARY_EXTRA_CPPFLAGS)",
          "",
          "---------------"
        ],
        "PerlMagick/Makefile.PL||PerlMagick/Makefile.PL": [
          "File: PerlMagick/Makefile.PL -> PerlMagick/Makefile.PL",
          "--- Hunk 1 ---",
          "[Context before]",
          "163: # defaults for LIBS & INC & CCFLAGS params that we later pass to Writemakefile",
          "164: my $INC_magick = '-I../ -I.. -pthread -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/libpng16 -I/usr/include/freetype2 -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16 -I/usr/include/libxml2 -I\"' . $Config{'usrinc'} . '/ImageMagick\"';",
          "165: my $LIBS_magick = '-L../MagickCore/.libs -lMagickCore-7.Q16HDRI -lperl -lm';",
          "167: my $LDFLAGS_magick   = \"-L../MagickCore/.libs -lMagickCore-7.Q16HDRI $Config{'ldflags'} \";",
          "168: my $LDDLFLAGS_magick = \"-L../MagickCore/.libs -lMagickCore-7.Q16HDRI $Config{'lddlflags'} \";",
          "",
          "[Removed Lines]",
          "166: my $CCFLAGS_magick = \"$Config{'ccflags'} -pthread -I/usr/include/OpenEXR -I/usr/include/libdrm -I/usr/include/freetype2 -fopenmp -g -O2 -Wall -fexceptions -pthread -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16\";",
          "",
          "[Added Lines]",
          "166: my $CCFLAGS_magick = \"$Config{'ccflags'} -pthread -I/usr/include/OpenEXR -I/usr/include/libdrm -I/usr/include/freetype2 -fopenmp -g -O2 -Wall -march=corei7-avx -fexceptions -pthread -DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16\";",
          "",
          "---------------"
        ],
        "aclocal.m4||aclocal.m4": [
          "File: aclocal.m4 -> aclocal.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1321: ]) # _AM_PROG_TAR",
          "1323: m4_include([m4/ac_func_fseeko.m4])",
          "1324: m4_include([m4/ax_c___attribute__.m4])",
          "1325: m4_include([m4/ax_cflags_warn_all.m4])",
          "1326: m4_include([m4/ax_check_compile_flag.m4])",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1324: m4_include([m4/ax_append_flag.m4])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1336: m4_include([m4/ax_prefix_config_h.m4])",
          "1337: m4_include([m4/ax_prog_perl_version.m4])",
          "1338: m4_include([m4/ax_pthread.m4])",
          "1339: m4_include([m4/cxx_have_std_libs.m4])",
          "1340: m4_include([m4/framework.m4])",
          "1341: m4_include([m4/ld-version-script.m4])",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1340: m4_include([m4/ax_require_defined.m4])",
          "",
          "---------------"
        ],
        "m4/Makefile.am||m4/Makefile.am": [
          "File: m4/Makefile.am -> m4/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: M4_EXTRA_DIST =  \\",
          "18:  ac_func_fseeko.m4  \\",
          "19:  ax_c___attribute__.m4  \\",
          "20:  ax_cflags_warn_all.m4  \\",
          "21:  ax_compare_version.m4  \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:  ax_append_flag.m4 \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:  ax_prefix_config_h.m4  \\",
          "28:  ax_prog_perl_version.m4  \\",
          "29:  ax_pthread.m4  \\",
          "30:  cxx_have_lstring.m4  \\",
          "31:  cxx_have_std_libs.m4  \\",
          "32:  framework.m4  \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:  ax_require_defined.m4 \\",
          "",
          "---------------"
        ],
        "m4/ax_append_flag.m4||m4/ax_append_flag.m4": [
          "File: m4/ax_append_flag.m4 -> m4/ax_append_flag.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # ===========================================================================",
          "2: #      http://www.gnu.org/software/autoconf-archive/ax_append_flag.html",
          "3: # ===========================================================================",
          "4: #",
          "5: # SYNOPSIS",
          "6: #",
          "7: #   AX_APPEND_FLAG(FLAG, [FLAGS-VARIABLE])",
          "8: #",
          "9: # DESCRIPTION",
          "10: #",
          "11: #   FLAG is appended to the FLAGS-VARIABLE shell variable, with a space",
          "12: #   added in between.",
          "13: #",
          "14: #   If FLAGS-VARIABLE is not specified, the current language's flags (e.g.",
          "15: #   CFLAGS) is used.  FLAGS-VARIABLE is not changed if it already contains",
          "16: #   FLAG.  If FLAGS-VARIABLE is unset in the shell, it is set to exactly",
          "17: #   FLAG.",
          "18: #",
          "19: #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION.",
          "20: #",
          "21: # LICENSE",
          "22: #",
          "23: #   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>",
          "24: #   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>",
          "25: #",
          "26: #   This program is free software: you can redistribute it and/or modify it",
          "27: #   under the terms of the GNU General Public License as published by the",
          "28: #   Free Software Foundation, either version 3 of the License, or (at your",
          "29: #   option) any later version.",
          "30: #",
          "31: #   This program is distributed in the hope that it will be useful, but",
          "32: #   WITHOUT ANY WARRANTY; without even the implied warranty of",
          "33: #   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General",
          "34: #   Public License for more details.",
          "35: #",
          "36: #   You should have received a copy of the GNU General Public License along",
          "37: #   with this program. If not, see <http://www.gnu.org/licenses/>.",
          "38: #",
          "39: #   As a special exception, the respective Autoconf Macro's copyright owner",
          "40: #   gives unlimited permission to copy, distribute and modify the configure",
          "41: #   scripts that are the output of Autoconf when processing the Macro. You",
          "42: #   need not follow the terms of the GNU General Public License when using",
          "43: #   or distributing such scripts, even though portions of the text of the",
          "44: #   Macro appear in them. The GNU General Public License (GPL) does govern",
          "45: #   all other use of the material that constitutes the Autoconf Macro.",
          "46: #",
          "47: #   This special exception to the GPL applies to versions of the Autoconf",
          "48: #   Macro released by the Autoconf Archive. When you make and distribute a",
          "49: #   modified version of the Autoconf Macro, you may extend this special",
          "50: #   exception to the GPL to apply to your modified version as well.",
          "52: #serial 2",
          "54: AC_DEFUN([AX_APPEND_FLAG],",
          "55: [AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX",
          "56: AS_VAR_PUSHDEF([FLAGS], [m4_default($2,_AC_LANG_PREFIX[FLAGS])])dnl",
          "57: AS_VAR_SET_IF(FLAGS,",
          "58:   [case \" AS_VAR_GET(FLAGS) \" in",
          "60:       AC_RUN_LOG([: FLAGS already contains $1])",
          "61:       ;;",
          "63:       AC_RUN_LOG([: FLAGS=\"$FLAGS $1\"])",
          "64:       AS_VAR_SET(FLAGS, [\"AS_VAR_GET(FLAGS) $1\"])",
          "65:       ;;",
          "66:    esac],",
          "67:   [AS_VAR_SET(FLAGS,[\"$1\"])])",
          "68: AS_VAR_POPDEF([FLAGS])dnl",
          "69: ])dnl AX_APPEND_FLAG",
          "",
          "---------------"
        ],
        "m4/ax_cflags_warn_all.m4||m4/ax_cflags_warn_all.m4": [
          "File: m4/ax_cflags_warn_all.m4 -> m4/ax_cflags_warn_all.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #    - $3 action-if-found : add value to shellvariable",
          "26: #    - $4 action-if-not-found : nothing",
          "27: #",
          "28: # LICENSE",
          "29: #",
          "30: #   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #   NOTE: These macros depend on AX_APPEND_FLAG.",
          "29: #",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56: #   modified version of the Autoconf Macro, you may extend this special",
          "57: #   exception to the GPL to apply to your modified version as well.",
          "64: AC_CACHE_CHECK([m4_ifval($1,$1,FLAGS) for maximum warnings],",
          "65: VAR,[VAR=\"no, unknown\"",
          "152: for ac_arg dnl",
          "153: in \"-warn all  % -warn all\"   dnl Intel",
          "154:    \"-pedantic  % -Wall\"       dnl GCC",
          "",
          "[Removed Lines]",
          "59: #serial 10",
          "61: AC_DEFUN([AX_CFLAGS_WARN_ALL],[dnl",
          "62: AS_VAR_PUSHDEF([FLAGS],[CFLAGS])dnl",
          "63: AS_VAR_PUSHDEF([VAR],[ac_cv_cflags_warn_all])dnl",
          "66:  AC_LANG_PUSH([C])",
          "67:  ac_save_[]FLAGS=\"$[]FLAGS\"",
          "68: for ac_arg dnl",
          "69: in \"-pedantic  % -Wall\"       dnl   GCC",
          "70:    \"-xstrconst % -v\"          dnl Solaris C",
          "71:    \"-std1      % -verbose -w0 -warnprotos\" dnl Digital Unix",
          "72:    \"-qlanglvl=ansi % -qsrcmsg -qinfo=all:noppt:noppc:noobs:nocnd\" dnl AIX",
          "73:    \"-ansi -ansiE % -fullwarn\" dnl IRIX",
          "74:    \"+ESlit     % +w1\"         dnl HP-UX C",
          "75:    \"-Xc        % -pvctl[,]fullmsg\" dnl NEC SX-5 (Super-UX 10)",
          "76:    \"-h conform % -h msglevel 2\" dnl Cray C (Unicos)",
          "77:    #",
          "78: do FLAGS=\"$ac_save_[]FLAGS \"`echo $ac_arg | sed -e 's,%%.*,,' -e 's,%,,'`",
          "79:    AC_COMPILE_IFELSE([AC_LANG_PROGRAM],",
          "80:                      [VAR=`echo $ac_arg | sed -e 's,.*% *,,'` ; break])",
          "81: done",
          "82:  FLAGS=\"$ac_save_[]FLAGS\"",
          "83:  AC_LANG_POP([C])",
          "84: ])",
          "85: case \".$VAR\" in",
          "86:      .ok|.ok,*) m4_ifvaln($3,$3) ;;",
          "87:    .|.no|.no,*) m4_ifvaln($4,$4,[m4_ifval($2,[",
          "88:         AC_RUN_LOG([: m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $2\"])",
          "89:                       m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $2\"])]) ;;",
          "91:    if echo \" $[]m4_ifval($1,$1,FLAGS) \" | grep \" $VAR \" 2>&1 >/dev/null",
          "92:    then AC_RUN_LOG([: m4_ifval($1,$1,FLAGS) does contain $VAR])",
          "93:    else AC_RUN_LOG([: m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $VAR\"])",
          "94:                       m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $VAR\"",
          "95:    fi ]) ;;",
          "96: esac",
          "97: AS_VAR_POPDEF([VAR])dnl",
          "98: AS_VAR_POPDEF([FLAGS])dnl",
          "99: ])",
          "101: dnl the only difference - the LANG selection... and the default FLAGS",
          "103: AC_DEFUN([AX_CXXFLAGS_WARN_ALL],[dnl",
          "104: AS_VAR_PUSHDEF([FLAGS],[CXXFLAGS])dnl",
          "105: AS_VAR_PUSHDEF([VAR],[ax_cv_cxxflags_warn_all])dnl",
          "106: AC_CACHE_CHECK([m4_ifval($1,$1,FLAGS) for maximum warnings],",
          "107: VAR,[VAR=\"no, unknown\"",
          "108:  AC_LANG_PUSH([C++])",
          "109:  ac_save_[]FLAGS=\"$[]FLAGS\"",
          "110: for ac_arg dnl",
          "111: in \"-pedantic  % -Wall\"       dnl   GCC",
          "112:    \"-xstrconst % -v\"          dnl Solaris C",
          "113:    \"-std1      % -verbose -w0 -warnprotos\" dnl Digital Unix",
          "114:    \"-qlanglvl=ansi % -qsrcmsg -qinfo=all:noppt:noppc:noobs:nocnd\" dnl AIX",
          "115:    \"-ansi -ansiE % -fullwarn\" dnl IRIX",
          "116:    \"+ESlit     % +w1\"         dnl HP-UX C",
          "117:    \"-Xc        % -pvctl[,]fullmsg\" dnl NEC SX-5 (Super-UX 10)",
          "118:    \"-h conform % -h msglevel 2\" dnl Cray C (Unicos)",
          "119:    #",
          "120: do FLAGS=\"$ac_save_[]FLAGS \"`echo $ac_arg | sed -e 's,%%.*,,' -e 's,%,,'`",
          "121:    AC_COMPILE_IFELSE([AC_LANG_PROGRAM],",
          "122:                      [VAR=`echo $ac_arg | sed -e 's,.*% *,,'` ; break])",
          "123: done",
          "124:  FLAGS=\"$ac_save_[]FLAGS\"",
          "125:  AC_LANG_POP([C++])",
          "126: ])",
          "127: case \".$VAR\" in",
          "128:      .ok|.ok,*) m4_ifvaln($3,$3) ;;",
          "129:    .|.no|.no,*) m4_ifvaln($4,$4,[m4_ifval($2,[",
          "130:         AC_RUN_LOG([: m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $2\"])",
          "131:                       m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $2\"])]) ;;",
          "133:    if echo \" $[]m4_ifval($1,$1,FLAGS) \" | grep \" $VAR \" 2>&1 >/dev/null",
          "134:    then AC_RUN_LOG([: m4_ifval($1,$1,FLAGS) does contain $VAR])",
          "135:    else AC_RUN_LOG([: m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $VAR\"])",
          "136:                       m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $VAR\"",
          "137:    fi ]) ;;",
          "138: esac",
          "139: AS_VAR_POPDEF([VAR])dnl",
          "140: AS_VAR_POPDEF([FLAGS])dnl",
          "141: ])",
          "143: dnl the only difference - the LANG selection... and the default FLAGS",
          "145: AC_DEFUN([AX_FCFLAGS_WARN_ALL],[dnl",
          "146: AS_VAR_PUSHDEF([FLAGS],[FCFLAGS])dnl",
          "147: AS_VAR_PUSHDEF([VAR],[ax_cv_fcflags_warn_all])dnl",
          "148: AC_CACHE_CHECK([m4_ifval($1,$1,FLAGS) for maximum warnings],",
          "149: VAR,[VAR=\"no, unknown\"",
          "150:  AC_LANG_PUSH([Fortran])",
          "151:  ac_save_[]FLAGS=\"$[]FLAGS\"",
          "",
          "[Added Lines]",
          "61: #serial 15",
          "63: AC_DEFUN([AX_FLAGS_WARN_ALL],[dnl",
          "64: AS_VAR_PUSHDEF([FLAGS],[_AC_LANG_PREFIX[]FLAGS])dnl",
          "65: AS_VAR_PUSHDEF([VAR],[ac_cv_[]_AC_LANG_ABBREV[]flags_warn_all])dnl",
          "68: ac_save_[]FLAGS=\"$[]FLAGS\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "164:    AC_COMPILE_IFELSE([AC_LANG_PROGRAM],",
          "165:                      [VAR=`echo $ac_arg | sed -e 's,.*% *,,'` ; break])",
          "166: done",
          "169: ])",
          "170: case \".$VAR\" in",
          "171:      .ok|.ok,*) m4_ifvaln($3,$3) ;;",
          "181: esac",
          "182: AS_VAR_POPDEF([VAR])dnl",
          "186: dnl  implementation tactics:",
          "187: dnl   the for-argument contains a list of options. The first part of",
          "188: dnl   these does only exist to detect the compiler - usually it is",
          "",
          "[Removed Lines]",
          "167:  FLAGS=\"$ac_save_[]FLAGS\"",
          "168:  AC_LANG_POP([Fortran])",
          "172:    .|.no|.no,*) m4_ifvaln($4,$4,[m4_ifval($2,[",
          "173:         AC_RUN_LOG([: m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $2\"])",
          "174:                       m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $2\"])]) ;;",
          "176:    if echo \" $[]m4_ifval($1,$1,FLAGS) \" | grep \" $VAR \" 2>&1 >/dev/null",
          "177:    then AC_RUN_LOG([: m4_ifval($1,$1,FLAGS) does contain $VAR])",
          "178:    else AC_RUN_LOG([: m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $VAR\"])",
          "179:                       m4_ifval($1,$1,FLAGS)=\"$m4_ifval($1,$1,FLAGS) $VAR\"",
          "180:    fi ]) ;;",
          "183: AS_VAR_POPDEF([FLAGS])dnl",
          "184: ])",
          "",
          "[Added Lines]",
          "84: FLAGS=\"$ac_save_[]FLAGS\"",
          "86: AS_VAR_POPDEF([FLAGS])dnl",
          "87: AX_REQUIRE_DEFINED([AX_APPEND_FLAG])",
          "90:    .|.no|.no,*) m4_default($4,[m4_ifval($2,[AX_APPEND_FLAG([$2], [$1])])]) ;;",
          "94: ])dnl AX_FLAGS_WARN_ALL",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "193: dnl   to later compile stages or something. The \"%\" is used as a",
          "194: dnl   delimiter. A non-option comment can be given after \"%%\" marks",
          "195: dnl   which will be shown but not added to the respective C/CXXFLAGS.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106: AC_DEFUN([AX_CFLAGS_WARN_ALL],[dnl",
          "107: AC_LANG_PUSH([C])",
          "108: AX_FLAGS_WARN_ALL([$1], [$2], [$3], [$4])",
          "109: AC_LANG_POP([C])",
          "110: ])",
          "112: AC_DEFUN([AX_CXXFLAGS_WARN_ALL],[dnl",
          "113: AC_LANG_PUSH([C++])",
          "114: AX_FLAGS_WARN_ALL([$1], [$2], [$3], [$4])",
          "115: AC_LANG_POP([C++])",
          "116: ])",
          "118: AC_DEFUN([AX_FCFLAGS_WARN_ALL],[dnl",
          "119: AC_LANG_PUSH([Fortran])",
          "120: AX_FLAGS_WARN_ALL([$1], [$2], [$3], [$4])",
          "121: AC_LANG_POP([Fortran])",
          "122: ])",
          "",
          "---------------"
        ],
        "m4/ax_check_compile_flag.m4||m4/ax_check_compile_flag.m4": [
          "File: m4/ax_check_compile_flag.m4 -> m4/ax_check_compile_flag.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #",
          "5: # SYNOPSIS",
          "6: #",
          "8: #",
          "9: # DESCRIPTION",
          "10: #",
          "",
          "[Removed Lines]",
          "7: #   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])",
          "",
          "[Added Lines]",
          "7: #   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19: #   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to",
          "20: #   force the compiler to issue an error when a bad flag is given.",
          "21: #",
          "22: #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this",
          "23: #   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.",
          "24: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #   INPUT gives an alternative input source to AC_COMPILE_IFELSE.",
          "23: #",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53: #   modified version of the Autoconf Macro, you may extend this special",
          "54: #   exception to the GPL to apply to your modified version as well.",
          "58: AC_DEFUN([AX_CHECK_COMPILE_FLAG],",
          "59: [AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX",
          "",
          "[Removed Lines]",
          "56: #serial 2",
          "",
          "[Added Lines]",
          "58: #serial 3",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "61: AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [",
          "62:   ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS",
          "63:   _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"",
          "65:     [AS_VAR_SET(CACHEVAR,[yes])],",
          "66:     [AS_VAR_SET(CACHEVAR,[no])])",
          "67:   _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])",
          "",
          "[Removed Lines]",
          "64:   AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],",
          "",
          "[Added Lines]",
          "66:   AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],",
          "",
          "---------------"
        ],
        "m4/ax_compiler_vendor.m4||m4/ax_compiler_vendor.m4": [
          "File: m4/ax_compiler_vendor.m4 -> m4/ax_compiler_vendor.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: #   modified version of the Autoconf Macro, you may extend this special",
          "45: #   exception to the GPL to apply to your modified version as well.",
          "49: AC_DEFUN([AX_COMPILER_VENDOR],",
          "50: [AC_CACHE_CHECK([for _AC_LANG compiler vendor], ax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor,",
          "",
          "[Removed Lines]",
          "47: #serial 11",
          "",
          "[Added Lines]",
          "47: #serial 12",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:            ibm:       __xlc__,__xlC__,__IBMC__,__IBMCPP__",
          "54:            pathscale: __PATHCC__,__PATHSCALE__",
          "55:            clang:     __clang__",
          "56:            gnu:       __GNUC__",
          "57:            sun:       __SUNPRO_C,__SUNPRO_CC",
          "58:            hp:        __HP_cc,__HP_aCC",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:            fujitsu:   __FUJITSU",
          "",
          "---------------"
        ],
        "m4/ax_cxx_namespaces.m4||m4/ax_cxx_namespaces.m4": [
          "File: m4/ax_cxx_namespaces.m4 -> m4/ax_cxx_namespaces.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #",
          "16: #   Copyright (c) 2008 Todd Veldhuizen",
          "17: #   Copyright (c) 2008 Luc Maisonobe <luc@spaceroots.org>",
          "18: #",
          "19: #   Copying and distribution of this file, with or without modification, are",
          "20: #   permitted in any medium without royalty provided the copyright notice",
          "21: #   and this notice are preserved. This file is offered as-is, without any",
          "22: #   warranty.",
          "26: AU_ALIAS([AC_CXX_NAMESPACES], [AX_CXX_NAMESPACES])",
          "27: AC_DEFUN([AX_CXX_NAMESPACES],",
          "28: [AC_CACHE_CHECK(whether the compiler implements namespaces,",
          "29: ax_cv_cxx_namespaces,",
          "36: ])",
          "37: if test \"$ax_cv_cxx_namespaces\" = yes; then",
          "38:   AC_DEFINE(HAVE_NAMESPACES,,[define if the compiler implements namespaces])",
          "",
          "[Removed Lines]",
          "24: #serial 6",
          "30: [AC_LANG_SAVE",
          "31:  AC_LANG_CPLUSPLUS",
          "32:  AC_TRY_COMPILE([namespace Outer { namespace Inner { int i = 0; }}],",
          "33:                 [using namespace Outer::Inner; return i;],",
          "34:  ax_cv_cxx_namespaces=yes, ax_cv_cxx_namespaces=no)",
          "35:  AC_LANG_RESTORE",
          "",
          "[Added Lines]",
          "18: #   Copyright (c) 2013 Bastien Roucaries <roucaries.bastien+autoconf@gmail.com>",
          "25: #serial 8",
          "31: [AC_LANG_PUSH([C++])",
          "32:  AC_COMPILE_IFELSE([AC_LANG_SOURCE([namespace Outer { namespace Inner { int i = 0; }}",
          "33:                                    using namespace Outer::Inner; int foo(void) { return i;} ])],",
          "34:                    ax_cv_cxx_namespaces=yes, ax_cv_cxx_namespaces=no)",
          "35:  AC_LANG_POP",
          "",
          "---------------"
        ],
        "m4/ax_gcc_archflag.m4||m4/ax_gcc_archflag.m4": [
          "File: m4/ax_gcc_archflag.m4 -> m4/ax_gcc_archflag.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #   modified version of the Autoconf Macro, you may extend this special",
          "65: #   exception to the GPL to apply to your modified version as well.",
          "69: AC_DEFUN([AX_GCC_ARCHFLAG],",
          "70: [AC_REQUIRE([AC_PROG_CC])",
          "71: AC_REQUIRE([AC_CANONICAL_HOST])",
          "73: AC_ARG_WITH(gcc-arch, [AS_HELP_STRING([--with-gcc-arch=<arch>], [use architecture <arch> for gcc -march/-mtune, instead of guessing])],",
          "76: AC_MSG_CHECKING([for gcc architecture flag])",
          "77: AC_MSG_RESULT([])",
          "",
          "[Removed Lines]",
          "67: #serial 11",
          "74:  ax_gcc_arch=$withval, ax_gcc_arch=no)",
          "",
          "[Added Lines]",
          "67: #serial 14",
          "72: AC_REQUIRE([AC_PROG_SED])",
          "75:  ax_gcc_arch=$withval, ax_gcc_arch=yes)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85: ax_gcc_arch=\"\"",
          "86: if test \"$cross_compiling\" = no; then",
          "87: case $host_cpu in",
          "89:      AX_GCC_X86_CPUID(0)",
          "90:      AX_GCC_X86_CPUID(1)",
          "91:      case $ax_cv_gcc_x86_cpuid_0 in",
          "",
          "[Removed Lines]",
          "88:   i[[3456]]86*|x86_64*) # use cpuid codes",
          "",
          "[Added Lines]",
          "89:   i[[3456]]86*|x86_64*|amd64*) # use cpuid codes",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93:           case $ax_cv_gcc_x86_cpuid_1 in",
          "109:   case $host_cpu in",
          "110:            x86_64*) ax_gcc_arch=\"nocona pentium4 pentiumpro\" ;;",
          "112:          esac ;;",
          "114:           esac ;;",
          "116:           case $ax_cv_gcc_x86_cpuid_1 in",
          "",
          "[Removed Lines]",
          "108:      ?000?f3[[347]]:*:*:*|?000?f4[1347]:*:*:*|?000?f6?:*:*:*)",
          "113:      ?000?f??:*:*:*) ax_gcc_arch=\"pentium4 pentiumpro\";;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "128:    ax_gcc_arch=\"athlon-xp athlon-4 athlon k7\" ;;",
          "130:         esac ;;",
          "138:           esac ;;",
          "140:     case $ax_cv_gcc_x86_cpuid_1 in",
          "",
          "[Removed Lines]",
          "131:      ?00??f[[4cef8b]]?:*:*:*) ax_gcc_arch=\"athlon64 k8\" ;;",
          "132:      ?00??f5?:*:*:*) ax_gcc_arch=\"opteron k8\" ;;",
          "133:      ?00??f7?:*:*:*) ax_gcc_arch=\"athlon-fx opteron k8\" ;;",
          "134:      ?00??f??:*:*:*) ax_gcc_arch=\"k8\" ;;",
          "135:      ?05??f??:*:*:*) ax_gcc_arch=\"btver1 amdfam10 k8\" ;;",
          "136:      ?06??f??:*:*:*) ax_gcc_arch=\"bdver1 amdfam10 k8\" ;;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "155:   sparc*)",
          "156:      AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])",
          "157:      cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`",
          "159:      case $cputype in",
          "",
          "[Removed Lines]",
          "158:      cputype=`echo \"$cputype\" | tr -d ' -' |tr $as_cr_LETTERS $as_cr_letters`",
          "",
          "[Added Lines]",
          "159:      cputype=`echo \"$cputype\" | tr -d ' -' | $SED 's/SPARCIIi/SPARCII/' |tr $as_cr_LETTERS $as_cr_letters`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "177:   alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;",
          "179:   powerpc*)",
          "182:      case $cputype in",
          "",
          "[Removed Lines]",
          "180:      cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | sed 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`",
          "181:      cputype=`echo $cputype | sed -e 's/ppc//g;s/ *//g'`",
          "",
          "[Added Lines]",
          "181:      cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`",
          "182:      cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`",
          "",
          "---------------"
        ],
        "m4/ax_prefix_config_h.m4||m4/ax_prefix_config_h.m4": [
          "File: m4/ax_prefix_config_h.m4 -> m4/ax_prefix_config_h.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #",
          "9: # DESCRIPTION",
          "10: #",
          "23: #",
          "24: #   Defaults:",
          "25: #",
          "",
          "[Removed Lines]",
          "11: #   This is a new variant from ac_prefix_config_ this one will use a",
          "12: #   lowercase-prefix if the config-define was starting with a",
          "13: #   lowercase-char, e.g. \"#define const\", \"#define restrict\", or \"#define",
          "14: #   off_t\", (and this one can live in another directory, e.g.",
          "15: #   testpkg/config.h therefore I decided to move the output-header to be the",
          "16: #   first arg)",
          "17: #",
          "18: #   takes the usual config.h generated header file; looks for each of the",
          "19: #   generated \"#define SOMEDEF\" lines, and prefixes the defined name (ie.",
          "20: #   makes it \"#define PREFIX_SOMEDEF\". The result is written to the output",
          "21: #   config.header file. The PREFIX is converted to uppercase for the",
          "22: #   conversions.",
          "",
          "[Added Lines]",
          "11: #   Generate an installable config.h.",
          "12: #",
          "13: #   A package should not normally install its config.h as a system header,",
          "14: #   but if it must, this macro can be used to avoid namespace pollution by",
          "15: #   making a copy of config.h with a prefix added to all the macro names.",
          "16: #",
          "17: #   Each \"#define SOMEDEF\" line of the configuration header has the given",
          "18: #   prefix added, in the same case as the first character of the macro name.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: #     PREFIX = $PACKAGE",
          "28: #     ORIG-HEADER, from AM_CONFIG_HEADER(config.h)",
          "29: #",
          "33: #",
          "34: #   Example:",
          "35: #",
          "",
          "[Removed Lines]",
          "30: #   Your configure.ac script should contain both macros in this order, and",
          "31: #   unlike the earlier variations of this prefix-macro it is okay to place",
          "32: #   the AX_PREFIX_CONFIG_H call before the AC_OUTPUT invokation.",
          "",
          "[Added Lines]",
          "26: #   Your configure.ac script should contain both macros in this order.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "42: #     AC_OUTPUT(Makefile)                 # creates the \"config.h\" now",
          "43: #                                         # and also mylib/_config.h",
          "44: #",
          "48: #",
          "49: #     #ifndef TESTPKG_VERSION",
          "50: #     #define TESTPKG_VERSION \"0.1.1\"",
          "",
          "[Removed Lines]",
          "45: #   if the argument to AX_PREFIX_CONFIG_H would have been omitted then the",
          "46: #   default outputfile would have been called simply \"testpkg-config.h\", but",
          "47: #   even under the name \"mylib/_config.h\" it contains prefix-defines like",
          "",
          "[Added Lines]",
          "39: #   If the argument to AX_PREFIX_CONFIG_H would have been omitted then the",
          "40: #   default output file would have been called simply \"testpkg-config.h\",",
          "41: #   but even under the name \"mylib/_config.h\" it contains prefix-defines",
          "42: #   like",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "56: #     #define _testpkg_const _const",
          "57: #     #endif",
          "58: #",
          "64: #",
          "65: #   Note that some AC_DEFINEs that end up in the config.h file are actually",
          "66: #   self-referential - e.g. AC_C_INLINE, AC_C_CONST, and the AC_TYPE_OFF_T",
          "",
          "[Removed Lines]",
          "59: #   and this \"mylib/_config.h\" can be installed along with other",
          "60: #   header-files, which is most convenient when creating a shared library",
          "61: #   (that has some headers) where some functionality is dependent on the",
          "62: #   OS-features detected at compile-time. No need to invent some",
          "63: #   \"mylib-confdefs.h.in\" manually. :-)",
          "",
          "[Added Lines]",
          "54: #   and this \"mylib/_config.h\" can be installed along with other header",
          "55: #   files, which is most convenient when creating a shared library (that has",
          "56: #   some headers) whose functionality depends on features detected at",
          "57: #   compile-time. No need to invent some \"mylib-confdefs.h.in\" manually.",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "89: #",
          "90: # LICENSE",
          "91: #",
          "92: #   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>",
          "93: #   Copyright (c) 2008 Marten Svantesson",
          "94: #   Copyright (c) 2008 Gerald Point <Gerald.Point@labri.fr>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86: #   Copyright (c) 2014 Reuben Thomas <rrt@sc3d.org>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "119: #   modified version of the Autoconf Macro, you may extend this special",
          "120: #   exception to the GPL to apply to your modified version as well.",
          "124: AC_DEFUN([AX_PREFIX_CONFIG_H],[dnl",
          "125: AC_PREREQ([2.62])",
          "126: AC_BEFORE([AC_CONFIG_HEADERS],[$0])dnl",
          "128: AS_VAR_PUSHDEF([_OUT],[ac_prefix_conf_OUT])dnl",
          "129: AS_VAR_PUSHDEF([_DEF],[ac_prefix_conf_DEF])dnl",
          "130: AS_VAR_PUSHDEF([_PKG],[ac_prefix_conf_PKG])dnl",
          "",
          "[Removed Lines]",
          "122: #serial 11",
          "127: AC_CONFIG_COMMANDS([ifelse($1,,$PACKAGE-config.h,$1)],[dnl",
          "",
          "[Added Lines]",
          "117: #serial 15",
          "122: AC_CONFIG_COMMANDS(m4_default([$1], [$PACKAGE-config.h]),[dnl",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "133: AS_VAR_PUSHDEF([_INP],[ac_prefix_conf_INP])dnl",
          "134: m4_pushdef([_script],[conftest.prefix])dnl",
          "135: m4_pushdef([_symbol],[m4_cr_Letters[]m4_cr_digits[]_])dnl",
          "137: _DEF=`echo _$_OUT | sed -e \"y:m4_cr_letters:m4_cr_LETTERS[]:\" -e \"s/@<:@^m4_cr_Letters@:>@/_/g\"`",
          "139: _LOW=`echo _$_PKG | sed -e \"y:m4_cr_LETTERS-:m4_cr_letters[]_:\"`",
          "140: _UPP=`echo $_PKG | sed -e \"y:m4_cr_letters-:m4_cr_LETTERS[]_:\"  -e \"/^@<:@m4_cr_digits@:>@/s/^/_/\"`",
          "142: if test \".$_INP\" = \".\"; then",
          "143:    for ac_file in : $CONFIG_HEADERS; do test \"_$ac_file\" = _: && continue",
          "144:      case \"$ac_file\" in",
          "",
          "[Removed Lines]",
          "136: _OUT=`echo ifelse($1, , $PACKAGE-config.h, $1)`",
          "138: _PKG=`echo ifelse($2, , $PACKAGE, $2)`",
          "141: _INP=`echo \"ifelse($3,,,$3)\" | sed -e 's/ *//'`",
          "",
          "[Added Lines]",
          "131: _OUT=`echo m4_default([$1], [$PACKAGE-config.h])`",
          "133: _PKG=`echo m4_default([$2], [$PACKAGE])`",
          "136: _INP=`echo \"$3\" | sed -e 's/ *//'`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "192:       rm -f \"$_OUT\"",
          "193:       mv $tmp/pconfig.h \"$_OUT\"",
          "194:     fi",
          "196:   else",
          "197:     AC_MSG_ERROR([input file $_INP does not exist - skip generating $_OUT])",
          "198:   fi",
          "",
          "[Removed Lines]",
          "195:     cp _script _configs.sed",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "m4/ax_prog_perl_version.m4||m4/ax_prog_perl_version.m4": [
          "File: m4/ax_prog_perl_version.m4 -> m4/ax_prog_perl_version.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #   and this notice are preserved. This file is offered as-is, without any",
          "36: #   warranty.",
          "40: AC_DEFUN([AX_PROG_PERL_VERSION],[",
          "41:     AC_REQUIRE([AC_PROG_SED])",
          "",
          "[Removed Lines]",
          "38: #serial 11",
          "",
          "[Added Lines]",
          "38: #serial 12",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:         AC_MSG_CHECKING([for perl version])",
          "48:         changequote(<<,>>)",
          "50:         changequote([,])",
          "51:         AC_MSG_RESULT($perl_version)",
          "",
          "[Removed Lines]",
          "49:         perl_version=`$PERL --version 2>&1 | $GREP \"This is perl\" | $SED -e 's/.* v\\([0-9]*\\.[0-9]*\\.[0-9]*\\) .*/\\1/'`",
          "",
          "[Added Lines]",
          "49:         perl_version=`$PERL --version 2>&1 \\",
          "50:           | $SED -n -e '/This is perl/b inspect",
          "51: b",
          "52: : inspect",
          "53: s/.* (\\{0,1\\}v\\([0-9]*\\.[0-9]*\\.[0-9]*\\))\\{0,1\\} .*/\\1/;p'`",
          "",
          "---------------"
        ],
        "m4/ax_pthread.m4||m4/ax_pthread.m4": [
          "File: m4/ax_pthread.m4 -> m4/ax_pthread.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: #   modified version of the Autoconf Macro, you may extend this special",
          "83: #   exception to the GPL to apply to your modified version as well.",
          "87: AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])",
          "88: AC_DEFUN([AX_PTHREAD], [",
          "",
          "[Removed Lines]",
          "85: #serial 20",
          "",
          "[Added Lines]",
          "85: #serial 21",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "103:         save_LIBS=\"$LIBS\"",
          "104:         LIBS=\"$PTHREAD_LIBS $LIBS\"",
          "105:         AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])",
          "108:         if test x\"$ax_pthread_ok\" = xno; then",
          "109:                 PTHREAD_LIBS=\"\"",
          "110:                 PTHREAD_CFLAGS=\"\"",
          "",
          "[Removed Lines]",
          "106:         AC_TRY_LINK_FUNC(pthread_join, ax_pthread_ok=yes)",
          "107:         AC_MSG_RESULT($ax_pthread_ok)",
          "",
          "[Added Lines]",
          "106:         AC_TRY_LINK_FUNC([pthread_join], [ax_pthread_ok=yes])",
          "107:         AC_MSG_RESULT([$ax_pthread_ok])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "164:         ;;",
          "165: esac",
          "167: if test x\"$ax_pthread_ok\" = xno; then",
          "168: for flag in $ax_pthread_flags; do",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167: # Clang doesn't consider unrecognized options an error unless we specify",
          "168: # -Werror. We throw in some extra Clang-specific options to ensure that",
          "169: # this doesn't happen for GCC, which also accepts -Werror.",
          "171: AC_MSG_CHECKING([if compiler needs -Werror to reject unknown flags])",
          "172: save_CFLAGS=\"$CFLAGS\"",
          "173: ax_pthread_extra_flags=\"-Werror\"",
          "174: CFLAGS=\"$CFLAGS $ax_pthread_extra_flags -Wunknown-warning-option -Wsizeof-array-argument\"",
          "175: AC_COMPILE_IFELSE([AC_LANG_PROGRAM([int foo(void);],[foo()])],",
          "176:                   [AC_MSG_RESULT([yes])],",
          "177:                   [ax_pthread_extra_flags=",
          "178:                    AC_MSG_RESULT([no])])",
          "179: CFLAGS=\"$save_CFLAGS\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "178:                 ;;",
          "180:                 pthread-config)",
          "182:                 if test x\"$ax_pthread_config\" = xno; then continue; fi",
          "183:                 PTHREAD_CFLAGS=\"`pthread-config --cflags`\"",
          "184:                 PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"",
          "",
          "[Removed Lines]",
          "181:                 AC_CHECK_PROG(ax_pthread_config, pthread-config, yes, no)",
          "",
          "[Added Lines]",
          "195:                 AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "193:         save_LIBS=\"$LIBS\"",
          "194:         save_CFLAGS=\"$CFLAGS\"",
          "195:         LIBS=\"$PTHREAD_LIBS $LIBS\"",
          "198:         # Check for various functions.  We must include pthread.h,",
          "199:         # since some functions may be macros.  (On the Sequent, we",
          "",
          "[Removed Lines]",
          "196:         CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"",
          "",
          "[Added Lines]",
          "210:         CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS $ax_pthread_extra_flags\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "219:         LIBS=\"$save_LIBS\"",
          "220:         CFLAGS=\"$save_CFLAGS\"",
          "223:         if test \"x$ax_pthread_ok\" = xyes; then",
          "224:                 break;",
          "225:         fi",
          "",
          "[Removed Lines]",
          "222:         AC_MSG_RESULT($ax_pthread_ok)",
          "",
          "[Added Lines]",
          "236:         AC_MSG_RESULT([$ax_pthread_ok])",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "245:                 [attr_name=$attr; break],",
          "246:                 [])",
          "247:         done",
          "249:         if test \"$attr_name\" != PTHREAD_CREATE_JOINABLE; then",
          "251:                                [Define to necessary symbol if this constant",
          "252:                                 uses a non-standard name on your system.])",
          "253:         fi",
          "",
          "[Removed Lines]",
          "248:         AC_MSG_RESULT($attr_name)",
          "250:             AC_DEFINE_UNQUOTED(PTHREAD_CREATE_JOINABLE, $attr_name,",
          "",
          "[Added Lines]",
          "262:         AC_MSG_RESULT([$attr_name])",
          "264:             AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE], [$attr_name],",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "261:             if test \"$GCC\" = \"yes\"; then",
          "262:                 flag=\"-D_REENTRANT\"",
          "263:             else",
          "264:                 flag=\"-mt -D_REENTRANT\"",
          "265:             fi",
          "266:             ;;",
          "267:         esac",
          "269:         if test \"x$flag\" != xno; then",
          "270:             PTHREAD_CFLAGS=\"$flag $PTHREAD_CFLAGS\"",
          "271:         fi",
          "273:         AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],",
          "277:                     [ax_cv_PTHREAD_PRIO_INHERIT=yes],",
          "278:                     [ax_cv_PTHREAD_PRIO_INHERIT=no])",
          "279:             ])",
          "280:         AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\"],",
          "283:         LIBS=\"$save_LIBS\"",
          "284:         CFLAGS=\"$save_CFLAGS\"",
          "",
          "[Removed Lines]",
          "268:         AC_MSG_RESULT(${flag})",
          "274:             ax_cv_PTHREAD_PRIO_INHERIT, [",
          "275:                 AC_LINK_IFELSE([",
          "276:                     AC_LANG_PROGRAM([[#include <pthread.h>]], [[int i = PTHREAD_PRIO_INHERIT;]])],",
          "281:             AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], 1, [Have PTHREAD_PRIO_INHERIT.]))",
          "",
          "[Added Lines]",
          "278:                 # TODO: What about Clang on Solaris?",
          "283:         AC_MSG_RESULT([$flag])",
          "289:             [ax_cv_PTHREAD_PRIO_INHERIT], [",
          "290:                 AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],",
          "291:                                                 [[int i = PTHREAD_PRIO_INHERIT;]])],",
          "296:             [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])])",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "302: test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"",
          "308: # Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:",
          "309: if test x\"$ax_pthread_ok\" = xyes; then",
          "311:         :",
          "312: else",
          "313:         ax_pthread_ok=no",
          "",
          "[Removed Lines]",
          "304: AC_SUBST(PTHREAD_LIBS)",
          "305: AC_SUBST(PTHREAD_CFLAGS)",
          "306: AC_SUBST(PTHREAD_CC)",
          "310:         ifelse([$1],,AC_DEFINE(HAVE_PTHREAD,1,[Define if you have POSIX threads libraries and header files.]),[$1])",
          "",
          "[Added Lines]",
          "319: AC_SUBST([PTHREAD_LIBS])",
          "320: AC_SUBST([PTHREAD_CFLAGS])",
          "321: AC_SUBST([PTHREAD_CC])",
          "325:         ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7fc655115f1a21e5eb5770649f449b29de60e3f6",
      "candidate_info": {
        "commit_hash": "7fc655115f1a21e5eb5770649f449b29de60e3f6",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/7fc655115f1a21e5eb5770649f449b29de60e3f6",
        "files": [
          "MagickCore/version.h",
          "configure"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/version.h||MagickCore/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2014 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  1,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"17030M\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"17039:17045\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: #define MagickppLibAddendum  \"-0\"",
          "49: #define MagickppLibInterface  1",
          "50: #define MagickppLibMinInterface  1",
          "52: #define MagickChangeDate   \"20120427\"",
          "53: #define MagickAuthoritativeURL  \"http://www.imagemagick.org\"",
          "54: #define MagickFeatures \"DPC HDRI OpenMP\"",
          "",
          "[Removed Lines]",
          "51: #define MagickReleaseDate  \"2014-11-11\"",
          "",
          "[Added Lines]",
          "51: #define MagickReleaseDate  \"2014-11-14\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3bdd925dbb0804df99e548c50667670319655816",
      "candidate_info": {
        "commit_hash": "3bdd925dbb0804df99e548c50667670319655816",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/3bdd925dbb0804df99e548c50667670319655816",
        "files": [
          "MagickCore/color.c",
          "MagickCore/composite-private.h",
          "MagickCore/composite.c",
          "MagickCore/feature.c",
          "MagickCore/identify.c",
          "MagickCore/pixel.c",
          "MagickCore/quantize.c",
          "MagickCore/version.h",
          "MagickCore/vision.c",
          "coders/json.c"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/color.c||MagickCore/color.c",
          "MagickCore/composite-private.h||MagickCore/composite-private.h",
          "MagickCore/composite.c||MagickCore/composite.c",
          "MagickCore/feature.c||MagickCore/feature.c",
          "MagickCore/identify.c||MagickCore/identify.c",
          "MagickCore/pixel.c||MagickCore/pixel.c",
          "MagickCore/quantize.c||MagickCore/quantize.c",
          "MagickCore/version.h||MagickCore/version.h",
          "MagickCore/vision.c||MagickCore/vision.c",
          "coders/json.c||coders/json.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/color.c||MagickCore/color.c": [
          "File: MagickCore/color.c -> MagickCore/color.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1546:         ConcatentateHexColorComponent(pixel,AlphaPixelChannel,tuple);",
          "1547:       return;",
          "1548:     }",
          "1555: #define SVGCompliant(component) ((double) \\",
          "1558:       MagickStatusType",
          "1562:         SVG requires color depths > 8 expressed as percentages.",
          "",
          "[Removed Lines]",
          "1550:     Convert pixel to rgb() or cmyk() color.",
          "1552:   color=(*pixel);",
          "1553:   if (color.depth > 8)",
          "1554:     {",
          "1556:    ScaleCharToQuantum(ScaleQuantumToChar(ClampToQuantum(component))))",
          "1559:         status;",
          "",
          "[Added Lines]",
          "1550:     Convert pixel to rgb() or cmyk() color.",
          "1552:   color=(*pixel);",
          "1553:   if (color.depth > 8)",
          "1554:     {",
          "1556:    ScaleCharToQuantum(ScaleQuantumToChar(ClampToQuantum(component))))",
          "1559:         status;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2587:     pixel;",
          "2589:   double",
          "2596:   pixel=(*color);",
          "",
          "[Removed Lines]",
          "2590:     alpha;",
          "2592:   register const ColorInfo",
          "",
          "[Added Lines]",
          "2590:     alpha;",
          "2592:   register const ColorInfo",
          "",
          "---------------"
        ],
        "MagickCore/composite-private.h||MagickCore/composite-private.h": [
          "File: MagickCore/composite-private.h -> MagickCore/composite-private.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     traits=GetPixelChannelTraits(image,channel);",
          "75:     if (traits == UndefinedPixelTrait)",
          "76:       continue;",
          "78:       {",
          "79:         composite[i]=q[i];",
          "80:         continue;",
          "",
          "[Removed Lines]",
          "77:     if (fabs(alpha-TransparentAlpha) < MagickEpsilon)",
          "",
          "[Added Lines]",
          "77:     if (fabs((double) (alpha-TransparentAlpha)) < MagickEpsilon)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "131:     Compose pixel p over pixel q with the given opacities.",
          "134:     {",
          "136:       return;",
          "",
          "[Removed Lines]",
          "133:   if (fabs(alpha-TransparentAlpha) < MagickEpsilon)",
          "",
          "[Added Lines]",
          "133:   if (fabs((double) (alpha-TransparentAlpha)) < MagickEpsilon)",
          "",
          "---------------"
        ],
        "MagickCore/composite.c||MagickCore/composite.c": [
          "File: MagickCore/composite.c -> MagickCore/composite.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "900:           if (((x_offset+x) < 0) || ((x_offset+x) >= (ssize_t) image->columns))",
          "901:             {",
          "902:               p+=GetPixelChannels(composite_image);",
          "904:             }",
          "905:           if (fabs(angle_range) > MagickEpsilon)",
          "906:             {",
          "",
          "[Removed Lines]",
          "903:               continue;",
          "",
          "[Added Lines]",
          "903:               continue;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1611:               case ColorizeCompositeOp:",
          "1612:               case HueCompositeOp:",
          "1613:               case LuminizeCompositeOp:",
          "1615:               {",
          "1616:                 if (fabs(QuantumRange*Sa-TransparentAlpha) < MagickEpsilon)",
          "1617:                   {",
          "1618:                     pixel=QuantumRange*Da;",
          "1620:                   }",
          "1621:                 if (fabs(QuantumRange*Da-TransparentAlpha) < MagickEpsilon)",
          "1622:                   {",
          "",
          "[Removed Lines]",
          "1614:               case SaturateCompositeOp:",
          "1619:                     break;",
          "",
          "[Added Lines]",
          "1614:               case SaturateCompositeOp:",
          "1619:                     break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1660:                   Da*GetPixelIntensity(image,q) ? Sa : Da;",
          "1661:                 break;",
          "1662:               }",
          "1664:               {",
          "1665:                 if (fabs(QuantumRange*Sa-TransparentAlpha) < MagickEpsilon)",
          "1666:                   {",
          "",
          "[Removed Lines]",
          "1663:               case ModulateCompositeOp:",
          "",
          "[Added Lines]",
          "1663:               case ModulateCompositeOp:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1728:             pixel=QuantumRange*Sca;",
          "1729:             break;",
          "1730:           }",
          "1732:           {",
          "1733:             if (fabs(QuantumRange*Sa-TransparentAlpha) < MagickEpsilon)",
          "1734:               {",
          "",
          "[Removed Lines]",
          "1731:           case BumpmapCompositeOp:",
          "",
          "[Added Lines]",
          "1731:           case BumpmapCompositeOp:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1779:             pixel=QuantumRange*(Sa*Da*MagickMin(1.0,Dca/Da*Sa/(Sa-Sca)));",
          "1780:             break;",
          "1781:           }",
          "1783:           {",
          "1784:             if (fabs(QuantumRange*Sa-TransparentAlpha) < MagickEpsilon)",
          "1785:               {",
          "1786:                 pixel=Dc;",
          "1788:               }",
          "1789:             if (fabs(QuantumRange*Da-TransparentAlpha) < MagickEpsilon)",
          "1790:               {",
          "",
          "[Removed Lines]",
          "1782:           case ColorizeCompositeOp:",
          "1787:                 break;",
          "",
          "[Added Lines]",
          "1782:           case ColorizeCompositeOp:",
          "1787:                 break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1870:               destination_dissolve*Da*Dc+destination_dissolve*Da*Dc);",
          "1871:             break;",
          "1872:           }",
          "1874:           {",
          "1875:             if ((fabs(Sca) < MagickEpsilon) && (fabs(Dca) < MagickEpsilon))",
          "1876:               {",
          "1877:                 pixel=QuantumRange*(Sca*(1.0-Da)+Dca*(1.0-Sa));",
          "1879:               }",
          "1880:             if (fabs(Dca) < MagickEpsilon)",
          "1881:               {",
          "",
          "[Removed Lines]",
          "1873:           case DivideDstCompositeOp:",
          "1878:                 break;",
          "",
          "[Added Lines]",
          "1873:           case DivideDstCompositeOp:",
          "1874:           {",
          "1879:                 break;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1885:             pixel=QuantumRange*(Sca*Da*Da/Dca+Sca*(1.0-Da)+Dca*(1.0-Sa));",
          "1886:             break;",
          "1887:           }",
          "1889:           {",
          "1890:             if ((fabs(Dca) < MagickEpsilon) && (fabs(Sca) < MagickEpsilon))",
          "1891:               {",
          "1892:                 pixel=QuantumRange*(Dca*(1.0-Sa)+Sca*(1.0-Da));",
          "1894:               }",
          "1895:             if (fabs(Sca) < MagickEpsilon)",
          "1896:               {",
          "",
          "[Removed Lines]",
          "1888:           case DivideSrcCompositeOp:",
          "1893:                 break;",
          "",
          "[Added Lines]",
          "1889:           case DivideSrcCompositeOp:",
          "1890:           {",
          "1895:                 break;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1955:             pixel=(gamma*(1.0-Sca)*(1.0-Dca))+Sa*(1.0-Sca)*Dca+Da*(1.0-Dca)*Sca;",
          "1956:             break;",
          "1957:           }",
          "1959:           {",
          "1960:             if (fabs(QuantumRange*Sa-TransparentAlpha) < MagickEpsilon)",
          "1961:               {",
          "1962:                 pixel=Dc;",
          "1964:               }",
          "1965:             if (fabs(QuantumRange*Da-TransparentAlpha) < MagickEpsilon)",
          "1966:               {",
          "",
          "[Removed Lines]",
          "1958:           case HueCompositeOp:",
          "1963:                 break;",
          "",
          "[Added Lines]",
          "1960:           case HueCompositeOp:",
          "1965:                 break;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2035:               Da*GetPixelIntensity(image,q) ? Sc : Dc;",
          "2036:             break;",
          "2037:           }",
          "2039:           {",
          "2040:             if (fabs(QuantumRange*Sa-TransparentAlpha) < MagickEpsilon)",
          "2041:               {",
          "2042:                 pixel=Dc;",
          "2044:               }",
          "2045:             if (fabs(QuantumRange*Da-TransparentAlpha) < MagickEpsilon)",
          "2046:               {",
          "",
          "[Removed Lines]",
          "2038:           case LuminizeCompositeOp:",
          "2043:                 break;",
          "",
          "[Added Lines]",
          "2040:           case LuminizeCompositeOp:",
          "2045:                 break;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2105:           case ModulateCompositeOp:",
          "2106:           {",
          "2107:             ssize_t",
          "2110:             if (fabs(QuantumRange*Sa-TransparentAlpha) < MagickEpsilon)",
          "2111:               {",
          "",
          "[Removed Lines]",
          "2108:               offset;",
          "",
          "[Added Lines]",
          "2110:               offset;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2185:                 f(Sc,Dc) = Dc^2*(1-2*Sc) + 2*Sc*Dc",
          "2189:             if (fabs(Da) < MagickEpsilon)",
          "2190:               {",
          "",
          "[Removed Lines]",
          "2187:               http://www.pegtop.net/delphi/articles/blendmodes/softlight.htm.",
          "",
          "[Added Lines]",
          "2189:               http://www.pegtop.net/delphi/articles/blendmodes/softlight.htm.",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2221:             pixel=QuantumRange*(Sca+Dca);",
          "2222:             break;",
          "2223:           }",
          "2225:           {",
          "2226:             if (fabs(QuantumRange*Sa-TransparentAlpha) < MagickEpsilon)",
          "2227:               {",
          "2228:                 pixel=Dc;",
          "2230:               }",
          "2231:             if (fabs(QuantumRange*Da-TransparentAlpha) < MagickEpsilon)",
          "2232:               {",
          "",
          "[Removed Lines]",
          "2224:           case SaturateCompositeOp:",
          "2229:                 break;",
          "",
          "[Added Lines]",
          "2226:           case SaturateCompositeOp:",
          "2231:                 break;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2296:               VividLight: A Photoshop 7 composition method.  See",
          "2297:               http://www.simplefilter.de/en/basics/mixmods.html.",
          "2301:             if ((fabs(Sa) < MagickEpsilon) || (fabs(Sca-Sa) < MagickEpsilon))",
          "2302:               {",
          "",
          "[Removed Lines]",
          "2299:                 f(Sc,Dc) = (2*Sc < 1) ? 1-(1-Dc)/(2*Sc) : Dc/(2*(1-Sc))",
          "",
          "[Added Lines]",
          "2301:                 f(Sc,Dc) = (2*Sc < 1) ? 1-(1-Dc)/(2*Sc) : Dc/(2*(1-Sc))",
          "",
          "---------------"
        ],
        "MagickCore/feature.c||MagickCore/feature.c": [
          "File: MagickCore/feature.c -> MagickCore/feature.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1590:     if (image->alpha_trait != UndefinedPixelTrait)",
          "1591:       channel_features[AlphaPixelChannel].measure_of_correlation_1[i]=",
          "1592:         (entropy_xy.direction[i].alpha-entropy_xy1.direction[i].alpha)/",
          "1594:          entropy_x.direction[i].alpha : entropy_y.direction[i].alpha);",
          "1595:     channel_features[RedPixelChannel].measure_of_correlation_2[i]=",
          "1597:       entropy_xy.direction[i].red)))));",
          "1598:     channel_features[GreenPixelChannel].measure_of_correlation_2[i]=",
          "1600:       entropy_xy.direction[i].green)))));",
          "1601:     channel_features[BluePixelChannel].measure_of_correlation_2[i]=",
          "1602:       (sqrt(fabs(1.0-exp(-2.0*(entropy_xy2.direction[i].blue-",
          "1604:     if (image->colorspace == CMYKColorspace)",
          "1605:       channel_features[BlackPixelChannel].measure_of_correlation_2[i]=",
          "1606:         (sqrt(fabs(1.0-exp(-2.0*(entropy_xy2.direction[i].black-",
          "1608:     if (image->alpha_trait != UndefinedPixelTrait)",
          "1609:       channel_features[AlphaPixelChannel].measure_of_correlation_2[i]=",
          "1610:         (sqrt(fabs(1.0-exp(-2.0*(entropy_xy2.direction[i].alpha-",
          "",
          "[Removed Lines]",
          "1593:         (entropy_x.direction[i].alpha > entropy_y.direction[i].alpha ?",
          "1596:       (sqrt(fabs(1.0-exp(-2.0*(entropy_xy2.direction[i].red-",
          "1599:       (sqrt(fabs(1.0-exp(-2.0*(entropy_xy2.direction[i].green-",
          "1603:       entropy_xy.direction[i].blue)))));",
          "1607:         entropy_xy.direction[i].black)))));",
          "",
          "[Added Lines]",
          "1593:         (entropy_x.direction[i].alpha > entropy_y.direction[i].alpha ?",
          "1596:       (sqrt(fabs(1.0-exp(-2.0*(double) (entropy_xy2.direction[i].red-",
          "1599:       (sqrt(fabs(1.0-exp(-2.0*(double) (entropy_xy2.direction[i].green-",
          "1603:       entropy_xy.direction[i].blue)))));",
          "1607:         entropy_xy.direction[i].black)))));",
          "",
          "---------------"
        ],
        "MagickCore/identify.c||MagickCore/identify.c": [
          "File: MagickCore/identify.c -> MagickCore/identify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "332:       PixelTrait traits=GetPixelChannelTraits(image,channel);",
          "333:       if (traits == UndefinedPixelTrait)",
          "335:       offset=GetPixelChannelOffset(image,channel);",
          "336:       match=fabs((double) p[offset]-target) < 0.5 ? MagickTrue : MagickFalse;",
          "337:       if (match != MagickFalse)",
          "",
          "[Removed Lines]",
          "334:         continue;",
          "",
          "[Added Lines]",
          "334:         continue;",
          "",
          "---------------"
        ],
        "MagickCore/pixel.c||MagickCore/pixel.c": [
          "File: MagickCore/pixel.c -> MagickCore/pixel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6164:       image->filename,channel_mask);",
          "6165:   image->channel_mask=channel_mask;",
          "6166:   for (i=0; i < (ssize_t) GetPixelChannels(image); i++)",
          "6168:     PixelChannel channel=GetPixelChannelChannel(image,i);",
          "6169:     if (GetChannelBit(channel_mask,channel) == 0)",
          "6170:       {",
          "",
          "[Removed Lines]",
          "6167:   {",
          "",
          "[Added Lines]",
          "6167:   {",
          "6168:     PixelChannel channel=GetPixelChannelChannel(image,i);",
          "",
          "---------------"
        ],
        "MagickCore/quantize.c||MagickCore/quantize.c": [
          "File: MagickCore/quantize.c -> MagickCore/quantize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2251:   image_view=AcquireVirtualCacheView(image,exception);",
          "2252:   for (y=0; y < (ssize_t) image->rows; y++)",
          "2253:   {",
          "2257:     register ssize_t",
          "2258:       x;",
          "2262:       break;",
          "2263:     for (x=0; x < (ssize_t) image->columns; x++)",
          "2264:     {",
          "2265:       index=1UL*GetPixelIndex(image,p);",
          "2268:           alpha=(double) (QuantumScale*GetPixelAlpha(image,p));",
          "2269:           beta=(double) (QuantumScale*image->colormap[index].alpha);",
          "2270:         }",
          "",
          "[Removed Lines]",
          "2254:     register const Quantum",
          "2260:     p=GetCacheViewVirtualPixels(image_view,0,y,image->columns,1,exception);",
          "2261:     if (p == (const Quantum *) NULL)",
          "2266:       if (image->alpha_trait != UndefinedPixelTrait)",
          "2267:         {",
          "",
          "[Added Lines]",
          "2254:     register const Quantum",
          "2260:     p=GetCacheViewVirtualPixels(image_view,0,y,image->columns,1,exception);",
          "2261:     if (p == (const Quantum *) NULL)",
          "2266:       if (image->alpha_trait != UndefinedPixelTrait)",
          "2267:         {",
          "",
          "---------------"
        ],
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: #define MagickppLibAddendum  \"-0\"",
          "49: #define MagickppLibInterface  1",
          "50: #define MagickppLibMinInterface  1",
          "52: #define MagickChangeDate   \"20120427\"",
          "53: #define MagickAuthoritativeURL  \"http://www.imagemagick.org\"",
          "54: #define MagickFeatures \"DPC HDRI OpenMP\"",
          "",
          "[Removed Lines]",
          "51: #define MagickReleaseDate  \"2014-12-15\"",
          "",
          "[Added Lines]",
          "51: #define MagickReleaseDate  \"2014-12-21\"",
          "",
          "---------------"
        ],
        "MagickCore/vision.c||MagickCore/vision.c": [
          "File: MagickCore/vision.c -> MagickCore/vision.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:     color;",
          "124:   PointInfo",
          "127:   size_t",
          "128:     area,",
          "",
          "[Removed Lines]",
          "125:     centroid;",
          "",
          "[Added Lines]",
          "125:     centroid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "163:     Collect statistics on unique objects.",
          "169:     return(MagickFalse);",
          "171:   (void) ResetMagickMemory(object,0,number_objects*sizeof(*object));",
          "172:   for (i=0; i < (ssize_t) number_objects; i++) {",
          "173:     object[i].id=i;",
          "174:     object[i].bounding_box.x=(ssize_t) image->columns;",
          "175:     object[i].bounding_box.y=(ssize_t) image->rows;",
          "176:   }",
          "178:   image_view=AcquireVirtualCacheView(image,exception);",
          "179:   for (y=0; y < (ssize_t) image->rows; y++) {",
          "180:     register const Quantum",
          "",
          "[Removed Lines]",
          "165:   object=(CCObject *) AcquireQuantumMemory(number_objects,sizeof(*object));",
          "166:   if (object == (CCObject *) NULL) {",
          "167:     (void) ThrowMagickException(exception,GetMagickModule(),ResourceLimitError,",
          "168:       \"MemoryAllocationFailed\",\"`%s'\",image->filename);",
          "170:   }",
          "177:   status=MagickTrue;",
          "",
          "[Added Lines]",
          "165:   object=(CCObject *) AcquireQuantumMemory(number_objects,sizeof(*object));",
          "166:   if (object == (CCObject *) NULL)",
          "167:     {",
          "168:       (void) ThrowMagickException(exception,GetMagickModule(),",
          "169:         ResourceLimitError,\"MemoryAllocationFailed\",\"`%s'\",image->filename);",
          "171:     }",
          "172:   (void) ResetMagickMemory(object,0,number_objects*sizeof(*object));",
          "179:   status=MagickTrue;",
          "180:   image_view=AcquireVirtualCacheView(image,exception);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "184:       x;",
          "186:     if (status == MagickFalse)",
          "192:     }",
          "193:     for (x=0; x < (ssize_t) image->columns; x++) {",
          "194:       i=(ssize_t) *p;",
          "",
          "[Removed Lines]",
          "187:       continue;",
          "188:     p=GetCacheViewVirtualPixels(image_view,0,y,image->columns,1,exception);",
          "189:     if (p == (const Quantum *) NULL) {",
          "190:       status=MagickFalse;",
          "191:       continue;",
          "",
          "[Added Lines]",
          "190:       continue;",
          "191:     p=GetCacheViewVirtualPixels(image_view,0,y,image->columns,1,exception);",
          "192:     if (p == (const Quantum *) NULL)",
          "193:       {",
          "194:         status=MagickFalse;",
          "195:         continue;",
          "196:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "203:       object[i].area++;",
          "204:       p+=GetPixelChannels(image);",
          "205:     }",
          "207:   image_view=DestroyCacheView(image_view);",
          "208:   for (i=0; i < (ssize_t) number_objects; i++) {",
          "209:     object[i].bounding_box.width-=(object[i].bounding_box.x-1);",
          "",
          "[Removed Lines]",
          "206:   }",
          "",
          "[Added Lines]",
          "211:   }",
          "212:   image_view=DestroyCacheView(image_view);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "211:   }",
          "213:     Merge objects below area threshold.",
          "215:   image_view=AcquireAuthenticCacheView(image,exception);",
          "216:   for (i=0; i < (ssize_t) number_objects; i++) {",
          "217:     RectangleInfo",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221:   image_view=AcquireAuthenticCacheView(image,exception);",
          "222:   for (i=0; i < (ssize_t) number_objects; i++)",
          "223:   {",
          "224:     double",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "220:     register ssize_t",
          "221:       j;",
          "223:     size_t",
          "224:       census,",
          "225:       id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "229:     if ((double) object[i].area >= area_threshold)",
          "230:       continue;",
          "231:     for (j=0; j < (ssize_t) number_objects; j++)",
          "233:     bounding_box=object[i].bounding_box;",
          "234:     for (y=0; y < (ssize_t) bounding_box.height+2; y++) {",
          "235:       register const Quantum",
          "",
          "[Removed Lines]",
          "232:       object[j].census=0;",
          "",
          "[Added Lines]",
          "241:       object[j].census=0;",
          "242:     bounding_box=object[i].bounding_box;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "241:       if (status == MagickFalse)",
          "242:         continue;",
          "248:       }",
          "249:       for (x=0; x < (ssize_t) bounding_box.width+2; x++) {",
          "250:         j=(ssize_t) *p;",
          "",
          "[Removed Lines]",
          "243:       p=GetCacheViewVirtualPixels(image_view,bounding_box.x-1,bounding_box.y+y-",
          "244:         1,bounding_box.width+2,1,exception);",
          "245:       if (p == (const Quantum *) NULL) {",
          "246:         status=MagickFalse;",
          "247:         continue;",
          "",
          "[Added Lines]",
          "253:       p=GetCacheViewVirtualPixels(image_view,bounding_box.x-1,bounding_box.y+y-",
          "254:         1,bounding_box.width+2,1,exception);",
          "255:       if (p == (const Quantum *) NULL)",
          "256:         {",
          "257:           status=MagickFalse;",
          "258:           continue;",
          "259:         }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "254:       }",
          "255:     }",
          "256:     census=0;",
          "261:         id=(size_t) j;",
          "263:     object[id].area+=object[i].area;",
          "264:     for (y=0; y < (ssize_t) bounding_box.height; y++) {",
          "265:       register Quantum",
          "",
          "[Removed Lines]",
          "257:     id=0;",
          "258:     for (j=0; j < (ssize_t) number_objects; j++)",
          "259:       if ((object[j].area < object[i].area) && (census < object[j].census)) {",
          "260:         census=object[j].census;",
          "262:       }",
          "",
          "[Added Lines]",
          "269:     id=0;",
          "270:     for (j=0; j < (ssize_t) number_objects; j++)",
          "271:       if ((object[j].area < object[i].area) && (census < object[j].census))",
          "272:         {",
          "273:           census=object[j].census;",
          "275:         }",
          "276:     object[id].area+=object[i].area;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "271:       if (status == MagickFalse)",
          "272:         continue;",
          "278:       }",
          "279:       for (x=0; x < (ssize_t) bounding_box.width; x++) {",
          "280:         if ((ssize_t) *q == i)",
          "",
          "[Removed Lines]",
          "273:       q=GetCacheViewAuthenticPixels(image_view,bounding_box.x,bounding_box.y+y,",
          "274:         bounding_box.width,1,exception);",
          "275:       if (q == (Quantum *) NULL) {",
          "276:         status=MagickFalse;",
          "277:         continue;",
          "",
          "[Added Lines]",
          "287:       q=GetCacheViewAuthenticPixels(image_view,bounding_box.x,bounding_box.y+y,",
          "288:         bounding_box.width,1,exception);",
          "289:       if (q == (Quantum *) NULL)",
          "290:         {",
          "291:           status=MagickFalse;",
          "292:           continue;",
          "293:         }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "314:     Collect statistics on unique objects.",
          "320:     return(MagickFalse);",
          "322:   (void) ResetMagickMemory(object,0,number_objects*sizeof(*object));",
          "323:   for (i=0; i < (ssize_t) number_objects; i++) {",
          "324:     object[i].id=i;",
          "",
          "[Removed Lines]",
          "316:   object=(CCObject *) AcquireQuantumMemory(number_objects,sizeof(*object));",
          "317:   if (object == (CCObject *) NULL) {",
          "318:     (void) ThrowMagickException(exception,GetMagickModule(),ResourceLimitError,",
          "319:       \"MemoryAllocationFailed\",\"`%s'\",image->filename);",
          "321:   }",
          "",
          "[Added Lines]",
          "332:   object=(CCObject *) AcquireQuantumMemory(number_objects,sizeof(*object));",
          "333:   if (object == (CCObject *) NULL)",
          "334:     {",
          "335:       (void) ThrowMagickException(exception,GetMagickModule(),",
          "336:         ResourceLimitError,\"MemoryAllocationFailed\",\"`%s'\",image->filename);",
          "338:     }",
          "339:   (void) ResetMagickMemory(object,0,number_objects*sizeof(*object));",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "327:     GetPixelInfo(image,&object[i].color);",
          "328:   }",
          "329:   status=MagickTrue;",
          "331:   component_view=AcquireVirtualCacheView(component_image,exception);",
          "332:   for (y=0; y < (ssize_t) image->rows; y++) {",
          "333:     register const Quantum",
          "",
          "[Removed Lines]",
          "330:   image_view=AcquireVirtualCacheView(image,exception);",
          "",
          "[Added Lines]",
          "348:   image_view=AcquireVirtualCacheView(image,exception);",
          "349:   component_view=AcquireVirtualCacheView(component_image,exception);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "340:     if (status == MagickFalse)",
          "341:       continue;",
          "342:     p=GetCacheViewVirtualPixels(image_view,0,y,image->columns,1,exception);",
          "348:     }",
          "349:     for (x=0; x < (ssize_t) image->columns; x++) {",
          "350:       i=(ssize_t) *q;",
          "",
          "[Removed Lines]",
          "343:     q=GetCacheViewVirtualPixels(component_view,0,y,component_image->columns,1,",
          "344:       exception);",
          "345:     if ((p == (const Quantum *) NULL) || (q == (const Quantum *) NULL)) {",
          "346:       status=MagickFalse;",
          "347:       continue;",
          "",
          "[Added Lines]",
          "362:     q=GetCacheViewVirtualPixels(component_view,0,y,component_image->columns,1,",
          "363:       exception);",
          "364:     if ((p == (const Quantum *) NULL) || (q == (const Quantum *) NULL))",
          "365:       {",
          "366:         status=MagickFalse;",
          "367:         continue;",
          "368:       }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "366:       object[i].area++;",
          "367:       p+=GetPixelChannels(image);",
          "368:       q+=GetPixelChannels(component_image);",
          "370:   }",
          "371:   for (i=0; i < (ssize_t) number_objects; i++) {",
          "377:     object[i].color.alpha=ClampToQuantum(object[i].color.alpha/object[i].area);",
          "378:     object[i].color.black=ClampToQuantum(object[i].color.black/object[i].area);",
          "379:     object[i].centroid.x=object[i].centroid.x/object[i].area;",
          "",
          "[Removed Lines]",
          "369:     }",
          "372:     object[i].bounding_box.width-=(object[i].bounding_box.x-1);",
          "373:     object[i].bounding_box.height-=(object[i].bounding_box.y-1);",
          "374:     object[i].color.red=ClampToQuantum(object[i].color.red/object[i].area);",
          "375:     object[i].color.green=ClampToQuantum(object[i].color.green/object[i].area);",
          "376:     object[i].color.blue=ClampToQuantum(object[i].color.blue/object[i].area);",
          "",
          "[Added Lines]",
          "390:     }",
          "391:   }",
          "394:     object[i].bounding_box.width-=(object[i].bounding_box.x-1);",
          "395:     object[i].bounding_box.height-=(object[i].bounding_box.y-1);",
          "396:     object[i].color.red=object[i].color.red/object[i].area;",
          "397:     object[i].color.green=object[i].color.green/object[i].area;",
          "398:     object[i].color.blue=object[i].color.blue/object[i].area;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "385:     Report statistics on unique objects.",
          "387:   qsort((void *) object,number_objects,sizeof(*object),CCObjectCompare);",
          "389:     \"Objects (id: bounding-box centroid area mean-color):\\n\");",
          "390:   for (i=0; i < (ssize_t) number_objects; i++) {",
          "391:     char",
          "",
          "[Removed Lines]",
          "388:   (void) fprintf(stdout,",
          "",
          "[Added Lines]",
          "410:   (void) fprintf(stdout,",
          "411:     \"Objects (id: bounding-box centroid area mean-color):\\n\");",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "455:   if (component_image == (Image *) NULL)",
          "456:     return((Image *) NULL);",
          "457:   component_image->depth=MAGICKCORE_QUANTUM_DEPTH;",
          "462:     return((Image *) NULL);",
          "463:   }",
          "465:     Initialize connected components equivalences.",
          "470:     ThrowImageException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "475:     return((Image *) NULL);",
          "476:   }",
          "477:   for (n=0; n < (ssize_t) (image->columns*image->rows); n++)",
          "",
          "[Removed Lines]",
          "458:   component_image->colorspace=GRAYColorspace;",
          "459:   status=SetImageStorageClass(component_image,DirectClass,exception);",
          "460:   if (status == MagickFalse) {",
          "461:     component_image=DestroyImage(component_image);",
          "467:   size=image->columns*image->rows;",
          "468:   if (image->columns != (size/image->rows)) {",
          "469:     component_image=DestroyImage(component_image);",
          "471:   }",
          "472:   equivalences=AcquireMatrixInfo(size,1,sizeof(ssize_t),exception);",
          "473:   if (equivalences == (MatrixInfo *) NULL) {",
          "474:     component_image=DestroyImage(component_image);",
          "",
          "[Added Lines]",
          "481:   component_image->colorspace=GRAYColorspace;",
          "482:   status=SetImageStorageClass(component_image,DirectClass,exception);",
          "483:   if (status == MagickFalse)",
          "484:     {",
          "485:       component_image=DestroyImage(component_image);",
          "491:   size=image->columns*image->rows;",
          "492:   if (image->columns != (size/image->rows))",
          "493:     {",
          "494:       component_image=DestroyImage(component_image);",
          "496:     }",
          "497:   equivalences=AcquireMatrixInfo(size,1,sizeof(ssize_t),exception);",
          "498:   if (equivalences == (MatrixInfo *) NULL)",
          "499:     {",
          "500:       component_image=DestroyImage(component_image);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "480:     Find connected components.",
          "482:   status=MagickTrue;",
          "484:   image_view=AcquireVirtualCacheView(image,exception);",
          "485:   for (n=0; n < (ssize_t) (connectivity > 4 ? 4 : 2); n++) {",
          "486:     ssize_t",
          "",
          "[Removed Lines]",
          "483:   progress=0;",
          "",
          "[Added Lines]",
          "509:   progress=0;",
          "510:   image_view=AcquireVirtualCacheView(image,exception);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "492:     if (status == MagickFalse)",
          "493:       continue;",
          "495:     dx=connectivity > 4 ? connect8[n][1] : connect4[n][1];",
          "496:     for (y=0; y < (ssize_t) image->rows; y++) {",
          "497:       register const Quantum",
          "",
          "[Removed Lines]",
          "494:     dy=connectivity > 4 ? connect8[n][0] : connect4[n][0];",
          "",
          "[Added Lines]",
          "521:     dy=connectivity > 4 ? connect8[n][0] : connect4[n][0];",
          "522:     dx=connectivity > 4 ? connect8[n][1] : connect4[n][1];",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "501:         x;",
          "503:       if (status == MagickFalse)",
          "508:         continue;",
          "510:       p+=GetPixelChannels(image)*image->columns;",
          "511:       for (x=0; x < (ssize_t) image->columns; x++) {",
          "512:         PixelInfo",
          "",
          "[Removed Lines]",
          "504:         continue;",
          "505:       p=GetCacheViewVirtualPixels(image_view,0,y-1,image->columns,3,exception);",
          "506:       if (p == (const Quantum *) NULL) {",
          "507:         status=MagickFalse;",
          "509:       }",
          "",
          "[Added Lines]",
          "532:         continue;",
          "533:       p=GetCacheViewVirtualPixels(image_view,0,y-1,image->columns,3,exception);",
          "534:       if (p == (const Quantum *) NULL)",
          "535:         {",
          "536:           status=MagickFalse;",
          "538:         }",
          "539:       p+=GetPixelChannels(image)*image->columns;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "528:         neighbor_offset=dy*(GetPixelChannels(image)*image->columns)+dx*",
          "529:           GetPixelChannels(image);",
          "530:         GetPixelInfoPixel(image,p+neighbor_offset,&target);",
          "535:           continue;",
          "536:         }",
          "",
          "[Removed Lines]",
          "531:         if (((x+dx) < 0) || ((x+dx) >= (ssize_t) image->columns) ||",
          "532:             ((y+dy) < 0) || ((y+dy) >= (ssize_t) image->rows) ||",
          "533:             (IsFuzzyEquivalencePixelInfo(&pixel,&target) == MagickFalse)) {",
          "534:           p+=GetPixelChannels(image);",
          "",
          "[Added Lines]",
          "561:         if (((x+dx) < 0) || ((x+dx) >= (ssize_t) image->columns) ||",
          "562:             ((y+dy) < 0) || ((y+dy) >= (ssize_t) image->rows) ||",
          "563:             (IsFuzzyEquivalencePixelInfo(&pixel,&target) == MagickFalse))",
          "564:           {",
          "565:             p+=GetPixelChannels(image);",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "540:         offset=y*image->columns+x;",
          "541:         neighbor_offset=dy*image->columns+dx;",
          "543:         status=GetMatrixElement(equivalences,ox,0,&object);",
          "544:         while (object != ox) {",
          "545:           ox=object;",
          "546:           status=GetMatrixElement(equivalences,ox,0,&object);",
          "547:         }",
          "549:         status=GetMatrixElement(equivalences,oy,0,&object);",
          "550:         while (object != oy) {",
          "551:           oy=object;",
          "559:           root=oy;",
          "560:         }",
          "562:         status=GetMatrixElement(equivalences,ox,0,&object);",
          "563:         while (object != root) {",
          "564:           status=GetMatrixElement(equivalences,ox,0,&object);",
          "565:           status=SetMatrixElement(equivalences,ox,0,&root);",
          "566:         }",
          "568:         status=GetMatrixElement(equivalences,oy,0,&object);",
          "569:         while (object != root) {",
          "570:           status=GetMatrixElement(equivalences,oy,0,&object);",
          "",
          "[Removed Lines]",
          "542:         ox=offset;",
          "548:         oy=offset+neighbor_offset;",
          "552:           status=GetMatrixElement(equivalences,oy,0,&object);",
          "553:         }",
          "554:         if (ox < oy) {",
          "555:           status=SetMatrixElement(equivalences,oy,0,&ox);",
          "556:           root=ox;",
          "557:         } else {",
          "558:           status=SetMatrixElement(equivalences,ox,0,&oy);",
          "561:         ox=offset;",
          "567:         oy=offset+neighbor_offset;",
          "",
          "[Added Lines]",
          "573:         ox=offset;",
          "574:         status=GetMatrixElement(equivalences,ox,0,&object);",
          "580:         oy=offset+neighbor_offset;",
          "581:         status=GetMatrixElement(equivalences,oy,0,&object);",
          "585:           status=GetMatrixElement(equivalences,oy,0,&object);",
          "586:         }",
          "587:         if (ox < oy)",
          "588:           {",
          "589:             status=SetMatrixElement(equivalences,oy,0,&ox);",
          "590:             root=ox;",
          "591:           }",
          "592:         else",
          "593:           {",
          "594:             status=SetMatrixElement(equivalences,ox,0,&oy);",
          "597:         ox=offset;",
          "598:         status=GetMatrixElement(equivalences,ox,0,&object);",
          "604:         oy=offset+neighbor_offset;",
          "605:         status=GetMatrixElement(equivalences,oy,0,&object);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "580:     Label connected components.",
          "583:   component_view=AcquireAuthenticCacheView(component_image,exception);",
          "584:   for (y=0; y < (ssize_t) component_image->rows; y++) {",
          "585:     register Quantum",
          "",
          "[Removed Lines]",
          "582:   n=0;",
          "",
          "[Added Lines]",
          "620:   n=0;",
          "621:   component_view=AcquireAuthenticCacheView(component_image,exception);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "591:     if (status == MagickFalse)",
          "592:       continue;",
          "598:     }",
          "599:     for (x=0; x < (ssize_t) component_image->columns; x++) {",
          "600:       ssize_t",
          "601:         object,",
          "602:         offset;",
          "611:         status=SetMatrixElement(equivalences,offset,0,&object);",
          "612:       }",
          "614:         object);",
          "615:       q+=GetPixelChannels(component_image);",
          "616:     }",
          "626:         status=MagickFalse;",
          "627:     }",
          "628:   }",
          "633:     ThrowImageException(ResourceLimitError,\"TooManyObjects\");",
          "634:   }",
          "635:   artifact=GetImageArtifact(image,\"connected-components:area-threshold\");",
          "",
          "[Removed Lines]",
          "593:     q=QueueCacheViewAuthenticPixels(component_view,0,y,component_image->columns,",
          "594:       1,exception);",
          "595:     if (q == (Quantum *) NULL) {",
          "596:       status=MagickFalse;",
          "597:       continue;",
          "604:       offset=y*image->columns+x;",
          "605:       status=GetMatrixElement(equivalences,offset,0,&object);",
          "606:       if (object == offset) {",
          "607:         object=n++;",
          "608:         status=SetMatrixElement(equivalences,offset,0,&object);",
          "609:       } else {",
          "610:         status=GetMatrixElement(equivalences,object,0,&object);",
          "617:     if (SyncCacheViewAuthenticPixels(component_view,exception) == MagickFalse)",
          "618:       status=MagickFalse;",
          "619:     if (image->progress_monitor != (MagickProgressMonitor) NULL) {",
          "620:       MagickBooleanType",
          "621:         proceed;",
          "623:       proceed=SetImageProgress(image,ConnectedComponentsImageTag,progress++,",
          "624:         image->rows);",
          "625:       if (proceed == MagickFalse)",
          "629:   component_view=DestroyCacheView(component_view);",
          "630:   equivalences=DestroyMatrixInfo(equivalences);",
          "631:   if (n > QuantumRange) {",
          "632:     component_image=DestroyImage(component_image);",
          "",
          "[Added Lines]",
          "632:     q=QueueCacheViewAuthenticPixels(component_view,0,y,component_image->columns,",
          "633:       1,exception);",
          "634:     if (q == (Quantum *) NULL)",
          "635:       {",
          "636:         status=MagickFalse;",
          "637:         continue;",
          "638:       }",
          "645:       offset=y*image->columns+x;",
          "646:       status=GetMatrixElement(equivalences,offset,0,&object);",
          "647:       if (object == offset)",
          "648:         {",
          "649:           object=n++;",
          "650:           status=SetMatrixElement(equivalences,offset,0,&object);",
          "651:         }",
          "652:       else",
          "653:         {",
          "654:           status=GetMatrixElement(equivalences,object,0,&object);",
          "661:     if (SyncCacheViewAuthenticPixels(component_view,exception) == MagickFalse)",
          "662:       status=MagickFalse;",
          "663:     if (image->progress_monitor != (MagickProgressMonitor) NULL)",
          "664:       {",
          "665:         MagickBooleanType",
          "666:           proceed;",
          "668:         proceed=SetImageProgress(image,ConnectedComponentsImageTag,progress++,",
          "669:           image->rows);",
          "670:         if (proceed == MagickFalse)",
          "674:   component_view=DestroyCacheView(component_view);",
          "675:   equivalences=DestroyMatrixInfo(equivalences);",
          "676:   if (n > (ssize_t) QuantumRange)",
          "677:     {",
          "678:       component_image=DestroyImage(component_image);",
          "",
          "---------------"
        ],
        "coders/json.c||coders/json.c": [
          "File: coders/json.c -> coders/json.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:     {",
          "374:       MagickBooleanType",
          "375:         match;",
          "377:       PixelTrait traits=GetPixelChannelTraits(image,channel);",
          "378:       if (traits == UndefinedPixelTrait)",
          "379:         continue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af823464e0675ab4b22d6f7409c10e540a74ce62",
      "candidate_info": {
        "commit_hash": "af823464e0675ab4b22d6f7409c10e540a74ce62",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/af823464e0675ab4b22d6f7409c10e540a74ce62",
        "files": [
          "MagickCore/version.h",
          "configure"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/version.h||MagickCore/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/version.h||MagickCore/version.h"
          ],
          "candidate": [
            "MagickCore/version.h||MagickCore/version.h"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/version.h||MagickCore/version.h": [
          "File: MagickCore/version.h -> MagickCore/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define MagickPackageName \"ImageMagick\"",
          "29: #define MagickCopyright  \"Copyright (C) 1999-2015 ImageMagick Studio LLC\"",
          "31: #define MagickLibVersion  0x700",
          "32: #define MagickLibVersionText  \"7.0.0\"",
          "33: #define MagickLibVersionNumber  1,0,0",
          "",
          "[Removed Lines]",
          "30: #define MagickSVNRevision  \"17953M\"",
          "",
          "[Added Lines]",
          "30: #define MagickSVNRevision  \"18036\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: #define MagickppLibAddendum  \"-0\"",
          "49: #define MagickppLibInterface  1",
          "50: #define MagickppLibMinInterface  1",
          "52: #define MagickChangeDate   \"20120427\"",
          "53: #define MagickAuthoritativeLicense  \\",
          "54:   \"http://www.imagemagick.org/script/license.php\"",
          "",
          "[Removed Lines]",
          "51: #define MagickReleaseDate  \"2015-02-17\"",
          "",
          "[Added Lines]",
          "51: #define MagickReleaseDate  \"2015-02-18\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}