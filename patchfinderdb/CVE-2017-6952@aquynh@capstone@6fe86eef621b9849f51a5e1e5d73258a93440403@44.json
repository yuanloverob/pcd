{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f127444910a489507c229d47b5d0178fa0f696c8",
      "candidate_info": {
        "commit_hash": "f127444910a489507c229d47b5d0178fa0f696c8",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/f127444910a489507c229d47b5d0178fa0f696c8",
        "files": [
          "bindings/python/capstone/m68k.py"
        ],
        "message": "Reorder M68KOp elements to match order on C side (#1067)",
        "before_after_code_files": [
          "bindings/python/capstone/m68k.py||bindings/python/capstone/m68k.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/m68k.py||bindings/python/capstone/m68k.py": [
          "File: bindings/python/capstone/m68k.py -> bindings/python/capstone/m68k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: class M68KOp(ctypes.Structure):",
          "39:     _fields_ = (",
          "40:         ('value', M68KOpValue),",
          "42:         ('mem', M68KOpMem),",
          "43:         ('register_bits', ctypes.c_uint),",
          "44:         ('address_mode', ctypes.c_uint),",
          "45:     )",
          "",
          "[Removed Lines]",
          "41:         ('type', ctypes.c_uint),",
          "",
          "[Added Lines]",
          "43:         ('type', ctypes.c_uint),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab1086401e0ad7779814333be762cee92cc8b0cf",
      "candidate_info": {
        "commit_hash": "ab1086401e0ad7779814333be762cee92cc8b0cf",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ab1086401e0ad7779814333be762cee92cc8b0cf",
        "files": [
          "arch/M68K/M68KDisassembler.c"
        ],
        "message": "M68KDisassembler.c: fixed typo in d68000_roxr_ea",
        "before_after_code_files": [
          "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c": [
          "File: arch/M68K/M68KDisassembler.c -> arch/M68K/M68KDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3026: static void d68000_roxr_ea(m68k_info *info)",
          "3027: {",
          "3029: }",
          "3031: static void d68000_roxl_s_8(m68k_info *info)",
          "",
          "[Removed Lines]",
          "3028:  build_ea(info, M68K_INS_ROL, 2);",
          "",
          "[Added Lines]",
          "3028:  build_ea(info, M68K_INS_ROXR, 2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1af41d2f92b29689d9be1e4582d115e538441c3f",
      "candidate_info": {
        "commit_hash": "1af41d2f92b29689d9be1e4582d115e538441c3f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/1af41d2f92b29689d9be1e4582d115e538441c3f",
        "files": [
          "arch/X86/X86GenAsmWriter.inc"
        ],
        "message": "x86: fix (AT&T) ROL instruction in issue #804",
        "before_after_code_files": [
          "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc": [
          "File: arch/X86/X86GenAsmWriter.inc -> arch/X86/X86GenAsmWriter.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19242:   if (!X86_lockrep(MI, O)) {",
          "19243: #ifndef CAPSTONE_DIET",
          "19249: #endif",
          "19250:   }",
          "",
          "[Removed Lines]",
          "19245:     if (opcode == X86_MOV32sm) {",
          "19246:       SStream_concat0(O, \"movw\\t\");",
          "19247:     } else",
          "19248:       SStream_concat0(O, AsmStrs+(Bits & 16383)-1);",
          "",
          "[Added Lines]",
          "19245:     switch(opcode) {",
          "19246:       default:",
          "19247:         SStream_concat0(O, AsmStrs+(Bits & 16383)-1);",
          "19248:         break;",
          "19249:       case X86_MOV32sm:",
          "19250:         SStream_concat0(O, \"movw\\t\");",
          "19251:         break;",
          "19252:       case X86_ROL32r1:",
          "19253:         SStream_concat0(O, \"rol\\t$1, \");",
          "19254:         break;",
          "19255:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "268d00a2b9692e429d1c0f902a05e22212120da4",
      "candidate_info": {
        "commit_hash": "268d00a2b9692e429d1c0f902a05e22212120da4",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/268d00a2b9692e429d1c0f902a05e22212120da4",
        "files": [
          "arch/X86/X86ATTInstPrinter.c"
        ],
        "message": "x86: fix issue #717",
        "before_after_code_files": [
          "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c": [
          "File: arch/X86/X86ATTInstPrinter.c -> arch/X86/X86ATTInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "798:       SStream_concat(O, \"%\"PRIu64, DispVal);",
          "799:     }",
          "800:    }",
          "801:   }",
          "802:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "801:   } else {",
          "802:    SStream_concat0(O, \"0\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "206f5ffd14bd621bf9cadc533f1703eba8846c0b",
      "candidate_info": {
        "commit_hash": "206f5ffd14bd621bf9cadc533f1703eba8846c0b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/206f5ffd14bd621bf9cadc533f1703eba8846c0b",
        "files": [
          "SStream.c"
        ],
        "message": "fix signed int overflow reported by Google AutoFuzz at #1060, #1061, #1062",
        "before_after_code_files": [
          "SStream.c||SStream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "SStream.c||SStream.c": [
          "File: SStream.c -> SStream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:    SStream_concat(O, \"#%\"PRIu64, val);",
          "60:  } else {",
          "61:   if (val <- HEX_THRESHOLD)",
          "63:   else",
          "64:    SStream_concat(O, \"#-%\"PRIu64, -val);",
          "65:  }",
          "",
          "[Removed Lines]",
          "62:    SStream_concat(O, \"#-0x%\"PRIx64, -val);",
          "",
          "[Added Lines]",
          "62:    SStream_concat(O, \"#-0x%\"PRIx64, (uint64_t)-val);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:    SStream_concat(O, \"%\"PRIu64, val);",
          "84:  } else {",
          "85:   if (val <- HEX_THRESHOLD)",
          "87:   else",
          "88:    SStream_concat(O, \"-%\"PRIu64, -val);",
          "89:  }",
          "",
          "[Removed Lines]",
          "86:    SStream_concat(O, \"-0x%\"PRIx64, -val);",
          "",
          "[Added Lines]",
          "86:    SStream_concat(O, \"-0x%\"PRIx64, (uint64_t)-val);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "95:  if (val >= 0)",
          "96:   SStream_concat(O, \"#%u\", val);",
          "97:  else",
          "99: }",
          "101: void printInt32Bang(SStream *O, int32_t val)",
          "",
          "[Removed Lines]",
          "98:   SStream_concat(O, \"#-%u\", -val);",
          "",
          "[Added Lines]",
          "98:   SStream_concat(O, \"#-%u\", (uint32_t)-val);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "107:    SStream_concat(O, \"#%u\", val);",
          "108:  } else {",
          "109:   if (val <- HEX_THRESHOLD)",
          "111:   else",
          "112:    SStream_concat(O, \"#-%u\", -val);",
          "113:  }",
          "",
          "[Removed Lines]",
          "110:    SStream_concat(O, \"#-0x%x\", -val);",
          "",
          "[Added Lines]",
          "110:    SStream_concat(O, \"#-0x%x\", (uint32_t)-val);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "122:    SStream_concat(O, \"%u\", val);",
          "123:  } else {",
          "124:   if (val <- HEX_THRESHOLD)",
          "126:   else",
          "127:    SStream_concat(O, \"-%u\", -val);",
          "128:  }",
          "",
          "[Removed Lines]",
          "125:    SStream_concat(O, \"-0x%x\", -val);",
          "",
          "[Added Lines]",
          "125:    SStream_concat(O, \"-0x%x\", (uint32_t)-val);",
          "",
          "---------------"
        ]
      }
    }
  ]
}