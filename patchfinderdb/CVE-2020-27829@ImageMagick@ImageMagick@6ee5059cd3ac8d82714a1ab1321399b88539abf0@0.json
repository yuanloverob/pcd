{
  "cve_id": "CVE-2020-27829",
  "cve_desc": "A heap based buffer overflow in coders/tiff.c may result in program crash and denial of service in ImageMagick before 7.0.10-45.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "6ee5059cd3ac8d82714a1ab1321399b88539abf0",
  "patch_info": {
    "commit_hash": "6ee5059cd3ac8d82714a1ab1321399b88539abf0",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/6ee5059cd3ac8d82714a1ab1321399b88539abf0",
    "files": [
      "ChangeLog",
      "coders/tiff.c"
    ],
    "message": "possible TIFF related-heap buffer overflow (alert & POC by Hardik Shah)",
    "before_after_code_files": [
      "coders/tiff.c||coders/tiff.c"
    ]
  },
  "patch_diff": {
    "coders/tiff.c||coders/tiff.c": [
      "File: coders/tiff.c -> coders/tiff.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1975:           Convert stripped TIFF image.",
      "1977:         extent=TIFFStripSize(tiff);",
      "1979:         extent+=image->columns*sizeof(uint64);",
      "1980: #else",
      "1981:         extent+=image->columns*sizeof(uint32);",
      "",
      "[Removed Lines]",
      "1978: #if defined(TIFF_VERSION_BIG)",
      "",
      "[Added Lines]",
      "1978: #if defined(TIFF_VERSION_BIG)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a59537917dcaf2159ed638d8aaeef281cca4cf7d",
      "candidate_info": {
        "commit_hash": "a59537917dcaf2159ed638d8aaeef281cca4cf7d",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/a59537917dcaf2159ed638d8aaeef281cca4cf7d",
        "files": [
          "coders/tiff.c"
        ],
        "message": "...",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1977:           Convert stripped TIFF image.",
          "1979:         extent=TIFFStripSize(tiff);",
          "1981:         extent+=image->columns*sizeof(uint64);",
          "1982: #else",
          "1983:         extent+=image->columns*sizeof(uint32);",
          "",
          "[Removed Lines]",
          "1980: #if defined(TIFF_VERSION_BIG)",
          "",
          "[Added Lines]",
          "1980: #if defined(TIFF_VERSION_BIG)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a61f0aeba288473e180da1701ee0bccf9a6dedd0",
      "candidate_info": {
        "commit_hash": "a61f0aeba288473e180da1701ee0bccf9a6dedd0",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/a61f0aeba288473e180da1701ee0bccf9a6dedd0",
        "files": [
          "MagickCore/histogram.c",
          "coders/tiff.c"
        ],
        "message": "correct previous patch to read planar RGB TIFF images",
        "before_after_code_files": [
          "MagickCore/histogram.c||MagickCore/histogram.c",
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/histogram.c||MagickCore/histogram.c": [
          "File: MagickCore/histogram.c -> MagickCore/histogram.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1072:     (void) ConcatenateMagickString(tuple,\",\",MagickPathExtent);",
          "1073:     ConcatenateColorComponent(&pixel,GreenPixelChannel,NoCompliance,tuple);",
          "1074:     (void) ConcatenateMagickString(tuple,\",\",MagickPathExtent);",
          "1076:     if (pixel.colorspace == CMYKColorspace)",
          "1077:       {",
          "1078:         (void) ConcatenateMagickString(tuple,\",\",MagickPathExtent);",
          "",
          "[Removed Lines]",
          "1075:     ConcatenateColorComponent(&pixel,BluePixelChannel,NoCompliance,tuple);",
          "",
          "[Added Lines]",
          "1075:     ConcatenateColorComponent(&pixel,BluePixelChannel,NoCompliance,tuple);",
          "",
          "---------------"
        ],
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1322:   QuantumInfo",
          "1328:   register ssize_t",
          "1329:     i;",
          "",
          "[Removed Lines]",
          "1325:   QuantumType",
          "1326:     quantum_type;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1851:           ThrowTIFFException(ImageError,\"WidthOrHeightExceedsLimit\");",
          "1852:         method=ReadTileMethod;",
          "1853:       }",
          "1855:       method=ReadGenericMethod;",
          "1856:     if (image->compression == JPEGCompression)",
          "1857:       method=GetJPEGMethod(image,tiff,photometric,bits_per_sample,",
          "",
          "[Removed Lines]",
          "1854:     if (photometric == PHOTOMETRIC_LOGLUV)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1864:       ThrowTIFFException(CorruptImageError,\"InsufficientImageDataInFile\");",
          "1865:     number_pixels=MagickMax(TIFFScanlineSize(tiff),MagickMax((ssize_t)",
          "1866:       image->columns*samples_per_pixel*pow(2.0,ceil(log(bits_per_sample)/",
          "1870:       ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "1871:     pixels=(unsigned char *) GetVirtualMemoryBlob(pixel_info);",
          "1883:       if (image->storage_class != PseudoClass)",
          "1884:         quantum_type=GrayQuantum;",
          "1887:         pad=(size_t) MagickMax((size_t) samples_per_pixel-3,0);",
          "1889:         if (image->alpha_trait != UndefinedPixelTrait)",
          "1892:             pad=(size_t) MagickMax((size_t) samples_per_pixel-4,0);",
          "1893:           }",
          "1896:             pad=(size_t) MagickMax((size_t) samples_per_pixel-4,0);",
          "1897:             quantum_type=CMYKQuantum;",
          "1898:             if (image->alpha_trait != UndefinedPixelTrait)",
          "",
          "[Removed Lines]",
          "1867:       log(2.0))),image->columns*rows_per_strip));",
          "1868:     pixel_info=AcquireVirtualMemory(number_pixels,sizeof(uint32));",
          "1869:     if (pixel_info == (MemoryInfo *) NULL)",
          "1872:     (void) memset(pixels,0,number_pixels*sizeof(uint32));",
          "1873:     quantum_type=IndexQuantum;",
          "1874:     pad=(size_t) MagickMax((ssize_t) samples_per_pixel-1,0);",
          "1875:     if (image->alpha_trait != UndefinedPixelTrait)",
          "1876:       {",
          "1877:         if (image->storage_class == PseudoClass)",
          "1878:           quantum_type=IndexAlphaQuantum;",
          "1879:         else",
          "1880:           quantum_type=samples_per_pixel == 1 ? AlphaQuantum : GrayAlphaQuantum;",
          "1881:       }",
          "1882:     else",
          "1885:     if ((samples_per_pixel > 2) && (interlace != PLANARCONFIG_SEPARATE))",
          "1886:       {",
          "1888:         quantum_type=RGBQuantum;",
          "1890:           {",
          "1891:             quantum_type=RGBAQuantum;",
          "1894:         if (image->colorspace == CMYKColorspace)",
          "1895:           {",
          "",
          "[Added Lines]",
          "1863:       log(2.0))),image->columns*rows_per_strip));",
          "1864:     pixel_info=AcquireVirtualMemory(number_pixels,sizeof(uint32));",
          "1866:       ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "1867:     pixels=(unsigned char *) GetVirtualMemoryBlob(pixel_info);",
          "1868:     (void) memset(pixels,0,number_pixels*sizeof(uint32));",
          "1869:     quantum_type=GrayQuantum;",
          "1871:       {",
          "1875:         pad=(size_t) MagickMax((ssize_t) samples_per_pixel-1,0);",
          "1876:         if (image->storage_class == PseudoClass)",
          "1877:           quantum_type=IndexQuantum;",
          "1878:         if (image->alpha_trait != UndefinedPixelTrait)",
          "1880:             quantum_type=AlphaQuantum;",
          "1882:               quantum_type=IndexAlphaQuantum;",
          "1883:             if (samples_per_pixel > 1)",
          "1886:         if (samples_per_pixel > 2)",
          "1887:           {",
          "1888:             quantum_type=RGBQuantum;",
          "1889:             pad=(size_t) MagickMax((size_t) samples_per_pixel-3,0);",
          "1890:             if (image->alpha_trait != UndefinedPixelTrait)",
          "1891:               {",
          "1892:                 quantum_type=RGBAQuantum;",
          "1893:                 pad=(size_t) MagickMax((size_t) samples_per_pixel-4,0);",
          "1894:               }",
          "1895:             if (image->colorspace == CMYKColorspace)",
          "1896:               {",
          "1897:                 quantum_type=CMYKQuantum;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1977:           Convert stripped TIFF image.",
          "1979:         extent=TIFFStripSize(tiff);",
          "1981:         extent+=image->columns*sizeof(uint64);",
          "1982: #else",
          "1983:         extent+=image->columns*sizeof(uint32);",
          "",
          "[Removed Lines]",
          "1980: #if defined(TIFF_VERSION_BIG)",
          "",
          "[Added Lines]",
          "1982: #if defined(TIFF_VERSION_BIG)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1991:         strip_id=0;",
          "1992:         p=strip_pixels;",
          "1993:         for (i=0; i < (ssize_t) samples_per_pixel; i++)",
          "1995:           size_t",
          "1996:             rows_remaining;",
          "",
          "[Removed Lines]",
          "1994:         {",
          "",
          "[Added Lines]",
          "1996:         {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2085:         tile_pixels=(unsigned char *) AcquireQuantumMemory(extent,",
          "2086:           sizeof(*tile_pixels));",
          "2087:         if (tile_pixels == (unsigned char *) NULL)",
          "2089:         (void) memset(tile_pixels,0,extent*sizeof(*tile_pixels));",
          "2090:         for (i=0; i < (ssize_t) samples_per_pixel; i++)",
          "2091:         {",
          "",
          "[Removed Lines]",
          "2088:           ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "",
          "[Added Lines]",
          "2090:           ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b27143fc2fbe7c2ad52f170a7fd0df9db782f919",
      "candidate_info": {
        "commit_hash": "b27143fc2fbe7c2ad52f170a7fd0df9db782f919",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/b27143fc2fbe7c2ad52f170a7fd0df9db782f919",
        "files": [
          "coders/tiff.c"
        ],
        "message": "...",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1906:             }",
          "1907:         }",
          "1908:         break;",
          "1909:       }",
          "1910:       case ReadStripMethod:",
          "1911:       {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1909:       }",
          "1910:       case ReadStripMethod:",
          "1911:       {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1919:         tsize_t",
          "1920:           strip_size;",
          "1928:         strip_pixels=(unsigned char *) AcquireQuantumMemory(TIFFStripSize(tiff)+",
          "1929:           sizeof(uint32),sizeof(*strip_pixels));",
          "",
          "[Removed Lines]",
          "1922:         unsigned char",
          "1926:           Convert stripped TIFF image.",
          "",
          "[Added Lines]",
          "1925:         unsigned char",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1992:         }",
          "1993:         strip_pixels=(unsigned char *) RelinquishMagickMemory(strip_pixels);",
          "1994:         break;",
          "1995:       }",
          "1996:       case ReadTileMethod:",
          "1997:       {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1999:       }",
          "2000:       case ReadTileMethod:",
          "2001:       {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2011:         if ((TIFFGetField(tiff,TIFFTAG_TILEWIDTH,&columns) != 1) ||",
          "2012:             (TIFFGetField(tiff,TIFFTAG_TILELENGTH,&rows) != 1))",
          "2013:           ThrowTIFFException(CoderError,\"ImageIsNotTiled\");",
          "2016:           ThrowTIFFException(ImageError,\"WidthOrHeightExceedsLimit\");",
          "2017:         number_pixels=(MagickSizeType) columns*rows;",
          "2018:         if (HeapOverflowSanityCheck(rows,sizeof(*tile_pixels)) != MagickFalse)",
          "",
          "[Removed Lines]",
          "2014:         if ((AcquireMagickResource(WidthResource,columns) == MagickFalse) ||",
          "2015:             (AcquireMagickResource(HeightResource,rows) == MagickFalse))",
          "",
          "[Added Lines]",
          "2021:         if ((AcquireMagickResource(WidthResource,columns) == MagickFalse) ||",
          "2022:             (AcquireMagickResource(HeightResource,rows) == MagickFalse))",
          "2023:           ThrowTIFFException(ImageError,\"WidthOrHeightExceedsLimit\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "edb23f607528e2d3887f22a6454224c179b8e309",
      "candidate_info": {
        "commit_hash": "edb23f607528e2d3887f22a6454224c179b8e309",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/edb23f607528e2d3887f22a6454224c179b8e309",
        "files": [
          "coders/tiff.c"
        ],
        "message": "...",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1982:           Convert stripped TIFF image.",
          "1984:         extent=TIFFStripSize(tiff);",
          "1986:         extent+=image->columns*sizeof(uint64);",
          "1987: #else",
          "1989: #endif",
          "1990:         strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,",
          "1991:           2*sizeof(*strip_pixels));",
          "",
          "[Removed Lines]",
          "1985: #if defined(TIFF_VERSION_BIG)",
          "1988:         extent+=image->columns*sizeof(uint32);",
          "",
          "[Added Lines]",
          "1985: #if defined(TIFF_VERSION_BIG)",
          "1988:         extent+=image->columns*sizeof(uint32);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "59125f0af71ea162da80e14fb4bc44ca7c4a8038",
      "candidate_info": {
        "commit_hash": "59125f0af71ea162da80e14fb4bc44ca7c4a8038",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/59125f0af71ea162da80e14fb4bc44ca7c4a8038",
        "files": [
          "coders/tiff.c"
        ],
        "message": "...",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:   ReadSingleSampleMethod,",
          "120:   ReadRGBAMethod,",
          "121:   ReadCMYKAMethod,",
          "123:   ReadStripMethod,",
          "124:   ReadTileMethod,",
          "125:   ReadContigTileMethod,",
          "",
          "[Removed Lines]",
          "122:   ReadYCCKMethod,",
          "",
          "[Added Lines]",
          "122:   ReadYCCKMethod,",
          "123:   ReadContigStripMethod,",
          "124:   ReadPlanarStripMethod,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1791:     if (image->alpha_trait != UndefinedPixelTrait)",
          "1792:       (void) SetImageAlphaChannel(image,OpaqueAlphaChannel,exception);",
          "1793:     method=ReadGenericMethod;",
          "1795:     if (TIFFGetField(tiff,TIFFTAG_ROWSPERSTRIP,&rows_per_strip) == 1)",
          "1796:       {",
          "1797:         char",
          "",
          "[Removed Lines]",
          "1794:     rows_per_strip=(uint32) image->rows;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1821:     if ((photometric == PHOTOMETRIC_MINISBLACK) ||",
          "1822:         (photometric == PHOTOMETRIC_MINISWHITE))",
          "1823:       method=ReadSingleSampleMethod;",
          "1826:       method=ReadGenericMethod;",
          "1827:     if (image->compression == JPEGCompression)",
          "1828:       method=GetJPEGMethod(image,tiff,photometric,bits_per_sample,",
          "",
          "[Removed Lines]",
          "1824:     if ((photometric != PHOTOMETRIC_SEPARATED) &&",
          "1825:         (interlace == PLANARCONFIG_SEPARATE) && (bits_per_sample < 64))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1835:         if (samples_per_pixel > 1)",
          "1836:           {",
          "1837:             method=ReadContigTileMethod;",
          "1838:             if (interlace == PLANARCONFIG_SEPARATE)",
          "1839:               method=ReadPlanarTileMethod;",
          "1840:           }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1837:             if (interlace == PLANARCONFIG_SEPARATE)",
          "1838:               method=ReadPlanarTileMethod;",
          "1839:           }",
          "1840:         if (image->compression == JPEGCompression)",
          "1841:           method=ReadRGBATileMethod;",
          "1842:       }",
          "1843:     else",
          "1844:       if (TIFFGetField(tiff,TIFFTAG_ROWSPERSTRIP,&rows_per_strip) == 1)",
          "1845:         {",
          "1846:           method=ReadRGBAStripMethod;",
          "1847:           if (samples_per_pixel > 1)",
          "1848:             {",
          "1849:               method=ReadContigStripMethod;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2055:             {",
          "2056:               status=SetImageProgress(image,LoadImageTag,(MagickOffsetType) y,",
          "2057:                 image->rows);",
          "2059:                 break;",
          "2060:             }",
          "2061:         }",
          "",
          "[Removed Lines]",
          "2058:               if (status == MagickFalse)",
          "",
          "[Added Lines]",
          "2070:               if (status == MagickFalse)",
          "2071:                 break;",
          "2072:             }",
          "2073:         }",
          "2074:         break;",
          "2075:       }",
          "2076:       case ReadContigStripMethod:",
          "2077:       {",
          "2078:         register unsigned char",
          "2081:         ssize_t",
          "2082:           stride,",
          "2083:           strip_id;",
          "2085:         tsize_t",
          "2086:           rows_remaining,",
          "2087:           strip_size;",
          "2089:         unsigned char",
          "2093:           Convert tiled TIFF image to DirectClass MIFF image.",
          "2095:         pad=(size_t) MagickMax((size_t) samples_per_pixel-3,0);",
          "2096:         quantum_type=RGBQuantum;",
          "2097:         if (image->alpha_trait != UndefinedPixelTrait)",
          "2098:           {",
          "2099:             quantum_type=RGBAQuantum;",
          "2100:             pad=(size_t) MagickMax((size_t) samples_per_pixel-4,0);",
          "2101:           }",
          "2102:         if (image->colorspace == CMYKColorspace)",
          "2103:           {",
          "2104:             pad=(size_t) MagickMax((size_t) samples_per_pixel-4,0);",
          "2105:             quantum_type=CMYKQuantum;",
          "2106:             if (image->alpha_trait != UndefinedPixelTrait)",
          "2107:               {",
          "2108:                 quantum_type=CMYKAQuantum;",
          "2109:                 pad=(size_t) MagickMax((size_t) samples_per_pixel-5,0);",
          "2110:               }",
          "2111:           }",
          "2112:         status=SetQuantumPad(image,quantum_info,pad*((bits_per_sample+7) >> 3));",
          "2113:         if (status == MagickFalse)",
          "2114:           ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "2115:         strip_pixels=(unsigned char *) AcquireQuantumMemory(TIFFStripSize(tiff)+",
          "2116:           sizeof(uint32),sizeof(*strip_pixels));",
          "2117:         if (strip_pixels == (unsigned char *) NULL)",
          "2118:           ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "2119:         (void) memset(strip_pixels,0,TIFFStripSize(tiff)*sizeof(*strip_pixels));",
          "2120:         stride=TIFFVStripSize(tiff,1);",
          "2121:         strip_id=0;",
          "2122:         rows_remaining=0;",
          "2123:         for (y=0; y < (ssize_t) image->rows; y++)",
          "2124:         {",
          "2125:           register Quantum",
          "2128:           q=GetAuthenticPixels(image,0,y,image->columns,1,exception);",
          "2129:           if (q == (Quantum *) NULL)",
          "2130:             break;",
          "2131:           if (rows_remaining == 0)",
          "2132:             {",
          "2133:               strip_size=TIFFReadEncodedStrip(tiff,strip_id,strip_pixels,",
          "2134:                 TIFFStripSize(tiff));",
          "2135:               if (strip_size == -1)",
          "2136:                 break;",
          "2137:               rows_remaining=rows_per_strip;",
          "2138:               if ((y+rows_per_strip) > image->rows)",
          "2139:                 rows_remaining=(rows_per_strip-(y+rows_per_strip-image->rows));",
          "2140:               p=strip_pixels;",
          "2141:               strip_id++;",
          "2142:             }",
          "2143:           (void) ImportQuantumPixels(image,(CacheView *) NULL,",
          "2144:             quantum_info,quantum_type,p,exception);",
          "2145:           p+=stride;",
          "2146:           rows_remaining--;",
          "2147:           if (SyncAuthenticPixels(image,exception) == MagickFalse)",
          "2148:             break;",
          "2149:           if (image->previous == (Image *) NULL)",
          "2150:             {",
          "2151:               status=SetImageProgress(image,LoadImageTag,(MagickOffsetType) y,",
          "2152:                 image->rows);",
          "2153:               if (status == MagickFalse)",
          "2154:                 break;",
          "2155:             }",
          "2156:         }",
          "2157:         strip_pixels=(unsigned char *) RelinquishMagickMemory(strip_pixels);",
          "2158:         break;",
          "2159:       }",
          "2160:       case ReadPlanarStripMethod:",
          "2161:       {",
          "2162:         register unsigned char",
          "2165:         ssize_t",
          "2166:           stride,",
          "2167:           strip_id;",
          "2169:         tsize_t",
          "2170:           strip_size;",
          "2172:         unsigned char",
          "2176:           Convert tiled TIFF image to DirectClass MIFF image.",
          "2178:         strip_pixels=(unsigned char *) AcquireQuantumMemory(TIFFStripSize(tiff)+",
          "2179:           sizeof(uint32),sizeof(*strip_pixels));",
          "2180:         if (strip_pixels == (unsigned char *) NULL)",
          "2181:           ThrowTIFFException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "2182:         (void) memset(strip_pixels,0,TIFFStripSize(tiff)*sizeof(*strip_pixels));",
          "2183:         stride=TIFFVStripSize(tiff,1);",
          "2184:         strip_id=0;",
          "2185:         for (i=0; i < (ssize_t) samples_per_pixel; i++)",
          "2186:         {",
          "2187:           size_t",
          "2188:             rows_remaining;",
          "2190:           switch (i)",
          "2191:           {",
          "2192:             case 0: quantum_type=RedQuantum; break;",
          "2193:             case 1: quantum_type=GreenQuantum; break;",
          "2194:             case 2: quantum_type=BlueQuantum; break;",
          "2195:             case 3:",
          "2196:             {",
          "2197:               if (image->colorspace == CMYKColorspace)",
          "2198:                 quantum_type=BlackQuantum;",
          "2199:               break;",
          "2200:             }",
          "2201:             case 4: quantum_type=AlphaQuantum; break;",
          "2202:           }",
          "2203:           rows_remaining=0;",
          "2204:           for (y=0; y < (ssize_t) image->rows; y++)",
          "2205:           {",
          "2206:             register Quantum",
          "2209:             q=GetAuthenticPixels(image,0,y,image->columns,1,exception);",
          "2210:             if (q == (Quantum *) NULL)",
          "2211:               break;",
          "2212:             if (rows_remaining == 0)",
          "2213:               {",
          "2214:                 strip_size=TIFFReadEncodedStrip(tiff,strip_id,strip_pixels,",
          "2215:                   TIFFStripSize(tiff));",
          "2216:                 if (strip_size == -1)",
          "2217:                   break;",
          "2218:                 rows_remaining=rows_per_strip;",
          "2219:                 if ((y+rows_per_strip) > image->rows)",
          "2220:                   rows_remaining=(rows_per_strip-(y+rows_per_strip-",
          "2221:                     image->rows));",
          "2222:                 p=strip_pixels;",
          "2223:                 strip_id++;",
          "2224:               }",
          "2225:             (void) ImportQuantumPixels(image,(CacheView *) NULL,",
          "2226:               quantum_info,quantum_type,p,exception);",
          "2227:             p+=stride;",
          "2228:             rows_remaining--;",
          "2229:             if (SyncAuthenticPixels(image,exception) == MagickFalse)",
          "2230:               break;",
          "2231:             if (image->previous == (Image *) NULL)",
          "2232:               {",
          "2233:                 status=SetImageProgress(image,LoadImageTag,(MagickOffsetType) y,",
          "2234:                   image->rows);",
          "2235:                 if (status == MagickFalse)",
          "2236:                   break;",
          "2237:               }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2330:           columns,",
          "2331:           rows;",
          "2337:           Convert tiled TIFF image to DirectClass MIFF image.",
          "",
          "[Removed Lines]",
          "2333:         unsigned char",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}