{
  "cve_id": "CVE-2021-29564",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can trigger a null pointer dereference in the implementation of `tf.raw_ops.EditDistance`. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/79865b542f9ffdc9caeb255631f7c56f1d4b6517/tensorflow/core/kernels/edit_distance_op.cc#L103-L159) has incomplete validation of the input parameters. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
  "patch_info": {
    "commit_hash": "f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
    "files": [
      "tensorflow/core/kernels/edit_distance_op.cc"
    ],
    "message": "Fix multiple issues in EditDistance\n\nPiperOrigin-RevId: 372033948\nChange-Id: Ieb957c29894af05bdfeb1a0402fced808dfcfd7b",
    "before_after_code_files": [
      "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc": [
      "File: tensorflow/core/kernels/edit_distance_op.cc -> tensorflow/core/kernels/edit_distance_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "64:     return errors::InvalidArgument(",
      "65:         \"truth_shape should be a vector, but got shape: \",",
      "66:         truth_shape.shape().DebugString());",
      "67:   if (hypothesis_shape.NumElements() != hypothesis_indices.dim_size(1))",
      "68:     return errors::InvalidArgument(",
      "69:         \"Expected hypothesis_shape.NumElements == \"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "67:   if (hypothesis_values.NumElements() != hypothesis_indices.dim_size(0))",
      "68:     return errors::InvalidArgument(",
      "69:         \"Expected hypothesis_values.NumElements == \"",
      "70:         \"#rows(hypothesis_indices), their shapes are: \",",
      "71:         hypothesis_values.shape().DebugString(), \" and \",",
      "72:         hypothesis_indices.shape().DebugString());",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:         \"Input SparseTensors must have rank at least 2, but truth_shape \"",
      "76:         \"rank is: \",",
      "77:         truth_shape.NumElements());",
      "78:   if (truth_shape.NumElements() != truth_indices.dim_size(1))",
      "79:     return errors::InvalidArgument(",
      "80:         \"Expected truth_shape.NumElements == \"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "84:   if (truth_values.NumElements() != truth_indices.dim_size(0))",
      "85:     return errors::InvalidArgument(",
      "86:         \"Expected truth_values.NumElements == \"",
      "87:         \"#rows(truth_indices), their shapes are: \",",
      "88:         truth_values.shape().DebugString(), \" and \",",
      "89:         truth_indices.shape().DebugString());",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "153:       output_shape.AddDim(std::max(hypothesis_st_shape.dim_size(d),",
      "154:                                    truth_st_shape.dim_size(d)));",
      "155:     }",
      "157:     Tensor* output = nullptr;",
      "158:     OP_REQUIRES_OK(ctx, ctx->allocate_output(\"output\", output_shape, &output));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "168:     const auto output_elements = output_shape.num_elements();",
      "169:     OP_REQUIRES(",
      "170:         ctx, output_elements > 0,",
      "171:         errors::InvalidArgument(\"Got output shape \", output_shape.DebugString(),",
      "172:                                 \" which has 0 elements\"));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "185:       if (g_truth == g_hypothesis) {",
      "186:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
      "187:                                       output_strides.begin(), int64{0});",
      "188:         output_t(loc) =",
      "189:             gtl::LevenshteinDistance<T>(truth_seq, hypothesis_seq, cmp);",
      "190:         if (normalize_) output_t(loc) /= truth_seq.size();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "205:         OP_REQUIRES(",
      "206:             ctx, loc < output_elements,",
      "207:             errors::Internal(\"Got an inner product \", loc,",
      "208:                              \" which would require in writing to outside of \"",
      "209:                              \"the buffer for the output tensor (max elements \",",
      "210:                              output_elements, \")\"));",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "194:       } else if (g_truth > g_hypothesis) {  // zero-length truth",
      "195:         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
      "196:                                       output_strides.begin(), int64{0});",
      "197:         output_t(loc) = hypothesis_seq.size();",
      "198:         if (normalize_ && output_t(loc) != 0.0f) {",
      "199:           output_t(loc) = std::numeric_limits<float>::infinity();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "220:         OP_REQUIRES(",
      "221:             ctx, loc < output_elements,",
      "222:             errors::Internal(\"Got an inner product \", loc,",
      "223:                              \" which would require in writing to outside of \"",
      "224:                              \"the buffer for the output tensor (max elements \",",
      "225:                              output_elements, \")\"));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "202:       } else {  // zero-length hypothesis",
      "203:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
      "204:                                       output_strides.begin(), int64{0});",
      "205:         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
      "206:         ++truth_iter;",
      "207:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "234:         OP_REQUIRES(",
      "235:             ctx, loc < output_elements,",
      "236:             errors::Internal(\"Got an inner product \", loc,",
      "237:                              \" which would require in writing to outside of \"",
      "238:                              \"the buffer for the output tensor (max elements \",",
      "239:                              output_elements, \")\"));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "212:       auto hypothesis_seq = hypothesis_j.values<T>();",
      "213:       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
      "214:                                     output_strides.begin(), int64{0});",
      "215:       output_t(loc) = hypothesis_seq.size();",
      "216:       if (normalize_ && output_t(loc) != 0.0f) {",
      "217:         output_t(loc) = std::numeric_limits<float>::infinity();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "250:       OP_REQUIRES(",
      "251:           ctx, loc < output_elements,",
      "252:           errors::Internal(\"Got an inner product \", loc,",
      "253:                            \" which would require in writing to outside of the \"",
      "254:                            \"buffer for the output tensor (max elements \",",
      "255:                            output_elements, \")\"));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "224:       auto truth_seq = truth_i.values<T>();",
      "225:       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
      "226:                                     output_strides.begin(), int64{0});",
      "227:       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
      "228:       ++truth_iter;",
      "229:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:       OP_REQUIRES(",
      "269:           ctx, loc < output_elements,",
      "270:           errors::Internal(\"Got an inner product \", loc,",
      "271:                            \" which would require in writing to outside of the \"",
      "272:                            \"buffer for the output tensor (max elements \",",
      "273:                            output_elements, \")\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5afec4a546021bad07a1aac329a0aaab76e4b933",
      "candidate_info": {
        "commit_hash": "5afec4a546021bad07a1aac329a0aaab76e4b933",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5afec4a546021bad07a1aac329a0aaab76e4b933",
        "files": [
          "tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/edit_distance_op_test.py"
        ],
        "message": "Fix tf.raw_ops.EditDistance vulnerability with negative indices.\n\nCheck that indices are non-negative. Fix several identical code sites.\nClean up grammar in error message.\n\nPiperOrigin-RevId: 445442017",
        "before_after_code_files": [
          "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/edit_distance_op_test.py||tensorflow/python/kernel_tests/edit_distance_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc": [
          "File: tensorflow/core/kernels/edit_distance_op.cc -> tensorflow/core/kernels/edit_distance_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "204:                                       output_strides.begin(), int64_t{0});",
          "205:         OP_REQUIRES(",
          "207:             errors::Internal(\"Got an inner product \", loc,",
          "209:                              \"the buffer for the output tensor (max elements \",",
          "210:                              output_elements, \")\"));",
          "211:         output_t(loc) =",
          "",
          "[Removed Lines]",
          "206:             ctx, loc < output_elements,",
          "208:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "206:             ctx, 0 <= loc && loc < output_elements,",
          "208:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "219:                                       output_strides.begin(), int64_t{0});",
          "220:         OP_REQUIRES(",
          "222:             errors::Internal(\"Got an inner product \", loc,",
          "224:                              \"the buffer for the output tensor (max elements \",",
          "225:                              output_elements, \")\"));",
          "226:         output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "221:             ctx, loc < output_elements,",
          "223:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "221:             ctx, 0 <= loc && loc < output_elements,",
          "223:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "233:                                       output_strides.begin(), int64_t{0});",
          "234:         OP_REQUIRES(",
          "236:             errors::Internal(\"Got an inner product \", loc,",
          "238:                              \"the buffer for the output tensor (max elements \",",
          "239:                              output_elements, \")\"));",
          "240:         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "235:             ctx, loc < output_elements,",
          "237:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "235:             ctx, 0 <= loc && loc < output_elements,",
          "237:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "248:       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "249:                                     output_strides.begin(), int64_t{0});",
          "250:       OP_REQUIRES(",
          "252:           errors::Internal(\"Got an inner product \", loc,",
          "254:                            \"buffer for the output tensor (max elements \",",
          "255:                            output_elements, \")\"));",
          "256:       output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "251:           ctx, loc < output_elements,",
          "253:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "251:           ctx, 0 <= loc && loc < output_elements,",
          "253:                            \" which would require writing to outside of the \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "266:       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "267:                                     output_strides.begin(), int64_t{0});",
          "268:       OP_REQUIRES(",
          "270:           errors::Internal(\"Got an inner product \", loc,",
          "272:                            \"buffer for the output tensor (max elements \",",
          "273:                            output_elements, \")\"));",
          "274:       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "269:           ctx, loc < output_elements,",
          "271:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "269:           ctx, 0 <= loc && loc < output_elements,",
          "271:                            \" which would require writing to outside of the \"",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/edit_distance_op_test.py||tensorflow/python/kernel_tests/edit_distance_op_test.py": [
          "File: tensorflow/python/kernel_tests/edit_distance_op_test.py -> tensorflow/python/kernel_tests/edit_distance_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:         normalize=True,",
          "212:         expected_output=expected_output)",
          "215: if __name__ == \"__main__\":",
          "216:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214:   def testEditDistanceBadIndices(self):",
          "215:     hypothesis_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "216:     hypothesis_values = np.empty(3, dtype=np.int64)",
          "217:     hypothesis_shape = np.empty(3, dtype=np.int64)",
          "218:     truth_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "219:     truth_values = np.full([3], 2, dtype=np.int64)",
          "220:     truth_shape = np.full([3], 2, dtype=np.int64)",
          "221:     expected_output = []  # dummy; ignored",
          "223:     self._testEditDistance(",
          "224:         hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),",
          "225:         truth=(truth_indices, truth_values, truth_shape),",
          "226:         normalize=False,",
          "227:         expected_output=expected_output,",
          "228:         expected_err_re=(r\"inner product -\\d+ which would require writing \"",
          "229:                          \"to outside of the buffer for the output tensor\")",
          "230:     )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "645c0ad78f8a2df5b144fd483dc81ddb70ca5772",
      "candidate_info": {
        "commit_hash": "645c0ad78f8a2df5b144fd483dc81ddb70ca5772",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/645c0ad78f8a2df5b144fd483dc81ddb70ca5772",
        "files": [
          "tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
        ],
        "message": "Fix tf.raw_ops.EditDistance vulnerability with negative indices.\n\nCheck that indices are non-negative. Fix several identical code sites.\nClean up grammar in error message.\n\nPiperOrigin-RevId: 445442017",
        "before_after_code_files": [
          "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc": [
          "File: tensorflow/core/kernels/edit_distance_op.cc -> tensorflow/core/kernels/edit_distance_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "204:                                       output_strides.begin(), int64_t{0});",
          "205:         OP_REQUIRES(",
          "207:             errors::Internal(\"Got an inner product \", loc,",
          "209:                              \"the buffer for the output tensor (max elements \",",
          "210:                              output_elements, \")\"));",
          "211:         output_t(loc) =",
          "",
          "[Removed Lines]",
          "206:             ctx, loc < output_elements,",
          "208:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "206:             ctx, 0 <= loc && loc < output_elements,",
          "208:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "219:                                       output_strides.begin(), int64_t{0});",
          "220:         OP_REQUIRES(",
          "222:             errors::Internal(\"Got an inner product \", loc,",
          "224:                              \"the buffer for the output tensor (max elements \",",
          "225:                              output_elements, \")\"));",
          "226:         output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "221:             ctx, loc < output_elements,",
          "223:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "221:             ctx, 0 <= loc && loc < output_elements,",
          "223:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "233:                                       output_strides.begin(), int64_t{0});",
          "234:         OP_REQUIRES(",
          "236:             errors::Internal(\"Got an inner product \", loc,",
          "238:                              \"the buffer for the output tensor (max elements \",",
          "239:                              output_elements, \")\"));",
          "240:         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "235:             ctx, loc < output_elements,",
          "237:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "235:             ctx, 0 <= loc && loc < output_elements,",
          "237:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "248:       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "249:                                     output_strides.begin(), int64_t{0});",
          "250:       OP_REQUIRES(",
          "252:           errors::Internal(\"Got an inner product \", loc,",
          "254:                            \"buffer for the output tensor (max elements \",",
          "255:                            output_elements, \")\"));",
          "256:       output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "251:           ctx, loc < output_elements,",
          "253:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "251:           ctx, 0 <= loc && loc < output_elements,",
          "253:                            \" which would require writing to outside of the \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "266:       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "267:                                     output_strides.begin(), int64_t{0});",
          "268:       OP_REQUIRES(",
          "270:           errors::Internal(\"Got an inner product \", loc,",
          "272:                            \"buffer for the output tensor (max elements \",",
          "273:                            output_elements, \")\"));",
          "274:       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "269:           ctx, loc < output_elements,",
          "271:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "269:           ctx, 0 <= loc && loc < output_elements,",
          "271:                            \" which would require writing to outside of the \"",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py -> tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:         normalize=True,",
          "208:         expected_output=expected_output)",
          "211: if __name__ == \"__main__\":",
          "212:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210:   def testEditDistanceBadIndices(self):",
          "211:     hypothesis_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "212:     hypothesis_values = np.empty(3, dtype=np.int64)",
          "213:     hypothesis_shape = np.empty(3, dtype=np.int64)",
          "214:     truth_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "215:     truth_values = np.full([3], 2, dtype=np.int64)",
          "216:     truth_shape = np.full([3], 2, dtype=np.int64)",
          "217:     expected_output = []  # dummy; ignored",
          "219:     self._testEditDistance(",
          "220:         hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),",
          "221:         truth=(truth_indices, truth_values, truth_shape),",
          "222:         normalize=False,",
          "223:         expected_output=expected_output,",
          "224:         expected_err_re=(r\"inner product -\\d+ which would require writing \"",
          "225:                          \"to outside of the buffer for the output tensor\")",
          "226:     )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30721cf564cb029d34535446d6a5a6357bebc8e7",
      "candidate_info": {
        "commit_hash": "30721cf564cb029d34535446d6a5a6357bebc8e7",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/30721cf564cb029d34535446d6a5a6357bebc8e7",
        "files": [
          "tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
        ],
        "message": "Fix tf.raw_ops.EditDistance vulnerability with negative indices.\n\nCheck that indices are non-negative. Fix several identical code sites.\nClean up grammar in error message.\n\nPiperOrigin-RevId: 445442017",
        "before_after_code_files": [
          "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc": [
          "File: tensorflow/core/kernels/edit_distance_op.cc -> tensorflow/core/kernels/edit_distance_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "204:                                       output_strides.begin(), int64_t{0});",
          "205:         OP_REQUIRES(",
          "207:             errors::Internal(\"Got an inner product \", loc,",
          "209:                              \"the buffer for the output tensor (max elements \",",
          "210:                              output_elements, \")\"));",
          "211:         output_t(loc) =",
          "",
          "[Removed Lines]",
          "206:             ctx, loc < output_elements,",
          "208:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "206:             ctx, 0 <= loc && loc < output_elements,",
          "208:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "219:                                       output_strides.begin(), int64_t{0});",
          "220:         OP_REQUIRES(",
          "222:             errors::Internal(\"Got an inner product \", loc,",
          "224:                              \"the buffer for the output tensor (max elements \",",
          "225:                              output_elements, \")\"));",
          "226:         output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "221:             ctx, loc < output_elements,",
          "223:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "221:             ctx, 0 <= loc && loc < output_elements,",
          "223:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "233:                                       output_strides.begin(), int64_t{0});",
          "234:         OP_REQUIRES(",
          "236:             errors::Internal(\"Got an inner product \", loc,",
          "238:                              \"the buffer for the output tensor (max elements \",",
          "239:                              output_elements, \")\"));",
          "240:         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "235:             ctx, loc < output_elements,",
          "237:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "235:             ctx, 0 <= loc && loc < output_elements,",
          "237:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "248:       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "249:                                     output_strides.begin(), int64_t{0});",
          "250:       OP_REQUIRES(",
          "252:           errors::Internal(\"Got an inner product \", loc,",
          "254:                            \"buffer for the output tensor (max elements \",",
          "255:                            output_elements, \")\"));",
          "256:       output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "251:           ctx, loc < output_elements,",
          "253:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "251:           ctx, 0 <= loc && loc < output_elements,",
          "253:                            \" which would require writing to outside of the \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "266:       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "267:                                     output_strides.begin(), int64_t{0});",
          "268:       OP_REQUIRES(",
          "270:           errors::Internal(\"Got an inner product \", loc,",
          "272:                            \"buffer for the output tensor (max elements \",",
          "273:                            output_elements, \")\"));",
          "274:       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "269:           ctx, loc < output_elements,",
          "271:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "269:           ctx, 0 <= loc && loc < output_elements,",
          "271:                            \" which would require writing to outside of the \"",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py -> tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:         normalize=True,",
          "208:         expected_output=expected_output)",
          "211: if __name__ == \"__main__\":",
          "212:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210:   def testEditDistanceBadIndices(self):",
          "211:     hypothesis_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "212:     hypothesis_values = np.empty(3, dtype=np.int64)",
          "213:     hypothesis_shape = np.empty(3, dtype=np.int64)",
          "214:     truth_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "215:     truth_values = np.full([3], 2, dtype=np.int64)",
          "216:     truth_shape = np.full([3], 2, dtype=np.int64)",
          "217:     expected_output = []  # dummy; ignored",
          "219:     self._testEditDistance(",
          "220:         hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),",
          "221:         truth=(truth_indices, truth_values, truth_shape),",
          "222:         normalize=False,",
          "223:         expected_output=expected_output,",
          "224:         expected_err_re=(r\"inner product -\\d+ which would require writing \"",
          "225:                          \"to outside of the buffer for the output tensor\")",
          "226:     )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1fff21b2156b472f84c82a4530c3f8edbcc26faf",
      "candidate_info": {
        "commit_hash": "1fff21b2156b472f84c82a4530c3f8edbcc26faf",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/1fff21b2156b472f84c82a4530c3f8edbcc26faf",
        "files": [
          "tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/edit_distance_op_test.py"
        ],
        "message": "Fix tf.raw_ops.EditDistance vulnerability with negative indices.\n\nCheck that indices are non-negative. Fix several identical code sites.\nClean up grammar in error message.\n\nPiperOrigin-RevId: 445442017",
        "before_after_code_files": [
          "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/edit_distance_op_test.py||tensorflow/python/kernel_tests/edit_distance_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc": [
          "File: tensorflow/core/kernels/edit_distance_op.cc -> tensorflow/core/kernels/edit_distance_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "204:                                       output_strides.begin(), int64{0});",
          "205:         OP_REQUIRES(",
          "207:             errors::Internal(\"Got an inner product \", loc,",
          "209:                              \"the buffer for the output tensor (max elements \",",
          "210:                              output_elements, \")\"));",
          "211:         output_t(loc) =",
          "",
          "[Removed Lines]",
          "206:             ctx, loc < output_elements,",
          "208:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "206:             ctx, 0 <= loc && loc < output_elements,",
          "208:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "219:                                       output_strides.begin(), int64{0});",
          "220:         OP_REQUIRES(",
          "222:             errors::Internal(\"Got an inner product \", loc,",
          "224:                              \"the buffer for the output tensor (max elements \",",
          "225:                              output_elements, \")\"));",
          "226:         output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "221:             ctx, loc < output_elements,",
          "223:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "221:             ctx, 0 <= loc && loc < output_elements,",
          "223:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "233:                                       output_strides.begin(), int64{0});",
          "234:         OP_REQUIRES(",
          "236:             errors::Internal(\"Got an inner product \", loc,",
          "238:                              \"the buffer for the output tensor (max elements \",",
          "239:                              output_elements, \")\"));",
          "240:         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "235:             ctx, loc < output_elements,",
          "237:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "235:             ctx, 0 <= loc && loc < output_elements,",
          "237:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "248:       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "249:                                     output_strides.begin(), int64{0});",
          "250:       OP_REQUIRES(",
          "252:           errors::Internal(\"Got an inner product \", loc,",
          "254:                            \"buffer for the output tensor (max elements \",",
          "255:                            output_elements, \")\"));",
          "256:       output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "251:           ctx, loc < output_elements,",
          "253:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "251:           ctx, 0 <= loc && loc < output_elements,",
          "253:                            \" which would require writing to outside of the \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "266:       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "267:                                     output_strides.begin(), int64{0});",
          "268:       OP_REQUIRES(",
          "270:           errors::Internal(\"Got an inner product \", loc,",
          "272:                            \"buffer for the output tensor (max elements \",",
          "273:                            output_elements, \")\"));",
          "274:       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "269:           ctx, loc < output_elements,",
          "271:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "269:           ctx, 0 <= loc && loc < output_elements,",
          "271:                            \" which would require writing to outside of the \"",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/edit_distance_op_test.py||tensorflow/python/kernel_tests/edit_distance_op_test.py": [
          "File: tensorflow/python/kernel_tests/edit_distance_op_test.py -> tensorflow/python/kernel_tests/edit_distance_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:         normalize=True,",
          "212:         expected_output=expected_output)",
          "215: if __name__ == \"__main__\":",
          "216:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214:   def testEditDistanceBadIndices(self):",
          "215:     hypothesis_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "216:     hypothesis_values = np.empty(3, dtype=np.int64)",
          "217:     hypothesis_shape = np.empty(3, dtype=np.int64)",
          "218:     truth_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "219:     truth_values = np.full([3], 2, dtype=np.int64)",
          "220:     truth_shape = np.full([3], 2, dtype=np.int64)",
          "221:     expected_output = []  # dummy; ignored",
          "223:     self._testEditDistance(",
          "224:         hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),",
          "225:         truth=(truth_indices, truth_values, truth_shape),",
          "226:         normalize=False,",
          "227:         expected_output=expected_output,",
          "228:         expected_err_re=(r\"inner product -\\d+ which would require writing \"",
          "229:                          \"to outside of the buffer for the output tensor\")",
          "230:     )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "324f78684fff0ca29d2cf88f49ae2d83557c4d5c",
      "candidate_info": {
        "commit_hash": "324f78684fff0ca29d2cf88f49ae2d83557c4d5c",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/324f78684fff0ca29d2cf88f49ae2d83557c4d5c",
        "files": [
          "tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
        ],
        "message": "Fix tf.raw_ops.EditDistance vulnerability with negative indices.\n\nCheck that indices are non-negative. Fix several identical code sites.\nClean up grammar in error message.\n\nPiperOrigin-RevId: 445442017",
        "before_after_code_files": [
          "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc": [
          "File: tensorflow/core/kernels/edit_distance_op.cc -> tensorflow/core/kernels/edit_distance_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "204:                                       output_strides.begin(), int64_t{0});",
          "205:         OP_REQUIRES(",
          "207:             errors::Internal(\"Got an inner product \", loc,",
          "209:                              \"the buffer for the output tensor (max elements \",",
          "210:                              output_elements, \")\"));",
          "211:         output_t(loc) =",
          "",
          "[Removed Lines]",
          "206:             ctx, loc < output_elements,",
          "208:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "206:             ctx, 0 <= loc && loc < output_elements,",
          "208:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "219:                                       output_strides.begin(), int64_t{0});",
          "220:         OP_REQUIRES(",
          "222:             errors::Internal(\"Got an inner product \", loc,",
          "224:                              \"the buffer for the output tensor (max elements \",",
          "225:                              output_elements, \")\"));",
          "226:         output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "221:             ctx, loc < output_elements,",
          "223:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "221:             ctx, 0 <= loc && loc < output_elements,",
          "223:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "233:                                       output_strides.begin(), int64_t{0});",
          "234:         OP_REQUIRES(",
          "236:             errors::Internal(\"Got an inner product \", loc,",
          "238:                              \"the buffer for the output tensor (max elements \",",
          "239:                              output_elements, \")\"));",
          "240:         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "235:             ctx, loc < output_elements,",
          "237:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "235:             ctx, 0 <= loc && loc < output_elements,",
          "237:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "248:       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "249:                                     output_strides.begin(), int64_t{0});",
          "250:       OP_REQUIRES(",
          "252:           errors::Internal(\"Got an inner product \", loc,",
          "254:                            \"buffer for the output tensor (max elements \",",
          "255:                            output_elements, \")\"));",
          "256:       output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "251:           ctx, loc < output_elements,",
          "253:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "251:           ctx, 0 <= loc && loc < output_elements,",
          "253:                            \" which would require writing to outside of the \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "266:       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "267:                                     output_strides.begin(), int64_t{0});",
          "268:       OP_REQUIRES(",
          "270:           errors::Internal(\"Got an inner product \", loc,",
          "272:                            \"buffer for the output tensor (max elements \",",
          "273:                            output_elements, \")\"));",
          "274:       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "269:           ctx, loc < output_elements,",
          "271:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "269:           ctx, 0 <= loc && loc < output_elements,",
          "271:                            \" which would require writing to outside of the \"",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py -> tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:         normalize=True,",
          "208:         expected_output=expected_output)",
          "211: if __name__ == \"__main__\":",
          "212:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210:   def testEditDistanceBadIndices(self):",
          "211:     hypothesis_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "212:     hypothesis_values = np.empty(3, dtype=np.int64)",
          "213:     hypothesis_shape = np.empty(3, dtype=np.int64)",
          "214:     truth_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "215:     truth_values = np.full([3], 2, dtype=np.int64)",
          "216:     truth_shape = np.full([3], 2, dtype=np.int64)",
          "217:     expected_output = []  # dummy; ignored",
          "219:     self._testEditDistance(",
          "220:         hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),",
          "221:         truth=(truth_indices, truth_values, truth_shape),",
          "222:         normalize=False,",
          "223:         expected_output=expected_output,",
          "224:         expected_err_re=(r\"inner product -\\d+ which would require writing \"",
          "225:                          \"to outside of the buffer for the output tensor\")",
          "226:     )",
          "",
          "---------------"
        ]
      }
    }
  ]
}