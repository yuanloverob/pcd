{
  "cve_id": "CVE-2016-7411",
  "cve_desc": "ext/standard/var_unserializer.re in PHP before 5.6.26 mishandles object-deserialization failures, which allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via an unserialize call that references a partially constructed object.",
  "repo": "php/php-src",
  "patch_hash": "6a7cc8ff85827fa9ac715b3a83c2d9147f33cd43",
  "patch_info": {
    "commit_hash": "6a7cc8ff85827fa9ac715b3a83c2d9147f33cd43",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/6a7cc8ff85827fa9ac715b3a83c2d9147f33cd43",
    "files": [
      "Zend/zend_objects_API.c",
      "ext/standard/tests/serialize/bug73052.phpt",
      "ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re"
    ],
    "message": "Fix bug #73052 - Memory Corruption in During Deserialized-object Destruction",
    "before_after_code_files": [
      "Zend/zend_objects_API.c||Zend/zend_objects_API.c",
      "ext/standard/tests/serialize/bug73052.phpt||ext/standard/tests/serialize/bug73052.phpt",
      "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
    ]
  },
  "patch_diff": {
    "Zend/zend_objects_API.c||Zend/zend_objects_API.c": [
      "File: Zend/zend_objects_API.c -> Zend/zend_objects_API.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "306: {",
      "307:  zend_object_handle handle = Z_OBJ_HANDLE_P(zobject);",
      "308:  zend_object_store_bucket *obj_bucket = &EG(objects_store).object_buckets[handle];",
      "311:  obj_bucket->destructor_called = 1;",
      "312: }",
      "",
      "[Removed Lines]",
      "310:  obj_bucket->bucket.obj.handlers = Z_OBJ_HT_P(zobject);;",
      "",
      "[Added Lines]",
      "310:  obj_bucket->bucket.obj.handlers = Z_OBJ_HT_P(zobject);",
      "",
      "---------------"
    ],
    "ext/standard/tests/serialize/bug73052.phpt||ext/standard/tests/serialize/bug73052.phpt": [
      "File: ext/standard/tests/serialize/bug73052.phpt -> ext/standard/tests/serialize/bug73052.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #73052: Memory Corruption in During Deserialized-object Destruction",
      "3: --FILE--",
      "4: <?php",
      "6: class obj {",
      "7:     var $ryat;",
      "8:     public function __destruct() {",
      "9:         $this->ryat = null;",
      "10:     }",
      "11: }",
      "13: $poc = 'O:3:\"obj\":1:{';",
      "14: var_dump(unserialize($poc));",
      "15: ?>",
      "16: --EXPECTF--",
      "17: Notice: unserialize(): Error at offset 13 of 13 bytes in %sbug73052.php on line %d",
      "18: bool(false)",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
      "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "438:      if(Z_TYPE_PP(rval) == IS_OBJECT) {",
      "439:         zend_hash_clean(Z_OBJPROP_PP(rval));",
      "440:      }",
      "441:      ZVAL_NULL(*rval);",
      "442:   return 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "440:         zend_object_store_ctor_failed(*rval TSRMLS_CC);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "495: {",
      "496:  YYCTYPE yych;",
      "497:  static const unsigned char yybm[] = {",
      "",
      "[Removed Lines]",
      "494: #line 495 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "495: #line 496 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "551:  yych = *(YYMARKER = ++YYCURSOR);",
      "552:  if (yych == ':') goto yy95;",
      "553: yy3:",
      "555:  { return 0; }",
      "557: yy4:",
      "558:  yych = *(YYMARKER = ++YYCURSOR);",
      "559:  if (yych == ':') goto yy89;",
      "",
      "[Removed Lines]",
      "554: #line 860 \"ext/standard/var_unserializer.re\"",
      "556: #line 557 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "555: #line 861 \"ext/standard/var_unserializer.re\"",
      "557: #line 558 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "596:  goto yy3;",
      "597: yy14:",
      "598:  ++YYCURSOR;",
      "600:  {",
      "602:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
      "604: }",
      "606: yy16:",
      "607:  yych = *++YYCURSOR;",
      "608:  goto yy3;",
      "",
      "[Removed Lines]",
      "599: #line 854 \"ext/standard/var_unserializer.re\"",
      "605: #line 606 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "600: #line 855 \"ext/standard/var_unserializer.re\"",
      "606: #line 607 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "633:  yych = *++YYCURSOR;",
      "634:  if (yych != '\"') goto yy18;",
      "635:  ++YYCURSOR;",
      "637:  {",
      "638:  size_t len, len2, len3, maxlen;",
      "639:  long elements;",
      "",
      "[Removed Lines]",
      "636: #line 707 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "637: #line 708 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "781:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "782: }",
      "784: yy25:",
      "785:  yych = *++YYCURSOR;",
      "786:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "783: #line 784 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "784: #line 785 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "805:  yych = *++YYCURSOR;",
      "806:  if (yych != '\"') goto yy18;",
      "807:  ++YYCURSOR;",
      "809:  {",
      "810:     if (!var_hash) return 0;",
      "",
      "[Removed Lines]",
      "808: #line 698 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "809: #line 699 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "814:  return object_common2(UNSERIALIZE_PASSTHRU,",
      "815:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
      "816: }",
      "818: yy32:",
      "819:  yych = *++YYCURSOR;",
      "820:  if (yych == '+') goto yy33;",
      "",
      "[Removed Lines]",
      "817: #line 818 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "818: #line 819 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "835:  yych = *++YYCURSOR;",
      "836:  if (yych != '{') goto yy18;",
      "837:  ++YYCURSOR;",
      "839:  {",
      "840:  long elements = parse_iv(start + 2);",
      "",
      "[Removed Lines]",
      "838: #line 677 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "839: #line 678 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "857:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
      "858: }",
      "860: yy39:",
      "861:  yych = *++YYCURSOR;",
      "862:  if (yych == '+') goto yy40;",
      "",
      "[Removed Lines]",
      "859: #line 860 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "860: #line 861 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "877:  yych = *++YYCURSOR;",
      "878:  if (yych != '\"') goto yy18;",
      "879:  ++YYCURSOR;",
      "881:  {",
      "882:  size_t len, maxlen;",
      "883:  char *str;",
      "",
      "[Removed Lines]",
      "880: #line 642 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "881: #line 643 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "912:  ZVAL_STRINGL(*rval, str, len, 0);",
      "913:  return 1;",
      "914: }",
      "916: yy46:",
      "917:  yych = *++YYCURSOR;",
      "918:  if (yych == '+') goto yy47;",
      "",
      "[Removed Lines]",
      "915: #line 916 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "916: #line 917 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "933:  yych = *++YYCURSOR;",
      "934:  if (yych != '\"') goto yy18;",
      "935:  ++YYCURSOR;",
      "937:  {",
      "938:  size_t len, maxlen;",
      "939:  char *str;",
      "",
      "[Removed Lines]",
      "936: #line 609 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "937: #line 610 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "966:  ZVAL_STRINGL(*rval, str, len, 1);",
      "967:  return 1;",
      "968: }",
      "970: yy53:",
      "971:  yych = *++YYCURSOR;",
      "972:  if (yych <= '/') {",
      "",
      "[Removed Lines]",
      "969: #line 970 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "970: #line 971 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "1054:  }",
      "1055: yy63:",
      "1056:  ++YYCURSOR;",
      "1058:  {",
      "1059: #if SIZEOF_LONG == 4",
      "1060: use_double:",
      "",
      "[Removed Lines]",
      "1057: #line 599 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1058: #line 600 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1064:  ZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));",
      "1065:  return 1;",
      "1066: }",
      "1068: yy65:",
      "1069:  yych = *++YYCURSOR;",
      "1070:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1067: #line 1068 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1068: #line 1069 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "1123:  yych = *++YYCURSOR;",
      "1124:  if (yych != ';') goto yy18;",
      "1125:  ++YYCURSOR;",
      "1127:  {",
      "1129:  INIT_PZVAL(*rval);",
      "",
      "[Removed Lines]",
      "1126: #line 584 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1127: #line 585 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "1139:  return 1;",
      "1140: }",
      "1142: yy76:",
      "1143:  yych = *++YYCURSOR;",
      "1144:  if (yych == 'N') goto yy73;",
      "",
      "[Removed Lines]",
      "1141: #line 1142 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1142: #line 1143 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "1165:  if (yych <= '9') goto yy79;",
      "1166:  if (yych != ';') goto yy18;",
      "1167:  ++YYCURSOR;",
      "1169:  {",
      "1170: #if SIZEOF_LONG == 4",
      "1171:  int digits = YYCURSOR - start - 3;",
      "",
      "[Removed Lines]",
      "1168: #line 557 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1169: #line 558 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "1192:  ZVAL_LONG(*rval, parse_iv(start + 2));",
      "1193:  return 1;",
      "1194: }",
      "1196: yy83:",
      "1197:  yych = *++YYCURSOR;",
      "1198:  if (yych <= '/') goto yy18;",
      "",
      "[Removed Lines]",
      "1195: #line 1196 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1196: #line 1197 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "1200:  yych = *++YYCURSOR;",
      "1201:  if (yych != ';') goto yy18;",
      "1202:  ++YYCURSOR;",
      "1204:  {",
      "1206:  INIT_PZVAL(*rval);",
      "1207:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
      "1208:  return 1;",
      "1209: }",
      "1211: yy87:",
      "1212:  ++YYCURSOR;",
      "1214:  {",
      "1216:  INIT_PZVAL(*rval);",
      "1217:  ZVAL_NULL(*rval);",
      "1218:  return 1;",
      "1219: }",
      "1221: yy89:",
      "1222:  yych = *++YYCURSOR;",
      "1223:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1203: #line 550 \"ext/standard/var_unserializer.re\"",
      "1210: #line 1211 \"ext/standard/var_unserializer.c\"",
      "1213: #line 543 \"ext/standard/var_unserializer.re\"",
      "1220: #line 1221 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1204: #line 551 \"ext/standard/var_unserializer.re\"",
      "1211: #line 1212 \"ext/standard/var_unserializer.c\"",
      "1214: #line 544 \"ext/standard/var_unserializer.re\"",
      "1221: #line 1222 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "1240:  if (yych <= '9') goto yy91;",
      "1241:  if (yych != ';') goto yy18;",
      "1242:  ++YYCURSOR;",
      "1244:  {",
      "1245:  long id;",
      "",
      "[Removed Lines]",
      "1243: #line 520 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1244: #line 521 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "1264:  return 1;",
      "1265: }",
      "1267: yy95:",
      "1268:  yych = *++YYCURSOR;",
      "1269:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1266: #line 1267 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1267: #line 1268 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "1286:  if (yych <= '9') goto yy97;",
      "1287:  if (yych != ';') goto yy18;",
      "1288:  ++YYCURSOR;",
      "1290:  {",
      "1291:  long id;",
      "",
      "[Removed Lines]",
      "1289: #line 499 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1290: #line 500 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "1308:  return 1;",
      "1309: }",
      "1311: }",
      "1315:  return 0;",
      "",
      "[Removed Lines]",
      "1310: #line 1311 \"ext/standard/var_unserializer.c\"",
      "1312: #line 862 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1311: #line 1312 \"ext/standard/var_unserializer.c\"",
      "1313: #line 863 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
      "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
      "--- Hunk 1 ---",
      "[Context before]",
      "442:      if(Z_TYPE_PP(rval) == IS_OBJECT) {",
      "443:         zend_hash_clean(Z_OBJPROP_PP(rval));",
      "444:      }",
      "445:      ZVAL_NULL(*rval);",
      "446:   return 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "444:         zend_object_store_ctor_failed(*rval TSRMLS_CC);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b47c49d7a00bc34d7e0f3d72732f66e904da6fa7",
      "candidate_info": {
        "commit_hash": "b47c49d7a00bc34d7e0f3d72732f66e904da6fa7",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/b47c49d7a00bc34d7e0f3d72732f66e904da6fa7",
        "files": [
          "ext/standard/tests/serialize/bug70963.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Merge branch 'PHP-5.6' into PHP-7.0",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug70963.phpt||ext/standard/tests/serialize/bug70963.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug70963.phpt||ext/standard/tests/serialize/bug70963.phpt": [
          "File: ext/standard/tests/serialize/bug70963.phpt -> ext/standard/tests/serialize/bug70963.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: var_dump(unserialize('a:2:{i:0;O:9:\"exception\":1:{s:16:\"'.\"\\0\".'Exception'.\"\\0\".'trace\";s:4:\"test\";}i:1;r:3;}'));",
          "7: ?>",
          "8: --EXPECTF--",
          "10:   [0]=>",
          "11:   object(Exception)#%d (6) {",
          "12:     [\"message\":protected]=>",
          "",
          "[Removed Lines]",
          "9: array(1) {",
          "",
          "[Added Lines]",
          "9: array(2) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:     [\"previous\":\"Exception\":private]=>",
          "23:     NULL",
          "24:   }",
          "25: }",
          "27:   [0]=>",
          "28:   object(Exception)#%d (6) {",
          "29:     [\"message\":protected]=>",
          "",
          "[Removed Lines]",
          "26: array(1) {",
          "",
          "[Added Lines]",
          "25:   [1]=>",
          "26:   string(4) \"test\"",
          "28: array(2) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39:     [\"previous\":\"Exception\":private]=>",
          "40:     NULL",
          "41:   }",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   [1]=>",
          "45:   string(4) \"test\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define VAR_ENTRIES_MAX 1024",
          "29: #define VAR_ENTRIES_DBG 0",
          "31: typedef struct {",
          "32:  zval *data[VAR_ENTRIES_MAX];",
          "33:  zend_long used_slots;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: #define VAR_WAKEUP_FLAG 1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:         (*var_hashx)->last_dtor = var_hash;",
          "97:     }",
          "98:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "99:     return &var_hash->data[var_hash->used_slots++];",
          "100: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:  Z_VAR_FLAGS(var_hash->data[var_hash->used_slots]) = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "143:  zend_long i;",
          "144:  var_entries *var_hash = (*var_hashx)->first;",
          "145:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "146: #if VAR_ENTRIES_DBG",
          "147:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "148: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150:  zend_bool wakeup_failed = 0;",
          "151:  zval wakeup_name;",
          "152:  ZVAL_UNDEF(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "156:  while (var_dtor_hash) {",
          "157:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "158: #if VAR_ENTRIES_DBG",
          "159:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "160: #endif",
          "162:   }",
          "163:   next = var_dtor_hash->next;",
          "164:   efree_size(var_dtor_hash, sizeof(var_dtor_entries));",
          "165:   var_dtor_hash = next;",
          "166:  }",
          "167: }",
          "",
          "[Removed Lines]",
          "161:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "",
          "[Added Lines]",
          "166:    zval *zv = &var_dtor_hash->data[i];",
          "172:    if (Z_VAR_FLAGS_P(zv) == VAR_WAKEUP_FLAG) {",
          "173:     if (!wakeup_failed) {",
          "174:      zval retval;",
          "175:      if (Z_ISUNDEF(wakeup_name)) {",
          "176:       ZVAL_STRINGL(&wakeup_name, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "177:      }",
          "179:      BG(serialize_lock)++;",
          "180:      if (call_user_function_ex(CG(function_table), zv, &wakeup_name, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "181:       wakeup_failed = 1;",
          "182:       GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "183:      }",
          "184:      BG(serialize_lock)--;",
          "186:      zval_ptr_dtor(&retval);",
          "187:     } else {",
          "188:      GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "189:     }",
          "190:    }",
          "192:    zval_ptr_dtor(zv);",
          "199:  zval_ptr_dtor(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "238: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "241: #line 246 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "274: #line 279 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "459: #endif",
          "460: static inline int object_common2(UNSERIALIZE_PARAMETER, zend_long elements)",
          "461: {",
          "464:  HashTable *ht;",
          "465:  zend_bool has_wakeup;",
          "",
          "[Removed Lines]",
          "462:  zval retval;",
          "463:  zval fname;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "484:  ZVAL_DEREF(rval);",
          "485:  if (has_wakeup) {",
          "498:  }",
          "500:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "486:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "487:   BG(serialize_lock)++;",
          "488:   if (call_user_function_ex(CG(function_table), rval, &fname, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "489:    GC_FLAGS(Z_OBJ_P(rval)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "490:   }",
          "491:   BG(serialize_lock)--;",
          "492:   zval_dtor(&fname);",
          "493:   zval_dtor(&retval);",
          "494:  }",
          "496:  if (EG(exception)) {",
          "497:   return 0;",
          "",
          "[Added Lines]",
          "518:   zval *wakeup_var = var_tmp_var(var_hash);",
          "519:   ZVAL_COPY(wakeup_var, rval);",
          "520:   Z_VAR_FLAGS_P(wakeup_var) = VAR_WAKEUP_FLAG;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "555:  start = cursor;",
          "559: {",
          "560:  YYCTYPE yych;",
          "561:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "558: #line 559 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "581: #line 582 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "592:     0,   0,   0,   0,   0,   0,   0,   0,",
          "593:     0,   0,   0,   0,   0,   0,   0,   0,",
          "594:  };",
          "596:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "597:  yych = *YYCURSOR;",
          "598:  switch (yych) {",
          "599:  case 'C':",
          "601:  case 'N': goto yy5;",
          "608:  case 'o': goto yy12;",
          "613:  }",
          "614: yy2:",
          "617: yy3:",
          "619:  { return 0; }",
          "621: yy4:",
          "622:  yych = *(YYMARKER = ++YYCURSOR);",
          "624:  goto yy3;",
          "625: yy5:",
          "626:  yych = *++YYCURSOR;",
          "628:  goto yy3;",
          "629: yy6:",
          "630:  yych = *(YYMARKER = ++YYCURSOR);",
          "632:  goto yy3;",
          "633: yy7:",
          "634:  yych = *(YYMARKER = ++YYCURSOR);",
          "636:  goto yy3;",
          "637: yy8:",
          "638:  yych = *(YYMARKER = ++YYCURSOR);",
          "640:  goto yy3;",
          "641: yy9:",
          "642:  yych = *(YYMARKER = ++YYCURSOR);",
          "644:  goto yy3;",
          "645: yy10:",
          "646:  yych = *(YYMARKER = ++YYCURSOR);",
          "648:  goto yy3;",
          "649: yy11:",
          "650:  yych = *(YYMARKER = ++YYCURSOR);",
          "652:  goto yy3;",
          "653: yy12:",
          "654:  yych = *(YYMARKER = ++YYCURSOR);",
          "656:  goto yy3;",
          "657: yy13:",
          "658:  yych = *(YYMARKER = ++YYCURSOR);",
          "660:  goto yy3;",
          "661: yy14:",
          "662:  ++YYCURSOR;",
          "664:  {",
          "666:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "668: }",
          "673: yy17:",
          "674:  yych = *++YYCURSOR;",
          "675:  if (yybm[0+yych] & 128) {",
          "677:  }",
          "679: yy18:",
          "680:  YYCURSOR = YYMARKER;",
          "681:  goto yy3;",
          "682: yy19:",
          "683:  yych = *++YYCURSOR;",
          "686:  }",
          "687:  goto yy18;",
          "695:  if (yych <= '/') goto yy18;",
          "697:  yych = *++YYCURSOR;",
          "816:   }",
          "833:   }",
          "836:  }",
          "843:  }",
          "847:  }",
          "854:  yych = *++YYCURSOR;",
          "855:  if (yych <= ',') {",
          "857:  } else {",
          "859:   if (yych <= '/') goto yy18;",
          "861:   goto yy18;",
          "862:  }",
          "864:  yych = *++YYCURSOR;",
          "865:  if (yych <= '/') goto yy18;",
          "868:  ++YYCURSOR;",
          "869:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "870:  yych = *YYCURSOR;",
          "885:  }",
          "892:  if (yych <= '/') goto yy18;",
          "894:  goto yy18;",
          "895: yy33:",
          "896:  yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "600:  case 'O': goto yy13;",
          "602:  case 'R': goto yy2;",
          "603:  case 'S': goto yy10;",
          "604:  case 'a': goto yy11;",
          "605:  case 'b': goto yy6;",
          "606:  case 'd': goto yy8;",
          "607:  case 'i': goto yy7;",
          "609:  case 'r': goto yy4;",
          "610:  case 's': goto yy9;",
          "611:  case '}': goto yy14;",
          "612:  default: goto yy16;",
          "615:  yych = *(YYMARKER = ++YYCURSOR);",
          "616:  if (yych == ':') goto yy95;",
          "618: #line 936 \"ext/standard/var_unserializer.re\"",
          "620: #line 621 \"ext/standard/var_unserializer.c\"",
          "623:  if (yych == ':') goto yy89;",
          "627:  if (yych == ';') goto yy87;",
          "631:  if (yych == ':') goto yy83;",
          "635:  if (yych == ':') goto yy77;",
          "639:  if (yych == ':') goto yy53;",
          "643:  if (yych == ':') goto yy46;",
          "647:  if (yych == ':') goto yy39;",
          "651:  if (yych == ':') goto yy32;",
          "655:  if (yych == ':') goto yy25;",
          "659:  if (yych == ':') goto yy17;",
          "663: #line 930 \"ext/standard/var_unserializer.re\"",
          "669: #line 670 \"ext/standard/var_unserializer.c\"",
          "670: yy16:",
          "671:  yych = *++YYCURSOR;",
          "672:  goto yy3;",
          "676:   goto yy20;",
          "678:  if (yych == '+') goto yy19;",
          "684:  if (yybm[0+yych] & 128) {",
          "685:   goto yy20;",
          "688: yy20:",
          "689:  ++YYCURSOR;",
          "690:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "691:  yych = *YYCURSOR;",
          "692:  if (yybm[0+yych] & 128) {",
          "693:   goto yy20;",
          "694:  }",
          "696:  if (yych >= ';') goto yy18;",
          "698:  if (yych != '\"') goto yy18;",
          "699:  ++YYCURSOR;",
          "700: #line 778 \"ext/standard/var_unserializer.re\"",
          "701:  {",
          "702:  size_t len, len2, len3, maxlen;",
          "703:  zend_long elements;",
          "704:  char *str;",
          "705:  zend_string *class_name;",
          "706:  zend_class_entry *ce;",
          "707:  int incomplete_class = 0;",
          "709:  int custom_object = 0;",
          "711:  zval user_func;",
          "712:  zval retval;",
          "713:  zval args[1];",
          "715:     if (!var_hash) return 0;",
          "716:  if (*start == 'C') {",
          "717:   custom_object = 1;",
          "718:  }",
          "720:  len2 = len = parse_uiv(start + 2);",
          "721:  maxlen = max - YYCURSOR;",
          "722:  if (maxlen < len || len == 0) {",
          "724:   return 0;",
          "725:  }",
          "727:  str = (char*)YYCURSOR;",
          "729:  YYCURSOR += len;",
          "731:  if (*(YYCURSOR) != '\"') {",
          "733:   return 0;",
          "734:  }",
          "735:  if (*(YYCURSOR+1) != ':') {",
          "737:   return 0;",
          "738:  }",
          "740:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "741:  if (len3 != len)",
          "742:  {",
          "744:   return 0;",
          "745:  }",
          "747:  class_name = zend_string_init(str, len, 0);",
          "749:  do {",
          "750:   if(!unserialize_allowed_class(class_name, classes)) {",
          "751:    incomplete_class = 1;",
          "752:    ce = PHP_IC_ENTRY;",
          "753:    break;",
          "754:   }",
          "757:   BG(serialize_lock)++;",
          "758:   ce = zend_lookup_class(class_name);",
          "759:   if (ce) {",
          "760:    BG(serialize_lock)--;",
          "761:    if (EG(exception)) {",
          "762:     zend_string_release(class_name);",
          "763:     return 0;",
          "764:    }",
          "765:    break;",
          "766:   }",
          "767:   BG(serialize_lock)--;",
          "769:   if (EG(exception)) {",
          "770:    zend_string_release(class_name);",
          "771:    return 0;",
          "772:   }",
          "775:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "776:    incomplete_class = 1;",
          "777:    ce = PHP_IC_ENTRY;",
          "778:    break;",
          "779:   }",
          "782:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "784:   ZVAL_STR_COPY(&args[0], class_name);",
          "785:   BG(serialize_lock)++;",
          "786:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "787:    BG(serialize_lock)--;",
          "788:    if (EG(exception)) {",
          "789:     zend_string_release(class_name);",
          "790:     zval_ptr_dtor(&user_func);",
          "791:     zval_ptr_dtor(&args[0]);",
          "792:     return 0;",
          "793:    }",
          "794:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "795:    incomplete_class = 1;",
          "796:    ce = PHP_IC_ENTRY;",
          "797:    zval_ptr_dtor(&user_func);",
          "798:    zval_ptr_dtor(&args[0]);",
          "799:    break;",
          "800:   }",
          "801:   BG(serialize_lock)--;",
          "802:   zval_ptr_dtor(&retval);",
          "803:   if (EG(exception)) {",
          "804:    zend_string_release(class_name);",
          "805:    zval_ptr_dtor(&user_func);",
          "806:    zval_ptr_dtor(&args[0]);",
          "807:    return 0;",
          "808:   }",
          "811:   BG(serialize_lock)++;",
          "812:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "813:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "814:    incomplete_class = 1;",
          "815:    ce = PHP_IC_ENTRY;",
          "817:   BG(serialize_lock)--;",
          "819:   zval_ptr_dtor(&user_func);",
          "820:   zval_ptr_dtor(&args[0]);",
          "821:   break;",
          "822:  } while (1);",
          "826:  if (custom_object) {",
          "827:   int ret;",
          "829:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "831:   if (ret && incomplete_class) {",
          "832:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "834:   zend_string_release(class_name);",
          "835:   return ret;",
          "838:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "840:  if (elements < 0) {",
          "841:     zend_string_release(class_name);",
          "842:     return 0;",
          "845:  if (incomplete_class) {",
          "846:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "848:  zend_string_release(class_name);",
          "850:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "851: }",
          "852: #line 853 \"ext/standard/var_unserializer.c\"",
          "853: yy25:",
          "856:   if (yych != '+') goto yy18;",
          "858:   if (yych <= '-') goto yy26;",
          "860:   if (yych <= '9') goto yy27;",
          "863: yy26:",
          "866:  if (yych >= ':') goto yy18;",
          "867: yy27:",
          "871:  if (yych <= '/') goto yy18;",
          "872:  if (yych <= '9') goto yy27;",
          "873:  if (yych >= ';') goto yy18;",
          "874:  yych = *++YYCURSOR;",
          "875:  if (yych != '\"') goto yy18;",
          "876:  ++YYCURSOR;",
          "877: #line 767 \"ext/standard/var_unserializer.re\"",
          "878:  {",
          "879:  long elements;",
          "880:     if (!var_hash) return 0;",
          "882:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "883:  if (elements < 0) {",
          "884:   return 0;",
          "886:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "887: }",
          "888: #line 889 \"ext/standard/var_unserializer.c\"",
          "889: yy32:",
          "890:  yych = *++YYCURSOR;",
          "891:  if (yych == '+') goto yy33;",
          "893:  if (yych <= '9') goto yy34;",
          "",
          "[Added Lines]",
          "622:  case 'O': goto yy4;",
          "624:  case 'R': goto yy6;",
          "625:  case 'S': goto yy7;",
          "626:  case 'a': goto yy8;",
          "627:  case 'b': goto yy9;",
          "628:  case 'd': goto yy10;",
          "629:  case 'i': goto yy11;",
          "631:  case 'r': goto yy13;",
          "632:  case 's': goto yy14;",
          "633:  case '}': goto yy15;",
          "634:  default: goto yy2;",
          "637:  ++YYCURSOR;",
          "639: #line 959 \"ext/standard/var_unserializer.re\"",
          "641: #line 642 \"ext/standard/var_unserializer.c\"",
          "644:  if (yych == ':') goto yy17;",
          "648:  if (yych == ';') goto yy19;",
          "652:  if (yych == ':') goto yy21;",
          "656:  if (yych == ':') goto yy22;",
          "660:  if (yych == ':') goto yy23;",
          "664:  if (yych == ':') goto yy24;",
          "668:  if (yych == ':') goto yy25;",
          "672:  if (yych == ':') goto yy26;",
          "676:  if (yych == ':') goto yy27;",
          "680:  if (yych == ':') goto yy28;",
          "683:  yych = *(YYMARKER = ++YYCURSOR);",
          "684:  if (yych == ':') goto yy29;",
          "685:  goto yy3;",
          "686: yy15:",
          "688: #line 953 \"ext/standard/var_unserializer.re\"",
          "694: #line 695 \"ext/standard/var_unserializer.c\"",
          "698:   goto yy31;",
          "700:  if (yych == '+') goto yy30;",
          "705:  ++YYCURSOR;",
          "706: #line 637 \"ext/standard/var_unserializer.re\"",
          "707:  {",
          "709:  ZVAL_NULL(rval);",
          "710:  return 1;",
          "711: }",
          "712: #line 713 \"ext/standard/var_unserializer.c\"",
          "713: yy21:",
          "715:  if (yych <= ',') {",
          "716:   if (yych == '+') goto yy33;",
          "717:   goto yy18;",
          "718:  } else {",
          "719:   if (yych <= '-') goto yy33;",
          "720:   if (yych <= '/') goto yy18;",
          "721:   if (yych <= '9') goto yy34;",
          "722:   goto yy18;",
          "724: yy22:",
          "725:  yych = *++YYCURSOR;",
          "726:  if (yych == '+') goto yy36;",
          "727:  if (yych <= '/') goto yy18;",
          "728:  if (yych <= '9') goto yy37;",
          "730: yy23:",
          "731:  yych = *++YYCURSOR;",
          "732:  if (yych == '+') goto yy39;",
          "734:  if (yych <= '9') goto yy40;",
          "735:  goto yy18;",
          "736: yy24:",
          "738:  if (yych <= '/') goto yy18;",
          "739:  if (yych <= '1') goto yy42;",
          "740:  goto yy18;",
          "741: yy25:",
          "742:  yych = *++YYCURSOR;",
          "743:  if (yych <= '/') {",
          "744:   if (yych <= ',') {",
          "745:    if (yych == '+') goto yy43;",
          "746:    goto yy18;",
          "747:   } else {",
          "748:    if (yych <= '-') goto yy44;",
          "749:    if (yych <= '.') goto yy45;",
          "750:    goto yy18;",
          "752:  } else {",
          "753:   if (yych <= 'I') {",
          "754:    if (yych <= '9') goto yy46;",
          "755:    if (yych <= 'H') goto yy18;",
          "756:    goto yy48;",
          "757:   } else {",
          "758:    if (yych == 'N') goto yy49;",
          "759:    goto yy18;",
          "762: yy26:",
          "763:  yych = *++YYCURSOR;",
          "764:  if (yych <= ',') {",
          "765:   if (yych == '+') goto yy50;",
          "766:   goto yy18;",
          "767:  } else {",
          "768:   if (yych <= '-') goto yy50;",
          "769:   if (yych <= '/') goto yy18;",
          "770:   if (yych <= '9') goto yy51;",
          "771:   goto yy18;",
          "773: yy27:",
          "774:  yych = *++YYCURSOR;",
          "775:  if (yych <= ',') {",
          "776:   if (yych == '+') goto yy53;",
          "777:   goto yy18;",
          "778:  } else {",
          "779:   if (yych <= '-') goto yy53;",
          "780:   if (yych <= '/') goto yy18;",
          "781:   if (yych <= '9') goto yy54;",
          "782:   goto yy18;",
          "784: yy28:",
          "787:   if (yych == '+') goto yy56;",
          "788:   goto yy18;",
          "790:   if (yych <= '-') goto yy56;",
          "792:   if (yych <= '9') goto yy57;",
          "795: yy29:",
          "797:  if (yych == '+') goto yy59;",
          "799:  if (yych <= '9') goto yy60;",
          "800:  goto yy18;",
          "801: yy30:",
          "802:  yych = *++YYCURSOR;",
          "803:  if (yybm[0+yych] & 128) {",
          "804:   goto yy31;",
          "805:  }",
          "806:  goto yy18;",
          "807: yy31:",
          "811:  if (yybm[0+yych] & 128) {",
          "812:   goto yy31;",
          "815:  if (yych <= ':') goto yy62;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "898:  if (yych >= ':') goto yy18;",
          "899: yy34:",
          "900:  ++YYCURSOR;",
          "902:  yych = *YYCURSOR;",
          "903:  if (yych <= '/') goto yy18;",
          "904:  if (yych <= '9') goto yy34;",
          "941:  yych = *++YYCURSOR;",
          "942:  if (yych <= '/') goto yy18;",
          "943:  if (yych >= ':') goto yy18;",
          "945:  ++YYCURSOR;",
          "946:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "947:  yych = *YYCURSOR;",
          "948:  if (yych <= '/') goto yy18;",
          "994:  goto yy18;",
          "996:  yych = *++YYCURSOR;",
          "997:  if (yych <= '/') goto yy18;",
          "998:  if (yych >= ':') goto yy18;",
          "1000:  ++YYCURSOR;",
          "1001:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "1002:  yych = *YYCURSOR;",
          "1003:  if (yych <= '/') goto yy18;",
          "1043:  yych = *++YYCURSOR;",
          "1062:  yych = *++YYCURSOR;",
          "1064:  goto yy18;",
          "1066:  yych = *++YYCURSOR;",
          "1067:  if (yych <= '/') {",
          "1070:  } else {",
          "1073:  }",
          "1075:  yych = *++YYCURSOR;",
          "1081:  if (yych <= '/') goto yy18;",
          "1084:  ++YYCURSOR;",
          "1085:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1086:  yych = *YYCURSOR;",
          "1087:  if (yych <= ':') {",
          "1088:   if (yych <= '.') {",
          "1089:    if (yych <= '-') goto yy18;",
          "1091:   } else {",
          "1092:    if (yych <= '/') goto yy18;",
          "1094:    goto yy18;",
          "1095:   }",
          "1096:  } else {",
          "1097:   if (yych <= 'E') {",
          "1099:    if (yych <= 'D') goto yy18;",
          "1101:   } else {",
          "1103:    goto yy18;",
          "1104:   }",
          "1105:  }",
          "1107:  yych = *++YYCURSOR;",
          "1108:  if (yych <= '/') goto yy18;",
          "1109:  if (yych >= ':') goto yy18;",
          "1111:  ++YYCURSOR;",
          "1112:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1113:  yych = *YYCURSOR;",
          "1114:  if (yych <= ';') {",
          "1115:   if (yych <= '/') goto yy18;",
          "1117:   if (yych <= ':') goto yy18;",
          "1118:  } else {",
          "1119:   if (yych <= 'E') {",
          "1120:    if (yych <= 'D') goto yy18;",
          "1122:   } else {",
          "1124:    goto yy18;",
          "1125:   }",
          "1126:  }",
          "1128:  ++YYCURSOR;",
          "1130:  {",
          "1131: #if SIZEOF_ZEND_LONG == 4",
          "1132: use_double:",
          "",
          "[Removed Lines]",
          "901:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "905:  if (yych >= ';') goto yy18;",
          "906:  yych = *++YYCURSOR;",
          "907:  if (yych != '{') goto yy18;",
          "908:  ++YYCURSOR;",
          "909: #line 743 \"ext/standard/var_unserializer.re\"",
          "910:  {",
          "911:  zend_long elements = parse_iv(start + 2);",
          "914:     if (!var_hash) return 0;",
          "916:  if (elements < 0) {",
          "917:   return 0;",
          "918:  }",
          "920:  array_init_size(rval, elements);",
          "921:  if (elements) {",
          "924:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "925:  }",
          "927:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "928:   return 0;",
          "929:  }",
          "931:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "932: }",
          "933: #line 934 \"ext/standard/var_unserializer.c\"",
          "934: yy39:",
          "935:  yych = *++YYCURSOR;",
          "936:  if (yych == '+') goto yy40;",
          "937:  if (yych <= '/') goto yy18;",
          "938:  if (yych <= '9') goto yy41;",
          "939:  goto yy18;",
          "940: yy40:",
          "944: yy41:",
          "949:  if (yych <= '9') goto yy41;",
          "950:  if (yych >= ';') goto yy18;",
          "951:  yych = *++YYCURSOR;",
          "952:  if (yych != '\"') goto yy18;",
          "953:  ++YYCURSOR;",
          "954: #line 709 \"ext/standard/var_unserializer.re\"",
          "955:  {",
          "956:  size_t len, maxlen;",
          "957:  zend_string *str;",
          "959:  len = parse_uiv(start + 2);",
          "960:  maxlen = max - YYCURSOR;",
          "961:  if (maxlen < len) {",
          "963:   return 0;",
          "964:  }",
          "966:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "967:   return 0;",
          "968:  }",
          "970:  if (*(YYCURSOR) != '\"') {",
          "971:   zend_string_free(str);",
          "973:   return 0;",
          "974:  }",
          "976:  if (*(YYCURSOR + 1) != ';') {",
          "977:   efree(str);",
          "979:   return 0;",
          "980:  }",
          "982:  YYCURSOR += 2;",
          "985:  ZVAL_STR(rval, str);",
          "986:  return 1;",
          "987: }",
          "988: #line 989 \"ext/standard/var_unserializer.c\"",
          "989: yy46:",
          "990:  yych = *++YYCURSOR;",
          "991:  if (yych == '+') goto yy47;",
          "992:  if (yych <= '/') goto yy18;",
          "993:  if (yych <= '9') goto yy48;",
          "995: yy47:",
          "999: yy48:",
          "1004:  if (yych <= '9') goto yy48;",
          "1005:  if (yych >= ';') goto yy18;",
          "1006:  yych = *++YYCURSOR;",
          "1007:  if (yych != '\"') goto yy18;",
          "1008:  ++YYCURSOR;",
          "1009: #line 677 \"ext/standard/var_unserializer.re\"",
          "1010:  {",
          "1011:  size_t len, maxlen;",
          "1012:  char *str;",
          "1014:  len = parse_uiv(start + 2);",
          "1015:  maxlen = max - YYCURSOR;",
          "1016:  if (maxlen < len) {",
          "1018:   return 0;",
          "1019:  }",
          "1021:  str = (char*)YYCURSOR;",
          "1023:  YYCURSOR += len;",
          "1025:  if (*(YYCURSOR) != '\"') {",
          "1027:   return 0;",
          "1028:  }",
          "1030:  if (*(YYCURSOR + 1) != ';') {",
          "1032:   return 0;",
          "1033:  }",
          "1035:  YYCURSOR += 2;",
          "1038:  ZVAL_STRINGL(rval, str, len);",
          "1039:  return 1;",
          "1040: }",
          "1041: #line 1042 \"ext/standard/var_unserializer.c\"",
          "1042: yy53:",
          "1044:  if (yych <= '/') {",
          "1045:   if (yych <= ',') {",
          "1046:    if (yych == '+') goto yy57;",
          "1047:    goto yy18;",
          "1048:   } else {",
          "1049:    if (yych <= '-') goto yy55;",
          "1050:    if (yych <= '.') goto yy60;",
          "1051:    goto yy18;",
          "1052:   }",
          "1053:  } else {",
          "1054:   if (yych <= 'I') {",
          "1055:    if (yych <= '9') goto yy58;",
          "1056:    if (yych <= 'H') goto yy18;",
          "1057:    goto yy56;",
          "1058:   } else {",
          "1059:    if (yych != 'N') goto yy18;",
          "1060:   }",
          "1061:  }",
          "1063:  if (yych == 'A') goto yy76;",
          "1065: yy55:",
          "1068:   if (yych == '.') goto yy60;",
          "1069:   goto yy18;",
          "1071:   if (yych <= '9') goto yy58;",
          "1072:   if (yych != 'I') goto yy18;",
          "1074: yy56:",
          "1076:  if (yych == 'N') goto yy72;",
          "1077:  goto yy18;",
          "1078: yy57:",
          "1079:  yych = *++YYCURSOR;",
          "1080:  if (yych == '.') goto yy60;",
          "1082:  if (yych >= ':') goto yy18;",
          "1083: yy58:",
          "1090:    goto yy70;",
          "1093:    if (yych <= '9') goto yy58;",
          "1098:    if (yych <= ';') goto yy63;",
          "1100:    goto yy65;",
          "1102:    if (yych == 'e') goto yy65;",
          "1106: yy60:",
          "1110: yy61:",
          "1116:   if (yych <= '9') goto yy61;",
          "1121:    goto yy65;",
          "1123:    if (yych == 'e') goto yy65;",
          "1127: yy63:",
          "1129: #line 668 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "823:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "827:  if (yych == ';') goto yy63;",
          "828:  goto yy18;",
          "829: yy36:",
          "833: yy37:",
          "838:  if (yych <= '9') goto yy37;",
          "839:  if (yych <= ':') goto yy65;",
          "841: yy39:",
          "845: yy40:",
          "850:  if (yych <= '9') goto yy40;",
          "851:  if (yych <= ':') goto yy66;",
          "852:  goto yy18;",
          "853: yy42:",
          "855:  if (yych == ';') goto yy67;",
          "856:  goto yy18;",
          "857: yy43:",
          "859:  if (yych == '.') goto yy45;",
          "860:  if (yych <= '/') goto yy18;",
          "861:  if (yych <= '9') goto yy46;",
          "863: yy44:",
          "866:   if (yych != '.') goto yy18;",
          "868:   if (yych <= '9') goto yy46;",
          "869:   if (yych == 'I') goto yy48;",
          "870:   goto yy18;",
          "872: yy45:",
          "875:  if (yych <= '9') goto yy69;",
          "876:  goto yy18;",
          "877: yy46:",
          "884:    goto yy69;",
          "887:    if (yych <= '9') goto yy46;",
          "892:    if (yych <= ';') goto yy71;",
          "894:    goto yy73;",
          "896:    if (yych == 'e') goto yy73;",
          "900: yy48:",
          "901:  yych = *++YYCURSOR;",
          "902:  if (yych == 'N') goto yy74;",
          "903:  goto yy18;",
          "904: yy49:",
          "905:  yych = *++YYCURSOR;",
          "906:  if (yych == 'A') goto yy75;",
          "907:  goto yy18;",
          "908: yy50:",
          "909:  yych = *++YYCURSOR;",
          "910:  if (yych <= '/') goto yy18;",
          "911:  if (yych >= ':') goto yy18;",
          "912: yy51:",
          "913:  ++YYCURSOR;",
          "914:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "915:  yych = *YYCURSOR;",
          "916:  if (yych <= '/') goto yy18;",
          "917:  if (yych <= '9') goto yy51;",
          "918:  if (yych == ';') goto yy76;",
          "919:  goto yy18;",
          "920: yy53:",
          "921:  yych = *++YYCURSOR;",
          "922:  if (yych <= '/') goto yy18;",
          "923:  if (yych >= ':') goto yy18;",
          "924: yy54:",
          "925:  ++YYCURSOR;",
          "926:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "927:  yych = *YYCURSOR;",
          "928:  if (yych <= '/') goto yy18;",
          "929:  if (yych <= '9') goto yy54;",
          "930:  if (yych <= ':') goto yy78;",
          "931:  goto yy18;",
          "932: yy56:",
          "933:  yych = *++YYCURSOR;",
          "934:  if (yych <= '/') goto yy18;",
          "935:  if (yych >= ':') goto yy18;",
          "936: yy57:",
          "937:  ++YYCURSOR;",
          "938:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "939:  yych = *YYCURSOR;",
          "940:  if (yych <= '/') goto yy18;",
          "941:  if (yych <= '9') goto yy57;",
          "942:  if (yych == ';') goto yy79;",
          "943:  goto yy18;",
          "944: yy59:",
          "948: yy60:",
          "949:  ++YYCURSOR;",
          "950:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "951:  yych = *YYCURSOR;",
          "952:  if (yych <= '/') goto yy18;",
          "953:  if (yych <= '9') goto yy60;",
          "954:  if (yych <= ':') goto yy81;",
          "955:  goto yy18;",
          "956: yy62:",
          "957:  yych = *++YYCURSOR;",
          "958:  if (yych == '\"') goto yy82;",
          "959:  goto yy18;",
          "960: yy63:",
          "961:  ++YYCURSOR;",
          "962: #line 586 \"ext/standard/var_unserializer.re\"",
          "963:  {",
          "964:  zend_long id;",
          "967:  if (!var_hash) return 0;",
          "969:  id = parse_iv(start + 2) - 1;",
          "970:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "971:   return 0;",
          "972:  }",
          "974:  zval_ptr_dtor(rval);",
          "975:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "976:   ZVAL_UNDEF(rval);",
          "977:   return 1;",
          "978:  }",
          "979:  if (Z_ISREF_P(rval_ref)) {",
          "980:   ZVAL_COPY(rval, rval_ref);",
          "981:  } else {",
          "982:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "983:   ZVAL_COPY(rval, rval_ref);",
          "984:  }",
          "986:  return 1;",
          "987: }",
          "988: #line 989 \"ext/standard/var_unserializer.c\"",
          "989: yy65:",
          "990:  yych = *++YYCURSOR;",
          "991:  if (yych == '\"') goto yy84;",
          "992:  goto yy18;",
          "993: yy66:",
          "994:  yych = *++YYCURSOR;",
          "995:  if (yych == '{') goto yy86;",
          "996:  goto yy18;",
          "997: yy67:",
          "998:  ++YYCURSOR;",
          "999: #line 643 \"ext/standard/var_unserializer.re\"",
          "1000:  {",
          "1002:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1003:  return 1;",
          "1004: }",
          "1005: #line 1006 \"ext/standard/var_unserializer.c\"",
          "1006: yy69:",
          "1012:   if (yych <= '9') goto yy69;",
          "1017:    goto yy73;",
          "1019:    if (yych == 'e') goto yy73;",
          "1023: yy71:",
          "1025: #line 691 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1135:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1136:  return 1;",
          "1137: }",
          "1140:  yych = *++YYCURSOR;",
          "1141:  if (yych <= ',') {",
          "1143:  } else {",
          "1145:   if (yych <= '/') goto yy18;",
          "1147:   goto yy18;",
          "1148:  }",
          "1150:  yych = *++YYCURSOR;",
          "1166:  goto yy18;",
          "1168:  yych = *++YYCURSOR;",
          "1171:  goto yy18;",
          "1196:  ++YYCURSOR;",
          "1198:  {",
          "1245:  if (start[2] == '-' || start[2] == '+') {",
          "1246:   digits--;",
          "",
          "[Removed Lines]",
          "1138: #line 1139 \"ext/standard/var_unserializer.c\"",
          "1139: yy65:",
          "1142:   if (yych != '+') goto yy18;",
          "1144:   if (yych <= '-') goto yy66;",
          "1146:   if (yych <= '9') goto yy67;",
          "1149: yy66:",
          "1151:  if (yych <= ',') {",
          "1152:   if (yych == '+') goto yy69;",
          "1153:   goto yy18;",
          "1154:  } else {",
          "1155:   if (yych <= '-') goto yy69;",
          "1156:   if (yych <= '/') goto yy18;",
          "1157:   if (yych >= ':') goto yy18;",
          "1158:  }",
          "1159: yy67:",
          "1160:  ++YYCURSOR;",
          "1161:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1162:  yych = *YYCURSOR;",
          "1163:  if (yych <= '/') goto yy18;",
          "1164:  if (yych <= '9') goto yy67;",
          "1165:  if (yych == ';') goto yy63;",
          "1167: yy69:",
          "1169:  if (yych <= '/') goto yy18;",
          "1170:  if (yych <= '9') goto yy67;",
          "1172: yy70:",
          "1173:  ++YYCURSOR;",
          "1174:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1175:  yych = *YYCURSOR;",
          "1176:  if (yych <= ';') {",
          "1177:   if (yych <= '/') goto yy18;",
          "1178:   if (yych <= '9') goto yy70;",
          "1179:   if (yych <= ':') goto yy18;",
          "1180:   goto yy63;",
          "1181:  } else {",
          "1182:   if (yych <= 'E') {",
          "1183:    if (yych <= 'D') goto yy18;",
          "1184:    goto yy65;",
          "1185:   } else {",
          "1186:    if (yych == 'e') goto yy65;",
          "1187:    goto yy18;",
          "1188:   }",
          "1189:  }",
          "1190: yy72:",
          "1191:  yych = *++YYCURSOR;",
          "1192:  if (yych != 'F') goto yy18;",
          "1193: yy73:",
          "1194:  yych = *++YYCURSOR;",
          "1195:  if (yych != ';') goto yy18;",
          "1197: #line 652 \"ext/standard/var_unserializer.re\"",
          "1201:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1202:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1203:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1204:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1205:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1206:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1207:  } else {",
          "1208:   ZVAL_NULL(rval);",
          "1209:  }",
          "1211:  return 1;",
          "1212: }",
          "1213: #line 1214 \"ext/standard/var_unserializer.c\"",
          "1214: yy76:",
          "1215:  yych = *++YYCURSOR;",
          "1216:  if (yych == 'N') goto yy73;",
          "1217:  goto yy18;",
          "1218: yy77:",
          "1219:  yych = *++YYCURSOR;",
          "1220:  if (yych <= ',') {",
          "1221:   if (yych != '+') goto yy18;",
          "1222:  } else {",
          "1223:   if (yych <= '-') goto yy78;",
          "1224:   if (yych <= '/') goto yy18;",
          "1225:   if (yych <= '9') goto yy79;",
          "1226:   goto yy18;",
          "1227:  }",
          "1228: yy78:",
          "1229:  yych = *++YYCURSOR;",
          "1230:  if (yych <= '/') goto yy18;",
          "1231:  if (yych >= ':') goto yy18;",
          "1232: yy79:",
          "1233:  ++YYCURSOR;",
          "1234:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1235:  yych = *YYCURSOR;",
          "1236:  if (yych <= '/') goto yy18;",
          "1237:  if (yych <= '9') goto yy79;",
          "1238:  if (yych != ';') goto yy18;",
          "1239:  ++YYCURSOR;",
          "1240: #line 626 \"ext/standard/var_unserializer.re\"",
          "1241:  {",
          "1242: #if SIZEOF_ZEND_LONG == 4",
          "1243:  int digits = YYCURSOR - start - 3;",
          "",
          "[Added Lines]",
          "1034: #line 1035 \"ext/standard/var_unserializer.c\"",
          "1035: yy73:",
          "1038:   if (yych == '+') goto yy88;",
          "1039:   goto yy18;",
          "1041:   if (yych <= '-') goto yy88;",
          "1043:   if (yych <= '9') goto yy89;",
          "1046: yy74:",
          "1048:  if (yych == 'F') goto yy91;",
          "1050: yy75:",
          "1052:  if (yych == 'N') goto yy91;",
          "1054: yy76:",
          "1056: #line 649 \"ext/standard/var_unserializer.re\"",
          "1058: #if SIZEOF_ZEND_LONG == 4",
          "1059:  int digits = YYCURSOR - start - 3;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1263:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1264:  return 1;",
          "1265: }",
          "1301:  yych = *++YYCURSOR;",
          "1311:  ++YYCURSOR;",
          "1313:  {",
          "1314:  zend_long id;",
          "",
          "[Removed Lines]",
          "1266: #line 1267 \"ext/standard/var_unserializer.c\"",
          "1267: yy83:",
          "1268:  yych = *++YYCURSOR;",
          "1269:  if (yych <= '/') goto yy18;",
          "1270:  if (yych >= '2') goto yy18;",
          "1271:  yych = *++YYCURSOR;",
          "1272:  if (yych != ';') goto yy18;",
          "1273:  ++YYCURSOR;",
          "1274: #line 620 \"ext/standard/var_unserializer.re\"",
          "1275:  {",
          "1277:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1278:  return 1;",
          "1279: }",
          "1280: #line 1281 \"ext/standard/var_unserializer.c\"",
          "1281: yy87:",
          "1282:  ++YYCURSOR;",
          "1283: #line 614 \"ext/standard/var_unserializer.re\"",
          "1284:  {",
          "1286:  ZVAL_NULL(rval);",
          "1287:  return 1;",
          "1288: }",
          "1289: #line 1290 \"ext/standard/var_unserializer.c\"",
          "1290: yy89:",
          "1291:  yych = *++YYCURSOR;",
          "1292:  if (yych <= ',') {",
          "1293:   if (yych != '+') goto yy18;",
          "1294:  } else {",
          "1295:   if (yych <= '-') goto yy90;",
          "1296:   if (yych <= '/') goto yy18;",
          "1297:   if (yych <= '9') goto yy91;",
          "1298:   goto yy18;",
          "1299:  }",
          "1300: yy90:",
          "1302:  if (yych <= '/') goto yy18;",
          "1303:  if (yych >= ':') goto yy18;",
          "1304: yy91:",
          "1305:  ++YYCURSOR;",
          "1306:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1307:  yych = *YYCURSOR;",
          "1308:  if (yych <= '/') goto yy18;",
          "1309:  if (yych <= '9') goto yy91;",
          "1310:  if (yych != ';') goto yy18;",
          "1312: #line 589 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1082: #line 1083 \"ext/standard/var_unserializer.c\"",
          "1083: yy78:",
          "1085:  if (yych == '\"') goto yy92;",
          "1086:  goto yy18;",
          "1087: yy79:",
          "1089: #line 612 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1335:  return 1;",
          "1336: }",
          "1337: #line 1338 \"ext/standard/var_unserializer.c\"",
          "1339:  yych = *++YYCURSOR;",
          "1340:  if (yych <= ',') {",
          "1342:  } else {",
          "1343:   if (yych <= '-') goto yy96;",
          "1344:   if (yych <= '/') goto yy18;",
          "1347:  }",
          "1353:  ++YYCURSOR;",
          "1354:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1355:  yych = *YYCURSOR;",
          "1356:  if (yych <= '/') goto yy18;",
          "1359:  ++YYCURSOR;",
          "1361:  {",
          "1369:   return 0;",
          "1370:  }",
          "1376:  }",
          "1379:  } else {",
          "1382:  }",
          "1384:  return 1;",
          "1385: }",
          "1387: }",
          "1391:  return 0;",
          "",
          "[Removed Lines]",
          "1338: yy95:",
          "1341:   if (yych != '+') goto yy18;",
          "1345:   if (yych <= '9') goto yy97;",
          "1346:   goto yy18;",
          "1348: yy96:",
          "1349:  yych = *++YYCURSOR;",
          "1350:  if (yych <= '/') goto yy18;",
          "1351:  if (yych >= ':') goto yy18;",
          "1352: yy97:",
          "1357:  if (yych <= '9') goto yy97;",
          "1358:  if (yych != ';') goto yy18;",
          "1360: #line 563 \"ext/standard/var_unserializer.re\"",
          "1362:  zend_long id;",
          "1365:  if (!var_hash) return 0;",
          "1367:  id = parse_iv(start + 2) - 1;",
          "1368:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1372:  zval_ptr_dtor(rval);",
          "1373:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1374:   ZVAL_UNDEF(rval);",
          "1375:   return 1;",
          "1377:  if (Z_ISREF_P(rval_ref)) {",
          "1378:   ZVAL_COPY(rval, rval_ref);",
          "1380:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1381:   ZVAL_COPY(rval, rval_ref);",
          "1386: #line 1387 \"ext/standard/var_unserializer.c\"",
          "1388: #line 938 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1114: #line 1115 \"ext/standard/var_unserializer.c\"",
          "1115: yy81:",
          "1116:  yych = *++YYCURSOR;",
          "1117:  if (yych == '\"') goto yy94;",
          "1118:  goto yy18;",
          "1119: yy82:",
          "1120:  ++YYCURSOR;",
          "1121: #line 801 \"ext/standard/var_unserializer.re\"",
          "1122:  {",
          "1123:  size_t len, len2, len3, maxlen;",
          "1124:  zend_long elements;",
          "1125:  char *str;",
          "1126:  zend_string *class_name;",
          "1127:  zend_class_entry *ce;",
          "1128:  int incomplete_class = 0;",
          "1130:  int custom_object = 0;",
          "1132:  zval user_func;",
          "1133:  zval retval;",
          "1134:  zval args[1];",
          "1136:     if (!var_hash) return 0;",
          "1137:  if (*start == 'C') {",
          "1138:   custom_object = 1;",
          "1139:  }",
          "1141:  len2 = len = parse_uiv(start + 2);",
          "1142:  maxlen = max - YYCURSOR;",
          "1143:  if (maxlen < len || len == 0) {",
          "1145:   return 0;",
          "1146:  }",
          "1148:  str = (char*)YYCURSOR;",
          "1150:  YYCURSOR += len;",
          "1152:  if (*(YYCURSOR) != '\"') {",
          "1154:   return 0;",
          "1155:  }",
          "1156:  if (*(YYCURSOR+1) != ':') {",
          "1158:   return 0;",
          "1159:  }",
          "1161:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1162:  if (len3 != len)",
          "1163:  {",
          "1165:   return 0;",
          "1166:  }",
          "1168:  class_name = zend_string_init(str, len, 0);",
          "1170:  do {",
          "1171:   if(!unserialize_allowed_class(class_name, classes)) {",
          "1172:    incomplete_class = 1;",
          "1173:    ce = PHP_IC_ENTRY;",
          "1174:    break;",
          "1175:   }",
          "1178:   BG(serialize_lock)++;",
          "1179:   ce = zend_lookup_class(class_name);",
          "1180:   if (ce) {",
          "1181:    BG(serialize_lock)--;",
          "1182:    if (EG(exception)) {",
          "1183:     zend_string_release(class_name);",
          "1184:     return 0;",
          "1185:    }",
          "1186:    break;",
          "1187:   }",
          "1188:   BG(serialize_lock)--;",
          "1190:   if (EG(exception)) {",
          "1191:    zend_string_release(class_name);",
          "1192:    return 0;",
          "1193:   }",
          "1196:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1197:    incomplete_class = 1;",
          "1198:    ce = PHP_IC_ENTRY;",
          "1199:    break;",
          "1200:   }",
          "1203:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1205:   ZVAL_STR_COPY(&args[0], class_name);",
          "1206:   BG(serialize_lock)++;",
          "1207:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1208:    BG(serialize_lock)--;",
          "1209:    if (EG(exception)) {",
          "1210:     zend_string_release(class_name);",
          "1211:     zval_ptr_dtor(&user_func);",
          "1212:     zval_ptr_dtor(&args[0]);",
          "1213:     return 0;",
          "1214:    }",
          "1215:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1216:    incomplete_class = 1;",
          "1217:    ce = PHP_IC_ENTRY;",
          "1218:    zval_ptr_dtor(&user_func);",
          "1219:    zval_ptr_dtor(&args[0]);",
          "1220:    break;",
          "1221:   }",
          "1222:   BG(serialize_lock)--;",
          "1223:   zval_ptr_dtor(&retval);",
          "1224:   if (EG(exception)) {",
          "1225:    zend_string_release(class_name);",
          "1226:    zval_ptr_dtor(&user_func);",
          "1227:    zval_ptr_dtor(&args[0]);",
          "1228:    return 0;",
          "1229:   }",
          "1232:   BG(serialize_lock)++;",
          "1233:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1234:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1235:    incomplete_class = 1;",
          "1236:    ce = PHP_IC_ENTRY;",
          "1237:   }",
          "1238:   BG(serialize_lock)--;",
          "1240:   zval_ptr_dtor(&user_func);",
          "1241:   zval_ptr_dtor(&args[0]);",
          "1242:   break;",
          "1243:  } while (1);",
          "1247:  if (custom_object) {",
          "1248:   int ret;",
          "1250:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1252:   if (ret && incomplete_class) {",
          "1253:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1254:   }",
          "1255:   zend_string_release(class_name);",
          "1256:   return ret;",
          "1257:  }",
          "1259:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1261:  if (elements < 0) {",
          "1262:     zend_string_release(class_name);",
          "1263:     return 0;",
          "1264:  }",
          "1266:  if (incomplete_class) {",
          "1267:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1268:  }",
          "1269:  zend_string_release(class_name);",
          "1271:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1272: }",
          "1273: #line 1274 \"ext/standard/var_unserializer.c\"",
          "1274: yy84:",
          "1275:  ++YYCURSOR;",
          "1276: #line 732 \"ext/standard/var_unserializer.re\"",
          "1277:  {",
          "1278:  size_t len, maxlen;",
          "1279:  zend_string *str;",
          "1281:  len = parse_uiv(start + 2);",
          "1282:  maxlen = max - YYCURSOR;",
          "1283:  if (maxlen < len) {",
          "1285:   return 0;",
          "1286:  }",
          "1288:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1289:   return 0;",
          "1290:  }",
          "1292:  if (*(YYCURSOR) != '\"') {",
          "1293:   zend_string_free(str);",
          "1295:   return 0;",
          "1296:  }",
          "1298:  if (*(YYCURSOR + 1) != ';') {",
          "1299:   efree(str);",
          "1301:   return 0;",
          "1302:  }",
          "1304:  YYCURSOR += 2;",
          "1307:  ZVAL_STR(rval, str);",
          "1308:  return 1;",
          "1309: }",
          "1310: #line 1311 \"ext/standard/var_unserializer.c\"",
          "1311: yy86:",
          "1312:  ++YYCURSOR;",
          "1313: #line 766 \"ext/standard/var_unserializer.re\"",
          "1314:  {",
          "1315:  zend_long elements = parse_iv(start + 2);",
          "1318:     if (!var_hash) return 0;",
          "1320:  if (elements < 0) {",
          "1321:   return 0;",
          "1322:  }",
          "1324:  array_init_size(rval, elements);",
          "1325:  if (elements) {",
          "1328:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1329:  }",
          "1331:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1332:   return 0;",
          "1333:  }",
          "1335:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1336: }",
          "1338: yy88:",
          "1341:   if (yych == '+') goto yy96;",
          "1342:   goto yy18;",
          "1346:   if (yych >= ':') goto yy18;",
          "1348: yy89:",
          "1353:  if (yych <= '9') goto yy89;",
          "1354:  if (yych == ';') goto yy71;",
          "1355:  goto yy18;",
          "1356: yy91:",
          "1357:  yych = *++YYCURSOR;",
          "1358:  if (yych == ';') goto yy97;",
          "1359:  goto yy18;",
          "1360: yy92:",
          "1362: #line 790 \"ext/standard/var_unserializer.re\"",
          "1364:  long elements;",
          "1365:     if (!var_hash) return 0;",
          "1367:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1368:  if (elements < 0) {",
          "1369:   return 0;",
          "1370:  }",
          "1371:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1372: }",
          "1373: #line 1374 \"ext/standard/var_unserializer.c\"",
          "1374: yy94:",
          "1375:  ++YYCURSOR;",
          "1376: #line 700 \"ext/standard/var_unserializer.re\"",
          "1377:  {",
          "1378:  size_t len, maxlen;",
          "1379:  char *str;",
          "1381:  len = parse_uiv(start + 2);",
          "1382:  maxlen = max - YYCURSOR;",
          "1383:  if (maxlen < len) {",
          "1388:  str = (char*)YYCURSOR;",
          "1390:  YYCURSOR += len;",
          "1392:  if (*(YYCURSOR) != '\"') {",
          "1394:   return 0;",
          "1397:  if (*(YYCURSOR + 1) != ';') {",
          "1399:   return 0;",
          "1400:  }",
          "1402:  YYCURSOR += 2;",
          "1405:  ZVAL_STRINGL(rval, str, len);",
          "1406:  return 1;",
          "1407: }",
          "1408: #line 1409 \"ext/standard/var_unserializer.c\"",
          "1409: yy96:",
          "1410:  yych = *++YYCURSOR;",
          "1411:  if (yych <= '/') goto yy18;",
          "1412:  if (yych <= '9') goto yy89;",
          "1413:  goto yy18;",
          "1414: yy97:",
          "1415:  ++YYCURSOR;",
          "1416: #line 675 \"ext/standard/var_unserializer.re\"",
          "1417:  {",
          "1420:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1421:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1422:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1423:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1424:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1425:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1427:   ZVAL_NULL(rval);",
          "1432: #line 1433 \"ext/standard/var_unserializer.c\"",
          "1434: #line 961 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #define VAR_ENTRIES_MAX 1024",
          "27: #define VAR_ENTRIES_DBG 0",
          "29: typedef struct {",
          "30:  zval *data[VAR_ENTRIES_MAX];",
          "31:  zend_long used_slots;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: #define VAR_WAKEUP_FLAG 1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:         (*var_hashx)->last_dtor = var_hash;",
          "95:     }",
          "96:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "97:     return &var_hash->data[var_hash->used_slots++];",
          "98: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:  Z_VAR_FLAGS(var_hash->data[var_hash->used_slots]) = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:  zend_long i;",
          "142:  var_entries *var_hash = (*var_hashx)->first;",
          "143:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "144: #if VAR_ENTRIES_DBG",
          "145:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "146: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:  zend_bool wakeup_failed = 0;",
          "149:  zval wakeup_name;",
          "150:  ZVAL_UNDEF(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:  while (var_dtor_hash) {",
          "155:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "156: #if VAR_ENTRIES_DBG",
          "157:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "158: #endif",
          "160:   }",
          "161:   next = var_dtor_hash->next;",
          "162:   efree_size(var_dtor_hash, sizeof(var_dtor_entries));",
          "163:   var_dtor_hash = next;",
          "164:  }",
          "165: }",
          "",
          "[Removed Lines]",
          "159:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "",
          "[Added Lines]",
          "164:    zval *zv = &var_dtor_hash->data[i];",
          "170:    if (Z_VAR_FLAGS_P(zv) == VAR_WAKEUP_FLAG) {",
          "171:     if (!wakeup_failed) {",
          "172:      zval retval;",
          "173:      if (Z_ISUNDEF(wakeup_name)) {",
          "174:       ZVAL_STRINGL(&wakeup_name, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "175:      }",
          "177:      BG(serialize_lock)++;",
          "178:      if (call_user_function_ex(CG(function_table), zv, &wakeup_name, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "179:       wakeup_failed = 1;",
          "180:       GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "181:      }",
          "182:      BG(serialize_lock)--;",
          "184:      zval_ptr_dtor(&retval);",
          "185:     } else {",
          "186:      GC_FLAGS(Z_OBJ_P(zv)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "187:     }",
          "188:    }",
          "190:    zval_ptr_dtor(zv);",
          "197:  zval_ptr_dtor(&wakeup_name);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "463: #endif",
          "464: static inline int object_common2(UNSERIALIZE_PARAMETER, zend_long elements)",
          "465: {",
          "468:  HashTable *ht;",
          "469:  zend_bool has_wakeup;",
          "",
          "[Removed Lines]",
          "466:  zval retval;",
          "467:  zval fname;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "488:  ZVAL_DEREF(rval);",
          "489:  if (has_wakeup) {",
          "502:  }",
          "504:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "490:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "491:   BG(serialize_lock)++;",
          "492:   if (call_user_function_ex(CG(function_table), rval, &fname, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "493:    GC_FLAGS(Z_OBJ_P(rval)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "494:   }",
          "495:   BG(serialize_lock)--;",
          "496:   zval_dtor(&fname);",
          "497:   zval_dtor(&retval);",
          "498:  }",
          "500:  if (EG(exception)) {",
          "501:   return 0;",
          "",
          "[Added Lines]",
          "522:   zval *wakeup_var = var_tmp_var(var_hash);",
          "523:   ZVAL_COPY(wakeup_var, rval);",
          "524:   Z_VAR_FLAGS_P(wakeup_var) = VAR_WAKEUP_FLAG;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a08723d3d313445191470c19e12235a56165600a",
      "candidate_info": {
        "commit_hash": "a08723d3d313445191470c19e12235a56165600a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/a08723d3d313445191470c19e12235a56165600a",
        "files": [
          "Zend/zend_operators.c",
          "ext/mysqlnd/mysqlnd_wireprotocol.c",
          "ext/standard/array.c",
          "ext/standard/basic_functions.c",
          "ext/standard/string.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re",
          "main/php_variables.c"
        ],
        "message": "Use interned empty and \"one char\" strings.",
        "before_after_code_files": [
          "Zend/zend_operators.c||Zend/zend_operators.c",
          "ext/mysqlnd/mysqlnd_wireprotocol.c||ext/mysqlnd/mysqlnd_wireprotocol.c",
          "ext/standard/array.c||ext/standard/array.c",
          "ext/standard/basic_functions.c||ext/standard/basic_functions.c",
          "ext/standard/string.c||ext/standard/string.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re",
          "main/php_variables.c||main/php_variables.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_operators.c||Zend/zend_operators.c": [
          "File: Zend/zend_operators.c -> Zend/zend_operators.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "537:    break;",
          "538:   }",
          "539:   case IS_LONG: {",
          "541:    break;",
          "542:   }",
          "543:   case IS_DOUBLE: {",
          "",
          "[Removed Lines]",
          "540:    ZVAL_NEW_STR(op, zend_long_to_str(Z_LVAL_P(op)));",
          "",
          "[Added Lines]",
          "540:    ZVAL_STR(op, zend_long_to_str(Z_LVAL_P(op)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2858: {",
          "2862: }",
          "",
          "[Removed Lines]",
          "2859:  char buf[MAX_LENGTH_OF_LONG + 1];",
          "2860:  char *res = zend_print_long_to_buf(buf + sizeof(buf) - 1, num);",
          "2861:  return zend_string_init(res, buf + sizeof(buf) - 1 - res, 0);",
          "",
          "[Added Lines]",
          "2859:  if ((zend_ulong)num <= 9) {",
          "2860:   return ZSTR_CHAR((zend_uchar)'0' + (zend_uchar)num);",
          "2861:  } else {",
          "2862:   char buf[MAX_LENGTH_OF_LONG + 1];",
          "2863:   char *res = zend_print_long_to_buf(buf + sizeof(buf) - 1, num);",
          "2864:   return zend_string_init(res, buf + sizeof(buf) - 1 - res, 0);",
          "2865:  }",
          "",
          "---------------"
        ],
        "ext/mysqlnd/mysqlnd_wireprotocol.c||ext/mysqlnd/mysqlnd_wireprotocol.c": [
          "File: ext/mysqlnd/mysqlnd_wireprotocol.c -> ext/mysqlnd/mysqlnd_wireprotocol.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1766:     } else if (Z_TYPE_P(current_field) == IS_STRING) {",
          "1768:     }",
          "1769:    } else {",
          "1770:     ZVAL_STRINGL(current_field, (char *)p, len);",
          "1771:    }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1769:    } else if (len == 0) {",
          "1770:     ZVAL_EMPTY_STRING(current_field);",
          "1771:    } else if (len == 1) {",
          "1772:     ZVAL_INTERNED_STR(current_field, ZSTR_CHAR((zend_uchar)*(char *)p));",
          "",
          "---------------"
        ],
        "ext/standard/array.c||ext/standard/array.c": [
          "File: ext/standard/array.c -> ext/standard/array.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3807:   Z_PARAM_VARIADIC('+', args, argc)",
          "3808:  ZEND_PARSE_PARAMETERS_END();",
          "3820:  if (replace) {",
          "3821:   HashTable *dest;",
          "3824:   arg = args;",
          "3825:   dest = zend_array_dup(Z_ARRVAL_P(arg));",
          "",
          "[Removed Lines]",
          "3810:  for (i = 0; i < argc; i++) {",
          "3811:   zval *arg = args + i;",
          "3813:   if (Z_TYPE_P(arg) != IS_ARRAY) {",
          "3814:    php_error_docref(NULL, E_WARNING, \"Argument #%d is not an array\", i + 1);",
          "3815:    RETURN_NULL();",
          "3816:   }",
          "3817:  }",
          "",
          "[Added Lines]",
          "3814:   for (i = 0; i < argc; i++) {",
          "3815:    zval *arg = args + i;",
          "3817:    if (Z_TYPE_P(arg) != IS_ARRAY) {",
          "3818:     php_error_docref(NULL, E_WARNING, \"Argument #%d is not an array\", i + 1);",
          "3819:     RETURN_NULL();",
          "3820:    }",
          "3821:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3838:  } else {",
          "3839:   zval *src_entry;",
          "3840:   HashTable *src, *dest;",
          "3842:   arg = args;",
          "3843:   src  = Z_ARRVAL_P(arg);",
          "3846:   dest = Z_ARRVAL_P(return_value);",
          "3847:   if (src->u.flags & HASH_FLAG_PACKED) {",
          "3848:    zend_hash_real_init(dest, 1);",
          "",
          "[Removed Lines]",
          "3845:   array_init_size(return_value, zend_hash_num_elements(src));",
          "",
          "[Added Lines]",
          "3841:   uint32_t count = 0;",
          "3843:   for (i = 0; i < argc; i++) {",
          "3844:    zval *arg = args + i;",
          "3846:    if (Z_TYPE_P(arg) != IS_ARRAY) {",
          "3847:     php_error_docref(NULL, E_WARNING, \"Argument #%d is not an array\", i + 1);",
          "3848:     RETURN_NULL();",
          "3849:    }",
          "3850:    count += zend_hash_num_elements(Z_ARRVAL_P(arg));",
          "3851:   }",
          "3856:   array_init_size(return_value, count);",
          "",
          "---------------"
        ],
        "ext/standard/basic_functions.c||ext/standard/basic_functions.c": [
          "File: ext/standard/basic_functions.c -> ext/standard/basic_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5320: PHP_FUNCTION(ini_get)",
          "5321: {",
          "5322:  char *varname, *str;",
          "5325:  ZEND_PARSE_PARAMETERS_START(1, 1)",
          "5326:   Z_PARAM_STRING(varname, varname_len)",
          "",
          "[Removed Lines]",
          "5323:  size_t varname_len;",
          "",
          "[Added Lines]",
          "5323:  size_t varname_len, len;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5332:   RETURN_FALSE;",
          "5333:  }",
          "5336: }",
          "",
          "[Removed Lines]",
          "5335:  RETURN_STRING(str);",
          "",
          "[Added Lines]",
          "5335:  len = strlen(str);",
          "5336:  if (len == 0) {",
          "5337:   RETURN_EMPTY_STRING();",
          "5338:  } else if (len == 1) {",
          "5339:   RETURN_INTERNED_STR(ZSTR_CHAR((zend_uchar)str[0]));",
          "5340:  }",
          "5341:  RETURN_STRINGL(str, len);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5445:  if (old_value) {",
          "5447:  } else {",
          "5448:   RETVAL_FALSE;",
          "5449:  }",
          "",
          "[Removed Lines]",
          "5446:   RETVAL_STRING(old_value);",
          "",
          "[Added Lines]",
          "5452:   size_t len = strlen(old_value);",
          "5454:   if (len == 0) {",
          "5455:    RETVAL_EMPTY_STRING();",
          "5456:   } else if (len == 1) {",
          "5457:    RETVAL_INTERNED_STR(ZSTR_CHAR((zend_uchar)old_value[0]));",
          "5458:   } else {",
          "5459:    RETVAL_STRINGL(old_value, len);",
          "5460:   }",
          "",
          "---------------"
        ],
        "ext/standard/string.c||ext/standard/string.c": [
          "File: ext/standard/string.c -> ext/standard/string.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1094:   zend_hash_next_index_insert_new(Z_ARRVAL_P(return_value), &tmp);",
          "1095:  } else {",
          "1096:   do {",
          "1098:    zend_hash_next_index_insert_new(Z_ARRVAL_P(return_value), &tmp);",
          "1099:    p1 = p2 + ZSTR_LEN(delim);",
          "1100:    p2 = (char *) php_memnstr(p1, ZSTR_VAL(delim), ZSTR_LEN(delim), endp);",
          "",
          "[Removed Lines]",
          "1097:    ZVAL_STRINGL(&tmp, p1, p2 - p1);",
          "",
          "[Added Lines]",
          "1097:    size_t l = p2 - p1;",
          "1099:    if (l == 0) {",
          "1100:     ZVAL_EMPTY_STRING(&tmp);",
          "1101:    } else if (l == 1) {",
          "1102:     ZVAL_INTERNED_STR(&tmp, ZSTR_CHAR((zend_uchar)(*p1)));",
          "1103:    } else {",
          "1104:     ZVAL_STRINGL(&tmp, p1, p2 - p1);",
          "1105:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2420:   l = ZSTR_LEN(str) - f;",
          "2421:  }",
          "2423:  RETURN_STRINGL(ZSTR_VAL(str) + f, l);",
          "2424: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2431:  if (l == 0) {",
          "2432:   RETURN_EMPTY_STRING();",
          "2433:  } else if (l == 1) {",
          "2434:   RETURN_INTERNED_STR(ZSTR_CHAR((zend_uchar)(ZSTR_VAL(str)[f])));",
          "2435:  } else if (l == ZSTR_LEN(str)) {",
          "2436:   RETURN_STR_COPY(str);",
          "2437:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3227: nothing_todo:",
          "3228:   return zend_string_copy(haystack);",
          "3229:  } else {",
          "3231:   (*replace_count)++;",
          "3232:   return new_str;",
          "3233:  }",
          "",
          "[Removed Lines]",
          "3230:   new_str = zend_string_init(str, str_len, 0);",
          "",
          "[Added Lines]",
          "3246:   if (str_len == 0) {",
          "3247:    new_str = ZSTR_EMPTY_ALLOC();",
          "3248:   } else if (str_len == 1) {",
          "3249:    new_str = ZSTR_CHAR((zend_uchar)(*str));",
          "3250:   } else {",
          "3251:    new_str = zend_string_init(str, str_len, 0);",
          "3252:   }",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "651:     0,   0,   0,   0,   0,   0,   0,   0,",
          "652:     0,   0,   0,   0,   0,   0,   0,   0,",
          "653:  };",
          "654:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "655:  yych = *YYCURSOR;",
          "656:  switch (yych) {",
          "657:  case 'C':",
          "659:  case 'N': goto yy5;",
          "666:  case 'o': goto yy12;",
          "671:  }",
          "672: yy2:",
          "674: yy3:",
          "676:  { return 0; }",
          "678: yy4:",
          "679:  yych = *(YYMARKER = ++YYCURSOR);",
          "681:  goto yy3;",
          "682: yy5:",
          "683:  yych = *++YYCURSOR;",
          "685:  goto yy3;",
          "686: yy6:",
          "687:  yych = *(YYMARKER = ++YYCURSOR);",
          "689:  goto yy3;",
          "690: yy7:",
          "691:  yych = *(YYMARKER = ++YYCURSOR);",
          "693:  goto yy3;",
          "694: yy8:",
          "695:  yych = *(YYMARKER = ++YYCURSOR);",
          "697:  goto yy3;",
          "698: yy9:",
          "699:  yych = *(YYMARKER = ++YYCURSOR);",
          "701:  goto yy3;",
          "702: yy10:",
          "703:  yych = *(YYMARKER = ++YYCURSOR);",
          "705:  goto yy3;",
          "706: yy11:",
          "707:  yych = *(YYMARKER = ++YYCURSOR);",
          "709:  goto yy3;",
          "710: yy12:",
          "711:  yych = *(YYMARKER = ++YYCURSOR);",
          "713:  goto yy3;",
          "714: yy13:",
          "715:  yych = *(YYMARKER = ++YYCURSOR);",
          "717:  goto yy3;",
          "718: yy14:",
          "723:  ++YYCURSOR;",
          "725:  {",
          "727:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "729: }",
          "731: yy17:",
          "732:  yych = *++YYCURSOR;",
          "733:  if (yybm[0+yych] & 128) {",
          "735:  }",
          "736: yy18:",
          "737:  YYCURSOR = YYMARKER;",
          "738:  goto yy3;",
          "739: yy19:",
          "740:  ++YYCURSOR;",
          "765:  if (yych <= '/') goto yy18;",
          "769:  yych = *++YYCURSOR;",
          "778:   }",
          "787:   }",
          "788:  }",
          "799:  }",
          "811:  yych = *++YYCURSOR;",
          "812:  if (yych <= '/') goto yy18;",
          "816:  ++YYCURSOR;",
          "817:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "818:  yych = *YYCURSOR;",
          "829:  if (yych <= '/') goto yy18;",
          "834:  ++YYCURSOR;",
          "837:  if (yych <= '/') goto yy18;",
          "842:  ++YYCURSOR;",
          "843:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "844:  yych = *YYCURSOR;",
          "845:  if (yych <= '/') goto yy18;",
          "869:  yych = *++YYCURSOR;",
          "874:  ++YYCURSOR;",
          "895:  }",
          "905:  yych = *++YYCURSOR;",
          "906:  if (yych <= '/') goto yy18;",
          "907:  if (yych >= ':') goto yy18;",
          "917:  ++YYCURSOR;",
          "918:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "919:  yych = *YYCURSOR;",
          "920:  if (yych <= '/') goto yy18;",
          "925:  ++YYCURSOR;",
          "928:  if (yych <= '/') goto yy18;",
          "933:  ++YYCURSOR;",
          "934:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "935:  yych = *YYCURSOR;",
          "936:  if (yych <= '/') goto yy18;",
          "941:  yych = *++YYCURSOR;",
          "945:  ++YYCURSOR;",
          "947:  {",
          "955:   return 0;",
          "956:  }",
          "962:  }",
          "965:  } else {",
          "968:  }",
          "970:  return 1;",
          "971: }",
          "974:  yych = *++YYCURSOR;",
          "976:  goto yy18;",
          "978:  yych = *++YYCURSOR;",
          "980:  goto yy18;",
          "982:  ++YYCURSOR;",
          "991:  ++YYCURSOR;",
          "992:  if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);",
          "993:  yych = *YYCURSOR;",
          "994:  if (yych <= ';') {",
          "995:   if (yych <= '/') goto yy18;",
          "997:   if (yych <= ':') goto yy18;",
          "998:  } else {",
          "999:   if (yych <= 'E') {",
          "1000:    if (yych <= 'D') goto yy18;",
          "1002:   } else {",
          "1004:    goto yy18;",
          "1005:   }",
          "1006:  }",
          "1008:  ++YYCURSOR;",
          "1009: #line 727 \"ext/standard/var_unserializer.re\"",
          "1010:  {",
          "",
          "[Removed Lines]",
          "658:  case 'O': goto yy4;",
          "660:  case 'R': goto yy6;",
          "661:  case 'S': goto yy7;",
          "662:  case 'a': goto yy8;",
          "663:  case 'b': goto yy9;",
          "664:  case 'd': goto yy10;",
          "665:  case 'i': goto yy11;",
          "667:  case 'r': goto yy13;",
          "668:  case 's': goto yy14;",
          "669:  case '}': goto yy15;",
          "670:  default: goto yy2;",
          "673:  ++YYCURSOR;",
          "675: #line 1001 \"ext/standard/var_unserializer.re\"",
          "677: #line 678 \"ext/standard/var_unserializer.c\"",
          "680:  if (yych == ':') goto yy17;",
          "684:  if (yych == ';') goto yy19;",
          "688:  if (yych == ':') goto yy21;",
          "692:  if (yych == ':') goto yy22;",
          "696:  if (yych == ':') goto yy23;",
          "700:  if (yych == ':') goto yy24;",
          "704:  if (yych == ':') goto yy25;",
          "708:  if (yych == ':') goto yy26;",
          "712:  if (yych == ':') goto yy27;",
          "716:  if (yych == ':') goto yy28;",
          "719:  yych = *(YYMARKER = ++YYCURSOR);",
          "720:  if (yych == ':') goto yy29;",
          "721:  goto yy3;",
          "722: yy15:",
          "724: #line 995 \"ext/standard/var_unserializer.re\"",
          "730: #line 731 \"ext/standard/var_unserializer.c\"",
          "734:   goto yy30;",
          "741: #line 673 \"ext/standard/var_unserializer.re\"",
          "742:  {",
          "744:  ZVAL_NULL(rval);",
          "745:  return 1;",
          "746: }",
          "747: #line 748 \"ext/standard/var_unserializer.c\"",
          "748: yy21:",
          "749:  yych = *++YYCURSOR;",
          "750:  if (yych <= '/') goto yy18;",
          "751:  if (yych <= '9') goto yy32;",
          "752:  goto yy18;",
          "753: yy22:",
          "754:  yych = *++YYCURSOR;",
          "755:  if (yych <= '/') goto yy18;",
          "756:  if (yych <= '9') goto yy34;",
          "757:  goto yy18;",
          "758: yy23:",
          "759:  yych = *++YYCURSOR;",
          "760:  if (yych <= '/') goto yy18;",
          "761:  if (yych <= '9') goto yy36;",
          "762:  goto yy18;",
          "763: yy24:",
          "764:  yych = *++YYCURSOR;",
          "766:  if (yych <= '1') goto yy38;",
          "767:  goto yy18;",
          "768: yy25:",
          "770:  if (yych <= '/') {",
          "771:   if (yych <= ',') {",
          "772:    if (yych == '+') goto yy39;",
          "773:    goto yy18;",
          "774:   } else {",
          "775:    if (yych <= '-') goto yy40;",
          "776:    if (yych <= '.') goto yy41;",
          "777:    goto yy18;",
          "779:  } else {",
          "780:   if (yych <= 'I') {",
          "781:    if (yych <= '9') goto yy42;",
          "782:    if (yych <= 'H') goto yy18;",
          "783:    goto yy44;",
          "784:   } else {",
          "785:    if (yych == 'N') goto yy45;",
          "786:    goto yy18;",
          "789: yy26:",
          "790:  yych = *++YYCURSOR;",
          "791:  if (yych <= ',') {",
          "792:   if (yych == '+') goto yy46;",
          "793:   goto yy18;",
          "794:  } else {",
          "795:   if (yych <= '-') goto yy46;",
          "796:   if (yych <= '/') goto yy18;",
          "797:   if (yych <= '9') goto yy47;",
          "798:   goto yy18;",
          "800: yy27:",
          "801:  yych = *++YYCURSOR;",
          "802:  if (yych <= '/') goto yy18;",
          "803:  if (yych <= '9') goto yy49;",
          "804:  goto yy18;",
          "805: yy28:",
          "806:  yych = *++YYCURSOR;",
          "807:  if (yych <= '/') goto yy18;",
          "808:  if (yych <= '9') goto yy51;",
          "809:  goto yy18;",
          "810: yy29:",
          "813:  if (yych <= '9') goto yy53;",
          "814:  goto yy18;",
          "815: yy30:",
          "819:  if (yybm[0+yych] & 128) {",
          "820:   goto yy30;",
          "821:  }",
          "822:  if (yych <= '/') goto yy18;",
          "823:  if (yych <= ':') goto yy55;",
          "824:  goto yy18;",
          "825: yy32:",
          "826:  ++YYCURSOR;",
          "827:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "828:  yych = *YYCURSOR;",
          "830:  if (yych <= '9') goto yy32;",
          "831:  if (yych == ';') goto yy56;",
          "832:  goto yy18;",
          "833: yy34:",
          "835:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "836:  yych = *YYCURSOR;",
          "838:  if (yych <= '9') goto yy34;",
          "839:  if (yych <= ':') goto yy58;",
          "840:  goto yy18;",
          "841: yy36:",
          "846:  if (yych <= '9') goto yy36;",
          "847:  if (yych <= ':') goto yy59;",
          "848:  goto yy18;",
          "849: yy38:",
          "850:  yych = *++YYCURSOR;",
          "851:  if (yych == ';') goto yy60;",
          "852:  goto yy18;",
          "853: yy39:",
          "854:  yych = *++YYCURSOR;",
          "855:  if (yych == '.') goto yy41;",
          "856:  if (yych <= '/') goto yy18;",
          "857:  if (yych <= '9') goto yy42;",
          "858:  goto yy18;",
          "859: yy40:",
          "860:  yych = *++YYCURSOR;",
          "861:  if (yych <= '/') {",
          "862:   if (yych != '.') goto yy18;",
          "863:  } else {",
          "864:   if (yych <= '9') goto yy42;",
          "865:   if (yych == 'I') goto yy44;",
          "866:   goto yy18;",
          "867:  }",
          "868: yy41:",
          "870:  if (yych <= '/') goto yy18;",
          "871:  if (yych <= '9') goto yy62;",
          "872:  goto yy18;",
          "873: yy42:",
          "875:  if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);",
          "876:  yych = *YYCURSOR;",
          "877:  if (yych <= ':') {",
          "878:   if (yych <= '.') {",
          "879:    if (yych <= '-') goto yy18;",
          "880:    goto yy62;",
          "881:   } else {",
          "882:    if (yych <= '/') goto yy18;",
          "883:    if (yych <= '9') goto yy42;",
          "884:    goto yy18;",
          "885:   }",
          "886:  } else {",
          "887:   if (yych <= 'E') {",
          "888:    if (yych <= ';') goto yy64;",
          "889:    if (yych <= 'D') goto yy18;",
          "890:    goto yy66;",
          "891:   } else {",
          "892:    if (yych == 'e') goto yy66;",
          "893:    goto yy18;",
          "894:   }",
          "896: yy44:",
          "897:  yych = *++YYCURSOR;",
          "898:  if (yych == 'N') goto yy67;",
          "899:  goto yy18;",
          "900: yy45:",
          "901:  yych = *++YYCURSOR;",
          "902:  if (yych == 'A') goto yy68;",
          "903:  goto yy18;",
          "904: yy46:",
          "908: yy47:",
          "909:  ++YYCURSOR;",
          "910:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "911:  yych = *YYCURSOR;",
          "912:  if (yych <= '/') goto yy18;",
          "913:  if (yych <= '9') goto yy47;",
          "914:  if (yych == ';') goto yy69;",
          "915:  goto yy18;",
          "916: yy49:",
          "921:  if (yych <= '9') goto yy49;",
          "922:  if (yych <= ':') goto yy71;",
          "923:  goto yy18;",
          "924: yy51:",
          "926:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "927:  yych = *YYCURSOR;",
          "929:  if (yych <= '9') goto yy51;",
          "930:  if (yych == ';') goto yy72;",
          "931:  goto yy18;",
          "932: yy53:",
          "937:  if (yych <= '9') goto yy53;",
          "938:  if (yych <= ':') goto yy74;",
          "939:  goto yy18;",
          "940: yy55:",
          "942:  if (yych == '\"') goto yy75;",
          "943:  goto yy18;",
          "944: yy56:",
          "946: #line 622 \"ext/standard/var_unserializer.re\"",
          "948:  zend_long id;",
          "951:  if (!var_hash) return 0;",
          "953:  id = parse_uiv(start + 2) - 1;",
          "954:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "958:  zval_ptr_dtor(rval);",
          "959:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "960:   ZVAL_UNDEF(rval);",
          "961:   return 1;",
          "963:  if (Z_ISREF_P(rval_ref)) {",
          "964:   ZVAL_COPY(rval, rval_ref);",
          "966:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "967:   ZVAL_COPY(rval, rval_ref);",
          "972: #line 973 \"ext/standard/var_unserializer.c\"",
          "973: yy58:",
          "975:  if (yych == '\"') goto yy77;",
          "977: yy59:",
          "979:  if (yych == '{') goto yy79;",
          "981: yy60:",
          "983: #line 679 \"ext/standard/var_unserializer.re\"",
          "984:  {",
          "986:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "987:  return 1;",
          "988: }",
          "989: #line 990 \"ext/standard/var_unserializer.c\"",
          "990: yy62:",
          "996:   if (yych <= '9') goto yy62;",
          "1001:    goto yy66;",
          "1003:    if (yych == 'e') goto yy66;",
          "1007: yy64:",
          "",
          "[Added Lines]",
          "659:  case 'O': goto yy13;",
          "661:  case 'R': goto yy2;",
          "662:  case 'S': goto yy10;",
          "663:  case 'a': goto yy11;",
          "664:  case 'b': goto yy6;",
          "665:  case 'd': goto yy8;",
          "666:  case 'i': goto yy7;",
          "668:  case 'r': goto yy4;",
          "669:  case 's': goto yy9;",
          "670:  case '}': goto yy14;",
          "671:  default: goto yy16;",
          "674:  yych = *(YYMARKER = ++YYCURSOR);",
          "675:  if (yych == ':') goto yy88;",
          "677: #line 1007 \"ext/standard/var_unserializer.re\"",
          "679: #line 680 \"ext/standard/var_unserializer.c\"",
          "682:  if (yych == ':') goto yy83;",
          "686:  if (yych == ';') goto yy81;",
          "690:  if (yych == ':') goto yy77;",
          "694:  if (yych == ':') goto yy71;",
          "698:  if (yych == ':') goto yy48;",
          "702:  if (yych == ':') goto yy42;",
          "706:  if (yych == ':') goto yy36;",
          "710:  if (yych == ':') goto yy30;",
          "714:  if (yych == ':') goto yy24;",
          "718:  if (yych == ':') goto yy17;",
          "722: #line 1001 \"ext/standard/var_unserializer.re\"",
          "728: #line 729 \"ext/standard/var_unserializer.c\"",
          "729: yy16:",
          "730:  yych = *++YYCURSOR;",
          "731:  goto yy3;",
          "735:   goto yy19;",
          "742:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "743:  yych = *YYCURSOR;",
          "744:  if (yybm[0+yych] & 128) {",
          "745:   goto yy19;",
          "746:  }",
          "748:  if (yych >= ';') goto yy18;",
          "750:  if (yych != '\"') goto yy18;",
          "751:  ++YYCURSOR;",
          "752: #line 849 \"ext/standard/var_unserializer.re\"",
          "753:  {",
          "754:  size_t len, len2, len3, maxlen;",
          "755:  zend_long elements;",
          "756:  char *str;",
          "757:  zend_string *class_name;",
          "758:  zend_class_entry *ce;",
          "759:  int incomplete_class = 0;",
          "761:  int custom_object = 0;",
          "763:  zval user_func;",
          "764:  zval retval;",
          "765:  zval args[1];",
          "767:     if (!var_hash) return 0;",
          "768:  if (*start == 'C') {",
          "769:   custom_object = 1;",
          "770:  }",
          "772:  len2 = len = parse_uiv(start + 2);",
          "773:  maxlen = max - YYCURSOR;",
          "774:  if (maxlen < len || len == 0) {",
          "776:   return 0;",
          "777:  }",
          "779:  str = (char*)YYCURSOR;",
          "781:  YYCURSOR += len;",
          "783:  if (*(YYCURSOR) != '\"') {",
          "785:   return 0;",
          "786:  }",
          "787:  if (*(YYCURSOR+1) != ':') {",
          "789:   return 0;",
          "790:  }",
          "792:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "793:  if (len3 != len)",
          "794:  {",
          "796:   return 0;",
          "797:  }",
          "799:  class_name = zend_string_init(str, len, 0);",
          "801:  do {",
          "802:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "803:    incomplete_class = 1;",
          "804:    ce = PHP_IC_ENTRY;",
          "805:    break;",
          "809:   BG(serialize_lock)++;",
          "810:   ce = zend_lookup_class(class_name);",
          "811:   if (ce) {",
          "812:    BG(serialize_lock)--;",
          "813:    if (EG(exception)) {",
          "814:     zend_string_release(class_name);",
          "815:     return 0;",
          "816:    }",
          "817:    break;",
          "818:   }",
          "819:   BG(serialize_lock)--;",
          "821:   if (EG(exception)) {",
          "822:    zend_string_release(class_name);",
          "823:    return 0;",
          "824:   }",
          "827:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "828:    incomplete_class = 1;",
          "829:    ce = PHP_IC_ENTRY;",
          "830:    break;",
          "831:   }",
          "834:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "836:   ZVAL_STR_COPY(&args[0], class_name);",
          "837:   BG(serialize_lock)++;",
          "838:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "839:    BG(serialize_lock)--;",
          "840:    if (EG(exception)) {",
          "841:     zend_string_release(class_name);",
          "842:     zval_ptr_dtor(&user_func);",
          "843:     zval_ptr_dtor(&args[0]);",
          "844:     return 0;",
          "845:    }",
          "846:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "847:    incomplete_class = 1;",
          "848:    ce = PHP_IC_ENTRY;",
          "849:    zval_ptr_dtor(&user_func);",
          "850:    zval_ptr_dtor(&args[0]);",
          "851:    break;",
          "852:   }",
          "853:   BG(serialize_lock)--;",
          "854:   zval_ptr_dtor(&retval);",
          "855:   if (EG(exception)) {",
          "856:    zend_string_release(class_name);",
          "857:    zval_ptr_dtor(&user_func);",
          "858:    zval_ptr_dtor(&args[0]);",
          "859:    return 0;",
          "860:   }",
          "863:   BG(serialize_lock)++;",
          "864:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "865:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "866:    incomplete_class = 1;",
          "867:    ce = PHP_IC_ENTRY;",
          "868:   }",
          "869:   BG(serialize_lock)--;",
          "871:   zval_ptr_dtor(&user_func);",
          "872:   zval_ptr_dtor(&args[0]);",
          "873:   break;",
          "874:  } while (1);",
          "878:  if (custom_object) {",
          "879:   int ret;",
          "881:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "883:   if (ret && incomplete_class) {",
          "884:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "886:   zend_string_release(class_name);",
          "887:   return ret;",
          "890:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "892:  if (elements < 0) {",
          "893:     zend_string_release(class_name);",
          "894:     return 0;",
          "897:  if (incomplete_class) {",
          "898:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "899:  }",
          "900:  zend_string_release(class_name);",
          "902:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "903: }",
          "904: #line 905 \"ext/standard/var_unserializer.c\"",
          "905: yy24:",
          "908:  if (yych >= ':') goto yy18;",
          "909: yy25:",
          "914:  if (yych <= '9') goto yy25;",
          "915:  if (yych >= ';') goto yy18;",
          "916:  yych = *++YYCURSOR;",
          "917:  if (yych != '\"') goto yy18;",
          "919: #line 838 \"ext/standard/var_unserializer.re\"",
          "920:  {",
          "921:  long elements;",
          "922:     if (!var_hash) return 0;",
          "924:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "925:  if (elements < 0) {",
          "926:   return 0;",
          "927:  }",
          "928:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "929: }",
          "930: #line 931 \"ext/standard/var_unserializer.c\"",
          "931: yy30:",
          "932:  yych = *++YYCURSOR;",
          "934:  if (yych >= ':') goto yy18;",
          "935: yy31:",
          "940:  if (yych <= '9') goto yy31;",
          "941:  if (yych >= ';') goto yy18;",
          "943:  if (yych != '{') goto yy18;",
          "945: #line 808 \"ext/standard/var_unserializer.re\"",
          "946:  {",
          "947:  zend_long elements = parse_iv(start + 2);",
          "950:     if (!var_hash) return 0;",
          "952:  if (elements < 0) {",
          "953:   return 0;",
          "956:  array_init_size(rval, elements);",
          "957:  if (elements) {",
          "960:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "961:  }",
          "967:  HT_ALLOW_COW_VIOLATION(Z_ARRVAL_P(rval));",
          "969:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "970:   return 0;",
          "971:  }",
          "973:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "974: }",
          "975: #line 976 \"ext/standard/var_unserializer.c\"",
          "976: yy36:",
          "980: yy37:",
          "985:  if (yych <= '9') goto yy37;",
          "986:  if (yych >= ';') goto yy18;",
          "987:  yych = *++YYCURSOR;",
          "988:  if (yych != '\"') goto yy18;",
          "990: #line 774 \"ext/standard/var_unserializer.re\"",
          "991:  {",
          "992:  size_t len, maxlen;",
          "993:  zend_string *str;",
          "995:  len = parse_uiv(start + 2);",
          "996:  maxlen = max - YYCURSOR;",
          "997:  if (maxlen < len) {",
          "999:   return 0;",
          "1000:  }",
          "1002:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1003:   return 0;",
          "1004:  }",
          "1006:  if (*(YYCURSOR) != '\"') {",
          "1007:   zend_string_free(str);",
          "1009:   return 0;",
          "1010:  }",
          "1012:  if (*(YYCURSOR + 1) != ';') {",
          "1013:   efree(str);",
          "1015:   return 0;",
          "1016:  }",
          "1018:  YYCURSOR += 2;",
          "1021:  ZVAL_STR(rval, str);",
          "1022:  return 1;",
          "1023: }",
          "1024: #line 1025 \"ext/standard/var_unserializer.c\"",
          "1025: yy42:",
          "1026:  yych = *++YYCURSOR;",
          "1028:  if (yych >= ':') goto yy18;",
          "1029: yy43:",
          "1034:  if (yych <= '9') goto yy43;",
          "1035:  if (yych >= ';') goto yy18;",
          "1037:  if (yych != '\"') goto yy18;",
          "1039: #line 736 \"ext/standard/var_unserializer.re\"",
          "1041:  size_t len, maxlen;",
          "1042:  char *str;",
          "1044:  len = parse_uiv(start + 2);",
          "1045:  maxlen = max - YYCURSOR;",
          "1046:  if (maxlen < len) {",
          "1048:   return 0;",
          "1049:  }",
          "1051:  str = (char*)YYCURSOR;",
          "1053:  YYCURSOR += len;",
          "1055:  if (*(YYCURSOR) != '\"') {",
          "1060:  if (*(YYCURSOR + 1) != ';') {",
          "1062:   return 0;",
          "1065:  YYCURSOR += 2;",
          "1068:  if (len == 0) {",
          "1069:   ZVAL_EMPTY_STRING(rval);",
          "1070:  } else if (len == 1) {",
          "1071:   ZVAL_INTERNED_STR(rval, ZSTR_CHAR((zend_uchar)*str));",
          "1073:   ZVAL_STRINGL(rval, str, len);",
          "1077: #line 1078 \"ext/standard/var_unserializer.c\"",
          "1078: yy48:",
          "1079:  yych = *++YYCURSOR;",
          "1080:  if (yych <= '/') {",
          "1081:   if (yych <= ',') {",
          "1082:    if (yych == '+') goto yy52;",
          "1083:    goto yy18;",
          "1084:   } else {",
          "1085:    if (yych <= '-') goto yy50;",
          "1086:    if (yych <= '.') goto yy55;",
          "1087:    goto yy18;",
          "1088:   }",
          "1089:  } else {",
          "1090:   if (yych <= 'I') {",
          "1091:    if (yych <= '9') goto yy53;",
          "1092:    if (yych <= 'H') goto yy18;",
          "1093:    goto yy51;",
          "1094:   } else {",
          "1095:    if (yych != 'N') goto yy18;",
          "1096:   }",
          "1097:  }",
          "1099:  if (yych == 'A') goto yy70;",
          "1101: yy50:",
          "1102:  yych = *++YYCURSOR;",
          "1103:  if (yych <= '/') {",
          "1104:   if (yych == '.') goto yy55;",
          "1105:   goto yy18;",
          "1106:  } else {",
          "1107:   if (yych <= '9') goto yy53;",
          "1108:   if (yych != 'I') goto yy18;",
          "1109:  }",
          "1110: yy51:",
          "1112:  if (yych == 'N') goto yy66;",
          "1114: yy52:",
          "1115:  yych = *++YYCURSOR;",
          "1116:  if (yych == '.') goto yy55;",
          "1117:  if (yych <= '/') goto yy18;",
          "1118:  if (yych >= ':') goto yy18;",
          "1119: yy53:",
          "1121:  if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);",
          "1122:  yych = *YYCURSOR;",
          "1123:  if (yych <= ':') {",
          "1124:   if (yych <= '.') {",
          "1125:    if (yych <= '-') goto yy18;",
          "1126:    goto yy64;",
          "1127:   } else {",
          "1128:    if (yych <= '/') goto yy18;",
          "1129:    if (yych <= '9') goto yy53;",
          "1130:    goto yy18;",
          "1131:   }",
          "1132:  } else {",
          "1133:   if (yych <= 'E') {",
          "1134:    if (yych <= ';') goto yy58;",
          "1135:    if (yych <= 'D') goto yy18;",
          "1136:    goto yy60;",
          "1137:   } else {",
          "1138:    if (yych == 'e') goto yy60;",
          "1139:    goto yy18;",
          "1140:   }",
          "1141:  }",
          "1142: yy55:",
          "1143:  yych = *++YYCURSOR;",
          "1144:  if (yych <= '/') goto yy18;",
          "1145:  if (yych >= ':') goto yy18;",
          "1146: yy56:",
          "1152:   if (yych <= '9') goto yy56;",
          "1157:    goto yy60;",
          "1159:    if (yych == 'e') goto yy60;",
          "1163: yy58:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1015:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1016:  return 1;",
          "1017: }",
          "1020:  yych = *++YYCURSOR;",
          "1021:  if (yych <= ',') {",
          "1024:  } else {",
          "1026:   if (yych <= '/') goto yy18;",
          "1028:   goto yy18;",
          "1029:  }",
          "1031:  yych = *++YYCURSOR;",
          "1033:  goto yy18;",
          "1035:  yych = *++YYCURSOR;",
          "1037:  goto yy18;",
          "1039:  ++YYCURSOR;",
          "1040: #line 685 \"ext/standard/var_unserializer.re\"",
          "1041:  {",
          "",
          "[Removed Lines]",
          "1018: #line 1019 \"ext/standard/var_unserializer.c\"",
          "1019: yy66:",
          "1022:   if (yych == '+') goto yy81;",
          "1023:   goto yy18;",
          "1025:   if (yych <= '-') goto yy81;",
          "1027:   if (yych <= '9') goto yy82;",
          "1030: yy67:",
          "1032:  if (yych == 'F') goto yy84;",
          "1034: yy68:",
          "1036:  if (yych == 'N') goto yy84;",
          "1038: yy69:",
          "",
          "[Added Lines]",
          "1174: #line 1175 \"ext/standard/var_unserializer.c\"",
          "1175: yy60:",
          "1178:   if (yych != '+') goto yy18;",
          "1180:   if (yych <= '-') goto yy61;",
          "1182:   if (yych <= '9') goto yy62;",
          "1185: yy61:",
          "1187:  if (yych <= '/') goto yy18;",
          "1188:  if (yych >= ':') goto yy18;",
          "1189: yy62:",
          "1190:  ++YYCURSOR;",
          "1191:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1192:  yych = *YYCURSOR;",
          "1193:  if (yych <= '/') goto yy18;",
          "1194:  if (yych <= '9') goto yy62;",
          "1195:  if (yych == ';') goto yy58;",
          "1197: yy64:",
          "1198:  ++YYCURSOR;",
          "1199:  if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);",
          "1200:  yych = *YYCURSOR;",
          "1201:  if (yych <= ';') {",
          "1202:   if (yych <= '/') goto yy18;",
          "1203:   if (yych <= '9') goto yy64;",
          "1204:   if (yych <= ':') goto yy18;",
          "1205:   goto yy58;",
          "1206:  } else {",
          "1207:   if (yych <= 'E') {",
          "1208:    if (yych <= 'D') goto yy18;",
          "1209:    goto yy60;",
          "1210:   } else {",
          "1211:    if (yych == 'e') goto yy60;",
          "1212:    goto yy18;",
          "1213:   }",
          "1214:  }",
          "1215: yy66:",
          "1216:  yych = *++YYCURSOR;",
          "1217:  if (yych != 'F') goto yy18;",
          "1218: yy67:",
          "1219:  yych = *++YYCURSOR;",
          "1220:  if (yych != ';') goto yy18;",
          "1221:  ++YYCURSOR;",
          "1222: #line 711 \"ext/standard/var_unserializer.re\"",
          "1223:  {",
          "1226:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1227:   ZVAL_DOUBLE(rval, ZEND_NAN);",
          "1228:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1229:   ZVAL_DOUBLE(rval, ZEND_INFINITY);",
          "1230:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1231:   ZVAL_DOUBLE(rval, -ZEND_INFINITY);",
          "1232:  } else {",
          "1233:   ZVAL_NULL(rval);",
          "1234:  }",
          "1236:  return 1;",
          "1237: }",
          "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
          "1239: yy70:",
          "1241:  if (yych == 'N') goto yy67;",
          "1243: yy71:",
          "1244:  yych = *++YYCURSOR;",
          "1245:  if (yych <= ',') {",
          "1246:   if (yych != '+') goto yy18;",
          "1247:  } else {",
          "1248:   if (yych <= '-') goto yy72;",
          "1249:   if (yych <= '/') goto yy18;",
          "1250:   if (yych <= '9') goto yy73;",
          "1251:   goto yy18;",
          "1252:  }",
          "1253: yy72:",
          "1254:  yych = *++YYCURSOR;",
          "1255:  if (yych <= '/') goto yy18;",
          "1256:  if (yych >= ':') goto yy18;",
          "1257: yy73:",
          "1258:  ++YYCURSOR;",
          "1259:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1260:  yych = *YYCURSOR;",
          "1261:  if (yych <= '/') goto yy18;",
          "1262:  if (yych <= '9') goto yy73;",
          "1263:  if (yych != ';') goto yy18;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1063:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1064:  return 1;",
          "1065: }",
          "1068:  yych = *++YYCURSOR;",
          "1072:  ++YYCURSOR;",
          "1073: #line 648 \"ext/standard/var_unserializer.re\"",
          "1074:  {",
          "",
          "[Removed Lines]",
          "1066: #line 1067 \"ext/standard/var_unserializer.c\"",
          "1067: yy71:",
          "1069:  if (yych == '\"') goto yy85;",
          "1070:  goto yy18;",
          "1071: yy72:",
          "",
          "[Added Lines]",
          "1291: #line 1292 \"ext/standard/var_unserializer.c\"",
          "1292: yy77:",
          "1294:  if (yych <= '/') goto yy18;",
          "1295:  if (yych >= '2') goto yy18;",
          "1296:  yych = *++YYCURSOR;",
          "1297:  if (yych != ';') goto yy18;",
          "1298:  ++YYCURSOR;",
          "1299: #line 679 \"ext/standard/var_unserializer.re\"",
          "1300:  {",
          "1302:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1303:  return 1;",
          "1304: }",
          "1305: #line 1306 \"ext/standard/var_unserializer.c\"",
          "1306: yy81:",
          "1307:  ++YYCURSOR;",
          "1308: #line 673 \"ext/standard/var_unserializer.re\"",
          "1309:  {",
          "1311:  ZVAL_NULL(rval);",
          "1312:  return 1;",
          "1313: }",
          "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
          "1315: yy83:",
          "1316:  yych = *++YYCURSOR;",
          "1317:  if (yych <= '/') goto yy18;",
          "1318:  if (yych >= ':') goto yy18;",
          "1319: yy84:",
          "1320:  ++YYCURSOR;",
          "1321:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1322:  yych = *YYCURSOR;",
          "1323:  if (yych <= '/') goto yy18;",
          "1324:  if (yych <= '9') goto yy84;",
          "1325:  if (yych != ';') goto yy18;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1096:  return 1;",
          "1097: }",
          "1329:  yych = *++YYCURSOR;",
          "1330:  if (yych <= '/') goto yy18;",
          "1331:  if (yych >= ':') goto yy18;",
          "1333:  ++YYCURSOR;",
          "1334:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1335:  yych = *YYCURSOR;",
          "1336:  if (yych <= '/') goto yy18;",
          "1345:  ++YYCURSOR;",
          "1361:  {",
          "1378:   return 0;",
          "1379:  }",
          "1384:  }",
          "1405:  } else {",
          "1407:  }",
          "1409:  return 1;",
          "1410: }",
          "1412: }",
          "1416:  return 0;",
          "",
          "[Removed Lines]",
          "1098: #line 1099 \"ext/standard/var_unserializer.c\"",
          "1099: yy74:",
          "1100:  yych = *++YYCURSOR;",
          "1101:  if (yych == '\"') goto yy87;",
          "1102:  goto yy18;",
          "1103: yy75:",
          "1104:  ++YYCURSOR;",
          "1105: #line 843 \"ext/standard/var_unserializer.re\"",
          "1106:  {",
          "1107:  size_t len, len2, len3, maxlen;",
          "1108:  zend_long elements;",
          "1109:  char *str;",
          "1110:  zend_string *class_name;",
          "1111:  zend_class_entry *ce;",
          "1112:  int incomplete_class = 0;",
          "1114:  int custom_object = 0;",
          "1116:  zval user_func;",
          "1117:  zval retval;",
          "1118:  zval args[1];",
          "1120:     if (!var_hash) return 0;",
          "1121:  if (*start == 'C') {",
          "1122:   custom_object = 1;",
          "1123:  }",
          "1125:  len2 = len = parse_uiv(start + 2);",
          "1126:  maxlen = max - YYCURSOR;",
          "1127:  if (maxlen < len || len == 0) {",
          "1129:   return 0;",
          "1130:  }",
          "1132:  str = (char*)YYCURSOR;",
          "1134:  YYCURSOR += len;",
          "1136:  if (*(YYCURSOR) != '\"') {",
          "1138:   return 0;",
          "1139:  }",
          "1140:  if (*(YYCURSOR+1) != ':') {",
          "1142:   return 0;",
          "1143:  }",
          "1145:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1146:  if (len3 != len)",
          "1147:  {",
          "1149:   return 0;",
          "1150:  }",
          "1152:  class_name = zend_string_init(str, len, 0);",
          "1154:  do {",
          "1155:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "1156:    incomplete_class = 1;",
          "1157:    ce = PHP_IC_ENTRY;",
          "1158:    break;",
          "1159:   }",
          "1162:   BG(serialize_lock)++;",
          "1163:   ce = zend_lookup_class(class_name);",
          "1164:   if (ce) {",
          "1165:    BG(serialize_lock)--;",
          "1166:    if (EG(exception)) {",
          "1167:     zend_string_release(class_name);",
          "1168:     return 0;",
          "1169:    }",
          "1170:    break;",
          "1171:   }",
          "1172:   BG(serialize_lock)--;",
          "1174:   if (EG(exception)) {",
          "1175:    zend_string_release(class_name);",
          "1176:    return 0;",
          "1177:   }",
          "1180:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1181:    incomplete_class = 1;",
          "1182:    ce = PHP_IC_ENTRY;",
          "1183:    break;",
          "1184:   }",
          "1187:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1189:   ZVAL_STR_COPY(&args[0], class_name);",
          "1190:   BG(serialize_lock)++;",
          "1191:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1192:    BG(serialize_lock)--;",
          "1193:    if (EG(exception)) {",
          "1194:     zend_string_release(class_name);",
          "1195:     zval_ptr_dtor(&user_func);",
          "1196:     zval_ptr_dtor(&args[0]);",
          "1197:     return 0;",
          "1198:    }",
          "1199:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1200:    incomplete_class = 1;",
          "1201:    ce = PHP_IC_ENTRY;",
          "1202:    zval_ptr_dtor(&user_func);",
          "1203:    zval_ptr_dtor(&args[0]);",
          "1204:    break;",
          "1205:   }",
          "1206:   BG(serialize_lock)--;",
          "1207:   zval_ptr_dtor(&retval);",
          "1208:   if (EG(exception)) {",
          "1209:    zend_string_release(class_name);",
          "1210:    zval_ptr_dtor(&user_func);",
          "1211:    zval_ptr_dtor(&args[0]);",
          "1212:    return 0;",
          "1213:   }",
          "1216:   BG(serialize_lock)++;",
          "1217:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1218:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1219:    incomplete_class = 1;",
          "1220:    ce = PHP_IC_ENTRY;",
          "1221:   }",
          "1222:   BG(serialize_lock)--;",
          "1224:   zval_ptr_dtor(&user_func);",
          "1225:   zval_ptr_dtor(&args[0]);",
          "1226:   break;",
          "1227:  } while (1);",
          "1231:  if (custom_object) {",
          "1232:   int ret;",
          "1234:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1236:   if (ret && incomplete_class) {",
          "1237:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1238:   }",
          "1239:   zend_string_release(class_name);",
          "1240:   return ret;",
          "1241:  }",
          "1243:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1245:  if (elements < 0) {",
          "1246:     zend_string_release(class_name);",
          "1247:     return 0;",
          "1248:  }",
          "1250:  if (incomplete_class) {",
          "1251:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1252:  }",
          "1253:  zend_string_release(class_name);",
          "1255:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1256: }",
          "1257: #line 1258 \"ext/standard/var_unserializer.c\"",
          "1258: yy77:",
          "1259:  ++YYCURSOR;",
          "1260: #line 768 \"ext/standard/var_unserializer.re\"",
          "1261:  {",
          "1262:  size_t len, maxlen;",
          "1263:  zend_string *str;",
          "1265:  len = parse_uiv(start + 2);",
          "1266:  maxlen = max - YYCURSOR;",
          "1267:  if (maxlen < len) {",
          "1269:   return 0;",
          "1270:  }",
          "1272:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1273:   return 0;",
          "1274:  }",
          "1276:  if (*(YYCURSOR) != '\"') {",
          "1277:   zend_string_free(str);",
          "1279:   return 0;",
          "1280:  }",
          "1282:  if (*(YYCURSOR + 1) != ';') {",
          "1283:   efree(str);",
          "1285:   return 0;",
          "1286:  }",
          "1288:  YYCURSOR += 2;",
          "1291:  ZVAL_STR(rval, str);",
          "1292:  return 1;",
          "1293: }",
          "1294: #line 1295 \"ext/standard/var_unserializer.c\"",
          "1295: yy79:",
          "1296:  ++YYCURSOR;",
          "1297: #line 802 \"ext/standard/var_unserializer.re\"",
          "1298:  {",
          "1299:  zend_long elements = parse_iv(start + 2);",
          "1302:     if (!var_hash) return 0;",
          "1304:  if (elements < 0) {",
          "1305:   return 0;",
          "1306:  }",
          "1308:  array_init_size(rval, elements);",
          "1309:  if (elements) {",
          "1312:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1313:  }",
          "1319:  HT_ALLOW_COW_VIOLATION(Z_ARRVAL_P(rval));",
          "1321:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1322:   return 0;",
          "1323:  }",
          "1325:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1326: }",
          "1327: #line 1328 \"ext/standard/var_unserializer.c\"",
          "1328: yy81:",
          "1332: yy82:",
          "1337:  if (yych <= '9') goto yy82;",
          "1338:  if (yych == ';') goto yy64;",
          "1339:  goto yy18;",
          "1340: yy84:",
          "1341:  yych = *++YYCURSOR;",
          "1342:  if (yych == ';') goto yy89;",
          "1343:  goto yy18;",
          "1344: yy85:",
          "1346: #line 832 \"ext/standard/var_unserializer.re\"",
          "1347:  {",
          "1348:  long elements;",
          "1349:     if (!var_hash) return 0;",
          "1351:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1352:  if (elements < 0) {",
          "1353:   return 0;",
          "1354:  }",
          "1355:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1356: }",
          "1357: #line 1358 \"ext/standard/var_unserializer.c\"",
          "1358: yy87:",
          "1359:  ++YYCURSOR;",
          "1360: #line 736 \"ext/standard/var_unserializer.re\"",
          "1362:  size_t len, maxlen;",
          "1363:  char *str;",
          "1365:  len = parse_uiv(start + 2);",
          "1366:  maxlen = max - YYCURSOR;",
          "1367:  if (maxlen < len) {",
          "1369:   return 0;",
          "1370:  }",
          "1372:  str = (char*)YYCURSOR;",
          "1374:  YYCURSOR += len;",
          "1376:  if (*(YYCURSOR) != '\"') {",
          "1381:  if (*(YYCURSOR + 1) != ';') {",
          "1383:   return 0;",
          "1386:  YYCURSOR += 2;",
          "1389:  ZVAL_STRINGL(rval, str, len);",
          "1390:  return 1;",
          "1391: }",
          "1392: #line 1393 \"ext/standard/var_unserializer.c\"",
          "1393: yy89:",
          "1394:  ++YYCURSOR;",
          "1395: #line 711 \"ext/standard/var_unserializer.re\"",
          "1396:  {",
          "1399:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1400:   ZVAL_DOUBLE(rval, ZEND_NAN);",
          "1401:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1402:   ZVAL_DOUBLE(rval, ZEND_INFINITY);",
          "1403:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1404:   ZVAL_DOUBLE(rval, -ZEND_INFINITY);",
          "1406:   ZVAL_NULL(rval);",
          "1411: #line 1412 \"ext/standard/var_unserializer.c\"",
          "1413: #line 1003 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1352: #line 1353 \"ext/standard/var_unserializer.c\"",
          "1353: yy88:",
          "1357: yy89:",
          "1362:  if (yych <= '9') goto yy89;",
          "1363:  if (yych != ';') goto yy18;",
          "1365: #line 622 \"ext/standard/var_unserializer.re\"",
          "1367:  zend_long id;",
          "1370:  if (!var_hash) return 0;",
          "1372:  id = parse_uiv(start + 2) - 1;",
          "1373:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1377:  zval_ptr_dtor(rval);",
          "1378:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1379:   ZVAL_UNDEF(rval);",
          "1380:   return 1;",
          "1382:  if (Z_ISREF_P(rval_ref)) {",
          "1383:   ZVAL_COPY(rval, rval_ref);",
          "1385:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1386:   ZVAL_COPY(rval, rval_ref);",
          "1391: #line 1392 \"ext/standard/var_unserializer.c\"",
          "1393: #line 1009 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "761:  YYCURSOR += 2;",
          "765:  return 1;",
          "766: }",
          "",
          "[Removed Lines]",
          "764:  ZVAL_STRINGL(rval, str, len);",
          "",
          "[Added Lines]",
          "764:  if (len == 0) {",
          "765:   ZVAL_EMPTY_STRING(rval);",
          "766:  } else if (len == 1) {",
          "767:   ZVAL_INTERNED_STR(rval, ZSTR_CHAR((zend_uchar)*str));",
          "768:  } else {",
          "769:   ZVAL_STRINGL(rval, str, len);",
          "770:  }",
          "",
          "---------------"
        ],
        "main/php_variables.c||main/php_variables.c": [
          "File: main/php_variables.c -> main/php_variables.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:  assert(strval != NULL);",
          "53:  php_register_variable_ex(var, &new_entry, track_vars_array);",
          "54: }",
          "",
          "[Removed Lines]",
          "52:  ZVAL_NEW_STR(&new_entry, zend_string_init(strval, str_len, 0));",
          "",
          "[Added Lines]",
          "52:  if (str_len == 0) {",
          "53:   ZVAL_EMPTY_STRING(&new_entry);",
          "54:  } else if (str_len == 1) {",
          "55:   ZVAL_INTERNED_STR(&new_entry, ZSTR_CHAR((zend_uchar)*strval));",
          "56:  } else {",
          "57:   ZVAL_NEW_STR(&new_entry, zend_string_init(strval, str_len, 0));",
          "58:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a1d4cd47a6ff20ae1619e0f8ec6de1eaa869258",
      "candidate_info": {
        "commit_hash": "6a1d4cd47a6ff20ae1619e0f8ec6de1eaa869258",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/6a1d4cd47a6ff20ae1619e0f8ec6de1eaa869258",
        "files": [
          "NEWS",
          "Zend/zend_language_scanner.c",
          "ext/standard/tests/serialize/bug74300.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fixed bug #74300",
        "before_after_code_files": [
          "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
          "ext/standard/tests/serialize/bug74300.phpt||ext/standard/tests/serialize/bug74300.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c": [
          "File: Zend/zend_language_scanner.c -> Zend/zend_language_scanner.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1160: yy4:",
          "1161:  YYDEBUG(4, *YYCURSOR);",
          "1162:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1164:  {",
          "1165:  if (YYCURSOR > YYLIMIT) {",
          "1166:   RETURN_TOKEN(END);",
          "",
          "[Removed Lines]",
          "1163: #line 1804 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1163: #line 1805 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1221: yy7:",
          "1222:  YYDEBUG(7, *YYCURSOR);",
          "1223:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1225:  {",
          "1226:  if (CG(short_tags)) {",
          "1227:   BEGIN(ST_IN_SCRIPTING);",
          "",
          "[Removed Lines]",
          "1224: #line 1795 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1224: #line 1796 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1236:  ++YYCURSOR;",
          "1237:  YYDEBUG(9, *YYCURSOR);",
          "1238:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1240:  {",
          "1241:  BEGIN(ST_IN_SCRIPTING);",
          "1242:  RETURN_TOKEN(T_OPEN_TAG_WITH_ECHO);",
          "",
          "[Removed Lines]",
          "1239: #line 1782 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1239: #line 1783 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1272: yy15:",
          "1273:  YYDEBUG(15, *YYCURSOR);",
          "1274:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1276:  {",
          "1277:  HANDLE_NEWLINE(yytext[yyleng-1]);",
          "1278:  BEGIN(ST_IN_SCRIPTING);",
          "",
          "[Removed Lines]",
          "1275: #line 1788 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1275: #line 1789 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1335: yy20:",
          "1336:   YYDEBUG(20, *YYCURSOR);",
          "1337:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1339:   {",
          "1340:  if (YYCURSOR > YYLIMIT) {",
          "1341:   RETURN_TOKEN(END);",
          "",
          "[Removed Lines]",
          "1338: #line 2217 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1338: #line 2218 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1400:   ++YYCURSOR;",
          "1401:   YYDEBUG(23, *YYCURSOR);",
          "1402:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1404:   {",
          "1405:  BEGIN(ST_IN_SCRIPTING);",
          "1406:  RETURN_TOKEN('`');",
          "",
          "[Removed Lines]",
          "1403: #line 2161 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1403: #line 2162 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1426: yy27:",
          "1427:   YYDEBUG(27, *YYCURSOR);",
          "1428:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1430:   {",
          "1431:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1432:  RETURN_TOKEN(T_VARIABLE);",
          "",
          "[Removed Lines]",
          "1429: #line 1869 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1429: #line 1870 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1437:   ++YYCURSOR;",
          "1438:   YYDEBUG(29, *YYCURSOR);",
          "1439:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1441:   {",
          "1442:  yy_push_state(ST_LOOKING_FOR_VARNAME);",
          "1443:  RETURN_TOKEN(T_DOLLAR_OPEN_CURLY_BRACES);",
          "",
          "[Removed Lines]",
          "1440: #line 1587 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1440: #line 1588 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1448:   ++YYCURSOR;",
          "1449:   YYDEBUG(31, *YYCURSOR);",
          "1450:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1452:   {",
          "1453:  Z_LVAL_P(zendlval) = (zend_long) '{';",
          "1454:  yy_push_state(ST_IN_SCRIPTING);",
          "",
          "[Removed Lines]",
          "1451: #line 2148 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1451: #line 2149 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1469:   ++YYCURSOR;",
          "1470:   YYDEBUG(35, *YYCURSOR);",
          "1471:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1473:   {",
          "1474:  yyless(yyleng - 1);",
          "1475:  yy_push_state(ST_VAR_OFFSET);",
          "",
          "[Removed Lines]",
          "1472: #line 1862 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1472: #line 1863 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1494:   ++YYCURSOR;",
          "1495:   YYDEBUG(38, *YYCURSOR);",
          "1496:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1498:   {",
          "1499:  yyless(yyleng - 3);",
          "1500:  yy_push_state(ST_LOOKING_FOR_PROPERTY);",
          "",
          "[Removed Lines]",
          "1497: #line 1853 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1497: #line 1854 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1554: yy42:",
          "1555:   YYDEBUG(42, *YYCURSOR);",
          "1556:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1558:   {",
          "1559:  if (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {",
          "1560:   YYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;",
          "",
          "[Removed Lines]",
          "1557: #line 2167 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1557: #line 2168 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1609:   ++YYCURSOR;",
          "1610:   YYDEBUG(44, *YYCURSOR);",
          "1611:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1613:   {",
          "1614:  BEGIN(ST_IN_SCRIPTING);",
          "1615:  RETURN_TOKEN('\"');",
          "",
          "[Removed Lines]",
          "1612: #line 2156 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1612: #line 2157 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1653: yy49:",
          "1654:   YYDEBUG(49, *YYCURSOR);",
          "1655:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1657:   {",
          "1658:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1659:  RETURN_TOKEN(T_VARIABLE);",
          "",
          "[Removed Lines]",
          "1656: #line 1869 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1656: #line 1870 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1664:   ++YYCURSOR;",
          "1665:   YYDEBUG(51, *YYCURSOR);",
          "1666:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1668:   {",
          "1669:  yy_push_state(ST_LOOKING_FOR_VARNAME);",
          "1670:  RETURN_TOKEN(T_DOLLAR_OPEN_CURLY_BRACES);",
          "",
          "[Removed Lines]",
          "1667: #line 1587 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1667: #line 1588 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1675:   ++YYCURSOR;",
          "1676:   YYDEBUG(53, *YYCURSOR);",
          "1677:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1679:   {",
          "1680:  Z_LVAL_P(zendlval) = (zend_long) '{';",
          "1681:  yy_push_state(ST_IN_SCRIPTING);",
          "",
          "[Removed Lines]",
          "1678: #line 2148 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1678: #line 2149 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1696:   ++YYCURSOR;",
          "1697:   YYDEBUG(57, *YYCURSOR);",
          "1698:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1700:   {",
          "1701:  yyless(yyleng - 1);",
          "1702:  yy_push_state(ST_VAR_OFFSET);",
          "",
          "[Removed Lines]",
          "1699: #line 1862 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1699: #line 1863 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1721:   ++YYCURSOR;",
          "1722:   YYDEBUG(60, *YYCURSOR);",
          "1723:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1725:   {",
          "1726:  yyless(yyleng - 3);",
          "1727:  yy_push_state(ST_LOOKING_FOR_PROPERTY);",
          "",
          "[Removed Lines]",
          "1724: #line 1853 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1724: #line 1854 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1739:  ++YYCURSOR;",
          "1740:  YYDEBUG(64, *YYCURSOR);",
          "1741:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1743:  {",
          "1744:  zend_heredoc_label *heredoc_label = zend_ptr_stack_pop(&SCNG(heredoc_label_stack));",
          "",
          "[Removed Lines]",
          "1742: #line 2134 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1742: #line 2135 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1800: yy68:",
          "1801:   YYDEBUG(68, *YYCURSOR);",
          "1802:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1804:   {",
          "1805:  int newline = 0;",
          "",
          "[Removed Lines]",
          "1803: #line 2259 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1803: #line 2260 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1912: yy73:",
          "1913:   YYDEBUG(73, *YYCURSOR);",
          "1914:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1916:   {",
          "1917:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1918:  RETURN_TOKEN(T_VARIABLE);",
          "",
          "[Removed Lines]",
          "1915: #line 1869 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1915: #line 1870 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1923:   ++YYCURSOR;",
          "1924:   YYDEBUG(75, *YYCURSOR);",
          "1925:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1927:   {",
          "1928:  yy_push_state(ST_LOOKING_FOR_VARNAME);",
          "1929:  RETURN_TOKEN(T_DOLLAR_OPEN_CURLY_BRACES);",
          "",
          "[Removed Lines]",
          "1926: #line 1587 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1926: #line 1588 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1934:   ++YYCURSOR;",
          "1935:   YYDEBUG(77, *YYCURSOR);",
          "1936:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1938:   {",
          "1939:  Z_LVAL_P(zendlval) = (zend_long) '{';",
          "1940:  yy_push_state(ST_IN_SCRIPTING);",
          "",
          "[Removed Lines]",
          "1937: #line 2148 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1937: #line 2149 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1955:   ++YYCURSOR;",
          "1956:   YYDEBUG(81, *YYCURSOR);",
          "1957:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1959:   {",
          "1960:  yyless(yyleng - 1);",
          "1961:  yy_push_state(ST_VAR_OFFSET);",
          "",
          "[Removed Lines]",
          "1958: #line 1862 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1958: #line 1863 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1980:   ++YYCURSOR;",
          "1981:   YYDEBUG(84, *YYCURSOR);",
          "1982:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1984:   {",
          "1985:  yyless(yyleng - 3);",
          "1986:  yy_push_state(ST_LOOKING_FOR_PROPERTY);",
          "",
          "[Removed Lines]",
          "1983: #line 1853 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1983: #line 1854 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2156:   ++YYCURSOR;",
          "2157:   YYDEBUG(88, *YYCURSOR);",
          "2158:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2160:   {",
          "2161:  if (YYCURSOR > YYLIMIT) {",
          "2162:   RETURN_TOKEN(END);",
          "",
          "[Removed Lines]",
          "2159: #line 2390 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2159: #line 2391 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2177:   }",
          "2178:   YYDEBUG(91, *YYCURSOR);",
          "2179:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2181:   {",
          "2182:  HANDLE_NEWLINES(yytext, yyleng);",
          "2183:  RETURN_TOKEN(T_WHITESPACE);",
          "",
          "[Removed Lines]",
          "2180: #line 1291 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2180: #line 1292 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2190: yy93:",
          "2191:   YYDEBUG(93, *YYCURSOR);",
          "2192:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2194:   {",
          "2195:  RETURN_TOKEN(yytext[0]);",
          "2196: }",
          "",
          "[Removed Lines]",
          "2193: #line 1576 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2193: #line 1577 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2200:   ++YYCURSOR;",
          "2201:   YYDEBUG(95, *YYCURSOR);",
          "2202:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2204:   {",
          "2205:  int bprefix = (yytext[0] != '\"') ? 1 : 0;",
          "",
          "[Removed Lines]",
          "2203: #line 2038 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2203: #line 2039 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2247:   ++YYCURSOR;",
          "2248:   YYDEBUG(97, *YYCURSOR);",
          "2249:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2251:   {",
          "2252:  while (YYCURSOR < YYLIMIT) {",
          "2253:   switch (*YYCURSOR++) {",
          "",
          "[Removed Lines]",
          "2250: #line 1898 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2250: #line 1899 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2307:   ++YYCURSOR;",
          "2308:   YYDEBUG(102, *YYCURSOR);",
          "2309:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2311:   {",
          "2312:  register char *s, *t;",
          "2313:  char *end;",
          "",
          "[Removed Lines]",
          "2310: #line 1969 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2310: #line 1970 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2505: yy111:",
          "2506:   YYDEBUG(111, *YYCURSOR);",
          "2507:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2509:   {",
          "2510:  char *end;",
          "",
          "[Removed Lines]",
          "2508: #line 1646 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2508: #line 1647 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2631: yy120:",
          "2632:   YYDEBUG(120, *YYCURSOR);",
          "2633:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2635:   {",
          "2636:  zend_copy_value(zendlval, yytext, yyleng);",
          "2637:  RETURN_TOKEN(T_STRING);",
          "",
          "[Removed Lines]",
          "2634: #line 1892 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2634: #line 1893 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2921:   ++YYCURSOR;",
          "2922:   YYDEBUG(143, *YYCURSOR);",
          "2923:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2925:   {",
          "2926:  RETURN_TOKEN(T_NS_SEPARATOR);",
          "2927: }",
          "",
          "[Removed Lines]",
          "2924: #line 1316 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2924: #line 1317 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2941:   ++YYCURSOR;",
          "2942:   YYDEBUG(147, *YYCURSOR);",
          "2943:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2945:   {",
          "2946:  BEGIN(ST_BACKQUOTE);",
          "2947:  RETURN_TOKEN('`');",
          "",
          "[Removed Lines]",
          "2944: #line 2128 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2944: #line 2129 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2952:   ++YYCURSOR;",
          "2953:   YYDEBUG(149, *YYCURSOR);",
          "2954:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2956:   {",
          "2957:  yy_push_state(ST_IN_SCRIPTING);",
          "2958:  RETURN_TOKEN('{');",
          "",
          "[Removed Lines]",
          "2955: #line 1581 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2955: #line 1582 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2969:   ++YYCURSOR;",
          "2970:   YYDEBUG(152, *YYCURSOR);",
          "2971:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2973:   {",
          "2974:  RESET_DOC_COMMENT();",
          "2975:  if (!zend_stack_is_empty(&SCNG(state_stack))) {",
          "",
          "[Removed Lines]",
          "2972: #line 1593 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2972: #line 1594 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2985: yy154:",
          "2986:   YYDEBUG(154, *YYCURSOR);",
          "2987:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2989:   {",
          "2990:  RETURN_TOKEN(T_IS_NOT_EQUAL);",
          "2991: }",
          "",
          "[Removed Lines]",
          "2988: #line 1480 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2988: #line 1481 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "3014: yy157:",
          "3015:   YYDEBUG(157, *YYCURSOR);",
          "3016:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3018:   {",
          "3019:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "3020:  RETURN_TOKEN(T_VARIABLE);",
          "",
          "[Removed Lines]",
          "3017: #line 1869 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3017: #line 1870 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "3025:   ++YYCURSOR;",
          "3026:   YYDEBUG(159, *YYCURSOR);",
          "3027:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3029:   {",
          "3030:  RETURN_TOKEN(T_MOD_EQUAL);",
          "3031: }",
          "",
          "[Removed Lines]",
          "3028: #line 1524 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3028: #line 1525 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "3035:   ++YYCURSOR;",
          "3036:   YYDEBUG(161, *YYCURSOR);",
          "3037:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3039:   {",
          "3040:  RETURN_TOKEN(T_BOOLEAN_AND);",
          "3041: }",
          "",
          "[Removed Lines]",
          "3038: #line 1552 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3038: #line 1553 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "3045:   ++YYCURSOR;",
          "3046:   YYDEBUG(163, *YYCURSOR);",
          "3047:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3049:   {",
          "3050:  RETURN_TOKEN(T_AND_EQUAL);",
          "3051: }",
          "",
          "[Removed Lines]",
          "3048: #line 1536 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3048: #line 1537 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "3179:   if ((yych = *YYCURSOR) == '=') goto yy289;",
          "3180:   YYDEBUG(177, *YYCURSOR);",
          "3181:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3183:   {",
          "3184:  RETURN_TOKEN(T_POW);",
          "3185: }",
          "",
          "[Removed Lines]",
          "3182: #line 1508 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3182: #line 1509 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "3189:   ++YYCURSOR;",
          "3190:   YYDEBUG(179, *YYCURSOR);",
          "3191:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3193:   {",
          "3194:  RETURN_TOKEN(T_MUL_EQUAL);",
          "3195: }",
          "",
          "[Removed Lines]",
          "3192: #line 1504 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3192: #line 1505 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "3199:   ++YYCURSOR;",
          "3200:   YYDEBUG(181, *YYCURSOR);",
          "3201:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3203:   {",
          "3204:  RETURN_TOKEN(T_INC);",
          "3205: }",
          "",
          "[Removed Lines]",
          "3202: #line 1460 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3202: #line 1461 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "3209:   ++YYCURSOR;",
          "3210:   YYDEBUG(183, *YYCURSOR);",
          "3211:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3213:   {",
          "3214:  RETURN_TOKEN(T_PLUS_EQUAL);",
          "3215: }",
          "",
          "[Removed Lines]",
          "3212: #line 1496 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3212: #line 1497 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "3219:   ++YYCURSOR;",
          "3220:   YYDEBUG(185, *YYCURSOR);",
          "3221:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3223:   {",
          "3224:  RETURN_TOKEN(T_DEC);",
          "3225: }",
          "",
          "[Removed Lines]",
          "3222: #line 1464 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3222: #line 1465 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3229:   ++YYCURSOR;",
          "3230:   YYDEBUG(187, *YYCURSOR);",
          "3231:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3233:   {",
          "3234:  RETURN_TOKEN(T_MINUS_EQUAL);",
          "3235: }",
          "",
          "[Removed Lines]",
          "3232: #line 1500 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3232: #line 1501 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3239:   ++YYCURSOR;",
          "3240:   YYDEBUG(189, *YYCURSOR);",
          "3241:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3243:   {",
          "3244:  yy_push_state(ST_LOOKING_FOR_PROPERTY);",
          "3245:  RETURN_TOKEN(T_OBJECT_OPERATOR);",
          "",
          "[Removed Lines]",
          "3242: #line 1286 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3242: #line 1287 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3267: yy193:",
          "3268:   YYDEBUG(193, *YYCURSOR);",
          "3269:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3271:   {",
          "3272:  const char *end;",
          "",
          "[Removed Lines]",
          "3270: #line 1740 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3270: #line 1741 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3282:   ++YYCURSOR;",
          "3283:   YYDEBUG(195, *YYCURSOR);",
          "3284:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3286:   {",
          "3287:  RETURN_TOKEN(T_CONCAT_EQUAL);",
          "3288: }",
          "",
          "[Removed Lines]",
          "3285: #line 1520 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3285: #line 1521 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3295: yy197:",
          "3296:   YYDEBUG(197, *YYCURSOR);",
          "3297:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3299:   {",
          "3300:  int doc_com;",
          "",
          "[Removed Lines]",
          "3298: #line 1927 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3298: #line 1928 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3334:   ++YYCURSOR;",
          "3335:   YYDEBUG(199, *YYCURSOR);",
          "3336:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3338:   {",
          "3339:  RETURN_TOKEN(T_DIV_EQUAL);",
          "3340: }",
          "",
          "[Removed Lines]",
          "3337: #line 1516 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3337: #line 1517 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3370:   ++YYCURSOR;",
          "3371:   YYDEBUG(204, *YYCURSOR);",
          "3372:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3374:   {",
          "3375:  RETURN_TOKEN(T_PAAMAYIM_NEKUDOTAYIM);",
          "3376: }",
          "",
          "[Removed Lines]",
          "3373: #line 1312 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3373: #line 1313 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3385: yy206:",
          "3386:   YYDEBUG(206, *YYCURSOR);",
          "3387:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3389:   {",
          "3390:  RETURN_TOKEN(T_SL);",
          "3391: }",
          "",
          "[Removed Lines]",
          "3388: #line 1568 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3388: #line 1569 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3396:   if ((yych = *YYCURSOR) == '>') goto yy307;",
          "3397:   YYDEBUG(208, *YYCURSOR);",
          "3398:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3400:   {",
          "3401:  RETURN_TOKEN(T_IS_SMALLER_OR_EQUAL);",
          "3402: }",
          "",
          "[Removed Lines]",
          "3399: #line 1488 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3399: #line 1489 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3411:   if ((yych = *YYCURSOR) == '=') goto yy309;",
          "3412:   YYDEBUG(211, *YYCURSOR);",
          "3413:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3415:   {",
          "3416:  RETURN_TOKEN(T_IS_EQUAL);",
          "3417: }",
          "",
          "[Removed Lines]",
          "3414: #line 1476 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3414: #line 1477 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3421:   ++YYCURSOR;",
          "3422:   YYDEBUG(213, *YYCURSOR);",
          "3423:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3425:   {",
          "3426:  RETURN_TOKEN(T_DOUBLE_ARROW);",
          "3427: }",
          "",
          "[Removed Lines]",
          "3424: #line 1444 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3424: #line 1445 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3431:   ++YYCURSOR;",
          "3432:   YYDEBUG(215, *YYCURSOR);",
          "3433:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3435:   {",
          "3436:  RETURN_TOKEN(T_IS_GREATER_OR_EQUAL);",
          "3437: }",
          "",
          "[Removed Lines]",
          "3434: #line 1492 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3434: #line 1493 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3442:   if ((yych = *YYCURSOR) == '=') goto yy311;",
          "3443:   YYDEBUG(217, *YYCURSOR);",
          "3444:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3446:   {",
          "3447:  RETURN_TOKEN(T_SR);",
          "3448: }",
          "",
          "[Removed Lines]",
          "3445: #line 1572 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3445: #line 1573 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3455: yy219:",
          "3456:   YYDEBUG(219, *YYCURSOR);",
          "3457:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3459:   {",
          "3460:  BEGIN(INITIAL);",
          "3461:  if (yytext[yyleng-1] != '>') {",
          "",
          "[Removed Lines]",
          "3458: #line 1960 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3458: #line 1961 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3469:   ++YYCURSOR;",
          "3470:   YYDEBUG(221, *YYCURSOR);",
          "3471:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3473:   {",
          "3474:  RETURN_TOKEN(T_COALESCE);",
          "3475: }",
          "",
          "[Removed Lines]",
          "3472: #line 1324 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3472: #line 1325 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3500:   }",
          "3501:   YYDEBUG(226, *YYCURSOR);",
          "3502:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3504:   {",
          "3505:  RETURN_TOKEN(T_AS);",
          "3506: }",
          "",
          "[Removed Lines]",
          "3503: #line 1226 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3503: #line 1227 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3590:   }",
          "3591:   YYDEBUG(235, *YYCURSOR);",
          "3592:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3594:   {",
          "3595:  RETURN_TOKEN(T_DO);",
          "3596: }",
          "",
          "[Removed Lines]",
          "3593: #line 1194 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3593: #line 1195 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3679:   }",
          "3680:   YYDEBUG(248, *YYCURSOR);",
          "3681:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3683:   {",
          "3684:  RETURN_TOKEN(T_IF);",
          "3685: }",
          "",
          "[Removed Lines]",
          "3682: #line 1170 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3682: #line 1171 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3744:   }",
          "3745:   YYDEBUG(256, *YYCURSOR);",
          "3746:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3748:   {",
          "3749:  RETURN_TOKEN(T_LOGICAL_OR);",
          "3750: }",
          "",
          "[Removed Lines]",
          "3747: #line 1556 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3747: #line 1557 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3862:   ++YYCURSOR;",
          "3863:   YYDEBUG(271, *YYCURSOR);",
          "3864:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3866:   {",
          "3867:  RETURN_TOKEN(T_XOR_EQUAL);",
          "3868: }",
          "",
          "[Removed Lines]",
          "3865: #line 1544 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3865: #line 1545 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "3894:   ++YYCURSOR;",
          "3895:   YYDEBUG(274, *YYCURSOR);",
          "3896:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3898:   {",
          "3899:  RETURN_TOKEN(T_OR_EQUAL);",
          "3900: }",
          "",
          "[Removed Lines]",
          "3897: #line 1540 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3897: #line 1541 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "3904:   ++YYCURSOR;",
          "3905:   YYDEBUG(276, *YYCURSOR);",
          "3906:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3908:   {",
          "3909:  RETURN_TOKEN(T_BOOLEAN_OR);",
          "3910: }",
          "",
          "[Removed Lines]",
          "3907: #line 1548 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3907: #line 1549 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "3914:   ++YYCURSOR;",
          "3915:   YYDEBUG(278, *YYCURSOR);",
          "3916:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3918:   {",
          "3919:  RETURN_TOKEN(T_IS_NOT_IDENTICAL);",
          "3920: }",
          "",
          "[Removed Lines]",
          "3917: #line 1472 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3917: #line 1473 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "3984:   ++YYCURSOR;",
          "3985:   YYDEBUG(290, *YYCURSOR);",
          "3986:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3988:   {",
          "3989:  RETURN_TOKEN(T_POW_EQUAL);",
          "3990: }",
          "",
          "[Removed Lines]",
          "3987: #line 1512 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3987: #line 1513 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "3994:   ++YYCURSOR;",
          "3995:   YYDEBUG(292, *YYCURSOR);",
          "3996:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3998:   {",
          "3999:  RETURN_TOKEN(T_ELLIPSIS);",
          "4000: }",
          "",
          "[Removed Lines]",
          "3997: #line 1320 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3997: #line 1321 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "4022:   }",
          "4023:   YYDEBUG(296, *YYCURSOR);",
          "4024:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4026:   {",
          "4028:  int len = yyleng - 2;",
          "",
          "[Removed Lines]",
          "4025: #line 1618 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4025: #line 1619 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "4076:   }",
          "4077:   YYDEBUG(302, *YYCURSOR);",
          "4078:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4080:   {",
          "4082:  int len = yyleng - 2;",
          "",
          "[Removed Lines]",
          "4079: #line 1691 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4079: #line 1692 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "4139:   ++YYCURSOR;",
          "4140:   YYDEBUG(306, *YYCURSOR);",
          "4141:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4143:   {",
          "4144:  RETURN_TOKEN(T_SL_EQUAL);",
          "4145: }",
          "",
          "[Removed Lines]",
          "4142: #line 1528 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4142: #line 1529 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "4149:   ++YYCURSOR;",
          "4150:   YYDEBUG(308, *YYCURSOR);",
          "4151:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4153:   {",
          "4154:  RETURN_TOKEN(T_SPACESHIP);",
          "4155: }",
          "",
          "[Removed Lines]",
          "4152: #line 1484 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4152: #line 1485 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "4159:   ++YYCURSOR;",
          "4160:   YYDEBUG(310, *YYCURSOR);",
          "4161:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4163:   {",
          "4164:  RETURN_TOKEN(T_IS_IDENTICAL);",
          "4165: }",
          "",
          "[Removed Lines]",
          "4162: #line 1468 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4162: #line 1469 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "4169:   ++YYCURSOR;",
          "4170:   YYDEBUG(312, *YYCURSOR);",
          "4171:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4173:   {",
          "4174:  RETURN_TOKEN(T_SR_EQUAL);",
          "4175: }",
          "",
          "[Removed Lines]",
          "4172: #line 1532 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4172: #line 1533 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "4197:   }",
          "4198:   YYDEBUG(317, *YYCURSOR);",
          "4199:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4201:   {",
          "4202:  RETURN_TOKEN(T_LOGICAL_AND);",
          "4203: }",
          "",
          "[Removed Lines]",
          "4200: #line 1560 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4200: #line 1561 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "4368: yy340:",
          "4369:   YYDEBUG(340, *YYCURSOR);",
          "4370:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4372:   {",
          "4373:  RETURN_TOKEN(T_FOR);",
          "4374: }",
          "",
          "[Removed Lines]",
          "4371: #line 1198 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4371: #line 1199 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "4441:   }",
          "4442:   YYDEBUG(352, *YYCURSOR);",
          "4443:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4445:   {",
          "4446:  RETURN_TOKEN(T_NEW);",
          "4447: }",
          "",
          "[Removed Lines]",
          "4444: #line 1328 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4444: #line 1329 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "4518:   }",
          "4519:   YYDEBUG(363, *YYCURSOR);",
          "4520:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4522:   {",
          "4523:  RETURN_TOKEN(T_TRY);",
          "4524: }",
          "",
          "[Removed Lines]",
          "4521: #line 1154 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4521: #line 1155 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "4537:   }",
          "4538:   YYDEBUG(366, *YYCURSOR);",
          "4539:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4541:   {",
          "4542:  RETURN_TOKEN(T_USE);",
          "4543: }",
          "",
          "[Removed Lines]",
          "4540: #line 1392 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4540: #line 1393 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "4550:   }",
          "4551:   YYDEBUG(368, *YYCURSOR);",
          "4552:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4554:   {",
          "4555:  RETURN_TOKEN(T_VAR);",
          "4556: }",
          "",
          "[Removed Lines]",
          "4553: #line 1336 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4553: #line 1337 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "4569:   }",
          "4570:   YYDEBUG(371, *YYCURSOR);",
          "4571:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4573:   {",
          "4574:  RETURN_TOKEN(T_LOGICAL_XOR);",
          "4575: }",
          "",
          "[Removed Lines]",
          "4572: #line 1564 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4572: #line 1565 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "4787:   }",
          "4788:   YYDEBUG(402, *YYCURSOR);",
          "4789:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4791:   {",
          "4792:  RETURN_TOKEN(T_CASE);",
          "4793: }",
          "",
          "[Removed Lines]",
          "4790: #line 1238 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4790: #line 1239 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "4842:   }",
          "4843:   YYDEBUG(411, *YYCURSOR);",
          "4844:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4846:   {",
          "4847:  RETURN_TOKEN(T_ECHO);",
          "4848: }",
          "",
          "[Removed Lines]",
          "4845: #line 1258 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4845: #line 1259 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "4870: yy413:",
          "4871:   YYDEBUG(413, *YYCURSOR);",
          "4872:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4874:   {",
          "4875:  RETURN_TOKEN(T_ELSE);",
          "4876: }",
          "",
          "[Removed Lines]",
          "4873: #line 1182 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4873: #line 1183 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "4919:   }",
          "4920:   YYDEBUG(421, *YYCURSOR);",
          "4921:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4923:   {",
          "4924:  RETURN_TOKEN(T_EVAL);",
          "4925: }",
          "",
          "[Removed Lines]",
          "4922: #line 1368 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4922: #line 1369 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "4975:   }",
          "4976:   YYDEBUG(430, *YYCURSOR);",
          "4977:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4979:   {",
          "4980:  RETURN_TOKEN(T_GOTO);",
          "4981: }",
          "",
          "[Removed Lines]",
          "4978: #line 1254 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4978: #line 1255 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "5028:   }",
          "5029:   YYDEBUG(437, *YYCURSOR);",
          "5030:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5032:   {",
          "5033:  RETURN_TOKEN(T_LIST);",
          "5034: }",
          "",
          "[Removed Lines]",
          "5031: #line 1448 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5031: #line 1449 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "5219:   ++YYCURSOR;",
          "5220:   YYDEBUG(469, *YYCURSOR);",
          "5221:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5223:   {",
          "5224:  RETURN_TOKEN(T_INT_CAST);",
          "5225: }",
          "",
          "[Removed Lines]",
          "5222: #line 1340 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5222: #line 1341 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "5320: yy481:",
          "5321:   YYDEBUG(481, *YYCURSOR);",
          "5322:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5324:   {",
          "5325:  char *s;",
          "5326:  int bprefix = (yytext[0] != '<') ? 1 : 0;",
          "",
          "[Removed Lines]",
          "5323: #line 2080 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5323: #line 2081 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "5387:   }",
          "5388:   YYDEBUG(485, *YYCURSOR);",
          "5389:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5391:   {",
          "5392:  RETURN_TOKEN(T_ARRAY);",
          "5393: }",
          "",
          "[Removed Lines]",
          "5390: #line 1452 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5390: #line 1453 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "5400:   }",
          "5401:   YYDEBUG(487, *YYCURSOR);",
          "5402:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5404:   {",
          "5405:  RETURN_TOKEN(T_BREAK);",
          "5406: }",
          "",
          "[Removed Lines]",
          "5403: #line 1246 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5403: #line 1247 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "5419:   }",
          "5420:   YYDEBUG(490, *YYCURSOR);",
          "5421:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5423:   {",
          "5424:  RETURN_TOKEN(T_CATCH);",
          "5425: }",
          "",
          "[Removed Lines]",
          "5422: #line 1158 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5422: #line 1159 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "5432:   }",
          "5433:   YYDEBUG(492, *YYCURSOR);",
          "5434:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5436:   {",
          "5437:  RETURN_TOKEN(T_CLASS);",
          "5438: }",
          "",
          "[Removed Lines]",
          "5435: #line 1266 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5435: #line 1267 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "5445:   }",
          "5446:   YYDEBUG(494, *YYCURSOR);",
          "5447:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5449:   {",
          "5450:  RETURN_TOKEN(T_CLONE);",
          "5451: }",
          "",
          "[Removed Lines]",
          "5448: #line 1332 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5448: #line 1333 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "5495:   }",
          "5496:   YYDEBUG(502, *YYCURSOR);",
          "5497:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5499:   {",
          "5500:  RETURN_TOKEN(T_EMPTY);",
          "5501: }",
          "",
          "[Removed Lines]",
          "5498: #line 1408 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5498: #line 1409 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "5520:   }",
          "5521:   YYDEBUG(506, *YYCURSOR);",
          "5522:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5524:   {",
          "5525:  RETURN_TOKEN(T_ENDIF);",
          "5526: }",
          "",
          "[Removed Lines]",
          "5523: #line 1178 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5523: #line 1179 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "5566: yy511:",
          "5567:   YYDEBUG(511, *YYCURSOR);",
          "5568:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5570:   {",
          "5571:  RETURN_TOKEN(T_FINAL);",
          "5572: }",
          "",
          "[Removed Lines]",
          "5569: #line 1424 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5569: #line 1425 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "5627:   }",
          "5628:   YYDEBUG(521, *YYCURSOR);",
          "5629:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5631:   {",
          "5632:  RETURN_TOKEN(T_ISSET);",
          "5633: }",
          "",
          "[Removed Lines]",
          "5630: #line 1404 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5630: #line 1405 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "5646:   }",
          "5647:   YYDEBUG(524, *YYCURSOR);",
          "5648:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5650:   {",
          "5651:  RETURN_TOKEN(T_PRINT);",
          "5652: }",
          "",
          "[Removed Lines]",
          "5649: #line 1262 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5649: #line 1263 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "5701:   }",
          "5702:   YYDEBUG(533, *YYCURSOR);",
          "5703:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5705:   {",
          "5706:  RETURN_TOKEN(T_THROW);",
          "5707: }",
          "",
          "[Removed Lines]",
          "5704: #line 1166 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5704: #line 1167 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "5714:   }",
          "5715:   YYDEBUG(535, *YYCURSOR);",
          "5716:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5718:   {",
          "5719:  RETURN_TOKEN(T_TRAIT);",
          "5720: }",
          "",
          "[Removed Lines]",
          "5717: #line 1274 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5717: #line 1275 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "5727:   }",
          "5728:   YYDEBUG(537, *YYCURSOR);",
          "5729:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5731:   {",
          "5732:  RETURN_TOKEN(T_UNSET);",
          "5733: }",
          "",
          "[Removed Lines]",
          "5730: #line 1440 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5730: #line 1441 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "5740:   }",
          "5741:   YYDEBUG(539, *YYCURSOR);",
          "5742:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5744:   {",
          "5745:  RETURN_TOKEN(T_WHILE);",
          "5746: }",
          "",
          "[Removed Lines]",
          "5743: #line 1186 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5743: #line 1187 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "5762: yy541:",
          "5763:   YYDEBUG(541, *YYCURSOR);",
          "5764:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5766:   {",
          "5767:  RETURN_TOKEN(T_YIELD);",
          "5768: }",
          "",
          "[Removed Lines]",
          "5765: #line 1150 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5765: #line 1151 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "5858:   ++YYCURSOR;",
          "5859:   YYDEBUG(557, *YYCURSOR);",
          "5860:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5862:   {",
          "5863:  RETURN_TOKEN(T_BOOL_CAST);",
          "5864: }",
          "",
          "[Removed Lines]",
          "5861: #line 1360 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5861: #line 1361 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "5892:   ++YYCURSOR;",
          "5893:   YYDEBUG(563, *YYCURSOR);",
          "5894:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5896:   {",
          "5897:  RETURN_TOKEN(T_DOUBLE_CAST);",
          "5898: }",
          "",
          "[Removed Lines]",
          "5895: #line 1344 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5895: #line 1345 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "5961:   }",
          "5962:   YYDEBUG(574, *YYCURSOR);",
          "5963:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5965:   {",
          "5966:  RETURN_TOKEN(T_ELSEIF);",
          "5967: }",
          "",
          "[Removed Lines]",
          "5964: #line 1174 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5964: #line 1175 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "5995: yy577:",
          "5996:   YYDEBUG(577, *YYCURSOR);",
          "5997:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5999:   {",
          "6000:  RETURN_TOKEN(T_ENDFOR);",
          "6001: }",
          "",
          "[Removed Lines]",
          "5998: #line 1202 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5998: #line 1203 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "6044:   }",
          "6045:   YYDEBUG(585, *YYCURSOR);",
          "6046:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6048:   {",
          "6049:  RETURN_TOKEN(T_GLOBAL);",
          "6050: }",
          "",
          "[Removed Lines]",
          "6047: #line 1400 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6047: #line 1401 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "6105:   }",
          "6106:   YYDEBUG(595, *YYCURSOR);",
          "6107:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6109:   {",
          "6110:  RETURN_TOKEN(T_PUBLIC);",
          "6111: }",
          "",
          "[Removed Lines]",
          "6108: #line 1436 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6108: #line 1437 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "6137:   }",
          "6138:   YYDEBUG(600, *YYCURSOR);",
          "6139:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6141:   {",
          "6142:  RETURN_TOKEN(T_STATIC);",
          "6143: }",
          "",
          "[Removed Lines]",
          "6140: #line 1416 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6140: #line 1417 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 116 ---",
          "[Context before]",
          "6150:   }",
          "6151:   YYDEBUG(602, *YYCURSOR);",
          "6152:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6154:   {",
          "6155:  RETURN_TOKEN(T_SWITCH);",
          "6156: }",
          "",
          "[Removed Lines]",
          "6153: #line 1230 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6153: #line 1231 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 117 ---",
          "[Context before]",
          "6158: yy603:",
          "6159:   YYDEBUG(603, *YYCURSOR);",
          "6160:   ++YYCURSOR;",
          "6162:   yych = *YYCURSOR;",
          "6163:   YYDEBUG(604, *YYCURSOR);",
          "6164:   if (yych <= 0x1F) {",
          "",
          "[Removed Lines]",
          "6161:   YYFILL(4);",
          "",
          "[Added Lines]",
          "6161:   YYFILL(5);",
          "",
          "---------------",
          "--- Hunk 118 ---",
          "[Context before]",
          "6234:   ++YYCURSOR;",
          "6235:   YYDEBUG(615, *YYCURSOR);",
          "6236:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6238:   {",
          "6239:  RETURN_TOKEN(T_ARRAY_CAST);",
          "6240: }",
          "",
          "[Removed Lines]",
          "6237: #line 1352 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6237: #line 1353 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 119 ---",
          "[Context before]",
          "6284:   ++YYCURSOR;",
          "6285:   YYDEBUG(623, *YYCURSOR);",
          "6286:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6288:   {",
          "6289:  RETURN_TOKEN(T_UNSET_CAST);",
          "6290: }",
          "",
          "[Removed Lines]",
          "6287: #line 1364 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6287: #line 1365 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 120 ---",
          "[Context before]",
          "6315:   }",
          "6316:   YYDEBUG(628, *YYCURSOR);",
          "6317:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6319:   {",
          "6320:  RETURN_TOKEN(T_DECLARE);",
          "6321: }",
          "",
          "[Removed Lines]",
          "6318: #line 1214 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6318: #line 1215 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 121 ---",
          "[Context before]",
          "6328:   }",
          "6329:   YYDEBUG(630, *YYCURSOR);",
          "6330:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6332:   {",
          "6333:  RETURN_TOKEN(T_DEFAULT);",
          "6334: }",
          "",
          "[Removed Lines]",
          "6331: #line 1242 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6331: #line 1243 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 122 ---",
          "[Context before]",
          "6365:   }",
          "6366:   YYDEBUG(636, *YYCURSOR);",
          "6367:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6369:   {",
          "6370:  RETURN_TOKEN(T_EXTENDS);",
          "6371: }",
          "",
          "[Removed Lines]",
          "6368: #line 1278 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6368: #line 1279 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 123 ---",
          "[Context before]",
          "6378:   }",
          "6379:   YYDEBUG(638, *YYCURSOR);",
          "6380:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6382:   {",
          "6383:  RETURN_TOKEN(T_FINALLY);",
          "6384: }",
          "",
          "[Removed Lines]",
          "6381: #line 1162 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6381: #line 1163 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 124 ---",
          "[Context before]",
          "6391:   }",
          "6392:   YYDEBUG(640, *YYCURSOR);",
          "6393:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6395:   {",
          "6396:  RETURN_TOKEN(T_FOREACH);",
          "6397: }",
          "",
          "[Removed Lines]",
          "6394: #line 1206 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6394: #line 1207 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 125 ---",
          "[Context before]",
          "6429: yy644:",
          "6430:   YYDEBUG(644, *YYCURSOR);",
          "6431:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6433:   {",
          "6434:  RETURN_TOKEN(T_INCLUDE);",
          "6435: }",
          "",
          "[Removed Lines]",
          "6432: #line 1372 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6432: #line 1373 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 126 ---",
          "[Context before]",
          "6466:   }",
          "6467:   YYDEBUG(650, *YYCURSOR);",
          "6468:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6470:   {",
          "6471:  RETURN_TOKEN(T_PRIVATE);",
          "6472: }",
          "",
          "[Removed Lines]",
          "6469: #line 1428 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6469: #line 1429 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 127 ---",
          "[Context before]",
          "6498: yy653:",
          "6499:   YYDEBUG(653, *YYCURSOR);",
          "6500:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6502:   {",
          "6503:  RETURN_TOKEN(T_REQUIRE);",
          "6504: }",
          "",
          "[Removed Lines]",
          "6501: #line 1380 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6501: #line 1381 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 128 ---",
          "[Context before]",
          "6522:   }",
          "6523:   YYDEBUG(657, *YYCURSOR);",
          "6524:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6526:   {",
          "6527:  RETURN_TOKEN(T_DIR);",
          "6528: }",
          "",
          "[Removed Lines]",
          "6525: #line 1773 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6525: #line 1774 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 129 ---",
          "[Context before]",
          "6571:   ++YYCURSOR;",
          "6572:   YYDEBUG(666, *YYCURSOR);",
          "6573:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6575:   {",
          "6576:  RETURN_TOKEN(T_STRING_CAST);",
          "6577: }",
          "",
          "[Removed Lines]",
          "6574: #line 1348 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6574: #line 1349 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 130 ---",
          "[Context before]",
          "6581:   ++YYCURSOR;",
          "6582:   YYDEBUG(668, *YYCURSOR);",
          "6583:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6585:   {",
          "6586:  RETURN_TOKEN(T_OBJECT_CAST);",
          "6587: }",
          "",
          "[Removed Lines]",
          "6584: #line 1356 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6584: #line 1357 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 131 ---",
          "[Context before]",
          "6594:   }",
          "6595:   YYDEBUG(670, *YYCURSOR);",
          "6596:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6598:   {",
          "6599:  RETURN_TOKEN(T_ABSTRACT);",
          "6600: }",
          "",
          "[Removed Lines]",
          "6597: #line 1420 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6597: #line 1421 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 132 ---",
          "[Context before]",
          "6607:   }",
          "6608:   YYDEBUG(672, *YYCURSOR);",
          "6609:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6611:   {",
          "6612:  RETURN_TOKEN(T_CALLABLE);",
          "6613: }",
          "",
          "[Removed Lines]",
          "6610: #line 1456 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6610: #line 1457 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 133 ---",
          "[Context before]",
          "6620:   }",
          "6621:   YYDEBUG(674, *YYCURSOR);",
          "6622:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6624:   {",
          "6625:  RETURN_TOKEN(T_CONTINUE);",
          "6626: }",
          "",
          "[Removed Lines]",
          "6623: #line 1250 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6623: #line 1251 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 134 ---",
          "[Context before]",
          "6651:   }",
          "6652:   YYDEBUG(679, *YYCURSOR);",
          "6653:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6655:   {",
          "6656:  RETURN_TOKEN(T_ENDWHILE);",
          "6657: }",
          "",
          "[Removed Lines]",
          "6654: #line 1190 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6654: #line 1191 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 135 ---",
          "[Context before]",
          "6736:   }",
          "6737:   YYDEBUG(693, *YYCURSOR);",
          "6738:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6740:   {",
          "6741:  RETURN_TOKEN(T_FILE);",
          "6742: }",
          "",
          "[Removed Lines]",
          "6739: #line 1769 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6739: #line 1770 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 136 ---",
          "[Context before]",
          "6761:   }",
          "6762:   YYDEBUG(697, *YYCURSOR);",
          "6763:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6765:   {",
          "6766:  RETURN_TOKEN(T_LINE);",
          "6767: }",
          "",
          "[Removed Lines]",
          "6764: #line 1765 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6764: #line 1766 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 137 ---",
          "[Context before]",
          "6802:   }",
          "6803:   YYDEBUG(704, *YYCURSOR);",
          "6804:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6806:   {",
          "6807:  RETURN_TOKEN(T_ENDSWITCH);",
          "6808: }",
          "",
          "[Removed Lines]",
          "6805: #line 1234 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6805: #line 1235 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 138 ---",
          "[Context before]",
          "6833:   }",
          "6834:   YYDEBUG(709, *YYCURSOR);",
          "6835:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6837:   {",
          "6838:     RETURN_TOKEN(T_INSTEADOF);",
          "6839: }",
          "",
          "[Removed Lines]",
          "6836: #line 1396 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6836: #line 1397 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 139 ---",
          "[Context before]",
          "6846:   }",
          "6847:   YYDEBUG(711, *YYCURSOR);",
          "6848:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6850:   {",
          "6851:  RETURN_TOKEN(T_INTERFACE);",
          "6852: }",
          "",
          "[Removed Lines]",
          "6849: #line 1270 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6849: #line 1271 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 140 ---",
          "[Context before]",
          "6859:   }",
          "6860:   YYDEBUG(713, *YYCURSOR);",
          "6861:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6863:   {",
          "6864:  RETURN_TOKEN(T_NAMESPACE);",
          "6865: }",
          "",
          "[Removed Lines]",
          "6862: #line 1388 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6862: #line 1389 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 141 ---",
          "[Context before]",
          "6872:   }",
          "6873:   YYDEBUG(715, *YYCURSOR);",
          "6874:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6876:   {",
          "6877:  RETURN_TOKEN(T_PROTECTED);",
          "6878: }",
          "",
          "[Removed Lines]",
          "6875: #line 1432 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6875: #line 1433 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 142 ---",
          "[Context before]",
          "6897:   }",
          "6898:   YYDEBUG(719, *YYCURSOR);",
          "6899:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6901:   {",
          "6902:  RETURN_TOKEN(T_CLASS_C);",
          "6903: }",
          "",
          "[Removed Lines]",
          "6900: #line 1749 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6900: #line 1750 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 143 ---",
          "[Context before]",
          "6905: yy720:",
          "6906:   YYDEBUG(720, *YYCURSOR);",
          "6907:   yych = *++YYCURSOR;",
          "6910:   goto yy128;",
          "6911: yy721:",
          "6912:   YYDEBUG(721, *YYCURSOR);",
          "6913:   yych = *++YYCURSOR;",
          "6916:   goto yy128;",
          "6917: yy722:",
          "6918:   YYDEBUG(722, *YYCURSOR);",
          "6919:   yych = *++YYCURSOR;",
          "6921:   goto yy128;",
          "6922: yy723:",
          "6923:   YYDEBUG(723, *YYCURSOR);",
          "6924:   yych = *++YYCURSOR;",
          "6927:   goto yy128;",
          "6928: yy724:",
          "6929:   YYDEBUG(724, *YYCURSOR);",
          "",
          "[Removed Lines]",
          "6908:   if (yych == 'N') goto yy738;",
          "6909:   if (yych == 'n') goto yy738;",
          "6914:   if (yych == 'M') goto yy739;",
          "6915:   if (yych == 'm') goto yy739;",
          "6920:   if (yych == '_') goto yy740;",
          "6925:   if (yych == 'C') goto yy742;",
          "6926:   if (yych == 'c') goto yy742;",
          "",
          "[Added Lines]",
          "6908:   if (yych == 'N') goto yy737;",
          "6909:   if (yych == 'n') goto yy737;",
          "6914:   if (yych == 'M') goto yy738;",
          "6915:   if (yych == 'm') goto yy738;",
          "6920:   if (yych == '_') goto yy739;",
          "6925:   if (yych == 'C') goto yy741;",
          "6926:   if (yych == 'c') goto yy741;",
          "",
          "---------------",
          "--- Hunk 144 ---",
          "[Context before]",
          "6933:   }",
          "6934:   YYDEBUG(725, *YYCURSOR);",
          "6935:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6937:   {",
          "6938:  RETURN_TOKEN(T_TRAIT_C);",
          "6939: }",
          "",
          "[Removed Lines]",
          "6936: #line 1753 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6936: #line 1754 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 145 ---",
          "[Context before]",
          "6946:   }",
          "6947:   YYDEBUG(727, *YYCURSOR);",
          "6948:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6950:   {",
          "6951:  RETURN_TOKEN(T_ENDDECLARE);",
          "6952: }",
          "",
          "[Removed Lines]",
          "6949: #line 1218 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6949: #line 1219 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 146 ---",
          "[Context before]",
          "6959:   }",
          "6960:   YYDEBUG(729, *YYCURSOR);",
          "6961:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6963:   {",
          "6964:  RETURN_TOKEN(T_ENDFOREACH);",
          "6965: }",
          "",
          "[Removed Lines]",
          "6962: #line 1210 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6962: #line 1211 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 147 ---",
          "[Context before]",
          "6972:   }",
          "6973:   YYDEBUG(731, *YYCURSOR);",
          "6974:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6976:   {",
          "6977:  RETURN_TOKEN(T_IMPLEMENTS);",
          "6978: }",
          "",
          "[Removed Lines]",
          "6975: #line 1282 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6975: #line 1283 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 148 ---",
          "[Context before]",
          "6980: yy732:",
          "6981:   YYDEBUG(732, *YYCURSOR);",
          "6982:   yych = *++YYCURSOR;",
          "6985:   goto yy128;",
          "6986: yy733:",
          "6987:   YYDEBUG(733, *YYCURSOR);",
          "",
          "[Removed Lines]",
          "6983:   if (yych == 'C') goto yy743;",
          "6984:   if (yych == 'c') goto yy743;",
          "",
          "[Added Lines]",
          "6983:   if (yych == 'C') goto yy742;",
          "6984:   if (yych == 'c') goto yy742;",
          "",
          "---------------",
          "--- Hunk 149 ---",
          "[Context before]",
          "6991:   }",
          "6992:   YYDEBUG(734, *YYCURSOR);",
          "6993:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6995:   {",
          "6996:  RETURN_TOKEN(T_INSTANCEOF);",
          "6997: }",
          "",
          "[Removed Lines]",
          "6994: #line 1222 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6994: #line 1223 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 150 ---",
          "[Context before]",
          "6999: yy735:",
          "7000:   YYDEBUG(735, *YYCURSOR);",
          "7001:   yych = *++YYCURSOR;",
          "7004:   goto yy128;",
          "7005: yy736:",
          "7006:   YYDEBUG(736, *YYCURSOR);",
          "7008:   YYDEBUG(737, *YYCURSOR);",
          "7016: yy738:",
          "7017:   YYDEBUG(738, *YYCURSOR);",
          "7018:   yych = *++YYCURSOR;",
          "7020:   goto yy128;",
          "7021: yy739:",
          "7022:   YYDEBUG(739, *YYCURSOR);",
          "7029:   ++YYCURSOR;",
          "7030:   if (yybm[0+(yych = *YYCURSOR)] & 16) {",
          "7031:    goto yy127;",
          "7032:   }",
          "7034:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7036:   {",
          "7037:  RETURN_TOKEN(T_METHOD_C);",
          "7038: }",
          "7040: yy742:",
          "7041:   YYDEBUG(742, *YYCURSOR);",
          "7042:   yych = *++YYCURSOR;",
          "7045:   goto yy128;",
          "7046: yy743:",
          "7047:   YYDEBUG(743, *YYCURSOR);",
          "7048:   yych = *++YYCURSOR;",
          "7051:   goto yy128;",
          "7052: yy744:",
          "7053:   YYDEBUG(744, *YYCURSOR);",
          "7059:   YYDEBUG(745, *YYCURSOR);",
          "7063: yy746:",
          "7064:   YYDEBUG(746, *YYCURSOR);",
          "7065:   yych = *++YYCURSOR;",
          "7068:   goto yy128;",
          "7069: yy747:",
          "7070:   YYDEBUG(747, *YYCURSOR);",
          "7071:   yych = *++YYCURSOR;",
          "7073:   goto yy128;",
          "7074: yy748:",
          "7075:   YYDEBUG(748, *YYCURSOR);",
          "7076:   ++YYCURSOR;",
          "7077:   if (yybm[0+(yych = *YYCURSOR)] & 16) {",
          "7078:    goto yy127;",
          "7079:   }",
          "7081:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7083:   {",
          "7084:  RETURN_TOKEN(T_INCLUDE_ONCE);",
          "7085: }",
          "7089:   ++YYCURSOR;",
          "7090:   if (yybm[0+(yych = *YYCURSOR)] & 16) {",
          "7091:    goto yy127;",
          "7092:   }",
          "7094:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7096:   {",
          "7097:  RETURN_TOKEN(T_REQUIRE_ONCE);",
          "7098: }",
          "7102:   ++YYCURSOR;",
          "7103:   if (yybm[0+(yych = *YYCURSOR)] & 16) {",
          "7104:    goto yy127;",
          "7105:   }",
          "7107:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7109:   {",
          "7110:  RETURN_TOKEN(T_FUNC_C);",
          "7111: }",
          "7119: yy755:",
          "7120:   YYDEBUG(755, *YYCURSOR);",
          "7121:   yych = *++YYCURSOR;",
          "7123:   goto yy128;",
          "7124: yy756:",
          "7125:   YYDEBUG(756, *YYCURSOR);",
          "7126:   yych = *++YYCURSOR;",
          "7129:   goto yy128;",
          "7130: yy757:",
          "7131:   YYDEBUG(757, *YYCURSOR);",
          "7132:   ++YYCURSOR;",
          "7133:   if (yybm[0+(yych = *YYCURSOR)] & 16) {",
          "7134:    goto yy127;",
          "7135:   }",
          "7137:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7139:   {",
          "7140:  RETURN_TOKEN(T_NS_C);",
          "7141: }",
          "7148: yy760:",
          "7149:   YYDEBUG(760, *YYCURSOR);",
          "7150:   ++YYCURSOR;",
          "7151:   if (yybm[0+(yych = *YYCURSOR)] & 16) {",
          "7152:    goto yy127;",
          "7153:   }",
          "7155:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7157:   {",
          "7158:  RETURN_TOKEN(T_HALT_COMPILER);",
          "7159: }",
          "7161:  }",
          "7163: yyc_ST_LOOKING_FOR_PROPERTY:",
          "",
          "[Removed Lines]",
          "7002:   if (yych == 'C') goto yy744;",
          "7003:   if (yych == 'c') goto yy744;",
          "7007:   ++YYCURSOR;",
          "7009:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7010: #line 1145 \"Zend/zend_language_scanner.l\"",
          "7011:   {",
          "7012:  HANDLE_NEWLINES(yytext, yyleng);",
          "7013:  RETURN_TOKEN(T_YIELD_FROM);",
          "7014: }",
          "7015: #line 7016 \"Zend/zend_language_scanner.c\"",
          "7019:   if (yych == '_') goto yy745;",
          "7023:   yych = *++YYCURSOR;",
          "7024:   if (yych == 'P') goto yy746;",
          "7025:   if (yych == 'p') goto yy746;",
          "7026:   goto yy128;",
          "7027: yy740:",
          "7028:   YYDEBUG(740, *YYCURSOR);",
          "7033:   YYDEBUG(741, *YYCURSOR);",
          "7035: #line 1761 \"Zend/zend_language_scanner.l\"",
          "7039: #line 7040 \"Zend/zend_language_scanner.c\"",
          "7043:   if (yych == 'E') goto yy747;",
          "7044:   if (yych == 'e') goto yy747;",
          "7049:   if (yych == 'E') goto yy748;",
          "7050:   if (yych == 'e') goto yy748;",
          "7054:   yych = *++YYCURSOR;",
          "7055:   if (yych == 'E') goto yy750;",
          "7056:   if (yych == 'e') goto yy750;",
          "7057:   goto yy128;",
          "7058: yy745:",
          "7060:   yych = *++YYCURSOR;",
          "7061:   if (yych == '_') goto yy752;",
          "7062:   goto yy128;",
          "7066:   if (yych == 'I') goto yy754;",
          "7067:   if (yych == 'i') goto yy754;",
          "7072:   if (yych == '_') goto yy755;",
          "7080:   YYDEBUG(749, *YYCURSOR);",
          "7082: #line 1376 \"Zend/zend_language_scanner.l\"",
          "7086: #line 7087 \"Zend/zend_language_scanner.c\"",
          "7087: yy750:",
          "7088:   YYDEBUG(750, *YYCURSOR);",
          "7093:   YYDEBUG(751, *YYCURSOR);",
          "7095: #line 1384 \"Zend/zend_language_scanner.l\"",
          "7099: #line 7100 \"Zend/zend_language_scanner.c\"",
          "7100: yy752:",
          "7101:   YYDEBUG(752, *YYCURSOR);",
          "7106:   YYDEBUG(753, *YYCURSOR);",
          "7108: #line 1757 \"Zend/zend_language_scanner.l\"",
          "7112: #line 7113 \"Zend/zend_language_scanner.c\"",
          "7113: yy754:",
          "7114:   YYDEBUG(754, *YYCURSOR);",
          "7115:   yych = *++YYCURSOR;",
          "7116:   if (yych == 'L') goto yy756;",
          "7117:   if (yych == 'l') goto yy756;",
          "7118:   goto yy128;",
          "7122:   if (yych == '_') goto yy757;",
          "7127:   if (yych == 'E') goto yy759;",
          "7128:   if (yych == 'e') goto yy759;",
          "7136:   YYDEBUG(758, *YYCURSOR);",
          "7138: #line 1777 \"Zend/zend_language_scanner.l\"",
          "7142: #line 7143 \"Zend/zend_language_scanner.c\"",
          "7143: yy759:",
          "7144:   YYDEBUG(759, *YYCURSOR);",
          "7145:   yych = *++YYCURSOR;",
          "7146:   if (yych == 'R') goto yy760;",
          "7147:   if (yych != 'r') goto yy128;",
          "7154:   YYDEBUG(761, *YYCURSOR);",
          "7156: #line 1412 \"Zend/zend_language_scanner.l\"",
          "7160: #line 7161 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7002:   if (yych == 'C') goto yy743;",
          "7003:   if (yych == 'c') goto yy743;",
          "7007:   yych = *++YYCURSOR;",
          "7008:   if (yych <= '^') {",
          "7009:    if (yych <= '9') {",
          "7010:     if (yych <= '/') goto yy744;",
          "7011:     goto yy166;",
          "7012:    } else {",
          "7013:     if (yych <= '@') goto yy744;",
          "7014:     if (yych <= 'Z') goto yy166;",
          "7015:     goto yy744;",
          "7016:    }",
          "7017:   } else {",
          "7018:    if (yych <= '`') {",
          "7019:     if (yych <= '_') goto yy166;",
          "7020:     goto yy744;",
          "7021:    } else {",
          "7022:     if (yych <= 'z') goto yy166;",
          "7023:     if (yych <= 0x7F) goto yy744;",
          "7024:     goto yy166;",
          "7025:    }",
          "7026:   }",
          "7027: yy737:",
          "7029:   yych = *++YYCURSOR;",
          "7030:   if (yych == '_') goto yy746;",
          "7031:   goto yy128;",
          "7035:   if (yych == 'P') goto yy747;",
          "7036:   if (yych == 'p') goto yy747;",
          "7044:   YYDEBUG(740, *YYCURSOR);",
          "7046: #line 1762 \"Zend/zend_language_scanner.l\"",
          "7050: #line 7051 \"Zend/zend_language_scanner.c\"",
          "7051: yy741:",
          "7052:   YYDEBUG(741, *YYCURSOR);",
          "7053:   yych = *++YYCURSOR;",
          "7054:   if (yych == 'E') goto yy748;",
          "7055:   if (yych == 'e') goto yy748;",
          "7056:   goto yy128;",
          "7060:   if (yych == 'E') goto yy749;",
          "7061:   if (yych == 'e') goto yy749;",
          "7066:   if (yych == 'E') goto yy751;",
          "7067:   if (yych == 'e') goto yy751;",
          "7071:   ++YYCURSOR;",
          "7073:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7074: #line 1145 \"Zend/zend_language_scanner.l\"",
          "7075:   {",
          "7076:  yyless(--yyleng);",
          "7077:  HANDLE_NEWLINES(yytext, yyleng);",
          "7078:  RETURN_TOKEN(T_YIELD_FROM);",
          "7079: }",
          "7080: #line 7081 \"Zend/zend_language_scanner.c\"",
          "7084:   if (yych == '_') goto yy753;",
          "7089:   if (yych == 'I') goto yy755;",
          "7090:   if (yych == 'i') goto yy755;",
          "7094:   yych = *++YYCURSOR;",
          "7095:   if (yych == '_') goto yy756;",
          "7096:   goto yy128;",
          "7097: yy749:",
          "7098:   YYDEBUG(749, *YYCURSOR);",
          "7103:   YYDEBUG(750, *YYCURSOR);",
          "7105: #line 1377 \"Zend/zend_language_scanner.l\"",
          "7109: #line 7110 \"Zend/zend_language_scanner.c\"",
          "7110: yy751:",
          "7111:   YYDEBUG(751, *YYCURSOR);",
          "7116:   YYDEBUG(752, *YYCURSOR);",
          "7118: #line 1385 \"Zend/zend_language_scanner.l\"",
          "7122: #line 7123 \"Zend/zend_language_scanner.c\"",
          "7123: yy753:",
          "7124:   YYDEBUG(753, *YYCURSOR);",
          "7129:   YYDEBUG(754, *YYCURSOR);",
          "7131: #line 1758 \"Zend/zend_language_scanner.l\"",
          "7135: #line 7136 \"Zend/zend_language_scanner.c\"",
          "7139:   if (yych == 'L') goto yy757;",
          "7140:   if (yych == 'l') goto yy757;",
          "7145:   if (yych == '_') goto yy758;",
          "7149:   yych = *++YYCURSOR;",
          "7150:   if (yych == 'E') goto yy760;",
          "7151:   if (yych == 'e') goto yy760;",
          "7152:   goto yy128;",
          "7153: yy758:",
          "7154:   YYDEBUG(758, *YYCURSOR);",
          "7159:   YYDEBUG(759, *YYCURSOR);",
          "7161: #line 1778 \"Zend/zend_language_scanner.l\"",
          "7165: #line 7166 \"Zend/zend_language_scanner.c\"",
          "7168:   yych = *++YYCURSOR;",
          "7169:   if (yych == 'R') goto yy761;",
          "7170:   if (yych != 'r') goto yy128;",
          "7171: yy761:",
          "7172:   YYDEBUG(761, *YYCURSOR);",
          "7177:   YYDEBUG(762, *YYCURSOR);",
          "7179: #line 1413 \"Zend/zend_language_scanner.l\"",
          "7183: #line 7184 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 151 ---",
          "[Context before]",
          "7196:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7197:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7198:   };",
          "7200:   YYFILL(2);",
          "7201:   yych = *YYCURSOR;",
          "7202:   if (yybm[0+yych] & 64) {",
          "7204:   }",
          "7205:   if (yych <= '^') {",
          "7206:    if (yych <= '-') {",
          "7208:    } else {",
          "7211:    }",
          "7212:   } else {",
          "7213:    if (yych <= '`') {",
          "7215:    } else {",
          "7218:    }",
          "7219:   }",
          "7223: yy765:",
          "7224:   YYDEBUG(765, *YYCURSOR);",
          "7225:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7227:   {",
          "7228:  yyless(0);",
          "7229:  yy_pop_state();",
          "7230:  goto restart;",
          "7231: }",
          "7235:   ++YYCURSOR;",
          "7236:   YYFILL(1);",
          "7237:   yych = *YYCURSOR;",
          "7239:   if (yybm[0+yych] & 64) {",
          "7241:   }",
          "7243:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7245:   {",
          "7246:  HANDLE_NEWLINES(yytext, yyleng);",
          "7247:  RETURN_TOKEN(T_WHITESPACE);",
          "7248: }",
          "7255: yy770:",
          "7256:   YYDEBUG(770, *YYCURSOR);",
          "7257:   ++YYCURSOR;",
          "7258:   YYFILL(1);",
          "7259:   yych = *YYCURSOR;",
          "7261:   if (yybm[0+yych] & 128) {",
          "7263:   }",
          "7265:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7267:   {",
          "7268:  yy_pop_state();",
          "7269:  zend_copy_value(zendlval, yytext, yyleng);",
          "7270:  RETURN_TOKEN(T_STRING);",
          "7271: }",
          "7276:   YYDEBUG(774, *YYCURSOR);",
          "7277:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7279:   {",
          "7280:  RETURN_TOKEN(T_OBJECT_OPERATOR);",
          "7281: }",
          "7283:  }",
          "7285: yyc_ST_LOOKING_FOR_VARNAME:",
          "",
          "[Removed Lines]",
          "7199:   YYDEBUG(762, *YYCURSOR);",
          "7203:    goto yy766;",
          "7207:     if (yych >= '-') goto yy769;",
          "7209:     if (yych <= '@') goto yy764;",
          "7210:     if (yych <= 'Z') goto yy770;",
          "7214:     if (yych <= '_') goto yy770;",
          "7216:     if (yych <= 'z') goto yy770;",
          "7217:     if (yych >= 0x80) goto yy770;",
          "7220: yy764:",
          "7221:   YYDEBUG(764, *YYCURSOR);",
          "7222:   ++YYCURSOR;",
          "7226: #line 1306 \"Zend/zend_language_scanner.l\"",
          "7232: #line 7233 \"Zend/zend_language_scanner.c\"",
          "7233: yy766:",
          "7234:   YYDEBUG(766, *YYCURSOR);",
          "7238:   YYDEBUG(767, *YYCURSOR);",
          "7240:    goto yy766;",
          "7242:   YYDEBUG(768, *YYCURSOR);",
          "7244: #line 1291 \"Zend/zend_language_scanner.l\"",
          "7249: #line 7250 \"Zend/zend_language_scanner.c\"",
          "7250: yy769:",
          "7251:   YYDEBUG(769, *YYCURSOR);",
          "7252:   yych = *++YYCURSOR;",
          "7253:   if (yych == '>') goto yy773;",
          "7254:   goto yy765;",
          "7260:   YYDEBUG(771, *YYCURSOR);",
          "7262:    goto yy770;",
          "7264:   YYDEBUG(772, *YYCURSOR);",
          "7266: #line 1300 \"Zend/zend_language_scanner.l\"",
          "7272: #line 7273 \"Zend/zend_language_scanner.c\"",
          "7273: yy773:",
          "7274:   YYDEBUG(773, *YYCURSOR);",
          "7275:   ++YYCURSOR;",
          "7278: #line 1296 \"Zend/zend_language_scanner.l\"",
          "7282: #line 7283 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7222:   YYDEBUG(763, *YYCURSOR);",
          "7226:    goto yy767;",
          "7230:     if (yych >= '-') goto yy770;",
          "7232:     if (yych <= '@') goto yy765;",
          "7233:     if (yych <= 'Z') goto yy771;",
          "7237:     if (yych <= '_') goto yy771;",
          "7239:     if (yych <= 'z') goto yy771;",
          "7240:     if (yych >= 0x80) goto yy771;",
          "7245:   ++YYCURSOR;",
          "7246: yy766:",
          "7247:   YYDEBUG(766, *YYCURSOR);",
          "7249: #line 1307 \"Zend/zend_language_scanner.l\"",
          "7255: #line 7256 \"Zend/zend_language_scanner.c\"",
          "7256: yy767:",
          "7257:   YYDEBUG(767, *YYCURSOR);",
          "7261:   YYDEBUG(768, *YYCURSOR);",
          "7263:    goto yy767;",
          "7265:   YYDEBUG(769, *YYCURSOR);",
          "7267: #line 1292 \"Zend/zend_language_scanner.l\"",
          "7272: #line 7273 \"Zend/zend_language_scanner.c\"",
          "7275:   yych = *++YYCURSOR;",
          "7276:   if (yych == '>') goto yy774;",
          "7277:   goto yy766;",
          "7278: yy771:",
          "7279:   YYDEBUG(771, *YYCURSOR);",
          "7283:   YYDEBUG(772, *YYCURSOR);",
          "7285:    goto yy771;",
          "7287:   YYDEBUG(773, *YYCURSOR);",
          "7289: #line 1301 \"Zend/zend_language_scanner.l\"",
          "7295: #line 7296 \"Zend/zend_language_scanner.c\"",
          "7296: yy774:",
          "7298:   ++YYCURSOR;",
          "7299:   YYDEBUG(775, *YYCURSOR);",
          "7301: #line 1297 \"Zend/zend_language_scanner.l\"",
          "7305: #line 7306 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 152 ---",
          "[Context before]",
          "7318:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7319:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7320:   };",
          "7322:   YYFILL(2);",
          "7323:   yych = *YYCURSOR;",
          "7324:   if (yych <= '_') {",
          "7328:   } else {",
          "7332:   }",
          "7336: yy778:",
          "7337:   YYDEBUG(778, *YYCURSOR);",
          "7338:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7340:   {",
          "7341:  yyless(0);",
          "7342:  yy_pop_state();",
          "7343:  yy_push_state(ST_IN_SCRIPTING);",
          "7344:  goto restart;",
          "7345: }",
          "7349:   yych = *(YYMARKER = ++YYCURSOR);",
          "7350:   if (yych <= '_') {",
          "7351:    if (yych <= '@') {",
          "7355:    } else {",
          "7359:    }",
          "7360:   } else {",
          "7361:    if (yych <= '|') {",
          "7365:    } else {",
          "7369:    }",
          "7370:   }",
          "7373:   ++YYCURSOR;",
          "7374:   YYFILL(1);",
          "7375:   yych = *YYCURSOR;",
          "7384: yy782:",
          "7385:   YYDEBUG(782, *YYCURSOR);",
          "7388: yy783:",
          "7389:   YYDEBUG(783, *YYCURSOR);",
          "7391:   YYDEBUG(784, *YYCURSOR);",
          "7392:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7394:   {",
          "7395:  yyless(yyleng - 1);",
          "7396:  zend_copy_value(zendlval, yytext, yyleng);",
          "",
          "[Removed Lines]",
          "7321:   YYDEBUG(775, *YYCURSOR);",
          "7325:    if (yych <= '@') goto yy777;",
          "7326:    if (yych <= 'Z') goto yy779;",
          "7327:    if (yych >= '_') goto yy779;",
          "7329:    if (yych <= '`') goto yy777;",
          "7330:    if (yych <= 'z') goto yy779;",
          "7331:    if (yych >= 0x80) goto yy779;",
          "7333: yy777:",
          "7334:   YYDEBUG(777, *YYCURSOR);",
          "7335:   ++YYCURSOR;",
          "7339: #line 1611 \"Zend/zend_language_scanner.l\"",
          "7346: #line 7347 \"Zend/zend_language_scanner.c\"",
          "7347: yy779:",
          "7348:   YYDEBUG(779, *YYCURSOR);",
          "7352:     if (yych <= '/') goto yy778;",
          "7353:     if (yych <= '9') goto yy781;",
          "7354:     goto yy778;",
          "7356:     if (yych <= '[') goto yy781;",
          "7357:     if (yych <= '^') goto yy778;",
          "7358:     goto yy781;",
          "7362:     if (yych <= '`') goto yy778;",
          "7363:     if (yych <= 'z') goto yy781;",
          "7364:     goto yy778;",
          "7366:     if (yych <= '}') goto yy781;",
          "7367:     if (yych <= 0x7F) goto yy778;",
          "7368:     goto yy781;",
          "7371: yy780:",
          "7372:   YYDEBUG(780, *YYCURSOR);",
          "7376: yy781:",
          "7377:   YYDEBUG(781, *YYCURSOR);",
          "7378:   if (yybm[0+yych] & 128) {",
          "7379:    goto yy780;",
          "7380:   }",
          "7381:   if (yych <= '@') goto yy782;",
          "7382:   if (yych <= '[') goto yy783;",
          "7383:   if (yych == '}') goto yy783;",
          "7386:   YYCURSOR = YYMARKER;",
          "7387:   goto yy778;",
          "7390:   ++YYCURSOR;",
          "7393: #line 1602 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7344:   YYDEBUG(776, *YYCURSOR);",
          "7348:    if (yych <= '@') goto yy778;",
          "7349:    if (yych <= 'Z') goto yy780;",
          "7350:    if (yych >= '_') goto yy780;",
          "7352:    if (yych <= '`') goto yy778;",
          "7353:    if (yych <= 'z') goto yy780;",
          "7354:    if (yych >= 0x80) goto yy780;",
          "7358:   ++YYCURSOR;",
          "7359: yy779:",
          "7360:   YYDEBUG(779, *YYCURSOR);",
          "7362: #line 1612 \"Zend/zend_language_scanner.l\"",
          "7369: #line 7370 \"Zend/zend_language_scanner.c\"",
          "7370: yy780:",
          "7371:   YYDEBUG(780, *YYCURSOR);",
          "7375:     if (yych <= '/') goto yy779;",
          "7376:     if (yych <= '9') goto yy782;",
          "7377:     goto yy779;",
          "7379:     if (yych <= '[') goto yy782;",
          "7380:     if (yych <= '^') goto yy779;",
          "7381:     goto yy782;",
          "7385:     if (yych <= '`') goto yy779;",
          "7386:     if (yych <= 'z') goto yy782;",
          "7387:     goto yy779;",
          "7389:     if (yych <= '}') goto yy782;",
          "7390:     if (yych <= 0x7F) goto yy779;",
          "7391:     goto yy782;",
          "7394: yy781:",
          "7395:   YYDEBUG(781, *YYCURSOR);",
          "7401:   if (yybm[0+yych] & 128) {",
          "7402:    goto yy781;",
          "7403:   }",
          "7404:   if (yych <= '@') goto yy783;",
          "7405:   if (yych <= '[') goto yy784;",
          "7406:   if (yych == '}') goto yy784;",
          "7409:   YYCURSOR = YYMARKER;",
          "7410:   goto yy779;",
          "7411: yy784:",
          "7413:   ++YYCURSOR;",
          "7414:   YYDEBUG(785, *YYCURSOR);",
          "7416: #line 1603 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 153 ---",
          "[Context before]",
          "7398:  yy_push_state(ST_IN_SCRIPTING);",
          "7399:  RETURN_TOKEN(T_STRING_VARNAME);",
          "7400: }",
          "7402:  }",
          "7404: yyc_ST_NOWDOC:",
          "7406:  YYFILL(1);",
          "7407:  yych = *YYCURSOR;",
          "7410:  YYDEBUG(788, *YYCURSOR);",
          "7411:  yyleng = YYCURSOR - SCNG(yy_text);",
          "7413:  {",
          "7414:  int newline = 0;",
          "",
          "[Removed Lines]",
          "7401: #line 7402 \"Zend/zend_language_scanner.c\"",
          "7405:  YYDEBUG(785, *YYCURSOR);",
          "7408:  YYDEBUG(787, *YYCURSOR);",
          "7409:  ++YYCURSOR;",
          "7412: #line 2333 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7424: #line 7425 \"Zend/zend_language_scanner.c\"",
          "7428:  YYDEBUG(786, *YYCURSOR);",
          "7432:  ++YYCURSOR;",
          "7433:  YYDEBUG(789, *YYCURSOR);",
          "7435: #line 2334 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 154 ---",
          "[Context before]",
          "7465:  HANDLE_NEWLINES(yytext, yyleng - newline);",
          "7466:  RETURN_TOKEN(T_ENCAPSED_AND_WHITESPACE);",
          "7467: }",
          "7470: yyc_ST_VAR_OFFSET:",
          "7471:  {",
          "",
          "[Removed Lines]",
          "7468: #line 7469 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7491: #line 7492 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 155 ---",
          "[Context before]",
          "7503:     32,  32,  32,  32,  32,  32,  32,  32,",
          "7504:     32,  32,  32,  32,  32,  32,  32,  32,",
          "7505:   };",
          "7507:   YYFILL(3);",
          "7508:   yych = *YYCURSOR;",
          "7509:   if (yych <= '0') {",
          "7510:    if (yych <= ' ') {",
          "7511:     if (yych <= '\\f') {",
          "7514:     } else {",
          "7517:     }",
          "7518:    } else {",
          "7519:     if (yych <= '$') {",
          "7526:      goto yy798;",
          "7527:     }",
          "7528:    }",
          "7529:   } else {",
          "7530:    if (yych <= ']') {",
          "7531:     if (yych <= 'Z') {",
          "7535:     } else {",
          "7539:     }",
          "7540:    } else {",
          "7541:     if (yych <= '`') {",
          "7544:     } else {",
          "7548:     }",
          "7549:    }",
          "7550:   }",
          "7554:   YYDEBUG(792, *YYCURSOR);",
          "7555:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7557:   {",
          "7558:  if (YYCURSOR > YYLIMIT) {",
          "7559:   RETURN_TOKEN(END);",
          "",
          "[Removed Lines]",
          "7506:   YYDEBUG(789, *YYCURSOR);",
          "7512:      if (yych <= 0x08) goto yy791;",
          "7513:      if (yych <= '\\n') goto yy793;",
          "7515:      if (yych <= '\\r') goto yy793;",
          "7516:      if (yych >= ' ') goto yy793;",
          "7520:      if (yych <= '\"') goto yy795;",
          "7521:      if (yych <= '#') goto yy793;",
          "7522:      goto yy797;",
          "7523:     } else {",
          "7524:      if (yych == '\\'') goto yy793;",
          "7525:      if (yych <= '/') goto yy795;",
          "7532:      if (yych <= '9') goto yy800;",
          "7533:      if (yych <= '@') goto yy795;",
          "7534:      goto yy802;",
          "7536:      if (yych <= '[') goto yy795;",
          "7537:      if (yych <= '\\\\') goto yy793;",
          "7538:      goto yy805;",
          "7542:      if (yych == '_') goto yy802;",
          "7543:      goto yy795;",
          "7545:      if (yych <= 'z') goto yy802;",
          "7546:      if (yych <= '~') goto yy795;",
          "7547:      if (yych >= 0x80) goto yy802;",
          "7551: yy791:",
          "7552:   YYDEBUG(791, *YYCURSOR);",
          "7553:   ++YYCURSOR;",
          "7556: #line 2390 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7529:   YYDEBUG(790, *YYCURSOR);",
          "7535:      if (yych <= 0x08) goto yy792;",
          "7536:      if (yych <= '\\n') goto yy794;",
          "7538:      if (yych <= '\\r') goto yy794;",
          "7539:      if (yych >= ' ') goto yy794;",
          "7543:      if (yych <= '\"') goto yy796;",
          "7544:      if (yych <= '#') goto yy794;",
          "7546:     } else {",
          "7547:      if (yych == '\\'') goto yy794;",
          "7548:      if (yych <= '/') goto yy796;",
          "7549:      goto yy799;",
          "7555:      if (yych <= '9') goto yy801;",
          "7556:      if (yych <= '@') goto yy796;",
          "7557:      goto yy803;",
          "7559:      if (yych <= '[') goto yy796;",
          "7560:      if (yych <= '\\\\') goto yy794;",
          "7561:      goto yy806;",
          "7565:      if (yych == '_') goto yy803;",
          "7566:      goto yy796;",
          "7568:      if (yych <= 'z') goto yy803;",
          "7569:      if (yych <= '~') goto yy796;",
          "7570:      if (yych >= 0x80) goto yy803;",
          "7574: yy792:",
          "7576:   ++YYCURSOR;",
          "7577:   YYDEBUG(793, *YYCURSOR);",
          "7579: #line 2391 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 156 ---",
          "[Context before]",
          "7562:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "7563:  goto restart;",
          "7564: }",
          "7569:   YYDEBUG(794, *YYCURSOR);",
          "7570:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7572:   {",
          "7574:  yyless(0);",
          "",
          "[Removed Lines]",
          "7565: #line 7566 \"Zend/zend_language_scanner.c\"",
          "7566: yy793:",
          "7567:   YYDEBUG(793, *YYCURSOR);",
          "7568:   ++YYCURSOR;",
          "7571: #line 1884 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7588: #line 7589 \"Zend/zend_language_scanner.c\"",
          "7589: yy794:",
          "7591:   ++YYCURSOR;",
          "7592:   YYDEBUG(795, *YYCURSOR);",
          "7594: #line 1885 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 157 ---",
          "[Context before]",
          "7576:  ZVAL_NULL(zendlval);",
          "7577:  RETURN_TOKEN(T_ENCAPSED_AND_WHITESPACE);",
          "7578: }",
          "7583: yy796:",
          "7584:   YYDEBUG(796, *YYCURSOR);",
          "7585:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7587:   {",
          "7589:  RETURN_TOKEN(yytext[0]);",
          "7590: }",
          "7594:   yych = *++YYCURSOR;",
          "7595:   if (yych <= '_') {",
          "7600:   } else {",
          "7605:   }",
          "7608:   yych = *(YYMARKER = ++YYCURSOR);",
          "7609:   if (yych <= 'W') {",
          "7610:    if (yych <= '9') {",
          "7612:    } else {",
          "7614:    }",
          "7615:   } else {",
          "7616:    if (yych <= 'b') {",
          "7619:    } else {",
          "7621:    }",
          "7622:   }",
          "7625:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7628:  if (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {",
          "7629:   char *end;",
          "",
          "[Removed Lines]",
          "7579: #line 7580 \"Zend/zend_language_scanner.c\"",
          "7580: yy795:",
          "7581:   YYDEBUG(795, *YYCURSOR);",
          "7582:   ++YYCURSOR;",
          "7586: #line 1879 \"Zend/zend_language_scanner.l\"",
          "7591: #line 7592 \"Zend/zend_language_scanner.c\"",
          "7592: yy797:",
          "7593:   YYDEBUG(797, *YYCURSOR);",
          "7596:    if (yych <= '@') goto yy796;",
          "7597:    if (yych <= 'Z') goto yy807;",
          "7598:    if (yych <= '^') goto yy796;",
          "7599:    goto yy807;",
          "7601:    if (yych <= '`') goto yy796;",
          "7602:    if (yych <= 'z') goto yy807;",
          "7603:    if (yych <= 0x7F) goto yy796;",
          "7604:    goto yy807;",
          "7606: yy798:",
          "7607:   YYDEBUG(798, *YYCURSOR);",
          "7611:     if (yych >= '0') goto yy810;",
          "7613:     if (yych == 'B') goto yy813;",
          "7617:     if (yych <= 'X') goto yy815;",
          "7618:     if (yych >= 'b') goto yy813;",
          "7620:     if (yych == 'x') goto yy815;",
          "7623: yy799:",
          "7624:   YYDEBUG(799, *YYCURSOR);",
          "7626: #line 1719 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7602: #line 7603 \"Zend/zend_language_scanner.c\"",
          "7605:   ++YYCURSOR;",
          "7606: yy797:",
          "7607:   YYDEBUG(797, *YYCURSOR);",
          "7609: #line 1880 \"Zend/zend_language_scanner.l\"",
          "7614: #line 7615 \"Zend/zend_language_scanner.c\"",
          "7615: yy798:",
          "7616:   YYDEBUG(798, *YYCURSOR);",
          "7619:    if (yych <= '@') goto yy797;",
          "7620:    if (yych <= 'Z') goto yy808;",
          "7621:    if (yych <= '^') goto yy797;",
          "7622:    goto yy808;",
          "7624:    if (yych <= '`') goto yy797;",
          "7625:    if (yych <= 'z') goto yy808;",
          "7626:    if (yych <= 0x7F) goto yy797;",
          "7627:    goto yy808;",
          "7629: yy799:",
          "7630:   YYDEBUG(799, *YYCURSOR);",
          "7634:     if (yych >= '0') goto yy811;",
          "7636:     if (yych == 'B') goto yy814;",
          "7640:     if (yych <= 'X') goto yy816;",
          "7641:     if (yych >= 'b') goto yy814;",
          "7643:     if (yych == 'x') goto yy816;",
          "7646: yy800:",
          "7647:   YYDEBUG(800, *YYCURSOR);",
          "7649: #line 1720 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 158 ---",
          "[Context before]",
          "7639:  }",
          "7640:  RETURN_TOKEN(T_NUM_STRING);",
          "7641: }",
          "7645:   ++YYCURSOR;",
          "7646:   YYFILL(1);",
          "7647:   yych = *YYCURSOR;",
          "7649:   if (yybm[0+yych] & 16) {",
          "7651:   }",
          "7655:   ++YYCURSOR;",
          "7656:   YYFILL(1);",
          "7657:   yych = *YYCURSOR;",
          "7659:   if (yybm[0+yych] & 32) {",
          "7661:   }",
          "7663:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7665:   {",
          "7666:  zend_copy_value(zendlval, yytext, yyleng);",
          "7667:  RETURN_TOKEN(T_STRING);",
          "7668: }",
          "7673:   YYDEBUG(806, *YYCURSOR);",
          "7674:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7676:   {",
          "7677:  yy_pop_state();",
          "7678:  RETURN_TOKEN(']');",
          "7679: }",
          "7683:   ++YYCURSOR;",
          "7684:   YYFILL(1);",
          "7685:   yych = *YYCURSOR;",
          "7687:   if (yych <= '^') {",
          "7688:    if (yych <= '9') {",
          "7690:    } else {",
          "7693:    }",
          "7694:   } else {",
          "7695:    if (yych <= '`') {",
          "7697:    } else {",
          "7700:    }",
          "7701:   }",
          "7704:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7706:   {",
          "7707:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "7708:  RETURN_TOKEN(T_VARIABLE);",
          "7709: }",
          "7713:   ++YYCURSOR;",
          "7714:   YYFILL(1);",
          "7715:   yych = *YYCURSOR;",
          "7720:   YYDEBUG(812, *YYCURSOR);",
          "7721:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7724:  ZVAL_STRINGL(zendlval, yytext, yyleng);",
          "7725:  RETURN_TOKEN(T_NUM_STRING);",
          "7726: }",
          "7730:   yych = *++YYCURSOR;",
          "7731:   if (yybm[0+yych] & 64) {",
          "7733:   }",
          "7738: yy815:",
          "7739:   YYDEBUG(815, *YYCURSOR);",
          "7740:   yych = *++YYCURSOR;",
          "7741:   if (yybm[0+yych] & 128) {",
          "7743:   }",
          "7747:   ++YYCURSOR;",
          "7748:   YYFILL(1);",
          "7749:   yych = *YYCURSOR;",
          "7751:   if (yybm[0+yych] & 64) {",
          "7753:   }",
          "7757:   ++YYCURSOR;",
          "7758:   YYFILL(1);",
          "7759:   yych = *YYCURSOR;",
          "7761:   if (yybm[0+yych] & 128) {",
          "7763:   }",
          "7765:  }",
          "7766: }",
          "7769: }",
          "",
          "[Removed Lines]",
          "7642: #line 7643 \"Zend/zend_language_scanner.c\"",
          "7643: yy800:",
          "7644:   YYDEBUG(800, *YYCURSOR);",
          "7648:   YYDEBUG(801, *YYCURSOR);",
          "7650:    goto yy800;",
          "7652:   goto yy799;",
          "7653: yy802:",
          "7654:   YYDEBUG(802, *YYCURSOR);",
          "7658:   YYDEBUG(803, *YYCURSOR);",
          "7660:    goto yy802;",
          "7662:   YYDEBUG(804, *YYCURSOR);",
          "7664: #line 1892 \"Zend/zend_language_scanner.l\"",
          "7669: #line 7670 \"Zend/zend_language_scanner.c\"",
          "7670: yy805:",
          "7671:   YYDEBUG(805, *YYCURSOR);",
          "7672:   ++YYCURSOR;",
          "7675: #line 1874 \"Zend/zend_language_scanner.l\"",
          "7680: #line 7681 \"Zend/zend_language_scanner.c\"",
          "7681: yy807:",
          "7682:   YYDEBUG(807, *YYCURSOR);",
          "7686:   YYDEBUG(808, *YYCURSOR);",
          "7689:     if (yych >= '0') goto yy807;",
          "7691:     if (yych <= '@') goto yy809;",
          "7692:     if (yych <= 'Z') goto yy807;",
          "7696:     if (yych <= '_') goto yy807;",
          "7698:     if (yych <= 'z') goto yy807;",
          "7699:     if (yych >= 0x80) goto yy807;",
          "7702: yy809:",
          "7703:   YYDEBUG(809, *YYCURSOR);",
          "7705: #line 1869 \"Zend/zend_language_scanner.l\"",
          "7710: #line 7711 \"Zend/zend_language_scanner.c\"",
          "7711: yy810:",
          "7712:   YYDEBUG(810, *YYCURSOR);",
          "7716:   YYDEBUG(811, *YYCURSOR);",
          "7717:   if (yych <= '/') goto yy812;",
          "7718:   if (yych <= '9') goto yy810;",
          "7719: yy812:",
          "7722: #line 1735 \"Zend/zend_language_scanner.l\"",
          "7727: #line 7728 \"Zend/zend_language_scanner.c\"",
          "7728: yy813:",
          "7729:   YYDEBUG(813, *YYCURSOR);",
          "7732:    goto yy816;",
          "7734: yy814:",
          "7735:   YYDEBUG(814, *YYCURSOR);",
          "7736:   YYCURSOR = YYMARKER;",
          "7737:   goto yy799;",
          "7742:    goto yy818;",
          "7744:   goto yy814;",
          "7745: yy816:",
          "7746:   YYDEBUG(816, *YYCURSOR);",
          "7750:   YYDEBUG(817, *YYCURSOR);",
          "7752:    goto yy816;",
          "7754:   goto yy812;",
          "7755: yy818:",
          "7756:   YYDEBUG(818, *YYCURSOR);",
          "7760:   YYDEBUG(819, *YYCURSOR);",
          "7762:    goto yy818;",
          "7764:   goto yy812;",
          "7767: #line 2399 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7665: #line 7666 \"Zend/zend_language_scanner.c\"",
          "7666: yy801:",
          "7667:   YYDEBUG(801, *YYCURSOR);",
          "7671:   YYDEBUG(802, *YYCURSOR);",
          "7673:    goto yy801;",
          "7675:   goto yy800;",
          "7676: yy803:",
          "7677:   YYDEBUG(803, *YYCURSOR);",
          "7681:   YYDEBUG(804, *YYCURSOR);",
          "7683:    goto yy803;",
          "7685:   YYDEBUG(805, *YYCURSOR);",
          "7687: #line 1893 \"Zend/zend_language_scanner.l\"",
          "7692: #line 7693 \"Zend/zend_language_scanner.c\"",
          "7693: yy806:",
          "7695:   ++YYCURSOR;",
          "7696:   YYDEBUG(807, *YYCURSOR);",
          "7698: #line 1875 \"Zend/zend_language_scanner.l\"",
          "7703: #line 7704 \"Zend/zend_language_scanner.c\"",
          "7704: yy808:",
          "7705:   YYDEBUG(808, *YYCURSOR);",
          "7709:   YYDEBUG(809, *YYCURSOR);",
          "7712:     if (yych >= '0') goto yy808;",
          "7714:     if (yych <= '@') goto yy810;",
          "7715:     if (yych <= 'Z') goto yy808;",
          "7719:     if (yych <= '_') goto yy808;",
          "7721:     if (yych <= 'z') goto yy808;",
          "7722:     if (yych >= 0x80) goto yy808;",
          "7725: yy810:",
          "7726:   YYDEBUG(810, *YYCURSOR);",
          "7728: #line 1870 \"Zend/zend_language_scanner.l\"",
          "7733: #line 7734 \"Zend/zend_language_scanner.c\"",
          "7734: yy811:",
          "7735:   YYDEBUG(811, *YYCURSOR);",
          "7740:   if (yych <= '/') goto yy813;",
          "7741:   if (yych <= '9') goto yy811;",
          "7742: yy813:",
          "7743:   YYDEBUG(813, *YYCURSOR);",
          "7745: #line 1736 \"Zend/zend_language_scanner.l\"",
          "7750: #line 7751 \"Zend/zend_language_scanner.c\"",
          "7751: yy814:",
          "7752:   YYDEBUG(814, *YYCURSOR);",
          "7755:    goto yy817;",
          "7759:   YYCURSOR = YYMARKER;",
          "7760:   goto yy800;",
          "7761: yy816:",
          "7762:   YYDEBUG(816, *YYCURSOR);",
          "7765:    goto yy819;",
          "7767:   goto yy815;",
          "7768: yy817:",
          "7769:   YYDEBUG(817, *YYCURSOR);",
          "7773:   YYDEBUG(818, *YYCURSOR);",
          "7775:    goto yy817;",
          "7777:   goto yy813;",
          "7778: yy819:",
          "7779:   YYDEBUG(819, *YYCURSOR);",
          "7783:   YYDEBUG(820, *YYCURSOR);",
          "7785:    goto yy819;",
          "7787:   goto yy813;",
          "7790: #line 2400 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug74300.phpt||ext/standard/tests/serialize/bug74300.phpt": [
          "File: ext/standard/tests/serialize/bug74300.phpt -> ext/standard/tests/serialize/bug74300.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #74300 (unserialize() for float nvexp part)",
          "3: --INI--",
          "4: serialize_precision=10",
          "5: --FILE--",
          "6: <?php",
          "7: var_dump(unserialize('d:2e+2;'));",
          "8: var_dump(unserialize('d:2e++2;'));",
          "9: ?>",
          "10: ===DONE===",
          "11: --EXPECTF--",
          "12: float(200)",
          "14: Notice: unserialize(): Error at offset 0 of 8 bytes in %s on line %d",
          "15: bool(false)",
          "16: ===DONE===",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "916:  goto yy18;",
          "917: yy46:",
          "918:  ++YYCURSOR;",
          "920:  yych = *YYCURSOR;",
          "921:  if (yych <= ':') {",
          "922:   if (yych <= '.') {",
          "",
          "[Removed Lines]",
          "919:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "",
          "[Added Lines]",
          "919:  if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1045: #line 1046 \"ext/standard/var_unserializer.c\"",
          "1046: yy69:",
          "1047:  ++YYCURSOR;",
          "1049:  yych = *YYCURSOR;",
          "1050:  if (yych <= ';') {",
          "1051:   if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1048:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "",
          "[Added Lines]",
          "1048:  if ((YYLIMIT - YYCURSOR) < 3) YYFILL(3);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1383: #line 1384 \"ext/standard/var_unserializer.c\"",
          "1384: yy88:",
          "1385:  yych = *++YYCURSOR;",
          "1394: yy89:",
          "1395:  ++YYCURSOR;",
          "1396:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "",
          "[Removed Lines]",
          "1386:  if (yych <= ',') {",
          "1387:   if (yych == '+') goto yy96;",
          "1388:   goto yy18;",
          "1389:  } else {",
          "1390:   if (yych <= '-') goto yy96;",
          "1391:   if (yych <= '/') goto yy18;",
          "1392:   if (yych >= ':') goto yy18;",
          "1393:  }",
          "",
          "[Added Lines]",
          "1386:  if (yych <= '/') goto yy18;",
          "1387:  if (yych >= ':') goto yy18;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1401:  goto yy18;",
          "1402: yy91:",
          "1403:  yych = *++YYCURSOR;",
          "1405:  goto yy18;",
          "1406: yy92:",
          "1407:  ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1404:  if (yych == ';') goto yy97;",
          "",
          "[Added Lines]",
          "1398:  if (yych == ';') goto yy96;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1416:  }",
          "1417:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1418: }",
          "1420: yy94:",
          "1421:  ++YYCURSOR;",
          "1422: #line 740 \"ext/standard/var_unserializer.re\"",
          "",
          "[Removed Lines]",
          "1419: #line 1420 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1413: #line 1414 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1451:  ZVAL_STRINGL(rval, str, len);",
          "1452:  return 1;",
          "1453: }",
          "1455: yy96:",
          "1461:  ++YYCURSOR;",
          "1462: #line 715 \"ext/standard/var_unserializer.re\"",
          "1463:  {",
          "",
          "[Removed Lines]",
          "1454: #line 1455 \"ext/standard/var_unserializer.c\"",
          "1456:  yych = *++YYCURSOR;",
          "1457:  if (yych <= '/') goto yy18;",
          "1458:  if (yych <= '9') goto yy89;",
          "1459:  goto yy18;",
          "1460: yy97:",
          "",
          "[Added Lines]",
          "1448: #line 1449 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1476:  return 1;",
          "1477: }",
          "1479: }",
          "1480: #line 1007 \"ext/standard/var_unserializer.re\"",
          "",
          "[Removed Lines]",
          "1478: #line 1479 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1467: #line 1468 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "319: uiv = [+]? [0-9]+;",
          "320: iv = [+-]? [0-9]+;",
          "321: nv = [+-]? ([0-9]* \".\" [0-9]+|[0-9]+ \".\" [0-9]*);",
          "323: any = [\\000-\\377];",
          "324: object = [OC];",
          "",
          "[Removed Lines]",
          "322: nvexp = (iv | nv) [eE] [+-]? iv;",
          "",
          "[Added Lines]",
          "322: nvexp = (iv | nv) [eE] iv;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b1a224d4e994219a6ef1d1d8fdcc1b0598ba3ab",
      "candidate_info": {
        "commit_hash": "9b1a224d4e994219a6ef1d1d8fdcc1b0598ba3ab",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/9b1a224d4e994219a6ef1d1d8fdcc1b0598ba3ab",
        "files": [
          "Zend/zend_API.c",
          "ext/exif/exif.c",
          "ext/gmp/gmp.c",
          "ext/gmp/tests/bug70284.phpt",
          "ext/hash/hash_haval.c",
          "ext/hash/tests/bug70312.phpt",
          "ext/hash/tests/hash_file_basic1.phpt",
          "ext/hash/tests/hash_hmac_basic.phpt",
          "ext/hash/tests/hash_hmac_file_basic.phpt",
          "ext/pcre/php_pcre.c",
          "ext/pcre/tests/bug70345.phpt",
          "ext/session/session.c",
          "ext/session/tests/session_decode_error2.phpt",
          "ext/soap/soap.c",
          "ext/soap/tests/bug70388.phpt",
          "ext/spl/spl_dllist.c",
          "ext/spl/tests/bug70155.phpt",
          "ext/spl/tests/bug70365.phpt",
          "ext/spl/tests/bug70366.phpt",
          "ext/standard/tests/serialize/bug70172.phpt",
          "ext/standard/tests/serialize/bug70172_2.phpt",
          "ext/standard/tests/serialize/bug70219.phpt",
          "ext/standard/var.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re",
          "ext/xsl/xsltprocessor.c",
          "ext/zip/php_zip.c",
          "ext/zip/tests/bug70350.phpt"
        ],
        "message": "Merge branch 'PHP-5.6'\n\n* PHP-5.6: (21 commits)\n  fix unit tests\n  update NEWS\n  add NEWS for fixes\n  Improve fix for #70172\n  Fix bug #70312 - HAVAL gives wrong hashes in specific cases\n  fix test\n  add test\n  Fix bug #70366 - use-after-free vulnerability in unserialize() with SplDoublyLinkedList\n  Fix bug #70365 - use-after-free vulnerability in unserialize() with SplObjectStorage\n  Fix bug #70172 - Use After Free Vulnerability in unserialize()\n  Fix bug #70388 - SOAP serialize_function_call() type confusion\n  Fixed bug #70350: ZipArchive::extractTo allows for directory traversal when creating directories\n  Improve fix for #70385\n  Fix bug #70345 (Multiple vulnerabilities related to PCRE functions)\n  Fix bug #70385 (Buffer over-read in exif_read_data with TIFF IFD tag byte value of 32 bytes)\n  Fix bug #70219 (Use after free vulnerability in session deserializer)\n  Fix bug ##70284 (Use after free vulnerability in unserialize() with GMP)\n  Fix for bug #69782\n  Add CVE IDs asigned (post release) to PHP 5.4.43\n  Add CVE IDs asigned to #69085 (PHP 5.4.39)\n  ...\n\nConflicts:\n\text/exif/exif.c\n\text/gmp/gmp.c\n\text/pcre/php_pcre.c\n\text/session/session.c\n\text/session/tests/session_decode_variation3.phpt\n\text/soap/soap.c\n\text/spl/spl_observer.c\n\text/standard/var.c\n\text/standard/var_unserializer.c\n\text/standard/var_unserializer.re\n\text/xsl/xsltprocessor.c",
        "before_after_code_files": [
          "Zend/zend_API.c||Zend/zend_API.c",
          "ext/exif/exif.c||ext/exif/exif.c",
          "ext/gmp/gmp.c||ext/gmp/gmp.c",
          "ext/gmp/tests/bug70284.phpt||ext/gmp/tests/bug70284.phpt",
          "ext/hash/hash_haval.c||ext/hash/hash_haval.c",
          "ext/hash/tests/bug70312.phpt||ext/hash/tests/bug70312.phpt",
          "ext/hash/tests/hash_file_basic1.phpt||ext/hash/tests/hash_file_basic1.phpt",
          "ext/hash/tests/hash_hmac_basic.phpt||ext/hash/tests/hash_hmac_basic.phpt",
          "ext/hash/tests/hash_hmac_file_basic.phpt||ext/hash/tests/hash_hmac_file_basic.phpt",
          "ext/pcre/php_pcre.c||ext/pcre/php_pcre.c",
          "ext/pcre/tests/bug70345.phpt||ext/pcre/tests/bug70345.phpt",
          "ext/session/session.c||ext/session/session.c",
          "ext/session/tests/session_decode_error2.phpt||ext/session/tests/session_decode_error2.phpt",
          "ext/soap/soap.c||ext/soap/soap.c",
          "ext/soap/tests/bug70388.phpt||ext/soap/tests/bug70388.phpt",
          "ext/spl/spl_dllist.c||ext/spl/spl_dllist.c",
          "ext/spl/tests/bug70155.phpt||ext/spl/tests/bug70155.phpt",
          "ext/spl/tests/bug70365.phpt||ext/spl/tests/bug70365.phpt",
          "ext/spl/tests/bug70366.phpt||ext/spl/tests/bug70366.phpt",
          "ext/standard/tests/serialize/bug70172.phpt||ext/standard/tests/serialize/bug70172.phpt",
          "ext/standard/tests/serialize/bug70172_2.phpt||ext/standard/tests/serialize/bug70172_2.phpt",
          "ext/standard/tests/serialize/bug70219.phpt||ext/standard/tests/serialize/bug70219.phpt",
          "ext/standard/var.c||ext/standard/var.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re",
          "ext/xsl/xsltprocessor.c||ext/xsl/xsltprocessor.c",
          "ext/zip/php_zip.c||ext/zip/php_zip.c",
          "ext/zip/tests/bug70350.phpt||ext/zip/tests/bug70350.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_API.c||Zend/zend_API.c": [
          "File: Zend/zend_API.c -> Zend/zend_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1243: {",
          "1244:     zval *prop, tmp;",
          "1245:     zend_string *key;",
          "1246:     zend_property_info *property_info;",
          "1260:    }",
          "1261:   } else {",
          "1262:    if (!object->properties) {",
          "1263:     rebuild_object_properties(object);",
          "1264:    }",
          "1266:    zval_add_ref(prop);",
          "1267:   }",
          "1268:  } ZEND_HASH_FOREACH_END();",
          "",
          "[Removed Lines]",
          "1248:  ZEND_HASH_FOREACH_STR_KEY_VAL(properties, key, prop) {",
          "1249:   property_info = zend_get_property_info(object->ce, key, 1);",
          "1250:   if (property_info != ZEND_WRONG_PROPERTY_INFO &&",
          "1251:       property_info &&",
          "1252:       (property_info->flags & ZEND_ACC_STATIC) == 0) {",
          "1253:    zval *slot = OBJ_PROP(object, property_info->offset);",
          "1254:    zval_ptr_dtor(slot);",
          "1255:    ZVAL_COPY_VALUE(slot, prop);",
          "1256:    zval_add_ref(slot);",
          "1257:    if (object->properties) {",
          "1258:     ZVAL_INDIRECT(&tmp, slot);",
          "1259:     zend_hash_update(object->properties, key, &tmp);",
          "1265:    prop = zend_hash_update(object->properties, key, prop);",
          "",
          "[Added Lines]",
          "1246:     zend_long h;",
          "1249:     ZEND_HASH_FOREACH_KEY_VAL(properties, h, key, prop) {",
          "1250:   if(key) {",
          "1251:    property_info = zend_get_property_info(object->ce, key, 1);",
          "1252:    if (property_info != ZEND_WRONG_PROPERTY_INFO &&",
          "1253:     property_info &&",
          "1254:     (property_info->flags & ZEND_ACC_STATIC) == 0) {",
          "1255:     zval *slot = OBJ_PROP(object, property_info->offset);",
          "1256:     zval_ptr_dtor(slot);",
          "1257:     ZVAL_COPY_VALUE(slot, prop);",
          "1258:     zval_add_ref(slot);",
          "1259:     if (object->properties) {",
          "1260:      ZVAL_INDIRECT(&tmp, slot);",
          "1261:      zend_hash_update(object->properties, key, &tmp);",
          "1262:     }",
          "1263:    } else {",
          "1264:     if (!object->properties) {",
          "1265:      rebuild_object_properties(object);",
          "1266:     }",
          "1267:     prop = zend_hash_update(object->properties, key, prop);",
          "1268:     zval_add_ref(prop);",
          "1274:    prop = zend_hash_index_update(object->properties, h, prop);",
          "",
          "---------------"
        ],
        "ext/exif/exif.c||ext/exif/exif.c": [
          "File: ext/exif/exif.c -> ext/exif/exif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2945:      if (length<byte_count-1) {",
          "2947:       ImageInfo->CopyrightPhotographer  = estrdup(value_ptr);",
          "2949:       spprintf(&ImageInfo->Copyright, 0, \"%s, %s\", value_ptr, value_ptr+length+1);",
          "2953:      } else {",
          "2955:      }",
          "2956:     }",
          "2957:     break;",
          "",
          "[Removed Lines]",
          "2948:       ImageInfo->CopyrightEditor        = estrdup(value_ptr+length+1);",
          "2954:       ImageInfo->Copyright = estrdup(value_ptr);",
          "",
          "[Added Lines]",
          "2948:       ImageInfo->CopyrightEditor        = estrndup(value_ptr+length+1, byte_count-length-1);",
          "2954:       ImageInfo->Copyright = estrndup(value_ptr, byte_count);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3042:     break;",
          "3044:    case TAG_MAKE:",
          "3046:     break;",
          "3047:    case TAG_MODEL:",
          "3049:     break;",
          "3051:    case TAG_MAKER_NOTE:",
          "",
          "[Removed Lines]",
          "3045:     ImageInfo->make = estrdup(value_ptr);",
          "3048:     ImageInfo->model = estrdup(value_ptr);",
          "",
          "[Added Lines]",
          "3045:     ImageInfo->make = estrndup(value_ptr, byte_count);",
          "3048:     ImageInfo->model = estrndup(value_ptr, byte_count);",
          "",
          "---------------"
        ],
        "ext/gmp/gmp.c||ext/gmp/gmp.c": [
          "File: ext/gmp/gmp.c -> ext/gmp/gmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "585: {",
          "586:  mpz_ptr gmpnum;",
          "587:  const unsigned char *p, *max;",
          "589:  int retval = FAILURE;",
          "590:  php_unserialize_data_t unserialize_data = (php_unserialize_data_t) data;",
          "593:  PHP_VAR_UNSERIALIZE_INIT(unserialize_data);",
          "594:  gmp_create(object, &gmpnum);",
          "596:  p = buf;",
          "597:  max = buf + buf_len;",
          "602:  ) {",
          "603:   zend_throw_exception(NULL, \"Could not unserialize number\", 0);",
          "604:   goto exit;",
          "605:  }",
          "611:  ) {",
          "612:   zend_throw_exception(NULL, \"Could not unserialize properties\", 0);",
          "613:   goto exit;",
          "614:  }",
          "617:   zend_hash_copy(",
          "619:    (copy_ctor_func_t) zval_add_ref",
          "620:   );",
          "621:  }",
          "623:  retval = SUCCESS;",
          "624: exit:",
          "626:  PHP_VAR_UNSERIALIZE_DESTROY(unserialize_data);",
          "627:  return retval;",
          "628: }",
          "",
          "[Removed Lines]",
          "588:  zval zv;",
          "592:  ZVAL_UNDEF(&zv);",
          "599:  if (!php_var_unserialize(&zv, &p, max, &unserialize_data)",
          "600:   || Z_TYPE(zv) != IS_STRING",
          "601:   || convert_to_gmp(gmpnum, &zv, 10) == FAILURE",
          "606:  zval_dtor(&zv);",
          "607:  ZVAL_UNDEF(&zv);",
          "609:  if (!php_var_unserialize(&zv, &p, max, &unserialize_data)",
          "610:   || Z_TYPE(zv) != IS_ARRAY",
          "616:  if (zend_hash_num_elements(Z_ARRVAL(zv)) != 0) {",
          "618:    zend_std_get_properties(object), Z_ARRVAL(zv),",
          "625:  zval_dtor(&zv);",
          "",
          "[Added Lines]",
          "588:  zval *zv;",
          "598:  zv = var_tmp_var(&unserialize_data);",
          "599:  if (!php_var_unserialize(zv, &p, max, &unserialize_data)",
          "600:   || Z_TYPE_P(zv) != IS_STRING",
          "601:   || convert_to_gmp(gmpnum, zv, 10) == FAILURE",
          "607:  zv = var_tmp_var(&unserialize_data);",
          "608:  if (!php_var_unserialize(zv, &p, max, &unserialize_data)",
          "609:   || Z_TYPE_P(zv) != IS_ARRAY",
          "615:  if (zend_hash_num_elements(Z_ARRVAL_P(zv)) != 0) {",
          "617:    zend_std_get_properties(object), Z_ARRVAL_P(zv),",
          "",
          "---------------"
        ],
        "ext/gmp/tests/bug70284.phpt||ext/gmp/tests/bug70284.phpt": [
          "File: ext/gmp/tests/bug70284.phpt -> ext/gmp/tests/bug70284.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70284 (Use after free vulnerability in unserialize() with GMP)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"gmp\")) print \"skip\"; ?>",
          "5: --FILE--",
          "6: <?php",
          "8: $inner = 'r:2;a:1:{i:0;a:1:{i:0;r:4;}}';",
          "9: $exploit = 'a:2:{i:0;s:1:\"1\";i:1;C:3:\"GMP\":'.strlen($inner).':{'.$inner.'}}';",
          "11: $data = unserialize($exploit);",
          "13: $fakezval = ptr2str(1122334455);",
          "14: $fakezval .= ptr2str(0);",
          "15: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "16: $fakezval .= \"\\x01\";",
          "17: $fakezval .= \"\\x00\";",
          "18: $fakezval .= \"\\x00\\x00\";",
          "20: for ($i = 0; $i < 5; $i++) {",
          "21:  $v[$i] = $fakezval.$i;",
          "22: }",
          "24: var_dump($data);",
          "26: function ptr2str($ptr)",
          "27: {",
          "28: $out = '';",
          "29:  for ($i = 0; $i < 8; $i++) {",
          "30:   $out .= chr($ptr & 0xff);",
          "31:   $ptr >>= 8;",
          "32:  }",
          "33:  return $out;",
          "34: }",
          "35: ?>",
          "36: --EXPECTF--",
          "37: array(2) {",
          "38:   [0]=>",
          "39:   string(1) \"1\"",
          "40:   [1]=>",
          "41:   object(GMP)#%d (2) {",
          "42:     [0]=>",
          "43:     array(1) {",
          "44:       [0]=>",
          "45:       string(1) \"1\"",
          "46:     }",
          "47:     [\"num\"]=>",
          "48:     string(1) \"1\"",
          "49:   }",
          "50: }",
          "",
          "---------------"
        ],
        "ext/hash/hash_haval.c||ext/hash/hash_haval.c": [
          "File: ext/hash/hash_haval.c -> ext/hash/hash_haval.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:  padLen = (index < 118) ? (118 - index) : (246 - index);",
          "341:  PHP_HAVALUpdate(context, PADDING, padLen);",
          "",
          "[Removed Lines]",
          "339:  index = (unsigned int) ((context->count[0] >> 3) & 0x3f);",
          "",
          "[Added Lines]",
          "339:  index = (unsigned int) ((context->count[0] >> 3) & 0x7f);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394:  padLen = (index < 118) ? (118 - index) : (246 - index);",
          "395:  PHP_HAVALUpdate(context, PADDING, padLen);",
          "",
          "[Removed Lines]",
          "393:  index = (unsigned int) ((context->count[0] >> 3) & 0x3f);",
          "",
          "[Added Lines]",
          "393:  index = (unsigned int) ((context->count[0] >> 3) & 0x7f);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "448:  padLen = (index < 118) ? (118 - index) : (246 - index);",
          "449:  PHP_HAVALUpdate(context, PADDING, padLen);",
          "",
          "[Removed Lines]",
          "447:  index = (unsigned int) ((context->count[0] >> 3) & 0x3f);",
          "",
          "[Added Lines]",
          "447:  index = (unsigned int) ((context->count[0] >> 3) & 0x7f);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "488:  padLen = (index < 118) ? (118 - index) : (246 - index);",
          "489:  PHP_HAVALUpdate(context, PADDING, padLen);",
          "",
          "[Removed Lines]",
          "487:  index = (unsigned int) ((context->count[0] >> 3) & 0x3f);",
          "",
          "[Added Lines]",
          "487:  index = (unsigned int) ((context->count[0] >> 3) & 0x7f);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "529:  padLen = (index < 118) ? (118 - index) : (246 - index);",
          "530:  PHP_HAVALUpdate(context, PADDING, padLen);",
          "",
          "[Removed Lines]",
          "528:  index = (unsigned int) ((context->count[0] >> 3) & 0x3f);",
          "",
          "[Added Lines]",
          "528:  index = (unsigned int) ((context->count[0] >> 3) & 0x7f);",
          "",
          "---------------"
        ],
        "ext/hash/tests/bug70312.phpt||ext/hash/tests/bug70312.phpt": [
          "File: ext/hash/tests/bug70312.phpt -> ext/hash/tests/bug70312.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70312 HAVAL gives wrong hashes in specific cases",
          "3: --SKIPIF--",
          "4: <?php if(!extension_loaded(\"hash\")) print \"skip\"; ?>",
          "5: --FILE--",
          "6: <?php",
          "7: var_dump(hash('haval128,5', '1234567890123456789012345678901234567890123456789012345678901234'));",
          "8: var_dump(hash('haval160,5', '1234567890123456789012345678901234567890123456789012345678901234'));",
          "9: var_dump(hash('haval192,5', '1234567890123456789012345678901234567890123456789012345678901234'));",
          "10: var_dump(hash('haval224,5', '1234567890123456789012345678901234567890123456789012345678901234'));",
          "11: var_dump(hash('haval256,5', '1234567890123456789012345678901234567890123456789012345678901234'));",
          "12: ?>",
          "13: --EXPECTF--",
          "14: string(32) \"f3f0d23819b87228b4b70ee350afaa9d\"",
          "15: string(40) \"aded6485e137f11d7292212ba3fa961714df0564\"",
          "16: string(48) \"e53da2b16269fe732e9a898a96707a9f28404d7333b02286\"",
          "17: string(56) \"c574fb307f0817b514b9bb2e7c4bfaffb7ad667aca3c8b523fefcf10\"",
          "18: string(64) \"fb73c19300b14d5cb393d929bf005e6c2d459a4c9c009e9813af1d2d3637ee8f\"",
          "",
          "---------------"
        ],
        "ext/hash/tests/hash_file_basic1.phpt||ext/hash/tests/hash_file_basic1.phpt": [
          "File: ext/hash/tests/hash_file_basic1.phpt -> ext/hash/tests/hash_file_basic1.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: adler32: ff87222e",
          "65: crc32: 61664d33",
          "66: gost: d9e65f0c0c2ef944e4f8a01f4a46365c4f33a2853756878182a7f03e1490a4cd",
          "68: md2: 70f791c0d8fa9edd7d08e32fcba8c354",
          "69: md4: a9d034b16bb290c57a645afd6f14cd3b",
          "70: md5: 704bf818448f5bbb94061332d2c889aa",
          "",
          "[Removed Lines]",
          "67: haval128,3: 8bb81269aca8b7f87829020d76a4e841",
          "",
          "[Added Lines]",
          "67: haval128,3: c25962b13383c3ed9f13817c8f2ae7d6",
          "",
          "---------------"
        ],
        "ext/hash/tests/hash_hmac_basic.phpt||ext/hash/tests/hash_hmac_basic.phpt": [
          "File: ext/hash/tests/hash_hmac_basic.phpt -> ext/hash/tests/hash_hmac_basic.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: adler32: 12c803f7",
          "46: crc32: 96859101",
          "47: gost: a4a3c80bdf3f8665bf07376a34dc9c1b11af7c813f4928f62e39f0c0dc564dad",
          "49: md2: 6d111dab563025e4cb5f4425c991fa12",
          "50: md4: 10cdbfe843000c623f8b8da0d5d20b0b",
          "51: md5: 2a632783e2812cf23de100d7d6a463ae",
          "",
          "[Removed Lines]",
          "48: haval128,3: 82cd0f4bd36729b5c80c33efa8c13ac5",
          "",
          "[Added Lines]",
          "48: haval128,3: 4d1318607f0406bd1b7bd50907772672",
          "",
          "---------------"
        ],
        "ext/hash/tests/hash_hmac_file_basic.phpt||ext/hash/tests/hash_hmac_file_basic.phpt": [
          "File: ext/hash/tests/hash_hmac_file_basic.phpt -> ext/hash/tests/hash_hmac_file_basic.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "73: adler32: 0f8c02f9",
          "74: crc32: f2a60b9c",
          "75: gost: 94c39a40d5db852a8dc3d24e37eebf2d53e3d711457c59cd02b614f792a9d918",
          "77: md2: a685475e600314bb549ab4f33c3b27cb",
          "78: md4: cbc6bff781f48f57378d3effa27553e4",
          "79: md5: 8bddf39dd1c566c27acc7fa85ec36acf",
          "",
          "[Removed Lines]",
          "76: haval128,3: e8fcff647f1a675acb429130fb94a17e",
          "",
          "[Added Lines]",
          "76: haval128,3: f1cea637451097d790354a86de3f54a3",
          "",
          "---------------"
        ],
        "ext/pcre/php_pcre.c||ext/pcre/php_pcre.c": [
          "File: ext/pcre/php_pcre.c -> ext/pcre/php_pcre.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "759:    if (subpats != NULL) {",
          "762:      if (subpat_names) {",
          "763:       efree(subpat_names);",
          "764:      }",
          "",
          "[Removed Lines]",
          "761:     if (pcre_get_substring_list(subject, offsets, count, &stringlist) < 0) {",
          "",
          "[Added Lines]",
          "761:     if ((offsets[1] - offsets[0] < 0) || pcre_get_substring_list(subject, offsets, count, &stringlist) < 0) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1177:   piece = subject + start_offset;",
          "1181:    if (UNEXPECTED(replace_count)) {",
          "1182:     ++*replace_count;",
          "1183:    }",
          "",
          "[Removed Lines]",
          "1180:   if (EXPECTED(count > 0 && limit)) {",
          "",
          "[Added Lines]",
          "1180:   if (EXPECTED(count > 0 && (offsets[1] - offsets[0] >= 0) && limit)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1799:   }",
          "1803:    if (!no_empty || &subject[offsets[0]] != last_match) {",
          "1805:     if (offset_capture) {",
          "",
          "[Removed Lines]",
          "1802:   if (count > 0) {",
          "",
          "[Added Lines]",
          "1802:   if (count > 0 && (offsets[1] - offsets[0] >= 0)) {",
          "",
          "---------------"
        ],
        "ext/pcre/tests/bug70345.phpt||ext/pcre/tests/bug70345.phpt": [
          "File: ext/pcre/tests/bug70345.phpt -> ext/pcre/tests/bug70345.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70345 (Multiple vulnerabilities related to PCRE functions)",
          "3: --FILE--",
          "4: <?php",
          "5: $regex = '/(?=xyz\\K)/';",
          "6: $subject = \"aaaaxyzaaaa\";",
          "8: $v = preg_split($regex, $subject);",
          "9: print_r($v);",
          "11: $regex = '/(a(?=xyz\\K))/';",
          "12: $subject = \"aaaaxyzaaaa\";",
          "13: preg_match($regex, $subject, $matches);",
          "15: var_dump($matches);",
          "16: --EXPECTF--",
          "17: Array",
          "18: (",
          "19:     [0] => aaaaxyzaaaa",
          "20: )",
          "22: Warning: preg_match(): Get subpatterns list failed in %s on line %d",
          "23: array(0) {",
          "24: }",
          "",
          "---------------"
        ],
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: static int php_session_rfc1867_callback(unsigned int event, void *event_data, void **extra);",
          "66: static int (*php_session_rfc1867_orig_callback)(unsigned int event, void *event_data, void **extra);",
          "69: zend_class_entry *php_session_class_entry;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67: static void php_session_track_init(void);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "139: {",
          "140:  int retval = SUCCESS;",
          "142:  if (PS(session_status) != php_session_active) {",
          "143:   php_error_docref(NULL, E_WARNING, \"Trying to destroy uninitialized session\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:  zend_string *var_name;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "235:  }",
          "236:  if (PS(serializer)->decode(ZSTR_VAL(data), ZSTR_LEN(data)) == FAILURE) {",
          "237:   php_session_destroy();",
          "238:   php_error_docref(NULL, E_WARNING, \"Failed to decode session object. Session has been destroyed\");",
          "239:   return FAILURE;",
          "240:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "240:   php_session_track_init();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "952:     var_replace(&var_hash, &current, zv);",
          "953:    } else {",
          "954:     zval_ptr_dtor(&current);",
          "955:    }",
          "956:   }",
          "957:   PS_ADD_VARL(name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "958:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "959:     return FAILURE;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1042:     var_replace(&var_hash, &current, zv);",
          "1043:    } else {",
          "1044:     zval_ptr_dtor(&current);",
          "1045:    }",
          "1046:   }",
          "1047:   PS_ADD_VARL(name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1050:     PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "1051:     return FAILURE;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2169:  }",
          "2171:  if (php_session_decode(str) == FAILURE) {",
          "2174:  }",
          "2175:  RETURN_TRUE;",
          "2176: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2179:   RETURN_FALSE;",
          "",
          "---------------"
        ],
        "ext/session/tests/session_decode_error2.phpt||ext/session/tests/session_decode_error2.phpt": [
          "File: ext/session/tests/session_decode_error2.phpt -> ext/session/tests/session_decode_error2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: var_dump(session_start());",
          "20: for($index = 0; $index < strlen($data); $index++) {",
          "21:     echo \"\\n-- Iteration $index --\\n\";",
          "22:     $encoded = substr($data, 0, $index);",
          "23:     var_dump(session_decode($encoded));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:  if(session_status() != PHP_SESSION_ACTIVE) { session_start(); }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53: }",
          "55: -- Iteration 4 --",
          "60: }",
          "62: -- Iteration 5 --",
          "67: }",
          "69: -- Iteration 6 --",
          "74: }",
          "76: -- Iteration 7 --",
          "81: }",
          "83: -- Iteration 8 --",
          "88: }",
          "90: -- Iteration 9 --",
          "95: }",
          "97: -- Iteration 10 --",
          "102: }",
          "104: -- Iteration 11 --",
          "109: }",
          "111: -- Iteration 12 --",
          "116: }",
          "118: -- Iteration 13 --",
          "123: }",
          "125: -- Iteration 14 --",
          "130: }",
          "132: -- Iteration 15 --",
          "137: }",
          "139: -- Iteration 16 --",
          "144: }",
          "146: -- Iteration 17 --",
          "151: }",
          "153: -- Iteration 18 --",
          "158: }",
          "160: -- Iteration 19 --",
          "165: }",
          "167: -- Iteration 20 --",
          "172: }",
          "174: -- Iteration 21 --",
          "179: }",
          "181: -- Iteration 22 --",
          "186: }",
          "188: -- Iteration 23 --",
          "193: }",
          "195: -- Iteration 24 --",
          "200: }",
          "202: -- Iteration 25 --",
          "207: }",
          "209: -- Iteration 26 --",
          "214: }",
          "216: -- Iteration 27 --",
          "221: }",
          "223: -- Iteration 28 --",
          "228: }",
          "230: -- Iteration 29 --",
          "235: }",
          "237: -- Iteration 30 --",
          "242: }",
          "244: -- Iteration 31 --",
          "249: }",
          "251: -- Iteration 32 --",
          "256: }",
          "258: -- Iteration 33 --",
          "263: }",
          "265: -- Iteration 34 --",
          "",
          "[Removed Lines]",
          "56: bool(true)",
          "57: array(1) {",
          "58:   [\"foo\"]=>",
          "59:   NULL",
          "63: bool(true)",
          "64: array(1) {",
          "65:   [\"foo\"]=>",
          "66:   NULL",
          "70: bool(true)",
          "71: array(1) {",
          "72:   [\"foo\"]=>",
          "73:   NULL",
          "77: bool(true)",
          "78: array(1) {",
          "79:   [\"foo\"]=>",
          "80:   NULL",
          "84: bool(true)",
          "85: array(1) {",
          "86:   [\"foo\"]=>",
          "87:   NULL",
          "91: bool(true)",
          "92: array(1) {",
          "93:   [\"foo\"]=>",
          "94:   NULL",
          "98: bool(true)",
          "99: array(1) {",
          "100:   [\"foo\"]=>",
          "101:   NULL",
          "105: bool(true)",
          "106: array(1) {",
          "107:   [\"foo\"]=>",
          "108:   NULL",
          "112: bool(true)",
          "113: array(1) {",
          "114:   [\"foo\"]=>",
          "115:   NULL",
          "119: bool(true)",
          "120: array(1) {",
          "121:   [\"foo\"]=>",
          "122:   NULL",
          "126: bool(true)",
          "127: array(1) {",
          "128:   [\"foo\"]=>",
          "129:   NULL",
          "133: bool(true)",
          "134: array(1) {",
          "135:   [\"foo\"]=>",
          "136:   NULL",
          "140: bool(true)",
          "141: array(1) {",
          "142:   [\"foo\"]=>",
          "143:   NULL",
          "147: bool(true)",
          "148: array(1) {",
          "149:   [\"foo\"]=>",
          "150:   NULL",
          "154: bool(true)",
          "155: array(1) {",
          "156:   [\"foo\"]=>",
          "157:   NULL",
          "161: bool(true)",
          "162: array(1) {",
          "163:   [\"foo\"]=>",
          "164:   NULL",
          "168: bool(true)",
          "169: array(1) {",
          "170:   [\"foo\"]=>",
          "171:   NULL",
          "175: bool(true)",
          "176: array(1) {",
          "177:   [\"foo\"]=>",
          "178:   NULL",
          "182: bool(true)",
          "183: array(1) {",
          "184:   [\"foo\"]=>",
          "185:   NULL",
          "189: bool(true)",
          "190: array(1) {",
          "191:   [\"foo\"]=>",
          "192:   NULL",
          "196: bool(true)",
          "197: array(1) {",
          "198:   [\"foo\"]=>",
          "199:   NULL",
          "203: bool(true)",
          "204: array(1) {",
          "205:   [\"foo\"]=>",
          "206:   NULL",
          "210: bool(true)",
          "211: array(1) {",
          "212:   [\"foo\"]=>",
          "213:   NULL",
          "217: bool(true)",
          "218: array(1) {",
          "219:   [\"foo\"]=>",
          "220:   NULL",
          "224: bool(true)",
          "225: array(1) {",
          "226:   [\"foo\"]=>",
          "227:   NULL",
          "231: bool(true)",
          "232: array(1) {",
          "233:   [\"foo\"]=>",
          "234:   NULL",
          "238: bool(true)",
          "239: array(1) {",
          "240:   [\"foo\"]=>",
          "241:   NULL",
          "245: bool(true)",
          "246: array(1) {",
          "247:   [\"foo\"]=>",
          "248:   NULL",
          "252: bool(true)",
          "253: array(1) {",
          "254:   [\"foo\"]=>",
          "255:   NULL",
          "259: bool(true)",
          "260: array(1) {",
          "261:   [\"foo\"]=>",
          "262:   NULL",
          "",
          "[Added Lines]",
          "58: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "59: bool(false)",
          "60: array(0) {",
          "65: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "66: bool(false)",
          "67: array(0) {",
          "72: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "73: bool(false)",
          "74: array(0) {",
          "79: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "80: bool(false)",
          "81: array(0) {",
          "86: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "87: bool(false)",
          "88: array(0) {",
          "93: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "94: bool(false)",
          "95: array(0) {",
          "100: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "101: bool(false)",
          "102: array(0) {",
          "107: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "108: bool(false)",
          "109: array(0) {",
          "114: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "115: bool(false)",
          "116: array(0) {",
          "121: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "122: bool(false)",
          "123: array(0) {",
          "128: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "129: bool(false)",
          "130: array(0) {",
          "135: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "136: bool(false)",
          "137: array(0) {",
          "142: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "143: bool(false)",
          "144: array(0) {",
          "149: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "150: bool(false)",
          "151: array(0) {",
          "156: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "157: bool(false)",
          "158: array(0) {",
          "163: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "164: bool(false)",
          "165: array(0) {",
          "170: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "171: bool(false)",
          "172: array(0) {",
          "177: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "178: bool(false)",
          "179: array(0) {",
          "184: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "185: bool(false)",
          "186: array(0) {",
          "191: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "192: bool(false)",
          "193: array(0) {",
          "198: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "199: bool(false)",
          "200: array(0) {",
          "205: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "206: bool(false)",
          "207: array(0) {",
          "212: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "213: bool(false)",
          "214: array(0) {",
          "219: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "220: bool(false)",
          "221: array(0) {",
          "226: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "227: bool(false)",
          "228: array(0) {",
          "233: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "234: bool(false)",
          "235: array(0) {",
          "240: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "241: bool(false)",
          "242: array(0) {",
          "247: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "248: bool(false)",
          "249: array(0) {",
          "254: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "255: bool(false)",
          "256: array(0) {",
          "261: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "262: bool(false)",
          "263: array(0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "333: }",
          "335: -- Iteration 39 --",
          "349: }",
          "351: -- Iteration 40 --",
          "365: }",
          "367: -- Iteration 41 --",
          "381: }",
          "383: -- Iteration 42 --",
          "397: }",
          "399: -- Iteration 43 --",
          "",
          "[Removed Lines]",
          "336: bool(true)",
          "337: array(2) {",
          "338:   [\"foo\"]=>",
          "339:   array(3) {",
          "340:     [0]=>",
          "341:     int(1)",
          "342:     [1]=>",
          "343:     int(2)",
          "344:     [2]=>",
          "345:     int(3)",
          "346:   }",
          "347:   [\"guff\"]=>",
          "348:   NULL",
          "352: bool(true)",
          "353: array(2) {",
          "354:   [\"foo\"]=>",
          "355:   array(3) {",
          "356:     [0]=>",
          "357:     int(1)",
          "358:     [1]=>",
          "359:     int(2)",
          "360:     [2]=>",
          "361:     int(3)",
          "362:   }",
          "363:   [\"guff\"]=>",
          "364:   NULL",
          "368: bool(true)",
          "369: array(2) {",
          "370:   [\"foo\"]=>",
          "371:   array(3) {",
          "372:     [0]=>",
          "373:     int(1)",
          "374:     [1]=>",
          "375:     int(2)",
          "376:     [2]=>",
          "377:     int(3)",
          "378:   }",
          "379:   [\"guff\"]=>",
          "380:   NULL",
          "384: bool(true)",
          "385: array(2) {",
          "386:   [\"foo\"]=>",
          "387:   array(3) {",
          "388:     [0]=>",
          "389:     int(1)",
          "390:     [1]=>",
          "391:     int(2)",
          "392:     [2]=>",
          "393:     int(3)",
          "394:   }",
          "395:   [\"guff\"]=>",
          "396:   NULL",
          "",
          "[Added Lines]",
          "338: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "339: bool(false)",
          "340: array(0) {",
          "345: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "346: bool(false)",
          "347: array(0) {",
          "352: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "353: bool(false)",
          "354: array(0) {",
          "359: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "360: bool(false)",
          "361: array(0) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "512: }",
          "514: -- Iteration 48 --",
          "537: }",
          "539: -- Iteration 49 --",
          "562: }",
          "564: -- Iteration 50 --",
          "587: }",
          "589: -- Iteration 51 --",
          "612: }",
          "",
          "[Removed Lines]",
          "515: bool(true)",
          "516: array(3) {",
          "517:   [\"foo\"]=>",
          "518:   &array(3) {",
          "519:     [0]=>",
          "520:     int(1)",
          "521:     [1]=>",
          "522:     int(2)",
          "523:     [2]=>",
          "524:     int(3)",
          "525:   }",
          "526:   [\"guff\"]=>",
          "527:   &array(3) {",
          "528:     [0]=>",
          "529:     int(1)",
          "530:     [1]=>",
          "531:     int(2)",
          "532:     [2]=>",
          "533:     int(3)",
          "534:   }",
          "535:   [\"blah\"]=>",
          "536:   NULL",
          "540: bool(true)",
          "541: array(3) {",
          "542:   [\"foo\"]=>",
          "543:   &array(3) {",
          "544:     [0]=>",
          "545:     int(1)",
          "546:     [1]=>",
          "547:     int(2)",
          "548:     [2]=>",
          "549:     int(3)",
          "550:   }",
          "551:   [\"guff\"]=>",
          "552:   &array(3) {",
          "553:     [0]=>",
          "554:     int(1)",
          "555:     [1]=>",
          "556:     int(2)",
          "557:     [2]=>",
          "558:     int(3)",
          "559:   }",
          "560:   [\"blah\"]=>",
          "561:   NULL",
          "565: bool(true)",
          "566: array(3) {",
          "567:   [\"foo\"]=>",
          "568:   &array(3) {",
          "569:     [0]=>",
          "570:     int(1)",
          "571:     [1]=>",
          "572:     int(2)",
          "573:     [2]=>",
          "574:     int(3)",
          "575:   }",
          "576:   [\"guff\"]=>",
          "577:   &array(3) {",
          "578:     [0]=>",
          "579:     int(1)",
          "580:     [1]=>",
          "581:     int(2)",
          "582:     [2]=>",
          "583:     int(3)",
          "584:   }",
          "585:   [\"blah\"]=>",
          "586:   NULL",
          "590: bool(true)",
          "591: array(3) {",
          "592:   [\"foo\"]=>",
          "593:   &array(3) {",
          "594:     [0]=>",
          "595:     int(1)",
          "596:     [1]=>",
          "597:     int(2)",
          "598:     [2]=>",
          "599:     int(3)",
          "600:   }",
          "601:   [\"guff\"]=>",
          "602:   &array(3) {",
          "603:     [0]=>",
          "604:     int(1)",
          "605:     [1]=>",
          "606:     int(2)",
          "607:     [2]=>",
          "608:     int(3)",
          "609:   }",
          "610:   [\"blah\"]=>",
          "611:   NULL",
          "613: bool(true)",
          "614: Done",
          "",
          "[Added Lines]",
          "481: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "482: bool(false)",
          "483: array(0) {",
          "488: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "489: bool(false)",
          "490: array(0) {",
          "495: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "496: bool(false)",
          "497: array(0) {",
          "502: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s/session_decode_error2.php on line %d",
          "503: bool(false)",
          "504: array(0) {",
          "507: Warning: session_destroy(): Trying to destroy uninitialized session in %s/session_decode_error2.php on line %d",
          "508: bool(false)",
          "509: Done",
          "",
          "---------------"
        ],
        "ext/soap/soap.c||ext/soap/soap.c": [
          "File: ext/soap/soap.c -> ext/soap/soap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1505:    add_soap_fault_ex(&exception_object, this_ptr, \"Server\", \"Internal Error\", NULL, NULL);",
          "1506:   }",
          "1507:   soap_server_fault_ex(function, &exception_object, NULL);",
          "1509: }",
          "",
          "[Removed Lines]",
          "1508:  }",
          "",
          "[Added Lines]",
          "1508:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2924:     free_soap_headers = 1;",
          "2925:    }",
          "2926:    ZEND_HASH_FOREACH_VAL(default_headers, tmp) {",
          "2929:    } ZEND_HASH_FOREACH_END();",
          "2930:   } else {",
          "2931:    soap_headers = Z_ARRVAL_P(tmp);",
          "",
          "[Removed Lines]",
          "2927:     Z_ADDREF_P(tmp);",
          "2928:     zend_hash_next_index_insert(soap_headers, tmp);",
          "",
          "[Added Lines]",
          "2927:     if(Z_TYPE_P(tmp) == IS_OBJECT) {",
          "2928:      Z_ADDREF_P(tmp);",
          "2929:      zend_hash_next_index_insert(soap_headers, tmp);",
          "2930:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4332:   zval* header;",
          "4334:   ZEND_HASH_FOREACH_VAL(soap_headers, header) {",
          "4336:    zval *name, *ns, *tmp;",
          "4338:    if ((name = zend_hash_str_find(ht, \"name\", sizeof(\"name\")-1)) != NULL &&",
          "4339:        Z_TYPE_P(name) == IS_STRING &&",
          "4340:        (ns = zend_hash_str_find(ht, \"namespace\", sizeof(\"namespace\")-1)) != NULL &&",
          "",
          "[Removed Lines]",
          "4335:    HashTable *ht = Z_OBJPROP_P(header);",
          "",
          "[Added Lines]",
          "4337:    HashTable *ht;",
          "4340:    if (Z_TYPE_P(header) != IS_OBJECT) {",
          "4341:     continue;",
          "4342:    }",
          "4344:    ht = Z_OBJPROP_P(header);",
          "",
          "---------------"
        ],
        "ext/soap/tests/bug70388.phpt||ext/soap/tests/bug70388.phpt": [
          "File: ext/soap/tests/bug70388.phpt -> ext/soap/tests/bug70388.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70388 (SOAP serialize_function_call() type confusion / RCE)",
          "3: --SKIPIF--",
          "4: <?php require_once('skipif.inc'); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: $dummy = unserialize('O:10:\"SoapClient\":3:{s:3:\"uri\";s:1:\"X\";s:8:\"location\";s:22:\"http://localhost/a.xml\";s:17:\"__default_headers\";a:1:{i:1;s:1337:\"'.str_repeat(\"X\", 1337).'\";}}');",
          "8: try {",
          "9:  var_dump($dummy->notexisting());",
          "10: } catch(Exception $e) {",
          "11:  var_dump($e->getMessage());",
          "12:  var_dump(get_class($e));",
          "13: }",
          "14: ?>",
          "15: --EXPECTF--",
          "16: string(%d) \"%s\"",
          "17: string(9) \"SoapFault\"",
          "",
          "---------------"
        ],
        "ext/spl/spl_dllist.c||ext/spl/spl_dllist.c": [
          "File: ext/spl/spl_dllist.c -> ext/spl/spl_dllist.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1210:   if (!php_var_unserialize(elem, &p, s + buf_len, &var_hash)) {",
          "1211:    goto error;",
          "1212:   }",
          "1214:   spl_ptr_llist_push(intern->llist, elem);",
          "1215:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1213:   var_push_dtor(&var_hash, elem);",
          "",
          "---------------"
        ],
        "ext/spl/tests/bug70155.phpt||ext/spl/tests/bug70155.phpt": [
          "File: ext/spl/tests/bug70155.phpt -> ext/spl/tests/bug70155.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: SPL: Bug #70155 Use After Free Vulnerability in unserialize() with SPLArrayObject",
          "3: --FILE--",
          "4: <?php",
          "5: $inner = 'x:i:0;O:12:\"DateInterval\":1:{s:1:\"y\";i:3;};m:a:1:{i:0;R:2;}';",
          "6: $exploit = 'C:11:\"ArrayObject\":'.strlen($inner).':{'.$inner.'}';",
          "7: $data = unserialize($exploit);",
          "9: var_dump($data);",
          "10: ?>",
          "11: ===DONE===",
          "12: --EXPECTF--",
          "13: object(ArrayObject)#1 (2) {",
          "14:   [0]=>",
          "15:   int(0)",
          "16:   [\"storage\":\"ArrayObject\":private]=>",
          "17:   object(DateInterval)#2 (15) {",
          "18:     [\"y\"]=>",
          "19:     int(3)",
          "20:     [\"m\"]=>",
          "21:     int(-1)",
          "22:     [\"d\"]=>",
          "23:     int(-1)",
          "24:     [\"h\"]=>",
          "25:     int(-1)",
          "26:     [\"i\"]=>",
          "27:     int(-1)",
          "28:     [\"s\"]=>",
          "29:     int(-1)",
          "30:     [\"weekday\"]=>",
          "31:     int(-1)",
          "32:     [\"weekday_behavior\"]=>",
          "33:     int(-1)",
          "34:     [\"first_last_day_of\"]=>",
          "35:     int(-1)",
          "36:     [\"invert\"]=>",
          "37:     int(0)",
          "38:     [\"days\"]=>",
          "39:     int(-1)",
          "40:     [\"special_type\"]=>",
          "41:     int(0)",
          "42:     [\"special_amount\"]=>",
          "43:     int(-1)",
          "44:     [\"have_weekday_relative\"]=>",
          "45:     int(0)",
          "46:     [\"have_special_relative\"]=>",
          "47:     int(0)",
          "48:   }",
          "49: }",
          "50: ===DONE===",
          "",
          "---------------"
        ],
        "ext/spl/tests/bug70365.phpt||ext/spl/tests/bug70365.phpt": [
          "File: ext/spl/tests/bug70365.phpt -> ext/spl/tests/bug70365.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: SPL: Bug #70365 use-after-free vulnerability in unserialize() with SplObjectStorage",
          "3: --FILE--",
          "4: <?php",
          "5: class obj {",
          "6:  var $ryat;",
          "7:  function __wakeup() {",
          "8:   $this->ryat = 1;",
          "9:  }",
          "10: }",
          "12: $fakezval = ptr2str(1122334455);",
          "13: $fakezval .= ptr2str(0);",
          "14: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "15: $fakezval .= \"\\x01\";",
          "16: $fakezval .= \"\\x00\";",
          "17: $fakezval .= \"\\x00\\x00\";",
          "19: $inner = 'x:i:1;O:8:\"stdClass\":0:{},i:1;;m:a:0:{}';",
          "20: $exploit = 'a:5:{i:0;i:1;i:1;C:16:\"SplObjectStorage\":'.strlen($inner).':{'.$inner.'}i:2;O:3:\"obj\":1:{s:4:\"ryat\";R:3;}i:3;R:6;i:4;s:'.strlen($fakezval).':\"'.$fakezval.'\";}';",
          "22: $data = unserialize($exploit);",
          "24: var_dump($data);",
          "26: function ptr2str($ptr)",
          "27: {",
          "28:  $out = '';",
          "29:  for ($i = 0; $i < 8; $i++) {",
          "30:   $out .= chr($ptr & 0xff);",
          "31:   $ptr >>= 8;",
          "32:  }",
          "33:  return $out;",
          "34: }",
          "35: --EXPECTF--",
          "36: array(5) {",
          "37:   [0]=>",
          "38:   int(1)",
          "39:   [1]=>",
          "40:   &int(1)",
          "41:   [2]=>",
          "42:   object(obj)#%d (1) {",
          "43:     [\"ryat\"]=>",
          "44:     &int(1)",
          "45:   }",
          "46:   [3]=>",
          "47:   int(1)",
          "48:   [4]=>",
          "49:   string(24) \"%s\"",
          "50: }",
          "",
          "---------------"
        ],
        "ext/spl/tests/bug70366.phpt||ext/spl/tests/bug70366.phpt": [
          "File: ext/spl/tests/bug70366.phpt -> ext/spl/tests/bug70366.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: SPL: Bug #70366 use-after-free vulnerability in unserialize() with SplDoublyLinkedList",
          "3: --FILE--",
          "4: <?php",
          "5: class obj {",
          "6:  var $ryat;",
          "7:  function __wakeup() {",
          "8:   $this->ryat = 1;",
          "9:  }",
          "10: }",
          "12: $fakezval = ptr2str(1122334455);",
          "13: $fakezval .= ptr2str(0);",
          "14: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "15: $fakezval .= \"\\x01\";",
          "16: $fakezval .= \"\\x00\";",
          "17: $fakezval .= \"\\x00\\x00\";",
          "19: $inner = 'i:1234;:i:1;';",
          "20: $exploit = 'a:5:{i:0;i:1;i:1;C:19:\"SplDoublyLinkedList\":'.strlen($inner).':{'.$inner.'}i:2;O:3:\"obj\":1:{s:4:\"ryat\";R:3;}i:3;a:1:{i:0;R:5;}i:4;s:'.strlen($fakezval).':\"'.$fakezval.'\";}';",
          "22: $data = unserialize($exploit);",
          "24: var_dump($data);",
          "26: function ptr2str($ptr)",
          "27: {",
          "28:  $out = '';",
          "29:  for ($i = 0; $i < 8; $i++) {",
          "30:   $out .= chr($ptr & 0xff);",
          "31:   $ptr >>= 8;",
          "32:  }",
          "33:  return $out;",
          "34: }",
          "35: ?>",
          "36: --EXPECTF--",
          "37: array(5) {",
          "38:   [0]=>",
          "39:   int(1)",
          "40:   [1]=>",
          "41:   &int(1)",
          "42:   [2]=>",
          "43:   object(obj)#%d (1) {",
          "44:     [\"ryat\"]=>",
          "45:     &int(1)",
          "46:   }",
          "47:   [3]=>",
          "48:   array(1) {",
          "49:     [0]=>",
          "50:     int(1)",
          "51:   }",
          "52:   [4]=>",
          "53:   string(24) \"%s\"",
          "54: }",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug70172.phpt||ext/standard/tests/serialize/bug70172.phpt": [
          "File: ext/standard/tests/serialize/bug70172.phpt -> ext/standard/tests/serialize/bug70172.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70172 - Use After Free Vulnerability in unserialize()",
          "3: --XFAIL--",
          "4: Memory leak on debug build, needs fix.",
          "5: --FILE--",
          "6: <?php",
          "7: class obj implements Serializable {",
          "8:  var $data;",
          "9:  function serialize() {",
          "10:   return serialize($this->data);",
          "11:  }",
          "12:  function unserialize($data) {",
          "13:   $this->data = unserialize($data);",
          "14:  }",
          "15: }",
          "17: $fakezval = ptr2str(1122334455);",
          "18: $fakezval .= ptr2str(0);",
          "19: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "20: $fakezval .= \"\\x01\";",
          "21: $fakezval .= \"\\x00\";",
          "22: $fakezval .= \"\\x00\\x00\";",
          "24: $inner = 'r:2;';",
          "25: $exploit = 'a:2:{i:0;i:1;i:1;C:3:\"obj\":'.strlen($inner).':{'.$inner.'}}';",
          "27: $data = unserialize($exploit);",
          "29: for ($i = 0; $i < 5; $i++) {",
          "30:  $v[$i] = $fakezval.$i;",
          "31: }",
          "33: var_dump($data);",
          "35: function ptr2str($ptr)",
          "36: {",
          "37:  $out = '';",
          "38:  for ($i = 0; $i < 8; $i++) {",
          "39:   $out .= chr($ptr & 0xff);",
          "40:   $ptr >>= 8;",
          "41:  }",
          "42:  return $out;",
          "43: }",
          "44: ?>",
          "45: --EXPECTF--",
          "46: array(2) {",
          "47:   [0]=>",
          "48:   int(1)",
          "49:   [1]=>",
          "50:   object(obj)#%d (1) {",
          "51:     [\"data\"]=>",
          "52:     int(1)",
          "53:   }",
          "54: }",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug70172_2.phpt||ext/standard/tests/serialize/bug70172_2.phpt": [
          "File: ext/standard/tests/serialize/bug70172_2.phpt -> ext/standard/tests/serialize/bug70172_2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70172 - Use After Free Vulnerability in unserialize()",
          "3: --FILE--",
          "4: <?php",
          "5: class obj implements Serializable {",
          "6:  var $data;",
          "7:  function serialize() {",
          "8:   return serialize($this->data);",
          "9:  }",
          "10:  function unserialize($data) {",
          "11:   $this->data = unserialize($data);",
          "12:  }",
          "13: }",
          "15: class obj2 {",
          "16:  var $ryat;",
          "17:  function __wakeup() {",
          "18:   $this->ryat = 1;",
          "19:  }",
          "20: }",
          "22: $fakezval = ptr2str(1122334455);",
          "23: $fakezval .= ptr2str(0);",
          "24: $fakezval .= \"\\x00\\x00\\x00\\x00\";",
          "25: $fakezval .= \"\\x01\";",
          "26: $fakezval .= \"\\x00\";",
          "27: $fakezval .= \"\\x00\\x00\";",
          "29: $inner = 'r:2;';",
          "30: $exploit = 'a:2:{i:0;O:4:\"obj2\":1:{s:4:\"ryat\";C:3:\"obj\":'.strlen($inner).':{'.$inner.'}}i:1;a:1:{i:0;a:1:{i:0;R:4;}}}';",
          "32: $data = unserialize($exploit);",
          "34: for ($i = 0; $i < 5; $i++) {",
          "35:  $v[$i] = $fakezval.$i;",
          "36: }",
          "38: var_dump($data);",
          "40: function ptr2str($ptr)",
          "41: {",
          "42:  $out = '';",
          "43:  for ($i = 0; $i < 8; $i++) {",
          "44:   $out .= chr($ptr & 0xff);",
          "45:   $ptr >>= 8;",
          "46:  }",
          "47:  return $out;",
          "48: }",
          "49: ?>",
          "50: --EXPECTF--",
          "51: array(2) {",
          "52:   [0]=>",
          "53:   object(obj2)#%d (1) {",
          "54:     [\"ryat\"]=>",
          "55:     int(1)",
          "56:   }",
          "57:   [1]=>",
          "58:   array(1) {",
          "59:     [0]=>",
          "60:     array(1) {",
          "61:       [0]=>",
          "62:       &object(obj2)#%d (1) {",
          "63:         [\"ryat\"]=>",
          "64:         int(1)",
          "65:       }",
          "66:     }",
          "67:   }",
          "68: }",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug70219.phpt||ext/standard/tests/serialize/bug70219.phpt": [
          "File: ext/standard/tests/serialize/bug70219.phpt -> ext/standard/tests/serialize/bug70219.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70219 Use after free vulnerability in session deserializer",
          "3: --FILE--",
          "4: <?php",
          "5: class obj implements Serializable {",
          "6:     var $data;",
          "7:     function serialize() {",
          "8:         return serialize($this->data);",
          "9:     }",
          "10:     function unserialize($data) {",
          "11:         session_start();",
          "12:         session_decode($data);",
          "13:     }",
          "14: }",
          "16: $inner = 'ryat|a:1:{i:0;a:1:{i:1;';",
          "17: $exploit = 'a:2:{i:0;C:3:\"obj\":'.strlen($inner).':{'.$inner.'}i:1;R:4;}';",
          "19: $data = unserialize($exploit);",
          "21: for ($i = 0; $i < 5; $i++) {",
          "22:     $v[$i] = 'hi'.$i;",
          "23: }",
          "25: var_dump($data);",
          "26: ?>",
          "27: --EXPECTF--",
          "28: Warning: session_decode(): Failed to decode session object. Session has been destroyed in %s on line %d",
          "29: array(2) {",
          "30:   [0]=>",
          "31:   object(obj)#%d (1) {",
          "32:     [\"data\"]=>",
          "33:     NULL",
          "34:   }",
          "35:   [1]=>",
          "36:   &array(1) {",
          "37:     [\"data\"]=>",
          "38:     NULL",
          "39:   }",
          "40: }",
          "",
          "---------------"
        ],
        "ext/standard/var.c||ext/standard/var.c": [
          "File: ext/standard/var.c -> ext/standard/var.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1045:  php_unserialize_data_t var_hash;",
          "1046:  zval *options = NULL, *classes = NULL;",
          "1047:  HashTable *class_hash = NULL;",
          "1049:  if (zend_parse_parameters(ZEND_NUM_ARGS(), \"s|a\", &buf, &buf_len, &options) == FAILURE) {",
          "1050:   RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1048:  zval *old_rval = return_value;",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: #if 0",
          "104: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval)",
          "105: {",
          "107: #if VAR_ENTRIES_DBG",
          "109: #endif",
          "111:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "",
          "[Removed Lines]",
          "106:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "108:  fprintf(stderr, \"var_push_dtor_no_addref(%ld): %d (%d)\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "",
          "[Added Lines]",
          "106:  var_entries *var_hash;",
          "108:     if (!var_hashx || !*var_hashx) {",
          "109:         return;",
          "110:     }",
          "112:     var_hash = (*var_hashx)->last_dtor;",
          "114:  fprintf(stderr, \"var_push_dtor_no_addref(%p, %ld): %d (%d)\\n\", *rval, var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184:  while (var_dtor_hash) {",
          "185:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "186:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "187:   }",
          "188:   next = var_dtor_hash->next;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192: #if VAR_ENTRIES_DBG",
          "193:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "194: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "263: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "266: #line 271 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "275: #line 280 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "530:  start = cursor;",
          "534: {",
          "535:  YYCTYPE yych;",
          "536:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "533: #line 534 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "542: #line 543 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "590:  yych = *(YYMARKER = ++YYCURSOR);",
          "591:  if (yych == ':') goto yy95;",
          "592: yy3:",
          "594:  { return 0; }",
          "596: yy4:",
          "597:  yych = *(YYMARKER = ++YYCURSOR);",
          "598:  if (yych == ':') goto yy89;",
          "",
          "[Removed Lines]",
          "593: #line 881 \"ext/standard/var_unserializer.re\"",
          "595: #line 596 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "602: #line 893 \"ext/standard/var_unserializer.re\"",
          "604: #line 605 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "635:  goto yy3;",
          "636: yy14:",
          "637:  ++YYCURSOR;",
          "639:  {",
          "641:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "643: }",
          "645: yy16:",
          "646:  yych = *++YYCURSOR;",
          "647:  goto yy3;",
          "",
          "[Removed Lines]",
          "638: #line 875 \"ext/standard/var_unserializer.re\"",
          "644: #line 645 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "647: #line 887 \"ext/standard/var_unserializer.re\"",
          "653: #line 654 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "667:  if (yybm[0+yych] & 128) {",
          "668:   goto yy20;",
          "669:  }",
          "671:  yych = *++YYCURSOR;",
          "672:  if (yych != '\"') goto yy18;",
          "673:  ++YYCURSOR;",
          "675:  {",
          "676:  size_t len, len2, len3, maxlen;",
          "677:  zend_long elements;",
          "",
          "[Removed Lines]",
          "670:  if (yych != ':') goto yy18;",
          "674: #line 730 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "679:  if (yych <= '/') goto yy18;",
          "680:  if (yych >= ';') goto yy18;",
          "684: #line 741 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "686:  zval retval;",
          "687:  zval args[1];",
          "689:  if (*start == 'C') {",
          "690:   custom_object = 1;",
          "691:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "699:     if (!var_hash) return 0;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "817:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "818: }",
          "820: yy25:",
          "821:  yych = *++YYCURSOR;",
          "822:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "819: #line 820 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "830: #line 831 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "841:  yych = *++YYCURSOR;",
          "842:  if (yych != '\"') goto yy18;",
          "843:  ++YYCURSOR;",
          "845:  {",
          "849:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "850:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "851: }",
          "853: yy32:",
          "854:  yych = *++YYCURSOR;",
          "855:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "844: #line 722 \"ext/standard/var_unserializer.re\"",
          "852: #line 853 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "855: #line 732 \"ext/standard/var_unserializer.re\"",
          "857:     if (!var_hash) return 0;",
          "864: #line 865 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "870:  yych = *++YYCURSOR;",
          "871:  if (yych != '{') goto yy18;",
          "872:  ++YYCURSOR;",
          "874:  {",
          "875:  zend_long elements = parse_iv(start + 2);",
          "879:  if (elements < 0) {",
          "880:   return 0;",
          "",
          "[Removed Lines]",
          "873: #line 701 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "885: #line 710 \"ext/standard/var_unserializer.re\"",
          "890:     if (!var_hash) return 0;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "892:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "893: }",
          "895: yy39:",
          "896:  yych = *++YYCURSOR;",
          "897:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "894: #line 895 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "907: #line 908 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "912:  yych = *++YYCURSOR;",
          "913:  if (yych != '\"') goto yy18;",
          "914:  ++YYCURSOR;",
          "916:  {",
          "917:  size_t len, maxlen;",
          "918:  zend_string *str;",
          "",
          "[Removed Lines]",
          "915: #line 673 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "928: #line 682 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "940:  ZVAL_STR(rval, str);",
          "941:  return 1;",
          "942: }",
          "944: yy46:",
          "945:  yych = *++YYCURSOR;",
          "946:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "943: #line 944 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "956: #line 957 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "961:  yych = *++YYCURSOR;",
          "962:  if (yych != '\"') goto yy18;",
          "963:  ++YYCURSOR;",
          "965:  {",
          "966:  size_t len, maxlen;",
          "967:  char *str;",
          "",
          "[Removed Lines]",
          "964: #line 646 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "977: #line 655 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "988:  ZVAL_STRINGL(rval, str, len);",
          "989:  return 1;",
          "990: }",
          "992: yy53:",
          "993:  yych = *++YYCURSOR;",
          "994:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "991: #line 992 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1004: #line 1005 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1076:  }",
          "1077: yy63:",
          "1078:  ++YYCURSOR;",
          "1080:  {",
          "1081: #if SIZEOF_ZEND_LONG == 4",
          "1082: use_double:",
          "",
          "[Removed Lines]",
          "1079: #line 637 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1092: #line 646 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1085:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1086:  return 1;",
          "1087: }",
          "1089: yy65:",
          "1090:  yych = *++YYCURSOR;",
          "1091:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1088: #line 1089 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1101: #line 1102 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1144:  yych = *++YYCURSOR;",
          "1145:  if (yych != ';') goto yy18;",
          "1146:  ++YYCURSOR;",
          "1148:  {",
          "",
          "[Removed Lines]",
          "1147: #line 621 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1160: #line 630 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1161:  return 1;",
          "1162: }",
          "1164: yy76:",
          "1165:  yych = *++YYCURSOR;",
          "1166:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1163: #line 1164 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1176: #line 1177 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1187:  if (yych <= '9') goto yy79;",
          "1188:  if (yych != ';') goto yy18;",
          "1189:  ++YYCURSOR;",
          "1191:  {",
          "1192: #if SIZEOF_ZEND_LONG == 4",
          "1193:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1190: #line 595 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1203: #line 604 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1213:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1214:  return 1;",
          "1215: }",
          "1217: yy83:",
          "1218:  yych = *++YYCURSOR;",
          "1219:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1216: #line 1217 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1229: #line 1230 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1221:  yych = *++YYCURSOR;",
          "1222:  if (yych != ';') goto yy18;",
          "1223:  ++YYCURSOR;",
          "1225:  {",
          "1227:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1228:  return 1;",
          "1229: }",
          "1231: yy87:",
          "1232:  ++YYCURSOR;",
          "1234:  {",
          "1236:  ZVAL_NULL(rval);",
          "1237:  return 1;",
          "1238: }",
          "1240: yy89:",
          "1241:  yych = *++YYCURSOR;",
          "1242:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1224: #line 589 \"ext/standard/var_unserializer.re\"",
          "1230: #line 1231 \"ext/standard/var_unserializer.c\"",
          "1233: #line 583 \"ext/standard/var_unserializer.re\"",
          "1239: #line 1240 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1237: #line 598 \"ext/standard/var_unserializer.re\"",
          "1243: #line 1244 \"ext/standard/var_unserializer.c\"",
          "1246: #line 592 \"ext/standard/var_unserializer.re\"",
          "1252: #line 1253 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1259:  if (yych <= '9') goto yy91;",
          "1260:  if (yych != ';') goto yy18;",
          "1261:  ++YYCURSOR;",
          "1263:  {",
          "1264:  zend_long id;",
          "",
          "[Removed Lines]",
          "1262: #line 560 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1275: #line 569 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1283:  return 1;",
          "1284: }",
          "1286: yy95:",
          "1287:  yych = *++YYCURSOR;",
          "1288:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1285: #line 1286 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1298: #line 1299 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1305:  if (yych <= '9') goto yy97;",
          "1306:  if (yych != ';') goto yy18;",
          "1307:  ++YYCURSOR;",
          "1309:  {",
          "1310:  zend_long id;",
          "",
          "[Removed Lines]",
          "1308: #line 538 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1321: #line 547 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1328:  return 1;",
          "1329: }",
          "1331: }",
          "1335:  return 0;",
          "",
          "[Removed Lines]",
          "1330: #line 1331 \"ext/standard/var_unserializer.c\"",
          "1332: #line 883 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1343: #line 1344 \"ext/standard/var_unserializer.c\"",
          "1345: #line 895 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "101: #if 0",
          "102: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval)",
          "103: {",
          "105: #if VAR_ENTRIES_DBG",
          "107: #endif",
          "109:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "",
          "[Removed Lines]",
          "104:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "106:  fprintf(stderr, \"var_push_dtor_no_addref(%ld): %d (%d)\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "",
          "[Added Lines]",
          "104:  var_entries *var_hash;",
          "106:     if (!var_hashx || !*var_hashx) {",
          "107:         return;",
          "108:     }",
          "110:     var_hash = (*var_hashx)->last_dtor;",
          "112:  fprintf(stderr, \"var_push_dtor_no_addref(%p, %ld): %d (%d)\\n\", *rval, var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:  while (var_dtor_hash) {",
          "183:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "184:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "185:   }",
          "186:   next = var_dtor_hash->next;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190: #if VAR_ENTRIES_DBG",
          "191:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "192: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "702:  zend_long elements = parse_iv(start + 2);",
          "706:  if (elements < 0) {",
          "707:   return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "714:     if (!var_hash) return 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "720: }",
          "722: \"o:\" iv \":\" [\"] {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "733:     if (!var_hash) return 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "741:  zval retval;",
          "742:  zval args[1];",
          "744:  if (*start == 'C') {",
          "745:   custom_object = 1;",
          "746:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "755:     if (!var_hash) return 0;",
          "",
          "---------------"
        ],
        "ext/xsl/xsltprocessor.c||ext/xsl/xsltprocessor.c": [
          "File: ext/xsl/xsltprocessor.c -> ext/xsl/xsltprocessor.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "218:  if (error == 1) {",
          "219:   for (i = nargs - 1; i >= 0; i--) {",
          "220:    obj = valuePop(ctxt);",
          "222:   }",
          "223:   return;",
          "224:  }",
          "",
          "[Removed Lines]",
          "221:    xmlXPathFreeObject(obj);",
          "",
          "[Added Lines]",
          "221:    if (obj) {",
          "222:     xmlXPathFreeObject(obj);",
          "223:    }",
          "",
          "---------------"
        ],
        "ext/zip/php_zip.c||ext/zip/php_zip.c": [
          "File: ext/zip/php_zip.c -> ext/zip/php_zip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:  if (path_cleaned_len > 1 && IS_SLASH(path_cleaned[path_cleaned_len - 1])) {",
          "175:   is_dir_only = 1;",
          "176:  } else {",
          "177:   memcpy(file_dirname, path_cleaned, path_cleaned_len);",
          "",
          "[Removed Lines]",
          "174:   len = spprintf(&file_dirname_fullpath, 0, \"%s/%s\", dest, file);",
          "",
          "[Added Lines]",
          "174:   len = spprintf(&file_dirname_fullpath, 0, \"%s/%s\", dest, path_cleaned);",
          "",
          "---------------"
        ],
        "ext/zip/tests/bug70350.phpt||ext/zip/tests/bug70350.phpt": [
          "File: ext/zip/tests/bug70350.phpt -> ext/zip/tests/bug70350.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70350 (ZipArchive::extractTo allows for directory traversal when creating directories)",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if(!extension_loaded('zip')) die('skip');",
          "6: ?>",
          "7: --FILE--",
          "8: <?php",
          "10: $dir = dirname(__FILE__).\"/bug70350\";",
          "11: mkdir($dir);",
          "12: $archive = new ZipArchive();",
          "13: $archive->open(\"$dir/a.zip\",ZipArchive::CREATE);",
          "14: $archive->addEmptyDir(\"../down2/\");",
          "15: $archive->close();",
          "17: $archive2 = new ZipArchive();",
          "18: $archive2->open(\"$dir/a.zip\");",
          "19: $archive2->extractTo($dir);",
          "20: $archive2->close();",
          "21: var_dump(file_exists(\"$dir/down2/\"));",
          "22: var_dump(file_exists(\"../down2/\"));",
          "23: ?>",
          "24: --CLEAN--",
          "25: <?php",
          "26: $dir = dirname(__FILE__).\"/bug70350\";",
          "27: rmdir(\"$dir/down2\");",
          "28: unlink(\"$dir/a.zip\");",
          "29: rmdir($dir);",
          "30: ?>",
          "31: --EXPECT--",
          "32: bool(true)",
          "33: bool(false)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c6cba554544d9dc676d1cfa99447364c95768664",
      "candidate_info": {
        "commit_hash": "c6cba554544d9dc676d1cfa99447364c95768664",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/c6cba554544d9dc676d1cfa99447364c95768664",
        "files": [
          "Zend/zend.c",
          "Zend/zend.h",
          "Zend/zend_API.c",
          "Zend/zend_builtin_functions.c",
          "Zend/zend_exceptions.c",
          "Zend/zend_execute.c",
          "Zend/zend_execute.h",
          "Zend/zend_execute_API.c",
          "Zend/zend_vm_def.h",
          "Zend/zend_vm_execute.h",
          "Zend/zend_vm_gen.php",
          "ext/ereg/ereg.c",
          "ext/pcre/php_pcre.c",
          "ext/standard/array.c",
          "ext/standard/proc_open.c",
          "ext/standard/string.c",
          "ext/standard/type.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Use ZVAL_DEREF() macro",
        "before_after_code_files": [
          "Zend/zend.c||Zend/zend.c",
          "Zend/zend.h||Zend/zend.h",
          "Zend/zend_API.c||Zend/zend_API.c",
          "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c",
          "Zend/zend_exceptions.c||Zend/zend_exceptions.c",
          "Zend/zend_execute.c||Zend/zend_execute.c",
          "Zend/zend_execute.h||Zend/zend_execute.h",
          "Zend/zend_execute_API.c||Zend/zend_execute_API.c",
          "Zend/zend_vm_def.h||Zend/zend_vm_def.h",
          "Zend/zend_vm_gen.php||Zend/zend_vm_gen.php",
          "ext/ereg/ereg.c||ext/ereg/ereg.c",
          "ext/pcre/php_pcre.c||ext/pcre/php_pcre.c",
          "ext/standard/array.c||ext/standard/array.c",
          "ext/standard/proc_open.c||ext/standard/proc_open.c",
          "ext/standard/string.c||ext/standard/string.c",
          "ext/standard/type.c||ext/standard/type.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend.c||Zend/zend.c": [
          "File: Zend/zend.c -> Zend/zend.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "412: {",
          "416:  switch (Z_TYPE_P(expr)) {",
          "417:   case IS_ARRAY:",
          "418:    ZEND_PUTS_EX(\"Array\\n\");",
          "",
          "[Removed Lines]",
          "413:  if (Z_ISREF_P(expr)) {",
          "414:   expr = Z_REFVAL_P(expr);",
          "415:  }",
          "",
          "[Added Lines]",
          "413:  ZVAL_DEREF(expr);",
          "",
          "---------------"
        ],
        "Zend/zend.h||Zend/zend.h": [
          "File: Zend/zend.h -> Zend/zend.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "669:   zval_copy_ctor(__z1);       \\",
          "670:  } while (0)",
          "672: #define ZVAL_DUP_DEREF(z, v)       \\",
          "673:  do {            \\",
          "674:   zval *__z1 = (z);        \\",
          "675:   zval *__z2 = (v);        \\",
          "681:   zval_copy_ctor(__z1);       \\",
          "682:  } while (0)",
          "",
          "[Removed Lines]",
          "676:   if (Z_ISREF_P(__z2)) {       \\",
          "677:    ZVAL_COPY_VALUE(__z1, Z_REFVAL_P(__z2)); \\",
          "678:   } else {          \\",
          "679:    ZVAL_COPY_VALUE(__z1, __z2);    \\",
          "680:   }            \\",
          "",
          "[Added Lines]",
          "672: #define ZVAL_DEREF(z) do {        \\",
          "673:   if (UNEXPECTED(Z_ISREF_P(z))) {     \\",
          "674:    (z) = Z_REFVAL_P(z);      \\",
          "675:   }            \\",
          "676:  } while (0)",
          "680: #if 0",
          "681: #define ZVAL_DEREF_REF(z) do {       \\",
          "682:   ZEND_ASSERT(Z_ISREF_P(z));      \\",
          "683:   (z) = Z_REFVAL_P(z);       \\",
          "684:  } while (0)",
          "685: #else",
          "686: #define ZVAL_DEREF_REF(z)        \\",
          "687:  ZVAL_DEREF(z)",
          "688: #endif",
          "694:   ZVAL_DEREF(__z2);        \\",
          "695:   ZVAL_COPY_VALUE(__z1, __z2);     \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "691:   efree(ref);          \\",
          "692:  } while (0)",
          "701: #define INIT_PZVAL_COPY(z, v)       \\",
          "702:  do {            \\",
          "",
          "[Removed Lines]",
          "694: #define ZVAL_DEREF(z) do {        \\",
          "695:   if (Z_ISREF_P((z))) {       \\",
          "696:    (z) = Z_REFVAL_P((z));      \\",
          "697:   }            \\",
          "698:  } while (0)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "738:    if (Z_REFCOUNT_P(__zv) == 1) {    \\",
          "739:     ZVAL_UNREF(__zv);      \\",
          "740:    } else {         \\",
          "742:     Z_DELREF_P(__zv);      \\",
          "744:    }           \\",
          "745:   }            \\",
          "746:  } while (0)",
          "",
          "[Removed Lines]",
          "741:     zval *ref = Z_REFVAL_P(__zv);   \\",
          "743:     ZVAL_DUP(__zv, ref);     \\",
          "",
          "[Added Lines]",
          "751:     ZVAL_DUP(__zv, Z_REFVAL_P(__zv));  \\",
          "",
          "---------------"
        ],
        "Zend/zend_API.c||Zend/zend_API.c": [
          "File: Zend/zend_API.c -> Zend/zend_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229: {",
          "233:  return zend_get_type_by_const(Z_TYPE_P(arg));",
          "234: }",
          "",
          "[Removed Lines]",
          "230:  if (Z_ISREF_P(arg)) {",
          "231:   arg = Z_REFVAL_P(arg);",
          "232:  }",
          "",
          "[Added Lines]",
          "230:  ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "360:   spec_walk++;",
          "361:  }",
          "367:  switch (c) {",
          "368:   case 'l':",
          "",
          "[Removed Lines]",
          "363:  if (Z_ISREF_P(arg)) {",
          "364:   arg = Z_REFVAL_P(arg);",
          "365:  }",
          "",
          "[Added Lines]",
          "361:  ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1117: {",
          "1123:  if (IS_CONSTANT_TYPE(Z_TYPE_P(pp))) {",
          "1124:   zend_class_entry **scope = EG(in_execution)?&EG(scope):&CG(active_class_entry);",
          "",
          "[Removed Lines]",
          "1120:  if (Z_ISREF_P(pp)) {",
          "1121:   pp = Z_REFVAL_P(pp);",
          "1122:  }",
          "",
          "[Added Lines]",
          "1114:  ZVAL_DEREF(pp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3226:       break;",
          "3227:      }",
          "3233:      if (Z_TYPE_P(method) != IS_STRING) {",
          "3234:       break;",
          "3235:      }",
          "3241:      if (Z_TYPE_P(obj) == IS_STRING) {",
          "3242:       if (callable_name) {",
          "3243:        char *ptr;",
          "",
          "[Removed Lines]",
          "3229:      if (UNEXPECTED(Z_ISREF_P(method))) {",
          "3230:       method = Z_REFVAL_P(method);",
          "3231:      }",
          "3237:      if (UNEXPECTED(Z_ISREF_P(obj))) {",
          "3238:       obj = Z_REFVAL_P(obj);",
          "3239:      }",
          "",
          "[Added Lines]",
          "3221:      ZVAL_DEREF(method);",
          "3226:      ZVAL_DEREF(obj);",
          "",
          "---------------"
        ],
        "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c": [
          "File: Zend/zend_builtin_functions.c -> Zend/zend_builtin_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "585:   return;",
          "586:  }",
          "591:  target_hash = HASH_OF(array);",
          "592:  if (!target_hash) {",
          "593:   zend_error(E_WARNING,\"Variable passed to each() is not an array or object\");",
          "",
          "[Removed Lines]",
          "588:  if (Z_ISREF_P(array)) {",
          "589:   array = Z_REFVAL_P(array);",
          "590:  }",
          "",
          "[Added Lines]",
          "588:  ZVAL_DEREF_REF(array);",
          "",
          "---------------"
        ],
        "Zend/zend_exceptions.c||Zend/zend_exceptions.c": [
          "File: Zend/zend_exceptions.c -> Zend/zend_exceptions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:  switch (Z_TYPE_P(arg)) {",
          "382:   case IS_NULL:",
          "383:    TRACE_APPEND_STR(\"NULL, \");",
          "",
          "[Removed Lines]",
          "378:  if (Z_ISREF_P(arg)) {",
          "379:   arg = Z_REFVAL_P(arg);",
          "380:  }",
          "",
          "[Added Lines]",
          "378:  ZVAL_DEREF(arg);",
          "",
          "---------------"
        ],
        "Zend/zend_execute.c||Zend/zend_execute.c": [
          "File: Zend/zend_execute.c -> Zend/zend_execute.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:   ret = Z_INDIRECT_P(ret);",
          "199:  }",
          "200:  should_free->var = ret;",
          "204:  return ret;",
          "205: }",
          "",
          "[Removed Lines]",
          "201:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "202:   ret = Z_REFVAL_P(ret);",
          "203:  }",
          "",
          "[Added Lines]",
          "201:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "281:  if (UNEXPECTED(Z_TYPE_P(ret) == IS_UNDEF)) {",
          "282:   return _get_zval_cv_lookup(ret, var, type TSRMLS_CC);",
          "283:  }",
          "287:  return ret;",
          "288: }",
          "",
          "[Removed Lines]",
          "284:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "285:   ret = Z_REFVAL_P(ret);",
          "286:  }",
          "",
          "[Added Lines]",
          "282:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "304:  if (UNEXPECTED(Z_TYPE_P(ret) == IS_UNDEF)) {",
          "305:   return _get_zval_cv_lookup_BP_VAR_R(ret, var TSRMLS_CC);",
          "306:  }",
          "310:  return ret;",
          "311: }",
          "",
          "[Removed Lines]",
          "307:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "308:   ret = Z_REFVAL_P(ret);",
          "309:  }",
          "",
          "[Added Lines]",
          "303:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "327:  if (UNEXPECTED(Z_TYPE_P(ret) == IS_UNDEF)) {",
          "328:   return _get_zval_cv_lookup_BP_VAR_UNSET(ret, var TSRMLS_CC);",
          "329:  }",
          "333:  return ret;",
          "334: }",
          "",
          "[Removed Lines]",
          "330:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "331:   ret = Z_REFVAL_P(ret);",
          "332:  }",
          "",
          "[Added Lines]",
          "324:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "350:  if (Z_TYPE_P(ret) == IS_UNDEF) {",
          "351:   return _get_zval_cv_lookup_BP_VAR_IS(ret, var TSRMLS_CC);",
          "352:  }",
          "356:  return ret;",
          "357: }",
          "",
          "[Removed Lines]",
          "353:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "354:   ret = Z_REFVAL_P(ret);",
          "355:  }",
          "",
          "[Added Lines]",
          "345:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "373:  if (UNEXPECTED(Z_TYPE_P(ret) == IS_UNDEF)) {",
          "374:   return _get_zval_cv_lookup_BP_VAR_RW(ret, var TSRMLS_CC);",
          "375:  }",
          "379:  return ret;",
          "380: }",
          "",
          "[Removed Lines]",
          "376:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "377:   ret = Z_REFVAL_P(ret);",
          "378:  }",
          "",
          "[Added Lines]",
          "366:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "396:  if (Z_TYPE_P(ret) == IS_UNDEF) {",
          "397:   return _get_zval_cv_lookup_BP_VAR_W(ret, var TSRMLS_CC);",
          "398:  }",
          "402:  return ret;",
          "403: }",
          "",
          "[Removed Lines]",
          "399:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "400:   ret = Z_REFVAL_P(ret);",
          "401:  }",
          "",
          "[Added Lines]",
          "387:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "535: {",
          "536:  zval *object = object_ptr;",
          "541:  if (Z_TYPE_P(object) == IS_NULL",
          "542:   || (Z_TYPE_P(object) == IS_BOOL && Z_LVAL_P(object) == 0)",
          "543:   || (Z_TYPE_P(object) == IS_STRING && Z_STRLEN_P(object) == 0)",
          "",
          "[Removed Lines]",
          "538:  if (UNEXPECTED(Z_ISREF_P(object_ptr))) {",
          "539:   object = Z_REFVAL_P(object);",
          "540:  }",
          "",
          "[Added Lines]",
          "524:  ZVAL_DEREF(object);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "612:    need_msg = zend_verify_arg_class_kind(cur_arg_info, fetch_type, &class_name, &ce TSRMLS_CC);",
          "613:    return zend_verify_arg_error(E_RECOVERABLE_ERROR, zf, arg_num, need_msg, class_name, \"none\", \"\" TSRMLS_CC);",
          "614:   }",
          "618:   if (Z_TYPE_P(arg) == IS_OBJECT) {",
          "619:    need_msg = zend_verify_arg_class_kind(cur_arg_info, fetch_type, &class_name, &ce TSRMLS_CC);",
          "620:    if (!ce || !instanceof_function(Z_OBJCE_P(arg), ce TSRMLS_CC)) {",
          "",
          "[Removed Lines]",
          "615:   if (Z_ISREF_P(arg)) {",
          "616:    arg = Z_REFVAL_P(arg);",
          "617:   }",
          "",
          "[Added Lines]",
          "599:   ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "631:      return zend_verify_arg_error(E_RECOVERABLE_ERROR, zf, arg_num, \"be of the type array\", \"\", \"none\", \"\" TSRMLS_CC);",
          "632:     }",
          "637:     if (Z_TYPE_P(arg) != IS_ARRAY && (Z_TYPE_P(arg) != IS_NULL || !cur_arg_info->allow_null)) {",
          "638:      return zend_verify_arg_error(E_RECOVERABLE_ERROR, zf, arg_num, \"be of the type array\", \"\", zend_zval_type_name(arg), \"\" TSRMLS_CC);",
          "639:     }",
          "",
          "[Removed Lines]",
          "634:     if (Z_ISREF_P(arg)) {",
          "635:      arg = Z_REFVAL_P(arg);",
          "636:     }",
          "",
          "[Added Lines]",
          "616:     ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "662:   zval tmp;",
          "663:   zval *object = object_ptr;",
          "668:  if (Z_TYPE_P(object) != IS_OBJECT) {",
          "669:   if (object == &EG(error_zval)) {",
          "670:     if (retval) {",
          "",
          "[Removed Lines]",
          "665:   if (Z_ISREF_P(object)) {",
          "666:    object = Z_REFVAL_P(object);",
          "667:   }",
          "",
          "[Added Lines]",
          "645:   ZVAL_DEREF(object);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "711:  if (value_type == IS_TMP_VAR) {",
          "717:   value = &tmp;",
          "718:  } else if (value_type == IS_CONST) {",
          "722:   ZVAL_DUP(&tmp, value);",
          "723:  } else if (Z_REFCOUNTED_P(value)) {",
          "724:   Z_ADDREF_P(value);",
          "",
          "[Removed Lines]",
          "712:   if (UNEXPECTED(Z_ISREF_P(value))) {",
          "713:    ZVAL_COPY_VALUE(&tmp, Z_REFVAL_P(value));",
          "714:         } else {",
          "715:    ZVAL_COPY_VALUE(&tmp, value);",
          "716:         }",
          "719:   if (UNEXPECTED(Z_ISREF_P(value))) {",
          "720:    value = Z_REFVAL_P(value);",
          "721:   }",
          "",
          "[Added Lines]",
          "690:   ZVAL_DEREF(value);",
          "691:   ZVAL_COPY_VALUE(&tmp, value);",
          "694:   ZVAL_DEREF(value);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "800: static inline zval* zend_assign_tmp_to_variable(zval *variable_ptr, zval *value TSRMLS_DC)",
          "801: {",
          "806:  if (Z_TYPE_P(variable_ptr) == IS_OBJECT &&",
          "807:      UNEXPECTED(Z_OBJ_HANDLER_P(variable_ptr, set) != NULL)) {",
          "808:   Z_OBJ_HANDLER_P(variable_ptr, set)(variable_ptr, value TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "802:  if (Z_ISREF_P(variable_ptr)) {",
          "803:   variable_ptr = Z_REFVAL_P(variable_ptr);",
          "804:  }",
          "",
          "[Added Lines]",
          "775:  ZVAL_DEREF(variable_ptr);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "828: static inline zval* zend_assign_const_to_variable(zval *variable_ptr, zval *value TSRMLS_DC)",
          "829: {",
          "834:  if (Z_TYPE_P(variable_ptr) == IS_OBJECT &&",
          "835:      UNEXPECTED(Z_OBJ_HANDLER_P(variable_ptr, set) != NULL)) {",
          "836:   Z_OBJ_HANDLER_P(variable_ptr, set)(variable_ptr, value TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "830:  if (Z_ISREF_P(variable_ptr)) {",
          "831:   variable_ptr = Z_REFVAL_P(variable_ptr);",
          "832:  }",
          "",
          "[Added Lines]",
          "800:  ZVAL_DEREF(variable_ptr);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1082:     zval *retval;",
          "1083:     zval *container = container_ptr;",
          "1089:  switch (Z_TYPE_P(container)) {",
          "1090:   case IS_ARRAY:",
          "1091:    if (type != BP_VAR_UNSET) {",
          "",
          "[Removed Lines]",
          "1085:  if (Z_ISREF_P(container)) {",
          "1086:   container = Z_REFVAL_P(container);",
          "1087:  }",
          "",
          "[Added Lines]",
          "1052:  ZVAL_DEREF(container);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1245: {",
          "1246:  zval *retval;",
          "1251:  switch (Z_TYPE_P(container)) {",
          "1253:   case IS_ARRAY:",
          "",
          "[Removed Lines]",
          "1248:  if (UNEXPECTED(Z_ISREF_P(container))) {",
          "1249:   container = Z_REFVAL_P(container);",
          "1250:  }",
          "",
          "[Added Lines]",
          "1212:  ZVAL_DEREF(container);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1342: {",
          "1343:  zval *container = container_ptr;",
          "1349:  if (Z_TYPE_P(container) != IS_OBJECT) {",
          "1350:   if (container == &EG(error_zval)) {",
          "1351:    ZVAL_INDIRECT(result, &EG(error_zval));",
          "",
          "[Removed Lines]",
          "1345:  if (Z_ISREF_P(container)) {",
          "1346:   container = Z_REFVAL_P(container);",
          "1347:  }",
          "",
          "[Added Lines]",
          "1307:  ZVAL_DEREF(container);",
          "",
          "---------------"
        ],
        "Zend/zend_execute.h||Zend/zend_execute.h": [
          "File: Zend/zend_execute.h -> Zend/zend_execute.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:    ZEND_ASSERT(zval_ptr != &EG(uninitialized_zval));",
          "82:    _zval_dtor_func_for_ptr(Z_COUNTED_P(zval_ptr) ZEND_FILE_LINE_CC);",
          "83:   } else {",
          "90:    GC_ZVAL_CHECK_POSSIBLE_ROOT(zval_ptr);",
          "91:   }",
          "92:  }",
          "",
          "[Removed Lines]",
          "84:    if (Z_REFCOUNT_P(zval_ptr) == 1 && Z_ISREF_P(zval_ptr)) {",
          "89:    }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:   if (!Z_DELREF_P(zval_ptr)) {",
          "99:    ZEND_ASSERT(zval_ptr != &EG(uninitialized_zval));",
          "100:    _zval_dtor_func_for_ptr(Z_COUNTED_P(zval_ptr) ZEND_FILE_LINE_CC);",
          "108:   }",
          "109:  }",
          "110: }",
          "",
          "[Removed Lines]",
          "101:   } else {",
          "102:    if (Z_REFCOUNT_P(zval_ptr) == 1 && Z_ISREF_P(zval_ptr)) {",
          "107:    }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Zend/zend_execute_API.c||Zend/zend_execute_API.c": [
          "File: Zend/zend_execute_API.c -> Zend/zend_execute_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "457:   Z_DELREF_P(zval_ptr);",
          "458:   if (Z_REFCOUNT_P(zval_ptr) == 0) {",
          "459:    _zval_internal_dtor_for_ptr(zval_ptr ZEND_FILE_LINE_CC);",
          "466:   }",
          "467:  }",
          "468: }",
          "",
          "[Removed Lines]",
          "460:   } else if (Z_REFCOUNT_P(zval_ptr) == 1) {",
          "461:    if (Z_ISREF_P(zval_ptr)) {",
          "465:    }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Zend/zend_vm_def.h||Zend/zend_vm_def.h": [
          "File: Zend/zend_vm_def.h -> Zend/zend_vm_def.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "343:  if (UNEXPECTED(Z_TYPE_P(object) != IS_OBJECT)) {",
          "344:   make_real_object(object TSRMLS_CC);",
          "345:  }",
          "350:  value = get_zval_ptr((opline+1)->op1_type, &(opline+1)->op1, execute_data, &free_op_data1, BP_VAR_R);",
          "",
          "[Removed Lines]",
          "346:  if (UNEXPECTED(Z_ISREF_P(object))) {",
          "347:   object = Z_REFVAL_P(object);",
          "348:  }",
          "",
          "[Added Lines]",
          "346:  ZVAL_DEREF(object);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "502:   Z_OBJ_HANDLER_P(var_ptr, set)(var_ptr, objval TSRMLS_CC);",
          "503:   zval_ptr_dtor(objval);",
          "504:  } else {",
          "509:   binary_op(var_ptr, var_ptr, value TSRMLS_CC);",
          "510:  }",
          "",
          "[Removed Lines]",
          "506:      if (Z_ISREF_P(var_ptr)) {",
          "507:       var_ptr = Z_REFVAL_P(var_ptr);",
          "508:   }",
          "",
          "[Added Lines]",
          "503:      ZVAL_DEREF(var_ptr);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "797:   ZEND_VM_NEXT_OPCODE();",
          "798:  }",
          "801:   var_ptr = Z_REFVAL_P(var_ptr);",
          "802:  } else {",
          "803:   SEPARATE_ZVAL(var_ptr);",
          "",
          "[Removed Lines]",
          "800:  if (Z_ISREF_P(var_ptr)) {",
          "",
          "[Added Lines]",
          "795:  if (UNEXPECTED(Z_ISREF_P(var_ptr))) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "846:   ZEND_VM_NEXT_OPCODE();",
          "847:  }",
          "850:   var_ptr = Z_REFVAL_P(var_ptr);",
          "851:  } else {",
          "852:   SEPARATE_ZVAL(var_ptr);",
          "",
          "[Removed Lines]",
          "849:  if (Z_ISREF_P(var_ptr)) {",
          "",
          "[Added Lines]",
          "844:  if (UNEXPECTED(Z_ISREF_P(var_ptr))) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "896:  retval = EX_VAR(opline->result.var);",
          "899:   var_ptr = Z_REFVAL_P(var_ptr);",
          "900:   ZVAL_DUP(retval, var_ptr);",
          "901:  } else {",
          "",
          "[Removed Lines]",
          "898:  if (Z_ISREF_P(var_ptr)) {",
          "",
          "[Added Lines]",
          "893:  if (UNEXPECTED(Z_ISREF_P(var_ptr))) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "943:  retval = EX_VAR(opline->result.var);",
          "946:   var_ptr = Z_REFVAL_P(var_ptr);",
          "947:   ZVAL_DUP(retval, var_ptr);",
          "948:  } else {",
          "",
          "[Removed Lines]",
          "945:  if (Z_ISREF_P(var_ptr)) {",
          "",
          "[Added Lines]",
          "940:  if (UNEXPECTED(Z_ISREF_P(var_ptr))) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "975:  zval *z;",
          "977:  SAVE_OPLINE();",
          "984:  zend_print_variable(z);",
          "",
          "[Removed Lines]",
          "978:  z = GET_OP1_ZVAL_PTR(BP_VAR_R);",
          "980:  if (UNEXPECTED(Z_ISREF_P(z))) {",
          "981:   z = Z_REFVAL_P(z);",
          "982:  }",
          "",
          "[Added Lines]",
          "973:  z = GET_OP1_ZVAL_PTR_DEREF(BP_VAR_R);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1364:  zval *offset;",
          "1366:  SAVE_OPLINE();",
          "1368:  offset  = GET_OP2_ZVAL_PTR(BP_VAR_R);",
          "1374:  if (UNEXPECTED(Z_TYPE_P(container) != IS_OBJECT) ||",
          "1375:      UNEXPECTED(Z_OBJ_HT_P(container)->read_property == NULL)) {",
          "1376:   zend_error(E_NOTICE, \"Trying to get property of non-object\");",
          "",
          "[Removed Lines]",
          "1367:  container = GET_OP1_OBJ_ZVAL_PTR(BP_VAR_R);",
          "1370:  if (UNEXPECTED(Z_ISREF_P(container))) {",
          "1371:   container = Z_REFVAL_P(container);",
          "1372:  }",
          "",
          "[Added Lines]",
          "1358:  container = GET_OP1_OBJ_ZVAL_PTR_DEREF(BP_VAR_R);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1686:  if (OP1_TYPE == IS_VAR && UNEXPECTED(Z_TYPE_P(object_ptr) == IS_STR_OFFSET)) {",
          "1687:   zend_error_noreturn(E_ERROR, \"Cannot use string offset as an array\");",
          "1688:  }",
          "1690:   object_ptr = Z_REFVAL_P(object_ptr);",
          "1691:  }",
          "1692:  if (Z_TYPE_P(object_ptr) == IS_OBJECT) {",
          "",
          "[Removed Lines]",
          "1689:  if (Z_ISREF_P(object_ptr) && Z_TYPE_P(Z_REFVAL_P(object_ptr)) == IS_OBJECT) {",
          "",
          "[Added Lines]",
          "1676:  if (UNEXPECTED(Z_ISREF_P(object_ptr)) && Z_TYPE_P(Z_REFVAL_P(object_ptr)) == IS_OBJECT) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2389:  }",
          "2391:  if (Z_TYPE_P(var) != IS_STRING) {",
          "2395:   if (Z_TYPE_P(var) != IS_STRING) {",
          "2396:    zend_make_printable_zval(var, &var_copy, &use_copy);",
          "",
          "[Removed Lines]",
          "2392:   if (Z_ISREF_P(var)) {",
          "2393:    var = Z_REFVAL_P(var);",
          "2394:   }",
          "",
          "[Added Lines]",
          "2379:   ZVAL_DEREF(var);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2477:   zend_error_noreturn(E_ERROR, \"Method name must be a string\");",
          "2478:  }",
          "2481:  if (Z_ISREF_P(object)) {",
          "2482:   ZVAL_COPY_VALUE(&call->object, Z_REFVAL_P(object));",
          "2483:  } else {",
          "2484:   ZVAL_COPY_VALUE(&call->object, object);",
          "2485:  }",
          "2487:  if (EXPECTED(Z_TYPE(call->object) != IS_UNDEF) &&",
          "2488:      EXPECTED(Z_TYPE(call->object) == IS_OBJECT)) {",
          "",
          "[Removed Lines]",
          "2480:  object = GET_OP1_OBJ_ZVAL_PTR(BP_VAR_R);",
          "",
          "[Added Lines]",
          "2465:  object = GET_OP1_OBJ_ZVAL_PTR_DEREF(BP_VAR_R);",
          "2466:  ZVAL_COPY_VALUE(&call->object, object);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2677:   SAVE_OPLINE();",
          "2678:   function_name_ptr = function_name = GET_OP2_ZVAL_PTR(BP_VAR_R);",
          "2683:   if (EXPECTED(Z_TYPE_P(function_name) == IS_STRING)) {",
          "2684:    if (Z_STRVAL_P(function_name)[0] == '\\\\') {",
          "2685:     lcname = STR_ALLOC(Z_STRLEN_P(function_name) - 1, 0);",
          "",
          "[Removed Lines]",
          "2679:   if (Z_ISREF_P(function_name)) {",
          "2680:    function_name = Z_REFVAL_P(function_name);",
          "2681:   }",
          "",
          "[Added Lines]",
          "2668:   ZVAL_DEREF(function_name);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3873:  zval *result = EX_VAR(opline->result.var);",
          "3875:  SAVE_OPLINE();",
          "3881:  if (opline->extended_value != IS_STRING) {",
          "3882:   ZVAL_COPY_VALUE(result, expr);",
          "3883:   if (!IS_OP1_TMP_FREE()) {",
          "",
          "[Removed Lines]",
          "3876:  expr = GET_OP1_ZVAL_PTR(BP_VAR_R);",
          "3878:  if (Z_ISREF_P(expr)) {",
          "3879:   expr = Z_REFVAL_P(expr);",
          "3880:  }",
          "",
          "[Added Lines]",
          "3861:  expr = GET_OP1_ZVAL_PTR_DEREF(BP_VAR_R);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4288:  if ((OP1_TYPE == IS_CV || OP1_TYPE == IS_VAR) &&",
          "4289:      (opline->extended_value & ZEND_FE_RESET_VARIABLE)) {",
          "4290:   array_ptr = array_ref = GET_OP1_ZVAL_PTR_PTR(BP_VAR_R);",
          "4295:   } else if (Z_TYPE_P(array_ptr) == IS_OBJECT) {",
          "4296:    if(Z_OBJ_HT_P(array_ptr)->get_class_entry == NULL) {",
          "4297:     zend_error(E_WARNING, \"foreach() cannot iterate over objects without PHP class\");",
          "",
          "[Removed Lines]",
          "4291:   if (Z_ISREF_P(array_ref)) {",
          "4292:    array_ptr = Z_REFVAL_P(array_ptr);",
          "4293:   }",
          "4294:   if (Z_TYPE_P(array_ptr) == IS_NULL) {",
          "",
          "[Added Lines]",
          "4272:   ZVAL_DEREF(array_ptr);",
          "4273:   if (Z_TYPE_P(array_ptr) == IS_ARRAY) {",
          "4274:    if (!Z_ISREF_P(array_ref)) {",
          "4275:     SEPARATE_ZVAL(array_ptr);",
          "4276:     array_ref = array_ptr;",
          "4277:     if (opline->extended_value & ZEND_FE_FETCH_BYREF) {",
          "4278:      ZVAL_NEW_REF(array_ptr, array_ptr);",
          "4279:      array_ref = array_ptr;",
          "4280:      array_ptr = Z_REFVAL_P(array_ptr);",
          "4281:     }",
          "4282:    }",
          "4283:    if (Z_REFCOUNTED_P(array_ref)) Z_ADDREF_P(array_ref);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4307:    }",
          "4308:    array_ref = array_ptr;",
          "4309:   } else {",
          "4321:    if (Z_REFCOUNTED_P(array_ref)) Z_ADDREF_P(array_ref);",
          "4322:   }",
          "4323:  } else {",
          "4324:   array_ptr = array_ref = GET_OP1_ZVAL_PTR(BP_VAR_R);",
          "4329:    zval tmp;",
          "",
          "[Removed Lines]",
          "4310:    if (Z_TYPE_P(array_ptr) == IS_ARRAY) {",
          "4311:     if (!Z_ISREF_P(array_ref)) {",
          "4312:      SEPARATE_ZVAL(array_ptr);",
          "4313:      array_ref = array_ptr;",
          "4314:      if (opline->extended_value & ZEND_FE_FETCH_BYREF) {",
          "4315:       ZVAL_NEW_REF(array_ptr, array_ptr);",
          "4316:       array_ref = array_ptr;",
          "4317:       array_ptr = Z_REFVAL_P(array_ptr);",
          "4318:      }",
          "4319:     }",
          "4320:    }",
          "4325:   if (Z_ISREF_P(array_ref)) {",
          "4326:    array_ptr = Z_REFVAL_P(array_ptr);",
          "4327:   }",
          "",
          "[Added Lines]",
          "4303:   ZVAL_DEREF(array_ptr);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4465:  zval *key = NULL;",
          "4467:  array = array_ref = EX_VAR(opline->op1.var);",
          "4471:  if (opline->extended_value & ZEND_FE_FETCH_WITH_KEY) {",
          "4472:   key = EX_VAR((opline+1)->result.var);",
          "4473:  }",
          "",
          "[Removed Lines]",
          "4468:  if (Z_ISREF_P(array)) {",
          "4469:   array = Z_REFVAL_P(array);",
          "4470:  }",
          "",
          "[Added Lines]",
          "4444:  ZVAL_DEREF(array);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4607:      (opline->extended_value & ZEND_QUICK_SET)) {",
          "4608:   if (Z_TYPE_P(EX_VAR_NUM(opline->op1.var)) != IS_UNDEF) {",
          "4609:    value = EX_VAR_NUM(opline->op1.var);",
          "4613:   } else {",
          "4614:    isset = 0;",
          "4615:   }",
          "",
          "[Removed Lines]",
          "4610:    if (Z_ISREF_P(value)) {",
          "4611:     value = Z_REFVAL_P(value);",
          "4612:    }",
          "",
          "[Added Lines]",
          "4584:    ZVAL_DEREF(value);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4687:  zval *offset;",
          "4689:  SAVE_OPLINE();",
          "4691:  offset = GET_OP2_ZVAL_PTR(BP_VAR_R);",
          "4696:  if (Z_TYPE_P(container) == IS_ARRAY && !prop_dim) {",
          "4697:   HashTable *ht;",
          "4698:   int isset = 0;",
          "",
          "[Removed Lines]",
          "4690:  container = GET_OP1_OBJ_ZVAL_PTR(BP_VAR_IS);",
          "4693:  if (Z_ISREF_P(container)) {",
          "4694:   container = Z_REFVAL_P(container);",
          "4695:  }",
          "",
          "[Added Lines]",
          "4662:  container = GET_OP1_OBJ_ZVAL_PTR_DEREF(BP_VAR_IS);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "5120:  zend_bool result;",
          "5122:  SAVE_OPLINE();",
          "5128:  if (Z_TYPE_P(expr) == IS_OBJECT && Z_OBJ_HT_P(expr)->get_class_entry) {",
          "5129:   result = instanceof_function(Z_OBJCE_P(expr), Z_CE_P(EX_VAR(opline->op2.var)) TSRMLS_CC);",
          "5130:  } else {",
          "",
          "[Removed Lines]",
          "5123:  expr = GET_OP1_ZVAL_PTR(BP_VAR_R);",
          "5125:  if (Z_ISREF_P(expr)) {",
          "5126:   expr = Z_REFVAL_P(expr);",
          "5127:  }",
          "",
          "[Added Lines]",
          "5092:  expr = GET_OP1_ZVAL_PTR_DEREF(BP_VAR_R);",
          "",
          "---------------"
        ],
        "Zend/zend_vm_gen.php||Zend/zend_vm_gen.php": [
          "File: Zend/zend_vm_gen.php -> Zend/zend_vm_gen.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "189:  \"CV\"     => \"_get_zval_ptr_cv_\\\\1(execute_data, opline->op2.var TSRMLS_CC)\",",
          "190: );",
          "192: $op1_get_obj_zval_ptr_ptr = array(",
          "193:  \"ANY\"    => \"get_obj_zval_ptr_ptr(opline->op1_type, &opline->op1, execute_data, &free_op1, \\\\1)\",",
          "194:  \"TMP\"    => \"NULL\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192: $op1_get_obj_zval_ptr_deref = array(",
          "193:  \"ANY\"    => \"get_obj_zval_ptr(opline->op1_type, &opline->op1, execute_data, &free_op1, \\\\1)\",",
          "194:  \"TMP\"    => \"_get_zval_ptr_tmp(opline->op1.var, execute_data, &free_op1 TSRMLS_CC)\",",
          "195:  \"VAR\"    => \"_get_zval_ptr_var_deref(opline->op1.var, execute_data, &free_op1 TSRMLS_CC)\",",
          "196:  \"CONST\"  => \"opline->op1.zv\",",
          "197:  \"UNUSED\" => \"_get_obj_zval_ptr_unused(TSRMLS_C)\",",
          "198:  \"CV\"     => \"_get_zval_ptr_cv_deref_\\\\1(execute_data, opline->op1.var TSRMLS_CC)\",",
          "199: );",
          "201: $op2_get_obj_zval_ptr_deref = array(",
          "202:  \"ANY\"    => \"get_obj_zval_ptr(opline->op2_type, &opline->op2, execute_data, &free_op2, \\\\1)\",",
          "203:  \"TMP\"    => \"_get_zval_ptr_tmp(opline->op2.var, execute_data, &free_op2 TSRMLS_CC)\",",
          "204:  \"VAR\"    => \"_get_zval_ptr_var_deref(opline->op2.var, execute_data, &free_op2 TSRMLS_CC)\",",
          "205:  \"CONST\"  => \"opline->op2.zv\",",
          "206:  \"UNUSED\" => \"_get_obj_zval_ptr_unused(TSRMLS_C)\",",
          "207:  \"CV\"     => \"_get_zval_ptr_cv_deref_\\\\1(execute_data, opline->op2.var TSRMLS_CC)\",",
          "208: );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "331:   $op1_get_zval_ptr_deref, $op2_get_zval_ptr_deref,",
          "332:   $op1_get_zval_ptr_ptr, $op2_get_zval_ptr_ptr,",
          "333:   $op1_get_obj_zval_ptr, $op2_get_obj_zval_ptr,",
          "334:   $op1_get_obj_zval_ptr_ptr, $op2_get_obj_zval_ptr_ptr,",
          "335:   $op1_is_tmp_free, $op2_is_tmp_free, $op1_free, $op2_free,",
          "336:   $op1_free_op, $op2_free_op, $op1_free_op_if_var, $op2_free_op_if_var,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:   $op1_get_obj_zval_ptr_deref, $op2_get_obj_zval_ptr_deref,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:    \"/GET_OP2_ZVAL_PTR_PTR\\(([^)]*)\\)/\",",
          "353:    \"/GET_OP1_OBJ_ZVAL_PTR\\(([^)]*)\\)/\",",
          "354:    \"/GET_OP2_OBJ_ZVAL_PTR\\(([^)]*)\\)/\",",
          "355:    \"/GET_OP1_OBJ_ZVAL_PTR_PTR\\(([^)]*)\\)/\",",
          "356:    \"/GET_OP2_OBJ_ZVAL_PTR_PTR\\(([^)]*)\\)/\",",
          "357:    \"/IS_OP1_TMP_FREE\\(\\)/\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "374:    \"/GET_OP1_OBJ_ZVAL_PTR_DEREF\\(([^)]*)\\)/\",",
          "375:    \"/GET_OP2_OBJ_ZVAL_PTR_DEREF\\(([^)]*)\\)/\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "388:    $op2_get_zval_ptr_ptr[$op2],",
          "389:    $op1_get_obj_zval_ptr[$op1],",
          "390:    $op2_get_obj_zval_ptr[$op2],",
          "391:    $op1_get_obj_zval_ptr_ptr[$op1],",
          "392:    $op2_get_obj_zval_ptr_ptr[$op2],",
          "393:    $op1_is_tmp_free[$op1],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "412:    $op1_get_obj_zval_ptr_deref[$op1],",
          "413:    $op2_get_obj_zval_ptr_deref[$op2],",
          "",
          "---------------"
        ],
        "ext/ereg/ereg.c||ext/ereg/ereg.c": [
          "File: ext/ereg/ereg.c -> ext/ereg/ereg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350:  }",
          "351:  match_len = 1;",
          "355:  }",
          "357:  if (array && err != REG_NOMATCH) {",
          "",
          "[Removed Lines]",
          "353:  if (array && Z_ISREF_P(array)) {",
          "354:   array = Z_REFVAL_P(array);",
          "",
          "[Added Lines]",
          "353:  if (array) {",
          "354:   ZVAL_DEREF_REF(array);",
          "",
          "---------------"
        ],
        "ext/pcre/php_pcre.c||ext/pcre/php_pcre.c": [
          "File: ext/pcre/php_pcre.c -> ext/pcre/php_pcre.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "539:   RETURN_FALSE;",
          "540:  }",
          "544:  }",
          "545:  php_pcre_match_impl(pce, subject, subject_len, return_value, subpats,",
          "546:   global, ZEND_NUM_ARGS() >= 4, flags, start_offset TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "542:  if (subpats && Z_ISREF_P(subpats)) {",
          "543:   subpats = Z_REFVAL_P(subpats);",
          "",
          "[Added Lines]",
          "542:  if (subpats) {",
          "543:   ZVAL_DEREF_REF(subpats);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1392:   }",
          "1393:  }",
          "1394:  if (ZEND_NUM_ARGS() > 4) {",
          "1398:   zval_dtor(zcount);",
          "1399:   ZVAL_LONG(zcount, replace_count);",
          "1400:  }",
          "",
          "[Removed Lines]",
          "1395:   if (Z_ISREF_P(zcount)) {",
          "1396:    zcount = Z_REFVAL_P(zcount);",
          "1397:   }",
          "",
          "[Added Lines]",
          "1395:   ZVAL_DEREF_REF(zcount);",
          "",
          "---------------"
        ],
        "ext/standard/array.c||ext/standard/array.c": [
          "File: ext/standard/array.c -> ext/standard/array.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "288:     zend_hash_move_forward_ex(Z_ARRVAL_P(array), &pos)",
          "289:    ) {",
          "290:     Z_ARRVAL_P(array)->nApplyCount++;",
          "294:     cnt += php_count_recursive(element, COUNT_RECURSIVE TSRMLS_CC);",
          "295:     Z_ARRVAL_P(array)->nApplyCount--;",
          "296:    }",
          "",
          "[Removed Lines]",
          "291:     if (Z_ISREF_P(element)) {",
          "292:      element = Z_REFVAL_P(element);",
          "293:     }",
          "",
          "[Added Lines]",
          "291:     ZVAL_DEREF(element);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "421:  fval = &f->val;",
          "422:  sval = &s->val;",
          "432:  ZVAL_COPY_VALUE(&first, fval);",
          "433:  ZVAL_COPY_VALUE(&second, sval);",
          "",
          "[Removed Lines]",
          "424:  if (Z_ISREF_P(fval)) {",
          "425:   fval = Z_REFVAL_P(fval);",
          "426:  }",
          "428:  if (Z_ISREF_P(sval)) {",
          "429:   sval = Z_REFVAL_P(sval);",
          "430:  }",
          "",
          "[Added Lines]",
          "422:  ZVAL_DEREF(fval);",
          "423:  ZVAL_DEREF(sval);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1462: {",
          "1463:  zval *value_ptr, data;",
          "1468:  if (Z_TYPE_P(entry) == IS_STRING) {",
          "1469:   if ((value_ptr = zend_hash_find_ind(eg_active_symbol_table, Z_STR_P(entry))) != NULL) {",
          "1470:    ZVAL_DUP(&data, value_ptr);",
          "",
          "[Removed Lines]",
          "1465:  if (Z_ISREF_P(entry)) {",
          "1466:   entry = Z_REFVAL_P(entry);",
          "1467:  }",
          "",
          "[Added Lines]",
          "1457:  ZVAL_DEREF(entry);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1583:  zend_hash_internal_pointer_reset_ex(Z_ARRVAL_P(keys), &pos);",
          "1584:  while ((entry = zend_hash_get_current_data_ex(Z_ARRVAL_P(keys), &pos)) != NULL) {",
          "1590:   if (Z_TYPE_P(entry) == IS_LONG) {",
          "1591:    zval_add_ref(val);",
          "1592:    zend_hash_index_update(Z_ARRVAL_P(return_value), Z_LVAL_P(entry), val);",
          "",
          "[Removed Lines]",
          "1586:   if (UNEXPECTED(Z_ISREF_P(entry))) {",
          "1587:    entry = Z_REFVAL_P(entry);",
          "1588:   }",
          "",
          "[Added Lines]",
          "1575:   ZVAL_DEREF(entry);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2280:      HashTable *thash;",
          "2281:      zval tmp;",
          "2289:      thash = Z_TYPE_P(dest_zval) == IS_ARRAY ? Z_ARRVAL_P(dest_zval) : NULL;",
          "2290:      if ((thash && thash->nApplyCount > 1) || (src_entry == dest_entry && Z_ISREF_P(dest_entry) && (Z_REFCOUNT_P(dest_entry) % 2))) {",
          "2291:       php_error_docref(NULL TSRMLS_CC, E_WARNING, \"recursion detected\");",
          "",
          "[Removed Lines]",
          "2283:      if (Z_ISREF_P(src_zval)) {",
          "2284:       src_zval = Z_REFVAL_P(src_zval);",
          "2285:      }",
          "2286:      if (Z_ISREF_P(dest_zval)) {",
          "2287:       dest_zval = Z_REFVAL_P(dest_zval);",
          "2288:      }",
          "",
          "[Added Lines]",
          "2269:      ZVAL_DEREF(src_zval);",
          "2270:      ZVAL_DEREF(dest_zval);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2369:       zend_hash_move_forward_ex(src, &pos)) {",
          "2371:   src_zval = src_entry;",
          "2375:   switch (zend_hash_get_current_key_ex(src, &string_key, &num_key, 0, &pos)) {",
          "2376:    case HASH_KEY_IS_STRING:",
          "2377:     if (Z_TYPE_P(src_zval) != IS_ARRAY ||",
          "",
          "[Removed Lines]",
          "2372:   if (Z_ISREF_P(src_zval)) {",
          "2373:    src_zval = Z_REFVAL_P(src_zval);",
          "2374:   }",
          "",
          "[Added Lines]",
          "2354:   ZVAL_DEREF(src_zval);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2405:   }",
          "2407:   dest_zval = dest_entry;",
          "2411:   if (Z_ARRVAL_P(dest_zval)->nApplyCount > 1 ||",
          "2412:       Z_ARRVAL_P(src_zval)->nApplyCount > 1 ||",
          "2413:       (Z_ISREF_P(src_entry) && Z_ISREF_P(dest_entry) && Z_REF_P(src_entry) == Z_REF_P(dest_entry) && (Z_REFCOUNT_P(dest_entry) % 2))) {",
          "",
          "[Removed Lines]",
          "2408:   if (Z_ISREF_P(dest_zval)) {",
          "2409:    dest_zval = Z_REFVAL_P(dest_zval);",
          "2410:   }",
          "",
          "[Added Lines]",
          "2388:   ZVAL_DEREF(dest_zval);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2444:  for (i = 0; i < argc; i++) {",
          "2445:   zval *arg = args + i;",
          "2450:   if (Z_TYPE_P(arg) != IS_ARRAY) {",
          "2451:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Argument #%d is not an array\", i + 1);",
          "2452:    RETURN_NULL();",
          "",
          "[Removed Lines]",
          "2447:   if (Z_ISREF_P(arg)) {",
          "2448:    arg = Z_REFVAL_P(arg);",
          "2449:   }",
          "",
          "[Added Lines]",
          "2425:   ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2464:  for (i = 0; i < argc; i++) {",
          "2465:   zval *arg = args + i;",
          "2470:   if (!replace) {",
          "2471:    php_array_merge(Z_ARRVAL_P(return_value), Z_ARRVAL_P(arg), recursive TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2467:   if (Z_ISREF_P(arg)) {",
          "2468:    arg = Z_REFVAL_P(arg);",
          "2469:   }",
          "",
          "[Added Lines]",
          "2443:   ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3966:  for (i = 0; i < argc; i++) {",
          "3967:   zval *arg = &args[i];",
          "3972:   if (Z_TYPE_P(arg) == IS_ARRAY) {",
          "",
          "[Removed Lines]",
          "3969:   if (Z_ISREF_P(arg)) {",
          "3970:    arg = Z_REFVAL_P(arg);",
          "3971:   }",
          "",
          "[Added Lines]",
          "3943:   ZVAL_DEREF(arg);",
          "",
          "---------------"
        ],
        "ext/standard/proc_open.c||ext/standard/proc_open.c": [
          "File: ext/standard/proc_open.c -> ext/standard/proc_open.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "897:  proc->env = env;",
          "899:  if (pipes != NULL) {",
          "902:   zval_dtor(pipes);",
          "903:  }",
          "",
          "[Removed Lines]",
          "900:   ZEND_ASSERT(Z_ISREF_P(pipes));",
          "901:   pipes = Z_REFVAL_P(pipes);",
          "",
          "[Added Lines]",
          "900:   ZVAL_DEREF_REF(pipes);",
          "",
          "---------------"
        ],
        "ext/standard/string.c||ext/standard/string.c": [
          "File: ext/standard/string.c -> ext/standard/string.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2502:      zval *repl_str;",
          "2503:      zval zrepl;",
          "2509:      if (Z_TYPE_P(tmp_repl) != IS_STRING) {",
          "2510:       ZVAL_DUP(&zrepl, tmp_repl);",
          "2511:       convert_to_string(&zrepl);",
          "",
          "[Removed Lines]",
          "2505:      if (Z_ISREF_P(tmp_repl)) {",
          "2506:       tmp_repl = Z_REFVAL_P(tmp_repl);",
          "2507:      }",
          "",
          "[Added Lines]",
          "2505:      ZVAL_DEREF(tmp_repl);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4428:   array_init(&ret);",
          "4429:   sapi_module.treat_data(PARSE_STRING, res, &ret TSRMLS_CC);",
          "4434:   zval_dtor(arrayArg);",
          "4435:   ZVAL_COPY_VALUE(arrayArg, &ret);",
          "4436:  }",
          "",
          "[Removed Lines]",
          "4431:   if (Z_ISREF_P(arrayArg)) {",
          "4432:    arrayArg = Z_REFVAL_P(arrayArg);",
          "4433:   }",
          "",
          "[Added Lines]",
          "4428:   ZVAL_DEREF(arrayArg);",
          "",
          "---------------"
        ],
        "ext/standard/type.c||ext/standard/type.c": [
          "File: ext/standard/type.c -> ext/standard/type.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:   return;",
          "99:  }",
          "105:  if (!strcasecmp(type, \"integer\")) {",
          "106:   convert_to_long(var);",
          "107:  } else if (!strcasecmp(type, \"int\")) {",
          "",
          "[Removed Lines]",
          "101:  if (Z_TYPE_P(var)) {",
          "102:   var = Z_REFVAL_P(var);",
          "103:  }",
          "",
          "[Added Lines]",
          "101:  ZVAL_DEREF_REF(var);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "224:   RETURN_FALSE;",
          "225:  }",
          "230:  if (Z_TYPE_P(arg) == type) {",
          "231:   if (type == IS_OBJECT) {",
          "232:    zend_class_entry *ce;",
          "",
          "[Removed Lines]",
          "227:  if (Z_ISREF_P(arg)) {",
          "228:   arg = Z_REFVAL_P(arg);",
          "229:  }",
          "",
          "[Added Lines]",
          "224:  ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "392:   check_flags |= IS_CALLABLE_CHECK_SYNTAX_ONLY;",
          "393:  }",
          "394:  if (ZEND_NUM_ARGS() > 2) {",
          "397:   }",
          "398:   retval = zend_is_callable_ex(var, NULL, check_flags, &name, NULL, &error TSRMLS_CC);",
          "399:   zval_dtor(callable_name);",
          "",
          "[Removed Lines]",
          "395:   if (callable_name && Z_ISREF_P(callable_name)) {",
          "396:    callable_name = Z_REFVAL_P(callable_name);",
          "",
          "[Added Lines]",
          "390:   if (callable_name) {",
          "391:    ZVAL_DEREF(callable_name);",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "398:   return 0;",
          "399:  }",
          "405:  if (Z_OBJCE_P(rval) != PHP_IC_ENTRY &&",
          "406:   zend_hash_str_exists(&Z_OBJCE_P(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\")-1)) {",
          "407:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "",
          "[Removed Lines]",
          "401:  if (Z_ISREF_P(rval)) {",
          "402:   rval = Z_REFVAL_P(rval);",
          "403:  }",
          "",
          "[Added Lines]",
          "401:  ZVAL_DEREF(rval);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "442:  start = cursor;",
          "446: {",
          "447:  YYCTYPE yych;",
          "448:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "445: #line 446 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "442: #line 443 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "502:  yych = *(YYMARKER = ++YYCURSOR);",
          "503:  if (yych == ':') goto yy95;",
          "504: yy3:",
          "506:  { return 0; }",
          "508: yy4:",
          "509:  yych = *(YYMARKER = ++YYCURSOR);",
          "510:  if (yych == ':') goto yy89;",
          "",
          "[Removed Lines]",
          "505: #line 792 \"ext/standard/var_unserializer.re\"",
          "507: #line 508 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "502: #line 789 \"ext/standard/var_unserializer.re\"",
          "504: #line 505 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "547:  goto yy3;",
          "548: yy14:",
          "549:  ++YYCURSOR;",
          "551:  {",
          "553:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
          "555: }",
          "557: yy16:",
          "558:  yych = *++YYCURSOR;",
          "559:  goto yy3;",
          "",
          "[Removed Lines]",
          "550: #line 786 \"ext/standard/var_unserializer.re\"",
          "556: #line 557 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "547: #line 783 \"ext/standard/var_unserializer.re\"",
          "553: #line 554 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "583:  yych = *++YYCURSOR;",
          "584:  if (yych != '\"') goto yy18;",
          "585:  ++YYCURSOR;",
          "587:  {",
          "588:  size_t len, len2, len3, maxlen;",
          "589:  long elements;",
          "",
          "[Removed Lines]",
          "586: #line 647 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "583: #line 644 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "723:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "724: }",
          "726: yy25:",
          "727:  yych = *++YYCURSOR;",
          "728:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "725: #line 726 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "722: #line 723 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "747:  yych = *++YYCURSOR;",
          "748:  if (yych != '\"') goto yy18;",
          "749:  ++YYCURSOR;",
          "751:  {",
          "",
          "[Removed Lines]",
          "750: #line 639 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "747: #line 636 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "755:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "756:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "757: }",
          "759: yy32:",
          "760:  yych = *++YYCURSOR;",
          "761:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "758: #line 759 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "755: #line 756 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "776:  yych = *++YYCURSOR;",
          "777:  if (yych != '{') goto yy18;",
          "778:  ++YYCURSOR;",
          "780:  {",
          "781:  long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "779: #line 618 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "776: #line 615 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "798:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "799: }",
          "801: yy39:",
          "802:  yych = *++YYCURSOR;",
          "803:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "800: #line 801 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "797: #line 798 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "818:  yych = *++YYCURSOR;",
          "819:  if (yych != '\"') goto yy18;",
          "820:  ++YYCURSOR;",
          "822:  {",
          "823:  size_t len, maxlen;",
          "",
          "[Removed Lines]",
          "821: #line 588 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "818: #line 585 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "848:  efree(str);",
          "849:  return 1;",
          "850: }",
          "852: yy46:",
          "853:  yych = *++YYCURSOR;",
          "854:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "851: #line 852 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "848: #line 849 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "869:  yych = *++YYCURSOR;",
          "870:  if (yych != '\"') goto yy18;",
          "871:  ++YYCURSOR;",
          "873:  {",
          "874:  size_t len, maxlen;",
          "875:  char *str;",
          "",
          "[Removed Lines]",
          "872: #line 561 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "869: #line 558 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "896:  ZVAL_STRINGL(rval, str, len);",
          "897:  return 1;",
          "898: }",
          "900: yy53:",
          "901:  yych = *++YYCURSOR;",
          "902:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "899: #line 900 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "896: #line 897 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "984:  }",
          "985: yy63:",
          "986:  ++YYCURSOR;",
          "988:  {",
          "989: #if SIZEOF_LONG == 4",
          "990: use_double:",
          "",
          "[Removed Lines]",
          "987: #line 552 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "984: #line 549 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "993:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "994:  return 1;",
          "995: }",
          "997: yy65:",
          "998:  yych = *++YYCURSOR;",
          "999:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "996: #line 997 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "993: #line 994 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1052:  yych = *++YYCURSOR;",
          "1053:  if (yych != ';') goto yy18;",
          "1054:  ++YYCURSOR;",
          "1056:  {",
          "",
          "[Removed Lines]",
          "1055: #line 536 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1052: #line 533 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1069:  return 1;",
          "1070: }",
          "1072: yy76:",
          "1073:  yych = *++YYCURSOR;",
          "1074:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1071: #line 1072 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1068: #line 1069 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1095:  if (yych <= '9') goto yy79;",
          "1096:  if (yych != ';') goto yy18;",
          "1097:  ++YYCURSOR;",
          "1099:  {",
          "1100: #if SIZEOF_LONG == 4",
          "1101:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1098: #line 510 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1095: #line 507 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1121:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1122:  return 1;",
          "1123: }",
          "1125: yy83:",
          "1126:  yych = *++YYCURSOR;",
          "1127:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1124: #line 1125 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1121: #line 1122 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1129:  yych = *++YYCURSOR;",
          "1130:  if (yych != ';') goto yy18;",
          "1131:  ++YYCURSOR;",
          "1133:  {",
          "1135:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1136:  return 1;",
          "1137: }",
          "1139: yy87:",
          "1140:  ++YYCURSOR;",
          "1142:  {",
          "1144:  ZVAL_NULL(rval);",
          "1145:  return 1;",
          "1146: }",
          "1148: yy89:",
          "1149:  yych = *++YYCURSOR;",
          "1150:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1132: #line 504 \"ext/standard/var_unserializer.re\"",
          "1138: #line 1139 \"ext/standard/var_unserializer.c\"",
          "1141: #line 498 \"ext/standard/var_unserializer.re\"",
          "1147: #line 1148 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1129: #line 501 \"ext/standard/var_unserializer.re\"",
          "1135: #line 1136 \"ext/standard/var_unserializer.c\"",
          "1138: #line 495 \"ext/standard/var_unserializer.re\"",
          "1144: #line 1145 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1167:  if (yych <= '9') goto yy91;",
          "1168:  if (yych != ';') goto yy18;",
          "1169:  ++YYCURSOR;",
          "1171:  {",
          "1172:  long id;",
          "",
          "[Removed Lines]",
          "1170: #line 475 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1167: #line 472 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1191:  return 1;",
          "1192: }",
          "1194: yy95:",
          "1195:  yych = *++YYCURSOR;",
          "1196:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1193: #line 1194 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1190: #line 1191 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1213:  if (yych <= '9') goto yy97;",
          "1214:  if (yych != ';') goto yy18;",
          "1215:  ++YYCURSOR;",
          "1217:  {",
          "1218:  long id;",
          "",
          "[Removed Lines]",
          "1216: #line 450 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1213: #line 447 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1239:  return 1;",
          "1240: }",
          "1242: }",
          "1246:  return 0;",
          "",
          "[Removed Lines]",
          "1241: #line 1242 \"ext/standard/var_unserializer.c\"",
          "1243: #line 794 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
          "1240: #line 791 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "402:   return 0;",
          "403:  }",
          "409:  if (Z_OBJCE_P(rval) != PHP_IC_ENTRY &&",
          "410:   zend_hash_str_exists(&Z_OBJCE_P(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\")-1)) {",
          "411:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "",
          "[Removed Lines]",
          "405:  if (Z_ISREF_P(rval)) {",
          "406:   rval = Z_REFVAL_P(rval);",
          "407:  }",
          "",
          "[Added Lines]",
          "405:  ZVAL_DEREF(rval);",
          "",
          "---------------"
        ]
      }
    }
  ]
}