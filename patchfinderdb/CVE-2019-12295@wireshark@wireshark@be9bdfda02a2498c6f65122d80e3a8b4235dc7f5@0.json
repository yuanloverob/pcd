{
  "cve_id": "CVE-2019-12295",
  "cve_desc": "In Wireshark 3.0.0 to 3.0.1, 2.6.0 to 2.6.8, and 2.4.0 to 2.4.14, the dissection engine could crash. This was addressed in epan/packet.c by restricting the number of layers and consequently limiting recursion.",
  "repo": "wireshark/wireshark",
  "patch_hash": "be9bdfda02a2498c6f65122d80e3a8b4235dc7f5",
  "patch_info": {
    "commit_hash": "be9bdfda02a2498c6f65122d80e3a8b4235dc7f5",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/be9bdfda02a2498c6f65122d80e3a8b4235dc7f5",
    "files": [
      "epan/packet.c"
    ],
    "message": "Add dissection recursion checks.\n\nEnforce a maximum layer limit in call_dissector_work and\ndissector_try_heuristic.\n\nBug: 15778\nChange-Id: I691868e980384b76a64f88de4db5bb7340a7c4aa\nReviewed-on: https://code.wireshark.org/review/33301\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Dario Lombardo <lomato@gmail.com>\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
    "before_after_code_files": [
      "epan/packet.c||epan/packet.c"
    ]
  },
  "patch_diff": {
    "epan/packet.c||epan/packet.c": [
      "File: epan/packet.c -> epan/packet.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "729: call_dissector_work_error(dissector_handle_t handle, tvbuff_t *tvb,",
      "730:      packet_info *pinfo_arg, proto_tree *tree, void *);",
      "732: static int",
      "733: call_dissector_work(dissector_handle_t handle, tvbuff_t *tvb, packet_info *pinfo_arg,",
      "734:       proto_tree *tree, gboolean add_proto_name, void *data)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "737: #define PINFO_LAYER_MAX_RECURSION_DEPTH 500",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "751:  saved_proto = pinfo->current_proto;",
      "752:  saved_can_desegment = pinfo->can_desegment;",
      "753:  saved_layers_len = wmem_list_count(pinfo->layers);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "761:  DISSECTOR_ASSERT(saved_layers_len < PINFO_LAYER_MAX_RECURSION_DEPTH);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2724:  saved_layers_len = wmem_list_count(pinfo->layers);",
      "2727:  for (entry = sub_dissectors->dissectors; entry != NULL;",
      "2728:      entry = g_slist_next(entry)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2735:  DISSECTOR_ASSERT(saved_layers_len < PINFO_LAYER_MAX_RECURSION_DEPTH);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9d5f0411bdd4670f2345d8b56a6939d4823063b5",
      "candidate_info": {
        "commit_hash": "9d5f0411bdd4670f2345d8b56a6939d4823063b5",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/9d5f0411bdd4670f2345d8b56a6939d4823063b5",
        "files": [
          "epan/packet.c"
        ],
        "message": "Add dissection recursion checks.\n\nEnforce a maximum layer limit in call_dissector_work and\ndissector_try_heuristic.\n\nBug: 15778\nChange-Id: I691868e980384b76a64f88de4db5bb7340a7c4aa\nReviewed-on: https://code.wireshark.org/review/33301\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Dario Lombardo <lomato@gmail.com>\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit be9bdfda02a2498c6f65122d80e3a8b4235dc7f5)\nReviewed-on: https://code.wireshark.org/review/33309",
        "before_after_code_files": [
          "epan/packet.c||epan/packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/packet.c||epan/packet.c"
          ],
          "candidate": [
            "epan/packet.c||epan/packet.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/packet.c||epan/packet.c": [
          "File: epan/packet.c -> epan/packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "725: call_dissector_work_error(dissector_handle_t handle, tvbuff_t *tvb,",
          "726:      packet_info *pinfo_arg, proto_tree *tree, void *);",
          "728: static int",
          "729: call_dissector_work(dissector_handle_t handle, tvbuff_t *tvb, packet_info *pinfo_arg,",
          "730:       proto_tree *tree, gboolean add_proto_name, void *data)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "733: #define PINFO_LAYER_MAX_RECURSION_DEPTH 500",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "747:  saved_proto = pinfo->current_proto;",
          "748:  saved_can_desegment = pinfo->can_desegment;",
          "749:  saved_layers_len = wmem_list_count(pinfo->layers);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "757:  DISSECTOR_ASSERT(saved_layers_len < PINFO_LAYER_MAX_RECURSION_DEPTH);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2683:  saved_layers_len = wmem_list_count(pinfo->layers);",
          "2686:  for (entry = sub_dissectors->dissectors; entry != NULL;",
          "2687:      entry = g_slist_next(entry)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2694:  DISSECTOR_ASSERT(saved_layers_len < PINFO_LAYER_MAX_RECURSION_DEPTH);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b6e197da4c497e229ed3ebf6952bae5c426a820",
      "candidate_info": {
        "commit_hash": "7b6e197da4c497e229ed3ebf6952bae5c426a820",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/7b6e197da4c497e229ed3ebf6952bae5c426a820",
        "files": [
          "epan/packet.c"
        ],
        "message": "Add dissection recursion checks.\n\nEnforce a maximum layer limit in call_dissector_work and\ndissector_try_heuristic.\n\nBug: 15778\nChange-Id: I691868e980384b76a64f88de4db5bb7340a7c4aa\nReviewed-on: https://code.wireshark.org/review/33301\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Dario Lombardo <lomato@gmail.com>\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit be9bdfda02a2498c6f65122d80e3a8b4235dc7f5)\nReviewed-on: https://code.wireshark.org/review/33310",
        "before_after_code_files": [
          "epan/packet.c||epan/packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/packet.c||epan/packet.c"
          ],
          "candidate": [
            "epan/packet.c||epan/packet.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/packet.c||epan/packet.c": [
          "File: epan/packet.c -> epan/packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "700: call_dissector_work_error(dissector_handle_t handle, tvbuff_t *tvb,",
          "701:      packet_info *pinfo_arg, proto_tree *tree, void *);",
          "703: static int",
          "704: call_dissector_work(dissector_handle_t handle, tvbuff_t *tvb, packet_info *pinfo_arg,",
          "705:       proto_tree *tree, gboolean add_proto_name, void *data)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "708: #define PINFO_LAYER_MAX_RECURSION_DEPTH 500",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "721:  saved_proto = pinfo->current_proto;",
          "722:  saved_can_desegment = pinfo->can_desegment;",
          "723:  saved_layers_len = wmem_list_count(pinfo->layers);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "731:  DISSECTOR_ASSERT(saved_layers_len < PINFO_LAYER_MAX_RECURSION_DEPTH);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2591:  saved_layers_len = wmem_list_count(pinfo->layers);",
          "2594:  for (entry = sub_dissectors->dissectors; entry != NULL;",
          "2595:      entry = g_slist_next(entry)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2602:  DISSECTOR_ASSERT(saved_layers_len < PINFO_LAYER_MAX_RECURSION_DEPTH);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dd336961e582ee57e8487643cc3ab42ab289852c",
      "candidate_info": {
        "commit_hash": "dd336961e582ee57e8487643cc3ab42ab289852c",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/dd336961e582ee57e8487643cc3ab42ab289852c",
        "files": [
          "epan/packet.c"
        ],
        "message": "Add dissection recursion checks.\n\nEnforce a maximum layer limit in call_dissector_work and\ndissector_try_heuristic.\n\nBug: 15778\nChange-Id: I691868e980384b76a64f88de4db5bb7340a7c4aa\nReviewed-on: https://code.wireshark.org/review/33301\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Dario Lombardo <lomato@gmail.com>\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 3304f107dfe1eb0703bab7bcfe0f8dc6a3ac133a)\nReviewed-on: https://code.wireshark.org/review/33308",
        "before_after_code_files": [
          "epan/packet.c||epan/packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/packet.c||epan/packet.c"
          ],
          "candidate": [
            "epan/packet.c||epan/packet.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/packet.c||epan/packet.c": [
          "File: epan/packet.c -> epan/packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "729: call_dissector_work_error(dissector_handle_t handle, tvbuff_t *tvb,",
          "730:      packet_info *pinfo_arg, proto_tree *tree, void *);",
          "732: static int",
          "733: call_dissector_work(dissector_handle_t handle, tvbuff_t *tvb, packet_info *pinfo_arg,",
          "734:       proto_tree *tree, gboolean add_proto_name, void *data)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "737: #define PINFO_LAYER_MAX_RECURSION_DEPTH 500",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "751:  saved_proto = pinfo->current_proto;",
          "752:  saved_can_desegment = pinfo->can_desegment;",
          "753:  saved_layers_len = wmem_list_count(pinfo->layers);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "761:  DISSECTOR_ASSERT(saved_layers_len < PINFO_LAYER_MAX_RECURSION_DEPTH);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2724:  saved_layers_len = wmem_list_count(pinfo->layers);",
          "2727:  for (entry = sub_dissectors->dissectors; entry != NULL;",
          "2728:      entry = g_slist_next(entry)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2735:  DISSECTOR_ASSERT(saved_layers_len < PINFO_LAYER_MAX_RECURSION_DEPTH);",
          "",
          "---------------"
        ]
      }
    }
  ]
}