{
  "cve_id": "CVE-2018-9260",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.5 and 2.2.0 to 2.2.13, the IEEE 802.15.4 dissector could crash. This was addressed in epan/dissectors/packet-ieee802154.c by ensuring that an allocation step occurs.",
  "repo": "wireshark/wireshark",
  "patch_hash": "dd21b8130c6470d2d5076fcc46d5e9c3866f4609",
  "patch_info": {
    "commit_hash": "dd21b8130c6470d2d5076fcc46d5e9c3866f4609",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/dd21b8130c6470d2d5076fcc46d5e9c3866f4609",
    "files": [
      "epan/dissectors/packet-ieee802154.c"
    ],
    "message": "IEEE 802.15.4: always allocate protocol data if not present\n\nWhen using 2 passes, L2TP dissector can set a session info for previous\npackets, breaking the assumption that IEEE 802.15.4 dissector will\nalways be called on first pass.\nLet's always allocate the protocol data if missing, even if this is not\nthe first pass.\n\nBug: 14468\nChange-Id: I4cb7ea2e54c1b763a48b99c0d64f542552789d18\nReviewed-on: https://code.wireshark.org/review/26260\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c": [
      "File: epan/dissectors/packet-ieee802154.c -> epan/dissectors/packet-ieee802154.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1339:     packet->short_table = ieee802154_map.short_table;",
      "1343:         ieee_hints = wmem_new0(wmem_file_scope(), ieee802154_hints_t);",
      "1344:         p_add_proto_data(wmem_file_scope(), pinfo, proto_ieee802154, 0, ieee_hints);",
      "1347:     }",
      "",
      "[Removed Lines]",
      "1342:     if (!pinfo->fd->flags.visited) {",
      "1345:     } else {",
      "1346:         ieee_hints = (ieee802154_hints_t *)p_get_proto_data(wmem_file_scope(), pinfo, proto_ieee802154, 0);",
      "",
      "[Added Lines]",
      "1342:     if (!PINFO_FD_VISITED(pinfo) ||",
      "1343:         (ieee_hints = (ieee802154_hints_t *)p_get_proto_data(wmem_file_scope(), pinfo, proto_ieee802154, 0)) == NULL) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "14d6f717d8ea27688af48532edb1d29f502ea8f0",
      "candidate_info": {
        "commit_hash": "14d6f717d8ea27688af48532edb1d29f502ea8f0",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/14d6f717d8ea27688af48532edb1d29f502ea8f0",
        "files": [
          "epan/dissectors/packet-ieee802154.c"
        ],
        "message": "IEEE 802.15.4: always allocate protocol data if not present\n\nWhen using 2 passes, L2TP dissector can set a session info for previous\npackets, breaking the assumption that IEEE 802.15.4 dissector will\nalways be called on first pass.\nLet's always allocate the protocol data if missing, even if this is not\nthe first pass.\n\nBug: 14468\nChange-Id: I4cb7ea2e54c1b763a48b99c0d64f542552789d18\nReviewed-on: https://code.wireshark.org/review/26260\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit dd21b8130c6470d2d5076fcc46d5e9c3866f4609)\nReviewed-on: https://code.wireshark.org/review/26263\n(cherry picked from commit b87aa0326c5c6e6b27462a750582c2c99a85e9d4)\nReviewed-on: https://code.wireshark.org/review/26265",
        "before_after_code_files": [
          "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c": [
          "File: epan/dissectors/packet-ieee802154.c -> epan/dissectors/packet-ieee802154.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "866:     packet->short_table = ieee802154_map.short_table;",
          "870:         ieee_hints = wmem_new0(wmem_file_scope(), ieee802154_hints_t);",
          "871:         p_add_proto_data(wmem_file_scope(), pinfo, proto_ieee802154, 0, ieee_hints);",
          "874:     }",
          "",
          "[Removed Lines]",
          "869:     if(!pinfo->fd->flags.visited){",
          "872:     } else {",
          "873:         ieee_hints = (ieee802154_hints_t *)p_get_proto_data(wmem_file_scope(), pinfo, proto_ieee802154, 0);",
          "",
          "[Added Lines]",
          "869:     if (!PINFO_FD_VISITED(pinfo) ||",
          "870:         (ieee_hints = (ieee802154_hints_t *)p_get_proto_data(wmem_file_scope(), pinfo, proto_ieee802154, 0)) == NULL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b87aa0326c5c6e6b27462a750582c2c99a85e9d4",
      "candidate_info": {
        "commit_hash": "b87aa0326c5c6e6b27462a750582c2c99a85e9d4",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/b87aa0326c5c6e6b27462a750582c2c99a85e9d4",
        "files": [
          "epan/dissectors/packet-ieee802154.c"
        ],
        "message": "IEEE 802.15.4: always allocate protocol data if not present\n\nWhen using 2 passes, L2TP dissector can set a session info for previous\npackets, breaking the assumption that IEEE 802.15.4 dissector will\nalways be called on first pass.\nLet's always allocate the protocol data if missing, even if this is not\nthe first pass.\n\nBug: 14468\nChange-Id: I4cb7ea2e54c1b763a48b99c0d64f542552789d18\nReviewed-on: https://code.wireshark.org/review/26260\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit dd21b8130c6470d2d5076fcc46d5e9c3866f4609)\nReviewed-on: https://code.wireshark.org/review/26263",
        "before_after_code_files": [
          "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c": [
          "File: epan/dissectors/packet-ieee802154.c -> epan/dissectors/packet-ieee802154.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1208:     packet->short_table = ieee802154_map.short_table;",
          "1212:         ieee_hints = wmem_new0(wmem_file_scope(), ieee802154_hints_t);",
          "1213:         p_add_proto_data(wmem_file_scope(), pinfo, proto_ieee802154, 0, ieee_hints);",
          "1216:     }",
          "",
          "[Removed Lines]",
          "1211:     if(!pinfo->fd->flags.visited){",
          "1214:     } else {",
          "1215:         ieee_hints = (ieee802154_hints_t *)p_get_proto_data(wmem_file_scope(), pinfo, proto_ieee802154, 0);",
          "",
          "[Added Lines]",
          "1211:     if (!PINFO_FD_VISITED(pinfo) ||",
          "1212:         (ieee_hints = (ieee802154_hints_t *)p_get_proto_data(wmem_file_scope(), pinfo, proto_ieee802154, 0)) == NULL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "96c8c830869c9e7e896a67ad30360195cff0c4d8",
      "candidate_info": {
        "commit_hash": "96c8c830869c9e7e896a67ad30360195cff0c4d8",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/96c8c830869c9e7e896a67ad30360195cff0c4d8",
        "files": [
          "epan/dissectors/packet-ieee802154.c"
        ],
        "message": "IEEE 802.15.4: Whitespace and small comment cleanups\n\nNo code changes.\n\nChange-Id: I282334594be476596f30e8396fe66a995e3e0292\nReviewed-on: https://code.wireshark.org/review/22439\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ieee802154.c||epan/dissectors/packet-ieee802154.c": [
          "File: epan/dissectors/packet-ieee802154.c -> epan/dissectors/packet-ieee802154.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "746: };",
          "748: static const value_string zboss_page_names[] = {",
          "754:     { 0, NULL }",
          "755: };",
          "",
          "[Removed Lines]",
          "749:  { 0, \"2.4 GHz\" },",
          "750:  { 28, \"863-868 MHz band\"},",
          "751:  { 29, \"868-870, 870-876 MHz band\" },",
          "752:  { 30, \"870-876 MHz band\" },",
          "753:  { 31, \"915-921 MHz band\" },",
          "",
          "[Added Lines]",
          "748:     { 0, \"2.4 GHz\" },",
          "749:     { 28, \"863-868 MHz band\"},",
          "750:     { 29, \"868-870, 870-876 MHz band\" },",
          "751:     { 30, \"870-876 MHz band\" },",
          "752:     { 31, \"915-921 MHz band\" },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1066:     col_set_str(pinfo->cinfo, COL_PROTOCOL, \"IEEE 802.15.4 non-ASK PHY\");",
          "1072:         static const int * phr_fields[] = {",
          "1073:                     &hf_ieee802154_nonask_phy_length,",
          "1074:                     NULL",
          "1075:                 };",
          "1077:         proto_tree_add_item(ieee802154_tree, hf_ieee802154_nonask_phy_preamble, tvb, loffset, 4, ENC_LITTLE_ENDIAN);",
          "1079:         proto_tree_add_item(ieee802154_tree, hf_ieee802154_nonask_phy_sfd, tvb, loffset, 1, ENC_LITTLE_ENDIAN);",
          "1082:         proto_tree_add_bitmask(ieee802154_tree, tvb, loffset, hf_ieee802154_nonask_phr, ett_ieee802154_nonask_phy_phr,",
          "1083:             phr_fields, ENC_NA);",
          "1084:     }",
          "1090:     dissect_ieee802154(mac, pinfo, ieee802154_tree, NULL);",
          "",
          "[Removed Lines]",
          "1068:     phr=tvb_get_guint8(tvb,offset+4+1);",
          "1070:     if(tree) {",
          "1071:         guint loffset=offset;",
          "1078:         loffset+=4;",
          "1080:         loffset+=1;",
          "1086:     offset+=4+2*1;",
          "1087:     mac=tvb_new_subset_length_caplen(tvb,offset,-1, phr & IEEE802154_PHY_LENGTH_MASK);",
          "",
          "[Added Lines]",
          "1067:     phr = tvb_get_guint8(tvb,offset+4+1);",
          "1069:     if (tree) {",
          "1070:         guint loffset = offset;",
          "1077:         loffset +=4 ;",
          "1079:         loffset +=1 ;",
          "1085:     offset += 4+2*1;",
          "1086:     mac = tvb_new_subset_length_caplen(tvb,offset,-1, phr & IEEE802154_PHY_LENGTH_MASK);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1255:     packet->short_table = ieee802154_map.short_table;",
          "1259:         ieee_hints = wmem_new0(wmem_file_scope(), ieee802154_hints_t);",
          "1260:         p_add_proto_data(wmem_file_scope(), pinfo, proto_ieee802154, 0, ieee_hints);",
          "1261:     } else {",
          "",
          "[Removed Lines]",
          "1258:     if(!pinfo->fd->flags.visited){",
          "",
          "[Added Lines]",
          "1257:     if (!pinfo->fd->flags.visited) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1286:             expert_add_info(pinfo, proto_root, &ei_ieee802154_seqno_suppression);",
          "1287:         }",
          "1295:         }",
          "1298:     }",
          "",
          "[Removed Lines]",
          "1289:     packet->seqno = tvb_get_guint8(tvb, offset);",
          "1290:     if (tree) {",
          "1291:         proto_tree_add_uint(ieee802154_tree, hf_ieee802154_seqno, tvb, offset, 1, packet->seqno);",
          "1293:         if (packet->frame_type == IEEE802154_FCF_ACK) {",
          "1294:             proto_item_append_text(proto_root, \", Sequence Number: %u\", packet->seqno);",
          "1296:     }",
          "1297:     offset += 1;",
          "",
          "[Added Lines]",
          "1288:         packet->seqno = tvb_get_guint8(tvb, offset);",
          "1289:         if (tree) {",
          "1290:             proto_tree_add_uint(ieee802154_tree, hf_ieee802154_seqno, tvb, offset, 1, packet->seqno);",
          "1292:             if (packet->frame_type == IEEE802154_FCF_ACK) {",
          "1293:                 proto_item_append_text(proto_root, \", Sequence Number: %u\", packet->seqno);",
          "1294:             }",
          "1296:         offset += 1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1847:     }",
          "1849:     if (offset > 0) {",
          "1852:     }",
          "",
          "[Removed Lines]",
          "1850:       payload_tvb = tvb_new_subset_remaining(payload_tvb, offset);",
          "1851:       offset = 0;",
          "",
          "[Added Lines]",
          "1849:         payload_tvb = tvb_new_subset_remaining(payload_tvb, offset);",
          "1850:         offset = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1990: static void",
          "1992:     proto_item  *tsch_channel_hopping_data_item = NULL;",
          "1993:     proto_tree  *tsch_channel_hopping_data_tree = NULL;",
          "1994:     static const int * fields_long[] = {",
          "",
          "[Removed Lines]",
          "1991: dissect_802154_channel_hopping(tvbuff_t *tvb, proto_tree *tree, guint16 psie_remaining, guint *offset){",
          "",
          "[Added Lines]",
          "1990: dissect_802154_channel_hopping(tvbuff_t *tvb, proto_tree *tree, guint16 psie_remaining, guint *offset)",
          "1991: {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2006:     proto_tree_add_item(tsch_channel_hopping_data_tree, hf_ieee802154_tsch_hopping_sequence_id, tvb, (*offset), 1, ENC_LITTLE_ENDIAN);",
          "2009:         proto_tree_add_item(tsch_channel_hopping_data_tree, hf_ieee802154_mlme_ie_data, tvb, *offset, psie_remaining, ENC_NA);",
          "2010:     }",
          "2021: static void",
          "2023:     proto_item  *tsch_sync_data_item = NULL;",
          "2024:     proto_tree  *tsch_sync_data_tree = NULL;",
          "",
          "[Removed Lines]",
          "2008:     if (psie_remaining > 1){",
          "2022: dissect_802154_tsch_time_sync(tvbuff_t *tvb, proto_tree *tree, int *offset, guint psie_remaining) {",
          "",
          "[Added Lines]",
          "2008:     if (psie_remaining > 1) {",
          "2022: dissect_802154_tsch_time_sync(tvbuff_t *tvb, proto_tree *tree, int *offset, guint psie_remaining)",
          "2023: {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2047: static void",
          "2048: dissect_802154_tsch_slotframe_link(tvbuff_t *tvb, proto_tree *tree, guint16 psie_remaining, guint16 psie_id,",
          "2050:     guint8      nb_slotframes;",
          "2051:     guint8      nb_slotframes_aux;",
          "2052:     guint8      nb_links;",
          "",
          "[Removed Lines]",
          "2049:                                    guint *offset){",
          "",
          "[Added Lines]",
          "2050:                                    guint *offset)",
          "2051: {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2079:     slotframe_index = 1;",
          "2081:         nb_links     = tvb_get_guint8(tvb, *offset + 3);",
          "2082:         nb_links_aux = nb_links;",
          "",
          "[Removed Lines]",
          "2080:     while(nb_slotframes_aux > 0){",
          "",
          "[Added Lines]",
          "2082:     while (nb_slotframes_aux > 0) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2192:     pie_length -= 5;",
          "2194:     if (type == IETF_6TOP_TYPE_REQUEST) {",
          "2196:         case IETF_6TOP_CMD_ADD:",
          "2197:         case IETF_6TOP_CMD_DELETE:",
          "2198:             if (pie_length < 4) {",
          "",
          "[Removed Lines]",
          "2195:         switch(code) {",
          "",
          "[Added Lines]",
          "2197:         switch (code) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2276:     if (have_cell_list) {",
          "2277:         cell_list_tree = proto_tree_add_subtree_format(sixtop_tree, tvb, offset, pie_length, ett_ieee802154_p_ie_6top_cell_list, NULL,",
          "2278:                                                        \"Cell List\");",
          "2280:             cell_tree = proto_tree_add_subtree_format(cell_list_tree, tvb, offset, 4, ett_ieee802154_p_ie_6top_cell, NULL,",
          "2281:                                                       \"Cell [%u]\", i);",
          "2282:             proto_tree_add_item(cell_tree, hf_ieee802154_6top_slot_offset, tvb, offset, 2, ENC_LITTLE_ENDIAN);",
          "",
          "[Removed Lines]",
          "2279:         for (i = 0; pie_length > 0; pie_length -= 4, offset += 4, i++){",
          "",
          "[Added Lines]",
          "2281:         for (i = 0; pie_length > 0; pie_length -= 4, offset += 4, i++) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2811: }",
          "2817: static void",
          "2819:     proto_tree * timeslot_tree;",
          "2820:     proto_item * timeslot_item;",
          "",
          "[Removed Lines]",
          "2818: dissect_802154_tsch_timeslot(tvbuff_t *tvb, proto_tree *tree, guint psie_remaining, guint16 psie_id, int *offset){",
          "",
          "[Added Lines]",
          "2820: dissect_802154_tsch_timeslot(tvbuff_t *tvb, proto_tree *tree, guint psie_remaining, guint16 psie_id, int *offset)",
          "2821: {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2834: }",
          "2836: static void",
          "2839:     guint8  filter;",
          "2840:     guint8  attr_len;",
          "2841:     guint32 attr_bitmap = 0;",
          "",
          "[Removed Lines]",
          "2837: dissect_802154_enhanced_beacon_filter(tvbuff_t *tvb, proto_tree *tree, guint16 psie_remaining, gint *offset){",
          "",
          "[Added Lines]",
          "2840: dissect_802154_enhanced_beacon_filter(tvbuff_t *tvb, proto_tree *tree, guint16 psie_remaining, gint *offset)",
          "2841: {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3148:     reason = tvb_get_guint8(tvb, 0);",
          "3149:     if (tree) {",
          "3150:         ti = proto_tree_add_uint(subtree, hf_ieee802154_disassoc_reason, tvb, 0, 1, reason);",
          "3152:             case 0x01:",
          "3153:                 proto_item_append_text(ti, \" (Coordinator requests device to leave)\");",
          "3154:                 break;",
          "",
          "[Removed Lines]",
          "3151:         switch(reason) {",
          "",
          "[Added Lines]",
          "3154:         switch (reason) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4008:             IEEE802154_PHY_LENGTH_MASK, NULL, HFILL }},",
          "4010:         { &hf_ieee802154_nonask_phr,",
          "4012:             0x0, NULL, HFILL }},",
          "4013:     };",
          "",
          "[Removed Lines]",
          "4011:         { \"PHR\",                   \"wpan-nonask-phy.phr\", FT_UINT8, BASE_HEX, NULL,",
          "",
          "[Added Lines]",
          "4014:         { \"PHR\",                            \"wpan-nonask-phy.phr\", FT_UINT8, BASE_HEX, NULL,",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4205:         { \"Enhanced Beacon Filter IE\",      \"wpan.enhanced_beacon_filter\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL }},",
          "4207:         { &hf_ieee802154_payload_ie_tlv,",
          "4209:             0x0, NULL, HFILL }},",
          "4211:         { &hf_ieee802154_payload_ie_type,",
          "",
          "[Removed Lines]",
          "4208:         { \"Payload IE TLV\",                         \"wpan.payload_ie_tlv\", FT_UINT16, BASE_HEX, NULL,",
          "",
          "[Added Lines]",
          "4211:         { \"Payload IE TLV\",                 \"wpan.payload_ie_tlv\", FT_UINT16, BASE_HEX, NULL,",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4237:                 IEEE802154_PSIE_LENGTH_MASK_SHORT, NULL, HFILL }},",
          "4239:         { &hf_ieee802154_psie_long,",
          "4241:             0x0, NULL, HFILL }},",
          "4243:         { &hf_ieee802154_psie_type_long,",
          "",
          "[Removed Lines]",
          "4240:         { \"Payload Sub IE (long)\",         \"wpan.payload_sub_ie.long\", FT_UINT16, BASE_HEX, NULL,",
          "",
          "[Added Lines]",
          "4243:         { \"Payload Sub IE (long)\",          \"wpan.payload_sub_ie.long\", FT_UINT16, BASE_HEX, NULL,",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4261:             NULL, HFILL }},",
          "4263:         { &hf_ieee802154_tsch_asn,",
          "4265:             NULL, HFILL }},",
          "4267:         { &hf_ieee802154_tsch_join_metric,",
          "4269:             NULL, HFILL }},",
          "4271:         { &hf_ieee802154_tsch_channel_hopping,",
          "4273:             NULL, HFILL }},",
          "4275:         { &hf_ieee802154_tsch_slotframe,",
          "4278:         { &hf_ieee802154_tsch_slotframe_list,",
          "4281:         { &hf_ieee802154_tsch_link_info,",
          "4284:         { &hf_ieee802154_tsch_slotf_link_nb_slotf,",
          "4286:             NULL, HFILL }},",
          "4288:         { &hf_ieee802154_tsch_slotf_link_slotf_handle,",
          "4290:             NULL, HFILL }},",
          "4292:         { &hf_ieee802154_tsch_slotf_size,",
          "4294:             NULL, HFILL }},",
          "4296:         { &hf_ieee802154_tsch_slotf_link_nb_links,",
          "4298:             NULL, HFILL }},",
          "4300:         { &hf_ieee802154_tsch_slotf_link_timeslot,",
          "",
          "[Removed Lines]",
          "4264:         { \"Absolute Slot Number\",                  \"wpan.tsch.asn\", FT_UINT40, BASE_DEC, NULL, 0x0,",
          "4268:         { \"Join Metric\",                           \"wpan.tsch.join_metric\", FT_UINT8, BASE_DEC, NULL, 0x0,",
          "4272:         { \"Channel Hopping IE\",                    \"wpan.channel_hopping\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "4276:         { \"Slotframe IE\",   \"wpan.tsch.slotframe\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL }},",
          "4279:         { \"Slotframe info list\",   \"wpan.tsch.slotframe_list\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL }},",
          "4282:         { \"Link Information\",   \"wpan.tsch.link_info\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL }},",
          "4285:         { \"Number of Slotframes\",                   \"wpan.tsch.slotframe_num\", FT_UINT8, BASE_DEC, NULL, 0x0,",
          "4289:         { \"Slotframe handle\",                       \"wpan.tsch.slotframe_handle\", FT_UINT8, BASE_DEC, NULL, 0x0,",
          "4293:         { \"Slotframe size\",                       \"wpan.tsch.slotframe_size\", FT_UINT16, BASE_DEC, NULL, 0x0,",
          "4297:         { \"Number of Links\",                       \"wpan.tsch.nb_links\", FT_UINT8, BASE_DEC, NULL, 0x0,",
          "",
          "[Added Lines]",
          "4267:         { \"Absolute Slot Number\",           \"wpan.tsch.asn\", FT_UINT40, BASE_DEC, NULL, 0x0,",
          "4271:         { \"Join Metric\",                    \"wpan.tsch.join_metric\", FT_UINT8, BASE_DEC, NULL, 0x0,",
          "4275:         { \"Channel Hopping IE\",             \"wpan.channel_hopping\", FT_NONE, BASE_NONE, NULL, 0x0,",
          "4279:         { \"Slotframe IE\", \"wpan.tsch.slotframe\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL }},",
          "4282:         { \"Slotframe info list\", \"wpan.tsch.slotframe_list\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL }},",
          "4285:         { \"Link Information\", \"wpan.tsch.link_info\", FT_NONE, BASE_NONE, NULL, 0x0, NULL, HFILL }},",
          "4288:         { \"Number of Slotframes\",           \"wpan.tsch.slotframe_num\", FT_UINT8, BASE_DEC, NULL, 0x0,",
          "4292:         { \"Slotframe handle\",               \"wpan.tsch.slotframe_handle\", FT_UINT8, BASE_DEC, NULL, 0x0,",
          "4296:         { \"Slotframe size\",                 \"wpan.tsch.slotframe_size\", FT_UINT16, BASE_DEC, NULL, 0x0,",
          "4300:         { \"Number of Links\",                \"wpan.tsch.nb_links\", FT_UINT8, BASE_DEC, NULL, 0x0,",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4302:             NULL, HFILL }},",
          "4304:         { &hf_ieee802154_tsch_slotf_link_channel_offset,",
          "4306:             NULL, HFILL }},",
          "4308:         { &hf_ieee802154_tsch_slotf_link_options,",
          "4310:             NULL, HFILL }},",
          "4312:         { &hf_ieee802154_tsch_hopping_sequence_id,",
          "4314:             NULL, HFILL }},",
          "4316:         { &hf_ieee802154_psie_eb_filter_pjoin,",
          "",
          "[Removed Lines]",
          "4305:         { \"Channel Offset\",                       \"wpan.tsch.channel_offset\", FT_UINT16, BASE_DEC, NULL, 0x0,",
          "4309:         { \"Link Options\",                       \"wpan.tsch.link_options\", FT_UINT8, BASE_DEC, NULL, 0x0,",
          "4313:         { \"Hopping Sequence ID\",                   \"wpan.tsch.hopping_sequence_id\", FT_UINT8, BASE_HEX, NULL, 0x0,",
          "",
          "[Added Lines]",
          "4308:         { \"Channel Offset\",                 \"wpan.tsch.channel_offset\", FT_UINT16, BASE_DEC, NULL, 0x0,",
          "4312:         { \"Link Options\",                   \"wpan.tsch.link_options\", FT_UINT8, BASE_DEC, NULL, 0x0,",
          "4316:         { \"Hopping Sequence ID\",            \"wpan.tsch.hopping_sequence_id\", FT_UINT8, BASE_HEX, NULL, 0x0,",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "4559:             \"A flag defining the direction of the GTS Slot.\", HFILL }},",
          "4561:         { &hf_ieee802154_gts_address,",
          "4563:             NULL, HFILL }},",
          "4565:         { &hf_ieee802154_pending16,",
          "",
          "[Removed Lines]",
          "4562:         { \"Address\",                  \"wpan.gts.address\", FT_UINT16, BASE_HEX, NULL, 0x0,",
          "",
          "[Added Lines]",
          "4565:         { \"Address\",                    \"wpan.gts.address\", FT_UINT16, BASE_HEX, NULL, 0x0,",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "4901:     static gboolean            prefs_initialized = FALSE;",
          "4902:     static unsigned int        old_ieee802154_ethertype;",
          "4906:         zigbee_beacon_handle = find_dissector_add_dependency(\"zbee_beacon\", proto_ieee802154);",
          "4907:         zigbee_ie_handle = find_dissector_add_dependency(\"zbee_ie\", proto_ieee802154);",
          "",
          "[Removed Lines]",
          "4904:     if (!prefs_initialized){",
          "",
          "[Added Lines]",
          "4907:     if (!prefs_initialized) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}