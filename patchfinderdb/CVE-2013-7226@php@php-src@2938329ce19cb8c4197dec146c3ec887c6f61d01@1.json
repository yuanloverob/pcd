{
  "cve_id": "CVE-2013-7226",
  "cve_desc": "Integer overflow in the gdImageCrop function in ext/gd/gd.c in PHP 5.5.x before 5.5.9 allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via an imagecrop function call with a large x dimension value, leading to a heap-based buffer overflow.",
  "repo": "php/php-src",
  "patch_hash": "2938329ce19cb8c4197dec146c3ec887c6f61d01",
  "patch_info": {
    "commit_hash": "2938329ce19cb8c4197dec146c3ec887c6f61d01",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/2938329ce19cb8c4197dec146c3ec887c6f61d01",
    "files": [
      "NEWS",
      "ext/gd/gd.c",
      "ext/gd/tests/bug66356.phpt",
      "main/php_version.h"
    ],
    "message": "Fixed bug #66356 (Heap Overflow Vulnerability in imagecrop())\n\nAnd also fixed the bug: arguments are altered after some calls",
    "before_after_code_files": [
      "ext/gd/gd.c||ext/gd/gd.c",
      "ext/gd/tests/bug66356.phpt||ext/gd/tests/bug66356.phpt",
      "main/php_version.h||main/php_version.h"
    ]
  },
  "patch_diff": {
    "ext/gd/gd.c||ext/gd/gd.c": [
      "File: ext/gd/gd.c -> ext/gd/gd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1538:    break;",
      "1539:   }",
      "1544:  }",
      "1546:  gdImageSetStyle(im, stylearr, index);",
      "",
      "[Removed Lines]",
      "1541:   convert_to_long_ex(item);",
      "1543:   stylearr[index++] = Z_LVAL_PP(item);",
      "",
      "[Added Lines]",
      "1541:   if (Z_TYPE_PP(item) != IS_LONG) {",
      "1542:    zval lval;",
      "1543:    lval = **item;",
      "1544:    zval_copy_ctor(&lval);",
      "1545:    convert_to_long(&lval);",
      "1546:    stylearr[index++] = Z_LVAL(lval);",
      "1547:   } else {",
      "1548:    stylearr[index++] = Z_LVAL_PP(item);",
      "1549:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3347:  for (i = 0; i < npoints; i++) {",
      "3348:   if (zend_hash_index_find(Z_ARRVAL_P(POINTS), (i * 2), (void **) &var) == SUCCESS) {",
      "3352:   }",
      "3353:   if (zend_hash_index_find(Z_ARRVAL_P(POINTS), (i * 2) + 1, (void **) &var) == SUCCESS) {",
      "3357:   }",
      "3358:  }",
      "",
      "[Removed Lines]",
      "3349:    SEPARATE_ZVAL((var));",
      "3350:    convert_to_long(*var);",
      "3351:    points[i].x = Z_LVAL_PP(var);",
      "3354:    SEPARATE_ZVAL(var);",
      "3355:    convert_to_long(*var);",
      "3356:    points[i].y = Z_LVAL_PP(var);",
      "",
      "[Added Lines]",
      "3355:    if (Z_TYPE_PP(var) != IS_LONG) {",
      "3356:     zval lval;",
      "3357:     lval = **var;",
      "3358:     zval_copy_ctor(&lval);",
      "3359:     convert_to_long(&lval);",
      "3360:     points[i].x = Z_LVAL(lval);",
      "3361:    } else {",
      "3362:     points[i].x = Z_LVAL_PP(var);",
      "3363:    }",
      "3366:    if (Z_TYPE_PP(var) != IS_LONG) {",
      "3367:     zval lval;",
      "3368:     lval = **var;",
      "3369:     zval_copy_ctor(&lval);",
      "3370:     convert_to_long(&lval);",
      "3371:     points[i].y = Z_LVAL(lval);",
      "3372:    } else {",
      "3373:     points[i].y = Z_LVAL_PP(var);",
      "3374:    }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "4860:    for (j=0; j<3; j++) {",
      "4861:     if (zend_hash_index_find(Z_ARRVAL_PP(var), (j), (void **) &var2) == SUCCESS) {",
      "4865:     } else {",
      "4866:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"You must have a 3x3 matrix\");",
      "4867:      RETURN_FALSE;",
      "",
      "[Removed Lines]",
      "4862:      SEPARATE_ZVAL(var2);",
      "4863:      convert_to_double(*var2);",
      "4864:      matrix[i][j] = (float)Z_DVAL_PP(var2);",
      "",
      "[Added Lines]",
      "4880:      if (Z_TYPE_PP(var2) != IS_DOUBLE) {",
      "4881:       zval dval;",
      "4882:       dval = **var;",
      "4883:       zval_copy_ctor(&dval);",
      "4884:       convert_to_double(&dval);",
      "4885:       matrix[i][j] = (float)Z_DVAL(dval);",
      "4886:      } else {",
      "4887:       matrix[i][j] = (float)Z_DVAL_PP(var2);",
      "4888:      }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4954:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
      "4956:  if (zend_hash_find(HASH_OF(z_rect), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
      "4958:  } else {",
      "4959:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
      "4960:   RETURN_FALSE;",
      "4961:  }",
      "4963:  if (zend_hash_find(HASH_OF(z_rect), \"y\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
      "4965:  } else {",
      "4966:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
      "4967:   RETURN_FALSE;",
      "4968:  }",
      "4970:  if (zend_hash_find(HASH_OF(z_rect), \"width\", sizeof(\"width\"), (void **)&tmp) != FAILURE) {",
      "4972:  } else {",
      "4973:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing width\");",
      "4974:   RETURN_FALSE;",
      "4975:  }",
      "4977:  if (zend_hash_find(HASH_OF(z_rect), \"height\", sizeof(\"height\"), (void **)&tmp) != FAILURE) {",
      "4979:  } else {",
      "4980:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing height\");",
      "4981:   RETURN_FALSE;",
      "",
      "[Removed Lines]",
      "4957:   rect.x = Z_LVAL_PP(tmp);",
      "4964:   rect.y = Z_LVAL_PP(tmp);",
      "4971:   rect.width = Z_LVAL_PP(tmp);",
      "4978:   rect.height = Z_LVAL_PP(tmp);",
      "",
      "[Added Lines]",
      "4981:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "4982:    zval lval;",
      "4983:    lval = **tmp;",
      "4984:    zval_copy_ctor(&lval);",
      "4985:    convert_to_long(&lval);",
      "4986:    rect.x = Z_LVAL(lval);",
      "4987:   } else {",
      "4988:    rect.x = Z_LVAL_PP(tmp);",
      "4989:   }",
      "4996:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "4997:    zval lval;",
      "4998:    lval = **tmp;",
      "4999:    zval_copy_ctor(&lval);",
      "5000:    convert_to_long(&lval);",
      "5001:    rect.y = Z_LVAL(lval);",
      "5002:   } else {",
      "5003:    rect.y = Z_LVAL_PP(tmp);",
      "5004:   }",
      "5011:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5012:    zval lval;",
      "5013:    lval = **tmp;",
      "5014:    zval_copy_ctor(&lval);",
      "5015:    convert_to_long(&lval);",
      "5016:    rect.width = Z_LVAL(lval);",
      "5017:   } else {",
      "5018:    rect.width = Z_LVAL_PP(tmp);",
      "5019:   }",
      "5026:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5027:    zval lval;",
      "5028:    lval = **tmp;",
      "5029:    zval_copy_ctor(&lval);",
      "5030:    convert_to_long(&lval);",
      "5031:    rect.height = Z_LVAL(lval);",
      "5032:   } else {",
      "5033:    rect.height = Z_LVAL_PP(tmp);",
      "5034:   }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "5124:      affine[i] = Z_DVAL_PP(zval_affine_elem);",
      "5125:      break;",
      "5126:     case IS_STRING:",
      "5129:      break;",
      "5130:     default:",
      "5131:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid type for element %i\", i);",
      "",
      "[Removed Lines]",
      "5127:      convert_to_double_ex(zval_affine_elem);",
      "5128:      affine[i] = Z_DVAL_PP(zval_affine_elem);",
      "",
      "[Added Lines]",
      "5183:      {",
      "5184:       zval dval;",
      "5185:       dval = **zval_affine_elem;",
      "5186:       zval_copy_ctor(&dval);",
      "5187:       convert_to_double(&dval);",
      "5188:       affine[i] = Z_DVAL(dval);",
      "5189:      }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "5137:  if (z_rect != NULL) {",
      "5138:   if (zend_hash_find(HASH_OF(z_rect), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
      "5141:   } else {",
      "5142:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
      "5143:    RETURN_FALSE;",
      "5144:   }",
      "5146:   if (zend_hash_find(HASH_OF(z_rect), \"y\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
      "5149:   } else {",
      "5150:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
      "5151:    RETURN_FALSE;",
      "5152:   }",
      "5154:   if (zend_hash_find(HASH_OF(z_rect), \"width\", sizeof(\"width\"), (void **)&tmp) != FAILURE) {",
      "5157:   } else {",
      "5158:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing width\");",
      "5159:    RETURN_FALSE;",
      "5160:   }",
      "5162:   if (zend_hash_find(HASH_OF(z_rect), \"height\", sizeof(\"height\"), (void **)&tmp) != FAILURE) {",
      "5165:   } else {",
      "5166:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing height\");",
      "5167:    RETURN_FALSE;",
      "",
      "[Removed Lines]",
      "5139:    convert_to_long_ex(tmp);",
      "5140:    rect.x = Z_LVAL_PP(tmp);",
      "5147:    convert_to_long_ex(tmp);",
      "5148:    rect.y = Z_LVAL_PP(tmp);",
      "5155:    convert_to_long_ex(tmp);",
      "5156:    rect.width = Z_LVAL_PP(tmp);",
      "5163:    convert_to_long_ex(tmp);",
      "5164:    rect.height = Z_LVAL_PP(tmp);",
      "",
      "[Added Lines]",
      "5200:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5201:     zval lval;",
      "5202:     lval = **tmp;",
      "5203:     zval_copy_ctor(&lval);",
      "5204:     convert_to_long(&lval);",
      "5205:     rect.x = Z_LVAL(lval);",
      "5206:    } else {",
      "5207:     rect.x = Z_LVAL_PP(tmp);",
      "5208:    }",
      "5215:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5216:     zval lval;",
      "5217:     lval = **tmp;",
      "5218:     zval_copy_ctor(&lval);",
      "5219:     convert_to_long(&lval);",
      "5220:     rect.y = Z_LVAL(lval);",
      "5221:    } else {",
      "5222:     rect.y = Z_LVAL_PP(tmp);",
      "5223:    }",
      "5230:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5231:     zval lval;",
      "5232:     lval = **tmp;",
      "5233:     zval_copy_ctor(&lval);",
      "5234:     convert_to_long(&lval);",
      "5235:     rect.width = Z_LVAL(lval);",
      "5236:    } else {",
      "5237:     rect.width = Z_LVAL_PP(tmp);",
      "5238:    }",
      "5245:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5246:     zval lval;",
      "5247:     lval = **tmp;",
      "5248:     zval_copy_ctor(&lval);",
      "5249:     convert_to_long(&lval);",
      "5250:     rect.height = Z_LVAL(lval);",
      "5251:    } else {",
      "5252:     rect.height = Z_LVAL_PP(tmp);",
      "5253:    }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "5211:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Array expected as options\");",
      "5212:    }",
      "5213:    if (zend_hash_find(HASH_OF(options), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
      "5216:    } else {",
      "5217:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
      "5218:     RETURN_FALSE;",
      "5219:    }",
      "5221:    if (zend_hash_find(HASH_OF(options), \"y\", sizeof(\"y\"), (void **)&tmp) != FAILURE) {",
      "5224:    } else {",
      "5225:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
      "5226:     RETURN_FALSE;",
      "",
      "[Removed Lines]",
      "5214:     convert_to_double_ex(tmp);",
      "5215:     x = Z_DVAL_PP(tmp);",
      "5222:     convert_to_double_ex(tmp);",
      "5223:     y = Z_DVAL_PP(tmp);",
      "",
      "[Added Lines]",
      "5303:     if (Z_TYPE_PP(tmp) != IS_DOUBLE) {",
      "5304:      zval dval;",
      "5305:      dval = **tmp;",
      "5306:      zval_copy_ctor(&dval);",
      "5307:      convert_to_double(&dval);",
      "5308:      x = Z_DVAL(dval);",
      "5309:     } else {",
      "5310:      x = Z_DVAL_PP(tmp);",
      "5311:     }",
      "5318:     if (Z_TYPE_PP(tmp) != IS_DOUBLE) {",
      "5319:      zval dval;",
      "5320:      dval = **tmp;",
      "5321:      zval_copy_ctor(&dval);",
      "5322:      convert_to_double(&dval);",
      "5323:      y = Z_DVAL(dval);",
      "5324:     } else {",
      "5325:      y = Z_DVAL_PP(tmp);",
      "5326:     }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "5300:      m1[i] = Z_DVAL_PP(tmp);",
      "5301:      break;",
      "5302:     case IS_STRING:",
      "5305:      break;",
      "5306:     default:",
      "5307:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid type for element %i\", i);",
      "",
      "[Removed Lines]",
      "5303:      convert_to_double_ex(tmp);",
      "5304:      m1[i] = Z_DVAL_PP(tmp);",
      "",
      "[Added Lines]",
      "5406:      {",
      "5407:       zval dval;",
      "5408:       dval = **tmp;",
      "5409:       zval_copy_ctor(&dval);",
      "5410:       convert_to_double(&dval);",
      "5411:       m1[i] = Z_DVAL(dval);",
      "5412:      }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "5317:      m2[i] = Z_DVAL_PP(tmp);",
      "5318:      break;",
      "5319:     case IS_STRING:",
      "5322:      break;",
      "5323:     default:",
      "5324:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid type for element %i\", i);",
      "",
      "[Removed Lines]",
      "5320:      convert_to_double_ex(tmp);",
      "5321:      m2[i] = Z_DVAL_PP(tmp);",
      "",
      "[Added Lines]",
      "5428:      {",
      "5429:       zval dval;",
      "5430:       dval = **tmp;",
      "5431:       zval_copy_ctor(&dval);",
      "5432:       convert_to_double(&dval);",
      "5433:       m2[i] = Z_DVAL(dval);",
      "5434:      }",
      "",
      "---------------"
    ],
    "ext/gd/tests/bug66356.phpt||ext/gd/tests/bug66356.phpt": [
      "File: ext/gd/tests/bug66356.phpt -> ext/gd/tests/bug66356.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #66356 (Heap Overflow Vulnerability in imagecrop())",
      "3: --SKIPIF--",
      "4: <?php",
      "5:  if(!extension_loaded('gd')){ die('skip gd extension not available'); }",
      "6: ?>",
      "7: --FILE--",
      "8: <?php",
      "9: $img = imagecreatetruecolor(10, 10);",
      "10: $img = imagecrop($img, array(\"x\" => \"a\", \"y\" => 0, \"width\" => 10, \"height\" => 10));",
      "11: $arr = array(\"x\" => \"a\", \"y\" => \"12b\", \"width\" => 10, \"height\" => 10);",
      "12: $img = imagecrop($img, $arr);",
      "13: print_r($arr);",
      "14: ?>",
      "15: --EXPECTF--",
      "16: Array",
      "17: (",
      "18:     [x] => a",
      "19:     [y] => 12b",
      "20:     [width] => 10",
      "21:     [height] => 10",
      "22: )",
      "",
      "---------------"
    ],
    "main/php_version.h||main/php_version.h": [
      "File: main/php_version.h -> main/php_version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: #define PHP_MAJOR_VERSION 5",
      "4: #define PHP_MINOR_VERSION 5",
      "6: #define PHP_EXTRA_VERSION \"-dev\"",
      "",
      "[Removed Lines]",
      "5: #define PHP_RELEASE_VERSION 8",
      "7: #define PHP_VERSION \"5.5.8-dev\"",
      "8: #define PHP_VERSION_ID 50508",
      "",
      "[Added Lines]",
      "5: #define PHP_RELEASE_VERSION 5",
      "7: #define PHP_VERSION \"5.5.5-dev\"",
      "8: #define PHP_VERSION_ID 50505",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fe85ca87370198e76a02b1c5b93905c70d517213",
      "candidate_info": {
        "commit_hash": "fe85ca87370198e76a02b1c5b93905c70d517213",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/fe85ca87370198e76a02b1c5b93905c70d517213",
        "files": [
          "configure.in",
          "main/php_version.h"
        ],
        "message": "5.4.0beta",
        "before_after_code_files": [
          "configure.in||configure.in",
          "main/php_version.h||main/php_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "main/php_version.h||main/php_version.h"
          ],
          "candidate": [
            "main/php_version.h||main/php_version.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.in||configure.in": [
          "File: configure.in -> configure.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "120: PHP_MAJOR_VERSION=5",
          "121: PHP_MINOR_VERSION=4",
          "122: PHP_RELEASE_VERSION=0",
          "124: PHP_VERSION=\"$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_RELEASE_VERSION$PHP_EXTRA_VERSION\"",
          "125: PHP_VERSION_ID=`expr [$]PHP_MAJOR_VERSION \\* 10000 + [$]PHP_MINOR_VERSION \\* 100 + [$]PHP_RELEASE_VERSION`",
          "",
          "[Removed Lines]",
          "123: PHP_EXTRA_VERSION=\"beta1-dev\"",
          "",
          "[Added Lines]",
          "123: PHP_EXTRA_VERSION=\"beta1\"",
          "",
          "---------------"
        ],
        "main/php_version.h||main/php_version.h": [
          "File: main/php_version.h -> main/php_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #define PHP_MAJOR_VERSION 5",
          "4: #define PHP_MINOR_VERSION 4",
          "5: #define PHP_RELEASE_VERSION 0",
          "8: #define PHP_VERSION_ID 50400",
          "",
          "[Removed Lines]",
          "6: #define PHP_EXTRA_VERSION \"beta1-dev\"",
          "7: #define PHP_VERSION \"5.4.0beta1-dev\"",
          "",
          "[Added Lines]",
          "6: #define PHP_EXTRA_VERSION \"beta1\"",
          "7: #define PHP_VERSION \"5.4.0beta1\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "780c6e0a9cedb8dbecf5e4aca00996c73c0723d5",
      "candidate_info": {
        "commit_hash": "780c6e0a9cedb8dbecf5e4aca00996c73c0723d5",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/780c6e0a9cedb8dbecf5e4aca00996c73c0723d5",
        "files": [
          "ext/gd/gd.c",
          "ext/gd/libgd/gd.h",
          "ext/gd/php_gd.h"
        ],
        "message": "- add affine matrix helper for translate, scale, rotate and shear",
        "before_after_code_files": [
          "ext/gd/gd.c||ext/gd/gd.c",
          "ext/gd/libgd/gd.h||ext/gd/libgd/gd.h",
          "ext/gd/php_gd.h||ext/gd/php_gd.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/gd/gd.c||ext/gd/gd.c"
          ],
          "candidate": [
            "ext/gd/gd.c||ext/gd/gd.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/gd/gd.c||ext/gd/gd.c": [
          "File: ext/gd/gd.c -> ext/gd/gd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "918:  ZEND_ARG_INFO(0, affine)",
          "919: ZEND_END_ARG_INFO()",
          "921: ZEND_BEGIN_ARG_INFO(arginfo_imagesetinterpolation, 0)",
          "922:  ZEND_ARG_INFO(0, im)",
          "923:  ZEND_ARG_INFO(0, method)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "921: ZEND_BEGIN_ARG_INFO(arginfo_imageaffinegetmatrix, 0)",
          "922:  ZEND_ARG_INFO(0, im)",
          "923:  ZEND_ARG_INFO(0, matrox)",
          "924:  ZEND_ARG_INFO(0, options)",
          "925: ZEND_END_ARG_INFO()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "988:  PHP_FE(imagecropauto,       arginfo_imagecropauto)",
          "989:  PHP_FE(imagescale,        arginfo_imagescale)",
          "990:  PHP_FE(imageaffine,        arginfo_imageaffine)",
          "991:  PHP_FE(imagesetinterpolation,                   arginfo_imagesetinterpolation)",
          "992: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "997:  PHP_FE(imageaffinegetmatrix,     arginfo_imageaffinegetmatrix)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5428:  if (z_rect != NULL) {",
          "5429:   if (zend_hash_find(HASH_OF(z_rect), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
          "5430:    rect.x = Z_LVAL_PP(tmp);",
          "5431:   } else {",
          "5432:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5438:    convert_to_long_ex(tmp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5434:   }",
          "5436:   if (zend_hash_find(HASH_OF(z_rect), \"y\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
          "5437:    rect.y = Z_LVAL_PP(tmp);",
          "5438:   } else {",
          "5439:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5446:    convert_to_long_ex(tmp);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5441:   }",
          "5443:   if (zend_hash_find(HASH_OF(z_rect), \"width\", sizeof(\"width\"), (void **)&tmp) != FAILURE) {",
          "5444:    rect.width = Z_LVAL_PP(tmp);",
          "5445:   } else {",
          "5446:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing width\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5454:    convert_to_long_ex(tmp);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "5448:   }",
          "5450:   if (zend_hash_find(HASH_OF(z_rect), \"height\", sizeof(\"height\"), (void **)&tmp) != FAILURE) {",
          "5451:    rect.height = Z_LVAL_PP(tmp);",
          "5452:   } else {",
          "5453:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing height\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5462:    convert_to_long_ex(tmp);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "5476: }",
          "5481: PHP_FUNCTION(imagesetinterpolation)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5493: PHP_FUNCTION(imageaffinegetmatrix)",
          "5494: {",
          "5495:  double affine[6];",
          "5496:  gdAffineStandardMatrix type;",
          "5497:  zval *options;",
          "5498:  zval **tmp;",
          "5499:  int args_required;",
          "5500:  int res;",
          "5502:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"l|z\", &type, &options) == FAILURE)  {",
          "5503:   return;",
          "5504:  }",
          "5506:  switch(type) {",
          "5507:   case GD_AFFINE_TRANSLATE:",
          "5508:   case GD_AFFINE_SCALE: {",
          "5509:    double x, y;",
          "5510:    args_required = 2;",
          "5511:    if (Z_TYPE_P(options) != IS_ARRAY) {",
          "5512:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Array expected as options\");",
          "5513:    }",
          "5514:    if (zend_hash_find(HASH_OF(options), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
          "5515:     convert_to_double_ex(tmp);",
          "5516:     x = Z_DVAL_PP(tmp);",
          "5517:    } else {",
          "5518:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
          "5519:     RETURN_FALSE;",
          "5520:    }",
          "5522:    if (zend_hash_find(HASH_OF(options), \"y\", sizeof(\"y\"), (void **)&tmp) != FAILURE) {",
          "5523:     convert_to_double_ex(tmp);",
          "5524:     y = Z_DVAL_PP(tmp);",
          "5525:    } else {",
          "5526:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
          "5527:     RETURN_FALSE;",
          "5528:    }",
          "5530:    if (type == GD_AFFINE_TRANSLATE) {",
          "5531:     res = gdAffineTranslate(affine, x, y);",
          "5532:    } else {",
          "5533:     res = gdAffineScale(affine, x, y);",
          "5534:    }",
          "5535:    break;",
          "5536:   }",
          "5538:   case GD_AFFINE_ROTATE:",
          "5539:   case GD_AFFINE_SHEAR_HORIZONTAL:",
          "5540:   case GD_AFFINE_SHEAR_VERTICAL: {",
          "5541:    double angle;",
          "5543:    convert_to_double_ex(&options);",
          "5544:    angle = Z_DVAL_P(options);",
          "5546:    if (type == GD_AFFINE_SHEAR_HORIZONTAL) {",
          "5547:     res = gdAffineShearHorizontal(affine, angle);",
          "5548:    } else if (type == GD_AFFINE_SHEAR_VERTICAL) {",
          "5549:     res = gdAffineShearVertical(affine, angle);",
          "5550:    } else {",
          "5551:     res = gdAffineRotate(affine, angle);",
          "5552:    }",
          "5553:    break;",
          "5554:   }",
          "5556:   default:",
          "5557:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid type for element %i\", type);",
          "5558:    RETURN_FALSE;",
          "5559:  }",
          "5560: }",
          "",
          "---------------"
        ],
        "ext/gd/libgd/gd.h||ext/gd/libgd/gd.h": [
          "File: ext/gd/libgd/gd.h -> ext/gd/libgd/gd.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "845: gdImagePtr gdImageRotateBicubicFixed(gdImagePtr src, const float degrees, const int bgColor);",
          "846: gdImagePtr gdImageRotateGeneric(gdImagePtr src, const float degrees, const int bgColor);",
          "848: int gdAffineApplyToPointF (gdPointFPtr dst, const gdPointFPtr src, const double affine[6]);",
          "849: int gdAffineInvert (double dst[6], const double src[6]);",
          "850: int gdAffineFlip (double dst_affine[6], const double src_affine[6], const int flip_h, const int flip_v);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "850: typedef enum {",
          "851:  GD_AFFINE_TRANSLATE = 0,",
          "852:  GD_AFFINE_SCALE,",
          "853:  GD_AFFINE_ROTATE,",
          "854:  GD_AFFINE_SHEAR_HORIZONTAL,",
          "855:  GD_AFFINE_SHEAR_VERTICAL,",
          "856: } gdAffineStandardMatrix;",
          "",
          "---------------"
        ],
        "ext/gd/php_gd.h||ext/gd/php_gd.h": [
          "File: ext/gd/php_gd.h -> ext/gd/php_gd.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "130: PHP_FUNCTION(imagecropauto);",
          "131: PHP_FUNCTION(imagescale);",
          "132: PHP_FUNCTION(imageaffine);",
          "133: PHP_FUNCTION(imagesetinterpolation);",
          "134: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133: PHP_FUNCTION(imageaffinegetmatrix);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f6c7422a857046ca0821c2bb08ac5595b0f7f5c",
      "candidate_info": {
        "commit_hash": "7f6c7422a857046ca0821c2bb08ac5595b0f7f5c",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/7f6c7422a857046ca0821c2bb08ac5595b0f7f5c",
        "files": [
          "NEWS",
          "configure.in",
          "main/php_version.h"
        ],
        "message": "back to dev",
        "before_after_code_files": [
          "configure.in||configure.in",
          "main/php_version.h||main/php_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "main/php_version.h||main/php_version.h"
          ],
          "candidate": [
            "main/php_version.h||main/php_version.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.in||configure.in": [
          "File: configure.in -> configure.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "120: PHP_MAJOR_VERSION=5",
          "121: PHP_MINOR_VERSION=4",
          "122: PHP_RELEASE_VERSION=0",
          "124: PHP_VERSION=\"$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_RELEASE_VERSION$PHP_EXTRA_VERSION\"",
          "125: PHP_VERSION_ID=`expr [$]PHP_MAJOR_VERSION \\* 10000 + [$]PHP_MINOR_VERSION \\* 100 + [$]PHP_RELEASE_VERSION`",
          "",
          "[Removed Lines]",
          "123: PHP_EXTRA_VERSION=\"RC1\"",
          "",
          "[Added Lines]",
          "123: PHP_EXTRA_VERSION=\"RC2-dev\"",
          "",
          "---------------"
        ],
        "main/php_version.h||main/php_version.h": [
          "File: main/php_version.h -> main/php_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #define PHP_MAJOR_VERSION 5",
          "4: #define PHP_MINOR_VERSION 4",
          "5: #define PHP_RELEASE_VERSION 0",
          "8: #define PHP_VERSION_ID 50400",
          "",
          "[Removed Lines]",
          "6: #define PHP_EXTRA_VERSION \"RC1\"",
          "7: #define PHP_VERSION \"5.4.0RC1\"",
          "",
          "[Added Lines]",
          "6: #define PHP_EXTRA_VERSION \"RC2-dev\"",
          "7: #define PHP_VERSION \"5.4.0RC2-dev\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bfd72d03869da7983064576470a858cdbde733bf",
      "candidate_info": {
        "commit_hash": "bfd72d03869da7983064576470a858cdbde733bf",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/bfd72d03869da7983064576470a858cdbde733bf",
        "files": [
          "configure.in",
          "main/php_version.h"
        ],
        "message": "5.4.0",
        "before_after_code_files": [
          "configure.in||configure.in",
          "main/php_version.h||main/php_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "main/php_version.h||main/php_version.h"
          ],
          "candidate": [
            "main/php_version.h||main/php_version.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.in||configure.in": [
          "File: configure.in -> configure.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "120: PHP_MAJOR_VERSION=5",
          "121: PHP_MINOR_VERSION=4",
          "122: PHP_RELEASE_VERSION=0",
          "124: PHP_VERSION=\"$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_RELEASE_VERSION$PHP_EXTRA_VERSION\"",
          "125: PHP_VERSION_ID=`expr [$]PHP_MAJOR_VERSION \\* 10000 + [$]PHP_MINOR_VERSION \\* 100 + [$]PHP_RELEASE_VERSION`",
          "",
          "[Removed Lines]",
          "123: PHP_EXTRA_VERSION=\"RC9-dev\"",
          "",
          "[Added Lines]",
          "123: PHP_EXTRA_VERSION=\"\"",
          "",
          "---------------"
        ],
        "main/php_version.h||main/php_version.h": [
          "File: main/php_version.h -> main/php_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #define PHP_MAJOR_VERSION 5",
          "4: #define PHP_MINOR_VERSION 4",
          "5: #define PHP_RELEASE_VERSION 0",
          "8: #define PHP_VERSION_ID 50400",
          "",
          "[Removed Lines]",
          "6: #define PHP_EXTRA_VERSION \"RC9-dev\"",
          "7: #define PHP_VERSION \"5.4.0RC9-dev\"",
          "",
          "[Added Lines]",
          "6: #define PHP_EXTRA_VERSION \"\"",
          "7: #define PHP_VERSION \"5.4.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "603252546b818615c0708e8b2eba86e24239cfbb",
      "candidate_info": {
        "commit_hash": "603252546b818615c0708e8b2eba86e24239cfbb",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/603252546b818615c0708e8b2eba86e24239cfbb",
        "files": [
          "NEWS",
          "configure.in",
          "main/php_version.h"
        ],
        "message": "Back to -dev",
        "before_after_code_files": [
          "configure.in||configure.in",
          "main/php_version.h||main/php_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "main/php_version.h||main/php_version.h"
          ],
          "candidate": [
            "main/php_version.h||main/php_version.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.in||configure.in": [
          "File: configure.in -> configure.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "120: PHP_MAJOR_VERSION=5",
          "121: PHP_MINOR_VERSION=4",
          "122: PHP_RELEASE_VERSION=0",
          "124: PHP_VERSION=\"$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_RELEASE_VERSION$PHP_EXTRA_VERSION\"",
          "125: PHP_VERSION_ID=`expr [$]PHP_MAJOR_VERSION \\* 10000 + [$]PHP_MINOR_VERSION \\* 100 + [$]PHP_RELEASE_VERSION`",
          "",
          "[Removed Lines]",
          "123: PHP_EXTRA_VERSION=\"alpha1\"",
          "",
          "[Added Lines]",
          "123: PHP_EXTRA_VERSION=\"alpha2-dev\"",
          "",
          "---------------"
        ],
        "main/php_version.h||main/php_version.h": [
          "File: main/php_version.h -> main/php_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #define PHP_MAJOR_VERSION 5",
          "4: #define PHP_MINOR_VERSION 4",
          "5: #define PHP_RELEASE_VERSION 0",
          "8: #define PHP_VERSION_ID 50400",
          "",
          "[Removed Lines]",
          "6: #define PHP_EXTRA_VERSION \"alpha1\"",
          "7: #define PHP_VERSION \"5.4.0alpha1\"",
          "",
          "[Added Lines]",
          "6: #define PHP_EXTRA_VERSION \"alpha2-dev\"",
          "7: #define PHP_VERSION \"5.4.0alpha2-dev\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}