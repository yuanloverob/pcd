{
  "cve_id": "CVE-2019-12980",
  "cve_desc": "In Ming (aka libming) 0.4.8, there is an integer overflow (caused by an out-of-range left shift) in the SWFInput_readSBits function in blocks/input.c. Remote attackers could leverage this vulnerability to cause a denial-of-service via a crafted swf file.",
  "repo": "libming/libming",
  "patch_hash": "a009a38dce1d9316cad1ab522b813b1d5ba4c62a",
  "patch_info": {
    "commit_hash": "a009a38dce1d9316cad1ab522b813b1d5ba4c62a",
    "repo": "libming/libming",
    "commit_url": "https://github.com/libming/libming/commit/a009a38dce1d9316cad1ab522b813b1d5ba4c62a",
    "files": [
      "src/blocks/input.c"
    ],
    "message": "Fix left shift of a negative value in SWFInput_readSBits. Check for number before before left-shifting by (number-1).",
    "before_after_code_files": [
      "src/blocks/input.c||src/blocks/input.c"
    ]
  },
  "patch_diff": {
    "src/blocks/input.c||src/blocks/input.c": [
      "File: src/blocks/input.c -> src/blocks/input.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "113: {",
      "114:  int num = SWFInput_readBits(input, number);",
      "117:   return num - (1<<number);",
      "118:  else",
      "119:   return num;",
      "",
      "[Removed Lines]",
      "116:  if ( num & (1<<(number-1)) )",
      "",
      "[Added Lines]",
      "116:  if(number && num & (1<<(number-1)))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6e76e8c71cb51c8ba0aa9737a636b9ac3029887f",
      "candidate_info": {
        "commit_hash": "6e76e8c71cb51c8ba0aa9737a636b9ac3029887f",
        "repo": "libming/libming",
        "commit_url": "https://github.com/libming/libming/commit/6e76e8c71cb51c8ba0aa9737a636b9ac3029887f",
        "files": [
          "src/blocks/shape.c"
        ],
        "message": "SWFShape_setLeftFillStyle: prevent fill overflow",
        "before_after_code_files": [
          "src/blocks/shape.c||src/blocks/shape.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libming/libming/pull/179"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/blocks/shape.c||src/blocks/shape.c": [
          "File: src/blocks/shape.c -> src/blocks/shape.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1169:    return;",
          "1170:   idx = getFillIdx(shape, fill);",
          "1171:  }",
          "1173:  record = addStyleRecord(shape);",
          "1174:  record.record.stateChange->leftFill = idx;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1172:  else if (idx >= 255 && shape->useVersion == SWF_SHAPE1)",
          "1173:  {",
          "1174:   SWF_error(\"Too many fills for SWFShape V1.\\n\"",
          "1175:      \"Use a higher SWFShape version\\n\");",
          "1176:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da9d86eab55cbf608d5c916b8b690f5b76bca462",
      "candidate_info": {
        "commit_hash": "da9d86eab55cbf608d5c916b8b690f5b76bca462",
        "repo": "libming/libming",
        "commit_url": "https://github.com/libming/libming/commit/da9d86eab55cbf608d5c916b8b690f5b76bca462",
        "files": [
          "util/decompile.c"
        ],
        "message": "decompileAction: Prevent heap buffer overflow and underflow with using OpCode",
        "before_after_code_files": [
          "util/decompile.c||util/decompile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libming/libming/pull/179"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/decompile.c||util/decompile.c": [
          "File: util/decompile.c -> util/decompile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3202: int",
          "3203: decompileAction(int n, SWF_ACTION *actions, int maxn)",
          "3204: {",
          "3207: #ifdef DEBUG",
          "3208:  fprintf(stderr,\"%d:\\tACTION[%3.3d]: %s\\n\",",
          "",
          "[Removed Lines]",
          "3205:  if( n > maxn ) SWF_error(\"Action overflow!!\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3210:          actionName(actions[n].SWF_ACTIONRECORD.ActionCode));",
          "3211: #endif",
          "3214:  {",
          "3215:  case SWFACTION_END:",
          "3216:   return 0;",
          "",
          "[Removed Lines]",
          "3213:  switch(actions[n].SWF_ACTIONRECORD.ActionCode)",
          "",
          "[Added Lines]",
          "3212:  switch(OpCode(actions, n, maxn))",
          "",
          "---------------"
        ]
      }
    }
  ]
}