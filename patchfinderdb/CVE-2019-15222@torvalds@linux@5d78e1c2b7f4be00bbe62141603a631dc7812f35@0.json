{
  "cve_id": "CVE-2019-15222",
  "cve_desc": "An issue was discovered in the Linux kernel before 5.2.8. There is a NULL pointer dereference caused by a malicious USB device in the sound/usb/helper.c (motu_microbookii) driver.",
  "repo": "torvalds/linux",
  "patch_hash": "5d78e1c2b7f4be00bbe62141603a631dc7812f35",
  "patch_info": {
    "commit_hash": "5d78e1c2b7f4be00bbe62141603a631dc7812f35",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/5d78e1c2b7f4be00bbe62141603a631dc7812f35",
    "files": [
      "sound/usb/helper.c"
    ],
    "message": "ALSA: usb-audio: Fix gpf in snd_usb_pipe_sanity_check\n\nsyzbot found the following crash on:\n\n  general protection fault: 0000 [#1] SMP KASAN\n  RIP: 0010:snd_usb_pipe_sanity_check+0x80/0x130 sound/usb/helper.c:75\n  Call Trace:\n    snd_usb_motu_microbookii_communicate.constprop.0+0xa0/0x2fb  sound/usb/quirks.c:1007\n    snd_usb_motu_microbookii_boot_quirk sound/usb/quirks.c:1051 [inline]\n    snd_usb_apply_boot_quirk.cold+0x163/0x370 sound/usb/quirks.c:1280\n    usb_audio_probe+0x2ec/0x2010 sound/usb/card.c:576\n    usb_probe_interface+0x305/0x7a0 drivers/usb/core/driver.c:361\n    really_probe+0x281/0x650 drivers/base/dd.c:548\n    ....\n\nIt was introduced in commit 801ebf1043ae for checking pipe and endpoint\ntypes. It is fixed by adding a check of the ep pointer in question.\n\nBugLink: https://syzkaller.appspot.com/bug?extid=d59c4387bfb6eced94e2\nReported-by: syzbot <syzbot+d59c4387bfb6eced94e2@syzkaller.appspotmail.com>\nFixes: 801ebf1043ae (\"ALSA: usb-audio: Sanity checks for each pipe and EP types\")\nCc: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Hillf Danton <hdanton@sina.com>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "before_after_code_files": [
      "sound/usb/helper.c||sound/usb/helper.c"
    ]
  },
  "patch_diff": {
    "sound/usb/helper.c||sound/usb/helper.c": [
      "File: sound/usb/helper.c -> sound/usb/helper.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "72:  struct usb_host_endpoint *ep;",
      "74:  ep = usb_pipe_endpoint(dev, pipe);",
      "76:   return -EINVAL;",
      "77:  return 0;",
      "78: }",
      "",
      "[Removed Lines]",
      "75:  if (usb_pipetype(pipe) != pipetypes[usb_endpoint_type(&ep->desc)])",
      "",
      "[Added Lines]",
      "75:  if (!ep || usb_pipetype(pipe) != pipetypes[usb_endpoint_type(&ep->desc)])",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3de433c5b38af49a5fc7602721e2ab5d39f1e69c",
      "candidate_info": {
        "commit_hash": "3de433c5b38af49a5fc7602721e2ab5d39f1e69c",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3de433c5b38af49a5fc7602721e2ab5d39f1e69c",
        "files": [
          "drivers/gpu/drm/msm/msm_gem.c"
        ],
        "message": "drm/msm: Use the correct dma_sync calls in msm_gem\n\n[subject was: drm/msm: shake fist angrily at dma-mapping]\n\nSo, using dma_sync_* for our cache needs works out w/ dma iommu ops, but\nit falls appart with dma direct ops.  The problem is that, depending on\ndisplay generation, we can have either set of dma ops (mdp4 and dpu have\niommu wired to mdss node, which maps to toplevel drm device, but mdp5\nhas iommu wired up to the mdp sub-node within mdss).\n\nFixes this splat on mdp5 devices:\n\n   Unable to handle kernel paging request at virtual address ffffffff80000000\n   Mem abort info:\n     ESR = 0x96000144\n     Exception class = DABT (current EL), IL = 32 bits\n     SET = 0, FnV = 0\n     EA = 0, S1PTW = 0\n   Data abort info:\n     ISV = 0, ISS = 0x00000144\n     CM = 1, WnR = 1\n   swapper pgtable: 4k pages, 48-bit VAs, pgdp=00000000810e4000\n   [ffffffff80000000] pgd=0000000000000000\n   Internal error: Oops: 96000144 [#1] SMP\n   Modules linked in: btqcomsmd btqca bluetooth cfg80211 ecdh_generic ecc rfkill libarc4 panel_simple msm wcnss_ctrl qrtr_smd drm_kms_helper venus_enc venus_dec videobuf2_dma_sg videobuf2_memops drm venus_core ipv6 qrtr qcom_wcnss_pil v4l2_mem2mem qcom_sysmon videobuf2_v4l2 qmi_helpers videobuf2_common crct10dif_ce mdt_loader qcom_common videodev qcom_glink_smem remoteproc bmc150_accel_i2c bmc150_magn_i2c bmc150_accel_core bmc150_magn snd_soc_lpass_apq8016 snd_soc_msm8916_analog mms114 mc nf_defrag_ipv6 snd_soc_lpass_cpu snd_soc_apq8016_sbc industrialio_triggered_buffer kfifo_buf snd_soc_lpass_platform snd_soc_msm8916_digital drm_panel_orientation_quirks\n   CPU: 2 PID: 33 Comm: kworker/2:1 Not tainted 5.3.0-rc2 #1\n   Hardware name: Samsung Galaxy A5U (EUR) (DT)\n   Workqueue: events deferred_probe_work_func\n   pstate: 80000005 (Nzcv daif -PAN -UAO)\n   pc : __clean_dcache_area_poc+0x20/0x38\n   lr : arch_sync_dma_for_device+0x28/0x30\n   sp : ffff0000115736a0\n   x29: ffff0000115736a0 x28: 0000000000000001\n   x27: ffff800074830800 x26: ffff000011478000\n   x25: 0000000000000000 x24: 0000000000000001\n   x23: ffff000011478a98 x22: ffff800009fd1c10\n   x21: 0000000000000001 x20: ffff800075ad0a00\n   x19: 0000000000000000 x18: ffff0000112b2000\n   x17: 0000000000000000 x16: 0000000000000000\n   x15: 00000000fffffff0 x14: ffff000011455d70\n   x13: 0000000000000000 x12: 0000000000000028\n   x11: 0000000000000001 x10: ffff00001106c000\n   x9 : ffff7e0001d6b380 x8 : 0000000000001000\n   x7 : ffff7e0001d6b380 x6 : ffff7e0001d6b382\n   x5 : 0000000000000000 x4 : 0000000000001000\n   x3 : 000000000000003f x2 : 0000000000000040\n   x1 : ffffffff80001000 x0 : ffffffff80000000\n   Call trace:\n    __clean_dcache_area_poc+0x20/0x38\n    dma_direct_sync_sg_for_device+0xb8/0xe8\n    get_pages+0x22c/0x250 [msm]\n    msm_gem_get_and_pin_iova+0xdc/0x168 [msm]\n    ...\n\nFixes the combination of two patches:\n\nFixes: 0036bc73ccbe (drm/msm: stop abusing dma_map/unmap for cache)\nFixes: 449fa54d6815 (dma-direct: correct the physical addr in dma_direct_sync_sg_for_cpu/device)\nTested-by: Stephan Gerhold <stephan@gerhold.net>\nSigned-off-by: Rob Clark <robdclark@chromium.org>\n[seanpaul changed subject to something more desriptive]\nSigned-off-by: Sean Paul <seanpaul@chromium.org>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190730214633.17820-1-robdclark@gmail.com",
        "before_after_code_files": [
          "drivers/gpu/drm/msm/msm_gem.c||drivers/gpu/drm/msm/msm_gem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/msm/msm_gem.c||drivers/gpu/drm/msm/msm_gem.c": [
          "File: drivers/gpu/drm/msm/msm_gem.c -> drivers/gpu/drm/msm/msm_gem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  return !msm_obj->vram_node;",
          "33: }",
          "36: static struct page **get_pages_vram(struct drm_gem_object *obj, int npages)",
          "37: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: static void sync_for_device(struct msm_gem_object *msm_obj)",
          "50: {",
          "51:  struct device *dev = msm_obj->base.dev->dev;",
          "53:  if (get_dma_ops(dev)) {",
          "54:   dma_sync_sg_for_device(dev, msm_obj->sgt->sgl,",
          "55:    msm_obj->sgt->nents, DMA_BIDIRECTIONAL);",
          "56:  } else {",
          "57:   dma_map_sg(dev, msm_obj->sgt->sgl,",
          "58:    msm_obj->sgt->nents, DMA_BIDIRECTIONAL);",
          "59:  }",
          "60: }",
          "62: static void sync_for_cpu(struct msm_gem_object *msm_obj)",
          "63: {",
          "64:  struct device *dev = msm_obj->base.dev->dev;",
          "66:  if (get_dma_ops(dev)) {",
          "67:   dma_sync_sg_for_cpu(dev, msm_obj->sgt->sgl,",
          "68:    msm_obj->sgt->nents, DMA_BIDIRECTIONAL);",
          "69:  } else {",
          "70:   dma_unmap_sg(dev, msm_obj->sgt->sgl,",
          "71:    msm_obj->sgt->nents, DMA_BIDIRECTIONAL);",
          "72:  }",
          "73: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:   if (msm_obj->flags & (MSM_BO_WC|MSM_BO_UNCACHED))",
          "102:  }",
          "104:  return msm_obj->pages;",
          "",
          "[Removed Lines]",
          "100:    dma_sync_sg_for_device(dev->dev, msm_obj->sgt->sgl,",
          "101:      msm_obj->sgt->nents, DMA_BIDIRECTIONAL);",
          "",
          "[Added Lines]",
          "140:    sync_for_device(msm_obj);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "129:    if (msm_obj->flags & (MSM_BO_WC|MSM_BO_UNCACHED))",
          "134:    sg_free_table(msm_obj->sgt);",
          "135:    kfree(msm_obj->sgt);",
          "",
          "[Removed Lines]",
          "130:     dma_sync_sg_for_cpu(obj->dev->dev, msm_obj->sgt->sgl,",
          "131:           msm_obj->sgt->nents,",
          "132:           DMA_BIDIRECTIONAL);",
          "",
          "[Added Lines]",
          "169:     sync_for_cpu(msm_obj);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f691eaa4801484fffc8a2bcb24caa27fb2edcce3",
      "candidate_info": {
        "commit_hash": "f691eaa4801484fffc8a2bcb24caa27fb2edcce3",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f691eaa4801484fffc8a2bcb24caa27fb2edcce3",
        "files": [
          "drivers/gpu/drm/i915/i915_gem_gtt.c"
        ],
        "message": "drm/i915/gtt: Defer the free for alloc error paths\n\nIf we hit an error while allocating the page tables, we have to unwind\nthe incomplete updates, and wish to free the unused pd. However, we are\nnot allowed to be hoding the spinlock at that point, and so must use the\nlater free to defer it until after we drop the lock.\n\n<3> [414.363795] BUG: sleeping function called from invalid context at drivers/gpu/drm/i915/i915_gem_gtt.c:472\n<3> [414.364167] in_atomic(): 1, irqs_disabled(): 0, pid: 3905, name: i915_selftest\n<4> [414.364406] 3 locks held by i915_selftest/3905:\n<4> [414.364408]  #0: 0000000034fe8aa8 (&dev->mutex){....}, at: device_driver_attach+0x18/0x50\n<4> [414.364415]  #1: 000000006bd8a560 (&dev->struct_mutex){+.+.}, at: igt_ctx_exec+0xb7/0x410 [i915]\n<4> [414.364476]  #2: 000000003dfdc766 (&(&pd->lock)->rlock){+.+.}, at: gen8_ppgtt_alloc_pdp+0x448/0x540 [i915]\n<3> [414.364529] Preemption disabled at:\n<4> [414.364530] [<0000000000000000>] 0x0\n<4> [414.364696] CPU: 0 PID: 3905 Comm: i915_selftest Tainted: G     U            5.2.0-rc7-CI-CI_DRM_6403+ #1\n<4> [414.364698] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.10.1-0-g8891697-prebuilt.qemu-project.org 04/01/2014\n<4> [414.364699] Call Trace:\n<4> [414.364704]  dump_stack+0x67/0x9b\n<4> [414.364708]  ___might_sleep+0x167/0x250\n<4> [414.364777]  vm_free_page+0x24/0xc0 [i915]\n<4> [414.364852]  free_pd+0xf/0x20 [i915]\n<4> [414.364897]  gen8_ppgtt_alloc_pdp+0x489/0x540 [i915]\n<4> [414.364946]  gen8_ppgtt_alloc_4lvl+0x8e/0x2e0 [i915]\n<4> [414.364992]  ppgtt_bind_vma+0x2e/0x60 [i915]\n<4> [414.365039]  i915_vma_bind+0xe8/0x2c0 [i915]\n<4> [414.365088]  __i915_vma_do_pin+0xa1/0xd20 [i915]\n\nBugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=111050\nFixes: 1d1b5490b91c (\"drm/i915/gtt: Replace struct_mutex serialisation for allocation\")\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: Matthew Auld <matthew.auld@intel.com>\nCc: Mika Kuoppala <mika.kuoppala@intel.com>\nReviewed-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20190703171913.16585-3-chris@chris-wilson.co.uk\n(cherry picked from commit 068610895ebd4bd86f496f01eb7b97e56d7269b2)\nSigned-off-by: Jani Nikula <jani.nikula@intel.com>",
        "before_after_code_files": [
          "drivers/gpu/drm/i915/i915_gem_gtt.c||drivers/gpu/drm/i915/i915_gem_gtt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/i915/i915_gem_gtt.c||drivers/gpu/drm/i915/i915_gem_gtt.c": [
          "File: drivers/gpu/drm/i915/i915_gem_gtt.c -> drivers/gpu/drm/i915/i915_gem_gtt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1446:   gen8_ppgtt_set_pdpe(pdp, vm->scratch_pd, pdpe);",
          "1447:   GEM_BUG_ON(!atomic_read(&pdp->used));",
          "1448:   atomic_dec(&pdp->used);",
          "1450:  }",
          "1451:  spin_unlock(&pdp->lock);",
          "1452: unwind:",
          "",
          "[Removed Lines]",
          "1449:   free_pd(vm, pd);",
          "",
          "[Added Lines]",
          "1449:   GEM_BUG_ON(alloc);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1515:  spin_lock(&pml4->lock);",
          "1516:  if (atomic_dec_and_test(&pdp->used)) {",
          "1517:   gen8_ppgtt_set_pml4e(pml4, vm->scratch_pdp, pml4e);",
          "1519:  }",
          "1520:  spin_unlock(&pml4->lock);",
          "1521: unwind:",
          "",
          "[Removed Lines]",
          "1518:   free_pd(vm, pdp);",
          "",
          "[Added Lines]",
          "1519:   GEM_BUG_ON(alloc);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "621e55ff5b8e0ab5d1063f0eae0ef3960bef8f6e",
      "candidate_info": {
        "commit_hash": "621e55ff5b8e0ab5d1063f0eae0ef3960bef8f6e",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/621e55ff5b8e0ab5d1063f0eae0ef3960bef8f6e",
        "files": [
          "drivers/infiniband/core/device.c",
          "include/rdma/ib_verbs.h"
        ],
        "message": "RDMA/devices: Do not deadlock during client removal\n\nlockdep reports:\n\n   WARNING: possible circular locking dependency detected\n\n   modprobe/302 is trying to acquire lock:\n   0000000007c8919c ((wq_completion)ib_cm){+.+.}, at: flush_workqueue+0xdf/0x990\n\n   but task is already holding lock:\n   000000002d3d2ca9 (&device->client_data_rwsem){++++}, at: remove_client_context+0x79/0xd0 [ib_core]\n\n   which lock already depends on the new lock.\n\n   the existing dependency chain (in reverse order) is:\n\n   -> #2 (&device->client_data_rwsem){++++}:\n          down_read+0x3f/0x160\n          ib_get_net_dev_by_params+0xd5/0x200 [ib_core]\n          cma_ib_req_handler+0x5f6/0x2090 [rdma_cm]\n          cm_process_work+0x29/0x110 [ib_cm]\n          cm_req_handler+0x10f5/0x1c00 [ib_cm]\n          cm_work_handler+0x54c/0x311d [ib_cm]\n          process_one_work+0x4aa/0xa30\n          worker_thread+0x62/0x5b0\n          kthread+0x1ca/0x1f0\n          ret_from_fork+0x24/0x30\n\n   -> #1 ((work_completion)(&(&work->work)->work)){+.+.}:\n          process_one_work+0x45f/0xa30\n          worker_thread+0x62/0x5b0\n          kthread+0x1ca/0x1f0\n          ret_from_fork+0x24/0x30\n\n   -> #0 ((wq_completion)ib_cm){+.+.}:\n          lock_acquire+0xc8/0x1d0\n          flush_workqueue+0x102/0x990\n          cm_remove_one+0x30e/0x3c0 [ib_cm]\n          remove_client_context+0x94/0xd0 [ib_core]\n          disable_device+0x10a/0x1f0 [ib_core]\n          __ib_unregister_device+0x5a/0xe0 [ib_core]\n          ib_unregister_device+0x21/0x30 [ib_core]\n          mlx5_ib_stage_ib_reg_cleanup+0x9/0x10 [mlx5_ib]\n          __mlx5_ib_remove+0x3d/0x70 [mlx5_ib]\n          mlx5_ib_remove+0x12e/0x140 [mlx5_ib]\n          mlx5_remove_device+0x144/0x150 [mlx5_core]\n          mlx5_unregister_interface+0x3f/0xf0 [mlx5_core]\n          mlx5_ib_cleanup+0x10/0x3a [mlx5_ib]\n          __x64_sys_delete_module+0x227/0x350\n          do_syscall_64+0xc3/0x6a4\n          entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nWhich is due to the read side of the client_data_rwsem being obtained\nrecursively through a work queue flush during cm client removal.\n\nThe lock is being held across the remove in remove_client_context() so\nthat the function is a fence, once it returns the client is removed. This\nis required so that the two callers do not proceed with destruction until\nthe client completes removal.\n\nInstead of using client_data_rwsem use the existing device unregistration\nrefcount and add a similar client unregistration (client->uses) refcount.\n\nThis will fence the two unregistration paths without holding any locks.\n\nCc: <stable@vger.kernel.org>\nFixes: 921eab1143aa (\"RDMA/devices: Re-organize device.c locking\")\nSigned-off-by: Jason Gunthorpe <jgg@mellanox.com>\nSigned-off-by: Leon Romanovsky <leonro@mellanox.com>\nLink: https://lore.kernel.org/r/20190731081841.32345-2-leon@kernel.org\nSigned-off-by: Doug Ledford <dledford@redhat.com>",
        "before_after_code_files": [
          "drivers/infiniband/core/device.c||drivers/infiniband/core/device.c",
          "include/rdma/ib_verbs.h||include/rdma/ib_verbs.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/infiniband/core/device.c||drivers/infiniband/core/device.c": [
          "File: drivers/infiniband/core/device.c -> drivers/infiniband/core/device.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "99: static DEFINE_XARRAY_FLAGS(clients, XA_FLAGS_ALLOC);",
          "100: static DECLARE_RWSEM(clients_rwsem);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102: static void ib_client_put(struct ib_client *client)",
          "103: {",
          "104:  if (refcount_dec_and_test(&client->uses))",
          "105:   complete(&client->uses_zero);",
          "106: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "660:   return 0;",
          "662:  down_write(&device->client_data_rwsem);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "673:  if (!refcount_inc_not_zero(&client->uses))",
          "674:   goto out_unlock;",
          "675:  refcount_inc(&device->refcount);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "683:  return 0;",
          "685: out:",
          "686:  up_write(&device->client_data_rwsem);",
          "687:  return ret;",
          "688: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "700:  ib_device_put(device);",
          "701:  ib_client_put(client);",
          "702: out_unlock:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "702:  client_data = xa_load(&device->client_data, client_id);",
          "703:  xa_clear_mark(&device->client_data, client_id, CLIENT_DATA_REGISTERED);",
          "704:  client = xa_load(&clients, client_id);",
          "",
          "[Removed Lines]",
          "705:  downgrade_write(&device->client_data_rwsem);",
          "",
          "[Added Lines]",
          "722:  up_write(&device->client_data_rwsem);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "721:  if (client->remove)",
          "722:   client->remove(device, client_data);",
          "724:  xa_erase(&device->client_data, client_id);",
          "726: }",
          "728: static int alloc_port_data(struct ib_device *device)",
          "",
          "[Removed Lines]",
          "725:  up_read(&device->client_data_rwsem);",
          "",
          "[Added Lines]",
          "737:  ib_device_put(device);",
          "738:  ib_client_put(client);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1705:  unsigned long index;",
          "1706:  int ret;",
          "1708:  ret = assign_client_id(client);",
          "1709:  if (ret)",
          "1710:   return ret;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1721:  refcount_set(&client->uses, 1);",
          "1722:  init_completion(&client->uses_zero);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1740:  unsigned long index;",
          "1742:  down_write(&clients_rwsem);",
          "1743:  xa_clear_mark(&clients, client->client_id, CLIENT_REGISTERED);",
          "1744:  up_write(&clients_rwsem);",
          "1754:  down_write(&clients_rwsem);",
          "1755:  list_del(&client->list);",
          "",
          "[Removed Lines]",
          "1749:  down_read(&devices_rwsem);",
          "1750:  xa_for_each (&devices, index, device)",
          "1751:   remove_client_context(device, client->client_id);",
          "1752:  up_read(&devices_rwsem);",
          "",
          "[Added Lines]",
          "1758:  ib_client_put(client);",
          "1763:  rcu_read_lock();",
          "1764:  xa_for_each (&devices, index, device) {",
          "1765:   if (!ib_device_try_get(device))",
          "1766:    continue;",
          "1767:   rcu_read_unlock();",
          "1769:   remove_client_context(device, client->client_id);",
          "1771:   ib_device_put(device);",
          "1772:   rcu_read_lock();",
          "1773:  }",
          "1774:  rcu_read_unlock();",
          "1780:  wait_for_completion(&client->uses_zero);",
          "",
          "---------------"
        ],
        "include/rdma/ib_verbs.h||include/rdma/ib_verbs.h": [
          "File: include/rdma/ib_verbs.h -> include/rdma/ib_verbs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2647:    const union ib_gid *gid,",
          "2648:    const struct sockaddr *addr,",
          "2649:    void *client_data);",
          "2650:  struct list_head list;",
          "2651:  u32 client_id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2651:  refcount_t uses;",
          "2652:  struct completion uses_zero;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a379d1ce32f1c97b19d68cffbd195e025dbb9d43",
      "candidate_info": {
        "commit_hash": "a379d1ce32f1c97b19d68cffbd195e025dbb9d43",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a379d1ce32f1c97b19d68cffbd195e025dbb9d43",
        "files": [
          "drivers/infiniband/core/counters.c"
        ],
        "message": "IB/core: Fix querying total rdma stats\n\nrdma_counter_init() may fail for a device. In such case while calculating\ntotal sum, ignore NULL hstats.\n\nThis fixes below observed call trace.\n\nBUG: kernel NULL pointer dereference, address: 00000000000000a0\nPGD 8000001009b30067 P4D 8000001009b30067 PUD 10549c9067 PMD 0\nOops: 0000 [#1] SMP PTI\nCPU: 55 PID: 20887 Comm: cat Kdump: loaded Not tainted 5.2.0-rc6-jdc+ #13\nRIP: 0010:rdma_counter_get_hwstat_value+0xf2/0x150 [ib_core]\nCall Trace:\n show_hw_stats+0x5e/0x130 [ib_core]\n dev_attr_show+0x15/0x50\n sysfs_kf_seq_show+0xc6/0x1a0\n seq_read+0x132/0x370\n vfs_read+0x89/0x140\n ksys_read+0x5c/0xd0\n do_syscall_64+0x5a/0x240\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFixes: f34a55e497e8 (\"RDMA/core: Get sum value of all counters when perform a sysfs stat read\")\nLink: https://lore.kernel.org/r/20190723065733.4899-10-leon@kernel.org\nSigned-off-by: Parav Pandit <parav@mellanox.com>\nReviewed-by: Mark Zhang <markz@mellanox.com>\nSigned-off-by: Leon Romanovsky <leonro@mellanox.com>\nSigned-off-by: Jason Gunthorpe <jgg@mellanox.com>",
        "before_after_code_files": [
          "drivers/infiniband/core/counters.c||drivers/infiniband/core/counters.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/infiniband/core/counters.c||drivers/infiniband/core/counters.c": [
          "File: drivers/infiniband/core/counters.c -> drivers/infiniband/core/counters.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "393:  u64 sum;",
          "395:  port_counter = &dev->port_data[port].port_counter;",
          "396:  sum = get_running_counters_hwstat_sum(dev, port, index);",
          "397:  sum += port_counter->hstats->value[index];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396:  if (!port_counter->hstats)",
          "397:   return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1957de95d425d1c06560069dc7277a73a8b28683",
      "candidate_info": {
        "commit_hash": "1957de95d425d1c06560069dc7277a73a8b28683",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1957de95d425d1c06560069dc7277a73a8b28683",
        "files": [
          "drivers/usb/typec/tcpm/tcpm.c"
        ],
        "message": "usb: typec: tcpm: Add NULL check before dereferencing config\n\nWhen instantiating tcpm on an NXP OM 13588 board with NXP PTN5110,\nthe following crash is seen when writing into the 'preferred_role'\nsysfs attribute.\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000028\npgd = f69149ad\n[00000028] *pgd=00000000\nInternal error: Oops: 5 [#1] THUMB2\nModules linked in: tcpci tcpm\nCPU: 0 PID: 1882 Comm: bash Not tainted 5.1.18-sama5-armv7-r2 #4\nHardware name: Atmel SAMA5\nPC is at tcpm_try_role+0x3a/0x4c [tcpm]\nLR is at tcpm_try_role+0x15/0x4c [tcpm]\npc : [<bf8000e2>]    lr : [<bf8000bd>]    psr: 60030033\nsp : dc1a1e88  ip : c03fb47d  fp : 00000000\nr10: dc216190  r9 : dc1a1f78  r8 : 00000001\nr7 : df4ae044  r6 : dd032e90  r5 : dd1ce340  r4 : df4ae054\nr3 : 00000000  r2 : 00000000  r1 : 00000000  r0 : df4ae044\nFlags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA Thumb  Segment none\nControl: 50c53c7d  Table: 3efec059  DAC: 00000051\nProcess bash (pid: 1882, stack limit = 0x6a6d4aa5)\nStack: (0xdc1a1e88 to 0xdc1a2000)\n1e80:                   dd05d808 dd1ce340 00000001 00000007 dd1ce340 c03fb4a7\n1ea0: 00000007 00000007 dc216180 00000000 00000000 c01e1e03 00000000 00000000\n1ec0: c0907008 dee98b40 c01e1d5d c06106c4 00000000 00000000 00000007 c0194e8b\n1ee0: 0000000a 00000400 00000000 c01a97db dc22bf00 ffffe000 df4b6a00 df745900\n1f00: 00000001 00000001 000000dd c01a9c2f 7aeab3be c0907008 00000000 dc22bf00\n1f20: c0907008 00000000 00000000 00000000 00000000 7aeab3be 00000007 dee98b40\n1f40: 005dc318 dc1a1f78 00000000 00000000 00000007 c01969f7 0000000a c01a20cb\n1f60: dee98b40 c0907008 dee98b40 005dc318 00000000 c0196b9b 00000000 00000000\n1f80: dee98b40 7aeab3be 00000074 005dc318 b6f3bdb0 00000004 c0101224 dc1a0000\n1fa0: 00000004 c0101001 00000074 005dc318 00000001 005dc318 00000007 00000000\n1fc0: 00000074 005dc318 b6f3bdb0 00000004 00000007 00000007 00000000 00000000\n1fe0: 00000004 be800880 b6ed35b3 b6e5c746 60030030 00000001 00000000 00000000\n[<bf8000e2>] (tcpm_try_role [tcpm]) from [<c03fb4a7>] (preferred_role_store+0x2b/0x5c)\n[<c03fb4a7>] (preferred_role_store) from [<c01e1e03>] (kernfs_fop_write+0xa7/0x150)\n[<c01e1e03>] (kernfs_fop_write) from [<c0194e8b>] (__vfs_write+0x1f/0x104)\n[<c0194e8b>] (__vfs_write) from [<c01969f7>] (vfs_write+0x6b/0x104)\n[<c01969f7>] (vfs_write) from [<c0196b9b>] (ksys_write+0x43/0x94)\n[<c0196b9b>] (ksys_write) from [<c0101001>] (ret_fast_syscall+0x1/0x62)\n\nSince commit 96232cbc6c994 (\"usb: typec: tcpm: support get typec and pd\nconfig from device properties\"), the 'config' pointer in struct tcpc_dev\nis optional when registering a Type-C port. Since it is optional, we have\nto check if it is NULL before dereferencing it.\n\nReported-by: Douglas Gilbert <dgilbert@interlog.com>\nCc: Douglas Gilbert <dgilbert@interlog.com>\nFixes: 96232cbc6c994 (\"usb: typec: tcpm: support get typec and pd config from device properties\")\nSigned-off-by: Guenter Roeck <linux@roeck-us.net>\nCc: stable <stable@vger.kernel.org>\nReviewed-by: Jun Li <jun.li@nxp.com>\nReviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>\nLink: https://lore.kernel.org/r/1563979112-22483-1-git-send-email-linux@roeck-us.net\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "drivers/usb/typec/tcpm/tcpm.c||drivers/usb/typec/tcpm/tcpm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/usb/typec/tcpm/tcpm.c||drivers/usb/typec/tcpm/tcpm.c": [
          "File: drivers/usb/typec/tcpm/tcpm.c -> drivers/usb/typec/tcpm/tcpm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "379:    return SNK_UNATTACHED;",
          "380:   else if (port->try_role == TYPEC_SOURCE)",
          "381:    return SRC_UNATTACHED;",
          "383:    return SNK_UNATTACHED;",
          "385:  } else if (port->port_type == TYPEC_PORT_SNK) {",
          "",
          "[Removed Lines]",
          "382:   else if (port->tcpc->config->default_role == TYPEC_SINK)",
          "",
          "[Added Lines]",
          "382:   else if (port->tcpc->config &&",
          "383:     port->tcpc->config->default_role == TYPEC_SINK)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4114:  mutex_lock(&port->lock);",
          "4115:  if (tcpc->try_role)",
          "4116:   ret = tcpc->try_role(tcpc, role);",
          "4118:   port->try_role = role;",
          "4119:  port->try_src_count = 0;",
          "4120:  port->try_snk_count = 0;",
          "",
          "[Removed Lines]",
          "4117:  if (!ret && !tcpc->config->try_role_hw)",
          "",
          "[Added Lines]",
          "4118:  if (!ret && (!tcpc->config || !tcpc->config->try_role_hw))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4701:  port->typec_caps.prefer_role = tcfg->default_role;",
          "4702:  port->typec_caps.type = tcfg->type;",
          "4703:  port->typec_caps.data = tcfg->data;",
          "4706:  return 0;",
          "4707: }",
          "",
          "[Removed Lines]",
          "4704:  port->self_powered = port->tcpc->config->self_powered;",
          "",
          "[Added Lines]",
          "4705:  port->self_powered = tcfg->self_powered;",
          "",
          "---------------"
        ]
      }
    }
  ]
}