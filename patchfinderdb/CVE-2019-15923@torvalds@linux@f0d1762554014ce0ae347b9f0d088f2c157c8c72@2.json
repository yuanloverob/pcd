{
  "cve_id": "CVE-2019-15923",
  "cve_desc": "An issue was discovered in the Linux kernel before 5.0.9. There is a NULL pointer dereference for a cd data structure if alloc_disk fails in drivers/block/paride/pf.c.",
  "repo": "torvalds/linux",
  "patch_hash": "f0d1762554014ce0ae347b9f0d088f2c157c8c72",
  "patch_info": {
    "commit_hash": "f0d1762554014ce0ae347b9f0d088f2c157c8c72",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/f0d1762554014ce0ae347b9f0d088f2c157c8c72",
    "files": [
      "drivers/block/paride/pcd.c"
    ],
    "message": "paride/pcd: Fix potential NULL pointer dereference and mem leak\n\nSyzkaller report this:\n\npcd: pcd version 1.07, major 46, nice 0\npcd0: Autoprobe failed\npcd: No CD-ROM drive found\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN PTI\nCPU: 1 PID: 4525 Comm: syz-executor.0 Not tainted 5.1.0-rc3+ #8\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nRIP: 0010:pcd_init+0x95c/0x1000 [pcd]\nCode: c4 ab f7 48 89 d8 48 c1 e8 03 80 3c 28 00 74 08 48 89 df e8 56 a3 da f7 4c 8b 23 49 8d bc 24 80 05 00 00 48 89 f8 48 c1 e8 03 <80> 3c 28 00 74 05 e8 39 a3 da f7 49 8b bc 24 80 05 00 00 e8 cc b2\nRSP: 0018:ffff8881e84df880 EFLAGS: 00010202\nRAX: 00000000000000b0 RBX: ffffffffc155a088 RCX: ffffffffc1508935\nRDX: 0000000000040000 RSI: ffffc900014f0000 RDI: 0000000000000580\nRBP: dffffc0000000000 R08: ffffed103ee658b8 R09: ffffed103ee658b8\nR10: 0000000000000001 R11: ffffed103ee658b7 R12: 0000000000000000\nR13: ffffffffc155a778 R14: ffffffffc155a4a8 R15: 0000000000000003\nFS:  00007fe71bee3700(0000) GS:ffff8881f7300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055a7334441a8 CR3: 00000001e9674003 CR4: 00000000007606e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ? 0xffffffffc1508000\n ? 0xffffffffc1508000\n do_one_initcall+0xbc/0x47d init/main.c:901\n do_init_module+0x1b5/0x547 kernel/module.c:3456\n load_module+0x6405/0x8c10 kernel/module.c:3804\n __do_sys_finit_module+0x162/0x190 kernel/module.c:3898\n do_syscall_64+0x9f/0x450 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fe71bee2c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000180 RDI: 0000000000000003\nRBP: 00007fe71bee2c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fe71bee36bc\nR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004\nModules linked in: pcd(+) paride solos_pci atm ts_fsm rtc_mt6397 mac80211 nhc_mobility nhc_udp nhc_ipv6 nhc_hop nhc_dest nhc_fragment nhc_routing 6lowpan rtc_cros_ec memconsole intel_xhci_usb_role_switch roles rtc_wm8350 usbcore industrialio_triggered_buffer kfifo_buf industrialio asc7621 dm_era dm_persistent_data dm_bufio dm_mod tpm gnss_ubx gnss_serial serdev gnss max2165 cpufreq_dt hid_penmount hid menf21bmc_wdt rc_core n_tracesink ide_gd_mod cdns_csi2tx v4l2_fwnode videodev media pinctrl_lewisburg pinctrl_intel iptable_security iptable_raw iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bpfilter ip6_vti ip_vti ip_gre ipip sit tunnel4 ip_tunnel hsr veth netdevsim vxcan batman_adv cfg80211 rfkill chnl_net caif nlmon dummy team bonding vcan bridge stp llc ip6_gre gre ip6_tunnel tunnel6 tun joydev mousedev ppdev kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel aesni_intel aes_x86_64 crypto_simd\n ide_pci_generic piix input_leds cryptd glue_helper psmouse ide_core intel_agp serio_raw intel_gtt ata_generic i2c_piix4 agpgart pata_acpi parport_pc parport floppy rtc_cmos sch_fq_codel ip_tables x_tables sha1_ssse3 sha1_generic ipv6 [last unloaded: bmc150_magn]\nDumping ftrace buffer:\n   (ftrace buffer empty)\n---[ end trace d873691c3cd69f56 ]---\n\nIf alloc_disk fails in pcd_init_units, cd->disk will be\nNULL, however in pcd_detect and pcd_exit, it's not check\nthis before free.It may result a NULL pointer dereference.\n\nAlso when register_blkdev failed, blk_cleanup_queue() and\nblk_mq_free_tag_set() should be called to free resources.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: 81b74ac68c28 (\"paride/pcd: cleanup queues when detection fails\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\n\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
    "before_after_code_files": [
      "drivers/block/paride/pcd.c||drivers/block/paride/pcd.c"
    ]
  },
  "patch_diff": {
    "drivers/block/paride/pcd.c||drivers/block/paride/pcd.c": [
      "File: drivers/block/paride/pcd.c -> drivers/block/paride/pcd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "314:   disk->queue = blk_mq_init_sq_queue(&cd->tag_set, &pcd_mq_ops,",
      "315:          1, BLK_MQ_F_SHOULD_MERGE);",
      "316:   if (IS_ERR(disk->queue)) {",
      "317:    disk->queue = NULL;",
      "318:    continue;",
      "319:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "317:    put_disk(disk);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "751:  printk(\"%s: No CD-ROM drive found\\n\", name);",
      "752:  for (unit = 0, cd = pcd; unit < PCD_UNITS; unit++, cd++) {",
      "753:   blk_cleanup_queue(cd->disk->queue);",
      "754:   cd->disk->queue = NULL;",
      "755:   blk_mq_free_tag_set(&cd->tag_set);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "754:   if (!cd->disk)",
      "755:    continue;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1010:  pcd_probe_capabilities();",
      "1012:  if (register_blkdev(major, name)) {",
      "1014:    put_disk(cd->disk);",
      "1015:   return -EBUSY;",
      "1016:  }",
      "",
      "[Removed Lines]",
      "1013:   for (unit = 0, cd = pcd; unit < PCD_UNITS; unit++, cd++)",
      "",
      "[Added Lines]",
      "1016:   for (unit = 0, cd = pcd; unit < PCD_UNITS; unit++, cd++) {",
      "1017:    if (!cd->disk)",
      "1018:     continue;",
      "1020:    blk_cleanup_queue(cd->disk->queue);",
      "1021:    blk_mq_free_tag_set(&cd->tag_set);",
      "1023:   }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1032:  int unit;",
      "1034:  for (unit = 0, cd = pcd; unit < PCD_UNITS; unit++, cd++) {",
      "1035:   if (cd->present) {",
      "1036:    del_gendisk(cd->disk);",
      "1037:    pi_release(cd->pi);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1044:   if (!cd->disk)",
      "1045:    continue;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6a8aae68c87349dbbcd46eac380bc43cdb98a13b",
      "candidate_info": {
        "commit_hash": "6a8aae68c87349dbbcd46eac380bc43cdb98a13b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/6a8aae68c87349dbbcd46eac380bc43cdb98a13b",
        "files": [
          "drivers/virtio/virtio_pci_common.c"
        ],
        "message": "virtio_pci: fix a NULL pointer reference in vp_del_vqs\n\nIf the msix_affinity_masks is alloced failed, then we'll\ntry to free some resources in vp_free_vectors() that may\naccess it directly.\n\nWe met the following stack in our production:\n[   29.296767] BUG: unable to handle kernel NULL pointer dereference at  (null)\n[   29.311151] IP: [<ffffffffc04fe35a>] vp_free_vectors+0x6a/0x150 [virtio_pci]\n[   29.324787] PGD 0\n[   29.333224] Oops: 0000 [#1] SMP\n[...]\n[   29.425175] RIP: 0010:[<ffffffffc04fe35a>]  [<ffffffffc04fe35a>] vp_free_vectors+0x6a/0x150 [virtio_pci]\n[   29.441405] RSP: 0018:ffff9a55c2dcfa10  EFLAGS: 00010206\n[   29.453491] RAX: 0000000000000000 RBX: ffff9a55c322c400 RCX: 0000000000000000\n[   29.467488] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff9a55c322c400\n[   29.481461] RBP: ffff9a55c2dcfa20 R08: 0000000000000000 R09: ffffc1b6806ff020\n[   29.495427] R10: 0000000000000e95 R11: 0000000000aaaaaa R12: 0000000000000000\n[   29.509414] R13: 0000000000010000 R14: ffff9a55bd2d9e98 R15: ffff9a55c322c400\n[   29.523407] FS:  00007fdcba69f8c0(0000) GS:ffff9a55c2840000(0000) knlGS:0000000000000000\n[   29.538472] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   29.551621] CR2: 0000000000000000 CR3: 000000003ce52000 CR4: 00000000003607a0\n[   29.565886] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   29.580055] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[   29.594122] Call Trace:\n[   29.603446]  [<ffffffffc04fe8a2>] vp_request_msix_vectors+0xe2/0x260 [virtio_pci]\n[   29.618017]  [<ffffffffc04fedc5>] vp_try_to_find_vqs+0x95/0x3b0 [virtio_pci]\n[   29.632152]  [<ffffffffc04ff117>] vp_find_vqs+0x37/0xb0 [virtio_pci]\n[   29.645582]  [<ffffffffc057bf63>] init_vq+0x153/0x260 [virtio_blk]\n[   29.658831]  [<ffffffffc057c1e8>] virtblk_probe+0xe8/0x87f [virtio_blk]\n[...]\n\nCc: Gonglei <arei.gonglei@huawei.com>\nSigned-off-by: Longpeng <longpeng2@huawei.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Gonglei <arei.gonglei@huawei.com>",
        "before_after_code_files": [
          "drivers/virtio/virtio_pci_common.c||drivers/virtio/virtio_pci_common.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/virtio/virtio_pci_common.c||drivers/virtio/virtio_pci_common.c": [
          "File: drivers/virtio/virtio_pci_common.c -> drivers/virtio/virtio_pci_common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:  for (i = 0; i < vp_dev->msix_used_vectors; ++i)",
          "256:   free_irq(pci_irq_vector(vp_dev->pci_dev, i), vp_dev);",
          "262:  if (vp_dev->msix_enabled) {",
          "",
          "[Removed Lines]",
          "258:  for (i = 0; i < vp_dev->msix_vectors; i++)",
          "259:   if (vp_dev->msix_affinity_masks[i])",
          "260:    free_cpumask_var(vp_dev->msix_affinity_masks[i]);",
          "",
          "[Added Lines]",
          "258:  if (vp_dev->msix_affinity_masks) {",
          "259:   for (i = 0; i < vp_dev->msix_vectors; i++)",
          "260:    if (vp_dev->msix_affinity_masks[i])",
          "261:     free_cpumask_var(vp_dev->msix_affinity_masks[i]);",
          "262:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58ccd2d31e502c37e108b285bf3d343eb00c235b",
      "candidate_info": {
        "commit_hash": "58ccd2d31e502c37e108b285bf3d343eb00c235b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/58ccd2d31e502c37e108b285bf3d343eb00c235b",
        "files": [
          "drivers/block/paride/pf.c"
        ],
        "message": "paride/pf: Fix potential NULL pointer dereference\n\nSyzkaller report this:\n\npf: pf version 1.04, major 47, cluster 64, nice 0\npf: No ATAPI disk detected\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN PTI\nCPU: 0 PID: 9887 Comm: syz-executor.0 Tainted: G         C        5.1.0-rc3+ #8\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nRIP: 0010:pf_init+0x7af/0x1000 [pf]\nCode: 46 77 d2 48 89 d8 48 c1 e8 03 80 3c 28 00 74 08 48 89 df e8 03 25 a6 d2 4c 8b 23 49 8d bc 24 80 05 00 00 48 89 f8 48 c1 e8 03 <80> 3c 28 00 74 05 e8 e6 24 a6 d2 49 8b bc 24 80 05 00 00 e8 79 34\nRSP: 0018:ffff8881abcbf998 EFLAGS: 00010202\nRAX: 00000000000000b0 RBX: ffffffffc1e4a8a8 RCX: ffffffffaec50788\nRDX: 0000000000039b10 RSI: ffffc9000153c000 RDI: 0000000000000580\nRBP: dffffc0000000000 R08: ffffed103ee44e59 R09: ffffed103ee44e59\nR10: 0000000000000001 R11: ffffed103ee44e58 R12: 0000000000000000\nR13: ffffffffc1e4b028 R14: 0000000000000000 R15: 0000000000000020\nFS:  00007f1b78a91700(0000) GS:ffff8881f7200000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f6d72b207f8 CR3: 00000001d5790004 CR4: 00000000007606f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ? 0xffffffffc1e50000\n do_one_initcall+0xbc/0x47d init/main.c:901\n do_init_module+0x1b5/0x547 kernel/module.c:3456\n load_module+0x6405/0x8c10 kernel/module.c:3804\n __do_sys_finit_module+0x162/0x190 kernel/module.c:3898\n do_syscall_64+0x9f/0x450 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f1b78a90c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000180 RDI: 0000000000000003\nRBP: 00007f1b78a90c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f1b78a916bc\nR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004\nModules linked in: pf(+) paride gpio_tps65218 tps65218 i2c_cht_wc ati_remote dc395x act_meta_skbtcindex act_ife ife ecdh_generic rc_xbox_dvd sky81452_regulator v4l2_fwnode leds_blinkm snd_usb_hiface comedi(C) aes_ti slhc cfi_cmdset_0020 mtd cfi_util sx8654 mdio_gpio of_mdio fixed_phy mdio_bitbang libphy alcor_pci matrix_keymap hid_uclogic usbhid scsi_transport_fc videobuf2_v4l2 videobuf2_dma_sg snd_soc_pcm179x_spi snd_soc_pcm179x_codec i2c_demux_pinctrl mdev snd_indigodj isl6405 mii enc28j60 cmac adt7316_i2c(C) adt7316(C) fmc_trivial fmc nf_reject_ipv4 authenc rc_dtt200u rtc_ds1672 dvb_usb_dibusb_mc dvb_usb_dibusb_mc_common dib3000mc dibx000_common dvb_usb_dibusb_common dvb_usb dvb_core videobuf2_common videobuf2_vmalloc videobuf2_memops regulator_haptic adf7242 mac802154 ieee802154 s5h1409 da9034_ts snd_intel8x0m wmi cx24120 usbcore sdhci_cadence sdhci_pltfm sdhci mmc_core joydev i2c_algo_bit scsi_transport_iscsi iscsi_boot_sysfs ves1820 lockd grace nfs_acl auth_rpcgss sunrp\n c\n ip_vs snd_soc_adau7002 snd_cs4281 snd_rawmidi gameport snd_opl3_lib snd_seq_device snd_hwdep snd_ac97_codec ad7418 hid_primax hid snd_soc_cs4265 snd_soc_core snd_pcm_dmaengine snd_pcm snd_timer ac97_bus snd_compress snd soundcore ti_adc108s102 eeprom_93cx6 i2c_algo_pca mlxreg_hotplug st_pressure st_sensors industrialio_triggered_buffer kfifo_buf industrialio v4l2_common videodev media snd_soc_adau_utils rc_pinnacle_grey rc_core pps_gpio leds_lm3692x nandcore ledtrig_pattern iptable_security iptable_raw iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bpfilter ip6_vti ip_vti ip_gre ipip sit tunnel4 ip_tunnel hsr veth netdevsim vxcan batman_adv cfg80211 rfkill chnl_net caif nlmon dummy team bonding vcan bridge stp llc ip6_gre gre ip6_tunnel tunnel6 tun mousedev ppdev tpm kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel aesni_intel ide_pci_generic aes_x86_64 piix crypto_simd input_leds psmouse cryp\n td\n glue_helper ide_core intel_agp serio_raw intel_gtt agpgart ata_generic i2c_piix4 pata_acpi parport_pc parport rtc_cmos floppy sch_fq_codel ip_tables x_tables sha1_ssse3 sha1_generic ipv6 [last unloaded: paride]\nDumping ftrace buffer:\n  (ftrace buffer empty)\n---[ end trace 7a818cf5f210d79e ]---\n\nIf alloc_disk fails in pf_init_units, pf->disk will be\nNULL, however in pf_detect and pf_exit, it's not check\nthis before free.It may result a NULL pointer dereference.\n\nAlso when register_blkdev failed, blk_cleanup_queue() and\nblk_mq_free_tag_set() should be called to free resources.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: 6ce59025f118 (\"paride/pf: cleanup queues when detection fails\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\n\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "before_after_code_files": [
          "drivers/block/paride/pf.c||drivers/block/paride/pf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/block/paride/pf.c||drivers/block/paride/pf.c": [
          "File: drivers/block/paride/pf.c -> drivers/block/paride/pf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "763:  printk(\"%s: No ATAPI disk detected\\n\", name);",
          "764:  for (pf = units, unit = 0; unit < PF_UNITS; pf++, unit++) {",
          "765:   blk_cleanup_queue(pf->disk->queue);",
          "766:   pf->disk->queue = NULL;",
          "767:   blk_mq_free_tag_set(&pf->tag_set);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "765:   if (!pf->disk)",
          "766:    continue;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1029:  pf_busy = 0;",
          "1031:  if (register_blkdev(major, name)) {",
          "1033:    put_disk(pf->disk);",
          "1034:   return -EBUSY;",
          "1035:  }",
          "",
          "[Removed Lines]",
          "1032:   for (pf = units, unit = 0; unit < PF_UNITS; pf++, unit++)",
          "",
          "[Added Lines]",
          "1034:   for (pf = units, unit = 0; unit < PF_UNITS; pf++, unit++) {",
          "1035:    if (!pf->disk)",
          "1036:     continue;",
          "1037:    blk_cleanup_queue(pf->disk->queue);",
          "1038:    blk_mq_free_tag_set(&pf->tag_set);",
          "1040:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1051:  int unit;",
          "1052:  unregister_blkdev(major, name);",
          "1053:  for (pf = units, unit = 0; unit < PF_UNITS; pf++, unit++) {",
          "1054:   if (pf->present)",
          "1055:    del_gendisk(pf->disk);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1061:   if (!pf->disk)",
          "1062:    continue;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a9fd0953fa4a62887306be28641b4b0809f3b2fd",
      "candidate_info": {
        "commit_hash": "a9fd0953fa4a62887306be28641b4b0809f3b2fd",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a9fd0953fa4a62887306be28641b4b0809f3b2fd",
        "files": [
          "drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c"
        ],
        "message": "brcmfmac: convert dev_init_lock mutex to completion\n\nLeaving dev_init_lock mutex locked in probe causes BUG and a WARNING when\nkernel is compiled with CONFIG_PROVE_LOCKING. Convert mutex to completion\nwhich silences those warnings and improves code readability.\n\nFix below errors when connecting the USB WiFi dongle:\n\nbrcmfmac: brcmf_fw_alloc_request: using brcm/brcmfmac43143 for chip BCM43143/2\nBUG: workqueue leaked lock or atomic: kworker/0:2/0x00000000/434\n     last function: hub_event\n1 lock held by kworker/0:2/434:\n #0: 18d5dcdf (&devinfo->dev_init_lock){+.+.}, at: brcmf_usb_probe+0x78/0x550 [brcmfmac]\nCPU: 0 PID: 434 Comm: kworker/0:2 Not tainted 4.19.23-00084-g454a789-dirty #123\nHardware name: Freescale i.MX6 Quad/DualLite (Device Tree)\nWorkqueue: usb_hub_wq hub_event\n[<8011237c>] (unwind_backtrace) from [<8010d74c>] (show_stack+0x10/0x14)\n[<8010d74c>] (show_stack) from [<809c4324>] (dump_stack+0xa8/0xd4)\n[<809c4324>] (dump_stack) from [<8014195c>] (process_one_work+0x710/0x808)\n[<8014195c>] (process_one_work) from [<80141a80>] (worker_thread+0x2c/0x564)\n[<80141a80>] (worker_thread) from [<80147bcc>] (kthread+0x13c/0x16c)\n[<80147bcc>] (kthread) from [<801010b4>] (ret_from_fork+0x14/0x20)\nException stack(0xed1d9fb0 to 0xed1d9ff8)\n9fa0:                                     00000000 00000000 00000000 00000000\n9fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n9fe0: 00000000 00000000 00000000 00000000 00000013 00000000\n\n======================================================\nWARNING: possible circular locking dependency detected\n4.19.23-00084-g454a789-dirty #123 Not tainted\n------------------------------------------------------\nkworker/0:2/434 is trying to acquire lock:\ne29cf799 ((wq_completion)\"events\"){+.+.}, at: process_one_work+0x174/0x808\n\nbut task is already holding lock:\n18d5dcdf (&devinfo->dev_init_lock){+.+.}, at: brcmf_usb_probe+0x78/0x550 [brcmfmac]\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #2 (&devinfo->dev_init_lock){+.+.}:\n       mutex_lock_nested+0x1c/0x24\n       brcmf_usb_probe+0x78/0x550 [brcmfmac]\n       usb_probe_interface+0xc0/0x1bc\n       really_probe+0x228/0x2c0\n       __driver_attach+0xe4/0xe8\n       bus_for_each_dev+0x68/0xb4\n       bus_add_driver+0x19c/0x214\n       driver_register+0x78/0x110\n       usb_register_driver+0x84/0x148\n       process_one_work+0x228/0x808\n       worker_thread+0x2c/0x564\n       kthread+0x13c/0x16c\n       ret_from_fork+0x14/0x20\n         (null)\n\n-> #1 (brcmf_driver_work){+.+.}:\n       worker_thread+0x2c/0x564\n       kthread+0x13c/0x16c\n       ret_from_fork+0x14/0x20\n         (null)\n\n-> #0 ((wq_completion)\"events\"){+.+.}:\n       process_one_work+0x1b8/0x808\n       worker_thread+0x2c/0x564\n       kthread+0x13c/0x16c\n       ret_from_fork+0x14/0x20\n         (null)\n\nother info that might help us debug this:\n\nChain exists of:\n  (wq_completion)\"events\" --> brcmf_driver_work --> &devinfo->dev_init_lock\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(&devinfo->dev_init_lock);\n                               lock(brcmf_driver_work);\n                               lock(&devinfo->dev_init_lock);\n  lock((wq_completion)\"events\");\n\n *** DEADLOCK ***\n\n1 lock held by kworker/0:2/434:\n #0: 18d5dcdf (&devinfo->dev_init_lock){+.+.}, at: brcmf_usb_probe+0x78/0x550 [brcmfmac]\n\nstack backtrace:\nCPU: 0 PID: 434 Comm: kworker/0:2 Not tainted 4.19.23-00084-g454a789-dirty #123\nHardware name: Freescale i.MX6 Quad/DualLite (Device Tree)\nWorkqueue: events request_firmware_work_func\n[<8011237c>] (unwind_backtrace) from [<8010d74c>] (show_stack+0x10/0x14)\n[<8010d74c>] (show_stack) from [<809c4324>] (dump_stack+0xa8/0xd4)\n[<809c4324>] (dump_stack) from [<80172838>] (print_circular_bug+0x210/0x330)\n[<80172838>] (print_circular_bug) from [<80175940>] (__lock_acquire+0x160c/0x1a30)\n[<80175940>] (__lock_acquire) from [<8017671c>] (lock_acquire+0xe0/0x268)\n[<8017671c>] (lock_acquire) from [<80141404>] (process_one_work+0x1b8/0x808)\n[<80141404>] (process_one_work) from [<80141a80>] (worker_thread+0x2c/0x564)\n[<80141a80>] (worker_thread) from [<80147bcc>] (kthread+0x13c/0x16c)\n[<80147bcc>] (kthread) from [<801010b4>] (ret_from_fork+0x14/0x20)\nException stack(0xed1d9fb0 to 0xed1d9ff8)\n9fa0:                                     00000000 00000000 00000000 00000000\n9fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n9fe0: 00000000 00000000 00000000 00000000 00000013 00000000\n\nSigned-off-by: Piotr Figiel <p.figiel@camlintechnologies.com>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>",
        "before_after_code_files": [
          "drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c||drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c||drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c": [
          "File: drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c -> drivers/net/wireless/broadcom/brcm80211/brcmfmac/usb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:  struct usb_device *usbdev;",
          "162:  struct device *dev;",
          "165:  int ctl_in_pipe, ctl_out_pipe;",
          "",
          "[Removed Lines]",
          "163:  struct mutex dev_init_lock;",
          "",
          "[Added Lines]",
          "163:  struct completion dev_init_done;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1194:  if (ret)",
          "1195:   goto error;",
          "1198:  return;",
          "1199: error:",
          "1200:  brcmf_dbg(TRACE, \"failed: dev=%s, err=%d\\n\", dev_name(dev), ret);",
          "1202:  device_release_driver(dev);",
          "1203: }",
          "",
          "[Removed Lines]",
          "1197:  mutex_unlock(&devinfo->dev_init_lock);",
          "1201:  mutex_unlock(&devinfo->dev_init_lock);",
          "",
          "[Added Lines]",
          "1197:  complete(&devinfo->dev_init_done);",
          "1201:  complete(&devinfo->dev_init_done);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1266:   if (ret)",
          "1267:    goto fail;",
          "1270:   return 0;",
          "1271:  }",
          "1272:  bus->chip = bus_pub->devid;",
          "",
          "[Removed Lines]",
          "1269:   mutex_unlock(&devinfo->dev_init_lock);",
          "",
          "[Added Lines]",
          "1269:   complete(&devinfo->dev_init_done);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1327:  devinfo->usbdev = usb;",
          "1328:  devinfo->dev = &usb->dev;",
          "1335:  usb_set_intfdata(intf, devinfo);",
          "",
          "[Removed Lines]",
          "1332:  mutex_init(&devinfo->dev_init_lock);",
          "1333:  mutex_lock(&devinfo->dev_init_lock);",
          "",
          "[Added Lines]",
          "1332:  init_completion(&devinfo->dev_init_done);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1408:  return 0;",
          "1410: fail:",
          "1412:  kfree(devinfo);",
          "1413:  usb_set_intfdata(intf, NULL);",
          "1414:  return ret;",
          "",
          "[Removed Lines]",
          "1411:  mutex_unlock(&devinfo->dev_init_lock);",
          "",
          "[Added Lines]",
          "1410:  complete(&devinfo->dev_init_done);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1423:  devinfo = (struct brcmf_usbdev_info *)usb_get_intfdata(intf);",
          "1425:  if (devinfo) {",
          "",
          "[Removed Lines]",
          "1426:   mutex_lock(&devinfo->dev_init_lock);",
          "",
          "[Added Lines]",
          "1425:   wait_for_completion(&devinfo->dev_init_done);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "47b16820c490149c2923e8474048f2c6e7557cab",
      "candidate_info": {
        "commit_hash": "47b16820c490149c2923e8474048f2c6e7557cab",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/47b16820c490149c2923e8474048f2c6e7557cab",
        "files": [
          "drivers/block/xsysace.c"
        ],
        "message": "xsysace: Fix error handling in ace_setup\n\nIf xace hardware reports a bad version number, the error handling code\nin ace_setup() calls put_disk(), followed by queue cleanup. However, since\nthe disk data structure has the queue pointer set, put_disk() also\ncleans and releases the queue. This results in blk_cleanup_queue()\naccessing an already released data structure, which in turn may result\nin a crash such as the following.\n\n[   10.681671] BUG: Kernel NULL pointer dereference at 0x00000040\n[   10.681826] Faulting instruction address: 0xc0431480\n[   10.682072] Oops: Kernel access of bad area, sig: 11 [#1]\n[   10.682251] BE PAGE_SIZE=4K PREEMPT Xilinx Virtex440\n[   10.682387] Modules linked in:\n[   10.682528] CPU: 0 PID: 1 Comm: swapper Tainted: G        W         5.0.0-rc6-next-20190218+ #2\n[   10.682733] NIP:  c0431480 LR: c043147c CTR: c0422ad8\n[   10.682863] REGS: cf82fbe0 TRAP: 0300   Tainted: G        W          (5.0.0-rc6-next-20190218+)\n[   10.683065] MSR:  00029000 <CE,EE,ME>  CR: 22000222  XER: 00000000\n[   10.683236] DEAR: 00000040 ESR: 00000000\n[   10.683236] GPR00: c043147c cf82fc90 cf82ccc0 00000000 00000000 00000000 00000002 00000000\n[   10.683236] GPR08: 00000000 00000000 c04310bc 00000000 22000222 00000000 c0002c54 00000000\n[   10.683236] GPR16: 00000000 00000001 c09aa39c c09021b0 c09021dc 00000007 c0a68c08 00000000\n[   10.683236] GPR24: 00000001 ced6d400 ced6dcf0 c0815d9c 00000000 00000000 00000000 cedf0800\n[   10.684331] NIP [c0431480] blk_mq_run_hw_queue+0x28/0x114\n[   10.684473] LR [c043147c] blk_mq_run_hw_queue+0x24/0x114\n[   10.684602] Call Trace:\n[   10.684671] [cf82fc90] [c043147c] blk_mq_run_hw_queue+0x24/0x114 (unreliable)\n[   10.684854] [cf82fcc0] [c04315bc] blk_mq_run_hw_queues+0x50/0x7c\n[   10.685002] [cf82fce0] [c0422b24] blk_set_queue_dying+0x30/0x68\n[   10.685154] [cf82fcf0] [c0423ec0] blk_cleanup_queue+0x34/0x14c\n[   10.685306] [cf82fd10] [c054d73c] ace_probe+0x3dc/0x508\n[   10.685445] [cf82fd50] [c052d740] platform_drv_probe+0x4c/0xb8\n[   10.685592] [cf82fd70] [c052abb0] really_probe+0x20c/0x32c\n[   10.685728] [cf82fda0] [c052ae58] driver_probe_device+0x68/0x464\n[   10.685877] [cf82fdc0] [c052b500] device_driver_attach+0xb4/0xe4\n[   10.686024] [cf82fde0] [c052b5dc] __driver_attach+0xac/0xfc\n[   10.686161] [cf82fe00] [c0528428] bus_for_each_dev+0x80/0xc0\n[   10.686314] [cf82fe30] [c0529b3c] bus_add_driver+0x144/0x234\n[   10.686457] [cf82fe50] [c052c46c] driver_register+0x88/0x15c\n[   10.686610] [cf82fe60] [c09de288] ace_init+0x4c/0xac\n[   10.686742] [cf82fe80] [c0002730] do_one_initcall+0xac/0x330\n[   10.686888] [cf82fee0] [c09aafd0] kernel_init_freeable+0x34c/0x478\n[   10.687043] [cf82ff30] [c0002c6c] kernel_init+0x18/0x114\n[   10.687188] [cf82ff40] [c000f2f0] ret_from_kernel_thread+0x14/0x1c\n[   10.687349] Instruction dump:\n[   10.687435] 3863ffd4 4bfffd70 9421ffd0 7c0802a6 93c10028 7c9e2378 93e1002c 38810008\n[   10.687637] 7c7f1b78 90010034 4bfffc25 813f008c <81290040> 75290100 4182002c 80810008\n[   10.688056] ---[ end trace 13c9ff51d41b9d40 ]---\n\nFix the problem by setting the disk queue pointer to NULL before calling\nput_disk(). A more comprehensive fix might be to rearrange the code\nto check the hardware version before initializing data structures,\nbut I don't know if this would have undesirable side effects, and\nit would increase the complexity of backporting the fix to older kernels.\n\nFixes: 74489a91dd43a (\"Add support for Xilinx SystemACE CompactFlash interface\")\nAcked-by: Michal Simek <michal.simek@xilinx.com>\nSigned-off-by: Guenter Roeck <linux@roeck-us.net>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "before_after_code_files": [
          "drivers/block/xsysace.c||drivers/block/xsysace.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/block/xsysace.c||drivers/block/xsysace.c": [
          "File: drivers/block/xsysace.c -> drivers/block/xsysace.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1090:  return 0;",
          "1092: err_read:",
          "1093:  put_disk(ace->gd);",
          "1094: err_alloc_disk:",
          "1095:  blk_cleanup_queue(ace->queue);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1094:  ace->gd->queue = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "24d413a31afaee9bbbf79226052c386b01780ce2",
      "candidate_info": {
        "commit_hash": "24d413a31afaee9bbbf79226052c386b01780ce2",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/24d413a31afaee9bbbf79226052c386b01780ce2",
        "files": [
          "drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c"
        ],
        "message": "brcmfmac: fix Oops when bringing up interface during USB disconnect\n\nFix a race which leads to an Oops with NULL pointer dereference.  The\ndereference is in brcmf_config_dongle() when cfg_to_ndev() attempts to get\nnet_device structure of interface with index 0 via if2bss mapping. This\nshouldn't fail because of check for bus being ready in brcmf_netdev_open(),\nbut it's not synchronised with USB disconnect and there is a race: after\nthe check the bus can be marked down and the mapping for interface 0 may be\ngone.\n\nSolve this by modifying disconnect handling so that the removal of mapping\nof ifidx to brcmf_if structure happens after netdev removal (which is\nsynchronous with brcmf_netdev_open() thanks to rtln being locked in\ndevinet_ioctl()). This assures brcmf_netdev_open() returns before the\nmapping is removed during disconnect.\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000008\npgd = bcae2612\n[00000008] *pgd=8be73831\nInternal error: Oops: 17 [#1] PREEMPT SMP ARM\nModules linked in: brcmfmac brcmutil nf_log_ipv4 nf_log_common xt_LOG xt_limit\niptable_mangle xt_connmark xt_tcpudp xt_conntrack nf_conntrack nf_defrag_ipv6\nnf_defrag_ipv4 iptable_filter ip_tables x_tables usb_f_mass_storage usb_f_rndis\nu_ether usb_serial_simple usbserial cdc_acm smsc95xx usbnet ci_hdrc_imx ci_hdrc\nusbmisc_imx ulpi 8250_exar 8250_pci 8250 8250_base libcomposite configfs\nudc_core [last unloaded: brcmutil]\nCPU: 2 PID: 24478 Comm: ifconfig Not tainted 4.19.23-00078-ga62866d-dirty #115\nHardware name: Freescale i.MX6 Quad/DualLite (Device Tree)\nPC is at brcmf_cfg80211_up+0x94/0x29c [brcmfmac]\nLR is at brcmf_cfg80211_up+0x8c/0x29c [brcmfmac]\npc : [<7f26a91c>]    lr : [<7f26a914>]    psr: a0070013\nsp : eca99d28  ip : 00000000  fp : ee9c6c00\nr10: 00000036  r9 : 00000000  r8 : ece4002c\nr7 : edb5b800  r6 : 00000000  r5 : 80f08448  r4 : edb5b968\nr3 : ffffffff  r2 : 00000000  r1 : 00000002  r0 : 00000000\nFlags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none\nControl: 10c5387d  Table: 7ca0c04a  DAC: 00000051\nProcess ifconfig (pid: 24478, stack limit = 0xd9e85a0e)\nStack: (0xeca99d28 to 0xeca9a000)\n9d20:                   00000000 80f873b0 0000000d 80f08448 eca99d68 50d45f32\n9d40: 7f27de94 ece40000 80f08448 80f08448 7f27de94 ece4002c 00000000 00000036\n9d60: ee9c6c00 7f27262c 00001002 50d45f32 ece40000 00000000 80f08448 80772008\n9d80: 00000001 00001043 00001002 ece40000 00000000 50d45f32 ece40000 00000001\n9da0: 80f08448 00001043 00001002 807723d0 00000000 50d45f32 80f08448 eca99e58\n9dc0: 80f87113 50d45f32 80f08448 ece40000 ece40138 00001002 80f08448 00000000\n9de0: 00000000 80772434 edbd5380 eca99e58 edbd5380 80f08448 ee9c6c0c 80805f70\n9e00: 00000000 ede08e00 00008914 ece40000 00000014 ee9c6c0c 600c0013 00001043\n9e20: 0208a8c0 ffffffff 00000000 50d45f32 eca98000 80f08448 7ee9fc38 00008914\n9e40: 80f68e40 00000051 eca98000 00000036 00000003 80808b9c 6e616c77 00000030\n9e60: 00000000 00000000 00001043 0208a8c0 ffffffff 00000000 80f08448 00000000\n9e80: 00000000 816d8b20 600c0013 00000001 ede09320 801763d4 00000000 50d45f32\n9ea0: eca98000 80f08448 7ee9fc38 50d45f32 00008914 80f08448 7ee9fc38 80f68e40\n9ec0: ed531540 8074721c 00000800 00000001 00000000 6e616c77 00000030 00000000\n9ee0: 00000000 00001002 0208a8c0 ffffffff 00000000 50d45f32 80f08448 7ee9fc38\n9f00: ed531560 ec8fc900 80285a6c 80285138 edb910c0 00000000 ecd91008 ede08e00\n9f20: 80f08448 00000000 00000000 816d8b20 600c0013 00000001 ede09320 801763d4\n9f40: 00000000 50d45f32 00021000 edb91118 edb910c0 80f08448 01b29000 edb91118\n9f60: eca99f7c 50d45f32 00021000 ec8fc900 00000003 ec8fc900 00008914 7ee9fc38\n9f80: eca98000 00000036 00000003 80285a6c 00086364 7ee9fe1c 000000c3 00000036\n9fa0: 801011c4 80101000 00086364 7ee9fe1c 00000003 00008914 7ee9fc38 00086364\n9fc0: 00086364 7ee9fe1c 000000c3 00000036 0008630c 7ee9fe1c 7ee9fc38 00000003\n9fe0: 000a42b8 7ee9fbd4 00019914 76e09acc 600c0010 00000003 00000000 00000000\n[<7f26a91c>] (brcmf_cfg80211_up [brcmfmac]) from [<7f27262c>] (brcmf_netdev_open+0x74/0xe8 [brcmfmac])\n[<7f27262c>] (brcmf_netdev_open [brcmfmac]) from [<80772008>] (__dev_open+0xcc/0x150)\n[<80772008>] (__dev_open) from [<807723d0>] (__dev_change_flags+0x168/0x1b4)\n[<807723d0>] (__dev_change_flags) from [<80772434>] (dev_change_flags+0x18/0x48)\n[<80772434>] (dev_change_flags) from [<80805f70>] (devinet_ioctl+0x67c/0x79c)\n[<80805f70>] (devinet_ioctl) from [<80808b9c>] (inet_ioctl+0x210/0x3d4)\n[<80808b9c>] (inet_ioctl) from [<8074721c>] (sock_ioctl+0x350/0x524)\n[<8074721c>] (sock_ioctl) from [<80285138>] (do_vfs_ioctl+0xb0/0x9b0)\n[<80285138>] (do_vfs_ioctl) from [<80285a6c>] (ksys_ioctl+0x34/0x5c)\n[<80285a6c>] (ksys_ioctl) from [<80101000>] (ret_fast_syscall+0x0/0x28)\nException stack(0xeca99fa8 to 0xeca99ff0)\n9fa0:                   00086364 7ee9fe1c 00000003 00008914 7ee9fc38 00086364\n9fc0: 00086364 7ee9fe1c 000000c3 00000036 0008630c 7ee9fe1c 7ee9fc38 00000003\n9fe0: 000a42b8 7ee9fbd4 00019914 76e09acc\nCode: e5970328 eb002021 e1a02006 e3a01002 (e5909008)\n---[ end trace 5cbac2333f3ac5df ]---\n\nSigned-off-by: Piotr Figiel <p.figiel@camlintechnologies.com>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>",
        "before_after_code_files": [
          "drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c||drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c||drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c": [
          "File: drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c -> drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "841:     bool rtnl_locked)",
          "842: {",
          "843:  struct brcmf_if *ifp;",
          "845:  ifp = drvr->iflist[bsscfgidx];",
          "847:  if (!ifp) {",
          "848:   bphy_err(drvr, \"Null interface, bsscfgidx=%d\\n\", bsscfgidx);",
          "849:   return;",
          "850:  }",
          "851:  brcmf_dbg(TRACE, \"Enter, bsscfgidx=%d, ifidx=%d\\n\", bsscfgidx,",
          "852:     ifp->ifidx);",
          "855:  if (ifp->ndev) {",
          "856:   if (bsscfgidx == 0) {",
          "857:    if (ifp->ndev->netdev_ops == &brcmf_netdev_ops_pri) {",
          "",
          "[Removed Lines]",
          "846:  drvr->iflist[bsscfgidx] = NULL;",
          "853:  if (drvr->if2bss[ifp->ifidx] == bsscfgidx)",
          "854:   drvr->if2bss[ifp->ifidx] = BRCMF_BSSIDX_INVALID;",
          "",
          "[Added Lines]",
          "844:  int ifidx;",
          "853:  ifidx = ifp->ifidx;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "879:   brcmf_p2p_ifp_removed(ifp, rtnl_locked);",
          "880:   kfree(ifp);",
          "881:  }",
          "882: }",
          "884: void brcmf_remove_interface(struct brcmf_if *ifp, bool rtnl_locked)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "883:  drvr->iflist[bsscfgidx] = NULL;",
          "884:  if (drvr->if2bss[ifidx] == bsscfgidx)",
          "885:   drvr->if2bss[ifidx] = BRCMF_BSSIDX_INVALID;",
          "",
          "---------------"
        ]
      }
    }
  ]
}