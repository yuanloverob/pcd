{
  "cve_id": "CVE-2021-37680",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of fully connected layers in TFLite is [vulnerable to a division by zero error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/fully_connected.cc#L226). We have patched the issue in GitHub commit 718721986aa137691ee23f03638867151f74935f. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "718721986aa137691ee23f03638867151f74935f",
  "patch_info": {
    "commit_hash": "718721986aa137691ee23f03638867151f74935f",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/718721986aa137691ee23f03638867151f74935f",
    "files": [
      "tensorflow/lite/kernels/fully_connected.cc"
    ],
    "message": "Prevent division by 0 in `fully_connected.cc`\n\nPiperOrigin-RevId: 385137282\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb",
    "before_after_code_files": [
      "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc": [
      "File: tensorflow/lite/kernels/fully_connected.cc -> tensorflow/lite/kernels/fully_connected.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "223:   }",
      "225:   TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 2);",
      "226:   const int batch_size = input_size / filter->dims->data[1];",
      "227:   const int num_units = filter->dims->data[0];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "226:   TF_LITE_ENSURE(context, filter->dims->data[1] != 0);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "472f537ac6125fef007894ce572ee97eef2b5904",
      "candidate_info": {
        "commit_hash": "472f537ac6125fef007894ce572ee97eef2b5904",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/472f537ac6125fef007894ce572ee97eef2b5904",
        "files": [
          "tensorflow/compiler/mlir/lite/ir/tfl_ops.cc",
          "tensorflow/lite/kernels/fully_connected.cc",
          "tensorflow/lite/kernels/fully_connected_test.cc",
          "tensorflow/lite/testing/op_tests/fully_connected.py"
        ],
        "message": "Support zero-valued second dimension of filter tensor in FullyConnected op.\n\nAlso added op tests to cover the new behavior.\n\nPiperOrigin-RevId: 448120001",
        "before_after_code_files": [
          "tensorflow/compiler/mlir/lite/ir/tfl_ops.cc||tensorflow/compiler/mlir/lite/ir/tfl_ops.cc",
          "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc",
          "tensorflow/lite/kernels/fully_connected_test.cc||tensorflow/lite/kernels/fully_connected_test.cc",
          "tensorflow/lite/testing/op_tests/fully_connected.py||tensorflow/lite/testing/op_tests/fully_connected.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/compiler/mlir/lite/ir/tfl_ops.cc||tensorflow/compiler/mlir/lite/ir/tfl_ops.cc": [
          "File: tensorflow/compiler/mlir/lite/ir/tfl_ops.cc -> tensorflow/compiler/mlir/lite/ir/tfl_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "999:   const int z_in = filter_type.getDimSize(1);",
          "1000:   const int num_input_elements = input_type.getNumElements();",
          "1002:     return op.emitOpError(llvm::formatv(",
          "1003:                \"expect 'input' num_elements % {0} == 0, got input type \", z_in))",
          "1004:            << input_type;",
          "",
          "[Removed Lines]",
          "1001:   if (num_input_elements % z_in != 0) {",
          "",
          "[Added Lines]",
          "1001:   if (z_in != 0 && num_input_elements % z_in != 0) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1021:              << output_type;",
          "1022:     }",
          "1025:       return op.emitOpError(",
          "1026:           \"num_input_elements / z_in != num_output_elements / z_out\");",
          "1027:     }",
          "",
          "[Removed Lines]",
          "1024:     if (num_input_elements / z_in != num_output_elements / z_out) {",
          "",
          "[Added Lines]",
          "1024:     if (z_in != 0 && num_input_elements / z_in != num_output_elements / z_out) {",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc": [
          "File: tensorflow/lite/kernels/fully_connected.cc -> tensorflow/lite/kernels/fully_connected.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:   }",
          "225:   TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 2);",
          "227:   const int batch_size = input_size / filter->dims->data[1];",
          "228:   const int num_units = filter->dims->data[0];",
          "",
          "[Removed Lines]",
          "226:   TF_LITE_ENSURE(context, filter->dims->data[1] != 0);",
          "",
          "[Added Lines]",
          "229:   if (filter->dims->data[1] == 0) {",
          "230:     TfLiteIntArray* output_size_array;",
          "231:     if (params->keep_num_dims) {",
          "232:       output_size_array = TfLiteIntArrayCopy(input->dims);",
          "233:       output_size_array->data[output_size_array->size - 1] =",
          "234:           filter->dims->data[0];",
          "235:     } else {",
          "236:       output_size_array = TfLiteIntArrayCreate(2);",
          "239:       int batch_size = 1;",
          "240:       for (int i = 0; i < input->dims->size - 1; ++i)",
          "241:         batch_size *= input->dims->data[i];",
          "242:       output_size_array->data[0] = batch_size;",
          "243:       output_size_array->data[1] = filter->dims->data[0];",
          "244:     }",
          "245:     TF_LITE_ENSURE_OK(",
          "246:         context, context->ResizeTensor(context, output, output_size_array));",
          "247:     return kTfLiteOk;",
          "248:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1105:     return kTfLiteOk;",
          "1106:   }",
          "1108:   switch (filter->type) {",
          "1109:     case kTfLiteFloat32:",
          "1110:       return EvalFloat<kernel_type>(context, node, params, data, input, filter,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1131:   if (filter->dims->data[1] == 0) {",
          "1132:     memset(output->data.data, 0, output->bytes);",
          "1133:     return kTfLiteOk;",
          "1134:   }",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/fully_connected_test.cc||tensorflow/lite/kernels/fully_connected_test.cc": [
          "File: tensorflow/lite/kernels/fully_connected_test.cc -> tensorflow/lite/kernels/fully_connected_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "451:   EXPECT_THAT(m.GetOutput(), ElementsAre(11, 9));",
          "452: }",
          "454: TEST(FloatFullyConnectedOpTest, SimpleTestNoBias) {",
          "456:   FloatFullyConnectedOpModel m(ops::builtin::Register_FULLY_CONNECTED_PIE(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "454: TEST_P(FloatFullyConnectedOpTest, FilterWithZeroSecondDimension1) {",
          "455:   if (SingleOpModel::GetForceUseNnapi()) {",
          "456:     return;",
          "457:   }",
          "459:   FloatFullyConnectedOpModel m(GetRegistration(), /*units=*/2, /*batches=*/2,",
          "461:   ASSERT_EQ(m.Invoke(), kTfLiteOk);",
          "463:   EXPECT_THAT(m.GetOutputShape(), ElementsAre(2, 2));",
          "464:   EXPECT_THAT(m.GetOutput(), ElementsAre(0, 0, 0, 0));",
          "465: }",
          "467: TEST_P(FloatFullyConnectedOpTest, FilterWithZeroSecondDimension2) {",
          "468:   if (SingleOpModel::GetForceUseNnapi()) {",
          "469:     return;",
          "470:   }",
          "472:   FloatFullyConnectedOpModel m(GetRegistration(), /*units=*/2, /*batches=*/2,",
          "477:   ASSERT_EQ(m.Invoke(), kTfLiteOk);",
          "479:   EXPECT_THAT(m.GetOutputShape(), ElementsAre(2, 2, 2));",
          "480:   EXPECT_THAT(m.GetOutput(), ElementsAre(0, 0, 0, 0, 0, 0, 0, 0));",
          "481: }",
          "483: TEST_P(FloatFullyConnectedOpTest, FilterWithZeroSecondDimension3) {",
          "484:   if (SingleOpModel::GetForceUseNnapi()) {",
          "485:     return;",
          "486:   }",
          "488:   FloatFullyConnectedOpModel m(GetRegistration(), /*units=*/2, /*batches=*/2,",
          "490:   ASSERT_EQ(m.Invoke(), kTfLiteOk);",
          "492:   EXPECT_THAT(m.GetOutputShape(), ElementsAre(4, 2));",
          "493:   EXPECT_THAT(m.GetOutput(), ElementsAre(0, 0, 0, 0, 0, 0, 0, 0));",
          "494: }",
          "",
          "---------------"
        ],
        "tensorflow/lite/testing/op_tests/fully_connected.py||tensorflow/lite/testing/op_tests/fully_connected.py": [
          "File: tensorflow/lite/testing/op_tests/fully_connected.py -> tensorflow/lite/testing/op_tests/fully_connected.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:       \"constant_filter\": [True, False],",
          "113:       \"fully_quantize\": [False],",
          "114:       \"quant_16x8\": [False]",
          "115:   }]",
          "117:   def build_graph(parameters):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:   }, {",
          "116:       \"shape1\": [[3, 0]],",
          "117:       \"shape2\": [[0, 3]],",
          "118:       \"transpose_a\": [False],",
          "119:       \"transpose_b\": [False],",
          "120:       \"constant_filter\": [True, False],",
          "121:       \"fully_quantize\": [False],",
          "122:       \"quant_16x8\": [False]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dcb54eb0377dfb7bd82023b656ed00580662b2f9",
      "candidate_info": {
        "commit_hash": "dcb54eb0377dfb7bd82023b656ed00580662b2f9",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/dcb54eb0377dfb7bd82023b656ed00580662b2f9",
        "files": [
          "tensorflow/lite/kernels/fully_connected.cc"
        ],
        "message": "Prevent division by 0 in `fully_connected.cc`\n\nPiperOrigin-RevId: 385137282\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb",
        "before_after_code_files": [
          "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc": [
          "File: tensorflow/lite/kernels/fully_connected.cc -> tensorflow/lite/kernels/fully_connected.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:   }",
          "225:   TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 2);",
          "226:   const int batch_size = input_size / filter->dims->data[1];",
          "227:   const int num_units = filter->dims->data[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:   TF_LITE_ENSURE(context, filter->dims->data[1] != 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "177a313279eda6faff537c467608ce4875512b04",
      "candidate_info": {
        "commit_hash": "177a313279eda6faff537c467608ce4875512b04",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/177a313279eda6faff537c467608ce4875512b04",
        "files": [
          "tensorflow/lite/kernels/fully_connected.cc"
        ],
        "message": "Prevent division by 0 in `fully_connected.cc`\n\nPiperOrigin-RevId: 385137282\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb",
        "before_after_code_files": [
          "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc": [
          "File: tensorflow/lite/kernels/fully_connected.cc -> tensorflow/lite/kernels/fully_connected.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:   }",
          "182:   TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 2);",
          "183:   const int batch_size = input_size / filter->dims->data[1];",
          "184:   const int num_units = filter->dims->data[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183:   TF_LITE_ENSURE(context, filter->dims->data[1] != 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "79b26a7e7257e7ca3cb50091ddefcdcaa05ab132",
      "candidate_info": {
        "commit_hash": "79b26a7e7257e7ca3cb50091ddefcdcaa05ab132",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/79b26a7e7257e7ca3cb50091ddefcdcaa05ab132",
        "files": [
          "tensorflow/lite/kernels/fully_connected.cc"
        ],
        "message": "Prevent division by 0 in `fully_connected.cc`\n\nPiperOrigin-RevId: 385137282\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb",
        "before_after_code_files": [
          "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc": [
          "File: tensorflow/lite/kernels/fully_connected.cc -> tensorflow/lite/kernels/fully_connected.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:   }",
          "225:   TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 2);",
          "226:   const int batch_size = input_size / filter->dims->data[1];",
          "227:   const int num_units = filter->dims->data[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:   TF_LITE_ENSURE(context, filter->dims->data[1] != 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1bfd716a2fcdfd7516671c0e5fb45c164ec0b230",
      "candidate_info": {
        "commit_hash": "1bfd716a2fcdfd7516671c0e5fb45c164ec0b230",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/1bfd716a2fcdfd7516671c0e5fb45c164ec0b230",
        "files": [
          "tensorflow/lite/kernels/fully_connected.cc"
        ],
        "message": "Prevent division by 0 in `fully_connected.cc`\n\nPiperOrigin-RevId: 385137282\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb",
        "before_after_code_files": [
          "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/fully_connected.cc||tensorflow/lite/kernels/fully_connected.cc": [
          "File: tensorflow/lite/kernels/fully_connected.cc -> tensorflow/lite/kernels/fully_connected.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:   }",
          "177:   TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 2);",
          "178:   const int batch_size = input_size / filter->dims->data[1];",
          "179:   const int num_units = filter->dims->data[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178:   TF_LITE_ENSURE(context, filter->dims->data[1] != 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}