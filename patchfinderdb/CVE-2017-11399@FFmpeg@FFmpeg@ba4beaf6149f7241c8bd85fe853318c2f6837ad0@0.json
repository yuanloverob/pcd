{
  "cve_id": "CVE-2017-11399",
  "cve_desc": "Integer overflow in the ape_decode_frame function in libavcodec/apedec.c in FFmpeg 2.4 through 3.3.2 allows remote attackers to cause a denial of service (out-of-array access and application crash) or possibly have unspecified other impact via a crafted APE file.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "ba4beaf6149f7241c8bd85fe853318c2f6837ad0",
  "patch_info": {
    "commit_hash": "ba4beaf6149f7241c8bd85fe853318c2f6837ad0",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/ba4beaf6149f7241c8bd85fe853318c2f6837ad0",
    "files": [
      "libavcodec/apedec.c"
    ],
    "message": "avcodec/apedec: Fix integer overflow\n\nFixes: out of array access\nFixes: PoC.ape and others\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavcodec/apedec.c||libavcodec/apedec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/apedec.c||libavcodec/apedec.c": [
      "File: libavcodec/apedec.c -> libavcodec/apedec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1412:     int32_t *sample24;",
      "1413:     int i, ch, ret;",
      "1414:     int blockstodecode;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1415:     uint64_t decoded_buffer_size;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1467:                 skip_bits_long(&s->gb, offset);",
      "1468:         }",
      "1471:             av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\\n\",",
      "1472:                    nblocks);",
      "1473:             return AVERROR_INVALIDDATA;",
      "",
      "[Removed Lines]",
      "1470:         if (!nblocks || nblocks > INT_MAX) {",
      "",
      "[Added Lines]",
      "1471:         if (!nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1493:         blockstodecode = s->samples;",
      "1498:     if (!s->decoded_buffer)",
      "1499:         return AVERROR(ENOMEM);",
      "1500:     memset(s->decoded_buffer, 0, s->decoded_size);",
      "",
      "[Removed Lines]",
      "1496:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size,",
      "1497:                    2 * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer));",
      "",
      "[Added Lines]",
      "1497:     decoded_buffer_size = 2LL * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer);",
      "1498:     av_assert0(decoded_buffer_size <= INT_MAX);",
      "1499:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size, decoded_buffer_size);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "96349da5ec8eda9f0368446e557fe0c8ba0e66b7",
      "candidate_info": {
        "commit_hash": "96349da5ec8eda9f0368446e557fe0c8ba0e66b7",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/96349da5ec8eda9f0368446e557fe0c8ba0e66b7",
        "files": [
          "libavcodec/apedec.c"
        ],
        "message": "avcodec/apedec: Fix integer overflow\n\nFixes: out of array access\nFixes: PoC.ape and others\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ba4beaf6149f7241c8bd85fe853318c2f6837ad0)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/apedec.c||libavcodec/apedec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/apedec.c||libavcodec/apedec.c"
          ],
          "candidate": [
            "libavcodec/apedec.c||libavcodec/apedec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/apedec.c||libavcodec/apedec.c": [
          "File: libavcodec/apedec.c -> libavcodec/apedec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1419:     int32_t *sample24;",
          "1420:     int i, ch, ret;",
          "1421:     int blockstodecode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1422:     uint64_t decoded_buffer_size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1474:                 skip_bits_long(&s->gb, offset);",
          "1475:         }",
          "1478:             av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\\n\",",
          "1479:                    nblocks);",
          "1480:             return AVERROR_INVALIDDATA;",
          "",
          "[Removed Lines]",
          "1477:         if (!nblocks || nblocks > INT_MAX) {",
          "",
          "[Added Lines]",
          "1478:         if (!nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1500:         blockstodecode = s->samples;",
          "1505:     if (!s->decoded_buffer)",
          "1506:         return AVERROR(ENOMEM);",
          "1507:     memset(s->decoded_buffer, 0, s->decoded_size);",
          "",
          "[Removed Lines]",
          "1503:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size,",
          "1504:                    2 * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer));",
          "",
          "[Added Lines]",
          "1504:     decoded_buffer_size = 2LL * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer);",
          "1505:     av_assert0(decoded_buffer_size <= INT_MAX);",
          "1506:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size, decoded_buffer_size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "750fec58e175b22ac23ff349c4b0a9b765ea4d0c",
      "candidate_info": {
        "commit_hash": "750fec58e175b22ac23ff349c4b0a9b765ea4d0c",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/750fec58e175b22ac23ff349c4b0a9b765ea4d0c",
        "files": [
          "libavcodec/apedec.c"
        ],
        "message": "avcodec/apedec: Fix integer overflow\n\nFixes: out of array access\nFixes: PoC.ape and others\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ba4beaf6149f7241c8bd85fe853318c2f6837ad0)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/apedec.c||libavcodec/apedec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/apedec.c||libavcodec/apedec.c"
          ],
          "candidate": [
            "libavcodec/apedec.c||libavcodec/apedec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/apedec.c||libavcodec/apedec.c": [
          "File: libavcodec/apedec.c -> libavcodec/apedec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1412:     int32_t *sample24;",
          "1413:     int i, ch, ret;",
          "1414:     int blockstodecode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1415:     uint64_t decoded_buffer_size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1467:                 skip_bits_long(&s->gb, offset);",
          "1468:         }",
          "1471:             av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\\n\",",
          "1472:                    nblocks);",
          "1473:             return AVERROR_INVALIDDATA;",
          "",
          "[Removed Lines]",
          "1470:         if (!nblocks || nblocks > INT_MAX) {",
          "",
          "[Added Lines]",
          "1471:         if (!nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1493:         blockstodecode = s->samples;",
          "1498:     if (!s->decoded_buffer)",
          "1499:         return AVERROR(ENOMEM);",
          "1500:     memset(s->decoded_buffer, 0, s->decoded_size);",
          "",
          "[Removed Lines]",
          "1496:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size,",
          "1497:                    2 * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer));",
          "",
          "[Added Lines]",
          "1497:     decoded_buffer_size = 2LL * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer);",
          "1498:     av_assert0(decoded_buffer_size <= INT_MAX);",
          "1499:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size, decoded_buffer_size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3cae97b090e139acfcda6dda7c73f2e607c4f74a",
      "candidate_info": {
        "commit_hash": "3cae97b090e139acfcda6dda7c73f2e607c4f74a",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/3cae97b090e139acfcda6dda7c73f2e607c4f74a",
        "files": [
          "libavcodec/apedec.c"
        ],
        "message": "avcodec/apedec: Fix integer overflow\n\nFixes: out of array access\nFixes: PoC.ape and others\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ba4beaf6149f7241c8bd85fe853318c2f6837ad0)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/apedec.c||libavcodec/apedec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/apedec.c||libavcodec/apedec.c"
          ],
          "candidate": [
            "libavcodec/apedec.c||libavcodec/apedec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/apedec.c||libavcodec/apedec.c": [
          "File: libavcodec/apedec.c -> libavcodec/apedec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1404:     int32_t *sample24;",
          "1405:     int i, ch, ret;",
          "1406:     int blockstodecode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1407:     uint64_t decoded_buffer_size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1459:                 skip_bits_long(&s->gb, offset);",
          "1460:         }",
          "1463:             av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\\n\",",
          "1464:                    nblocks);",
          "1465:             return AVERROR_INVALIDDATA;",
          "",
          "[Removed Lines]",
          "1462:         if (!nblocks || nblocks > INT_MAX) {",
          "",
          "[Added Lines]",
          "1463:         if (!nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1485:         blockstodecode = s->samples;",
          "1490:     if (!s->decoded_buffer)",
          "1491:         return AVERROR(ENOMEM);",
          "1492:     memset(s->decoded_buffer, 0, s->decoded_size);",
          "",
          "[Removed Lines]",
          "1488:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size,",
          "1489:                    2 * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer));",
          "",
          "[Added Lines]",
          "1489:     decoded_buffer_size = 2LL * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer);",
          "1490:     av_assert0(decoded_buffer_size <= INT_MAX);",
          "1491:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size, decoded_buffer_size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5bb861d45b86803ec39295cfc04889d2a7138361",
      "candidate_info": {
        "commit_hash": "5bb861d45b86803ec39295cfc04889d2a7138361",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/5bb861d45b86803ec39295cfc04889d2a7138361",
        "files": [
          "libavcodec/apedec.c"
        ],
        "message": "avcodec/apedec: Fix integer overflow\n\nFixes: out of array access\nFixes: PoC.ape and others\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ba4beaf6149f7241c8bd85fe853318c2f6837ad0)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/apedec.c||libavcodec/apedec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/apedec.c||libavcodec/apedec.c"
          ],
          "candidate": [
            "libavcodec/apedec.c||libavcodec/apedec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/apedec.c||libavcodec/apedec.c": [
          "File: libavcodec/apedec.c -> libavcodec/apedec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1412:     int32_t *sample24;",
          "1413:     int i, ch, ret;",
          "1414:     int blockstodecode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1415:     uint64_t decoded_buffer_size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1467:                 skip_bits_long(&s->gb, offset);",
          "1468:         }",
          "1471:             av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\\n\",",
          "1472:                    nblocks);",
          "1473:             return AVERROR_INVALIDDATA;",
          "",
          "[Removed Lines]",
          "1470:         if (!nblocks || nblocks > INT_MAX) {",
          "",
          "[Added Lines]",
          "1471:         if (!nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1493:         blockstodecode = s->samples;",
          "1498:     if (!s->decoded_buffer)",
          "1499:         return AVERROR(ENOMEM);",
          "1500:     memset(s->decoded_buffer, 0, s->decoded_size);",
          "",
          "[Removed Lines]",
          "1496:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size,",
          "1497:                    2 * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer));",
          "",
          "[Added Lines]",
          "1497:     decoded_buffer_size = 2LL * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer);",
          "1498:     av_assert0(decoded_buffer_size <= INT_MAX);",
          "1499:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size, decoded_buffer_size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0272afe70d6205caff05f3548da22a19f1eff9b1",
      "candidate_info": {
        "commit_hash": "0272afe70d6205caff05f3548da22a19f1eff9b1",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/0272afe70d6205caff05f3548da22a19f1eff9b1",
        "files": [
          "libavcodec/apedec.c"
        ],
        "message": "avcodec/apedec: Fix integer overflow\n\nFixes: out of array access\nFixes: PoC.ape and others\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ba4beaf6149f7241c8bd85fe853318c2f6837ad0)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/apedec.c||libavcodec/apedec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/apedec.c||libavcodec/apedec.c"
          ],
          "candidate": [
            "libavcodec/apedec.c||libavcodec/apedec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/apedec.c||libavcodec/apedec.c": [
          "File: libavcodec/apedec.c -> libavcodec/apedec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1412:     int32_t *sample24;",
          "1413:     int i, ch, ret;",
          "1414:     int blockstodecode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1415:     uint64_t decoded_buffer_size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1467:                 skip_bits_long(&s->gb, offset);",
          "1468:         }",
          "1471:             av_log(avctx, AV_LOG_ERROR, \"Invalid sample count: %\"PRIu32\".\\n\",",
          "1472:                    nblocks);",
          "1473:             return AVERROR_INVALIDDATA;",
          "",
          "[Removed Lines]",
          "1470:         if (!nblocks || nblocks > INT_MAX) {",
          "",
          "[Added Lines]",
          "1471:         if (!nblocks || nblocks > INT_MAX / 2 / sizeof(*s->decoded_buffer) - 8) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1493:         blockstodecode = s->samples;",
          "1498:     if (!s->decoded_buffer)",
          "1499:         return AVERROR(ENOMEM);",
          "1500:     memset(s->decoded_buffer, 0, s->decoded_size);",
          "",
          "[Removed Lines]",
          "1496:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size,",
          "1497:                    2 * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer));",
          "",
          "[Added Lines]",
          "1497:     decoded_buffer_size = 2LL * FFALIGN(blockstodecode, 8) * sizeof(*s->decoded_buffer);",
          "1498:     av_assert0(decoded_buffer_size <= INT_MAX);",
          "1499:     av_fast_malloc(&s->decoded_buffer, &s->decoded_size, decoded_buffer_size);",
          "",
          "---------------"
        ]
      }
    }
  ]
}