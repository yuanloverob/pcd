{
  "cve_id": "CVE-2013-1833",
  "cve_desc": "Multiple cross-site scripting (XSS) vulnerabilities in the File Picker module in Moodle 2.x through 2.1.10, 2.2.x before 2.2.8, 2.3.x before 2.3.5, and 2.4.x before 2.4.2 allow remote authenticated users to inject arbitrary web script or HTML via a crafted filename.",
  "repo": "moodle/moodle",
  "patch_hash": "954b35451112c333c0ae77dff25dafbf41587c26",
  "patch_info": {
    "commit_hash": "954b35451112c333c0ae77dff25dafbf41587c26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/954b35451112c333c0ae77dff25dafbf41587c26",
    "files": [
      "lib/form/filemanager.js",
      "lib/outputrequirementslib.php",
      "repository/filepicker.js",
      "repository/filepicker.php"
    ],
    "message": "MDL-37507 repositories: improved formatting of external resources",
    "before_after_code_files": [
      "lib/form/filemanager.js||lib/form/filemanager.js",
      "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
      "repository/filepicker.js||repository/filepicker.js",
      "repository/filepicker.php||repository/filepicker.php"
    ]
  },
  "patch_diff": {
    "lib/form/filemanager.js||lib/form/filemanager.js": [
      "File: lib/form/filemanager.js -> lib/form/filemanager.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "255:             this.msg_dlg.set('headerContent', header);",
      "256:             this.msg_dlg_node.removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
      "258:             this.msg_dlg.show();",
      "259:         },",
      "260:         is_disabled: function() {",
      "",
      "[Removed Lines]",
      "257:             this.msg_dlg_node.one('.fp-msg-text').setContent(msg);",
      "",
      "[Added Lines]",
      "257:             this.msg_dlg_node.one('.fp-msg-text').setContent(Y.Escape.html(msg));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "325:                     }",
      "326:                     this.mkdir_dialog.show();",
      "327:                     Y.one('#fm-newname-'+scope.client_id).focus();",
      "329:                 }, this);",
      "330:             } else {",
      "331:                 this.filemanager.addClass('fm-nomkdir');",
      "",
      "[Removed Lines]",
      "328:                     Y.all('#fm-curpath-'+scope.client_id).setContent(this.currentpath)",
      "",
      "[Added Lines]",
      "328:                     Y.all('#fm-curpath-'+scope.client_id).setContent(Y.Escape.html(this.currentpath))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "412:                     } else {",
      "413:                         el.addClass('odd');",
      "414:                     }",
      "416:                         on('click', function(e, path) {",
      "417:                             e.preventDefault();",
      "418:                             if (!this.is_disabled()) {",
      "",
      "[Removed Lines]",
      "415:                     el.one('.fp-path-folder-name').setContent(p[i].name).",
      "",
      "[Added Lines]",
      "415:                     el.one('.fp-path-folder-name').setContent(Y.Escape.html(p[i].name)).",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "602:             for (var i in licenses) {",
      "603:                 var option = Y.Node.create('<option/>').",
      "604:                     set('value', licenses[i].shortname).",
      "606:                 node.appendChild(option)",
      "607:             }",
      "608:         },",
      "",
      "[Removed Lines]",
      "605:                     setContent(licenses[i].fullname);",
      "",
      "[Added Lines]",
      "605:                     setContent(Y.Escape.html(licenses[i].fullname));",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "621:             node.setContent('');",
      "622:             for (var i in list) {",
      "623:                 node.appendChild(Y.Node.create('<option/>').",
      "625:             }",
      "626:         },",
      "627:         update_file: function(confirmed) {",
      "",
      "[Removed Lines]",
      "624:                     set('value', list[i]).setContent(list[i]))",
      "",
      "[Added Lines]",
      "624:                     set('value', list[i]).setContent(Y.Escape.html(list[i])));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "923:                 if (selectnode.one('.fp-'+attrs[i])) {",
      "924:                     var value = (node[attrs[i]+'_f']) ? node[attrs[i]+'_f'] : (node[attrs[i]] ? node[attrs[i]] : '');",
      "925:                     selectnode.one('.fp-'+attrs[i]).addClassIf('fp-unknown', ''+value == '')",
      "927:                 }",
      "928:             }",
      "",
      "[Removed Lines]",
      "926:                         .one('.fp-value').setContent(value);",
      "",
      "[Added Lines]",
      "926:                         .one('.fp-value').setContent(Y.Escape.html(value));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "948:                             selectnode.one('.fp-original').removeClass('fp-loading');",
      "949:                             if (obj.original) {",
      "950:                                 node.original = obj.original;",
      "952:                             } else {",
      "953:                                 selectnode.one('.fp-original .fp-value').setContent(M.str.repository.unknownsource);",
      "954:                             }",
      "",
      "[Removed Lines]",
      "951:                                 selectnode.one('.fp-original .fp-value').setContent(node.original);",
      "",
      "[Added Lines]",
      "951:                                 selectnode.one('.fp-original .fp-value').setContent(Y.Escape.html(node.original));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "976:                                 for (var i in obj.references) {",
      "977:                                     node.reflist += '<li>'+obj.references[i]+'</li>';",
      "978:                                 }",
      "980:                             } else {",
      "981:                                 selectnode.one('.fp-reflist .fp-value').setContent('');",
      "982:                             }",
      "",
      "[Removed Lines]",
      "979:                                 selectnode.one('.fp-reflist .fp-value').setContent(node.reflist);",
      "",
      "[Added Lines]",
      "979:                                 selectnode.one('.fp-reflist .fp-value').setContent(Y.Escape.html(node.reflist));",
      "",
      "---------------"
    ],
    "lib/outputrequirementslib.php||lib/outputrequirementslib.php": [
      "File: lib/outputrequirementslib.php -> lib/outputrequirementslib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:                 case 'core_filepicker':",
      "396:                     $module = array('name'     => 'core_filepicker',",
      "397:                                     'fullpath' => '/repository/filepicker.js',",
      "399:                                     'strings'  => array(array('lastmodified', 'moodle'), array('name', 'moodle'), array('type', 'repository'), array('size', 'repository'),",
      "400:                                                         array('invalidjson', 'repository'), array('error', 'moodle'), array('info', 'moodle'),",
      "401:                                                         array('nofilesattached', 'repository'), array('filepicker', 'repository'), array('logout', 'repository'),",
      "",
      "[Removed Lines]",
      "398:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'moodle-core_filepicker'),",
      "",
      "[Added Lines]",
      "398:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'escape', 'moodle-core_filepicker'),",
      "",
      "---------------"
    ],
    "repository/filepicker.js||repository/filepicker.js": [
      "File: repository/filepicker.js -> repository/filepicker.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "176:         var file_get_filename = function(node) {",
      "177:             return node.title ? node.title : node.fullname;",
      "180:         var file_get_displayname = function(node) {",
      "184:         var file_get_description = function(node) {",
      "188:         var build_tree = function(node, level) {",
      "",
      "[Removed Lines]",
      "178:         }",
      "181:             return node.shorttitle ? node.shorttitle : file_get_filename(node);",
      "182:         }",
      "185:             return node.description ? node.description : (node.thumbnail_title ? node.thumbnail_title : file_get_filename(node));",
      "186:         }",
      "",
      "[Added Lines]",
      "178:         };",
      "181:             var displayname = node.shorttitle ? node.shorttitle : file_get_filename(node);",
      "182:             return Y.Escape.html(displayname);",
      "183:         };",
      "186:             var description = '';",
      "187:             if (node.description) {",
      "188:                 description = node.description;",
      "189:             } else if (node.thumbnail_title) {",
      "190:                 description = node.thumbnail_title;",
      "191:             } else {",
      "192:                 description = file_get_filename(node);",
      "193:             }",
      "194:             return Y.Escape.html(description);",
      "195:         };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "401:                 imgdiv.setStyleAdv('width', width).setStyleAdv('height', height);",
      "402:                 var img = Y.Node.create('<img/>').setAttrs({",
      "403:                         title: file_get_description(node),",
      "405:                     setStyle('maxWidth', ''+width+'px').",
      "406:                     setStyle('maxHeight', ''+height+'px');",
      "407:                 img.setImgSrc(src, node.realthumbnail, lazyloading);",
      "",
      "[Removed Lines]",
      "404:                         alt: node.thumbnail_alt ? node.thumbnail_alt : file_get_filename(node)}).",
      "",
      "[Added Lines]",
      "413:                         alt: Y.Escape.html(node.thumbnail_alt ? node.thumbnail_alt : file_get_filename(node))}).",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "738:             this.fpnode.one('.fp-content').setContent(M.core_filepicker.templates.error);",
      "739:             this.fpnode.one('.fp-content .fp-error').",
      "740:                 addClass(errorcode).",
      "742:         },",
      "744:         print_msg: function(msg, type) {",
      "",
      "[Removed Lines]",
      "741:                 setContent(errortext);",
      "",
      "[Added Lines]",
      "750:                 setContent(Y.Escape.html(errortext));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "769:             this.msg_dlg.set('headerContent', header);",
      "770:             this.msg_dlg_node.removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
      "772:             this.msg_dlg.show();",
      "773:         },",
      "774:         view_files: function(appenditems) {",
      "",
      "[Removed Lines]",
      "771:             this.msg_dlg_node.one('.fp-msg-text').setContent(msg);",
      "",
      "[Added Lines]",
      "780:             this.msg_dlg_node.one('.fp-msg-text').setContent(Y.Escape.html(msg));",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1106:                 if (selectnode.one('.fp-'+attrs[i])) {",
      "1107:                     var value = (args[attrs[i]+'_f']) ? args[attrs[i]+'_f'] : (args[attrs[i]] ? args[attrs[i]] : '');",
      "1108:                     selectnode.one('.fp-'+attrs[i]).addClassIf('fp-unknown', ''+value == '')",
      "1110:                 }",
      "1111:             }",
      "1112:         },",
      "",
      "[Removed Lines]",
      "1109:                         .one('.fp-value').setContent(value);",
      "",
      "[Added Lines]",
      "1118:                         .one('.fp-value').setContent(Y.Escape.html(value));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1354:                             this.hide_header();",
      "1355:                             this.list({'repo_id':repository_id});",
      "1356:                         }, this /*handler running scope*/, repository.id/*second argument of handler*/);",
      "1358:                     node.one('.fp-repo-icon').set('src', repository.icon);",
      "1359:                     if (i==0) {",
      "1360:                         node.addClass('first');",
      "",
      "[Removed Lines]",
      "1357:                     node.one('.fp-repo-name').setContent(repository.name);",
      "",
      "[Added Lines]",
      "1366:                     node.one('.fp-repo-name').setContent(Y.Escape.html(repository.name));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1609:                 var option = Y.Node.create('<option/>').",
      "1610:                     set('selected', (this.options.defaultlicense==licenses[i].shortname)).",
      "1611:                     set('value', licenses[i].shortname).",
      "1613:                 node.appendChild(option)",
      "1614:             }",
      "1615:         },",
      "",
      "[Removed Lines]",
      "1612:                     setContent(licenses[i].fullname);",
      "",
      "[Added Lines]",
      "1621:                     setContent(Y.Escape.html(licenses[i].fullname));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1869:                     } else {",
      "1870:                         el.addClass('odd');",
      "1871:                     }",
      "1873:                     el.on('click',",
      "1874:                             function(e, path) {",
      "1875:                                 e.preventDefault();",
      "",
      "[Removed Lines]",
      "1872:                     el.all('.fp-path-folder-name').setContent(p[i].name);",
      "",
      "[Added Lines]",
      "1881:                     el.all('.fp-path-folder-name').setContent(Y.Escape.html(p[i].name));",
      "",
      "---------------"
    ],
    "repository/filepicker.php||repository/filepicker.php": [
      "File: repository/filepicker.php -> repository/filepicker.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "142:             if (isset($item['thumbnail_width'])) {",
      "143:                 $style .= 'max-width:'.$item['thumbnail_width'].'px;';",
      "144:             }",
      "146:             echo '</td><td>';",
      "147:             if (!empty($item['url'])) {",
      "149:             } else {",
      "151:             }",
      "152:             echo '</td>';",
      "153:             echo '<td>';",
      "",
      "[Removed Lines]",
      "145:             echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'style' => $style));",
      "148:                 echo html_writer::link($item['url'], $item['title'], array('target'=>'_blank'));",
      "150:                 echo $item['title'];",
      "",
      "[Added Lines]",
      "145:             echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'alt' => '', 'style' => $style));",
      "148:                 echo html_writer::link($item['url'], s($item['title']), array('target'=>'_blank'));",
      "150:                 echo s($item['title']);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "204:                         'draftpath'=>$draftpath,",
      "205:                         'savepath'=>$savepath",
      "206:                         ));",
      "208:                     echo '<span> / </span>';",
      "209:                 }",
      "210:             }",
      "",
      "[Removed Lines]",
      "207:                     echo '<strong>' . html_writer::link($pathurl, $p['name']) . '</strong>';",
      "",
      "[Added Lines]",
      "207:                     echo '<strong>' . html_writer::link($pathurl, s($p['name'])) . '</strong>';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "241:                 echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'style' => $style));",
      "242:                 echo '</td><td>';",
      "243:                 if (!empty($item['url'])) {",
      "245:                 } else {",
      "247:                 }",
      "248:                 echo '</td>';",
      "249:                 echo '<td>';",
      "",
      "[Removed Lines]",
      "244:                     echo html_writer::link($item['url'], $item['title'], array('target'=>'_blank'));",
      "246:                     echo $item['title'];",
      "",
      "[Added Lines]",
      "244:                     echo html_writer::link($item['url'], s($item['title']), array('target'=>'_blank'));",
      "246:                     echo s($item['title']);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "393:         $aurl->params(array('savepath'=>$savepath, 'action' => 'list', 'repo_id' => $info->id, 'draftpath'=>$draftpath));",
      "395:         echo '<li>';",
      "398:         echo '</li>';",
      "399:     }",
      "400:     echo '</ul>';",
      "",
      "[Removed Lines]",
      "396:         echo '<img src=\"'.$info->icon.'\" alt=\"'.$info->name.'\" width=\"16\" height=\"16\" /> ';",
      "397:         echo html_writer::link($aurl, $info->name);",
      "",
      "[Added Lines]",
      "396:         echo html_writer::empty_tag('img', array('src'=>$info->icon, 'alt'=>$info->name, 'class'=>'icon icon-pre'));",
      "397:         echo html_writer::link($aurl, s($info->name));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8158fe0542acb77bffe6bde4dafe0dee283f83cd",
      "candidate_info": {
        "commit_hash": "8158fe0542acb77bffe6bde4dafe0dee283f83cd",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/8158fe0542acb77bffe6bde4dafe0dee283f83cd",
        "files": [
          "files/renderer.php",
          "lang/en/repository.php",
          "lib/form/filemanager.js",
          "lib/javascript-static.js"
        ],
        "message": "MDL-36900 repository: File Manager new folder UI improvements",
        "before_after_code_files": [
          "files/renderer.php||files/renderer.php",
          "lang/en/repository.php||lang/en/repository.php",
          "lib/form/filemanager.js||lib/form/filemanager.js",
          "lib/javascript-static.js||lib/javascript-static.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/form/filemanager.js||lib/form/filemanager.js"
          ],
          "candidate": [
            "lib/form/filemanager.js||lib/form/filemanager.js"
          ]
        }
      },
      "candidate_diff": {
        "files/renderer.php||files/renderer.php": [
          "File: files/renderer.php -> files/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:                 array('invalidjson', 'repository'), array('popupblockeddownload', 'repository'),",
          "115:                 array('unknownoriginal', 'repository'), array('confirmdeletefolder', 'repository'),",
          "116:                 array('confirmdeletefilewithhref', 'repository'), array('confirmrenamefolder', 'repository'),",
          "118:             )",
          "119:         );",
          "120:         if (empty($filemanagertemplateloaded)) {",
          "",
          "[Removed Lines]",
          "117:                 array('confirmrenamefile', 'repository')",
          "",
          "[Added Lines]",
          "117:                 array('confirmrenamefile', 'repository'), array('newfolder', 'repository')",
          "",
          "---------------"
        ],
        "lang/en/repository.php||lang/en/repository.php": [
          "File: lang/en/repository.php -> lang/en/repository.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "152: $string['manageurl'] = 'Manage';",
          "153: $string['manageuserrepository'] = 'Manage individual repository';",
          "154: $string['moving'] = 'Moving';",
          "155: $string['newfoldername'] = 'New folder name:';",
          "156: $string['noenter'] = 'Nothing entered';",
          "157: $string['nofilesattached'] = 'No files attached';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "155: $string['newfolder'] = 'New folder';",
          "",
          "---------------"
        ],
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "302:                                 }",
          "303:                             }",
          "304:                         });",
          "306:                     if (!this.mkdir_dialog) {",
          "307:                         var node = Y.Node.createWithFilesSkin(M.form_filemanager.templates.mkdir);",
          "308:                         this.mkdir_dialog = new Y.Panel({",
          "",
          "[Removed Lines]",
          "305:                     }",
          "",
          "[Added Lines]",
          "305:                     };",
          "306:                     var validate_folder_name = function() {",
          "307:                         var valid = false;",
          "308:                         var foldername = Y.one('#fm-newname-'+scope.client_id).get('value');",
          "309:                         if (foldername.length > 0) {",
          "310:                             valid = true;",
          "311:                         }",
          "312:                         var btn = Y.one('#fm-mkdir-butcreate-'+scope.client_id);",
          "313:                         if (btn) {",
          "314:                             btn.set('disabled', !valid);",
          "315:                         }",
          "316:                         return valid;",
          "317:                     };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "314:                             render       : true",
          "315:                         });",
          "316:                         this.mkdir_dialog.plug(Y.Plugin.Drag,{handles:['.yui3-widget-hd']});",
          "322:                         node.one('label').set('for', 'fm-newname-' + this.client_id);",
          "323:                         node.all('.fp-dlg-butcancel').on('click', function(e){e.preventDefault();this.mkdir_dialog.hide();}, this);",
          "324:                         node.all('.fp-dlg-curpath').set('id', 'fm-curpath-'+this.client_id);",
          "325:                     }",
          "326:                     this.mkdir_dialog.show();",
          "329:                 }, this);",
          "330:             } else {",
          "331:                 this.filemanager.addClass('fm-nomkdir');",
          "",
          "[Removed Lines]",
          "317:                         node.one('.fp-dlg-butcreate').on('click', perform_action, this);",
          "318:                         node.one('input').set('id', 'fm-newname-'+this.client_id).",
          "319:                             on('keydown', function(e){",
          "320:                                 if (e.keyCode == 13) {Y.bind(perform_action, this)(e);}",
          "321:                             }, this);",
          "327:                     Y.one('#fm-newname-'+scope.client_id).focus();",
          "328:                     Y.all('#fm-curpath-'+scope.client_id).setContent(Y.Escape.html(this.currentpath))",
          "",
          "[Added Lines]",
          "329:                         node.one('.fp-dlg-butcreate').set('id', 'fm-mkdir-butcreate-'+this.client_id).on('click',",
          "330:                                 perform_action, this);",
          "331:                         node.one('input').set('id', 'fm-newname-'+this.client_id).on('keydown', function(e) {",
          "332:                             var valid = Y.bind(validate_folder_name, this)();",
          "333:                             if (valid && e.keyCode === 13) {",
          "334:                                 Y.bind(perform_action, this)(e);",
          "335:                             }",
          "336:                         }, this);",
          "337:                         node.one('#fm-newname-'+this.client_id).on(['keyup', 'change'], function(e) {",
          "338:                             Y.bind(validate_folder_name, this)();",
          "339:                         }, this);",
          "348:                     var foldername = M.str.repository.newfolder;",
          "349:                     while (this.has_folder(foldername)) {",
          "350:                         foldername = increment_filename(foldername, true);",
          "351:                     }",
          "352:                     Y.one('#fm-newname-'+scope.client_id).set('value', foldername);",
          "353:                     Y.bind(validate_folder_name, this)();",
          "354:                     Y.one('#fm-newname-'+scope.client_id).focus().select();",
          "355:                     Y.all('#fm-curpath-'+scope.client_id).setContent(this.currentpath);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "990:         render: function() {",
          "991:             this.print_path();",
          "992:             this.view_files();",
          "993:         }",
          "994:     });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1020:         },",
          "1021:         has_folder: function(foldername) {",
          "1022:             var element;",
          "1023:             for (var i in this.options.list) {",
          "1024:                 element = this.options.list[i];",
          "1025:                 if (element.type == 'folder' && element.fullname == foldername) {",
          "1026:                     return true;",
          "1027:                 }",
          "1028:             }",
          "1029:             return false;",
          "",
          "---------------"
        ],
        "lib/javascript-static.js||lib/javascript-static.js": [
          "File: lib/javascript-static.js -> lib/javascript-static.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1236:     return (arrReturnElements)",
          "1237: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1247: function increment_filename(filename, ignoreextension) {",
          "1248:     var extension = '';",
          "1249:     var basename = filename;",
          "1252:     if (!ignoreextension) {",
          "1253:         var dotpos = filename.lastIndexOf('.');",
          "1254:         if (dotpos !== -1) {",
          "1255:             basename = filename.substr(0, dotpos);",
          "1256:             extension = filename.substr(dotpos, filename.length);",
          "1257:         }",
          "1258:     }",
          "1261:     var number = 0;",
          "1262:     var hasnumber = basename.match(/^(.*) \\((\\d+)\\)$/);",
          "1263:     if (hasnumber !== null) {",
          "1265:         number = parseInt(hasnumber[2], 10);",
          "1266:         basename = hasnumber[1];",
          "1267:     }",
          "1269:     number++;",
          "1270:     var newname = basename + ' (' + number + ')' + extension;",
          "1271:     return newname;",
          "1272: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "babf34d5cfc7845e8f42b850a39646bf9a9c17c3",
      "candidate_info": {
        "commit_hash": "babf34d5cfc7845e8f42b850a39646bf9a9c17c3",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/babf34d5cfc7845e8f42b850a39646bf9a9c17c3",
        "files": [
          "lib/outputrequirementslib.php"
        ],
        "message": "MDL-38515 JavaScript: Correct module dependencies for core_filepicker",
        "before_after_code_files": [
          "lib/outputrequirementslib.php||lib/outputrequirementslib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/outputrequirementslib.php||lib/outputrequirementslib.php"
          ],
          "candidate": [
            "lib/outputrequirementslib.php||lib/outputrequirementslib.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/outputrequirementslib.php||lib/outputrequirementslib.php": [
          "File: lib/outputrequirementslib.php -> lib/outputrequirementslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "388:                 case 'core_filepicker':",
          "389:                     $module = array('name'     => 'core_filepicker',",
          "390:                                     'fullpath' => '/repository/filepicker.js',",
          "392:                                     'strings'  => array(array('lastmodified', 'moodle'), array('name', 'moodle'), array('type', 'repository'), array('size', 'repository'),",
          "393:                                                         array('invalidjson', 'repository'), array('error', 'moodle'), array('info', 'moodle'),",
          "394:                                                         array('nofilesattached', 'repository'), array('filepicker', 'repository'), array('logout', 'repository'),",
          "",
          "[Removed Lines]",
          "391:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'escape', 'moodle-core_filepicker'),",
          "",
          "[Added Lines]",
          "391:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'escape'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5e7b6385e22d09668397765b08008cf411e1862",
      "candidate_info": {
        "commit_hash": "b5e7b6385e22d09668397765b08008cf411e1862",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/b5e7b6385e22d09668397765b08008cf411e1862",
        "files": [
          "lang/en/repository.php",
          "lib/outputrequirementslib.php",
          "repository/filepicker.js",
          "repository/lib.php",
          "repository/renderer.php",
          "repository/repository_ajax.php",
          "theme/base/config.php",
          "theme/base/style/core.css",
          "theme/base/style/filemanager.css"
        ],
        "message": "MDL-31901: Introducing renderers for filepicker:\n\n- create repository renderer, implement functions for returning HTML templates used in filepicker\n- let filepicker use HTML from templates\n- move CSS for filemanager and filepicker to the separate css file in base theme\n- use only YUI3 in filepicker (get rid of YUI2)\n- add button for 'View details' in filepicker (though this view mode is still not ready)",
        "before_after_code_files": [
          "lang/en/repository.php||lang/en/repository.php",
          "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
          "repository/filepicker.js||repository/filepicker.js",
          "repository/lib.php||repository/lib.php",
          "repository/renderer.php||repository/renderer.php",
          "repository/repository_ajax.php||repository/repository_ajax.php",
          "theme/base/config.php||theme/base/config.php",
          "theme/base/style/core.css||theme/base/style/core.css",
          "theme/base/style/filemanager.css||theme/base/style/filemanager.css"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
            "repository/filepicker.js||repository/filepicker.js"
          ],
          "candidate": [
            "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
            "repository/filepicker.js||repository/filepicker.js"
          ]
        }
      },
      "candidate_diff": {
        "lang/en/repository.php||lang/en/repository.php": [
          "File: lang/en/repository.php -> lang/en/repository.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "76: $string['date'] = 'Date';",
          "77: $string['deleted'] = 'Repository deleted';",
          "78: $string['deleterepository'] = 'Delete this repository';",
          "79: $string['disabled'] = 'Disabled';",
          "80: $string['download'] = 'Download';",
          "81: $string['downloadfolder'] = 'Download all';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79: $string['detailview'] = 'View details';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156: $string['refresh'] = 'Refresh';",
          "157: $string['refreshnonjsfilepicker'] = 'Please close this window and refresh non-javascript file picker';",
          "158: $string['removed'] = 'Repository removed';",
          "160: $string['repositories'] = 'Repositories';",
          "161: $string['repository'] = 'Repository';",
          "162: $string['repositorycourse'] = 'Course repositories';",
          "",
          "[Removed Lines]",
          "159: $string['renameto'] = 'Rename to';",
          "",
          "[Added Lines]",
          "160: $string['renameto'] = 'Rename to \"{$a}\"';",
          "",
          "---------------"
        ],
        "lib/outputrequirementslib.php||lib/outputrequirementslib.php": [
          "File: lib/outputrequirementslib.php -> lib/outputrequirementslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "430:     protected function find_module($component) {",
          "433:         $module = null;",
          "",
          "[Removed Lines]",
          "431:         global $CFG;",
          "",
          "[Added Lines]",
          "431:         global $CFG, $PAGE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:                 case 'core_filepicker':",
          "440:                     $module = array('name'     => 'core_filepicker',",
          "441:                                     'fullpath' => '/repository/filepicker.js',",
          "443:                                     'strings'  => array(array('add', 'repository'), array('back', 'repository'), array('cancel', 'moodle'), array('close', 'repository'),",
          "444:                                                         array('cleancache', 'repository'), array('copying', 'repository'), array('date', 'repository'), array('downloadsucc', 'repository'),",
          "445:                                                         array('emptylist', 'repository'), array('error', 'repository'), array('federatedsearch', 'repository'),",
          "446:                                                         array('filenotnull', 'repository'), array('getfile', 'repository'), array('help', 'moodle'), array('iconview', 'repository'),",
          "448:                                                         array('loading', 'repository'), array('login', 'repository'), array('logout', 'repository'), array('noenter', 'repository'),",
          "449:                                                         array('noresult', 'repository'), array('manageurl', 'repository'), array('popup', 'repository'), array('preview', 'repository'),",
          "450:                                                         array('refresh', 'repository'), array('save', 'repository'), array('saveas', 'repository'), array('saved', 'repository'),",
          "",
          "[Removed Lines]",
          "442:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-button', 'yui2-container', 'yui2-layout', 'yui2-menu', 'yui2-treeview', 'yui2-dragdrop', 'yui2-cookie'),",
          "447:                                                         array('invalidjson', 'repository'), array('linkexternal', 'repository'), array('listview', 'repository'),",
          "",
          "[Added Lines]",
          "442:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-menu', 'yui2-treeview', 'yui2-dragdrop', 'panel', 'cookie'),",
          "448:                                                         array('invalidjson', 'repository'), array('linkexternal', 'repository'), array('listview', 'repository'), array('detailview', 'repository'),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "453:                                                         array('uploading', 'repository'), array('xhtmlerror', 'repository'),",
          "454:                                                         array('cancel'), array('chooselicense', 'repository'), array('author', 'repository'),array('next', 'moodle'),",
          "455:                                                         array('ok', 'moodle'), array('error', 'moodle'), array('info', 'moodle'), array('norepositoriesavailable', 'repository'), array('norepositoriesexternalavailable', 'repository'),",
          "457:                                                         array('nofilesavailable', 'repository'), array('overwrite', 'repository'),",
          "458:                                                         array('renameto', 'repository'), array('fileexists', 'repository'),",
          "459:                                                         array('fileexistsdialogheader', 'repository'), array('fileexistsdialog_editor', 'repository'),",
          "",
          "[Removed Lines]",
          "456:                                                         array('nofilesattached', 'repository'), array('filepicker', 'repository'),",
          "",
          "[Added Lines]",
          "457:                                                         array('attachment', 'repository'), array('nofilesattached', 'repository'), array('filepicker', 'repository'),",
          "",
          "---------------"
        ],
        "repository/filepicker.js||repository/filepicker.js": [
          "File: repository/filepicker.js -> repository/filepicker.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: M.core_filepicker.instances = M.core_filepicker.instances || {};",
          "47: M.core_filepicker.active_filepicker = null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: M.core_filepicker.templates = M.core_filepicker.templates || {};",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62: M.core_filepicker.init = function(Y, options) {",
          "63:     var FilePickerHelper = function(options) {",
          "64:         FilePickerHelper.superclass.constructor.apply(this, arguments);",
          "65:     };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:     if (options.templates);",
          "73:     for (var templid in options.templates) {",
          "74:         this.templates[templid] = options.templates[templid];",
          "75:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "134:                 method: 'POST',",
          "135:                 on: {",
          "136:                     complete: function(id,o,p) {",
          "138:                         if (!o) {",
          "139:                             alert('IO FATAL');",
          "140:                             return;",
          "141:                         }",
          "",
          "[Removed Lines]",
          "137:                         var panel_id = '#panel-'+client_id;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "144:                             data = Y.JSON.parse(o.responseText);",
          "145:                         } catch(e) {",
          "146:                             scope.print_msg(M.str.repository.invalidjson, 'error');",
          "148:                             return;",
          "149:                         }",
          "",
          "[Removed Lines]",
          "147:                             Y.one(panel_id).set('innerHTML', 'ERROR: '+M.str.repository.invalidjson+'<pre>'+stripHTML(o.responseText)+'</pre>');",
          "",
          "[Added Lines]",
          "161:                             scope.display_error(M.str.repository.invalidjson+'<pre>'+stripHTML(o.responseText)+'</pre>', 'invalidjson')",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "196:             } else {",
          "197:                 Y.io(api, cfg);",
          "198:                 if (redraw) {",
          "200:                 }",
          "201:             }",
          "202:         },",
          "203:         process_existing_file: function(data) {",
          "204:             var scope = this;",
          "210:                 var params = {}",
          "211:                 params['existingfilename'] = data.existingfile.filename;",
          "212:                 params['existingfilepath'] = data.existingfile.filepath;",
          "213:                 params['newfilename'] = data.newfile.filename;",
          "214:                 params['newfilepath'] = data.newfile.filepath;",
          "216:                     'params': params,",
          "218:                     'action':'overwrite',",
          "219:                     'path': '',",
          "222:                     'callback': function(id, o, args) {",
          "224:                         scope.hide();",
          "",
          "[Removed Lines]",
          "199:                     this.wait('load');",
          "205:             var repository_id = scope.active_repo.id;",
          "206:             var client_id = scope.options.client_id;",
          "207:             var handleOverwrite = function() {",
          "209:                 var dialog = this;",
          "215:                 scope.request({",
          "217:                     'scope': scope,",
          "220:                     'client_id': client_id,",
          "221:                     'repository_id': repository_id,",
          "223:                         dialog.cancel();",
          "",
          "[Added Lines]",
          "213:                     this.wait();",
          "220:             var handleOverwrite = function(e) {",
          "222:                 e.preventDefault();",
          "223:                 var data = this.process_dlg.dialogdata;",
          "229:                 this.hide_header();",
          "230:                 this.request({",
          "232:                     'scope': this,",
          "235:                     'client_id': this.options.client_id,",
          "236:                     'repository_id': this.active_repo.id,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "228:                             scope.options.editor_target.value = data.existingfile.url;",
          "229:                             scope.options.editor_target.onchange();",
          "230:                         } else if (scope.options.env === 'filepicker') {",
          "232:                                     'url':data.existingfile.url,",
          "233:                                     'file':data.existingfile.filename};",
          "234:                             scope.options.formcallback.apply(scope, [fileinfo]);",
          "",
          "[Removed Lines]",
          "231:                             var fileinfo = {'client_id':client_id,",
          "",
          "[Added Lines]",
          "245:                             var fileinfo = {'client_id':scope.options.client_id,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "236:                     }",
          "237:                 }, true);",
          "238:             }",
          "240:                 if (scope.options.editor_target && scope.options.env == 'editor') {",
          "241:                     scope.options.editor_target.value = data.newfile.url;",
          "242:                     scope.options.editor_target.onchange();",
          "243:                 }",
          "245:                 scope.hide();",
          "246:                 var formcallback_scope = null;",
          "247:                 if (scope.options.magicscope) {",
          "",
          "[Removed Lines]",
          "239:             var handleRename = function() {",
          "244:                 this.cancel();",
          "",
          "[Added Lines]",
          "253:             var handleRename = function(e) {",
          "255:                 e.preventDefault();",
          "256:                 var scope = this;",
          "257:                 var data = this.process_dlg.dialogdata;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "249:                 } else {",
          "250:                     formcallback_scope = scope;",
          "251:                 }",
          "253:                                 'url':data.newfile.url,",
          "254:                                 'file':data.newfile.filename};",
          "255:                 scope.options.formcallback.apply(formcallback_scope, [fileinfo]);",
          "256:             }",
          "260:                 var params = {};",
          "264:                     'params': params,",
          "266:                     'action':'deletetmpfile',",
          "267:                     'path': '',",
          "270:                     'callback': function(id, o, args) {",
          "273:                     }",
          "275:             }",
          "293:             }",
          "297:         },",
          "298:         print_msg: function(msg, type) {",
          "307:             }",
          "308:             if (!this.msg_dlg) {",
          "329:             }",
          "331:             this.msg_dlg.show();",
          "332:         },",
          "333:         build_tree: function(node, level) {",
          "",
          "[Removed Lines]",
          "252:                 var fileinfo = {'client_id':client_id,",
          "257:             var handleCancel = function() {",
          "259:                 var dialog = this;",
          "261:                 params['newfilename'] = data.newfile.filename;",
          "262:                 params['newfilepath'] = data.newfile.filepath;",
          "263:                 scope.request({",
          "265:                     'scope': scope,",
          "268:                     'client_id': client_id,",
          "269:                     'repository_id': repository_id,",
          "271:                         scope.hide();",
          "272:                         dialog.cancel();",
          "274:                 }, true);",
          "276:             var dialog = new YAHOO.widget.SimpleDialog(\"dlg\", {",
          "277:                 width: \"50em\",",
          "278:                 fixedcenter: true,",
          "279:                 close: false,",
          "280:                 icon: YAHOO.widget.SimpleDialog.ICON_HELP,",
          "281:                 visible: true,",
          "282:                 zIndex: 9999993,",
          "283:                 draggable: true,",
          "284:                 buttons: [{ text: M.str.repository.overwrite, handler: handleOverwrite },",
          "285:                 { text: M.str.repository.renameto + ' \"' + data.newfile.filename + '\"', handler: handleRename },",
          "286:                 { text: M.str.moodle.cancel, handler: handleCancel, isDefault: true}]",
          "287:             });",
          "288:             dialog.setHeader(M.str.repository.fileexistsdialogheader);",
          "289:             if (scope.options.env == 'editor') {",
          "290:                 dialog.setBody(M.str.repository.fileexistsdialog_editor);",
          "291:             } else {",
          "292:                 dialog.setBody(M.str.repository.fileexistsdialog_filemanager);",
          "295:             dialog.render(document.body);",
          "296:             dialog.show();",
          "299:             var client_id = this.options.client_id;",
          "300:             var dlg_id = 'fp-msg-dlg-'+client_id;",
          "301:             function handleYes() {",
          "302:                 this.hide();",
          "303:             }",
          "304:             var icon = YAHOO.widget.SimpleDialog.ICON_INFO;",
          "305:             if (type=='error') {",
          "306:                 icon = YAHOO.widget.SimpleDialog.ICON_ALARM;",
          "309:                 this.msg_dlg = new YAHOO.widget.SimpleDialog(dlg_id,",
          "310:                      { width: \"300px\",",
          "311:                        fixedcenter: true,",
          "312:                        visible: true,",
          "313:                        draggable: true,",
          "314:                        close: true,",
          "315:                        text: msg,",
          "316:                        modal: false,",
          "317:                        icon: icon,",
          "318:                        zindex: 9999992,",
          "319:                        constraintoviewport: true,",
          "320:                        buttons: [{ text:M.str.moodle.ok, handler:handleYes, isDefault:true }]",
          "321:                      });",
          "322:                 this.msg_dlg.render(document.body);",
          "323:             } else {",
          "324:                 this.msg_dlg.setBody(msg);",
          "325:             }",
          "326:             var header = M.str.moodle.info;",
          "327:             if (type=='error') {",
          "328:                 header = M.str.moodle.error;",
          "330:             this.msg_dlg.setHeader(header);",
          "",
          "[Added Lines]",
          "269:                 var fileinfo = {'client_id':scope.options.client_id,",
          "274:             var handleCancel = function(e) {",
          "276:                 e.preventDefault();",
          "278:                 params['newfilename'] = this.process_dlg.dialogdata.newfile.filename;",
          "279:                 params['newfilepath'] = this.process_dlg.dialogdata.newfile.filepath;",
          "280:                 this.request({",
          "282:                     'scope': this,",
          "285:                     'client_id': this.options.client_id,",
          "286:                     'repository_id': this.active_repo.id,",
          "290:                 }, false);",
          "291:                 this.process_dlg.hide();",
          "292:                 this.selectui.hide();",
          "294:             if (!this.process_dlg) {",
          "295:                 var node = Y.Node.create(M.core_filepicker.templates.processexistingfile);",
          "296:                 this.fpnode.appendChild(node);",
          "297:                 this.process_dlg = new Y.Panel({",
          "298:                     srcNode      : node,",
          "299:                     headerContent: M.str.repository.fileexistsdialogheader,",
          "300:                     zIndex       : 800000,",
          "301:                     centered     : true,",
          "302:                     modal        : true,",
          "303:                     visible      : false,",
          "304:                     render       : true,",
          "305:                     buttons      : {}",
          "306:                 });",
          "307:                 node.one('.fp-dlg-butoverwrite').on('click', handleOverwrite, this);",
          "308:                 node.one('.fp-dlg-butrename').on('click', handleRename, this);",
          "309:                 node.one('.fp-dlg-butcancel').on('click', handleCancel, this);",
          "310:                 if (this.options.env == 'editor') {",
          "311:                     node.one('.fp-dlg-text').setContent(M.str.repository.fileexistsdialog_editor);",
          "312:                 } else {",
          "313:                     node.one('.fp-dlg-text').setContent(M.str.repository.fileexistsdialog_filemanager);",
          "314:                 }",
          "316:             this.process_dlg.dialogdata = data;",
          "317:             this.fpnode.one('.fp-dlg .fp-dlg-butrename').setContent(M.util.get_string('renameto', 'repository', data.newfile.filename));",
          "318:             this.process_dlg.show();",
          "319:         },",
          "321:         display_error: function(errortext, errorcode) {",
          "322:             this.fpnode.one('.fp-content').setContent(M.core_filepicker.templates.error);",
          "323:             this.fpnode.one('.fp-content .fp-error').",
          "324:                 addClass(errorcode).",
          "325:                 setContent(errortext);",
          "329:             var header = M.str.moodle.error;",
          "330:             if (type != 'error') {",
          "331:                 type = 'info'; // one of only two types excepted",
          "332:                 header = M.str.moodle.info;",
          "335:                 var node = Y.Node.create(M.core_filepicker.templates.message);",
          "336:                 this.fpnode.appendChild(node);",
          "338:                 this.msg_dlg = new Y.Panel({",
          "339:                     srcNode      : node,",
          "340:                     zIndex       : 800000,",
          "341:                     centered     : true,",
          "342:                     modal        : true,",
          "343:                     visible      : false,",
          "344:                     render       : true",
          "345:                 });",
          "346:                 node.one('.fp-msg-butok').on('click', function(e) {",
          "347:                     e.preventDefault();",
          "348:                     this.msg_dlg.hide();",
          "349:                 }, this);",
          "352:             this.msg_dlg.set('headerContent', header);",
          "353:             this.fpnode.one('.fp-msg').removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
          "354:             this.fpnode.one('.fp-msg .fp-msg-text').setContent(msg);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "375:                 this.view_as_icons();",
          "376:             } else {",
          "378:                 if (this.viewmode == 1) {",
          "379:                     this.view_as_icons();",
          "380:                 } else if (this.viewmode == 2) {",
          "",
          "[Removed Lines]",
          "377:                 this.viewbar.set('disabled', false);",
          "",
          "[Added Lines]",
          "400:                 this.viewbar_set_enabled(true);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "396:                 page:node.page?args.page:'',",
          "397:                 callback: function(id, obj, args) {",
          "398:                     var list = obj.list;",
          "400:                     scope.parse_repository_options(obj);",
          "401:                     for(k in list) {",
          "402:                         scope.build_tree(list[k], node);",
          "",
          "[Removed Lines]",
          "399:                     scope.viewbar.set('disabled', false);",
          "",
          "[Added Lines]",
          "422:                     scope.viewbar_set_enabled(true);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "406:             }, false);",
          "407:         },",
          "408:         view_as_list: function() {",
          "409:             var scope = this;",
          "410:             var client_id = scope.options.client_id;",
          "411:             var dynload = scope.active_repo.dynload;",
          "412:             var list = this.filelist;",
          "414:             scope.viewmode = 2;",
          "419:             if (list && list.length==0) {",
          "427:                 return;",
          "428:             }",
          "430:             scope.treeview = new YAHOO.widget.TreeView('treeview-'+client_id);",
          "431:             if (dynload) {",
          "432:                 scope.treeview.setDynamicLoad(scope.treeview_dynload, 1);",
          "",
          "[Removed Lines]",
          "413:             var panel_id = '#panel-'+client_id;",
          "415:             Y.one(panel_id).set('innerHTML', '');",
          "416:             scope.print_header();",
          "418:             var html = '<div class=\"fp-tree-panel\" id=\"treeview-'+client_id+'\">';",
          "420:                 html += '<div class=\"fp-emptylist mdl-align\">' +M.str.repository.nofilesavailable+'</div>';",
          "421:             }",
          "422:             html += '</div>';",
          "424:             var tree = Y.Node.create(html);",
          "425:             Y.one(panel_id).appendChild(tree);",
          "426:             if (!list || list.length==0) {",
          "",
          "[Added Lines]",
          "439:                 this.display_error(M.str.repository.nofilesavailable, 'nofilesavailable');",
          "443:             var html = '<div class=\"fp-tree-panel\" id=\"treeview-'+client_id+'\"></div>';",
          "444:             this.fpnode.one('.fp-content').setContent(html);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "450:             var scope = this;",
          "451:             var client_id = this.options.client_id;",
          "452:             var list = this.filelist;",
          "454:             this.viewmode = 1;",
          "460:             if (list && list.length==0) {",
          "462:             }",
          "467:             var count = 0;",
          "468:             for(var k in list) {",
          "469:                 var node = list[k];",
          "489:                 }",
          "494:                 }",
          "498:                 if(node.thumbnail_alt) {",
          "500:                 }",
          "501:                 if(node.thumbnail_title) {",
          "511:                 }",
          "520:                 var dynload = this.active_repo.dynload;",
          "521:                 if(node.children) {",
          "523:                         e.preventDefault();",
          "524:                         if(dynload) {",
          "525:                             var params = {'path':p.path};",
          "",
          "[Removed Lines]",
          "453:             var panel_id = '#panel-'+client_id;",
          "455:             Y.one(panel_id).set('innerHTML', '');",
          "457:             this.print_header();",
          "459:             var html = '<div class=\"fp-grid-panel\" id=\"fp-grid-panel-'+client_id+'\">';",
          "461:                 html += '<div class=\"fp-emptylist mdl-align\">' +M.str.repository.nofilesavailable+'</div>';",
          "463:             html += '</div>';",
          "465:             var gridpanel = Y.Node.create(html);",
          "466:             Y.one('#panel-'+client_id).appendChild(gridpanel);",
          "470:                 var grid = document.createElement('DIV');",
          "471:                 grid.className='fp-grid';",
          "473:                 var title = document.createElement('DIV');",
          "474:                 title.id = 'grid-title-'+client_id+'-'+String(count);",
          "475:                 title.className = 'label';",
          "476:                 var filename = node.title;",
          "477:                 if (node.shorttitle) {",
          "478:                     filename = node.shorttitle;",
          "479:                 }",
          "480:                 var filename_id = 'filname-link-'+client_id+'-'+String(count);",
          "481:                 title.innerHTML += '<a href=\"###\" id=\"'+filename_id+'\" title=\"'+node.title+'\"><span>'+filename+\"</span></a>\";",
          "484:                 if(node.thumbnail_width){",
          "485:                     grid.style.width = node.thumbnail_width+'px';",
          "486:                     title.style.width = (node.thumbnail_width-10)+'px';",
          "487:                 } else {",
          "488:                     grid.style.width = title.style.width = '90px';",
          "490:                 var frame = document.createElement('DIV');",
          "491:                 frame.style.textAlign='center';",
          "492:                 if(node.thumbnail_height){",
          "493:                     frame.style.height = node.thumbnail_height+'px';",
          "495:                 var img = document.createElement('img');",
          "496:                 img.src = node.thumbnail;",
          "497:                 img.title = node.title;",
          "499:                     img.alt = node.thumbnail_alt;",
          "502:                     img.title = node.thumbnail_title;",
          "503:                 }",
          "505:                 var link = document.createElement('A');",
          "506:                 link.href='###';",
          "507:                 link.id = 'img-id-'+client_id+'-'+String(count);",
          "508:                 if(node.url) {",
          "512:                 link.appendChild(img);",
          "513:                 frame.appendChild(link);",
          "514:                 grid.appendChild(frame);",
          "515:                 grid.appendChild(title);",
          "516:                 gridpanel.appendChild(grid);",
          "518:                 var y_title = Y.one('#'+title.id);",
          "519:                 var y_file = Y.one('#'+link.id);",
          "522:                     y_file.on('click', function(e, p) {",
          "",
          "[Added Lines]",
          "472:                 this.display_error(M.str.repository.nofilesavailable, 'nofilesavailable');",
          "473:                 return;",
          "475:             this.fpnode.one('.fp-content').setContent(M.core_filepicker.templates.iconview);",
          "477:             var element_template = this.fpnode.one('.fp-content').one('.fp-file');",
          "478:             var container = element_template.get('parentNode');",
          "479:             container.removeChild(element_template);",
          "483:                 var element = element_template.cloneNode(true);",
          "484:                 container.appendChild(element);",
          "486:                     replace(/\\{GRIDELEMENTID\\}/g, 'fp-grid-'+client_id+'-'+count).",
          "487:                     replace(/\\{IMGID\\}/g, 'fp-img-'+client_id+'-'+count).",
          "489:                 var filename = node.shorttitle ? node.shorttitle : node.title;",
          "490:                 var filenamediv = element.one('.fp-filename');",
          "491:                 filenamediv.setContent(filename);",
          "492:                 var imgdiv = element.one('.fp-thumbnail');",
          "493:                 var set_width = function(node, width) {",
          "494:                     var widthmatches = node.getStyle('minWidth').match(/^(\\d+)px$/)",
          "495:                     if (widthmatches && parseInt(widthmatches[1])>width) {",
          "496:                         width = parseInt(widthmatches[1]);",
          "497:                     }",
          "498:                     node.setStyle('width', '' + width + 'px')",
          "500:                 var set_height = function(node, height) {",
          "501:                     var heightmatches = node.getStyle('minHeight').match(/^(\\d+)px$/)",
          "502:                     if (heightmatches && parseInt(heightmatches[1])>height) {",
          "503:                         height = parseInt(heightmatches[1]);",
          "504:                     }",
          "505:                     node.setStyle('height', '' + height + 'px')",
          "507:                 var width = node.thumbnail_width ? node.thumbnail_width : 90;",
          "508:                 var height = node.thumbnail_height ? node.thumbnail_height : 90;",
          "509:                 set_width(filenamediv, width)",
          "510:                 set_width(imgdiv, width)",
          "511:                 set_height(imgdiv, height);",
          "512:                 var img = Y.Node.create('<img/>').",
          "513:                     set('src', node.thumbnail).",
          "514:                     set('title', node.title);",
          "516:                     img.set('alt', node.thumbnail_alt);",
          "519:                     img.set('title', node.thumbnail_title);",
          "521:                 img.setStyle('maxWidth', ''+width+'px').setStyle('maxHeight', ''+height+'px');",
          "522:                 imgdiv.appendChild(img)",
          "526:                     element.on('click', function(e, p) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "529:                             this.view_files();",
          "530:                         }",
          "531:                     }, this, node);",
          "537:                 } else {",
          "538:                     var fileinfo = {};",
          "539:                     fileinfo['title'] = list[k].title;",
          "",
          "[Removed Lines]",
          "532:                     y_title.on('click', function(e, p, id){",
          "533:                         e.preventDefault();",
          "534:                         var icon = Y.one(id);",
          "535:                         icon.simulate('click');",
          "536:                     }, this, node, '#'+link.id);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "541:                     fileinfo['thumbnail'] = list[k].thumbnail;",
          "542:                     fileinfo['haslicense'] = list[k].haslicense?true:false;",
          "543:                     fileinfo['hasauthor'] = list[k].hasauthor?true:false;",
          "549:                         e.preventDefault();",
          "550:                         this.select_file(args);",
          "551:                     }, this, fileinfo);",
          "",
          "[Removed Lines]",
          "544:                     y_title.on('click', function(e, args) {",
          "545:                         e.preventDefault();",
          "546:                         this.select_file(args);",
          "547:                     }, this, fileinfo);",
          "548:                     y_file.on('click', function(e, args) {",
          "",
          "[Added Lines]",
          "543:                     element.on('click', function(e, args) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "554:             }",
          "555:         },",
          "556:         select_file: function(args) {",
          "557:             var client_id = this.options.client_id;",
          "592:             if ((this.options.externallink && this.options.env == 'editor' && this.options.return_types != 1)) {",
          "594:             }",
          "601:             }",
          "603:             if (!args.haslicense) {",
          "621:             }",
          "633:             getfile.on('click', function(e) {",
          "634:                 var client_id = this.options.client_id;",
          "635:                 var scope = this;",
          "636:                 var repository_id = this.active_repo.id;",
          "639:                 var params = {'title':title, 'source':filesource, 'savepath': this.options.savepath};",
          "641:                 if (license) {",
          "642:                     params['license'] = license.get('value');",
          "644:                 }",
          "646:                 if (author){",
          "647:                     params['author'] = author.get('value');",
          "648:                 }",
          "",
          "[Removed Lines]",
          "558:             var thumbnail = Y.one('#fp-grid-panel-'+client_id);",
          "559:             if(thumbnail){",
          "560:                 thumbnail.setStyle('display', 'none');",
          "561:             }",
          "562:             var header = Y.one('#fp-header-'+client_id);",
          "563:             if (header) {",
          "564:                 header.setStyle('display', 'none');",
          "565:             }",
          "566:             var footer = Y.one('#fp-footer-'+client_id);",
          "567:             if (footer) {",
          "568:                 footer.setStyle('display', 'none');",
          "569:             }",
          "570:             var path = Y.one('#path-'+client_id);",
          "571:             if(path){",
          "572:                 path.setStyle('display', 'none');",
          "573:             }",
          "574:             var panel = Y.one('#panel-'+client_id);",
          "575:             var form_id = 'fp-rename-form-'+client_id;",
          "576:             var html = '<div class=\"fp-rename-form\" id=\"'+form_id+'\">';",
          "577:             html += '<p><img src=\"'+args.thumbnail+'\" /></p>';",
          "578:             html += '<table width=\"100%\">';",
          "579:             html += '<tr><td class=\"mdl-right\"><label for=\"newname-'+client_id+'\">'+M.str.repository.saveas+':</label></td>';",
          "580:             html += '<td class=\"mdl-left\"><input type=\"text\" id=\"newname-'+client_id+'\" value=\"'+args.title+'\" /></td></tr>';",
          "582:             var le_checked = '';",
          "583:             var le_style = '';",
          "584:             if (this.options.repositories[this.active_repo.id].return_types == 1) {",
          "586:                 le_checked = 'checked';",
          "587:                 le_style = ' style=\"display:none;\"';",
          "588:             } else if(this.options.repositories[this.active_repo.id].return_types == 2) {",
          "590:                 le_style = ' style=\"display:none;\"';",
          "591:             }",
          "593:                 html += '<tr'+le_style+'><td></td><td class=\"mdl-left\"><input type=\"checkbox\" id=\"linkexternal-'+client_id+'\" value=\"\" '+le_checked+' />'+M.str.repository.linkexternal+'</td></tr>';",
          "596:             if (!args.hasauthor) {",
          "598:                 html += '<tr><td class=\"mdl-right\"><label for=\"text-author\">'+M.str.repository.author+' :</label></td>';",
          "599:                 html += '<td class=\"mdl-left\"><input id=\"text-author-'+client_id+'\" type=\"text\" name=\"author\" value=\"'+this.options.author+'\" /></td>';",
          "600:                 html += '</tr>';",
          "605:                 var licenses = this.options.licenses;",
          "606:                 html += '<tr><td class=\"mdl-right\"><label for=\"select-license-'+client_id+'\">'+M.str.repository.chooselicense+' :</label></td>';",
          "607:                 html += '<td class=\"mdl-left\"><select name=\"license\" id=\"select-license-'+client_id+'\">';",
          "608:                 var recentlicense = YAHOO.util.Cookie.get('recentlicense');",
          "609:                 if (recentlicense) {",
          "610:                     this.options.defaultlicense=recentlicense;",
          "611:                 }",
          "612:                 for (var i in licenses) {",
          "613:                     if (this.options.defaultlicense==licenses[i].shortname) {",
          "614:                         var selected = ' selected';",
          "615:                     } else {",
          "616:                         var selected = '';",
          "617:                     }",
          "618:                     html += '<option value=\"'+licenses[i].shortname+'\"'+selected+'>'+licenses[i].fullname+'</option>';",
          "619:                 }",
          "620:                 html += '</select></td></tr>';",
          "622:             html += '</table>';",
          "624:             html += '<p><input type=\"hidden\" id=\"filesource-'+client_id+'\" value=\"'+args.source+'\" />';",
          "625:             html += '<input type=\"button\" id=\"fp-confirm-'+client_id+'\" value=\"'+M.str.repository.getfile+'\" />';",
          "626:             html += '<input type=\"button\" id=\"fp-cancel-'+client_id+'\" value=\"'+M.str.moodle.cancel+'\" /></p>';",
          "627:             html += '</div>';",
          "629:             var getfile_form = Y.Node.create(html);",
          "630:             panel.appendChild(getfile_form);",
          "632:             var getfile = Y.one('#fp-confirm-'+client_id);",
          "637:                 var title = Y.one('#newname-'+client_id).get('value');",
          "638:                 var filesource = Y.one('#filesource-'+client_id).get('value');",
          "640:                 var license = Y.one('#select-license-'+client_id);",
          "643:                     YAHOO.util.Cookie.set('recentlicense', license.get('value'));",
          "645:                 var author = Y.one('#text-author-'+client_id);",
          "",
          "[Added Lines]",
          "552:             this.selectui.show();",
          "554:             var selectnode = this.fpnode.one('.fp-select');",
          "555:             selectnode.one('#newname-'+client_id).set('value', args.title);",
          "556:             selectnode.one('#text-author-'+client_id).set('value', this.options.author);",
          "558:             var imgnode = Y.Node.create('<img/>').set('src', args.thumbnail)",
          "559:             selectnode.one('#img-'+client_id).setContent('').appendChild(imgnode);",
          "561:             selectnode.one('#linkexternal-'+client_id).set('checked', ''); // default to unchecked",
          "564:                 selectnode.one('#linkexternal-'+client_id).set('disabled', '');",
          "565:                 selectnode.all('#linkexternal-'+client_id+',#wrap-linkexternal-'+client_id).removeClass('uneditable')",
          "566:             } else {",
          "568:                 selectnode.one('#linkexternal-'+client_id).set('disabled', 'disabled');",
          "569:                 selectnode.all('#linkexternal-'+client_id+',#wrap-linkexternal-'+client_id).addClass('uneditable')",
          "570:                 if (this.options.return_types == 1) {",
          "572:                     selectnode.one('#linkexternal-'+client_id).set('checked', 'checked');",
          "573:                 }",
          "576:             if (args.hasauthor) {",
          "577:                 selectnode.one('#text-author-'+client_id).set('disabled', 'disabled');",
          "578:                 selectnode.all('#text-author-'+client_id+',#wrap-text-author-'+client_id).addClass('uneditable')",
          "579:             } else {",
          "580:                 selectnode.one('#text-author-'+client_id).set('disabled', '');",
          "581:                 selectnode.all('#text-author-'+client_id+',#wrap-text-author-'+client_id).removeClass('uneditable')",
          "586:                 this.populate_licenses_select(selectnode.one('#select-license-'+client_id));",
          "587:                 selectnode.one('#wrap-select-license-'+client_id).set('disabled', '');",
          "588:                 selectnode.all('#select-license-'+client_id+'#wrap-select-license-'+client_id).removeClass('uneditable');",
          "589:             } else {",
          "590:                 selectnode.one('#wrap-select-license-'+client_id).set('disabled', 'disabled');",
          "591:                 selectnode.all('#select-license-'+client_id+'#wrap-select-license-'+client_id).addClass('uneditable');",
          "593:             selectnode.one('form #filesource-'+client_id).set('value', args.source);",
          "594:         },",
          "595:         setup_select_file: function() {",
          "596:             var client_id = this.options.client_id;",
          "597:             var selectnode = this.fpnode.one('.fp-select');",
          "598:             var getfile = selectnode.one('#fp-confirm-'+client_id);",
          "600:                 e.preventDefault();",
          "604:                 var title = selectnode.one('#newname-'+client_id).get('value');",
          "605:                 var filesource = selectnode.one('form #filesource-'+client_id).get('value');",
          "607:                 var license = selectnode.one('#select-license-'+client_id);",
          "610:                     Y.Cookie.set('recentlicense', license.get('value'));",
          "612:                 var author = selectnode.one('#text-author-'+client_id);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "652:                     params.savepath = '/';",
          "654:                     if ( this.options.return_types != 1 ) {",
          "656:                         if (linkexternal && linkexternal.get('checked')) {",
          "657:                             params['linkexternal'] = 'yes';",
          "658:                         }",
          "",
          "[Removed Lines]",
          "655:                         var linkexternal = Y.one('#linkexternal-'+client_id);",
          "",
          "[Added Lines]",
          "622:                         var linkexternal = selectnode.one('#linkexternal-'+client_id);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "666:                     params['linkexternal'] = 'yes';",
          "667:                 }",
          "670:                 this.request({",
          "671:                     action:'download',",
          "672:                     client_id: client_id,",
          "673:                     repository_id: repository_id,",
          "674:                     'params': params,",
          "675:                     onerror: function(id, obj, args) {",
          "677:                     },",
          "678:                     callback: function(id, obj, args) {",
          "679:                         if (scope.options.editor_target && scope.options.env=='editor') {",
          "",
          "[Removed Lines]",
          "669:                 this.wait('download', title);",
          "676:                         scope.view_files();",
          "",
          "[Added Lines]",
          "643:                         scope.selectui.hide();",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "690:                         }",
          "691:                         scope.options.formcallback.apply(formcallback_scope, [obj]);",
          "692:                     }",
          "694:             }, this);",
          "696:             elform.on('keydown', function(e) {",
          "697:                 if (e.keyCode == 13) {",
          "698:                     getfile.simulate('click');",
          "699:                     e.preventDefault();",
          "700:                 }",
          "701:             }, this);",
          "703:             cancel.on('click', function(e) {",
          "705:             }, this);",
          "710:         },",
          "722:             }",
          "728:             }",
          "729:         },",
          "730:         render: function() {",
          "731:             var client_id = this.options.client_id;",
          "744:             });",
          "762:             });",
          "819:                 }",
          "826:                 }",
          "828:         },",
          "829:         parse_repository_options: function(data) {",
          "830:             this.filelist = data.list?data.list:null;",
          "",
          "[Removed Lines]",
          "693:                 }, true);",
          "695:             var elform = Y.one('#'+form_id);",
          "702:             var cancel = Y.one('#fp-cancel-'+client_id);",
          "704:                 this.view_files();",
          "706:             var treeview = Y.one('#treeview-'+client_id);",
          "707:             if (treeview){",
          "708:                 treeview.setStyle('display', 'none');",
          "709:             }",
          "711:         wait: function(type) {",
          "712:             var panel = Y.one('#panel-'+this.options.client_id);",
          "713:             panel.set('innerHTML', '');",
          "714:             var name = '';",
          "715:             var str = '<div style=\"text-align:center\">';",
          "716:             if(type=='load') {",
          "717:                 str += '<img src=\"'+M.util.image_url('i/loading')+'\" />';",
          "718:                 str += '<p>'+M.str.repository.loading+'</p>';",
          "719:             }else{",
          "720:                 str += '<img src=\"'+M.util.image_url('i/progressbar')+'\" />';",
          "721:                 str += '<p>'+M.str.repository.copying+' <strong>'+name+'</strong></p>';",
          "723:             str += '</div>';",
          "724:             try {",
          "725:                 panel.set('innerHTML', str);",
          "726:             } catch(e) {",
          "727:                 alert(e.toString());",
          "732:             var scope = this;",
          "733:             var filepicker_id = 'filepicker-'+client_id;",
          "734:             var fpnode = Y.Node.create('<div class=\"file-picker\" id=\"'+filepicker_id+'\"></div>');",
          "735:             Y.one(document.body).appendChild(fpnode);",
          "737:             this.mainui = new YAHOO.widget.Panel(filepicker_id, {",
          "738:                 draggable: true,",
          "739:                 close: true,",
          "740:                 underlay: 'none',",
          "741:                 zindex: 9999990,",
          "742:                 monitorresize: false,",
          "743:                 xy: [50, YAHOO.util.Dom.getDocumentScrollTop()+20]",
          "745:             var layout = null;",
          "746:             this.mainui.beforeRenderEvent.subscribe(function() {",
          "747:                 YAHOO.util.Event.onAvailable('layout-'+client_id, function() {",
          "748:                     layout = new YAHOO.widget.Layout('layout-'+client_id, {",
          "749:                         height: 480, width: 700,",
          "750:                         units: [",
          "751:                         {position: 'top', height: 32, resize: false,",
          "752:                         body:'<div class=\"yui-buttongroup fp-viewbar\" id=\"fp-viewbar-'+client_id+'\"></div><div class=\"fp-searchbar\" id=\"search-div-'+client_id+'\"></div>', gutter: '2'},",
          "753:                         {position: 'left', width: 200, resize: true, scroll:true,",
          "754:                         body:'<ul class=\"fp-list\" id=\"fp-list-'+client_id+'\"></ul>', gutter: '0 5 0 2', minWidth: 150, maxWidth: 300 },",
          "755:                         {position: 'center', body: '<div class=\"fp-panel\" id=\"panel-'+client_id+'\"></div>',",
          "756:                         scroll: true, gutter: '0 2 0 0' }",
          "757:                         ]",
          "758:                     });",
          "759:                     layout.render();",
          "760:                     scope.show_recent_repository();",
          "761:                 });",
          "764:             this.mainui.setHeader(M.str.repository.filepicker);",
          "765:             this.mainui.setBody('<div id=\"layout-'+client_id+'\"></div>');",
          "766:             this.mainui.render();",
          "767:             this.rendered = true;",
          "769:             var scope = this;",
          "771:             var view_icons = {label: M.str.repository.iconview, value: 't', 'checked': true,",
          "772:                 onclick: {",
          "773:                     fn: function(e){",
          "774:                         e.preventDefault();",
          "775:                         scope.viewmode = 1;",
          "776:                         scope.view_files();",
          "777:                     }",
          "778:                 }",
          "779:             };",
          "780:             var view_listing = {label: M.str.repository.listview, value: 'l',",
          "781:                 onclick: {",
          "782:                     fn: function(e){",
          "783:                         e.preventDefault();",
          "784:                         scope.viewmode = 2;",
          "785:                         scope.view_files();",
          "786:                     }",
          "787:                 }",
          "788:             };",
          "789:             this.viewbar = new YAHOO.widget.ButtonGroup({",
          "790:                 id: 'btngroup-'+client_id,",
          "791:                 name: 'buttons',",
          "792:                 disabled: true,",
          "793:                 container: 'fp-viewbar-'+client_id",
          "794:             });",
          "795:             this.viewbar.addButtons([view_icons, view_listing]);",
          "797:             var r = this.options.repositories;",
          "798:             Y.on('contentready', function(el) {",
          "799:                 var list = Y.one(el);",
          "800:                 var count = 0;",
          "802:                 var sorted_repositories = new Array();",
          "803:                 for (var i in r) {",
          "804:                     sorted_repositories[r[i].sortorder - 1] = r[i];",
          "805:                 }",
          "806:                 for (var i in sorted_repositories){",
          "807:                     repository = sorted_repositories[i];",
          "808:                     var id = 'repository-'+client_id+'-'+repository.id;",
          "809:                     var link_id = id + '-link';",
          "810:                     list.append('<li id=\"'+id+'\"><a class=\"fp-repo-name\" id=\"'+link_id+'\" href=\"###\">'+repository.name+'</a></li>');",
          "811:                     Y.one('#'+link_id).prepend('<img src=\"'+repository.icon+'\" width=\"16\" height=\"16\" />&nbsp;');",
          "812:                     Y.one('#'+link_id).on('click', function(e, scope, repository_id) {",
          "813:                         e.preventDefault();",
          "814:                         YAHOO.util.Cookie.set('recentrepository', repository_id);",
          "815:                         scope.repository_id = repository_id;",
          "816:                         this.list({'repo_id':repository_id});",
          "817:                     }, this /*handler running scope*/, this/*second argument*/, repository.id/*third argument of handler*/);",
          "818:                     count++;",
          "820:                 if (count==0) {",
          "821:                     if (this.options.externallink) {",
          "822:                         list.set('innerHTML', M.str.repository.norepositoriesexternalavailable);",
          "823:                     } else {",
          "824:                         list.set('innerHTML', M.str.repository.norepositoriesavailable);",
          "825:                     }",
          "827:             }, '#fp-list-'+client_id, this /* handler running scope */, '#fp-list-'+client_id /*first argument of handler*/);",
          "",
          "[Added Lines]",
          "660:                 }, false);",
          "662:             var elform = selectnode.one('form');",
          "663:             elform.appendChild(Y.Node.create('<input type=\"hidden\"/>').set('id', 'filesource-'+client_id));",
          "670:             var cancel = selectnode.one('#fp-cancel-'+client_id);",
          "672:                 e.preventDefault();",
          "673:                 this.selectui.hide();",
          "676:         wait: function() {",
          "677:             this.fpnode.one('.fp-content').setContent(M.core_filepicker.templates.loading);",
          "678:         },",
          "679:         viewbar_set_enabled: function(mode) {",
          "680:             var viewbar = this.fpnode.one('.fp-viewbar')",
          "681:             if (viewbar) {",
          "682:                 if (mode) {",
          "683:                     viewbar.addClass('enabled').removeClass('disabled')",
          "684:                 } else {",
          "685:                     viewbar.removeClass('enabled').addClass('disabled')",
          "686:                 }",
          "688:             this.fpnode.all('.fp-vb-icons,.fp-vb-tree,.fp-vb-details').removeClass('checked')",
          "689:             var modes = {1:'icons', 2:'tree', 3:'details'};",
          "690:             this.fpnode.all('.fp-vb-'+modes[this.viewmode]).addClass('checked');",
          "691:         },",
          "692:         viewbar_clicked: function(e) {",
          "693:             e.preventDefault();",
          "694:             var viewbar = this.fpnode.one('.fp-viewbar')",
          "695:             if (!viewbar || !viewbar.hasClass('disabled')) {",
          "696:                 if (e.currentTarget.hasClass('fp-vb-tree')) {",
          "697:                     this.viewmode = 2;",
          "698:                 } else if (e.currentTarget.hasClass('fp-vb-details')) {",
          "699:                     this.viewmode = 3;",
          "700:                 } else {",
          "701:                     this.viewmode = 1;",
          "702:                 }",
          "703:                 this.viewbar_set_enabled(true)",
          "704:                 this.view_files();",
          "705:                 Y.Cookie.set('recentviewmode', this.viewmode);",
          "710:             var nodecontent = M.core_filepicker.templates.generallayout.",
          "711:                 replace(/\\{TOOLBARID}/g, 'fp-tb-'+client_id).",
          "712:                 replace(/\\{TOOLBACKID}/g, 'fp-tb-back-'+client_id).",
          "713:                 replace(/\\{TOOLSEARCHID}/g, 'fp-tb-search-'+client_id).",
          "714:                 replace(/\\{TOOLREFRESHID}/g, 'fp-tb-refresh-'+client_id).",
          "715:                 replace(/\\{TOOLLOGOUTID}/g, 'fp-tb-logout-'+client_id).",
          "716:                 replace(/\\{TOOLMANAGEID}/g, 'fp-tb-manage-'+client_id).",
          "717:                 replace(/\\{TOOLHELPID}/g, 'fp-tb-help-'+client_id);",
          "718:             this.fpnode = Y.Node.create(nodecontent);",
          "719:             this.fpnode.set('id', 'filepicker-'+client_id);",
          "720:             var fpselectnode = Y.Node.create(M.core_filepicker.templates.selectlayout.",
          "721:                 replace(/\\{IMGID}/g, 'img-'+client_id).",
          "722:                 replace(/\\{NEWNAMEID}/g, 'newname-'+client_id).",
          "723:                 replace(/\\{LINKEXTID}/g, 'linkexternal-'+client_id).",
          "724:                 replace(/\\{AUTHORID}/g, 'text-author-'+client_id).",
          "725:                 replace(/\\{LICENSEID}/g, 'select-license-'+client_id).",
          "726:                 replace(/\\{BUTCONFIRMID}/g, 'fp-confirm-'+client_id).",
          "727:                 replace(/\\{BUTCANCELID}/g, 'fp-cancel-'+client_id)",
          "728:                 );",
          "729:             Y.one(document.body).appendChild(this.fpnode);",
          "730:             this.fpnode.appendChild(fpselectnode);",
          "731:             this.mainui = new Y.Panel({",
          "732:                 srcNode      : this.fpnode,",
          "733:                 headerContent: M.str.repository.filepicker,",
          "734:                 zIndex       : 500000,",
          "735:                 centered     : true,",
          "736:                 modal        : true,",
          "737:                 visible      : false,",
          "738:                 render       : true,",
          "739:                 plugins      : [Y.Plugin.Drag]",
          "741:             this.mainui.show();",
          "742:             this.selectui = new Y.Panel({",
          "743:                 srcNode      : fpselectnode,",
          "744:                 zIndex       : 600000,",
          "745:                 centered     : true,",
          "746:                 modal        : true,",
          "747:                 close        : true,",
          "748:                 render       : true",
          "750:             this.selectui.hide();",
          "752:             if (this.fpnode.one('.fp-path-folder')) {",
          "753:                 this.pathnode = this.fpnode.one('.fp-path-folder');",
          "754:                 this.pathbar = this.pathnode.get('parentNode');",
          "755:                 this.pathbar.removeChild(this.pathnode);",
          "756:             }",
          "758:             this.fpnode.all('.fp-vb-icons,.fp-vb-tree,.fp-vb-details').",
          "759:                 on('click', this.viewbar_clicked, this);",
          "761:             this.setup_toolbar();",
          "762:             this.setup_select_file();",
          "766:             var sorted_repositories = []",
          "767:             for (var i in this.options.repositories) {",
          "768:                 sorted_repositories[i] = this.options.repositories[i]",
          "769:             }",
          "770:             sorted_repositories.sort(function(a,b){return a.sortorder-b.sortorder})",
          "773:             var reponode = this.fpnode.one('.fp-repo');",
          "774:             if (reponode) {",
          "775:                 var list = reponode.get('parentNode');",
          "776:                 list.removeChild(reponode);",
          "777:                 for (i in sorted_repositories) {",
          "778:                     var repository = sorted_repositories[i]",
          "779:                     var node = reponode.cloneNode(true);",
          "780:                     list.appendChild(node);",
          "781:                     node.",
          "782:                         set('id', 'fp-repo-'+client_id+'-'+repository.id).",
          "783:                         on('click', function(e, repository_id) {",
          "784:                             e.preventDefault();",
          "785:                             Y.Cookie.set('recentrepository', repository_id);",
          "786:                             this.hide_header();",
          "787:                             this.list({'repo_id':repository_id});",
          "788:                         }, this /*handler running scope*/, repository.id/*second argument of handler*/);",
          "789:                     node.one('.fp-repo-name').setContent(repository.name)",
          "790:                     node.one('.fp-repo-icon').set('src', repository.icon)",
          "791:                     if (i==0) {node.addClass('first');}",
          "792:                     if (i==sorted_repositories.length-1) {node.addClass('last');}",
          "793:                     if (i%2) {node.addClass('even');} else {node.addClass('odd');}",
          "795:             }",
          "797:             if (sorted_repositories.length==0) {",
          "798:                 if (this.options.externallink) {",
          "799:                     list.set('innerHTML', M.str.repository.norepositoriesexternalavailable); // TODO as error",
          "800:                 } else {",
          "801:                     list.set('innerHTML', M.str.repository.norepositoriesavailable); // TODO as error",
          "803:             }",
          "805:             this.show_recent_repository();",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "835:             this.active_repo.pages = Number(data.pages?data.pages:null);",
          "836:             this.active_repo.page = Number(data.page?data.page:null);",
          "837:             this.active_repo.id = data.repo_id?data.repo_id:null;",
          "841:             this.active_repo.logouttext = data.logouttext?data.logouttext:null;",
          "842:             this.active_repo.help = data.help?data.help:null;",
          "843:             this.active_repo.manage = data.manage?data.manage:null;",
          "844:         },",
          "845:         print_login: function(data) {",
          "846:             this.parse_repository_options(data);",
          "847:             var client_id = this.options.client_id;",
          "848:             var repository_id = data.repo_id;",
          "849:             var l = this.logindata = data.login;",
          "850:             var loginurl = '';",
          "852:             var action = 'login';",
          "853:             if (data['login_btn_action']) {",
          "854:                 action=data['login_btn_action'];",
          "",
          "[Removed Lines]",
          "838:             this.active_repo.nosearch = data.nosearch?true:false;",
          "839:             this.active_repo.norefresh = data.norefresh?true:false;",
          "840:             this.active_repo.nologin = data.nologin?true:false;",
          "851:             var panel = Y.one('#panel-'+client_id);",
          "",
          "[Added Lines]",
          "816:             this.active_repo.nosearch = (data.login || data.nosearch); // this is either login form or 'nosearch' attribute set",
          "817:             this.active_repo.norefresh = (data.login || data.norefresh); // this is either login form or 'norefresh' attribute set",
          "818:             this.active_repo.nologin = (data.login || data.nologin); // this is either login form or 'nologin' attribute is set",
          "822:             this.print_header();",
          "831:             var panel = this.fpnode.one('.fp-content');",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "970:                         }",
          "971:                     }",
          "973:                     this.request({",
          "974:                         'params': params,",
          "975:                         'scope': scope,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "953:                     this.hide_header();",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1005:                             }",
          "1006:                         }",
          "1007:                     }",
          "1008:                     this.request({",
          "1009:                             scope: scope,",
          "1010:                             action:'search',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "989:                     this.hide_header();",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1048:         display_response: function(id, obj, args) {",
          "1049:             var scope = args.scope",
          "1057:             if (obj.login) {",
          "1059:                 scope.print_login(obj);",
          "1060:             } else if (obj.upload) {",
          "1062:                 scope.parse_repository_options(obj);",
          "1063:                 scope.create_upload_form(obj);",
          "1064:             } else if (obj.iframe) {",
          "1066:             } else if (obj.list) {",
          "1068:                 scope.parse_repository_options(obj);",
          "1069:                 scope.view_files();",
          "1070:             }",
          "",
          "[Removed Lines]",
          "1051:             Y.all('#fp-list-'+scope.options.client_id+' li a').setStyle('backgroundColor', 'transparent');",
          "1052:             var el = Y.one('#repository-'+scope.options.client_id+'-'+obj.repo_id+'-link');",
          "1053:             if (el) {",
          "1054:                 el.setStyle('backgroundColor', '#AACCEE');",
          "1055:             }",
          "1058:                 scope.viewbar.set('disabled', true);",
          "1061:                 scope.viewbar.set('disabled', true);",
          "1067:                 scope.viewbar.set('disabled', false);",
          "",
          "[Added Lines]",
          "1033:             scope.fpnode.all('.fp-repo.active').removeClass('active');",
          "1034:             scope.fpnode.all('#fp-repo-'+scope.options.client_id+'-'+obj.repo_id).addClass('active')",
          "1037:                 scope.viewbar_set_enabled(false);",
          "1040:                 scope.viewbar_set_enabled(false);",
          "1046:                 scope.viewbar_set_enabled(true);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1086:                 callback: this.display_response",
          "1087:             }, true);",
          "1088:         },",
          "1107:             }",
          "1115:             var licenses = this.options.licenses;",
          "1118:             if (recentlicense) {",
          "1119:                 this.options.defaultlicense=recentlicense;",
          "1120:             }",
          "1121:             for (var i in licenses) {",
          "1128:             }",
          "1137:             var scope = this;",
          "1138:             Y.one('#'+id+'_action').on('click', function(e) {",
          "1139:                 e.preventDefault();",
          "1142:                 if (!Y.one('#'+id+'_file').get('value')) {",
          "1143:                     scope.print_msg(M.str.repository.nofilesattached, 'error');",
          "1144:                     return false;",
          "1145:                 }",
          "1146:                 scope.request({",
          "1147:                         scope: scope,",
          "1148:                         action:'upload',",
          "",
          "[Removed Lines]",
          "1089:         create_upload_form: function(data) {",
          "1090:             var client_id = this.options.client_id;",
          "1091:             Y.one('#panel-'+client_id).set('innerHTML', '');",
          "1092:             var types = this.options.accepted_types;",
          "1094:             this.print_header();",
          "1095:             var id = data.upload.id+'_'+client_id;",
          "1096:             var str = '<div id=\"'+id+'_div\" class=\"fp-upload-form mdl-align\">';",
          "1097:             str += '<form id=\"'+id+'\" enctype=\"multipart/form-data\" method=\"POST\">';",
          "1098:             str += '<table width=\"100%\">';",
          "1099:             str += '<tr><td class=\"mdl-right\">';",
          "1100:             str += '<label for=\"'+id+'_file\">'+data.upload.label+': </label></td>';",
          "1101:             str += '<td class=\"mdl-left\"><input type=\"file\" id=\"'+id+'_file\" name=\"repo_upload_file\" />';",
          "1102:             str += '<tr><td class=\"mdl-right\"><label for=\"newname-'+client_id+'\">'+M.str.repository.saveas+':</label></td>';",
          "1103:             str += '<td class=\"mdl-left\"><input type=\"text\" name=\"title\" id=\"newname-'+client_id+'\" value=\"\" /></td></tr>';",
          "1104:             str += '<input type=\"hidden\" name=\"itemid\" value=\"'+this.options.itemid+'\" />';",
          "1105:             for (var i in types) {",
          "1106:                 str += '<input type=\"hidden\" name=\"accepted_types[]\" value=\"'+types[i]+'\" />';",
          "1108:             str += '</td></tr><tr>';",
          "1109:             str += '<td class=\"mdl-right\"><label>'+M.str.repository.author+': </label></td>';",
          "1110:             str += '<td class=\"mdl-left\"><input type=\"text\" name=\"author\" value=\"'+this.options.author+'\" /></td>';",
          "1111:             str += '</tr>';",
          "1112:             str += '<tr>';",
          "1113:             str += '<td class=\"mdl-right\">'+M.str.repository.chooselicense+': </td>';",
          "1114:             str += '<td class=\"mdl-left\">';",
          "1116:             str += '<select name=\"license\" id=\"select-license-'+client_id+'\">';",
          "1117:             var recentlicense = YAHOO.util.Cookie.get('recentlicense');",
          "1122:                 if (this.options.defaultlicense==licenses[i].shortname) {",
          "1123:                     var selected = ' selected';",
          "1124:                 } else {",
          "1125:                     var selected = '';",
          "1126:                 }",
          "1127:                 str += '<option value=\"'+licenses[i].shortname+'\"'+selected+'>'+licenses[i].fullname+'</option>';",
          "1129:             str += '</select>';",
          "1130:             str += '</td>';",
          "1131:             str += '</tr></table>';",
          "1132:             str += '</form>';",
          "1133:             str += '<div class=\"fp-upload-btn\"><button id=\"'+id+'_action\">'+M.str.repository.upload+'</button></div>';",
          "1134:             str += '</div>';",
          "1135:             var upload_form = Y.Node.create(str);",
          "1136:             Y.one('#panel-'+client_id).appendChild(upload_form);",
          "1140:                 var license = Y.one('#select-license-'+client_id).get('value');",
          "1141:                 YAHOO.util.Cookie.set('recentlicense', license);",
          "",
          "[Added Lines]",
          "1068:         populate_licenses_select: function(node) {",
          "1069:             if (!node) {",
          "1070:                 return;",
          "1072:             node.setContent('');",
          "1074:             var recentlicense = Y.Cookie.get('recentlicense');",
          "1079:                 var option = Y.Node.create('<option/>').",
          "1080:                     set('selected', (this.options.defaultlicense==licenses[i].shortname)).",
          "1081:                     set('value', licenses[i].shortname).",
          "1082:                     setContent(licenses[i].fullname);",
          "1083:                 node.appendChild(option)",
          "1085:         },",
          "1086:         create_upload_form: function(data) {",
          "1087:             var client_id = this.options.client_id;",
          "1088:             var id = data.upload.id+'_'+client_id;",
          "1089:             var str = M.core_filepicker.templates.uploadform.",
          "1090:                 replace(/\\{UPLOADFORMID}/g, id).",
          "1091:                 replace(/\\{INPUTFILEID}/g, id+'_file').",
          "1092:                 replace(/\\{NEWNAMEID}/g, 'newname-'+client_id).",
          "1093:                 replace(/\\{AUTHORID}/g, 'author-'+client_id).",
          "1094:                 replace(/\\{LICENSEID}/g, 'license-'+client_id).",
          "1095:                 replace(/\\{BUTUPLOADID}/g, id+'_action');",
          "1096:             this.fpnode.one('.fp-content').setContent(str);",
          "1098:             Y.all('#'+id+'_file').set('name', 'repo_upload_file');",
          "1099:             Y.all('#'+'newname-'+client_id).set('name', 'title');",
          "1100:             Y.all('#'+'author-'+client_id).set('name', 'author');",
          "1101:             Y.all('#'+'author-'+client_id).set('value', this.options.author);",
          "1102:             Y.all('#'+'license-'+client_id).set('name', 'license');",
          "1103:             this.populate_licenses_select(Y.one('#'+'license-'+client_id))",
          "1104:             Y.one('#'+id).append('<input type=\"hidden\" name=\"itemid\" value=\"'+this.options.itemid+'\" />'); // TODO nicer!",
          "1105:             var types = this.options.accepted_types;",
          "1106:             for (var i in types) {",
          "1107:                 Y.one('#'+id).append('<input type=\"hidden\" name=\"accepted_types[]\" value=\"'+types[i]+'\" />'); // TODO nicer!",
          "1108:             }",
          "1113:                 var license = Y.one('#license-'+client_id);",
          "1114:                 Y.Cookie.set('recentlicense', license.get('value'));",
          "1119:                 this.hide_header();",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1171:                 }, true);",
          "1172:             }, this);",
          "1173:         },",
          "1177:             var client_id = this.options.client_id;",
          "1195:                     e.preventDefault();",
          "1271:                         }",
          "1275:             }",
          "1286:             if(!r.nologin) {",
          "1287:                 var label = r.logouttext?r.logouttext:M.str.repository.logout;",
          "1301:             }",
          "1318:             this.print_path();",
          "1319:         },",
          "",
          "[Removed Lines]",
          "1174:         print_header: function() {",
          "1175:             var r = this.active_repo;",
          "1176:             var scope = this;",
          "1178:             var repository_id = this.active_repo.id;",
          "1179:             var panel = Y.one('#panel-'+client_id);",
          "1180:             var str = '<div id=\"fp-header-'+client_id+'\">';",
          "1181:             str += '<div class=\"fp-toolbar\" id=\"repo-tb-'+client_id+'\"></div>';",
          "1182:             str += '</div>';",
          "1183:             var head = Y.Node.create(str);",
          "1184:             panel.appendChild(head);",
          "1186:                 this.print_paging('header');",
          "1189:             var toolbar = Y.one('#repo-tb-'+client_id);",
          "1191:             if(!r.nosearch) {",
          "1192:                 var html = '<a href=\"###\"><img src=\"'+M.util.image_url('a/search')+'\" /> '+M.str.repository.search+'</a>';",
          "1193:                 var search = Y.Node.create(html);",
          "1194:                 search.on('click', function(e) {",
          "1196:                     scope.request({",
          "1197:                         scope: scope,",
          "1198:                         action:'searchform',",
          "1199:                         repository_id: repository_id,",
          "1200:                         callback: function(id, obj, args) {",
          "1201:                             var scope = args.scope;",
          "1202:                             var client_id = scope.options.client_id;",
          "1203:                             var repository_id = scope.active_repo.id;",
          "1204:                             var container = document.getElementById('fp-search-dlg');",
          "1205:                             if(container) {",
          "1206:                                 container.innerHTML = '';",
          "1207:                                 container.parentNode.removeChild(container);",
          "1208:                             }",
          "1209:                             var container = document.createElement('DIV');",
          "1210:                             container.id = 'fp-search-dlg';",
          "1212:                             var dlg_title = document.createElement('DIV');",
          "1213:                             dlg_title.className = 'hd';",
          "1214:                             dlg_title.innerHTML = M.str.repository.search;",
          "1216:                             var dlg_body = document.createElement('DIV');",
          "1217:                             dlg_body.className = 'bd';",
          "1219:                             var sform = document.createElement('FORM');",
          "1220:                             sform.method = 'POST';",
          "1221:                             sform.id = \"fp-search-form\";",
          "1222:                             sform.innerHTML = obj.form;",
          "1224:                             dlg_body.appendChild(sform);",
          "1225:                             container.appendChild(dlg_title);",
          "1226:                             container.appendChild(dlg_body);",
          "1227:                             Y.one(document.body).appendChild(container);",
          "1228:                             var search_dialog= null;",
          "1229:                             function dialog_handler() {",
          "1230:                                 scope.viewbar.set('disabled', false);",
          "1231:                                 scope.request({",
          "1232:                                         scope: scope,",
          "1233:                                         action:'search',",
          "1234:                                         client_id: client_id,",
          "1235:                                         repository_id: repository_id,",
          "1236:                                         form: {id: 'fp-search-form',upload:false,useDisabled:true},",
          "1237:                                         callback: scope.display_response",
          "1238:                                 }, true);",
          "1239:                                 search_dialog.cancel();",
          "1240:                             }",
          "1241:                             Y.one('#fp-search-form').on('keydown', function(e){",
          "1242:                                 if (e.keyCode == 13) {",
          "1243:                                     dialog_handler();",
          "1244:                                     e.preventDefault();",
          "1245:                                 }",
          "1246:                             }, this);",
          "1248:                             search_dialog = new YAHOO.widget.Dialog(\"fp-search-dlg\", {",
          "1249:                                postmethod: 'async',",
          "1250:                                draggable: true,",
          "1251:                                width : \"30em\",",
          "1252:                                modal: true,",
          "1253:                                fixedcenter : true,",
          "1254:                                zindex: 9999991,",
          "1255:                                visible : false,",
          "1256:                                constraintoviewport : true,",
          "1257:                                buttons: [",
          "1258:                                {",
          "1259:                                    text:M.str.repository.submit,",
          "1260:                                    handler:dialog_handler,",
          "1261:                                    isDefault:true",
          "1262:                                }, {",
          "1263:                                    text:M.str.moodle.cancel,",
          "1264:                                    handler:function(){",
          "1265:                                        this.destroy()",
          "1266:                                    }",
          "1267:                                }]",
          "1268:                             });",
          "1269:                             search_dialog.render();",
          "1270:                             search_dialog.show();",
          "1272:                     });",
          "1273:                 },this);",
          "1274:                 toolbar.appendChild(search);",
          "1277:             if(!r.norefresh) {",
          "1278:                 var html = '<a href=\"###\"><img src=\"'+M.util.image_url('a/refresh')+'\" /> '+M.str.repository.refresh+'</a>';",
          "1279:                 var refresh = Y.Node.create(html);",
          "1280:                 refresh.on('click', function(e) {",
          "1281:                     e.preventDefault();",
          "1282:                     this.list();",
          "1283:                 }, this);",
          "1284:                 toolbar.appendChild(refresh);",
          "1285:             }",
          "1288:                 var html = '<a href=\"###\"><img src=\"'+M.util.image_url('a/logout')+'\" /> '+label+'</a>';",
          "1289:                 var logout = Y.Node.create(html);",
          "1290:                 logout.on('click', function(e) {",
          "1291:                     e.preventDefault();",
          "1292:                     this.request({",
          "1293:                         action:'logout',",
          "1294:                         client_id: client_id,",
          "1295:                         repository_id: repository_id,",
          "1296:                         path:'',",
          "1297:                         callback: this.display_response",
          "1298:                     }, true);",
          "1299:                 }, this);",
          "1300:                 toolbar.appendChild(logout);",
          "1303:             if(r.manage) {",
          "1304:                 var mgr = document.createElement('A');",
          "1305:                 mgr.href = r.manage;",
          "1306:                 mgr.target = \"_blank\";",
          "1307:                 mgr.innerHTML = '<img src=\"'+M.util.image_url('a/setting')+'\" /> '+M.str.repository.manageurl;",
          "1308:                 toolbar.appendChild(mgr);",
          "1309:             }",
          "1310:             if(r.help) {",
          "1311:                 var help = document.createElement('A');",
          "1312:                 help.href = r.help;",
          "1313:                 help.target = \"_blank\";",
          "1314:                 help.innerHTML = '<img src=\"'+M.util.image_url('a/help')+'\" /> '+M.str.repository.help;",
          "1315:                 toolbar.appendChild(help);",
          "1316:             }",
          "",
          "[Added Lines]",
          "1149:         setup_toolbar: function() {",
          "1151:             Y.one('#fp-tb-logout-'+client_id).on('click', function(e) {",
          "1152:                 e.preventDefault();",
          "1153:                 if (!this.active_repo.nologin) {",
          "1154:                     this.hide_header();",
          "1155:                     this.request({",
          "1156:                         action:'logout',",
          "1157:                         client_id: this.options.client_id,",
          "1158:                         repository_id: this.active_repo.id,",
          "1159:                         path:'',",
          "1160:                         callback: this.display_response",
          "1161:                     }, true);",
          "1162:                 }",
          "1163:             }, this);",
          "1164:             Y.one('#fp-tb-refresh-'+client_id).on('click', function(e) {",
          "1165:                 e.preventDefault();",
          "1166:                 if (!this.active_repo.norefresh) {",
          "1167:                     this.list();",
          "1168:                 }",
          "1169:             }, this);",
          "1170:             Y.one('#fp-tb-search-'+client_id).",
          "1171:                 set('method', 'POST').",
          "1172:                 on('submit', function(e) {",
          "1174:                     if (!this.active_repo.nosearch) {",
          "1175:                         this.request({",
          "1176:                             scope: this,",
          "1177:                             action:'search',",
          "1178:                             client_id: this.options.client_id,",
          "1179:                             repository_id: this.active_repo.id,",
          "1180:                             form: {id: 'fp-tb-search-'+client_id, upload:false, useDisabled:true},",
          "1181:                             callback: this.display_response",
          "1182:                         }, true);",
          "1183:                     }",
          "1184:                 }, this);",
          "1188:             var managelnk = Y.Node.create('<a/>');",
          "1189:             managelnk.set('id', 'fp-tb-manage-'+client_id+'-link').set('target', '_blank').setStyle('display', 'none');",
          "1190:             Y.one('#fp-tb-'+client_id).append(managelnk);",
          "1191:             Y.one('#fp-tb-manage-'+client_id).on('click', function(e) {",
          "1192:                 e.preventDefault();",
          "1193:                 managelnk.simulate('click')",
          "1194:             });",
          "1197:             var helplnk = Y.Node.create('<a/>');",
          "1198:             helplnk.set('id', 'fp-tb-help-'+client_id+'-link').set('target', '_blank').setStyle('display', 'none');",
          "1199:             Y.one('#fp-tb-'+client_id).append(helplnk);",
          "1200:             Y.one('#fp-tb-help-'+client_id).on('click', function(e) {",
          "1201:                 e.preventDefault();",
          "1202:                 helplnk.simulate('click')",
          "1203:             });",
          "1204:         },",
          "1205:         hide_header: function() {",
          "1206:             var client_id = this.options.client_id;",
          "1207:             if (Y.one('#fp-tb-'+client_id)) {",
          "1208:                 Y.one('#fp-tb-'+client_id).addClass('empty');",
          "1209:             }",
          "1210:         },",
          "1211:         print_header: function() {",
          "1212:             var r = this.active_repo;",
          "1213:             var scope = this;",
          "1214:             var client_id = this.options.client_id;",
          "1215:             this.print_paging();",
          "1217:             this.hide_header();",
          "1218:             var enable_tb_control = function(elementid, enabled) {",
          "1219:                 if (!enabled) {",
          "1220:                     Y.all('#'+elementid+',#wrap-'+elementid).addClass('disabled').removeClass('enabled')",
          "1221:                 } else {",
          "1222:                     Y.all('#'+elementid+',#wrap-'+elementid).removeClass('disabled').addClass('enabled')",
          "1223:                     Y.one('#fp-tb-'+client_id).removeClass('empty');",
          "1224:                 }",
          "1225:             }",
          "1228:             enable_tb_control('fp-tb-back-'+client_id, false);",
          "1231:             enable_tb_control('fp-tb-search-'+client_id, !r.nosearch);",
          "1232:             if(!r.nosearch) {",
          "1233:                 Y.all('#fp-tb-search-'+client_id).setContent('');",
          "1234:                 this.request({",
          "1235:                     scope: this,",
          "1236:                     action:'searchform',",
          "1237:                     repository_id: this.active_repo.id,",
          "1238:                     callback: function(id, obj, args) {",
          "1239:                         if (obj.repo_id == scope.active_repo.id && obj.form) {",
          "1241:                             Y.all('#fp-tb-search-'+scope.options.client_id).setContent(obj.form);",
          "1243:                     }",
          "1244:                 }, false);",
          "1249:             enable_tb_control('fp-tb-refresh-'+client_id, !r.norefresh);",
          "1252:             enable_tb_control('fp-tb-logout-'+client_id, !r.nologin);",
          "1255:                 Y.one('#fp-tb-logout-'+client_id).setContent(label)",
          "1259:             enable_tb_control('fp-tb-manage-'+client_id, r.manage);",
          "1260:             Y.one('#fp-tb-manage-'+client_id+'-link').set('href', r.manage);",
          "1263:             enable_tb_control('fp-tb-help-'+client_id, r.help);",
          "1264:             Y.one('#fp-tb-help-'+client_id+'-link').set('href', r.help);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1339:                 lastpagetext = M.str.moodle.next;",
          "1340:             }",
          "1341:             if (lastpage > 1) {",
          "1343:                 str += this.get_page_button(1)+'1</a> ';",
          "1345:                 var span = 5;",
          "",
          "[Removed Lines]",
          "1342:                 str += '<div class=\"fp-paging\" id=\"paging-'+html_id+'-'+client_id+'\">';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1379:                     str += this.get_page_button(max)+max+'</a>';",
          "1380:                     str += ' ... '+this.get_page_button(lastpage)+lastpagetext+'</a>';",
          "1381:                 }",
          "1383:             }",
          "1391:                             e.preventDefault();",
          "1393:                             var re = new RegExp(\"repo-page-(\\\\d+)\", \"i\");",
          "1394:                             var result = id.match(re);",
          "1395:                             var args = {};",
          "",
          "[Removed Lines]",
          "1382:                 str += '</div>';",
          "1384:             if (str) {",
          "1385:                 var a = Y.Node.create(str);",
          "1386:                 Y.one('#fp-header-'+client_id).appendChild(a);",
          "1388:                 Y.all('#fp-header-'+client_id+' .fp-paging a').each(",
          "1389:                     function(node, id) {",
          "1390:                         node.on('click', function(e) {",
          "1392:                             var id = node.get('id');",
          "",
          "[Added Lines]",
          "1331:             this.fpnode.one('.fp-paging').setContent(str);",
          "1332:             this.fpnode.all('.fp-paging a').on('click', function(e) {",
          "1334:                             var id = e.currentTarget.get('id');",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1408:                                 scope.list(args);",
          "1409:                             }",
          "1410:                         });",
          "1413:         },",
          "1414:         print_path: function() {",
          "1417:             var p = this.filepath;",
          "1418:             if (p && p.length!=0) {",
          "1421:                 for(var i = 0; i < p.length; i++) {",
          "1434:                 }",
          "1435:             }",
          "1436:         },",
          "1437:         hide: function() {",
          "1438:             this.mainui.hide();",
          "1439:         },",
          "1440:         show: function() {",
          "1444:                 this.mainui.show();",
          "1445:                 this.show_recent_repository();",
          "1446:             } else {",
          "",
          "[Removed Lines]",
          "1411:                     });",
          "1412:             }",
          "1415:             var client_id = this.options.client_id;",
          "1416:             var panel = Y.one('#panel-'+client_id);",
          "1419:                 var path = Y.Node.create('<div id=\"path-'+client_id+'\" class=\"fp-pathbar\"></div>');",
          "1420:                 panel.appendChild(path);",
          "1422:                     var link_path = p[i].path;",
          "1423:                     var link = document.createElement('A');",
          "1424:                     link.href = \"###\";",
          "1425:                     link.innerHTML = p[i].name;",
          "1426:                     link.id = 'path-node-'+client_id+'-'+i;",
          "1427:                     var sep = Y.Node.create('<span>/</span>');",
          "1428:                     path.appendChild(link);",
          "1429:                     path.appendChild(sep);",
          "1430:                     Y.one('#'+link.id).on('click', function(e, path){",
          "1431:                         e.preventDefault();",
          "1432:                         this.list({'path':path});",
          "1433:                         }, this, link_path)",
          "1441:             if (this.rendered) {",
          "1442:                 var panel = Y.one('#panel-'+this.options.client_id);",
          "1443:                 panel.set('innerHTML', '');",
          "",
          "[Added Lines]",
          "1355:             if (!this.pathbar) { return; }",
          "1356:             this.pathbar.setContent('');",
          "1360:                     var el = this.pathnode.cloneNode(true);",
          "1361:                     this.pathbar.appendChild(el);",
          "1362:                     if (i == 0) {el.addClass('first');}",
          "1363:                     if (i == p.length-1) {el.addClass('last');}",
          "1364:                     if (i%2) {el.addClass('even');} else {el.addClass('odd');}",
          "1365:                     el.all('.fp-path-folder-name').setContent(p[i].name);",
          "1366:                     el.on('click',",
          "1367:                             function(e, path) {",
          "1368:                                 e.preventDefault();",
          "1369:                                 this.list({'path':path});",
          "1370:                             },",
          "1371:                         this, p[i].path);",
          "1373:                 this.pathbar.removeClass('empty');",
          "1374:             } else {",
          "1375:                 this.pathbar.addClass('empty');",
          "1379:             this.selectui.hide();",
          "1380:             if (this.process_dlg) {",
          "1381:                 this.process_dlg.hide();",
          "1382:             }",
          "1383:             if (this.msg_dlg) {",
          "1384:                 this.msg_dlg.hide();",
          "1385:             }",
          "1389:             if (this.fpnode) {",
          "1390:                 this.hide();",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1451:             this.render();",
          "1452:         },",
          "1453:         show_recent_repository: function() {",
          "1455:             if (this.options.repositories[repository_id]) {",
          "1456:                 this.list({'repo_id':repository_id});",
          "1457:             }",
          "",
          "[Removed Lines]",
          "1454:             var repository_id = YAHOO.util.Cookie.get('recentrepository');",
          "",
          "[Added Lines]",
          "1401:             this.hide_header();",
          "1402:             this.viewbar_set_enabled(false);",
          "1403:             var repository_id = Y.Cookie.get('recentrepository');",
          "1404:             this.viewmode = Y.Cookie.get('recentviewmode', Number);",
          "1405:             if (this.viewmode != 1 && this.viewmode != 2 && this.viewmode != 3) {",
          "1406:                 this.viewmode = 1;",
          "1407:             }",
          "",
          "---------------"
        ],
        "repository/lib.php||repository/lib.php": [
          "File: repository/lib.php -> repository/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1829:     public function print_search() {",
          "1836:     }",
          "",
          "[Removed Lines]",
          "1830:         $str = '';",
          "1831:         $str .= '<input type=\"hidden\" name=\"repo_id\" value=\"'.$this->id.'\" />';",
          "1832:         $str .= '<input type=\"hidden\" name=\"ctx_id\" value=\"'.$this->context->id.'\" />';",
          "1833:         $str .= '<input type=\"hidden\" name=\"seekey\" value=\"'.sesskey().'\" />';",
          "1834:         $str .= '<label>'.get_string('keyword', 'repository').': </label><br/><input name=\"s\" value=\"\" /><br/>';",
          "1835:         return $str;",
          "",
          "[Added Lines]",
          "1830:         global $PAGE;",
          "1831:         $renderer = $PAGE->get_renderer('core', 'repository');",
          "1832:         return $renderer->repository_default_searchform();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2417:         $return->repositories[$repository->id] = $meta;",
          "2418:     }",
          "2419:     return $return;",
          "2420: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2416:     $fprenderer = $PAGE->get_renderer('core', 'repository');",
          "2417:     $return->templates = $fprenderer->filepicker_templates();",
          "",
          "---------------"
        ],
        "repository/renderer.php||repository/renderer.php": [
          "File: repository/renderer.php -> repository/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: defined('MOODLE_INTERNAL') || die;",
          "33: class core_repository_renderer extends plugin_renderer_base {",
          "79:     public function js_template_generallayout() {",
          "80:         $rv = '",
          "81: <div class=\"file-picker fp-generallayout\">",
          "82:   <div>",
          "83:     <div class=\"{!}fp-viewbar\" style=\"float:none;\">",
          "84:        <span class=\"\"><button class=\"{!}fp-vb-icons\">'.get_string('iconview', 'repository').'</button></span>",
          "85:        <span class=\"\"><button class=\"{!}fp-vb-tree\">'.get_string('listview', 'repository').'</button></span>",
          "86:        <span class=\"\"><button class=\"{!}fp-vb-details\">'.get_string('detailview', 'repository').'</button></span>",
          "87:     </div>",
          "88:   </div>",
          "89:   <div style=\"vertical-align:top;\">",
          "90:     <div style=\"width:200px;height:400px;display:inline-block;overflow:auto;\">",
          "91:       <ul class=\"fp-list\">",
          "92:         <li class=\"{!}fp-repo\"><img class=\"{!}fp-repo-icon\" width=\"16\" height=\"16\" />&nbsp;<span class=\"{!}fp-repo-name\"></span></li>",
          "93:       </ul>",
          "94:     </div>",
          "95:     <div style=\"width:480px;height:400px;display:inline-block;vertical-align:top;\">",
          "96:       <div class=\"fp-toolbar\" id=\"{TOOLBARID}\" style=\"background:yellow\">",
          "97:         <div id=\"wrap-{TOOLBACKID}\"><a id=\"{TOOLBACKID}\">'.get_string('back', 'repository').'</a></div>",
          "98:         <div id=\"wrap-{TOOLSEARCHID}\">",
          "99:           <img src=\"'.$this->pix_url('a/search').'\" />",
          "100:           <form id=\"{TOOLSEARCHID}\"></form>",
          "101:         </div>",
          "102:         <div id=\"wrap-{TOOLREFRESHID}\"><a id=\"{TOOLREFRESHID}\"><img src=\"'.$this->pix_url('a/refresh').'\" />'.get_string('refresh', 'repository').'</a></div>",
          "103:         <div id=\"wrap-{TOOLLOGOUTID}\"><img src=\"'.$this->pix_url('a/logout').'\" /><a id=\"{TOOLLOGOUTID}\"></a></div>",
          "104:         <div id=\"wrap-{TOOLMANAGEID}\"><a id=\"{TOOLMANAGEID}\"><img src=\"'.$this->pix_url('a/setting').'\" /> '.get_string('manageurl', 'repository').'</a></div>",
          "105:         <div id=\"wrap-{TOOLHELPID}\"><a id=\"{TOOLHELPID}\"><img src=\"'.$this->pix_url('a/help').'\" /> '.get_string('help').'</a></div>",
          "106:       </div>",
          "107:       <div class=\"{!}fp-paging\" style=\"background:pink\"></div>",
          "108:       <div class=\"fp-pathbar\" style=\"background:#ddffdd\">",
          "109:         <span class=\"{!}fp-path-folder\"><a class=\"{!}fp-path-folder-name\"></a><span>/</span></span>",
          "110:       </div>",
          "111:       <div class=\"{!}fp-content\"></div>",
          "112:     </div>",
          "113:   </div>",
          "114: </div>';",
          "115:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "116:     }",
          "132:     public function js_template_iconview() {",
          "133:         $rv = '<div class=\"fp-iconview\">",
          "134: <div class=\"{!}fp-file\">",
          "135:     <div class=\"{!}fp-thumbnail\"></div>",
          "136:     <div class=\"{!}fp-filename\"></div>",
          "137: </div>",
          "138:             </div>';",
          "139:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "140:     }",
          "161:     public function js_template_selectlayout() {",
          "162:         $rv = '<div class=\"{!}fp-select\"><form>",
          "163: <p id=\"{IMGID}\"></p>",
          "164: <table width=\"100%\">",
          "165: <tr><td class=\"mdl-right\"><label for=\"{NEWNAMEID}\">'.get_string('saveas', 'repository').'</label>:</td>",
          "166: <td class=\"mdl-left\"><input type=\"text\" id=\"{NEWNAMEID}\" /></td></tr>",
          "167: <tr id=\"wrap-{LINKEXTID}\"><td></td>",
          "168: <td class=\"mdl-left\"><input type=\"checkbox\" id=\"{LINKEXTID}\" value=\"\" /><label for=\"{LINKEXTID}\">'.get_string('linkexternal', 'repository').'</label></td></tr>",
          "169: <tr id=\"wrap-{AUTHORID}\"><td class=\"mdl-right\"><label for=\"{AUTHORID}\">'.get_string('author', 'repository').'</label>:</td>",
          "170: <td class=\"mdl-left\"><input id=\"{AUTHORID}\" type=\"text\" /></td></tr>",
          "171: <tr id=\"wrap-{LICENSEID}\"><td class=\"mdl-right\"><label for=\"{LICENSEID}\">'.get_string('chooselicense', 'repository').'</label>:</td>",
          "172: <td class=\"mdl-left\"><select id=\"{LICENSEID}\"></select></td></tr>",
          "173: </table>",
          "174: <p><button id=\"{BUTCONFIRMID}\" >'.get_string('getfile', 'repository').'</button>",
          "175: <button id=\"{BUTCANCELID}\" >'.get_string('cancel').'</button></p>",
          "176: </form></div>';",
          "177:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "178:     }",
          "194:     public function js_template_uploadform() {",
          "195:         return '<div class=\"fp-upload-form mdl-align\">",
          "196: <form id=\"{UPLOADFORMID}\" enctype=\"multipart/form-data\" method=\"POST\">",
          "197:   <table width=\"100%\">",
          "198:     <tr>",
          "199:       <td class=\"mdl-right\"><label for=\"{INPUTFILEID}\">'.get_string('attachment', 'repository').'</label>:</td>",
          "200:       <td class=\"mdl-left\"><input type=\"file\" id=\"{INPUTFILEID}\" /></td>",
          "201:     </tr>",
          "202:     <tr>",
          "203:       <td class=\"mdl-right\"><label for=\"{NEWNAMEID}\">'.get_string('saveas', 'repository').'</label>:</td>",
          "204:       <td class=\"mdl-left\"><input type=\"text\" id=\"{NEWNAMEID}\" /></td>",
          "205:     </tr>",
          "206:     <tr>",
          "207:       <td class=\"mdl-right\"><label for=\"{AUTHORID}\">'.get_string('author', 'repository').'</label>:</td>",
          "208:       <td class=\"mdl-left\"><input type=\"text\" id=\"{AUTHORID}\" /></td>",
          "209:     </tr>",
          "210:     <tr>",
          "211:       <td class=\"mdl-right\"><label for=\"{LICENSEID}\">'.get_string('chooselicense', 'repository').'</label>:</td>",
          "212:       <td class=\"mdl-left\"><select id=\"{LICENSEID}\" /></td>",
          "213:     </tr>",
          "214:   </table>",
          "215: </form>",
          "216: <div class=\"fp-upload-btn\"><button id=\"{BUTUPLOADID}\">'.get_string('upload', 'repository').'</button></div>",
          "217: </div> ';",
          "218:     }",
          "223:     public function js_template_loading() {",
          "224:         return '<div style=\"text-align:center\">",
          "225: <img src=\"'.$this->pix_url('i/loading').'\" />",
          "226: <p>'.get_string('loading', 'repository').'</p>",
          "227: </div>';",
          "228:     }",
          "237:     public function js_template_error() {",
          "238:         $rv = '<div class=\"{!}fp-error\" />';",
          "239:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "240:     }",
          "253:     public function js_template_message() {",
          "254:         $rv = '<div class=\"{!}fp-msg\">",
          "255:                     <div class=\"{!}fp-msg-text\"></div>",
          "256:                     <div><button class=\"{!}fp-msg-butok\">'.get_string('ok').'</button></div>",
          "257:                 </div>';",
          "258:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "259:     }",
          "274:     public function js_template_processexistingfile() {",
          "275:         $rv = '<div class=\"{!}fp-dlg\"><div class=\"{!}fp-dlg-text\"></div>",
          "276: <div class=\"fp-dlg-but\"><button class=\"{!}fp-dlg-butoverwrite\" >'.get_string('overwrite', 'repository').'</button></div>",
          "277: <div class=\"fp-dlg-but\"><button class=\"{!}fp-dlg-butrename\" /></div>",
          "278: <div class=\"fp-dlg-but\"><button class=\"{!}fp-dlg-butcancel\" >'.get_string('cancel').'</button></div>",
          "279: </div>';",
          "280:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "281:     }",
          "288:     public function filepicker_templates() {",
          "289:         $class_methods = get_class_methods($this);",
          "290:         $templates = array();",
          "291:         foreach ($class_methods as $method_name) {",
          "292:             if (preg_match('/^js_template_(.*)$/', $method_name, $matches))",
          "293:             $templates[$matches[1]] = $this->$method_name();",
          "294:         }",
          "295:         return $templates;",
          "296:     }",
          "305:     public function repository_default_searchform() {",
          "306:         $str = '<label>'.get_string('keyword', 'repository').': </label><br/><input name=\"s\" value=\"\" /><br/>';",
          "307:         return $str;",
          "308:     }",
          "309: }",
          "",
          "---------------"
        ],
        "repository/repository_ajax.php||repository/repository_ajax.php": [
          "File: repository/repository_ajax.php -> repository/repository_ajax.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:         echo json_encode($logout);",
          "161:         break;",
          "162:     case 'searchform':",
          "163:         $search_form['form'] = $repo->print_search();",
          "164:         echo json_encode($search_form);",
          "165:         break;",
          "166:     case 'search':",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:         $search_form['repo_id'] = $repo_id;",
          "165:         $search_form['allowcaching'] = true;",
          "",
          "---------------"
        ],
        "theme/base/config.php||theme/base/config.php": [
          "File: theme/base/config.php -> theme/base/config.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     'grade',",
          "49:     'message',",
          "50:     'question',",
          "52: );",
          "54: $THEME->editor_sheets = array('editor');",
          "",
          "[Removed Lines]",
          "51:     'user'",
          "",
          "[Added Lines]",
          "51:     'user',",
          "52:     'filemanager'",
          "",
          "---------------"
        ],
        "theme/base/style/core.css||theme/base/style/core.css": [
          "File: theme/base/style/core.css -> theme/base/style/core.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "444: .tag_cloud .s1 {font-size: 0.9em;}",
          "445: .tag_cloud .s0 {font-size: 0.8em;}",
          "",
          "[Removed Lines]",
          "454: .file-picker .ygtvtn {background: url([[pix:moodle|y/tn]]) 0 0 no-repeat;width:17px;height:22px;}",
          "456: .file-picker .ygtvtm {background: url([[pix:moodle|y/tm]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "458: .file-picker .ygtvtmh {background: url([[pix:moodle|y/tmh]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "460: .file-picker .ygtvtp {background: url([[pix:moodle|y/tp]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "462: .file-picker .ygtvtph {background: url([[pix:moodle|y/tph]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "464: .file-picker .ygtvln {background: url([[pix:moodle|y/ln]]) 0 0 no-repeat;width:17px;height:22px;}",
          "466: .file-picker .ygtvlm {background: url([[pix:moodle|y/lm]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "468: .file-picker .ygtvlmh {background: url([[pix:moodle|y/lmh]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "470: .file-picker .ygtvlp {background: url([[pix:moodle|y/lp]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "472: .file-picker .ygtvlph {background: url([[pix:moodle|y/lph]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "474: .file-picker .ygtvloading {background: url([[pix:moodle|y/loading]]) 0 0 no-repeat;width:16px;height:22px;}",
          "476: .file-picker .ygtvdepthcell {background: url([[pix:moodle|y/vline]]) 0 0 no-repeat;width:17px;height:22px;}",
          "477: .file-picker .ygtvblankdepthcell {width:17px;height:22px;}",
          "479: .file-picker .ygtvitem  table{margin-bottom:0;}",
          "480: .file-picker .ygtvitem  td {border:none;padding:0;}",
          "484: .file-picker .ygtvlabel,",
          "485: .file-picker .ygtvlabel:link,",
          "486: .file-picker .ygtvlabel:visited,",
          "487: .file-picker .ygtvlabel:hover {margin-left:2px;text-decoration: none;}",
          "488: .file-picker {font-size:12px;}",
          "489: .file-picker strong {background:#FFFFCC;}",
          "490: .file-picker .fp-panel {padding:0;margin:0;text-align:left;}",
          "491: .file-picker .fp-login-form {text-align:center;}",
          "492: .file-picker .fp-searchbar {float:right;}",
          "493: .file-picker .fp-viewbar {width:300px;float:left;}",
          "494: .file-picker .fp-toolbar {padding: .8em;background: #FFFFCC;text-align:center;margin: 3px;}",
          "495: .file-picker .fp-toolbar a {padding: 0 .5em;}",
          "496: .file-picker .fp-list {list-style-type:none;padding:0;float:left;width:100%;margin:0;}",
          "497: .dir-rtl .file-picker .fp-list {text-align:right;}",
          "498: .file-picker .fp-list li {border-bottom:1px dotted gray;margin-bottom: 1em;}",
          "499: .file-picker .fp-repo-name {display:block;padding: .5em;margin-bottom: .5em;}",
          "500: .file-picker .fp-pathbar {margin: .4em;border-bottom: 1px dotted gray;}",
          "501: .file-picker .fp-pathbar a {padding: .4em;}",
          "502: .file-picker .fp-rename-form {text-align:center;}",
          "503: .file-picker .fp-rename-form p {margin: 1em;}",
          "504: .file-picker .fp-upload-form {margin: 2em 0;text-align:center;}",
          "505: .file-picker .fp-upload-btn {clear:both;margin-top: 2em;}",
          "506: .file-picker .fp-paging {margin:1em .5em;clear:both;text-align:center;line-height: 2.5em;}",
          "507: .file-picker .fp-paging a {padding: .5em;border: 1px solid #CCC;}",
          "508: .file-picker .fp-paging a.cur_page {border: 1px solid blue;}",
          "509: .file-picker .fp-popup {text-align:center;}",
          "510: .file-picker .fp-grid-panel{}",
          "511: .file-picker .fp-grid {float:left;text-align:center;}",
          "512: .file-picker .fp-grid div {overflow: hidden;}",
          "513: .file-picker .fp-grid p {margin:0;padding:0;background: #FFFFCC;}",
          "514: .file-picker .fp-grid .label {height:48px;text-align:center;}",
          "515: .file-picker .fp-grid span {color:gray;}",
          "516: .file-picker .fp-error {padding: 2em 0;margin: 3em 5px;text-align:center;background: #FFBBBB;}",
          "517: .file-picker .fp-emptylist, .file-picker .fp-msg {text-align:center;}",
          "518: .filepicker-filelist {padding: 5px;margin: 6px 0;background: #E9F4FF;border: #AACCEE 1px solid}",
          "520: .file-picker div.bd {text-align:left;}",
          "525: .filemanager-toolbar {margin: 5px 0;}",
          "526: .filemanager-toolbar a {border: 1px solid #AACCEE;background: #F4FAFF;color: black;padding: 3px;}",
          "527: .filemanager-toolbar a:hover {background: #FFFFFF;}",
          "528: .filemanager-toolbar .helplink a {border: 0px; background: transparent;}",
          "529: .fm-breadcrumb {margin:0;}",
          "530: .filemanager-container {padding: 5px;margin: 6px 0;background: #E9F4FF;border: #AACCEE 1px solid}",
          "531: .filemanager-container ul{margin:0;padding:0;}",
          "532: .filemanager-container ul li{white-space:nowrap;list-style-type:none;}",
          "533: .filemanager-container ul li a{padding:0}",
          "534: .filemanager-loading{display:none}",
          "535: .jsenabled .filemanager-loading{display:block}",
          "536: .fm-menuicon{cursor: pointer;}",
          "537: #fm-move-div {margin: 6px;}",
          "538: #fm-move-div strong{color:red;}",
          "539: .fm-file-entry{border: 1px solid red;}",
          "540: .fm-operation {font-weight: bold;}",
          "542: .filemanager-container,",
          "543: .filepicker-filelist {overflow:hidden;}",
          "544: .filemanager-container .dndupload-target,",
          "545: .filepicker-filelist .dndupload-target {background:#f7f998;position:absolute;height:100%;width:100%;top:0;left:0;text-align:center;padding:5px;z-index:1000}",
          "546: .filemanager-container.dndupload-over .dndupload-target,",
          "547: .filepicker-filelist.dndupload-over .dndupload-target {background:#8EF947;font-weight:bold}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "theme/base/style/filemanager.css||theme/base/style/filemanager.css": [
          "File: theme/base/style/filemanager.css -> theme/base/style/filemanager.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: .file-picker .ygtvtn {background: url([[pix:moodle|y/tn]]) 0 0 no-repeat;width:17px;height:22px;}",
          "7: .file-picker .ygtvtm {background: url([[pix:moodle|y/tm]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "9: .file-picker .ygtvtmh {background: url([[pix:moodle|y/tmh]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "11: .file-picker .ygtvtp {background: url([[pix:moodle|y/tp]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "13: .file-picker .ygtvtph {background: url([[pix:moodle|y/tph]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "15: .file-picker .ygtvln {background: url([[pix:moodle|y/ln]]) 0 0 no-repeat;width:17px;height:22px;}",
          "17: .file-picker .ygtvlm {background: url([[pix:moodle|y/lm]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "19: .file-picker .ygtvlmh {background: url([[pix:moodle|y/lmh]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "21: .file-picker .ygtvlp {background: url([[pix:moodle|y/lp]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "23: .file-picker .ygtvlph {background: url([[pix:moodle|y/lph]]) 0 0 no-repeat;width:34px;height:22px;cursor:pointer;}",
          "25: .file-picker .ygtvloading {background: url([[pix:moodle|y/loading]]) 0 0 no-repeat;width:16px;height:22px;}",
          "27: .file-picker .ygtvdepthcell {background: url([[pix:moodle|y/vline]]) 0 0 no-repeat;width:17px;height:22px;}",
          "28: .file-picker .ygtvblankdepthcell {width:17px;height:22px;}",
          "30: .file-picker .ygtvitem  table{margin-bottom:0;}",
          "31: .file-picker .ygtvitem  td {border:none;padding:0;}",
          "35: .file-picker .ygtvlabel,",
          "36: .file-picker .ygtvlabel:link,",
          "37: .file-picker .ygtvlabel:visited,",
          "38: .file-picker .ygtvlabel:hover {margin-left:2px;text-decoration: none;}",
          "39: .file-picker {font-size:12px;}",
          "40: .file-picker.fp-generallayout {width:700px;height:480px;}",
          "41: .file-picker strong {background:#FFFFCC;}",
          "42: .file-picker .fp-content {padding:0;margin:0;text-align:left;max-height:350px;overflow:auto;border:1px solid black;}",
          "43: .file-picker .fp-login-form {text-align:center;}",
          "44: .file-picker .fp-searchbar {float:right;}",
          "45: .file-picker .fp-viewbar {width:300px;float:left;}",
          "46: .file-picker .fp-viewbar.disabled {display:none;}",
          "47: .file-picker .fp-viewbar .checked {font-weight:bold;}",
          "48: .file-picker .fp-toolbar {padding: .8em;background: #FFFFCC;text-align:center;margin: 3px;}",
          "49: .file-picker .fp-toolbar.empty {display:none;}",
          "50: .file-picker .fp-toolbar div {display: inline-block;}",
          "51: .file-picker .fp-toolbar .disabled {display:none;}",
          "52: .file-picker .fp-toolbar a {padding: 0 .5em;}",
          "53: .file-picker .fp-list {list-style-type:none;padding:0;float:left;width:100%;margin:0;}",
          "54: .dir-rtl .file-picker .fp-list {text-align:right;}",
          "55: .file-picker .fp-list .fp-repo {display:block;border-bottom:1px dotted gray;padding: .5em;}",
          "56: .file-picker .fp-list .fp-repo.active {background:#AACCEE;}",
          "57: .file-picker .fp-pathbar {margin: .4em;border-bottom: 1px dotted gray;}",
          "58: .file-picker .fp-pathbar a {padding: .4em;}",
          "59: .file-picker .fp-select {width:550px;height:430px;text-align:center;overflow:auto;}",
          "60: .file-picker .fp-select .uneditable {display:none;}",
          "61: .file-picker .fp-select p {margin: 1em;}",
          "62: .file-picker .fp-upload-form {margin: 2em 0;text-align:center;}",
          "63: .file-picker .fp-upload-btn {clear:both;margin-top: 2em;}",
          "64: .file-picker .fp-paging {margin:1em .5em;clear:both;text-align:center;line-height: 2.5em;}",
          "65: .file-picker .fp-paging a {padding: .5em;border: 1px solid #CCC;}",
          "66: .file-picker .fp-paging a.cur_page {border: 1px solid blue;}",
          "67: .file-picker .fp-popup {text-align:center;}",
          "68: .file-picker .fp-iconview .fp-file {float:left;text-align:center;}",
          "69: .file-picker .fp-iconview .fp-file div {overflow: hidden;}",
          "70: .file-picker .fp-iconview .fp-file .fp-filename {height:48px;text-align:center;min-width:50px;}",
          "71: .file-picker .fp-error {padding: 2em 0;margin: 3em 5px;text-align:center;background: #FFBBBB;}",
          "72: .file-picker .fp-msg {}",
          "73: .file-picker .fp-msg .fp-msg-text {min-width:300px;min-height:150px;max-width:500px;max-height:300px;overflow:auto;}",
          "74: .file-picker .fp-msg.fp-msg-error .fp-msg-text {color:red;}",
          "75: .file-picker .fp-msg .fp-msg-butok {text-align:center;}",
          "76: .filepicker-filelist {padding: 5px;margin: 6px 0;background: #E9F4FF;border: #AACCEE 1px solid}",
          "78: .file-picker div.bd {text-align:left;}",
          "83: .filemanager-toolbar {margin: 5px 0;}",
          "84: .filemanager-toolbar a {border: 1px solid #AACCEE;background: #F4FAFF;color: black;padding: 3px;}",
          "85: .filemanager-toolbar a:hover {background: #FFFFFF;}",
          "86: .filemanager-toolbar .helplink a {border: 0px; background: transparent;}",
          "87: .fm-breadcrumb {margin:0;}",
          "88: .filemanager-container {padding: 5px;margin: 6px 0;background: #E9F4FF;border: #AACCEE 1px solid}",
          "89: .filemanager-container ul{margin:0;padding:0;}",
          "90: .filemanager-container ul li{white-space:nowrap;list-style-type:none;}",
          "91: .filemanager-container ul li a{padding:0}",
          "92: .filemanager-loading{display:none}",
          "93: .jsenabled .filemanager-loading{display:block}",
          "94: .fm-menuicon{cursor: pointer;}",
          "95: #fm-move-div {margin: 6px;}",
          "96: #fm-move-div strong{color:red;}",
          "97: .fm-file-entry{border: 1px solid red;}",
          "98: .fm-operation {font-weight: bold;}",
          "100: .filemanager-container,",
          "101: .filepicker-filelist {overflow:hidden;}",
          "102: .filemanager-container .dndupload-target,",
          "103: .filepicker-filelist .dndupload-target {background:#f7f998;position:absolute;height:100%;width:100%;top:0;left:0;text-align:center;padding:5px;z-index:1000}",
          "104: .filemanager-container.dndupload-over .dndupload-target,",
          "105: .filepicker-filelist.dndupload-over .dndupload-target {background:#8EF947;font-weight:bold}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5cf44c1f1fa2ec317bc5c6395820ad069cc88abc",
      "candidate_info": {
        "commit_hash": "5cf44c1f1fa2ec317bc5c6395820ad069cc88abc",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/5cf44c1f1fa2ec317bc5c6395820ad069cc88abc",
        "files": [
          "files/renderer.php",
          "lang/en/repository.php",
          "repository/filepicker.js",
          "theme/base/style/filemanager.css"
        ],
        "message": "MDL-31901,MDL-28666: add support for external references in new filepicker design",
        "before_after_code_files": [
          "files/renderer.php||files/renderer.php",
          "lang/en/repository.php||lang/en/repository.php",
          "repository/filepicker.js||repository/filepicker.js",
          "theme/base/style/filemanager.css||theme/base/style/filemanager.css"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "repository/filepicker.js||repository/filepicker.js"
          ],
          "candidate": [
            "repository/filepicker.js||repository/filepicker.js"
          ]
        }
      },
      "candidate_diff": {
        "files/renderer.php||files/renderer.php": [
          "File: files/renderer.php -> files/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "584: <table width=\"100%\">",
          "585: <tr class=\"{!}fp-saveas\"><td class=\"mdl-right\"><label>'.get_string('saveas', 'repository').'</label>:</td>",
          "586: <td class=\"mdl-left\"><input type=\"text\"/></td></tr>",
          "589: <tr class=\"{!}fp-setauthor\"><td class=\"mdl-right\"><label>'.get_string('author', 'repository').'</label>:</td>",
          "590: <td class=\"mdl-left\"><input type=\"text\" /></td></tr>",
          "591: <tr class=\"{!}fp-setlicense\"><td class=\"mdl-right\"><label>'.get_string('chooselicense', 'repository').'</label>:</td>",
          "",
          "[Removed Lines]",
          "587: <tr class=\"{!}fp-linkexternal\"><td></td>",
          "588: <td class=\"mdl-left\"><input type=\"checkbox\"/><label>'.get_string('linkexternal', 'repository').'</label></td></tr>",
          "",
          "[Added Lines]",
          "587: <tr class=\"{!}fp-linktype-2\"><td></td>",
          "588: <td class=\"mdl-left\"><input type=\"radio\"/><label>'.get_string('makefileinternal', 'repository').'</label></td></tr>",
          "589: <tr class=\"{!}fp-linktype-1\"><td></td>",
          "590: <td class=\"mdl-left\"><input type=\"radio\"/><label>'.get_string('makefilelink', 'repository').'</label></td></tr>",
          "591: <tr class=\"{!}fp-linktype-4\"><td></td>",
          "592: <td class=\"mdl-left\"><input type=\"radio\"/><label>'.get_string('makefilereference', 'repository').'</label></td></tr>",
          "",
          "---------------"
        ],
        "lang/en/repository.php||lang/en/repository.php": [
          "File: lang/en/repository.php -> lang/en/repository.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "133: $string['loading'] = 'Loading...';",
          "134: $string['login'] = 'Login';",
          "135: $string['logout'] = 'Logout';",
          "136: $string['manage'] = 'Manage repositories';",
          "137: $string['manageurl'] = 'Manage';",
          "138: $string['manageuserrepository'] = 'Manage individual repository';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136: $string['makefileinternal'] = 'Make a copy of the file';",
          "137: $string['makefilelink'] = 'Link to the file directly';",
          "138: $string['makefilereference'] = 'Create an alias/shortcut to the file';",
          "",
          "---------------"
        ],
        "repository/filepicker.js||repository/filepicker.js": [
          "File: repository/filepicker.js -> repository/filepicker.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "401: M.core_filepicker.templates = M.core_filepicker.templates || {};",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408: M.core_filepicker.select_file = function(file) {",
          "409:     M.core_filepicker.active_filepicker.select_file(file);",
          "410: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "960:             var return_types = this.options.repositories[this.active_repo.id].return_types;",
          "961:             selectnode.removeClass('loading');",
          "962:             selectnode.one('.fp-saveas input').set('value', args.title);",
          "965:             var imgnode = Y.Node.create('<img/>').",
          "966:                 set('src', args.realthumbnail ? args.realthumbnail : args.thumbnail).",
          "",
          "[Removed Lines]",
          "963:             selectnode.one('.fp-setauthor input').set('value', this.options.author);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "968:                 setStyle('maxWidth', ''+(args.thumbnail_width ? args.thumbnail_width : 90)+'px');",
          "969:             selectnode.one('.fp-thumbnail').setContent('').appendChild(imgnode);",
          "983:                 }",
          "984:             }",
          "1001:             }",
          "1003:             selectnode.one('form #filesource-'+client_id).set('value', args.source);",
          "",
          "[Removed Lines]",
          "971:             selectnode.one('.fp-linkexternal input').set('checked', ''); // default to unchecked",
          "972:             if ((this.options.externallink && this.options.env == 'editor' && return_types == 3)) {",
          "974:                 selectnode.one('.fp-linkexternal input').set('disabled', '');",
          "975:                 selectnode.all('.fp-linkexternal').removeClass('uneditable')",
          "976:             } else {",
          "978:                 selectnode.one('.fp-linkexternal input').set('disabled', 'disabled');",
          "979:                 selectnode.all('.fp-linkexternal').addClass('uneditable')",
          "980:                 if (return_types == 1) {",
          "982:                     selectnode.one('.fp-linkexternal input').set('checked', 'checked');",
          "986:             if (args.hasauthor) {",
          "987:                 selectnode.one('.fp-setauthor input').set('disabled', 'disabled');",
          "988:                 selectnode.all('.fp-setauthor').addClass('uneditable')",
          "989:             } else {",
          "990:                 selectnode.one('.fp-setauthor input').set('disabled', '');",
          "991:                 selectnode.all('.fp-setauthor').removeClass('uneditable')",
          "992:             }",
          "994:             if (!args.haslicense) {",
          "996:                 selectnode.one('.fp-setlicense select').set('disabled', '');",
          "997:                 selectnode.one('.fp-setlicense').removeClass('uneditable');",
          "998:             } else {",
          "999:                 selectnode.one('.fp-setlicense select').set('disabled', 'disabled');",
          "1000:                 selectnode.one('.fp-setlicense').addClass('uneditable');",
          "",
          "[Added Lines]",
          "980:             var filelinktypes = [2/*FILE_INTERNAL*/,1/*FILE_EXTERNAL*/,4/*FILE_REFERENCE*/];",
          "981:             var filelink = {}, firstfilelink = null, filelinkcount = 0;",
          "982:             for (var i in filelinktypes) {",
          "983:                 var allowed = (return_types & filelinktypes[i]) &&",
          "984:                     (this.options.return_types & filelinktypes[i]);",
          "985:                 if (filelinktypes[i] == 1/*FILE_EXTERNAL*/ && !this.options.externallink && this.options.env == 'editor') {",
          "988:                     allowed = false;",
          "990:                 filelink[filelinktypes[i]] = allowed;",
          "991:                 firstfilelink = (firstfilelink==null && allowed) ? filelinktypes[i] : firstfilelink;",
          "992:                 filelinkcount += allowed ? 1 : 0;",
          "996:             for (var linktype in filelink) {",
          "997:                 var el = selectnode.one('.fp-linktype-'+linktype);",
          "998:                 el.addClassIf('uneditable', !(filelink[linktype] && filelinkcount>1));",
          "999:                 el.one('input').set('disabled', (filelink[linktype] && filelinkcount>1)?'':'disabled').",
          "1000:                     set('checked', (firstfilelink == linktype) ? 'checked' : '').simulate('change')",
          "1004:             selectnode.one('.fp-setauthor input').set('value', args.author?args.author:this.options.author);",
          "1005:             this.set_selected_license(selectnode.one('.fp-setlicense'), args.license);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1017:             var selectnode = this.fpnode.one('.fp-select');",
          "1018:             var getfile = selectnode.one('.fp-select-confirm');",
          "1021:                 node.all('label').set('for', node.one('input,select').generateID());",
          "1022:             });",
          "1023:             this.populate_licenses_select(selectnode.one('.fp-setlicense select'));",
          "1025:             getfile.on('click', function(e) {",
          "",
          "[Removed Lines]",
          "1020:             selectnode.all('.fp-saveas,.fp-linkexternal,.fp-setauthor,.fp-setlicense').each(function (node) {",
          "",
          "[Added Lines]",
          "1023:             selectnode.all('.fp-saveas,.fp-linktype-2,.fp-linktype-1,.fp-linktype-4,.fp-setauthor,.fp-setlicense').each(function (node) {",
          "1026:             selectnode.one('.fp-linktype-2 input').setAttrs({value: 2, name: 'linktype'});",
          "1027:             selectnode.one('.fp-linktype-1 input').setAttrs({value: 1, name: 'linktype'});",
          "1028:             selectnode.one('.fp-linktype-4 input').setAttrs({value: 4, name: 'linktype'});",
          "1029:             var changelinktype = function(e) {",
          "1030:                 if (e.currentTarget.get('checked')) {",
          "1031:                     var allowinputs = e.currentTarget.get('value') != 1/*FILE_EXTERNAL*/;",
          "1032:                     selectnode.all('.fp-setauthor,.fp-setlicense,.fp-saveas').each(function(node){",
          "1033:                         node.addClassIf('uneditable', !allowinputs);",
          "1034:                         node.all('input,select').set('disabled', allowinputs?'':'disabled');",
          "1035:                     });",
          "1036:                 }",
          "1037:             };",
          "1038:             selectnode.all('.fp-linktype-2,.fp-linktype-1,.fp-linktype-4').each(function (node) {",
          "1039:                 node.one('input').on('change', changelinktype, this);",
          "1040:             });",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1033:                 var license = selectnode.one('.fp-setlicense select');",
          "1034:                 if (license) {",
          "1035:                     params['license'] = license.get('value');",
          "1037:                 }",
          "1038:                 params['author'] = selectnode.one('.fp-setauthor input').get('value');",
          "1042:                     params.savepath = '/';",
          "1054:                 }",
          "1057:                     params['linkexternal'] = 'yes';",
          "1058:                 }",
          "1060:                 selectnode.addClass('loading');",
          "",
          "[Removed Lines]",
          "1036:                     Y.Cookie.set('recentlicense', license.get('value'));",
          "1040:                 if (this.options.externallink && this.options.env == 'editor') {",
          "1044:                     var return_types = this.options.repositories[this.active_repo.id].return_types;",
          "1045:                     if ( return_types != 1 ) {",
          "1046:                         var linkexternal = selectnode.one('.fp-linkexternal input');",
          "1047:                         if (linkexternal && linkexternal.get('checked')) {",
          "1048:                             params['linkexternal'] = 'yes';",
          "1049:                         }",
          "1050:                     } else {",
          "1052:                         params['linkexternal'] = 'yes';",
          "1053:                     }",
          "1056:                 if (this.options.env == 'url') {",
          "",
          "[Added Lines]",
          "1054:                     var origlicense = selectnode.one('.fp-license .fp-value');",
          "1055:                     if (origlicense) { origlicense = origlicense.getContent(); }",
          "1056:                     var newlicenseval = license.get('value');",
          "1057:                     if (newlicenseval && this.options.licenses[newlicenseval] != origlicense) {",
          "1058:                         Y.Cookie.set('recentlicense', newlicenseval);",
          "1059:                     }",
          "1063:                 var return_types = this.options.repositories[this.active_repo.id].return_types;",
          "1064:                 if (this.options.env == 'editor') {",
          "1068:                 if ((this.options.externallink || this.options.env != 'editor') &&",
          "1069:                             (return_types & 1/*FILE_EXTERNAL*/) &&",
          "1070:                             (this.options.return_types & 1/*FILE_EXTERNAL*/) &&",
          "1071:                             selectnode.one('.fp-linktype-1 input').get('checked')) {",
          "1073:                 } else if ((return_types & 4/*FILE_REFERENCE*/) &&",
          "1074:                         (this.options.return_types & 4/*FILE_REFERENCE*/) &&",
          "1075:                         selectnode.one('.fp-linktype-4 input').get('checked')) {",
          "1076:                     params['usefilereference'] = 'yes';",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1234:                 this.lazyloading = {};",
          "1235:             }",
          "1236:             this.filepath = data.path?data.path:null;",
          "1237:             this.active_repo = {};",
          "1238:             this.active_repo.issearchresult = data.issearchresult?true:false;",
          "1239:             this.active_repo.dynload = data.dynload?data.dynload:false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1256:             this.objecttag = data.object?data.object:null;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1399:                 scope.viewbar_set_enabled(false);",
          "1400:                 scope.parse_repository_options(obj);",
          "1401:                 scope.create_upload_form(obj);",
          "1404:             } else if (obj.list) {",
          "1405:                 scope.viewbar_set_enabled(true);",
          "1406:                 scope.parse_repository_options(obj);",
          "",
          "[Removed Lines]",
          "1402:             } else if (obj.iframe) {",
          "",
          "[Added Lines]",
          "1422:             } else if (obj.object) {",
          "1423:                 M.core_filepicker.active_filepicker = scope;",
          "1424:                 scope.viewbar_set_enabled(false);",
          "1425:                 scope.parse_repository_options(obj);",
          "1426:                 scope.create_object_container(obj.object);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1442:                 node.appendChild(option)",
          "1443:             }",
          "1444:         },",
          "1445:         create_upload_form: function(data) {",
          "1446:             var client_id = this.options.client_id;",
          "1447:             var id = data.upload.id+'_'+client_id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1468:         set_selected_license: function(node, value) {",
          "1469:             var licenseset = false;",
          "1470:             node.all('option').each(function(el) {",
          "1471:                 if (el.get('value')==value || el.getContent()==value) {",
          "1472:                     el.set('selected', true);",
          "1473:                     licenseset = true;",
          "1474:                 }",
          "1475:             });",
          "1476:             if (!licenseset) {",
          "1478:                 var recentlicense = Y.Cookie.get('recentlicense');",
          "1479:                 node.all('option[selected]').set('selected', false);",
          "1480:                 node.all('option[value='+recentlicense+']').set('selected', true);",
          "1481:             }",
          "1482:         },",
          "1483:         create_object_container: function(data) {",
          "1484:             var content = this.fpnode.one('.fp-content');",
          "1485:             content.setContent('');",
          "1487:             var container = Y.Node.create('<object/>').",
          "1488:                 setAttrs({data:data.src, type:data.type, id:'container_object'}).",
          "1489:                 addClass('fp-object-container');",
          "1490:             content.setContent('').appendChild(container);",
          "1491:         },",
          "",
          "---------------"
        ],
        "theme/base/style/filemanager.css||theme/base/style/filemanager.css": [
          "File: theme/base/style/filemanager.css -> theme/base/style/filemanager.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: .file-picker .fp-navbar {background: #F2F2F2;min-height:27px;border-bottom: 1px solid #BBB;padding: 5px 8px;/*position: absolute;left:182px;right:0px;*/width:527px;}",
          "70: .file-picker .fp-content {background: #FFF;clear: both;overflow:auto;/*resize:both;*/width: 543px;min-width: 543px;max-width: 780px;height: 349px;min-height: 349px;max-height: 700px;/*border-bottom-right-radius: 10px;*//*top:100px;position: relative;*/margin-bottom: 6px;}",
          "71: .file-picker .fp-repo-items p{width: auto;}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72: .file-picker .fp-content .fp-object-container {width:98%;height:98%;}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dd1f051e4a32becd72cea8fd012f1f082839a9ea",
      "candidate_info": {
        "commit_hash": "dd1f051e4a32becd72cea8fd012f1f082839a9ea",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/dd1f051e4a32becd72cea8fd012f1f082839a9ea",
        "files": [
          "lang/en/repository.php",
          "repository/filepicker.js",
          "repository/lib.php"
        ],
        "message": "MDL-31901 filepicker interface changes:\n\n- fixed displaying and dragging of dialog popups;\n- fixed error when repository results are filtered;\n- added string for image dimensions",
        "before_after_code_files": [
          "lang/en/repository.php||lang/en/repository.php",
          "repository/filepicker.js||repository/filepicker.js",
          "repository/lib.php||repository/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "repository/filepicker.js||repository/filepicker.js"
          ],
          "candidate": [
            "repository/filepicker.js||repository/filepicker.js"
          ]
        }
      },
      "candidate_diff": {
        "lang/en/repository.php||lang/en/repository.php": [
          "File: lang/en/repository.php -> lang/en/repository.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: $string['choosealink'] = 'Choose a link...';",
          "116: $string['chooselicense'] = 'Choose license';",
          "117: $string['iconview'] = 'View as icons';",
          "118: $string['instance'] = 'instance';",
          "119: $string['instancedeleted'] = 'Instance deleted';",
          "120: $string['instances'] = 'Repository instances';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118: $string['imagesize'] = '{$a->width} x {$a->height} px';",
          "",
          "---------------"
        ],
        "repository/filepicker.js||repository/filepicker.js": [
          "File: repository/filepicker.js -> repository/filepicker.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "518:                                 this.fpnode.one('.fp-content').setContent('');",
          "519:                             }",
          "520:                             return;",
          "529:                         } else {",
          "530:                             if (data.msg) {",
          "531:                                 scope.print_msg(data.msg, 'info');",
          "",
          "[Removed Lines]",
          "521:                         } else if (data && data.event) {",
          "522:                             switch (data.event) {",
          "523:                                 case 'fileexists':",
          "524:                                     scope.process_existing_file(data);",
          "525:                                     break;",
          "526:                                 default:",
          "527:                                     break;",
          "528:                             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "593:                             var fileinfo = {'client_id':scope.options.client_id,",
          "594:                                     'url':data.existingfile.url,",
          "595:                                     'file':data.existingfile.filename};",
          "597:                         }",
          "598:                     }",
          "599:                 }, true);",
          "",
          "[Removed Lines]",
          "596:                             scope.options.formcallback.apply(scope, [fileinfo]);",
          "",
          "[Added Lines]",
          "588:                             var formcallback_scope = scope.options.magicscope ? scope.options.magicscope : scope;",
          "589:                             scope.options.formcallback.apply(formcallback_scope, [fileinfo]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "608:                     scope.options.editor_target.onchange();",
          "609:                 }",
          "610:                 scope.hide();",
          "617:                 var fileinfo = {'client_id':scope.options.client_id,",
          "618:                                 'url':data.newfile.url,",
          "619:                                 'file':data.newfile.filename};",
          "",
          "[Removed Lines]",
          "611:                 var formcallback_scope = null;",
          "612:                 if (scope.options.magicscope) {",
          "613:                     formcallback_scope = scope.options.magicscope;",
          "614:                 } else {",
          "615:                     formcallback_scope = scope;",
          "616:                 }",
          "",
          "[Added Lines]",
          "604:                 var formcallback_scope = scope.options.magicscope ? scope.options.magicscope : scope;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "640:                 this.selectui.hide();",
          "641:             }",
          "642:             if (!this.process_dlg) {",
          "645:                 this.process_dlg = new Y.Panel({",
          "646:                     srcNode      : node,",
          "647:                     headerContent: M.str.repository.fileexistsdialogheader,",
          "",
          "[Removed Lines]",
          "643:                 var node = Y.Node.create(M.core_filepicker.templates.processexistingfile);",
          "644:                 this.fpnode.appendChild(node);",
          "",
          "[Added Lines]",
          "631:                 this.process_dlg_node = Y.Node.create(M.core_filepicker.templates.processexistingfile);",
          "632:                 var node = this.process_dlg_node;",
          "633:                 node.generateID();",
          "634:                 Y.one(document.body).appendChild(node);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "652:                     render       : true,",
          "653:                     buttons      : {}",
          "654:                 });",
          "655:                 node.one('.fp-dlg-butoverwrite').on('click', handleOverwrite, this);",
          "656:                 node.one('.fp-dlg-butrename').on('click', handleRename, this);",
          "657:                 node.one('.fp-dlg-butcancel').on('click', handleCancel, this);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "645:                 this.process_dlg.plug(Y.Plugin.Drag,{handles:['#'+node.get('id')+' .yui3-widget-hd']});",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "663:             }",
          "664:             this.selectnode.removeClass('loading');",
          "665:             this.process_dlg.dialogdata = data;",
          "667:             this.process_dlg.show();",
          "668:         },",
          "",
          "[Removed Lines]",
          "666:             this.fpnode.one('.fp-dlg .fp-dlg-butrename').setContent(M.util.get_string('renameto', 'repository', data.newfile.filename));",
          "",
          "[Added Lines]",
          "657:             this.process_dlg_node.one('.fp-dlg-butrename').setContent(M.util.get_string('renameto', 'repository', data.newfile.filename));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "681:                 header = M.str.moodle.info;",
          "682:             }",
          "683:             if (!this.msg_dlg) {",
          "687:                 this.msg_dlg = new Y.Panel({",
          "689:                     zIndex       : 800000,",
          "690:                     centered     : true,",
          "691:                     modal        : true,",
          "692:                     visible      : false,",
          "693:                     render       : true",
          "694:                 });",
          "696:                     e.preventDefault();",
          "697:                     this.msg_dlg.hide();",
          "698:                 }, this);",
          "699:             }",
          "701:             this.msg_dlg.set('headerContent', header);",
          "704:             this.msg_dlg.show();",
          "705:         },",
          "706:         view_files: function(appenditems) {",
          "",
          "[Removed Lines]",
          "684:                 var node = Y.Node.create(M.core_filepicker.templates.message);",
          "685:                 this.fpnode.appendChild(node);",
          "688:                     srcNode      : node,",
          "695:                 node.one('.fp-msg-butok').on('click', function(e) {",
          "702:             this.fpnode.one('.fp-msg').removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
          "703:             this.fpnode.one('.fp-msg .fp-msg-text').setContent(msg);",
          "",
          "[Added Lines]",
          "675:                 this.msg_dlg_node = Y.Node.create(M.core_filepicker.templates.message);",
          "676:                 this.msg_dlg_node.generateID();",
          "677:                 Y.one(document.body).appendChild(this.msg_dlg_node);",
          "680:                     srcNode      : this.msg_dlg_node,",
          "687:                 this.msg_dlg.plug(Y.Plugin.Drag,{handles:['#'+this.msg_dlg_node.get('id')+' .yui3-widget-hd']});",
          "688:                 this.msg_dlg_node.one('.fp-msg-butok').on('click', function(e) {",
          "695:             this.msg_dlg_node.removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
          "696:             this.msg_dlg_node.one('.fp-msg-text').setContent(msg);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1095:                         }",
          "1096:                         scope.hide();",
          "1097:                         obj.client_id = client_id;",
          "1104:                         scope.options.formcallback.apply(formcallback_scope, [obj]);",
          "1105:                     }",
          "1106:                 }, false);",
          "",
          "[Removed Lines]",
          "1098:                         var formcallback_scope = null;",
          "1099:                         if (args.scope.options.magicscope) {",
          "1100:                             formcallback_scope = args.scope.options.magicscope;",
          "1101:                         } else {",
          "1102:                             formcallback_scope = args.scope;",
          "1103:                         }",
          "",
          "[Added Lines]",
          "1091:                         var formcallback_scope = args.scope.options.magicscope ? args.scope.options.magicscope : args.scope;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1539:                             scope.create_upload_form(data);",
          "1540:                         },",
          "1541:                         callback: function(id, o, args) {",
          "1542:                             if (scope.options.editor_target&&scope.options.env=='editor') {",
          "1543:                                 scope.options.editor_target.value=o.url;",
          "1544:                                 scope.options.editor_target.onchange();",
          "1545:                             }",
          "1546:                             scope.hide();",
          "1547:                             o.client_id = client_id;",
          "1554:                             scope.options.formcallback.apply(formcallback_scope, [o]);",
          "1555:                         }",
          "1556:                 }, true);",
          "",
          "[Removed Lines]",
          "1548:                             var formcallback_scope = null;",
          "1549:                             if (args.scope.options.magicscope) {",
          "1550:                                 formcallback_scope = args.scope.options.magicscope;",
          "1551:                             } else {",
          "1552:                                 formcallback_scope = args.scope;",
          "1553:                             }",
          "",
          "[Added Lines]",
          "1530:                             if (o.event == 'fileexists') {",
          "1531:                                 scope.create_upload_form(data);",
          "1532:                                 scope.process_existing_file(o);",
          "1533:                                 return;",
          "1534:                             }",
          "1541:                             var formcallback_scope = args.scope.options.magicscope ? args.scope.options.magicscope : args.scope;",
          "",
          "---------------"
        ],
        "repository/lib.php||repository/lib.php": [
          "File: repository/lib.php -> repository/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1789:     public static function prepare_listing($listing) {",
          "1790:         global $OUTPUT;",
          "1792:             $files = &$listing['list'];",
          "1794:             $files = &$listing->list;",
          "1795:         } else {",
          "1796:             return $listing;",
          "",
          "[Removed Lines]",
          "1791:         if (is_array($listing) && isset($listing['list'])) {",
          "1793:         } else if (is_object($listing) && isset($listing->list)) {",
          "",
          "[Added Lines]",
          "1791:         if (is_array($listing) && isset($listing['list']) && is_array(($listing['list']))) {",
          "1792:             $listing['list'] = array_values($listing['list']); // convert to array",
          "1794:         } else if (is_object($listing) && isset($listing->list) && is_array(($listing->list))) {",
          "1795:             $listing->list = array_values($listing->list); // convert to array",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1813:                 $file['license_f'] = get_string($file['license'], 'license');",
          "1814:             }",
          "1815:             if (isset($file['image_width']) && isset($file['image_height'])) {",
          "1817:             }",
          "1818:             foreach (array('date', 'datemodified', 'datecreated') as $key) {",
          "1819:                 if (!isset($file[$key]) && isset($file['date'])) {",
          "",
          "[Removed Lines]",
          "1816:                 $file['dimensions'] = $file['image_width'].'x'.$file['image_height'];",
          "",
          "[Added Lines]",
          "1818:                 $a = array('width' => $file['image_width'], 'height' => $file['image_height']);",
          "1819:                 $file['dimensions'] = get_string('imagesize', 'repository', (object)$a);",
          "",
          "---------------"
        ]
      }
    }
  ]
}