{
  "cve_id": "CVE-2017-5597",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.3 and 2.0.0 to 2.0.9, the DHCPv6 dissector could go into a large loop, triggered by packet injection or a malformed capture file. This was addressed in epan/dissectors/packet-dhcpv6.c by changing a data type to avoid an integer overflow.",
  "repo": "wireshark/wireshark",
  "patch_hash": "57894f741f7cc98b46c9fdce7eee8256d2a4ae3f",
  "patch_info": {
    "commit_hash": "57894f741f7cc98b46c9fdce7eee8256d2a4ae3f",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/57894f741f7cc98b46c9fdce7eee8256d2a4ae3f",
    "files": [
      "epan/dissectors/packet-dhcpv6.c"
    ],
    "message": "DHCPv6: Avoid integer overflows.\n\nCount using ints instead of guint16s.\n\nMake sure dissect_packetcable_ccc_option and\ndissect_packetcable_cccV6_option return positive values while we're\nhere.\n\nBug: 13345\nChange-Id: Ic303ddc266f46ee3144e079731742c85808faf37\nReviewed-on: https://code.wireshark.org/review/19747\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
    "before_after_code_files": [
      "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c": [
      "File: epan/dissectors/packet-dhcpv6.c -> epan/dissectors/packet-dhcpv6.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "855:     if (optend <= 0) {",
      "856:         expert_add_info_format(pinfo, v_item, &ei_dhcpv6_no_suboption_len, \"Sub element %d: no room left in option for suboption length\", subopt);",
      "858:     }",
      "",
      "[Removed Lines]",
      "857:         return (optend);",
      "",
      "[Added Lines]",
      "857:         return (suboptoff - optoff);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "979:     if (optend <= 0) {",
      "980:         expert_add_info_format(pinfo, v_item, &ei_dhcpv6_no_suboption_len, \"Sub element %d: no room left in option for suboption length\", subopt);",
      "982:     }",
      "984:     vti = proto_tree_add_item(v_tree, hf_packetcable_cccV6_suboption, tvb, optoff, 2, ENC_BIG_ENDIAN);",
      "",
      "[Removed Lines]",
      "981:         return (optend);",
      "",
      "[Added Lines]",
      "981:         return (suboptoff - optoff);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1092: static void",
      "1093: dissect_cablelabs_specific_opts(proto_tree *v_tree, proto_item *v_item, packet_info *pinfo, tvbuff_t *tvb, int voff, int len)",
      "1094: {",
      "1099:     proto_item *ti;",
      "1100:     proto_item *ti2;",
      "1101:     proto_tree *subtree;",
      "1102:     proto_tree *subtree2;",
      "1106:     int off = voff,",
      "1108:         i,",
      "1110:         field_value;",
      "1111:     gchar *device_type = NULL;",
      "",
      "[Removed Lines]",
      "1095:     guint16 type,",
      "1098:             sub_value;",
      "1103:     gint tlv5_cap_index,",
      "1104:          tlv5_counter,",
      "1105:          tlv5_cap_len;",
      "",
      "[Added Lines]",
      "1095:     guint type,",
      "1096:           sub_value;",
      "1101:     int tlv5_cap_index,",
      "1102:         tlv5_counter,",
      "1103:         tlv5_cap_len;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d62e7bfa20b37f2a0a46245e045c76f63184f3d4",
      "candidate_info": {
        "commit_hash": "d62e7bfa20b37f2a0a46245e045c76f63184f3d4",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/d62e7bfa20b37f2a0a46245e045c76f63184f3d4",
        "files": [
          "epan/dissectors/packet-dhcpv6.c"
        ],
        "message": "DHCPv6: Avoid integer overflows.\n\nCount using ints instead of guint16s.\n\nMake sure dissect_packetcable_ccc_option and\ndissect_packetcable_cccV6_option return positive values while we're\nhere.\n\nBug: 13345\nChange-Id: Ic303ddc266f46ee3144e079731742c85808faf37\nReviewed-on: https://code.wireshark.org/review/19747\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 57894f741f7cc98b46c9fdce7eee8256d2a4ae3f)\nReviewed-on: https://code.wireshark.org/review/19750\n(cherry picked from commit f291d1f0f50a0aeaa0e8d85a8c03d42e4f3e8d32)\nReviewed-on: https://code.wireshark.org/review/19751\n(cherry picked from commit 12723d7f38dfe3264c024a43bd7599cc66aa430d)\nReviewed-on: https://code.wireshark.org/review/19845\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c": [
          "File: epan/dissectors/packet-dhcpv6.c -> epan/dissectors/packet-dhcpv6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "746:     if (optend <= 0) {",
          "747:         expert_add_info_format(pinfo, v_item, &ei_dhcpv6_no_suboption_len, \"Sub element %d: no room left in option for suboption length\", subopt);",
          "749:     }",
          "",
          "[Removed Lines]",
          "748:         return (optend);",
          "",
          "[Added Lines]",
          "748:         return (suboptoff - optoff);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "870:     if (optend <= 0) {",
          "871:         expert_add_info_format(pinfo, v_item, &ei_dhcpv6_no_suboption_len, \"Sub element %d: no room left in option for suboption length\", subopt);",
          "873:     }",
          "875:     vti = proto_tree_add_item(v_tree, hf_packetcable_cccV6_suboption, tvb, optoff, 2, ENC_BIG_ENDIAN);",
          "",
          "[Removed Lines]",
          "872:         return (optend);",
          "",
          "[Added Lines]",
          "872:         return (suboptoff - optoff);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "983: static void",
          "984: dissect_cablelabs_specific_opts(proto_tree *v_tree, proto_item *v_item, packet_info *pinfo, tvbuff_t *tvb, int voff, int len)",
          "985: {",
          "990:     proto_item *ti;",
          "991:     proto_item *ti2;",
          "992:     proto_tree *subtree;",
          "993:     proto_tree *subtree2;",
          "997:     int off = voff,",
          "999:         i,",
          "1001:         field_value;",
          "1002:     gchar *device_type = NULL;",
          "",
          "[Removed Lines]",
          "986:     guint16 type,",
          "989:             sub_value;",
          "994:     gint tlv5_cap_index,",
          "995:          tlv5_counter,",
          "996:          tlv5_cap_len;",
          "",
          "[Added Lines]",
          "986:     guint type,",
          "987:           sub_value;",
          "992:     int tlv5_cap_index,",
          "993:         tlv5_counter,",
          "994:         tlv5_cap_len;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "12723d7f38dfe3264c024a43bd7599cc66aa430d",
      "candidate_info": {
        "commit_hash": "12723d7f38dfe3264c024a43bd7599cc66aa430d",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/12723d7f38dfe3264c024a43bd7599cc66aa430d",
        "files": [
          "epan/dissectors/packet-dhcpv6.c"
        ],
        "message": "DHCPv6: Avoid integer overflows.\n\nCount using ints instead of guint16s.\n\nMake sure dissect_packetcable_ccc_option and\ndissect_packetcable_cccV6_option return positive values while we're\nhere.\n\nBug: 13345\nChange-Id: Ic303ddc266f46ee3144e079731742c85808faf37\nReviewed-on: https://code.wireshark.org/review/19747\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 57894f741f7cc98b46c9fdce7eee8256d2a4ae3f)\nReviewed-on: https://code.wireshark.org/review/19750\n(cherry picked from commit f291d1f0f50a0aeaa0e8d85a8c03d42e4f3e8d32)\nReviewed-on: https://code.wireshark.org/review/19751",
        "before_after_code_files": [
          "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c": [
          "File: epan/dissectors/packet-dhcpv6.c -> epan/dissectors/packet-dhcpv6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "765:     if (optend <= 0) {",
          "766:         expert_add_info_format(pinfo, v_item, &ei_dhcpv6_no_suboption_len, \"Sub element %d: no room left in option for suboption length\", subopt);",
          "768:     }",
          "",
          "[Removed Lines]",
          "767:         return (optend);",
          "",
          "[Added Lines]",
          "767:         return (suboptoff - optoff);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "889:     if (optend <= 0) {",
          "890:         expert_add_info_format(pinfo, v_item, &ei_dhcpv6_no_suboption_len, \"Sub element %d: no room left in option for suboption length\", subopt);",
          "892:     }",
          "894:     vti = proto_tree_add_item(v_tree, hf_packetcable_cccV6_suboption, tvb, optoff, 2, ENC_BIG_ENDIAN);",
          "",
          "[Removed Lines]",
          "891:         return (optend);",
          "",
          "[Added Lines]",
          "891:         return (suboptoff - optoff);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1002: static void",
          "1003: dissect_cablelabs_specific_opts(proto_tree *v_tree, proto_item *v_item, packet_info *pinfo, tvbuff_t *tvb, int voff, int len)",
          "1004: {",
          "1009:     proto_item *ti;",
          "1010:     proto_item *ti2;",
          "1011:     proto_tree *subtree;",
          "1012:     proto_tree *subtree2;",
          "1016:     int off = voff,",
          "1018:         i,",
          "1020:         field_value;",
          "1021:     gchar *device_type = NULL;",
          "",
          "[Removed Lines]",
          "1005:     guint16 type,",
          "1008:             sub_value;",
          "1013:     gint tlv5_cap_index,",
          "1014:          tlv5_counter,",
          "1015:          tlv5_cap_len;",
          "",
          "[Added Lines]",
          "1005:     guint type,",
          "1006:           sub_value;",
          "1011:     int tlv5_cap_index,",
          "1012:         tlv5_counter,",
          "1013:         tlv5_cap_len;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f291d1f0f50a0aeaa0e8d85a8c03d42e4f3e8d32",
      "candidate_info": {
        "commit_hash": "f291d1f0f50a0aeaa0e8d85a8c03d42e4f3e8d32",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/f291d1f0f50a0aeaa0e8d85a8c03d42e4f3e8d32",
        "files": [
          "epan/dissectors/packet-dhcpv6.c"
        ],
        "message": "DHCPv6: Avoid integer overflows.\n\nCount using ints instead of guint16s.\n\nMake sure dissect_packetcable_ccc_option and\ndissect_packetcable_cccV6_option return positive values while we're\nhere.\n\nBug: 13345\nChange-Id: Ic303ddc266f46ee3144e079731742c85808faf37\nReviewed-on: https://code.wireshark.org/review/19747\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Gerald Combs <gerald@wireshark.org>\n(cherry picked from commit 57894f741f7cc98b46c9fdce7eee8256d2a4ae3f)\nReviewed-on: https://code.wireshark.org/review/19750",
        "before_after_code_files": [
          "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dhcpv6.c||epan/dissectors/packet-dhcpv6.c": [
          "File: epan/dissectors/packet-dhcpv6.c -> epan/dissectors/packet-dhcpv6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "769:     if (optend <= 0) {",
          "770:         expert_add_info_format(pinfo, v_item, &ei_dhcpv6_no_suboption_len, \"Sub element %d: no room left in option for suboption length\", subopt);",
          "772:     }",
          "",
          "[Removed Lines]",
          "771:         return (optend);",
          "",
          "[Added Lines]",
          "771:         return (suboptoff - optoff);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "893:     if (optend <= 0) {",
          "894:         expert_add_info_format(pinfo, v_item, &ei_dhcpv6_no_suboption_len, \"Sub element %d: no room left in option for suboption length\", subopt);",
          "896:     }",
          "898:     vti = proto_tree_add_item(v_tree, hf_packetcable_cccV6_suboption, tvb, optoff, 2, ENC_BIG_ENDIAN);",
          "",
          "[Removed Lines]",
          "895:         return (optend);",
          "",
          "[Added Lines]",
          "895:         return (suboptoff - optoff);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1006: static void",
          "1007: dissect_cablelabs_specific_opts(proto_tree *v_tree, proto_item *v_item, packet_info *pinfo, tvbuff_t *tvb, int voff, int len)",
          "1008: {",
          "1013:     proto_item *ti;",
          "1014:     proto_item *ti2;",
          "1015:     proto_tree *subtree;",
          "1016:     proto_tree *subtree2;",
          "1020:     int off = voff,",
          "1022:         i,",
          "1024:         field_value;",
          "1025:     gchar *device_type = NULL;",
          "",
          "[Removed Lines]",
          "1009:     guint16 type,",
          "1012:             sub_value;",
          "1017:     gint tlv5_cap_index,",
          "1018:          tlv5_counter,",
          "1019:          tlv5_cap_len;",
          "",
          "[Added Lines]",
          "1009:     guint type,",
          "1010:           sub_value;",
          "1015:     int tlv5_cap_index,",
          "1016:         tlv5_counter,",
          "1017:         tlv5_cap_len;",
          "",
          "---------------"
        ]
      }
    }
  ]
}