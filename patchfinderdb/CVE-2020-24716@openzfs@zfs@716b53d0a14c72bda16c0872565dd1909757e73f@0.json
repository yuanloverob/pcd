{
  "cve_id": "CVE-2020-24716",
  "cve_desc": "OpenZFS before 2.0.0-rc1, when used on FreeBSD, allows execute permissions for all directories.",
  "repo": "openzfs/zfs",
  "patch_hash": "716b53d0a14c72bda16c0872565dd1909757e73f",
  "patch_info": {
    "commit_hash": "716b53d0a14c72bda16c0872565dd1909757e73f",
    "repo": "openzfs/zfs",
    "commit_url": "https://github.com/openzfs/zfs/commit/716b53d0a14c72bda16c0872565dd1909757e73f",
    "files": [
      "include/os/freebsd/spl/sys/idmap.h",
      "include/os/freebsd/spl/sys/kidmap.h",
      "include/os/freebsd/spl/sys/sid.h",
      "module/Makefile.bsd",
      "module/os/freebsd/zfs/zfs_acl.c",
      "module/os/freebsd/zfs/zfs_fuid_os.c",
      "module/zfs/zfs_fuid.c"
    ],
    "message": "FreeBSD: Fix UNIX permissions checking\n\nReviewed-by: Ryan Moeller <ryan@iXsystems.com>\nReviewed-by: Brian Behlendorf <behlendorf1@llnl.gov>\nSigned-off-by: Matt Macy <mmacy@FreeBSD.org>\nCloses #10727",
    "before_after_code_files": [
      "include/os/freebsd/spl/sys/idmap.h||include/os/freebsd/spl/sys/idmap.h",
      "include/os/freebsd/spl/sys/kidmap.h||include/os/freebsd/spl/sys/kidmap.h",
      "include/os/freebsd/spl/sys/sid.h||include/os/freebsd/spl/sys/sid.h",
      "module/Makefile.bsd||module/Makefile.bsd",
      "module/os/freebsd/zfs/zfs_acl.c||module/os/freebsd/zfs/zfs_acl.c",
      "module/os/freebsd/zfs/zfs_fuid_os.c||module/os/freebsd/zfs/zfs_fuid_os.c",
      "module/zfs/zfs_fuid.c||module/zfs/zfs_fuid.c"
    ]
  },
  "patch_diff": {
    "include/os/freebsd/spl/sys/idmap.h||include/os/freebsd/spl/sys/idmap.h": [
      "File: include/os/freebsd/spl/sys/idmap.h -> include/os/freebsd/spl/sys/idmap.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: #ifndef _SYS_IDMAP_H",
      "27: #define _SYS_IDMAP_H",
      "31: #define IDMAP_SUCCESS   0",
      "32: #define IDMAP_NEXT   1",
      "33: #define IDMAP_ERR_OTHER   -10000",
      "34: #define IDMAP_ERR_INTERNAL  -9999",
      "35: #define IDMAP_ERR_MEMORY  -9998",
      "36: #define IDMAP_ERR_NORESULT  -9997",
      "37: #define IDMAP_ERR_NOTUSER  -9996",
      "38: #define IDMAP_ERR_NOTGROUP  -9995",
      "39: #define IDMAP_ERR_NOTSUPPORTED  -9994",
      "40: #define IDMAP_ERR_W2U_NAMERULE  -9993",
      "41: #define IDMAP_ERR_U2W_NAMERULE  -9992",
      "42: #define IDMAP_ERR_CACHE   -9991",
      "43: #define IDMAP_ERR_DB   -9990",
      "44: #define IDMAP_ERR_ARG   -9989",
      "45: #define IDMAP_ERR_SID   -9988",
      "46: #define IDMAP_ERR_IDTYPE  -9987",
      "47: #define IDMAP_ERR_RPC_HANDLE  -9986",
      "48: #define IDMAP_ERR_RPC   -9985",
      "49: #define IDMAP_ERR_CLIENT_HANDLE  -9984",
      "50: #define IDMAP_ERR_BUSY   -9983",
      "51: #define IDMAP_ERR_PERMISSION_DENIED -9982",
      "52: #define IDMAP_ERR_NOMAPPING  -9981",
      "53: #define IDMAP_ERR_NEW_ID_ALLOC_REQD -9980",
      "54: #define IDMAP_ERR_DOMAIN  -9979",
      "55: #define IDMAP_ERR_SECURITY  -9978",
      "56: #define IDMAP_ERR_NOTFOUND  -9977",
      "57: #define IDMAP_ERR_DOMAIN_NOTFOUND -9976",
      "58: #define IDMAP_ERR_UPDATE_NOTALLOWED -9975",
      "59: #define IDMAP_ERR_CFG   -9974",
      "60: #define IDMAP_ERR_CFG_CHANGE  -9973",
      "61: #define IDMAP_ERR_NOTMAPPED_WELLKNOWN -9972",
      "62: #define IDMAP_ERR_RETRIABLE_NET_ERR -9971",
      "63: #define IDMAP_ERR_W2U_NAMERULE_CONFLICT -9970",
      "64: #define IDMAP_ERR_U2W_NAMERULE_CONFLICT -9969",
      "65: #define IDMAP_ERR_BAD_UTF8  -9968",
      "66: #define IDMAP_ERR_NONE_GENERATED -9967",
      "67: #define IDMAP_ERR_PROP_UNKNOWN  -9966",
      "68: #define IDMAP_ERR_NS_LDAP_OP_FAILED -9965",
      "69: #define IDMAP_ERR_NS_LDAP_PARTIAL -9964",
      "70: #define IDMAP_ERR_NS_LDAP_CFG  -9963",
      "71: #define IDMAP_ERR_NS_LDAP_BAD_WINNAME -9962",
      "72: #define IDMAP_ERR_NO_ACTIVEDIRECTORY -9961",
      "76: #define IDMAP_WK_CREATOR_GROUP_GID 2147483649U",
      "77: #define IDMAP_WK__MAX_GID  2147483649U",
      "80: #define IDMAP_WK_CREATOR_OWNER_UID 2147483648U",
      "81: #define IDMAP_WK__MAX_UID  2147483648U",
      "84: #define IDMAP_WK_CREATOR_SID_AUTHORITY \"S-1-3\"",
      "91: #define IDMAP_MAX_DOOR_RPC  (256 * 1024)",
      "93: #define IDMAP_SENTINEL_PID  UINT32_MAX",
      "94: #define IDMAP_ID_IS_EPHEMERAL(pid) \\",
      "95:  (((pid) > INT32_MAX) && ((pid) != IDMAP_SENTINEL_PID))",
      "",
      "---------------"
    ],
    "include/os/freebsd/spl/sys/kidmap.h||include/os/freebsd/spl/sys/kidmap.h": [
      "File: include/os/freebsd/spl/sys/kidmap.h -> include/os/freebsd/spl/sys/kidmap.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29: #ifndef _OPENSOLARIS_SYS_KIDMAP_H_",
      "30: #define _OPENSOLARIS_SYS_KIDMAP_H_",
      "32: #include <sys/idmap.h>",
      "34: typedef int32_t idmap_stat;",
      "35: typedef void idmap_get_handle_t;",
      "37: #define kidmap_get_create()  (NULL)",
      "38: #define kidmap_get_destroy(hdl)  do { } while (0)",
      "39: #define kidmap_get_mappings(hdl) (NULL)",
      "",
      "---------------"
    ],
    "include/os/freebsd/spl/sys/sid.h||include/os/freebsd/spl/sys/sid.h": [
      "File: include/os/freebsd/spl/sys/sid.h -> include/os/freebsd/spl/sys/sid.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "29: #ifndef _OPENSOLARIS_SYS_SID_H_",
      "30: #define _OPENSOLARIS_SYS_SID_H_",
      "32: typedef struct ksiddomain {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31: #include <sys/idmap.h>",
      "32: #include <sys/kidmap.h>",
      "",
      "---------------"
    ],
    "module/Makefile.bsd||module/Makefile.bsd": [
      "File: module/Makefile.bsd -> module/Makefile.bsd",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: CFLAGS+= -I${INCDIR}/os/freebsd/zfs",
      "28: CFLAGS+= -include ${INCDIR}/os/freebsd/spl/sys/ccompile.h",
      "34: .if ${MACHINE_ARCH} == \"amd64\"",
      "35: CFLAGS+= -DHAVE_AVX2 -DHAVE_AVX -D__x86_64 -DHAVE_SSE2 -DHAVE_AVX512F -DHAVE_SSSE3",
      "",
      "[Removed Lines]",
      "30: CFLAGS+= -D__KERNEL__ -DFREEBSD_NAMECACHE -DBUILDING_ZFS  -D__BSD_VISIBLE=1",
      "31: CFLAGS+= -DHAVE_UIO_ZEROCOPY -DWITHOUT_NETDUMP -D__KERNEL -D_SYS_CONDVAR_H_",
      "32: CFLAGS+= -D_SYS_VMEM_H_ -DKDTRACE_HOOKS -DSMP",
      "",
      "[Added Lines]",
      "30: CFLAGS+= -D__KERNEL__ -DFREEBSD_NAMECACHE -DBUILDING_ZFS  -D__BSD_VISIBLE=1 \\",
      "31:   -DHAVE_UIO_ZEROCOPY -DWITHOUT_NETDUMP -D__KERNEL -D_SYS_CONDVAR_H_ \\",
      "32:   -D_SYS_VMEM_H_ -DKDTRACE_HOOKS -DSMP -DHAVE_KSID",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "276:  zfs_file_os.c \\",
      "277:  zfs_fm.c \\",
      "278:  zfs_fuid.c \\",
      "280:  zfs_ioctl.c \\",
      "281:  zfs_onexit.c \\",
      "282:  zfs_quota.c \\",
      "",
      "[Removed Lines]",
      "279:  zfs_fuid_os.c \\",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "module/os/freebsd/zfs/zfs_acl.c||module/os/freebsd/zfs/zfs_acl.c": [
      "File: module/os/freebsd/zfs/zfs_acl.c -> module/os/freebsd/zfs/zfs_acl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2305: int",
      "2306: zfs_fastaccesschk_execute(znode_t *zdp, cred_t *cr)",
      "2307: {",
      "2310:  boolean_t is_attr;",
      "2313:  if (zdp->z_pflags & ZFS_AV_QUARANTINED)",
      "2314:   return (1);",
      "",
      "[Removed Lines]",
      "2308:  boolean_t owner = B_FALSE;",
      "2309:  boolean_t groupmbr = B_FALSE;",
      "2311:  uid_t uid = crgetuid(cr);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2321:  if (zdp->z_pflags & ZFS_NO_EXECS_DENIED)",
      "2322:   return (0);",
      "2355:  return (1);",
      "2356: }",
      "",
      "[Removed Lines]",
      "2324:  mutex_enter(&zdp->z_acl_lock);",
      "2325:  if (FUID_INDEX(zdp->z_uid) != 0 || FUID_INDEX(zdp->z_gid) != 0) {",
      "2326:   goto out_slow;",
      "2327:  }",
      "2329:  if (uid == zdp->z_uid) {",
      "2330:   owner = B_TRUE;",
      "2331:   if (zdp->z_mode & S_IXUSR) {",
      "2332:    goto out;",
      "2333:   } else {",
      "2334:    goto out_slow;",
      "2335:   }",
      "2336:  }",
      "2337:  if (groupmember(zdp->z_gid, cr)) {",
      "2338:   groupmbr = B_TRUE;",
      "2339:   if (zdp->z_mode & S_IXGRP) {",
      "2340:    goto out;",
      "2341:   } else {",
      "2342:    goto out_slow;",
      "2343:   }",
      "2344:  }",
      "2345:  if (!owner && !groupmbr) {",
      "2346:   if (zdp->z_mode & S_IXOTH) {",
      "2347:    goto out;",
      "2348:   }",
      "2349:  }",
      "2350: out:",
      "2351:  mutex_exit(&zdp->z_acl_lock);",
      "2352:  return (0);",
      "2353: out_slow:",
      "2354:  mutex_exit(&zdp->z_acl_lock);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "module/os/freebsd/zfs/zfs_fuid_os.c||module/os/freebsd/zfs/zfs_fuid_os.c": [
      "File: module/os/freebsd/zfs/zfs_fuid_os.c -> module/os/freebsd/zfs/zfs_fuid_os.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "module/zfs/zfs_fuid.c||module/zfs/zfs_fuid.c": [
      "File: module/zfs/zfs_fuid.c -> module/zfs/zfs_fuid.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "387:      cr, ZFS_GROUP);",
      "388: }",
      "390: uid_t",
      "391: zfs_fuid_map_id(zfsvfs_t *zfsvfs, uint64_t fuid,",
      "392:     cred_t *cr, zfs_fuid_type_t type)",
      "393: {",
      "395:  uint32_t index = FUID_INDEX(fuid);",
      "396:  const char *domain;",
      "397:  uid_t id;",
      "",
      "[Removed Lines]",
      "394: #ifdef HAVE_KSID",
      "",
      "[Added Lines]",
      "390: #ifdef __FreeBSD__",
      "391: uid_t",
      "392: zfs_fuid_map_id(zfsvfs_t *zfsvfs, uint64_t fuid,",
      "393:     cred_t *cr, zfs_fuid_type_t type)",
      "394: {",
      "395:  uint32_t index = FUID_INDEX(fuid);",
      "397:  if (index == 0)",
      "398:   return (fuid);",
      "400:  return (UID_NOBODY);",
      "401: }",
      "402: #elif defined(__linux__)",
      "403: uid_t",
      "404: zfs_fuid_map_id(zfsvfs_t *zfsvfs, uint64_t fuid,",
      "405:     cred_t *cr, zfs_fuid_type_t type)",
      "406: {",
      "410:  return (fuid);",
      "411: }",
      "413: #else",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "410:       FUID_RID(fuid), &id);",
      "411:  }",
      "412:  return (id);",
      "419: }",
      "",
      "[Removed Lines]",
      "413: #else",
      "417:  return (fuid);",
      "",
      "[Added Lines]",
      "437: #endif",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "559:  const char *domain;",
      "560:  char *kdomain;",
      "561:  uint32_t fuid_idx = FUID_INDEX(id);",
      "563:  idmap_stat status;",
      "565:  zfs_fuid_t *zfuid = NULL;",
      "566:  zfs_fuid_info_t *fuidp = NULL;",
      "",
      "[Removed Lines]",
      "562:  uint32_t rid;",
      "564:  uint64_t idx = 0;",
      "",
      "[Added Lines]",
      "580:  uint32_t rid = 0;",
      "582:  uint64_t idx = UID_NOBODY;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "711: zfs_groupmember(zfsvfs_t *zfsvfs, uint64_t id, cred_t *cr)",
      "712: {",
      "713: #ifdef HAVE_KSID",
      "714:  ksid_t  *ksid = crgetsid(cr, KSID_GROUP);",
      "715:  ksidlist_t *ksidlist = crgetsidlist(cr);",
      "718:  if (ksid && ksidlist) {",
      "719:   int  i;",
      "",
      "[Removed Lines]",
      "716:  uid_t  gid;",
      "",
      "[Added Lines]",
      "732:  uid_t  gid;",
      "734: #ifdef illumos",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1c2725a157d1af79d73bbe980ff8db01086fd1e8",
      "candidate_info": {
        "commit_hash": "1c2725a157d1af79d73bbe980ff8db01086fd1e8",
        "repo": "openzfs/zfs",
        "commit_url": "https://github.com/openzfs/zfs/commit/1c2725a157d1af79d73bbe980ff8db01086fd1e8",
        "files": [
          "include/sys/arc_impl.h",
          "module/Makefile.bsd",
          "module/zfs/arc.c"
        ],
        "message": "FreeBSD: 11.x arc_stats compatibility\n\nRemoving other_size from arc_stats breaks top in 11.x jails\nrunning on HEAD.\n\nReviewed-by: Ryan Moeller <ryan@iXsystems.com>\nReviewed-by: Brian Behlendorf <behlendorf1@llnl.gov>\nSigned-off-by: Matt Macy <mmacy@FreeBSD.org>\nCloses #10745",
        "before_after_code_files": [
          "include/sys/arc_impl.h||include/sys/arc_impl.h",
          "module/Makefile.bsd||module/Makefile.bsd",
          "module/zfs/arc.c||module/zfs/arc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "module/Makefile.bsd||module/Makefile.bsd"
          ],
          "candidate": [
            "module/Makefile.bsd||module/Makefile.bsd"
          ]
        }
      },
      "candidate_diff": {
        "include/sys/arc_impl.h||include/sys/arc_impl.h": [
          "File: include/sys/arc_impl.h -> include/sys/arc_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "621:  kstat_named_t arcstat_bonus_size;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "622: #if defined(COMPAT_FREEBSD11)",
          "626:  kstat_named_t arcstat_other_size;",
          "627: #endif",
          "",
          "---------------"
        ],
        "module/Makefile.bsd||module/Makefile.bsd": [
          "File: module/Makefile.bsd -> module/Makefile.bsd",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: CFLAGS+= -D__KERNEL__ -DFREEBSD_NAMECACHE -DBUILDING_ZFS  -D__BSD_VISIBLE=1 \\",
          "35:   -DHAVE_UIO_ZEROCOPY -DWITHOUT_NETDUMP -D__KERNEL -D_SYS_CONDVAR_H_ \\",
          "38: .if ${MACHINE_ARCH} == \"amd64\"",
          "39: CFLAGS+= -DHAVE_AVX2 -DHAVE_AVX -D__x86_64 -DHAVE_SSE2 -DHAVE_AVX512F -DHAVE_SSSE3",
          "",
          "[Removed Lines]",
          "36:   -D_SYS_VMEM_H_ -DKDTRACE_HOOKS -DSMP -DHAVE_KSID",
          "",
          "[Added Lines]",
          "36:   -D_SYS_VMEM_H_ -DKDTRACE_HOOKS -DSMP -DHAVE_KSID -DCOMPAT_FREEBSD11",
          "",
          "---------------"
        ],
        "module/zfs/arc.c||module/zfs/arc.c": [
          "File: module/zfs/arc.c -> module/zfs/arc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "512:  { \"dbuf_size\",   KSTAT_DATA_UINT64 },",
          "513:  { \"dnode_size\",   KSTAT_DATA_UINT64 },",
          "514:  { \"bonus_size\",   KSTAT_DATA_UINT64 },",
          "515:  { \"anon_size\",   KSTAT_DATA_UINT64 },",
          "516:  { \"anon_evictable_data\", KSTAT_DATA_UINT64 },",
          "517:  { \"anon_evictable_metadata\", KSTAT_DATA_UINT64 },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "515: #if defined(COMPAT_FREEBSD11)",
          "516:  { \"other_size\",   KSTAT_DATA_UINT64 },",
          "517: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7121:   ARCSTAT(arcstat_hdr_size) = aggsum_value(&astat_hdr_size);",
          "7122:   ARCSTAT(arcstat_l2_hdr_size) = aggsum_value(&astat_l2_hdr_size);",
          "7123:   ARCSTAT(arcstat_dbuf_size) = aggsum_value(&astat_dbuf_size);",
          "7124:   ARCSTAT(arcstat_dnode_size) = aggsum_value(&astat_dnode_size);",
          "7125:   ARCSTAT(arcstat_bonus_size) = aggsum_value(&astat_bonus_size);",
          "7126:   ARCSTAT(arcstat_abd_chunk_waste_size) =",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7127: #if defined(COMPAT_FREEBSD11)",
          "7128:   ARCSTAT(arcstat_other_size) = aggsum_value(&astat_bonus_size) +",
          "7129:       aggsum_value(&astat_dnode_size) +",
          "7130:       aggsum_value(&astat_dbuf_size);",
          "7131: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5678d3f59389a241c8d9c032513c38209bb53e70",
      "candidate_info": {
        "commit_hash": "5678d3f59389a241c8d9c032513c38209bb53e70",
        "repo": "openzfs/zfs",
        "commit_url": "https://github.com/openzfs/zfs/commit/5678d3f59389a241c8d9c032513c38209bb53e70",
        "files": [
          "config/Rules.am",
          "include/os/freebsd/spl/sys/Makefile.am",
          "include/os/freebsd/spl/sys/byteorder.h",
          "include/os/freebsd/spl/sys/endian.h",
          "include/os/freebsd/spl/sys/isa_defs.h",
          "include/os/linux/spl/sys/byteorder.h",
          "include/os/linux/spl/sys/isa_defs.h",
          "include/sys/spa.h",
          "lib/libspl/include/os/freebsd/sys/byteorder.h",
          "lib/libspl/include/os/freebsd/sys/zfs_context_os.h",
          "lib/libspl/include/os/linux/sys/byteorder.h",
          "lib/libspl/include/sys/isa_defs.h",
          "module/Makefile.bsd",
          "module/icp/algs/aes/aes_impl_generic.c",
          "module/icp/algs/edonr/edonr_byteorder.h",
          "module/icp/algs/modes/ccm.c",
          "module/icp/algs/sha1/sha1.c",
          "module/icp/algs/sha2/sha2.c",
          "module/icp/algs/skein/skein_port.h",
          "module/nvpair/nvpair.c",
          "module/unicode/uconv.c",
          "module/zfs/lz4.c",
          "module/zfs/vdev_raidz_math_powerpc_altivec.c"
        ],
        "message": "Prefix zfs internal endian checks with _ZFS\n\nFreeBSD defines _BIG_ENDIAN BIG_ENDIAN _LITTLE_ENDIAN\nLITTLE_ENDIAN on every architecture. Trying to do\ncross builds whilst hiding this from ZFS has proven\nextremely cumbersome.\n\nReviewed-by: Ryan Moeller <ryan@ixsystems.com>\nReviewed-by: Brian Behlendorf <behlendorf1@llnl.gov>\nSigned-off-by: Matt Macy <mmacy@FreeBSD.org>\nCloses #10621",
        "before_after_code_files": [
          "config/Rules.am||config/Rules.am",
          "include/os/freebsd/spl/sys/Makefile.am||include/os/freebsd/spl/sys/Makefile.am",
          "include/os/freebsd/spl/sys/byteorder.h||include/os/freebsd/spl/sys/byteorder.h",
          "include/os/freebsd/spl/sys/endian.h||include/os/freebsd/spl/sys/endian.h",
          "include/os/freebsd/spl/sys/isa_defs.h||include/os/freebsd/spl/sys/isa_defs.h",
          "include/os/linux/spl/sys/byteorder.h||include/os/linux/spl/sys/byteorder.h",
          "include/os/linux/spl/sys/isa_defs.h||include/os/linux/spl/sys/isa_defs.h",
          "include/sys/spa.h||include/sys/spa.h",
          "lib/libspl/include/os/freebsd/sys/byteorder.h||lib/libspl/include/os/freebsd/sys/byteorder.h",
          "lib/libspl/include/os/freebsd/sys/zfs_context_os.h||lib/libspl/include/os/freebsd/sys/zfs_context_os.h",
          "lib/libspl/include/os/linux/sys/byteorder.h||lib/libspl/include/os/linux/sys/byteorder.h",
          "lib/libspl/include/sys/isa_defs.h||lib/libspl/include/sys/isa_defs.h",
          "module/Makefile.bsd||module/Makefile.bsd",
          "module/icp/algs/aes/aes_impl_generic.c||module/icp/algs/aes/aes_impl_generic.c",
          "module/icp/algs/edonr/edonr_byteorder.h||module/icp/algs/edonr/edonr_byteorder.h",
          "module/icp/algs/modes/ccm.c||module/icp/algs/modes/ccm.c",
          "module/icp/algs/sha1/sha1.c||module/icp/algs/sha1/sha1.c",
          "module/icp/algs/sha2/sha2.c||module/icp/algs/sha2/sha2.c",
          "module/icp/algs/skein/skein_port.h||module/icp/algs/skein/skein_port.h",
          "module/nvpair/nvpair.c||module/nvpair/nvpair.c",
          "module/unicode/uconv.c||module/unicode/uconv.c",
          "module/zfs/lz4.c||module/zfs/lz4.c",
          "module/zfs/vdev_raidz_math_powerpc_altivec.c||module/zfs/vdev_raidz_math_powerpc_altivec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "module/Makefile.bsd||module/Makefile.bsd"
          ],
          "candidate": [
            "module/Makefile.bsd||module/Makefile.bsd"
          ]
        }
      },
      "candidate_diff": {
        "config/Rules.am||config/Rules.am": [
          "File: config/Rules.am -> config/Rules.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: AM_CFLAGS += -fPIC -Werror -Wno-unknown-pragmas -Wno-enum-conversion",
          "33: AM_CFLAGS += -include $(top_srcdir)/include/os/freebsd/spl/sys/ccompile.h",
          "34: AM_CFLAGS += -I/usr/include -I/usr/local/include",
          "36: endif",
          "38: AM_CPPFLAGS  = -D_GNU_SOURCE",
          "",
          "[Removed Lines]",
          "35: AM_CFLAGS += -D_MACHINE_ENDIAN_H_",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/os/freebsd/spl/sys/Makefile.am||include/os/freebsd/spl/sys/Makefile.am": [
          "File: include/os/freebsd/spl/sys/Makefile.am -> include/os/freebsd/spl/sys/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  dirent.h \\",
          "15:  disp.h \\",
          "16:  dkio.h \\",
          "18:  extdirent.h \\",
          "19:  file.h \\",
          "20:  freebsd_rwlock.h \\",
          "",
          "[Removed Lines]",
          "17:  endian.h \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/os/freebsd/spl/sys/byteorder.h||include/os/freebsd/spl/sys/byteorder.h": [
          "File: include/os/freebsd/spl/sys/byteorder.h -> include/os/freebsd/spl/sys/byteorder.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #define BE_8(x)  BMASK_8(x)",
          "65: #define BE_16(x) BMASK_16(x)",
          "66: #define BE_32(x) BMASK_32(x)",
          "",
          "[Removed Lines]",
          "63: #if BYTE_ORDER == BIG_ENDIAN",
          "",
          "[Added Lines]",
          "63: #if BYTE_ORDER == _BIG_ENDIAN",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80: #define BE_64(x) BSWAP_64(x)",
          "81: #endif",
          "84: #define htonll(x) BMASK_64(x)",
          "85: #define ntohll(x) BMASK_64(x)",
          "86: #else",
          "",
          "[Removed Lines]",
          "83: #if BYTE_ORDER == BIG_ENDIAN",
          "",
          "[Added Lines]",
          "83: #if BYTE_ORDER == _BIG_ENDIAN",
          "",
          "---------------"
        ],
        "include/os/freebsd/spl/sys/endian.h||include/os/freebsd/spl/sys/endian.h": [
          "File: include/os/freebsd/spl/sys/endian.h -> include/os/freebsd/spl/sys/endian.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/os/freebsd/spl/sys/isa_defs.h||include/os/freebsd/spl/sys/isa_defs.h": [
          "File: include/os/freebsd/spl/sys/isa_defs.h -> include/os/freebsd/spl/sys/isa_defs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #ifndef _SYS_ISA_DEFS_H",
          "29: #define _SYS_ISA_DEFS_H",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: #include <sys/endian.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "696: #error \"Both _ILP32 and _LP64 are defined\"",
          "697: #endif",
          "699: #ifdef __cplusplus",
          "700: }",
          "701: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "700: #if BYTE_ORDER == _BIG_ENDIAN",
          "701: #define _ZFS_BIG_ENDIAN",
          "702: #elif BYTE_ORDER == _LITTLE_ENDIAN",
          "703: #define _ZFS_LITTLE_ENDIAN",
          "704: #else",
          "705: #error \"unknown byte order\"",
          "706: #endif",
          "",
          "---------------"
        ],
        "include/os/linux/spl/sys/byteorder.h||include/os/linux/spl/sys/byteorder.h": [
          "File: include/os/linux/spl/sys/byteorder.h -> include/os/linux/spl/sys/byteorder.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #define _SPL_BYTEORDER_H",
          "28: #include <asm/byteorder.h>",
          "29: #include <sys/isa_defs.h>",
          "31: #define BSWAP_8(x) ((x) & 0xff)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: #if defined(__BIG_ENDIAN) && !defined(_ZFS_BIG_ENDIAN)",
          "31: #define _ZFS_BIG_ENDIAN",
          "32: #endif",
          "34: #if defined(__LITTLE_ENDIAN) && !defined(_ZFS_LITTLE_ENDIAN)",
          "35: #define _ZFS_LITTLE_ENDIAN",
          "36: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49: #define BE_IN32(xa) \\",
          "50:  (((uint32_t)BE_IN16(xa) << 16) | BE_IN16((uint8_t *)(xa)+2))",
          "53: static __inline__ uint64_t",
          "54: htonll(uint64_t n)",
          "55: {",
          "",
          "[Removed Lines]",
          "52: #ifdef _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "61: #ifdef _ZFS_BIG_ENDIAN",
          "",
          "---------------"
        ],
        "include/os/linux/spl/sys/isa_defs.h||include/os/linux/spl/sys/isa_defs.h": [
          "File: include/os/linux/spl/sys/isa_defs.h -> include/os/linux/spl/sys/isa_defs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "117: #endif",
          "119: #if defined(__ARMEL__) || defined(__AARCH64EL__)",
          "121: #else",
          "123: #endif",
          "",
          "[Removed Lines]",
          "120: #define _LITTLE_ENDIAN",
          "122: #define _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "120: #define _ZFS_LITTLE_ENDIAN",
          "122: #define _ZFS_BIG_ENDIAN",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "149: #endif",
          "150: #endif",
          "153: #define _SUNOS_VTOC_16",
          "154: #define _ALIGNMENT_REQUIRED 1",
          "",
          "[Removed Lines]",
          "152: #define _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "152: #define _ZFS_BIG_ENDIAN",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "165: #endif",
          "166: #endif",
          "",
          "[Removed Lines]",
          "168: #define _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "168: #define _ZFS_BIG_ENDIAN",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "177: #elif defined(__mips__)",
          "179: #if defined(__MIPSEB__)",
          "181: #elif defined(__MIPSEL__)",
          "183: #else",
          "184: #error MIPS no endian specified",
          "185: #endif",
          "",
          "[Removed Lines]",
          "180: #define _BIG_ENDIAN",
          "182: #define _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "180: #define _ZFS_BIG_ENDIAN",
          "182: #define _ZFS_LITTLE_ENDIAN",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "211: #define __rv64g__",
          "212: #endif",
          "216: #define _SUNOS_VTOC_16",
          "",
          "[Removed Lines]",
          "214: #define _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "214: #define _ZFS_LITTLE_ENDIAN",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "243: #define HAVE_EFFICIENT_UNALIGNED_ACCESS",
          "244: #endif",
          "248: #endif",
          "260: #endif",
          "",
          "[Removed Lines]",
          "246: #if defined(__LITTLE_ENDIAN) && !defined(_LITTLE_ENDIAN)",
          "247: #define _LITTLE_ENDIAN __LITTLE_ENDIAN",
          "250: #if defined(__BIG_ENDIAN) && !defined(_BIG_ENDIAN)",
          "251: #define _BIG_ENDIAN __BIG_ENDIAN",
          "252: #endif",
          "254: #if defined(_LITTLE_ENDIAN) && defined(_BIG_ENDIAN)",
          "255: #error \"Both _LITTLE_ENDIAN and _BIG_ENDIAN are defined\"",
          "256: #endif",
          "258: #if !defined(_LITTLE_ENDIAN) && !defined(_BIG_ENDIAN)",
          "259: #error \"Neither _LITTLE_ENDIAN or _BIG_ENDIAN are defined\"",
          "",
          "[Added Lines]",
          "246: #if defined(_ZFS_LITTLE_ENDIAN) && defined(_ZFS_BIG_ENDIAN)",
          "247: #error \"Both _ZFS_LITTLE_ENDIAN and _ZFS_BIG_ENDIAN are defined\"",
          "250: #if !defined(_ZFS_LITTLE_ENDIAN) && !defined(_ZFS_BIG_ENDIAN)",
          "251: #error \"Neither _ZFS_LITTLE_ENDIAN or _ZFS_BIG_ENDIAN are defined\"",
          "",
          "---------------"
        ],
        "include/sys/spa.h||include/sys/spa.h": [
          "File: include/sys/spa.h -> include/sys/spa.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "600:  ZIO_SET_CHECKSUM(&(bp)->blk_cksum, 0, 0, 0, 0); \\",
          "601: }",
          "604: #define ZFS_HOST_BYTEORDER (0ULL)",
          "605: #else",
          "606: #define ZFS_HOST_BYTEORDER (1ULL)",
          "",
          "[Removed Lines]",
          "603: #ifdef _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "603: #ifdef _ZFS_BIG_ENDIAN",
          "",
          "---------------"
        ],
        "lib/libspl/include/os/freebsd/sys/byteorder.h||lib/libspl/include/os/freebsd/sys/byteorder.h": [
          "File: lib/libspl/include/os/freebsd/sys/byteorder.h -> lib/libspl/include/os/freebsd/sys/byteorder.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: #ifndef _SYS_BYTEORDER_H",
          "41: #define _SYS_BYTEORDER_H",
          "128: #include <sys/isa_defs.h>",
          "129: #include <sys/int_types.h>",
          "",
          "[Removed Lines]",
          "49: #include <sys/cdefs.h>",
          "50: #include <sys/_types.h>",
          "55: #define _QUAD_HIGHWORD 1",
          "56: #define _QUAD_LOWWORD 0",
          "62: #undef _LITTLE_ENDIAN",
          "64: #define _LITTLE_ENDIAN 1234",
          "66: #define _PDP_ENDIAN  3412",
          "68: #define _BYTE_ORDER  _LITTLE_ENDIAN",
          "74: #if __BSD_VISIBLE",
          "75: #define LITTLE_ENDIAN _LITTLE_ENDIAN",
          "76: #define PDP_ENDIAN  _PDP_ENDIAN",
          "77: #define BYTE_ORDER  _BYTE_ORDER",
          "78: #endif",
          "80: #define __bswap16_gen(x) (__uint16_t)((x) << 8 | (x) >> 8)",
          "81: #define __bswap32_gen(x)                \\",
          "82:  (((__uint32_t)__bswap16((x) & 0xffff) << 16) | __bswap16((x) >> 16))",
          "83: #define __bswap64_gen(x)                \\",
          "84:  (((__uint64_t)__bswap32((x) & 0xffffffff) << 32) | __bswap32((x) >> 32))",
          "86: #ifdef __GNUCLIKE_BUILTIN_CONSTANT_P",
          "87: #define __bswap16(x)                            \\",
          "88:  ((__uint16_t)(__builtin_constant_p(x) ? \\",
          "89:  __bswap16_gen((__uint16_t)(x)) : __bswap16_var(x)))",
          "90: #define __bswap32(x)                    \\",
          "91:  (__builtin_constant_p(x) ?      \\",
          "92:  __bswap32_gen((__uint32_t)(x)) : __bswap32_var(x))",
          "93: #define __bswap64(x)                    \\",
          "94:  (__builtin_constant_p(x) ?      \\",
          "95:  __bswap64_gen((__uint64_t)(x)) : __bswap64_var(x))",
          "96: #else",
          "98: #define __bswap16(x)    __bswap16_var(x)",
          "99: #define __bswap32(x)    __bswap32_var(x)",
          "100: #define __bswap64(x)    __bswap64_var(x)",
          "101: #endif",
          "105: static __inline __uint16_t",
          "106: __bswap16_var(__uint16_t _x)",
          "107: {",
          "109:  return (__bswap16_gen(_x));",
          "110: }",
          "112: static __inline __uint32_t",
          "113: __bswap32_var(__uint32_t _x)",
          "114: {",
          "116: #ifdef __GNUCLIKE_ASM",
          "117:  __asm(\"bswap %0\" : \"+r\" (_x));",
          "118:  return (_x);",
          "119: #else",
          "120:  return (__bswap32_gen(_x));",
          "121: #endif",
          "122: }",
          "123: #define __htonl(x) __bswap32(x)",
          "124: #define __htons(x) __bswap16(x)",
          "125: #define __ntohl(x) __bswap32(x)",
          "126: #define __ntohs(x) __bswap16(x)",
          "",
          "[Added Lines]",
          "43: #include <sys/endian.h>",
          "44: #include <netinet/in.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179: #if !defined(_XPG4_2) || defined(__EXTENSIONS__)",
          "",
          "[Removed Lines]",
          "144: #if defined(_BIG_ENDIAN) && !defined(ntohl) && !defined(__lint)",
          "146: #if defined(_BIG_ENDIAN) && (defined(__amd64__) || defined(__amd64))",
          "147: #error \"incompatible ENDIAN / ARCH combination\"",
          "148: #endif",
          "149: #define ntohl(x) (x)",
          "150: #define ntohs(x) (x)",
          "151: #define htonl(x) (x)",
          "152: #define htons(x) (x)",
          "156: #ifndef _IN_PORT_T",
          "157: #define _IN_PORT_T",
          "158: typedef uint16_t in_port_t;",
          "159: #endif",
          "161: #ifndef _IN_ADDR_T",
          "162: #define _IN_ADDR_T",
          "163: typedef uint32_t in_addr_t;",
          "164: #endif",
          "166: #if !defined(_XPG4_2) || defined(__EXTENSIONS__) || defined(_XPG5)",
          "167: extern uint32_t htonl(uint32_t);",
          "168: extern uint16_t htons(uint16_t);",
          "169: extern  uint32_t ntohl(uint32_t);",
          "170: extern uint16_t ntohs(uint16_t);",
          "171: #else",
          "172: extern in_addr_t htonl(in_addr_t);",
          "173: extern in_port_t htons(in_port_t);",
          "174: extern  in_addr_t ntohl(in_addr_t);",
          "175: extern in_port_t ntohs(in_port_t);",
          "177: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "198: #define BE_8(x)  BMASK_8(x)",
          "199: #define BE_16(x) BMASK_16(x)",
          "200: #define BE_32(x) BMASK_32(x)",
          "",
          "[Removed Lines]",
          "197: #ifdef _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "78: #ifdef _ZFS_BIG_ENDIAN",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "214: #define BE_64(x) BSWAP_64(x)",
          "215: #endif",
          "218: static __inline__ uint64_t",
          "219: htonll(uint64_t n)",
          "220: {",
          "",
          "[Removed Lines]",
          "217: #ifdef _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "98: #ifdef _ZFS_BIG_ENDIAN",
          "",
          "---------------"
        ],
        "lib/libspl/include/os/freebsd/sys/zfs_context_os.h||lib/libspl/include/os/freebsd/sys/zfs_context_os.h": [
          "File: lib/libspl/include/os/freebsd/sys/zfs_context_os.h -> lib/libspl/include/os/freebsd/sys/zfs_context_os.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #ifndef ZFS_CONTEXT_OS_H_",
          "30: #define ZFS_CONTEXT_OS_H_",
          "36: #define ZFS_EXPORTS_PATH \"/etc/zfs/exports\"",
          "38: #endif",
          "",
          "[Removed Lines]",
          "32: #if BYTE_ORDER != BIG_ENDIAN",
          "33: #undef _BIG_ENDIAN",
          "34: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/libspl/include/os/linux/sys/byteorder.h||lib/libspl/include/os/linux/sys/byteorder.h": [
          "File: lib/libspl/include/os/linux/sys/byteorder.h -> lib/libspl/include/os/linux/sys/byteorder.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: #ifndef _SYS_BYTEORDER_H",
          "41: #define _SYS_BYTEORDER_H",
          "48: #if defined(__GNUC__) && defined(_ASM_INLINES) && \\",
          "49:  (defined(__i386) || defined(__amd64))",
          "50: #include <asm/byteorder.h>",
          "51: #endif",
          "53: #ifdef __cplusplus",
          "54: extern \"C\" {",
          "55: #endif",
          "",
          "[Removed Lines]",
          "45: #include <sys/isa_defs.h>",
          "46: #include <sys/int_types.h>",
          "",
          "[Added Lines]",
          "48: #include <sys/isa_defs.h>",
          "49: #include <sys/int_types.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63: #define ntohl(x) (x)",
          "64: #define ntohs(x) (x)",
          "",
          "[Removed Lines]",
          "61: #if defined(_BIG_ENDIAN) && !defined(ntohl) && !defined(__lint)",
          "",
          "[Added Lines]",
          "59: #if defined(_ZFS_BIG_ENDIAN) && !defined(ntohl) && !defined(__lint)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "112: #define BE_8(x)  BMASK_8(x)",
          "113: #define BE_16(x) BMASK_16(x)",
          "114: #define BE_32(x) BMASK_32(x)",
          "",
          "[Removed Lines]",
          "111: #ifdef _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "109: #ifdef _ZFS_BIG_ENDIAN",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "128: #define BE_64(x) BSWAP_64(x)",
          "129: #endif",
          "132: static __inline__ uint64_t",
          "133: htonll(uint64_t n)",
          "134: {",
          "",
          "[Removed Lines]",
          "131: #ifdef _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "129: #ifdef _ZFS_BIG_ENDIAN",
          "",
          "---------------"
        ],
        "lib/libspl/include/sys/isa_defs.h||lib/libspl/include/sys/isa_defs.h": [
          "File: lib/libspl/include/sys/isa_defs.h -> lib/libspl/include/sys/isa_defs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: #endif",
          "55: #endif",
          "59: #endif",
          "61: #define _SUNOS_VTOC_16",
          "",
          "[Removed Lines]",
          "57: #if !defined(_LITTLE_ENDIAN)",
          "58: #define _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "57: #if !defined(_ZFS_LITTLE_ENDIAN)",
          "58: #define _ZFS_LITTLE_ENDIAN",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76: #define _ILP32",
          "77: #endif",
          "81: #endif",
          "83: #define _SUNOS_VTOC_16",
          "",
          "[Removed Lines]",
          "79: #if !defined(_LITTLE_ENDIAN)",
          "80: #define _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "79: #if !defined(_ZFS_LITTLE_ENDIAN)",
          "80: #define _ZFS_LITTLE_ENDIAN",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107: #define _SUNOS_VTOC_16",
          "108: #define HAVE_EFFICIENT_UNALIGNED_ACCESS",
          "111: #elif defined(__arm) || defined(__arm__) || defined(__aarch64__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "110: #if defined(__BYTE_ORDER)",
          "111: #if defined(__BIG_ENDIAN) && __BYTE_ORDER == __BIG_ENDIAN",
          "112: #define _ZFS_BIG_ENDIAN",
          "113: #elif defined(__LITTLE_ENDIAN) && __BYTE_ORDER == __LITTLE_ENDIAN",
          "114: #define _ZFS_LITTLE_ENDIAN",
          "115: #endif",
          "116: #elif defined(_BYTE_ORDER)",
          "117: #if defined(_BIG_ENDIAN) && _BYTE_ORDER == _BIG_ENDIAN",
          "118: #define _ZFS_BIG_ENDIAN",
          "119: #elif defined(_LITTLE_ENDIAN) && _BYTE_ORDER == _LITTLE_ENDIAN",
          "120: #define _ZFS_LITTLE_ENDIAN",
          "121: #endif",
          "122: #elif defined(_BIG_ENDIAN) && !defined(_LITTLE_ENDIAN)",
          "123: #define _ZFS_BIG_ENDIAN",
          "124: #elif defined(_LITTLE_ENDIAN) && !defined(_BIG_ENDIAN)",
          "125: #define _ZFS_LITTLE_ENDIAN",
          "126: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "129: #endif",
          "131: #if defined(__ARMEL__) || defined(__AARCH64EL__)",
          "133: #else",
          "135: #endif",
          "137: #define _SUNOS_VTOC_16",
          "",
          "[Removed Lines]",
          "132: #define _LITTLE_ENDIAN",
          "134: #define _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "150: #define _ZFS_LITTLE_ENDIAN",
          "152: #define _ZFS_BIG_ENDIAN",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "151: #define __sparc__",
          "152: #endif",
          "155: #define _SUNOS_VTOC_16",
          "157: #if defined(__arch64__)",
          "",
          "[Removed Lines]",
          "154: #define _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "172: #define _ZFS_BIG_ENDIAN",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "176: #endif",
          "177: #endif",
          "180: #define _SUNOS_VTOC_16",
          "183: #elif defined(__mips__)",
          "185: #if defined(__MIPSEB__)",
          "187: #elif defined(__MIPSEL__)",
          "189: #else",
          "190: #error MIPS no endian specified",
          "191: #endif",
          "",
          "[Removed Lines]",
          "179: #define _BIG_ENDIAN",
          "186: #define _BIG_ENDIAN",
          "188: #define _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "197: #define _ZFS_BIG_ENDIAN",
          "204: #define _ZFS_BIG_ENDIAN",
          "206: #define _ZFS_LITTLE_ENDIAN",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "211: #define __rv64g__",
          "212: #endif",
          "216: #define _SUNOS_VTOC_16",
          "",
          "[Removed Lines]",
          "214: #define _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "232: #define _ZFS_LITTLE_ENDIAN",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "231: #error \"Neither _ILP32 or _LP64 are defined\"",
          "232: #endif",
          "236: #endif",
          "240: #endif",
          "242: #ifdef  __cplusplus",
          "",
          "[Removed Lines]",
          "234: #if defined(_LITTLE_ENDIAN) && defined(_BIG_ENDIAN)",
          "235: #error \"Both _LITTLE_ENDIAN and _BIG_ENDIAN are defined\"",
          "238: #if !defined(_LITTLE_ENDIAN) && !defined(_BIG_ENDIAN)",
          "239: #error \"Neither _LITTLE_ENDIAN nor _BIG_ENDIAN are defined\"",
          "",
          "[Added Lines]",
          "252: #if defined(_ZFS_LITTLE_ENDIAN) && defined(_ZFS_BIG_ENDIAN)",
          "253: #error \"Both _ZFS_LITTLE_ENDIAN and _ZFS_BIG_ENDIAN are defined\"",
          "256: #if !defined(_ZFS_LITTLE_ENDIAN) && !defined(_ZFS_BIG_ENDIAN)",
          "257: #error \"Neither _ZFS_LITTLE_ENDIAN nor _ZFS_BIG_ENDIAN are defined\"",
          "",
          "---------------"
        ],
        "module/Makefile.bsd||module/Makefile.bsd": [
          "File: module/Makefile.bsd -> module/Makefile.bsd",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: CFLAGS+= -D__KERNEL__ -DFREEBSD_NAMECACHE -DBUILDING_ZFS  -D__BSD_VISIBLE=1",
          "31: CFLAGS+= -DHAVE_UIO_ZEROCOPY -DWITHOUT_NETDUMP -D__KERNEL -D_SYS_CONDVAR_H_",
          "34: .if ${MACHINE_ARCH} == \"amd64\"",
          "35: CFLAGS+= -DHAVE_AVX2 -DHAVE_AVX -D__x86_64 -DHAVE_SSE2 -DHAVE_AVX512F -DHAVE_SSSE3",
          "",
          "[Removed Lines]",
          "32: CFLAGS+= -D_SYS_VMEM_H_ -D_MACHINE_ENDIAN_H_ -DKDTRACE_HOOKS -DSMP",
          "",
          "[Added Lines]",
          "32: CFLAGS+= -D_SYS_VMEM_H_ -DKDTRACE_HOOKS -DSMP",
          "",
          "---------------"
        ],
        "module/icp/algs/aes/aes_impl_generic.c||module/icp/algs/aes/aes_impl_generic.c": [
          "File: module/icp/algs/aes/aes_impl_generic.c -> module/icp/algs/aes/aes_impl_generic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1233:  .encrypt = &aes_generic_encrypt,",
          "1234:  .decrypt = &aes_generic_decrypt,",
          "1235:  .is_supported = &aes_generic_will_work,",
          "1237:  .needs_byteswap = B_TRUE,",
          "1238: #else",
          "1239:  .needs_byteswap = B_FALSE,",
          "",
          "[Removed Lines]",
          "1236: #if defined(_LITTLE_ENDIAN)",
          "",
          "[Added Lines]",
          "1236: #if defined(_ZFS_LITTLE_ENDIAN)",
          "",
          "---------------"
        ],
        "module/icp/algs/edonr/edonr_byteorder.h||module/icp/algs/edonr/edonr_byteorder.h": [
          "File: module/icp/algs/edonr/edonr_byteorder.h -> module/icp/algs/edonr/edonr_byteorder.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: #if !defined(MACHINE_IS_BIG_ENDIAN) && !defined(MACHINE_IS_LITTLE_ENDIAN)",
          "56: #define MACHINE_IS_BIG_ENDIAN",
          "57: #endif",
          "59: #define MACHINE_IS_LITTLE_ENDIAN",
          "60: #endif",
          "",
          "[Removed Lines]",
          "55: #if defined(_BIG_ENDIAN) || defined(_MIPSEB)",
          "58: #if defined(_LITTLE_ENDIAN) || defined(_MIPSEL)",
          "",
          "[Added Lines]",
          "55: #if defined(_ZFS_BIG_ENDIAN) || defined(_MIPSEB)",
          "58: #if defined(_ZFS_LITTLE_ENDIAN) || defined(_MIPSEL)",
          "",
          "---------------"
        ],
        "module/icp/algs/modes/ccm.c||module/icp/algs/modes/ccm.c": [
          "File: module/icp/algs/modes/ccm.c -> module/icp/algs/modes/ccm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:   counter = ntohll(ctx->ccm_cb[1] & ctx->ccm_counter_mask);",
          "112:   counter = htonll(counter + 1);",
          "113: #else",
          "114:   counter = ctx->ccm_cb[1] & ctx->ccm_counter_mask;",
          "115:   counter++;",
          "117:   counter &= ctx->ccm_counter_mask;",
          "118:   ctx->ccm_cb[1] =",
          "119:       (ctx->ccm_cb[1] & ~(ctx->ccm_counter_mask)) | counter;",
          "",
          "[Removed Lines]",
          "110: #ifdef _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "110: #ifdef _ZFS_LITTLE_ENDIAN",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "462:   counter = ntohll(ctx->ccm_cb[1] & ctx->ccm_counter_mask);",
          "463:   counter = htonll(counter + 1);",
          "464: #else",
          "465:   counter = ctx->ccm_cb[1] & ctx->ccm_counter_mask;",
          "466:   counter++;",
          "468:   counter &= ctx->ccm_counter_mask;",
          "469:   ctx->ccm_cb[1] =",
          "470:       (ctx->ccm_cb[1] & ~(ctx->ccm_counter_mask)) | counter;",
          "",
          "[Removed Lines]",
          "461: #ifdef _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "461: #ifdef _ZFS_LITTLE_ENDIAN",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "684:   mask |= (1ULL << q);",
          "685:  }",
          "688:  mask = htonll(mask);",
          "689: #endif",
          "690:  aes_ctx->ccm_counter_mask = mask;",
          "",
          "[Removed Lines]",
          "687: #ifdef _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "687: #ifdef _ZFS_LITTLE_ENDIAN",
          "",
          "---------------"
        ],
        "module/icp/algs/sha1/sha1.c||module/icp/algs/sha1/sha1.c": [
          "File: module/icp/algs/sha1/sha1.c -> module/icp/algs/sha1/sha1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "230: #define LOAD_BIG_32(addr) (*(uint32_t *)(addr))",
          "232: #elif defined(HAVE_HTONL)",
          "233: #define LOAD_BIG_32(addr) htonl(*((uint32_t *)(addr)))",
          "235: #else",
          "",
          "[Removed Lines]",
          "229: #if defined(_BIG_ENDIAN)",
          "237: #define LOAD_BIG_32(addr) \\",
          "238:  (((addr)[0] << 24) | ((addr)[1] << 16) | ((addr)[2] << 8) | (addr)[3])",
          "",
          "[Added Lines]",
          "229: #if defined(_ZFS_BIG_ENDIAN)",
          "236: #define LOAD_BIG_32(addr) BE_32(*((uint32_t *)(addr)))",
          "",
          "---------------"
        ],
        "module/icp/algs/sha2/sha2.c||module/icp/algs/sha2/sha2.c": [
          "File: module/icp/algs/sha2/sha2.c -> module/icp/algs/sha2/sha2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: #define _RESTRICT_KYWD",
          "47: #include <sys/byteorder.h>",
          "48: #define HAVE_HTONL",
          "49: #endif",
          "",
          "[Removed Lines]",
          "46: #ifdef _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "46: #ifdef _ZFS_LITTLE_ENDIAN",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127: #define LOAD_BIG_32(addr) (*(uint32_t *)(addr))",
          "128: #define LOAD_BIG_64(addr) (*(uint64_t *)(addr))",
          "",
          "[Removed Lines]",
          "126: #if defined(_BIG_ENDIAN)",
          "",
          "[Added Lines]",
          "126: #if defined(_ZFS_BIG_ENDIAN)",
          "",
          "---------------"
        ],
        "module/icp/algs/skein/skein_port.h||module/icp/algs/skein/skein_port.h": [
          "File: module/icp/algs/skein/skein_port.h -> module/icp/algs/skein/skein_port.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: #define SKEIN_NEED_SWAP   (1)",
          "50: #else",
          "",
          "[Removed Lines]",
          "47: #if defined(_BIG_ENDIAN)",
          "",
          "[Added Lines]",
          "47: #if defined(_ZFS_BIG_ENDIAN)",
          "",
          "---------------"
        ],
        "module/nvpair/nvpair.c||module/nvpair/nvpair.c": [
          "File: module/nvpair/nvpair.c -> module/nvpair/nvpair.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2555:  int err = 0;",
          "2556:  nvstream_t nvs;",
          "2557:  int nvl_endian;",
          "2559:  int host_endian = 1;",
          "2561:  int host_endian = 0;",
          "2563:  nvs_header_t *nvh;",
          "2565:  if (buflen == NULL || nvl == NULL ||",
          "",
          "[Removed Lines]",
          "2558: #ifdef _LITTLE_ENDIAN",
          "2560: #else",
          "",
          "[Added Lines]",
          "2558: #if defined(_ZFS_LITTLE_ENDIAN)",
          "2560: #elif defined(_ZFS_BIG_ENDIAN)",
          "2562: #else",
          "2563: #error \"No endian defined!\"",
          "",
          "---------------"
        ],
        "module/unicode/uconv.c||module/unicode/uconv.c": [
          "File: module/unicode/uconv.c -> module/unicode/uconv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: #define UCONV_OUT_ENDIAN_MASKS (UCONV_OUT_BIG_ENDIAN | UCONV_OUT_LITTLE_ENDIAN)",
          "73: #define UCONV_IN_NAT_ENDIAN UCONV_IN_BIG_ENDIAN",
          "74: #define UCONV_IN_REV_ENDIAN UCONV_IN_LITTLE_ENDIAN",
          "75: #define UCONV_OUT_NAT_ENDIAN UCONV_OUT_BIG_ENDIAN",
          "",
          "[Removed Lines]",
          "72: #ifdef _BIG_ENDIAN",
          "",
          "[Added Lines]",
          "72: #ifdef _ZFS_BIG_ENDIAN",
          "",
          "---------------"
        ],
        "module/zfs/lz4.c||module/zfs/lz4.c": [
          "File: module/zfs/lz4.c -> module/zfs/lz4.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "212: #define LZ4_BIG_ENDIAN 1",
          "213: #else",
          "",
          "[Removed Lines]",
          "211: #if defined(_BIG_ENDIAN)",
          "",
          "[Added Lines]",
          "211: #if defined(_ZFS_BIG_ENDIAN)",
          "",
          "---------------"
        ],
        "module/zfs/vdev_raidz_math_powerpc_altivec.c||module/zfs/vdev_raidz_math_powerpc_altivec.c": [
          "File: module/zfs/vdev_raidz_math_powerpc_altivec.c -> module/zfs/vdev_raidz_math_powerpc_altivec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "227: #if defined(__powerpc__)",
          "230: const uint8_t",
          "231: __attribute__((aligned(256))) gf_clmul_mod_lt[4*256][16] = {",
          "",
          "[Removed Lines]",
          "228: #if defined(_LITTLE_ENDIAN) && _LITTLE_ENDIAN",
          "",
          "[Added Lines]",
          "228: #if defined(_ZFS_LITTLE_ENDIAN) && _LITTLE_ENDIAN",
          "",
          "---------------"
        ]
      }
    }
  ]
}