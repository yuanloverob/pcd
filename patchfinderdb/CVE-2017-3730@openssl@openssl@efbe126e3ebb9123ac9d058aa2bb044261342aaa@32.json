{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "13af417ba4f6b826833d4b1f6caa39c4e0013d6f",
      "candidate_info": {
        "commit_hash": "13af417ba4f6b826833d4b1f6caa39c4e0013d6f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/13af417ba4f6b826833d4b1f6caa39c4e0013d6f",
        "files": [
          "crypto/rand/randfile.c"
        ],
        "message": "rand/randfile.c: rationalize __OpenBSD__ code path.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit ba8fa4e53a35a0c46d1e0e81a4d270a026fac2b9)",
        "before_after_code_files": [
          "crypto/rand/randfile.c||crypto/rand/randfile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/randfile.c||crypto/rand/randfile.c": [
          "File: crypto/rand/randfile.c -> crypto/rand/randfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "365:         if (OPENSSL_strlcpy(buf, \"/dev/arandom\", size) >= size) {",
          "366:             return NULL;",
          "367:         }",
          "",
          "[Removed Lines]",
          "360:     if (!buf[0])",
          "361:         if (OPENSSL_strlcpy(buf, \"/dev/arandom\", size) >= size) {",
          "362:             return NULL;",
          "363:         }",
          "364:     if (stat(buf, &sb) == -1)",
          "",
          "[Added Lines]",
          "360:     if (!buf[0] || stat(buf, &sb) == -1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
      "candidate_info": {
        "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
        "files": [
          "include/openssl/ssl3.h",
          "ssl/record/rec_layer_s3.c",
          "ssl/record/ssl3_record.c",
          "ssl/ssl_locl.h",
          "ssl/t1_enc.c",
          "ssl/t1_lib.c"
        ],
        "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "include/openssl/ssl3.h||include/openssl/ssl3.h",
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
          "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
          "ssl/ssl_locl.h||ssl/ssl_locl.h",
          "ssl/t1_enc.c||ssl/t1_enc.c",
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl3.h||include/openssl/ssl3.h": [
          "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
          "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
          "272: # define SSL3_MT_HELLO_REQUEST                   0",
          "273: # define SSL3_MT_CLIENT_HELLO                    1",
          "274: # define SSL3_MT_SERVER_HELLO                    2",
          "",
          "[Removed Lines]",
          "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
          "",
          "[Added Lines]",
          "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
          "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
          "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
          "",
          "---------------"
        ],
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
          "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
          "397:         s->compress == NULL && s->msg_callback == NULL &&",
          "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
          "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
          "401:         unsigned char aad[13];",
          "",
          "[Removed Lines]",
          "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
          "",
          "[Added Lines]",
          "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
          "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
          "797:                                          1) < 0)",
          "",
          "[Removed Lines]",
          "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
          "",
          "[Added Lines]",
          "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "814:         goto err;",
          "816:     for (j = 0; j < numpipes; j++) {",
          "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
          "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
          "820:                 goto err;",
          "",
          "[Removed Lines]",
          "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
          "",
          "[Added Lines]",
          "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
          "",
          "---------------"
        ],
        "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
          "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350:         unsigned char *mac;",
          "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
          "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
          "",
          "[Removed Lines]",
          "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
          "",
          "[Added Lines]",
          "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394:     if ((sess != NULL) &&",
          "395:         (s->enc_read_ctx != NULL) &&",
          "398:         unsigned char *mac = NULL;",
          "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
          "",
          "[Removed Lines]",
          "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
          "",
          "[Added Lines]",
          "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "823:         }",
          "825:         ret = 1;",
          "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
          "828:         if ((bs != 1) && !send) {",
          "829:             int tmpret;",
          "",
          "[Removed Lines]",
          "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
          "",
          "[Added Lines]",
          "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "997:     header[11] = (rec->length) >> 8;",
          "998:     header[12] = (rec->length) & 0xff;",
          "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
          "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
          "",
          "[Removed Lines]",
          "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
          "",
          "[Added Lines]",
          "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1022:             EVP_MD_CTX_free(hmac);",
          "1023:             return -1;",
          "1024:         }",
          "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
          "1027:                                        mac_ctx, rec->input,",
          "1028:                                        rec->length, rec->orig_len)) {",
          "",
          "[Removed Lines]",
          "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
          "",
          "[Added Lines]",
          "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
          "",
          "---------------"
        ],
        "ssl/ssl_locl.h||ssl/ssl_locl.h": [
          "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
          "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
          "384: # define SSL_PKEY_RSA_ENC        0",
          "",
          "[Removed Lines]",
          "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
          "",
          "[Added Lines]",
          "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
          "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1111:     unsigned char *alpn_client_proto_list;",
          "1112:     unsigned alpn_client_proto_list_len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1116:     int tlsext_use_etm;",
          "",
          "---------------"
        ],
        "ssl/t1_enc.c||ssl/t1_enc.c": [
          "File: ssl/t1_enc.c -> ssl/t1_enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "130: #endif",
          "132:     if (which & SSL3_CC_READ) {",
          "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
          "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
          "135:         else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:         if (s->tlsext_use_etm)",
          "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
          "135:         else",
          "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
          "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
          "170:     } else {",
          "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
          "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
          "173:         else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:         if (s->tlsext_use_etm)",
          "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
          "178:         else",
          "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "367:     if (s->s3->tmp.key_block_length != 0)",
          "368:         return (1);",
          "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
          "374:         return (0);",
          "375:     }",
          "",
          "[Removed Lines]",
          "370:     if (!ssl_cipher_get_evp",
          "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
          "372:          SSL_USE_ETM(s))) {",
          "",
          "[Added Lines]",
          "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
          "381:                             &comp, s->tlsext_use_etm)) {",
          "",
          "---------------"
        ],
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1674: #endif",
          "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
          "1676:         return NULL;",
          "",
          "[Removed Lines]",
          "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
          "",
          "[Added Lines]",
          "1677:     if (s->tlsext_use_etm) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
          "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
          "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
          "1687:         else {",
          "",
          "[Removed Lines]",
          "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
          "",
          "[Added Lines]",
          "1686:             s->tlsext_use_etm = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
          "1918:     s->s3->tmp.peer_sigalgs = NULL;",
          "1921: #ifndef OPENSSL_NO_SRP",
          "1922:     OPENSSL_free(s->srp_ctx.login);",
          "",
          "[Removed Lines]",
          "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
          "",
          "[Added Lines]",
          "1919:     s->tlsext_use_etm = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2264:         }",
          "2265: #endif",
          "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
          "",
          "[Removed Lines]",
          "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
          "",
          "[Added Lines]",
          "2267:             s->tlsext_use_etm = 1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
          "2367: #endif",
          "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
          "",
          "[Removed Lines]",
          "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
          "",
          "[Added Lines]",
          "2369:     s->tlsext_use_etm = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
          "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
          "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
          "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
          "2591:             if (!s->hit)",
          "",
          "[Removed Lines]",
          "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
          "",
          "[Added Lines]",
          "2588:                 s->tlsext_use_etm = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1142556755beae2d87c80702158fee50ad29fb48",
      "candidate_info": {
        "commit_hash": "1142556755beae2d87c80702158fee50ad29fb48",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1142556755beae2d87c80702158fee50ad29fb48",
        "files": [
          "apps/dsa.c"
        ],
        "message": "Make MSBLOB format work with dsa utility.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit b3795987477f1d478fd8bd20efb812e71b190e8b)",
        "before_after_code_files": [
          "apps/dsa.c||apps/dsa.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/dsa.c||apps/dsa.c": [
          "File: apps/dsa.c -> apps/dsa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: OPTIONS dsa_options[] = {",
          "38:     {\"help\", OPT_HELP, '-', \"Display this summary\"},",
          "39:     {\"inform\", OPT_INFORM, 'f', \"Input format, DER PEM PVK\"},",
          "41:     {\"in\", OPT_IN, 's', \"Input key\"},",
          "42:     {\"out\", OPT_OUT, '>', \"Output file\"},",
          "43:     {\"noout\", OPT_NOOUT, '-', \"Don't print key out\"},",
          "",
          "[Removed Lines]",
          "40:     {\"outform\", OPT_OUTFORM, 'F', \"Output format, DER PEM PVK\"},",
          "",
          "[Added Lines]",
          "40:     {\"outform\", OPT_OUTFORM, 'f', \"Output format, DER PEM PVK\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:             infile = opt_arg();",
          "97:             break;",
          "98:         case OPT_OUTFORM:",
          "101:                 goto opthelp;",
          "102:             break;",
          "103:         case OPT_OUT:",
          "",
          "[Removed Lines]",
          "99:             if (!opt_format",
          "100:                 (opt_arg(), OPT_FMT_PEMDER | OPT_FMT_PVK, &outformat))",
          "",
          "[Added Lines]",
          "99:             if (!opt_format(opt_arg(), OPT_FMT_ANY, &outformat))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da16752b4a7f75cd1db50fd6f2ef96e27918fbcd",
      "candidate_info": {
        "commit_hash": "da16752b4a7f75cd1db50fd6f2ef96e27918fbcd",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/da16752b4a7f75cd1db50fd6f2ef96e27918fbcd",
        "files": [
          "crypto/rand/randfile.c"
        ],
        "message": "updated macro spacing for styling purposes\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\nCLA: trivial\n(cherry picked from commit 6974fca49d9d0b110c02c83a7bbe01907472ac5e)",
        "before_after_code_files": [
          "crypto/rand/randfile.c||crypto/rand/randfile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/randfile.c||crypto/rand/randfile.c": [
          "File: crypto/rand/randfile.c -> crypto/rand/randfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "209:             return 1;",
          "210:         }",
          "211:     }",
          "213: #endif",
          "215: #if defined(O_CREAT) && !defined(OPENSSL_NO_POSIX_IO) && \\",
          "",
          "[Removed Lines]",
          "212: #endif",
          "",
          "[Added Lines]",
          "212: # endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21729930885528d6d61b44520a97636b0a4d0398",
      "candidate_info": {
        "commit_hash": "21729930885528d6d61b44520a97636b0a4d0398",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/21729930885528d6d61b44520a97636b0a4d0398",
        "files": [
          "Configurations/descrip.mms.tmpl",
          "Configurations/unix-Makefile.tmpl",
          "Configurations/windows-makefile.tmpl"
        ],
        "message": "Simplify the dependencies for remaking configdata.pm\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(cherry picked from commit c5ad3076a6c076ac9f8449c393dd14c16b737560)",
        "before_after_code_files": [
          "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl",
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl",
          "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl": [
          "File: Configurations/descrip.mms.tmpl -> Configurations/descrip.mms.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "509: # Building targets ###################################################",
          "512:         @ WRITE SYS$OUTPUT \"Reconfiguring...\"",
          "513:         perl $(SRCDIR)Configure reconf",
          "514:         @ WRITE SYS$OUTPUT \"*************************************************\"",
          "",
          "[Removed Lines]",
          "511: configdata.pm : {- join(\" \", sourcefile(\"Configurations\", \"descrip.mms.tmpl\"), sourcefile(\"Configurations\", \"common.tmpl\")) -} $(SRCDIR)Configure $(SRCDIR)config.com {- join(\" \", @{$config{build_infos}}, @{$config{conf_files}}) -}",
          "",
          "[Added Lines]",
          "511: configdata.pm : $(SRCDIR)Configure $(SRCDIR)config.com {- join(\" \", @{$config{build_file_templates}}) -} {- join(\" \", @{$config{build_infos}}, @{$config{conf_files}}) -}",
          "",
          "---------------"
        ],
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "827:      echo 'Version: '$(VERSION); \\",
          "828:      echo 'Requires: libssl libcrypto' ) > openssl.pc",
          "831:  @echo \"Detected changed: $?\"",
          "832:  @echo \"Reconfiguring...\"",
          "833:  $(SRCDIR)/Configure reconf",
          "",
          "[Removed Lines]",
          "830: configdata.pm: {- $config{build_file_template} -} $(SRCDIR)/Configurations/common.tmpl $(SRCDIR)/Configure $(SRCDIR)/config {- join(\" \", @{$config{build_infos}}, @{$config{conf_files}}) -}",
          "",
          "[Added Lines]",
          "830: configdata.pm: $(SRCDIR)/Configure $(SRCDIR)/config {- join(\" \", @{$config{build_file_templates}}) -} {- join(\" \", @{$config{build_infos}}, @{$config{conf_files}}) -}",
          "",
          "---------------"
        ],
        "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl": [
          "File: Configurations/windows-makefile.tmpl -> Configurations/windows-makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "323: # Building targets ###################################################",
          "326:  @echo \"Detected changed: $?\"",
          "327:  @echo \"Reconfiguring...\"",
          "328:  \"$(PERL)\" \"$(SRCDIR)\\Configure\" reconf",
          "",
          "[Removed Lines]",
          "325: configdata.pm: \"{- $config{build_file_template} -}\" \"$(SRCDIR)\\Configurations\\common.tmpl\" \"$(SRCDIR)\\Configure\" {- join(\" \", map { '\"'.$_.'\"' } @{$config{build_infos}}, @{$config{conf_files}}) -}",
          "",
          "[Added Lines]",
          "325: configdata.pm: \"$(SRCDIR)\\Configure\" \"{- join(\" \", @{$config{build_file_templates}}) -}\" {- join(\" \", map { '\"'.$_.'\"' } @{$config{build_infos}}, @{$config{conf_files}}) -}",
          "",
          "---------------"
        ]
      }
    }
  ]
}