{
  "cve_id": "CVE-2019-15807",
  "cve_desc": "In the Linux kernel before 5.1.13, there is a memory leak in drivers/scsi/libsas/sas_expander.c when SAS expander discovery fails. This will cause a BUG and denial of service.",
  "repo": "torvalds/linux",
  "patch_hash": "3b0541791453fbe7f42867e310e0c9eb6295364d",
  "patch_info": {
    "commit_hash": "3b0541791453fbe7f42867e310e0c9eb6295364d",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/3b0541791453fbe7f42867e310e0c9eb6295364d",
    "files": [
      "drivers/scsi/libsas/sas_expander.c"
    ],
    "message": "scsi: libsas: delete sas port if expander discover failed\n\nThe sas_port(phy->port) allocated in sas_ex_discover_expander() will not be\ndeleted when the expander failed to discover. This will cause resource leak\nand a further issue of kernel BUG like below:\n\n[159785.843156]  port-2:17:29: trying to add phy phy-2:17:29 fails: it's\nalready part of another port\n[159785.852144] ------------[ cut here  ]------------\n[159785.856833] kernel BUG at drivers/scsi/scsi_transport_sas.c:1086!\n[159785.863000] Internal error: Oops - BUG: 0 [#1] SMP\n[159785.867866] CPU: 39 PID: 16993 Comm: kworker/u96:2 Tainted: G\nW  OE     4.19.25-vhulk1901.1.0.h111.aarch64 #1\n[159785.878458] Hardware name: Huawei Technologies Co., Ltd.\nHi1620EVBCS/Hi1620EVBCS, BIOS Hi1620 CS B070 1P TA 03/21/2019\n[159785.889231] Workqueue: 0000:74:02.0_disco_q sas_discover_domain\n[159785.895224] pstate: 40c00009 (nZcv daif +PAN +UAO)\n[159785.900094] pc : sas_port_add_phy+0x188/0x1b8\n[159785.904524] lr : sas_port_add_phy+0x188/0x1b8\n[159785.908952] sp : ffff0001120e3b80\n[159785.912341] x29: ffff0001120e3b80 x28: 0000000000000000\n[159785.917727] x27: ffff802ade8f5400 x26: ffff0000681b7560\n[159785.923111] x25: ffff802adf11a800 x24: ffff0000680e8000\n[159785.928496] x23: ffff802ade8f5728 x22: ffff802ade8f5708\n[159785.933880] x21: ffff802adea2db40 x20: ffff802ade8f5400\n[159785.939264] x19: ffff802adea2d800 x18: 0000000000000010\n[159785.944649] x17: 00000000821bf734 x16: ffff00006714faa0\n[159785.950033] x15: ffff0000e8ab4ecf x14: 7261702079646165\n[159785.955417] x13: 726c612073277469 x12: ffff00006887b830\n[159785.960802] x11: ffff00006773eaa0 x10: 7968702079687020\n[159785.966186] x9 : 0000000000002453 x8 : 726f702072656874\n[159785.971570] x7 : 6f6e6120666f2074 x6 : ffff802bcfb21290\n[159785.976955] x5 : ffff802bcfb21290 x4 : 0000000000000000\n[159785.982339] x3 : ffff802bcfb298c8 x2 : 337752b234c2ab00\n[159785.987723] x1 : 337752b234c2ab00 x0 : 0000000000000000\n[159785.993108] Process kworker/u96:2 (pid: 16993, stack limit =\n0x0000000072dae094)\n[159786.000576] Call trace:\n[159786.003097]  sas_port_add_phy+0x188/0x1b8\n[159786.007179]  sas_ex_get_linkrate.isra.5+0x134/0x140\n[159786.012130]  sas_ex_discover_expander+0x128/0x408\n[159786.016906]  sas_ex_discover_dev+0x218/0x4c8\n[159786.021249]  sas_ex_discover_devices+0x9c/0x1a8\n[159786.025852]  sas_discover_root_expander+0x134/0x160\n[159786.030802]  sas_discover_domain+0x1b8/0x1e8\n[159786.035148]  process_one_work+0x1b4/0x3f8\n[159786.039230]  worker_thread+0x54/0x470\n[159786.042967]  kthread+0x134/0x138\n[159786.046269]  ret_from_fork+0x10/0x18\n[159786.049918] Code: 91322300 f0004402 91178042 97fe4c9b (d4210000)\n[159786.056083] Modules linked in: hns3_enet_ut(OE) hclge(OE) hnae3(OE)\nhisi_sas_test_hw(OE) hisi_sas_test_main(OE) serdes(OE)\n[159786.067202] ---[ end trace 03622b9e2d99e196  ]---\n[159786.071893] Kernel panic - not syncing: Fatal exception\n[159786.077190] SMP: stopping secondary CPUs\n[159786.081192] Kernel Offset: disabled\n[159786.084753] CPU features: 0x2,a2a00a38\n\nFixes: 2908d778ab3e (\"[SCSI] aic94xx: new driver\")\nReported-by: Jian Luo <luojian5@huawei.com>\nSigned-off-by: Jason Yan <yanaijie@huawei.com>\nCC: John Garry <john.garry@huawei.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
    "before_after_code_files": [
      "drivers/scsi/libsas/sas_expander.c||drivers/scsi/libsas/sas_expander.c"
    ]
  },
  "patch_diff": {
    "drivers/scsi/libsas/sas_expander.c||drivers/scsi/libsas/sas_expander.c": [
      "File: drivers/scsi/libsas/sas_expander.c -> drivers/scsi/libsas/sas_expander.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1019:   list_del(&child->dev_list_node);",
      "1020:   spin_unlock_irq(&parent->port->dev_list_lock);",
      "1021:   sas_put_device(child);",
      "1022:   return NULL;",
      "1023:  }",
      "1024:  list_add_tail(&child->siblings, &parent->ex_dev.children);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1022:   sas_port_delete(phy->port);",
      "1023:   phy->port = NULL;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "526c654a8a0641d4289bf65effde4d6095bd8384",
      "candidate_info": {
        "commit_hash": "526c654a8a0641d4289bf65effde4d6095bd8384",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/526c654a8a0641d4289bf65effde4d6095bd8384",
        "files": [
          "drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c"
        ],
        "message": "drm/amdgpu/display: Fix reload driver error\n\nIssue:\nWill have follow error when reload driver:\n[ 3986.567739] sysfs: cannot create duplicate filename '/devices/pci0000:00/0000:00:07.0/drm_dp_aux_dev'\n[ 3986.567743] CPU: 6 PID: 1767 Comm: modprobe Tainted: G           OE     5.0.0-rc1-custom #1\n[ 3986.567745] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014\n[ 3986.567746] Call Trace:\n......\n[ 3986.567808]  drm_dp_aux_register_devnode+0xdc/0x140 [drm_kms_helper]\n......\n[ 3986.569081] kobject_add_internal failed for drm_dp_aux_dev with -EEXIST, don't try to register things with the same name in the same directory.\n\nReproduce sequences:\n1.modprobe amdgpu\n2.modprobe -r amdgpu\n3.modprobe amdgpu\n\nRoot cause:\nWhen unload driver, it doesn't unregister aux.\n\nv2: Don't use has_aux\n\nSigned-off-by: Emily Deng <Emily.Deng@amd.com>\nReviewed-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com>",
        "before_after_code_files": [
          "drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c||drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c||drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c": [
          "File: drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c -> drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3675:  return ret;",
          "3676: }",
          "3678: static void amdgpu_dm_connector_destroy(struct drm_connector *connector)",
          "3679: {",
          "3680:  struct amdgpu_dm_connector *aconnector = to_amdgpu_dm_connector(connector);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3678: static void amdgpu_dm_connector_unregister(struct drm_connector *connector)",
          "3679: {",
          "3680:  struct amdgpu_dm_connector *amdgpu_dm_connector = to_amdgpu_dm_connector(connector);",
          "3682:  drm_dp_aux_unregister(&amdgpu_dm_connector->dm_dp_aux.aux);",
          "3683: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3703:  drm_dp_cec_unregister_connector(&aconnector->dm_dp_aux.aux);",
          "3704:  drm_connector_unregister(connector);",
          "3705:  drm_connector_cleanup(connector);",
          "3706:  kfree(connector);",
          "3707: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3713:  if (aconnector->i2c) {",
          "3714:   i2c_del_adapter(&aconnector->i2c->base);",
          "3715:   kfree(aconnector->i2c);",
          "3716:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3760:  .atomic_duplicate_state = amdgpu_dm_connector_atomic_duplicate_state,",
          "3761:  .atomic_destroy_state = drm_atomic_helper_connector_destroy_state,",
          "3762:  .atomic_set_property = amdgpu_dm_connector_atomic_set_property,",
          "3764: };",
          "3766: static int get_modes(struct drm_connector *connector)",
          "",
          "[Removed Lines]",
          "3763:  .atomic_get_property = amdgpu_dm_connector_atomic_get_property",
          "",
          "[Added Lines]",
          "3775:  .atomic_get_property = amdgpu_dm_connector_atomic_get_property,",
          "3776:  .early_unregister = amdgpu_dm_connector_unregister",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1645ab931998b39aed5761f095956f0b10a6362f",
      "candidate_info": {
        "commit_hash": "1645ab931998b39aed5761f095956f0b10a6362f",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1645ab931998b39aed5761f095956f0b10a6362f",
        "files": [
          "drivers/net/wireless/intersil/p54/txrx.c"
        ],
        "message": "p54: fix crash during initialization\n\nThis patch fixes a crash that got introduced when the\nmentioned patch replaced  the direct list_head access\nwith skb_peek_tail(). When the device is starting up,\nthere are  no entries in  the queue, so previously to\n\"Use skb_peek_tail() instead...\" the target_skb would\nend up as the  tail and head pointer which then could\nbe used by __skb_queue_after to fill the empty queue.\n\nWith skb_peek_tail() in its place will instead just\nreturn NULL which then causes a crash in the\n__skb_queue_after().\n\n| BUG: unable to handle kernel NULL pointer dereference at 000000\n| #PF error: [normal kernel read fault]\n| PGD 0 P4D 0\n| Oops: 0000 [#1] SMP PTI\n| CPU: 0 PID: 12 Comm: kworker/0:1 Tainted: GO   5.1.0-rc7-wt+ #218\n| Hardware name: MSI MS-7816/Z87-G43 (MS-7816), BIOS V1.11 05/09/2015\n| Workqueue: events request_firmware_work_func\n| RIP: 0010:p54_tx_pending+0x10f/0x1b0 [p54common]\n| Code: 78 06 80 78 28 00 74 6d <48> 8b 07 49 89 7c 24 08 49 89 04 24 4\n| RSP: 0018:ffffa81c81927d90 EFLAGS: 00010086\n| RAX: ffff9bbaaf131048 RBX: 0000000000020670 RCX: 0000000000020264\n| RDX: ffff9bbaa976d660 RSI: 0000000000000202 RDI: 0000000000000000\n| RBP: ffff9bbaa976d620 R08: 00000000000006c0 R09: ffff9bbaa976d660\n| R10: 0000000000000000 R11: ffffe8480dbc5900 R12: ffff9bbb45e87700\n| R13: ffff9bbaa976d648 R14: ffff9bbaa976d674 R15: ffff9bbaaf131048\n| FS:  0000000000000000(0000) GS:ffff9bbb5ec00000(0000) knlGS:00000\n| CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n| CR2: 0000000000000000 CR3: 00000003695fc003 CR4: 00000000001606f0\n| Call Trace:\n|  p54_download_eeprom+0xbe/0x120 [p54common]\n|  p54_read_eeprom+0x7f/0xc0 [p54common]\n|  p54u_load_firmware_cb+0xe0/0x160 [p54usb]\n|  request_firmware_work_func+0x42/0x80\n|  process_one_work+0x1f5/0x3f0\n|  worker_thread+0x28/0x3c0\n\nCc: stable@vger.kernel.org\nFixes: e3554197fc8f (\"p54: Use skb_peek_tail() instead of direct head pointer accesses.\")\nSigned-off-by: Christian Lamparter <chunkeey@gmail.com>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>",
        "before_after_code_files": [
          "drivers/net/wireless/intersil/p54/txrx.c||drivers/net/wireless/intersil/p54/txrx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/intersil/p54/txrx.c||drivers/net/wireless/intersil/p54/txrx.c": [
          "File: drivers/net/wireless/intersil/p54/txrx.c -> drivers/net/wireless/intersil/p54/txrx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:      unlikely(GET_HW_QUEUE(skb) == P54_QUEUE_BEACON))",
          "143:   priv->beacon_req_id = data->req_id;",
          "146:  spin_unlock_irqrestore(&priv->tx_queue.lock, flags);",
          "147:  return 0;",
          "148: }",
          "",
          "[Removed Lines]",
          "145:  __skb_queue_after(&priv->tx_queue, target_skb, skb);",
          "",
          "[Added Lines]",
          "145:  if (target_skb)",
          "146:   __skb_queue_after(&priv->tx_queue, target_skb, skb);",
          "147:  else",
          "148:   __skb_queue_head(&priv->tx_queue, skb);",
          "",
          "---------------"
        ]
      }
    }
  ]
}