{
  "cve_id": "CVE-2018-14367",
  "cve_desc": "In Wireshark 2.6.0 to 2.6.1 and 2.4.0 to 2.4.7, the CoAP protocol dissector could crash. This was addressed in epan/dissectors/packet-coap.c by properly checking for a NULL condition.",
  "repo": "wireshark/wireshark",
  "patch_hash": "b9c18a4188864a5c47d9c9b299cd97cba236a472",
  "patch_info": {
    "commit_hash": "b9c18a4188864a5c47d9c9b299cd97cba236a472",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/b9c18a4188864a5c47d9c9b299cd97cba236a472",
    "files": [
      "epan/dissectors/packet-coap.c"
    ],
    "message": "CoAP: handle per packet data properly\n\nBug: 14966\nChange-Id: I9c5c1da923a0cc2881465bcc484850d042a314d6\nSigned-off-by: Jaap Keuter <jaap.keuter@xs4all.nl>\nReviewed-on: https://code.wireshark.org/review/28694\nTested-by: Petri Dish Buildbot\nReviewed-by: Roland Knall <rknall@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c": [
      "File: epan/dissectors/packet-coap.c -> epan/dissectors/packet-coap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "998:  coap_transaction *coap_trans = NULL;",
      "1002:   coinfo = wmem_new0(wmem_file_scope(), coap_info);",
      "1003:   p_add_proto_data(wmem_file_scope(), pinfo, proto_coap, 0, coinfo);",
      "1006:  }",
      "",
      "[Removed Lines]",
      "1001:  if (!PINFO_FD_VISITED(pinfo)) {",
      "1004:  } else {",
      "1005:   coinfo = (coap_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_coap, 0);",
      "",
      "[Added Lines]",
      "1001:  coinfo = (coap_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_coap, 0);",
      "1003:  if (coinfo == NULL)",
      "1004:  {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e8c61fb24cf63c79df49c0960a260f497181d99a",
      "candidate_info": {
        "commit_hash": "e8c61fb24cf63c79df49c0960a260f497181d99a",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/e8c61fb24cf63c79df49c0960a260f497181d99a",
        "files": [
          "epan/dissectors/packet-coap.c"
        ],
        "message": "CoAP: handle per packet data properly\n\nBug: 14966\nChange-Id: I9c5c1da923a0cc2881465bcc484850d042a314d6\nSigned-off-by: Jaap Keuter <jaap.keuter@xs4all.nl>\nReviewed-on: https://code.wireshark.org/review/28694\nTested-by: Petri Dish Buildbot\nReviewed-by: Roland Knall <rknall@gmail.com>\n(cherry picked from commit b9c18a4188864a5c47d9c9b299cd97cba236a472)\nReviewed-on: https://code.wireshark.org/review/28696\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c": [
          "File: epan/dissectors/packet-coap.c -> epan/dissectors/packet-coap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "994:  coap_transaction *coap_trans = NULL;",
          "998:   coinfo = wmem_new0(wmem_file_scope(), coap_info);",
          "999:   p_add_proto_data(wmem_file_scope(), pinfo, proto_coap, 0, coinfo);",
          "1002:  }",
          "",
          "[Removed Lines]",
          "997:  if (!PINFO_FD_VISITED(pinfo)) {",
          "1000:  } else {",
          "1001:   coinfo = (coap_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_coap, 0);",
          "",
          "[Added Lines]",
          "997:  coinfo = (coap_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_coap, 0);",
          "999:  if (coinfo == NULL)",
          "1000:  {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81ce5fcb3e37a0aaeb7532f7a2a09366f16fa310",
      "candidate_info": {
        "commit_hash": "81ce5fcb3e37a0aaeb7532f7a2a09366f16fa310",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/81ce5fcb3e37a0aaeb7532f7a2a09366f16fa310",
        "files": [
          "epan/dissectors/packet-coap.c"
        ],
        "message": "CoAP: handle per packet data properly\n\nBug: 14966\nChange-Id: I9c5c1da923a0cc2881465bcc484850d042a314d6\nSigned-off-by: Jaap Keuter <jaap.keuter@xs4all.nl>\nReviewed-on: https://code.wireshark.org/review/28694\nTested-by: Petri Dish Buildbot\nReviewed-by: Roland Knall <rknall@gmail.com>\n(cherry picked from commit b9c18a4188864a5c47d9c9b299cd97cba236a472)\nReviewed-on: https://code.wireshark.org/review/28697\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
          ],
          "candidate": [
            "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-coap.c||epan/dissectors/packet-coap.c": [
          "File: epan/dissectors/packet-coap.c -> epan/dissectors/packet-coap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "845:  coap_transaction *coap_trans = NULL;",
          "849:   coinfo = wmem_new0(wmem_file_scope(), coap_info);",
          "850:   p_add_proto_data(wmem_file_scope(), pinfo, proto_coap, 0, coinfo);",
          "853:  }",
          "",
          "[Removed Lines]",
          "848:  if (!PINFO_FD_VISITED(pinfo)) {",
          "851:  } else {",
          "852:   coinfo = (coap_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_coap, 0);",
          "",
          "[Added Lines]",
          "848:  coinfo = (coap_info *)p_get_proto_data(wmem_file_scope(), pinfo, proto_coap, 0);",
          "850:  if (coinfo == NULL)",
          "851:  {",
          "",
          "---------------"
        ]
      }
    }
  ]
}