{
  "cve_id": "CVE-2021-41215",
  "cve_desc": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference code for `DeserializeSparse` can trigger a null pointer dereference. This is because the shape inference function assumes that the `serialize_sparse` tensor is a tensor with positive rank (and having `3` as the last dimension). The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "d3738dd70f1c9ceb547258cbb82d853da8771850",
  "patch_info": {
    "commit_hash": "d3738dd70f1c9ceb547258cbb82d853da8771850",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/d3738dd70f1c9ceb547258cbb82d853da8771850",
    "files": [
      "tensorflow/core/ops/sparse_ops.cc",
      "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
    ],
    "message": "Ensuring that the input to DeserializeSparse is not a scalar.\n\nPiperOrigin-RevId: 400554784\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671",
    "before_after_code_files": [
      "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
      "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc": [
      "File: tensorflow/core/ops/sparse_ops.cc -> tensorflow/core/ops/sparse_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "16: #include \"tensorflow/core/framework/common_shape_fns.h\"",
      "17: #include \"tensorflow/core/framework/op.h\"",
      "18: #include \"tensorflow/core/framework/shape_inference.h\"",
      "19: #include \"tensorflow/core/platform/errors.h\"",
      "21: namespace tensorflow {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: #include \"tensorflow/core/framework/types.pb.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "159:     .Attr(\"Tserialized: {string, variant} = DT_STRING\")",
      "160:     .SetShapeFn([](InferenceContext* c) {",
      "162:       DimensionHandle unused;",
      "163:       TF_RETURN_IF_ERROR(c->WithValue(c->Dim(c->input(0), -1), 3, &unused));",
      "164:       c->set_output(0, c->Matrix(InferenceContext::kUnknownDim,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "163:       ShapeHandle unused_shape;",
      "164:       TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), 1, &unused_shape));",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py": [
      "File: tensorflow/python/kernel_tests/sparse_serialization_ops_test.py -> tensorflow/python/kernel_tests/sparse_serialization_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: import numpy as np",
      "19: from tensorflow.python.framework import dtypes",
      "20: from tensorflow.python.framework import sparse_tensor as sparse_tensor_lib",
      "21: from tensorflow.python.framework import test_util",
      "22: from tensorflow.python.ops import array_ops",
      "23: from tensorflow.python.ops import sparse_ops",
      "24: from tensorflow.python.platform import test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: from tensorflow.python.eager import def_function",
      "24: from tensorflow.python.ops import gen_resource_variable_ops",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "460:     self._testDeserializeFailsInvalidProtoHelper(",
      "461:         sparse_ops.serialize_sparse, sparse_ops.deserialize_many_sparse)",
      "464: if __name__ == \"__main__\":",
      "465:   test.main()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "465:   def testDeserializeInvalidVariant(self):",
      "466:     mu = gen_resource_variable_ops.mutex_v2()",
      "467:     mu_lock = gen_resource_variable_ops.mutex_lock(mutex=mu)",
      "469:     @def_function.function",
      "470:     def f():",
      "471:       return sparse_ops.deserialize_sparse(",
      "472:           serialized_sparse=mu_lock, dtype=dtypes.int32)",
      "474:     with self.assertRaisesRegex(ValueError, r\"Shape must be at least rank 1\"):",
      "475:       f()",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "75657147c8e6975fc9e899197bb0da11a023dd63",
      "candidate_info": {
        "commit_hash": "75657147c8e6975fc9e899197bb0da11a023dd63",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/75657147c8e6975fc9e899197bb0da11a023dd63",
        "files": [
          "tensorflow/core/ops/sparse_ops.cc",
          "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
        ],
        "message": "Ensuring that the input to DeserializeSparse is not a scalar.\n\nPiperOrigin-RevId: 400554784\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671",
        "before_after_code_files": [
          "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
          "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
            "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
            "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc": [
          "File: tensorflow/core/ops/sparse_ops.cc -> tensorflow/core/ops/sparse_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include \"tensorflow/core/framework/common_shape_fns.h\"",
          "17: #include \"tensorflow/core/framework/op.h\"",
          "18: #include \"tensorflow/core/framework/shape_inference.h\"",
          "19: #include \"tensorflow/core/platform/errors.h\"",
          "21: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include \"tensorflow/core/framework/types.pb.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:     .Attr(\"Tserialized: {string, variant} = DT_STRING\")",
          "160:     .SetShapeFn([](InferenceContext* c) {",
          "162:       DimensionHandle unused;",
          "163:       TF_RETURN_IF_ERROR(c->WithValue(c->Dim(c->input(0), -1), 3, &unused));",
          "164:       c->set_output(0, c->Matrix(InferenceContext::kUnknownDim,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:       ShapeHandle unused_shape;",
          "164:       TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), 1, &unused_shape));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py": [
          "File: tensorflow/python/kernel_tests/sparse_serialization_ops_test.py -> tensorflow/python/kernel_tests/sparse_serialization_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import dtypes",
          "24: from tensorflow.python.framework import sparse_tensor as sparse_tensor_lib",
          "25: from tensorflow.python.framework import test_util",
          "26: from tensorflow.python.ops import array_ops",
          "27: from tensorflow.python.ops import sparse_ops",
          "28: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python.eager import def_function",
          "28: from tensorflow.python.ops import gen_resource_variable_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "464:     self._testDeserializeFailsInvalidProtoHelper(",
          "465:         sparse_ops.serialize_sparse, sparse_ops.deserialize_many_sparse)",
          "468: if __name__ == \"__main__\":",
          "469:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "469:   def testDeserializeInvalidVariant(self):",
          "470:     mu = gen_resource_variable_ops.mutex_v2()",
          "471:     mu_lock = gen_resource_variable_ops.mutex_lock(mutex=mu)",
          "473:     @def_function.function",
          "474:     def f():",
          "475:       return sparse_ops.deserialize_sparse(",
          "476:           serialized_sparse=mu_lock, dtype=dtypes.int32)",
          "478:     with self.assertRaisesRegex(ValueError, r\"Shape must be at least rank 1\"):",
          "479:       f()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22d7d2089362cb9798e0acc7465d94a212124412",
      "candidate_info": {
        "commit_hash": "22d7d2089362cb9798e0acc7465d94a212124412",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/22d7d2089362cb9798e0acc7465d94a212124412",
        "files": [
          "tensorflow/core/ops/sparse_ops.cc",
          "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
        ],
        "message": "Ensuring that the input to DeserializeSparse is not a scalar.\n\nPiperOrigin-RevId: 400554784\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671",
        "before_after_code_files": [
          "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
          "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
            "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
            "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc": [
          "File: tensorflow/core/ops/sparse_ops.cc -> tensorflow/core/ops/sparse_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include \"tensorflow/core/framework/common_shape_fns.h\"",
          "17: #include \"tensorflow/core/framework/op.h\"",
          "18: #include \"tensorflow/core/framework/shape_inference.h\"",
          "19: #include \"tensorflow/core/platform/errors.h\"",
          "21: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include \"tensorflow/core/framework/types.pb.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:     .Attr(\"Tserialized: {string, variant} = DT_STRING\")",
          "160:     .SetShapeFn([](InferenceContext* c) {",
          "162:       DimensionHandle unused;",
          "163:       TF_RETURN_IF_ERROR(c->WithValue(c->Dim(c->input(0), -1), 3, &unused));",
          "164:       c->set_output(0, c->Matrix(InferenceContext::kUnknownDim,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:       ShapeHandle unused_shape;",
          "164:       TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), 1, &unused_shape));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py": [
          "File: tensorflow/python/kernel_tests/sparse_serialization_ops_test.py -> tensorflow/python/kernel_tests/sparse_serialization_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import dtypes",
          "24: from tensorflow.python.framework import sparse_tensor as sparse_tensor_lib",
          "25: from tensorflow.python.framework import test_util",
          "26: from tensorflow.python.ops import array_ops",
          "27: from tensorflow.python.ops import sparse_ops",
          "28: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python.eager import def_function",
          "28: from tensorflow.python.ops import gen_resource_variable_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "464:     self._testDeserializeFailsInvalidProtoHelper(",
          "465:         sparse_ops.serialize_sparse, sparse_ops.deserialize_many_sparse)",
          "468: if __name__ == \"__main__\":",
          "469:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "469:   def testDeserializeInvalidVariant(self):",
          "470:     mu = gen_resource_variable_ops.mutex_v2()",
          "471:     mu_lock = gen_resource_variable_ops.mutex_lock(mutex=mu)",
          "473:     @def_function.function",
          "474:     def f():",
          "475:       return sparse_ops.deserialize_sparse(",
          "476:           serialized_sparse=mu_lock, dtype=dtypes.int32)",
          "478:     with self.assertRaisesRegex(ValueError, r\"Shape must be at least rank 1\"):",
          "479:       f()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa8d24a65c04a08118b6319f62b1f5295da90cf9",
      "candidate_info": {
        "commit_hash": "fa8d24a65c04a08118b6319f62b1f5295da90cf9",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/fa8d24a65c04a08118b6319f62b1f5295da90cf9",
        "files": [
          "tensorflow/core/ops/sparse_ops.cc",
          "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
        ],
        "message": "Ensuring that the input to DeserializeSparse is not a scalar.\n\nPiperOrigin-RevId: 400554784\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671",
        "before_after_code_files": [
          "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
          "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
            "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
            "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc": [
          "File: tensorflow/core/ops/sparse_ops.cc -> tensorflow/core/ops/sparse_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include \"tensorflow/core/framework/common_shape_fns.h\"",
          "17: #include \"tensorflow/core/framework/op.h\"",
          "18: #include \"tensorflow/core/framework/shape_inference.h\"",
          "19: #include \"tensorflow/core/platform/errors.h\"",
          "21: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include \"tensorflow/core/framework/types.pb.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:     .Attr(\"Tserialized: {string, variant} = DT_STRING\")",
          "160:     .SetShapeFn([](InferenceContext* c) {",
          "162:       DimensionHandle unused;",
          "163:       TF_RETURN_IF_ERROR(c->WithValue(c->Dim(c->input(0), -1), 3, &unused));",
          "164:       c->set_output(0, c->Matrix(InferenceContext::kUnknownDim,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:       ShapeHandle unused_shape;",
          "164:       TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), 1, &unused_shape));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py": [
          "File: tensorflow/python/kernel_tests/sparse_serialization_ops_test.py -> tensorflow/python/kernel_tests/sparse_serialization_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import dtypes",
          "24: from tensorflow.python.framework import sparse_tensor as sparse_tensor_lib",
          "25: from tensorflow.python.framework import test_util",
          "26: from tensorflow.python.ops import array_ops",
          "27: from tensorflow.python.ops import sparse_ops",
          "28: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python.eager import def_function",
          "28: from tensorflow.python.ops import gen_resource_variable_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "464:     self._testDeserializeFailsInvalidProtoHelper(",
          "465:         sparse_ops.serialize_sparse, sparse_ops.deserialize_many_sparse)",
          "468: if __name__ == \"__main__\":",
          "469:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "469:   def testDeserializeInvalidVariant(self):",
          "470:     mu = gen_resource_variable_ops.mutex_v2()",
          "471:     mu_lock = gen_resource_variable_ops.mutex_lock(mutex=mu)",
          "473:     @def_function.function",
          "474:     def f():",
          "475:       return sparse_ops.deserialize_sparse(",
          "476:           serialized_sparse=mu_lock, dtype=dtypes.int32)",
          "478:     with self.assertRaisesRegex(ValueError, r\"Shape must be at least rank 1\"):",
          "479:       f()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "faf084c9284d64104f5e9815a971a3f166d73b85",
      "candidate_info": {
        "commit_hash": "faf084c9284d64104f5e9815a971a3f166d73b85",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/faf084c9284d64104f5e9815a971a3f166d73b85",
        "files": [
          "tensorflow/core/ops/sparse_ops.cc",
          "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
        ],
        "message": "Ensuring that the input to DeserializeSparse is not a scalar.\n\nPiperOrigin-RevId: 400554784\nChange-Id: Ib658701040d4f707f20b8706e251d5fff46b2671",
        "before_after_code_files": [
          "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
          "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
            "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc",
            "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/sparse_ops.cc||tensorflow/core/ops/sparse_ops.cc": [
          "File: tensorflow/core/ops/sparse_ops.cc -> tensorflow/core/ops/sparse_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include \"tensorflow/core/framework/common_shape_fns.h\"",
          "17: #include \"tensorflow/core/framework/op.h\"",
          "18: #include \"tensorflow/core/framework/shape_inference.h\"",
          "19: #include \"tensorflow/core/platform/errors.h\"",
          "21: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include \"tensorflow/core/framework/types.pb.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:     .Attr(\"Tserialized: {string, variant} = DT_STRING\")",
          "160:     .SetShapeFn([](InferenceContext* c) {",
          "162:       DimensionHandle unused;",
          "163:       TF_RETURN_IF_ERROR(c->WithValue(c->Dim(c->input(0), -1), 3, &unused));",
          "164:       c->set_output(0, c->Matrix(InferenceContext::kUnknownDim,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:       ShapeHandle unused_shape;",
          "164:       TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), 1, &unused_shape));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/sparse_serialization_ops_test.py||tensorflow/python/kernel_tests/sparse_serialization_ops_test.py": [
          "File: tensorflow/python/kernel_tests/sparse_serialization_ops_test.py -> tensorflow/python/kernel_tests/sparse_serialization_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import dtypes",
          "24: from tensorflow.python.framework import sparse_tensor as sparse_tensor_lib",
          "25: from tensorflow.python.framework import test_util",
          "26: from tensorflow.python.ops import array_ops",
          "27: from tensorflow.python.ops import sparse_ops",
          "28: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python.eager import def_function",
          "28: from tensorflow.python.ops import gen_resource_variable_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "464:     self._testDeserializeFailsInvalidProtoHelper(",
          "465:         sparse_ops.serialize_sparse, sparse_ops.deserialize_many_sparse)",
          "468: if __name__ == \"__main__\":",
          "469:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "469:   def testDeserializeInvalidVariant(self):",
          "470:     mu = gen_resource_variable_ops.mutex_v2()",
          "471:     mu_lock = gen_resource_variable_ops.mutex_lock(mutex=mu)",
          "473:     @def_function.function",
          "474:     def f():",
          "475:       return sparse_ops.deserialize_sparse(",
          "476:           serialized_sparse=mu_lock, dtype=dtypes.int32)",
          "478:     with self.assertRaisesRegex(ValueError, r\"Shape must be at least rank 1\"):",
          "479:       f()",
          "",
          "---------------"
        ]
      }
    }
  ]
}