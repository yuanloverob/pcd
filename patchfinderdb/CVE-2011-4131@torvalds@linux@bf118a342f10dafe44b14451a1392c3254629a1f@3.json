{
  "cve_id": "CVE-2011-4131",
  "cve_desc": "The NFSv4 implementation in the Linux kernel before 3.2.2 does not properly handle bitmap sizes in GETACL replies, which allows remote NFS servers to cause a denial of service (OOPS) by sending an excessive number of bitmap words.",
  "repo": "torvalds/linux",
  "patch_hash": "bf118a342f10dafe44b14451a1392c3254629a1f",
  "patch_info": {
    "commit_hash": "bf118a342f10dafe44b14451a1392c3254629a1f",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/bf118a342f10dafe44b14451a1392c3254629a1f",
    "files": [
      "fs/nfs/nfs4proc.c",
      "fs/nfs/nfs4xdr.c",
      "include/linux/nfs_xdr.h",
      "include/linux/sunrpc/xdr.h",
      "net/sunrpc/xdr.c"
    ],
    "message": "NFSv4: include bitmap in nfsv4 get acl data\n\nThe NFSv4 bitmap size is unbounded: a server can return an arbitrary\nsized bitmap in an FATTR4_WORD0_ACL request.  Replace using the\nnfs4_fattr_bitmap_maxsz as a guess to the maximum bitmask returned by a server\nwith the inclusion of the bitmap (xdr length plus bitmasks) and the acl data\nxdr length to the (cached) acl page data.\n\nThis is a general solution to commit e5012d1f \"NFSv4.1: update\nnfs4_fattr_bitmap_maxsz\" and fixes hitting a BUG_ON in xdr_shrink_bufhead\nwhen getting ACLs.\n\nFix a bug in decode_getacl that returned -EINVAL on ACLs > page when getxattr\nwas called with a NULL buffer, preventing ACL > PAGE_SIZE from being retrieved.\n\nCc: stable@kernel.org\nSigned-off-by: Andy Adamson <andros@netapp.com>\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>",
    "before_after_code_files": [
      "fs/nfs/nfs4proc.c||fs/nfs/nfs4proc.c",
      "fs/nfs/nfs4xdr.c||fs/nfs/nfs4xdr.c",
      "include/linux/nfs_xdr.h||include/linux/nfs_xdr.h",
      "include/linux/sunrpc/xdr.h||include/linux/sunrpc/xdr.h",
      "net/sunrpc/xdr.c||net/sunrpc/xdr.c"
    ]
  },
  "patch_diff": {
    "fs/nfs/nfs4proc.c||fs/nfs/nfs4proc.c": [
      "File: fs/nfs/nfs4proc.c -> fs/nfs/nfs4proc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3427: #define NFS4ACL_MAXPAGES (XATTR_SIZE_MAX >> PAGE_CACHE_SHIFT)",
      "3442: static int buf_to_pages_noslab(const void *buf, size_t buflen,",
      "3443:   struct page **pages, unsigned int *pgbase)",
      "3444: {",
      "",
      "[Removed Lines]",
      "3429: static void buf_to_pages(const void *buf, size_t buflen,",
      "3430:   struct page **pages, unsigned int *pgbase)",
      "3431: {",
      "3432:  const void *p = buf;",
      "3435:  p -= *pgbase;",
      "3436:  while (p < buf + buflen) {",
      "3438:   p += PAGE_CACHE_SIZE;",
      "3439:  }",
      "3440: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3535:  nfs4_set_cached_acl(inode, acl);",
      "3536: }",
      "3538: static ssize_t __nfs4_get_acl_uncached(struct inode *inode, void *buf, size_t buflen)",
      "3539: {",
      "3541:  struct nfs_getaclargs args = {",
      "3542:   .fh = NFS_FH(inode),",
      "3543:   .acl_pages = pages,",
      "",
      "[Removed Lines]",
      "3540:  struct page *pages[NFS4ACL_MAXPAGES];",
      "",
      "[Added Lines]",
      "3537:  struct page *pages[NFS4ACL_MAXPAGES] = {NULL, };",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3552:   .rpc_argp = &args,",
      "3553:   .rpc_resp = &res,",
      "3554:  };",
      "3571:  }",
      "3573:  if (ret)",
      "3574:   goto out_free;",
      "3577:  else",
      "3579:  if (buf) {",
      "3580:   ret = -ERANGE;",
      "3582:    goto out_free;",
      "3585:  }",
      "3587: out_free:",
      "3590:  return ret;",
      "3591: }",
      "",
      "[Removed Lines]",
      "3555:  struct page *localpage = NULL;",
      "3556:  int ret;",
      "3558:  if (buflen < PAGE_SIZE) {",
      "3561:   localpage = alloc_page(GFP_KERNEL);",
      "3562:   resp_buf = page_address(localpage);",
      "3563:   if (localpage == NULL)",
      "3564:    return -ENOMEM;",
      "3565:   args.acl_pages[0] = localpage;",
      "3566:   args.acl_pgbase = 0;",
      "3567:   args.acl_len = PAGE_SIZE;",
      "3568:  } else {",
      "3569:   resp_buf = buf;",
      "3570:   buf_to_pages(buf, buflen, args.acl_pages, &args.acl_pgbase);",
      "3572:  ret = nfs4_call_sync(NFS_SERVER(inode)->client, NFS_SERVER(inode), &msg, &args.seq_args, &res.seq_res, 0);",
      "3575:  if (res.acl_len > args.acl_len)",
      "3576:   nfs4_write_cached_acl(inode, NULL, res.acl_len);",
      "3578:   nfs4_write_cached_acl(inode, resp_buf, res.acl_len);",
      "3581:   if (res.acl_len > buflen)",
      "3583:   if (localpage)",
      "3584:    memcpy(buf, resp_buf, res.acl_len);",
      "3586:  ret = res.acl_len;",
      "3588:  if (localpage)",
      "3589:   __free_page(localpage);",
      "",
      "[Added Lines]",
      "3552:  int ret = -ENOMEM, npages, i, acl_len = 0;",
      "3554:  npages = (buflen + PAGE_SIZE - 1) >> PAGE_SHIFT;",
      "3557:  if (npages == 0)",
      "3558:   npages = 1;",
      "3560:  for (i = 0; i < npages; i++) {",
      "3561:   pages[i] = alloc_page(GFP_KERNEL);",
      "3562:   if (!pages[i])",
      "3563:    goto out_free;",
      "3564:  }",
      "3565:  if (npages > 1) {",
      "3567:   args.acl_scratch = alloc_page(GFP_KERNEL);",
      "3568:   if (!args.acl_scratch)",
      "3569:    goto out_free;",
      "3571:  args.acl_len = npages * PAGE_SIZE;",
      "3572:  args.acl_pgbase = 0;",
      "3575:  if (buf == NULL)",
      "3576:   res.acl_flags |= NFS4_ACL_LEN_REQUEST;",
      "3577:  resp_buf = page_address(pages[0]);",
      "3579:  dprintk(\"%s  buf %p buflen %ld npages %d args.acl_len %ld\\n\",",
      "3580:   __func__, buf, buflen, npages, args.acl_len);",
      "3581:  ret = nfs4_call_sync(NFS_SERVER(inode)->client, NFS_SERVER(inode),",
      "3582:         &msg, &args.seq_args, &res.seq_res, 0);",
      "3586:  acl_len = res.acl_len - res.acl_data_offset;",
      "3587:  if (acl_len > args.acl_len)",
      "3588:   nfs4_write_cached_acl(inode, NULL, acl_len);",
      "3590:   nfs4_write_cached_acl(inode, resp_buf + res.acl_data_offset,",
      "3591:           acl_len);",
      "3594:   if (acl_len > buflen)",
      "3596:   _copy_from_pages(buf, pages, res.acl_data_offset,",
      "3597:     res.acl_len);",
      "3599:  ret = acl_len;",
      "3601:  for (i = 0; i < npages; i++)",
      "3602:   if (pages[i])",
      "3603:    __free_page(pages[i]);",
      "3604:  if (args.acl_scratch)",
      "3605:   __free_page(args.acl_scratch);",
      "",
      "---------------"
    ],
    "fs/nfs/nfs4xdr.c||fs/nfs/nfs4xdr.c": [
      "File: fs/nfs/nfs4xdr.c -> fs/nfs/nfs4xdr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2517:  encode_compound_hdr(xdr, req, &hdr);",
      "2518:  encode_sequence(xdr, &args->seq_args, &hdr);",
      "2519:  encode_putfh(xdr, args->fh, &hdr);",
      "2521:  encode_getattr_two(xdr, FATTR4_WORD0_ACL, 0, &hdr);",
      "2523:  xdr_inline_pages(&req->rq_rcv_buf, replen << 2,",
      "2524:   args->acl_pages, args->acl_pgbase, args->acl_len);",
      "2525:  encode_nops(&hdr);",
      "2526: }",
      "",
      "[Removed Lines]",
      "2520:  replen = hdr.replen + op_decode_hdr_maxsz + nfs4_fattr_bitmap_maxsz + 1;",
      "",
      "[Added Lines]",
      "2520:  replen = hdr.replen + op_decode_hdr_maxsz + 1;",
      "2525:  xdr_set_scratch_buffer(xdr, page_address(args->acl_scratch), PAGE_SIZE);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4957: }",
      "4959: static int decode_getacl(struct xdr_stream *xdr, struct rpc_rqst *req,",
      "4961: {",
      "4963:  uint32_t attrlen,",
      "4964:    bitmap[3] = {0};",
      "4965:  struct kvec *iov = req->rq_rcv_buf.head;",
      "4966:  int status;",
      "4969:  if ((status = decode_op_hdr(xdr, OP_GETATTR)) != 0)",
      "4970:   goto out;",
      "4971:  if ((status = decode_attr_bitmap(xdr, bitmap)) != 0)",
      "4972:   goto out;",
      "4973:  if ((status = decode_attr_length(xdr, &attrlen, &savep)) != 0)",
      "",
      "[Removed Lines]",
      "4960:   size_t *acl_len)",
      "4962:  __be32 *savep;",
      "",
      "[Added Lines]",
      "4962:     struct nfs_getaclres *res)",
      "4964:  __be32 *savep, *bm_p;",
      "4970:  res->acl_len = 0;",
      "4973:  bm_p = xdr->p;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "4979:   size_t hdrlen;",
      "4980:   u32 recvd;",
      "4984:   hdrlen = (u8 *)xdr->p - (u8 *)iov->iov_base;",
      "4985:   recvd = req->rq_rcv_buf.len - hdrlen;",
      "4986:   if (attrlen > recvd) {",
      "4989:      attrlen, recvd);",
      "4990:    return -EINVAL;",
      "4991:   }",
      "4992:   xdr_read_pages(xdr, attrlen);",
      "4994:  } else",
      "4995:   status = -EOPNOTSUPP;",
      "",
      "[Removed Lines]",
      "4987:    dprintk(\"NFS: server cheating in getattr\"",
      "4988:      \" acl reply: attrlen %u > recvd %u\\n\",",
      "",
      "[Added Lines]",
      "4988:   xdr->p = bm_p;",
      "4989:   res->acl_data_offset = be32_to_cpup(bm_p) + 2;",
      "4990:   res->acl_data_offset <<= 2;",
      "4995:   attrlen += res->acl_data_offset;",
      "4998:    if (res->acl_flags & NFS4_ACL_LEN_REQUEST) {",
      "5000:     res->acl_len = attrlen;",
      "5001:     goto out;",
      "5002:    }",
      "5003:    dprintk(\"NFS: acl reply: attrlen %u > recvd %u\\n\",",
      "5008:   res->acl_len = attrlen;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "6028:  status = decode_putfh(xdr);",
      "6029:  if (status)",
      "6030:   goto out;",
      "6033: out:",
      "6034:  return status;",
      "",
      "[Removed Lines]",
      "6031:  status = decode_getacl(xdr, rqstp, &res->acl_len);",
      "",
      "[Added Lines]",
      "6046:  status = decode_getacl(xdr, rqstp, res);",
      "",
      "---------------"
    ],
    "include/linux/nfs_xdr.h||include/linux/nfs_xdr.h": [
      "File: include/linux/nfs_xdr.h -> include/linux/nfs_xdr.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "602:  size_t    acl_len;",
      "603:  unsigned int   acl_pgbase;",
      "604:  struct page **   acl_pages;",
      "605:  struct nfs4_sequence_args  seq_args;",
      "606: };",
      "608: struct nfs_getaclres {",
      "609:  size_t    acl_len;",
      "610:  struct nfs4_sequence_res seq_res;",
      "611: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "605:  struct page *   acl_scratch;",
      "613:  size_t    acl_data_offset;",
      "614:  int    acl_flags;",
      "",
      "---------------"
    ],
    "include/linux/sunrpc/xdr.h||include/linux/sunrpc/xdr.h": [
      "File: include/linux/sunrpc/xdr.h -> include/linux/sunrpc/xdr.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:         struct xdr_array2_desc *desc);",
      "192: extern int xdr_encode_array2(struct xdr_buf *buf, unsigned int base,",
      "193:         struct xdr_array2_desc *desc);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "194: extern void _copy_from_pages(char *p, struct page **pages, size_t pgbase,",
      "195:         size_t len);",
      "",
      "---------------"
    ],
    "net/sunrpc/xdr.c||net/sunrpc/xdr.c": [
      "File: net/sunrpc/xdr.c -> net/sunrpc/xdr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: _copy_from_pages(char *p, struct page **pages, size_t pgbase, size_t len)",
      "301: {",
      "302:  struct page **pgfrom;",
      "",
      "[Removed Lines]",
      "299: static void",
      "",
      "[Added Lines]",
      "299: void",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "325:  } while ((len -= copy) != 0);",
      "326: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "327: EXPORT_SYMBOL_GPL(_copy_from_pages);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7c5130588d691a3b34d02312f1bd1b6d56fe0100",
      "candidate_info": {
        "commit_hash": "7c5130588d691a3b34d02312f1bd1b6d56fe0100",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7c5130588d691a3b34d02312f1bd1b6d56fe0100",
        "files": [
          "fs/nfs/dir.c",
          "fs/nfs/internal.h",
          "fs/nfs/namespace.c",
          "fs/nfs/nfs3proc.c",
          "fs/nfs/nfs4_fs.h",
          "fs/nfs/nfs4proc.c",
          "fs/nfs/proc.c",
          "include/linux/nfs_xdr.h"
        ],
        "message": "NFS: lookup supports alternate client\n\nA later patch will need to perform a lookup using an\nalternate client with a different security flavor.\nThis patch adds support for doing that on NFS v4.\n\nSigned-off-by: Bryan Schumaker <bjschuma@netapp.com>\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>",
        "before_after_code_files": [
          "fs/nfs/dir.c||fs/nfs/dir.c",
          "fs/nfs/internal.h||fs/nfs/internal.h",
          "fs/nfs/namespace.c||fs/nfs/namespace.c",
          "fs/nfs/nfs3proc.c||fs/nfs/nfs3proc.c",
          "fs/nfs/nfs4_fs.h||fs/nfs/nfs4_fs.h",
          "fs/nfs/nfs4proc.c||fs/nfs/nfs4proc.c",
          "fs/nfs/proc.c||fs/nfs/proc.c",
          "include/linux/nfs_xdr.h||include/linux/nfs_xdr.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/nfs/nfs4proc.c||fs/nfs/nfs4proc.c",
            "include/linux/nfs_xdr.h||include/linux/nfs_xdr.h"
          ],
          "candidate": [
            "fs/nfs/nfs4proc.c||fs/nfs/nfs4proc.c",
            "include/linux/nfs_xdr.h||include/linux/nfs_xdr.h"
          ]
        }
      },
      "candidate_diff": {
        "fs/nfs/dir.c||fs/nfs/dir.c": [
          "File: fs/nfs/dir.c -> fs/nfs/dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1068:  if (fhandle == NULL || fattr == NULL)",
          "1069:   goto out_error;",
          "1072:  if (error)",
          "1073:   goto out_bad;",
          "1074:  if (nfs_compare_fh(NFS_FH(inode), fhandle))",
          "",
          "[Removed Lines]",
          "1071:  error = NFS_PROTO(dir)->lookup(dir, &dentry->d_name, fhandle, fattr);",
          "",
          "[Added Lines]",
          "1071:  error = NFS_PROTO(dir)->lookup(NFS_SERVER(dir)->client, dir, &dentry->d_name, fhandle, fattr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1224:  parent = dentry->d_parent;",
          "1226:  nfs_block_sillyrename(parent);",
          "1228:  if (error == -ENOENT)",
          "1229:   goto no_entry;",
          "1230:  if (error < 0) {",
          "",
          "[Removed Lines]",
          "1227:  error = NFS_PROTO(dir)->lookup(dir, &dentry->d_name, fhandle, fattr);",
          "",
          "[Added Lines]",
          "1227:  error = NFS_PROTO(dir)->lookup(NFS_SERVER(dir)->client, dir, &dentry->d_name, fhandle, fattr);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1562:  if (dentry->d_inode)",
          "1563:   goto out;",
          "1564:  if (fhandle->size == 0) {",
          "1566:   if (error)",
          "1567:    goto out_error;",
          "1568:  }",
          "",
          "[Removed Lines]",
          "1565:   error = NFS_PROTO(dir)->lookup(dir, &dentry->d_name, fhandle, fattr);",
          "",
          "[Added Lines]",
          "1565:   error = NFS_PROTO(dir)->lookup(NFS_SERVER(dir)->client, dir, &dentry->d_name, fhandle, fattr);",
          "",
          "---------------"
        ],
        "fs/nfs/internal.h||fs/nfs/internal.h": [
          "File: fs/nfs/internal.h -> fs/nfs/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "296:        rpc_authflavor_t authflavour,",
          "297:        int noresvport);",
          "298: extern void nfs4_reset_write(struct rpc_task *task, struct nfs_write_data *data);",
          "300:       struct rpc_message *msg,",
          "301:       struct nfs4_sequence_args *args,",
          "302:       struct nfs4_sequence_res *res,",
          "303:       int cache_reply);",
          "305:        struct rpc_message *msg,",
          "306:        struct nfs4_sequence_args *args,",
          "307:        struct nfs4_sequence_res *res,",
          "",
          "[Removed Lines]",
          "299: extern int _nfs4_call_sync(struct nfs_server *server,",
          "304: extern int _nfs4_call_sync_session(struct nfs_server *server,",
          "",
          "[Added Lines]",
          "299: extern int _nfs4_call_sync(struct rpc_clnt *clnt,",
          "300:       struct nfs_server *server,",
          "305: extern int _nfs4_call_sync_session(struct rpc_clnt *clnt,",
          "306:        struct nfs_server *server,",
          "",
          "---------------"
        ],
        "fs/nfs/namespace.c||fs/nfs/namespace.c": [
          "File: fs/nfs/namespace.c -> fs/nfs/namespace.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:  parent = dget_parent(path->dentry);",
          "157:         &path->dentry->d_name,",
          "158:         fh, fattr);",
          "159:  dput(parent);",
          "",
          "[Removed Lines]",
          "156:  err = server->nfs_client->rpc_ops->lookup(parent->d_inode,",
          "",
          "[Added Lines]",
          "156:  err = server->nfs_client->rpc_ops->lookup(server->client, parent->d_inode,",
          "",
          "---------------"
        ],
        "fs/nfs/nfs3proc.c||fs/nfs/nfs3proc.c": [
          "File: fs/nfs/nfs3proc.c -> fs/nfs/nfs3proc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141: }",
          "143: static int",
          "145:    struct nfs_fh *fhandle, struct nfs_fattr *fattr)",
          "146: {",
          "147:  struct nfs3_diropargs arg = {",
          "",
          "[Removed Lines]",
          "144: nfs3_proc_lookup(struct inode *dir, struct qstr *name,",
          "",
          "[Added Lines]",
          "144: nfs3_proc_lookup(struct rpc_clnt *clnt, struct inode *dir, struct qstr *name,",
          "",
          "---------------"
        ],
        "fs/nfs/nfs4_fs.h||fs/nfs/nfs4_fs.h": [
          "File: fs/nfs/nfs4_fs.h -> fs/nfs/nfs4_fs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: struct nfs4_minor_version_ops {",
          "58:  u32 minor_version;",
          "61:    struct rpc_message *msg,",
          "62:    struct nfs4_sequence_args *args,",
          "63:    struct nfs4_sequence_res *res,",
          "",
          "[Removed Lines]",
          "60:  int (*call_sync)(struct nfs_server *server,",
          "",
          "[Added Lines]",
          "60:  int (*call_sync)(struct rpc_clnt *clnt,",
          "61:    struct nfs_server *server,",
          "",
          "---------------"
        ],
        "fs/nfs/nfs4proc.c||fs/nfs/nfs4proc.c": [
          "File: fs/nfs/nfs4proc.c -> fs/nfs/nfs4proc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71: static int _nfs4_recover_proc_open(struct nfs4_opendata *data);",
          "72: static int nfs4_do_fsinfo(struct nfs_server *, struct nfs_fh *, struct nfs_fsinfo *);",
          "73: static int nfs4_async_handle_error(struct rpc_task *, const struct nfs_server *, struct nfs4_state *);",
          "75: static int _nfs4_proc_getattr(struct nfs_server *server, struct nfs_fh *fhandle, struct nfs_fattr *fattr);",
          "76: static int nfs4_do_setattr(struct inode *inode, struct rpc_cred *cred,",
          "77:        struct nfs_fattr *fattr, struct iattr *sattr,",
          "",
          "[Removed Lines]",
          "74: static int _nfs4_proc_lookup(struct inode *dir, const struct qstr *name, struct nfs_fh *fhandle, struct nfs_fattr *fattr);",
          "",
          "[Added Lines]",
          "74: static int _nfs4_proc_lookup(struct rpc_clnt *client, struct inode *dir,",
          "75:         const struct qstr *name, struct nfs_fh *fhandle,",
          "76:         struct nfs_fattr *fattr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "657:  .rpc_call_done = nfs41_call_sync_done,",
          "658: };",
          "661:        struct rpc_message *msg,",
          "662:        struct nfs4_sequence_args *args,",
          "663:        struct nfs4_sequence_res *res,",
          "",
          "[Removed Lines]",
          "660: static int nfs4_call_sync_sequence(struct nfs_server *server,",
          "",
          "[Added Lines]",
          "662: static int nfs4_call_sync_sequence(struct rpc_clnt *clnt,",
          "663:        struct nfs_server *server,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "673:   .cache_reply = cache_reply,",
          "674:  };",
          "675:  struct rpc_task_setup task_setup = {",
          "677:   .rpc_message = msg,",
          "678:   .callback_ops = &nfs41_call_sync_ops,",
          "679:   .callback_data = &data",
          "",
          "[Removed Lines]",
          "676:   .rpc_client = server->client,",
          "",
          "[Added Lines]",
          "679:   .rpc_client = clnt,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "692:  return ret;",
          "693: }",
          "696:        struct rpc_message *msg,",
          "697:        struct nfs4_sequence_args *args,",
          "698:        struct nfs4_sequence_res *res,",
          "699:        int cache_reply)",
          "700: {",
          "702: }",
          "704: #else",
          "",
          "[Removed Lines]",
          "695: int _nfs4_call_sync_session(struct nfs_server *server,",
          "701:  return nfs4_call_sync_sequence(server, msg, args, res, cache_reply, 0);",
          "",
          "[Added Lines]",
          "698: int _nfs4_call_sync_session(struct rpc_clnt *clnt,",
          "699:        struct nfs_server *server,",
          "705:  return nfs4_call_sync_sequence(clnt, server, msg, args, res, cache_reply, 0);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "709: }",
          "713:       struct rpc_message *msg,",
          "714:       struct nfs4_sequence_args *args,",
          "715:       struct nfs4_sequence_res *res,",
          "716:       int cache_reply)",
          "717: {",
          "718:  args->sa_session = res->sr_session = NULL;",
          "720: }",
          "722: static inline",
          "724:      struct rpc_message *msg,",
          "725:      struct nfs4_sequence_args *args,",
          "726:      struct nfs4_sequence_res *res,",
          "727:      int cache_reply)",
          "728: {",
          "731: }",
          "733: static void update_changeattr(struct inode *dir, struct nfs4_change_info *cinfo)",
          "",
          "[Removed Lines]",
          "712: int _nfs4_call_sync(struct nfs_server *server,",
          "719:  return rpc_call_sync(server->client, msg, 0);",
          "723: int nfs4_call_sync(struct nfs_server *server,",
          "729:  return server->nfs_client->cl_mvops->call_sync(server, msg, args,",
          "730:       res, cache_reply);",
          "",
          "[Added Lines]",
          "716: int _nfs4_call_sync(struct rpc_clnt *clnt,",
          "717:       struct nfs_server *server,",
          "724:  return rpc_call_sync(clnt, msg, 0);",
          "728: int nfs4_call_sync(struct rpc_clnt *clnt,",
          "729:      struct nfs_server *server,",
          "735:  return server->nfs_client->cl_mvops->call_sync(clnt, server, msg,",
          "736:       args, res, cache_reply);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1838:  } else",
          "1839:   memcpy(&arg.stateid, &zero_stateid, sizeof(arg.stateid));",
          "1842:  if (status == 0 && state != NULL)",
          "1843:   renew_lease(server, timestamp);",
          "1844:  return status;",
          "",
          "[Removed Lines]",
          "1841:  status = nfs4_call_sync(server, &msg, &arg.seq_args, &res.seq_res, 1);",
          "",
          "[Added Lines]",
          "1847:  status = nfs4_call_sync(server->client, server, &msg, &arg.seq_args, &res.seq_res, 1);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2097:  };",
          "2098:  int status;",
          "2101:  if (status == 0) {",
          "2102:   memcpy(server->attr_bitmask, res.attr_bitmask, sizeof(server->attr_bitmask));",
          "2103:   server->caps &= ~(NFS_CAP_ACLS|NFS_CAP_HARDLINKS|",
          "",
          "[Removed Lines]",
          "2100:  status = nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "2106:  status = nfs4_call_sync(server->client, server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2167:  };",
          "2169:  nfs_fattr_init(info->fattr);",
          "2171: }",
          "2173: static int nfs4_lookup_root(struct nfs_server *server, struct nfs_fh *fhandle,",
          "",
          "[Removed Lines]",
          "2170:  return nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "2176:  return nfs4_call_sync(server->client, server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2256:  };",
          "2258:  nfs_fattr_init(fattr);",
          "2260: }",
          "2262: static int nfs4_proc_getattr(struct nfs_server *server, struct nfs_fh *fhandle, struct nfs_fattr *fattr)",
          "",
          "[Removed Lines]",
          "2259:  return nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "2265:  return nfs4_call_sync(server->client, server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2316:  return status;",
          "2317: }",
          "2322: {",
          "2323:  int         status;",
          "2324:  struct nfs4_lookup_arg args = {",
          "",
          "[Removed Lines]",
          "2319: static int _nfs4_proc_lookupfh(struct nfs_server *server, const struct nfs_fh *dirfh,",
          "2320:   const struct qstr *name, struct nfs_fh *fhandle,",
          "2321:   struct nfs_fattr *fattr)",
          "",
          "[Added Lines]",
          "2325: static int _nfs4_proc_lookupfh(struct rpc_clnt *clnt, struct nfs_server *server,",
          "2326:   const struct nfs_fh *dirfh, const struct qstr *name,",
          "2327:   struct nfs_fh *fhandle, struct nfs_fattr *fattr)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2340:  nfs_fattr_init(fattr);",
          "2342:  dprintk(\"NFS call  lookupfh %s\\n\", name->name);",
          "2344:  dprintk(\"NFS reply lookupfh: %d\\n\", status);",
          "2345:  return status;",
          "2346: }",
          "",
          "[Removed Lines]",
          "2343:  status = nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "2349:  status = nfs4_call_sync(clnt, server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2352:  struct nfs4_exception exception = { };",
          "2353:  int err;",
          "2354:  do {",
          "2357:   if (err == -NFS4ERR_MOVED) {",
          "2358:    err = -EREMOTE;",
          "",
          "[Removed Lines]",
          "2355:   err = _nfs4_proc_lookupfh(server, dirfh, name, fhandle, fattr);",
          "",
          "[Added Lines]",
          "2361:   err = _nfs4_proc_lookupfh(server->client, server, dirfh, name, fhandle, fattr);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2363:  return err;",
          "2364: }",
          "2368: {",
          "2369:  int status;",
          "2371:  dprintk(\"NFS call  lookup %s\\n\", name->name);",
          "2373:  if (status == -NFS4ERR_MOVED)",
          "2374:   status = nfs4_get_referral(dir, name, fattr, fhandle);",
          "2375:  dprintk(\"NFS reply lookup: %d\\n\", status);",
          "2376:  return status;",
          "2377: }",
          "2380: {",
          "2381:  struct nfs4_exception exception = { };",
          "2382:  int err;",
          "2383:  do {",
          "2384:   err = nfs4_handle_exception(NFS_SERVER(dir),",
          "2386:     &exception);",
          "2387:  } while (exception.retry);",
          "2388:  return err;",
          "",
          "[Removed Lines]",
          "2366: static int _nfs4_proc_lookup(struct inode *dir, const struct qstr *name,",
          "2367:   struct nfs_fh *fhandle, struct nfs_fattr *fattr)",
          "2372:  status = _nfs4_proc_lookupfh(NFS_SERVER(dir), NFS_FH(dir), name, fhandle, fattr);",
          "2379: static int nfs4_proc_lookup(struct inode *dir, struct qstr *name, struct nfs_fh *fhandle, struct nfs_fattr *fattr)",
          "2385:     _nfs4_proc_lookup(dir, name, fhandle, fattr),",
          "",
          "[Added Lines]",
          "2372: static int _nfs4_proc_lookup(struct rpc_clnt *clnt, struct inode *dir,",
          "2373:   const struct qstr *name, struct nfs_fh *fhandle,",
          "2374:   struct nfs_fattr *fattr)",
          "2379:  status = _nfs4_proc_lookupfh(clnt, NFS_SERVER(dir), NFS_FH(dir), name, fhandle, fattr);",
          "2386: static int nfs4_proc_lookup(struct rpc_clnt *clnt, struct inode *dir, struct qstr *name,",
          "2387:        struct nfs_fh *fhandle, struct nfs_fattr *fattr)",
          "2393:     _nfs4_proc_lookup(clnt, dir, name, fhandle, fattr),",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2428:  if (res.fattr == NULL)",
          "2429:   return -ENOMEM;",
          "2432:  if (!status) {",
          "2433:   entry->mask = 0;",
          "2434:   if (res.access & NFS4_ACCESS_READ)",
          "",
          "[Removed Lines]",
          "2431:  status = nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "2439:  status = nfs4_call_sync(server->client, server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2495:   .rpc_resp = &res,",
          "2496:  };",
          "2499: }",
          "2501: static int nfs4_proc_readlink(struct inode *inode, struct page *page,",
          "",
          "[Removed Lines]",
          "2498:  return nfs4_call_sync(NFS_SERVER(inode), &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "2506:  return nfs4_call_sync(NFS_SERVER(inode)->client, NFS_SERVER(inode), &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2584:  if (res.dir_attr == NULL)",
          "2585:   goto out;",
          "2588:  if (status == 0) {",
          "2589:   update_changeattr(dir, &res.cinfo);",
          "2590:   nfs_post_op_update_inode(dir, res.dir_attr);",
          "",
          "[Removed Lines]",
          "2587:  status = nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 1);",
          "",
          "[Added Lines]",
          "2595:  status = nfs4_call_sync(server->client, server, &msg, &args.seq_args, &res.seq_res, 1);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2685:  if (res.old_fattr == NULL || res.new_fattr == NULL)",
          "2686:   goto out;",
          "2689:  if (!status) {",
          "2690:   update_changeattr(old_dir, &res.old_cinfo);",
          "2691:   nfs_post_op_update_inode(old_dir, res.old_fattr);",
          "",
          "[Removed Lines]",
          "2688:  status = nfs4_call_sync(server, &msg, &arg.seq_args, &res.seq_res, 1);",
          "",
          "[Added Lines]",
          "2696:  status = nfs4_call_sync(server->client, server, &msg, &arg.seq_args, &res.seq_res, 1);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2736:  if (res.fattr == NULL || res.dir_attr == NULL)",
          "2737:   goto out;",
          "2740:  if (!status) {",
          "2741:   update_changeattr(dir, &res.cinfo);",
          "2742:   nfs_post_op_update_inode(dir, res.dir_attr);",
          "",
          "[Removed Lines]",
          "2739:  status = nfs4_call_sync(server, &msg, &arg.seq_args, &res.seq_res, 1);",
          "",
          "[Added Lines]",
          "2747:  status = nfs4_call_sync(server->client, server, &msg, &arg.seq_args, &res.seq_res, 1);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2800: static int nfs4_do_create(struct inode *dir, struct dentry *dentry, struct nfs4_createdata *data)",
          "2801: {",
          "2803:         &data->arg.seq_args, &data->res.seq_res, 1);",
          "2804:  if (status == 0) {",
          "2805:   update_changeattr(dir, &data->res.dir_cinfo);",
          "",
          "[Removed Lines]",
          "2802:  int status = nfs4_call_sync(NFS_SERVER(dir), &data->msg,",
          "",
          "[Added Lines]",
          "2810:  int status = nfs4_call_sync(NFS_SERVER(dir)->client, NFS_SERVER(dir), &data->msg,",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2912:    (unsigned long long)cookie);",
          "2913:  nfs4_setup_readdir(cookie, NFS_COOKIEVERF(dir), dentry, &args);",
          "2914:  res.pgbase = args.pgbase;",
          "2916:  if (status >= 0) {",
          "2917:   memcpy(NFS_COOKIEVERF(dir), res.verifier.data, NFS4_VERIFIER_SIZE);",
          "2918:   status += args.pgbase;",
          "",
          "[Removed Lines]",
          "2915:  status = nfs4_call_sync(NFS_SERVER(dir), &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "2923:  status = nfs4_call_sync(NFS_SERVER(dir)->client, NFS_SERVER(dir), &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "3004:  };",
          "3006:  nfs_fattr_init(fsstat->fattr);",
          "3008: }",
          "3010: static int nfs4_proc_statfs(struct nfs_server *server, struct nfs_fh *fhandle, struct nfs_fsstat *fsstat)",
          "",
          "[Removed Lines]",
          "3007:  return  nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "3015:  return  nfs4_call_sync(server->client, server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3035:   .rpc_resp = &res,",
          "3036:  };",
          "3039: }",
          "3041: static int nfs4_do_fsinfo(struct nfs_server *server, struct nfs_fh *fhandle, struct nfs_fsinfo *fsinfo)",
          "",
          "[Removed Lines]",
          "3038:  return nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "3046:  return nfs4_call_sync(server->client, server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3080:  }",
          "3082:  nfs_fattr_init(pathconf->fattr);",
          "3084: }",
          "3086: static int nfs4_proc_pathconf(struct nfs_server *server, struct nfs_fh *fhandle,",
          "",
          "[Removed Lines]",
          "3083:  return nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "3091:  return nfs4_call_sync(server->client, server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3459:   resp_buf = buf;",
          "3460:   buf_to_pages(buf, buflen, args.acl_pages, &args.acl_pgbase);",
          "3461:  }",
          "3463:  if (ret)",
          "3464:   goto out_free;",
          "3465:  if (res.acl_len > args.acl_len)",
          "",
          "[Removed Lines]",
          "3462:  ret = nfs4_call_sync(NFS_SERVER(inode), &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "3470:  ret = nfs4_call_sync(NFS_SERVER(inode)->client, NFS_SERVER(inode), &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3534:  if (i < 0)",
          "3535:   return i;",
          "3536:  nfs_inode_return_delegation(inode);",
          "",
          "[Removed Lines]",
          "3537:  ret = nfs4_call_sync(server, &msg, &arg.seq_args, &res.seq_res, 1);",
          "",
          "[Added Lines]",
          "3545:  ret = nfs4_call_sync(server->client, server, &msg, &arg.seq_args, &res.seq_res, 1);",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3897:  lsp = request->fl_u.nfs4_fl.owner;",
          "3898:  arg.lock_owner.id = lsp->ls_id.id;",
          "3899:  arg.lock_owner.s_dev = server->s_dev;",
          "3901:  switch (status) {",
          "3902:   case 0:",
          "3903:    request->fl_type = F_UNLCK;",
          "",
          "[Removed Lines]",
          "3900:  status = nfs4_call_sync(server, &msg, &arg.seq_args, &res.seq_res, 1);",
          "",
          "[Added Lines]",
          "3908:  status = nfs4_call_sync(server->client, server, &msg, &arg.seq_args, &res.seq_res, 1);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "4625:  nfs_fattr_init(&fs_locations->fattr);",
          "4626:  fs_locations->server = server;",
          "4627:  fs_locations->nlocations = 0;",
          "4629:  nfs_fixup_referral_attributes(&fs_locations->fattr);",
          "4630:  dprintk(\"%s: returned status = %d\\n\", __func__, status);",
          "4631:  return status;",
          "",
          "[Removed Lines]",
          "4628:  status = nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "4636:  status = nfs4_call_sync(server->client, server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "5593:  int status;",
          "5595:  dprintk(\"--> %s\\n\", __func__);",
          "5597:  dprintk(\"<-- %s status=%d\\n\", __func__, status);",
          "5599:  return status;",
          "",
          "[Removed Lines]",
          "5596:  status = nfs4_call_sync(server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "[Added Lines]",
          "5604:  status = nfs4_call_sync(server->client, server, &msg, &args.seq_args, &res.seq_res, 0);",
          "",
          "---------------"
        ],
        "fs/nfs/proc.c||fs/nfs/proc.c": [
          "File: fs/nfs/proc.c -> fs/nfs/proc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "177: }",
          "179: static int",
          "181:   struct nfs_fh *fhandle, struct nfs_fattr *fattr)",
          "182: {",
          "183:  struct nfs_diropargs arg = {",
          "",
          "[Removed Lines]",
          "180: nfs_proc_lookup(struct inode *dir, struct qstr *name,",
          "",
          "[Added Lines]",
          "180: nfs_proc_lookup(struct rpc_clnt *clnt, struct inode *dir, struct qstr *name,",
          "",
          "---------------"
        ],
        "include/linux/nfs_xdr.h||include/linux/nfs_xdr.h": [
          "File: include/linux/nfs_xdr.h -> include/linux/nfs_xdr.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1071:        struct nfs_fattr *);",
          "1072:  int (*setattr) (struct dentry *, struct nfs_fattr *,",
          "1073:        struct iattr *);",
          "1075:        struct nfs_fh *, struct nfs_fattr *);",
          "1076:  int (*access)  (struct inode *, struct nfs_access_entry *);",
          "1077:  int (*readlink)(struct inode *, struct page *, unsigned int,",
          "",
          "[Removed Lines]",
          "1074:  int (*lookup)  (struct inode *, struct qstr *,",
          "",
          "[Added Lines]",
          "1074:  int (*lookup)  (struct rpc_clnt *clnt, struct inode *, struct qstr *,",
          "",
          "---------------"
        ]
      }
    }
  ]
}