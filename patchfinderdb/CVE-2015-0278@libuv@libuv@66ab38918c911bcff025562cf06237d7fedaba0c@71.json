{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1d42b3ce7c184696960a96f129ac586749b76a84",
      "candidate_info": {
        "commit_hash": "1d42b3ce7c184696960a96f129ac586749b76a84",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/1d42b3ce7c184696960a96f129ac586749b76a84",
        "files": [
          "configure.ac",
          "m4/libuv-check-flags.m4"
        ],
        "message": "Revert \"build: enable all compiler warnings\"\n\nThis reverts commit f75bb7c3379d4398de8ed588a110aa7ab8708a91.\n\nWe need to figure out all those warnings before reapplying this patch.",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "m4/libuv-check-flags.m4||m4/libuv-check-flags.m4"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: # ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF",
          "13: # OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
          "17: AC_PREREQ(2.57)",
          "18: AC_INIT([libuv], [0.11.23], [https://github.com/joyent/libuv/issues])",
          "19: AC_CONFIG_MACRO_DIR([m4])",
          "20: AM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects] UV_EXTRA_AUTOMAKE_FLAGS)",
          "21: AC_CANONICAL_HOST",
          "22: AC_ENABLE_SHARED",
          "23: AC_ENABLE_STATIC",
          "24: AC_PROG_CC",
          "25: AM_PROG_CC_C_O",
          "61: # AM_PROG_AR is not available in automake v0.11 but it's essential in v0.12.",
          "62: m4_ifdef([AM_PROG_AR], [AM_PROG_AR])",
          "63: m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])",
          "",
          "[Removed Lines]",
          "15: m4_include([m4/libuv-check-flags.m4])",
          "16: m4_include([m4/libuv-extra-automake-flags.m4])",
          "26: CC_CHECK_CFLAGS_APPEND([ \\",
          "27:   -Waggregate-return \\",
          "28:   -Wall \\",
          "29:   -Wcast-align \\",
          "30:   -Wcast-qual \\",
          "31:   -Wconversion \\",
          "32:   -Wdeclaration-after-statement \\",
          "33:   -Wextra \\",
          "34:   -Wfloat-equal \\",
          "35:   -Wformat=2 \\",
          "36:   -Wimplicit \\",
          "37:   -Winit-self \\",
          "38:   -Wmissing-declarations \\",
          "39:   -Wmissing-field-initializers \\",
          "40:   -Wmissing-format-attribute \\",
          "41:   -Wmissing-include-dirs \\",
          "42:   -Wmissing-noreturn \\",
          "43:   -Wmissing-prototypes \\",
          "44:   -Wnested-externs \\",
          "45:   -Wno-unused-parameter \\",
          "46:   -Wold-style-definition \\",
          "47:   -Wpacked \\",
          "48:   -Wpointer-arith \\",
          "49:   -Wredundant-decls \\",
          "50:   -Wshadow \\",
          "51:   -Wsign-compare \\",
          "52:   -Wstrict-aliasing=2 \\",
          "53:   -Wstrict-prototypes \\",
          "54:   -Wswitch-enum \\",
          "55:   -Wundef \\",
          "56:   -Wuninitialized \\",
          "57:   -Wunsafe-loop-optimizations \\",
          "58:   -Wwrite-strings \\",
          "59:   -fno-common \\",
          "60:   -fvisibility=hidden])",
          "",
          "[Added Lines]",
          "18: m4_include([m4/libuv-extra-automake-flags.m4])",
          "",
          "---------------"
        ],
        "m4/libuv-check-flags.m4||m4/libuv-check-flags.m4": [
          "File: m4/libuv-check-flags.m4 -> m4/libuv-check-flags.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2d29b5b068cbac93dc16138fb30a74e2669daad",
      "candidate_info": {
        "commit_hash": "a2d29b5b068cbac93dc16138fb30a74e2669daad",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/a2d29b5b068cbac93dc16138fb30a74e2669daad",
        "files": [
          "ChangeLog",
          "src/version.c"
        ],
        "message": "2013.08.24, Version 0.11.9 (Unstable)\n\nChanges since version 0.11.8:\n\n* fsevents: share FSEventStream between multiple FS watchers, which\n  removes a limit on the maximum number of file watchers that can be\n  created on OS X. (Fedor Indutny)\n\n* process: the `exit_status` parameter for a uv_process_t's exit\n  callback now is an int64_t, and no longer an int. (Bert Belder)\n\n* process: make uv_spawn() return some types of errors immediately on\n  windows, instead of passing the error code the the exit callback. This\n  brings it on par with libuv's behavior on unix. (Bert Belder)",
        "before_after_code_files": [
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #define UV_VERSION_MAJOR 0",
          "33: #define UV_VERSION_MINOR 11",
          "34: #define UV_VERSION_PATCH 9",
          "38: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "",
          "[Removed Lines]",
          "35: #define UV_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "35: #define UV_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7e46379ef73b3c555e6ddd67f023f7159522679",
      "candidate_info": {
        "commit_hash": "f7e46379ef73b3c555e6ddd67f023f7159522679",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/f7e46379ef73b3c555e6ddd67f023f7159522679",
        "files": [
          "src/uv-common.c"
        ],
        "message": "openbsd: fix uv_ip6_addr() unused variable warnings",
        "before_after_code_files": [
          "src/uv-common.c||src/uv-common.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/uv-common.c||src/uv-common.c": [
          "File: src/uv-common.c -> src/uv-common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141: struct sockaddr_in6 uv_ip6_addr(const char* ip, int port) {",
          "142:   struct sockaddr_in6 addr;",
          "143:   char address_part[40];",
          "144:   size_t address_part_size;",
          "145:   const char* zone_index;",
          "147:   memset(&addr, 0, sizeof(struct sockaddr_in6));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143: #if defined(UV_PLATFORM_HAS_IP6_LINK_LOCAL_ADDRESS)",
          "147: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb1f60c022ad651833913d2825ecced398993a3f",
      "candidate_info": {
        "commit_hash": "eb1f60c022ad651833913d2825ecced398993a3f",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/eb1f60c022ad651833913d2825ecced398993a3f",
        "files": [
          "common.gypi",
          "uv.gyp"
        ],
        "message": "build: fix build breakage from 3fdd2a1\n\nMake sure the android_build variable is defined.",
        "before_after_code_files": [
          "common.gypi||common.gypi",
          "uv.gyp||uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: {",
          "2:   'variables': {",
          "3:     'visibility%': 'hidden',         # V8's visibility setting",
          "4:     'target_arch%': 'ia32',          # set v8's target architecture",
          "5:     'host_arch%': 'ia32',            # set v8's host architecture",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3:     'android_build%': 0,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8:     'msvs_multi_core_compile': '0',  # we do enable multicore compiles, but not using the V8 way",
          "9:     'gcc_version%': 'unknown',",
          "10:     'clang%': 0,",
          "18:   },",
          "20:   'target_defaults': {",
          "",
          "[Removed Lines]",
          "12:     'conditions': [",
          "13:       # Workaround for the legacy handling of android in gyp",
          "14:       ['android_build == 1', {",
          "15:         'OS': 'android',",
          "16:       }],",
          "17:     ],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "136:           }]",
          "137:         ]",
          "138:       }],",
          "140:         'cflags': [ '-Wall' ],",
          "141:         'cflags_cc': [ '-fno-rtti', '-fno-exceptions' ],",
          "142:         'target_conditions': [",
          "",
          "[Removed Lines]",
          "139:       ['OS in \"android freebsd linux openbsd solaris\"', {",
          "",
          "[Added Lines]",
          "133:       ['OS in \"freebsd linux openbsd solaris\" or android_build == 1', {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "156:             'cflags': [ '-pthreads' ],",
          "157:             'ldflags': [ '-pthreads' ],",
          "158:           }],",
          "160:             'cflags': [ '-pthread' ],",
          "161:             'ldflags': [ '-pthread' ],",
          "162:           }],",
          "",
          "[Removed Lines]",
          "159:           [ 'OS not in \"android solaris\"', {",
          "",
          "[Added Lines]",
          "153:           [ 'OS != \"solaris\" and android_build == 0', {",
          "",
          "---------------"
        ],
        "uv.gyp||uv.gyp": [
          "File: uv.gyp -> uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: {",
          "2:   'variables': {",
          "3:     'uv_use_dtrace%': 'false',",
          "4:     # uv_parent_path is the relative path to libuv in the parent project",
          "5:     # this is only relevant when dtrace is enabled and libuv is a child project",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3:     'android_build%': 0,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:           ['OS==\"solaris\"', {",
          "22:             'cflags': [ '-pthreads' ],",
          "23:           }],",
          "25:             'cflags': [ '-pthread' ],",
          "26:           }],",
          "27:         ],",
          "",
          "[Removed Lines]",
          "24:           ['OS not in \"android solaris\"', {",
          "",
          "[Added Lines]",
          "25:           ['OS != \"solaris\" and android_build == 0', {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "161:               ['OS==\"solaris\"', {",
          "162:                 'ldflags': [ '-pthreads' ],",
          "163:               }],",
          "165:                 'ldflags': [ '-pthread' ],",
          "166:               }],",
          "167:             ],",
          "",
          "[Removed Lines]",
          "164:               ['OS not in \"android solaris\"', {",
          "",
          "[Added Lines]",
          "165:               ['OS != \"solaris\" and android_build == 0', {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "179:             }],",
          "180:           ],",
          "181:         }],",
          "183:           'sources': [ 'src/unix/proctitle.c' ],",
          "184:         }],",
          "185:         [ 'OS==\"mac\"', {",
          "",
          "[Removed Lines]",
          "182:         [ 'OS in \"android linux mac\"', {",
          "",
          "[Added Lines]",
          "183:         [ 'OS in \"linux mac\" or android_build == 1', {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "215:             'libraries': [ '-ldl', '-lrt' ],",
          "216:           },",
          "217:         }],",
          "219:           'sources': [",
          "220:             'src/unix/linux-core.c',",
          "221:             'src/unix/linux-inotify.c',",
          "",
          "[Removed Lines]",
          "218:         [ 'OS==\"android\"', {",
          "",
          "[Added Lines]",
          "219:         [ 'android_build == 1', {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f166d6d7055bbd9da83594b045a496e15b3c302a",
      "candidate_info": {
        "commit_hash": "f166d6d7055bbd9da83594b045a496e15b3c302a",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/f166d6d7055bbd9da83594b045a496e15b3c302a",
        "files": [
          "src/unix/kqueue.c"
        ],
        "message": "osx: Fix a possible segfault in uv__io_poll\n\nIn our build infrastructure, I've seen a lot of segfaults recently that\nwere all only happening on OSX. Upon inspecting the coredumps, it\nappearded that all segfaults happened at the same instruction, and upon\ntranslating the assembly back to the source, I found that an array could\nbe indexed with a -1 index before the index was checked to be not -1.\n\nAs concrete evidence, here is the situation that I found caused the\nsegfault.  The instruction in question along with the relevant register\nvalues was:\n\n    mov    (%r8,%r15,8),%r12\n\n    r8  = 0x7fb0ba800000\n    r15 = 0xffffffffffffffff\n\n    r8 + r15 * 8 == 0x7fb0ba7ffff8\n\nIt appears that the base of loop->watchers was page aligned, and by\ngoing back one word I guess that the page wasn't mapped, causing our\nsegfaults.",
        "before_after_code_files": [
          "src/unix/kqueue.c||src/unix/kqueue.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/kqueue.c||src/unix/kqueue.c": [
          "File: src/unix/kqueue.c -> src/unix/kqueue.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:     for (i = 0; i < nfds; i++) {",
          "168:       ev = events + i;",
          "169:       fd = ev->ident;",
          "173:       if (fd == -1)",
          "174:         continue;",
          "176:       if (w == NULL) {",
          "",
          "[Removed Lines]",
          "170:       w = loop->watchers[fd];",
          "",
          "[Added Lines]",
          "173:       w = loop->watchers[fd];",
          "",
          "---------------"
        ]
      }
    }
  ]
}