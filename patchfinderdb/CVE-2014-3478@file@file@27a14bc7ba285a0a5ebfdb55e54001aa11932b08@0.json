{
  "cve_id": "CVE-2014-3478",
  "cve_desc": "Buffer overflow in the mconvert function in softmagic.c in file before 5.19, as used in the Fileinfo component in PHP before 5.4.30 and 5.5.x before 5.5.14, allows remote attackers to cause a denial of service (application crash) via a crafted Pascal string in a FILE_PSTRING conversion.",
  "repo": "file/file",
  "patch_hash": "27a14bc7ba285a0a5ebfdb55e54001aa11932b08",
  "patch_info": {
    "commit_hash": "27a14bc7ba285a0a5ebfdb55e54001aa11932b08",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/27a14bc7ba285a0a5ebfdb55e54001aa11932b08",
    "files": [
      "src/softmagic.c"
    ],
    "message": "Correctly compute the truncated pascal string size (Francisco Alonso and Jan Kaluza at RedHat)",
    "before_after_code_files": [
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.189 2014/05/30 16:47:44 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.190 2014/06/03 19:01:34 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "940:   return 1;",
      "941:  }",
      "942:  case FILE_PSTRING: {",
      "944:   size_t len = file_pstring_get_length(m, ptr1);",
      "947:   while (len--)",
      "",
      "[Removed Lines]",
      "943:   char *ptr1 = p->s, *ptr2 = ptr1 + file_pstring_length_size(m);",
      "945:   if (len >= sizeof(p->s))",
      "946:    len = sizeof(p->s) - 1;",
      "",
      "[Added Lines]",
      "943:   size_t sz = file_pstring_length_size(m);",
      "944:   char *ptr1 = p->s, *ptr2 = ptr1 + sz;",
      "946:   if (len >= sizeof(p->s)) {",
      "953:    len = sizeof(p->s) - sz;",
      "954:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "90018fe22ff8b74a22fcd142225b0a00f3f12677",
      "candidate_info": {
        "commit_hash": "90018fe22ff8b74a22fcd142225b0a00f3f12677",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/90018fe22ff8b74a22fcd142225b0a00f3f12677",
        "files": [
          "src/apprentice.c",
          "src/file.c",
          "src/file.h",
          "src/file_opts.h",
          "src/magic.c",
          "src/magic.h.in",
          "src/softmagic.c"
        ],
        "message": "bump recursion to 15, and allow it to be set from the command line.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/file_opts.h||src/file_opts.h",
          "src/magic.c||src/magic.c",
          "src/magic.h.in||src/magic.h.in",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.222 2014/11/11 17:46:05 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.223 2014/11/12 15:28:34 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "524:   ms->mlist[i] = NULL;",
          "525:  ms->file = \"unknown\";",
          "526:  ms->line = 0;",
          "527:  return ms;",
          "528: free:",
          "529:  free(ms);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "527:  ms->max_recursion = FILE_MAX_RECURSION;",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.154 2014/09/10 18:41:51 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.155 2014/10/11 15:03:16 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98: #undef OPT_LONGONLY",
          "99:     {0, 0, NULL, 0}",
          "100: };",
          "103: private const struct {",
          "104:  const char *name;",
          "",
          "[Removed Lines]",
          "101: #define OPTSTRING \"bcCde:Ef:F:hiklLm:nNprsvz0\"",
          "",
          "[Added Lines]",
          "101: #define OPTSTRING \"bcCde:Ef:F:hiklLm:nNprR:svz0\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "137:  size_t i;",
          "138:  int action = 0, didsomefiles = 0, errflg = 0;",
          "139:  int flags = 0, e = 0;",
          "140:  struct magic_set *magic = NULL;",
          "141:  int longindex;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:  size_t max_recursion = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "245:   case 'r':",
          "246:    flags |= MAGIC_RAW;",
          "247:    break;",
          "248:   case 's':",
          "249:    flags |= MAGIC_DEVICES;",
          "250:    break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249:   case 'R':",
          "250:    max_recursion = atoi(optarg);",
          "251:    break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "320:   if (magic == NULL)",
          "321:    if ((magic = load(magicfile, flags)) == NULL)",
          "322:     return 1;",
          "323:   break;",
          "324:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:   if (max_recursion) {",
          "330:    if (magic_setparam(magic, MAGIC_PARAM_MAX_RECURSION,",
          "331:        &max_recursion) == -1) {",
          "332:     (void)fprintf(stderr,",
          "333:         \"%s: Can't set recurision %s\\n\", progname,",
          "334:         strerror(errno));",
          "335:     return 1;",
          "336:    }",
          "337:   }",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "404: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:  size_t max_recursion;",
          "405: #define FILE_MAX_RECURSION 15",
          "",
          "---------------"
        ],
        "src/file_opts.h||src/file_opts.h": [
          "File: src/file_opts.h -> src/file_opts.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: OPT('p', \"preserve-date\", 0, \"        preserve access times on files\\n\")",
          "45: #endif",
          "46: OPT('r', \"raw\", 0, \"                  don't translate unprintable chars to \\\\ooo\\n\")",
          "47: OPT('s', \"special-files\", 0, \"        treat special (block/char devices) files as\\n\"",
          "48:     \"                             ordinary ones\\n\")",
          "49: OPT('C', \"compile\", 0, \"              compile file specified by -m\\n\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: OPT('R', \"recursion\", 0, \"            set maximum recursion level\\n\")",
          "",
          "---------------"
        ],
        "src/magic.c||src/magic.c": [
          "File: src/magic.c -> src/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"file.h\"",
          "35: #ifndef lint",
          "39: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.84 2014/05/14 23:15:42 christos Exp $\")",
          "",
          "[Added Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.85 2014/08/04 06:19:44 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "536: {",
          "537:  return MAGIC_VERSION;",
          "538: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "540: public int",
          "541: magic_setparam(struct magic_set *ms, int param, const void *val)",
          "542: {",
          "543:  switch (param) {",
          "544:  case MAGIC_PARAM_MAX_RECURSION:",
          "545:   ms->max_recursion = *(const size_t *)val;",
          "546:   return 0;",
          "547:  default:",
          "548:   errno = EINVAL;",
          "549:   return -1;",
          "550:  }",
          "551: }",
          "553: public int",
          "554: magic_getparam(struct magic_set *ms, int param, void *val)",
          "555: {",
          "556:  switch (param) {",
          "557:  case MAGIC_PARAM_MAX_RECURSION:",
          "559:   return 0;",
          "560:  default:",
          "561:   errno = EINVAL;",
          "562:   return -1;",
          "563:  }",
          "564: }",
          "",
          "---------------"
        ],
        "src/magic.h.in||src/magic.h.in": [
          "File: src/magic.h.in -> src/magic.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "97: int magic_version(void);",
          "98: int magic_load(magic_t, const char *);",
          "101: int magic_compile(magic_t, const char *);",
          "102: int magic_check(magic_t, const char *);",
          "103: int magic_list(magic_t, const char *);",
          "104: int magic_errno(magic_t);",
          "106: #ifdef __cplusplus",
          "107: };",
          "108: #endif",
          "",
          "[Removed Lines]",
          "99: int magic_load_buffers(struct magic_set *, void **, size_t *, size_t);",
          "",
          "[Added Lines]",
          "99: int magic_load_buffers(magic_t, void **, size_t *, size_t);",
          "106: #define MAGIC_PARAM_MAX_RECURSION 0",
          "107: int magic_setparam(magic_t, int, const void *);",
          "108: int magic_getparam(magic_t, int, void *);",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.197 2014/11/11 17:48:23 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.198 2014/11/23 13:54:27 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: #include <time.h>",
          "45: private int match(struct magic_set *, struct magic *, uint32_t,",
          "47:     int *);",
          "48: private int mget(struct magic_set *, const unsigned char *,",
          "50:     int *, int *);",
          "51: private int magiccheck(struct magic_set *, struct magic *);",
          "52: private int32_t mprint(struct magic_set *, struct magic *);",
          "",
          "[Removed Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, int, int *, int *,",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, int, int *,",
          "",
          "[Added Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, size_t, int *, int *,",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, size_t, int *,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) > ((n) - (o)))",
          "",
          "[Removed Lines]",
          "67: #define MAX_RECURSION_LEVEL 10",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "136: private int",
          "137: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "138:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "141: {",
          "142:  uint32_t magindex = 0;",
          "143:  unsigned int cont_level = 0;",
          "",
          "[Removed Lines]",
          "139:     int flip, int recursion_level, int *printed_something, int *need_separator,",
          "140:     int *returnval)",
          "",
          "[Added Lines]",
          "137:     int flip, size_t recursion_level, int *printed_something,",
          "138:     int *need_separator, int *returnval)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1217: private int",
          "1218: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1219:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "1221:     int *need_separator, int *returnval)",
          "1222: {",
          "1223:  uint32_t offset = ms->offset;",
          "",
          "[Removed Lines]",
          "1220:     int flip, int recursion_level, int *printed_something,",
          "",
          "[Added Lines]",
          "1218:     int flip, size_t recursion_level, int *printed_something,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1228:  union VALUETYPE *p = &ms->ms_value;",
          "1229:  struct mlist ml;",
          "1233:   return -1;",
          "1234:  }",
          "",
          "[Removed Lines]",
          "1231:  if (recursion_level >= MAX_RECURSION_LEVEL) {",
          "1232:   file_error(ms, 0, \"recursion nesting exceeded\");",
          "",
          "[Added Lines]",
          "1229:  if (recursion_level >= ms->max_recursion) {",
          "1230:   file_error(ms, 0, \"recursion nesting (%zu) exceeded\",",
          "1231:       recursion_level);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "401b28595b350d91c265c5d0f5bb9e2b6bdd101d",
      "candidate_info": {
        "commit_hash": "401b28595b350d91c265c5d0f5bb9e2b6bdd101d",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/401b28595b350d91c265c5d0f5bb9e2b6bdd101d",
        "files": [
          "src/softmagic.c"
        ],
        "message": "Use C locale for LC_CTYPE around one more regcomp().",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.174 2014/02/12 23:20:53 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.175 2014/02/18 11:09:31 kim Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1891:  double dl, dv;",
          "1892:  int matched;",
          "1893:  union VALUETYPE *p = &ms->ms_value;",
          "1895:  switch (m->type) {",
          "1896:  case FILE_BYTE:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1894:  char *old_lc_ctype;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2049:   if (ms->search.s == NULL)",
          "2050:    return 0;",
          "2052:   l = 0;",
          "2053:   rc = regcomp(&rx, m->value.s,",
          "2054:       REG_EXTENDED|REG_NEWLINE|",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2053:   old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "2054:   assert(old_lc_ctype != NULL);",
          "2055:   old_lc_ctype = strdup(old_lc_ctype);",
          "2056:   assert(old_lc_ctype != NULL);",
          "2057:   (void)setlocale(LC_CTYPE, \"C\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2097:    }",
          "2098:    regfree(&rx);",
          "2099:   }",
          "2100:   if (v == (uint64_t)-1)",
          "2101:    return -1;",
          "2102:   break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2106:   (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "2107:   free(old_lc_ctype);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a4a350ab786b0272ac62f8de2da3ed4d93655d01",
      "candidate_info": {
        "commit_hash": "a4a350ab786b0272ac62f8de2da3ed4d93655d01",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/a4a350ab786b0272ac62f8de2da3ed4d93655d01",
        "files": [
          "src/softmagic.c"
        ],
        "message": "PR/342: Jan Kaluza: Reverse order of evaluation to fix out of bounds read.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.181 2014/03/27 18:12:12 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.182 2014/03/28 19:07:08 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "235:   if (file_check_mem(ms, ++cont_level) == -1)",
          "236:    return -1;",
          "240:    m = &magic[magindex];",
          "",
          "[Removed Lines]",
          "238:   while (magic[magindex+1].cont_level != 0 &&",
          "239:       ++magindex < nmagic) {",
          "",
          "[Added Lines]",
          "238:   while (++magindex < nmagic &&",
          "239:       magic[magindex].cont_level != 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0536047653f7cd6efff23f7e35e8ad1ad6ff086e",
      "candidate_info": {
        "commit_hash": "0536047653f7cd6efff23f7e35e8ad1ad6ff086e",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/0536047653f7cd6efff23f7e35e8ad1ad6ff086e",
        "files": [
          "configure.ac",
          "src/softmagic.c"
        ],
        "message": "use fmtcheck if available.",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "136: fi])",
          "138: dnl Checks for functions",
          "141: dnl Provide implementation of some required functions if necessary",
          "142: AC_REPLACE_FUNCS(getopt_long asprintf vasprintf strlcpy strlcat getline ctime_r asctime_r pread strcasestr)",
          "",
          "[Removed Lines]",
          "139: AC_CHECK_FUNCS(strerror strndup strtoul mkstemp mkostemp utimes utime wcwidth strtof)",
          "",
          "[Added Lines]",
          "139: AC_CHECK_FUNCS(strerror strndup strtoul mkstemp mkostemp utimes utime wcwidth strtof fmtcheck)",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "39: #include <string.h>",
          "40: #include <ctype.h>",
          "41: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.168 2013/05/30 15:53:33 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.169 2013/12/05 17:02:34 christos Exp $\")",
          "39: #ifdef HAVE_FMTCHECK",
          "40: #include <stdio.h>",
          "41: #define F(a, b) fmtcheck((a), (b))",
          "42: #else",
          "43: #define F(a, b) (a)",
          "44: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "398:   case 1:",
          "399:    (void)snprintf(buf, sizeof(buf), \"%c\",",
          "400:        (unsigned char)v);",
          "402:     return -1;",
          "403:    break;",
          "404:   default:",
          "406:     return -1;",
          "407:    break;",
          "408:   }",
          "",
          "[Removed Lines]",
          "401:    if (file_printf(ms, m->desc, buf) == -1)",
          "405:    if (file_printf(ms, m->desc, (unsigned char) v) == -1)",
          "",
          "[Added Lines]",
          "407:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "411:    if (file_printf(ms, F(m->desc, \"%c\"),",
          "412:        (unsigned char) v) == -1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "419:   case 1:",
          "420:    (void)snprintf(buf, sizeof(buf), \"%hu\",",
          "421:        (unsigned short)v);",
          "423:     return -1;",
          "424:    break;",
          "425:   default:",
          "428:     return -1;",
          "429:    break;",
          "430:   }",
          "",
          "[Removed Lines]",
          "422:    if (file_printf(ms, m->desc, buf) == -1)",
          "426:    if (",
          "427:        file_printf(ms, m->desc, (unsigned short) v) == -1)",
          "",
          "[Added Lines]",
          "429:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "433:    if (file_printf(ms, F(m->desc, \"%hu\"),",
          "434:        (unsigned short) v) == -1)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "441:    return -1;",
          "442:   case 1:",
          "443:    (void)snprintf(buf, sizeof(buf), \"%u\", (uint32_t)v);",
          "445:     return -1;",
          "446:    break;",
          "447:   default:",
          "449:     return -1;",
          "450:    break;",
          "451:   }",
          "",
          "[Removed Lines]",
          "444:    if (file_printf(ms, m->desc, buf) == -1)",
          "448:    if (file_printf(ms, m->desc, (uint32_t) v) == -1)",
          "",
          "[Added Lines]",
          "451:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "455:    if (file_printf(ms, F(m->desc, \"%u\"),",
          "456:        (uint32_t) v) == -1)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "456:    case FILE_BEQUAD:",
          "457:    case FILE_LEQUAD:",
          "458:   v = file_signextend(ms, m, p->q);",
          "460:    return -1;",
          "461:   t = ms->offset + sizeof(int64_t);",
          "462:     break;",
          "",
          "[Removed Lines]",
          "459:   if (file_printf(ms, m->desc, (uint64_t) v) == -1)",
          "",
          "[Added Lines]",
          "467:   switch (check_fmt(ms, m)) {",
          "468:   case -1:",
          "470:   case 1:",
          "471:    (void)snprintf(buf, sizeof(buf), \"%llu\",",
          "472:        (unsigned long long)v);",
          "473:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "474:     return -1;",
          "475:    break;",
          "476:   default:",
          "477:    if (file_printf(ms, F(m->desc, \"%llu\"),",
          "478:        (unsigned long long) v) == -1)",
          "479:     return -1;",
          "480:    break;",
          "481:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "466:    case FILE_BESTRING16:",
          "467:    case FILE_LESTRING16:",
          "468:   if (m->reln == '=' || m->reln == '!') {",
          "470:     return -1;",
          "471:    t = ms->offset + m->vallen;",
          "472:   }",
          "",
          "[Removed Lines]",
          "469:    if (file_printf(ms, m->desc, m->value.s) == -1)",
          "",
          "[Added Lines]",
          "490:    if (file_printf(ms, F(m->desc, \"%s\"), m->value.s) == -1)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "493:    }",
          "496:     return -1;",
          "498:    if (m->type == FILE_PSTRING)",
          "",
          "[Removed Lines]",
          "495:    if (file_printf(ms, m->desc, str) == -1)",
          "",
          "[Added Lines]",
          "516:    if (file_printf(ms, F(m->desc, \"%s\"), str) == -1)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "504:  case FILE_BEDATE:",
          "505:  case FILE_LEDATE:",
          "506:  case FILE_MEDATE:",
          "508:       tbuf)) == -1)",
          "509:    return -1;",
          "510:   t = ms->offset + sizeof(uint32_t);",
          "",
          "[Removed Lines]",
          "507:   if (file_printf(ms, m->desc, file_fmttime(p->l, FILE_T_LOCAL,",
          "",
          "[Added Lines]",
          "528:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "529:       file_fmttime(p->l, FILE_T_LOCAL,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "514:  case FILE_BELDATE:",
          "515:  case FILE_LELDATE:",
          "516:  case FILE_MELDATE:",
          "518:    return -1;",
          "519:   t = ms->offset + sizeof(uint32_t);",
          "520:   break;",
          "",
          "[Removed Lines]",
          "517:   if (file_printf(ms, m->desc, file_fmttime(p->l, 0, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "539:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "540:       file_fmttime(p->l, 0, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "522:  case FILE_QDATE:",
          "523:  case FILE_BEQDATE:",
          "524:  case FILE_LEQDATE:",
          "527:    return -1;",
          "528:   t = ms->offset + sizeof(uint64_t);",
          "529:   break;",
          "",
          "[Removed Lines]",
          "525:   if (file_printf(ms, m->desc, file_fmttime(p->q, FILE_T_LOCAL,",
          "526:       tbuf)) == -1)",
          "",
          "[Added Lines]",
          "548:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "549:       file_fmttime(p->q, FILE_T_LOCAL, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "531:  case FILE_QLDATE:",
          "532:  case FILE_BEQLDATE:",
          "533:  case FILE_LEQLDATE:",
          "535:    return -1;",
          "536:   t = ms->offset + sizeof(uint64_t);",
          "537:   break;",
          "",
          "[Removed Lines]",
          "534:   if (file_printf(ms, m->desc, file_fmttime(p->q, 0, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "557:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "558:       file_fmttime(p->q, 0, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "539:  case FILE_QWDATE:",
          "540:  case FILE_BEQWDATE:",
          "541:  case FILE_LEQWDATE:",
          "544:    return -1;",
          "545:   t = ms->offset + sizeof(uint64_t);",
          "546:   break;",
          "",
          "[Removed Lines]",
          "542:   if (file_printf(ms, m->desc, file_fmttime(p->q, FILE_T_WINDOWS,",
          "543:       tbuf)) == -1)",
          "",
          "[Added Lines]",
          "566:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "567:       file_fmttime(p->q, FILE_T_WINDOWS, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "554:    return -1;",
          "555:   case 1:",
          "556:    (void)snprintf(buf, sizeof(buf), \"%g\", vf);",
          "558:     return -1;",
          "559:    break;",
          "560:   default:",
          "562:     return -1;",
          "563:    break;",
          "564:   }",
          "",
          "[Removed Lines]",
          "557:    if (file_printf(ms, m->desc, buf) == -1)",
          "561:    if (file_printf(ms, m->desc, vf) == -1)",
          "",
          "[Added Lines]",
          "581:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "585:    if (file_printf(ms, F(m->desc, \"%g\"), vf) == -1)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "574:    return -1;",
          "575:   case 1:",
          "576:    (void)snprintf(buf, sizeof(buf), \"%g\", vd);",
          "578:     return -1;",
          "579:    break;",
          "580:   default:",
          "582:     return -1;",
          "583:    break;",
          "584:   }",
          "",
          "[Removed Lines]",
          "577:    if (file_printf(ms, m->desc, buf) == -1)",
          "581:    if (file_printf(ms, m->desc, vd) == -1)",
          "",
          "[Added Lines]",
          "601:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "605:    if (file_printf(ms, F(m->desc, \"%g\"), vd) == -1)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "594:    file_oomem(ms, ms->search.rm_len);",
          "595:    return -1;",
          "596:   }",
          "598:   free(cp);",
          "600:   if (rval == -1)",
          "",
          "[Removed Lines]",
          "597:   rval = file_printf(ms, m->desc, cp);",
          "",
          "[Added Lines]",
          "621:   rval = file_printf(ms, F(m->desc, \"%s\"), cp);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "608:  }",
          "610:  case FILE_SEARCH:",
          "612:    return -1;",
          "613:   if ((m->str_flags & REGEX_OFFSET_START))",
          "614:    t = ms->search.offset;",
          "",
          "[Removed Lines]",
          "611:     if (file_printf(ms, m->desc, m->value.s) == -1)",
          "",
          "[Added Lines]",
          "635:     if (file_printf(ms, F(m->desc, \"%s\"), m->value.s) == -1)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1724:   ms->offset = soffset;",
          "1725:   if (rv == 1) {",
          "1726:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&",
          "1728:     return -1;",
          "1729:    if (file_printf(ms, \"%s\", rbuf) == -1)",
          "1730:     return -1;",
          "",
          "[Removed Lines]",
          "1727:        file_printf(ms, m->desc, offset) == -1)",
          "",
          "[Added Lines]",
          "1751:        file_printf(ms, F(m->desc, \"%u\"), offset) == -1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b71174f3ec9a134361e39948c0fec59b37a2f587",
      "candidate_info": {
        "commit_hash": "b71174f3ec9a134361e39948c0fec59b37a2f587",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/b71174f3ec9a134361e39948c0fec59b37a2f587",
        "files": [
          "src/apprentice.c",
          "src/cdf.c",
          "src/getline.c",
          "src/softmagic.c"
        ],
        "message": "PR/384: remove %z formats that break windows.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/cdf.c||src/cdf.c",
          "src/getline.c||src/getline.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.214 2014/08/04 06:48:22 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.215 2014/08/30 10:19:54 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "465:  if (action == FILE_LIST) {",
          "466:   for (i = 0; i < MAGIC_SETS; i++) {",
          "468:    apprentice_list(ms->mlist[i], BINTEST);",
          "469:    printf(\"Text patterns:\\n\");",
          "470:    apprentice_list(ms->mlist[i], TEXTTEST);",
          "",
          "[Removed Lines]",
          "467:    printf(\"Set %zu:\\nBinary patterns:\\n\", i);",
          "",
          "[Added Lines]",
          "467:    printf(\"Set %\" SIZE_T_FORMAT \"u:\\nBinary patterns:\\n\",",
          "468:        i);",
          "",
          "---------------"
        ],
        "src/cdf.c||src/cdf.c": [
          "File: src/cdf.c -> src/cdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include <assert.h>",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.65 2014/08/07 09:38:35 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.66 2014/08/27 06:59:35 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1156:  for (i = 0; i < __arraycount(h->h_master_sat); i++) {",
          "1157:   if (h->h_master_sat[i] == CDF_SECID_FREE)",
          "1158:    break;",
          "1160:       \"master_sat\", i, h->h_master_sat[i]);",
          "1161:  }",
          "1162: }",
          "",
          "[Removed Lines]",
          "1159:   (void)fprintf(stderr, \"%35.35s[%.3zu] = %d\\n\",",
          "",
          "[Added Lines]",
          "1159:   (void)fprintf(stderr, \"%35.35s[%.3\" SIZE_T_FORMAT \"u] = %d\\n\",",
          "",
          "---------------"
        ],
        "src/getline.c||src/getline.c": [
          "File: src/getline.c -> src/getline.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:  size_t n = 0;",
          "99:  while ((len = getline(&p, &n, stdin)) != -1)",
          "101:  free(p);",
          "102:  return 0;",
          "103: }",
          "",
          "[Removed Lines]",
          "100:   (void)printf(\"%zd %s\", len, p);",
          "",
          "[Added Lines]",
          "100:   (void)printf(\"%\" SIZE_T_FORMAT \"d %s\", len, p);",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.193 2014/09/10 18:41:51 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.194 2014/09/22 18:26:19 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:  const char *ptr = fmtcheck(m->desc, def);",
          "96:  if (ptr == def)",
          "97:   file_magerror(ms,",
          "100:  return ptr;",
          "101: }",
          "102: #else",
          "",
          "[Removed Lines]",
          "98:       \"%s, %zu: format `%s' does not match with `%s'\",",
          "99:       file, line, m->desc, def);",
          "",
          "[Added Lines]",
          "98:       \"%s, %\" SIZE_T_FORMAT \"u: format `%s' does not match\"",
          "99:       \" with `%s'\", file, line, m->desc, def);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1057: private void",
          "1058: mdebug(uint32_t offset, const char *str, size_t len)",
          "1059: {",
          "1061:  file_showstr(stderr, str, len);",
          "1062:  (void) fputc('\\n', stderr);",
          "1063:  (void) fputc('\\n', stderr);",
          "",
          "[Removed Lines]",
          "1060:  (void) fprintf(stderr, \"mget/%zu @%d: \", len, offset);",
          "",
          "[Added Lines]",
          "1060:  (void) fprintf(stderr, \"mget/%\" SIZE_T_FORMAT \"u @%d: \", len, offset);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1207:   return -1;",
          "1209:  if ((ms->flags & MAGIC_DEBUG) != 0) {",
          "1212:   mdebug(offset, (char *)(void *)p, sizeof(union VALUETYPE));",
          "1213: #ifndef COMPILE_ONLY",
          "1214:   file_mdump(m);",
          "",
          "[Removed Lines]",
          "1210:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%zu, \"",
          "1211:       \"nbytes=%zu)\\n\", m->type, m->flag, offset, o, nbytes);",
          "",
          "[Added Lines]",
          "1210:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%\"",
          "1211:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT \"u)\\n\",",
          "1212:       m->type, m->flag, offset, o, nbytes);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1963:        copy = malloc(slen);",
          "1964:        if (copy == NULL)  {",
          "1965:     file_error(ms, errno,",
          "1967:     return -1;",
          "1968:        }",
          "1969:        memcpy(copy, ms->search.s, slen);",
          "",
          "[Removed Lines]",
          "1966:         \"can't allocate %zu bytes\", slen);",
          "",
          "[Added Lines]",
          "1967:         \"can't allocate %\" SIZE_T_FORMAT \"u bytes\",",
          "1968:         slen);",
          "",
          "---------------"
        ]
      }
    }
  ]
}