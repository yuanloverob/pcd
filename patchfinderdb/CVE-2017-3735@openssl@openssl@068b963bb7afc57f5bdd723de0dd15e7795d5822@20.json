{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d9d4122dd15c388a245c4edb28144ea919f9ddf1",
      "candidate_info": {
        "commit_hash": "d9d4122dd15c388a245c4edb28144ea919f9ddf1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d9d4122dd15c388a245c4edb28144ea919f9ddf1",
        "files": [
          "apps/req.c",
          "doc/apps/req.pod"
        ],
        "message": "Fix regression in openssl req -x509 behaviour.\n\nAllow conversion of existing requests to certificates again.\nFixes the issue #3396\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3437)\n(cherry picked from commit 888adbe064556ff5ab2f1d16a223b0548696614c)",
        "before_after_code_files": [
          "apps/req.c||apps/req.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/req.c||apps/req.c": [
          "File: apps/req.c -> apps/req.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:             break;",
          "290:         case OPT_X509:",
          "291:             x509 = 1;",
          "293:             break;",
          "294:         case OPT_DAYS:",
          "295:             days = atoi(opt_arg());",
          "",
          "[Removed Lines]",
          "292:             newreq = 1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "329:     if (argc != 0)",
          "330:         goto opthelp;",
          "332:     if (!nmflag_set)",
          "333:         nmflag = XN_FLAG_ONELINE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "331:     if (x509 && infile == NULL)",
          "332:         newreq = 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "583:         }",
          "584:     }",
          "587:         if (pkey == NULL) {",
          "588:             BIO_printf(bio_err, \"you need to specify a private key\\n\");",
          "589:             goto end;",
          "",
          "[Removed Lines]",
          "586:     if (newreq) {",
          "",
          "[Added Lines]",
          "588:     if (newreq || x509) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4577a1474cd67afbfa5a48729c979180144b9d6",
      "candidate_info": {
        "commit_hash": "d4577a1474cd67afbfa5a48729c979180144b9d6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d4577a1474cd67afbfa5a48729c979180144b9d6",
        "files": [
          "crypto/bio/bf_null.c",
          "crypto/bio/bss_null.c"
        ],
        "message": "Remove \"dummy\" BIO create and destroy functions\n\nThey aren't needed if all they do is set bio->init = 1 and zero other\nfields that are already zeroed\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5223)\n\n(cherry picked from commit 94f1c9379c3ed4b088718b35d0dd807d619d50c5)",
        "before_after_code_files": [
          "crypto/bio/bf_null.c||crypto/bio/bf_null.c",
          "crypto/bio/bss_null.c||crypto/bio/bss_null.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/bf_null.c||crypto/bio/bf_null.c": [
          "File: crypto/bio/bf_null.c -> crypto/bio/bf_null.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: static int nullf_puts(BIO *h, const char *str);",
          "22: static int nullf_gets(BIO *h, char *str, int size);",
          "23: static long nullf_ctrl(BIO *h, int cmd, long arg1, void *arg2);",
          "26: static long nullf_callback_ctrl(BIO *h, int cmd, BIO_info_cb *fp);",
          "27: static const BIO_METHOD methods_nullf = {",
          "28:     BIO_TYPE_NULL_FILTER,",
          "",
          "[Removed Lines]",
          "24: static int nullf_new(BIO *h);",
          "25: static int nullf_free(BIO *data);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:     nullf_puts,",
          "33:     nullf_gets,",
          "34:     nullf_ctrl,",
          "37:     nullf_callback_ctrl,",
          "38: };",
          "",
          "[Removed Lines]",
          "35:     nullf_new,",
          "36:     nullf_free,",
          "",
          "[Added Lines]",
          "33:     NULL,",
          "34:     NULL,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "42:     return (&methods_nullf);",
          "43: }",
          "65: static int nullf_read(BIO *b, char *out, int outl)",
          "66: {",
          "67:     int ret = 0;",
          "",
          "[Removed Lines]",
          "45: static int nullf_new(BIO *bi)",
          "46: {",
          "47:     bi->init = 1;",
          "48:     bi->ptr = NULL;",
          "49:     bi->flags = 0;",
          "50:     return (1);",
          "51: }",
          "53: static int nullf_free(BIO *a)",
          "54: {",
          "55:     if (a == NULL)",
          "56:         return (0);",
          "58:     a->ptr=NULL;",
          "59:     a->init=0;",
          "60:     a->flags=0;",
          "62:     return (1);",
          "63: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/bio/bss_null.c||crypto/bio/bss_null.c": [
          "File: crypto/bio/bss_null.c -> crypto/bio/bss_null.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: static int null_puts(BIO *h, const char *str);",
          "18: static int null_gets(BIO *h, char *str, int size);",
          "19: static long null_ctrl(BIO *h, int cmd, long arg1, void *arg2);",
          "22: static const BIO_METHOD null_method = {",
          "23:     BIO_TYPE_NULL,",
          "24:     \"NULL\",",
          "",
          "[Removed Lines]",
          "20: static int null_new(BIO *h);",
          "21: static int null_free(BIO *data);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:     null_puts,",
          "28:     null_gets,",
          "29:     null_ctrl,",
          "33: };",
          "",
          "[Removed Lines]",
          "30:     null_new,",
          "31:     null_free,",
          "",
          "[Added Lines]",
          "28:     NULL,",
          "29:     NULL,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37:     return (&null_method);",
          "38: }",
          "55: static int null_read(BIO *b, char *out, int outl)",
          "56: {",
          "57:     return (0);",
          "",
          "[Removed Lines]",
          "40: static int null_new(BIO *bi)",
          "41: {",
          "42:     bi->init = 1;",
          "43:     bi->num = 0;",
          "44:     bi->ptr = (NULL);",
          "45:     return (1);",
          "46: }",
          "48: static int null_free(BIO *a)",
          "49: {",
          "50:     if (a == NULL)",
          "51:         return (0);",
          "52:     return (1);",
          "53: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c9a6a390326038dfe4a3bd3453cb1aa23d33747",
      "candidate_info": {
        "commit_hash": "4c9a6a390326038dfe4a3bd3453cb1aa23d33747",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4c9a6a390326038dfe4a3bd3453cb1aa23d33747",
        "files": [
          "apps/s_server.c"
        ],
        "message": "Fix 'key' option in s_server can be in ENGINE keyform\n\nReviewed-by: Paul Dale <paul.dale@oracle.com>\nReviewed-by: Stephen Henson <steve@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4405)\n\n(cherry picked from commit 75c445e49bb3d22afe72b28ae67945a9f67091f6)",
        "before_after_code_files": [
          "apps/s_server.c||apps/s_server.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_server.c||apps/s_server.c": [
          "File: apps/s_server.c -> apps/s_server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "704:      \"PEM serverinfo file for certificate\"},",
          "705:     {\"certform\", OPT_CERTFORM, 'F',",
          "706:      \"Certificate format (PEM or DER) PEM default\"},",
          "708:      \"Private Key if not in -cert; default is \" TEST_CERT},",
          "709:     {\"keyform\", OPT_KEYFORM, 'f',",
          "710:      \"Key format (PEM, DER or ENGINE) PEM default\"},",
          "",
          "[Removed Lines]",
          "707:     {\"key\", OPT_KEY, '<',",
          "",
          "[Added Lines]",
          "707:     {\"key\", OPT_KEY, 's',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c74503ebfc599d2d5afbfccaab0cb4bf585fba8c",
      "candidate_info": {
        "commit_hash": "c74503ebfc599d2d5afbfccaab0cb4bf585fba8c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c74503ebfc599d2d5afbfccaab0cb4bf585fba8c",
        "files": [
          "test/build.info",
          "test/ocspapitest.c",
          "test/recipes/80-test_ocsp.t",
          "test/recipes/80-test_ocsp_data/cert.pem",
          "test/recipes/80-test_ocsp_data/key.pem"
        ],
        "message": "Add OCSP API test executable\n\nSome of the OCSP APIs (such as the recently added OCSP_resp_get0_signer)\ndo not really merit inclusion in the ocsp(1) utility, but we should still\nhave unit tests for them.\n\nFor now, only test OCSP_resp_get0_signer(), but it should be easy to\nadd more tests in the future.\n\nProvide an X509 cert and private key in the test's data directory\nto use for signing responses, since constructing those on the fly\nis more effort than is needed.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>\n\n(cherry picked from commit 27da13430bfb3c178716cec10e8d5d6134e54f90)\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4723)",
        "before_after_code_files": [
          "test/build.info||test/build.info",
          "test/ocspapitest.c||test/ocspapitest.c",
          "test/recipes/80-test_ocsp.t||test/recipes/80-test_ocsp.t",
          "test/recipes/80-test_ocsp_datcert.pem||test/recipes/80-test_ocsp_data/cert.pem",
          "test/recipes/80-test_ocsp_datkey.pem||test/recipes/80-test_ocsp_data/key.pem"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:           dtlsv1listentest ct_test threadstest afalgtest d2i_test \\",
          "18:           ssl_test_ctx_test ssl_test x509aux cipherlist_test asynciotest \\",
          "19:           bioprinttest sslapitest dtlstest sslcorrupttest bio_enc_test \\",
          "22:   SOURCE[aborttest]=aborttest.c",
          "23:   INCLUDE[aborttest]=../include",
          "",
          "[Removed Lines]",
          "20:           fatalerrtest",
          "",
          "[Added Lines]",
          "20:           ocspapitest fatalerrtest",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "276:   INCLUDE[sslapitest]=../include ..",
          "277:   DEPEND[sslapitest]=../libcrypto ../libssl",
          "279:   SOURCE[dtlstest]=dtlstest.c ssltestlib.c testutil.c",
          "280:   INCLUDE[dtlstest]=../include .",
          "281:   DEPEND[dtlstest]=../libcrypto ../libssl",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279:   SOURCE[ocspapitest]=ocspapitest.c testutil.c",
          "280:   INCLUDE[ocspapitest]=../include ..",
          "281:   DEPEND[ocspapitest]=../libcrypto",
          "",
          "---------------"
        ],
        "test/ocspapitest.c||test/ocspapitest.c": [
          "File: test/ocspapitest.c -> test/ocspapitest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: #include <string.h>",
          "12: #include <openssl/opensslconf.h>",
          "13: #include <openssl/crypto.h>",
          "14: #include <openssl/ocsp.h>",
          "15: #include <openssl/x509.h>",
          "16: #include <openssl/asn1.h>",
          "17: #include <openssl/pem.h>",
          "19: #include \"testutil.h\"",
          "21: static const char *certstr;",
          "22: static const char *privkeystr;",
          "24: static int get_cert_and_key(X509 **cert_out, EVP_PKEY **key_out)",
          "25: {",
          "26:     BIO *certbio, *keybio;",
          "27:     X509 *cert = NULL;",
          "28:     EVP_PKEY *key = NULL;",
          "30:     if ((certbio = BIO_new_file(certstr, \"r\")) == NULL)",
          "31:         return 0;",
          "32:     cert = PEM_read_bio_X509(certbio, NULL, NULL, NULL);",
          "33:     BIO_free(certbio);",
          "34:     if ((keybio = BIO_new_file(privkeystr, \"r\")) == NULL)",
          "35:         goto end;",
          "36:     key = PEM_read_bio_PrivateKey(keybio, NULL, NULL, NULL);",
          "37:     BIO_free(keybio);",
          "38:     if (cert == NULL || key == NULL)",
          "39:         goto end;",
          "42:     return 1;",
          "43:  end:",
          "44:     X509_free(cert);",
          "45:     EVP_PKEY_free(key);",
          "46:     return 0;",
          "47: }",
          "49: static OCSP_BASICRESP *make_dummy_resp(void)",
          "50: {",
          "51:     const unsigned char namestr[] = \"openssl.example.com\";",
          "52:     unsigned char keybytes[128] = {7};",
          "53:     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();",
          "54:     OCSP_CERTID *cid;",
          "55:     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));",
          "56:     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);",
          "57:     X509_NAME *name = X509_NAME_new();",
          "58:     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();",
          "59:     ASN1_INTEGER *serial = ASN1_INTEGER_new();",
          "61:     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,",
          "62:                                    namestr, -1, -1, 1)",
          "63:         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)",
          "64:         || !ASN1_INTEGER_set_uint64(serial, (uint64_t)1)))",
          "65:         return NULL;",
          "66:     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);",
          "67:     if (bs == NULL",
          "68:         || thisupd == NULL",
          "69:         || nextupd == NULL",
          "70:         || cid == NULL",
          "71:         || !OCSP_basic_add1_status(bs, cid,",
          "72:                                    V_OCSP_CERTSTATUS_UNKNOWN,",
          "73:                                    0, NULL, thisupd, nextupd))",
          "74:         return NULL;",
          "75:     ASN1_TIME_free(thisupd);",
          "76:     ASN1_TIME_free(nextupd);",
          "77:     ASN1_BIT_STRING_free(key);",
          "78:     ASN1_INTEGER_free(serial);",
          "79:     OCSP_CERTID_free(cid);",
          "80:     X509_NAME_free(name);",
          "81:     return bs;",
          "82: }",
          "84: #ifndef OPENSSL_NO_OCSP",
          "85: static int test_resp_signer(void)",
          "86: {",
          "87:     OCSP_BASICRESP *bs;",
          "88:     X509 *signer = NULL, *tmp;",
          "89:     EVP_PKEY *key = NULL;",
          "90:     STACK_OF(X509) *extra_certs;",
          "96:     bs = make_dummy_resp();",
          "97:     extra_certs = sk_X509_new_null();",
          "98:     if (bs == NULL",
          "99:         || extra_certs == NULL",
          "100:         || !get_cert_and_key(&signer, &key)",
          "101:         || !sk_X509_push(extra_certs, signer)",
          "102:         || !OCSP_basic_sign(bs, signer, key, EVP_sha1(),",
          "103:                                       NULL, OCSP_NOCERTS))",
          "104:         return 0;",
          "105:     if (!OCSP_resp_get0_signer(bs, &tmp, extra_certs)",
          "106:         || X509_cmp(tmp, signer) != 0)",
          "107:         return 0;",
          "108:     OCSP_BASICRESP_free(bs);",
          "111:     bs = make_dummy_resp();",
          "112:     tmp = NULL;",
          "113:     if (bs == NULL",
          "114:         || !OCSP_basic_sign(bs, signer, key, EVP_sha1(),",
          "115:                             NULL, 0))",
          "116:         return 0;",
          "117:     if (!OCSP_resp_get0_signer(bs, &tmp, NULL)",
          "118:         || X509_cmp(tmp, signer) != 0)",
          "119:         return 0;",
          "120:     OCSP_BASICRESP_free(bs);",
          "121:     sk_X509_free(extra_certs);",
          "122:     X509_free(signer);",
          "123:     EVP_PKEY_free(key);",
          "124:     return 1;",
          "125: }",
          "126: #endif",
          "128: int main(int argc, char *argv[])",
          "129: {",
          "130:     int testresult = 1;",
          "131:     BIO *err = NULL;",
          "133:     if (argc != 3) {",
          "134:         printf(\"Invalid argument count\\n\");",
          "135:         return 1;",
          "136:     }",
          "137:     if ((certstr = argv[1]) == NULL",
          "138:         || (privkeystr = argv[2]) == NULL)",
          "139:         return 1;",
          "140:     err = BIO_new_fp(stderr, BIO_NOCLOSE | BIO_FP_TEXT);",
          "142:     CRYPTO_set_mem_debug(1);",
          "143:     CRYPTO_mem_ctrl(CRYPTO_MEM_CHECK_ON);",
          "145: #ifndef OPENSSL_NO_OCSP",
          "146:     ADD_TEST(test_resp_signer);",
          "147: #endif",
          "148:     testresult = run_tests(argv[0]);",
          "150: #ifndef OPENSSL_NO_CRYPTO_MDEBUG",
          "151:     if (CRYPTO_mem_leaks(err) <= 0)",
          "152:         testresult = 1;",
          "153: #endif",
          "154:     BIO_free(err);",
          "156:     if (!testresult)",
          "157:         printf(\"PASS\\n\");",
          "159:     return testresult;",
          "160: }",
          "",
          "---------------"
        ],
        "test/recipes/80-test_ocsp.t||test/recipes/80-test_ocsp.t": [
          "File: test/recipes/80-test_ocsp.t -> test/recipes/80-test_ocsp.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: use POSIX;",
          "14: use File::Spec::Functions qw/devnull catfile/;",
          "15: use File::Copy;",
          "17: use OpenSSL::Test::Utils;",
          "19: setup(\"test_ocsp\");",
          "",
          "[Removed Lines]",
          "16: use OpenSSL::Test qw/:DEFAULT with pipe srctop_dir/;",
          "",
          "[Added Lines]",
          "16: use OpenSSL::Test qw/:DEFAULT with pipe srctop_dir data_file/;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:     unlink \"ocsp-resp-fff.dat\";",
          "49: }",
          "53: subtest \"=== VALID OCSP RESPONSES ===\" => sub {",
          "54:     plan tests => 7;",
          "",
          "[Removed Lines]",
          "51: plan tests => 10;",
          "",
          "[Added Lines]",
          "51: plan tests => 11;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "210:     test_ocsp(\"DELEGATED; Root CA -> EE\",",
          "211:        \"D3.ors\", \"ISIC_D3_Issuer_Root.pem\", \"\", 0);",
          "212: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214: subtest \"=== OCSP API TESTS===\" => sub {",
          "215:     plan tests => 1;",
          "217:     ok(run(test([\"ocspapitest\", data_file(\"cert.pem\"), data_file(\"key.pem\")])),",
          "218:                  \"running ocspapitest\");",
          "219: }",
          "",
          "---------------"
        ],
        "test/recipes/80-test_ocsp_datcert.pem||test/recipes/80-test_ocsp_data/cert.pem": [
          "File: test/recipes/80-test_ocsp_datcert.pem -> test/recipes/80-test_ocsp_data/cert.pem",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -----BEGIN CERTIFICATE-----",
          "2: MIIDLDCCAhSgAwIBAgICFs8wDQYJKoZIhvcNAQELBQAwSzEQMA4GA1UECgwHT3Bl",
          "3: blNTTDETMBEGA1UECwwKVGVzdCBTdWl0ZTEiMCAGA1UEAwwZVGVzdCBPQ1NQIHJl",
          "4: c3BvbnNlIHNpZ25lcjAeFw0xNzEwMjMxNDA4MDlaFw0yNjAxMDkxNDA4MDlaMEsx",
          "5: EDAOBgNVBAoMB09wZW5TU0wxEzARBgNVBAsMClRlc3QgU3VpdGUxIjAgBgNVBAMM",
          "6: GVRlc3QgT0NTUCByZXNwb25zZSBzaWduZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IB",
          "7: DwAwggEKAoIBAQC81prq23FY2YDuwiXetb/NCs/cSm/afVnPsdSseRKi/GHi9d7b",
          "8: EEgWnQOJmz4zTuU+Bw2duHZ1X2WUR/Pjy4CvWNRq417aJ3IfyQHf8cxEplk9Ifd0",
          "9: 5VEq6WzWVWAX6ki/CZIJUihzj3AAn/SYfvXw2wd319OQGvwYiQVt3Is5k4E4rAI2",
          "10: zXf5BdE9XkayM3jq6Ewc/VZ05EA/LaBLy5ujQljjfAFEy/qopYx3AJ4G8t2a5rvM",
          "11: dbNOyJCx9NNeryZMv2wRzEaYp6jYao+xxqbm5lgnwfE3jJ4aA9/oC1sUM8FokOGW",
          "12: 9KAK3UEptoxux8JHH9R8X5bTVE7HADHhG5s7AgMBAAGjGjAYMAkGA1UdEwQCMAAw",
          "13: CwYDVR0PBAQDAgXgMA0GCSqGSIb3DQEBCwUAA4IBAQCPkojVPBFNT9DGpLq9Y/Hl",
          "14: XhcA+vSdt83EFzPD/nxIMp/QYSnZ9w2SWL21AH4C+HWd4JuKX5Zlsd6qYobYZLcT",
          "15: TyVfw0OMwwPUI6Mxbz395EAnVLmtddN2RDsEYvThSMMoSfhtUwyANpA0Q6M8RcGt",
          "16: LwnaC69iXhBh1xcTVVg97yEJ22yIrwQ1GhX4F1PRJIAQ/QmQhnoTGlhl2VAQ3LIk",
          "17: lNFxkWbx0rqPIcor27QDNa2DPqioyvHMlkjC1h5EPhL9Ynu011r4Dn9A34+vFxeu",
          "18: Q+emRwl/JjCNZX4l/AripU/Cy/+J2YGKilKzRcB1QMMVSl0VaeLSCwkNDQtdlwWO",
          "19: -----END CERTIFICATE-----",
          "",
          "---------------"
        ],
        "test/recipes/80-test_ocsp_datkey.pem||test/recipes/80-test_ocsp_data/key.pem": [
          "File: test/recipes/80-test_ocsp_datkey.pem -> test/recipes/80-test_ocsp_data/key.pem",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -----BEGIN PRIVATE KEY-----",
          "2: MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC81prq23FY2YDu",
          "3: wiXetb/NCs/cSm/afVnPsdSseRKi/GHi9d7bEEgWnQOJmz4zTuU+Bw2duHZ1X2WU",
          "4: R/Pjy4CvWNRq417aJ3IfyQHf8cxEplk9Ifd05VEq6WzWVWAX6ki/CZIJUihzj3AA",
          "5: n/SYfvXw2wd319OQGvwYiQVt3Is5k4E4rAI2zXf5BdE9XkayM3jq6Ewc/VZ05EA/",
          "6: LaBLy5ujQljjfAFEy/qopYx3AJ4G8t2a5rvMdbNOyJCx9NNeryZMv2wRzEaYp6jY",
          "7: ao+xxqbm5lgnwfE3jJ4aA9/oC1sUM8FokOGW9KAK3UEptoxux8JHH9R8X5bTVE7H",
          "8: ADHhG5s7AgMBAAECggEBAJLp946eeVmhpiCa5XGWPwlbzwlY1BrNCRGADbC9ZRVu",
          "9: ew1jMiWGTj9hmr31DHhIeis+u4YoW+jG9jVdoU5pJc3Fs0URbdsVc0FtVcsPyFbk",
          "10: gGsCQQ4t1m8nOaiqtV8Fw+D0piwgQh5dysqBp374z4i6Lt47CHqFs/m2qIWnXp3E",
          "11: YF3xX2Zz9rIgejERRxrUnp5998NqxSYHPF7Ts4VQ/+UezUqEpA2jBs6cJ2tWVNR9",
          "12: uf+3Fklpo7Uau+xG5xkiRYxx4mSIg6EREz5+XMPkSOcXi6tyinoKsafxTNQDil0q",
          "13: pdurVlHNgZb2QdJjHugVmbalydHIQ5c0CU1RO5CP97kCgYEA7RqrRooniil0iAKR",
          "14: 6scFct0juVBW1Uw05Ejt97RtwQRf/m9SU5mSs0PfFx/l3PeNDSWnpmwunL1igYQb",
          "15: +tVqDQQ9xR4owyl6/qDJSP2bS84jb+3MCR4UE/b2YR2rCDBllXeyQsDT7KMoW8lX",
          "16: gliWmYd6HYddRDOKNM/tzccFG1cCgYEAy+M6yv0ublrpTj4o8DcOi6JJrQbPSAWx",
          "17: R7zKDXSvSq5lLjfXmqX4s/jgZWgQ+kYoYZrIOqIygcZ2U6tBMCP2LAhbf86I6r27",
          "18: loMyQg7lhC5GCztpGes4/JmUvnvjTUIFspB6ReaXlBFAstzzJirgI1wmoO6+GiG/",
          "19: OUDmvCjFdL0CgYALQGa8VDYIImt7QNP31jX1+3SEiMF2IcWox6UzSgajUDfV9SZs",
          "20: /S6u/xuJF2RrFfxFkXHhPeUAXyRbjQ9e2d3MfFUKE6JPkJpblvm2UwKZmFCqMRir",
          "21: nhfJ0sBiX2wMWW+YpjN5Y3krE5sIsAdNEjMjWgB7gj70y5VVaECasUUWxQKBgQDB",
          "22: aauqSIc1VLSh7sGzLudzet5db2pPLmdAYE1kel6Xf9yn/X1gTTYitGNaj2Abq1Y/",
          "23: US/Ev30eMwCo2nqaimLK3pq+IVUtKhO78nVIyQzdWXBE03Uei0+iAKdkE+5Kqejx",
          "24: vbDggqEka0Fu678VY/MAWDikzhY0f/MBAxpfQGYgGQKBgC0tR1ymvCLkk6J5e4/G",
          "25: OD1D9m2JJjcK4eWUS4rAiEH61sI5CKQRU2pQ3f3cIGekDZZt3XzHLYwc9W2UnN2J",
          "26: glMmKXp0qqt2HoE/XKLrIc1dEDXsZxFnMZ6nmWKsl4AHxM/gyXqfDo/AUXyEGcVu",
          "27: 8TbVs3nlISUy7vwjpaW1KOs1",
          "28: -----END PRIVATE KEY-----",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a05bbf8f434ba9df8c647e5475ff02997a83e0c",
      "candidate_info": {
        "commit_hash": "0a05bbf8f434ba9df8c647e5475ff02997a83e0c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0a05bbf8f434ba9df8c647e5475ff02997a83e0c",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "Don't add $(EX_LIBS) to libssl.pc's Libs.private\n\nSince libssl requires libcrypto and libcrypto.pc already has\nLibs.private set exactly the same, there's no reason to repeat it in\nlibssl.pc.\n\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/5135)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "721:      echo 'Version: '$(VERSION); \\",
          "722:      echo 'Requires.private: libcrypto'; \\",
          "723:      echo 'Libs: -L$${libdir} -lssl'; \\",
          "725:      echo 'Cflags: -I$${includedir}' ) > libssl.pc",
          "727: openssl.pc:",
          "",
          "[Removed Lines]",
          "724:      echo 'Libs.private: $(EX_LIBS)'; \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}