{
  "cve_id": "CVE-2014-1439",
  "cve_desc": "The libxml_disable_entity_loader function in runtime/ext/ext_simplexml.cpp in HipHop Virtual Machine for PHP (HHVM) before 2.4.0 and 2.3.x before 2.3.3 does not properly disable a certain libxml handler, which allows remote attackers to conduct XML External Entity (XXE) attacks.",
  "repo": "facebook/hhvm",
  "patch_hash": "95f96e7287effe2fcdfb9a5338d1a7e4f55b083b",
  "patch_info": {
    "commit_hash": "95f96e7287effe2fcdfb9a5338d1a7e4f55b083b",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/95f96e7287effe2fcdfb9a5338d1a7e4f55b083b",
    "files": [
      "hphp/runtime/ext/ext_simplexml.cpp",
      "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php",
      "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf",
      "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif",
      "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader_payload.txt"
    ],
    "message": "Fix libxml_disable_entity_loader()\n\nThis wasn't calling requestInit and setting the libxml handler no null.\nSo the first time an error came along it would reset the handler from\nno-op to reading again.\n\nThis is a much better fix, we set our custom handler in requestInit and\nwhen libxml_disable_entity_loader we store that state as a member bool\nensuring requestInit is always called to set our own handler.\n\nIf the handler isn't inserted then the behavious is as before. The only\ntime this could go pear shaped is say we wanted to make the default be\noff. In that case we'd need a global requestInit that is always called\nsince there are libxml references everywhere.\n\nReviewed By: @jdelong\n\nDifferential Revision: D1116686",
    "before_after_code_files": [
      "hphp/runtime/ext/ext_simplexml.cpp||hphp/runtime/ext/ext_simplexml.cpp",
      "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php",
      "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf",
      "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif"
    ]
  },
  "patch_diff": {
    "hphp/runtime/ext/ext_simplexml.cpp||hphp/runtime/ext/ext_simplexml.cpp": [
      "File: hphp/runtime/ext/ext_simplexml.cpp -> hphp/runtime/ext/ext_simplexml.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1249: class xmlErrorVec : public std::vector<xmlError> {",
      "1250: public:",
      "1251:   ~xmlErrorVec() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1249: static xmlParserInputBufferPtr",
      "1250: hphp_libxml_input_buffer(const char *URI, xmlCharEncoding enc);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1265:   virtual void requestInit() {",
      "1266:     m_use_error = false;",
      "1267:     m_errors.reset();",
      "1269:   }",
      "1270:   virtual void requestShutdown() {",
      "1271:     m_use_error = false;",
      "1272:     m_errors.reset();",
      "1273:   }",
      "1275:   bool m_use_error;",
      "1276:   xmlErrorVec m_errors;",
      "1277: };",
      "",
      "[Removed Lines]",
      "1268:     xmlParserInputBufferCreateFilenameDefault(nullptr);",
      "",
      "[Added Lines]",
      "1271:     m_entity_loader_disabled = false;",
      "1272:     xmlParserInputBufferCreateFilenameDefault(hphp_libxml_input_buffer);",
      "1279:   bool m_entity_loader_disabled;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1374: }",
      "1376: static xmlParserInputBufferPtr",
      "1379: }",
      "1381: bool f_libxml_disable_entity_loader(bool disable /* = true */) {",
      "1390: }",
      "",
      "[Removed Lines]",
      "1377: hphp_libxml_input_buffer_noload(const char *URI, xmlCharEncoding enc) {",
      "1378:   return nullptr;",
      "1382:   xmlParserInputBufferCreateFilenameFunc old;",
      "1384:   if (disable) {",
      "1385:     old = xmlParserInputBufferCreateFilenameDefault(hphp_libxml_input_buffer_noload);",
      "1386:   } else {",
      "1387:     old = xmlParserInputBufferCreateFilenameDefault(nullptr);",
      "1388:   }",
      "1389:   return (old == hphp_libxml_input_buffer_noload);",
      "",
      "[Added Lines]",
      "1382: hphp_libxml_input_buffer(const char *URI, xmlCharEncoding enc) {",
      "1383:   if (s_libxml_errors->m_entity_loader_disabled) {",
      "1384:     return nullptr;",
      "1385:   }",
      "1386:   return __xmlParserInputBufferCreateFilename(URI, enc);",
      "1390:   bool old = s_libxml_errors->m_entity_loader_disabled;",
      "1392:   s_libxml_errors->m_entity_loader_disabled = disable;",
      "1394:   return old;",
      "",
      "---------------"
    ],
    "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php": [
      "File: hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php -> hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: $xml = <<<EOT",
      "4: <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
      "5: <!DOCTYPE test [<!ENTITY xxe SYSTEM \"XXE_URI\">]>",
      "6: <foo>&xxe;</foo>",
      "7: EOT;",
      "9: $xml = str_replace('XXE_URI', __DIR__ . '/libxml_disable_entity_loader_payload.txt', $xml);",
      "11: function parseXML($xml) {",
      "12:   $doc = new DOMDocument();",
      "13:   $doc->resolveExternals = true;",
      "14:   $doc->substituteEntities = true;",
      "15:   $doc->validateOnParse = false;",
      "16:   $doc->loadXML($xml, 0);",
      "17:   return $doc->saveXML();",
      "18: }",
      "20: var_dump(strpos(parseXML($xml), 'SECRET_DATA') !== false);",
      "21: var_dump(libxml_disable_entity_loader(true));",
      "22: var_dump(strpos(parseXML($xml), 'SECRET_DATA') === false);",
      "24: echo \"Done\\n\";",
      "25: ?>",
      "",
      "---------------"
    ],
    "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf": [
      "File: hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf -> hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: bool(true)",
      "2: bool(false)",
      "3: I/O warning : failed to load external entity \"%s\"",
      "4: HipHop Warning: %s",
      "5: HipHop Warning: %s",
      "6: bool(true)",
      "7: Done",
      "",
      "---------------"
    ],
    "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif": [
      "File: hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif -> hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php if (!extension_loaded('simplexml') || !extension_loaded('dom') || defined('PHP_WINDOWS_VERSION_MAJOR')) die('skip'); ?>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "55ecfbdbb6a68b7e4b2e46d8e3afe7209751c198",
      "candidate_info": {
        "commit_hash": "55ecfbdbb6a68b7e4b2e46d8e3afe7209751c198",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/55ecfbdbb6a68b7e4b2e46d8e3afe7209751c198",
        "files": [
          "hphp/runtime/ext/ext_simplexml.cpp",
          "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php",
          "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf",
          "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif",
          "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader_payload.txt"
        ],
        "message": "Fix libxml_disable_entity_loader()\n\nThis wasn't calling requestInit and setting the libxml handler no null.\nSo the first time an error came along it would reset the handler from\nno-op to reading again.\n\nThis is a much better fix, we set our custom handler in requestInit and\nwhen libxml_disable_entity_loader we store that state as a member bool\nensuring requestInit is always called to set our own handler.\n\nIf the handler isn't inserted then the behavious is as before. The only\ntime this could go pear shaped is say we wanted to make the default be\noff. In that case we'd need a global requestInit that is always called\nsince there are libxml references everywhere.\n\nReviewed By: @jdelong\n\nDifferential Revision: D1116686",
        "before_after_code_files": [
          "hphp/runtime/ext/ext_simplexml.cpp||hphp/runtime/ext/ext_simplexml.cpp",
          "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php",
          "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf",
          "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/ext_simplexml.cpp||hphp/runtime/ext/ext_simplexml.cpp",
            "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php",
            "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf",
            "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif"
          ],
          "candidate": [
            "hphp/runtime/ext/ext_simplexml.cpp||hphp/runtime/ext/ext_simplexml.cpp",
            "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php",
            "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf",
            "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/ext_simplexml.cpp||hphp/runtime/ext/ext_simplexml.cpp": [
          "File: hphp/runtime/ext/ext_simplexml.cpp -> hphp/runtime/ext/ext_simplexml.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1247: class xmlErrorVec : public std::vector<xmlError> {",
          "1248: public:",
          "1249:   ~xmlErrorVec() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1247: static xmlParserInputBufferPtr",
          "1248: hphp_libxml_input_buffer(const char *URI, xmlCharEncoding enc);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1263:   virtual void requestInit() {",
          "1264:     m_use_error = false;",
          "1265:     m_errors.reset();",
          "1267:   }",
          "1268:   virtual void requestShutdown() {",
          "1269:     m_use_error = false;",
          "1270:     m_errors.reset();",
          "1271:   }",
          "1273:   bool m_use_error;",
          "1274:   xmlErrorVec m_errors;",
          "1275: };",
          "",
          "[Removed Lines]",
          "1266:     xmlParserInputBufferCreateFilenameDefault(nullptr);",
          "",
          "[Added Lines]",
          "1269:     m_entity_loader_disabled = false;",
          "1270:     xmlParserInputBufferCreateFilenameDefault(hphp_libxml_input_buffer);",
          "1277:   bool m_entity_loader_disabled;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1376: }",
          "1378: static xmlParserInputBufferPtr",
          "1381: }",
          "1383: bool f_libxml_disable_entity_loader(bool disable /* = true */) {",
          "1392: }",
          "",
          "[Removed Lines]",
          "1379: hphp_libxml_input_buffer_noload(const char *URI, xmlCharEncoding enc) {",
          "1380:   return nullptr;",
          "1384:   xmlParserInputBufferCreateFilenameFunc old;",
          "1386:   if (disable) {",
          "1387:     old = xmlParserInputBufferCreateFilenameDefault(hphp_libxml_input_buffer_noload);",
          "1388:   } else {",
          "1389:     old = xmlParserInputBufferCreateFilenameDefault(nullptr);",
          "1390:   }",
          "1391:   return (old == hphp_libxml_input_buffer_noload);",
          "",
          "[Added Lines]",
          "1384: hphp_libxml_input_buffer(const char *URI, xmlCharEncoding enc) {",
          "1385:   if (s_libxml_errors->m_entity_loader_disabled) {",
          "1386:     return nullptr;",
          "1387:   }",
          "1388:   return __xmlParserInputBufferCreateFilename(URI, enc);",
          "1392:   bool old = s_libxml_errors->m_entity_loader_disabled;",
          "1394:   s_libxml_errors->m_entity_loader_disabled = disable;",
          "1396:   return old;",
          "",
          "---------------"
        ],
        "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php": [
          "File: hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php -> hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: $xml = <<<EOT",
          "4: <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
          "5: <!DOCTYPE test [<!ENTITY xxe SYSTEM \"XXE_URI\">]>",
          "6: <foo>&xxe;</foo>",
          "7: EOT;",
          "9: $xml = str_replace('XXE_URI', __DIR__ . '/libxml_disable_entity_loader_payload.txt', $xml);",
          "11: function parseXML($xml) {",
          "12:   $doc = new DOMDocument();",
          "13:   $doc->resolveExternals = true;",
          "14:   $doc->substituteEntities = true;",
          "15:   $doc->validateOnParse = false;",
          "16:   $doc->loadXML($xml, 0);",
          "17:   return $doc->saveXML();",
          "18: }",
          "20: var_dump(strpos(parseXML($xml), 'SECRET_DATA') !== false);",
          "21: var_dump(libxml_disable_entity_loader(true));",
          "22: var_dump(strpos(parseXML($xml), 'SECRET_DATA') === false);",
          "24: echo \"Done\\n\";",
          "25: ?>",
          "",
          "---------------"
        ],
        "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf": [
          "File: hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf -> hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: bool(true)",
          "2: bool(false)",
          "3: I/O warning : failed to load external entity \"%s\"",
          "4: HipHop Warning: %s",
          "5: HipHop Warning: %s",
          "6: bool(true)",
          "7: Done",
          "",
          "---------------"
        ],
        "hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif||hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif": [
          "File: hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif -> hphp/test/zend/good/ext/libxml/tests/libxml_disable_entity_loader.php.skipif",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php if (!extension_loaded('simplexml') || !extension_loaded('dom') || defined('PHP_WINDOWS_VERSION_MAJOR')) die('skip'); ?>",
          "",
          "---------------"
        ]
      }
    }
  ]
}