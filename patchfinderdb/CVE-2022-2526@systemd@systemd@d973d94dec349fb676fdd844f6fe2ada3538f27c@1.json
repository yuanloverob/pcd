{
  "cve_id": "CVE-2022-2526",
  "cve_desc": "A use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later.",
  "repo": "systemd/systemd",
  "patch_hash": "d973d94dec349fb676fdd844f6fe2ada3538f27c",
  "patch_info": {
    "commit_hash": "d973d94dec349fb676fdd844f6fe2ada3538f27c",
    "repo": "systemd/systemd",
    "commit_url": "https://github.com/systemd/systemd/commit/d973d94dec349fb676fdd844f6fe2ada3538f27c",
    "files": [
      "src/resolve/resolved-dns-stream.c"
    ],
    "message": "resolved: pin stream while calling callbacks for it\n\nThese callbacks might unref the stream, but we still have to access it,\nlet's hence ref it explicitly.\n\nMaybe fixes: #10725",
    "before_after_code_files": [
      "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
    ]
  },
  "patch_diff": {
    "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
      "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "273: }",
      "275: static int on_stream_io(sd_event_source *es, int fd, uint32_t revents, void *userdata) {",
      "277:         int r;",
      "279:         assert(s);",
      "",
      "[Removed Lines]",
      "276:         DnsStream *s = userdata;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aa337a5e729829058888a4da0b5ad5813dd1d5b4",
      "candidate_info": {
        "commit_hash": "aa337a5e729829058888a4da0b5ad5813dd1d5b4",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/aa337a5e729829058888a4da0b5ad5813dd1d5b4",
        "files": [
          "src/resolve/resolved-dns-stream.c",
          "src/resolve/resolved-dns-stream.h",
          "src/resolve/resolved-dns-stub.c",
          "src/resolve/resolved-dns-transaction.c",
          "src/resolve/resolved-llmnr.c"
        ],
        "message": "resolved: add new accessor dns_stream_take_read_packet() for taking read packet from stream\n\nThis ensures the packet is complete when it is taken out, and resets\nn_read so that we can start reading the next one.",
        "before_after_code_files": [
          "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c",
          "src/resolve/resolved-dns-stream.h||src/resolve/resolved-dns-stream.h",
          "src/resolve/resolved-dns-stub.c||src/resolve/resolved-dns-stub.c",
          "src/resolve/resolved-dns-transaction.c||src/resolve/resolved-dns-transaction.c",
          "src/resolve/resolved-llmnr.c||src/resolve/resolved-llmnr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ],
          "candidate": [
            "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c"
          ]
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-stream.c||src/resolve/resolved-dns-stream.c": [
          "File: src/resolve/resolved-dns-stream.c -> src/resolve/resolved-dns-stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "534:         return dns_stream_update_io(s);",
          "535: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "537: DnsPacket *dns_stream_take_read_packet(DnsStream *s) {",
          "538:         assert(s);",
          "540:         if (!s->read_packet)",
          "541:                 return NULL;",
          "543:         if (s->n_read < sizeof(s->read_size))",
          "544:                 return NULL;",
          "546:         if (s->n_read < sizeof(s->read_size) + be16toh(s->read_size))",
          "547:                 return NULL;",
          "549:         s->n_read = 0;",
          "550:         return TAKE_PTR(s->read_packet);",
          "551: }",
          "",
          "---------------"
        ],
        "src/resolve/resolved-dns-stream.h||src/resolve/resolved-dns-stream.h": [
          "File: src/resolve/resolved-dns-stream.h -> src/resolve/resolved-dns-stream.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:         return !!s->write_packet;",
          "89: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91: DnsPacket *dns_stream_take_read_packet(DnsStream *s);",
          "",
          "---------------"
        ],
        "src/resolve/resolved-dns-stub.c||src/resolve/resolved-dns-stub.c": [
          "File: src/resolve/resolved-dns-stub.c -> src/resolve/resolved-dns-stub.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "437: }",
          "439: static int on_dns_stub_stream_packet(DnsStream *s) {",
          "440:         assert(s);",
          "447:         } else",
          "448:                 log_debug(\"Invalid DNS stub TCP packet, ignoring.\");",
          "",
          "[Removed Lines]",
          "441:         assert(s->read_packet);",
          "443:         if (dns_packet_validate_query(s->read_packet) > 0) {",
          "444:                 log_debug(\"Got DNS stub TCP query packet for id %u\", DNS_PACKET_ID(s->read_packet));",
          "446:                 dns_stub_process_query(s->manager, s, s->read_packet);",
          "",
          "[Added Lines]",
          "440:         _cleanup_(dns_packet_unrefp) DnsPacket *p = NULL;",
          "444:         p = dns_stream_take_read_packet(s);",
          "445:         assert(p);",
          "447:         if (dns_packet_validate_query(p) > 0) {",
          "448:                 log_debug(\"Got DNS stub TCP query packet for id %u\", DNS_PACKET_ID(p));",
          "450:                 dns_stub_process_query(s->manager, s, p);",
          "",
          "---------------"
        ],
        "src/resolve/resolved-dns-transaction.c||src/resolve/resolved-dns-transaction.c": [
          "File: src/resolve/resolved-dns-transaction.c -> src/resolve/resolved-dns-transaction.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "533: static int dns_stream_on_packet(DnsStream *s) {",
          "534:         _cleanup_(dns_packet_unrefp) DnsPacket *p = NULL;",
          "536:         DnsTransaction *t;",
          "542:         t = hashmap_get(s->manager->dns_transactions, UINT_TO_PTR(DNS_PACKET_ID(p)));",
          "553:         }",
          "556: }",
          "558: static int dns_transaction_emit_tcp(DnsTransaction *t) {",
          "",
          "[Removed Lines]",
          "535:         int r = 0;",
          "539:         p = TAKE_PTR(s->read_packet);",
          "540:         s->n_read = 0;",
          "545:         if (t)",
          "546:                 r = dns_transaction_on_stream_packet(t, p);",
          "547:         else {",
          "548:                 if (dns_packet_validate_reply(p) <= 0) {",
          "549:                         log_debug(\"Invalid TCP reply packet.\");",
          "550:                         on_stream_complete(s, 0);",
          "551:                 }",
          "552:                 return 0;",
          "555:         return r;",
          "",
          "[Added Lines]",
          "537:         assert(s);",
          "540:         p = dns_stream_take_read_packet(s);",
          "541:         assert(p);",
          "544:         if (t)",
          "545:                 return dns_transaction_on_stream_packet(t, p);",
          "548:         if (dns_packet_validate_reply(p) <= 0) {",
          "549:                 log_debug(\"Invalid TCP reply packet.\");",
          "550:                 on_stream_complete(s, 0);",
          "553:         return 0;",
          "",
          "---------------"
        ],
        "src/resolve/resolved-llmnr.c||src/resolve/resolved-llmnr.c": [
          "File: src/resolve/resolved-llmnr.c -> src/resolve/resolved-llmnr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "260: }",
          "262: static int on_llmnr_stream_packet(DnsStream *s) {",
          "263:         DnsScope *scope;",
          "265:         assert(s);",
          "269:         if (!scope)",
          "270:                 log_debug(\"Got LLMNR TCP packet on unknown scope. Ignoring.\");",
          "275:         } else",
          "276:                 log_debug(\"Invalid LLMNR TCP packet, ignoring.\");",
          "",
          "[Removed Lines]",
          "266:         assert(s->read_packet);",
          "268:         scope = manager_find_scope(s->manager, s->read_packet);",
          "271:         else if (dns_packet_validate_query(s->read_packet) > 0) {",
          "272:                 log_debug(\"Got LLMNR TCP query packet for id %u\", DNS_PACKET_ID(s->read_packet));",
          "274:                 dns_scope_process_query(scope, s, s->read_packet);",
          "",
          "[Added Lines]",
          "263:         _cleanup_(dns_packet_unrefp) DnsPacket *p = NULL;",
          "268:         p = dns_stream_take_read_packet(s);",
          "269:         assert(p);",
          "271:         scope = manager_find_scope(s->manager, p);",
          "274:         else if (dns_packet_validate_query(p) > 0) {",
          "275:                 log_debug(\"Got LLMNR TCP query packet for id %u\", DNS_PACKET_ID(p));",
          "277:                 dns_scope_process_query(scope, s, p);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51bc63fef2be2e988222537c6a39fe07f75fd97a",
      "candidate_info": {
        "commit_hash": "51bc63fef2be2e988222537c6a39fe07f75fd97a",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/51bc63fef2be2e988222537c6a39fe07f75fd97a",
        "files": [
          "src/resolve/resolved-dns-server.h",
          "src/resolve/resolved-dns-stream.h"
        ],
        "message": "resolved: comment headers better",
        "before_after_code_files": [
          "src/resolve/resolved-dns-server.h||src/resolve/resolved-dns-server.h",
          "src/resolve/resolved-dns-stream.h||src/resolve/resolved-dns-stream.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-server.h||src/resolve/resolved-dns-server.h": [
          "File: src/resolve/resolved-dns-server.h -> src/resolve/resolved-dns-server.h"
        ],
        "src/resolve/resolved-dns-stream.h||src/resolve/resolved-dns-stream.h": [
          "File: src/resolve/resolved-dns-stream.h -> src/resolve/resolved-dns-stream.h"
        ]
      }
    },
    {
      "candidate_hash": "65b0179a25c6408f218912cd804403170d43fd38",
      "candidate_info": {
        "commit_hash": "65b0179a25c6408f218912cd804403170d43fd38",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/65b0179a25c6408f218912cd804403170d43fd38",
        "files": [
          "src/resolve/resolved-dns-server.c"
        ],
        "message": "resolved: use structured initialization for DnsServer allocation",
        "before_after_code_files": [
          "src/resolve/resolved-dns-server.c||src/resolve/resolved-dns-server.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-server.c||src/resolve/resolved-dns-server.c": [
          "File: src/resolve/resolved-dns-server.c -> src/resolve/resolved-dns-server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:                         return -E2BIG;",
          "44:         }",
          "47:         if (!s)",
          "48:                 return -ENOMEM;",
          "57:         dns_server_reset_features(s);",
          "",
          "[Removed Lines]",
          "46:         s = new0(DnsServer, 1);",
          "50:         s->n_ref = 1;",
          "51:         s->manager = m;",
          "52:         s->type = type;",
          "53:         s->family = family;",
          "54:         s->address = *in_addr;",
          "55:         s->ifindex = ifindex;",
          "",
          "[Added Lines]",
          "46:         s = new(DnsServer, 1);",
          "51:                 .n_ref = 1,",
          "52:                 .manager = m,",
          "53:                 .type = type,",
          "54:                 .family = family,",
          "55:                 .address = *in_addr,",
          "56:                 .ifindex = ifindex,",
          "57:         };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "747a8a74c04f986eb2a1f56829d3b5634d00f56e",
      "candidate_info": {
        "commit_hash": "747a8a74c04f986eb2a1f56829d3b5634d00f56e",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/747a8a74c04f986eb2a1f56829d3b5634d00f56e",
        "files": [
          "src/resolve/resolved-dns-transaction.c"
        ],
        "message": "resolved: rename dns_stream_on_packet() \u2192 on_stream_packet()\n\nLet's name this similar to on_stream_complete(). Moreover we shouldn't\ninvade dns_stream's namespace if we are a consumer of it.",
        "before_after_code_files": [
          "src/resolve/resolved-dns-transaction.c||src/resolve/resolved-dns-transaction.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-transaction.c||src/resolve/resolved-dns-transaction.c": [
          "File: src/resolve/resolved-dns-transaction.c -> src/resolve/resolved-dns-transaction.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "530:         return 0;",
          "531: }",
          "534:         _cleanup_(dns_packet_unrefp) DnsPacket *p = NULL;",
          "535:         DnsTransaction *t;",
          "",
          "[Removed Lines]",
          "533: static int dns_stream_on_packet(DnsStream *s) {",
          "",
          "[Added Lines]",
          "533: static int on_stream_packet(DnsStream *s) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "639:                 }",
          "641:                 s->complete = on_stream_complete;",
          "",
          "[Removed Lines]",
          "642:                 s->on_packet = dns_stream_on_packet;",
          "",
          "[Added Lines]",
          "642:                 s->on_packet = on_stream_packet;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c23b62b40ba857afd72a260e4a92d3b13af9c272",
      "candidate_info": {
        "commit_hash": "c23b62b40ba857afd72a260e4a92d3b13af9c272",
        "repo": "systemd/systemd",
        "commit_url": "https://github.com/systemd/systemd/commit/c23b62b40ba857afd72a260e4a92d3b13af9c272",
        "files": [
          "src/resolve/resolved-dns-stream.h"
        ],
        "message": "resolved: drop unused field structure",
        "before_after_code_files": [
          "src/resolve/resolved-dns-stream.h||src/resolve/resolved-dns-stream.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/systemd/systemd/pull/11055"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resolve/resolved-dns-stream.h||src/resolve/resolved-dns-stream.h": [
          "File: src/resolve/resolved-dns-stream.h -> src/resolve/resolved-dns-stream.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:         size_t n_written, n_read;",
          "54:         OrderedSet *write_queue;",
          "57:         int (*on_packet)(DnsStream *s);",
          "58:         int (*complete)(DnsStream *s, int error);",
          "",
          "[Removed Lines]",
          "56:         int (*on_connection)(DnsStream *s);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}