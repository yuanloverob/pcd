{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dafa1c85b9bbd8ed3ff1911d00ad7f4e890bafa3",
      "candidate_info": {
        "commit_hash": "dafa1c85b9bbd8ed3ff1911d00ad7f4e890bafa3",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dafa1c85b9bbd8ed3ff1911d00ad7f4e890bafa3",
        "files": [
          "test/asynciotest.c"
        ],
        "message": "Add a test for BIO_read() returning 0 in SSL_read() (and also for write)\n\nA BIO_read() 0 return indicates that a failure occurred that may be\nretryable. An SSL_read() 0 return indicates a non-retryable failure. Check\nthat if BIO_read() returns 0, SSL_read() returns <0. Same for SSL_write().\n\nThe asyncio test filter BIO already returns 0 on a retryable failure so we\nbuild on that.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit a34ac5b8b9c1a3281b4ee545c46177f485fb4949)",
        "before_after_code_files": [
          "test/asynciotest.c||test/asynciotest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/asynciotest.c||test/asynciotest.c": [
          "File: test/asynciotest.c -> test/asynciotest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "234:     return async_write(bio, str, strlen(str));",
          "235: }",
          "237: int main(int argc, char *argv[])",
          "238: {",
          "239:     SSL_CTX *serverctx = NULL, *clientctx = NULL;",
          "240:     SSL *serverssl = NULL, *clientssl = NULL;",
          "241:     BIO *s_to_c_fbio = NULL, *c_to_s_fbio = NULL;",
          "244:     CRYPTO_set_mem_debug(1);",
          "245:     CRYPTO_mem_ctrl(CRYPTO_MEM_CHECK_ON);",
          "",
          "[Removed Lines]",
          "242:     int test, err = 1;",
          "",
          "[Added Lines]",
          "237: #define MAX_ATTEMPTS    100",
          "244:     int test, err = 1, ret;",
          "245:     size_t i, j;",
          "246:     const char testdata[] = \"Test data\";",
          "247:     char buf[sizeof(testdata)];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "287:             goto end;",
          "288:         }",
          "291:         SSL_free(clientssl);",
          "292:         SSL_free(serverssl);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "299:         for (j = 0; j < 2; j++) {",
          "306:             for (ret = -1, i = 0; ret < 0 && i < 2 * sizeof(testdata); i++)",
          "307:                 ret = SSL_write(clientssl, testdata, sizeof(testdata));",
          "308:             if (ret <= 0) {",
          "309:                 printf(\"Test %d failed: Failed to write app data\\n\", test);",
          "310:                 goto end;",
          "311:             }",
          "318:             for (ret = -1, i = 0; ret < 0 && i < MAX_ATTEMPTS; i++)",
          "319:                 ret = SSL_read(serverssl, buf, sizeof(buf));",
          "320:             if (ret <= 0) {",
          "321:                 printf(\"Test %d failed: Failed to read app data\\n\", test);",
          "322:                 goto end;",
          "323:             }",
          "324:             if (ret != sizeof(testdata)",
          "325:                     || memcmp(buf, testdata, sizeof(testdata)) != 0) {",
          "326:                 printf(\"Test %d failed: Unexpected app data received\\n\", test);",
          "327:                 goto end;",
          "328:             }",
          "329:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f5c1ee58c1cc246dc2f0b9b50f40c659fc302ad0",
      "candidate_info": {
        "commit_hash": "f5c1ee58c1cc246dc2f0b9b50f40c659fc302ad0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f5c1ee58c1cc246dc2f0b9b50f40c659fc302ad0",
        "files": [
          "include/openssl/x509v3.h"
        ],
        "message": "Document what EXFLAG_SET is for in x509v3.h\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2314)\n(cherry picked from commit 2d60c923141e7853c268364f26195343a5e995bf)",
        "before_after_code_files": [
          "include/openssl/x509v3.h||include/openssl/x509v3.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/x509v3.h||include/openssl/x509v3.h": [
          "File: include/openssl/x509v3.h -> include/openssl/x509v3.h"
        ]
      }
    },
    {
      "candidate_hash": "7b6c15ef62b8b0e4552f586184f4e90bf07d3c23",
      "candidate_info": {
        "commit_hash": "7b6c15ef62b8b0e4552f586184f4e90bf07d3c23",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7b6c15ef62b8b0e4552f586184f4e90bf07d3c23",
        "files": [
          "crypto/poly1305/asm/poly1305-armv8.pl"
        ],
        "message": "poly1305/asm/poly1305-armv8.pl: ilp32-specific poly1305_init fix.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit a25cef89fdf40c738f7e7a456f285217dc41fd6b)",
        "before_after_code_files": [
          "crypto/poly1305/asm/poly1305-armv8.pl||crypto/poly1305/asm/poly1305-armv8.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/poly1305/asm/poly1305-armv8.pl||crypto/poly1305/asm/poly1305-armv8.pl": [
          "File: crypto/poly1305/asm/poly1305-armv8.pl -> crypto/poly1305/asm/poly1305-armv8.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:  csel $d0,$d0,$r0,eq",
          "101:  csel $d1,$d1,$r1,eq",
          "103:  stp $d0,$d1,[$len]",
          "105:  mov x0,#1",
          "106: .Lno_key:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103: #ifdef __ILP32__",
          "104:  stp w12,w13,[$len]",
          "105: #else",
          "107: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c55aec6e9f68ec45162e85434d2911fa67e8f15",
      "candidate_info": {
        "commit_hash": "3c55aec6e9f68ec45162e85434d2911fa67e8f15",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3c55aec6e9f68ec45162e85434d2911fa67e8f15",
        "files": [
          "crypto/bn/bn_intern.c"
        ],
        "message": "Don't call memcpy with NULL as source\n\nCalling it with lenght 0 and NULL as source is undefined behaviour.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nGH: #2089\n(cherry picked from commit eeab356c298248108b82157ef51172ba040646f7)",
        "before_after_code_files": [
          "crypto/bn/bn_intern.c||crypto/bn/bn_intern.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_intern.c||crypto/bn/bn_intern.c": [
          "File: crypto/bn/bn_intern.c -> crypto/bn/bn_intern.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:         return 0;",
          "169:     memset(out, 0, sizeof(*out) * size);",
          "171:     return 1;",
          "172: }",
          "",
          "[Removed Lines]",
          "170:     memcpy(out, in->d, sizeof(*out) * in->top);",
          "",
          "[Added Lines]",
          "170:     if (in->d != NULL)",
          "171:         memcpy(out, in->d, sizeof(*out) * in->top);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd7138ddeed4b577c1a37cc58fef6e715753698d",
      "candidate_info": {
        "commit_hash": "fd7138ddeed4b577c1a37cc58fef6e715753698d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/fd7138ddeed4b577c1a37cc58fef6e715753698d",
        "files": [
          "crypto/ct/ct_locl.h",
          "include/openssl/ct.h"
        ],
        "message": "Reword documentation for {SCT_CTX/CT_POLICY_EVAL_CTX}_set_time\n\nDo not call the time \"current\", as a different time can be provided.\nFor example, a time slightly in the future, to provide tolerance for\nCT logs with a clock that is running fast.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit 1871a5aa8a538c2b8ac3d302c1e9e72867f5ee0f)",
        "before_after_code_files": [
          "crypto/ct/ct_locl.h||crypto/ct/ct_locl.h",
          "include/openssl/ct.h||include/openssl/ct.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_locl.h||crypto/ct/ct_locl.h": [
          "File: crypto/ct/ct_locl.h -> crypto/ct/ct_locl.h"
        ],
        "include/openssl/ct.h||include/openssl/ct.h": [
          "File: include/openssl/ct.h -> include/openssl/ct.h"
        ]
      }
    }
  ]
}