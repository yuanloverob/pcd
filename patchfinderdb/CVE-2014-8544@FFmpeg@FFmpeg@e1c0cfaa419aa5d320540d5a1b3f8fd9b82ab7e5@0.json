{
  "cve_id": "CVE-2014-8544",
  "cve_desc": "libavcodec/tiff.c in FFmpeg before 2.4.2 does not properly validate bits-per-pixel fields, which allows remote attackers to cause a denial of service (out-of-bounds access) or possibly have unspecified other impact via crafted TIFF data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5",
  "patch_info": {
    "commit_hash": "e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5",
    "files": [
      "libavcodec/tiff.c"
    ],
    "message": "avcodec/tiff: more completely check bpp/bppcount\n\nFixes pixel format selection\nFixes out of array accesses\nFixes: asan_heap-oob_1766029_6_asan_heap-oob_20aa045_332_cov_1823216757_m2-d1d366d7965db766c19a66c7a2ccbb6b.tif\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/tiff.c||libavcodec/tiff.c"
    ]
  },
  "patch_diff": {
    "libavcodec/tiff.c||libavcodec/tiff.c": [
      "File: libavcodec/tiff.c -> libavcodec/tiff.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "814:         s->height = value;",
      "815:         break;",
      "816:     case TIFF_BPP:",
      "819:             av_log(s->avctx, AV_LOG_ERROR,",
      "820:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
      "822:             return AVERROR_INVALIDDATA;",
      "823:         }",
      "824:         if (count == 1)",
      "825:             s->bpp = value;",
      "826:         else {",
      "",
      "[Removed Lines]",
      "817:         s->bppcount = count;",
      "818:         if (count > 4) {",
      "821:                    s->bpp, count);",
      "",
      "[Added Lines]",
      "817:         if (count > 4U) {",
      "820:                    value, count);",
      "823:         s->bppcount = count;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "838:                 s->bpp = -1;",
      "839:             }",
      "840:         }",
      "841:         break;",
      "842:     case TIFF_SAMPLES_PER_PIXEL:",
      "843:         if (count != 1) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "841:         if (s->bpp > 64U) {",
      "842:             av_log(s->avctx, AV_LOG_ERROR,",
      "843:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
      "844:                    s->bpp, count);",
      "845:             s->bpp = 0;",
      "846:             return AVERROR_INVALIDDATA;",
      "847:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aa17021e812eb2527033d85ba0390cc4f7d6c9d5",
      "candidate_info": {
        "commit_hash": "aa17021e812eb2527033d85ba0390cc4f7d6c9d5",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/aa17021e812eb2527033d85ba0390cc4f7d6c9d5",
        "files": [
          "libavcodec/tiff.c"
        ],
        "message": "avcodec/tiff: more completely check bpp/bppcount\n\nFixes pixel format selection\nFixes out of array accesses\nFixes: asan_heap-oob_1766029_6_asan_heap-oob_20aa045_332_cov_1823216757_m2-d1d366d7965db766c19a66c7a2ccbb6b.tif\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5)\n\nConflicts:\n\n\tlibavcodec/tiff.c",
        "before_after_code_files": [
          "libavcodec/tiff.c||libavcodec/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ],
          "candidate": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/tiff.c||libavcodec/tiff.c": [
          "File: libavcodec/tiff.c -> libavcodec/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "720:         s->height = value;",
          "721:         break;",
          "722:     case TIFF_BPP:",
          "725:             av_log(s->avctx, AV_LOG_ERROR,",
          "726:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "728:             return -1;",
          "729:         }",
          "730:         if (count == 1)",
          "731:             s->bpp = value;",
          "732:         else {",
          "",
          "[Removed Lines]",
          "723:         s->bppcount = count;",
          "724:         if (count > 4) {",
          "727:                    s->bpp, count);",
          "",
          "[Added Lines]",
          "723:         if (count > 4U) {",
          "726:                    value, count);",
          "729:         s->bppcount = count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "747:                 s->bpp = -1;",
          "748:             }",
          "749:         }",
          "750:         break;",
          "751:     case TIFF_SAMPLES_PER_PIXEL:",
          "752:         if (count != 1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "750:         if (s->bpp > 64U) {",
          "751:             av_log(s->avctx, AV_LOG_ERROR,",
          "752:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "753:                    s->bpp, count);",
          "754:             s->bpp = 0;",
          "755:             return AVERROR_INVALIDDATA;",
          "756:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c3af801c63024c2fcd7a5fbb571b6f8a9c9790dc",
      "candidate_info": {
        "commit_hash": "c3af801c63024c2fcd7a5fbb571b6f8a9c9790dc",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/c3af801c63024c2fcd7a5fbb571b6f8a9c9790dc",
        "files": [
          "libavcodec/tiff.c"
        ],
        "message": "avcodec/tiff: more completely check bpp/bppcount\n\nFixes pixel format selection\nFixes out of array accesses\nFixes: asan_heap-oob_1766029_6_asan_heap-oob_20aa045_332_cov_1823216757_m2-d1d366d7965db766c19a66c7a2ccbb6b.tif\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/tiff.c||libavcodec/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ],
          "candidate": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/tiff.c||libavcodec/tiff.c": [
          "File: libavcodec/tiff.c -> libavcodec/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "712:         s->height = value;",
          "713:         break;",
          "714:     case TIFF_BPP:",
          "717:             av_log(s->avctx, AV_LOG_ERROR,",
          "718:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "720:             return AVERROR_INVALIDDATA;",
          "721:         }",
          "722:         if (count == 1)",
          "723:             s->bpp = value;",
          "724:         else {",
          "",
          "[Removed Lines]",
          "715:         s->bppcount = count;",
          "716:         if (count > 4) {",
          "719:                    s->bpp, count);",
          "",
          "[Added Lines]",
          "715:         if (count > 4U) {",
          "718:                    value, count);",
          "721:         s->bppcount = count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "736:                 s->bpp = -1;",
          "737:             }",
          "738:         }",
          "739:         break;",
          "740:     case TIFF_SAMPLES_PER_PIXEL:",
          "741:         if (count != 1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "739:         if (s->bpp > 64U) {",
          "740:             av_log(s->avctx, AV_LOG_ERROR,",
          "741:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "742:                    s->bpp, count);",
          "743:             s->bpp = 0;",
          "744:             return AVERROR_INVALIDDATA;",
          "745:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "abbfc4d87ec4a420b06425baf89ae961e1a41e74",
      "candidate_info": {
        "commit_hash": "abbfc4d87ec4a420b06425baf89ae961e1a41e74",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/abbfc4d87ec4a420b06425baf89ae961e1a41e74",
        "files": [
          "libavcodec/tiff.c"
        ],
        "message": "avcodec/tiff: more completely check bpp/bppcount\n\nFixes pixel format selection\nFixes out of array accesses\nFixes: asan_heap-oob_1766029_6_asan_heap-oob_20aa045_332_cov_1823216757_m2-d1d366d7965db766c19a66c7a2ccbb6b.tif\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/tiff.c||libavcodec/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ],
          "candidate": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/tiff.c||libavcodec/tiff.c": [
          "File: libavcodec/tiff.c -> libavcodec/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "748:         s->height = value;",
          "749:         break;",
          "750:     case TIFF_BPP:",
          "753:             av_log(s->avctx, AV_LOG_ERROR,",
          "754:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "756:             return AVERROR_INVALIDDATA;",
          "757:         }",
          "758:         if (count == 1)",
          "759:             s->bpp = value;",
          "760:         else {",
          "",
          "[Removed Lines]",
          "751:         s->bppcount = count;",
          "752:         if (count > 4) {",
          "755:                    s->bpp, count);",
          "",
          "[Added Lines]",
          "751:         if (count > 4U) {",
          "754:                    value, count);",
          "757:         s->bppcount = count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "775:                 s->bpp = -1;",
          "776:             }",
          "777:         }",
          "778:         break;",
          "779:     case TIFF_SAMPLES_PER_PIXEL:",
          "780:         if (count != 1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "778:         if (s->bpp > 64U) {",
          "779:             av_log(s->avctx, AV_LOG_ERROR,",
          "780:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "781:                    s->bpp, count);",
          "782:             s->bpp = 0;",
          "783:             return AVERROR_INVALIDDATA;",
          "784:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7c1150bf05cd4f3c216fbe3441894a567a18f2ee",
      "candidate_info": {
        "commit_hash": "7c1150bf05cd4f3c216fbe3441894a567a18f2ee",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/7c1150bf05cd4f3c216fbe3441894a567a18f2ee",
        "files": [
          "libavcodec/tiff.c"
        ],
        "message": "avcodec/tiff: more completely check bpp/bppcount\n\nFixes pixel format selection\nFixes out of array accesses\nFixes: asan_heap-oob_1766029_6_asan_heap-oob_20aa045_332_cov_1823216757_m2-d1d366d7965db766c19a66c7a2ccbb6b.tif\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5)\n\nConflicts:\n\n\tlibavcodec/tiff.c\n(cherry picked from commit e9125e74897135d690cf44f6e6d39e80dcd07803)\n\nConflicts:\n\n\tlibavcodec/tiff.c",
        "before_after_code_files": [
          "libavcodec/tiff.c||libavcodec/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ],
          "candidate": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/tiff.c||libavcodec/tiff.c": [
          "File: libavcodec/tiff.c -> libavcodec/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "386:         s->height = value;",
          "387:         break;",
          "388:     case TIFF_BPP:",
          "392:             return -1;",
          "393:         }",
          "394:         if(count == 1) s->bpp = value;",
          "395:         else{",
          "396:             switch(type){",
          "",
          "[Removed Lines]",
          "389:         s->bppcount = count;",
          "390:         if(count > 4){",
          "391:             av_log(s->avctx, AV_LOG_ERROR, \"This format is not supported (bpp=%d, %d components)\\n\", s->bpp, count);",
          "",
          "[Added Lines]",
          "389:         if(count > 4U){",
          "390:             av_log(s->avctx, AV_LOG_ERROR, \"This format is not supported (bpp=%d, %d components)\\n\", value, count);",
          "393:         s->bppcount = count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "407:                 s->bpp = -1;",
          "408:             }",
          "409:         }",
          "410:         break;",
          "411:     case TIFF_SAMPLES_PER_PIXEL:",
          "412:         if (count != 1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "410:         if (s->bpp > 64U) {",
          "411:             av_log(s->avctx, AV_LOG_ERROR,",
          "412:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "413:                    s->bpp, count);",
          "414:             s->bpp = 0;",
          "415:             return AVERROR_INVALIDDATA;",
          "416:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f56095c4d7e5a76be8b114bcf427ab0becf0c635",
      "candidate_info": {
        "commit_hash": "f56095c4d7e5a76be8b114bcf427ab0becf0c635",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f56095c4d7e5a76be8b114bcf427ab0becf0c635",
        "files": [
          "libavcodec/tiff.c"
        ],
        "message": "avcodec/tiff: more completely check bpp/bppcount\n\nFixes pixel format selection\nFixes out of array accesses\nFixes: asan_heap-oob_1766029_6_asan_heap-oob_20aa045_332_cov_1823216757_m2-d1d366d7965db766c19a66c7a2ccbb6b.tif\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/tiff.c||libavcodec/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ],
          "candidate": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/tiff.c||libavcodec/tiff.c": [
          "File: libavcodec/tiff.c -> libavcodec/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "716:         s->height = value;",
          "717:         break;",
          "718:     case TIFF_BPP:",
          "721:             av_log(s->avctx, AV_LOG_ERROR,",
          "722:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "724:             return AVERROR_INVALIDDATA;",
          "725:         }",
          "726:         if (count == 1)",
          "727:             s->bpp = value;",
          "728:         else {",
          "",
          "[Removed Lines]",
          "719:         s->bppcount = count;",
          "720:         if (count > 4) {",
          "723:                    s->bpp, count);",
          "",
          "[Added Lines]",
          "719:         if (count > 4U) {",
          "722:                    value, count);",
          "725:         s->bppcount = count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "743:                 s->bpp = -1;",
          "744:             }",
          "745:         }",
          "746:         break;",
          "747:     case TIFF_SAMPLES_PER_PIXEL:",
          "748:         if (count != 1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "746:         if (s->bpp > 64U) {",
          "747:             av_log(s->avctx, AV_LOG_ERROR,",
          "748:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "749:                    s->bpp, count);",
          "750:             s->bpp = 0;",
          "751:             return AVERROR_INVALIDDATA;",
          "752:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}