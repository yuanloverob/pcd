{
  "cve_id": "CVE-2019-13391",
  "cve_desc": "In ImageMagick 7.0.8-50 Q16, ComplexImages in MagickCore/fourier.c has a heap-based buffer over-read because of incorrect calls to GetCacheViewVirtualPixels.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "7c2c5ba5b8e3a0b2b82f56c71dfab74ed4006df7",
  "patch_info": {
    "commit_hash": "7c2c5ba5b8e3a0b2b82f56c71dfab74ed4006df7",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/7c2c5ba5b8e3a0b2b82f56c71dfab74ed4006df7",
    "files": [
      "MagickCore/annotate.c",
      "MagickCore/fourier.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/1588",
    "before_after_code_files": [
      "MagickCore/annotate.c||MagickCore/annotate.c",
      "MagickCore/fourier.c||MagickCore/fourier.c"
    ]
  },
  "patch_diff": {
    "MagickCore/annotate.c||MagickCore/annotate.c": [
      "File: MagickCore/annotate.c -> MagickCore/annotate.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "277:   number_lines=1;",
      "278:   for (p=text; *p != '\\0'; p++)",
      "279:     if (*p == '\\n')",
      "280:       number_lines++;",
      "281:   textlist=AcquireQuantumMemory(number_lines+1,sizeof(*textlist));",
      "282:   if (textlist == (char **) NULL)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "280:       number_lines++;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "311:       (void) ParsePageGeometry(image,annotate_info->geometry,&geometry,",
      "312:         exception);",
      "313:       (void) ParseGeometry(annotate_info->geometry,&geometry_info);",
      "314:     }",
      "315:   if (SetImageStorageClass(image,DirectClass,exception) == MagickFalse)",
      "316:     {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "315:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "529:         (void) DrawImage(image,annotate_info,exception);",
      "530:       }",
      "531:   }",
      "533:     Relinquish resources.",
      "535:   annotate_info=DestroyDrawInfo(annotate_info);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "MagickCore/fourier.c||MagickCore/fourier.c": [
      "File: MagickCore/fourier.c -> MagickCore/fourier.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "246:     register ssize_t",
      "247:       x;",
      "252:     Ai=GetCacheViewVirtualPixels(Ai_view,0,y,Ai_image->columns,1,exception);",
      "253:     Br=GetCacheViewVirtualPixels(Br_view,0,y,Br_image->columns,1,exception);",
      "254:     Bi=GetCacheViewVirtualPixels(Bi_view,0,y,Bi_image->columns,1,exception);",
      "",
      "[Removed Lines]",
      "249:     if (status == MagickFalse)",
      "250:       continue;",
      "251:     Ar=GetCacheViewVirtualPixels(Ar_view,0,y,Ar_image->columns,1,exception);",
      "",
      "[Added Lines]",
      "249:     if (status == MagickFalse)",
      "250:       continue;",
      "251:     Ar=GetCacheViewVirtualPixels(Ar_view,0,y,",
      "252:       MagickMax(Ar_image->columns,Cr_image->columns),1,exception);",
      "253:     Ai=GetCacheViewVirtualPixels(Ai_view,0,y,",
      "254:       MagickMax(Ai_image->columns,Ci_image->columns),1,exception);",
      "255:     Br=GetCacheViewVirtualPixels(Br_view,0,y,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "084c7d3587f0f10ad6eee880d1088c90fd393734",
      "candidate_info": {
        "commit_hash": "084c7d3587f0f10ad6eee880d1088c90fd393734",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/084c7d3587f0f10ad6eee880d1088c90fd393734",
        "files": [
          "ChangeLog",
          "MagickCore/fourier.c"
        ],
        "message": "Fix possible buffer overflow in ComplexImages()",
        "before_after_code_files": [
          "MagickCore/fourier.c||MagickCore/fourier.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/fourier.c||MagickCore/fourier.c"
          ],
          "candidate": [
            "MagickCore/fourier.c||MagickCore/fourier.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/fourier.c||MagickCore/fourier.c": [
          "File: MagickCore/fourier.c -> MagickCore/fourier.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:     status;",
          "167:   MagickOffsetType",
          "170:   size_t",
          "171:     number_channels;",
          "",
          "[Removed Lines]",
          "168:     progress;",
          "",
          "[Added Lines]",
          "168:     progress;",
          "170:   size_t",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "193:       image=DestroyImageList(image);",
          "194:       return(image);",
          "195:     }",
          "197:   complex_images=NewImageList();",
          "198:   AppendImageToList(&complex_images,image);",
          "199:   image=CloneImage(images,0,0,MagickTrue,exception);",
          "200:   if (image == (Image *) NULL)",
          "201:     {",
          "202:       complex_images=DestroyImageList(complex_images);",
          "203:       return(complex_images);",
          "204:     }",
          "",
          "[Removed Lines]",
          "196:   image->depth=32UL;",
          "",
          "[Added Lines]",
          "198:   image->depth=32UL;",
          "204:       complex_images=DestroyImageList(complex_images);",
          "205:       return(complex_images);",
          "206:     }",
          "207:   if (SetImageStorageClass(image,DirectClass,exception) == MagickFalse)",
          "208:     {",
          "209:       image=DestroyImageList(image);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "231:   Br_view=AcquireVirtualCacheView(Br_image,exception);",
          "232:   Bi_view=AcquireVirtualCacheView(Bi_image,exception);",
          "233:   Cr_view=AcquireAuthenticCacheView(Cr_image,exception);",
          "234:   Ci_view=AcquireAuthenticCacheView(Ci_image,exception);",
          "235:   status=MagickTrue;",
          "237: #if defined(MAGICKCORE_OPENMP_SUPPORT)",
          "239:     magick_number_threads(Cr_image,complex_images,Cr_image->rows,1L)",
          "240: #endif",
          "241:   for (y=0; y < (ssize_t) Cr_image->rows; y++)",
          "",
          "[Removed Lines]",
          "236:   progress=0;",
          "238:   #pragma omp parallel for schedule(static) shared(progress,status) \\",
          "",
          "[Added Lines]",
          "242:   Ci_view=AcquireAuthenticCacheView(Ci_image,exception);",
          "243:   status=MagickTrue;",
          "246:   rows=MagickMin(Cr_image->rows,Ci_image->rows);",
          "248:   #pragma omp parallel for schedule(static) shared(progress,status) \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "253:     register ssize_t",
          "254:       x;",
          "261:     Bi=GetCacheViewVirtualPixels(Bi_view,0,y,Cr_image->columns,1,exception);",
          "262:     Cr=QueueCacheViewAuthenticPixels(Cr_view,0,y,Cr_image->columns,1,exception);",
          "263:     Ci=QueueCacheViewAuthenticPixels(Ci_view,0,y,Ci_image->columns,1,exception);",
          "",
          "[Removed Lines]",
          "256:     if (status == MagickFalse)",
          "257:       continue;",
          "258:     Ar=GetCacheViewVirtualPixels(Ar_view,0,y,Cr_image->columns,1,exception);",
          "259:     Ai=GetCacheViewVirtualPixels(Ai_view,0,y,Cr_image->columns,1,exception);",
          "260:     Br=GetCacheViewVirtualPixels(Br_view,0,y,Cr_image->columns,1,exception);",
          "",
          "[Added Lines]",
          "266:     if (status == MagickFalse)",
          "267:       continue;",
          "268:     Ar=GetCacheViewVirtualPixels(Ar_view,0,y,columns,1,exception);",
          "269:     Ai=GetCacheViewVirtualPixels(Ai_view,0,y,columns,1,exception);",
          "270:     Br=GetCacheViewVirtualPixels(Br_view,0,y,columns,1,exception);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "265:         (Br == (const Quantum *) NULL) || (Bi == (const Quantum *) NULL) ||",
          "266:         (Cr == (Quantum *) NULL) || (Ci == (Quantum *) NULL))",
          "267:       {",
          "269:         continue;",
          "270:       }",
          "271:     for (x=0; x < (ssize_t) Cr_image->columns; x++)",
          "",
          "[Removed Lines]",
          "268:         status=MagickFalse;",
          "",
          "[Added Lines]",
          "278:         status=MagickFalse;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61135001a625364e29bdce83832f043eebde7b5a",
      "candidate_info": {
        "commit_hash": "61135001a625364e29bdce83832f043eebde7b5a",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/61135001a625364e29bdce83832f043eebde7b5a",
        "files": [
          "MagickCore/fourier.c",
          "coders/gif.c"
        ],
        "message": "https://github.com/ImageMagick/ImageMagick/issues/1595",
        "before_after_code_files": [
          "MagickCore/fourier.c||MagickCore/fourier.c",
          "coders/gif.c||coders/gif.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/fourier.c||MagickCore/fourier.c"
          ],
          "candidate": [
            "MagickCore/fourier.c||MagickCore/fourier.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/fourier.c||MagickCore/fourier.c": [
          "File: MagickCore/fourier.c -> MagickCore/fourier.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:   Cr_view=AcquireAuthenticCacheView(Cr_image,exception);",
          "227:   Ci_view=AcquireAuthenticCacheView(Ci_image,exception);",
          "228:   status=MagickTrue;",
          "230: #if defined(MAGICKCORE_OPENMP_SUPPORT)",
          "232:     magick_number_threads(images,complex_images,images->rows,1L)",
          "233: #endif",
          "234:   for (y=0; y < (ssize_t) images->rows; y++)",
          "",
          "[Removed Lines]",
          "229:   progress=0;",
          "231:   #pragma omp parallel for schedule(static) shared(progress,status) \\",
          "",
          "[Added Lines]",
          "229:   progress=0;",
          "231:   #pragma omp parallel for schedule(static) shared(progress,status) \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "246:     register ssize_t",
          "247:       x;",
          "256:       MagickMax(Br_image->columns,Cr_image->columns),1,exception);",
          "257:     Bi=GetCacheViewVirtualPixels(Bi_view,0,y,",
          "258:       MagickMax(Bi_image->columns,Ci_image->columns),1,exception);",
          "",
          "[Removed Lines]",
          "249:     if (status == MagickFalse)",
          "250:       continue;",
          "251:     Ar=GetCacheViewVirtualPixels(Ar_view,0,y,",
          "252:       MagickMax(Ar_image->columns,Cr_image->columns),1,exception);",
          "253:     Ai=GetCacheViewVirtualPixels(Ai_view,0,y,",
          "254:       MagickMax(Ai_image->columns,Ci_image->columns),1,exception);",
          "255:     Br=GetCacheViewVirtualPixels(Br_view,0,y,",
          "",
          "[Added Lines]",
          "249:     if (status == MagickFalse)",
          "250:       continue;",
          "251:     Ar=GetCacheViewVirtualPixels(Ar_view,0,y,Cr_image->columns,1,exception);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "262:         (Br == (const Quantum *) NULL) || (Bi == (const Quantum *) NULL) ||",
          "263:         (Cr == (Quantum *) NULL) || (Ci == (Quantum *) NULL))",
          "264:       {",
          "266:         continue;",
          "267:       }",
          "268:     for (x=0; x < (ssize_t) images->columns; x++)",
          "269:     {",
          "271:         i;",
          "273:       for (i=0; i < (ssize_t) GetPixelChannels(images); i++)",
          "",
          "[Removed Lines]",
          "265:         status=MagickFalse;",
          "270:       register ssize_t",
          "",
          "[Added Lines]",
          "261:         status=MagickFalse;",
          "266:       register ssize_t",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "289:           }",
          "290:           case DivideComplexOperator:",
          "291:           {",
          "295:             gamma=PerceptibleReciprocal(Br[i]*Br[i]+Bi[i]*Bi[i]+snr);",
          "296:             Cr[i]=gamma*(Ar[i]*Br[i]+Ai[i]*Bi[i]);",
          "297:             Ci[i]=gamma*(Ai[i]*Br[i]-Ar[i]*Bi[i]);",
          "298:             break;",
          "301:           {",
          "302:             Cr[i]=sqrt(Ar[i]*Ar[i]+Ai[i]*Ai[i]);",
          "303:             Ci[i]=atan2(Ai[i],Ar[i])/(2.0*MagickPI)+0.5;",
          "304:             break;",
          "307:           {",
          "308:             Cr[i]=QuantumScale*(Ar[i]*Br[i]-Ai[i]*Bi[i]);",
          "309:             Ci[i]=QuantumScale*(Ai[i]*Br[i]+Ar[i]*Bi[i]);",
          "",
          "[Removed Lines]",
          "292:             double",
          "293:               gamma;",
          "299:           }",
          "300:           case MagnitudePhaseComplexOperator:",
          "305:           }",
          "306:           case MultiplyComplexOperator:",
          "",
          "[Added Lines]",
          "288:             double",
          "289:               gamma;",
          "295:           }",
          "296:           case MagnitudePhaseComplexOperator:",
          "301:           }",
          "302:           case MultiplyComplexOperator:",
          "",
          "---------------"
        ],
        "coders/gif.c||coders/gif.c": [
          "File: coders/gif.c -> coders/gif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "673:       {",
          "674:         waiting_code=(short) GetPixelIndex(image,p);",
          "675:         p+=GetPixelChannels(image);",
          "676:       }",
          "677:     for (x=(ssize_t) (y == 0 ? 1 : 0); x < (ssize_t) image->columns; x++)",
          "678:     {",
          "680:         Probe hash table.",
          "683:       p+=GetPixelChannels(image);",
          "684:       k=(ssize_t) (((size_t) index << (MaxGIFBits-8))+waiting_code);",
          "685:       if (k >= MaxHashTable)",
          "",
          "[Removed Lines]",
          "682:       index=(Quantum) ((size_t) GetPixelIndex(image,p) & 0xff);",
          "",
          "[Added Lines]",
          "676:       }",
          "677:     for (x=(ssize_t) (y == 0 ? 1 : 0); x < (ssize_t) image->columns; x++)",
          "683:       displacement=1;",
          "684:       index=(Quantum) ((size_t) GetPixelIndex(image,p) & 0xff);",
          "",
          "---------------"
        ]
      }
    }
  ]
}