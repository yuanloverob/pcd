{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fbf6136c78d1754501203449d0d16cef3ab25663",
      "candidate_info": {
        "commit_hash": "fbf6136c78d1754501203449d0d16cef3ab25663",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fbf6136c78d1754501203449d0d16cef3ab25663",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/shell4.test"
        ],
        "message": "Do not attempt to test the shell \".trace\" command in SQLITE_OMIT_TRACE builds.\n\nFossilOrigin-Name: 3839e9098107604e1526c2b1e813c019607077dfe39d7eeb92f3466518dec3b1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/shell4.test||test/shell4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d2cca36adc69d2c8e7707d70cbd75c497eae6a1a3f8a9dd18249ca6804c9db5f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/shell4.test||test/shell4.test": [
          "File: test/shell4.test -> test/shell4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:        [regexp {Autoindex Inserts} $res]",
          "107: } {1 1 1}",
          "109: do_test shell4-2.1 {",
          "110:   catchcmd \":memory:\" \"CREATE TABLE t1(x);\\n.trace --unknown\"",
          "111: } {1 {Unknown option \"--unknown\" on \".trace\"}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: ifcapable trace {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115: do_test shell4-2.3 {",
          "116:   catchcmd \":memory:\" \".trace stdout\\n.dump\\n.trace off\\n\"",
          "117: } {/^0 {PRAGMA.*}$/}",
          "119: do_test shell4-2.4 {",
          "120:   catchcmd \":memory:\" \".trace stdout\\nCREATE TABLE t1(x);SELECT * FROM t1;\"",
          "121: } {0 {CREATE TABLE t1(x);",
          "",
          "[Removed Lines]",
          "118: ifcapable trace {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51690f26bcaab815650286c16362b36d39977cea",
      "candidate_info": {
        "commit_hash": "51690f26bcaab815650286c16362b36d39977cea",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/51690f26bcaab815650286c16362b36d39977cea",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix to check-in [5d9a369301a65f32] so that it compiles without SQLITE_DEBUG.\n\nFossilOrigin-Name: fefe2d046725254367f9f82a8c8cb137e8b75dbbf4bc48debf0649479ff2f0c2",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1239:     }",
          "1240:   }else if( rc==SQLITE_ERROR ){",
          "1242:   }",
          "1244:   return rc;",
          "",
          "[Removed Lines]",
          "1241:     rc = sqlite3Fts3Corrupt();",
          "",
          "[Added Lines]",
          "1241:     rc = FTS_CORRUPT_VTAB;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4dbd398d640852d4a696d68c72ee039968023d402a8053b5e6b4ef1d75e982a8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7d687c9d3f4ef36a8bfba2f635e852115cad006",
      "candidate_info": {
        "commit_hash": "f7d687c9d3f4ef36a8bfba2f635e852115cad006",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f7d687c9d3f4ef36a8bfba2f635e852115cad006",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5update.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a memory leak in fts5.\n\nFossilOrigin-Name: ff3b011f17f4f02e486f3c8de607f62eddf3b86562e2df82dba57ea166994b65",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5update.test||ext/fts5/test/fts5update.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3403:   pNew->bRev = (0!=(flags & FTS5INDEX_QUERY_DESC));",
          "3404:   pNew->bSkipEmpty = (0!=(flags & FTS5INDEX_QUERY_SKIPEMPTY));",
          "3405:   pNew->pColset = pColset;",
          "3407:   if( (flags & FTS5INDEX_QUERY_NOOUTPUT)==0 ){",
          "3408:     fts5IterSetOutputCb(&p->rc, pNew);",
          "3409:   }",
          "",
          "[Removed Lines]",
          "3406:   fts5StructureRef(pStruct);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5update.test||ext/fts5/test/fts5update.test": [
          "File: ext/fts5/test/fts5update.test -> ext/fts5/test/fts5update.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:   }",
          "135: } {}",
          "137: }",
          "138: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140: reset_db",
          "141: do_catchsql_test 4.0 { CREATE VIRTUAL TABLE t1 USING fts5(a,b,c); } {0 {}}",
          "142: do_catchsql_test 4.1 { DELETE FROM t1 WHERE t1 MATCH 'f*'; } {0 {}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3291b2a6fe6f38ae91b933e5cd2bf7d97432374b4fb1fccd92b4bd759b02ee06",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c542fa85735fbea00c9620f72e551041855e4505",
      "candidate_info": {
        "commit_hash": "c542fa85735fbea00c9620f72e551041855e4505",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c542fa85735fbea00c9620f72e551041855e4505",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/with1.test"
        ],
        "message": "Add test cases for the fix in the previous commit.\n\nFossilOrigin-Name: c1057b2a60add08e5c80ef2a53932a690b096f2eb03c7de863844deaa8fc9d53",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/with1.test||test/with1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d2fe370cafa9b11f6c3eb4e1c3be48d9d2610b9d2f9d9ebf9e50267f9079dfc0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/with1.test||test/with1.test": [
          "File: test/with1.test -> test/with1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1117:   SELECT * FROM v3;",
          "1118: } {1 A C D E 1 A F G H 1 B C D E 1 B F G H 2 A C D E 2 A F G H 2 B C D E 2 B F G H 3 A C D E 3 A F G H 3 B C D E 3 B F G H 4 A C D E 4 A F G H 4 B C D E 4 B F G H 5 A C D E 5 A F G H 5 B C D E 5 B F G H}",
          "1120: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1120: #-------------------------------------------------------------------------",
          "1121: reset_db",
          "1122: do_execsql_test 24.1 {",
          "1123:   CREATE TABLE t1(a, b, c);",
          "1124:   CREATE VIEW v1 AS SELECT max(a), min(b) FROM t1 GROUP BY c;",
          "1125: }",
          "1126: do_test 24.1 {",
          "1127:   set program [db eval {EXPLAIN SELECT 1 FROM v1,v1,v1}]",
          "1128:   expr [lsearch $program OpenDup]>0",
          "1129: } {1}",
          "1130: do_execsql_test 24.2 {",
          "1131:   ATTACH \"\" AS aux;",
          "1132:   CREATE VIEW aux.v3 AS VALUES(1);",
          "1133:   CREATE VIEW main.v3 AS VALUES(3);",
          "1135:   CREATE VIEW aux.v2 AS SELECT * FROM v3;",
          "1136:   CREATE VIEW main.v2 AS SELECT * FROM v3;",
          "1138:   SELECT * FROM main.v2 AS a, aux.v2 AS b, aux.v2 AS c, main.v2 AS d;",
          "1139: } {",
          "1140:   3 1 1 3",
          "1141: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc96192eefed7a08931454035cb25210529cc46c",
      "candidate_info": {
        "commit_hash": "dc96192eefed7a08931454035cb25210529cc46c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dc96192eefed7a08931454035cb25210529cc46c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pager.c",
          "src/vdbeaux.c"
        ],
        "message": "Ensure all file names passed to the VFS layer are double-zero terminated.\n\nFossilOrigin-Name: 251230cf43c591cf49cf9d2f392581c57d334b791bc3407814d216b5999c32f4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pager.c||src/pager.c",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2e98b42fcb7bc38e22808a9dc1d7a4231ed08ffa97c9f08f33e6e8cd8726856c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1359:     len = 0;",
          "1360:   }",
          "1361:   zMaster[len] = '\\0';",
          "1363:   return SQLITE_OK;",
          "1364: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1362:   zMaster[len+1] = '\\0';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2595:   rc = sqlite3OsFileSize(pMaster, &nMasterJournal);",
          "2596:   if( rc!=SQLITE_OK ) goto delmaster_out;",
          "2597:   nMasterPtr = pVfs->mxPathname+1;",
          "2599:   if( !zMasterJournal ){",
          "2600:     rc = SQLITE_NOMEM_BKPT;",
          "2601:     goto delmaster_out;",
          "2602:   }",
          "2604:   rc = sqlite3OsRead(pMaster, zMasterJournal, (int)nMasterJournal, 0);",
          "2605:   if( rc!=SQLITE_OK ) goto delmaster_out;",
          "2606:   zMasterJournal[nMasterJournal] = 0;",
          "2608:   zJournal = zMasterJournal;",
          "2609:   while( (zJournal-zMasterJournal)<nMasterJournal ){",
          "",
          "[Removed Lines]",
          "2598:   zMasterJournal = sqlite3Malloc(nMasterJournal + nMasterPtr + 1);",
          "2603:   zMasterPtr = &zMasterJournal[nMasterJournal+1];",
          "",
          "[Added Lines]",
          "2599:   zMasterJournal = sqlite3Malloc(nMasterJournal + nMasterPtr + 2);",
          "2604:   zMasterPtr = &zMasterJournal[nMasterJournal+2];",
          "2608:   zMasterJournal[nMasterJournal+1] = 0;",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2651:     nMainFile = sqlite3Strlen30(zMainFile);",
          "2653:     if( zMaster==0 ) return SQLITE_NOMEM_BKPT;",
          "2654:     do {",
          "2655:       u32 iRandom;",
          "",
          "[Removed Lines]",
          "2652:     zMaster = sqlite3MPrintf(db, \"%s-mjXXXXXX9XXz\", zMainFile);",
          "",
          "[Added Lines]",
          "2652:     zMaster = sqlite3MPrintf(db, \"%s-mjXXXXXX9XXz%c%c\", zMainFile, 0, 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}