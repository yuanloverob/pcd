{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9c7e44cddd76c19d8ac034dcce2da1ed978a6f02",
      "candidate_info": {
        "commit_hash": "9c7e44cddd76c19d8ac034dcce2da1ed978a6f02",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9c7e44cddd76c19d8ac034dcce2da1ed978a6f02",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/fuzzdata8.db"
        ],
        "message": "Improved oversized cell detection when updating ptrmap pages in balance_nonroot().\n\nFossilOrigin-Name: aa61435a4c3800f023788081c1342ad6a05a41449a424fa6c039d5ca46072256",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 167b91df77fff1a84791f6ab5f72239b90475475be690a838248119b6dd312f0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7747:     MemPage *p = apOld[i];",
          "7748:     b.apEnd[k] = p->aDataEnd;",
          "7749:     b.ixNx[k] = cntOld[i];",
          "7750:     if( !leafData ){",
          "7751:       k++;",
          "7752:       b.apEnd[k] = pParent->aDataEnd;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7755:     if( k && b.ixNx[k]==b.ixNx[k-1] ){",
          "7757:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7978:   if( ISAUTOVACUUM ){",
          "7979:     MemPage *pOld;",
          "7980:     MemPage *pNew = pOld = apNew[0];",
          "7982:     int cntOldNext = pNew->nCell + pNew->nOverflow;",
          "7984:     int iNew = 0;",
          "7985:     int iOld = 0;",
          "7987:     for(i=0; i<b.nCell; i++){",
          "7988:       u8 *pCell = b.apCell[i];",
          "7991:         cntOldNext += pOld->nCell + pOld->nOverflow + !leafData;",
          "7993:       }",
          "7994:       if( i==cntNew[iNew] ){",
          "7995:         pNew = apNew[++iNew];",
          "",
          "[Removed Lines]",
          "7981:     u8 *aOld = pNew->aData;",
          "7983:     int usableSize = pBt->usableSize;",
          "7989:       if( i==cntOldNext ){",
          "7990:         pOld = (++iOld)<nNew ? apNew[iOld] : apOld[iOld];",
          "7992:         aOld = pOld->aData;",
          "",
          "[Added Lines]",
          "7995:       while( i==cntOldNext ){",
          "7996:         iOld++;",
          "7997:         assert( iOld<nNew || iOld<nOld );",
          "7998:         pOld = iOld<nNew ? apNew[iOld] : apOld[iOld];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8005:       if( iOld>=nNew",
          "8006:        || pNew->pgno!=aPgno[iOld]",
          "8008:       ){",
          "8009:         if( !leafCorrection ){",
          "8010:           ptrmapPut(pBt, get4byte(pCell), PTRMAP_BTREE, pNew->pgno, &rc);",
          "",
          "[Removed Lines]",
          "8007:        || !SQLITE_WITHIN(pCell,aOld,&aOld[usableSize])",
          "",
          "[Added Lines]",
          "8014:        || !SQLITE_WITHIN(pCell,pOld->aData,pOld->aDataEnd)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b6d861e523f7b34a6c9f4603a5bfe18fe323d00a",
      "candidate_info": {
        "commit_hash": "b6d861e523f7b34a6c9f4603a5bfe18fe323d00a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b6d861e523f7b34a6c9f4603a5bfe18fe323d00a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c"
        ],
        "message": "Add a missing translation from table column numbers to storage table numbers while processing constraints on an UPDATE statement. Ticket [9621dd78a024d07a]\n\nFossilOrigin-Name: 361ea81ae8a13e7d2ec4c2412f30e049bb6ee320980d502c86bedc315cdd3bc0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 591973217f1caf24cde91dc15b7edca2edda05dac8ae2b2cd8d71e7aa072f7d1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1982:               addrJump = addrUniqueOk;",
          "1983:               op = OP_Eq;",
          "1984:             }",
          "1985:             sqlite3VdbeAddOp4(v, op,",
          "1986:                 regOldData+1+x, addrJump, regCmp+i, p4, P4_COLLSEQ",
          "1987:             );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1985:             x = sqlite3TableColumnToStorage(pTab, x);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b2ec0efa16ae96a56825152fd8948d67f2797d9",
      "candidate_info": {
        "commit_hash": "9b2ec0efa16ae96a56825152fd8948d67f2797d9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9b2ec0efa16ae96a56825152fd8948d67f2797d9",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New dbsqlfuzz test cases add to test/fuzzdata8.db.\n\nFossilOrigin-Name: 873aa46da3d0f97784cad94828fc367bb2ceb13d5ece2e105320f404b3971c85",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: dff24c6c7a4e7623984b5bb24c2ff14fe079dc49a0ad048cbfc66f84c08875b0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9252df49692952ff4f83a73286dcc380e53a15e2",
      "candidate_info": {
        "commit_hash": "9252df49692952ff4f83a73286dcc380e53a15e2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9252df49692952ff4f83a73286dcc380e53a15e2",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases in test/fuzzdata8.db.\n\nFossilOrigin-Name: 6e92d71c24c6039e7116f02fc5f39b2b87efcd3674ea828077c03d760bf49c45",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f237f60e4fa9171dfe9a77c8637595c2701e971034d41bd6018944e8b2b27a6f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cc8feae7eccac1a43e00e5d7325b07767e92a3b",
      "candidate_info": {
        "commit_hash": "8cc8feae7eccac1a43e00e5d7325b07767e92a3b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8cc8feae7eccac1a43e00e5d7325b07767e92a3b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/whereexpr.c",
          "test/window1.test"
        ],
        "message": "When computing dependencies on WHERE-clause terms, be sure to take into account the FILTER clause of aggregate functions.  Problem reported by Manuel Rigger.\n\nFossilOrigin-Name: 3cc2b5709e66ef605c3b85ed13ae6cc9c3090e864ebc18859db36284b8f715b6",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/whereexpr.c||src/whereexpr.c",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c538601e4c979ee59f18d19e6eb6296cebfa580fb029a18d5a3f0dd9393acb75",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/whereexpr.c||src/whereexpr.c": [
          "File: src/whereexpr.c -> src/whereexpr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1516:     mask |= sqlite3WhereExprListUsage(pMaskSet, p->x.pList);",
          "1517:   }",
          "1518: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "1520:     mask |= sqlite3WhereExprListUsage(pMaskSet, p->y.pWin->pPartition);",
          "1521:     mask |= sqlite3WhereExprListUsage(pMaskSet, p->y.pWin->pOrderBy);",
          "1522:   }",
          "1523: #endif",
          "1524:   return mask;",
          "",
          "[Removed Lines]",
          "1519:   if( p->op==TK_FUNCTION && p->y.pWin ){",
          "",
          "[Added Lines]",
          "1519:   if( (p->op==TK_FUNCTION || p->op==TK_AGG_FUNCTION) && p->y.pWin ){",
          "1522:     mask |= sqlite3WhereExprUsage(pMaskSet, p->y.pWin->pFilter);",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1329:   SELECT c FROM v0 WHERE c BETWEEN -10 AND 20;",
          "1330: } {}",
          "1334: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1332: # 2019-20-20 mrigger reported problem with a FILTER clause on an aggregate",
          "1333: # in a join.",
          "1334: #",
          "1335: reset_db",
          "1336: do_execsql_test 38.10 {",
          "1337:   CREATE TABLE t0(c0);",
          "1338:   CREATE TABLE t1(c0, c1 UNIQUE);",
          "1339:   INSERT INTO t0(c0) VALUES(1);",
          "1340:   INSERT INTO t1(c0,c1) VALUES(2,3);",
          "1341:   SELECT COUNT(*) FROM t0, t1 WHERE (SELECT AVG(0) FILTER(WHERE t1.c1));",
          "1342: } {0}",
          "1343: do_execsql_test 38.20 {",
          "1344:   SELECT COUNT(*), AVG(1) FILTER(WHERE t1.c1) FROM t0, t1;",
          "1345: } {1 1.0}",
          "1346: do_execsql_test 38.30 {",
          "1347:   SELECT COUNT(*) FROM t0, t1 WHERE (SELECT AVG(1) FILTER(WHERE t1.c1));",
          "1348: } {1}",
          "",
          "---------------"
        ]
      }
    }
  ]
}