{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ba829771f09785d00659655b870de4786bf321d9",
      "candidate_info": {
        "commit_hash": "ba829771f09785d00659655b870de4786bf321d9",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ba829771f09785d00659655b870de4786bf321d9",
        "files": [
          "arch/ARM/ARMInstPrinter.c",
          "arch/ARM/ARMMappingInsnOp.inc"
        ],
        "message": "arm: fix issue #746",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c",
          "arch/ARM/ARMMappingInsnOp.inc||arch/ARM/ARMMappingInsnOp.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "609:        if (Opcode == ARM_t2STMDB_UPD)",
          "610:         SStream_concat0(O, \".w\");",
          "611:        SStream_concat0(O, \"\\t\");",
          "612:        printRegisterList(MI, 4, O);",
          "613:        return;",
          "614:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "613:        if (MI->csh->detail) {",
          "614:         MI->flat_insn->detail->regs_read[MI->flat_insn->detail->regs_read_count] = ARM_REG_SP;",
          "615:         MI->flat_insn->detail->regs_read_count++;",
          "616:         MI->flat_insn->detail->regs_write[MI->flat_insn->detail->regs_write_count] = ARM_REG_SP;",
          "617:         MI->flat_insn->detail->regs_write_count++;",
          "618:        }",
          "",
          "---------------"
        ],
        "arch/ARM/ARMMappingInsnOp.inc||arch/ARM/ARMMappingInsnOp.inc": [
          "File: arch/ARM/ARMMappingInsnOp.inc -> arch/ARM/ARMMappingInsnOp.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "962:  { CS_AC_READ, CS_AC_READ, 0 }",
          "963: },",
          "966: },",
          "968:  { CS_AC_READ, CS_AC_READ, 0 }",
          "",
          "[Removed Lines]",
          "965:  { CS_AC_READ | CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "965:  { CS_AC_READ, 0 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1b9f2c064ea0027089eb8f1f739bc313ebb9a3e",
      "candidate_info": {
        "commit_hash": "b1b9f2c064ea0027089eb8f1f739bc313ebb9a3e",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/b1b9f2c064ea0027089eb8f1f739bc313ebb9a3e",
        "files": [
          "cstool/cstool.c",
          "include/capstone/platform.h"
        ],
        "message": "Fix build under VS2012 (i.e. MSC_VER = 1700)\n\ncstool.c currently imports inttypes.h, which breaks\nbuilding on older Visual Studio versions (I've been\ntesting 2012). This commit removes the explicit include\nof inttypes.h, which is already handled in platform.h\n(which is included by capstone.h). A define for the\nfunction strtoull (used by cstool) has also been added\nto platform.h for the case where MSC_VER <= 1700.\n\nI don't know what effect this will have on OS X builds\nas I'm unable to test on that platform.\n\nAlso, cstool.c doesn't need to include stdio.h\nbecause it's already included by capstone.h.",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c",
          "include/capstone/platform.h||include/capstone/platform.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <string.h>",
          "5: #include <ctype.h>",
          "6: #include <errno.h>",
          "",
          "[Removed Lines]",
          "2: #include <stdio.h>",
          "3: #include <inttypes.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/capstone/platform.h||include/capstone/platform.h": [
          "File: include/capstone/platform.h -> include/capstone/platform.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "95: #define PRIX32        \"X\"",
          "96: #endif  // defined(_MSC_VER) && _MSC_VER <= 1700",
          "98: #define PRId64        __PRI_64_LENGTH_MODIFIER__ \"d\"",
          "99: #define PRIi64        __PRI_64_LENGTH_MODIFIER__ \"i\"",
          "100: #define PRIo64        __PRI_64_LENGTH_MODIFIER__ \"o\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98: #if defined(_MSC_VER) && _MSC_VER <= 1700",
          "100: #define strtoull _strtoui64",
          "101: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61a503165c24c32d663efe8b0f38069c59ddf4fd",
      "candidate_info": {
        "commit_hash": "61a503165c24c32d663efe8b0f38069c59ddf4fd",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/61a503165c24c32d663efe8b0f38069c59ddf4fd",
        "files": [
          "arch/X86/X86MappingInsnOp.inc"
        ],
        "message": "x86: fix instruction MOVAPS & MOVAPD. see issue #809",
        "before_after_code_files": [
          "arch/X86/X86MappingInsnOp.inc||arch/X86/X86MappingInsnOp.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86MappingInsnOp.inc||arch/X86/X86MappingInsnOp.inc": [
          "File: arch/X86/X86MappingInsnOp.inc -> arch/X86/X86MappingInsnOp.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "5915: },",
          "5917:  0,",
          "5919: },",
          "5921:  0,",
          "",
          "[Removed Lines]",
          "5918:  { CS_AC_READ, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "5918:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5931: },",
          "5933:  0,",
          "5935: },",
          "5937:  0,",
          "",
          "[Removed Lines]",
          "5934:  { CS_AC_READ, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "5934:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1ab6455422c6e23ad72e80c869517b158f0a521b",
      "candidate_info": {
        "commit_hash": "1ab6455422c6e23ad72e80c869517b158f0a521b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/1ab6455422c6e23ad72e80c869517b158f0a521b",
        "files": [
          "bindings/java/capstone/M68k_const.java",
          "bindings/ocaml/m68k_const.ml",
          "bindings/python/capstone/m68k_const.py"
        ],
        "message": "bindings: update after recent changes on some M68k enums",
        "before_after_code_files": [
          "bindings/javcapstone/M68k_const.java||bindings/java/capstone/M68k_const.java",
          "bindings/ocaml/m68k_const.ml||bindings/ocaml/m68k_const.ml",
          "bindings/python/capstone/m68k_const.py||bindings/python/capstone/m68k_const.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/javcapstone/M68k_const.java||bindings/java/capstone/M68k_const.java": [
          "File: bindings/javcapstone/M68k_const.java -> bindings/java/capstone/M68k_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "481:  public static final int M68K_INS_ENDING = 375;",
          "485:  public static final int M68K_GRP_INVALID = 0;",
          "486:  public static final int M68K_GRP_ENDING = 1;",
          "",
          "---------------"
        ],
        "bindings/ocaml/m68k_const.ml||bindings/ocaml/m68k_const.ml": [
          "File: bindings/ocaml/m68k_const.ml -> bindings/ocaml/m68k_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "475: let _M68K_INS_TST = 372;;",
          "476: let _M68K_INS_UNLK = 373;;",
          "477: let _M68K_INS_UNPK = 374;;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "478: let _M68K_INS_ENDING = 375;;",
          "480: (* Group of M68K instructions *)",
          "482: let _M68K_GRP_INVALID = 0;;",
          "483: let _M68K_GRP_ENDING = 1;;",
          "",
          "---------------"
        ],
        "bindings/python/capstone/m68k_const.py||bindings/python/capstone/m68k_const.py": [
          "File: bindings/python/capstone/m68k_const.py -> bindings/python/capstone/m68k_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "475: M68K_INS_TST = 372",
          "476: M68K_INS_UNLK = 373",
          "477: M68K_INS_UNPK = 374",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "478: M68K_INS_ENDING = 375",
          "480: # Group of M68K instructions",
          "482: M68K_GRP_INVALID = 0",
          "483: M68K_GRP_ENDING = 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "958ba656e9e461df247de47f5289717e104844b3",
      "candidate_info": {
        "commit_hash": "958ba656e9e461df247de47f5289717e104844b3",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/958ba656e9e461df247de47f5289717e104844b3",
        "files": [
          "arch/ARM/ARMInstPrinter.c",
          "bindings/python/test_arm.py",
          "tests/test_arm.c"
        ],
        "message": "arm: treat ARM address as unsigned\n\nIt should be unsigned because:\n* It does arithmetic operations\n* Format strings have \"%u\" instead of \"%d\"\n\n# Conflicts:\n#\tarch/ARM/ARMInstPrinter.c\n#\tbindings/python/test_arm.py\n#\ttests/test_arm.c",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c",
          "bindings/python/test_arm.py||bindings/python/test_arm.py",
          "tests/test_arm.c||tests/test_arm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "852:   if (ARM_rel_branch(MI->csh, opc)) {",
          "854:    if (MI->csh->mode & CS_MODE_THUMB) {",
          "856:     if (ARM_blx_to_arm_mode(MI->csh, opc)) {",
          "859:     }",
          "860:    } else {",
          "862:    }",
          "865:   } else {",
          "866:    switch(MI->flat_insn->id) {",
          "867:     default:",
          "",
          "[Removed Lines]",
          "855:     imm += (int32_t)MI->address + 4;",
          "858:      imm &= ~3;",
          "861:     imm += (int32_t)MI->address + 8;",
          "864:    printUInt32Bang(O, imm);",
          "",
          "[Added Lines]",
          "853:    uint32_t address;",
          "857:     address = (uint32_t)MI->address + 4;",
          "860:      address &= ~3;",
          "863:     address = (uint32_t)MI->address + 8;",
          "866:    printUInt32Bang(O, address + imm);",
          "",
          "---------------"
        ],
        "bindings/python/test_arm.py||bindings/python/test_arm.py": [
          "File: bindings/python/test_arm.py -> bindings/python/test_arm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: ARM_CODE = b\"\\x86\\x48\\x60\\xf4\\xED\\xFF\\xFF\\xEB\\x04\\xe0\\x2d\\xe5\\x00\\x00\\x00\\x00\\xe0\\x83\\x22\\xe5\\xf1\\x02\\x03\\x0e\\x00\\x00\\xa0\\xe3\\x02\\x30\\xc1\\xe7\\x00\\x00\\x53\\xe3\\x00\\x02\\x01\\xf1\\x05\\x40\\xd0\\xe8\\xf4\\x80\\x00\\x00\"",
          "12: ARM_CODE2 = b\"\\xd1\\xe8\\x00\\xf0\\xf0\\x24\\x04\\x07\\x1f\\x3c\\xf2\\xc0\\x00\\x00\\x4f\\xf0\\x00\\x01\\x46\\x6c\"",
          "14: THUMB_CODE2 = b\"\\x4f\\xf0\\x00\\x01\\xbd\\xe8\\x00\\x88\\xd1\\xe8\\x00\\xf0\\x18\\xbf\\xad\\xbf\\xf3\\xff\\x0b\\x0c\\x86\\xf3\\x00\\x89\\x80\\xf3\\x00\\x8c\\x4f\\xfa\\x99\\xf6\\xd0\\xff\\xa2\\x01\"",
          "15: THUMB_MCLASS = b\"\\xef\\xf3\\x02\\x80\"",
          "16: ARMV8 = b\"\\xe0\\x3b\\xb2\\xee\\x42\\x00\\x01\\xe1\\x51\\xf0\\x7f\\xf5\"",
          "",
          "[Removed Lines]",
          "13: THUMB_CODE = b\"\\x70\\x47\\xeb\\x46\\x83\\xb0\\xc9\\x68\\x1f\\xb1\\x30\\xbf\\xaf\\xf3\\x20\\x84\\x52\\xf8\\x23\\xf0\"",
          "",
          "[Added Lines]",
          "13: THUMB_CODE = b\"\\x70\\x47\\x00\\xf0\\x10\\xe8\\xeb\\x46\\x83\\xb0\\xc9\\x68\\x1f\\xb1\\x30\\xbf\\xaf\\xf3\\x20\\x84\\x52\\xf8\\x23\\xf0\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:             if syntax is not None:",
          "141:                 md.syntax = syntax",
          "142:             md.detail = True",
          "144:                 print_insn_detail(insn)",
          "145:                 print ()",
          "146:         except CsError as e:",
          "",
          "[Removed Lines]",
          "143:             for insn in md.disasm(code, 0x1000):",
          "",
          "[Added Lines]",
          "143:             for insn in md.disasm(code, 0x80001000):",
          "",
          "---------------"
        ],
        "tests/test_arm.c||tests/test_arm.c": [
          "File: tests/test_arm.c -> tests/test_arm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "251: #define THUMB_CODE2 \"\\x4f\\xf0\\x00\\x01\\xbd\\xe8\\x00\\x88\\xd1\\xe8\\x00\\xf0\\x18\\xbf\\xad\\xbf\\xf3\\xff\\x0b\\x0c\\x86\\xf3\\x00\\x89\\x80\\xf3\\x00\\x8c\\x4f\\xfa\\x99\\xf6\\xd0\\xff\\xa2\\x01\"",
          "",
          "[Removed Lines]",
          "248: #define THUMB_CODE \"\\x60\\xf9\\x1f\\x04\\xe0\\xf9\\x4f\\x07\\x70\\x47\\xeb\\x46\\x83\\xb0\\xc9\\x68\\x1f\\xb1\\x30\\xbf\\xaf\\xf3\\x20\\x84\\x52\\xf8\\x23\\xf0\"",
          "",
          "[Added Lines]",
          "248: #define THUMB_CODE \"\\x60\\xf9\\x1f\\x04\\xe0\\xf9\\x4f\\x07\\x70\\x47\\x00\\xf0\\x10\\xe8\\xeb\\x46\\x83\\xb0\\xc9\\x68\\x1f\\xb1\\x30\\xbf\\xaf\\xf3\\x20\\x84\\x52\\xf8\\x23\\xf0\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "298:   },",
          "299:  };",
          "302:  cs_insn *insn;",
          "303:  int i;",
          "304:  size_t count;",
          "",
          "[Removed Lines]",
          "301:  uint64_t address = 0x1000;",
          "",
          "[Added Lines]",
          "301:  uint64_t address = 0x80001000;",
          "",
          "---------------"
        ]
      }
    }
  ]
}