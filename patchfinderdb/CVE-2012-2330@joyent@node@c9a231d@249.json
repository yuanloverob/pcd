{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cfa28690db6532972fc9ec90ff874b400ca3a0a5",
      "candidate_info": {
        "commit_hash": "cfa28690db6532972fc9ec90ff874b400ca3a0a5",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/cfa28690db6532972fc9ec90ff874b400ca3a0a5",
        "files": [
          "lib/child_process.js"
        ],
        "message": "cluster: don't silently drop messages when the write queue gets big",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "329:       return;",
          "330:     }",
          "338:     if (handle) {",
          "",
          "[Removed Lines]",
          "333:     if (channel.writeQueueSize > 1024 * 1024) {",
          "334:       return false;",
          "335:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "380:     writeReq.oncomplete = nop;",
          "383:   };",
          "385:   target.connected = true;",
          "",
          "[Removed Lines]",
          "382:     return true;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "44527e602372839f0f9de1dd5168827e779dd2ef",
      "candidate_info": {
        "commit_hash": "44527e602372839f0f9de1dd5168827e779dd2ef",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/44527e602372839f0f9de1dd5168827e779dd2ef",
        "files": [
          "deps/http_parser/http_parser.c",
          "deps/http_parser/http_parser.h",
          "deps/http_parser/test.c"
        ],
        "message": "deps: upgrade http_parser to joyent/http-parser@b47c44d",
        "before_after_code_files": [
          "deps/http_parser/http_parser.c||deps/http_parser/http_parser.c",
          "deps/http_parser/http_parser.h||deps/http_parser/http_parser.h",
          "deps/http_parser/test.c||deps/http_parser/test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/http_parser/http_parser.c||deps/http_parser/http_parser.c": [
          "File: deps/http_parser/http_parser.c -> deps/http_parser/http_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1734:     if (parser->flags & F_CONNECTION_CLOSE) {",
          "1735:       return 0;",
          "1738:     }",
          "1739:   } else {",
          "1741:     if (parser->flags & F_CONNECTION_KEEP_ALIVE) {",
          "",
          "[Removed Lines]",
          "1736:     } else {",
          "1737:       return 1;",
          "",
          "[Added Lines]",
          "1737:     if (parser->type == HTTP_RESPONSE) {",
          "1743:         return 1;",
          "1744:       }",
          "1745:       if (!(parser->flags & F_CHUNKED) && parser->content_length == -1) {",
          "1746:         return 0;",
          "1747:       }",
          "1748:     }",
          "1749:     return 1;",
          "",
          "---------------"
        ],
        "deps/http_parser/http_parser.h||deps/http_parser/http_parser.h": [
          "File: deps/http_parser/http_parser.h -> deps/http_parser/http_parser.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define HTTP_PARSER_VERSION_MINOR 0",
          "30: #include <sys/types.h>",
          "32: typedef __int8 int8_t;",
          "33: typedef unsigned __int8 uint8_t;",
          "34: typedef __int16 int16_t;",
          "",
          "[Removed Lines]",
          "31: #if defined(_WIN32) && !defined(__MINGW32__) && !defined(_MSC_VER)",
          "",
          "[Added Lines]",
          "31: #if defined(_WIN32) && !defined(__MINGW32__) && (!defined(_MSC_VER) || _MSC_VER<1600)",
          "",
          "---------------"
        ],
        "deps/http_parser/test.c||deps/http_parser/test.c": [
          "File: deps/http_parser/test.c -> deps/http_parser/test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "780: , {.name= \"404 no headers no body\"",
          "781:   ,.type= HTTP_RESPONSE",
          "782:   ,.raw= \"HTTP/1.1 404 Not Found\\r\\n\\r\\n\"",
          "785:   ,.http_major= 1",
          "786:   ,.http_minor= 1",
          "787:   ,.status_code= 404",
          "",
          "[Removed Lines]",
          "783:   ,.should_keep_alive= TRUE",
          "784:   ,.message_complete_on_eof= FALSE",
          "",
          "[Added Lines]",
          "783:   ,.should_keep_alive= FALSE",
          "784:   ,.message_complete_on_eof= TRUE",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "795: , {.name= \"301 no response phrase\"",
          "796:   ,.type= HTTP_RESPONSE",
          "797:   ,.raw= \"HTTP/1.1 301\\r\\n\\r\\n\"",
          "800:   ,.http_major= 1",
          "801:   ,.http_minor= 1",
          "802:   ,.status_code= 301",
          "",
          "[Removed Lines]",
          "798:   ,.should_keep_alive = TRUE",
          "799:   ,.message_complete_on_eof= FALSE",
          "",
          "[Added Lines]",
          "798:   ,.should_keep_alive = FALSE",
          "799:   ,.message_complete_on_eof= TRUE",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1057:     {}",
          "1058:   ,.body= \"\"",
          "1059:   }",
          "1062: };",
          "1064: int",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1061: #define NO_CONTENT_LENGTH_NO_TRANSFER_ENCODING_RESPONSE 13",
          "1066: , {.name= \"neither content-length nor transfer-encoding response\"",
          "1067:   ,.type= HTTP_RESPONSE",
          "1068:   ,.raw= \"HTTP/1.1 200 OK\\r\\n\"",
          "1069:          \"Content-Type: text/plain\\r\\n\"",
          "1070:          \"\\r\\n\"",
          "1071:          \"hello world\"",
          "1072:   ,.should_keep_alive= FALSE",
          "1073:   ,.message_complete_on_eof= TRUE",
          "1074:   ,.http_major= 1",
          "1075:   ,.http_minor= 1",
          "1076:   ,.status_code= 200",
          "1077:   ,.num_headers= 1",
          "1078:   ,.headers=",
          "1079:     { { \"Content-Type\", \"text/plain\" }",
          "1080:     }",
          "1081:   ,.body= \"hello world\"",
          "1082:   }",
          "1084: #define NO_HEADERS_NO_BODY_204 14",
          "1085: , {.name= \"204 no headers no body\"",
          "1086:   ,.type= HTTP_RESPONSE",
          "1087:   ,.raw= \"HTTP/1.1 204 No Content\\r\\n\\r\\n\"",
          "1088:   ,.should_keep_alive= TRUE",
          "1089:   ,.message_complete_on_eof= FALSE",
          "1090:   ,.http_major= 1",
          "1091:   ,.http_minor= 1",
          "1092:   ,.status_code= 204",
          "1093:   ,.num_headers= 0",
          "1094:   ,.headers= {}",
          "1095:   ,.body_size= 0",
          "1096:   ,.body= \"\"",
          "1097:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1889:   printf(\"response scan 1/2      \");",
          "1890:   test_scan( &responses[TRAILING_SPACE_ON_CHUNKED_BODY]",
          "1892:            , &responses[NO_REASON_PHRASE]",
          "1893:            );",
          "",
          "[Removed Lines]",
          "1891:            , &responses[NO_HEADERS_NO_BODY_404]",
          "",
          "[Added Lines]",
          "1929:            , &responses[NO_HEADERS_NO_BODY_204]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "469cb1b7b7fea6a2543547ce4723f2db699ed9d5",
      "candidate_info": {
        "commit_hash": "469cb1b7b7fea6a2543547ce4723f2db699ed9d5",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/469cb1b7b7fea6a2543547ce4723f2db699ed9d5",
        "files": [
          "src/node_isolate.cc",
          "src/node_isolate.h",
          "src/queue.h"
        ],
        "message": "isolates: replace SLIST with ngx_queue_t",
        "before_after_code_files": [
          "src/node_isolate.cc||src/node_isolate.cc",
          "src/node_isolate.h||src/node_isolate.h",
          "src/queue.h||src/queue.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_isolate.cc||src/node_isolate.cc": [
          "File: src/node_isolate.cc -> src/node_isolate.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: Isolate::Isolate(uv_loop_t* loop) {",
          "39:   loop_ = loop;",
          "41:   v8_isolate_ = v8::Isolate::GetCurrent();",
          "",
          "[Removed Lines]",
          "38:   SLIST_INIT(&at_exit_callbacks_);",
          "",
          "[Added Lines]",
          "38:   ngx_queue_init(&at_exit_callbacks_);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:   it->callback_ = callback;",
          "68:   it->arg_ = arg;",
          "71: }",
          "74: void Isolate::Dispose() {",
          "75:   struct AtExitCallbackInfo* it;",
          "77:   NODE_ISOLATE_CHECK(this);",
          "80:     it->callback_(it->arg_);",
          "81:     delete it;",
          "82:   }",
          "84:   assert(v8_context_->InContext());",
          "85:   v8_context_->Exit();",
          "",
          "[Removed Lines]",
          "70:   SLIST_INSERT_HEAD(&at_exit_callbacks_, it, entries_);",
          "79:   SLIST_FOREACH(it, &at_exit_callbacks_, entries_) {",
          "",
          "[Added Lines]",
          "70:   ngx_queue_insert_head(&at_exit_callbacks_, &it->at_exit_callbacks_);",
          "76:   ngx_queue_t* q;",
          "80:   ngx_queue_foreach(q, &at_exit_callbacks_) {",
          "81:     it = ngx_queue_data(q, struct AtExitCallbackInfo, at_exit_callbacks_);",
          "85:   ngx_queue_init(&at_exit_callbacks_);",
          "",
          "---------------"
        ],
        "src/node_isolate.h||src/node_isolate.h": [
          "File: src/node_isolate.h -> src/node_isolate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #ifndef SRC_NODE_ISOLATE_H_",
          "23: #define SRC_NODE_ISOLATE_H_",
          "26: #include \"v8.h\"",
          "27: #include \"uv.h\"",
          "28: #include \"node_vars.h\"",
          "",
          "[Removed Lines]",
          "25: #include \"queue.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:   Isolate(uv_loop_t* loop);",
          "83:   struct AtExitCallbackInfo {",
          "85:     AtExitCallback callback_;",
          "86:     void* arg_;",
          "87:   };",
          "90:   v8::Persistent<v8::Context> v8_context_;",
          "91:   v8::Isolate* v8_isolate_;",
          "92:   uv_loop_t* loop_;",
          "",
          "[Removed Lines]",
          "84:     SLIST_ENTRY(AtExitCallbackInfo) entries_;",
          "89:   SLIST_HEAD(AtExitCallbacks, AtExitCallbackInfo) at_exit_callbacks_;",
          "",
          "[Added Lines]",
          "83:     ngx_queue_t at_exit_callbacks_;",
          "88:   ngx_queue_t at_exit_callbacks_;",
          "",
          "---------------"
        ],
        "src/queue.h||src/queue.h": [
          "File: src/queue.h -> src/queue.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9eacf93928f3357806e972c3ea79e7694f0cd7eb",
      "candidate_info": {
        "commit_hash": "9eacf93928f3357806e972c3ea79e7694f0cd7eb",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9eacf93928f3357806e972c3ea79e7694f0cd7eb",
        "files": [
          "src/node_crypto.cc"
        ],
        "message": "crypto: root JS objects in HandleScope with Local<>",
        "before_after_code_files": [
          "src/node_crypto.cc||src/node_crypto.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4111:   pbkdf2_req* request = (pbkdf2_req*)req->data;",
          "4112:   delete req;",
          "4115:   if (request->err) {",
          "4117:     argv[1] = Encode(request->key, request->keylen, BINARY);",
          "4118:     memset(request->key, 0, request->keylen);",
          "4119:   } else {",
          "4120:     argv[0] = Exception::Error(String::New(\"PBKDF2 error\"));",
          "4122:   }",
          "4124:   TryCatch try_catch;",
          "",
          "[Removed Lines]",
          "4114:   Handle<Value> argv[2];",
          "4116:     argv[0] = Undefined();",
          "4121:     argv[1] = Undefined();",
          "",
          "[Added Lines]",
          "4114:   Local<Value> argv[2];",
          "4116:     argv[0] = Local<Value>::New(Undefined());",
          "4121:     argv[1] = Local<Value>::New(Undefined());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4285: }",
          "4291:   if (req->error_) {",
          "4292:     char errmsg[256] = \"Operation not supported\";",
          "",
          "[Removed Lines]",
          "4288: void RandomBytesCheck(RandomBytesRequest* req, Handle<Value> argv[2]) {",
          "4289:   HandleScope scope;",
          "",
          "[Added Lines]",
          "4289: void RandomBytesCheck(RandomBytesRequest* req, Local<Value> argv[2]) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4295:       ERR_error_string_n(req->error_, errmsg, sizeof errmsg);",
          "4297:     argv[0] = Exception::Error(String::New(errmsg));",
          "4299:   }",
          "4300:   else {",
          "4302:     Buffer* buffer = Buffer::New(req->data_, req->size_, RandomBytesFree, NULL);",
          "4305:   }",
          "4306: }",
          "",
          "[Removed Lines]",
          "4298:     argv[1] = Null();",
          "4303:     argv[0] = Null();",
          "4304:     argv[1] = buffer->handle_;",
          "",
          "[Added Lines]",
          "4297:     argv[1] = Local<Value>::New(Null());",
          "4302:     argv[0] = Local<Value>::New(Null());",
          "4303:     argv[1] = Local<Object>::New(buffer->handle_);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4312:       container_of(work_req, RandomBytesRequest, work_req_);",
          "4314:   HandleScope scope;",
          "4316:   RandomBytesCheck(req, argv);",
          "4318:   TryCatch tc;",
          "",
          "[Removed Lines]",
          "4315:   Handle<Value> argv[2];",
          "",
          "[Added Lines]",
          "4314:   Local<Value> argv[2];",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4355:     return Undefined();",
          "4356:   }",
          "4357:   else {",
          "4359:     RandomBytesWork<generator>(&req->work_req_);",
          "4360:     RandomBytesCheck(req, argv);",
          "4361:     delete req;",
          "",
          "[Removed Lines]",
          "4358:     Handle<Value> argv[2];",
          "",
          "[Added Lines]",
          "4357:     Local<Value> argv[2];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5b787e84d264caa5b8e183b09725c5ee4fe334a",
      "candidate_info": {
        "commit_hash": "e5b787e84d264caa5b8e183b09725c5ee4fe334a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e5b787e84d264caa5b8e183b09725c5ee4fe334a",
        "files": [
          "deps/v8/src/regexp-macro-assembler-tracer.cc"
        ],
        "message": "deps: fix v8 build error\n\nPull in build error fix from http://code.google.com/p/v8/source/detail?r=9505\nMissed in 5d69bbfbd.",
        "before_after_code_files": [
          "deps/v8/src/regexp-macro-assembler-tracer.cc||deps/v8/src/regexp-macro-assembler-tracer.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/regexp-macro-assembler-tracer.cc||deps/v8/src/regexp-macro-assembler-tracer.cc": [
          "File: deps/v8/src/regexp-macro-assembler-tracer.cc -> deps/v8/src/regexp-macro-assembler-tracer.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:   assembler_(assembler) {",
          "39:   unsigned int type = assembler->Implementation();",
          "40:   ASSERT(type < 5);",
          "42:   PrintF(\"RegExpMacroAssembler%s();\\n\", impl_names[type]);",
          "43: }",
          "",
          "[Removed Lines]",
          "41:   const char* impl_names[4] = {\"IA32\", \"ARM\", \"MIPS\", \"X64\", \"Bytecode\"};",
          "",
          "[Added Lines]",
          "41:   const char* impl_names[] = {\"IA32\", \"ARM\", \"MIPS\", \"X64\", \"Bytecode\"};",
          "",
          "---------------"
        ]
      }
    }
  ]
}