{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ae6197d73084e8a3997baf17125ec16a8ceff749",
      "candidate_info": {
        "commit_hash": "ae6197d73084e8a3997baf17125ec16a8ceff749",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/ae6197d73084e8a3997baf17125ec16a8ceff749",
        "files": [
          "include/uv-win.h"
        ],
        "message": "windows: remove duplicated field\n\nFixes build",
        "before_after_code_files": [
          "include/uv-win.h||include/uv-win.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv-win.h||include/uv-win.h": [
          "File: include/uv-win.h -> include/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "471:   } pending_ipc_info;                                                         \\",
          "472:   uv_write_t* non_overlapped_writes_tail;                                     \\",
          "473:   uv_mutex_t readfile_mutex;                                                  \\",
          "477: #define UV_PIPE_PRIVATE_FIELDS                                                \\",
          "478:   HANDLE handle;                                                              \\",
          "",
          "[Removed Lines]",
          "474:   volatile HANDLE readfile_thread;                                            \\",
          "475:   void* reserved;",
          "",
          "[Added Lines]",
          "474:   volatile HANDLE readfile_thread;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8db42383ad247659d73f9e6812ec4339c0bf4e64",
      "candidate_info": {
        "commit_hash": "8db42383ad247659d73f9e6812ec4339c0bf4e64",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/8db42383ad247659d73f9e6812ec4339c0bf4e64",
        "files": [
          "src/win/process.c",
          "test/test-spawn.c"
        ],
        "message": "windows: sort environment variables before calling CreateProcess",
        "before_after_code_files": [
          "src/win/process.c||src/win/process.c",
          "test/test-spawn.c||test/test-spawn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/process.c||src/win/process.c": [
          "File: src/win/process.c -> src/win/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include <stdlib.h>",
          "26: #include <signal.h>",
          "27: #include <limits.h>",
          "29: #include \"uv.h\"",
          "30: #include \"internal.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #include <malloc.h>",
          "29: #include <wchar.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: typedef struct env_var {",
          "44: } env_var_t;",
          "49: static HANDLE uv_global_job_handle_;",
          "",
          "[Removed Lines]",
          "39:   const char* narrow;",
          "40:   const WCHAR* wide;",
          "42:   DWORD value_len;",
          "43:   int supplied;",
          "46: #define E_V(str) { str \"=\", L##str, sizeof(str), 0, 0 }",
          "",
          "[Added Lines]",
          "41:   const WCHAR* const wide;",
          "42:   const WCHAR* const wide_eq;",
          "46: #define E_V(str) { L##str, L##str L\"=\", sizeof(str) }",
          "49:   E_V(\"HOMEDRIVE\"),",
          "50:   E_V(\"HOMEPATH\"),",
          "51:   E_V(\"LOGONSERVER\"),",
          "52:   E_V(\"PATH\"),",
          "53:   E_V(\"SYSTEMDRIVE\"),",
          "54:   E_V(\"SYSTEMROOT\"),",
          "55:   E_V(\"TEMP\"),",
          "56:   E_V(\"USERDOMAIN\"),",
          "57:   E_V(\"USERNAME\"),",
          "58:   E_V(\"USERPROFILE\"),",
          "59:   E_V(\"WINDIR\"),",
          "60: };",
          "61: static size_t n_required_vars = ARRAY_SIZE(required_vars);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "587: }",
          "604:     }",
          "605:   }",
          "606: }",
          "",
          "[Removed Lines]",
          "597: static void check_required_vars_contains_var(env_var_t* required, int count,",
          "598:     const char* var) {",
          "599:   int i;",
          "600:   for (i = 0; i < count; ++i) {",
          "601:     if (_strnicmp(required[i].narrow, var, required[i].len) == 0) {",
          "602:       required[i].supplied =  1;",
          "603:       return;",
          "",
          "[Added Lines]",
          "605: int env_strncmp(const wchar_t* a, int na, const wchar_t* b) {",
          "606:   wchar_t* a_eq;",
          "607:   wchar_t* b_eq;",
          "608:   wchar_t* A;",
          "609:   wchar_t* B;",
          "610:   int nb;",
          "611:   int r;",
          "613:   if (na < 0) {",
          "614:     a_eq = wcschr(a, L'=');",
          "615:     assert(a_eq);",
          "616:     na = (int)(long)(a_eq - a);",
          "617:   } else {",
          "618:     na--;",
          "619:   }",
          "620:   b_eq = wcschr(b, L'=');",
          "621:   assert(b_eq);",
          "622:   nb = b_eq - b;",
          "624:   A = alloca((na+1) * sizeof(wchar_t));",
          "625:   B = alloca((nb+1) * sizeof(wchar_t));",
          "627:   r = LCMapStringW(LOCALE_INVARIANT, LCMAP_UPPERCASE, a, na, A, na);",
          "628:   assert(r==na);",
          "629:   A[na] = L'\\0';",
          "630:   r = LCMapStringW(LOCALE_INVARIANT, LCMAP_UPPERCASE, b, nb, B, nb);",
          "631:   assert(r==nb);",
          "632:   B[nb] = L'\\0';",
          "634:   while (1) {",
          "635:     wchar_t AA = *A++;",
          "636:     wchar_t BB = *B++;",
          "637:     if (AA < BB) {",
          "638:       return -1;",
          "639:     } else if (AA > BB) {",
          "640:       return 1;",
          "641:     } else if (!AA && !BB) {",
          "642:       return 0;",
          "648: static int qsort_wcscmp(const void *a, const void *b) {",
          "649:   wchar_t* astr = *(wchar_t* const*)a;",
          "650:   wchar_t* bstr = *(wchar_t* const*)b;",
          "651:   return env_strncmp(astr, -1, bstr);",
          "652: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "626:   WCHAR* dst;",
          "627:   WCHAR* ptr;",
          "628:   char** env;",
          "630:   int len;",
          "631:   size_t i;",
          "632:   DWORD var_size;",
          "648:   for (env = env_block; *env; env++) {",
          "649:     int len;",
          "662:     }",
          "665:   }",
          "669:       var_size = GetEnvironmentVariableW(required_vars[i].wide, NULL, 0);",
          "671:       if (var_size != 0) {",
          "672:         env_len += required_vars[i].len;",
          "673:         env_len += var_size;",
          "674:       }",
          "675:     }",
          "676:   }",
          "679:   if (!dst) {",
          "680:     return ERROR_OUTOFMEMORY;",
          "681:   }",
          "695:     }",
          "708:       }",
          "710:     }",
          "711:   }",
          "717:   return 0;",
          "718: }",
          "",
          "[Removed Lines]",
          "634:   env_var_t required_vars[] = {",
          "635:     E_V(\"SYSTEMROOT\"),",
          "636:     E_V(\"SYSTEMDRIVE\"),",
          "637:     E_V(\"TEMP\"),",
          "638:     E_V(\"HOMEDRIVE\"),",
          "639:     E_V(\"HOMEPATH\"),",
          "640:     E_V(\"USERDOMAIN\"),",
          "641:     E_V(\"USERNAME\"),",
          "642:     E_V(\"USERPROFILE\"),",
          "643:     E_V(\"WINDIR\"),",
          "644:     E_V(\"PATH\"),",
          "645:     E_V(\"LOGONSERVER\"),",
          "646:   };",
          "650:     check_required_vars_contains_var(required_vars,",
          "651:                                      ARRAY_SIZE(required_vars),",
          "654:     len = MultiByteToWideChar(CP_UTF8,",
          "655:                               0,",
          "657:                               -1,",
          "658:                               NULL,",
          "659:                               0);",
          "660:     if (len <= 0) {",
          "661:       return GetLastError();",
          "664:     env_len += len;",
          "667:   for (i = 0; i < ARRAY_SIZE(required_vars); ++i) {",
          "668:     if (!required_vars[i].supplied) {",
          "670:       required_vars[i].value_len = var_size;",
          "678:   dst = malloc(env_len * sizeof(WCHAR));",
          "683:   ptr = dst;",
          "685:   for (env = env_block; *env; env++, ptr += len) {",
          "686:     len = MultiByteToWideChar(CP_UTF8,",
          "687:                               0,",
          "689:                               -1,",
          "690:                               ptr,",
          "691:                               (int) (env_len - (ptr - dst)));",
          "692:     if (len <= 0) {",
          "693:       free(dst);",
          "694:       return GetLastError();",
          "696:   }",
          "698:   for (i = 0; i < ARRAY_SIZE(required_vars); ++i) {",
          "699:     if (!required_vars[i].supplied && required_vars[i].value_len!=0) {",
          "700:       wcscpy(ptr, required_vars[i].wide);",
          "701:       ptr += required_vars[i].len - 1;",
          "703:       var_size = GetEnvironmentVariableW(required_vars[i].wide,",
          "704:                                          ptr,",
          "705:                                          required_vars[i].value_len);",
          "706:       if (var_size == 0) {",
          "707:         uv_fatal_error(GetLastError(), \"GetEnvironmentVariableW\");",
          "709:       ptr += required_vars[i].value_len;",
          "",
          "[Added Lines]",
          "675:   size_t env_len = 0;",
          "680:   WCHAR* dst_copy;",
          "681:   WCHAR** ptr_copy;",
          "682:   WCHAR** env_copy;",
          "683:   DWORD* required_vars_value_len = alloca(n_required_vars * sizeof(DWORD*));",
          "688:     if (strchr(*env, '=')) {",
          "689:       len = MultiByteToWideChar(CP_UTF8,",
          "690:                                 0,",
          "692:                                 -1,",
          "693:                                 NULL,",
          "694:                                 0);",
          "695:       if (len <= 0) {",
          "696:         return GetLastError();",
          "697:       }",
          "698:       env_len += len;",
          "699:       env_block_count++;",
          "701:   }",
          "704:   dst_copy = _malloca(env_len * sizeof(WCHAR));",
          "705:   if (!dst_copy) {",
          "706:     return ERROR_OUTOFMEMORY;",
          "707:   }",
          "708:   env_copy = alloca(env_block_count * sizeof(WCHAR*));",
          "710:   ptr = dst_copy;",
          "711:   ptr_copy = env_copy;",
          "712:   for (env = env_block; *env; env++) {",
          "713:     if (strchr(*env, '=')) {",
          "714:       len = MultiByteToWideChar(CP_UTF8,",
          "715:                                 0,",
          "717:                                 -1,",
          "718:                                 ptr,",
          "719:                                 (int) (env_len - (ptr - dst_copy)));",
          "720:       if (len <= 0) {",
          "721:         DWORD err = GetLastError();",
          "722:         _freea(dst_copy);",
          "723:         return err;",
          "724:       }",
          "726:       ptr += len;",
          "727:     }",
          "730:   assert(env_len == ptr - dst_copy);",
          "733:   qsort(env_copy, env_block_count-1, sizeof(wchar_t*), qsort_wcscmp);",
          "736:   for (ptr_copy = env_copy, i = 0; i < n_required_vars; ) {",
          "737:     int cmp;",
          "738:     if (!*ptr_copy) {",
          "739:       cmp = -1;",
          "740:     } else {",
          "741:       cmp = env_strncmp(required_vars[i].wide_eq,",
          "742:                        required_vars[i].len,",
          "744:     }",
          "745:     if (cmp < 0) {",
          "748:       required_vars_value_len[i] = var_size;",
          "753:       i++;",
          "754:     } else {",
          "755:       ptr_copy++;",
          "756:       if (cmp == 0)",
          "757:         i++;",
          "762:   dst = malloc((1+env_len) * sizeof(WCHAR));",
          "764:     _freea(dst_copy);",
          "768:   for (ptr = dst, ptr_copy = env_copy, i = 0;",
          "770:        ptr += len) {",
          "771:     int cmp;",
          "772:     if (i >= n_required_vars) {",
          "773:       cmp = 1;",
          "774:     } else if (!*ptr_copy) {",
          "775:       cmp = -1;",
          "776:     } else {",
          "777:       cmp = env_strncmp(required_vars[i].wide_eq,",
          "778:                         required_vars[i].len,",
          "781:     if (cmp < 0) {",
          "783:       len = required_vars_value_len[i];",
          "784:       if (len) {",
          "785:         wcscpy(ptr, required_vars[i].wide_eq);",
          "786:         ptr += required_vars[i].len;",
          "787:         var_size = GetEnvironmentVariableW(required_vars[i].wide,",
          "788:                                            ptr,",
          "789:                                            (int) (env_len - (ptr - dst)));",
          "791:           uv_fatal_error(GetLastError(), \"GetEnvironmentVariableW\");",
          "792:         }",
          "794:       i++;",
          "795:     } else {",
          "797:       DWORD r;",
          "798:       len = wcslen(*ptr_copy) + 1;",
          "799:       r = wmemcpy_s(ptr, (env_len - (ptr - dst)), *ptr_copy, len);",
          "800:       assert(!r);",
          "801:       ptr_copy++;",
          "802:       if (cmp == 0)",
          "803:         i++;",
          "808:   assert(env_len == (ptr - dst));",
          "811:   _freea(dst_copy);",
          "",
          "---------------"
        ],
        "test/test-spawn.c||test/test-spawn.c": [
          "File: test/test-spawn.c -> test/test-spawn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #  include <basetyps.h>",
          "32: # endif",
          "33: # include <shellapi.h>",
          "34: #else",
          "35: # include <unistd.h>",
          "36: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: # include <wchar.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "899:     \"TEMP=C:\\\\Temp\",",
          "900:     \"BAZ=QUX\",",
          "901:     NULL",
          "902:   };",
          "906:   int result;",
          "907:   WCHAR* str;",
          "908:   WCHAR* env;",
          "914:   }",
          "931:   result = make_program_env(environment, &env);",
          "932:   ASSERT(result == 0);",
          "936:   }",
          "940:   return 0;",
          "941: }",
          "",
          "[Removed Lines]",
          "904:   WCHAR expected[512];",
          "905:   WCHAR* ptr = expected;",
          "910:   for (i = 0; i < sizeof(environment) / sizeof(environment[0]) - 1; i++) {",
          "911:     ptr += uv_utf8_to_utf16(environment[i],",
          "912:                             ptr,",
          "913:                             expected + sizeof(expected) - ptr);",
          "916:   memcpy(ptr, L\"SYSTEMROOT=\", sizeof(L\"SYSTEMROOT=\"));",
          "917:   ptr += sizeof(L\"SYSTEMROOT=\")/sizeof(WCHAR) - 1;",
          "918:   ptr += GetEnvironmentVariableW(L\"SYSTEMROOT\",",
          "919:                                  ptr,",
          "920:                                  expected + sizeof(expected) - ptr);",
          "921:   ++ptr;",
          "923:   memcpy(ptr, L\"SYSTEMDRIVE=\", sizeof(L\"SYSTEMDRIVE=\"));",
          "924:   ptr += sizeof(L\"SYSTEMDRIVE=\")/sizeof(WCHAR) - 1;",
          "925:   ptr += GetEnvironmentVariableW(L\"SYSTEMDRIVE\",",
          "926:                                  ptr,",
          "927:                                  expected + sizeof(expected) - ptr);",
          "928:   ++ptr;",
          "934:   for (str = env; *str; str += wcslen(str) + 1) {",
          "935:     wprintf(L\"%s\\n\", str);",
          "938:   ASSERT(wcscmp(expected, env) == 0);",
          "",
          "[Added Lines]",
          "901:     \"INVALID\",",
          "903:     \"B_Z=QUX\",",
          "904:     \"B\\xe2\\x82\\xacZ=QUX\",",
          "905:     \"B\\xf0\\x90\\x80\\x82Z=QUX\",",
          "906:     \"B\\xef\\xbd\\xa1Z=QUX\",",
          "907:     \"B\\xf0\\xa3\\x91\\x96Z=QUX\",",
          "911:   WCHAR* wenvironment[] = {",
          "912:     L\"BAZ=QUX\",",
          "913:     L\"B_Z=QUX\",",
          "914:     L\"B\\x20acZ=QUX\",",
          "915:     L\"B\\xd800\\xdc02Z=QUX\",",
          "916:     L\"B\\xd84d\\xdc56Z=QUX\",",
          "917:     L\"B\\xff61Z=QUX\",",
          "918:     L\"FOO=BAR\",",
          "921:     L\"TEMP=C:\\\\Temp\",",
          "922:   };",
          "923:   WCHAR* from_env[] = {",
          "926:     L\"HOMEDRIVE\",",
          "927:     L\"HOMEPATH\",",
          "928:     L\"LOGONSERVER\",",
          "929:     L\"PATH\",",
          "930:     L\"USERDOMAIN\",",
          "931:     L\"USERNAME\",",
          "932:     L\"USERPROFILE\",",
          "933:     L\"SYSTEMDRIVE\",",
          "934:     L\"SYSTEMROOT\",",
          "935:     L\"WINDIR\",",
          "938:     L\"ZTHIS_ENV_VARIABLE_DOES_NOT_EXIST\",",
          "939:   };",
          "940:   int found_in_loc_env[ARRAY_SIZE(wenvironment)] = {0};",
          "941:   int found_in_usr_env[ARRAY_SIZE(from_env)] = {0};",
          "942:   WCHAR *expected[ARRAY_SIZE(from_env)];",
          "945:   WCHAR* prev;",
          "948:   for (i = 0; i < ARRAY_SIZE(from_env); i++) {",
          "950:       size_t len = GetEnvironmentVariableW(from_env[i], NULL, 0);",
          "951:       if (len == 0) {",
          "952:         found_in_usr_env[i] = 1;",
          "953:         str = malloc(1 * sizeof(WCHAR));",
          "955:         expected[i] = str;",
          "956:       } else {",
          "957:         size_t name_len = wcslen(from_env[i]);",
          "958:         str = malloc((name_len+1+len) * sizeof(WCHAR));",
          "959:         wmemcpy(str, from_env[i], name_len);",
          "960:         expected[i] = str;",
          "961:         str += name_len;",
          "963:         GetEnvironmentVariableW(from_env[i], str, len);",
          "964:      }",
          "970:   for (str = env, prev = NULL; *str; prev = str, str += wcslen(str) + 1) {",
          "971:     int found = 0;",
          "972: #if 0",
          "973:     _cputws(str);",
          "974:     putchar('\\n');",
          "975: #endif",
          "976:     for (i = 0; i < ARRAY_SIZE(wenvironment) && !found; i++) {",
          "977:       if (!wcscmp(str, wenvironment[i])) {",
          "978:         ASSERT(!found_in_loc_env[i]);",
          "979:         found_in_loc_env[i] = 1;",
          "980:         found = 1;",
          "981:       }",
          "982:     }",
          "983:     for (i = 0; i < ARRAY_SIZE(expected) && !found; i++) {",
          "984:       if (!wcscmp(str, expected[i])) {",
          "985:         ASSERT(!found_in_usr_env[i]);",
          "986:         found_in_usr_env[i] = 1;",
          "987:         found = 1;",
          "988:       }",
          "989:     }",
          "991: #if _WIN32_WINNT >= 0x0600",
          "992:       ASSERT(CompareStringOrdinal(prev, -1, str, -1, TRUE) == 1);",
          "993: #endif",
          "994:     }",
          "999:   for (i = 0; i < ARRAY_SIZE(wenvironment); i++) {",
          "1000:     ASSERT(found_in_loc_env[i]);",
          "1001:   }",
          "1002:   for (i = 0; i < ARRAY_SIZE(expected); i++) {",
          "1003:     ASSERT(found_in_usr_env[i]);",
          "1004:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c6adab2e27fab1e2872ed64d9cb794e5b80f865e",
      "candidate_info": {
        "commit_hash": "c6adab2e27fab1e2872ed64d9cb794e5b80f865e",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/c6adab2e27fab1e2872ed64d9cb794e5b80f865e",
        "files": [
          "src/unix/signal.c"
        ],
        "message": "unix: fix uv__signal_unlock() prototype",
        "before_after_code_files": [
          "src/unix/signal.c||src/unix/signal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/signal.c||src/unix/signal.c": [
          "File: src/unix/signal.c -> src/unix/signal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: RB_HEAD(uv__signal_tree_s, uv_signal_s);",
          "41: static void uv__signal_event(uv_loop_t* loop, uv__io_t* w, unsigned int events);",
          "42: static int uv__signal_compare(uv_signal_t* w1, uv_signal_t* w2);",
          "43: static void uv__signal_stop(uv_signal_t* handle);",
          "",
          "[Removed Lines]",
          "40: static int uv__signal_unlock();",
          "",
          "[Added Lines]",
          "40: static int uv__signal_unlock(void);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1cc5f179f56dc659945d47fde99bbb7633dcb730",
      "candidate_info": {
        "commit_hash": "1cc5f179f56dc659945d47fde99bbb7633dcb730",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/1cc5f179f56dc659945d47fde99bbb7633dcb730",
        "files": [
          "include/uv.h"
        ],
        "message": "include: cleanup uv.h\n\nRemove comments describing the API which are now part of the\ndocumentation, thus avoiding future comment rot (and removing the\nexisting part).",
        "before_after_code_files": [
          "include/uv.h||include/uv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "237: } uv_run_mode;",
          "245: UV_EXTERN unsigned int uv_version(void);",
          "251: UV_EXTERN const char* uv_version_string(void);",
          "265: UV_EXTERN uv_loop_t* uv_default_loop(void);",
          "270: UV_EXTERN int uv_loop_init(uv_loop_t* loop);",
          "277: UV_EXTERN int uv_loop_close(uv_loop_t* loop);",
          "286: UV_EXTERN uv_loop_t* uv_loop_new(void);",
          "295: UV_EXTERN void uv_loop_delete(uv_loop_t*);",
          "300: UV_EXTERN size_t uv_loop_size(void);",
          "322: UV_EXTERN int uv_loop_alive(const uv_loop_t* loop);",
          "330: UV_EXTERN void uv_stop(uv_loop_t*);",
          "336: UV_EXTERN void uv_ref(uv_handle_t*);",
          "337: UV_EXTERN void uv_unref(uv_handle_t*);",
          "338: UV_EXTERN int uv_has_ref(const uv_handle_t*);",
          "349: UV_EXTERN void uv_update_time(uv_loop_t*);",
          "362: UV_EXTERN uint64_t uv_now(const uv_loop_t*);",
          "378: UV_EXTERN int uv_backend_fd(const uv_loop_t*);",
          "384: UV_EXTERN int uv_backend_timeout(const uv_loop_t*);",
          "399: typedef void (*uv_alloc_cb)(uv_handle_t* handle,",
          "400:                             size_t suggested_size,",
          "401:                             uv_buf_t* buf);",
          "414: typedef void (*uv_read_cb)(uv_stream_t* stream,",
          "415:                            ssize_t nread,",
          "416:                            const uv_buf_t* buf);",
          "",
          "[Removed Lines]",
          "316: UV_EXTERN int uv_run(uv_loop_t*, uv_run_mode mode);",
          "",
          "[Added Lines]",
          "261: UV_EXTERN int uv_run(uv_loop_t*, uv_run_mode mode);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "553:   UV_HANDLE_FIELDS",
          "554: };",
          "560: UV_EXTERN size_t uv_handle_size(uv_handle_type type);",
          "565: UV_EXTERN size_t uv_req_size(uv_req_type type);",
          "587: UV_EXTERN int uv_is_active(const uv_handle_t* handle);",
          "592: UV_EXTERN void uv_walk(uv_loop_t* loop, uv_walk_cb walk_cb, void* arg);",
          "606: UV_EXTERN void uv_close(uv_handle_t* handle, uv_close_cb close_cb);",
          "618: UV_EXTERN int uv_recv_buffer_size(uv_handle_t* handle, int* value);",
          "620: UV_EXTERN int uv_fileno(const uv_handle_t* handle, uv_os_fd_t* fd);",
          "642: UV_EXTERN uv_buf_t uv_buf_init(char* base, unsigned int len);",
          "",
          "[Removed Lines]",
          "632: UV_EXTERN int uv_send_buffer_size(uv_handle_t* handle, int* value);",
          "",
          "[Added Lines]",
          "411: UV_EXTERN int uv_send_buffer_size(uv_handle_t* handle, int* value);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1838: } uv_rusage_t;",
          "1844: UV_EXTERN int uv_getrusage(uv_rusage_t* rusage);",
          "1850: UV_EXTERN int uv_cpu_info(uv_cpu_info_t** cpu_infos, int* count);",
          "1851: UV_EXTERN void uv_free_cpu_info(uv_cpu_info_t* cpu_infos, int count);",
          "1857: UV_EXTERN int uv_interface_addresses(uv_interface_address_t** addresses,",
          "1859: UV_EXTERN void uv_free_interface_addresses(uv_interface_address_t* addresses,",
          "1876: typedef enum {",
          "1877:   UV_FS_UNKNOWN = -1,",
          "",
          "[Removed Lines]",
          "1858:   int* count);",
          "1860:   int count);",
          "",
          "[Added Lines]",
          "1006:                                      int* count);",
          "1008:                                            int count);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1918: };",
          "1920: UV_EXTERN void uv_fs_req_cleanup(uv_fs_t* req);",
          "",
          "[Removed Lines]",
          "1922: UV_EXTERN int uv_fs_close(uv_loop_t* loop, uv_fs_t* req, uv_file file,",
          "1923:     uv_fs_cb cb);",
          "1925: UV_EXTERN int uv_fs_open(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "1926:     int flags, int mode, uv_fs_cb cb);",
          "1928: UV_EXTERN int uv_fs_read(uv_loop_t* loop, uv_fs_t* req, uv_file file,",
          "1929:     const uv_buf_t bufs[], unsigned int nbufs, int64_t offset, uv_fs_cb cb);",
          "1931: UV_EXTERN int uv_fs_unlink(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "1932:     uv_fs_cb cb);",
          "1934: UV_EXTERN int uv_fs_write(uv_loop_t* loop, uv_fs_t* req, uv_file file,",
          "1935:     const uv_buf_t bufs[], unsigned int nbufs, int64_t offset, uv_fs_cb cb);",
          "1937: UV_EXTERN int uv_fs_mkdir(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "1938:     int mode, uv_fs_cb cb);",
          "1946: UV_EXTERN int uv_fs_mkdtemp(uv_loop_t* loop, uv_fs_t* req, const char* tpl,",
          "1947:     uv_fs_cb cb);",
          "1949: UV_EXTERN int uv_fs_rmdir(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "1950:     uv_fs_cb cb);",
          "1952: UV_EXTERN int uv_fs_readdir(uv_loop_t* loop, uv_fs_t* req,",
          "1953:     const char* path, int flags, uv_fs_cb cb);",
          "1962: UV_EXTERN int uv_fs_readdir_next(uv_fs_t* req, uv_dirent_t* ent);",
          "1964: UV_EXTERN int uv_fs_stat(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "1965:     uv_fs_cb cb);",
          "1967: UV_EXTERN int uv_fs_fstat(uv_loop_t* loop, uv_fs_t* req, uv_file file,",
          "1968:     uv_fs_cb cb);",
          "1970: UV_EXTERN int uv_fs_rename(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "1971:     const char* new_path, uv_fs_cb cb);",
          "1973: UV_EXTERN int uv_fs_fsync(uv_loop_t* loop, uv_fs_t* req, uv_file file,",
          "1974:     uv_fs_cb cb);",
          "1976: UV_EXTERN int uv_fs_fdatasync(uv_loop_t* loop, uv_fs_t* req, uv_file file,",
          "1977:     uv_fs_cb cb);",
          "1979: UV_EXTERN int uv_fs_ftruncate(uv_loop_t* loop, uv_fs_t* req, uv_file file,",
          "1980:     int64_t offset, uv_fs_cb cb);",
          "1982: UV_EXTERN int uv_fs_sendfile(uv_loop_t* loop, uv_fs_t* req, uv_file out_fd,",
          "1983:     uv_file in_fd, int64_t in_offset, size_t length, uv_fs_cb cb);",
          "1985: UV_EXTERN int uv_fs_chmod(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "1986:     int mode, uv_fs_cb cb);",
          "1988: UV_EXTERN int uv_fs_utime(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "1989:     double atime, double mtime, uv_fs_cb cb);",
          "1991: UV_EXTERN int uv_fs_futime(uv_loop_t* loop, uv_fs_t* req, uv_file file,",
          "1992:     double atime, double mtime, uv_fs_cb cb);",
          "1994: UV_EXTERN int uv_fs_lstat(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "1995:     uv_fs_cb cb);",
          "1997: UV_EXTERN int uv_fs_link(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "1998:     const char* new_path, uv_fs_cb cb);",
          "",
          "[Added Lines]",
          "1056: UV_EXTERN int uv_fs_close(uv_loop_t* loop,",
          "1057:                           uv_fs_t* req,",
          "1058:                           uv_file file,",
          "1059:                           uv_fs_cb cb);",
          "1060: UV_EXTERN int uv_fs_open(uv_loop_t* loop,",
          "1061:                          uv_fs_t* req,",
          "1062:                          const char* path,",
          "1063:                          int flags,",
          "1064:                          int mode,",
          "1065:                          uv_fs_cb cb);",
          "1066: UV_EXTERN int uv_fs_read(uv_loop_t* loop,",
          "1067:                          uv_fs_t* req,",
          "1068:                          uv_file file,",
          "1069:                          const uv_buf_t bufs[],",
          "1070:                          unsigned int nbufs,",
          "1071:                          int64_t offset,",
          "1072:                          uv_fs_cb cb);",
          "1073: UV_EXTERN int uv_fs_unlink(uv_loop_t* loop,",
          "1074:                            uv_fs_t* req,",
          "1075:                            const char* path,",
          "1076:                            uv_fs_cb cb);",
          "1077: UV_EXTERN int uv_fs_write(uv_loop_t* loop,",
          "1078:                           uv_fs_t* req,",
          "1079:                           uv_file file,",
          "1080:                           const uv_buf_t bufs[],",
          "1081:                           unsigned int nbufs,",
          "1082:                           int64_t offset,",
          "1083:                           uv_fs_cb cb);",
          "1084: UV_EXTERN int uv_fs_mkdir(uv_loop_t* loop,",
          "1085:                           uv_fs_t* req,",
          "1086:                           const char* path,",
          "1087:                           int mode,",
          "1088:                           uv_fs_cb cb);",
          "1089: UV_EXTERN int uv_fs_mkdtemp(uv_loop_t* loop,",
          "1090:                             uv_fs_t* req,",
          "1091:                             const char* tpl,",
          "1092:                             uv_fs_cb cb);",
          "1093: UV_EXTERN int uv_fs_rmdir(uv_loop_t* loop,",
          "1094:                           uv_fs_t* req,",
          "1095:                           const char* path,",
          "1096:                           uv_fs_cb cb);",
          "1097: UV_EXTERN int uv_fs_readdir(uv_loop_t* loop,",
          "1098:                             uv_fs_t* req,",
          "1099:                             const char* path,",
          "1100:                             int flags,",
          "1101:                             uv_fs_cb cb);",
          "1102: UV_EXTERN int uv_fs_readdir_next(uv_fs_t* req,",
          "1103:                                  uv_dirent_t* ent);",
          "1104: UV_EXTERN int uv_fs_stat(uv_loop_t* loop,",
          "1105:                          uv_fs_t* req,",
          "1106:                          const char* path,",
          "1107:                          uv_fs_cb cb);",
          "1108: UV_EXTERN int uv_fs_fstat(uv_loop_t* loop,",
          "1109:                           uv_fs_t* req,",
          "1110:                           uv_file file,",
          "1111:                           uv_fs_cb cb);",
          "1112: UV_EXTERN int uv_fs_rename(uv_loop_t* loop,",
          "1113:                            uv_fs_t* req,",
          "1114:                            const char* path,",
          "1115:                            const char* new_path,",
          "1116:                            uv_fs_cb cb);",
          "1117: UV_EXTERN int uv_fs_fsync(uv_loop_t* loop,",
          "1118:                           uv_fs_t* req,",
          "1119:                           uv_file file,",
          "1120:                           uv_fs_cb cb);",
          "1121: UV_EXTERN int uv_fs_fdatasync(uv_loop_t* loop,",
          "1122:                               uv_fs_t* req,",
          "1123:                               uv_file file,",
          "1124:                               uv_fs_cb cb);",
          "1125: UV_EXTERN int uv_fs_ftruncate(uv_loop_t* loop,",
          "1126:                               uv_fs_t* req,",
          "1127:                               uv_file file,",
          "1128:                               int64_t offset,",
          "1129:                               uv_fs_cb cb);",
          "1130: UV_EXTERN int uv_fs_sendfile(uv_loop_t* loop,",
          "1131:                              uv_fs_t* req,",
          "1132:                              uv_file out_fd,",
          "1133:                              uv_file in_fd,",
          "1134:                              int64_t in_offset,",
          "1135:                              size_t length,",
          "1136:                              uv_fs_cb cb);",
          "1137: UV_EXTERN int uv_fs_chmod(uv_loop_t* loop,",
          "1138:                           uv_fs_t* req,",
          "1139:                           const char* path,",
          "1140:                           int mode,",
          "1141:                           uv_fs_cb cb);",
          "1142: UV_EXTERN int uv_fs_utime(uv_loop_t* loop,",
          "1143:                           uv_fs_t* req,",
          "1144:                           const char* path,",
          "1145:                           double atime,",
          "1146:                           double mtime,",
          "1147:                           uv_fs_cb cb);",
          "1148: UV_EXTERN int uv_fs_futime(uv_loop_t* loop,",
          "1149:                            uv_fs_t* req,",
          "1150:                            uv_file file,",
          "1151:                            double atime,",
          "1152:                            double mtime,",
          "1153:                            uv_fs_cb cb);",
          "1154: UV_EXTERN int uv_fs_lstat(uv_loop_t* loop,",
          "1155:                           uv_fs_t* req,",
          "1156:                           const char* path,",
          "1157:                           uv_fs_cb cb);",
          "1158: UV_EXTERN int uv_fs_link(uv_loop_t* loop,",
          "1159:                          uv_fs_t* req,",
          "1160:                          const char* path,",
          "1161:                          const char* new_path,",
          "1162:                          uv_fs_cb cb);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2010: #define UV_FS_SYMLINK_JUNCTION     0x0002",
          "2028: enum uv_fs_event {",
          "",
          "[Removed Lines]",
          "2012: UV_EXTERN int uv_fs_symlink(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "2013:     const char* new_path, int flags, uv_fs_cb cb);",
          "2015: UV_EXTERN int uv_fs_readlink(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "2016:     uv_fs_cb cb);",
          "2018: UV_EXTERN int uv_fs_fchmod(uv_loop_t* loop, uv_fs_t* req, uv_file file,",
          "2019:     int mode, uv_fs_cb cb);",
          "2021: UV_EXTERN int uv_fs_chown(uv_loop_t* loop, uv_fs_t* req, const char* path,",
          "2022:     uv_uid_t uid, uv_gid_t gid, uv_fs_cb cb);",
          "2024: UV_EXTERN int uv_fs_fchown(uv_loop_t* loop, uv_fs_t* req, uv_file file,",
          "2025:     uv_uid_t uid, uv_gid_t gid, uv_fs_cb cb);",
          "",
          "[Added Lines]",
          "1176: UV_EXTERN int uv_fs_symlink(uv_loop_t* loop,",
          "1177:                             uv_fs_t* req,",
          "1178:                             const char* path,",
          "1179:                             const char* new_path,",
          "1180:                             int flags,",
          "1181:                             uv_fs_cb cb);",
          "1182: UV_EXTERN int uv_fs_readlink(uv_loop_t* loop,",
          "1183:                              uv_fs_t* req,",
          "1184:                              const char* path,",
          "1185:                              uv_fs_cb cb);",
          "1186: UV_EXTERN int uv_fs_fchmod(uv_loop_t* loop,",
          "1187:                            uv_fs_t* req,",
          "1188:                            uv_file file,",
          "1189:                            int mode,",
          "1190:                            uv_fs_cb cb);",
          "1191: UV_EXTERN int uv_fs_chown(uv_loop_t* loop,",
          "1192:                           uv_fs_t* req,",
          "1193:                           const char* path,",
          "1194:                           uv_uid_t uid,",
          "1195:                           uv_gid_t gid,",
          "1196:                           uv_fs_cb cb);",
          "1197: UV_EXTERN int uv_fs_fchown(uv_loop_t* loop,",
          "1198:                            uv_fs_t* req,",
          "1199:                            uv_file file,",
          "1200:                            uv_uid_t uid,",
          "1201:                            uv_gid_t gid,",
          "1202:                            uv_fs_cb cb);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2299: UV_EXTERN int uv_rwlock_trywrlock(uv_rwlock_t* rwlock);",
          "2300: UV_EXTERN void uv_rwlock_wrunlock(uv_rwlock_t* rwlock);",
          "2305: UV_EXTERN int uv_sem_init(uv_sem_t* sem, unsigned int value);",
          "2306: UV_EXTERN void uv_sem_destroy(uv_sem_t* sem);",
          "2307: UV_EXTERN void uv_sem_post(uv_sem_t* sem);",
          "2308: UV_EXTERN void uv_sem_wait(uv_sem_t* sem);",
          "2309: UV_EXTERN int uv_sem_trywait(uv_sem_t* sem);",
          "2314: UV_EXTERN int uv_cond_init(uv_cond_t* cond);",
          "2315: UV_EXTERN void uv_cond_destroy(uv_cond_t* cond);",
          "2316: UV_EXTERN void uv_cond_signal(uv_cond_t* cond);",
          "2317: UV_EXTERN void uv_cond_broadcast(uv_cond_t* cond);",
          "2327: UV_EXTERN int uv_barrier_init(uv_barrier_t* barrier, unsigned int count);",
          "2328: UV_EXTERN void uv_barrier_destroy(uv_barrier_t* barrier);",
          "2329: UV_EXTERN int uv_barrier_wait(uv_barrier_t* barrier);",
          "2337: UV_EXTERN void uv_cond_wait(uv_cond_t* cond, uv_mutex_t* mutex);",
          "2356: UV_EXTERN void uv_once(uv_once_t* guard, void (*callback)(void));",
          "2366: UV_EXTERN int uv_key_create(uv_key_t* key);",
          "2367: UV_EXTERN void uv_key_delete(uv_key_t* key);",
          "2368: UV_EXTERN void* uv_key_get(uv_key_t* key);",
          "2369: UV_EXTERN void uv_key_set(uv_key_t* key, void* value);",
          "2376: typedef void (*uv_thread_cb)(void* arg);",
          "2378: UV_EXTERN int uv_thread_create(uv_thread_t* tid, uv_thread_cb entry, void* arg);",
          "",
          "[Removed Lines]",
          "2348: UV_EXTERN int uv_cond_timedwait(uv_cond_t* cond, uv_mutex_t* mutex,",
          "2349:     uint64_t timeout);",
          "",
          "[Added Lines]",
          "1352: UV_EXTERN int uv_cond_timedwait(uv_cond_t* cond,",
          "1353:                                 uv_mutex_t* mutex,",
          "1354:                                 uint64_t timeout);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f83613023e36997450befe0ef3d813653968643",
      "candidate_info": {
        "commit_hash": "2f83613023e36997450befe0ef3d813653968643",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/2f83613023e36997450befe0ef3d813653968643",
        "files": [
          "test/test-watcher-cross-stop.c"
        ],
        "message": "test: fix watcher_cross_stop on Windows\n\nAll send callbacks are not necessarily called on the same loop iteration\nas the data is received.",
        "before_after_code_files": [
          "test/test-watcher-cross-stop.c||test/test-watcher-cross-stop.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/test-watcher-cross-stop.c||test/test-watcher-cross-stop.c": [
          "File: test/test-watcher-cross-stop.c -> test/test-watcher-cross-stop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:     uv_close((uv_handle_t*) &sockets[i], close_cb);",
          "94:   ASSERT(recv_cb_called > 0);",
          "97:   uv_run(loop, UV_RUN_DEFAULT);",
          "99:   ASSERT(ARRAY_SIZE(sockets) == close_cb_called);",
          "101:   MAKE_VALGRIND_HAPPY();",
          "",
          "[Removed Lines]",
          "95:   ASSERT(ARRAY_SIZE(sockets) == send_cb_called);",
          "",
          "[Added Lines]",
          "98:   ASSERT(ARRAY_SIZE(sockets) == send_cb_called);",
          "",
          "---------------"
        ]
      }
    }
  ]
}