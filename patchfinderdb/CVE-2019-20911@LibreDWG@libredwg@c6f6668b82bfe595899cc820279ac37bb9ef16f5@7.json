{
  "cve_id": "CVE-2019-20911",
  "cve_desc": "An issue was discovered in GNU LibreDWG through 0.9.3. Crafted input will lead to denial of service in bit_calc_CRC in bits.c, related to a for loop.",
  "repo": "LibreDWG/libredwg",
  "patch_hash": "c6f6668b82bfe595899cc820279ac37bb9ef16f5",
  "patch_info": {
    "commit_hash": "c6f6668b82bfe595899cc820279ac37bb9ef16f5",
    "repo": "LibreDWG/libredwg",
    "commit_url": "https://github.com/LibreDWG/libredwg/commit/c6f6668b82bfe595899cc820279ac37bb9ef16f5",
    "files": [
      "include/dwg.h",
      "src/decode.c",
      "src/encode.c",
      "src/free.c"
    ],
    "message": "cleanup tio.unknown\n\nnot needed anymore, we only have UNKNOWN_OBJ or UNKNOWN_ENT with full common\nentity_data.\nFixes GH #178 heap_overflow2",
    "before_after_code_files": [
      "include/dwg.h||include/dwg.h",
      "src/decode.c||src/decode.c",
      "src/encode.c||src/encode.c",
      "src/free.c||src/free.c"
    ]
  },
  "patch_diff": {
    "include/dwg.h||include/dwg.h": [
      "File: include/dwg.h -> include/dwg.h"
    ],
    "src/decode.c||src/decode.c": [
      "File: src/decode.c -> src/decode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "5013:           bit_set_position (dat, restartpos);",
      "5019:           if (i >= 0 && i < (int)dwg->num_classes)",
      "5020:             {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5014:           obj->supertype = DWG_SUPERTYPE_UNKNOWN;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "5032:                   LOG_ERROR (\"Invalid class index %d >%d\", i,",
      "5033:                              (int)dwg->num_classes);",
      "5034:                 }",
      "5036:               obj->type = 0;",
      "5038:               return error | DWG_ERR_VALUEOUTOFBOUNDS;",
      "5039:             }",
      "5096:         }",
      "5097:     }",
      "",
      "[Removed Lines]",
      "5035:               obj->supertype = DWG_SUPERTYPE_UNKNOWN;",
      "5041:           if (klass && !is_entity)",
      "5042:             {",
      "5043:               int err = dwg_decode_UNKNOWN_OBJ (dat, obj);",
      "5044:               error |= err;",
      "5045:               obj->supertype = DWG_SUPERTYPE_UNKNOWN;",
      "5046:               if (!dat)",
      "5047:                 return error;",
      "5048:               if (err >= DWG_ERR_CRITICAL)",
      "5050:             }",
      "5051:           else if (klass) // is_entity",
      "5052:             {",
      "5053:               int err;",
      "5054: #if 0 && !defined(IS_RELEASE)",
      "5055:               if (strEQc(klass->dxfname, \"MULTILEADER\")) { //debug CED",
      "5056:                 char *mleader = bit_read_TF(dat, obj->size);",
      "5057:                 LOG_INSANE_TF(mleader, (int)obj->size)",
      "5058:                 bit_set_position(dat, restartpos);",
      "5059:                 free (mleader);",
      "5060:               }",
      "5061: #endif",
      "5062:               err = dwg_decode_UNKNOWN_ENT (dat, obj);",
      "5063:               error |= err;",
      "5064:               obj->supertype = DWG_SUPERTYPE_UNKNOWN;",
      "5065:               if (!dat)",
      "5066:                 return error;",
      "5067:               if (err >= DWG_ERR_CRITICAL)",
      "5069:             }",
      "5070:           else // not a class",
      "5071:             {",
      "5072:               LOG_WARN (\"Unknown object, skipping eed/reactors/xdic\");",
      "5073:               SINCE (R_2000)",
      "5074:               {",
      "5075:                 obj->bitsize = bit_read_RL (dat);",
      "5076:                 LOG_TRACE (\"bitsize: \" FORMAT_RL \" [RL] @%lu.%u\\n\",",
      "5077:                            obj->bitsize, dat->byte-2, dat->bit);",
      "5078:                 if (obj->bitsize > obj->size * 8)",
      "5079:                   {",
      "5080:                     LOG_ERROR (\"Invalid bitsize \" FORMAT_RL \" => \" FORMAT_RL,",
      "5081:                                obj->bitsize, obj->size * 8);",
      "5082:                     obj->bitsize = obj->size * 8;",
      "5083:                     error |= DWG_ERR_VALUEOUTOFBOUNDS;",
      "5084:                   }",
      "5085:               }",
      "5086:               if (!bit_read_H (dat, &obj->handle))",
      "5087:                 {",
      "5088:                   LOG_TRACE (\"handle: \" FORMAT_H \" [H 5]\\n\",",
      "5089:                              ARGS_H (obj->handle));",
      "5090:                 }",
      "5091:               restartpos = dat->byte;",
      "5092:               obj->supertype = DWG_SUPERTYPE_UNKNOWN;",
      "5093:               obj->tio.unknown = bit_read_TF (dat, obj->size);",
      "5094:               dat->byte = restartpos;",
      "5095:             }",
      "",
      "[Added Lines]",
      "5037:           if (is_entity)",
      "5038:               error |= dwg_decode_UNKNOWN_ENT (dat, obj);",
      "5039:           else",
      "5040:               error |= dwg_decode_UNKNOWN_OBJ (dat, obj);",
      "5042:           if (!dat)",
      "5043:             return error;",
      "5044:           if (error >= DWG_ERR_CRITICAL)",
      "",
      "---------------"
    ],
    "src/encode.c||src/encode.c": [
      "File: src/encode.c -> src/encode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1970:           else",
      "1971:             is_entity = obj->supertype == DWG_SUPERTYPE_ENTITY;",
      "1976:             error = dwg_encode_UNKNOWN_ENT (dat, obj);",
      "1993:         }",
      "1994:     }",
      "",
      "[Removed Lines]",
      "1973:           if (klass && !is_entity)",
      "1974:             error = dwg_encode_UNKNOWN_OBJ (dat, obj);",
      "1975:           else if (klass)",
      "1977:           else // not a class",
      "1978:             {",
      "1979:               LOG_WARN (\"Unknown object, skipping eed/reactors/xdic\");",
      "1980:               error = DWG_ERR_UNHANDLEDCLASS;",
      "1981:               SINCE (R_2000)",
      "1982:               {",
      "1983:                 bit_write_RL (dat, obj->bitsize);",
      "1984:                 LOG_INFO (\"bitsize: \" FORMAT_RL \" [RL] (@%lu.%u)\\n\", obj->bitsize,",
      "1985:                           dat->byte - 4, dat->bit);",
      "1986:               }",
      "1987:               bit_write_H (dat, &obj->handle);",
      "1988:               LOG_INFO (\"handle: \" FORMAT_H \" [H 5]\\n\", ARGS_H (obj->handle));",
      "1991:               bit_write_TF (dat, obj->tio.unknown, obj->size);",
      "1992:             }",
      "",
      "[Added Lines]",
      "1973:           if (is_entity)",
      "1975:           else",
      "1976:             error = dwg_encode_UNKNOWN_OBJ (dat, obj);",
      "",
      "---------------"
    ],
    "src/free.c||src/free.c": [
      "File: src/free.c -> src/free.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "731:       else if ((error = dwg_free_variable_type (obj->parent, obj))",
      "732:                & DWG_ERR_UNHANDLEDCLASS)",
      "733:         {",
      "738:         unhandled:",
      "753:               dwg_free_UNKNOWN_ENT (dat, obj);",
      "761:               dwg_free_UNKNOWN_OBJ (dat, obj);",
      "771:         }",
      "772:     }",
      "",
      "[Removed Lines]",
      "734:           int is_entity;",
      "735:           int i;",
      "736:           Dwg_Class *klass;",
      "739:           is_entity = 0;",
      "740:           i = obj->type - 500;",
      "741:           klass = NULL;",
      "743:           dwg = obj->parent;",
      "744:           if (dwg->dwg_class && i >= 0 && i < (int)dwg->num_classes)",
      "745:             {",
      "746:               klass = &dwg->dwg_class[i];",
      "747:               is_entity = klass ? dwg_class_is_entity (klass) : 0;",
      "748:             }",
      "750:           if (obj->fixedtype == DWG_TYPE_TABLE)",
      "751:             {",
      "754:             }",
      "755:           else if (obj->fixedtype == DWG_TYPE_DATATABLE)",
      "756:             {",
      "757:               dwg_free_UNKNOWN_OBJ (dat, obj);",
      "758:             }",
      "759:           else if (klass && !is_entity)",
      "760:             {",
      "762:             }",
      "763:           else if (klass && is_entity)",
      "764:             {",
      "765:               dwg_free_UNKNOWN_ENT (dat, obj);",
      "766:             }",
      "767:           else // not a class",
      "768:             {",
      "769:               FREE_IF (obj->tio.unknown);",
      "770:             }",
      "",
      "[Added Lines]",
      "735:           if (obj->fixedtype == DWG_TYPE_UNKNOWN_ENT)",
      "737:           else if (obj->fixedtype == DWG_TYPE_UNKNOWN_OBJ)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "967d6e599396a891b29c4e0c7a3c65300303a056",
      "candidate_info": {
        "commit_hash": "967d6e599396a891b29c4e0c7a3c65300303a056",
        "repo": "LibreDWG/libredwg",
        "commit_url": "https://github.com/LibreDWG/libredwg/commit/967d6e599396a891b29c4e0c7a3c65300303a056",
        "files": [
          "src/decode.c"
        ],
        "message": "fix eed leaks with UNKNOWN objects\n\nwhen the overflowed early.\nFound via fuzzing.",
        "before_after_code_files": [
          "src/decode.c||src/decode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/decode.c||src/decode.c"
          ],
          "candidate": [
            "src/decode.c||src/decode.c"
          ]
        }
      },
      "candidate_diff": {
        "src/decode.c||src/decode.c": [
          "File: src/decode.c -> src/decode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3152:       LOG_POS",
          "3153:       if (size > _obj->size || dat->byte == sav_byte)",
          "3154:         {",
          "3156:           dwg_free_eed (_obj);",
          "3158:         }",
          "",
          "[Removed Lines]",
          "3155:           LOG_ERROR (\"Invalid EED size \" FORMAT_BS \" > %u\", size, _obj->size)",
          "",
          "[Added Lines]",
          "3155:           LOG_ERROR (\"Invalid EED size \" FORMAT_BS \" > %u\", size, _obj->size);",
          "3156:           obj->num_eed = idx;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5012:               if (err >= DWG_ERR_CRITICAL)",
          "5014:             }",
          "5016:             {",
          "5017:               int err;",
          "5018: #if 0 && !defined(IS_RELEASE)",
          "",
          "[Removed Lines]",
          "5015:           else if (klass)",
          "",
          "[Added Lines]",
          "5016:           else if (klass) // is_entity",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6eca2adac3cd4138f328df7a6ce18777510de043",
      "candidate_info": {
        "commit_hash": "6eca2adac3cd4138f328df7a6ce18777510de043",
        "repo": "LibreDWG/libredwg",
        "commit_url": "https://github.com/LibreDWG/libredwg/commit/6eca2adac3cd4138f328df7a6ce18777510de043",
        "files": [
          "src/decode.c",
          "src/encode.c"
        ],
        "message": "encode: fix entity bitsize calculation\n\nset START_HANDLE_STREAM for entities in COMMON_ENTITY_HANDLE_DATA.\n\nFixes GH #142, the very first version which imports most entities.",
        "before_after_code_files": [
          "src/decode.c||src/decode.c",
          "src/encode.c||src/encode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/decode.c||src/decode.c",
            "src/encode.c||src/encode.c"
          ],
          "candidate": [
            "src/decode.c||src/decode.c",
            "src/encode.c||src/encode.c"
          ]
        }
      },
      "candidate_diff": {
        "src/decode.c||src/decode.c": [
          "File: src/decode.c -> src/decode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2902:   return 0;",
          "2903: }",
          "2908: static int",
          "2909: dwg_decode_eed_data (Bit_Chain *restrict dat, Dwg_Eed_Data *restrict data,",
          "",
          "[Removed Lines]",
          "2905: #define LOG_POS \\",
          "2906:   LOG_INSANE (\" @%lu.%u\\n\", dat->byte, dat->bit)",
          "",
          "[Added Lines]",
          "2905: #define LOG_POS",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3504:   SINCE (R_2007)",
          "3505:   {",
          "3506:     SINCE (R_2010)",
          "3509:     error |= obj_handle_stream (dat, obj, hdl_dat);",
          "",
          "[Removed Lines]",
          "3507:     LOG_HANDLE (\" bitsize: \" FORMAT_RL \",\", obj->bitsize);",
          "",
          "[Added Lines]",
          "3507:       LOG_HANDLE (\" bitsize: \" FORMAT_RL \",\", obj->bitsize);",
          "",
          "---------------"
        ],
        "src/encode.c||src/encode.c": [
          "File: src/encode.c -> src/encode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "466: #define COMMON_ENTITY_HANDLE_DATA                                             \\",
          "467:   SINCE (R_13)                                                                \\",
          "468:   {                                                                           \\",
          "470:   }                                                                           \\",
          "471:   RESET_VER",
          "",
          "[Removed Lines]",
          "469:     error |= dwg_encode_common_entity_handle_data (dat, hdl_dat, obj);        \\",
          "",
          "[Added Lines]",
          "469:     START_HANDLE_STREAM;                                                      \\",
          "470:     PRE (R_2007)                                                              \\",
          "471:     {                                                                         \\",
          "472:       error |= dwg_encode_common_entity_handle_data (dat, hdl_dat, obj);      \\",
          "473:     }                                                                         \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "492:   if (dat->version >= R_2007 && obj->bitsize)                                 \\",
          "493:     bit_set_position (hdl_dat, obj->hdlpos);                                  \\",
          "494:   if (!obj->bitsize)                                                          \\",
          "496:   RESET_VER",
          "498: #if 0",
          "",
          "[Removed Lines]",
          "495:     obj->bitsize =  bit_position (dat) - (obj->address * 8);                  \\",
          "",
          "[Added Lines]",
          "499:     {                                                                         \\",
          "500:       LOG_TRACE (\"-bitsize calc from HANDLE_STREAM @%lu.%u (%lu)\\n\",          \\",
          "501:                  dat->byte, dat->bit, obj->address);                          \\",
          "502:       obj->bitsize = bit_position (dat) - (obj->address * 8);                 \\",
          "503:     }                                                                         \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "575:     if (error)                                                                \\",
          "576:       return error;",
          "579: #define DWG_ENTITY_END                                                        \\",
          "589:   return error;                                                               \\",
          "590:   }",
          "",
          "[Removed Lines]",
          "580:   if (obj->bitsize == 0 && dat->version >= R_13 && dat->version <= R_2010)    \\",
          "581:     {                                                                         \\",
          "582:       unsigned long address = bit_position (dat);                             \\",
          "583:       unsigned long bitsize = address - obj->bitsize_pos;                     \\",
          "584:       bit_set_position (dat, obj->bitsize_pos);                               \\",
          "585:       bit_write_RL (dat, bitsize);                                            \\",
          "586:       bit_set_position (dat, address);                                        \\",
          "588:     }                                                                         \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "609:     LOG_INFO (\"Encode object \" #token \"\\n\")",
          "611: #define DWG_OBJECT_END                                                        \\",
          "621:   return error;                                                               \\",
          "622:   }",
          "",
          "[Removed Lines]",
          "612:   if (obj->bitsize == 0 && dat->version >= R_13 && dat->version <= R_2007)    \\",
          "613:     {                                                                         \\",
          "614:       unsigned long address = bit_position (dat);                             \\",
          "615:       unsigned long bitsize = address - obj->bitsize_pos;                     \\",
          "616:       bit_set_position (dat, obj->bitsize_pos);                               \\",
          "617:       bit_write_RL (dat, bitsize);                                            \\",
          "618:       bit_set_position (dat, address);                                        \\",
          "620:     }                                                                         \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1981:       obj->size = dat->byte - address - 2; // excludes the CRC",
          "1982:       if (dat->bit)",
          "1983:         obj->size++;",
          "1984:       if (!obj->bitsize)",
          "1987:       bit_set_position (dat, address * 8);",
          "1988:       if (obj->size > 0x7fff)",
          "",
          "[Removed Lines]",
          "1985:         obj->bitsize = pos - (address * 8); // minus hdlpos",
          "",
          "[Added Lines]",
          "1975:         {",
          "1976:           LOG_TRACE (\"-bitsize calc from address (no handle) @%lu.%u\\n\",",
          "1977:                      dat->byte, dat->bit);",
          "1978:           obj->bitsize = pos - (obj->address * 8);",
          "1979:         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2138: {",
          "2139:   unsigned long off = obj->address;",
          "2144:   int i, num_eed = obj->tio.object->num_eed;",
          "2145:   for (i = 0; i < num_eed; i++)",
          "",
          "[Removed Lines]",
          "2141: #define LOG_POS \\",
          "2142:   LOG_INSANE (\" @%lu.%u\\n\", dat->byte - off, dat->bit)",
          "",
          "[Added Lines]",
          "2134: #define LOG_POS",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2215:   VERSIONS (R_2000, R_2007)",
          "2216:   {",
          "2217:     obj->bitsize_pos = bit_position (dat);",
          "2222:     LOG_TRACE (\"bitsize: %u [RL] (@%lu.%lu)\\n\", obj->bitsize,",
          "2223:                obj->bitsize_pos / 8, obj->bitsize_pos % 8);",
          "2224:   }",
          "2225:   SINCE (R_2007)",
          "2226:   {",
          "2230:     SINCE (R_2010)",
          "2231:     {",
          "2235:     }",
          "2237:     error |= obj_string_stream (dat, obj, str_dat);",
          "",
          "[Removed Lines]",
          "2218:     if (!obj->bitsize)",
          "2219:       bit_write_RL (dat, obj->size * 8);",
          "2220:     else",
          "2221:       bit_write_RL (dat, obj->bitsize);",
          "2229:     obj->hdlpos = obj->address * 8 + obj->bitsize;",
          "2232:       obj->hdlpos += 8;",
          "2234:       LOG_HANDLE (\"hdlpos: %lu\\n\", obj->hdlpos);",
          "",
          "[Added Lines]",
          "2211:     bit_write_RL (dat, obj->bitsize);",
          "2215:   if (obj->bitsize)",
          "2216:     obj->hdlpos = obj->address * 8 + obj->bitsize;",
          "2223:       if (obj->bitsize)",
          "2224:         {",
          "2225:           obj->hdlpos += 8;",
          "2227:           LOG_HANDLE (\"hdlpos: %lu\\n\", obj->hdlpos);",
          "2228:         }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2358:     LOG_INFO (\"bitsize: \" FORMAT_RL \" [RL] (@%lu.%u)\\n\", obj->bitsize,",
          "2359:               dat->byte - 4, dat->bit);",
          "2360:   }",
          "2368:   SINCE (R_2007) { obj_string_stream (dat, obj, str_dat); }",
          "2370:   bit_write_H (dat, &obj->handle);",
          "",
          "[Removed Lines]",
          "2361:   SINCE (R_2010)",
          "2362:   {",
          "2366:   }",
          "2367:   obj->hdlpos = bit_position (dat) + obj->bitsize; // the handle stream offset",
          "",
          "[Added Lines]",
          "2355:   if (obj->bitsize)",
          "2356:     obj->hdlpos = bit_position (dat) + obj->bitsize; // the handle stream offset",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dace1ef9447cb567c5f1ab5f9217579ff3a14b2d",
      "candidate_info": {
        "commit_hash": "dace1ef9447cb567c5f1ab5f9217579ff3a14b2d",
        "repo": "LibreDWG/libredwg",
        "commit_url": "https://github.com/LibreDWG/libredwg/commit/dace1ef9447cb567c5f1ab5f9217579ff3a14b2d",
        "files": [
          "src/decode.c"
        ],
        "message": "EED: add more eed_need_size checks\n\nCheck also individual dwg_decode_eed_data decoded sizes,\nto abort not enough room for wrong codes.\nFixes #104.",
        "before_after_code_files": [
          "src/decode.c||src/decode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/decode.c||src/decode.c"
          ],
          "candidate": [
            "src/decode.c||src/decode.c"
          ]
        }
      },
      "candidate_diff": {
        "src/decode.c||src/decode.c": [
          "File: src/decode.c -> src/decode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2446: static int",
          "2447: dwg_decode_eed_data (Bit_Chain *restrict dat, Dwg_Eed_Data *restrict data,",
          "2448:                      unsigned long int end, BITCODE_BS size)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2452: static int",
          "2453: eed_need_size (BITCODE_BS need, BITCODE_BS have)",
          "2454: {",
          "2455:   if (need > have)",
          "2456:     {",
          "2457:       LOG_ERROR (\"Invalid EED size %d > %d\", (int)need, (int)have);",
          "2458:       return 1;",
          "2459:     }",
          "2460:   return 0;",
          "2461: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2459:     case 0:",
          "2460:       PRE (R_2007)",
          "2461:       {",
          "2462:         data->u.eed_0.length = lenc = bit_read_RC (dat);",
          "2463:         data->u.eed_0.codepage = bit_read_RS_LE (dat);",
          "2464:         if ((long)lenc > size - 4)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2479:         if (eed_need_size (3, size)) return DWG_ERR_INVALIDEED;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2475:             free(obj->eed);",
          "2476:             obj->eed = NULL;",
          "2477:             dat->byte = end;",
          "2479: #endif",
          "2480:           }",
          "2482:         bit_read_fixed (dat, (BITCODE_RC *)data->u.eed_0.string, lenc);",
          "2483:         data->u.eed_0.string[lenc] = '\\0';",
          "2484:         LOG_TRACE (\"string: \\\"%s\\\" len=%d cp=%d\\n\", data->u.eed_0.string,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2500:         if (eed_need_size (lenc+3, size)) return DWG_ERR_INVALIDEED;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2486:       }",
          "2487:       LATER_VERSIONS",
          "2488:       {",
          "2489:         data->u.eed_0_r2007.length = lens = bit_read_RS (dat);",
          "2491:         for (j = 0; j < MIN (lens, (size - 3) / 2); j++)",
          "2492:           data->u.eed_0_r2007.string[j] = bit_read_RS_LE (dat);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2508:         if (eed_need_size (2, size)) return DWG_ERR_INVALIDEED;",
          "2510:         if (eed_need_size ((lens*2)+2, size)) return DWG_ERR_INVALIDEED;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2494: #ifdef _WIN32",
          "2495:         LOG_TRACE (\"string: \\\"\" FORMAT_TU \"\\\" len=%d\\n\",",
          "2496:                    data->u.eed_0_r2007.string, (int)lens);",
          "2497: #endif",
          "2498:       }",
          "2499:       break;",
          "2500:     case 2:",
          "2501:       data->u.eed_2.byte = bit_read_RC (dat);",
          "2502:       LOG_TRACE (\"byte: \" FORMAT_RC \"\\n\", data->u.eed_2.byte);",
          "2503:       break;",
          "2504:     case 3:",
          "2505:     case 5:",
          "2506:       data->u.eed_3.layer = bit_read_RL (dat);",
          "2507:       LOG_TRACE (\"layer/...: \" FORMAT_RL \"\\n\", data->u.eed_3.layer);",
          "2508:       break;",
          "2509:     case 4:",
          "2510:       data->u.eed_4.length = lenc = bit_read_RC (dat);",
          "2512:       for (j = 0; j < MIN (lenc, size - 2); j++)",
          "2513:         data->u.eed_4.data[j] = bit_read_RC (dat);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2518: #else",
          "2519:         LOG_TRACE (\"string: len=%d\\n\", (int)lens);",
          "2524:       if (eed_need_size (1, size)) return DWG_ERR_INVALIDEED;",
          "2530:       if (eed_need_size (4, size)) return DWG_ERR_INVALIDEED;",
          "2535:       if (eed_need_size (1, size)) return DWG_ERR_INVALIDEED;",
          "2537:       if (eed_need_size (lenc+1, size)) return DWG_ERR_INVALIDEED;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2517:     case 11:",
          "2518:     case 12:",
          "2520:       data->u.eed_10.point.x = bit_read_RD (dat);",
          "2521:       data->u.eed_10.point.y = bit_read_RD (dat);",
          "2522:       data->u.eed_10.point.z = bit_read_RD (dat);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2547:       if (eed_need_size (3*8, size)) return DWG_ERR_INVALIDEED;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2527:     case 41:",
          "2528:     case 42: /*case 43: case 44: case 45: case 46:",
          "2530:       data->u.eed_40.real = bit_read_RD (dat);",
          "2531:       LOG_TRACE (\"real: %f\\n\", data->u.eed_40.real);",
          "2532:       break;",
          "2533:     case 70:",
          "2534:       data->u.eed_70.rs = bit_read_RS (dat);",
          "2535:       LOG_TRACE (\"short: \" FORMAT_RS \"\\n\", data->u.eed_70.rs);",
          "2536:       break;",
          "2537:     case 71:",
          "2538:       data->u.eed_71.rl = bit_read_RL (dat);",
          "2539:       LOG_TRACE (\"long: \" FORMAT_RL \"\\n\", data->u.eed_71.rl);",
          "2540:       break;",
          "2541:     default:",
          "2542:       LOG_ERROR (\"unknown EED code %d\", data->code);",
          "2543:       dat->byte = end;",
          "2545:     }",
          "2547: #ifdef DEBUG",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2558:       if (eed_need_size (8, size)) return DWG_ERR_INVALIDEED;",
          "2563:       if (eed_need_size (2, size)) return DWG_ERR_INVALIDEED;",
          "2568:       if (eed_need_size (4, size)) return DWG_ERR_INVALIDEED;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2560: dwg_decode_eed (Bit_Chain *restrict dat, Dwg_Object_Object *restrict obj)",
          "2561: {",
          "2562:   BITCODE_BS size;",
          "2564:   int error = 0;",
          "2565:   Dwg_Data *dwg = obj->dwg;",
          "2566:   Dwg_Object *_obj;",
          "",
          "[Removed Lines]",
          "2563:   unsigned int idx = 0;",
          "",
          "[Added Lines]",
          "2595:   unsigned int idx = 0;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2581:         {",
          "2582:           LOG_ERROR (\"Invalid EED size \" FORMAT_BS \" > %u\", size, _obj->size)",
          "2583:           dwg_free_eed (_obj);",
          "2585:         }",
          "2588:         {",
          "2589:           obj->eed",
          "2590:               = (Dwg_Eed *)realloc (obj->eed, (idx + 1) * sizeof (Dwg_Eed));",
          "",
          "[Removed Lines]",
          "2587:       if (idx)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2594:         {",
          "2595:           obj->eed = (Dwg_Eed *)calloc (1, sizeof (Dwg_Eed));",
          "2596:         }",
          "2597:       obj->eed[idx].size = size;",
          "2598:       error |= bit_read_H (dat, &obj->eed[idx].handle);",
          "2599:       end = dat->byte + size;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2628:       obj->num_eed = idx + 1;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2649:           LOG_TRACE (\"EED[%u] \", idx);",
          "2651:           error |= dwg_decode_eed_data (dat, obj->eed[idx].data, end, size);",
          "2655:           if (dat->byte < end - 1)",
          "2656:             {",
          "2657:               size = (long)(end - dat->byte + 1);",
          "2658:               LOG_INSANE (\"EED[%u] size remaining: %ld\\n\", idx, (long)size);",
          "2660:               obj->eed = (Dwg_Eed *)realloc (obj->eed,",
          "2661:                                              (idx + 1) * sizeof (Dwg_Eed));",
          "2663:               obj->eed[idx].size = 0;",
          "2664:               obj->eed[idx].raw = NULL;",
          "2665:             }",
          "",
          "[Removed Lines]",
          "2653:           idx++;",
          "2654:           obj->num_eed++;",
          "2662:               obj->eed[idx].handle = obj->eed[idx - 1].handle;",
          "",
          "[Added Lines]",
          "2684:           if (error & DWG_ERR_INVALIDEED)",
          "2685:             {",
          "2686:               dwg_free_eed (_obj);",
          "2687:               dat->byte = end; // skip eed",
          "2688:               continue;        // continue for next size = bit_read_BS(dat)",
          "2689:             }",
          "2693:               idx++;",
          "2694:               obj->num_eed++;",
          "2700:               obj->eed[idx].handle = obj->eed[idx-1].handle;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2669:             }",
          "2670:         }",
          "2671:       dat->byte = end;",
          "2672:     }",
          "2673:   return error;",
          "2674: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2710:       idx++;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4264:       hash_set (dwg->object_map, obj->handle.value, (uint32_t)num);",
          "4265:     }",
          "4268:   if (dat->bit)",
          "4269:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4306:   if (dat->byte > 8 * dat->size)",
          "4307:     {",
          "4308:       LOG_ERROR (\"Invalid object_address: %lu > %lu\", dat->byte, 8 * dat->size);",
          "4309:       return error | DWG_ERR_INVALIDDWG;",
          "4310:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "34407152e604b268e416b47fc548bf07639b628b",
      "candidate_info": {
        "commit_hash": "34407152e604b268e416b47fc548bf07639b628b",
        "repo": "LibreDWG/libredwg",
        "commit_url": "https://github.com/LibreDWG/libredwg/commit/34407152e604b268e416b47fc548bf07639b628b",
        "files": [
          "src/common_entity_data.spec",
          "src/decode.c"
        ],
        "message": "more fixup illegal bitsizes",
        "before_after_code_files": [
          "src/common_entity_data.spec||src/common_entity_data.spec",
          "src/decode.c||src/decode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/decode.c||src/decode.c"
          ],
          "candidate": [
            "src/decode.c||src/decode.c"
          ]
        }
      },
      "candidate_diff": {
        "src/common_entity_data.spec||src/common_entity_data.spec": [
          "File: src/common_entity_data.spec -> src/common_entity_data.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: #endif",
          "44:       LOG_TRACE(\"bitsize: \" FORMAT_BL \" @%lu.%u\\n\", obj->bitsize,",
          "45:                 dat->byte - 4, dat->bit)",
          "46:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: #ifdef IS_DECODER",
          "47:     if (obj->bitsize > obj->size * 8)",
          "48:       {",
          "49:         LOG_ERROR (\"Invalid bitsize \" FORMAT_RL \" => \" FORMAT_RL, obj->bitsize,",
          "50:                    obj->size * 8);",
          "51:         obj->bitsize = obj->size * 8;",
          "52:         error |= DWG_ERR_VALUEOUTOFBOUNDS;",
          "53:       }",
          "54: #endif",
          "",
          "---------------"
        ],
        "src/decode.c||src/decode.c": [
          "File: src/decode.c -> src/decode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3593:   {",
          "3594:     obj->bitsize = bit_read_RL (dat);",
          "3595:     LOG_TRACE (\"bitsize: %u [RL]\\n\", obj->bitsize);",
          "3596:   }",
          "3598:   FIELD_BL (num_reactors, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3596:     if (obj->bitsize > obj->size * 8)",
          "3597:       {",
          "3598:         LOG_ERROR (\"Invalid bitsize \" FORMAT_RL \" => \" FORMAT_RL, obj->bitsize,",
          "3599:                    obj->size * 8);",
          "3600:         obj->bitsize = obj->size * 8;",
          "3601:         error |= DWG_ERR_VALUEOUTOFBOUNDS;",
          "3602:       }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5004:                 obj->bitsize = bit_read_RL (dat);",
          "5005:                 LOG_TRACE (\"bitsize: \" FORMAT_RL \" [RL] @%lu.%u\\n\",",
          "5006:                            obj->bitsize, dat->byte-2, dat->bit);",
          "5007:               }",
          "5008:               if (!bit_read_H (dat, &obj->handle))",
          "5009:                 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5014:                 if (obj->bitsize > obj->size * 8)",
          "5015:                   {",
          "5016:                     LOG_ERROR (\"Invalid bitsize \" FORMAT_RL \" => \" FORMAT_RL,",
          "5017:                                obj->bitsize, obj->size * 8);",
          "5018:                     obj->bitsize = obj->size * 8;",
          "5019:                     error |= DWG_ERR_VALUEOUTOFBOUNDS;",
          "5020:                   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f316f23914075513221c3803babb71234259c042",
      "candidate_info": {
        "commit_hash": "f316f23914075513221c3803babb71234259c042",
        "repo": "LibreDWG/libredwg",
        "commit_url": "https://github.com/LibreDWG/libredwg/commit/f316f23914075513221c3803babb71234259c042",
        "files": [
          "src/free.c"
        ],
        "message": "dwg_free_object: avoid uninitialized is_entity warning\n\neven if logically impossible.",
        "before_after_code_files": [
          "src/free.c||src/free.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/free.c||src/free.c"
          ],
          "candidate": [
            "src/free.c||src/free.c"
          ]
        }
      },
      "candidate_diff": {
        "src/free.c||src/free.c": [
          "File: src/free.c -> src/free.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "736:           Dwg_Class *klass;",
          "738:         unhandled:",
          "739:           i = obj->type - 500;",
          "740:           klass = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "739:           is_entity = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}