{
  "cve_id": "CVE-2018-5335",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.3 and 2.2.0 to 2.2.11, the WCP dissector could crash. This was addressed in epan/dissectors/packet-wcp.c by validating the available buffer length.",
  "repo": "wireshark/wireshark",
  "patch_hash": "a7e29d8b66dd7c1cb691966938404dafc6b89689",
  "patch_info": {
    "commit_hash": "a7e29d8b66dd7c1cb691966938404dafc6b89689",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/a7e29d8b66dd7c1cb691966938404dafc6b89689",
    "files": [
      "epan/dissectors/packet-wcp.c"
    ],
    "message": "WCP: Add a length check.\n\nAdd a bounds check for the current window. Blind attempt at fixing bug\n14251.\n\nBug: 14251\nChange-Id: Ia3775bcabb2dc633b6994547125e53a4fe23451e\nReviewed-on: https://code.wireshark.org/review/25230\nReviewed-by: Gerald Combs <gerald@wireshark.org>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-wcp.c||epan/dissectors/packet-wcp.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-wcp.c||epan/dissectors/packet-wcp.c": [
      "File: epan/dissectors/packet-wcp.c -> epan/dissectors/packet-wcp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "644:   }",
      "645:   len = pdata_ptr->len;",
      "646:  } else {",
      "649:   pdata_ptr = wmem_new(wmem_file_scope(), wcp_pdata_t);",
      "651:   pdata_ptr->len = len;",
      "653:   p_add_proto_data(wmem_file_scope(), pinfo, proto_wcp, 0, (void*)pdata_ptr);",
      "",
      "[Removed Lines]",
      "650:   memcpy( &pdata_ptr->buffer, buf_ptr->buf_cur,  len);",
      "",
      "[Added Lines]",
      "647:   if (buf_ptr->buf_cur + len > buf_end) {",
      "648:    expert_add_info_format(pinfo, cd_item, &ei_wcp_invalid_window_offset,",
      "649:     \"Uncompressed data exceeds available buffer length (%d > %d)\",",
      "650:     len, (int) (buf_end - buf_ptr->buf_cur));",
      "651:    return NULL;",
      "652:   }",
      "656:   memcpy( &pdata_ptr->buffer, buf_ptr->buf_cur, len);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "086b87376b988c555484349aa115d6e08ac6db07",
      "candidate_info": {
        "commit_hash": "086b87376b988c555484349aa115d6e08ac6db07",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/086b87376b988c555484349aa115d6e08ac6db07",
        "files": [
          "epan/dissectors/packet-wcp.c"
        ],
        "message": "WCP: Add a length check.\n\nAdd a bounds check for the current window. Blind attempt at fixing bug\n14251.\n\nBug: 14251\nChange-Id: Ia3775bcabb2dc633b6994547125e53a4fe23451e\nReviewed-on: https://code.wireshark.org/review/25230\nReviewed-by: Gerald Combs <gerald@wireshark.org>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit a7e29d8b66dd7c1cb691966938404dafc6b89689)\nReviewed-on: https://code.wireshark.org/review/25234",
        "before_after_code_files": [
          "epan/dissectors/packet-wcp.c||epan/dissectors/packet-wcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-wcp.c||epan/dissectors/packet-wcp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-wcp.c||epan/dissectors/packet-wcp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-wcp.c||epan/dissectors/packet-wcp.c": [
          "File: epan/dissectors/packet-wcp.c -> epan/dissectors/packet-wcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "649:   }",
          "650:   len = pdata_ptr->len;",
          "651:  } else {",
          "654:   pdata_ptr = wmem_new(wmem_file_scope(), wcp_pdata_t);",
          "656:   pdata_ptr->len = len;",
          "658:   p_add_proto_data(wmem_file_scope(), pinfo, proto_wcp, 0, (void*)pdata_ptr);",
          "",
          "[Removed Lines]",
          "655:   memcpy( &pdata_ptr->buffer, buf_ptr->buf_cur,  len);",
          "",
          "[Added Lines]",
          "652:   if (buf_ptr->buf_cur + len > buf_end) {",
          "653:    expert_add_info_format(pinfo, cd_item, &ei_wcp_invalid_window_offset,",
          "654:     \"Uncompressed data exceeds available buffer length (%d > %d)\",",
          "655:     len, (int) (buf_end - buf_ptr->buf_cur));",
          "656:    return NULL;",
          "657:   }",
          "661:   memcpy( &pdata_ptr->buffer, buf_ptr->buf_cur, len);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "568ccd2250a754d7fde268b6fc2c95cded8b11c0",
      "candidate_info": {
        "commit_hash": "568ccd2250a754d7fde268b6fc2c95cded8b11c0",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/568ccd2250a754d7fde268b6fc2c95cded8b11c0",
        "files": [
          "epan/dissectors/packet-wcp.c"
        ],
        "message": "WCP: Add a length check.\n\nAdd a bounds check for the current window. Blind attempt at fixing bug\n14251.\n\nBug: 14251\nChange-Id: Ia3775bcabb2dc633b6994547125e53a4fe23451e\nReviewed-on: https://code.wireshark.org/review/25230\nReviewed-by: Gerald Combs <gerald@wireshark.org>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit a7e29d8b66dd7c1cb691966938404dafc6b89689)\nReviewed-on: https://code.wireshark.org/review/25233",
        "before_after_code_files": [
          "epan/dissectors/packet-wcp.c||epan/dissectors/packet-wcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-wcp.c||epan/dissectors/packet-wcp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-wcp.c||epan/dissectors/packet-wcp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-wcp.c||epan/dissectors/packet-wcp.c": [
          "File: epan/dissectors/packet-wcp.c -> epan/dissectors/packet-wcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "648:   }",
          "649:   len = pdata_ptr->len;",
          "650:  } else {",
          "653:   pdata_ptr = wmem_new(wmem_file_scope(), wcp_pdata_t);",
          "655:   pdata_ptr->len = len;",
          "657:   p_add_proto_data(wmem_file_scope(), pinfo, proto_wcp, 0, (void*)pdata_ptr);",
          "",
          "[Removed Lines]",
          "654:   memcpy( &pdata_ptr->buffer, buf_ptr->buf_cur,  len);",
          "",
          "[Added Lines]",
          "651:   if (buf_ptr->buf_cur + len > buf_end) {",
          "652:    expert_add_info_format(pinfo, cd_item, &ei_wcp_invalid_window_offset,",
          "653:     \"Uncompressed data exceeds available buffer length (%d > %d)\",",
          "654:     len, (int) (buf_end - buf_ptr->buf_cur));",
          "655:    return NULL;",
          "656:   }",
          "660:   memcpy( &pdata_ptr->buffer, buf_ptr->buf_cur, len);",
          "",
          "---------------"
        ]
      }
    }
  ]
}