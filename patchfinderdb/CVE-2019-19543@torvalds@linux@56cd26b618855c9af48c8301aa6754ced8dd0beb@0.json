{
  "cve_id": "CVE-2019-19543",
  "cve_desc": "In the Linux kernel before 5.1.6, there is a use-after-free in serial_ir_init_module() in drivers/media/rc/serial_ir.c.",
  "repo": "torvalds/linux",
  "patch_hash": "56cd26b618855c9af48c8301aa6754ced8dd0beb",
  "patch_info": {
    "commit_hash": "56cd26b618855c9af48c8301aa6754ced8dd0beb",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/56cd26b618855c9af48c8301aa6754ced8dd0beb",
    "files": [
      "drivers/media/rc/serial_ir.c"
    ],
    "message": "media: serial_ir: Fix use-after-free in serial_ir_init_module\n\nSyzkaller report this:\n\nBUG: KASAN: use-after-free in sysfs_remove_file_ns+0x5f/0x70 fs/sysfs/file.c:468\nRead of size 8 at addr ffff8881dc7ae030 by task syz-executor.0/6249\n\nCPU: 1 PID: 6249 Comm: syz-executor.0 Not tainted 5.0.0-rc8+ #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xfa/0x1ce lib/dump_stack.c:113\n print_address_description+0x65/0x270 mm/kasan/report.c:187\n kasan_report+0x149/0x18d mm/kasan/report.c:317\n ? 0xffffffffc1728000\n sysfs_remove_file_ns+0x5f/0x70 fs/sysfs/file.c:468\n sysfs_remove_file include/linux/sysfs.h:519 [inline]\n driver_remove_file+0x40/0x50 drivers/base/driver.c:122\n remove_bind_files drivers/base/bus.c:585 [inline]\n bus_remove_driver+0x186/0x220 drivers/base/bus.c:725\n driver_unregister+0x6c/0xa0 drivers/base/driver.c:197\n serial_ir_init_module+0x169/0x1000 [serial_ir]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f9450132c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000100 RDI: 0000000000000003\nRBP: 00007f9450132c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f94501336bc\nR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004\n\nAllocated by task 6249:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_kmalloc.constprop.3+0xa0/0xd0 mm/kasan/common.c:495\n kmalloc include/linux/slab.h:545 [inline]\n kzalloc include/linux/slab.h:740 [inline]\n bus_add_driver+0xc0/0x610 drivers/base/bus.c:651\n driver_register+0x1bb/0x3f0 drivers/base/driver.c:170\n serial_ir_init_module+0xe8/0x1000 [serial_ir]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFreed by task 6249:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_slab_free+0x130/0x180 mm/kasan/common.c:457\n slab_free_hook mm/slub.c:1430 [inline]\n slab_free_freelist_hook mm/slub.c:1457 [inline]\n slab_free mm/slub.c:3005 [inline]\n kfree+0xe1/0x270 mm/slub.c:3957\n kobject_cleanup lib/kobject.c:662 [inline]\n kobject_release lib/kobject.c:691 [inline]\n kref_put include/linux/kref.h:67 [inline]\n kobject_put+0x146/0x240 lib/kobject.c:708\n bus_remove_driver+0x10e/0x220 drivers/base/bus.c:732\n driver_unregister+0x6c/0xa0 drivers/base/driver.c:197\n serial_ir_init_module+0x14c/0x1000 [serial_ir]\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nThe buggy address belongs to the object at ffff8881dc7ae000\n which belongs to the cache kmalloc-256 of size 256\nThe buggy address is located 48 bytes inside of\n 256-byte region [ffff8881dc7ae000, ffff8881dc7ae100)\nThe buggy address belongs to the page:\npage:ffffea000771eb80 count:1 mapcount:0 mapping:ffff8881f6c02e00 index:0x0\nflags: 0x2fffc0000000200(slab)\nraw: 02fffc0000000200 ffffea0007d14800 0000000400000002 ffff8881f6c02e00\nraw: 0000000000000000 00000000800c000c 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8881dc7adf00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff8881dc7adf80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n>ffff8881dc7ae000: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                     ^\n ffff8881dc7ae080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff8881dc7ae100: fc fc fc fc fc fc fc fc 00 00 00 00 00 00 00 00\n\nThere are already cleanup handlings in serial_ir_init error path,\nno need to call serial_ir_exit do it again in serial_ir_init_module,\notherwise will trigger a use-after-free issue.\n\nFixes: fa5dc29c1fcc (\"[media] lirc_serial: move out of staging and rename to serial_ir\")\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nSigned-off-by: Sean Young <sean@mess.org>\nSigned-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>",
    "before_after_code_files": [
      "drivers/media/rc/serial_ir.c||drivers/media/rc/serial_ir.c"
    ]
  },
  "patch_diff": {
    "drivers/media/rc/serial_ir.c||drivers/media/rc/serial_ir.c": [
      "File: drivers/media/rc/serial_ir.c -> drivers/media/rc/serial_ir.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "774: static int __init serial_ir_init_module(void)",
      "775: {",
      "778:  switch (type) {",
      "779:  case IR_HOMEBREW:",
      "780:  case IR_IRDEO:",
      "",
      "[Removed Lines]",
      "776:  int result;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "802:  if (sense != -1)",
      "803:   sense = !!sense;",
      "811: }",
      "813: static void __exit serial_ir_exit_module(void)",
      "",
      "[Removed Lines]",
      "805:  result = serial_ir_init();",
      "806:  if (!result)",
      "807:   return 0;",
      "809:  serial_ir_exit();",
      "810:  return result;",
      "",
      "[Added Lines]",
      "803:  return serial_ir_init();",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "93faa52e8371f0291ee1ff4994edae2b336b6233",
      "candidate_info": {
        "commit_hash": "93faa52e8371f0291ee1ff4994edae2b336b6233",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/93faa52e8371f0291ee1ff4994edae2b336b6233",
        "files": [
          "tools/perf/tests/openat-syscall-all-cpus.c"
        ],
        "message": "perf tests: Fix a memory leak of cpu_map object in the openat_syscall_event_on_all_cpus test\n\n  =================================================================\n  ==7497==ERROR: LeakSanitizer: detected memory leaks\n\n  Direct leak of 40 byte(s) in 1 object(s) allocated from:\n      #0 0x7f0333a88f30 in __interceptor_malloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0xedf30)\n      #1 0x5625e5326213 in cpu_map__trim_new util/cpumap.c:45\n      #2 0x5625e5326703 in cpu_map__read util/cpumap.c:103\n      #3 0x5625e53267ef in cpu_map__read_all_cpu_map util/cpumap.c:120\n      #4 0x5625e5326915 in cpu_map__new util/cpumap.c:135\n      #5 0x5625e517b355 in test__openat_syscall_event_on_all_cpus tests/openat-syscall-all-cpus.c:36\n      #6 0x5625e51528e6 in run_test tests/builtin-test.c:358\n      #7 0x5625e5152baf in test_and_print tests/builtin-test.c:388\n      #8 0x5625e51543fe in __cmd_test tests/builtin-test.c:583\n      #9 0x5625e515572f in cmd_test tests/builtin-test.c:722\n      #10 0x5625e51c3fb8 in run_builtin /home/changbin/work/linux/tools/perf/perf.c:302\n      #11 0x5625e51c44f7 in handle_internal_command /home/changbin/work/linux/tools/perf/perf.c:354\n      #12 0x5625e51c48fb in run_argv /home/changbin/work/linux/tools/perf/perf.c:398\n      #13 0x5625e51c5069 in main /home/changbin/work/linux/tools/perf/perf.c:520\n      #14 0x7f033214d09a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n\nSigned-off-by: Changbin Du <changbin.du@gmail.com>\nReviewed-by: Jiri Olsa <jolsa@kernel.org>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Steven Rostedt (VMware) <rostedt@goodmis.org>\nFixes: f30a79b012e5 (\"perf tools: Add reference counting for cpu_map object\")\nLink: http://lkml.kernel.org/r/20190316080556.3075-15-changbin.du@gmail.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/tests/openat-syscall-all-cpus.c||tools/perf/tests/openat-syscall-all-cpus.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/tests/openat-syscall-all-cpus.c||tools/perf/tests/openat-syscall-all-cpus.c": [
          "File: tools/perf/tests/openat-syscall-all-cpus.c -> tools/perf/tests/openat-syscall-all-cpus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:  if (IS_ERR(evsel)) {",
          "46:   tracing_path__strerror_open_tp(errno, errbuf, sizeof(errbuf), \"syscalls\", \"sys_enter_openat\");",
          "47:   pr_debug(\"%s\\n\", errbuf);",
          "49:  }",
          "51:  if (perf_evsel__open(evsel, cpus, threads) < 0) {",
          "",
          "[Removed Lines]",
          "48:   goto out_thread_map_delete;",
          "",
          "[Added Lines]",
          "48:   goto out_cpu_map_delete;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:  perf_evsel__close_fd(evsel);",
          "120: out_evsel_delete:",
          "121:  perf_evsel__delete(evsel);",
          "122: out_thread_map_delete:",
          "123:  thread_map__put(threads);",
          "124:  return err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122: out_cpu_map_delete:",
          "123:  cpu_map__put(cpus);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "42dfa451d825a2ad15793c476f73e7bbc0f9d312",
      "candidate_info": {
        "commit_hash": "42dfa451d825a2ad15793c476f73e7bbc0f9d312",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/42dfa451d825a2ad15793c476f73e7bbc0f9d312",
        "files": [
          "tools/perf/util/evsel.c"
        ],
        "message": "perf evsel: Free evsel->counts in perf_evsel__exit()\n\nUsing gcc's ASan, Changbin reports:\n\n  =================================================================\n  ==7494==ERROR: LeakSanitizer: detected memory leaks\n\n  Direct leak of 48 byte(s) in 1 object(s) allocated from:\n      #0 0x7f0333a89138 in calloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0xee138)\n      #1 0x5625e5330a5e in zalloc util/util.h:23\n      #2 0x5625e5330a9b in perf_counts__new util/counts.c:10\n      #3 0x5625e5330ca0 in perf_evsel__alloc_counts util/counts.c:47\n      #4 0x5625e520d8e5 in __perf_evsel__read_on_cpu util/evsel.c:1505\n      #5 0x5625e517a985 in perf_evsel__read_on_cpu /home/work/linux/tools/perf/util/evsel.h:347\n      #6 0x5625e517ad1a in test__openat_syscall_event tests/openat-syscall.c:47\n      #7 0x5625e51528e6 in run_test tests/builtin-test.c:358\n      #8 0x5625e5152baf in test_and_print tests/builtin-test.c:388\n      #9 0x5625e51543fe in __cmd_test tests/builtin-test.c:583\n      #10 0x5625e515572f in cmd_test tests/builtin-test.c:722\n      #11 0x5625e51c3fb8 in run_builtin /home/changbin/work/linux/tools/perf/perf.c:302\n      #12 0x5625e51c44f7 in handle_internal_command /home/changbin/work/linux/tools/perf/perf.c:354\n      #13 0x5625e51c48fb in run_argv /home/changbin/work/linux/tools/perf/perf.c:398\n      #14 0x5625e51c5069 in main /home/changbin/work/linux/tools/perf/perf.c:520\n      #15 0x7f033214d09a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n\n  Indirect leak of 72 byte(s) in 1 object(s) allocated from:\n      #0 0x7f0333a89138 in calloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0xee138)\n      #1 0x5625e532560d in zalloc util/util.h:23\n      #2 0x5625e532566b in xyarray__new util/xyarray.c:10\n      #3 0x5625e5330aba in perf_counts__new util/counts.c:15\n      #4 0x5625e5330ca0 in perf_evsel__alloc_counts util/counts.c:47\n      #5 0x5625e520d8e5 in __perf_evsel__read_on_cpu util/evsel.c:1505\n      #6 0x5625e517a985 in perf_evsel__read_on_cpu /home/work/linux/tools/perf/util/evsel.h:347\n      #7 0x5625e517ad1a in test__openat_syscall_event tests/openat-syscall.c:47\n      #8 0x5625e51528e6 in run_test tests/builtin-test.c:358\n      #9 0x5625e5152baf in test_and_print tests/builtin-test.c:388\n      #10 0x5625e51543fe in __cmd_test tests/builtin-test.c:583\n      #11 0x5625e515572f in cmd_test tests/builtin-test.c:722\n      #12 0x5625e51c3fb8 in run_builtin /home/changbin/work/linux/tools/perf/perf.c:302\n      #13 0x5625e51c44f7 in handle_internal_command /home/changbin/work/linux/tools/perf/perf.c:354\n      #14 0x5625e51c48fb in run_argv /home/changbin/work/linux/tools/perf/perf.c:398\n      #15 0x5625e51c5069 in main /home/changbin/work/linux/tools/perf/perf.c:520\n      #16 0x7f033214d09a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n\nHis patch took care of evsel->prev_raw_counts, but the above backtraces\nare about evsel->counts, so fix that instead.\n\nReported-by: Changbin Du <changbin.du@gmail.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Steven Rostedt (VMware) <rostedt@goodmis.org>\nLink: https://lkml.kernel.org/n/tip-hd1x13g59f0nuhe4anxhsmfp@git.kernel.org\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/util/evsel.c||tools/perf/util/evsel.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/util/evsel.c||tools/perf/util/evsel.c": [
          "File: tools/perf/util/evsel.c -> tools/perf/util/evsel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1292: {",
          "1293:  assert(list_empty(&evsel->node));",
          "1294:  assert(evsel->evlist == NULL);",
          "1295:  perf_evsel__free_fd(evsel);",
          "1296:  perf_evsel__free_id(evsel);",
          "1297:  perf_evsel__free_config_terms(evsel);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1295:  perf_evsel__free_counts(evsel);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dea37a97265588da604c6ba80160a287b72c7bfd",
      "candidate_info": {
        "commit_hash": "dea37a97265588da604c6ba80160a287b72c7bfd",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/dea37a97265588da604c6ba80160a287b72c7bfd",
        "files": [
          "drivers/media/usb/cpia2/cpia2_v4l.c"
        ],
        "message": "media: cpia2: Fix use-after-free in cpia2_exit\n\nSyzkaller report this:\n\nBUG: KASAN: use-after-free in sysfs_remove_file_ns+0x5f/0x70 fs/sysfs/file.c:468\nRead of size 8 at addr ffff8881f59a6b70 by task syz-executor.0/8363\n\nCPU: 0 PID: 8363 Comm: syz-executor.0 Not tainted 5.0.0-rc8+ #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xfa/0x1ce lib/dump_stack.c:113\n print_address_description+0x65/0x270 mm/kasan/report.c:187\n kasan_report+0x149/0x18d mm/kasan/report.c:317\n sysfs_remove_file_ns+0x5f/0x70 fs/sysfs/file.c:468\n sysfs_remove_file include/linux/sysfs.h:519 [inline]\n driver_remove_file+0x40/0x50 drivers/base/driver.c:122\n usb_remove_newid_files drivers/usb/core/driver.c:212 [inline]\n usb_deregister+0x12a/0x3b0 drivers/usb/core/driver.c:1005\n cpia2_exit+0xa/0x16 [cpia2]\n __do_sys_delete_module kernel/module.c:1018 [inline]\n __se_sys_delete_module kernel/module.c:961 [inline]\n __x64_sys_delete_module+0x3dc/0x5e0 kernel/module.c:961\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f86f3754c58 EFLAGS: 00000246 ORIG_RAX: 00000000000000b0\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000020000300\nRBP: 0000000000000002 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f86f37556bc\nR13: 00000000004bcca9 R14: 00000000006f6b48 R15: 00000000ffffffff\n\nAllocated by task 8363:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_kmalloc.constprop.3+0xa0/0xd0 mm/kasan/common.c:495\n kmalloc include/linux/slab.h:545 [inline]\n kzalloc include/linux/slab.h:740 [inline]\n bus_add_driver+0xc0/0x610 drivers/base/bus.c:651\n driver_register+0x1bb/0x3f0 drivers/base/driver.c:170\n usb_register_driver+0x267/0x520 drivers/usb/core/driver.c:965\n 0xffffffffc1b4817c\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFreed by task 8363:\n set_track mm/kasan/common.c:85 [inline]\n __kasan_slab_free+0x130/0x180 mm/kasan/common.c:457\n slab_free_hook mm/slub.c:1430 [inline]\n slab_free_freelist_hook mm/slub.c:1457 [inline]\n slab_free mm/slub.c:3005 [inline]\n kfree+0xe1/0x270 mm/slub.c:3957\n kobject_cleanup lib/kobject.c:662 [inline]\n kobject_release lib/kobject.c:691 [inline]\n kref_put include/linux/kref.h:67 [inline]\n kobject_put+0x146/0x240 lib/kobject.c:708\n bus_remove_driver+0x10e/0x220 drivers/base/bus.c:732\n driver_unregister+0x6c/0xa0 drivers/base/driver.c:197\n usb_register_driver+0x341/0x520 drivers/usb/core/driver.c:980\n 0xffffffffc1b4817c\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nThe buggy address belongs to the object at ffff8881f59a6b40\n which belongs to the cache kmalloc-256 of size 256\nThe buggy address is located 48 bytes inside of\n 256-byte region [ffff8881f59a6b40, ffff8881f59a6c40)\nThe buggy address belongs to the page:\npage:ffffea0007d66980 count:1 mapcount:0 mapping:ffff8881f6c02e00 index:0x0\nflags: 0x2fffc0000000200(slab)\nraw: 02fffc0000000200 dead000000000100 dead000000000200 ffff8881f6c02e00\nraw: 0000000000000000 00000000800c000c 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8881f59a6a00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff8881f59a6a80: 00 00 00 00 00 00 00 00 00 00 fc fc fc fc fc fc\n>ffff8881f59a6b00: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb\n                                                             ^\n ffff8881f59a6b80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff8881f59a6c00: fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc fc\n\ncpia2_init does not check return value of cpia2_init, if it failed\nin usb_register_driver, there is already cleanup using driver_unregister.\nNo need call cpia2_usb_cleanup on module exit.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nSigned-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>\nSigned-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>",
        "before_after_code_files": [
          "drivers/media/usb/cpia2/cpia2_v4l.c||drivers/media/usb/cpia2/cpia2_v4l.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/media/usb/cpia2/cpia2_v4l.c||drivers/media/usb/cpia2/cpia2_v4l.c": [
          "File: drivers/media/usb/cpia2/cpia2_v4l.c -> drivers/media/usb/cpia2/cpia2_v4l.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1240:  LOG(\"%s v%s\\n\",",
          "1241:      ABOUT, CPIA_VERSION);",
          "1242:  check_parameters();",
          "1245: }",
          "",
          "[Removed Lines]",
          "1243:  cpia2_usb_init();",
          "1244:  return 0;",
          "",
          "[Added Lines]",
          "1243:  return cpia2_usb_init();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f97a8991d3b998e518f56794d879f645964de649",
      "candidate_info": {
        "commit_hash": "f97a8991d3b998e518f56794d879f645964de649",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f97a8991d3b998e518f56794d879f645964de649",
        "files": [
          "tools/perf/tests/expr.c"
        ],
        "message": "perf tests: Fix memory leak by expr__find_other() in test__expr()\n\n  =================================================================\n  ==7506==ERROR: LeakSanitizer: detected memory leaks\n\n  Direct leak of 13 byte(s) in 3 object(s) allocated from:\n      #0 0x7f03339d6070 in __interceptor_strdup (/usr/lib/x86_64-linux-gnu/libasan.so.5+0x3b070)\n      #1 0x5625e53aaef0 in expr__find_other util/expr.y:221\n      #2 0x5625e51bcd3f in test__expr tests/expr.c:52\n      #3 0x5625e51528e6 in run_test tests/builtin-test.c:358\n      #4 0x5625e5152baf in test_and_print tests/builtin-test.c:388\n      #5 0x5625e51543fe in __cmd_test tests/builtin-test.c:583\n      #6 0x5625e515572f in cmd_test tests/builtin-test.c:722\n      #7 0x5625e51c3fb8 in run_builtin /home/changbin/work/linux/tools/perf/perf.c:302\n      #8 0x5625e51c44f7 in handle_internal_command /home/changbin/work/linux/tools/perf/perf.c:354\n      #9 0x5625e51c48fb in run_argv /home/changbin/work/linux/tools/perf/perf.c:398\n      #10 0x5625e51c5069 in main /home/changbin/work/linux/tools/perf/perf.c:520\n      #11 0x7f033214d09a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n\nSigned-off-by: Changbin Du <changbin.du@gmail.com>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Andi Kleen <ak@linux.intel.com>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: Jiri Olsa <jolsa@kernel.org>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Steven Rostedt (VMware) <rostedt@goodmis.org>\nFixes: 075167363f8b (\"perf tools: Add a simple expression parser for JSON\")\nLink: http://lkml.kernel.org/r/20190316080556.3075-16-changbin.du@gmail.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/tests/expr.c||tools/perf/tests/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/tests/expr.c||tools/perf/tests/expr.c": [
          "File: tools/perf/tests/expr.c -> tools/perf/tests/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  const char *p;",
          "20:  const char **other;",
          "21:  double val;",
          "23:  struct parse_ctx ctx;",
          "24:  int num_other;",
          "",
          "[Removed Lines]",
          "22:  int ret;",
          "",
          "[Added Lines]",
          "22:  int i, ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:  TEST_ASSERT_VAL(\"find other\", !strcmp(other[1], \"BAZ\"));",
          "57:  TEST_ASSERT_VAL(\"find other\", !strcmp(other[2], \"BOZO\"));",
          "58:  TEST_ASSERT_VAL(\"find other\", other[3] == NULL);",
          "59:  free((void *)other);",
          "61:  return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:  for (i = 0; i < num_other; i++)",
          "61:   free((void *)other[i]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0dba9e4be95b59e77060645ca8e37ca3231061f5",
      "candidate_info": {
        "commit_hash": "0dba9e4be95b59e77060645ca8e37ca3231061f5",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0dba9e4be95b59e77060645ca8e37ca3231061f5",
        "files": [
          "tools/perf/builtin-top.c"
        ],
        "message": "perf top: Delete the evlist before perf_session, fixing heap-use-after-free issue\n\nThe evlist should be destroyed before the perf session.\n\nDetected with gcc's ASan:\n\n  =================================================================\n  ==27350==ERROR: AddressSanitizer: heap-use-after-free on address 0x62b000002e38 at pc 0x5611da276999 bp 0x7ffce8f1d1a0 sp 0x7ffce8f1d190\n  WRITE of size 8 at 0x62b000002e38 thread T0\n      #0 0x5611da276998 in __list_del /home/work/linux/tools/include/linux/list.h:89\n      #1 0x5611da276d4a in __list_del_entry /home/work/linux/tools/include/linux/list.h:102\n      #2 0x5611da276e77 in list_del_init /home/work/linux/tools/include/linux/list.h:145\n      #3 0x5611da2781cd in thread__put util/thread.c:130\n      #4 0x5611da2cc0a8 in __thread__zput util/thread.h:68\n      #5 0x5611da2d2dcb in hist_entry__delete util/hist.c:1148\n      #6 0x5611da2cdf91 in hists__delete_entry util/hist.c:337\n      #7 0x5611da2ce19e in hists__delete_entries util/hist.c:365\n      #8 0x5611da2db2ab in hists__delete_all_entries util/hist.c:2639\n      #9 0x5611da2db325 in hists_evsel__exit util/hist.c:2651\n      #10 0x5611da1c5352 in perf_evsel__exit util/evsel.c:1304\n      #11 0x5611da1c5390 in perf_evsel__delete util/evsel.c:1309\n      #12 0x5611da1b35f0 in perf_evlist__purge util/evlist.c:124\n      #13 0x5611da1b38e2 in perf_evlist__delete util/evlist.c:148\n      #14 0x5611da069781 in cmd_top /home/changbin/work/linux/tools/perf/builtin-top.c:1645\n      #15 0x5611da17d038 in run_builtin /home/changbin/work/linux/tools/perf/perf.c:302\n      #16 0x5611da17d577 in handle_internal_command /home/changbin/work/linux/tools/perf/perf.c:354\n      #17 0x5611da17d97b in run_argv /home/changbin/work/linux/tools/perf/perf.c:398\n      #18 0x5611da17e0e9 in main /home/changbin/work/linux/tools/perf/perf.c:520\n      #19 0x7fdcc970f09a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n      #20 0x5611d9ff35c9 in _start (/home/work/linux/tools/perf/perf+0x3e95c9)\n\n  0x62b000002e38 is located 11320 bytes inside of 27448-byte region [0x62b000000200,0x62b000006d38)\n  freed by thread T0 here:\n      #0 0x7fdccb04ab70 in free (/usr/lib/x86_64-linux-gnu/libasan.so.5+0xedb70)\n      #1 0x5611da260df4 in perf_session__delete util/session.c:201\n      #2 0x5611da063de5 in __cmd_top /home/changbin/work/linux/tools/perf/builtin-top.c:1300\n      #3 0x5611da06973c in cmd_top /home/changbin/work/linux/tools/perf/builtin-top.c:1642\n      #4 0x5611da17d038 in run_builtin /home/changbin/work/linux/tools/perf/perf.c:302\n      #5 0x5611da17d577 in handle_internal_command /home/changbin/work/linux/tools/perf/perf.c:354\n      #6 0x5611da17d97b in run_argv /home/changbin/work/linux/tools/perf/perf.c:398\n      #7 0x5611da17e0e9 in main /home/changbin/work/linux/tools/perf/perf.c:520\n      #8 0x7fdcc970f09a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n\n  previously allocated by thread T0 here:\n      #0 0x7fdccb04b138 in calloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0xee138)\n      #1 0x5611da26010c in zalloc util/util.h:23\n      #2 0x5611da260824 in perf_session__new util/session.c:118\n      #3 0x5611da0633a6 in __cmd_top /home/changbin/work/linux/tools/perf/builtin-top.c:1192\n      #4 0x5611da06973c in cmd_top /home/changbin/work/linux/tools/perf/builtin-top.c:1642\n      #5 0x5611da17d038 in run_builtin /home/changbin/work/linux/tools/perf/perf.c:302\n      #6 0x5611da17d577 in handle_internal_command /home/changbin/work/linux/tools/perf/perf.c:354\n      #7 0x5611da17d97b in run_argv /home/changbin/work/linux/tools/perf/perf.c:398\n      #8 0x5611da17e0e9 in main /home/changbin/work/linux/tools/perf/perf.c:520\n      #9 0x7fdcc970f09a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\n\n  SUMMARY: AddressSanitizer: heap-use-after-free /home/work/linux/tools/include/linux/list.h:89 in __list_del\n  Shadow bytes around the buggy address:\n    0x0c567fff8570: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n    0x0c567fff8580: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n    0x0c567fff8590: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n    0x0c567fff85a0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n    0x0c567fff85b0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n  =>0x0c567fff85c0: fd fd fd fd fd fd fd[fd]fd fd fd fd fd fd fd fd\n    0x0c567fff85d0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n    0x0c567fff85e0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n    0x0c567fff85f0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n    0x0c567fff8600: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n    0x0c567fff8610: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd\n  Shadow byte legend (one shadow byte represents 8 application bytes):\n    Addressable:           00\n    Partially addressable: 01 02 03 04 05 06 07\n    Heap left redzone:       fa\n    Freed heap region:       fd\n    Stack left redzone:      f1\n    Stack mid redzone:       f2\n    Stack right redzone:     f3\n    Stack after return:      f5\n    Stack use after scope:   f8\n    Global redzone:          f9\n    Global init order:       f6\n    Poisoned by user:        f7\n    Container overflow:      fc\n    Array cookie:            ac\n    Intra object redzone:    bb\n    ASan internal:           fe\n    Left alloca redzone:     ca\n    Right alloca redzone:    cb\n  ==27350==ABORTING\n\nSigned-off-by: Changbin Du <changbin.du@gmail.com>\nReviewed-by: Jiri Olsa <jolsa@kernel.org>\nCc: Alexei Starovoitov <ast@kernel.org>\nCc: Daniel Borkmann <daniel@iogearbox.net>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Steven Rostedt (VMware) <rostedt@goodmis.org>\nLink: http://lkml.kernel.org/r/20190316080556.3075-8-changbin.du@gmail.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/builtin-top.c||tools/perf/builtin-top.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/builtin-top.c||tools/perf/builtin-top.c": [
          "File: tools/perf/builtin-top.c -> tools/perf/builtin-top.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1189:  pthread_t thread, thread_process;",
          "1190:  int ret;",
          "1196:  if (!top->annotation_opts.objdump_path) {",
          "1197:   ret = perf_env__lookup_objdump(&top->session->header.env,",
          "1198:             &top->annotation_opts.objdump_path);",
          "1199:   if (ret)",
          "1201:  }",
          "1203:  ret = callchain_param__setup_sample_type(&callchain_param);",
          "1204:  if (ret)",
          "1207:  if (perf_session__register_idle_thread(top->session) < 0)",
          "1210:  if (top->nr_threads_synthesize > 1)",
          "1211:   perf_set_multithreaded();",
          "",
          "[Removed Lines]",
          "1192:  top->session = perf_session__new(NULL, false, NULL);",
          "1193:  if (top->session == NULL)",
          "1194:   return -1;",
          "1200:    goto out_delete;",
          "1205:   goto out_delete;",
          "1208:   goto out_delete;",
          "",
          "[Added Lines]",
          "1196:    return ret;",
          "1201:   return ret;",
          "1204:   return ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1228:  if (perf_hpp_list.socket) {",
          "1229:   ret = perf_env__read_cpu_topology_map(&perf_env);",
          "1232:  }",
          "1234:  ret = perf_top__start_counters(top);",
          "1235:  if (ret)",
          "1238:  top->session->evlist = top->evlist;",
          "1239:  perf_session__set_id_hdr_size(top->session);",
          "",
          "[Removed Lines]",
          "1230:   if (ret < 0)",
          "1231:    goto out_err_cpu_topo;",
          "1236:   goto out_delete;",
          "",
          "[Added Lines]",
          "1226:   if (ret < 0) {",
          "1227:    char errbuf[BUFSIZ];",
          "1228:    const char *err = str_error_r(-ret, errbuf, sizeof(errbuf));",
          "1230:    ui__error(\"Could not read the CPU topology map: %s\\n\", err);",
          "1231:    return ret;",
          "1232:   }",
          "1237:   return ret;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1252:  ret = -1;",
          "1253:  if (pthread_create(&thread_process, NULL, process_thread, top)) {",
          "1254:   ui__error(\"Could not create process thread.\\n\");",
          "1256:  }",
          "1258:  if (pthread_create(&thread, NULL, (use_browser > 0 ? display_thread_tui :",
          "",
          "[Removed Lines]",
          "1255:   goto out_delete;",
          "",
          "[Added Lines]",
          "1256:   return ret;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1296: out_join_thread:",
          "1297:  pthread_cond_signal(&top->qe.cond);",
          "1298:  pthread_join(thread_process, NULL);",
          "1303:  return ret;",
          "1312: }",
          "1314: static int",
          "",
          "[Removed Lines]",
          "1299: out_delete:",
          "1300:  perf_session__delete(top->session);",
          "1301:  top->session = NULL;",
          "1305: out_err_cpu_topo: {",
          "1306:  char errbuf[BUFSIZ];",
          "1307:  const char *err = str_error_r(-ret, errbuf, sizeof(errbuf));",
          "1309:  ui__error(\"Could not read the CPU topology map: %s\\n\", err);",
          "1310:  goto out_delete;",
          "1311: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1639:   signal(SIGWINCH, winch_sig);",
          "1640:  }",
          "1642:  status = __cmd_top(&top);",
          "1644: out_delete_evlist:",
          "1645:  perf_evlist__delete(top.evlist);",
          "1647:  return status;",
          "1648: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1631:  top.session = perf_session__new(NULL, false, NULL);",
          "1632:  if (top.session == NULL) {",
          "1633:   status = -1;",
          "1634:   goto out_delete_evlist;",
          "1635:  }",
          "1641:  perf_session__delete(top.session);",
          "",
          "---------------"
        ]
      }
    }
  ]
}