{
  "cve_id": "CVE-2021-29589",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. The reference implementation of the `GatherNd` TFLite operator is vulnerable to a division by zero error(https://github.com/tensorflow/tensorflow/blob/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7/tensorflow/lite/kernels/internal/reference/reference_ops.h#L966). An attacker can craft a model such that `params` input would be an empty tensor. In turn, `params_shape.Dims(.)` would be zero, in at least one dimension. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "8e45822aa0b9f5df4b4c64f221e64dc930a70a9d",
  "patch_info": {
    "commit_hash": "8e45822aa0b9f5df4b4c64f221e64dc930a70a9d",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/8e45822aa0b9f5df4b4c64f221e64dc930a70a9d",
    "files": [
      "tensorflow/lite/kernels/gather_nd.cc"
    ],
    "message": "Handle one more division by 0 in TFLite.\n\nPiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e",
    "before_after_code_files": [
      "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc": [
      "File: tensorflow/lite/kernels/gather_nd.cc -> tensorflow/lite/kernels/gather_nd.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "155:   TF_LITE_ENSURE_OK(context,",
      "156:                     GetOutputSafe(context, node, kOutputTensor, &output));",
      "158:   switch (indices->type) {",
      "159:     case kTfLiteInt32:",
      "160:       return EvalGatherNd<int32_t>(context, params, indices, output);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "159:   TF_LITE_ENSURE(context, NumElements(params) > 0);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0510ca8bcc1c6abbc97d9d6bf62531a7d81607f0",
      "candidate_info": {
        "commit_hash": "0510ca8bcc1c6abbc97d9d6bf62531a7d81607f0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0510ca8bcc1c6abbc97d9d6bf62531a7d81607f0",
        "files": [
          "tensorflow/lite/kernels/gather_nd.cc",
          "tensorflow/lite/kernels/gather_nd_test.cc",
          "tensorflow/lite/kernels/internal/reference/reference_ops.h",
          "tensorflow/lite/testing/op_tests/gather_nd.py"
        ],
        "message": "Enhance GatherND kernel: 1) Enhance checking input condition for GatherND to allow for 0-sized input params/indices. In TF, it's allowed to have both the params and indices tensor to have 0 elements. 2) In GatherNdHelper, return early when `n_slices=0` so that it can avoid dividing by 0.\n\nPiperOrigin-RevId: 438076508",
        "before_after_code_files": [
          "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc",
          "tensorflow/lite/kernels/gather_nd_test.cc||tensorflow/lite/kernels/gather_nd_test.cc",
          "tensorflow/lite/kernels/internal/reference/reference_ops.h||tensorflow/lite/kernels/internal/reference/reference_ops.h",
          "tensorflow/lite/testing/op_tests/gather_nd.py||tensorflow/lite/testing/op_tests/gather_nd.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc": [
          "File: tensorflow/lite/kernels/gather_nd.cc -> tensorflow/lite/kernels/gather_nd.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:   TF_LITE_ENSURE_OK(context,",
          "167:                     GetOutputSafe(context, node, kOutputTensor, &output));",
          "172:   switch (indices->type) {",
          "173:     case kTfLiteInt32:",
          "",
          "[Removed Lines]",
          "170:   TF_LITE_ENSURE(context, NumElements(params) > 0);",
          "",
          "[Added Lines]",
          "171:   TF_LITE_ENSURE(context,",
          "172:                  (NumElements(params) == 0 && NumElements(indices) == 0) ||",
          "173:                      NumElements(params) > 0);",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/gather_nd_test.cc||tensorflow/lite/kernels/gather_nd_test.cc": [
          "File: tensorflow/lite/kernels/gather_nd_test.cc -> tensorflow/lite/kernels/gather_nd_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "363:   EXPECT_THAT(m.GetOutput<std::string>(),",
          "364:               ElementsAreArray({\"D\", \"E\", \"F\", \"G\", \"H\", \"I\"}));",
          "365: }",
          "366: }  // namespace",
          "367: }  // namespace tflite",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "367: TEST(GatherNdOpTest, EmptyParamsAndIndex) {",
          "368:   GatherNdOpModel m({TensorType_FLOAT32, {1, 0}}, {TensorType_INT32, {0, 2}});",
          "369:   ASSERT_EQ(m.InvokeUnchecked(), kTfLiteOk);",
          "370:   EXPECT_THAT(m.GetOutputShape(), ElementsAreArray({0}));",
          "371: }",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/internal/reference/reference_ops.h||tensorflow/lite/kernels/internal/reference/reference_ops.h": [
          "File: tensorflow/lite/kernels/internal/reference/reference_ops.h -> tensorflow/lite/kernels/internal/reference/reference_ops.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "565:   for (int i = 0; i < indices_dims - 1; ++i) {",
          "566:     ret.n_slices *= indices_shape.Dims(i);",
          "567:   }",
          "568:   for (int i = ret.indices_nd; i < params_dims; ++i) {",
          "569:     ret.slice_size *= params_shape.Dims(i);",
          "570:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "568:   if (ret.n_slices == 0) return ret;",
          "",
          "---------------"
        ],
        "tensorflow/lite/testing/op_tests/gather_nd.py||tensorflow/lite/testing/op_tests/gather_nd.py": [
          "File: tensorflow/lite/testing/op_tests/gather_nd.py -> tensorflow/lite/testing/op_tests/gather_nd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:           \"indices_dtype\": [tf.int32, tf.int64],",
          "43:           \"indices_shape\": [[3, 1], [2, 2], [2, 3], [2, 1, 3]],",
          "44:       },",
          "45:   ]",
          "47:   def build_graph(parameters):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:       {",
          "46:           \"params_dtype\": [tf.float32, tf.string],",
          "47:           \"params_shape\": [[1, 0]],",
          "48:           \"indices_dtype\": [tf.int64],",
          "49:           \"indices_shape\": [[0, 2]],",
          "50:       },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7beecbfdc49ccf34ba2f1539b53fc003c428fa9",
      "candidate_info": {
        "commit_hash": "b7beecbfdc49ccf34ba2f1539b53fc003c428fa9",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/b7beecbfdc49ccf34ba2f1539b53fc003c428fa9",
        "files": [
          "tensorflow/lite/kernels/gather_nd.cc"
        ],
        "message": "Handle one more division by 0 in TFLite.\n\nPiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e",
        "before_after_code_files": [
          "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc": [
          "File: tensorflow/lite/kernels/gather_nd.cc -> tensorflow/lite/kernels/gather_nd.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:   const TfLiteTensor* indices = GetInput(context, node, kIndices);",
          "131:   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",
          "133:   switch (indices->type) {",
          "134:     case kTfLiteInt32:",
          "135:       return EvalGatherNd<int32_t>(context, params, indices, output);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:   TF_LITE_ENSURE(context, NumElements(params) > 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d3d9edfd789307380b2943550dfbb7dea5df090",
      "candidate_info": {
        "commit_hash": "6d3d9edfd789307380b2943550dfbb7dea5df090",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/6d3d9edfd789307380b2943550dfbb7dea5df090",
        "files": [
          "tensorflow/lite/kernels/gather_nd.cc"
        ],
        "message": "Handle one more division by 0 in TFLite.\n\nPiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e",
        "before_after_code_files": [
          "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc": [
          "File: tensorflow/lite/kernels/gather_nd.cc -> tensorflow/lite/kernels/gather_nd.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:   TF_LITE_ENSURE_OK(context,",
          "153:                     GetOutputSafe(context, node, kOutputTensor, &output));",
          "155:   switch (indices->type) {",
          "156:     case kTfLiteInt32:",
          "157:       return EvalGatherNd<int32_t>(context, params, indices, output);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156:   TF_LITE_ENSURE(context, NumElements(params) > 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4dcaf0cb5e9963b4436921d18e6806f7a2eefd5",
      "candidate_info": {
        "commit_hash": "c4dcaf0cb5e9963b4436921d18e6806f7a2eefd5",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c4dcaf0cb5e9963b4436921d18e6806f7a2eefd5",
        "files": [
          "tensorflow/lite/kernels/gather_nd.cc"
        ],
        "message": "Handle one more division by 0 in TFLite.\n\nPiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e",
        "before_after_code_files": [
          "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc": [
          "File: tensorflow/lite/kernels/gather_nd.cc -> tensorflow/lite/kernels/gather_nd.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:   const TfLiteTensor* indices = GetInput(context, node, kIndices);",
          "131:   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",
          "133:   switch (indices->type) {",
          "134:     case kTfLiteInt32:",
          "135:       return EvalGatherNd<int32_t>(context, params, indices, output);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:   TF_LITE_ENSURE(context, NumElements(params) > 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f5f9b021685c414846b3109f46057834270fbbf",
      "candidate_info": {
        "commit_hash": "6f5f9b021685c414846b3109f46057834270fbbf",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/6f5f9b021685c414846b3109f46057834270fbbf",
        "files": [
          "tensorflow/lite/kernels/gather_nd.cc"
        ],
        "message": "Handle one more division by 0 in TFLite.\n\nPiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e",
        "before_after_code_files": [
          "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/gather_nd.cc||tensorflow/lite/kernels/gather_nd.cc": [
          "File: tensorflow/lite/kernels/gather_nd.cc -> tensorflow/lite/kernels/gather_nd.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:   const TfLiteTensor* indices = GetInput(context, node, kIndices);",
          "145:   TfLiteTensor* output = GetOutput(context, node, kOutputTensor);",
          "147:   switch (indices->type) {",
          "148:     case kTfLiteInt32:",
          "149:       return EvalGatherNd<int32_t>(context, params, indices, output);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:   TF_LITE_ENSURE(context, NumElements(params) > 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}