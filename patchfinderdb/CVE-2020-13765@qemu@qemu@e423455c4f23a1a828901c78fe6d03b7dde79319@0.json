{
  "cve_id": "CVE-2020-13765",
  "cve_desc": "rom_copy() in hw/core/loader.c in QEMU 4.0 and 4.1.0 does not validate the relationship between two addresses, which allows attackers to trigger an invalid memory copy operation.",
  "repo": "qemu/qemu",
  "patch_hash": "e423455c4f23a1a828901c78fe6d03b7dde79319",
  "patch_info": {
    "commit_hash": "e423455c4f23a1a828901c78fe6d03b7dde79319",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/e423455c4f23a1a828901c78fe6d03b7dde79319",
    "files": [
      "hw/core/loader.c"
    ],
    "message": "hw/core/loader: Fix possible crash in rom_copy()\n\nBoth, \"rom->addr\" and \"addr\" are derived from the binary image\nthat can be loaded with the \"-kernel\" paramer. The code in\nrom_copy() then calculates:\n\n    d = dest + (rom->addr - addr);\n\nand uses \"d\" as destination in a memcpy() some lines later. Now with\nbad kernel images, it is possible that rom->addr is smaller than addr,\nthus \"rom->addr - addr\" gets negative and the memcpy() then tries to\ncopy contents from the image to a bad memory location. This could\nmaybe be used to inject code from a kernel image into the QEMU binary,\nso we better fix it with an additional sanity check here.\n\nCc: qemu-stable@nongnu.org\nReported-by: Guangming Liu\nBuglink: https://bugs.launchpad.net/qemu/+bug/1844635\nMessage-Id: <20190925130331.27825-1-thuth@redhat.com>\nReviewed-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: Thomas Huth <thuth@redhat.com>",
    "before_after_code_files": [
      "hw/core/loader.c||hw/core/loader.c"
    ]
  },
  "patch_diff": {
    "hw/core/loader.c||hw/core/loader.c": [
      "File: hw/core/loader.c -> hw/core/loader.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1281:         if (rom->addr + rom->romsize < addr) {",
      "1282:             continue;",
      "1283:         }",
      "1285:             break;",
      "1286:         }",
      "",
      "[Removed Lines]",
      "1284:         if (rom->addr > end) {",
      "",
      "[Added Lines]",
      "1284:         if (rom->addr > end || rom->addr < addr) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aae0faa5d3bee91c66dc4c1543190f55a242771e",
      "candidate_info": {
        "commit_hash": "aae0faa5d3bee91c66dc4c1543190f55a242771e",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/aae0faa5d3bee91c66dc4c1543190f55a242771e",
        "files": [
          "hw/core/loader.c"
        ],
        "message": "hw/core/loader: Fix possible crash in rom_copy()\n\nBoth, \"rom->addr\" and \"addr\" are derived from the binary image\nthat can be loaded with the \"-kernel\" paramer. The code in\nrom_copy() then calculates:\n\n    d = dest + (rom->addr - addr);\n\nand uses \"d\" as destination in a memcpy() some lines later. Now with\nbad kernel images, it is possible that rom->addr is smaller than addr,\nthus \"rom->addr - addr\" gets negative and the memcpy() then tries to\ncopy contents from the image to a bad memory location. This could\nmaybe be used to inject code from a kernel image into the QEMU binary,\nso we better fix it with an additional sanity check here.\n\nCc: qemu-stable@nongnu.org\nReported-by: Guangming Liu\nBuglink: https://bugs.launchpad.net/qemu/+bug/1844635\nMessage-Id: <20190925130331.27825-1-thuth@redhat.com>\nReviewed-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: Thomas Huth <thuth@redhat.com>\n(cherry picked from commit e423455c4f23a1a828901c78fe6d03b7dde79319)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/core/loader.c||hw/core/loader.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/core/loader.c||hw/core/loader.c"
          ],
          "candidate": [
            "hw/core/loader.c||hw/core/loader.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/core/loader.c||hw/core/loader.c": [
          "File: hw/core/loader.c -> hw/core/loader.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1242:         if (rom->addr + rom->romsize < addr) {",
          "1243:             continue;",
          "1244:         }",
          "1246:             break;",
          "1247:         }",
          "",
          "[Removed Lines]",
          "1245:         if (rom->addr > end) {",
          "",
          "[Added Lines]",
          "1245:         if (rom->addr > end || rom->addr < addr) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4f1c6cb2f9afafda05eab150fd2bd284edce6676",
      "candidate_info": {
        "commit_hash": "4f1c6cb2f9afafda05eab150fd2bd284edce6676",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/4f1c6cb2f9afafda05eab150fd2bd284edce6676",
        "files": [
          "hw/core/loader.c"
        ],
        "message": "hw/core/loader: Fix possible crash in rom_copy()\n\nBoth, \"rom->addr\" and \"addr\" are derived from the binary image\nthat can be loaded with the \"-kernel\" paramer. The code in\nrom_copy() then calculates:\n\n    d = dest + (rom->addr - addr);\n\nand uses \"d\" as destination in a memcpy() some lines later. Now with\nbad kernel images, it is possible that rom->addr is smaller than addr,\nthus \"rom->addr - addr\" gets negative and the memcpy() then tries to\ncopy contents from the image to a bad memory location. This could\nmaybe be used to inject code from a kernel image into the QEMU binary,\nso we better fix it with an additional sanity check here.\n\nCc: qemu-stable@nongnu.org\nReported-by: Guangming Liu\nBuglink: https://bugs.launchpad.net/qemu/+bug/1844635\nMessage-Id: <20190925130331.27825-1-thuth@redhat.com>\nReviewed-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: Thomas Huth <thuth@redhat.com>\n(cherry picked from commit e423455c4f23a1a828901c78fe6d03b7dde79319)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/core/loader.c||hw/core/loader.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/core/loader.c||hw/core/loader.c"
          ],
          "candidate": [
            "hw/core/loader.c||hw/core/loader.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/core/loader.c||hw/core/loader.c": [
          "File: hw/core/loader.c -> hw/core/loader.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1240:         if (rom->addr + rom->romsize < addr) {",
          "1241:             continue;",
          "1242:         }",
          "1244:             break;",
          "1245:         }",
          "",
          "[Removed Lines]",
          "1243:         if (rom->addr > end) {",
          "",
          "[Added Lines]",
          "1243:         if (rom->addr > end || rom->addr < addr) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}