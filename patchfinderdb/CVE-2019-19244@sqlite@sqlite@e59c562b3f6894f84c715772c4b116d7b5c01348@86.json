{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ccfa550922549e75e68a0e2b3ea862cdbb391e45",
      "candidate_info": {
        "commit_hash": "ccfa550922549e75e68a0e2b3ea862cdbb391e45",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ccfa550922549e75e68a0e2b3ea862cdbb391e45",
        "files": [
          "ext/fts5/fts5.h",
          "ext/fts5/fts5Int.h",
          "ext/fts5/fts5_index.c",
          "ext/fts5/fts5_main.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a buffer overrun that could occur in fts5 if a prefix query is made on a corrupt database.\n\nFossilOrigin-Name: 1abc4415648e69362061e9f9a4f2c1d419ba33801999b377650d8b9a4d2d3a7c",
        "before_after_code_files": [
          "ext/fts5/fts5.h||ext/fts5/fts5.h",
          "ext/fts5/fts5Int.h||ext/fts5/fts5Int.h",
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5.h||ext/fts5/fts5.h": [
          "File: ext/fts5/fts5.h -> ext/fts5/fts5.h"
        ],
        "ext/fts5/fts5Int.h||ext/fts5/fts5Int.h": [
          "File: ext/fts5/fts5Int.h -> ext/fts5/fts5Int.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "274: int sqlite3Fts5Get32(const u8*);",
          "276: #define FTS5_POS2COLUMN(iPos) (int)(iPos >> 32)",
          "279: typedef struct Fts5PoslistReader Fts5PoslistReader;",
          "280: struct Fts5PoslistReader {",
          "",
          "[Removed Lines]",
          "277: #define FTS5_POS2OFFSET(iPos) (int)(iPos & 0xFFFFFFFF)",
          "",
          "[Added Lines]",
          "277: #define FTS5_POS2OFFSET(iPos) (int)(iPos & 0x7FFFFFFF)",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5122:     }",
          "5123:     fts5MultiIterFree(p1);",
          "5126:     if( pData ){",
          "5127:       pData->p = (u8*)&pData[1];",
          "5128:       pData->nn = pData->szLeaf = doclist.n;",
          "",
          "[Removed Lines]",
          "5125:     pData = fts5IdxMalloc(p, sizeof(Fts5Data) + doclist.n);",
          "",
          "[Added Lines]",
          "5125:     pData = fts5IdxMalloc(p, sizeof(Fts5Data)+doclist.n+FTS5_DATA_ZERO_PADDING);",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c": [
          "File: ext/fts5/fts5_main.c -> ext/fts5/fts5_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1777:   int rc = SQLITE_OK;",
          "1781:   nIter = sqlite3Fts5ExprPhraseCount(pCsr->pExpr);",
          "1782:   if( pCsr->aInstIter==0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1780:   int nCol = ((Fts5Table*)pCsr->base.pVtab)->pConfig->nCol;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1830:         aInst[0] = iBest;",
          "1831:         aInst[1] = FTS5_POS2COLUMN(aIter[iBest].iPos);",
          "1832:         aInst[2] = FTS5_POS2OFFSET(aIter[iBest].iPos);",
          "1833:         sqlite3Fts5PoslistReaderNext(&aIter[iBest]);",
          "1834:       }",
          "1835:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1834:         if( aInst[1]<0 || aInst[1]>=nCol ){",
          "1835:           rc = FTS5_CORRUPT;",
          "1836:           break;",
          "1837:         }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "4679:   SELECT * FROM t1('a b') ORDER BY rank;",
          "4680: } {1 {database disk image is malformed}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4682: #-------------------------------------------------------------------------",
          "4683: reset_db",
          "4684: do_test 38.0 {",
          "4685:   sqlite3 db {}",
          "4686:   db deserialize [decode_hexdb {",
          "4687: | size 32768 pagesize 4096 filename crash-fd2a1313e5b5e9.db",
          "4688: | page 1 offset 0",
          "4689: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "4690: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 08   .....@  ........",
          "4691: |     32: 00 00 00 02 00 00 00 01 00 00 00 09 00 00 00 04   ................",
          "4692: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "4693: |     96: 00 00 00 00 0d 0f c7 00 07 0d 92 00 0f 8d 0f 36   ...............6",
          "4694: |    112: 0e cb 0e 6b 0e 0e 0d b6 0d 92 0d 92 00 00 00 00   ...k............",
          "4695: |   3472: 00 00 22 08 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "4696: |   3488: 32 74 32 08 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "4697: |   3504: 20 74 32 28 78 29 56 07 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "4698: |   3520: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "4699: |   3536: 6f 6e 66 69 67 07 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "4700: |   3552: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "4701: |   3568: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "4702: |   3584: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 06    WITHOUT ROWID[.",
          "4703: |   3600: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "4704: |   3616: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "4705: |   3632: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "4706: |   3648: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "4707: |   3664: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "4708: |   3680: 59 2c 20 73 7a 20 42 4c 4f 42 29 5e 05 07 17 21   Y, sz BLOB)^...!",
          "4709: |   3696: 21 01 81 07 74 61 62 6c 65 b8 31 5f 63 6f 6e 74   !...table.1_cont",
          "4710: |   3712: 65 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 05 43 52   entt1_content.CR",
          "4711: |   3728: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63   EATE TABLE 't1_c",
          "4712: |   3744: 6f 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47   ontent'(id INTEG",
          "4713: |   3760: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "4714: |   3776: 63 30 2c 20 63 31 2c 20 63 32 29 69 04 07 17 19   c0, c1, c2)i....",
          "4715: |   3792: 19 01 81 2d 74 61 62 6c 65 74 31 5f 69 64 78 74   ...-tablet1_idxt",
          "4716: |   3808: 31 5f 69 64 78 04 43 52 45 41 54 45 20 54 41 42   1_idx.CREATE TAB",
          "4717: |   3824: 4c 45 20 27 74 31 5f 69 64 78 27 28 73 65 67 69   LE 't1_idx'(segi",
          "4718: |   3840: 64 2c 20 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50   d, term, pgno, P",
          "4719: |   3856: 52 49 4d 41 52 59 20 4b 45 59 28 73 65 67 69 64   RIMARY KEY(segid",
          "4720: |   3872: 2c 20 74 65 72 6d 29 29 20 57 49 54 48 4f 55 54   , term)) WITHOUT",
          "4721: |   3888: 20 52 4f 57 49 44 55 03 07 17 1b 1b 01 81 01 74    ROWIDU........t",
          "4722: |   3904: 61 62 6c 65 74 31 5f 64 61 74 61 74 31 5f 64 61   ablet1_datat1_da",
          "4723: |   3920: 74 61 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   ta.CREATE TABLE",
          "4724: |   3936: 27 74 31 5f 64 61 74 61 27 28 69 64 20 49 4e 54   't1_data'(id INT",
          "4725: |   3952: 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59   EGER PRIMARY KEY",
          "4726: |   3968: 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 38 02 06   , block BLOB)8..",
          "4727: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "4728: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "4729: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 35   LE t1 USING fts5",
          "4730: |   4032: 28 61 2c 62 2c 63 29 00 00 00 39 00 00 00 00 00   (a,b,c)...9.....",
          "4731: | page 3 offset 8192",
          "4732: |      0: 0d 00 00 00 03 0c 94 00 0f e6 0f ef 0c 94 00 00   ................",
          "4733: |   3216: 00 00 00 00 86 4a 84 80 80 80 80 01 04 00 8d 18   .....J..........",
          "4734: |   3232: 00 00 03 2b 02 30 30 01 02 06 01 02 06 01 02 06   ...+.00.........",
          "4735: |   3248: 1f 02 03 01 02 03 01 02 03 01 08 32 30 31 36 30   ...........20160",
          "4736: |   3264: 36 30 39 01 02 07 01 02 07 01 02 07 01 01 34 01   609...........4.",
          "4737: |   3280: 02 05 01 02 05 01 02 05 01 01 35 01 02 04 01 02   ..........5.....",
          "4738: |   3296: 04 01 02 04 02 07 30 30 30 30 30 30 30 1c 02 04   ......0000000...",
          "4739: |   3312: 01 02 04 01 02 04 01 06 62 69 6e 61 72 79 03 06   ........binary..",
          "4740: |   3328: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "4741: |   3344: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "4742: |   3360: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "4743: |   3376: 03 06 01 02 02 03 06 01 02 02 01 08 63 6f 6d 70   ............comp",
          "4744: |   3392: 69 6c 65 72 01 02 02 01 02 02 01 02 02 01 06 64   iler...........d",
          "4745: |   3408: 62 73 74 61 74 07 02 03 01 02 03 01 02 03 02 04   bstat...........",
          "4746: |   3424: 65 62 75 67 04 02 02 01 02 02 01 02 02 01 06 65   ebug...........e",
          "4747: |   3440: 6e 61 62 6c 65 07 02 02 01 02 02 01 02 02 01 02   nable...........",
          "4748: |   3456: 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02   ................",
          "4749: |   3472: 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01   ................",
          "4750: |   3488: 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02   ................",
          "4751: |   3504: 02 01 02 02 02 08 78 74 65 6e 73 69 6f 6e 1f 02   ......xtension..",
          "4752: |   3520: 04 01 02 04 01 02 04 01 04 66 74 73 34 0a 02 03   .........fts4...",
          "4753: |   3536: 01 02 03 01 02 03 04 01 35 0d 02 03 01 02 03 01   ........5.......",
          "4754: |   3552: 02 03 01 03 67 63 63 01 02 03 01 02 03 01 02 03   ....gcc.........",
          "4755: |   3568: 02 06 65 6f 70 6f 6c 79 10 02 03 01 02 03 01 02   ..eopoly........",
          "4756: |   3584: 03 01 05 6a 73 6f 6e 31 13 02 03 01 02 03 01 02   ...json1........",
          "4757: |   3600: 03 01 04 6c 6f 61 64 1f 02 03 01 02 03 01 02 03   ...load.........",
          "4758: |   3616: 01 03 6d 61 78 1c 02 02 01 02 02 01 02 02 02 05   ..max...........",
          "4759: |   3632: 65 6d 6f 72 79 1c 02 03 01 02 03 01 02 03 04 04   emory...........",
          "4760: |   3648: 73 79 73 35 16 02 03 01 02 03 01 02 03 01 06 6e   sys5...........n",
          "4761: |   3664: 6f 63 61 73 65 02 06 01 02 02 03 06 01 02 02 03   ocase...........",
          "4762: |   3680: 06 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06   ................",
          "4763: |   3696: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "4764: |   3712: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "4765: |   3728: 02 01 04 6f 6d 69 74 1f 02 02 01 02 02 01 02 02   ...omit.........",
          "4766: |   3744: 01 05 72 74 72 65 65 19 02 03 01 02 03 01 02 03   ..rtree.........",
          "4767: |   3760: 04 02 69 6d 01 06 01 02 02 03 06 01 02 02 03 06   ..im............",
          "4768: |   3776: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "4769: |   3792: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "4770: |   3808: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "4771: |   3824: 01 0a 74 68 72 65 61 64 73 61 66 65 22 02 02 01   ..threadsafe....",
          "4772: |   3840: 02 02 01 02 01 01 04 76 74 61 62 07 02 04 01 02   .......vtab.....",
          "4773: |   3856: 04 01 02 04 01 01 78 01 06 01 01 02 01 06 01 01   ......x.........",
          "4774: |   3872: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "4775: |   3888: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "4776: |   3904: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "4777: |   3920: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "4778: |   3936: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "4779: |   3952: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "4780: |   3968: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "4781: |   3984: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "4782: |   4000: 01 01 02 01 06 01 01 02 01 06 01 ec 02 01 06 01   ................",
          "4783: |   4016: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "4784: |   4032: 02 01 06 01 01 02 01 06 01 01 01 04 15 13 0c 0c   ................",
          "4785: |   4048: 12 44 13 11 0f 47 13 0f 0c 0e 11 10 0f 0e 10 0f   .D...G..........",
          "4786: |   4064: 44 0f 10 40 15 0f 07 01 03 00 14 24 5a 24 24 0f   D..@.......$Z$$.",
          "4787: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "4788: | page 4 offset 12288",
          "4789: |      0: 0a 00 00 00 01 0f fa 00 0f fa 00 00 00 00 00 00   ................",
          "4790: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "4791: | page 5 offset 16384",
          "4792: |      0: 0d 00 00 00 24 0c 0a 00 0f d8 0f af 0f 86 0f 74   ....$..........t",
          "4793: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "4794: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 0d d5   ...t.[.@.$......",
          "4795: |     48: 0d bb 0d a0 0d 84 0d 68 0d 4f 0d 35 0d 1b 0c fb   .......h.O.5....",
          "4796: |     64: 0c da 0c b9 0c 99 0c 78 0c 57 0c 3e 0c 24 0c 0a   .......x.W.>.$..",
          "4797: |   3072: 00 00 00 00 00 00 00 00 00 00 18 24 05 00 25 0f   ...........$..%.",
          "4798: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "4799: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "4800: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 22   DSAFE=0XNOCASE..",
          "4801: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 45 3d   ..%..THREADSAFE=",
          "4802: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "4803: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49 4f   IT LOAD EXTENSIO",
          "4804: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "4805: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "4806: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "4807: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "4808: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "4809: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 60 35 30 30 30 30   MAX MEMORY`50000",
          "4810: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "4811: |   3296: 19 4d 41 58 20 4d 44 4d 4f 52 59 3d 35 30 30 30   .MAX MDMORY=5000",
          "4812: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "4813: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "4814: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "4815: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "4816: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "4817: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 43 41 53 45 17   LE RTREEXNOCASE.",
          "4818: |   3408: 19 05 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   ...%..ENABLE RTR",
          "4819: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "4820: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "4821: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "4822: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "4823: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "4824: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 15 05 00 25   MSYS5XRTRIM....%",
          "4825: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "4826: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "4827: |   3552: 4c 45 20 4a 53 4f 4e 31 58 4e 4f 43 41 53 45 17   LE JSON1XNOCASE.",
          "4828: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "4829: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "4830: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "4831: |   3616: 4e 41 52 59 1a 11 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "4832: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 43 41 53 45   E GEOPOLYXNOCASE",
          "4833: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "4834: |   3664: 4f 50 4f 4c 59 58 52 54 52 49 4d 17 0f 05 00 23   OPOLYXRTRIM....#",
          "4835: |   3680: 0f 19 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "4836: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "4837: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0d 05   E FTS5XNOCASE...",
          "4838: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "4839: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "4840: |   3760: 4c 45 20 46 54 53 34 58 42 49 4e 41 52 59 17 0b   LE FTS4XBINARY..",
          "4841: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 34   ..#..ENABLE FTS4",
          "4842: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "4843: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "4844: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4845: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "4846: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4847: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "4848: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4849: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   TAT VTABXRTRIM..",
          "4850: |   3920: 05 00 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "4851: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "4852: |   3952: 43 41 53 45 10 04 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "4853: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "4854: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "4855: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "4856: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "4857: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "4858: |   4048: 39 58 4e 4f 43 41 53 45 26 01 05 00 43 0f 17 43   9XNOCASE&...C..C",
          "4859: |   4064: 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPILER=gcc-5.4.",
          "4860: |   4080: 30 20 32 30 31 36 30 36 30 39 58 52 54 52 49 4d   0 20160609XRTRIM",
          "4861: | page 6 offset 20480",
          "4862: |      0: 0d 00 00 00 24 0e e0 00 0f f8 0f f0 0f e8 0f e0   ....$...........",
          "4863: |     16: 0f d8 0f d0 0f c8 0f c0 0f b8 0f b0 0f a8 0f a0   ................",
          "4864: |     32: 0f 98 0f 90 0f 88 0f 80 0f 78 0f 70 0f 68 0f 60   .........x.p.h.`",
          "4865: |     48: 0f 58 0f 50 0f 48 0f 40 0f 38 0f 30 0f 28 0f 20   .X.P.H.@.8.0.(.",
          "4866: |     64: 0f 18 0f 10 0f 08 0f 00 0e f8 0e f0 0e e8 0e e0   ................",
          "4867: |   3808: 06 24 03 00 12 02 01 01 06 23 03 00 12 02 01 01   .$.......#......",
          "4868: |   3824: 06 22 03 00 12 02 01 01 06 21 03 00 12 03 01 01   .........!......",
          "4869: |   3840: 06 20 03 00 12 03 01 01 06 1f 03 00 12 03 01 01   . ..............",
          "4870: |   3856: 06 1e 03 00 12 03 01 01 06 1d 03 00 12 03 01 01   ................",
          "4871: |   3872: 06 1c 03 00 12 03 01 01 16 1b 03 00 12 02 01 01   ................",
          "4872: |   3888: 06 1a 03 00 12 02 01 01 06 19 03 00 12 02 01 01   ................",
          "4873: |   3904: 06 18 03 00 12 02 01 01 06 17 03 00 12 02 01 01   ................",
          "4874: |   3920: 06 16 03 00 12 02 01 01 06 15 03 00 12 02 01 01   ................",
          "4875: |   3936: 06 14 03 00 12 02 01 01 06 13 03 00 12 02 01 01   ................",
          "4876: |   3952: 06 12 03 00 12 02 01 01 06 11 03 00 12 02 01 01   ................",
          "4877: |   3968: 06 10 03 00 12 02 01 01 06 0f 03 00 12 02 01 01   ................",
          "4878: |   3984: 06 0e 03 00 12 02 01 01 06 0d 03 00 12 02 01 01   ................",
          "4879: |   4000: 06 0c 03 00 12 02 01 01 06 0b 03 00 12 02 01 01   ................",
          "4880: |   4016: 06 0a 03 00 12 02 01 01 05 09 03 00 12 03 01 01   ................",
          "4881: |   4032: 06 08 03 00 12 03 01 01 06 07 03 10 12 03 01 01   ................",
          "4882: |   4048: 06 06 03 00 12 01 01 01 06 05 03 00 12 01 01 01   ................",
          "4883: |   4064: 06 04 03 00 12 01 01 01 06 03 03 00 12 05 f1 01   ................",
          "4884: |   4080: 06 02 03 00 12 06 01 01 06 01 03 00 12 06 01 01   ................",
          "4885: | page 7 offset 24576",
          "4886: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "4887: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "4888: | page 8 offset 28672",
          "4889: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e9 0f d6 00 00   ................",
          "4890: |   4048: 00 00 00 00 00 00 11 03 02 2b 69 6e 74 65 67 72   .........+integr",
          "4891: |   4064: 69 74 79 2d 63 68 65 63 6b 09 02 02 1b 72 65 62   ity-check....reb",
          "4892: |   4080: 75 69 6c 64 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   uild....optimize",
          "4893: | end crash-fd2a1313e5b5e9.db",
          "4894: }]} {}",
          "4896: do_catchsql_test 38.1 {",
          "4897:   UPDATE t1 SET b=quote(zeroblob(200)) WHERE t1 MATCH 'thread*';",
          "4898: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5b7d0c784e6467154d9549af0163d788b69d5e5a6478a735834cdea945e7dbb7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7ce167e5b89e45d203014fc6ad0dbbfa3d44346",
      "candidate_info": {
        "commit_hash": "a7ce167e5b89e45d203014fc6ad0dbbfa3d44346",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a7ce167e5b89e45d203014fc6ad0dbbfa3d44346",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/upsert.c",
          "test/upsert1.test"
        ],
        "message": "Make sure OP_RealAffinity has been applied to all columns of type REAL in the excluded.* pseudo-table of an UPSERT. Ticket [5a3dba8104421320]\n\nFossilOrigin-Name: 67381dadede98a55d8d9e085d021e6fa6473071978967b6302e03b28cf2245e1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/upsert.c||src/upsert.c",
          "test/upsert1.test||test/upsert1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 54553bf16fabd72d1967acef317beb518e086707ccd45890b7c7256b8da08b75",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/upsert.c||src/upsert.c": [
          "File: src/upsert.c -> src/upsert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:   sqlite3 *db = pParse->db;",
          "207:   int iDataCur;",
          "209:   assert( v!=0 );",
          "210:   assert( pUpsert!=0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208:   int i;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "221:       Index *pPk = sqlite3PrimaryKeyIndex(pTab);",
          "222:       int nPk = pPk->nKeyCol;",
          "223:       int iPk = pParse->nMem+1;",
          "225:       pParse->nMem += nPk;",
          "226:       for(i=0; i<nPk; i++){",
          "227:         int k;",
          "",
          "[Removed Lines]",
          "224:       int i;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "244:   pSrc = sqlite3SrcListDup(db, pUpsert->pUpsertSrc, 0);",
          "245:   sqlite3Update(pParse, pSrc, pUpsert->pUpsertSet,",
          "246:       pUpsert->pUpsertWhere, OE_Abort, 0, 0, pUpsert);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "246:   for(i=0; i<pTab->nCol; i++){",
          "247:     if( pTab->aCol[i].affinity==SQLITE_AFF_REAL ){",
          "248:       sqlite3VdbeAddOp1(v, OP_RealAffinity, pUpsert->regData+i);",
          "249:     }",
          "250:   }",
          "",
          "---------------"
        ],
        "test/upsert1.test||test/upsert1.test": [
          "File: test/upsert1.test -> test/upsert1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "210:   SELECT * FROM t1;",
          "211: } {1 2 33 4 5}",
          "214: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213: # 2019-08-30 ticket https://sqlite.org/src/info/5a3dba8104421320",
          "214: do_execsql_test upsert1-800 {",
          "215:   DROP TABLE IF EXISTS t0;",
          "216:   CREATE TABLE t0(c0 REAL UNIQUE, c1);",
          "217:   CREATE UNIQUE INDEX test800i0 ON t0(0 || c1);",
          "218:   INSERT INTO t0(c0, c1) VALUES (1, 2),  (2, 1);",
          "219:   INSERT INTO t0(c0) VALUES (1) ON CONFLICT(c0) DO UPDATE SET c1=excluded.c0;",
          "220:   PRAGMA integrity_check;",
          "221:   REINDEX;",
          "222: } {ok}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4afdfa195b0ae5fe3b8638c722c937792d3cfd0c",
      "candidate_info": {
        "commit_hash": "4afdfa195b0ae5fe3b8638c722c937792d3cfd0c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4afdfa195b0ae5fe3b8638c722c937792d3cfd0c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "test/window1.test"
        ],
        "message": "Fix the OP_OpenEphemeral opcode in the bytecode engine so that if it is called a second or subsequent time, it merely clears the existing table rather than creating a new one.  Proposed fix for ticket [d0866b26f83e9c55e30de0821f5d].\n\nFossilOrigin-Name: 4678cb1044f0b4dc813e48f3bd0f85240a66e2ecf8763280d66726cc031c93a7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "test/window1.test||test/window1.test"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "test/window1.test||test/window1.test"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1bdee199a71e0a6c247b85e72de9e3a3099b7179c33288735721facef3b96459",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3659:       SQLITE_OPEN_TRANSIENT_DB;",
          "3660:   assert( pOp->p1>=0 );",
          "3661:   assert( pOp->p2>=0 );",
          "3662:   pCx = allocateCursor(p, pOp->p1, pOp->p2, -1, CURTYPE_BTREE);",
          "3663:   if( pCx==0 ) goto no_mem;",
          "3664:   pCx->nullRow = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3665:   pCx = p->apCsr[pOp->p1];",
          "3666:   if( pCx ){",
          "3669:     rc = sqlite3BtreeClearTable(pCx->pBtx, pCx->pgnoRoot, 0);",
          "3670:     if( rc ) goto abort_due_to_error;",
          "3671:     break;",
          "3672:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3677:     if( (pCx->pKeyInfo = pKeyInfo = pOp->p4.pKeyInfo)!=0 ){",
          "3679:       assert( pOp->p4type==P4_KEYINFO );",
          "3681:       if( rc==SQLITE_OK ){",
          "3683:         assert( pKeyInfo->db==db );",
          "3684:         assert( pKeyInfo->enc==ENC(db) );",
          "3686:                                 pKeyInfo, pCx->uc.pCursor);",
          "3687:       }",
          "3688:       pCx->isTable = 0;",
          "3689:     }else{",
          "3690:       rc = sqlite3BtreeCursor(pCx->pBtx, MASTER_ROOT, BTREE_WRCSR,",
          "3691:                               0, pCx->uc.pCursor);",
          "3692:       pCx->isTable = 1;",
          "",
          "[Removed Lines]",
          "3678:       int pgno;",
          "3680:       rc = sqlite3BtreeCreateTable(pCx->pBtx, &pgno, BTREE_BLOBKEY | pOp->p5);",
          "3682:         assert( pgno==MASTER_ROOT+1 );",
          "3685:         rc = sqlite3BtreeCursor(pCx->pBtx, pgno, BTREE_WRCSR,",
          "",
          "[Added Lines]",
          "3690:       rc = sqlite3BtreeCreateTable(pCx->pBtx, (int*)&pCx->pgnoRoot,",
          "3691:                                    BTREE_BLOBKEY | pOp->p5);",
          "3693:         assert( pCx->pgnoRoot==MASTER_ROOT+1 );",
          "3696:         rc = sqlite3BtreeCursor(pCx->pBtx, pCx->pgnoRoot, BTREE_WRCSR,",
          "3701:       pCx->pgnoRoot = MASTER_ROOT;",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "620:   );",
          "621: } {1 2 3}",
          "623: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "623: # 2018-12-31",
          "624: # https://www.sqlite.org/src/info/d0866b26f83e9c55",
          "625: # Window function in correlated subquery causes assertion fault",
          "626: #",
          "627: do_catchsql_test 15.0 {",
          "628:   WITH t(id, parent) AS (",
          "629:   SELECT CAST(1 AS INT), CAST(NULL AS INT)",
          "630:   UNION ALL",
          "631:   SELECT 2, NULL",
          "632:   UNION ALL",
          "633:   SELECT 3, 1",
          "634:   UNION ALL",
          "635:   SELECT 4, 1",
          "636:   UNION ALL",
          "637:   SELECT 5, 2",
          "638:   UNION ALL",
          "639:   SELECT 6, 2",
          "640:   ), q AS (",
          "641:   SELECT t.*, ROW_NUMBER() OVER (ORDER BY t.id) AS rn",
          "642:     FROM t",
          "643:    WHERE parent IS NULL",
          "644:    UNION ALL",
          "645:   SELECT t.*, ROW_NUMBER() OVER (ORDER BY t.id) AS rn",
          "646:     FROM q",
          "647:     JOIN t",
          "648:       ON t.parent = q.id",
          "649:   )",
          "650:   SELECT *",
          "651:     FROM q;",
          "652: } {1 {cannot use window functions in recursive queries}}",
          "653: do_execsql_test 15.1 {",
          "654:   DROP TABLE IF EXISTS t1;",
          "655:   DROP TABLE IF EXISTS t2;",
          "656:   CREATE TABLE t1(x);",
          "657:   INSERT INTO t1 VALUES('a'), ('b'), ('c');",
          "658:   CREATE TABLE t2(a, b);",
          "659:   INSERT INTO t2 VALUES('X', 1), ('X', 2), ('Y', 2), ('Y', 3);",
          "660:   SELECT x, (",
          "661:     SELECT sum(b)",
          "662:       OVER (PARTITION BY a ROWS BETWEEN UNBOUNDED PRECEDING",
          "663:                                     AND UNBOUNDED FOLLOWING)",
          "664:     FROM t2 WHERE b<x",
          "665:   ) FROM t1;",
          "666: } {a 3 b 3 c 3}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca424382613ed62e80b54734231a1d1d8dd916bd",
      "candidate_info": {
        "commit_hash": "ca424382613ed62e80b54734231a1d1d8dd916bd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ca424382613ed62e80b54734231a1d1d8dd916bd",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix another problem with database freelist handling in the \".recover\" command.\n\nFossilOrigin-Name: bee2652ac26370e612a8c81dd7554befc2d523442a2fbbc77dc73479e6a0d7fd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: afdae10424f0f3d0f10a4b73e9732aa55c5ee664814d8ca0edd372cfb17c2445",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "6454:     \"DROP TABLE IF EXISTS recovery.freelist;\"",
          "6455:     \"DROP TABLE IF EXISTS recovery.map;\"",
          "6456:     \"DROP TABLE IF EXISTS recovery.schema;\"",
          "6474:     \"CREATE TABLE recovery.freelist(pgno INTEGER PRIMARY KEY);\", zRecoveryDb",
          "6475:   );",
          "",
          "[Removed Lines]",
          "6457:     \"CREATE TABLE recovery.dbptr(\"",
          "6458:     \"      pgno, child, PRIMARY KEY(child, pgno)\"",
          "6459:     \") WITHOUT ROWID;\"",
          "6460:     \"INSERT OR IGNORE INTO recovery.dbptr(pgno, child) \"",
          "6461:     \"    SELECT * FROM sqlite_dbptr;\"",
          "6465:     \"DELETE FROM recovery.dbptr WHERE child = 1;\"",
          "6470:     \"DELETE FROM recovery.dbptr WHERE child IN (\"",
          "6471:     \"  SELECT child FROM recovery.dbptr GROUP BY child HAVING count(*)>1\"",
          "6472:     \");\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6497:   }",
          "6499:   shellExec(pState->db, &rc,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6483:     \"CREATE TABLE recovery.dbptr(\"",
          "6484:     \"      pgno, child, PRIMARY KEY(child, pgno)\"",
          "6485:     \") WITHOUT ROWID;\"",
          "6486:     \"INSERT OR IGNORE INTO recovery.dbptr(pgno, child) \"",
          "6487:     \"    SELECT * FROM sqlite_dbptr\"",
          "6488:     \"      WHERE pgno NOT IN freelist AND child NOT IN freelist;\"",
          "6492:     \"DELETE FROM recovery.dbptr WHERE child = 1;\"",
          "6497:     \"DELETE FROM recovery.dbptr WHERE child IN (\"",
          "6498:     \"  SELECT child FROM recovery.dbptr GROUP BY child HAVING count(*)>1\"",
          "6499:     \");\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8b4d0e2cbad230860c724088bcdacaed000b2a99",
      "candidate_info": {
        "commit_hash": "8b4d0e2cbad230860c724088bcdacaed000b2a99",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8b4d0e2cbad230860c724088bcdacaed000b2a99",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts3misc.test"
        ],
        "message": "Ensure fts3/4 prefix indexes are flushed to disk before an 'optimize' command. Fix for [745f1abc].\n\nFossilOrigin-Name: 4ed905b18847d4dbf5a2570052abced338065f824137b90300f62d77b3159d80",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3misc.test||test/fts3misc.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3482:   int rc;",
          "3483:   sqlite3_stmt *pAllLangid = 0;",
          "3486:   if( rc==SQLITE_OK ){",
          "3487:     int rc2;",
          "3488:     sqlite3_bind_int(pAllLangid, 1, p->iPrevLangid);",
          "",
          "[Removed Lines]",
          "3485:   rc = fts3SqlStmt(p, SQL_SELECT_ALL_LANGID, &pAllLangid, 0);",
          "",
          "[Added Lines]",
          "3485:   rc = sqlite3Fts3PendingTermsFlush(p);",
          "3486:   if( rc==SQLITE_OK ){",
          "3487:     rc = fts3SqlStmt(p, SQL_SELECT_ALL_LANGID, &pAllLangid, 0);",
          "3488:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3503:   }",
          "3505:   sqlite3Fts3SegmentsClose(p);",
          "3508:   return (rc==SQLITE_OK && bReturnDone && bSeenDone) ? SQLITE_DONE : rc;",
          "3509: }",
          "",
          "[Removed Lines]",
          "3506:   sqlite3Fts3PendingTermsClear(p);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5863546df99abd1ad4ebcaba18dec647be4368e2c13ce0b28e48c8608d3e87ef",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3misc.test||test/fts3misc.test": [
          "File: test/fts3misc.test -> test/fts3misc.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "238: }",
          "240: #-------------------------------------------------------------------------",
          "241: #",
          "242: reset_db",
          "243: do_execsql_test 7.0.1 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "241: # Ticket [8a6fa2bb].",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "266:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "267: }",
          "271: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "269: #-------------------------------------------------------------------------",
          "270: # Ticket [745f1abc].",
          "271: #",
          "272: reset_db",
          "273: do_execsql_test 8.1 {",
          "274:   CREATE VIRTUAL TABLE vt0 USING fts4(c0, prefix=1);",
          "275: }",
          "276: do_execsql_test 8.2 {",
          "277:   BEGIN;",
          "278:     INSERT INTO vt0 VALUES (0);",
          "279:     INSERT INTO vt0(vt0) VALUES('optimize');",
          "280:   COMMIT;",
          "281: }",
          "282: do_execsql_test 8.3 {",
          "283:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "284: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}