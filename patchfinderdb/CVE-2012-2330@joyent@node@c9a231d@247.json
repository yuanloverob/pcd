{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f4f0daa44d57b93135bbaad3e81b8d199f42938b",
      "candidate_info": {
        "commit_hash": "f4f0daa44d57b93135bbaad3e81b8d199f42938b",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f4f0daa44d57b93135bbaad3e81b8d199f42938b",
        "files": [
          "deps/v8/build/common.gypi",
          "deps/v8/src/ast.cc",
          "deps/v8/src/ic.cc",
          "deps/v8/src/version.cc",
          "deps/v8/test/cctest/test-api.cc",
          "deps/v8/test/mjsunit/regress/regress-crbug-125148.js"
        ],
        "message": "V8: Upgrade to 3.11.10.17",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi",
          "deps/v8/src/ast.cc||deps/v8/src/ast.cc",
          "deps/v8/src/ic.cc||deps/v8/src/ic.cc",
          "deps/v8/src/version.cc||deps/v8/src/version.cc",
          "deps/v8/test/cctest/test-api.cc||deps/v8/test/cctest/test-api.cc",
          "deps/v8/test/mjsunit/regress/regress-crbug-125148.js||deps/v8/test/mjsunit/regress/regress-crbug-125148.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:           'WIN32',",
          "240:         ],",
          "241:         'msvs_configuration_attributes': {",
          "242:           'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "243:           'CharacterSet': '1',",
          "244:         },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:           'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "270:         'target_conditions': [",
          "271:           ['_toolset==\"host\"', {",
          "272:             'variables': {",
          "274:             },",
          "275:             'cflags': [ '<(m32flag)' ],",
          "276:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "273:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "274:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:           }],",
          "281:           ['_toolset==\"target\"', {",
          "282:             'variables': {",
          "284:             },",
          "285:             'cflags': [ '<(m32flag)' ],",
          "286:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "283:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "284:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "323:         },",
          "324:         'conditions': [",
          "325:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "327:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "328:           }],",
          "329:         ],",
          "",
          "[Removed Lines]",
          "326:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "327:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "332:         'conditions': [",
          "333:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\" \\",
          "334:             or OS==\"android\"', {",
          "335:             'cflags': [",
          "336:               '-fdata-sections',",
          "337:               '-ffunction-sections',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:             'cflags!': [",
          "337:               '-O2',",
          "338:               '-Os',",
          "339:             ],",
          "",
          "---------------"
        ],
        "deps/v8/src/ast.cc||deps/v8/src/ast.cc": [
          "File: deps/v8/src/ast.cc -> deps/v8/src/ast.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "524:     if (!type->prototype()->IsJSObject()) return false;",
          "526:     holder_ = Handle<JSObject>(JSObject::cast(type->prototype()));",
          "527:     type = Handle<Map>(holder()->map());",
          "528:   }",
          "529: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "527:     if (!holder_->HasFastProperties()) return false;",
          "",
          "---------------"
        ],
        "deps/v8/src/ic.cc||deps/v8/src/ic.cc": [
          "File: deps/v8/src/ic.cc -> deps/v8/src/ic.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "992:         if (callback->IsAccessorInfo()) {",
          "993:           Handle<AccessorInfo> info = Handle<AccessorInfo>::cast(callback);",
          "994:           if (v8::ToCData<Address>(info->getter()) == 0) return;",
          "995:           if (!info->IsCompatibleReceiver(*receiver)) return;",
          "996:           code = isolate()->stub_cache()->ComputeLoadCallback(",
          "997:               name, receiver, holder, info);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "995:           if (!receiver->HasFastProperties()) return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1268:         Handle<AccessorInfo> callback =",
          "1269:             Handle<AccessorInfo>::cast(callback_object);",
          "1270:         if (v8::ToCData<Address>(callback->getter()) == 0) return;",
          "1271:         if (!callback->IsCompatibleReceiver(*receiver)) return;",
          "1272:         code = isolate()->stub_cache()->ComputeKeyedLoadCallback(",
          "1273:             name, receiver, holder, callback);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1272:         if (!receiver->HasFastProperties()) return;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1487:       if (callback->IsAccessorInfo()) {",
          "1488:         Handle<AccessorInfo> info = Handle<AccessorInfo>::cast(callback);",
          "1489:         if (v8::ToCData<Address>(info->setter()) == 0) return;",
          "1490:         ASSERT(info->IsCompatibleReceiver(*receiver));",
          "1491:         code = isolate()->stub_cache()->ComputeStoreCallback(",
          "1492:             name, receiver, info, strict_mode);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1492:         if (!receiver->HasFastProperties()) return;",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     11",
          "37: #define BUILD_NUMBER      10",
          "41: #define IS_CANDIDATE_VERSION 0",
          "",
          "[Removed Lines]",
          "38: #define PATCH_LEVEL       15",
          "",
          "[Added Lines]",
          "38: #define PATCH_LEVEL       17",
          "",
          "---------------"
        ],
        "deps/v8/test/cctest/test-api.cc||deps/v8/test/cctest/test-api.cc": [
          "File: deps/v8/test/cctest/test-api.cc -> deps/v8/test/cctest/test-api.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "16811:     CHECK_EQ(6, message->GetLineNumber());",
          "16812:   }",
          "16813: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16816: THREADED_TEST(Regress137002a) {",
          "16817:   i::FLAG_allow_natives_syntax = true;",
          "16818:   v8::HandleScope scope;",
          "16819:   LocalContext context;",
          "16820:   Local<ObjectTemplate> templ = ObjectTemplate::New();",
          "16821:   templ->SetAccessor(v8_str(\"foo\"),",
          "16822:                      GetterWhichReturns42,",
          "16823:                      SetterWhichSetsYOnThisTo23);",
          "16824:   context->Global()->Set(v8_str(\"obj\"), templ->NewInstance());",
          "16828:   CompileRun(\"function f(x) { return x.foo; }\"",
          "16829:              \"%OptimizeObjectForAddingMultipleProperties(obj, 1);\"",
          "16830:              \"obj.__proto__ = null;\"",
          "16831:              \"f(obj); f(obj); f({});\"",
          "16832:              \"%OptimizeFunctionOnNextCall(f);\"",
          "16833:              \"var result = f(obj);\");",
          "16834:   CHECK_EQ(42, context->Global()->Get(v8_str(\"result\"))->Int32Value());",
          "16835: }",
          "16838: THREADED_TEST(Regress137002b) {",
          "16839:   i::FLAG_allow_natives_syntax = true;",
          "16840:   v8::HandleScope scope;",
          "16841:   LocalContext context;",
          "16842:   Local<ObjectTemplate> templ = ObjectTemplate::New();",
          "16843:   templ->SetAccessor(v8_str(\"foo\"),",
          "16844:                      GetterWhichReturns42,",
          "16845:                      SetterWhichSetsYOnThisTo23);",
          "16846:   context->Global()->Set(v8_str(\"obj\"), templ->NewInstance());",
          "16850:   CompileRun(\"function f(x) { return x.foo; }\"",
          "16851:              \"%OptimizeObjectForAddingMultipleProperties(obj, 1);\"",
          "16852:              \"obj.__proto__ = null;\"",
          "16853:              \"f(obj); f(obj); delete obj.foo;\"",
          "16854:              \"var result = f(obj);\");",
          "16855:   CHECK(context->Global()->Get(v8_str(\"result\"))->IsUndefined());",
          "16856: }",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-crbug-125148.js||deps/v8/test/mjsunit/regress/regress-crbug-125148.js": [
          "File: deps/v8/test/mjsunit/regress/regress-crbug-125148.js -> deps/v8/test/mjsunit/regress/regress-crbug-125148.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: var A = {",
          "31:   foo: function() { assertUnreachable(); }",
          "32: }",
          "34: var B = {",
          "35:   b: 2,",
          "36:   foo: function() { return 1; }",
          "37: }",
          "38: B.__proto__ = A;",
          "40: var C = {};",
          "41: C.__proto__ = B;",
          "43: function bar(x) {",
          "44:   return x.foo();",
          "45: }",
          "47: for (var i = 0; i < 3; i++) {",
          "48:   assertEquals(1, bar(C));",
          "49: }",
          "50: %OptimizeObjectForAddingMultipleProperties(B, 100);  // Force dictionary mode.",
          "51: %OptimizeFunctionOnNextCall(bar);",
          "52: assertEquals(1, bar(C));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "448c5e07ca594399f3d3f93ea6f97124ea56af95",
      "candidate_info": {
        "commit_hash": "448c5e07ca594399f3d3f93ea6f97124ea56af95",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/448c5e07ca594399f3d3f93ea6f97124ea56af95",
        "files": [
          "src/node_http_parser.cc"
        ],
        "message": "Revert \"Add HandleScope to http-parser binding\"\n\nThis commit did not actually fix the production crashes.\n\nThis reverts commit 73cf8e82e768af870964d6f3375ab758e774165c.",
        "before_after_code_files": [
          "src/node_http_parser.cc||src/node_http_parser.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "src/node_http_parser.cc||src/node_http_parser.cc"
          ],
          "candidate": [
            "src/node_http_parser.cc||src/node_http_parser.cc"
          ]
        }
      },
      "candidate_diff": {
        "src/node_http_parser.cc||src/node_http_parser.cc": [
          "File: src/node_http_parser.cc -> src/node_http_parser.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "121: #define HTTP_CB(name)                                               \\",
          "130: #define HTTP_DATA_CB(name)                                          \\",
          "131:   static int name(http_parser* p_, const char* at, size_t length) { \\",
          "133:     Parser* self = container_of(p_, Parser, parser_);               \\",
          "134:     return self->name##_(at, length);                               \\",
          "135:   }                                                                 \\",
          "",
          "[Removed Lines]",
          "122:     static int name(http_parser* p_) {                              \\",
          "123:       HandleScope scope;                                            \\",
          "124:       Parser* self = container_of(p_, Parser, parser_);             \\",
          "125:       return self->name##_();                                       \\",
          "126:     }                                                               \\",
          "127:     int always_inline name##_()",
          "132:     HandleScope scope;                                              \\",
          "",
          "[Added Lines]",
          "122:    static int name(http_parser* p_) {                              \\",
          "123:      Parser* self = container_of(p_, Parser, parser_);             \\",
          "124:      return self->name##_();                                       \\",
          "125:    }                                                               \\",
          "126:    int always_inline name##_()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "216:   Handle<String> ToString() const {",
          "223:   }",
          "",
          "[Removed Lines]",
          "217:     HandleScope scope;",
          "218:     if (str_) {",
          "219:       return scope.Close(String::New(str_, size_));",
          "220:     } else {",
          "221:       return scope.Close(String::Empty());",
          "222:     }",
          "",
          "[Added Lines]",
          "215:     if (str_)",
          "216:       return String::New(str_, size_);",
          "217:     else",
          "218:       return String::Empty();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "517: private:",
          "519:   Local<Array> CreateHeaders() {",
          "524:     Local<Array> headers = Array::New(2 * (num_values_ + 1));",
          "",
          "[Removed Lines]",
          "520:     HandleScope scope;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "528:       headers->Set(2 * i + 1, values_[i].ToString());",
          "529:     }",
          "532:   }",
          "",
          "[Removed Lines]",
          "531:     return scope.Close(headers);",
          "",
          "[Added Lines]",
          "525:     return headers;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5da78905a6c82aa40f79ae8ff1a74a53bc89a588",
      "candidate_info": {
        "commit_hash": "5da78905a6c82aa40f79ae8ff1a74a53bc89a588",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5da78905a6c82aa40f79ae8ff1a74a53bc89a588",
        "files": [
          "deps/uv/config-unix.mk",
          "deps/uv/src/unix/linux/core.c",
          "deps/uv/src/unix/linux/linux-core.c",
          "deps/uv/uv.gyp"
        ],
        "message": "deps: upgrade libuv to 5031a5b",
        "before_after_code_files": [
          "deps/uv/config-unix.mk||deps/uv/config-unix.mk",
          "deps/uv/uv.gyp||deps/uv/uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/config-unix.mk||deps/uv/config-unix.mk": [
          "File: deps/uv/config-unix.mk -> deps/uv/config-unix.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: CSTDFLAG += -D_GNU_SOURCE",
          "68: CPPFLAGS += -Isrc/ares/config_linux",
          "69: LINKFLAGS+=-ldl -lrt",
          "71: endif",
          "73: ifeq (FreeBSD,$(uname_S))",
          "",
          "[Removed Lines]",
          "70: OBJS += src/unix/linux/core.o src/unix/linux/inotify.o src/unix/linux/syscalls.o",
          "",
          "[Added Lines]",
          "70: OBJS += src/unix/linux/linux-core.o \\",
          "71:         src/unix/linux/inotify.o    \\",
          "72:         src/unix/linux/syscalls.o",
          "",
          "---------------"
        ],
        "deps/uv/uv.gyp||deps/uv/uv.gyp": [
          "File: deps/uv/uv.gyp -> deps/uv/uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "233:         [ 'OS==\"linux\"', {",
          "234:           'include_dirs': [ 'src/ares/config_linux' ],",
          "235:           'sources': [",
          "237:             'src/unix/linux/inotify.c',",
          "238:             'src/unix/linux/syscalls.c',",
          "239:             'src/unix/linux/syscalls.h',",
          "",
          "[Removed Lines]",
          "236:             'src/unix/linux/core.c',",
          "",
          "[Added Lines]",
          "236:             'src/unix/linux/linux-core.c',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27a937bcf824093b7707a845c6376cbaae1df78f",
      "candidate_info": {
        "commit_hash": "27a937bcf824093b7707a845c6376cbaae1df78f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/27a937bcf824093b7707a845c6376cbaae1df78f",
        "files": [
          "src/node.js"
        ],
        "message": "Revert \"startup: use `path.resolve` instead of `path.join(cwd, ...)`\"\n\nThis reverts commit b0c15412270f32e00c268c578f07a1ed032323f5.\n\nReverted commit introduced a regression causing `process.argv[0]` to be\ninvalid in node processes spawned from `PATH` (without explicit path to\nexecutable file - for example when using global node installation).\n\nInstead of finding a correct path to the executable, `process.cwd()`\nwould be prepended to `process.argv[0]`.",
        "before_after_code_files": [
          "src/node.js||src/node.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "434:   startup.resolveArgv0 = function() {",
          "435:     var cwd = process.cwd();",
          "444:   };",
          "",
          "[Removed Lines]",
          "442:     var path = NativeModule.require('path');",
          "443:     process.argv[0] = path.resolve(process.argv[0]);",
          "",
          "[Added Lines]",
          "436:     var isWindows = process.platform === 'win32';",
          "443:     var argv0 = process.argv[0];",
          "444:     if (!isWindows && argv0.indexOf('/') !== -1 && argv0.charAt(0) !== '/') {",
          "445:       var path = NativeModule.require('path');",
          "446:       process.argv[0] = path.join(cwd, process.argv[0]);",
          "447:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9a6f936c8a62c1a6edad3bda0faa8d8112b7cf92",
      "candidate_info": {
        "commit_hash": "9a6f936c8a62c1a6edad3bda0faa8d8112b7cf92",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9a6f936c8a62c1a6edad3bda0faa8d8112b7cf92",
        "files": [
          "test/simple/test-fs-watch.js"
        ],
        "message": "test-fs-watch: Add faster failure, and link to #2813",
        "before_after_code_files": [
          "test/simple/test-fs-watch.js||test/simple/test-fs-watch.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-fs-watch.js||test/simple/test-fs-watch.js": [
          "File: test/simple/test-fs-watch.js -> test/simple/test-fs-watch.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: var path = require('path');",
          "25: var fs = require('fs');",
          "27: var expectFilePath = process.platform == 'win32' || process.platform == 'linux';",
          "29: var watchSeenOne = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: if (process.platform === 'darwin') {",
          "29:   assert(false,",
          "30:          'This test is known to fail on OS X\\n' +",
          "31:          'See: https://github.com/joyent/node/issues/2813');",
          "32: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}