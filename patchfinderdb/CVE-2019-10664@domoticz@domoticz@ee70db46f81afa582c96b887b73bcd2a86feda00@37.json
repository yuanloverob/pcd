{
  "cve_id": "CVE-2019-10664",
  "cve_desc": "Domoticz before 4.10578 allows SQL Injection via the idx parameter in CWebServer::GetFloorplanImage in WebServer.cpp.",
  "repo": "domoticz/domoticz",
  "patch_hash": "ee70db46f81afa582c96b887b73bcd2a86feda00",
  "patch_info": {
    "commit_hash": "ee70db46f81afa582c96b887b73bcd2a86feda00",
    "repo": "domoticz/domoticz",
    "commit_url": "https://github.com/domoticz/domoticz/commit/ee70db46f81afa582c96b887b73bcd2a86feda00",
    "files": [
      "main/WebServer.cpp"
    ],
    "message": "Fixed possible SQL Injection Vulnerability (Thanks to Fabio Carretto!)",
    "before_after_code_files": [
      "main/WebServer.cpp||main/WebServer.cpp"
    ]
  },
  "patch_diff": {
    "main/WebServer.cpp||main/WebServer.cpp": [
      "File: main/WebServer.cpp -> main/WebServer.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10772:     return;",
      "10773:    }",
      "10774:    std::vector<std::vector<std::string> > result;",
      "10776:    if (result.empty())",
      "10777:     return;",
      "10778:    reply::set_content(&rep, result[0][0].begin(), result[0][0].end());",
      "",
      "[Removed Lines]",
      "10775:    result = m_sql.safe_queryBlob(\"SELECT Image FROM Floorplans WHERE ID=%s\", idx.c_str());",
      "",
      "[Added Lines]",
      "10775:    result = m_sql.safe_queryBlob(\"SELECT Image FROM Floorplans WHERE ID=%d\", atol(idx.c_str()));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cd16ded7d1e167ce21e461dfe816771162c2ebab",
      "candidate_info": {
        "commit_hash": "cd16ded7d1e167ce21e461dfe816771162c2ebab",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/cd16ded7d1e167ce21e461dfe816771162c2ebab",
        "files": [
          "push/InfluxPush.cpp",
          "push/InfluxPush.h",
          "www/app/DPInfluxController.js",
          "www/i18n/domoticz-ar.json.gz",
          "www/i18n/domoticz-bg.json.gz",
          "www/i18n/domoticz-bs.json.gz",
          "www/i18n/domoticz-ca.json.gz",
          "www/i18n/domoticz-cs.json.gz",
          "www/i18n/domoticz-da.json.gz",
          "www/i18n/domoticz-de.json.gz",
          "www/i18n/domoticz-el.json.gz",
          "www/i18n/domoticz-en.json.gz",
          "www/i18n/domoticz-es.json.gz",
          "www/i18n/domoticz-et.json.gz",
          "www/i18n/domoticz-fa.json.gz",
          "www/i18n/domoticz-fi.json.gz",
          "www/i18n/domoticz-fr.json.gz",
          "www/i18n/domoticz-he.json.gz",
          "www/i18n/domoticz-hu.json.gz",
          "www/i18n/domoticz-is.json.gz",
          "www/i18n/domoticz-it.json.gz",
          "www/i18n/domoticz-lt.json.gz",
          "www/i18n/domoticz-lv.json.gz",
          "www/i18n/domoticz-mk.json.gz",
          "www/i18n/domoticz-nl.json.gz",
          "www/i18n/domoticz-no.json.gz",
          "www/i18n/domoticz-pl.json.gz",
          "www/i18n/domoticz-pt.json.gz",
          "www/i18n/domoticz-ro.json.gz",
          "www/i18n/domoticz-ru.json.gz",
          "www/i18n/domoticz-sk.json.gz",
          "www/i18n/domoticz-sl.json.gz",
          "www/i18n/domoticz-sq.json.gz",
          "www/i18n/domoticz-sr.json.gz",
          "www/i18n/domoticz-sv.json.gz",
          "www/i18n/domoticz-th.json.gz",
          "www/i18n/domoticz-tr.json.gz",
          "www/i18n/domoticz-uk.json.gz",
          "www/i18n/domoticz-zh.json.gz",
          "www/i18n/domoticz-zh_TW.json.gz",
          "www/styles/default/custom.css",
          "www/views/dpinflux.html"
        ],
        "message": "InfluxDB pushed: added option for remote proxy path",
        "before_after_code_files": [
          "push/InfluxPush.cpp||push/InfluxPush.cpp",
          "push/InfluxPush.h||push/InfluxPush.h",
          "www/app/DPInfluxController.js||www/app/DPInfluxController.js",
          "www/styles/default/custom.css||www/styles/default/custom.css",
          "www/views/dpinflux.html||www/views/dpinflux.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "push/InfluxPush.cpp||push/InfluxPush.cpp": [
          "File: push/InfluxPush.cpp -> push/InfluxPush.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:  m_InfluxPort = 8086;",
          "60:  m_sql.GetPreferencesVar(\"InfluxIP\", m_InfluxIP);",
          "61:  m_sql.GetPreferencesVar(\"InfluxPort\", m_InfluxPort);",
          "62:  m_sql.GetPreferencesVar(\"InfluxDatabase\", m_InfluxDatabase);",
          "63:  m_sql.GetPreferencesVar(\"InfluxUsername\", m_InfluxUsername);",
          "64:  m_sql.GetPreferencesVar(\"InfluxPassword\", m_InfluxPassword);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:  m_sql.GetPreferencesVar(\"InfluxPath\", m_InfluxPath);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:  std::stringstream sURL;",
          "80:  if (m_InfluxIP.find(\"://\") == std::string::npos)",
          "81:   sURL << \"http://\";",
          "83:  if ((!m_InfluxUsername.empty()) && (!m_InfluxPassword.empty()))",
          "84:   sURL << \"u=\" << m_InfluxUsername << \"&p=\" << base64_decode(m_InfluxPassword) << \"&\";",
          "85:  sURL << \"db=\" << m_InfluxDatabase << \"&precision=s\";",
          "",
          "[Removed Lines]",
          "82:  sURL << m_InfluxIP << \":\" << m_InfluxPort << \"/write?\";",
          "",
          "[Added Lines]",
          "83:  sURL << m_InfluxIP << \":\" << m_InfluxPort;",
          "84:  if (!m_InfluxPath.empty())",
          "85:   sURL << \"/\" << m_InfluxPath;",
          "86:  sURL << \"/write?\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225:    std::string linkactive = request::findValue(&req, \"linkactive\");",
          "226:    std::string remote = request::findValue(&req, \"remote\");",
          "227:    std::string port = request::findValue(&req, \"port\");",
          "228:    std::string database = request::findValue(&req, \"database\");",
          "229:    std::string username = request::findValue(&req, \"username\");",
          "230:    std::string password = request::findValue(&req, \"password\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "232:    std::string path = request::findValue(&req, \"path\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "242:    m_sql.UpdatePreferencesVar(\"InfluxActive\", ilinkactive);",
          "243:    m_sql.UpdatePreferencesVar(\"InfluxIP\", remote.c_str());",
          "244:    m_sql.UpdatePreferencesVar(\"InfluxPort\", atoi(port.c_str()));",
          "245:    m_sql.UpdatePreferencesVar(\"InfluxDatabase\", database.c_str());",
          "246:    m_sql.UpdatePreferencesVar(\"InfluxUsername\", username.c_str());",
          "247:    m_sql.UpdatePreferencesVar(\"InfluxPassword\", base64_encode(password));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "250:    m_sql.UpdatePreferencesVar(\"InfluxPath\", path.c_str());",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "274:    {",
          "275:     root[\"InfluxPort\"] = nValue;",
          "276:    }",
          "277:    if (m_sql.GetPreferencesVar(\"InfluxDatabase\", sValue))",
          "278:    {",
          "279:     root[\"InfluxDatabase\"] = sValue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283:    if (m_sql.GetPreferencesVar(\"InfluxPath\", sValue))",
          "284:    {",
          "285:     root[\"InfluxPath\"] = sValue;",
          "286:    }",
          "",
          "---------------"
        ],
        "push/InfluxPush.h||push/InfluxPush.h": [
          "File: push/InfluxPush.h -> push/InfluxPush.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  std::string m_szURL;",
          "28:  std::string m_InfluxIP;",
          "29:  int m_InfluxPort;",
          "30:  std::string m_InfluxDatabase;",
          "31:  std::string m_InfluxUsername;",
          "32:  std::string m_InfluxPassword;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:  std::string m_InfluxPath;",
          "",
          "---------------"
        ],
        "www/app/DPInfluxController.js||www/app/DPInfluxController.js": [
          "File: www/app/DPInfluxController.js -> www/app/DPInfluxController.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:       if (data.status==\"OK\") {",
          "13:        $('#influxremote #tcpaddress').val(data.InfluxIP);",
          "14:        $('#influxremote #tcpport').val(data.InfluxPort);",
          "15:        $('#influxremote #database').val(data.InfluxDatabase);",
          "16:        $('#influxremote #username').val(data.InfluxUsername);",
          "17:        $('#influxremote #password').val(data.InfluxPassword);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:        $('#influxremote #path').val(data.InfluxPath);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:    var port = $('#influxremote #tcpport').val();",
          "44:    if (port.Length==0)",
          "45:     port=\"8086\";",
          "46:    var database = $('#influxremote #database').val();",
          "47:    var username = $('#influxremote #username').val();",
          "48:    var password = $('#influxremote #password').val();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:    var path = $('#influxremote #path').val();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57:      \"&linkactive=\" + linkactive +",
          "58:      \"&remote=\" + encodeURIComponent(remoteurl) +",
          "59:      \"&port=\" + port +",
          "60:      \"&database=\" + encodeURIComponent(database) +",
          "61:      \"&username=\" + encodeURIComponent(username) +",
          "62:      \"&password=\" + encodeURIComponent(password) +",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:      \"&path=\" + path +",
          "",
          "---------------"
        ],
        "www/styles/default/custom.css||www/styles/default/custom.css": [
          "File: www/styles/default/custom.css -> www/styles/default/custom.css"
        ],
        "www/views/dpinflux.html||www/views/dpinflux.html": [
          "File: www/views/dpinflux.html -> www/views/dpinflux.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:    <td align=\"right\" style=\"width:110px\"><label><span data-i18n=\"Port\"></span>:</label></td>",
          "63:    <td><input type=\"text\" id=\"tcpport\" style=\"width: 60px; padding: .2em;\" class=\"text ui-widget-content ui-corner-all\" /></td>",
          "64:   </tr>",
          "65:   <tr>",
          "66:    <td align=\"right\" style=\"width:110px\"><label><span data-i18n=\"Database\"></span>:</label></td>",
          "68:   </tr>",
          "69:   <tr>",
          "70:    <td align=\"right\" style=\"width:110px\"><label><span data-i18n=\"Username\"></span>:</label></td>",
          "72:   </tr>",
          "73:   <tr>",
          "74:    <td align=\"right\" style=\"width:110px\"><label><span data-i18n=\"Password\"></span>:</label></td>",
          "76:   </tr>",
          "77:   <tr>",
          "78:    <td align=\"right\" style=\"width:80px\"><span data-i18n=\"Debug to logfile\"></span>:</td>",
          "",
          "[Removed Lines]",
          "67:    <td><input type=\"text\" id=\"database\" style=\"width: 150px; padding: .2em;\" class=\"text ui-widget-content ui-corner-all\" />",
          "71:    <td><input type=\"text\" id=\"username\" style=\"width: 150px; padding: .2em;\" class=\"text ui-widget-content ui-corner-all\" />",
          "75:    <td><input type=\"text\" id=\"password\" style=\"width: 150px; padding: .2em;\" class=\"text ui-widget-content ui-corner-all\" />",
          "",
          "[Added Lines]",
          "65:   <tr>",
          "66:    <td align=\"right\" style=\"width:110px\"><label><span data-i18n=\"Path\"></span>:</label></td>",
          "67:    <td>",
          "68:     <input type=\"text\" id=\"path\" style=\"width: 150px; padding: .2em;\" class=\"text ui-widget-content ui-corner-all\" />&nbsp;(<span data-i18n=\"Only when using a Remote Proxy\"></span>)",
          "69:    </td>",
          "70:   </tr>",
          "73:    <td><input type=\"text\" id=\"database\" style=\"width: 150px; padding: .2em;\" class=\"text ui-widget-content ui-corner-all\" /></td>",
          "77:    <td><input type=\"text\" id=\"username\" style=\"width: 150px; padding: .2em;\" class=\"text ui-widget-content ui-corner-all\" /></td>",
          "81:    <td><input type=\"text\" id=\"password\" style=\"width: 150px; padding: .2em;\" class=\"text ui-widget-content ui-corner-all\" /></td>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2e8509c8bc7cb239f0bbb58643b73f131dd81fa",
      "candidate_info": {
        "commit_hash": "f2e8509c8bc7cb239f0bbb58643b73f131dd81fa",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/f2e8509c8bc7cb239f0bbb58643b73f131dd81fa",
        "files": [
          "hardware/Nest.cpp"
        ],
        "message": "Next Protect, removing Heat/US checks",
        "before_after_code_files": [
          "hardware/Nest.cpp||hardware/Nest.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/Nest.cpp||hardware/Nest.cpp": [
          "File: hardware/Nest.cpp -> hardware/Nest.cpp"
        ]
      }
    },
    {
      "candidate_hash": "88cca36c34d5e0fbf87a02994393f542c2a72620",
      "candidate_info": {
        "commit_hash": "88cca36c34d5e0fbf87a02994393f542c2a72620",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/88cca36c34d5e0fbf87a02994393f542c2a72620",
        "files": [
          "main/EventSystem.h"
        ],
        "message": "Fixed variable initialization",
        "before_after_code_files": [
          "main/EventSystem.h||main/EventSystem.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/EventSystem.h||main/EventSystem.h": [
          "File: main/EventSystem.h -> main/EventSystem.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   float fRandomSec = 0;",
          "48:   int iRepeat = 0;",
          "49:   float fRepeatSec = 0;",
          "51:  };",
          "52: public:",
          "53:  enum _eReason",
          "",
          "[Removed Lines]",
          "50:   bool bEventTrigger = 0;",
          "",
          "[Added Lines]",
          "50:   bool bEventTrigger = false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c07e23539fb3aa81e56fd7e3c1147398c6448be5",
      "candidate_info": {
        "commit_hash": "c07e23539fb3aa81e56fd7e3c1147398c6448be5",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/c07e23539fb3aa81e56fd7e3c1147398c6448be5",
        "files": [
          "hardware/RFLinkBase.cpp"
        ],
        "message": "RFLink support for Blyss type (with high unit number)",
        "before_after_code_files": [
          "hardware/RFLinkBase.cpp||hardware/RFLinkBase.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/RFLinkBase.cpp||hardware/RFLinkBase.cpp": [
          "File: hardware/RFLinkBase.cpp -> hardware/RFLinkBase.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "209:  ParseLine(\"20;AF;SelectPlus;ID=1bb4;CHIME=01;\");",
          "210:  ParseLine(\"20;04;Eurodomest;ID=03696b;SWITCH=07;CMD=ALLOFF;\");",
          "212: }",
          "214: CRFLinkBase::~CRFLinkBase()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212:  ParseLine(\"20;01;Blyss;ID=3fae;SWITCH=G1;CMD=ON;\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "290:  int m_SwitchType = 0;",
          "291:  char szDeviceID[20];",
          "292:  sprintf(szDeviceID, \"%08X\", pSwitch->id);",
          "",
          "[Removed Lines]",
          "293:  std::string ID = szDeviceID;",
          "294:  GetSwitchType(ID.c_str(), pSwitch->unitcode, pSwitch->type, pSwitch->subtype, m_SwitchType);",
          "",
          "[Added Lines]",
          "295:  GetSwitchType(szDeviceID, pSwitch->unitcode, pSwitch->type, pSwitch->subtype, m_SwitchType);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "334:   std::stringstream sstr;",
          "339:   _log.Log(LOG_STATUS, \"RFLink Sending: %s\", sstr.str().c_str());",
          "341:   sstr << '\\n';",
          "",
          "[Removed Lines]",
          "337:   sstr << \"10;\" << switchtype << \";\" << std::hex << std::nouppercase << std::setw(6) << std::setfill('0') << pSwitch->id << \";\" << std::hex << std::nouppercase << pSwitch->unitcode << \";\" << switchcmnd << \";\";",
          "",
          "[Added Lines]",
          "338:   sstr << \"10;\";",
          "339:   if (pSwitch->subtype != sSwitchTypeBlyss) {",
          "340:    sstr << switchtype << \";\" << std::hex << std::nouppercase << std::setw(6) << std::setfill('0') << pSwitch->id << \";\" << std::hex << std::nouppercase << pSwitch->unitcode << \";\" << switchcmnd << \";\";",
          "341:   }",
          "342:   else {",
          "344:    char szUnit[10];",
          "345:    sprintf(szUnit, \"%c%c\", (pSwitch->id & 0xFF00) >> 8, pSwitch->id & 0xFF);",
          "346:    sstr << switchtype << \";\" << std::hex << std::nouppercase << std::setw(6) << std::setfill('0') << (pSwitch->id >> 16) << \";\" << szUnit << \";\" << switchcmnd << \";\";",
          "347:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "585:  gswitch.rssi = 12;",
          "586:  gswitch.seqnbr = 0;",
          "587:  sDecodeRXMessage(this, (const unsigned char *)&gswitch, NULL, BatteryLevel);",
          "588:  return true;",
          "589: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "599:  WriteToHardware((const char*)&gswitch, sizeof(gswitch));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1110:   SendRGBWSwitch(ID, switchunit, BatteryLevel, rgbw, true, tmp_Name);",
          "1111:  } else if (bHaveSwitch && bHaveSwitchCmd) {",
          "1112:   std::string switchType = results[2];",
          "1113:   SendSwitchInt(ID, switchunit, BatteryLevel, switchType, switchcmd, switchlevel);",
          "1114:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1128:   if ((switchType == \"Blyss\")&&(results[4].size()==9))",
          "1129:   {",
          "1131:    char szTmp[20];",
          "1132:    std::stringstream sstr;",
          "1133:    sstr << std::hex << results[3].substr(3);",
          "1134:    sprintf(szTmp, \"%02x\", results[4][7]);",
          "1135:    sstr << szTmp;",
          "1136:    sprintf(szTmp, \"%02x\", results[4][8]);",
          "1137:    sstr << szTmp;",
          "1138:    sstr >> ID;",
          "1139:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "70ccb39335a3b80850011426aa2959521498dc9c",
      "candidate_info": {
        "commit_hash": "70ccb39335a3b80850011426aa2959521498dc9c",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/70ccb39335a3b80850011426aa2959521498dc9c",
        "files": [
          "msbuild/WindowsInstaller/DomoticzSetup.iss"
        ],
        "message": "Reverted win32 setup filename",
        "before_after_code_files": [
          "msbuild/WindowsInstaller/DomoticzSetup.iss||msbuild/WindowsInstaller/DomoticzSetup.iss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "msbuild/WindowsInstaller/DomoticzSetup.iss||msbuild/WindowsInstaller/DomoticzSetup.iss": [
          "File: msbuild/WindowsInstaller/DomoticzSetup.iss -> msbuild/WindowsInstaller/DomoticzSetup.iss",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: AllowNoIcons=yes",
          "32: LicenseFile=..\\..\\License.txt",
          "33: OutputDir=.",
          "36: SetupIconFile=install.ico",
          "37: Compression=lzma2",
          "38: PrivilegesRequired=admin",
          "",
          "[Removed Lines]",
          "34: ; OutputBaseFilename={#SetupBaseName + ShortAppVersionUnderscore}",
          "35: OutputBaseFilename={#SetupName}",
          "",
          "[Added Lines]",
          "34: OutputBaseFilename={#SetupBaseName + ShortAppVersionUnderscore}",
          "35: ; OutputBaseFilename={#SetupName}",
          "",
          "---------------"
        ]
      }
    }
  ]
}