{
  "cve_id": "CVE-2017-18232",
  "cve_desc": "The Serial Attached SCSI (SAS) implementation in the Linux kernel through 4.15.9 mishandles a mutex within libsas, which allows local users to cause a denial of service (deadlock) by triggering certain error-handling code.",
  "repo": "torvalds/linux",
  "patch_hash": "0558f33c06bb910e2879e355192227a8e8f0219d",
  "patch_info": {
    "commit_hash": "0558f33c06bb910e2879e355192227a8e8f0219d",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/0558f33c06bb910e2879e355192227a8e8f0219d",
    "files": [
      "drivers/scsi/libsas/sas_ata.c",
      "drivers/scsi/libsas/sas_discover.c",
      "drivers/scsi/libsas/sas_expander.c",
      "drivers/scsi/libsas/sas_internal.h",
      "drivers/scsi/libsas/sas_port.c",
      "include/scsi/libsas.h",
      "include/scsi/scsi_transport_sas.h"
    ],
    "message": "scsi: libsas: direct call probe and destruct\n\nIn commit 87c8331fcf72 (\"[SCSI] libsas: prevent domain rediscovery\ncompeting with ata error handling\") introduced disco mutex to prevent\nrediscovery competing with ata error handling and put the whole\nrevalidation in the mutex. But the rphy add/remove needs to wait for the\nerror handling which also grabs the disco mutex. This may leads to dead\nlock.So the probe and destruct event were introduce to do the rphy\nadd/remove asynchronously and out of the lock.\n\nThe asynchronously processed workers makes the whole discovery process\nnot atomic, the other events may interrupt the process. For example,\nif a loss of signal event inserted before the probe event, the\nsas_deform_port() is called and the port will be deleted.\n\nAnd sas_port_delete() may run before the destruct event, but the\nport-x:x is the top parent of end device or expander. This leads to\na kernel WARNING such as:\n\n[   82.042979] sysfs group 'power' not found for kobject 'phy-1:0:22'\n[   82.042983] ------------[ cut here ]------------\n[   82.042986] WARNING: CPU: 54 PID: 1714 at fs/sysfs/group.c:237\nsysfs_remove_group+0x94/0xa0\n[   82.043059] Call trace:\n[   82.043082] [<ffff0000082e7624>] sysfs_remove_group+0x94/0xa0\n[   82.043085] [<ffff00000864e320>] dpm_sysfs_remove+0x60/0x70\n[   82.043086] [<ffff00000863ee10>] device_del+0x138/0x308\n[   82.043089] [<ffff00000869a2d0>] sas_phy_delete+0x38/0x60\n[   82.043091] [<ffff00000869a86c>] do_sas_phy_delete+0x6c/0x80\n[   82.043093] [<ffff00000863dc20>] device_for_each_child+0x58/0xa0\n[   82.043095] [<ffff000008696f80>] sas_remove_children+0x40/0x50\n[   82.043100] [<ffff00000869d1bc>] sas_destruct_devices+0x64/0xa0\n[   82.043102] [<ffff0000080e93bc>] process_one_work+0x1fc/0x4b0\n[   82.043104] [<ffff0000080e96c0>] worker_thread+0x50/0x490\n[   82.043105] [<ffff0000080f0364>] kthread+0xfc/0x128\n[   82.043107] [<ffff0000080836c0>] ret_from_fork+0x10/0x50\n\nMake probe and destruct a direct call in the disco and revalidate function,\nbut put them outside the lock. The whole discovery or revalidate won't\nbe interrupted by other events. And the DISCE_PROBE and DISCE_DESTRUCT\nevent are deleted as a result of the direct call.\n\nIntroduce a new list to destruct the sas_port and put the port delete after\nthe destruct. This makes sure the right order of destroying the sysfs\nkobject and fix the warning above.\n\nIn sas_ex_revalidate_domain() have a loop to find all broadcasted\ndevice, and sometimes we have a chance to find the same expander twice.\nBecause the sas_port will be deleted at the end of the whole revalidate\nprocess, sas_port with the same name cannot be added before this.\nOtherwise the sysfs will complain of creating duplicate filename. Since\nthe LLDD will send broadcast for every device change, we can only\nprocess one expander's revalidation.\n\n[mkp: kbuild test robot warning]\n\nSigned-off-by: Jason Yan <yanaijie@huawei.com>\nCC: John Garry <john.garry@huawei.com>\nCC: Johannes Thumshirn <jthumshirn@suse.de>\nCC: Ewan Milne <emilne@redhat.com>\nCC: Christoph Hellwig <hch@lst.de>\nCC: Tomas Henzl <thenzl@redhat.com>\nCC: Dan Williams <dan.j.williams@intel.com>\nReviewed-by: Hannes Reinecke <hare@suse.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
    "before_after_code_files": [
      "drivers/scsi/libsas/sas_ata.c||drivers/scsi/libsas/sas_ata.c",
      "drivers/scsi/libsas/sas_discover.c||drivers/scsi/libsas/sas_discover.c",
      "drivers/scsi/libsas/sas_expander.c||drivers/scsi/libsas/sas_expander.c",
      "drivers/scsi/libsas/sas_internal.h||drivers/scsi/libsas/sas_internal.h",
      "drivers/scsi/libsas/sas_port.c||drivers/scsi/libsas/sas_port.c",
      "include/scsi/libsas.h||include/scsi/libsas.h",
      "include/scsi/scsi_transport_sas.h||include/scsi/scsi_transport_sas.h"
    ]
  },
  "patch_diff": {
    "drivers/scsi/libsas/sas_ata.c||drivers/scsi/libsas/sas_ata.c": [
      "File: drivers/scsi/libsas/sas_ata.c -> drivers/scsi/libsas/sas_ata.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "730:  if (res)",
      "731:   return res;",
      "734:  return 0;",
      "735: }",
      "",
      "[Removed Lines]",
      "733:  sas_discover_event(dev->port, DISCE_PROBE);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "drivers/scsi/libsas/sas_discover.c||drivers/scsi/libsas/sas_discover.c": [
      "File: drivers/scsi/libsas/sas_discover.c -> drivers/scsi/libsas/sas_discover.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "212:  }",
      "213: }",
      "216: {",
      "217:  struct domain_device *dev, *n;",
      "224:  list_for_each_entry(dev, &port->disco_list, disco_list_node) {",
      "",
      "[Removed Lines]",
      "215: static void sas_probe_devices(struct work_struct *work)",
      "218:  struct sas_discovery_event *ev = to_sas_discovery_event(work);",
      "219:  struct asd_sas_port *port = ev->port;",
      "221:  clear_bit(DISCE_PROBE, &port->disc.pending);",
      "",
      "[Added Lines]",
      "215: static void sas_probe_devices(struct asd_sas_port *port)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "294:  res = sas_notify_lldd_dev_found(dev);",
      "295:  if (res)",
      "296:   return res;",
      "299:  return 0;",
      "300: }",
      "",
      "[Removed Lines]",
      "297:  sas_discover_event(dev->port, DISCE_PROBE);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "353:  sas_put_device(dev);",
      "354: }",
      "357: {",
      "358:  struct domain_device *dev, *n;",
      "364:  list_for_each_entry_safe(dev, n, &port->destroy_list, disco_list_node) {",
      "365:   list_del_init(&dev->disco_list_node);",
      "",
      "[Removed Lines]",
      "356: static void sas_destruct_devices(struct work_struct *work)",
      "359:  struct sas_discovery_event *ev = to_sas_discovery_event(work);",
      "360:  struct asd_sas_port *port = ev->port;",
      "362:  clear_bit(DISCE_DESTRUCT, &port->disc.pending);",
      "",
      "[Added Lines]",
      "351: void sas_destruct_devices(struct asd_sas_port *port)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "370:  }",
      "371: }",
      "373: void sas_unregister_dev(struct asd_sas_port *port, struct domain_device *dev)",
      "374: {",
      "375:  if (!test_bit(SAS_DEV_DESTROY, &dev->state) &&",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "364: static void sas_destruct_ports(struct asd_sas_port *port)",
      "365: {",
      "366:  struct sas_port *sas_port, *p;",
      "368:  list_for_each_entry_safe(sas_port, p, &port->sas_port_del_list, del_list) {",
      "369:   list_del_init(&sas_port->del_list);",
      "370:   sas_port_delete(sas_port);",
      "371:  }",
      "372: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "384:  if (!test_and_set_bit(SAS_DEV_DESTROY, &dev->state)) {",
      "385:   sas_rphy_unlink(dev->rphy);",
      "386:   list_move_tail(&dev->disco_list_node, &port->destroy_list);",
      "388:  }",
      "389: }",
      "",
      "[Removed Lines]",
      "387:   sas_discover_event(dev->port, DISCE_DESTRUCT);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "490:   port->port_dev = NULL;",
      "491:  }",
      "493:  SAS_DPRINTK(\"DONE DISCOVERY on port %d, pid:%d, result:%d\\n\", port->id,",
      "494:       task_pid_nr(current), error);",
      "495: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "493:  sas_probe_devices(port);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "523:       port->id, task_pid_nr(current), res);",
      "524:  out:",
      "525:  mutex_unlock(&ha->disco_mutex);",
      "526: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "529:  sas_destruct_devices(port);",
      "530:  sas_destruct_ports(port);",
      "531:  sas_probe_devices(port);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "578:  static const work_func_t sas_event_fns[DISC_NUM_EVENTS] = {",
      "579:   [DISCE_DISCOVER_DOMAIN] = sas_discover_domain,",
      "580:   [DISCE_REVALIDATE_DOMAIN] = sas_revalidate_domain,",
      "582:   [DISCE_SUSPEND] = sas_suspend_devices,",
      "583:   [DISCE_RESUME] = sas_resume_devices,",
      "585:  };",
      "587:  disc->pending = 0;",
      "",
      "[Removed Lines]",
      "581:   [DISCE_PROBE] = sas_probe_devices,",
      "584:   [DISCE_DESTRUCT] = sas_destruct_devices,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "drivers/scsi/libsas/sas_expander.c||drivers/scsi/libsas/sas_expander.c": [
      "File: drivers/scsi/libsas/sas_expander.c -> drivers/scsi/libsas/sas_expander.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1916:   sas_port_delete_phy(phy->port, phy->phy);",
      "1917:   sas_device_set_phy(found, phy->port);",
      "1918:   if (phy->port->num_phys == 0)",
      "1920:   phy->port = NULL;",
      "1921:  }",
      "1922: }",
      "",
      "[Removed Lines]",
      "1919:    sas_port_delete(phy->port);",
      "",
      "[Added Lines]",
      "1919:    list_add_tail(&phy->port->del_list,",
      "1920:     &parent->port->sas_port_del_list);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2124:  struct domain_device *dev = NULL;",
      "2126:  res = sas_find_bcast_dev(port_dev, &dev);",
      "2128:   struct expander_device *ex = &dev->ex_dev;",
      "2129:   int i = 0, phy_id;",
      "",
      "[Removed Lines]",
      "2127:  while (res == 0 && dev) {",
      "",
      "[Added Lines]",
      "2128:  if (res == 0 && dev) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2136:    res = sas_rediscover(dev, phy_id);",
      "2137:    i = phy_id + 1;",
      "2138:   } while (i < ex->num_phys);",
      "2142:  }",
      "2143:  return res;",
      "2144: }",
      "",
      "[Removed Lines]",
      "2140:   dev = NULL;",
      "2141:   res = sas_find_bcast_dev(port_dev, &dev);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "drivers/scsi/libsas/sas_internal.h||drivers/scsi/libsas/sas_internal.h": [
      "File: drivers/scsi/libsas/sas_internal.h -> drivers/scsi/libsas/sas_internal.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "101: void sas_hae_reset(struct work_struct *work);",
      "103: void sas_free_device(struct kref *kref);",
      "105: extern const work_func_t sas_phy_event_fns[PHY_NUM_EVENTS];",
      "106: extern const work_func_t sas_port_event_fns[PORT_NUM_EVENTS];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "104: void sas_destruct_devices(struct asd_sas_port *port);",
      "",
      "---------------"
    ],
    "drivers/scsi/libsas/sas_port.c||drivers/scsi/libsas/sas_port.c": [
      "File: drivers/scsi/libsas/sas_port.c -> drivers/scsi/libsas/sas_port.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "66:   rc = sas_notify_lldd_dev_found(dev);",
      "67:   if (rc) {",
      "68:    sas_unregister_dev(port, dev);",
      "69:    continue;",
      "70:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "69:    sas_destruct_devices(port);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "221:  if (port->num_phys == 1) {",
      "222:   sas_unregister_domain_devices(port, gone);",
      "223:   sas_port_delete(port->port);",
      "224:   port->port = NULL;",
      "225:  } else {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "224:   sas_destruct_devices(port);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "317:  INIT_LIST_HEAD(&port->dev_list);",
      "318:  INIT_LIST_HEAD(&port->disco_list);",
      "319:  INIT_LIST_HEAD(&port->destroy_list);",
      "320:  spin_lock_init(&port->phy_list_lock);",
      "321:  INIT_LIST_HEAD(&port->phy_list);",
      "322:  port->ha = sas_ha;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "322:  INIT_LIST_HEAD(&port->sas_port_del_list);",
      "",
      "---------------"
    ],
    "include/scsi/libsas.h||include/scsi/libsas.h": [
      "File: include/scsi/libsas.h -> include/scsi/libsas.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "82: enum discover_event {",
      "83:  DISCE_DISCOVER_DOMAIN   = 0U,",
      "84:  DISCE_REVALIDATE_DOMAIN,",
      "86:  DISCE_SUSPEND,",
      "87:  DISCE_RESUME,",
      "89:  DISC_NUM_EVENTS,",
      "90: };",
      "",
      "[Removed Lines]",
      "85:  DISCE_PROBE,",
      "88:  DISCE_DESTRUCT,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "262:  struct list_head dev_list;",
      "263:  struct list_head disco_list;",
      "264:  struct list_head destroy_list;",
      "265:  enum   sas_linkrate linkrate;",
      "267:  struct sas_work work;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "263:  struct list_head sas_port_del_list;",
      "",
      "---------------"
    ],
    "include/scsi/scsi_transport_sas.h||include/scsi/scsi_transport_sas.h": [
      "File: include/scsi/scsi_transport_sas.h -> include/scsi/scsi_transport_sas.h"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0d78f969b10f27e0be34210d482a01e1ee92994c",
      "candidate_info": {
        "commit_hash": "0d78f969b10f27e0be34210d482a01e1ee92994c",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0d78f969b10f27e0be34210d482a01e1ee92994c",
        "files": [
          "include/scsi/libsas.h"
        ],
        "message": "scsi: libsas: remove the numbering for each event enum\n\nNumbering for each event enum makes no sense. Remove the numbering so\nthat we don't have to calculate the number by hand every time.\n\nSigned-off-by: Jason Yan <yanaijie@huawei.com>\nCC: John Garry <john.garry@huawei.com>\nCC: Johannes Thumshirn <jthumshirn@suse.de>\nCC: Ewan Milne <emilne@redhat.com>\nCC: Christoph Hellwig <hch@lst.de>\nCC: Tomas Henzl <thenzl@redhat.com>\nReviewed-by: Johannes Thumshirn <jthumshirn@suse.de>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
        "before_after_code_files": [
          "include/scsi/libsas.h||include/scsi/libsas.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/scsi/libsas.h||include/scsi/libsas.h"
          ],
          "candidate": [
            "include/scsi/libsas.h||include/scsi/libsas.h"
          ]
        }
      },
      "candidate_diff": {
        "include/scsi/libsas.h||include/scsi/libsas.h": [
          "File: include/scsi/libsas.h -> include/scsi/libsas.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: enum port_event {",
          "64:  PORTE_BYTES_DMAED     = 0U,",
          "70: };",
          "72: enum phy_event {",
          "73:  PHYE_LOSS_OF_SIGNAL   = 0U,",
          "79: };",
          "81: enum discover_event {",
          "82:  DISCE_DISCOVER_DOMAIN   = 0U,",
          "90: };",
          "",
          "[Removed Lines]",
          "65:  PORTE_BROADCAST_RCVD  = 1,",
          "66:  PORTE_LINK_RESET_ERR  = 2,",
          "67:  PORTE_TIMER_EVENT     = 3,",
          "68:  PORTE_HARD_RESET      = 4,",
          "69:  PORT_NUM_EVENTS       = 5,",
          "74:  PHYE_OOB_DONE         = 1,",
          "75:  PHYE_OOB_ERROR        = 2,",
          "77:  PHYE_RESUME_TIMEOUT   = 4,",
          "78:  PHY_NUM_EVENTS        = 5,",
          "83:  DISCE_REVALIDATE_DOMAIN = 1,",
          "84:  DISCE_PORT_GONE         = 2,",
          "85:  DISCE_PROBE  = 3,",
          "86:  DISCE_SUSPEND  = 4,",
          "87:  DISCE_RESUME  = 5,",
          "88:  DISCE_DESTRUCT  = 6,",
          "89:  DISC_NUM_EVENTS  = 7,",
          "",
          "[Added Lines]",
          "65:  PORTE_BROADCAST_RCVD,",
          "66:  PORTE_LINK_RESET_ERR,",
          "67:  PORTE_TIMER_EVENT,",
          "68:  PORTE_HARD_RESET,",
          "69:  PORT_NUM_EVENTS,",
          "74:  PHYE_OOB_DONE,",
          "75:  PHYE_OOB_ERROR,",
          "77:  PHYE_RESUME_TIMEOUT,",
          "78:  PHY_NUM_EVENTS,",
          "83:  DISCE_REVALIDATE_DOMAIN,",
          "84:  DISCE_PORT_GONE,",
          "85:  DISCE_PROBE,",
          "86:  DISCE_SUSPEND,",
          "87:  DISCE_RESUME,",
          "88:  DISCE_DESTRUCT,",
          "89:  DISC_NUM_EVENTS,",
          "",
          "---------------"
        ]
      }
    }
  ]
}