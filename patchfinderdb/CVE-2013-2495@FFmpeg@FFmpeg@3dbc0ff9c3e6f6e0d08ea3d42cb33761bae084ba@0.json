{
  "cve_id": "CVE-2013-2495",
  "cve_desc": "The iff_read_header function in iff.c in libavformat in FFmpeg through 1.1.3 does not properly handle data sizes for Interchange File Format (IFF) data during operations involving a CMAP chunk or a video codec, which allows remote attackers to cause a denial of service (integer overflow, out-of-bounds array access, and application crash) or possibly have unspecified other impact via a crafted header.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "3dbc0ff9c3e6f6e0d08ea3d42cb33761bae084ba",
  "patch_info": {
    "commit_hash": "3dbc0ff9c3e6f6e0d08ea3d42cb33761bae084ba",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/3dbc0ff9c3e6f6e0d08ea3d42cb33761bae084ba",
    "files": [
      "libavformat/iff.c"
    ],
    "message": "iff: fix integer overflow\n\nFixes out of array accesses\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavformat/iff.c||libavformat/iff.c"
    ]
  },
  "patch_diff": {
    "libavformat/iff.c||libavformat/iff.c": [
      "File: libavformat/iff.c -> libavformat/iff.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "250:             break;",
      "252:         case ID_CMAP:",
      "253:             st->codec->extradata_size = data_size + IFF_EXTRA_VIDEO_SIZE;",
      "254:             st->codec->extradata      = av_malloc(data_size + IFF_EXTRA_VIDEO_SIZE + FF_INPUT_BUFFER_PADDING_SIZE);",
      "255:             if (!st->codec->extradata)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "253:             if (data_size > INT_MAX - IFF_EXTRA_VIDEO_SIZE - FF_INPUT_BUFFER_PADDING_SIZE)",
      "254:                 return AVERROR_INVALIDDATA;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "410:             if (!st->codec->extradata)",
      "411:                 return AVERROR(ENOMEM);",
      "412:         }",
      "413:         buf = st->codec->extradata;",
      "414:         bytestream_put_be16(&buf, IFF_EXTRA_VIDEO_SIZE);",
      "415:         bytestream_put_byte(&buf, iff->bitmap_compression);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "415:         av_assert0(st->codec->extradata_size >= IFF_EXTRA_VIDEO_SIZE);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f719e6566c08dc1e18cf1caf07ba8c0e93cd7283",
      "candidate_info": {
        "commit_hash": "f719e6566c08dc1e18cf1caf07ba8c0e93cd7283",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f719e6566c08dc1e18cf1caf07ba8c0e93cd7283",
        "files": [
          "libavformat/iff.c"
        ],
        "message": "iff: fix integer overflow\n\nFixes out of array accesses\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 3dbc0ff9c3e6f6e0d08ea3d42cb33761bae084ba)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavformat/iff.c||libavformat/iff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/iff.c||libavformat/iff.c"
          ],
          "candidate": [
            "libavformat/iff.c||libavformat/iff.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/iff.c||libavformat/iff.c": [
          "File: libavformat/iff.c -> libavformat/iff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "249:             break;",
          "251:         case ID_CMAP:",
          "252:             st->codec->extradata_size = data_size + IFF_EXTRA_VIDEO_SIZE;",
          "253:             st->codec->extradata      = av_malloc(data_size + IFF_EXTRA_VIDEO_SIZE + FF_INPUT_BUFFER_PADDING_SIZE);",
          "254:             if (!st->codec->extradata)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "252:             if (data_size > INT_MAX - IFF_EXTRA_VIDEO_SIZE - FF_INPUT_BUFFER_PADDING_SIZE)",
          "253:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "409:             if (!st->codec->extradata)",
          "410:                 return AVERROR(ENOMEM);",
          "411:         }",
          "412:         buf = st->codec->extradata;",
          "413:         bytestream_put_be16(&buf, IFF_EXTRA_VIDEO_SIZE);",
          "414:         bytestream_put_byte(&buf, iff->bitmap_compression);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "414:         av_assert0(st->codec->extradata_size >= IFF_EXTRA_VIDEO_SIZE);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "31f337c1e44ebe53e4e23b24aa6c2a62f6862236",
      "candidate_info": {
        "commit_hash": "31f337c1e44ebe53e4e23b24aa6c2a62f6862236",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/31f337c1e44ebe53e4e23b24aa6c2a62f6862236",
        "files": [
          "libavformat/iff.c"
        ],
        "message": "iff: fix integer overflow\n\nFixes out of array accesses\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 3dbc0ff9c3e6f6e0d08ea3d42cb33761bae084ba)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavformat/iff.c||libavformat/iff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/iff.c||libavformat/iff.c"
          ],
          "candidate": [
            "libavformat/iff.c||libavformat/iff.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/iff.c||libavformat/iff.c": [
          "File: libavformat/iff.c -> libavformat/iff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:             break;",
          "203:         case ID_CMAP:",
          "204:             st->codec->extradata_size = data_size + IFF_EXTRA_VIDEO_SIZE;",
          "205:             st->codec->extradata      = av_malloc(data_size + IFF_EXTRA_VIDEO_SIZE + FF_INPUT_BUFFER_PADDING_SIZE);",
          "206:             if (!st->codec->extradata)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:             if (data_size > INT_MAX - IFF_EXTRA_VIDEO_SIZE - FF_INPUT_BUFFER_PADDING_SIZE)",
          "205:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "323:             if (!st->codec->extradata)",
          "324:                 return AVERROR(ENOMEM);",
          "325:         }",
          "326:         buf = st->codec->extradata;",
          "327:         bytestream_put_be16(&buf, IFF_EXTRA_VIDEO_SIZE);",
          "328:         bytestream_put_byte(&buf, iff->bitmap_compression);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "328:         av_assert0(st->codec->extradata_size >= IFF_EXTRA_VIDEO_SIZE);",
          "",
          "---------------"
        ]
      }
    }
  ]
}