{
  "cve_id": "CVE-2019-12098",
  "cve_desc": "In the client side of Heimdal before 7.6.0, failure to verify anonymous PKINIT PA-PKINIT-KX key exchange permits a man-in-the-middle attack. This issue is in krb5_init_creds_step in lib/krb5/init_creds_pw.c.",
  "repo": "heimdal/heimdal",
  "patch_hash": "2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
  "patch_info": {
    "commit_hash": "2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
    "repo": "heimdal/heimdal",
    "commit_url": "https://github.com/heimdal/heimdal/commit/2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
    "files": [
      "lib/krb5/init_creds_pw.c",
      "lib/krb5/krb5_locl.h",
      "lib/krb5/pkinit.c"
    ],
    "message": "CVE-2019-12098: krb5: always confirm PA-PKINIT-KX for anon PKINIT\n\nRFC8062 Section 7 requires verification of the PA-PKINIT-KX key excahnge\nwhen anonymous PKINIT is used.  Failure to do so can permit an active\nattacker to become a man-in-the-middle.\n\nIntroduced by a1ef548600c5bb51cf52a9a9ea12676506ede19f.  First tagged\nrelease Heimdal 1.4.0.\n\nCVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N (4.8)\n\nChange-Id: I6cc1c0c24985936468af08693839ac6c3edda133\nSigned-off-by: Jeffrey Altman <jaltman@auristor.com>\nApproved-by: Jeffrey Altman <jaltman@auritor.com>\n(cherry picked from commit 38c797e1ae9b9c8f99ae4aa2e73957679031fd2b)",
    "before_after_code_files": [
      "lib/krb5/init_creds_pw.c||lib/krb5/init_creds_pw.c",
      "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h",
      "lib/krb5/pkinit.c||lib/krb5/pkinit.c"
    ]
  },
  "patch_diff": {
    "lib/krb5/init_creds_pw.c||lib/krb5/init_creds_pw.c": [
      "File: lib/krb5/init_creds_pw.c -> lib/krb5/init_creds_pw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2267:            &ctx->req_buffer,",
      "2268:            NULL,",
      "2269:            NULL);",
      "2270:      if (ret == 0)",
      "2271:   ret = copy_EncKDCRepPart(&rep.enc_part, &ctx->enc_part);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2270:      if (ret == 0 && ctx->pk_init_ctx) {",
      "2271:   PA_DATA *pa_pkinit_kx;",
      "2272:   int idx = 0;",
      "2274:   pa_pkinit_kx =",
      "2275:       krb5_find_padata(rep.kdc_rep.padata->val,",
      "2276:          rep.kdc_rep.padata->len,",
      "2277:          KRB5_PADATA_PKINIT_KX,",
      "2278:          &idx);",
      "2280:   ret = _krb5_pk_kx_confirm(context, ctx->pk_init_ctx,",
      "2281:        ctx->fast_state.reply_key,",
      "2282:        &ctx->cred.session,",
      "2283:        pa_pkinit_kx);",
      "2284:   if (ret)",
      "2285:       krb5_set_error_message(context, ret,",
      "2286:         N_(\"Failed to confirm PA-PKINIT-KX\", \"\"));",
      "2287:   else if (pa_pkinit_kx != NULL)",
      "2288:       ctx->ic_flags |= KRB5_INIT_CREDS_PKINIT_KX_VALID;",
      "2289:      }",
      "",
      "---------------"
    ],
    "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h": [
      "File: lib/krb5/krb5_locl.h -> lib/krb5/krb5_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "208: #define KRB5_INIT_CREDS_CANONICALIZE  1",
      "209: #define KRB5_INIT_CREDS_NO_C_CANON_CHECK 2",
      "210: #define KRB5_INIT_CREDS_NO_C_NO_EKU_CHECK 4",
      "211:     struct {",
      "212:         krb5_gic_process_last_req func;",
      "213:         void *ctx;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "211: #define KRB5_INIT_CREDS_PKINIT_KX_VALID  32",
      "",
      "---------------"
    ],
    "lib/krb5/pkinit.c||lib/krb5/pkinit.c": [
      "File: lib/krb5/pkinit.c -> lib/krb5/pkinit.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1220:     return ret;",
      "1221: }",
      "1223: static krb5_error_code",
      "1224: pk_rd_pa_reply_dh(krb5_context context,",
      "1225:     const heim_octet_string *indata,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1230: KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL",
      "1231: _krb5_pk_kx_confirm(krb5_context context,",
      "1232:       krb5_pk_init_ctx ctx,",
      "1233:       krb5_keyblock *reply_key,",
      "1234:       krb5_keyblock *session_key,",
      "1235:       PA_DATA *pa_pkinit_kx)",
      "1236: {",
      "1237:     krb5_error_code ret;",
      "1238:     EncryptedData ed;",
      "1239:     krb5_keyblock ck, sk_verify;",
      "1240:     krb5_crypto ck_crypto = NULL;",
      "1241:     krb5_crypto rk_crypto = NULL;",
      "1242:     size_t len;",
      "1243:     krb5_data data;",
      "1244:     krb5_data p1 = { sizeof(\"PKINIT\") - 1, \"PKINIT\" };",
      "1245:     krb5_data p2 = { sizeof(\"KEYEXCHANGE\") - 1, \"KEYEXCHANGE\" };",
      "1247:     heim_assert(ctx != NULL, \"PKINIT context is non-NULL\");",
      "1248:     heim_assert(reply_key != NULL, \"reply key is non-NULL\");",
      "1249:     heim_assert(session_key != NULL, \"session key is non-NULL\");",
      "1252:     if (pa_pkinit_kx == NULL)",
      "1253:  return ctx->anonymous ? KRB5_KDCREP_MODIFIED : 0;",
      "1255:     memset(&ed, 0, sizeof(ed));",
      "1256:     krb5_keyblock_zero(&ck);",
      "1257:     krb5_keyblock_zero(&sk_verify);",
      "1258:     krb5_data_zero(&data);",
      "1260:     ret = decode_EncryptedData(pa_pkinit_kx->padata_value.data,",
      "1261:           pa_pkinit_kx->padata_value.length,",
      "1262:           &ed, &len);",
      "1263:     if (ret)",
      "1264:  goto out;",
      "1266:     if (len != pa_pkinit_kx->padata_value.length) {",
      "1267:  ret = KRB5_KDCREP_MODIFIED;",
      "1268:  goto out;",
      "1269:     }",
      "1271:     ret = krb5_crypto_init(context, reply_key, 0, &rk_crypto);",
      "1272:     if (ret)",
      "1273:  goto out;",
      "1275:     ret = krb5_decrypt_EncryptedData(context, rk_crypto,",
      "1276:          KRB5_KU_PA_PKINIT_KX,",
      "1277:          &ed, &data);",
      "1278:     if (ret)",
      "1279:  goto out;",
      "1281:     ret = decode_EncryptionKey(data.data, data.length,",
      "1282:           &ck, &len);",
      "1283:     if (ret)",
      "1284:  goto out;",
      "1286:     ret = krb5_crypto_init(context, &ck, 0, &ck_crypto);",
      "1287:     if (ret)",
      "1288:  goto out;",
      "1290:     ret = krb5_crypto_fx_cf2(context, ck_crypto, rk_crypto,",
      "1291:         &p1, &p2, session_key->keytype,",
      "1292:         &sk_verify);",
      "1293:     if (ret)",
      "1294:  goto out;",
      "1296:     if (sk_verify.keytype != session_key->keytype ||",
      "1297:  krb5_data_ct_cmp(&sk_verify.keyvalue, &session_key->keyvalue) != 0) {",
      "1298:  ret = KRB5_KDCREP_MODIFIED;",
      "1299:  goto out;",
      "1300:     }",
      "1302: out:",
      "1303:     free_EncryptedData(&ed);",
      "1304:     krb5_free_keyblock_contents(context, &ck);",
      "1305:     krb5_free_keyblock_contents(context, &sk_verify);",
      "1306:     if (ck_crypto)",
      "1307:  krb5_crypto_destroy(context, ck_crypto);",
      "1308:     if (rk_crypto)",
      "1309:  krb5_crypto_destroy(context, rk_crypto);",
      "1310:     krb5_data_free(&data);",
      "1312:     return ret;",
      "1313: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "25021c05e464bee0d35687b1b76b4cedf6b54a49",
      "candidate_info": {
        "commit_hash": "25021c05e464bee0d35687b1b76b4cedf6b54a49",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/25021c05e464bee0d35687b1b76b4cedf6b54a49",
        "files": [
          "lib/wind/gen-errorlist.py"
        ],
        "message": "PY3: iterkeys -> keys\n\nSigned-off-by: Noel Power <noel.power@suse.com>\nReviewed-by: Andrew Bartlett <abartlet@samba.org>\n(cherry picked from Samba commit b2b0f8191dde58fe234b0147c4a0bd39020aa504)\n(cherry picked from commit f26b1cd599ed3f1fef9a1476bca708055b2c59b2)",
        "before_after_code_files": [
          "lib/wind/gen-errorlist.py||lib/wind/gen-errorlist.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/wind/gen-errorlist.py||lib/wind/gen-errorlist.py": [
          "File: lib/wind/gen-errorlist.py -> lib/wind/gen-errorlist.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: trans=[]",
          "89:     for l in tables[t]:",
          "90:         m = re.search('^ *([0-9A-F]+)-([0-9A-F]+); *(.*) *$', l)",
          "91:         if m:",
          "",
          "[Removed Lines]",
          "88: for t in error_list.iterkeys():",
          "",
          "[Added Lines]",
          "88: for t in error_list.keys():",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed7bd297861ecb73c59b5cc6f991912f7e1b702c",
      "candidate_info": {
        "commit_hash": "ed7bd297861ecb73c59b5cc6f991912f7e1b702c",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/ed7bd297861ecb73c59b5cc6f991912f7e1b702c",
        "files": [
          "kadmin/kadmin.1"
        ],
        "message": "Fixes #536 - Note that this can cause unexpected behavior with certain backends\n\nWhen running with verify-password-quality and a back-end that stores\nhistory (such as heimdal-history) this command can cause an update to\nthe database meaning the password can no longer be used with this\nprincipal in the future\n\n(cherry picked from commit 290d7e75f25c3c60a2665ba19282649fe5a7e3e5)",
        "before_after_code_files": [
          "kadmin/kadmin.1||kadmin/kadmin.1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kadmin/kadmin.1||kadmin/kadmin.1": [
          "File: kadmin/kadmin.1 -> kadmin/kadmin.1",
          "--- Hunk 1 ---",
          "[Context before]",
          "258: You can run this on the host that is configured to run the kadmind",
          "259: process to verify that your configuration file is correct.",
          "260: The verification is done locally, if kadmin is run in remote mode,",
          "262: .Ed",
          "263: .Pp",
          "264: .Nm privileges",
          "",
          "[Removed Lines]",
          "261: no rpc call is done to the server.",
          "",
          "[Added Lines]",
          "261: no rpc call is done to the server. NOTE: if the environment has",
          "262: verify-password-quality configured to use a back-end that stores",
          "263: password history (such as heimdal-history), running",
          "264: verify-quality-password will cause an update to the password",
          "265: database meaning that merely verifying the quality of the password",
          "266: using verify-quality-password invalidates the use of that",
          "267: principal/password in the future.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0cb00b83fd8accc095441f41afa3db2514240cc8",
      "candidate_info": {
        "commit_hash": "0cb00b83fd8accc095441f41afa3db2514240cc8",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/0cb00b83fd8accc095441f41afa3db2514240cc8",
        "files": [
          "kdc/kerberos5.c",
          "kdc/krb5tgs.c"
        ],
        "message": "kdc: history of request_anonymous vs cname-in-addl-tkt confusion\n\nDrafts 0 through 10 of the Kerberos anonymity internet draft,\nhttps://tools.ietf.org/html/draft-ietf-krb-wg-anon, specified the\nTicketFlags.anonymous flag as bit 14 and the KDCOptions.anonymous\nflag as bit 14.  These were changed to bit 16 by MIT after it was\ndiscovered that Microsoft used KDCOptions bit 14 for S4U2Proxy\ncname-in-addl-tkt.\n\n(Feb 2007) Heimdal added constrained delegation support prior to\n1.0 but named the KDCOptions flag constrained_delegation instead of\ncname-in-addl-tkt as per MS-SFU.  It also assigned bit 16 instead\nof bit 14.  Perhaps this was done in the hope that the conflict\nwith Microsoft would be resolved in favor of the IETF internet\ndraft instead of the proprietary protocol extension.\n\nadf912182266321b754ed1cb5a705ba2103e139a (\"Add PA-ClientCanonicalized\nand friends.\") introduced the KDCOptions.constrained_delegation flag\nas bit 16.\n\n(June 2007) In order to make Heimdal's constrained delegation work\nwith Microsoft's implementation Heimdal began to set both KDCOptions\nbits 14 and 16 when requesting constrained delegation.\n\nd5bb7a7c566841d52662b230248f06522bfa64ad (\"(krb5_get_creds): if\nKRB5_GC_CONSTRAINED_DELEGATION is set, set both\") set both the\nanonymous and constrained_delegation TicketFlags when issuing a\nS4U2Proxy request.\n\n(June 2010) MIT reassigned the KDCOption.anonymous and\nTicketFlags.anonymous flags to bit 16.  draft-ietf-krb-anon-11\nwas published with this change.\n\n(July 2014) After the release of Heimdal 1.5.0 and prior to 1.5.1\nit was noticed that Heimdal's anonymous TGT support did not\ninteroperate with MIT.\n\n86554f5a7f81da1efa2849fa6961ca71ad3b8e90 (\"Use correct value for\nanonymous flags\") swapped the bit assignments for request_anonymous\nand constrained_delegation but failed to remove the setting of\nKDCOptions bit 16 (\"anonymous\") when requesting constrained\ndelegation.\n\n(May 2019) Prior to the 7.6 release many corrections to Heimdal's\nanonymity support were introduced to bring it into compliance\nwith RFC8062.  This included support for requesting anonymous\ntickets via the TGS service.  Because not all KDC can satisfy\nanonymous requests the client must verify if the response was\nanonymized.  This check wasn't added until after 7.6 was\nreleased.\n\n014e318d6bdefd8ecfcb99ca9928921f6a49d721 (\"krb5: check KDC\nsupports anonymous if requested\").\n\nThe combination of setting KDCOption.anonymous when requesting\nconstrained delegation and the anonymized ticket validation\nbroke S4U2Proxy requests to Windows KDCs.  Windows KDCs ignore\nthe KDCOption.anonymous flag when processing a TGS request\nwith KDCOption.cname-in-addl-tkt set.\n\nea7615ade3af28843f358e715703226b760db73b (\"Do not set\nanonymous flag in S4U2Proxy request\") removed the behavior\nof setting the KDCOption.anonymous flag that should have\nbeen removed in July 2014.\n\n(June 2019) The Heimdal KDC includes fallback logic to handle\nHeimdal clients from 1.0 to 1.5.0, inclusive, that set the\nKDCOptions.anonymous flag as bit 14.  Prior to the 7.7 release\nthis logic only handled AS request but failed to handle the\nconstrained delegation request case where both bits 14 and 16\nwere set in the TGS request.\n\ncdd0b70d37d87026e8618ff44b8d636c0bf9cb6c (\"kdc: don't misidentify\nconstrained delegation requests as anonymous\") added the TGS\nrequest validation to distinguish anonymous requests from\nconstrained delegation requests.\n\nThis change documents the history in the commit message and\nupdates some in-tree comments.\n\nChange-Id: I625cd012e2e6c263c71948c6021cc2fad4d2e53a\n(cherry picked from commit 4331f4c7d4679762cd3d68ba6262745d9b122674)",
        "before_after_code_files": [
          "kdc/kerberos5.c||kdc/kerberos5.c",
          "kdc/krb5tgs.c||kdc/krb5tgs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kdc/kerberos5.c||kdc/kerberos5.c": [
          "File: kdc/kerberos5.c -> kdc/kerberos5.c"
        ],
        "kdc/krb5tgs.c||kdc/krb5tgs.c": [
          "File: kdc/krb5tgs.c -> kdc/krb5tgs.c"
        ]
      }
    },
    {
      "candidate_hash": "33ad855814912242e884125eb48bd65e92877938",
      "candidate_info": {
        "commit_hash": "33ad855814912242e884125eb48bd65e92877938",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/33ad855814912242e884125eb48bd65e92877938",
        "files": [
          "kdc/krb5tgs.c",
          "tests/kdc/check-kdc.in"
        ],
        "message": "CVE-2019-14870: Always lookup impersonate client in DB\n\nSigned-off-by: Isaac Boukris <iboukris@gmail.com>",
        "before_after_code_files": [
          "kdc/krb5tgs.c||kdc/krb5tgs.c",
          "tests/kdc/check-kdc.in||tests/kdc/check-kdc.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kdc/krb5tgs.c||kdc/krb5tgs.c": [
          "File: kdc/krb5tgs.c -> kdc/krb5tgs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2103:      if (ret)",
          "2104:   goto out;",
          "2107:      if(rspac.data) {",
          "2108:   krb5_pac p = NULL;",
          "2109:   krb5_data_free(&rspac);",
          "2130:   ret = _kdc_pac_generate(context, s4u2self_impersonated_client, &p);",
          "2131:   if (ret) {",
          "2132:       kdc_log(context, config, 0, \"PAC generation failed for -- %s\",",
          "",
          "[Removed Lines]",
          "2110:   ret = _kdc_db_fetch(context, config, tp, HDB_F_GET_CLIENT | flags,",
          "2111:         NULL, &s4u2self_impersonated_clientdb, &s4u2self_impersonated_client);",
          "2112:   if (ret) {",
          "2113:       const char *msg;",
          "2121:       if (ret == HDB_ERR_NOENTRY)",
          "2122:    ret = KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN;",
          "2123:       msg = krb5_get_error_message(context, ret);",
          "2124:       kdc_log(context, config, 1,",
          "2125:        \"S2U4Self principal to impersonate %s not found in database: %s\",",
          "2126:        tpn, msg);",
          "2127:       krb5_free_error_message(context, msg);",
          "2128:       goto out;",
          "2129:   }",
          "",
          "[Added Lines]",
          "2106:      ret = _kdc_db_fetch(context, config, tp, HDB_F_GET_CLIENT | flags,",
          "2107:     NULL, &s4u2self_impersonated_clientdb,",
          "2108:     &s4u2self_impersonated_client);",
          "2109:      if (ret) {",
          "2110:   const char *msg;",
          "2118:   if (ret == HDB_ERR_NOENTRY)",
          "2119:       ret = KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN;",
          "2120:   msg = krb5_get_error_message(context, ret);",
          "2121:   kdc_log(context, config, 2,",
          "2122:    \"S4U2Self principal to impersonate %s not found in database: %s\",",
          "2123:    tpn, msg);",
          "2124:   krb5_free_error_message(context, msg);",
          "2125:   goto out;",
          "2126:      }",
          "",
          "---------------"
        ],
        "tests/kdc/check-kdc.in||tests/kdc/check-kdc.in": [
          "File: tests/kdc/check-kdc.in -> tests/kdc/check-kdc.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "805: ${kgetcred_imp} --impersonate=bar@${R} foo@${R} 2>/dev/null && \\",
          "806:  { ec=1 ; eval \"${testfailed}\"; }",
          "808: echo \"test constrained delegation\"; > messages.log",
          "809: ${kgetcred_imp} --forward --impersonate=bar@${R} ${ps} || \\",
          "810:  { ec=1 ; eval \"${testfailed}\"; }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "808: echo \"test impersonate unknown client\"; > messages.log",
          "809: ${kgetcred_imp} --forward --impersonate=unknown@${R} ${ps} && \\",
          "810:  { ec=1 ; eval \"${testfailed}\"; }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d0a558f918c9d6ff12e312edaafb79aa81bb465c",
      "candidate_info": {
        "commit_hash": "d0a558f918c9d6ff12e312edaafb79aa81bb465c",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/d0a558f918c9d6ff12e312edaafb79aa81bb465c",
        "files": [
          "lib/roken/rand.c"
        ],
        "message": "lib/roken: rk_random_init HAVE_ARC4RANDOM #401\n\nWhen arc4random() is available, rk_random_init() does not have to\ncall arc4random_stir().  ac4random_stir() will be called as a result\nof the first call to arc4random().\n\nChange-Id: I6f4a3be7c39752746657945ed15896472908f889\n(cherry picked from commit 434f76bcb77754263fcd5a7ab5938e534dc220bc)",
        "before_after_code_files": [
          "lib/roken/rand.c||lib/roken/rand.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/roken/rand.c||lib/roken/rand.c": [
          "File: lib/roken/rand.c -> lib/roken/rand.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: rk_random_init(void)",
          "43: {",
          "44: #if defined(HAVE_ARC4RANDOM)",
          "46: #elif defined(HAVE_SRANDOMDEV)",
          "47:     srandomdev();",
          "48: #elif defined(HAVE_RANDOM)",
          "",
          "[Removed Lines]",
          "45:     arc4random_stir();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}