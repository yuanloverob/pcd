{
  "cve_id": "CVE-2016-7537",
  "cve_desc": "MagickCore/memory.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds access) via a crafted PDB file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "6d202a0514fb6a406456b8b728cde776becb25f8",
  "patch_info": {
    "commit_hash": "6d202a0514fb6a406456b8b728cde776becb25f8",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/6d202a0514fb6a406456b8b728cde776becb25f8",
    "files": [
      "coders/pdb.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/143",
    "before_after_code_files": [
      "coders/pdb.c||coders/pdb.c"
    ]
  },
  "patch_diff": {
    "coders/pdb.c||coders/pdb.c": [
      "File: coders/pdb.c -> coders/pdb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "415:   if (AcquireImageColormap(image,one << bits_per_pixel,exception) == MagickFalse)",
      "416:     ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "417:   if (image_info->ping != MagickFalse)",
      "419:       (void) CloseBlob(image);",
      "420:       return(GetFirstImageInList(image));",
      "421:     }",
      "",
      "[Removed Lines]",
      "418:     {",
      "",
      "[Added Lines]",
      "418:     {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "823:   pdb_image.x_anchor=(unsigned short) 0xffff;",
      "824:   pdb_image.y_anchor=(unsigned short) 0xffff;",
      "825:   pdb_image.width=(short) image->columns;",
      "827:     pdb_image.width=(short) (16*(image->columns/16+1));",
      "828:   pdb_image.height=(short) image->rows;",
      "829:   packets=((bits_per_pixel*image->columns+7)/8);",
      "",
      "[Removed Lines]",
      "826:   if (image->columns % 16)",
      "",
      "[Added Lines]",
      "826:   if (image->columns % 16)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ec763d67385247de439937af09c6af46582b37b8",
      "candidate_info": {
        "commit_hash": "ec763d67385247de439937af09c6af46582b37b8",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/ec763d67385247de439937af09c6af46582b37b8",
        "files": [
          "coders/pdb.c"
        ],
        "message": "https://github.com/ImageMagick/ImageMagick/issues/106",
        "before_after_code_files": [
          "coders/pdb.c||coders/pdb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/pdb.c||coders/pdb.c"
          ],
          "candidate": [
            "coders/pdb.c||coders/pdb.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/pdb.c||coders/pdb.c": [
          "File: coders/pdb.c -> coders/pdb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "823:   pdb_image.x_anchor=(unsigned short) 0xffff;",
          "824:   pdb_image.y_anchor=(unsigned short) 0xffff;",
          "825:   pdb_image.width=(short) image->columns;",
          "827:     pdb_image.width=(short) (16*(image->columns/16+1));",
          "828:   pdb_image.height=(short) image->rows;",
          "829:   packets=((bits_per_pixel*image->columns+7)/8);",
          "",
          "[Removed Lines]",
          "826:   if (image->columns % 16)",
          "",
          "[Added Lines]",
          "826:   if (image->columns % 16)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a34d7ac889bd6645f6cfd164636e3efb56dbb2f",
      "candidate_info": {
        "commit_hash": "5a34d7ac889bd6645f6cfd164636e3efb56dbb2f",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/5a34d7ac889bd6645f6cfd164636e3efb56dbb2f",
        "files": [
          "coders/meta.c",
          "coders/pdb.c",
          "coders/rle.c"
        ],
        "message": "More buffer overflow checks",
        "before_after_code_files": [
          "coders/meta.c||coders/meta.c",
          "coders/pdb.c||coders/pdb.c",
          "coders/rle.c||coders/rle.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/pdb.c||coders/pdb.c"
          ],
          "candidate": [
            "coders/pdb.c||coders/pdb.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/meta.c||coders/meta.c": [
          "File: coders/meta.c -> coders/meta.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:       break;",
          "195:     p++;",
          "196:     q++;",
          "198:   return(toupper((int) *p)-toupper((int) *q));",
          "201: static int convertHTMLcodes(char *s, int len)",
          "203:   if (len <=0 || s==(char*) NULL || *s=='\\0')",
          "207:     {",
          "219:         if (o < 6)",
          "220:           (void) memmove(s+1,s+1+o,strlen(s+1+o)+1);",
          "222:         return o;",
          "223:       }",
          "224:     }",
          "226:     {",
          "227:       int",
          "228:         i,",
          "229:         codes = (int) (sizeof(html_codes) / sizeof(html_code));",
          "231:       for (i=0; i < codes; i++)",
          "232:       {",
          "233:         if (html_codes[i].len <= len)",
          "234:           if (stringnicmp(s,html_codes[i].code,(size_t) html_codes[i].len) == 0)",
          "236:               (void) memmove(s+1,s+html_codes[i].len,",
          "237:                 strlen(s+html_codes[i].len)+1);",
          "240:             }",
          "241:       }",
          "242:     }",
          "",
          "[Removed Lines]",
          "197:   }",
          "199: }",
          "202: {",
          "204:     return 0;",
          "206:   if (s[1] == '#')",
          "208:       int val, o;",
          "210:       if (sscanf(s,\"&#%d;\",&val) == 1)",
          "211:       {",
          "212:         o = 3;",
          "213:         while (s[o] != ';')",
          "214:         {",
          "215:           o++;",
          "216:           if (o > 5)",
          "217:             break;",
          "218:         }",
          "225:   else",
          "235:             {",
          "239:               return html_codes[i].len-1;",
          "",
          "[Added Lines]",
          "197:   }",
          "199: }",
          "202: {",
          "203:   int",
          "204:     value;",
          "207:     return(0);",
          "208:   if ((len > 3) && (s[1] == '#') && (strchr(s,';') != (char *) NULL) &&",
          "210:     {",
          "211:       size_t o = 3;",
          "212:       while (s[o] != ';')",
          "214:         o++;",
          "215:         if (o > 5)",
          "216:           break;",
          "217:       }",
          "223:   else",
          "225:       int",
          "229:       codes=sizeof(html_codes)/sizeof(html_code);",
          "234:             {",
          "238:               return(html_codes[i].len-1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "404:               \"\",0,&brkused,&next,&quoted)==0)",
          "405:             {",
          "406:               if (brkused && next > 0)",
          "408:                   char",
          "",
          "[Removed Lines]",
          "407:                 {",
          "",
          "[Added Lines]",
          "406:                 {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "700:               \"\",0,&brkused,&next,&quoted)==0)",
          "701:             {",
          "702:               if (brkused && next > 0)",
          "704:                   char",
          "",
          "[Removed Lines]",
          "703:                 {",
          "",
          "[Added Lines]",
          "702:                 {",
          "",
          "---------------"
        ],
        "coders/pdb.c||coders/pdb.c": [
          "File: coders/pdb.c -> coders/pdb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "823:   pdb_image.x_anchor=(unsigned short) 0xffff;",
          "824:   pdb_image.y_anchor=(unsigned short) 0xffff;",
          "825:   pdb_image.width=(short) image->columns;",
          "827:     pdb_image.width=(short) (16*(image->columns/16+1));",
          "828:   pdb_image.height=(short) image->rows;",
          "829:   packets=((bits_per_pixel*image->columns+7)/8);",
          "",
          "[Removed Lines]",
          "826:   if (image->columns % 16)",
          "",
          "[Added Lines]",
          "826:   if (image->columns % 16)",
          "",
          "---------------"
        ],
        "coders/rle.c||coders/rle.c": [
          "File: coders/rle.c -> coders/rle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:     number_colormaps=(size_t) ReadBlobByte(image);",
          "229:     map_length=(unsigned char) ReadBlobByte(image);",
          "230:     if (map_length >= 64)",
          "232:     one=1;",
          "233:     map_length=one << map_length;",
          "234:     if ((number_planes == 0) || (number_planes == 2) || (bits_per_pixel != 8) ||",
          "",
          "[Removed Lines]",
          "231:       ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "",
          "[Added Lines]",
          "231:       ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "232:     one=1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b93db1807ef8abf0c81df8b0fd047e5fb3f1c3f",
      "candidate_info": {
        "commit_hash": "7b93db1807ef8abf0c81df8b0fd047e5fb3f1c3f",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/7b93db1807ef8abf0c81df8b0fd047e5fb3f1c3f",
        "files": [
          "coders/pdb.c"
        ],
        "message": "https://github.com/ImageMagick/ImageMagick/issues/121",
        "before_after_code_files": [
          "coders/pdb.c||coders/pdb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/pdb.c||coders/pdb.c"
          ],
          "candidate": [
            "coders/pdb.c||coders/pdb.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/pdb.c||coders/pdb.c": [
          "File: coders/pdb.c -> coders/pdb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "819:   pdb_image.note=0;",
          "820:   pdb_image.x_last=0;",
          "821:   pdb_image.y_last=0;",
          "823:   pdb_image.x_anchor=(unsigned short) 0xffff;",
          "824:   pdb_image.y_anchor=(unsigned short) 0xffff;",
          "825:   pdb_image.width=(short) image->columns;",
          "827:     pdb_image.width=(short) (16*(image->columns/16+1));",
          "828:   pdb_image.height=(short) image->rows;",
          "829:   packets=((bits_per_pixel*image->columns+7)/8);",
          "",
          "[Removed Lines]",
          "822:   pdb_image.reserved_2=0;",
          "826:   if (image->columns % 16)",
          "",
          "[Added Lines]",
          "822:   pdb_image.reserved_2=0;",
          "826:   if (image->columns % 16)",
          "",
          "---------------"
        ]
      }
    }
  ]
}