{
  "cve_id": "CVE-2020-11939",
  "cve_desc": "In nDPI through 3.2 Stable, the SSH protocol dissector has multiple KEXINIT integer overflows that result in a controlled remote heap overflow in concat_hash_string in ssh.c. Due to the granular nature of the overflow primitive and the ability to control both the contents and layout of the nDPI library's heap memory through remote input, this vulnerability may be abused to achieve full Remote Code Execution against any network inspection stack that is linked against nDPI and uses it to perform network traffic analysis.",
  "repo": "ntop/nDPI",
  "patch_hash": "7ce478a58b4dd29a8d1e6f4e9df2f778613d9202",
  "patch_info": {
    "commit_hash": "7ce478a58b4dd29a8d1e6f4e9df2f778613d9202",
    "repo": "ntop/nDPI",
    "commit_url": "https://github.com/ntop/nDPI/commit/7ce478a58b4dd29a8d1e6f4e9df2f778613d9202",
    "files": [
      "src/lib/protocols/ssh.c"
    ],
    "message": "ssh: fixing unsigned overflow leading to heap overflow\n\ncf GHSL-2020-051",
    "before_after_code_files": [
      "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
    ]
  },
  "patch_diff": {
    "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c": [
      "File: src/lib/protocols/ssh.c -> src/lib/protocols/ssh.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "96: static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,",
      "97:        char *buf, u_int8_t client_hash) {",
      "99:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "100:     goto invalid_payload;",
      "101:   u_int32_t len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "",
      "[Removed Lines]",
      "98:   u_int16_t offset = 22, buf_out_len = 0;",
      "",
      "[Added Lines]",
      "98:   u_int32_t offset = 22, buf_out_len = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "114:     goto invalid_payload;",
      "116:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "117:   offset += 4 + len;",
      "119:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "117:   if (len > UINT32_MAX - 4 - offset)",
      "118:     goto invalid_payload;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "122:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "124:   if(client_hash) {",
      "127:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
      "128:       goto invalid_payload;",
      "130:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
      "131:     buf_out_len += len;",
      "132:     buf[buf_out_len++] = ';';",
      "137:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "138:     goto invalid_payload;",
      "140:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "142:   if(!client_hash) {",
      "145:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
      "146:       goto invalid_payload;",
      "148:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
      "149:     buf_out_len += len;",
      "150:     buf[buf_out_len++] = ';';",
      "155:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "156:     goto invalid_payload;",
      "158:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "160:   if(client_hash) {",
      "163:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
      "164:       goto invalid_payload;",
      "166:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
      "167:     buf_out_len += len;",
      "168:     buf[buf_out_len++] = ';';",
      "173:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "174:     goto invalid_payload;",
      "176:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "178:   if(!client_hash) {",
      "181:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
      "182:       goto invalid_payload;",
      "184:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
      "185:     buf_out_len += len;",
      "186:     buf[buf_out_len++] = ';';",
      "192:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "193:     goto invalid_payload;",
      "194:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "196:   if(client_hash) {",
      "199:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
      "200:       goto invalid_payload;",
      "202:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
      "203:     buf_out_len += len;",
      "208:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "209:     goto invalid_payload;",
      "211:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "213:   if(!client_hash) {",
      "216:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
      "217:       goto invalid_payload;",
      "219:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
      "220:     buf_out_len += len;",
      "",
      "[Removed Lines]",
      "125:     offset += 4;",
      "133:     offset += len;",
      "134:   } else",
      "135:     offset += 4 + len;",
      "143:     offset += 4;",
      "151:     offset += len;",
      "152:   } else",
      "153:     offset += 4 + len;",
      "161:     offset += 4;",
      "169:     offset += len;",
      "170:   } else",
      "171:     offset += 4 + len;",
      "179:     offset += 4;",
      "187:     offset += len;",
      "188:   } else",
      "189:     offset += 4 + len;",
      "197:     offset += 4;",
      "204:     offset += len;",
      "205:   } else",
      "206:     offset += 4 + len;",
      "214:     offset += 4;",
      "221:     offset += len;",
      "222:   } else",
      "223:     offset += 4 + len;",
      "",
      "[Added Lines]",
      "126:   offset += 4;",
      "134:   }",
      "135:   if (len > UINT32_MAX - offset)",
      "136:     goto invalid_payload;",
      "137:   offset += len;",
      "144:   offset += 4;",
      "152:   }",
      "153:   if (len > UINT32_MAX - offset)",
      "154:     goto invalid_payload;",
      "155:   offset += len;",
      "162:   offset += 4;",
      "170:   }",
      "171:   if (len > UINT32_MAX - offset)",
      "172:     goto invalid_payload;",
      "173:   offset += len;",
      "180:   offset += 4;",
      "188:   }",
      "189:   if (len > UINT32_MAX - offset)",
      "190:     goto invalid_payload;",
      "191:   offset += len;",
      "198:   offset += 4;",
      "205:   }",
      "206:   if (len > UINT32_MAX - offset)",
      "207:     goto invalid_payload;",
      "208:   offset += len;",
      "215:   offset += 4;",
      "222:   }",
      "223:   if (len > UINT32_MAX - offset)",
      "224:     goto invalid_payload;",
      "225:   offset += len;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7344bf65bcd249d17415bdc9f084d4880570b23c",
      "candidate_info": {
        "commit_hash": "7344bf65bcd249d17415bdc9f084d4880570b23c",
        "repo": "ntop/nDPI",
        "commit_url": "https://github.com/ntop/nDPI/commit/7344bf65bcd249d17415bdc9f084d4880570b23c",
        "files": [
          "src/lib/protocols/ssh.c"
        ],
        "message": "Minor cleanup",
        "before_after_code_files": [
          "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
          ],
          "candidate": [
            "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c": [
          "File: src/lib/protocols/ssh.c -> src/lib/protocols/ssh.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96: static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,",
          "98:   u_int32_t offset = 22, buf_out_len = 0;",
          "99:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "100:     goto invalid_payload;",
          "102:   offset += 4;",
          "",
          "[Removed Lines]",
          "97:        char *buf, u_int8_t client_hash) {",
          "101:   u_int32_t len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "",
          "[Added Lines]",
          "97:         char *buf, u_int8_t client_hash) {",
          "99:   int len;",
          "104:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "114:     goto invalid_payload;",
          "116:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "118:     goto invalid_payload;",
          "119:   offset += 4 + len;",
          "121:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "122:     goto invalid_payload;",
          "124:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "",
          "[Removed Lines]",
          "117:   if (len > UINT32_MAX - 8 - offset)",
          "",
          "[Added Lines]",
          "122:   if(len > UINT32_MAX - 8 - offset)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "132:     buf_out_len += len;",
          "133:     buf[buf_out_len++] = ';';",
          "134:   }",
          "136:     goto invalid_payload;",
          "137:   offset += len;",
          "139:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "140:     goto invalid_payload;",
          "142:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "",
          "[Removed Lines]",
          "135:   if (len > UINT32_MAX - 4 - offset)",
          "",
          "[Added Lines]",
          "142:   if(len > UINT32_MAX - 4 - offset)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "150:     buf_out_len += len;",
          "151:     buf[buf_out_len++] = ';';",
          "152:   }",
          "154:     goto invalid_payload;",
          "155:   offset += len;",
          "",
          "[Removed Lines]",
          "153:   if (len > UINT32_MAX - 4 - offset)",
          "",
          "[Added Lines]",
          "162:   if(len > UINT32_MAX - 4 - offset)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "168:     buf_out_len += len;",
          "169:     buf[buf_out_len++] = ';';",
          "170:   }",
          "172:     goto invalid_payload;",
          "173:   offset += len;",
          "",
          "[Removed Lines]",
          "171:   if (len > UINT32_MAX - 4 - offset)",
          "",
          "[Added Lines]",
          "180:   if(len > UINT32_MAX - 4 - offset)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "186:     buf_out_len += len;",
          "187:     buf[buf_out_len++] = ';';",
          "188:   }",
          "190:     goto invalid_payload;",
          "191:   offset += len;",
          "",
          "[Removed Lines]",
          "189:   if (len > UINT32_MAX - 4 - offset)",
          "",
          "[Added Lines]",
          "199:   if(len > UINT32_MAX - 4 - offset)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "203:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
          "204:     buf_out_len += len;",
          "205:   }",
          "207:     goto invalid_payload;",
          "208:   offset += len;",
          "",
          "[Removed Lines]",
          "206:   if (len > UINT32_MAX - 4 - offset)",
          "",
          "[Added Lines]",
          "217:   if(len > UINT32_MAX - 4 - offset)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "220:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
          "221:     buf_out_len += len;",
          "222:   }",
          "224:     goto invalid_payload;",
          "225:   offset += len;",
          "",
          "[Removed Lines]",
          "223:   if (len > UINT32_MAX - offset)",
          "",
          "[Added Lines]",
          "235:   if(len > UINT32_MAX - offset)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "235:   return(buf_out_len);",
          "239: #ifdef SSH_DEBUG",
          "240:   printf(\"[SSH] Invalid packet payload\\n\");",
          "",
          "[Removed Lines]",
          "237: invalid_payload:",
          "",
          "[Added Lines]",
          "249:  invalid_payload:",
          "",
          "---------------"
        ]
      }
    }
  ]
}