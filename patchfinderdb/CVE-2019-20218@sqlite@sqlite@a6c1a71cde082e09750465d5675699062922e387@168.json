{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8c7715d1cc8736c72a1d628a1aa1509c1cc1dc3b",
      "candidate_info": {
        "commit_hash": "8c7715d1cc8736c72a1d628a1aa1509c1cc1dc3b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8c7715d1cc8736c72a1d628a1aa1509c1cc1dc3b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Improved assert() statements on the OP_Column opcode.\n\nFossilOrigin-Name: c538601e4c979ee59f18d19e6eb6296cebfa580fb029a18d5a3f0dd9393acb75",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 01aeeb5c4c70a0f19651448e94ad5c6810cab3d6957b5bc7a9b4b8e0b887f3de",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2552:   pC = p->apCsr[pOp->p1];",
          "2553:   p2 = pOp->p2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2552:   assert( pOp->p1>=0 && pOp->p1<p->nCursor );",
          "2554:   assert( pC!=0 );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2561:   assert( pOp->p3>0 && pOp->p3<=(p->nMem+1 - p->nCursor) );",
          "2562:   pDest = &aMem[pOp->p3];",
          "2563:   memAboutToChange(p, pDest);",
          "2565:   assert( pC!=0 );",
          "2566:   assert( p2<pC->nField );",
          "2567:   aOffset = pC->aOffset;",
          "",
          "[Removed Lines]",
          "2564:   assert( pOp->p1>=0 && pOp->p1<p->nCursor );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa53284777ce9aed6a0153ce66d472128845f87c",
      "candidate_info": {
        "commit_hash": "fa53284777ce9aed6a0153ce66d472128845f87c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fa53284777ce9aed6a0153ce66d472128845f87c",
        "files": [
          "Makefile.in",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Makefile.in fix so that it works on systems that require a .EXE suffix on executables.\n\nFossilOrigin-Name: f482a4cdfa768941e22c399de8ec29a55e729529eeae86d3832077ad1bef22f3",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1177:    $(TOP)/ext/fts5/fts5_varint.c \\",
          "1178:    $(TOP)/ext/fts5/fts5_vocab.c  \\",
          "1181:  cp $(TOP)/ext/fts5/fts5parse.y .",
          "1182:  rm -f fts5parse.h",
          "1183:  ./lemon$(BEXE) $(OPTS) -S fts5parse.y",
          "",
          "[Removed Lines]",
          "1180: fts5parse.c: $(TOP)/ext/fts5/fts5parse.y lemon",
          "",
          "[Added Lines]",
          "1180: fts5parse.c: $(TOP)/ext/fts5/fts5parse.y lemon$(BEXE)",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f8d5586a8ceca985dcb2d63d0fbad9e271e9e1664720ee698d4947acd5dcc543",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b277a980a799a4fc3e17d8f44fce6a3ea1eb8d8",
      "candidate_info": {
        "commit_hash": "0b277a980a799a4fc3e17d8f44fce6a3ea1eb8d8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0b277a980a799a4fc3e17d8f44fce6a3ea1eb8d8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "test/altertab3.test"
        ],
        "message": "Have the ALTER TABLE code handle the case where an entire expression that includes a sub-select is excluded from a view, trigger or index.\n\nFossilOrigin-Name: f2c8179f3c0b77f10da3f9b0771db4dec30d0bbf0b7f4751ce439bfb08da8f6f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "test/altertab3.test||test/altertab3.test"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "test/altertab3.test||test/altertab3.test"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 36ea13e0a851a749c9ef292377ecd82dbd4797d38df907b362487fa234c98ca5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "727:   return WRC_Continue;",
          "728: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "733: static int renameUnmapSelectCb(Walker *pWalker, Select *p){",
          "734:   if( p->pSrc ){",
          "735:     Parse *pParse = pWalker->pParse;",
          "736:     int i;",
          "737:     for(i=0; i<p->pSrc->nSrc; i++){",
          "738:       sqlite3RenameTokenRemap(pParse, 0, (void*)p->pSrc->a[0].zName);",
          "739:     }",
          "740:   }",
          "741:   return WRC_Continue;",
          "742: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "735:   memset(&sWalker, 0, sizeof(Walker));",
          "736:   sWalker.pParse = pParse;",
          "737:   sWalker.xExprCallback = renameUnmapExprCb;",
          "738:   sqlite3WalkExpr(&sWalker, pExpr);",
          "739: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "752:   sWalker.xSelectCallback = renameUnmapSelectCb;",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "206:   db close",
          "207: } {}",
          "211: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208: #-------------------------------------------------------------------------",
          "209: reset_db",
          "210: do_execsql_test 9.1 {",
          "211:   CREATE TABLE t1(a,b,c);",
          "212:   CREATE TRIGGER AFTER INSERT ON t1 WHEN new.a NOT NULL BEGIN",
          "213:     SELECT true WHERE (SELECT a, b FROM (t1)) IN ();",
          "214:   END;",
          "215: }",
          "217: do_execsql_test 9.2 {",
          "218:   ALTER TABLE t1 RENAME TO t1x;",
          "219: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06fc24555fd7fc826c68de4b85f2326ada87ea90",
      "candidate_info": {
        "commit_hash": "06fc24555fd7fc826c68de4b85f2326ada87ea90",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/06fc24555fd7fc826c68de4b85f2326ada87ea90",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c"
        ],
        "message": "Changes an unreachable testcase() into an assert().\n\nFossilOrigin-Name: 5710845b6314f924b490434b4446169f4bb50576aaa940472af68150db16e127",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ea20068e6d97c9349ebcc7d0a01e99ebf08c6f44363f71a0218a1abea209adc5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1903:         whereApplyPartialIndexConstraints(pIdx->pPartIdxWhere, iCur, pWC);",
          "1904:       }",
          "1905:     }else{",
          "1907:       testcase( pIdx->pPartIdxWhere );",
          "1908:     }",
          "",
          "[Removed Lines]",
          "1906:       testcase( (pWInfo->wctrlFlags & WHERE_OR_SUBCLAUSE)==0 );",
          "",
          "[Added Lines]",
          "1910:       assert( (pWInfo->wctrlFlags & WHERE_OR_SUBCLAUSE)==0 );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d1c472dab66d0e583082d96a3f40630ac6a3529d",
      "candidate_info": {
        "commit_hash": "d1c472dab66d0e583082d96a3f40630ac6a3529d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d1c472dab66d0e583082d96a3f40630ac6a3529d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Increase the precision of floating point value display in VDBE debugging output.  No changes to normally deployed code.\n\nFossilOrigin-Name: a561a656ff50efc0103da3988626cea3ef05757403b83960f2aa6c0a48c2765e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3934d2d08ee14d644dc01f967c10f219b76b172c963c90a7a8141f2b08a7d5bf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "554:     printf(\" i:%lld\", p->u.i);",
          "555: #ifndef SQLITE_OMIT_FLOATING_POINT",
          "556:   }else if( p->flags & MEM_Real ){",
          "558: #endif",
          "559:   }else if( sqlite3VdbeMemIsRowSet(p) ){",
          "560:     printf(\" (rowset)\");",
          "",
          "[Removed Lines]",
          "557:     printf(\" r:%g\", p->u.r);",
          "",
          "[Added Lines]",
          "557:     printf(\" r:%.17g\", p->u.r);",
          "",
          "---------------"
        ]
      }
    }
  ]
}