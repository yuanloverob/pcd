{
  "cve_id": "CVE-2016-2052",
  "cve_desc": "Multiple unspecified vulnerabilities in HarfBuzz before 1.0.6, as used in Google Chrome before 48.0.2564.82, allow attackers to cause a denial of service or possibly have other impact via crafted data, as demonstrated by a buffer over-read resulting from an inverted length check in hb-ot-font.cc, a different issue than CVE-2015-8947.",
  "repo": "behdad/harfbuzz",
  "patch_hash": "63ef0b41dc48d6112d1918c1b1de9de8ea90adb5",
  "patch_info": {
    "commit_hash": "63ef0b41dc48d6112d1918c1b1de9de8ea90adb5",
    "repo": "behdad/harfbuzz",
    "commit_url": "https://github.com/behdad/harfbuzz/commit/63ef0b41dc48d6112d1918c1b1de9de8ea90adb5",
    "files": [
      "src/hb-ot-font.cc"
    ],
    "message": "[ot-font] Fix hmtx wrong table length check\n\nDiscovered by libFuzzer.  Ouch!\n\nhttps://github.com/behdad/harfbuzz/issues/139#issuecomment-148289957",
    "before_after_code_files": [
      "src/hb-ot-font.cc||src/hb-ot-font.cc"
    ]
  },
  "patch_diff": {
    "src/hb-ot-font.cc||src/hb-ot-font.cc": [
      "File: src/hb-ot-font.cc -> src/hb-ot-font.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "60:     this->blob = OT::Sanitizer<OT::_mtx>::sanitize (face->reference_table (_mtx_tag));",
      "61:     if (unlikely (!this->num_advances ||",
      "63:     {",
      "64:       this->num_metrics = this->num_advances = 0;",
      "65:       hb_blob_destroy (this->blob);",
      "",
      "[Removed Lines]",
      "62:     2 * (this->num_advances + this->num_metrics) < hb_blob_get_length (this->blob)))",
      "",
      "[Added Lines]",
      "62:     2 * (this->num_advances + this->num_metrics) > hb_blob_get_length (this->blob)))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "613e630617074eb9b62b794cc37c9b42a7fb079b",
      "candidate_info": {
        "commit_hash": "613e630617074eb9b62b794cc37c9b42a7fb079b",
        "repo": "behdad/harfbuzz",
        "commit_url": "https://github.com/behdad/harfbuzz/commit/613e630617074eb9b62b794cc37c9b42a7fb079b",
        "files": [
          "src/hb-ot-layout-common-private.hh"
        ],
        "message": "Reduce max nesting level from 8 to 6\n\nWe probably should implement better system to catch cyclic lookups.\nBut for now, this speeds up worst case behavior with broken fonts\nconsiderably without compromising legitimate usecases.\n\nhttps://github.com/behdad/harfbuzz/issues/139#issuecomment-147788447",
        "before_after_code_files": [
          "src/hb-ot-layout-common-private.hh||src/hb-ot-layout-common-private.hh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/hb-ot-layout-common-private.hh||src/hb-ot-layout-common-private.hh": [
          "File: src/hb-ot-layout-common-private.hh -> src/hb-ot-layout-common-private.hh",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #define NOT_COVERED  ((unsigned int) -1)",
          "48: #define MAX_CONTEXT_LENGTH 64",
          "",
          "[Removed Lines]",
          "47: #define MAX_NESTING_LEVEL 8",
          "",
          "[Added Lines]",
          "47: #define MAX_NESTING_LEVEL 6",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67f8821fb25d9bd55719f5e29a582ae1af4b02b3",
      "candidate_info": {
        "commit_hash": "67f8821fb25d9bd55719f5e29a582ae1af4b02b3",
        "repo": "behdad/harfbuzz",
        "commit_url": "https://github.com/behdad/harfbuzz/commit/67f8821fb25d9bd55719f5e29a582ae1af4b02b3",
        "files": [
          "src/hb-ot-font.cc",
          "test/shaping/tests/fuzzed.tests"
        ],
        "message": "[ot] Make bad-hmtx handling match FreeType\n\nAlso route fuzzing-related tests through hb-ot-font, to reduce dependency\non FreeType behavior for badly-broken fonts.  Fixes failing test with\nFreeType master.",
        "before_after_code_files": [
          "src/hb-ot-font.cc||src/hb-ot-font.cc",
          "test/shaping/tests/fuzzed.tests||test/shaping/tests/fuzzed.tests"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/hb-ot-font.cc||src/hb-ot-font.cc"
          ],
          "candidate": [
            "src/hb-ot-font.cc||src/hb-ot-font.cc"
          ]
        }
      },
      "candidate_diff": {
        "src/hb-ot-font.cc||src/hb-ot-font.cc": [
          "File: src/hb-ot-font.cc -> src/hb-ot-font.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:   hb_blob_t *blob;",
          "48:   inline void init (hb_face_t *face,",
          "51:   {",
          "55:     hb_blob_t *_hea_blob = OT::Sanitizer<OT::_hea>::sanitize (face->reference_table (_hea_tag));",
          "56:     const OT::_hea *_hea = OT::Sanitizer<OT::_hea>::lock_instance (_hea_blob);",
          "",
          "[Removed Lines]",
          "49:       hb_tag_t _hea_tag, hb_tag_t _mtx_tag,",
          "50:       unsigned int default_advance_)",
          "52:     this->default_advance = default_advance_;",
          "53:     this->num_metrics = face->get_num_glyphs ();",
          "",
          "[Added Lines]",
          "49:       hb_tag_t _hea_tag, hb_tag_t _mtx_tag)",
          "51:     this->default_advance = face->get_upem ();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:     hb_blob_destroy (_hea_blob);",
          "60:     this->blob = OT::Sanitizer<OT::_mtx>::sanitize (face->reference_table (_mtx_tag));",
          "63:     {",
          "64:       this->num_metrics = this->num_advances = 0;",
          "65:       hb_blob_destroy (this->blob);",
          "",
          "[Removed Lines]",
          "61:     if (unlikely (!this->num_advances ||",
          "62:     2 * (this->num_advances + this->num_metrics) > hb_blob_get_length (this->blob)))",
          "",
          "[Added Lines]",
          "61:     unsigned int len = hb_blob_get_length (this->blob);",
          "62:     if (unlikely (this->num_advances * 4 < len))",
          "63:       this->num_advances = len / 4;",
          "64:     this->num_metrics = this->num_advances + (len - 4 * this->num_advances) / 2;",
          "68:     if (unlikely (!this->num_advances))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "245:   if (unlikely (!ot_font))",
          "246:     return NULL;",
          "250:   ot_font->cmap.init (face);",
          "253:   ot_font->glyf.init (face);",
          "255:   return ot_font;",
          "",
          "[Removed Lines]",
          "248:   unsigned int upem = face->get_upem ();",
          "251:   ot_font->h_metrics.init (face, HB_OT_TAG_hhea, HB_OT_TAG_hmtx, upem>>1);",
          "",
          "[Added Lines]",
          "255:   ot_font->h_metrics.init (face, HB_OT_TAG_hhea, HB_OT_TAG_hmtx);",
          "",
          "---------------"
        ],
        "test/shaping/tests/fuzzed.tests||test/shaping/tests/fuzzed.tests": [
          "File: test/shaping/tests/fuzzed.tests -> test/shaping/tests/fuzzed.tests",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fonts/sha1sum/1a6f1687b7a221f9f2c834b0b360d3c8463b6daf.ttf::U+0041:[gid0=0+1000]",
          "2: fonts/sha1sum/5a5daf5eb5a4db77a2baa3ad9c7a6ed6e0655fa8.ttf::U+0041:[gid0=0+1000]",
          "3: fonts/sha1sum/0509e80afb379d16560e9e47bdd7d888bebdebc6.ttf::U+0041:[gid0=0+1000]",
          "4: fonts/sha1sum/641bd9db850193064d17575053ae2bf8ec149ddc.ttf::U+0041:[gid0=0+1000]",
          "5: fonts/sha1sum/375d6ae32a3cbe52fbf81a4e5777e3377675d5a3.ttf::U+0041:[gid0=0+2048]",
          "",
          "[Added Lines]",
          "1: fonts/sha1sum/1a6f1687b7a221f9f2c834b0b360d3c8463b6daf.ttf:--font-funcs=ot:U+0041:[gid0=0+1000]",
          "2: fonts/sha1sum/5a5daf5eb5a4db77a2baa3ad9c7a6ed6e0655fa8.ttf:--font-funcs=ot:U+0041:[gid0=0+1000]",
          "3: fonts/sha1sum/0509e80afb379d16560e9e47bdd7d888bebdebc6.ttf:--font-funcs=ot:U+0041:[gid0=0+1000]",
          "4: fonts/sha1sum/641bd9db850193064d17575053ae2bf8ec149ddc.ttf:--font-funcs=ot:U+0041:[gid0=0+1000]",
          "5: fonts/sha1sum/375d6ae32a3cbe52fbf81a4e5777e3377675d5a3.ttf:--font-funcs=ot:U+0041:[gid0=0+4352]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df698f3299d92867e3305715f675b2621c316acd",
      "candidate_info": {
        "commit_hash": "df698f3299d92867e3305715f675b2621c316acd",
        "repo": "behdad/harfbuzz",
        "commit_url": "https://github.com/behdad/harfbuzz/commit/df698f3299d92867e3305715f675b2621c316acd",
        "files": [
          "src/hb-ot-font.cc",
          "test/shaping/fonts/sha1sum/8240789f6d12d4cfc4b5e8e6f246c3701bcf861f.ttf",
          "test/shaping/fonts/sha1sum/MANIFEST",
          "test/shaping/tests/fuzzed.tests"
        ],
        "message": "[ot-font] Fix hmtx table length checking, *again*\n\nExactly the same problem that I fixed in\n63ef0b41dc48d6112d1918c1b1de9de8ea90adb5\n\nI rewrote the table checking yesterday in\n67f8821fb25d9bd55719f5e29a582ae1af4b02b3\nand introduced the exact same issue again. :(\nGood thing we have ongoing fuzzing going now.  Was discovered\nimmediately by libFuzzer.  Thanks kcc!\n\nhttps://github.com/behdad/harfbuzz/issues/139#issuecomment-153449473\nFixes https://github.com/behdad/harfbuzz/issues/156",
        "before_after_code_files": [
          "src/hb-ot-font.cc||src/hb-ot-font.cc",
          "test/shaping/tests/fuzzed.tests||test/shaping/tests/fuzzed.tests"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/hb-ot-font.cc||src/hb-ot-font.cc"
          ],
          "candidate": [
            "src/hb-ot-font.cc||src/hb-ot-font.cc"
          ]
        }
      },
      "candidate_diff": {
        "src/hb-ot-font.cc||src/hb-ot-font.cc": [
          "File: src/hb-ot-font.cc -> src/hb-ot-font.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     unsigned int len = hb_blob_get_length (this->blob);",
          "63:       this->num_advances = len / 4;",
          "64:     this->num_metrics = this->num_advances + (len - 4 * this->num_advances) / 2;",
          "68:     if (unlikely (!this->num_advances))",
          "69:     {",
          "",
          "[Removed Lines]",
          "62:     if (unlikely (this->num_advances * 4 < len))",
          "",
          "[Added Lines]",
          "62:     if (unlikely (this->num_advances * 4 > len))",
          "",
          "---------------"
        ],
        "test/shaping/tests/fuzzed.tests||test/shaping/tests/fuzzed.tests": [
          "File: test/shaping/tests/fuzzed.tests -> test/shaping/tests/fuzzed.tests",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: fonts/sha1sum/0509e80afb379d16560e9e47bdd7d888bebdebc6.ttf:--font-funcs=ot:U+0041:[gid0=0+1000]",
          "4: fonts/sha1sum/641bd9db850193064d17575053ae2bf8ec149ddc.ttf:--font-funcs=ot:U+0041:[gid0=0+1000]",
          "5: fonts/sha1sum/375d6ae32a3cbe52fbf81a4e5777e3377675d5a3.ttf:--font-funcs=ot:U+0041:[gid0=0+4352]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: fonts/sha1sum/8240789f6d12d4cfc4b5e8e6f246c3701bcf861f.ttf:--font-funcs=ot:U+0041:[gid0=0+2304]",
          "",
          "---------------"
        ]
      }
    }
  ]
}