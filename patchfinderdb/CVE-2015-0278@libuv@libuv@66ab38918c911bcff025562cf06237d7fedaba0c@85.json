{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fd35e7a0bddf9efaef8137cc54e1b6ab6e78cc65",
      "candidate_info": {
        "commit_hash": "fd35e7a0bddf9efaef8137cc54e1b6ab6e78cc65",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/fd35e7a0bddf9efaef8137cc54e1b6ab6e78cc65",
        "files": [
          "test/test-threadpool-cancel.c"
        ],
        "message": "test: fix VC++ warning C4244",
        "before_after_code_files": [
          "test/test-threadpool-cancel.c||test/test-threadpool-cancel.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/test-threadpool-cancel.c||test/test-threadpool-cancel.c": [
          "File: test/test-threadpool-cancel.c -> test/test-threadpool-cancel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:       ASSERT(0 == uv_cancel((uv_req_t*) req));",
          "91:       break;",
          "92:     }",
          "",
          "[Removed Lines]",
          "89:     if (uv_cond_timedwait(&signal_cond, &signal_mutex, 350 * 1e6)) {",
          "",
          "[Added Lines]",
          "89:     if (uv_cond_timedwait(&signal_cond, &signal_mutex, (uint64_t)(350 * 1e6))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f764bff699e9897c3ed795a838acd9c1c8ec8133",
      "candidate_info": {
        "commit_hash": "f764bff699e9897c3ed795a838acd9c1c8ec8133",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/f764bff699e9897c3ed795a838acd9c1c8ec8133",
        "files": [
          "include/uv-unix.h",
          "include/uv-win.h",
          "include/uv.h",
          "src/unix/process.c",
          "src/win/process.c",
          "test/test-spawn.c"
        ],
        "message": "unix: return exec errors from uv_spawn, not async\n\nIf spawning a process fails due to an exec() failure (but it succeeded\nin forking), then this should be considered a spawn failure instead of\nan asynchronous termination of the process. This allows to check for\ncommon exec() failure conditions such as a bad path quickly instead of\nhaving to rely on keeping track of the async callback.\n\nAdditionally, the meaning of the two fields returned in the callback are\nnow exactly what they advertise to be. The process exit argument is not\none of two values depending on what happened to the child.\n\nFixes #978.",
        "before_after_code_files": [
          "include/uv-unix.h||include/uv-unix.h",
          "include/uv-win.h||include/uv-win.h",
          "include/uv.h||include/uv.h",
          "src/unix/process.c||src/unix/process.c",
          "src/win/process.c||src/win/process.c",
          "test/test-spawn.c||test/test-spawn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [
            "src/unix/process.c||src/unix/process.c"
          ],
          "candidate": [
            "src/unix/process.c||src/unix/process.c"
          ]
        }
      },
      "candidate_diff": {
        "include/uv-unix.h||include/uv-unix.h": [
          "File: include/uv-unix.h -> include/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "288: #define UV_PROCESS_PRIVATE_FIELDS                                             \\",
          "289:   void* queue[2];                                                             \\",
          "291:   int status;                                                                 \\",
          "293: #define UV_FS_PRIVATE_FIELDS                                                  \\",
          "",
          "[Removed Lines]",
          "290:   int errorno;                                                                \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/uv-win.h||include/uv-win.h": [
          "File: include/uv-win.h -> include/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "533:     UV_REQ_FIELDS                                                             \\",
          "534:   } exit_req;                                                                 \\",
          "535:   BYTE* child_stdio_buffer;                                                   \\",
          "537:   int exit_signal;                                                            \\",
          "538:   HANDLE wait_handle;                                                         \\",
          "539:   HANDLE process_handle;                                                      \\",
          "",
          "[Removed Lines]",
          "536:   int spawn_error;                                                            \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h"
        ],
        "src/unix/process.c||src/unix/process.c": [
          "File: src/unix/process.c -> src/unix/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:       if (WIFSIGNALED(process->status))",
          "110:         term_signal = WTERMSIG(process->status);",
          "115:       process->exit_cb(process, exit_status, term_signal);",
          "116:     }",
          "117:   }",
          "",
          "[Removed Lines]",
          "112:       if (process->errorno != 0)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "359:   ssize_t r;",
          "360:   pid_t pid;",
          "361:   int err;",
          "362:   int i;",
          "364:   assert(options->file != NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "359:   int exec_errorno;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "434:   uv__close(signal_pipe[1]);",
          "436:   process->status = 0;",
          "438:   do",
          "440:   while (r == -1 && errno == EINTR);",
          "442:   if (r == 0)",
          "446:   else if (r == -1 && errno == EPIPE)",
          "",
          "[Removed Lines]",
          "437:   process->errorno = 0;",
          "439:     r = read(signal_pipe[0], &process->errorno, sizeof(process->errorno));",
          "444:   else if (r == sizeof(process->errorno))",
          "",
          "[Added Lines]",
          "435:   exec_errorno = 0;",
          "437:     r = read(signal_pipe[0], &exec_errorno, sizeof(exec_errorno));",
          "442:   else if (r == sizeof(exec_errorno))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "461:     goto error;",
          "462:   }",
          "467:   process->pid = pid;",
          "468:   process->exit_cb = options->exit_cb;",
          "471:   free(pipes);",
          "474: error:",
          "475:   if (pipes != NULL) {",
          "",
          "[Removed Lines]",
          "464:   q = uv__process_queue(loop, pid);",
          "465:   QUEUE_INSERT_TAIL(q, &process->queue);",
          "469:   uv__handle_start(process);",
          "472:   return 0;",
          "",
          "[Added Lines]",
          "463:   if (exec_errorno == 0) {",
          "464:     q = uv__process_queue(loop, pid);",
          "465:     QUEUE_INSERT_TAIL(q, &process->queue);",
          "466:     uv__handle_start(process);",
          "467:   }",
          "473:   return exec_errorno;",
          "",
          "---------------"
        ],
        "src/win/process.c||src/win/process.c": [
          "File: src/win/process.c -> src/win/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:   uv__handle_init(loop, (uv_handle_t*) handle, UV_PROCESS);",
          "128:   handle->exit_cb = NULL;",
          "129:   handle->pid = 0;",
          "131:   handle->exit_signal = 0;",
          "132:   handle->wait_handle = INVALID_HANDLE_VALUE;",
          "133:   handle->process_handle = INVALID_HANDLE_VALUE;",
          "",
          "[Removed Lines]",
          "130:   handle->spawn_error = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "753:   uv__handle_stop(handle);",
          "759:     exit_code = status;",
          "760:   } else {",
          "",
          "[Removed Lines]",
          "755:   if (handle->spawn_error) {",
          "757:     exit_code = uv_translate_sys_error(handle->spawn_error);",
          "758:   } else if (GetExitCodeProcess(handle->process_handle, &status)) {",
          "",
          "[Added Lines]",
          "754:   if (GetExitCodeProcess(handle->process_handle, &status)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1025:   free(env);",
          "1026:   free(path);",
          "1030:   if (process->child_stdio_buffer != NULL) {",
          "1032:     uv__stdio_destroy(process->child_stdio_buffer);",
          "1033:     process->child_stdio_buffer = NULL;",
          "1034:   }",
          "1044:   }",
          "",
          "[Removed Lines]",
          "1028:   process->spawn_error = err;",
          "1038:   uv__handle_start(process);",
          "1041:   if (err) {",
          "1042:     process->exit_cb_pending = 1;",
          "1043:     uv_insert_pending_req(loop, (uv_req_t*) &process->exit_req);",
          "1046:   return 0;",
          "",
          "[Added Lines]",
          "1033:   if (err == 0) {",
          "1034:     uv__handle_start(process);",
          "1037:   return err;",
          "",
          "---------------"
        ],
        "test/test-spawn.c||test/test-spawn.c": [
          "File: test/test-spawn.c -> test/test-spawn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: }",
          "89: }",
          "",
          "[Removed Lines]",
          "66: static void expect(uv_process_t* process,",
          "67:                    int64_t exit_status,",
          "68:                    int term_signal,",
          "69:                    int err) {",
          "70:   printf(\"exit_cb\\n\");",
          "71:   exit_cb_called++;",
          "72:   ASSERT(exit_status == err);",
          "73:   ASSERT(term_signal == 0);",
          "74:   uv_close((uv_handle_t*)process, close_cb);",
          "75: }",
          "78: static void exit_cb_expect_enoent(uv_process_t* process,",
          "79:                                  int64_t exit_status,",
          "80:                                  int term_signal) {",
          "81:   expect(process, exit_status, term_signal, UV_ENOENT);",
          "82: }",
          "85: static void exit_cb_expect_eperm(uv_process_t* process,",
          "86:                                  int64_t exit_status,",
          "87:                                  int term_signal) {",
          "88:   expect(process, exit_status, term_signal, UV_EPERM);",
          "",
          "[Added Lines]",
          "65: static void fail_cb(uv_process_t* process,",
          "66:                     int64_t exit_status,",
          "67:                     int term_signal) {",
          "68:   ASSERT(0 && \"fail_cb called\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168: TEST_IMPL(spawn_fails) {",
          "170:   options.file = options.args[0] = \"program-that-had-better-not-exist\";",
          "173:   ASSERT(0 == uv_run(uv_default_loop(), UV_RUN_DEFAULT));",
          "176:   MAKE_VALGRIND_HAPPY();",
          "177:   return 0;",
          "",
          "[Removed Lines]",
          "169:   init_process_options(\"\", exit_cb_expect_enoent);",
          "171:   ASSERT(0 == uv_spawn(uv_default_loop(), &process, &options));",
          "172:   ASSERT(1 == uv_is_active((uv_handle_t*) &process));",
          "174:   ASSERT(1 == exit_cb_called);",
          "",
          "[Added Lines]",
          "149:   init_process_options(\"\", fail_cb);",
          "152:   ASSERT(UV_ENOENT == uv_spawn(uv_default_loop(), &process, &options));",
          "153:   ASSERT(0 == uv_is_active((uv_handle_t*) &process));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "851:     ASSERT(0 == setuid(pw->pw_uid));",
          "852:   }",
          "856:   options.flags |= UV_PROCESS_SETUID;",
          "857:   options.uid = 0;",
          "859:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "862:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "863:   ASSERT(r == 0);",
          "868:   MAKE_VALGRIND_HAPPY();",
          "869:   return 0;",
          "",
          "[Removed Lines]",
          "854:   init_process_options(\"spawn_helper1\", exit_cb_expect_eperm);",
          "860:   ASSERT(r == 0);",
          "865:   ASSERT(exit_cb_called == 1);",
          "866:   ASSERT(close_cb_called == 1);",
          "",
          "[Added Lines]",
          "834:   init_process_options(\"spawn_helper1\", fail_cb);",
          "840:   ASSERT(r == UV_EPERM);",
          "845:   ASSERT(close_cb_called == 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "883:     ASSERT(0 == setuid(pw->pw_uid));",
          "884:   }",
          "888:   options.flags |= UV_PROCESS_SETGID;",
          "889:   options.gid = 0;",
          "891:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "894:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "895:   ASSERT(r == 0);",
          "900:   MAKE_VALGRIND_HAPPY();",
          "901:   return 0;",
          "",
          "[Removed Lines]",
          "886:   init_process_options(\"spawn_helper1\", exit_cb_expect_eperm);",
          "892:   ASSERT(r == 0);",
          "897:   ASSERT(exit_cb_called == 1);",
          "898:   ASSERT(close_cb_called == 1);",
          "",
          "[Added Lines]",
          "865:   init_process_options(\"spawn_helper1\", fail_cb);",
          "871:   ASSERT(r == UV_EPERM);",
          "876:   ASSERT(close_cb_called == 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8a3ed6cd0ad725d8e3d9db813a77b9334efbb07",
      "candidate_info": {
        "commit_hash": "d8a3ed6cd0ad725d8e3d9db813a77b9334efbb07",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/d8a3ed6cd0ad725d8e3d9db813a77b9334efbb07",
        "files": [
          "test/test-poll-close.c"
        ],
        "message": "test: strip trailing whitespace",
        "before_after_code_files": [
          "test/test-poll-close.c||test/test-poll-close.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/test-poll-close.c||test/test-poll-close.c": [
          "File: test/test-poll-close.c -> test/test-poll-close.c"
        ]
      }
    },
    {
      "candidate_hash": "649dfc30378440f516a58cd0464288b3b0d60ce7",
      "candidate_info": {
        "commit_hash": "649dfc30378440f516a58cd0464288b3b0d60ce7",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/649dfc30378440f516a58cd0464288b3b0d60ce7",
        "files": [
          "ChangeLog",
          "configure.ac",
          "include/uv-version.h"
        ],
        "message": "Now working on v0.11.22",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "include/uv-version.h||include/uv-version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: # OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
          "15: AC_PREREQ(2.57)",
          "17: AC_CONFIG_MACRO_DIR([m4])",
          "18: m4_include([m4/libuv-extra-automake-flags.m4])",
          "19: AM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects] UV_EXTRA_AUTOMAKE_FLAGS)",
          "",
          "[Removed Lines]",
          "16: AC_INIT([libuv], [0.11.21], [https://github.com/joyent/libuv/issues])",
          "",
          "[Added Lines]",
          "16: AC_INIT([libuv], [0.11.22], [https://github.com/joyent/libuv/issues])",
          "",
          "---------------"
        ],
        "include/uv-version.h||include/uv-version.h": [
          "File: include/uv-version.h -> include/uv-version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #define UV_VERSION_MAJOR 0",
          "34: #define UV_VERSION_MINOR 11",
          "",
          "[Removed Lines]",
          "35: #define UV_VERSION_PATCH 21",
          "36: #define UV_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "35: #define UV_VERSION_PATCH 22",
          "36: #define UV_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "82f2472b9f51b1bbb17873ae0d00fce945d5e294",
      "candidate_info": {
        "commit_hash": "82f2472b9f51b1bbb17873ae0d00fce945d5e294",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/82f2472b9f51b1bbb17873ae0d00fce945d5e294",
        "files": [
          "src/unix/fsevents.c"
        ],
        "message": "darwin: fix 10.6 build error in fsevents.c\n\nWork around an 'initializer element is not constant' build error in\nsrc/unix/fsevents.c by turning the const int flags into #defines.\n\nOnly an issue on OS X 10.6 due to the old compiler it uses.\n\nFixes #908.",
        "before_after_code_files": [
          "src/unix/fsevents.c||src/unix/fsevents.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/fsevents.c||src/unix/fsevents.c": [
          "File: src/unix/fsevents.c -> src/unix/fsevents.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: #include <CoreFoundation/CFRunLoop.h>",
          "49: #include <CoreServices/CoreServices.h>",
          "51: typedef struct uv__fsevents_event_s uv__fsevents_event_t;",
          "52: typedef struct uv__cf_loop_signal_s uv__cf_loop_signal_t;",
          "53: typedef struct uv__cf_loop_state_s uv__cf_loop_state_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: #define kFSEventsModified (kFSEventStreamEventFlagItemFinderInfoMod |         \\",
          "55:                            kFSEventStreamEventFlagItemModified |              \\",
          "56:                            kFSEventStreamEventFlagItemInodeMetaMod |          \\",
          "57:                            kFSEventStreamEventFlagItemChangeOwner |           \\",
          "58:                            kFSEventStreamEventFlagItemXattrMod)",
          "60: #define kFSEventsRenamed  (kFSEventStreamEventFlagItemCreated |               \\",
          "61:                            kFSEventStreamEventFlagItemRemoved |               \\",
          "62:                            kFSEventStreamEventFlagItemRenamed)",
          "64: #define kFSEventsSystem   (kFSEventStreamEventFlagUserDropped |               \\",
          "65:                            kFSEventStreamEventFlagKernelDropped |             \\",
          "66:                            kFSEventStreamEventFlagEventIdsWrapped |           \\",
          "67:                            kFSEventStreamEventFlagHistoryDone |               \\",
          "68:                            kFSEventStreamEventFlagMount |                     \\",
          "69:                            kFSEventStreamEventFlagUnmount |                   \\",
          "70:                            kFSEventStreamEventFlagRootChanged)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:   char path[1];",
          "75: };",
          "94: static void uv__cf_loop_cb(void* arg);",
          "95: static void* uv__cf_loop_runner(void* arg);",
          "",
          "[Removed Lines]",
          "77: static const int kFSEventsModified = kFSEventStreamEventFlagItemFinderInfoMod |",
          "78:                                      kFSEventStreamEventFlagItemModified |",
          "79:                                      kFSEventStreamEventFlagItemInodeMetaMod |",
          "80:                                      kFSEventStreamEventFlagItemChangeOwner |",
          "81:                                      kFSEventStreamEventFlagItemXattrMod;",
          "82: static const int kFSEventsRenamed = kFSEventStreamEventFlagItemCreated |",
          "83:                                     kFSEventStreamEventFlagItemRemoved |",
          "84:                                     kFSEventStreamEventFlagItemRenamed;",
          "85: static const int kFSEventsSystem = kFSEventStreamEventFlagUserDropped |",
          "86:                                    kFSEventStreamEventFlagKernelDropped |",
          "87:                                    kFSEventStreamEventFlagEventIdsWrapped |",
          "88:                                    kFSEventStreamEventFlagHistoryDone |",
          "89:                                    kFSEventStreamEventFlagMount |",
          "90:                                    kFSEventStreamEventFlagUnmount |",
          "91:                                    kFSEventStreamEventFlagRootChanged;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}