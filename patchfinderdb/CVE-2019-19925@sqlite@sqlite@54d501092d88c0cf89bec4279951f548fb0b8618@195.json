{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "40f827a65e3328b072a37eb14dcf93cccfd5aba3",
      "candidate_info": {
        "commit_hash": "40f827a65e3328b072a37eb14dcf93cccfd5aba3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/40f827a65e3328b072a37eb14dcf93cccfd5aba3",
        "files": [
          "README.md",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Improvements to the README.md file.  No code changes.\n\nFossilOrigin-Name: bbdbaf84a52937ccf877072a8b01b07f7b9c037c59ba54df72ca888d5404cbad",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b2011c13173114505705d2ff2ba6f476697d51aca0bddd585a9e5a639dca41e2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61ad5513e05469c93546a3324f53e8ff0efa3b18",
      "candidate_info": {
        "commit_hash": "61ad5513e05469c93546a3324f53e8ff0efa3b18",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/61ad5513e05469c93546a3324f53e8ff0efa3b18",
        "files": [
          "Makefile.msc",
          "autoconf/Makefile.msc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Support building the Tcl bindings DLL using MSVC.\n\nFossilOrigin-Name: b2011c13173114505705d2ff2ba6f476697d51aca0bddd585a9e5a639dca41e2",
        "before_after_code_files": [
          "Makefile.msc||Makefile.msc",
          "autoconf/Makefile.msc||autoconf/Makefile.msc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "320: SQLITETCLDECLSH = sqlite_tclDecls.h",
          "321: !ENDIF",
          "323: # These are the additional targets that the targets that integrate with the",
          "324: # Tcl library should depend on when compiling, etc.",
          "325: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323: # This is the name to use for the dynamic link library (DLL) containing the",
          "324: # Tcl bindings for SQLite.",
          "325: #",
          "326: !IFNDEF SQLITE3TCLDLL",
          "327: SQLITE3TCLDLL = tclsqlite3.dll",
          "328: !ENDIF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "495: # will run on the platform that is doing the build.",
          "496: #",
          "497: !IF $(USE_FULLWARN)!=0",
          "499: !ELSE",
          "501: !ENDIF",
          "503: # Check if assembly code listings should be generated for the source",
          "",
          "[Removed Lines]",
          "498: BCC = $(NCC) -nologo -W4 $(CCOPTS) $(BCCOPTS)",
          "500: BCC = $(NCC) -nologo -W3 $(CCOPTS) $(BCCOPTS)",
          "",
          "[Added Lines]",
          "505: BCC = $(NCC) -nologo -W4 -Fd$*.pdb $(CCOPTS) $(BCCOPTS)",
          "507: BCC = $(NCC) -nologo -W3 -Fd$*.pdb $(CCOPTS) $(BCCOPTS)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "853: # prior to running nmake in order to match the actual installed location and",
          "854: # version on this machine.",
          "855: #",
          "856: !IFNDEF TCLDIR",
          "857: TCLDIR = $(TOP)\\compat\\tcl",
          "858: !ENDIF",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "863: !IFNDEF TCLVERSION",
          "864: TCLVERSION = 86",
          "865: !ENDIF",
          "867: !IFNDEF TCLSUFFIX",
          "868: TCLSUFFIX =",
          "869: !ENDIF",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "866: !ENDIF",
          "868: !IFNDEF LIBTCL",
          "870: !ENDIF",
          "872: !IFNDEF LIBTCLSTUB",
          "874: !ENDIF",
          "876: !IFNDEF LIBTCLPATH",
          "",
          "[Removed Lines]",
          "869: LIBTCL = tcl86.lib",
          "873: LIBTCLSTUB = tclstub86.lib",
          "",
          "[Added Lines]",
          "884: LIBTCL = tcl$(TCLVERSION)$(TCLSUFFIX).lib",
          "888: LIBTCLSTUB = tclstub$(TCLVERSION)$(TCLSUFFIX).lib",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1063: # Command line prefixes for compiling code, compiling resources,",
          "1064: # linking, etc.",
          "1065: #",
          "1067: LTRCOMPILE = $(RCC) -r",
          "1068: LTLIB = lib.exe",
          "1069: LTLINK = $(TCC) -Fe$@",
          "",
          "[Removed Lines]",
          "1066: LTCOMPILE = $(TCC) -Fo$@",
          "",
          "[Added Lines]",
          "1081: LTCOMPILE = $(TCC) -Fo$@ -Fd$*.pdb",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1081: !IFDEF PLATFORM",
          "1082: LTLINKOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "1083: LTLIBOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "1084: !ELSE",
          "1085: LTLINKOPTS = /NOLOGO",
          "1086: LTLIBOPTS = /NOLOGO",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1099: !ELSEIF \"$(VISUALSTUDIOVERSION)\"==\"12.0\" || \\",
          "1100:         \"$(VISUALSTUDIOVERSION)\"==\"14.0\" || \\",
          "1101:         \"$(VISUALSTUDIOVERSION)\"==\"15.0\"",
          "1102: LTLINKOPTS = /NOLOGO /MACHINE:x86",
          "1103: LTLIBOPTS = /NOLOGO /MACHINE:x86",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1665: # Extra targets for the \"all\" target that require Tcl.",
          "1666: #",
          "1667: !IF $(NO_TCL)==0",
          "1669: !ELSE",
          "1670: ALL_TCL_TARGETS =",
          "1671: !ENDIF",
          "",
          "[Removed Lines]",
          "1668: ALL_TCL_TARGETS = libtclsqlite3.lib",
          "",
          "[Added Lines]",
          "1688: ALL_TCL_TARGETS = $(SQLITE3TCLDLL)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1697:  $(LTLIB) $(LTLIBOPTS) /OUT:$@ $(LIBOBJ) $(TLIBS)",
          "1699: libtclsqlite3.lib: tclsqlite.lo libsqlite3.lib",
          "1701: # <</mark>>",
          "1703: $(SQLITE3DLL): $(LIBOBJ) $(LIBRESOBJS) $(CORE_LINK_DEP)",
          "",
          "[Removed Lines]",
          "1700:  $(LTLIB) $(LTLIBOPTS) $(LTLIBPATHS) /OUT:$@ tclsqlite.lo libsqlite3.lib $(LIBTCLSTUB) $(TLIBS)",
          "",
          "[Added Lines]",
          "1720:  $(LTLIB) $(LTLIBOPTS) $(TCLLIBPATHS) $(LTLIBPATHS) /OUT:$@ tclsqlite.lo libsqlite3.lib $(LIBTCLSTUB) $(TLIBS)",
          "1722: tclsqlite3.def: tclsqlite.lo",
          "1723:  echo EXPORTS > tclsqlite3.def",
          "1724:  dumpbin /all tclsqlite.lo \\",
          "1725:   | $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl include \"^\\s+/EXPORT:_?((?:Sqlite3|Tclsqlite3)_[^@]*)(?:@\\d+)?$$\" \\1 \\",
          "1726:   | sort >> tclsqlite3.def",
          "1728: pkgIndex.tcl: $(TOP)\\VERSION",
          "1729:  for /F %%V in ('type \"$(TOP)\\VERSION\"') do ( \\",
          "1730:   echo package ifneeded sqlite3 @version@ [list load [file join $$dir $(SQLITE3TCLDLL)] sqlite3] \\",
          "1731:    | $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl exact @version@ %%V > pkgIndex.tcl \\",
          "1732:  )",
          "1734: $(SQLITE3TCLDLL): libtclsqlite3.lib $(LIBRESOBJS) tclsqlite3.def pkgIndex.tcl",
          "1735:  $(LD) $(LDFLAGS) $(LTLINKOPTS) $(LTLIBPATHS) /DLL /DEF:tclsqlite3.def /OUT:$@ libtclsqlite3.lib $(LIBRESOBJS) $(LTLIBS) $(TLIBS)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1837: #",
          "1838: !IF $(USE_RC)!=0",
          "1839: # <<block1>>",
          "1841:  echo #ifndef SQLITE_RESOURCE_VERSION > sqlite3rc.h",
          "1842:  for /F %%V in ('type \"$(TOP)\\VERSION\"') do ( \\",
          "1843:   echo #define SQLITE_RESOURCE_VERSION %%V \\",
          "",
          "[Removed Lines]",
          "1840: $(LIBRESOBJS): $(TOP)\\src\\sqlite3.rc $(SQLITE3H)",
          "",
          "[Added Lines]",
          "1875: $(LIBRESOBJS): $(TOP)\\src\\sqlite3.rc $(SQLITE3H) $(TOP)\\VERSION",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2514:  del /Q *.bsc *.def *.cod *.da *.bb *.bbg *.vc gmon.out 2>NUL",
          "2515:  del /Q $(SQLITE3EXE) $(SQLITE3DLL) Replace.exe 2>NUL",
          "2516: # <<mark>>",
          "2517:  del /Q opcodes.c opcodes.h 2>NUL",
          "2518:  del /Q lemon.* lempar.c parse.* 2>NUL",
          "2519:  del /Q mksourceid.* mkkeywordhash.* keywordhash.h 2>NUL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2552:  del /Q $(SQLITE3TCLDLL) pkgIndex.tcl 2>NUL",
          "",
          "---------------"
        ],
        "autoconf/Makefile.msc||autoconf/Makefile.msc": [
          "File: autoconf/Makefile.msc -> autoconf/Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "433: # will run on the platform that is doing the build.",
          "434: #",
          "435: !IF $(USE_FULLWARN)!=0",
          "437: !ELSE",
          "439: !ENDIF",
          "441: # Check if assembly code listings should be generated for the source",
          "",
          "[Removed Lines]",
          "436: BCC = $(NCC) -nologo -W4 $(CCOPTS) $(BCCOPTS)",
          "438: BCC = $(NCC) -nologo -W3 $(CCOPTS) $(BCCOPTS)",
          "",
          "[Added Lines]",
          "436: BCC = $(NCC) -nologo -W4 -Fd$*.pdb $(CCOPTS) $(BCCOPTS)",
          "438: BCC = $(NCC) -nologo -W3 -Fd$*.pdb $(CCOPTS) $(BCCOPTS)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "808: # Command line prefixes for compiling code, compiling resources,",
          "809: # linking, etc.",
          "810: #",
          "812: LTRCOMPILE = $(RCC) -r",
          "813: LTLIB = lib.exe",
          "814: LTLINK = $(TCC) -Fe$@",
          "",
          "[Removed Lines]",
          "811: LTCOMPILE = $(TCC) -Fo$@",
          "",
          "[Added Lines]",
          "811: LTCOMPILE = $(TCC) -Fo$@ -Fd$*.pdb",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "826: !IFDEF PLATFORM",
          "827: LTLINKOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "828: LTLIBOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "829: !ELSE",
          "830: LTLINKOPTS = /NOLOGO",
          "831: LTLIBOPTS = /NOLOGO",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "829: !ELSEIF \"$(VISUALSTUDIOVERSION)\"==\"12.0\" || \\",
          "830:         \"$(VISUALSTUDIOVERSION)\"==\"14.0\" || \\",
          "831:         \"$(VISUALSTUDIOVERSION)\"==\"15.0\"",
          "832: LTLINKOPTS = /NOLOGO /MACHINE:x86",
          "833: LTLIBOPTS = /NOLOGO /MACHINE:x86",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5be64ea8e33f632f9c337feac9b0663d8e6e59fc9a71e5d832d9fd905c06458e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f2b1e4c909df912209c34816ae33bf31cbb20b8",
      "candidate_info": {
        "commit_hash": "8f2b1e4c909df912209c34816ae33bf31cbb20b8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8f2b1e4c909df912209c34816ae33bf31cbb20b8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/index6.test"
        ],
        "message": "Do not assume that \"x IS NOT ?\" implies \"x NOT NULL\" when considering partial indexes. Fix for ticket [8025674847].\n\nFossilOrigin-Name: 0ba6d709b50d92db1542f2ff30535a80184b00dadf759d51e5cae7a6e37b1764",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/index6.test||test/index6.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a194e53670e25a48c2bb51b54755abff88ed6ae2596c5858fb4aac16cb452bdf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4946:   if( pE2->op==TK_NOTNULL",
          "4947:    && pE1->op!=TK_ISNULL",
          "4948:    && pE1->op!=TK_IS",
          "4949:    && pE1->op!=TK_OR",
          "4950:   ){",
          "4951:     Expr *pX = sqlite3ExprSkipCollate(pE1->pLeft);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4949:    && pE1->op!=TK_ISNOT",
          "",
          "---------------"
        ],
        "test/index6.test||test/index6.test": [
          "File: test/index6.test -> test/index6.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "423:   SELECT * FROM t0 WHERE c0 OR 1;",
          "424: } {{}}",
          "426: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "426: # 2019-05-11",
          "427: # Ticket https://sqlite.org/src/tktview/8025674847",
          "428: reset_db",
          "429: do_execsql_test index6-14.1 {",
          "430:   CREATE TABLE IF NOT EXISTS t0 (c0, c1);",
          "431:   CREATE INDEX IF NOT EXISTS i0 ON t0(c0, c1) WHERE c0 NOT NULL;",
          "432:   INSERT INTO t0(c0, c1) VALUES(NULL, 'row');",
          "433:   SELECT * FROM t0 WHERE t0.c0 IS NOT 1;",
          "434: } {{} row}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8bf4126c84341c5674fce578146992a36e5c26a8",
      "candidate_info": {
        "commit_hash": "8bf4126c84341c5674fce578146992a36e5c26a8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8bf4126c84341c5674fce578146992a36e5c26a8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "test/corruptL.test",
          "test/fuzzdata8.db"
        ],
        "message": "Change the error message slightly for when two or more indexes have the same rootpage.\n\nFossilOrigin-Name: 916c52dad414b224695d455a42af36f85dff216504c2aa67d1d2c5818cdca8d6",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "test/corruptL.test||test/corruptL.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6b360bc0b9ad18ccda9d58d43a8388d19999432bfdf294abcf5beb44ef990cb4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3490:       if( pTblName!=0 ){",
          "3491:         pIndex->tnum = db->init.newTnum;",
          "3492:         if( sqlite3IndexHasDuplicateRootPage(pIndex) ){",
          "3494:           pParse->rc = SQLITE_CORRUPT_BKPT;",
          "3495:           goto exit_create_index;",
          "3496:         }",
          "",
          "[Removed Lines]",
          "3493:           sqlite3ErrorMsg(pParse, \"invalid root page\");",
          "",
          "[Added Lines]",
          "3493:           sqlite3ErrorMsg(pParse, \"invalid rootpage\");",
          "",
          "---------------"
        ],
        "test/corruptL.test||test/corruptL.test": [
          "File: test/corruptL.test -> test/corruptL.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "627:     INSERT INTO t1(b) VALUES(1);",
          "628:     INSERT INTO t1(b) VALUES(2);",
          "629:   COMMIT;",
          "632: #-------------------------------------------------------------------------",
          "633: reset_db",
          "",
          "[Removed Lines]",
          "630: } {1 {malformed database schema (t1b) - invalid root page}}",
          "",
          "[Added Lines]",
          "630: } {1 {malformed database schema (t1b) - invalid rootpage}}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "721: do_catchsql_test 7.1 {",
          "722:   SELECT * FROM sqlite_master;",
          "725: finish_test",
          "",
          "[Removed Lines]",
          "723: } {1 {malformed database schema (t1x1) - invalid root page}}",
          "",
          "[Added Lines]",
          "723: } {1 {malformed database schema (t1x1) - invalid rootpage}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4e8e533bf7ee9afd7f6a4d8899b891bbdbf9ac53",
      "candidate_info": {
        "commit_hash": "4e8e533bf7ee9afd7f6a4d8899b891bbdbf9ac53",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4e8e533bf7ee9afd7f6a4d8899b891bbdbf9ac53",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/gencol1.test"
        ],
        "message": "Restore generated column loop detection logic that was incorrectly removed from the previous check-in [9e07b48934e9a972].  This fixes ticket [299b50ba812d8e54]\n\nFossilOrigin-Name: 104a2beb57037f9353ffa77096aae0eb64e4682e667f31623bfd3d064dd8d881",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/gencol1.test||test/gencol1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9e07b48934e9a972dcf62e3538b3b21ffa044c553feba0441675ac0bbe13bcb2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3645:           iSrc = sqlite3TableColumnToStorage(pTab, iCol) - pParse->iSelfTab;",
          "3646: #ifndef SQLITE_OMIT_GENERATED_COLUMNS",
          "3647:           if( pCol->colFlags & COLFLAG_GENERATED ){",
          "3649:             return iSrc;",
          "3650:           }else",
          "",
          "[Removed Lines]",
          "3648:             sqlite3ExprCodeGeneratedColumn(pParse, pCol, iSrc);",
          "",
          "[Added Lines]",
          "3648:             if( pCol->colFlags & COLFLAG_BUSY ){",
          "3649:               sqlite3ErrorMsg(pParse, \"generated column loop on \\\"%s\\\"\",",
          "3650:                               pCol->zName);",
          "3651:               return 0;",
          "3652:             }",
          "3653:             pCol->colFlags |= COLFLAG_BUSY;",
          "3654:             if( pCol->colFlags & COLFLAG_NOTAVAIL ){",
          "3655:               sqlite3ExprCodeGeneratedColumn(pParse, pCol, iSrc);",
          "3656:             }",
          "3657:             pCol->colFlags &= ~(COLFLAG_BUSY|COLFLAG_NOTAVAIL);",
          "",
          "---------------"
        ],
        "test/gencol1.test||test/gencol1.test": [
          "File: test/gencol1.test -> test/gencol1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "233:   INSERT INTO t0 VALUES (0),(99);",
          "234:   SELECT * FROM t0;",
          "235: } {1 1 0 1 1 99}",
          "237: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236: do_catchsql_test gencol1-8.20 {",
          "237:   DROP TABLE IF EXISTS t0;",
          "238:   CREATE TABLE t0(",
          "239:     c0,",
          "240:     c1 AS(c0 + c2),",
          "241:     c2 AS(c1) CHECK(c2)",
          "242:   );",
          "243:   UPDATE t0 SET c0 = NULL;",
          "244: } {1 {generated column loop on \"c2\"}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}