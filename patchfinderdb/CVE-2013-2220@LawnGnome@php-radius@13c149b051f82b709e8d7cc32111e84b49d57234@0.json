{
  "cve_id": "CVE-2013-2220",
  "cve_desc": "Buffer overflow in the radius_get_vendor_attr function in the Radius extension before 1.2.7 for PHP allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via a large Vendor Specific Attributes (VSA) length value.",
  "repo": "LawnGnome/php-radius",
  "patch_hash": "13c149b051f82b709e8d7cc32111e84b49d57234",
  "patch_info": {
    "commit_hash": "13c149b051f82b709e8d7cc32111e84b49d57234",
    "repo": "LawnGnome/php-radius",
    "commit_url": "https://github.com/LawnGnome/php-radius/commit/13c149b051f82b709e8d7cc32111e84b49d57234",
    "files": [
      "radius.c",
      "radlib.c",
      "radlib_vs.h"
    ],
    "message": "Fix a security issue in radius_get_vendor_attr().\n\nThe underlying rad_get_vendor_attr() function assumed that it would always be\ngiven valid VSA data. Indeed, the buffer length wasn't even passed in; the\nassumption was that the length field within the VSA structure would be valid.\n\nThis could result in denial of service by providing a length that would be\nbeyond the memory limit, or potential arbitrary memory access by providing a\nlength greater than the actual data given.\n\nrad_get_vendor_attr() has been changed to require the raw data length be\nprovided, and this is then used to check that the VSA is valid.\n\nConflicts:\n\tradlib_vs.h",
    "before_after_code_files": [
      "radius.c||radius.c",
      "radlib.c||radlib.c",
      "radlib_vs.h||radlib_vs.h"
    ]
  },
  "patch_diff": {
    "radius.c||radius.c": [
      "File: radius.c -> radius.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "542: PHP_FUNCTION(radius_get_vendor_attr)",
      "543: {",
      "546:  int len;",
      "547:  u_int32_t vendor;",
      "550:   return;",
      "551:  }",
      "555:   RETURN_FALSE;",
      "556:  } else {",
      "558:   array_init(return_value);",
      "560:   add_assoc_long(return_value, \"vendor\", vendor);",
      "562:   return;",
      "563:  }",
      "564: }",
      "",
      "[Removed Lines]",
      "544:  int res;",
      "545:  const void *data;",
      "549:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &data, &len) == FAILURE) {",
      "553:  res = rad_get_vendor_attr(&vendor, &data, (size_t *) &len);",
      "554:  if (res == -1) {",
      "559:   add_assoc_long(return_value, \"attr\", res);",
      "561:   add_assoc_stringl(return_value, \"data\", (char *) data, len, 1);",
      "",
      "[Added Lines]",
      "544:  const void *data, *raw;",
      "547:  unsigned char type;",
      "548:  size_t data_len;",
      "550:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &raw, &len) == FAILURE) {",
      "554:  if (rad_get_vendor_attr(&vendor, &type, &data, &data_len, raw, len) == -1) {",
      "559:   add_assoc_long(return_value, \"attr\", type);",
      "561:   add_assoc_stringl(return_value, \"data\", (char *) data, data_len, 1);",
      "",
      "---------------"
    ],
    "radlib.c||radlib.c": [
      "File: radlib.c -> radlib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "898: }",
      "900: int",
      "902: {",
      "903:  struct vendor_attribute *attr;",
      "910:  return (attr->attrib_type);",
      "911: }",
      "",
      "[Removed Lines]",
      "901: rad_get_vendor_attr(u_int32_t *vendor, const void **data, size_t *len)",
      "905:  attr = (struct vendor_attribute *)*data;",
      "",
      "[Added Lines]",
      "901: rad_get_vendor_attr(u_int32_t *vendor, unsigned char *type, const void **data, size_t *len, const void *raw, size_t raw_len)",
      "905:  if (raw_len < sizeof(struct vendor_attribute)) {",
      "906:   return -1;",
      "907:  }",
      "909:  attr = (struct vendor_attribute *) raw;",
      "915:  if ((attr->attrib_len + 4) > raw_len) {",
      "916:   return -1;",
      "917:  }",
      "",
      "---------------"
    ],
    "radlib_vs.h||radlib_vs.h": [
      "File: radlib_vs.h -> radlib_vs.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "75: struct rad_handle;",
      "78: int rad_put_vendor_addr(struct rad_handle *, int, int, struct in_addr);",
      "79: int rad_put_vendor_attr(struct rad_handle *, int, int, const void *,",
      "80:      size_t);",
      "",
      "[Removed Lines]",
      "77: int rad_get_vendor_attr(u_int32_t *, const void **, size_t *);",
      "",
      "[Added Lines]",
      "77: int rad_get_vendor_attr(u_int32_t *, unsigned char *, const void **, size_t *, const void *, size_t);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7e9acc39ece529203d6bfafb032e90e88f20a215",
      "candidate_info": {
        "commit_hash": "7e9acc39ece529203d6bfafb032e90e88f20a215",
        "repo": "LawnGnome/php-radius",
        "commit_url": "https://github.com/LawnGnome/php-radius/commit/7e9acc39ece529203d6bfafb032e90e88f20a215",
        "files": [
          "radius.c"
        ],
        "message": "Fix parameter types.\n\nFixes bug #60885 (Radius module causing Apache segmentation fault).",
        "before_after_code_files": [
          "radius.c||radius.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "radius.c||radius.c"
          ],
          "candidate": [
            "radius.c||radius.c"
          ]
        }
      },
      "candidate_diff": {
        "radius.c||radius.c": [
          "File: radius.c -> radius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "267: PHP_FUNCTION(radius_create_request)",
          "268: {",
          "270:  radius_descriptor *raddesc;",
          "271:  zval *z_radh;",
          "",
          "[Removed Lines]",
          "269:  int code;",
          "",
          "[Added Lines]",
          "269:  long code;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "544: {",
          "545:  int res, vendor;",
          "546:  const void *data;",
          "549:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &data, &len) == FAILURE) {",
          "550:   return;",
          "",
          "[Removed Lines]",
          "547:  size_t len;",
          "",
          "[Added Lines]",
          "547:  int len;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "665:  zval *z_radh;",
          "666:  const void *mangled;",
          "667:  unsigned char *buf;",
          "671:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs\", &z_radh, &mangled, &len) == FAILURE) {",
          "672:   return;",
          "",
          "[Removed Lines]",
          "668:  size_t len;",
          "669:  int res;",
          "",
          "[Added Lines]",
          "668:  int len, res;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "695:  zval *z_radh;",
          "696:  const void *mangled;",
          "697:  unsigned char *buf;",
          "701:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs\", &z_radh, &mangled, &len) == FAILURE) {",
          "702:   return;",
          "",
          "[Removed Lines]",
          "698:  size_t len, dlen;",
          "699:  int res;",
          "",
          "[Added Lines]",
          "697:  size_t dlen;",
          "698:  int len, res;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a766e62e2ab779a36fdfcfadad225ac5b0e8dcb3",
      "candidate_info": {
        "commit_hash": "a766e62e2ab779a36fdfcfadad225ac5b0e8dcb3",
        "repo": "LawnGnome/php-radius",
        "commit_url": "https://github.com/LawnGnome/php-radius/commit/a766e62e2ab779a36fdfcfadad225ac5b0e8dcb3",
        "files": [
          "radius.c"
        ],
        "message": "Quiet signedness warnings by using or casting to the correct types.",
        "before_after_code_files": [
          "radius.c||radius.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "radius.c||radius.c"
          ],
          "candidate": [
            "radius.c||radius.c"
          ]
        }
      },
      "candidate_diff": {
        "radius.c||radius.c": [
          "File: radius.c -> radius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "543: PHP_FUNCTION(radius_get_vendor_attr)",
          "544: {",
          "546:  const void *data;",
          "547:  int len;",
          "549:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &data, &len) == FAILURE) {",
          "550:   return;",
          "551:  }",
          "554:  if (res == -1) {",
          "555:   RETURN_FALSE;",
          "556:  } else {",
          "",
          "[Removed Lines]",
          "545:  int res, vendor;",
          "553:  res = rad_get_vendor_attr(&vendor, &data, &len);",
          "",
          "[Added Lines]",
          "545:  int res;",
          "548:  u_int32_t vendor;",
          "554:  res = rad_get_vendor_attr(&vendor, &data, (size_t *) &len);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "680:   efree(buf);",
          "681:   RETURN_FALSE;",
          "682:  } else {",
          "684:   efree(buf);",
          "685:   return;",
          "686:  }",
          "",
          "[Removed Lines]",
          "683:   RETVAL_STRINGL(buf, len, 1);",
          "",
          "[Added Lines]",
          "684:   RETVAL_STRINGL((char *) buf, len, 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "709:   efree(buf);",
          "710:   RETURN_FALSE;",
          "711:  } else {",
          "713:   efree(buf);",
          "714:   return;",
          "715:  }",
          "",
          "[Removed Lines]",
          "712:   RETVAL_STRINGL(buf, dlen, 1);",
          "",
          "[Added Lines]",
          "713:   RETVAL_STRINGL((char *) buf, dlen, 1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}