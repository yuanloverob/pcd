{
  "cve_id": "CVE-2011-4112",
  "cve_desc": "The net subsystem in the Linux kernel before 3.1 does not properly restrict use of the IFF_TX_SKB_SHARING flag, which allows local users to cause a denial of service (panic) by leveraging the CAP_NET_ADMIN capability to access /proc/net/pktgen/pgctrl, and then using the pktgen package in conjunction with a bridge device for a VLAN interface.",
  "repo": "torvalds/linux",
  "patch_hash": "550fd08c2cebad61c548def135f67aba284c6162",
  "patch_info": {
    "commit_hash": "550fd08c2cebad61c548def135f67aba284c6162",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/550fd08c2cebad61c548def135f67aba284c6162",
    "files": [
      "drivers/isdn/i4l/isdn_net.c",
      "drivers/net/bonding/bond_main.c",
      "drivers/net/ifb.c",
      "drivers/net/macvlan.c",
      "drivers/net/tun.c",
      "drivers/net/veth.c",
      "drivers/net/wan/hdlc_fr.c",
      "drivers/net/wireless/airo.c",
      "drivers/net/wireless/hostap/hostap_main.c",
      "drivers/staging/ath6kl/os/linux/ar6000_drv.c",
      "net/8021q/vlan_dev.c",
      "net/bluetooth/bnep/netdev.c",
      "net/l2tp/l2tp_eth.c",
      "net/mac80211/iface.c"
    ],
    "message": "net: Audit drivers to identify those needing IFF_TX_SKB_SHARING cleared\n\nAfter the last patch, We are left in a state in which only drivers calling\nether_setup have IFF_TX_SKB_SHARING set (we assume that drivers touching real\nhardware call ether_setup for their net_devices and don't hold any state in\ntheir skbs.  There are a handful of drivers that violate this assumption of\ncourse, and need to be fixed up.  This patch identifies those drivers, and marks\nthem as not being able to support the safe transmission of skbs by clearning the\nIFF_TX_SKB_SHARING flag in priv_flags\n\nSigned-off-by: Neil Horman <nhorman@tuxdriver.com>\nCC: Karsten Keil <isdn@linux-pingi.de>\nCC: \"David S. Miller\" <davem@davemloft.net>\nCC: Jay Vosburgh <fubar@us.ibm.com>\nCC: Andy Gospodarek <andy@greyhouse.net>\nCC: Patrick McHardy <kaber@trash.net>\nCC: Krzysztof Halasa <khc@pm.waw.pl>\nCC: \"John W. Linville\" <linville@tuxdriver.com>\nCC: Greg Kroah-Hartman <gregkh@suse.de>\nCC: Marcel Holtmann <marcel@holtmann.org>\nCC: Johannes Berg <johannes@sipsolutions.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "drivers/isdn/i4l/isdn_net.c||drivers/isdn/i4l/isdn_net.c",
      "drivers/net/bonding/bond_main.c||drivers/net/bonding/bond_main.c",
      "drivers/net/ifb.c||drivers/net/ifb.c",
      "drivers/net/macvlan.c||drivers/net/macvlan.c",
      "drivers/net/tun.c||drivers/net/tun.c",
      "drivers/net/veth.c||drivers/net/veth.c",
      "drivers/net/wan/hdlc_fr.c||drivers/net/wan/hdlc_fr.c",
      "drivers/net/wireless/airo.c||drivers/net/wireless/airo.c",
      "drivers/net/wireless/hostap/hostap_main.c||drivers/net/wireless/hostap/hostap_main.c",
      "drivers/staging/ath6kl/os/linux/ar6000_drv.c||drivers/staging/ath6kl/os/linux/ar6000_drv.c",
      "net/8021q/vlan_dev.c||net/8021q/vlan_dev.c",
      "net/bluetooth/bnep/netdev.c||net/bluetooth/bnep/netdev.c",
      "net/l2tp/l2tp_eth.c||net/l2tp/l2tp_eth.c",
      "net/mac80211/iface.c||net/mac80211/iface.c"
    ]
  },
  "patch_diff": {
    "drivers/isdn/i4l/isdn_net.c||drivers/isdn/i4l/isdn_net.c": [
      "File: drivers/isdn/i4l/isdn_net.c -> drivers/isdn/i4l/isdn_net.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2534:  dev->flags = IFF_NOARP|IFF_POINTOPOINT;",
      "2535:  dev->header_ops = NULL;",
      "2536:  dev->netdev_ops = &isdn_netdev_ops;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2537:  dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "",
      "---------------"
    ],
    "drivers/net/bonding/bond_main.c||drivers/net/bonding/bond_main.c": [
      "File: drivers/net/bonding/bond_main.c -> drivers/net/bonding/bond_main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1558:    if (slave_dev->type != ARPHRD_ETHER)",
      "1559:     bond_setup_by_slave(bond_dev, slave_dev);",
      "1561:     ether_setup(bond_dev);",
      "1563:    netdev_bonding_change(bond_dev,",
      "1564:            NETDEV_POST_TYPE_CHANGE);",
      "",
      "[Removed Lines]",
      "1560:    else",
      "",
      "[Added Lines]",
      "1560:    else {",
      "1562:     bond_dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "1563:    }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4330:  bond_dev->tx_queue_len = 0;",
      "4331:  bond_dev->flags |= IFF_MASTER|IFF_MULTICAST;",
      "4332:  bond_dev->priv_flags |= IFF_BONDING;",
      "",
      "[Removed Lines]",
      "4333:  bond_dev->priv_flags &= ~IFF_XMIT_DST_RELEASE;",
      "",
      "[Added Lines]",
      "4335:  bond_dev->priv_flags &= ~(IFF_XMIT_DST_RELEASE | IFF_TX_SKB_SHARING);",
      "",
      "---------------"
    ],
    "drivers/net/ifb.c||drivers/net/ifb.c": [
      "File: drivers/net/ifb.c -> drivers/net/ifb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "184:  dev->flags |= IFF_NOARP;",
      "185:  dev->flags &= ~IFF_MULTICAST;",
      "187:  random_ether_addr(dev->dev_addr);",
      "188: }",
      "",
      "[Removed Lines]",
      "186:  dev->priv_flags &= ~IFF_XMIT_DST_RELEASE;",
      "",
      "[Added Lines]",
      "186:  dev->priv_flags &= ~(IFF_XMIT_DST_RELEASE | IFF_TX_SKB_SHARING);",
      "",
      "---------------"
    ],
    "drivers/net/macvlan.c||drivers/net/macvlan.c": [
      "File: drivers/net/macvlan.c -> drivers/net/macvlan.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "572: {",
      "573:  ether_setup(dev);",
      "576:  dev->netdev_ops  = &macvlan_netdev_ops;",
      "577:  dev->destructor  = free_netdev;",
      "578:  dev->header_ops  = &macvlan_hard_header_ops,",
      "",
      "[Removed Lines]",
      "575:  dev->priv_flags        &= ~IFF_XMIT_DST_RELEASE;",
      "",
      "[Added Lines]",
      "575:  dev->priv_flags        &= ~(IFF_XMIT_DST_RELEASE | IFF_TX_SKB_SHARING);",
      "",
      "---------------"
    ],
    "drivers/net/tun.c||drivers/net/tun.c": [
      "File: drivers/net/tun.c -> drivers/net/tun.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "528:   dev->netdev_ops = &tap_netdev_ops;",
      "530:   ether_setup(dev);",
      "532:   random_ether_addr(dev->dev_addr);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "531:   dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "",
      "---------------"
    ],
    "drivers/net/veth.c||drivers/net/veth.c": [
      "File: drivers/net/veth.c -> drivers/net/veth.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "263: {",
      "264:  ether_setup(dev);",
      "266:  dev->netdev_ops = &veth_netdev_ops;",
      "267:  dev->ethtool_ops = &veth_ethtool_ops;",
      "268:  dev->features |= NETIF_F_LLTX;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "266:  dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "",
      "---------------"
    ],
    "drivers/net/wan/hdlc_fr.c||drivers/net/wan/hdlc_fr.c": [
      "File: drivers/net/wan/hdlc_fr.c -> drivers/net/wan/hdlc_fr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1075:  used = pvc_is_used(pvc);",
      "1078:   dev = alloc_netdev(0, \"pvceth%d\", ether_setup);",
      "1080:   dev = alloc_netdev(0, \"pvc%d\", pvc_setup);",
      "1082:  if (!dev) {",
      "",
      "[Removed Lines]",
      "1077:  if (type == ARPHRD_ETHER)",
      "1079:  else",
      "",
      "[Added Lines]",
      "1077:  if (type == ARPHRD_ETHER) {",
      "1079:   dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "1080:  } else",
      "",
      "---------------"
    ],
    "drivers/net/wireless/airo.c||drivers/net/wireless/airo.c": [
      "File: drivers/net/wireless/airo.c -> drivers/net/wireless/airo.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2823:  dev->wireless_data = &ai->wireless_data;",
      "2824:  dev->irq = irq;",
      "2825:  dev->base_addr = port;",
      "2827:  SET_NETDEV_DEV(dev, dmdev);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2826:  dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "",
      "---------------"
    ],
    "drivers/net/wireless/hostap/hostap_main.c||drivers/net/wireless/hostap/hostap_main.c": [
      "File: drivers/net/wireless/hostap/hostap_main.c -> drivers/net/wireless/hostap/hostap_main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:  iface = netdev_priv(dev);",
      "857:  ether_setup(dev);",
      "860:  if (iface) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "858:  dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "",
      "---------------"
    ],
    "drivers/staging/ath6kl/os/linux/ar6000_drv.c||drivers/staging/ath6kl/os/linux/ar6000_drv.c": [
      "File: drivers/staging/ath6kl/os/linux/ar6000_drv.c -> drivers/staging/ath6kl/os/linux/ar6000_drv.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6180:     ether_setup(dev);",
      "6181:     init_netdev(dev, ap_ifname);",
      "6183:     if (register_netdev(dev)) {",
      "6184:         AR_DEBUG_PRINTF(ATH_DEBUG_ERR,(\"ar6000_create_ap_interface: register_netdev failed\\n\"));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6182:     dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "",
      "---------------"
    ],
    "net/8021q/vlan_dev.c||net/8021q/vlan_dev.c": [
      "File: net/8021q/vlan_dev.c -> net/8021q/vlan_dev.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "695:  ether_setup(dev);",
      "697:  dev->priv_flags  |= IFF_802_1Q_VLAN;",
      "699:  dev->tx_queue_len = 0;",
      "701:  dev->netdev_ops  = &vlan_netdev_ops;",
      "",
      "[Removed Lines]",
      "698:  dev->priv_flags  &= ~IFF_XMIT_DST_RELEASE;",
      "",
      "[Added Lines]",
      "698:  dev->priv_flags  &= ~(IFF_XMIT_DST_RELEASE | IFF_TX_SKB_SHARING);",
      "",
      "---------------"
    ],
    "net/bluetooth/bnep/netdev.c||net/bluetooth/bnep/netdev.c": [
      "File: net/bluetooth/bnep/netdev.c -> net/bluetooth/bnep/netdev.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "231:  dev->addr_len = ETH_ALEN;",
      "233:  ether_setup(dev);",
      "234:  dev->netdev_ops = &bnep_netdev_ops;",
      "236:  dev->watchdog_timeo  = HZ * 2;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "234:  dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "",
      "---------------"
    ],
    "net/l2tp/l2tp_eth.c||net/l2tp/l2tp_eth.c": [
      "File: net/l2tp/l2tp_eth.c -> net/l2tp/l2tp_eth.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "103: static void l2tp_eth_dev_setup(struct net_device *dev)",
      "104: {",
      "105:  ether_setup(dev);",
      "107:  dev->netdev_ops  = &l2tp_eth_netdev_ops;",
      "108:  dev->destructor  = free_netdev;",
      "109: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "106:  dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "",
      "---------------"
    ],
    "net/mac80211/iface.c||net/mac80211/iface.c": [
      "File: net/mac80211/iface.c -> net/mac80211/iface.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "698: static void ieee80211_if_setup(struct net_device *dev)",
      "699: {",
      "700:  ether_setup(dev);",
      "701:  dev->netdev_ops = &ieee80211_dataif_ops;",
      "702:  dev->destructor = free_netdev;",
      "703: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "701:  dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a2842a1e66329798d66563b52faec1a299ec4f73",
      "candidate_info": {
        "commit_hash": "a2842a1e66329798d66563b52faec1a299ec4f73",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a2842a1e66329798d66563b52faec1a299ec4f73",
        "files": [
          "net/l2tp/l2tp_eth.c"
        ],
        "message": "net: l2tp_eth: use LLTX to avoid LOCKDEP splats\n\nDenys Fedoryshchenko reported a LOCKDEP issue with l2tp code.\n\n[ 8683.927442] ======================================================\n[ 8683.927555] [ INFO: possible circular locking dependency detected ]\n[ 8683.927672] 3.4.1-build-0061 #14 Not tainted\n[ 8683.927782] -------------------------------------------------------\n[ 8683.927895] swapper/0/0 is trying to acquire lock:\n[ 8683.928007]  (slock-AF_INET){+.-...}, at: [<e0fc73ec>]\nl2tp_xmit_skb+0x173/0x47e [l2tp_core]\n[ 8683.928121]\n[ 8683.928121] but task is already holding lock:\n[ 8683.928121]  (_xmit_ETHER#2){+.-...}, at: [<c02f062d>]\nsch_direct_xmit+0x36/0x119\n[ 8683.928121]\n[ 8683.928121] which lock already depends on the new lock.\n[ 8683.928121]\n[ 8683.928121]\n[ 8683.928121] the existing dependency chain (in reverse order) is:\n[ 8683.928121]\n[ 8683.928121] -> #1 (_xmit_ETHER#2){+.-...}:\n[ 8683.928121]        [<c015a561>] lock_acquire+0x71/0x85\n[ 8683.928121]        [<c034da2d>] _raw_spin_lock+0x33/0x40\n[ 8683.928121]        [<c0304e0c>] ip_send_reply+0xf2/0x1ce\n[ 8683.928121]        [<c0317dbc>] tcp_v4_send_reset+0x153/0x16f\n[ 8683.928121]        [<c0317f4a>] tcp_v4_do_rcv+0x172/0x194\n[ 8683.928121]        [<c031929b>] tcp_v4_rcv+0x387/0x5a0\n[ 8683.928121]        [<c03001d0>] ip_local_deliver_finish+0x13a/0x1e9\n[ 8683.928121]        [<c0300645>] NF_HOOK.clone.11+0x46/0x4d\n[ 8683.928121]        [<c030075b>] ip_local_deliver+0x41/0x45\n[ 8683.928121]        [<c03005dd>] ip_rcv_finish+0x31a/0x33c\n[ 8683.928121]        [<c0300645>] NF_HOOK.clone.11+0x46/0x4d\n[ 8683.928121]        [<c0300960>] ip_rcv+0x201/0x23d\n[ 8683.928121]        [<c02de91b>] __netif_receive_skb+0x329/0x378\n[ 8683.928121]        [<c02deae8>] netif_receive_skb+0x4e/0x7d\n[ 8683.928121]        [<e08d5ef3>] rtl8139_poll+0x243/0x33d [8139too]\n[ 8683.928121]        [<c02df103>] net_rx_action+0x90/0x15d\n[ 8683.928121]        [<c012b2b5>] __do_softirq+0x7b/0x118\n[ 8683.928121]\n[ 8683.928121] -> #0 (slock-AF_INET){+.-...}:\n[ 8683.928121]        [<c0159f1b>] __lock_acquire+0x9a3/0xc27\n[ 8683.928121]        [<c015a561>] lock_acquire+0x71/0x85\n[ 8683.928121]        [<c034da2d>] _raw_spin_lock+0x33/0x40\n[ 8683.928121]        [<e0fc73ec>] l2tp_xmit_skb+0x173/0x47e\n[l2tp_core]\n[ 8683.928121]        [<e0fe31fb>] l2tp_eth_dev_xmit+0x1a/0x2f\n[l2tp_eth]\n[ 8683.928121]        [<c02e01e7>] dev_hard_start_xmit+0x333/0x3f2\n[ 8683.928121]        [<c02f064c>] sch_direct_xmit+0x55/0x119\n[ 8683.928121]        [<c02e0528>] dev_queue_xmit+0x282/0x418\n[ 8683.928121]        [<c031f4fb>] NF_HOOK.clone.19+0x45/0x4c\n[ 8683.928121]        [<c031f524>] arp_xmit+0x22/0x24\n[ 8683.928121]        [<c031f567>] arp_send+0x41/0x48\n[ 8683.928121]        [<c031fa7d>] arp_process+0x289/0x491\n[ 8683.928121]        [<c031f4fb>] NF_HOOK.clone.19+0x45/0x4c\n[ 8683.928121]        [<c031f7a0>] arp_rcv+0xb1/0xc3\n[ 8683.928121]        [<c02de91b>] __netif_receive_skb+0x329/0x378\n[ 8683.928121]        [<c02de9d3>] process_backlog+0x69/0x130\n[ 8683.928121]        [<c02df103>] net_rx_action+0x90/0x15d\n[ 8683.928121]        [<c012b2b5>] __do_softirq+0x7b/0x118\n[ 8683.928121]\n[ 8683.928121] other info that might help us debug this:\n[ 8683.928121]\n[ 8683.928121]  Possible unsafe locking scenario:\n[ 8683.928121]\n[ 8683.928121]        CPU0                    CPU1\n[ 8683.928121]        ----                    ----\n[ 8683.928121]   lock(_xmit_ETHER#2);\n[ 8683.928121]                                lock(slock-AF_INET);\n[ 8683.928121]                                lock(_xmit_ETHER#2);\n[ 8683.928121]   lock(slock-AF_INET);\n[ 8683.928121]\n[ 8683.928121]  *** DEADLOCK ***\n[ 8683.928121]\n[ 8683.928121] 3 locks held by swapper/0/0:\n[ 8683.928121]  #0:  (rcu_read_lock){.+.+..}, at: [<c02dbc10>]\nrcu_lock_acquire+0x0/0x30\n[ 8683.928121]  #1:  (rcu_read_lock_bh){.+....}, at: [<c02dbc10>]\nrcu_lock_acquire+0x0/0x30\n[ 8683.928121]  #2:  (_xmit_ETHER#2){+.-...}, at: [<c02f062d>]\nsch_direct_xmit+0x36/0x119\n[ 8683.928121]\n[ 8683.928121] stack backtrace:\n[ 8683.928121] Pid: 0, comm: swapper/0 Not tainted 3.4.1-build-0061 #14\n[ 8683.928121] Call Trace:\n[ 8683.928121]  [<c034bdd2>] ? printk+0x18/0x1a\n[ 8683.928121]  [<c0158904>] print_circular_bug+0x1ac/0x1b6\n[ 8683.928121]  [<c0159f1b>] __lock_acquire+0x9a3/0xc27\n[ 8683.928121]  [<c015a561>] lock_acquire+0x71/0x85\n[ 8683.928121]  [<e0fc73ec>] ? l2tp_xmit_skb+0x173/0x47e [l2tp_core]\n[ 8683.928121]  [<c034da2d>] _raw_spin_lock+0x33/0x40\n[ 8683.928121]  [<e0fc73ec>] ? l2tp_xmit_skb+0x173/0x47e [l2tp_core]\n[ 8683.928121]  [<e0fc73ec>] l2tp_xmit_skb+0x173/0x47e [l2tp_core]\n[ 8683.928121]  [<e0fe31fb>] l2tp_eth_dev_xmit+0x1a/0x2f [l2tp_eth]\n[ 8683.928121]  [<c02e01e7>] dev_hard_start_xmit+0x333/0x3f2\n[ 8683.928121]  [<c02f064c>] sch_direct_xmit+0x55/0x119\n[ 8683.928121]  [<c02e0528>] dev_queue_xmit+0x282/0x418\n[ 8683.928121]  [<c02e02a6>] ? dev_hard_start_xmit+0x3f2/0x3f2\n[ 8683.928121]  [<c031f4fb>] NF_HOOK.clone.19+0x45/0x4c\n[ 8683.928121]  [<c031f524>] arp_xmit+0x22/0x24\n[ 8683.928121]  [<c02e02a6>] ? dev_hard_start_xmit+0x3f2/0x3f2\n[ 8683.928121]  [<c031f567>] arp_send+0x41/0x48\n[ 8683.928121]  [<c031fa7d>] arp_process+0x289/0x491\n[ 8683.928121]  [<c031f7f4>] ? __neigh_lookup.clone.20+0x42/0x42\n[ 8683.928121]  [<c031f4fb>] NF_HOOK.clone.19+0x45/0x4c\n[ 8683.928121]  [<c031f7a0>] arp_rcv+0xb1/0xc3\n[ 8683.928121]  [<c031f7f4>] ? __neigh_lookup.clone.20+0x42/0x42\n[ 8683.928121]  [<c02de91b>] __netif_receive_skb+0x329/0x378\n[ 8683.928121]  [<c02de9d3>] process_backlog+0x69/0x130\n[ 8683.928121]  [<c02df103>] net_rx_action+0x90/0x15d\n[ 8683.928121]  [<c012b2b5>] __do_softirq+0x7b/0x118\n[ 8683.928121]  [<c012b23a>] ? local_bh_enable+0xd/0xd\n[ 8683.928121]  <IRQ>  [<c012b4d0>] ? irq_exit+0x41/0x91\n[ 8683.928121]  [<c0103c6f>] ? do_IRQ+0x79/0x8d\n[ 8683.928121]  [<c0157ea1>] ? trace_hardirqs_off_caller+0x2e/0x86\n[ 8683.928121]  [<c034ef6e>] ? common_interrupt+0x2e/0x34\n[ 8683.928121]  [<c0108a33>] ? default_idle+0x23/0x38\n[ 8683.928121]  [<c01091a8>] ? cpu_idle+0x55/0x6f\n[ 8683.928121]  [<c033df25>] ? rest_init+0xa1/0xa7\n[ 8683.928121]  [<c033de84>] ? __read_lock_failed+0x14/0x14\n[ 8683.928121]  [<c0498745>] ? start_kernel+0x303/0x30a\n[ 8683.928121]  [<c0498209>] ? repair_env_string+0x51/0x51\n[ 8683.928121]  [<c04980a8>] ? i386_start_kernel+0xa8/0xaf\n\nIt appears that like most virtual devices, l2tp should be converted to\nLLTX mode.\n\nThis patch takes care of statistics using atomic_long in both RX and TX\npaths, and fix a bug in l2tp_eth_dev_recv(), which was caching skb->data\nbefore a pskb_may_pull() call.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Denys Fedoryshchenko <denys@visp.net.lb>\nCc: James Chapman <jchapman@katalix.com>\nCc: Hong zhi guo <honkiko@gmail.com>\nCc: Francois Romieu <romieu@fr.zoreil.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "net/l2tp/l2tp_eth.c||net/l2tp/l2tp_eth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/l2tp/l2tp_eth.c||net/l2tp/l2tp_eth.c"
          ],
          "candidate": [
            "net/l2tp/l2tp_eth.c||net/l2tp/l2tp_eth.c"
          ]
        }
      },
      "candidate_diff": {
        "net/l2tp/l2tp_eth.c||net/l2tp/l2tp_eth.c": [
          "File: net/l2tp/l2tp_eth.c -> net/l2tp/l2tp_eth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:  struct sock  *tunnel_sock;",
          "43:  struct l2tp_session *session;",
          "44:  struct list_head list;",
          "45: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:  atomic_long_t  tx_bytes;",
          "46:  atomic_long_t  tx_packets;",
          "47:  atomic_long_t  rx_bytes;",
          "48:  atomic_long_t  rx_packets;",
          "49:  atomic_long_t  rx_errors;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:  struct l2tp_eth *priv = netdev_priv(dev);",
          "89:  struct l2tp_session *session = priv->session;",
          "94:  l2tp_xmit_skb(session, skb, session->hdr_len);",
          "96:  return NETDEV_TX_OK;",
          "97: }",
          "99: static struct net_device_ops l2tp_eth_netdev_ops = {",
          "100:  .ndo_init  = l2tp_eth_dev_init,",
          "101:  .ndo_uninit  = l2tp_eth_dev_uninit,",
          "102:  .ndo_start_xmit  = l2tp_eth_dev_xmit,",
          "103: };",
          "105: static void l2tp_eth_dev_setup(struct net_device *dev)",
          "106: {",
          "107:  ether_setup(dev);",
          "109:  dev->netdev_ops  = &l2tp_eth_netdev_ops;",
          "110:  dev->destructor  = free_netdev;",
          "111: }",
          "",
          "[Removed Lines]",
          "91:  dev->stats.tx_bytes += skb->len;",
          "92:  dev->stats.tx_packets++;",
          "108:  dev->priv_flags &= ~IFF_TX_SKB_SHARING;",
          "",
          "[Added Lines]",
          "96:  atomic_long_add(skb->len, &priv->tx_bytes);",
          "97:  atomic_long_inc(&priv->tx_packets);",
          "104: static struct rtnl_link_stats64 *l2tp_eth_get_stats64(struct net_device *dev,",
          "105:             struct rtnl_link_stats64 *stats)",
          "106: {",
          "107:  struct l2tp_eth *priv = netdev_priv(dev);",
          "109:  stats->tx_bytes   = atomic_long_read(&priv->tx_bytes);",
          "110:  stats->tx_packets = atomic_long_read(&priv->tx_packets);",
          "111:  stats->rx_bytes   = atomic_long_read(&priv->rx_bytes);",
          "112:  stats->rx_packets = atomic_long_read(&priv->rx_packets);",
          "113:  stats->rx_errors  = atomic_long_read(&priv->rx_errors);",
          "114:  return stats;",
          "115: }",
          "122:  .ndo_get_stats64 = l2tp_eth_get_stats64,",
          "128:  dev->priv_flags  &= ~IFF_TX_SKB_SHARING;",
          "129:  dev->features  |= NETIF_F_LLTX;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "114: {",
          "115:  struct l2tp_eth_sess *spriv = l2tp_session_priv(session);",
          "116:  struct net_device *dev = spriv->dev;",
          "118:  if (session->debug & L2TP_MSG_DATA) {",
          "119:   unsigned int length;",
          "122:   length = min(32u, skb->len);",
          "123:   if (!pskb_may_pull(skb, length))",
          "124:    goto error;",
          "126:   pr_debug(\"%s: eth recv\\n\", session->name);",
          "128:  }",
          "130:  if (!pskb_may_pull(skb, sizeof(ETH_HLEN)))",
          "",
          "[Removed Lines]",
          "120:   u8 *ptr = skb->data;",
          "127:   print_hex_dump_bytes(\"\", DUMP_PREFIX_OFFSET, ptr, length);",
          "",
          "[Added Lines]",
          "138:  struct l2tp_eth *priv = netdev_priv(dev);",
          "148:   print_hex_dump_bytes(\"\", DUMP_PREFIX_OFFSET, skb->data, length);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "139:  nf_reset(skb);",
          "141:  if (dev_forward_skb(dev, skb) == NET_RX_SUCCESS) {",
          "147:  return;",
          "149: error:",
          "151:  kfree_skb(skb);",
          "152: }",
          "",
          "[Removed Lines]",
          "142:   dev->stats.rx_packets++;",
          "143:   dev->stats.rx_bytes += data_len;",
          "144:  } else",
          "145:   dev->stats.rx_errors++;",
          "150:  dev->stats.rx_errors++;",
          "",
          "[Added Lines]",
          "163:   atomic_long_inc(&priv->rx_packets);",
          "164:   atomic_long_add(data_len, &priv->rx_bytes);",
          "165:  } else {",
          "166:   atomic_long_inc(&priv->rx_errors);",
          "167:  }",
          "171:  atomic_long_inc(&priv->rx_errors);",
          "",
          "---------------"
        ]
      }
    }
  ]
}