{
  "cve_id": "CVE-2018-10360",
  "cve_desc": "The do_core_note function in readelf.c in libmagic.a in file 5.33 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted ELF file.",
  "repo": "file/file",
  "patch_hash": "a642587a9c9e2dd7feacdf513c3643ce26ad3c22",
  "patch_info": {
    "commit_hash": "a642587a9c9e2dd7feacdf513c3643ce26ad3c22",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/a642587a9c9e2dd7feacdf513c3643ce26ad3c22",
    "files": [
      "src/readelf.c"
    ],
    "message": "Avoid reading past the end of buffer (Rui Reis)",
    "before_after_code_files": [
      "src/readelf.c||src/readelf.c"
    ]
  },
  "patch_diff": {
    "src/readelf.c||src/readelf.c": [
      "File: src/readelf.c -> src/readelf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "31: #endif",
      "33: #ifdef BUILTIN_ELF",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.142 2018/05/24 18:08:01 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.143 2018/06/09 16:00:06 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "843:     cname = (unsigned char *)",
      "844:         &nbuf[doff + prpsoffsets(i)];",
      "846:      continue;",
      "",
      "[Removed Lines]",
      "845:     for (cp = cname; *cp && isprint(*cp); cp++)",
      "",
      "[Added Lines]",
      "845:     for (cp = cname; cp < nbuf + size && *cp",
      "846:         && isprint(*cp); cp++)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "18726eb5fd61c19f6ba82aefeead820568dededd",
      "candidate_info": {
        "commit_hash": "18726eb5fd61c19f6ba82aefeead820568dededd",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/18726eb5fd61c19f6ba82aefeead820568dededd",
        "files": [
          "src/Makefile.am",
          "src/apprentice.c",
          "src/ascmagic.c",
          "src/buffer.c",
          "src/compress.c",
          "src/encoding.c",
          "src/file.h",
          "src/funcs.c",
          "src/is_tar.c",
          "src/readcdf.c",
          "src/readelf.c",
          "src/softmagic.c"
        ],
        "message": "- Encapsulate the buffer, size and file descriptor in a struct buffer. - Prepare for signed offset (negative offsets will be relative to the end   of file). - Fix name collision for file_err(). - fix file_encoding to not return a unicode buffer if NULL is passed.",
        "before_after_code_files": [
          "src/Makefile.am||src/Makefile.am",
          "src/apprentice.c||src/apprentice.c",
          "src/ascmagic.c||src/ascmagic.c",
          "src/buffer.c||src/buffer.c",
          "src/compress.c||src/compress.c",
          "src/encoding.c||src/encoding.c",
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/is_tar.c||src/is_tar.c",
          "src/readcdf.c||src/readcdf.c",
          "src/readelf.c||src/readelf.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/Makefile.am||src/Makefile.am": [
          "File: src/Makefile.am -> src/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: AM_CPPFLAGS = -DMAGIC='\"$(MAGIC)\"'",
          "8: AM_CFLAGS = $(CFLAG_VISIBILITY) @WARNINGS@",
          "11:  encoding.c compress.c is_tar.c readelf.c print.c fsmagic.c \\",
          "12:  funcs.c file.h readelf.h tar.h apptype.c der.c der.h \\",
          "13:  file_opts.h elfclass.h mygetopt.h cdf.c cdf_time.c readcdf.c cdf.h",
          "",
          "[Removed Lines]",
          "10: libmagic_la_SOURCES = magic.c apprentice.c softmagic.c ascmagic.c \\",
          "",
          "[Added Lines]",
          "10: libmagic_la_SOURCES = buffer.c magic.c apprentice.c softmagic.c ascmagic.c \\",
          "",
          "---------------"
        ],
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.264 2017/09/26 12:21:59 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.265 2017/11/02 20:25:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "652: file_apprentice(struct magic_set *ms, const char *fn, int action)",
          "653: {",
          "654:  char *p, *mfn;",
          "656:  size_t i;",
          "658:  (void)file_reset(ms, 0);",
          "",
          "[Removed Lines]",
          "655:  int file_err, errs = -1;",
          "",
          "[Added Lines]",
          "655:  int fileerr, errs = -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "688:   if (*fn == '\\0')",
          "689:    break;",
          "692:   fn = p;",
          "693:  }",
          "",
          "[Removed Lines]",
          "690:   file_err = apprentice_1(ms, fn, action);",
          "691:   errs = MAX(errs, file_err);",
          "",
          "[Added Lines]",
          "690:   fileerr = apprentice_1(ms, fn, action);",
          "691:   errs = MAX(errs, fileerr);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1910:  }",
          "1914:         if (l == t) {",
          "1915:   if (ms->flags & MAGIC_CHECK)",
          "1916:    file_magwarn(ms, \"offset `%s' invalid\", l);",
          "",
          "[Removed Lines]",
          "1913:  m->offset = (uint32_t)strtoul(l, &t, 0);",
          "",
          "[Added Lines]",
          "1913:  m->offset = (int32_t)strtol(l, &t, 0);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3324: bs1(struct magic *m)",
          "3325: {",
          "3326:  m->cont_level = swap2(m->cont_level);",
          "3328:  m->in_offset = swap4((uint32_t)m->in_offset);",
          "3329:  m->lineno = swap4((uint32_t)m->lineno);",
          "3330:  if (IS_STRING(m->type)) {",
          "",
          "[Removed Lines]",
          "3327:  m->offset = swap4((uint32_t)m->offset);",
          "",
          "[Added Lines]",
          "3327:  m->offset = swap4((int32_t)m->offset);",
          "",
          "---------------"
        ],
        "src/ascmagic.c||src/ascmagic.c": [
          "File: src/ascmagic.c -> src/ascmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.96 2016/06/16 11:37:55 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.98 2017/11/02 20:25:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68: }",
          "70: protected int",
          "73: {",
          "74:  unichar *ubuf = NULL;",
          "75:  size_t ulen = 0;",
          "76:  int rv = 1;",
          "78:  const char *code = NULL;",
          "79:  const char *code_mime = NULL;",
          "80:  const char *type = NULL;",
          "86:      &type) == 0)",
          "87:   rv = 0;",
          "88:         else",
          "92:  free(ubuf);",
          "",
          "[Removed Lines]",
          "71: file_ascmagic(struct magic_set *ms, const unsigned char *buf, size_t nbytes,",
          "72:  int text)",
          "82:  nbytes = trim_nuls(buf, nbytes);",
          "85:  if (file_encoding(ms, buf, nbytes, &ubuf, &ulen, &code, &code_mime,",
          "89:   rv = file_ascmagic_with_encoding(ms, buf, nbytes, ubuf, ulen, code,",
          "90:        type, text);",
          "",
          "[Added Lines]",
          "71: file_ascmagic(struct magic_set *ms, const struct buffer *b, int text)",
          "76:  struct buffer bb;",
          "82:  bb = *b;",
          "83:  bb.flen = trim_nuls(b->fbuf, b->flen);",
          "86:  if (file_encoding(ms, &bb, &ubuf, &ulen, &code, &code_mime,",
          "90:   rv = file_ascmagic_with_encoding(ms, &bb,",
          "91:       ubuf, ulen, code, type, text);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "95: }",
          "97: protected int",
          "100:     const char *type, int text)",
          "101: {",
          "102:  unsigned char *utf8_buf = NULL, *utf8_end;",
          "103:  size_t mlen, i;",
          "104:  int rv = -1;",
          "",
          "[Removed Lines]",
          "98: file_ascmagic_with_encoding(struct magic_set *ms, const unsigned char *buf,",
          "99:     size_t nbytes, unichar *ubuf, size_t ulen, const char *code,",
          "",
          "[Added Lines]",
          "99: file_ascmagic_with_encoding(struct magic_set *ms,",
          "100:     const struct buffer *b, unichar *ubuf, size_t ulen, const char *code,",
          "103:  struct buffer bb;",
          "104:  const unsigned char *buf = b->fbuf;",
          "105:  size_t nbytes = b->flen;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "140:   if ((utf8_end = encode_utf8(utf8_buf, mlen, ubuf, ulen))",
          "141:       == NULL)",
          "142:    goto done;",
          "145:       TEXTTEST, text)) == 0)",
          "146:    rv = -1;",
          "147:   if ((ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION))) {",
          "148:    rv = rv == -1 ? 0 : 1;",
          "149:    goto done;",
          "",
          "[Removed Lines]",
          "143:   if ((rv = file_softmagic(ms, utf8_buf,",
          "144:       (size_t)(utf8_end - utf8_buf), NULL, NULL,",
          "",
          "[Added Lines]",
          "147:   buffer_init(&bb, b->fd, utf8_buf,",
          "148:       (size_t)(utf8_end - utf8_buf));",
          "150:   if ((rv = file_softmagic(ms, &bb, NULL, NULL,",
          "153:   buffer_fini(&bb);",
          "",
          "---------------"
        ],
        "src/buffer.c||src/buffer.c": [
          "File: src/buffer.c -> src/buffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "30: FILE_RCSID(\"@(#)$File: buffer.c,v 1.1 2017/11/02 20:25:39 christos Exp $\")",
          "33: #include \"magic.h\"",
          "34: #include <assert.h>",
          "35: #include <stdarg.h>",
          "36: #include <stdlib.h>",
          "37: #include <string.h>",
          "38: #include <ctype.h>",
          "39: #if defined(HAVE_WCHAR_H)",
          "40: #include <wchar.h>",
          "41: #endif",
          "42: #if defined(HAVE_WCTYPE_H)",
          "43: #include <wctype.h>",
          "44: #endif",
          "45: #if defined(HAVE_LIMITS_H)",
          "46: #include <limits.h>",
          "47: #endif",
          "50: void",
          "51: buffer_init(struct buffer *b, int fd, const void *data, size_t len)",
          "52: {",
          "53:  b->fd = fd;",
          "54:  b->fbuf = data;",
          "55:  b->flen = len;",
          "56:  b->ebuf = NULL;",
          "57:  b->elen = 0;",
          "58: }",
          "60: void",
          "61: buffer_fini(struct buffer *b)",
          "62: {",
          "63:  free(b->ebuf);",
          "64: }",
          "",
          "---------------"
        ],
        "src/compress.c||src/compress.c": [
          "File: src/compress.c -> src/compress.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: compress.c,v 1.105 2017/05/25 00:13:03 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: compress.c,v 1.106 2017/11/02 20:25:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184: private const char *methodname(size_t);",
          "186: protected int",
          "189: {",
          "190:  unsigned char *newbuf = NULL;",
          "191:  size_t i, nsz;",
          "",
          "[Removed Lines]",
          "187: file_zmagic(struct magic_set *ms, int fd, const char *name,",
          "188:     const unsigned char *buf, size_t nbytes)",
          "",
          "[Added Lines]",
          "187: file_zmagic(struct magic_set *ms, const struct buffer *b, const char *name)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "193:  file_pushbuf_t *pb;",
          "194:  int urv, prv, rv = 0;",
          "195:  int mime = ms->flags & MAGIC_MIME;",
          "196: #ifdef HAVE_SIGNAL_H",
          "197:  sig_t osigpipe;",
          "198: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:  int fd = b->fd;",
          "196:  const unsigned char *buf = b->fbuf;",
          "197:  size_t nbytes = b->flen;",
          "",
          "---------------"
        ],
        "src/encoding.c||src/encoding.c": [
          "File: src/encoding.c -> src/encoding.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: encoding.c,v 1.12 2015/06/03 19:51:27 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: encoding.c,v 1.14 2017/11/02 20:25:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68: protected int",
          "70: {",
          "71:  size_t mlen;",
          "72:  int rv = 1, ucs_type;",
          "73:  unsigned char *nbuf = NULL;",
          "",
          "[Removed Lines]",
          "69: file_encoding(struct magic_set *ms, const unsigned char *buf, size_t nbytes, unichar **ubuf, size_t *ulen, const char **code, const char **code_mime, const char **type)",
          "",
          "[Added Lines]",
          "69: file_encoding(struct magic_set *ms, const struct buffer *b, unichar **ubuf,",
          "70:     size_t *ulen, const char **code, const char **code_mime, const char **type)",
          "72:  const unsigned char *buf = b->fbuf;",
          "73:  size_t nbytes = b->flen;",
          "77:  unichar *udefbuf;",
          "78:  size_t udeflen;",
          "80:  if (ubuf == NULL)",
          "81:   ubuf = &udefbuf;",
          "82:  if (ulen == NULL)",
          "83:   ulen = &udeflen;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "145:  done:",
          "146:  free(nbuf);",
          "148:  return rv;",
          "149: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "157:  if (ubuf == &udefbuf)",
          "158:   free(udefbuf);",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "145: #define FILE_COMPILE 2",
          "146: #define FILE_LIST 3",
          "148: union VALUETYPE {",
          "149:  uint8_t b;",
          "150:  uint16_t h;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148: struct buffer {",
          "149:  int fd;",
          "150:  const void *fbuf;",
          "151:  size_t flen;",
          "152:  void *ebuf;",
          "153:  size_t elen;",
          "154: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "396:  } o;",
          "398:  int error;",
          "",
          "[Removed Lines]",
          "397:  uint32_t offset;",
          "",
          "[Added Lines]",
          "405:  int32_t offset;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "448: protected int file_printf(struct magic_set *, const char *, ...)",
          "449:     __attribute__((__format__(__printf__, 2, 3)));",
          "450: protected int file_reset(struct magic_set *, int);",
          "455: #if HAVE_FORK",
          "458: #endif",
          "460:     int);",
          "461: protected int file_ascmagic_with_encoding(struct magic_set *,",
          "465:     unichar **, size_t *, const char **, const char **, const char **);",
          "468:     uint16_t *, uint16_t *, int, int);",
          "469: protected int file_apprentice(struct magic_set *, const char *, int);",
          "470: protected int buffer_apprentice(struct magic_set *, struct magic **,",
          "",
          "[Removed Lines]",
          "451: protected int file_tryelf(struct magic_set *, int, const unsigned char *,",
          "452:     size_t);",
          "453: protected int file_trycdf(struct magic_set *, int, const unsigned char *,",
          "454:     size_t);",
          "456: protected int file_zmagic(struct magic_set *, int, const char *,",
          "457:     const unsigned char *, size_t);",
          "459: protected int file_ascmagic(struct magic_set *, const unsigned char *, size_t,",
          "462:     const unsigned char *, size_t, unichar *, size_t, const char *,",
          "463:     const char *, int);",
          "464: protected int file_encoding(struct magic_set *, const unsigned char *, size_t,",
          "466: protected int file_is_tar(struct magic_set *, const unsigned char *, size_t);",
          "467: protected int file_softmagic(struct magic_set *, const unsigned char *, size_t,",
          "",
          "[Added Lines]",
          "459: protected int file_tryelf(struct magic_set *, const struct buffer *);",
          "460: protected int file_trycdf(struct magic_set *, const struct buffer *);",
          "462: protected int file_zmagic(struct magic_set *, const struct buffer *,",
          "463:     const char *);",
          "465: protected int file_ascmagic(struct magic_set *, const struct buffer *,",
          "468:     const struct buffer *, unichar *, size_t, const char *, const char *, int);",
          "469: protected int file_encoding(struct magic_set *, const struct buffer *,",
          "471: protected int file_is_tar(struct magic_set *, const struct buffer *);",
          "472: protected int file_softmagic(struct magic_set *, const struct buffer *,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "497:     size_t);",
          "500: #if defined(HAVE_LOCALE_H)",
          "501: #include <locale.h>",
          "502: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "505: protected void buffer_init(struct buffer *, int, const void *, size_t);",
          "506: protected void buffer_fini(struct buffer *);",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.93 2017/08/28 13:39:18 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.94 2017/11/02 20:25:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:     const void *buf, size_t nb)",
          "179: {",
          "180:  int m = 0, rv = 0, looks_text = 0;",
          "184:  const char *code = NULL;",
          "185:  const char *code_mime = \"binary\";",
          "186:  const char *type = \"application/octet-stream\";",
          "187:  const char *def = \"data\";",
          "188:  const char *ftype = NULL;",
          "190:  if (nb == 0) {",
          "191:   def = \"empty\";",
          "",
          "[Removed Lines]",
          "181:  const unsigned char *ubuf = CAST(const unsigned char *, buf);",
          "182:  unichar *u8buf = NULL;",
          "183:  size_t ulen;",
          "",
          "[Added Lines]",
          "186:  struct buffer b;",
          "188:  buffer_init(&b, fd, buf, nb);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "197:  }",
          "199:  if ((ms->flags & MAGIC_NO_CHECK_ENCODING) == 0) {",
          "201:       &code, &code_mime, &ftype);",
          "202:  }",
          "204: #ifdef __EMX__",
          "205:  if ((ms->flags & MAGIC_NO_CHECK_APPTYPE) == 0 && inname) {",
          "207:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "208:    (void)fprintf(stderr, \"[try os2_apptype %d]\\n\", m);",
          "209:   switch (m) {",
          "",
          "[Removed Lines]",
          "200:   looks_text = file_encoding(ms, ubuf, nb, &u8buf, &ulen,",
          "206:   m = file_os2_apptype(ms, inname, buf, nb);",
          "",
          "[Added Lines]",
          "200:   looks_text = file_encoding(ms, &b, NULL, 0,",
          "206:   m = file_os2_apptype(ms, inname, &b);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "219: #if HAVE_FORK",
          "221:  if ((ms->flags & MAGIC_NO_CHECK_COMPRESS) == 0) {",
          "223:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "224:    (void)fprintf(stderr, \"[try zmagic %d]\\n\", m);",
          "225:   if (m) {",
          "",
          "[Removed Lines]",
          "222:   m = file_zmagic(ms, fd, inname, ubuf, nb);",
          "",
          "[Added Lines]",
          "222:   m = file_zmagic(ms, &b, inname);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "229: #endif",
          "231:  if ((ms->flags & MAGIC_NO_CHECK_TAR) == 0) {",
          "233:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "234:    (void)fprintf(stderr, \"[try tar %d]\\n\", m);",
          "235:   if (m) {",
          "",
          "[Removed Lines]",
          "232:   m = file_is_tar(ms, ubuf, nb);",
          "",
          "[Added Lines]",
          "232:   m = file_is_tar(ms, &b);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "242:  if ((ms->flags & MAGIC_NO_CHECK_CDF) == 0) {",
          "244:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "245:    (void)fprintf(stderr, \"[try cdf %d]\\n\", m);",
          "246:   if (m) {",
          "",
          "[Removed Lines]",
          "243:   m = file_trycdf(ms, fd, ubuf, nb);",
          "",
          "[Added Lines]",
          "243:   m = file_trycdf(ms, &b);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "253:  if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0) {",
          "256:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "257:    (void)fprintf(stderr, \"[try softmagic %d]\\n\", m);",
          "258:   if (m) {",
          "",
          "[Removed Lines]",
          "254:   m = file_softmagic(ms, ubuf, nb, NULL, NULL, BINTEST,",
          "255:       looks_text);",
          "",
          "[Added Lines]",
          "254:   m = file_softmagic(ms, &b, NULL, NULL, BINTEST, looks_text);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "272:     if ((ms->flags & MAGIC_DEBUG) != 0)",
          "273:      (void)fprintf(stderr, \"[try elf %d]\\n\",",
          "274:          m);",
          "",
          "[Removed Lines]",
          "271:     m = file_tryelf(ms, fd, ubuf, nb);",
          "",
          "[Added Lines]",
          "270:     m = file_tryelf(ms, &b);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "283:  if ((ms->flags & MAGIC_NO_CHECK_TEXT) == 0) {",
          "286:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "287:    (void)fprintf(stderr, \"[try ascmagic %d]\\n\", m);",
          "288:   if (m) {",
          "",
          "[Removed Lines]",
          "285:   m = file_ascmagic(ms, ubuf, nb, looks_text);",
          "",
          "[Added Lines]",
          "284:   m = file_ascmagic(ms, &b, looks_text);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "319: #if HAVE_FORK",
          "320:  done_encoding:",
          "321: #endif",
          "323:  if (rv)",
          "324:   return rv;",
          "",
          "[Removed Lines]",
          "322:  free(u8buf);",
          "",
          "[Added Lines]",
          "321:  buffer_fini(&b);",
          "",
          "---------------"
        ],
        "src/is_tar.c||src/is_tar.c": [
          "File: src/is_tar.c -> src/is_tar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: #include \"file.h\"",
          "42: #ifndef lint",
          "44: #endif",
          "46: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "43: FILE_RCSID(\"@(#)$File: is_tar.c,v 1.40 2017/10/13 15:25:12 christos Exp $\")",
          "",
          "[Added Lines]",
          "43: FILE_RCSID(\"@(#)$File: is_tar.c,v 1.41 2017/11/02 20:25:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60: };",
          "62: protected int",
          "64: {",
          "",
          "[Removed Lines]",
          "63: file_is_tar(struct magic_set *ms, const unsigned char *buf, size_t nbytes)",
          "",
          "[Added Lines]",
          "63: file_is_tar(struct magic_set *ms, const struct buffer *b)",
          "65:  const unsigned char *buf = b->fbuf;",
          "66:  size_t nbytes = b->flen;",
          "",
          "---------------"
        ],
        "src/readcdf.c||src/readcdf.c": [
          "File: src/readcdf.c -> src/readcdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"file.h\"",
          "28: #ifndef lint",
          "30: #endif",
          "32: #include <assert.h>",
          "",
          "[Removed Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.65 2017/04/08 20:58:03 christos Exp $\")",
          "",
          "[Added Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.66 2017/11/02 20:25:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "537: }",
          "539: protected int",
          "542: {",
          "543:         cdf_info_t info;",
          "544:         cdf_header_t h;",
          "545:         cdf_sat_t sat, ssat;",
          "",
          "[Removed Lines]",
          "540: file_trycdf(struct magic_set *ms, int fd, const unsigned char *buf,",
          "541:     size_t nbytes)",
          "",
          "[Added Lines]",
          "540: file_trycdf(struct magic_set *ms, const struct buffer *b)",
          "542:  int fd = b->fd;",
          "543:  const unsigned char *buf = b->fbuf;",
          "544:  size_t nbytes = b->flen;",
          "",
          "---------------"
        ],
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.139 2017/09/08 13:44:09 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.140 2017/11/02 20:25:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1573: protected int",
          "1576: {",
          "1577:  union {",
          "1578:   int32_t l;",
          "1579:   char c[sizeof (int32_t)];",
          "",
          "[Removed Lines]",
          "1574: file_tryelf(struct magic_set *ms, int fd, const unsigned char *buf,",
          "1575:     size_t nbytes)",
          "",
          "[Added Lines]",
          "1574: file_tryelf(struct magic_set *ms, const struct buffer *b)",
          "1576:  int fd = b->fd;",
          "1577:  const unsigned char *buf = b->fbuf;",
          "1578:  size_t nbytes = b->flen;",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.250 2017/09/05 20:41:59 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.251 2017/11/02 20:25:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44: #include \"der.h\"",
          "46: private int match(struct magic_set *, struct magic *, uint32_t,",
          "48:     uint16_t *, int *, int *, int *);",
          "51:     uint16_t *, int *, int *, int *);",
          "52: private int magiccheck(struct magic_set *, struct magic *);",
          "53: private int32_t mprint(struct magic_set *, struct magic *);",
          "55: private void mdebug(uint32_t, const char *, size_t);",
          "56: private int mcopy(struct magic_set *, union VALUETYPE *, int, int,",
          "57:     const unsigned char *, uint32_t, size_t, struct magic *);",
          "",
          "[Removed Lines]",
          "47:     const unsigned char *, size_t, size_t, int, int, int, uint16_t *,",
          "49: private int mget(struct magic_set *, const unsigned char *,",
          "50:     struct magic *, size_t, size_t, unsigned int, int, int, int, uint16_t *,",
          "54: private int moffset(struct magic_set *, struct magic *, size_t, int32_t *);",
          "",
          "[Added Lines]",
          "47:     const struct buffer *, size_t, int, int, int, uint16_t *,",
          "49: private int mget(struct magic_set *, struct magic *, const struct buffer *,",
          "50:     size_t, unsigned int, int, int, int, uint16_t *,",
          "54: private int moffset(struct magic_set *, struct magic *, const struct buffer *,",
          "55:     int32_t *);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90: protected int",
          "92:     uint16_t *indir_count, uint16_t *name_count, int mode, int text)",
          "93: {",
          "94:  struct mlist *ml;",
          "",
          "[Removed Lines]",
          "91: file_softmagic(struct magic_set *ms, const unsigned char *buf, size_t nbytes,",
          "",
          "[Added Lines]",
          "92: file_softmagic(struct magic_set *ms, const struct buffer *b,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "105:  }",
          "107:  for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)",
          "109:       text, 0, indir_count, name_count,",
          "110:       &printed_something, &need_separator, NULL)) != 0)",
          "111:    return rv;",
          "",
          "[Removed Lines]",
          "108:   if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,",
          "",
          "[Added Lines]",
          "109:   if ((rv = match(ms, ml->magic, ml->nmagic, b, 0, mode,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "162: private int",
          "163: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "165:     int flip, uint16_t *indir_count, uint16_t *name_count,",
          "166:     int *printed_something, int *need_separator, int *returnval)",
          "167: {",
          "",
          "[Removed Lines]",
          "164:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "",
          "[Added Lines]",
          "165:     const struct buffer *b, size_t offset, int mode, int text,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "200:   ms->line = m->lineno;",
          "204:       flip, indir_count, name_count,",
          "205:       printed_something, need_separator, returnval)) {",
          "206:   case -1:",
          "",
          "[Removed Lines]",
          "203:   switch (mget(ms, s, m, nbytes, offset, cont_level, mode, text,",
          "",
          "[Added Lines]",
          "204:   switch (mget(ms, m, b, offset, cont_level, mode, text,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "254:   if (print && mprint(ms, m) == -1)",
          "255:    return -1;",
          "258:   case -1:",
          "259:   case 0:",
          "260:    goto flush;",
          "",
          "[Removed Lines]",
          "257:   switch (moffset(ms, m, nbytes, &ms->c.li[cont_level].off)) {",
          "",
          "[Added Lines]",
          "258:   switch (moffset(ms, m, b, &ms->c.li[cont_level].off)) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "293:      continue;",
          "294:    }",
          "295: #endif",
          "297:        text, flip, indir_count, name_count,",
          "298:        printed_something, need_separator, returnval)) {",
          "299:    case -1:",
          "",
          "[Removed Lines]",
          "296:    switch (mget(ms, s, m, nbytes, offset, cont_level, mode,",
          "",
          "[Added Lines]",
          "297:    switch (mget(ms, m, b, offset, cont_level, mode,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "366:     if (print && mprint(ms, m) == -1)",
          "367:      return -1;",
          "370:         &ms->c.li[cont_level].off)) {",
          "371:     case -1:",
          "372:     case 0:",
          "",
          "[Removed Lines]",
          "369:     switch (moffset(ms, m, nbytes,",
          "",
          "[Added Lines]",
          "370:     switch (moffset(ms, m, b,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "717: }",
          "719: private int",
          "721: {",
          "722:  int32_t o;",
          "724:    switch (m->type) {",
          "",
          "[Removed Lines]",
          "720: moffset(struct magic_set *ms, struct magic *m, size_t nbytes, int32_t *op)",
          "",
          "[Added Lines]",
          "721: moffset(struct magic_set *ms, struct magic *m, const struct buffer *b,",
          "722:     int32_t *op)",
          "724:  size_t nbytes = b->flen;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1337: }",
          "1339: private int",
          "1342:     int flip, uint16_t *indir_count, uint16_t *name_count,",
          "1343:     int *printed_something, int *need_separator, int *returnval)",
          "1344: {",
          "1345:  uint32_t offset = ms->offset;",
          "1346:  intmax_t lhs;",
          "1347:  file_pushbuf_t *pb;",
          "",
          "[Removed Lines]",
          "1340: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1341:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "",
          "[Added Lines]",
          "1343: mget(struct magic_set *ms, struct magic *m, const struct buffer *b,",
          "1344:     size_t o, unsigned int cont_level, int mode, int text,",
          "1348:  struct buffer bb;",
          "1349:  const unsigned char *s = b->fbuf;",
          "1350:  size_t nbytes = b->flen;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1559:    return -1;",
          "1561:   (*indir_count)++;",
          "1563:       indir_count, name_count, BINTEST, text);",
          "1565:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "",
          "[Removed Lines]",
          "1562:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
          "",
          "[Added Lines]",
          "1568:   bb = *b;",
          "1569:   bb.fbuf = s + offset;",
          "1570:   bb.flen = nbytes - offset;",
          "1571:   rv = file_softmagic(ms, &bb,",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1599:   oneed_separator = *need_separator;",
          "1600:   if (m->flag & NOSPACE)",
          "1603:       mode, text, flip, indir_count, name_count,",
          "1604:       printed_something, need_separator, returnval);",
          "1605:   if (rv != 1)",
          "",
          "[Removed Lines]",
          "1602:   rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,",
          "",
          "[Added Lines]",
          "1611:   rv = match(ms, ml.magic, ml.nmagic, b, offset + o,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76c55eae2f9b0b378332762f6dce544d05eb24d7",
      "candidate_info": {
        "commit_hash": "76c55eae2f9b0b378332762f6dce544d05eb24d7",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/76c55eae2f9b0b378332762f6dce544d05eb24d7",
        "files": [
          "src/readelf.c",
          "src/readelf.h"
        ],
        "message": "Print the Go Build-ID like we do for other elf binaries",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c",
          "src/readelf.h||src/readelf.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.143 2018/06/09 16:00:06 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.144 2018/07/08 23:37:33 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "556:    return 1;",
          "557:   return 1;",
          "558:  }",
          "559:  return 0;",
          "560: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "559:  if (namesz == 4 && strcmp((char *)&nbuf[noff], \"Go\") == 0 &&",
          "560:      type == NT_GO_BUILD_ID && descsz < 128) {",
          "561:   if (file_printf(ms, \", Go BuildID=%s\",",
          "562:       (char *)&nbuf[doff]) == -1)",
          "563:    return 1;",
          "564:   return 1;",
          "565:  }",
          "",
          "---------------"
        ],
        "src/readelf.h||src/readelf.h": [
          "File: src/readelf.h -> src/readelf.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "356: #define NT_NETBSD_CMODEL 6",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365: #define NT_GO_BUILD_ID 4",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03084b161cf888b5286dbbcd964c31ccad4f64d9",
      "candidate_info": {
        "commit_hash": "03084b161cf888b5286dbbcd964c31ccad4f64d9",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/03084b161cf888b5286dbbcd964c31ccad4f64d9",
        "files": [
          "src/readelf.c"
        ],
        "message": "For dynamic binaries let the df_1 pie flag determine if we are pie or a shared object, and ignore the mode bits.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.158 2019/01/22 16:28:42 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.159 2019/02/01 17:58:48 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1096:  switch (xdh_tag) {",
          "1097:  case DT_FLAGS_1:",
          "1099:    ms->mode |= 0111;",
          "1100:   else",
          "1101:    ms->mode &= ~0111;",
          "",
          "[Removed Lines]",
          "1098:   if (xdh_val == DF_1_PIE)",
          "",
          "[Added Lines]",
          "1098:   if (xdh_val & DF_1_PIE)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1658:   switch (xph_type) {",
          "1659:   case PT_DYNAMIC:",
          "1660:    offset = 0;",
          "1661:    for (;;) {",
          "1662:     if (offset >= (size_t)bufsize)",
          "1663:      break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1662:    ms->mode &= ~0111;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b64482c5467b8022d71dce286226cfc0c880428c",
      "candidate_info": {
        "commit_hash": "b64482c5467b8022d71dce286226cfc0c880428c",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/b64482c5467b8022d71dce286226cfc0c880428c",
        "files": [
          "src/readelf.c"
        ],
        "message": "Add FreeBSD-specific core file support (John Baldwin)",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.152 2018/09/09 20:33:28 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.153 2018/09/11 00:37:33 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "772:   }",
          "773:   break;",
          "775:  default:",
          "776:   if (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {",
          "777:    size_t i, j;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "775:  case OS_STYLE_FREEBSD:",
          "776:   if (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {",
          "777:    size_t argoff, pidoff;",
          "779:    if (clazz == ELFCLASS32)",
          "780:     argoff = 4 + 4 + 17;",
          "781:    else",
          "782:     argoff = 4 + 4 + 8 + 17;",
          "783:    if (file_printf(ms, \", from '%.80s'\", nbuf + doff +",
          "784:        argoff) == -1)",
          "785:     return 1;",
          "786:    pidoff = argoff + 81 + 2;",
          "787:    if (doff + pidoff + 4 <= size) {",
          "788:     if (file_printf(ms, \", pid=%u\",",
          "789:         elf_getu32(swap, *(uint32_t *)(nbuf +",
          "790:         doff + pidoff))) == -1)",
          "791:      return 1;",
          "792:    }",
          "794:   }",
          "795:   break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94b7501f48e134e77716e7ebefc73d6bbe72ba55",
      "candidate_info": {
        "commit_hash": "94b7501f48e134e77716e7ebefc73d6bbe72ba55",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/94b7501f48e134e77716e7ebefc73d6bbe72ba55",
        "files": [
          "src/readelf.c"
        ],
        "message": "PR/62: spinpx: Avoid non-nul-terminated string read.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.159 2019/02/01 17:58:48 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.160 2019/02/18 17:30:41 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "566:  }",
          "567:  if (namesz == 4 && strcmp((char *)&nbuf[noff], \"Go\") == 0 &&",
          "568:      type == NT_GO_BUILD_ID && descsz < 128) {",
          "571:    return -1;",
          "572:   return 1;",
          "573:  }",
          "",
          "[Removed Lines]",
          "569:   if (file_printf(ms, \", Go BuildID=%s\",",
          "570:       (char *)&nbuf[doff]) == -1)",
          "",
          "[Added Lines]",
          "569:   if (file_printf(ms, \", Go BuildID=%.*s\",",
          "570:       CAST(int, descsz), CAST(char *, &nbuf[doff])) == -1)",
          "",
          "---------------"
        ]
      }
    }
  ]
}