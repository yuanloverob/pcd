{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "42be2ad30bad38f15a4c33956d6fe2b9c4b00989",
      "candidate_info": {
        "commit_hash": "42be2ad30bad38f15a4c33956d6fe2b9c4b00989",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/42be2ad30bad38f15a4c33956d6fe2b9c4b00989",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/in.test"
        ],
        "message": "Make sure the affinity of the RHS of an IN operator does not affect the outcome even if the RHS expression contains a COLLATE clause. Ticket [57353f8243c637c0]\n\nFossilOrigin-Name: 0f748fe58bbbb7ce3f30303da25ec811b2bbce249549aa9c7927979ac5b38013",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/in.test||test/in.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d4755aca4b435eed62b54af84013f7f176d3fa5b7b1c243555d59de5749fcde5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: char sqlite3ExprAffinity(Expr *pExpr){",
          "46:   int op;",
          "48:   if( pExpr->flags & EP_Generic ) return 0;",
          "49:   op = pExpr->op;",
          "50:   if( op==TK_SELECT ){",
          "51:     assert( pExpr->flags&EP_xIsSelect );",
          "",
          "[Removed Lines]",
          "47:   pExpr = sqlite3ExprSkipCollate(pExpr);",
          "",
          "[Added Lines]",
          "48:   pExpr = sqlite3ExprSkipCollate(pExpr);",
          "",
          "---------------"
        ],
        "test/in.test||test/in.test": [
          "File: test/in.test -> test/in.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "734:   ORDER BY a DESC, b;",
          "735: } {}",
          "739: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "737: # 2019-06-11",
          "738: # https://www.sqlite.org/src/info/57353f8243c637c0",
          "739: #",
          "740: do_execsql_test in-17.1 {",
          "741:   SELECT 1 IN ('1');",
          "742: } 0",
          "743: do_execsql_test in-17.2 {",
          "744:   SELECT 1 IN ('1' COLLATE nocase);",
          "745: } 0",
          "746: do_execsql_test in-17.3 {",
          "747:   SELECT 1 IN (CAST('1' AS text));",
          "748: } 0",
          "749: do_execsql_test in-17.4 {",
          "750:   SELECT 1 IN (CAST('1' AS text) COLLATE nocase);",
          "751: } 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a753d400393d34ec988b50f7a2cf77773332b33d",
      "candidate_info": {
        "commit_hash": "a753d400393d34ec988b50f7a2cf77773332b33d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a753d400393d34ec988b50f7a2cf77773332b33d",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/altertab2.test"
        ],
        "message": "Fix repeated test numbers in the altertab2.test file.\n\nFossilOrigin-Name: e82f235e7201a420149847cda630ac6f2fce5e3a4577b0ea4793f430d3dc1611",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/altertab2.test||test/altertab2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 211c8002d5ea4b224125d4ed395fe15767d1dc32a77b40b89fdfc80bdd1c5a48",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/altertab2.test||test/altertab2.test": [
          "File: test/altertab2.test -> test/altertab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "338:   INSERT INTO t3 VALUES(4, 5, 6);",
          "339: }",
          "342:   CREATE TABLE t4(a, b);",
          "343:   CREATE VIEW v4 AS SELECT * FROM t4 WHERE (a=1 AND 0) OR b=2;",
          "344: }",
          "346:   ALTER TABLE t4 RENAME a TO c;",
          "347:   SELECT sql FROM sqlite_master WHERE name = 'v4'",
          "348: } {{CREATE VIEW v4 AS SELECT * FROM t4 WHERE (c=1 AND 0) OR b=2}}",
          "350: finish_test",
          "",
          "[Removed Lines]",
          "341: do_execsql_test 8.1 {",
          "345: do_execsql_test 8.2 {",
          "",
          "[Added Lines]",
          "341: do_execsql_test 8.4 {",
          "345: do_execsql_test 8.5 {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f69af053dcaee472a9d2391db22cd682ed491d39",
      "candidate_info": {
        "commit_hash": "f69af053dcaee472a9d2391db22cd682ed491d39",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f69af053dcaee472a9d2391db22cd682ed491d39",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c"
        ],
        "message": "Fix harmless compiler warnings.\n\nFossilOrigin-Name: 3ff220ad378d547538b4501e6b2201e835a2c66891e5e40856db377c101a50e5",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b10df2b569e356551cf51ca179f307e4f8827413ee9feb886db1f1e0650e6c5f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3805:   idx = getVarint32(aKey, szHdr);",
          "3806:   d = szHdr;",
          "3807:   u = 0;",
          "3809:     u32 serial_type;",
          "3811:     idx += getVarint32(&aKey[idx], serial_type);",
          "",
          "[Removed Lines]",
          "3808:   while( idx<szHdr && d<=nKey ){",
          "",
          "[Added Lines]",
          "3808:   while( idx<szHdr && d<=(u32)nKey ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3818:     pMem++;",
          "3819:     if( (++u)>=p->nField ) break;",
          "3820:   }",
          "3822:     assert( CORRUPT_DB );",
          "",
          "[Removed Lines]",
          "3821:   if( d>nKey && u ){",
          "",
          "[Added Lines]",
          "3821:   if( d>(u32)nKey && u ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "89b6de0357a499209c13cf66a3cc406f26f67e6f",
      "candidate_info": {
        "commit_hash": "89b6de0357a499209c13cf66a3cc406f26f67e6f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/89b6de0357a499209c13cf66a3cc406f26f67e6f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Remove an ALWAYS() from a branch that is not always taken.  The test case found by OSSFuzz has been added to TH3.\n\nFossilOrigin-Name: 5c7dab85535ac42c021977dbd4a39cef5a72e3d9dccff1c5ca5570a1780516cd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 23b62fb160d86dc9d9073bcc714601f5b7695f96abd893eafecf4b2e565b87f2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4778:     }",
          "4779:   }",
          "4780:   if( (pA->flags & EP_Distinct)!=(pB->flags & EP_Distinct) ) return 2;",
          "4782:     if( combinedFlags & EP_xIsSelect ) return 2;",
          "4783:     if( (combinedFlags & EP_FixedCol)==0",
          "4784:      && sqlite3ExprCompare(pParse, pA->pLeft, pB->pLeft, iTab) ) return 2;",
          "",
          "[Removed Lines]",
          "4781:   if( ALWAYS((combinedFlags & EP_TokenOnly)==0) ){",
          "",
          "[Added Lines]",
          "4781:   if( (combinedFlags & EP_TokenOnly)==0 ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "490e6f2506a1ebd37c2acdddcd2484d7b59d8071",
      "candidate_info": {
        "commit_hash": "490e6f2506a1ebd37c2acdddcd2484d7b59d8071",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/490e6f2506a1ebd37c2acdddcd2484d7b59d8071",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "test/altertab3.test"
        ],
        "message": "Fix a stack overflow that could occur when renaming a table that has a trigger containing a window function invocation that itself contains a specific syntax error.\n\nFossilOrigin-Name: c621fc668c6538f9f5bdac204f012c64998679a61aa8e224d212503820224c09",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 50fe48458942fa7a6bcc76316c6321f95b23dc34f2f8e0a483826483b2fb16f6",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "866: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "867:         if( pExpr->y.pWin ){",
          "868:           Select *pSel = pNC->pWinSelect;",
          "870:           sqlite3WalkExprList(pWalker, pExpr->y.pWin->pPartition);",
          "871:           sqlite3WalkExprList(pWalker, pExpr->y.pWin->pOrderBy);",
          "872:           sqlite3WalkExpr(pWalker, pExpr->y.pWin->pFilter);",
          "",
          "[Removed Lines]",
          "869:           sqlite3WindowUpdate(pParse, pSel->pWinDefn, pExpr->y.pWin, pDef);",
          "",
          "[Added Lines]",
          "869:           if( IN_RENAME_OBJECT==0 ){",
          "870:             sqlite3WindowUpdate(pParse, pSel->pWinDefn, pExpr->y.pWin, pDef);",
          "871:           }",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:   ALTER TABLE Table0 RENAME Col0 TO Col0;",
          "143: }",
          "145: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145: #-------------------------------------------------------------------------",
          "146: reset_db",
          "147: do_execsql_test 7.1.0 {",
          "148:   CREATE TABLE t1(a,b,c);",
          "149:   CREATE TRIGGER AFTER INSERT ON t1 BEGIN",
          "150:     SELECT a, rank() OVER w1 FROM t1",
          "151:     WINDOW w1 AS (PARTITION BY b, percent_rank() OVER w1);",
          "152:   END;",
          "153: }",
          "155: do_execsql_test 7.1.2 {",
          "156:   ALTER TABLE t1 RENAME TO t1x;",
          "157:   SELECT sql FROM sqlite_master;",
          "158: } {",
          "159:   {CREATE TABLE \"t1x\"(a,b,c)}",
          "160:   {CREATE TRIGGER AFTER INSERT ON \"t1x\" BEGIN",
          "161:     SELECT a, rank() OVER w1 FROM \"t1x\"",
          "162:     WINDOW w1 AS (PARTITION BY b, percent_rank() OVER w1);",
          "163:   END}",
          "164: }",
          "166: do_execsql_test 7.2.1 {",
          "167:   DROP TRIGGER after;",
          "168:   CREATE TRIGGER AFTER INSERT ON t1x BEGIN",
          "169:     SELECT a, rank() OVER w1 FROM t1x",
          "170:     WINDOW w1 AS (PARTITION BY b, percent_rank() OVER w1 ORDER BY d);",
          "171:   END;",
          "172: }",
          "174: do_catchsql_test 7.2.2 {",
          "175:   ALTER TABLE t1x RENAME TO t1;",
          "176: } {1 {error in trigger AFTER: no such column: d}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}