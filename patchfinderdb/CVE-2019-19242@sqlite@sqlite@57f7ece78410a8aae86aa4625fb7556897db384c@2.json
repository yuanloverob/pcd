{
  "cve_id": "CVE-2019-19242",
  "cve_desc": "SQLite 3.30.1 mishandles pExpr->y.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
  "repo": "sqlite/sqlite",
  "patch_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
  "patch_info": {
    "commit_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/wherecode.c",
      "test/gencol1.test"
    ],
    "message": "Fix a problem that comes up when using generated columns that evaluate to a constant in an index and then making use of that index in a join.\n\nFossilOrigin-Name: 8b12e95fec7ce6e0de82a04ca3dfcf1a8e62e233b7382aa28a8a9be6e862b1af",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/wherecode.c||src/wherecode.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 2d53a30cc23e53033af8e8666457654db5dcc453ed6cd176ce1d0bff4f528159",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3607:         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);",
      "3609:         if( aff>SQLITE_AFF_BLOB ){",
      "3610:           static const char zAff[] = \"B\\000C\\000D\\000E\";",
      "3611:           assert( SQLITE_AFF_BLOB=='A' );",
      "",
      "[Removed Lines]",
      "3608:         int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "",
      "[Added Lines]",
      "3608:         int aff;",
      "3609:         if( pExpr->y.pTab ){",
      "3610:           aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "3611:         }else{",
      "3612:           aff = pExpr->affExpr;",
      "3613:         }",
      "",
      "---------------"
    ],
    "src/wherecode.c||src/wherecode.c": [
      "File: src/wherecode.c -> src/wherecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:   if( pExpr->op==TK_COLUMN ){",
      "1142:     IdxExprTrans *pX = p->u.pIdxTrans;",
      "1143:     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){",
      "1144:       pExpr->iTable = pX->iIdxCur;",
      "1145:       pExpr->iColumn = pX->iIdxCol;",
      "1146:       pExpr->y.pTab = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1144:       assert( pExpr->y.pTab!=0 );",
      "1145:       pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:   UPDATE t0 SET c0 = NULL;",
      "244: } {1 {generated column loop on \"c2\"}}",
      "247: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246: # 2019-11-21 Problems in the new generated column logic",
      "247: # reported by Yongheng Chen and Rui Zhong",
      "248: do_execsql_test gencol1-9.10 {",
      "249:   DROP TABLE IF EXISTS t1;",
      "250:   DROP TABLE IF EXISTS t2;",
      "251:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
      "252:   INSERT INTO t1 VALUES(17);",
      "253:   CREATE TABLE t2(cc);",
      "254:   INSERT INTO t2 VALUES(41);",
      "255:   SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;",
      "256: } {41 17 17}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "81f9159b5ec0e19d9aafee9c03a13bc4e7735cd8",
      "candidate_info": {
        "commit_hash": "81f9159b5ec0e19d9aafee9c03a13bc4e7735cd8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/81f9159b5ec0e19d9aafee9c03a13bc4e7735cd8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeInt.h",
          "src/vdbeaux.c"
        ],
        "message": "Faster allocation of new sqlite3_stmt objects.\n\nFossilOrigin-Name: 891f1f72187f0f9ec0d24fda98cc08be3ae3c3ff8b27c4e409ee7135c3106398",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeInt.h||src/vdbeInt.h",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8f10efc29dea7b816b1ba401726c268950d6671d890f686911269082a241d8d9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeInt.h||src/vdbeInt.h": [
          "File: src/vdbeInt.h -> src/vdbeInt.h"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2196: #ifdef SQLITE_ENABLE_STMT_SCANSTATUS",
          "2198: #endif",
          "2200:     x.pSpace = p->pFree = sqlite3DbMallocRawNN(db, x.nNeeded);",
          "2201:     x.nFree = x.nNeeded;",
          "2204:   p->pVList = pParse->pVList;",
          "2205:   pParse->pVList =  0;",
          "",
          "[Removed Lines]",
          "2190:   do {",
          "2191:     x.nNeeded = 0;",
          "2192:     p->aMem = allocSpace(&x, p->aMem, nMem*sizeof(Mem));",
          "2193:     p->aVar = allocSpace(&x, p->aVar, nVar*sizeof(Mem));",
          "2194:     p->apArg = allocSpace(&x, p->apArg, nArg*sizeof(Mem*));",
          "2195:     p->apCsr = allocSpace(&x, p->apCsr, nCursor*sizeof(VdbeCursor*));",
          "2197:     p->anExec = allocSpace(&x, p->anExec, p->nOp*sizeof(i64));",
          "2199:     if( x.nNeeded==0 ) break;",
          "2202:   }while( !db->mallocFailed );",
          "",
          "[Added Lines]",
          "2190:   x.nNeeded = 0;",
          "2191:   p->aMem = allocSpace(&x, 0, nMem*sizeof(Mem));",
          "2192:   p->aVar = allocSpace(&x, 0, nVar*sizeof(Mem));",
          "2193:   p->apArg = allocSpace(&x, 0, nArg*sizeof(Mem*));",
          "2194:   p->apCsr = allocSpace(&x, 0, nCursor*sizeof(VdbeCursor*));",
          "2196:   p->anExec = allocSpace(&x, 0, p->nOp*sizeof(i64));",
          "2198:   if( x.nNeeded ){",
          "2201:     if( !db->mallocFailed ){",
          "2202:       p->aMem = allocSpace(&x, p->aMem, nMem*sizeof(Mem));",
          "2203:       p->aVar = allocSpace(&x, p->aVar, nVar*sizeof(Mem));",
          "2204:       p->apArg = allocSpace(&x, p->apArg, nArg*sizeof(Mem*));",
          "2205:       p->apCsr = allocSpace(&x, p->apCsr, nCursor*sizeof(VdbeCursor*));",
          "2206: #ifdef SQLITE_ENABLE_STMT_SCANSTATUS",
          "2207:       p->anExec = allocSpace(&x, p->anExec, p->nOp*sizeof(i64));",
          "2208: #endif",
          "2209:     }",
          "2210:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af48257bc91a8d23663bc7fa136626ed90f61a22",
      "candidate_info": {
        "commit_hash": "af48257bc91a8d23663bc7fa136626ed90f61a22",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/af48257bc91a8d23663bc7fa136626ed90f61a22",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Mention the new -memtrace command-line option in the -help output of the CLI.\n\nFossilOrigin-Name: ada91aefe37efe3c009691b5599e4d6acf182e5ec3cf28dda0871d09858498b3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 67fecbc79d3e927a7e22f3589be3184114322635874e4b3170666e352d0bfe9d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "8675: #if defined(SQLITE_ENABLE_DESERIALIZE)",
          "8676:   \"   -maxsize N           maximum size for a --deserialize database\\n\"",
          "8677: #endif",
          "8678:   \"   -mmap N              default mmap size set to N\\n\"",
          "8679: #ifdef SQLITE_ENABLE_MULTIPLEX",
          "8680:   \"   -multiplex           enable the multiplexor VFS\\n\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8678:   \"   -memtrace            trace all memory allocations and deallocations\\n\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16e12c573dbf4afb49bb1f59b2634b4acfee168b",
      "candidate_info": {
        "commit_hash": "16e12c573dbf4afb49bb1f59b2634b4acfee168b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/16e12c573dbf4afb49bb1f59b2634b4acfee168b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "test/filter1.test",
          "test/filter2.tcl",
          "test/filter2.test"
        ],
        "message": "Add tests for the FILTER clause. And a bugfix.\n\nFossilOrigin-Name: 28aa1702f7f0334abd1b30e7aa48ea3679539b11bfbba32bc9f0d6049cf18a7b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "test/filter1.test||test/filter1.test",
          "test/filter2.tcl||test/filter2.tcl",
          "test/filter2.test||test/filter2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1f1ae2d6ac8dcbb62e5aa3dc17bc67d559cb565fc0d0a8c00a596075d35f8130",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "827:       if( 0==IN_RENAME_OBJECT ){",
          "828: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "829:         assert( is_agg==0 || (pDef->funcFlags & SQLITE_FUNC_MINMAX)",
          "830:           || (pDef->xValue==0 && pDef->xInverse==0)",
          "831:           || (pDef->xValue && pDef->xInverse && pDef->xSFunc && pDef->xFinalize)",
          "832:         );",
          "834:           sqlite3ErrorMsg(pParse,",
          "835:               \"%.*s() may not be used as a window function\", nId, zId",
          "836:           );",
          "837:           pNC->nErr++;",
          "838:         }else if(",
          "839:               (is_agg && (pNC->ncFlags & NC_AllowAgg)==0)",
          "842:         ){",
          "843:           const char *zType;",
          "845:             zType = \"window\";",
          "846:           }else{",
          "847:             zType = \"aggregate\";",
          "",
          "[Removed Lines]",
          "833:         if( pDef && pDef->xValue==0 && ExprHasProperty(pExpr, EP_WinFunc) ){",
          "840:            || (is_agg && (pDef->funcFlags&SQLITE_FUNC_WINDOW) && !pExpr->y.pWin)",
          "841:            || (is_agg && pExpr->y.pWin && (pNC->ncFlags & NC_AllowWin)==0)",
          "844:           if( (pDef->funcFlags & SQLITE_FUNC_WINDOW) || pExpr->y.pWin ){",
          "",
          "[Added Lines]",
          "829:         int is_win = ExprHasProperty(pExpr, EP_WinFunc);",
          "834:         if( pDef && pDef->xValue==0 && is_win ){",
          "841:            || (is_agg && (pDef->funcFlags&SQLITE_FUNC_WINDOW) && !is_win)",
          "842:            || (is_agg && is_win && (pNC->ncFlags & NC_AllowWin)==0)",
          "845:           if( (pDef->funcFlags & SQLITE_FUNC_WINDOW) || is_win ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "882: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "884: #else",
          "885:           pNC->ncFlags &= ~NC_AllowAgg;",
          "886: #endif",
          "",
          "[Removed Lines]",
          "883:           pNC->ncFlags &= ~(NC_AllowWin | (!pExpr->y.pWin ? NC_AllowAgg : 0));",
          "",
          "[Added Lines]",
          "884:           pNC->ncFlags &= ~(NC_AllowWin | (!is_win ? NC_AllowAgg : 0));",
          "",
          "---------------"
        ],
        "test/filter1.test||test/filter1.test": [
          "File: test/filter1.test -> test/filter1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "84: do_catchsql_test 2.3 {",
          "85:   SELECT sum(a) FILTER (WHERE 1 - count(a)) FROM t1",
          "88: finish_test",
          "",
          "[Removed Lines]",
          "86: } {1 {misuse of aggregate: count()}}",
          "",
          "[Added Lines]",
          "86: } {1 {misuse of aggregate function count()}}",
          "",
          "---------------"
        ],
        "test/filter2.tcl||test/filter2.tcl": [
          "File: test/filter2.tcl -> test/filter2.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:   ORDER BY 1, 2, 3, 4;",
          "69: }",
          "71: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: execsql_test 1.8 {",
          "72:   SELECT sum(a+b) FILTER (WHERE a=NULL) FROM t1",
          "73: }",
          "75: execsql_test 1.9 {",
          "76:   SELECT (a%5) FROM t1 GROUP BY (a%5)",
          "77:   HAVING sum(b) FILTER (WHERE b<20) > 34",
          "78:   ORDER BY 1",
          "79: }",
          "81: execsql_test 1.10 {",
          "82:   SELECT (a%5), sum(b) FILTER (WHERE b<20) AS bbb",
          "83:   FROM t1",
          "84:   GROUP BY (a%5) HAVING sum(b) FILTER (WHERE b<20) >34",
          "85:   ORDER BY 1",
          "86: }",
          "88: execsql_test 1.11 {",
          "89:   SELECT (a%5), sum(b) FILTER (WHERE b<20) AS bbb",
          "90:   FROM t1",
          "91:   GROUP BY (a%5) HAVING sum(b) FILTER (WHERE b<20) >34",
          "92:   ORDER BY 2",
          "93: }",
          "95: execsql_test 1.12 {",
          "96:   SELECT (a%5),",
          "97:     sum(b) FILTER (WHERE b<20) AS bbb,",
          "98:     count(distinct b) FILTER (WHERE b<20 OR a=13) AS ccc",
          "99:   FROM t1 GROUP BY (a%5)",
          "100:   ORDER BY 2",
          "101: }",
          "103: execsql_test 1.13 {",
          "104:   SELECT",
          "105:     string_agg(CAST(b AS TEXT), '_') FILTER (WHERE b%2!=0),",
          "106:     string_agg(CAST(b AS TEXT), '_') FILTER (WHERE b%2!=1),",
          "107:     count(*) FILTER (WHERE b%2!=0),",
          "108:     count(*) FILTER (WHERE b%2!=1)",
          "109:   FROM t1;",
          "110: }",
          "112: execsql_float_test 1.14 {",
          "113:   SELECT",
          "114:     avg(b) FILTER (WHERE b>a),",
          "115:     avg(b) FILTER (WHERE b<a)",
          "116:   FROM t1 GROUP BY (a%2) ORDER BY 1,2;",
          "117: }",
          "119: execsql_test 1.15 {",
          "120:   SELECT",
          "121:     a/5,",
          "122:     sum(b) FILTER (WHERE a%5=0),",
          "123:     sum(b) FILTER (WHERE a%5=1),",
          "124:     sum(b) FILTER (WHERE a%5=2),",
          "125:     sum(b) FILTER (WHERE a%5=3),",
          "126:     sum(b) FILTER (WHERE a%5=4)",
          "127:   FROM t1 GROUP BY (a/5) ORDER BY 1;",
          "128: }",
          "",
          "---------------"
        ],
        "test/filter2.test||test/filter2.test": [
          "File: test/filter2.test -> test/filter2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: } {3 3 58 58   3 3 71 39   4 4 38 61   7 7 85 85   11 5 54 45   16 16 81 81",
          "80:   18 3 66 61   21 3 88 68   23 11 79 79   24 24 68 68}",
          "82: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: do_execsql_test 1.8 {",
          "83:   SELECT sum(a+b) FILTER (WHERE a=NULL) FROM t1",
          "84: } {{}}",
          "86: do_execsql_test 1.9 {",
          "87:   SELECT (a%5) FROM t1 GROUP BY (a%5)",
          "88:   HAVING sum(b) FILTER (WHERE b<20) > 34",
          "89:   ORDER BY 1",
          "90: } {3   4}",
          "92: do_execsql_test 1.10 {",
          "93:   SELECT (a%5), sum(b) FILTER (WHERE b<20) AS bbb",
          "94:   FROM t1",
          "95:   GROUP BY (a%5) HAVING sum(b) FILTER (WHERE b<20) >34",
          "96:   ORDER BY 1",
          "97: } {3 49   4 46}",
          "99: do_execsql_test 1.11 {",
          "100:   SELECT (a%5), sum(b) FILTER (WHERE b<20) AS bbb",
          "101:   FROM t1",
          "102:   GROUP BY (a%5) HAVING sum(b) FILTER (WHERE b<20) >34",
          "103:   ORDER BY 2",
          "104: } {4 46   3 49}",
          "106: do_execsql_test 1.12 {",
          "107:   SELECT (a%5),",
          "108:     sum(b) FILTER (WHERE b<20) AS bbb,",
          "109:     count(distinct b) FILTER (WHERE b<20 OR a=13) AS ccc",
          "110:   FROM t1 GROUP BY (a%5)",
          "111:   ORDER BY 2",
          "112: } {2 25 3   0 34 2   1 34 4   4 46 4   3 49 5}",
          "114: do_execsql_test 1.13 {",
          "115:   SELECT",
          "116:     group_concat(CAST(b AS TEXT), '_') FILTER (WHERE b%2!=0),",
          "117:     group_concat(CAST(b AS TEXT), '_') FILTER (WHERE b%2!=1),",
          "118:     count(*) FILTER (WHERE b%2!=0),",
          "119:     count(*) FILTER (WHERE b%2!=1)",
          "120:   FROM t1;",
          "121: } {7_3_5_23_27_3_17_33_25_47_13_45_31_11_37_21_3_7_29_3_3_23_5_11_25_15_23 30_26_26_36_36_22_14_16_50_38_36_12_4_46_48_24_46_18_18 27 19}",
          "124: do_test 1.14 {",
          "125:   set myres {}",
          "126:   foreach r [db eval {SELECT",
          "127:     avg(b) FILTER (WHERE b>a),",
          "128:     avg(b) FILTER (WHERE b<a)",
          "129:   FROM t1 GROUP BY (a%2) ORDER BY 1,2;}] {",
          "130:     lappend myres [format %.4f [set r]]",
          "131:   }",
          "132:   set res2 {30.8333 13.7273 31.4167 13.0000}",
          "133:   set i 0",
          "134:   foreach r [set myres] r2 [set res2] {",
          "135:     if {[set r]<([set r2]-0.0001) || [set r]>([set r2]+0.0001)} {",
          "136:       error \"list element [set i] does not match: got=[set r] expected=[set r2]\"",
          "137:     }",
          "138:     incr i",
          "139:   }",
          "140:   set {} {}",
          "141: } {}",
          "143: do_execsql_test 1.15 {",
          "144:   SELECT",
          "145:     a/5,",
          "146:     sum(b) FILTER (WHERE a%5=0),",
          "147:     sum(b) FILTER (WHERE a%5=1),",
          "148:     sum(b) FILTER (WHERE a%5=2),",
          "149:     sum(b) FILTER (WHERE a%5=3),",
          "150:     sum(b) FILTER (WHERE a%5=4)",
          "151:   FROM t1 GROUP BY (a/5) ORDER BY 1;",
          "152: } {0 {} 7 3 5 30   1 26 23 27 3 17   2 26 33 25 {} 47   3 36 13 45 31 11",
          "153:   4 36 37 21 22 14   5 16 3 7 29 50   6 38 3 36 12 4   7 46 3 48 23 {}",
          "154:   8 24 5 46 11 {}   9 18 25 15 18 23}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd80dc366795c347f2f65a34208538ebc66a2cb0",
      "candidate_info": {
        "commit_hash": "cd80dc366795c347f2f65a34208538ebc66a2cb0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cd80dc366795c347f2f65a34208538ebc66a2cb0",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a null-pointer dereference that could occur in fts5 with a corrupt database.\n\nFossilOrigin-Name: b0a49d5e6df116bb5eacb60a0bb0f482760aec38bd417d4250d9e57d43bdbb13",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "892:       if( rc==SQLITE_OK ){",
          "893:         pLvl->nSeg = nTotal;",
          "894:         for(iSeg=0; iSeg<nTotal; iSeg++){",
          "895:           if( i>=nData ){",
          "896:             rc = FTS5_CORRUPT;",
          "897:             break;",
          "898:           }",
          "902:         }",
          "903:       }",
          "904:     }",
          "",
          "[Removed Lines]",
          "899:           i += fts5GetVarint32(&pData[i], pLvl->aSeg[iSeg].iSegid);",
          "900:           i += fts5GetVarint32(&pData[i], pLvl->aSeg[iSeg].pgnoFirst);",
          "901:           i += fts5GetVarint32(&pData[i], pLvl->aSeg[iSeg].pgnoLast);",
          "",
          "[Added Lines]",
          "895:           Fts5StructureSegment *pSeg = &pLvl->aSeg[iSeg];",
          "900:           i += fts5GetVarint32(&pData[i], pSeg->iSegid);",
          "901:           i += fts5GetVarint32(&pData[i], pSeg->pgnoFirst);",
          "902:           i += fts5GetVarint32(&pData[i], pSeg->pgnoLast);",
          "903:           if( pSeg->pgnoLast<pSeg->pgnoFirst ){",
          "904:             rc = FTS5_CORRUPT;",
          "905:             break;",
          "906:           }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:   }",
          "36: }",
          "40: # Create a simple FTS5 table containing 100 documents. Each document",
          "41: # contains 10 terms, each of which start with the character \"x\".",
          "",
          "[Removed Lines]",
          "38: if 1 {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "380:   }",
          "381: } {}",
          "385: #------------------------------------------------------------------------",
          "386: # Corruption within the structure record.",
          "387: #",
          "",
          "[Removed Lines]",
          "383: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "963:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "964: } {1 {database disk image is malformed}}",
          "966: sqlite3_fts5_may_be_corrupt 0",
          "967: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "963: #---------------------------------------------------------------------------",
          "964: #",
          "965: reset_db",
          "966: do_test 16.0 {",
          "967:   sqlite3 db {}",
          "968:   db deserialize [decode_hexdb {",
          "969: | size 28672 pagesize 4096 filename c17.db",
          "970: | page 1 offset 0",
          "971: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "972: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "973: |     32: 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00   ................",
          "974: |     48: 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00   ................",
          "975: |     96: 00 00 00 00 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ...............m",
          "976: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "977: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "978: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "979: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "980: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "981: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "982: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "983: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "984: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "985: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "986: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "987: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "988: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "989: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "990: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "991: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "992: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "993: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "994: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "995: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "996: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "997: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "998: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "999: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "1000: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "1001: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "1002: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "1003: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "1004: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "1005: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "1006: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "1007: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "1008: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "1009: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "1010: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "1011: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "1012: | page 2 offset 4096",
          "1013: |      0: 0d 00 00 00 03 0f bd 00 0f e8 0f ef 0f bd 00 00   ................",
          "1014: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 24 84 80   .............$..",
          "1015: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "1016: |   4048: 63 6b 01 02 02 04 02 66 74 00 02 22 04 04 6e 64   ck.....ft.....nd",
          "1017: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 03 03 0f   on..............",
          "1018: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 41 01   ...$..........A.",
          "1019: | page 3 offset 8192",
          "1020: |      0: 0a 00 00 00 01 0f fa 00 0f fa 00 00 00 00 00 00   ................",
          "1021: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "1022: | page 4 offset 12288",
          "1023: |      0: 0d 00 00 00 03 0f e0 00 0f f6 0f ec 0f e0 00 00   ................",
          "1024: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "1025: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "1026: | page 5 offset 16384",
          "1027: |      0: 0d 00 00 00 03 0f ee 00 0f fa 0f f4 0f ee 00 00   ................",
          "1028: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 03   ................",
          "1029: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "1030: | page 6 offset 20480",
          "1031: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "1032: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "1033: | page 7 offset 24576",
          "1034: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "1035: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "1036: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "1037: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "1038: | end c17.db",
          "1039: }]} {}",
          "1041: do_catchsql_test 16.1 {",
          "1042: INSERT INTO t1(t1) VALUES('integrity-check');",
          "1043: } {1 {vtable constructor failed: t1}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 202dd033019dd27428e3cc5f6e164c95b37efe39e2753515112b201ddefca67b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38a28a7434d75c27cdeabf9d30fd66eaed3d5625",
      "candidate_info": {
        "commit_hash": "38a28a7434d75c27cdeabf9d30fd66eaed3d5625",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/38a28a7434d75c27cdeabf9d30fd66eaed3d5625",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases added to test/fuzzdata8.db.\n\nFossilOrigin-Name: e5924939c9c8f39367900360fa294cdb1220e9f68d183e32882e0926f775869d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ef27e7a08728aa7447ae19812803ac5c4a9d80c97541014bd292485792005a3e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}