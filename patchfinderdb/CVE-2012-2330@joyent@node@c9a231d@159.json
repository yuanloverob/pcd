{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a993d22c0f587beef44e56877b442db47da78ced",
      "candidate_info": {
        "commit_hash": "a993d22c0f587beef44e56877b442db47da78ced",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a993d22c0f587beef44e56877b442db47da78ced",
        "files": [
          "tools/addon.gypi"
        ],
        "message": "build: set product_prefix to empty for Linux",
        "before_after_code_files": [
          "tools/addon.gypi||tools/addon.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/addon.gypi||tools/addon.gypi": [
          "File: tools/addon.gypi -> tools/addon.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   'target_defaults': {",
          "3:     'type': 'loadable_module',",
          "4:     'product_extension': 'node',",
          "5:     'include_dirs': [",
          "6:       '../src',",
          "7:       '../deps/uv/include',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:     'product_prefix': '',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f214758dd1ef74b7f9746ec7a859a9dc73887aa3",
      "candidate_info": {
        "commit_hash": "f214758dd1ef74b7f9746ec7a859a9dc73887aa3",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f214758dd1ef74b7f9746ec7a859a9dc73887aa3",
        "files": [
          "lib/repl.js"
        ],
        "message": "repl: better SIGINT handling behavior\n\nBefore:\n\n\u262e ~ (master) \u26a1 node\n> asdf\n(^C again to quit)\n> sdcasd\u262e ~ (master) \u26a1\n\nNow:\n\n\u262e ~/node (repl) \u26a1 ./node\n> asfs\n> sda\n>\n(^C again to quit)\n> scdsdc\n> sdcsdc\n>\n(^C again to quit)\n> sdc\n>\n(^C again to quit)\n>\n\u262e ~/node (repl) \u26a1\n\n^ note that each new line above is a ctrl+c sequence",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "140:   rli.on('SIGINT', function() {",
          "141:     rli.output.write('\\n');",
          "146:       sawSIGINT = false;",
          "148:     }",
          "150:     rli.line = '';",
          "157:     self.bufferedCommand = '';",
          "158:     self.displayPrompt();",
          "159:   });",
          "",
          "[Removed Lines]",
          "143:     if (sawSIGINT) {",
          "144:       rli.pause();",
          "145:       self.emit('exit');",
          "147:       return;",
          "152:     if (!(self.bufferedCommand && self.bufferedCommand.length > 0)) {",
          "153:       rli.output.write('(^C again to quit)\\n');",
          "154:       sawSIGINT = true;",
          "155:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a661830569f424ac929a075bacaa94d70e732924",
      "candidate_info": {
        "commit_hash": "a661830569f424ac929a075bacaa94d70e732924",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a661830569f424ac929a075bacaa94d70e732924",
        "files": [
          "lib/path.js"
        ],
        "message": "Run path.exists paths through _makeLong",
        "before_after_code_files": [
          "lib/path.js||lipath.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/path.js||lipath.js": [
          "File: lib/path.js -> lipath.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "404: exports.exists = function(path, callback) {",
          "406:     if (callback) callback(err ? false : true);",
          "407:   });",
          "408: };",
          "",
          "[Removed Lines]",
          "405:   process.binding('fs').stat(path, function(err, stats) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "411: exports.existsSync = function(path) {",
          "412:   try {",
          "414:     return true;",
          "415:   } catch (e) {",
          "416:     return false;",
          "",
          "[Removed Lines]",
          "413:     process.binding('fs').stat(path);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "418: };",
          "422:   function(path) {",
          "423:     var resolvedPath = exports.resolve(path);",
          "",
          "[Removed Lines]",
          "421: exports._makeLong = isWindows ?",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d6d5e263e8cea5c34f6cb6947e7264ced0d6381",
      "candidate_info": {
        "commit_hash": "7d6d5e263e8cea5c34f6cb6947e7264ced0d6381",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7d6d5e263e8cea5c34f6cb6947e7264ced0d6381",
        "files": [
          "Makefile",
          "tools/doctool/doctool.js",
          "tools/doctool/markdown.js"
        ],
        "message": "Use new doc generation tool",
        "before_after_code_files": [
          "tools/doctool/doctool.js||tools/doctool/doctool.js",
          "tools/doctool/markdown.js||tools/doctool/markdown.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/doctool/doctool.js||tools/doctool/doctool.js": [
          "File: tools/doctool/doctool.js -> tools/doctool/doctool.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/doctool/markdown.js||tools/doctool/markdown.js": [
          "File: tools/doctool/markdown.js -> tools/doctool/markdown.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d03b80bc1219c673aec8906b60cce6be0ad85700",
      "candidate_info": {
        "commit_hash": "d03b80bc1219c673aec8906b60cce6be0ad85700",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d03b80bc1219c673aec8906b60cce6be0ad85700",
        "files": [
          "deps/http_parser/http_parser.c",
          "deps/http_parser/test.c"
        ],
        "message": "deps: upgrade http_parser to joyent/http-parser@da91852",
        "before_after_code_files": [
          "deps/http_parser/http_parser.c||deps/http_parser/http_parser.c",
          "deps/http_parser/test.c||deps/http_parser/test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/http_parser/http_parser.c||deps/http_parser/http_parser.c": [
          "File: deps/http_parser/http_parser.c -> deps/http_parser/http_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "436:         SET_ERRNO(HPE_CLOSED_CONNECTION);",
          "437:         goto error;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "436:         if (ch == CR || ch == LF)",
          "437:           break;",
          "",
          "---------------"
        ],
        "deps/http_parser/test.c||deps/http_parser/test.c": [
          "File: deps/http_parser/test.c -> deps/http_parser/test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "680:   ,.body= \"\"",
          "681:   }",
          "684: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "684: #define EAT_TRAILING_CRLF_NO_CONNECTION_CLOSE 28",
          "685: , {.name = \"eat CRLF between requests, no \\\"Connection: close\\\" header\"",
          "686:   ,.raw= \"POST / HTTP/1.1\\r\\n\"",
          "687:          \"Host: www.example.com\\r\\n\"",
          "688:          \"Content-Type: application/x-www-form-urlencoded\\r\\n\"",
          "689:          \"Content-Length: 4\\r\\n\"",
          "690:          \"\\r\\n\"",
          "692:   ,.should_keep_alive= TRUE",
          "693:   ,.message_complete_on_eof= FALSE",
          "694:   ,.http_major= 1",
          "695:   ,.http_minor= 1",
          "696:   ,.method= HTTP_POST",
          "697:   ,.request_url= \"/\"",
          "698:   ,.num_headers= 3",
          "699:   ,.upgrade= 0",
          "700:   ,.headers= { { \"Host\", \"www.example.com\" }",
          "701:              , { \"Content-Type\", \"application/x-www-form-urlencoded\" }",
          "702:              , { \"Content-Length\", \"4\" }",
          "703:              }",
          "704:   ,.body= \"q=42\"",
          "705:   }",
          "708: #define EAT_TRAILING_CRLF_WITH_CONNECTION_CLOSE 29",
          "709: , {.name = \"eat CRLF between requests even if \\\"Connection: close\\\" is set\"",
          "710:   ,.raw= \"POST / HTTP/1.1\\r\\n\"",
          "711:          \"Host: www.example.com\\r\\n\"",
          "712:          \"Content-Type: application/x-www-form-urlencoded\\r\\n\"",
          "713:          \"Content-Length: 4\\r\\n\"",
          "714:          \"Connection: close\\r\\n\"",
          "715:          \"\\r\\n\"",
          "717:   ,.should_keep_alive= FALSE",
          "719:   ,.http_major= 1",
          "720:   ,.http_minor= 1",
          "721:   ,.method= HTTP_POST",
          "722:   ,.request_url= \"/\"",
          "723:   ,.num_headers= 4",
          "724:   ,.upgrade= 0",
          "725:   ,.headers= { { \"Host\", \"www.example.com\" }",
          "726:              , { \"Content-Type\", \"application/x-www-form-urlencoded\" }",
          "727:              , { \"Content-Length\", \"4\" }",
          "728:              , { \"Connection\", \"close\" }",
          "729:              }",
          "730:   ,.body= \"q=42\"",
          "731:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}