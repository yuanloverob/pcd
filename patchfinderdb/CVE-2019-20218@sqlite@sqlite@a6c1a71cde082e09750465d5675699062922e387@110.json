{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bfa70de11729499021b5cf91e78fd49fa1784d43",
      "candidate_info": {
        "commit_hash": "bfa70de11729499021b5cf91e78fd49fa1784d43",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bfa70de11729499021b5cf91e78fd49fa1784d43",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases added to test/fuzzdata8.db.\n\nFossilOrigin-Name: 61fdfc57b9539cb6da5fc24653da2c8fb7c041a7409df911df11b987ed479a3a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e7aca0714bc475e04b16e9db78722ce025d2a1382f80cfc0a49cff2af904eae5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "579d41dc8d938a936e3e8f19a114ed351b724dd0",
      "candidate_info": {
        "commit_hash": "579d41dc8d938a936e3e8f19a114ed351b724dd0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/579d41dc8d938a936e3e8f19a114ed351b724dd0",
        "files": [
          "Makefile.in",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix the checksymbols target in Makefile.in.\n\nFossilOrigin-Name: 1956eb348170a9a873878b522f377fa7303cdb3beca41f5515b6b9da1b1f544d",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1372: # releasetest.tcl script.",
          "1373: #",
          "1374: VALIDIDS=' sqlite3(changeset|changegroup|session)?_'",
          "1377:  echo '0 errors out of 1 tests'",
          "1379: # Build the amalgamation-autoconf package.  The amalamgation-tarball target builds",
          "",
          "[Removed Lines]",
          "1375: checksymbols: sqlite3.lo",
          "1376:  nm -g --defined-only sqlite3.lo | egrep -v $(VALIDIDS); test $$? -ne 0",
          "",
          "[Added Lines]",
          "1375: checksymbols: sqlite3.o",
          "1376:  nm -g --defined-only sqlite3.o",
          "1377:  nm -g --defined-only sqlite3.o | egrep -v $(VALIDIDS); test $$? -ne 0",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c47e53b4d0f29628bd20ba3daf7e759c4bfed07710d982c095445c01376d57f5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acf6e08d20a663de5d4012effba666675bd23fe9",
      "candidate_info": {
        "commit_hash": "acf6e08d20a663de5d4012effba666675bd23fe9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/acf6e08d20a663de5d4012effba666675bd23fe9",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/lemon.c"
        ],
        "message": "Fix typo for one instance of line number handling in the Lemon tool.\n\nFossilOrigin-Name: 980be1730dc1239c63a107923bf2e32b4ec7d4bc31b9190e711cc35f18cc2bb4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/lemon.c||tool/lemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a97804620a27acc30bebd2aaa04e38f2f36de48b0931038ca8bdc9cb0c36b8f4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/lemon.c||tool/lemon.c": [
          "File: tool/lemon.c -> tool/lemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4426:     }",
          "4427:     i++;",
          "4428:   }",
          "4430:   fprintf(out, \"};\\n\"); lineno++;",
          "",
          "[Removed Lines]",
          "4429:   if( j>0 ) fprintf(out, \"\\n\"); lineno++;",
          "",
          "[Added Lines]",
          "4429:   if( j>0 ){ fprintf(out, \"\\n\"); lineno++; }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71fddaf195df9848b95a96e20bc5401b8e267858",
      "candidate_info": {
        "commit_hash": "71fddaf195df9848b95a96e20bc5401b8e267858",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/71fddaf195df9848b95a96e20bc5401b8e267858",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/window8.tcl",
          "test/window8.test"
        ],
        "message": "Fix problems with \"RANGE ... ORDER BY <expr> DESC\" window frames.\n\nFossilOrigin-Name: e7bced731aa071c95bc398cdecd53c939841bf0c52fbcd06e47ba68f8c5cc35a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/window8.tcl||test/window8.tcl",
          "test/window8.test||test/window8.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ffc32b246d92d53c66094afe11950b53ffab6a1c230c602eebbfedafb2eb57f4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1559:   Vdbe *v = sqlite3GetVdbe(pParse);",
          "1560:   int reg1 = sqlite3GetTempReg(pParse);",
          "1561:   int reg2 = sqlite3GetTempReg(pParse);",
          "1562:   windowReadPeerValues(p, csr1, reg1);",
          "1563:   windowReadPeerValues(p, csr2, reg2);",
          "1565:   sqlite3VdbeAddOp3(v, op, reg2, lbl, reg1);",
          "1566:   sqlite3VdbeAddOp2(v, OP_Rowid, csr1, reg1);",
          "1567:   sqlite3VdbeAddOp2(v, OP_Rowid, csr2, reg2);",
          "1568:   sqlite3VdbeAddOp3(v, OP_Gt, reg2, lbl, reg1);",
          "1569:   sqlite3ReleaseTempReg(pParse, reg1);",
          "1570:   sqlite3ReleaseTempReg(pParse, reg2);",
          "1573: }",
          "1575: static int windowCodeOp(",
          "",
          "[Removed Lines]",
          "1564:   sqlite3VdbeAddOp3(v, OP_Add, reg1, regVal, reg1);",
          "1572:   assert( op==OP_Ge || op==OP_Gt || op==OP_Lt || op==OP_Le );",
          "",
          "[Added Lines]",
          "1562:   int arith = OP_Add;",
          "1564:   assert( op==OP_Ge || op==OP_Gt || op==OP_Le );",
          "1565:   assert( p->pMWin->pOrderBy && p->pMWin->pOrderBy->nExpr==1 );",
          "1566:   if( p->pMWin->pOrderBy->a[0].sortOrder ){",
          "1567:     switch( op ){",
          "1568:       case OP_Ge: op = OP_Le; break;",
          "1569:       case OP_Gt: op = OP_Lt; break;",
          "1570:       default: assert( op==OP_Le ); op = OP_Ge; break;",
          "1571:     }",
          "1572:     arith = OP_Subtract;",
          "1573:   }",
          "1577:   sqlite3VdbeAddOp3(v, arith, regVal, reg1, reg1);",
          "",
          "---------------"
        ],
        "test/window8.tcl||test/window8.tcl": [
          "File: test/window8.tcl -> test/window8.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:   DROP TABLE IF EXISTS t1;",
          "96:   CREATE TABLE t1(a INTEGER, b INTEGER);",
          "97:   INSERT INTO t1 VALUES",
          "99: }",
          "101: foreach {tn frame} {",
          "102:   1 { ORDER BY a RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING }",
          "103:   2 { ORDER BY a RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING }",
          "104:   3 { ORDER BY a RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING }",
          "105: } {",
          "106:   execsql_test 2.$tn \"SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ($frame)\"",
          "107: }",
          "",
          "[Removed Lines]",
          "98:       (13, 26), (15, 30);",
          "",
          "[Added Lines]",
          "98:       (5, 10), (10, 20), (13, 26), (13, 26),",
          "99:       (15, 30), (20, 40), (22,80), (30, 90);",
          "106:   4 { ORDER BY a DESC RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING }",
          "107:   5 { ORDER BY a DESC RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING }",
          "108:   6 { ORDER BY a DESC RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING }",
          "",
          "---------------"
        ],
        "test/window8.test||test/window8.test": [
          "File: test/window8.test -> test/window8.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "439:   DROP TABLE IF EXISTS t1;",
          "440:   CREATE TABLE t1(a INTEGER, b INTEGER);",
          "441:   INSERT INTO t1 VALUES",
          "443: } {}",
          "445: do_execsql_test 2.1 {",
          "446:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )",
          "449: do_execsql_test 2.2 {",
          "450:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING )",
          "453: do_execsql_test 2.3 {",
          "454:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING )",
          "457: finish_test",
          "",
          "[Removed Lines]",
          "442:       (13, 26), (15, 30);",
          "447: } {13 56   15 56}",
          "451: } {13 {}   15 {}}",
          "455: } {13 30   15 {}}",
          "",
          "[Added Lines]",
          "442:       (5, 10), (10, 20), (13, 26), (13, 26),",
          "443:       (15, 30), (20, 40), (22,80), (30, 90);",
          "448: } {5 30   10 112   13 102   13 102   15 142   20 150   22 120   30 90}",
          "452: } {5 {}   10 10   13 10   13 10   15 30   20 102   22 82   30 120}",
          "456: } {5 {}   10 52   13 30   13 30   15 {}   20 80   22 {}   30 {}}",
          "458: do_execsql_test 2.4 {",
          "459:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )",
          "460: } {30 90   22 120   20 150   15 142   13 102   13 102   10 112   5 30}",
          "462: do_execsql_test 2.5 {",
          "463:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING )",
          "464: } {30 {}   22 90   20 90   15 120   13 120   13 120   10 70   5 102}",
          "466: do_execsql_test 2.6 {",
          "467:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING )",
          "468: } {30 {}   22 40   20 {}   15 52   13 20   13 20   10 {}   5 {}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "efb02281a4266251292590b5e77ad56be22d1af9",
      "candidate_info": {
        "commit_hash": "efb02281a4266251292590b5e77ad56be22d1af9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/efb02281a4266251292590b5e77ad56be22d1af9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "src/build.c",
          "src/expr.c"
        ],
        "message": "Change sqlite3SelectDup() to always return NULL if an OOM has occurred.\n\nFossilOrigin-Name: 01ba4641ab436c6065c8725908fc0913f2abded4ea62e004b7534e0116b9451a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "src/build.c||src/build.c",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1ca5ef84506aac3e2f08baa36095b3befdeedf2a3443fcd9154a277b55cbf64b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1416:   int i;",
          "1417:   RenameCtx *p = pWalker->u.pRename;",
          "1418:   SrcList *pSrc = pSelect->pSrc;",
          "1421:     return WRC_Abort;",
          "1422:   }",
          "1423:   for(i=0; i<pSrc->nSrc; i++){",
          "",
          "[Removed Lines]",
          "1419:   if( pSrc==0 ){",
          "1420:     assert( pWalker->pParse->db->mallocFailed );",
          "",
          "[Added Lines]",
          "1419:   if( NEVER(pSrc==0) ){",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4143: void sqlite3SrcListAssignCursors(Parse *pParse, SrcList *pList){",
          "4144:   int i;",
          "4145:   struct SrcList_item *pItem;",
          "4148:     for(i=0, pItem=pList->a; i<pList->nSrc; i++, pItem++){",
          "4149:       if( pItem->iCursor>=0 ) break;",
          "4150:       pItem->iCursor = pParse->nTab++;",
          "",
          "[Removed Lines]",
          "4146:   assert(pList || pParse->db->mallocFailed );",
          "4147:   if( pList ){",
          "",
          "[Added Lines]",
          "4146:   if( ALWAYS(pList) ){",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1530:     pNext = pNew;",
          "1531:   }",
          "1533:   return pRet;",
          "1534: }",
          "1535: #else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1533:   if( db->mallocFailed ){",
          "1534:     sqlite3SelectDelete(db, pRet);",
          "1535:     pRet = 0;",
          "1536:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}