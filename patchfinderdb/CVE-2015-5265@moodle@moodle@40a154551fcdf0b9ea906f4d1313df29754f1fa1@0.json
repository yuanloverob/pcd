{
  "cve_id": "CVE-2015-5265",
  "cve_desc": "The wiki component in Moodle through 2.6.11, 2.7.x before 2.7.10, 2.8.x before 2.8.8, and 2.9.x before 2.9.2 does not consider the mod/wiki:managefiles capability before authorizing file management, which allows remote authenticated users to delete arbitrary files by using a manage-files button in a text editor.",
  "repo": "moodle/moodle",
  "patch_hash": "40a154551fcdf0b9ea906f4d1313df29754f1fa1",
  "patch_info": {
    "commit_hash": "40a154551fcdf0b9ea906f4d1313df29754f1fa1",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/40a154551fcdf0b9ea906f4d1313df29754f1fa1",
    "files": [
      "lib/editor/atto/lib.php",
      "lib/editor/tinymce/lib.php",
      "lib/form/editor.php",
      "lib/upgrade.txt",
      "mod/wiki/pagelib.php"
    ],
    "message": "MDL-48371 editors: Option for removing managefiles\n\nWe want to remove the managefiles button from the\neditors in the wiki so that students don't delete\neach others files.",
    "before_after_code_files": [
      "lib/editor/atto/lib.php||lib/editor/atto/lib.php",
      "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php",
      "lib/form/editor.php||lib/form/editor.php",
      "mod/wiki/pagelib.php||mod/wiki/pagelib.php"
    ]
  },
  "patch_diff": {
    "lib/editor/atto/lib.php||lib/editor/atto/lib.php": [
      "File: lib/editor/atto/lib.php -> lib/editor/atto/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "103:                     continue;",
      "104:                 }",
      "106:                 $jsplugin = array();",
      "107:                 $jsplugin['name'] = $plugin;",
      "108:                 $jsplugin['params'] = array();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "104:                 }",
      "107:                 if ($plugin == 'managefiles' && isset($options['enable_filemanagement']) && !$options['enable_filemanagement']) {",
      "108:                     continue;",
      "",
      "---------------"
    ],
    "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php": [
      "File: lib/editor/tinymce/lib.php -> lib/editor/tinymce/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "108:             $config->disabledsubplugins = '';",
      "109:         }",
      "111:         $fontselectlist = empty($config->fontselectlist) ? '' : $config->fontselectlist;",
      "113:         $langrev = -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "112:         if (isset($options['enable_filemanagement']) && !$options['enable_filemanagement']) {",
      "113:             if (!strpos($config->disabledsubplugins, 'managefiles')) {",
      "114:                 $config->disabledsubplugins .= ',managefiles';",
      "115:             }",
      "116:         }",
      "",
      "---------------"
    ],
    "lib/form/editor.php||lib/form/editor.php": [
      "File: lib/form/editor.php -> lib/form/editor.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "54:     protected $_options = array('subdirs' => 0, 'maxbytes' => 0, 'maxfiles' => 0, 'changeformat' => 0,",
      "55:             'areamaxbytes' => FILE_AREA_MAX_BYTES_UNLIMITED, 'context' => null, 'noclean' => 0, 'trusttext' => 0,",
      "",
      "[Removed Lines]",
      "56:             'return_types' => 7);",
      "",
      "[Added Lines]",
      "56:             'return_types' => 7, 'enable_filemanagement' => true);",
      "",
      "---------------"
    ],
    "mod/wiki/pagelib.php||mod/wiki/pagelib.php": [
      "File: mod/wiki/pagelib.php -> mod/wiki/pagelib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "381:     function __construct($wiki, $subwiki, $cm) {",
      "382:         global $CFG, $PAGE;",
      "383:         parent::__construct($wiki, $subwiki, $cm);",
      "385:         $PAGE->requires->js_init_call('M.mod_wiki.renew_lock', null, true);",
      "386:     }",
      "",
      "[Removed Lines]",
      "384:         self::$attachmentoptions = array('subdirs' => false, 'maxfiles' => - 1, 'maxbytes' => $CFG->maxbytes, 'accepted_types' => '*');",
      "",
      "[Added Lines]",
      "384:         $showfilemanager = false;",
      "385:         if (has_capability('mod/wiki:managefiles', context_module::instance($cm->id))) {",
      "386:             $showfilemanager = true;",
      "387:         }",
      "388:         self::$attachmentoptions = array('subdirs' => false, 'maxfiles' => - 1, 'maxbytes' => $CFG->maxbytes,",
      "389:                 'accepted_types' => '*', 'enable_filemanagement' => $showfilemanager);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1d70050f33edb79b974de2509f18c943969589ea",
      "candidate_info": {
        "commit_hash": "1d70050f33edb79b974de2509f18c943969589ea",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/1d70050f33edb79b974de2509f18c943969589ea",
        "files": [
          "lib/editor/atto/lib.php",
          "lib/editor/tinymce/lib.php",
          "lib/form/editor.php",
          "lib/upgrade.txt",
          "mod/wiki/pagelib.php"
        ],
        "message": "MDL-48371 editors: Option for removing managefiles\n\nWe want to remove the managefiles button from the\neditors in the wiki so that students don't delete\neach others files.",
        "before_after_code_files": [
          "lib/editor/atto/lib.php||lib/editor/atto/lib.php",
          "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php",
          "lib/form/editor.php||lib/form/editor.php",
          "mod/wiki/pagelib.php||mod/wiki/pagelib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/editor/atto/lib.php||lib/editor/atto/lib.php",
            "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php",
            "lib/form/editor.php||lib/form/editor.php",
            "mod/wiki/pagelib.php||mod/wiki/pagelib.php"
          ],
          "candidate": [
            "lib/editor/atto/lib.php||lib/editor/atto/lib.php",
            "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php",
            "lib/form/editor.php||lib/form/editor.php",
            "mod/wiki/pagelib.php||mod/wiki/pagelib.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/editor/atto/lib.php||lib/editor/atto/lib.php": [
          "File: lib/editor/atto/lib.php -> lib/editor/atto/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:                     continue;",
          "104:                 }",
          "106:                 $jsplugin = array();",
          "107:                 $jsplugin['name'] = $plugin;",
          "108:                 $jsplugin['params'] = array();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:                 }",
          "107:                 if ($plugin == 'managefiles' && isset($options['enable_filemanagement']) && !$options['enable_filemanagement']) {",
          "108:                     continue;",
          "",
          "---------------"
        ],
        "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php": [
          "File: lib/editor/tinymce/lib.php -> lib/editor/tinymce/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:             $config->disabledsubplugins = '';",
          "109:         }",
          "111:         $fontselectlist = empty($config->fontselectlist) ? '' : $config->fontselectlist;",
          "113:         $langrev = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:         if (isset($options['enable_filemanagement']) && !$options['enable_filemanagement']) {",
          "113:             if (!strpos($config->disabledsubplugins, 'managefiles')) {",
          "114:                 $config->disabledsubplugins .= ',managefiles';",
          "115:             }",
          "116:         }",
          "",
          "---------------"
        ],
        "lib/form/editor.php||lib/form/editor.php": [
          "File: lib/form/editor.php -> lib/form/editor.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     protected $_options = array('subdirs' => 0, 'maxbytes' => 0, 'maxfiles' => 0, 'changeformat' => 0,",
          "55:             'areamaxbytes' => FILE_AREA_MAX_BYTES_UNLIMITED, 'context' => null, 'noclean' => 0, 'trusttext' => 0,",
          "",
          "[Removed Lines]",
          "56:             'return_types' => 7);",
          "",
          "[Added Lines]",
          "56:             'return_types' => 7, 'enable_filemanagement' => true);",
          "",
          "---------------"
        ],
        "mod/wiki/pagelib.php||mod/wiki/pagelib.php": [
          "File: mod/wiki/pagelib.php -> mod/wiki/pagelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:     function __construct($wiki, $subwiki, $cm) {",
          "382:         global $CFG, $PAGE;",
          "383:         parent::__construct($wiki, $subwiki, $cm);",
          "385:         $PAGE->requires->js_init_call('M.mod_wiki.renew_lock', null, true);",
          "386:     }",
          "",
          "[Removed Lines]",
          "384:         self::$attachmentoptions = array('subdirs' => false, 'maxfiles' => - 1, 'maxbytes' => $CFG->maxbytes, 'accepted_types' => '*');",
          "",
          "[Added Lines]",
          "384:         $showfilemanager = false;",
          "385:         if (has_capability('mod/wiki:managefiles', context_module::instance($cm->id))) {",
          "386:             $showfilemanager = true;",
          "387:         }",
          "388:         self::$attachmentoptions = array('subdirs' => false, 'maxfiles' => - 1, 'maxbytes' => $CFG->maxbytes,",
          "389:                 'accepted_types' => '*', 'enable_filemanagement' => $showfilemanager);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "78de2e86e8506222cf49b1cc6dc58467750ae83d",
      "candidate_info": {
        "commit_hash": "78de2e86e8506222cf49b1cc6dc58467750ae83d",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/78de2e86e8506222cf49b1cc6dc58467750ae83d",
        "files": [
          "lib/editor/atto/lib.php",
          "lib/editor/tinymce/lib.php",
          "lib/form/editor.php",
          "lib/upgrade.txt",
          "mod/wiki/pagelib.php"
        ],
        "message": "MDL-48371 editors: Option for removing managefiles\n\nWe want to remove the managefiles button from the\neditors in the wiki so that students don't delete\neach others files.",
        "before_after_code_files": [
          "lib/editor/atto/lib.php||lib/editor/atto/lib.php",
          "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php",
          "lib/form/editor.php||lib/form/editor.php",
          "mod/wiki/pagelib.php||mod/wiki/pagelib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/editor/atto/lib.php||lib/editor/atto/lib.php",
            "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php",
            "lib/form/editor.php||lib/form/editor.php",
            "mod/wiki/pagelib.php||mod/wiki/pagelib.php"
          ],
          "candidate": [
            "lib/editor/atto/lib.php||lib/editor/atto/lib.php",
            "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php",
            "lib/form/editor.php||lib/form/editor.php",
            "mod/wiki/pagelib.php||mod/wiki/pagelib.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/editor/atto/lib.php||lib/editor/atto/lib.php": [
          "File: lib/editor/atto/lib.php -> lib/editor/atto/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:                     continue;",
          "104:                 }",
          "106:                 $jsplugin = array();",
          "107:                 $jsplugin['name'] = $plugin;",
          "108:                 $jsplugin['params'] = array();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:                 if ($plugin == 'managefiles' && isset($options['enable_filemanagement']) && !$options['enable_filemanagement']) {",
          "108:                     continue;",
          "109:                 }",
          "",
          "---------------"
        ],
        "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php": [
          "File: lib/editor/tinymce/lib.php -> lib/editor/tinymce/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:             $config->disabledsubplugins = '';",
          "109:         }",
          "111:         $fontselectlist = empty($config->fontselectlist) ? '' : $config->fontselectlist;",
          "113:         $langrev = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:         if (isset($options['enable_filemanagement']) && !$options['enable_filemanagement']) {",
          "113:             if (!strpos($config->disabledsubplugins, 'managefiles')) {",
          "114:                 $config->disabledsubplugins .= ',managefiles';",
          "115:             }",
          "116:         }",
          "",
          "---------------"
        ],
        "lib/form/editor.php||lib/form/editor.php": [
          "File: lib/form/editor.php -> lib/form/editor.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     protected $_options = array('subdirs' => 0, 'maxbytes' => 0, 'maxfiles' => 0, 'changeformat' => 0,",
          "55:             'areamaxbytes' => FILE_AREA_MAX_BYTES_UNLIMITED, 'context' => null, 'noclean' => 0, 'trusttext' => 0,",
          "",
          "[Removed Lines]",
          "56:             'return_types' => 7);",
          "",
          "[Added Lines]",
          "56:             'return_types' => 7, 'enable_filemanagement' => true);",
          "",
          "---------------"
        ],
        "mod/wiki/pagelib.php||mod/wiki/pagelib.php": [
          "File: mod/wiki/pagelib.php -> mod/wiki/pagelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:     function __construct($wiki, $subwiki, $cm) {",
          "382:         global $CFG, $PAGE;",
          "383:         parent::__construct($wiki, $subwiki, $cm);",
          "385:         $PAGE->requires->js_init_call('M.mod_wiki.renew_lock', null, true);",
          "386:     }",
          "",
          "[Removed Lines]",
          "384:         self::$attachmentoptions = array('subdirs' => false, 'maxfiles' => - 1, 'maxbytes' => $CFG->maxbytes, 'accepted_types' => '*');",
          "",
          "[Added Lines]",
          "384:         $showfilemanager = false;",
          "385:         if (has_capability('mod/wiki:managefiles', context_module::instance($cm->id))) {",
          "386:             $showfilemanager = true;",
          "387:         }",
          "388:         self::$attachmentoptions = array('subdirs' => false, 'maxfiles' => - 1, 'maxbytes' => $CFG->maxbytes,",
          "389:                 'accepted_types' => '*', 'enable_filemanagement' => $showfilemanager);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "037e05e8b266bff4835f0d2eea33ef86fb71d585",
      "candidate_info": {
        "commit_hash": "037e05e8b266bff4835f0d2eea33ef86fb71d585",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/037e05e8b266bff4835f0d2eea33ef86fb71d585",
        "files": [
          "lib/editor/atto/lib.php",
          "lib/editor/tinymce/lib.php",
          "lib/form/editor.php",
          "lib/upgrade.txt",
          "mod/wiki/pagelib.php"
        ],
        "message": "MDL-48371 editors: Option for removing managefiles\n\nWe want to remove the managefiles button from the\neditors in the wiki so that students don't delete\neach others files.",
        "before_after_code_files": [
          "lib/editor/atto/lib.php||lib/editor/atto/lib.php",
          "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php",
          "lib/form/editor.php||lib/form/editor.php",
          "mod/wiki/pagelib.php||mod/wiki/pagelib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/editor/atto/lib.php||lib/editor/atto/lib.php",
            "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php",
            "lib/form/editor.php||lib/form/editor.php",
            "mod/wiki/pagelib.php||mod/wiki/pagelib.php"
          ],
          "candidate": [
            "lib/editor/atto/lib.php||lib/editor/atto/lib.php",
            "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php",
            "lib/form/editor.php||lib/form/editor.php",
            "mod/wiki/pagelib.php||mod/wiki/pagelib.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/editor/atto/lib.php||lib/editor/atto/lib.php": [
          "File: lib/editor/atto/lib.php -> lib/editor/atto/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:                     continue;",
          "104:                 }",
          "106:                 $jsplugin = array();",
          "107:                 $jsplugin['name'] = $plugin;",
          "108:                 $jsplugin['params'] = array();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:                 }",
          "107:                 if ($plugin == 'managefiles' && isset($options['enable_filemanagement']) && !$options['enable_filemanagement']) {",
          "108:                     continue;",
          "",
          "---------------"
        ],
        "lib/editor/tinymce/lib.php||lib/editor/tinymce/lib.php": [
          "File: lib/editor/tinymce/lib.php -> lib/editor/tinymce/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:             $config->disabledsubplugins = '';",
          "109:         }",
          "111:         $fontselectlist = empty($config->fontselectlist) ? '' : $config->fontselectlist;",
          "113:         $langrev = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:         if (isset($options['enable_filemanagement']) && !$options['enable_filemanagement']) {",
          "113:             if (!strpos($config->disabledsubplugins, 'managefiles')) {",
          "114:                 $config->disabledsubplugins .= ',managefiles';",
          "115:             }",
          "116:         }",
          "",
          "---------------"
        ],
        "lib/form/editor.php||lib/form/editor.php": [
          "File: lib/form/editor.php -> lib/form/editor.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     protected $_options = array('subdirs' => 0, 'maxbytes' => 0, 'maxfiles' => 0, 'changeformat' => 0,",
          "55:             'areamaxbytes' => FILE_AREA_MAX_BYTES_UNLIMITED, 'context' => null, 'noclean' => 0, 'trusttext' => 0,",
          "",
          "[Removed Lines]",
          "56:             'return_types' => 7);",
          "",
          "[Added Lines]",
          "56:             'return_types' => 7, 'enable_filemanagement' => true);",
          "",
          "---------------"
        ],
        "mod/wiki/pagelib.php||mod/wiki/pagelib.php": [
          "File: mod/wiki/pagelib.php -> mod/wiki/pagelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:     function __construct($wiki, $subwiki, $cm) {",
          "382:         global $CFG, $PAGE;",
          "383:         parent::__construct($wiki, $subwiki, $cm);",
          "385:         $PAGE->requires->js_init_call('M.mod_wiki.renew_lock', null, true);",
          "386:     }",
          "",
          "[Removed Lines]",
          "384:         self::$attachmentoptions = array('subdirs' => false, 'maxfiles' => - 1, 'maxbytes' => $CFG->maxbytes, 'accepted_types' => '*');",
          "",
          "[Added Lines]",
          "384:         $showfilemanager = false;",
          "385:         if (has_capability('mod/wiki:managefiles', context_module::instance($cm->id))) {",
          "386:             $showfilemanager = true;",
          "387:         }",
          "388:         self::$attachmentoptions = array('subdirs' => false, 'maxfiles' => - 1, 'maxbytes' => $CFG->maxbytes,",
          "389:                 'accepted_types' => '*', 'enable_filemanagement' => $showfilemanager);",
          "",
          "---------------"
        ]
      }
    }
  ]
}