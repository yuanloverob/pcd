{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a608f65b2454a83f08a60ba24088a672097540f5",
      "candidate_info": {
        "commit_hash": "a608f65b2454a83f08a60ba24088a672097540f5",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a608f65b2454a83f08a60ba24088a672097540f5",
        "files": [
          "lib/repl.js"
        ],
        "message": "repl: preserve the cursor when redisplaying the prompt on SIGCONT\n\nOtherwise the cursor position was being reset to 0, even when there was\nalready part of a line, which was strange.\n\nPart of #3295.",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "306:   });",
          "308:   rli.on('SIGCONT', function() {",
          "310:   });",
          "312:   self.displayPrompt();",
          "",
          "[Removed Lines]",
          "309:     self.displayPrompt();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f160a45b254e591eb33716311c92be533c6d86c4",
      "candidate_info": {
        "commit_hash": "f160a45b254e591eb33716311c92be533c6d86c4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f160a45b254e591eb33716311c92be533c6d86c4",
        "files": [
          "ChangeLog",
          "doc/community/index.html",
          "src/node_version.h"
        ],
        "message": "2012.04.09 Version 0.6.15 (stable)\n\n* Update npm to 1.1.16\n\n* Show licenses in binary installers.\n\n* unix: add uv_fs_read64, uv_fs_write64 and uv_fs_ftruncate64 (Ben Noordhuis)\n\n* add 64bit offset fs functions (Igor Zinkovsky)\n\n* windows: don't report ENOTSOCK when attempting to bind an udp handle twice (Bert Belder)\n\n* windows: backport pipe-connect-to-file fixes from master (Bert Belder)\n\n* windows: never call fs event callbacks after closing the watcher (Bert Belder)\n\n* fs.readFile: don't make the callback before the fd is closed (Bert Belder)\n\n* windows: use 64bit offsets for uv_fs apis (Igor Zinkovsky)\n\n* Fix #2061: segmentation fault on OS X due to stat size mismatch (Ben Noordhuis)",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 6",
          "31: #define NODE_PATCH_VERSION 15",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "702b46c80dfe3ec8f67c15f802db9d2d86a40a6c",
      "candidate_info": {
        "commit_hash": "702b46c80dfe3ec8f67c15f802db9d2d86a40a6c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/702b46c80dfe3ec8f67c15f802db9d2d86a40a6c",
        "files": [
          "test/simple/test-timers-zero-timeout.js"
        ],
        "message": "Fix invalid timer test\n\nPreviously, setTimeout(fn, 0) would create a new Timer() object,\nwhich has a close() method (and is a bit slower).  The recent\nchange to more closely emulate browser setTimeout behavior dodges\nthis path, so this assertion is no longer valid.",
        "before_after_code_files": [
          "test/simple/test-timers-zero-timeout.js||test/simple/test-timers-zero-timeout.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-timers-zero-timeout.js||test/simple/test-timers-zero-timeout.js": [
          "File: test/simple/test-timers-zero-timeout.js -> test/simple/test-timers-zero-timeout.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:   process.on('exit', function() {",
          "40:     assert.equal(ncalled, 1);",
          "43:   });",
          "44: })();",
          "",
          "[Removed Lines]",
          "42:     assert.equal(timer.close(), -1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9143b43e98ce2ea3d8eea49cc0f171f53ecf7029",
      "candidate_info": {
        "commit_hash": "9143b43e98ce2ea3d8eea49cc0f171f53ecf7029",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9143b43e98ce2ea3d8eea49cc0f171f53ecf7029",
        "files": [
          "src/ngx-queue.h",
          "src/node_isolate.h"
        ],
        "message": "Include ngx-queue.h, fix Windows build.",
        "before_after_code_files": [
          "src/ngx-queue.h||src/ngx-queue.h",
          "src/node_isolate.h||src/node_isolate.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/ngx-queue.h||src/ngx-queue.h": [
          "File: src/ngx-queue.h -> src/ngx-queue.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: #ifndef _NGX_QUEUE_H_INCLUDED_",
          "8: #define _NGX_QUEUE_H_INCLUDED_",
          "11: typedef struct ngx_queue_s  ngx_queue_t;",
          "13: struct ngx_queue_s {",
          "14:     ngx_queue_t  *prev;",
          "15:     ngx_queue_t  *next;",
          "16: };",
          "19: #define ngx_queue_init(q)                                                     \\",
          "20:     (q)->prev = q;                                                            \\",
          "21:     (q)->next = q",
          "24: #define ngx_queue_empty(h)                                                    \\",
          "25:     (h == (h)->prev)",
          "28: #define ngx_queue_insert_head(h, x)                                           \\",
          "29:     (x)->next = (h)->next;                                                    \\",
          "30:     (x)->next->prev = x;                                                      \\",
          "31:     (x)->prev = h;                                                            \\",
          "32:     (h)->next = x",
          "35: #define ngx_queue_insert_after   ngx_queue_insert_head",
          "38: #define ngx_queue_insert_tail(h, x)                                           \\",
          "39:     (x)->prev = (h)->prev;                                                    \\",
          "40:     (x)->prev->next = x;                                                      \\",
          "41:     (x)->next = h;                                                            \\",
          "42:     (h)->prev = x",
          "45: #define ngx_queue_head(h)                                                     \\",
          "46:     (h)->next",
          "49: #define ngx_queue_last(h)                                                     \\",
          "50:     (h)->prev",
          "53: #define ngx_queue_sentinel(h)                                                 \\",
          "54:     (h)",
          "57: #define ngx_queue_next(q)                                                     \\",
          "58:     (q)->next",
          "61: #define ngx_queue_prev(q)                                                     \\",
          "62:     (q)->prev",
          "65: #if (NGX_DEBUG)",
          "67: #define ngx_queue_remove(x)                                                   \\",
          "68:     (x)->next->prev = (x)->prev;                                              \\",
          "69:     (x)->prev->next = (x)->next;                                              \\",
          "70:     (x)->prev = NULL;                                                         \\",
          "71:     (x)->next = NULL",
          "73: #else",
          "75: #define ngx_queue_remove(x)                                                   \\",
          "76:     (x)->next->prev = (x)->prev;                                              \\",
          "77:     (x)->prev->next = (x)->next",
          "79: #endif",
          "82: #define ngx_queue_split(h, q, n)                                              \\",
          "83:     (n)->prev = (h)->prev;                                                    \\",
          "84:     (n)->prev->next = n;                                                      \\",
          "85:     (n)->next = q;                                                            \\",
          "86:     (h)->prev = (q)->prev;                                                    \\",
          "87:     (h)->prev->next = h;                                                      \\",
          "88:     (q)->prev = n;",
          "91: #define ngx_queue_add(h, n)                                                   \\",
          "92:     (h)->prev->next = (n)->next;                                              \\",
          "93:     (n)->next->prev = (h)->prev;                                              \\",
          "94:     (h)->prev = (n)->prev;                                                    \\",
          "95:     (h)->prev->next = h;",
          "98: #define ngx_queue_data(q, type, link)                                         \\",
          "99:     (type *) ((unsigned char *) q - offsetof(type, link))",
          "102: #define ngx_queue_foreach(q, h)                                               \\",
          "103:     for ((q) = ngx_queue_head(h); (q) != (h); (q) = ngx_queue_next(q))",
          "",
          "---------------"
        ],
        "src/node_isolate.h||src/node_isolate.h": [
          "File: src/node_isolate.h -> src/node_isolate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include \"v8.h\"",
          "26: #include \"uv.h\"",
          "27: #include \"node_vars.h\"",
          "29: #ifdef NDEBUG",
          "30: # define NODE_ISOLATE_CHECK(ptr) ((void) (ptr))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #include \"ngx-queue.h\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5866f1a9aa4b489f7a44a5ecc7ac1c1dfe88426a",
      "candidate_info": {
        "commit_hash": "5866f1a9aa4b489f7a44a5ecc7ac1c1dfe88426a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5866f1a9aa4b489f7a44a5ecc7ac1c1dfe88426a",
        "files": [
          "src/node.cc"
        ],
        "message": "Separate per-process and per-thread init logic.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2567: }",
          "2572:   uv_uptime(&prog_start_time);",
          "",
          "[Removed Lines]",
          "2570: char** Init(int argc, char *argv[]) {",
          "",
          "[Added Lines]",
          "2571: char** ProcessInit(int argc, char *argv[]) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2610: #ifdef __POSIX__",
          "2612:   RegisterSignalHandler(SIGPIPE, SIG_IGN);",
          "2613:   RegisterSignalHandler(SIGINT, SignalExit);",
          "2614:   RegisterSignalHandler(SIGTERM, SignalExit);",
          "2615: #endif // __POSIX__",
          "2621:   uv_prepare_start(&prepare_tick_watcher, PrepareTick);",
          "2622:   uv_unref(loop);",
          "2625:   uv_check_start(&check_tick_watcher, node::CheckTick);",
          "2626:   uv_unref(loop);",
          "2629:   uv_unref(loop);",
          "2632:   uv_check_start(&gc_check, node::Check);",
          "2633:   uv_unref(loop);",
          "2636:   uv_unref(loop);",
          "2639:   uv_unref(loop);",
          "2641:   V8::SetFatalErrorHandler(node::OnFatalError);",
          "2646:   v8::Debug::SetDebugMessageDispatchHandler(node::DebugMessageDispatch);",
          "",
          "[Removed Lines]",
          "2618:   uv_loop_t* const loop = uv_default_loop();",
          "2620:   uv_prepare_init(uv_default_loop(), &prepare_tick_watcher);",
          "2624:   uv_check_init(uv_default_loop(), &check_tick_watcher);",
          "2628:   uv_idle_init(uv_default_loop(), &tick_spinner);",
          "2631:   uv_check_init(uv_default_loop(), &gc_check);",
          "2635:   uv_idle_init(uv_default_loop(), &gc_idle);",
          "2638:   uv_timer_init(uv_default_loop(), &gc_timer);",
          "",
          "[Added Lines]",
          "2619:   return argv;",
          "2620: }",
          "2623: void EmitExit(v8::Handle<v8::Object> process_l) {",
          "2625:   Local<Value> emit_v = process_l->Get(String::New(\"emit\"));",
          "2626:   assert(emit_v->IsFunction());",
          "2627:   Local<Function> emit = Local<Function>::Cast(emit_v);",
          "2628:   Local<Value> args[] = { String::New(\"exit\") };",
          "2629:   TryCatch try_catch;",
          "2630:   emit->Call(process_l, 1, args);",
          "2631:   if (try_catch.HasCaught()) {",
          "2632:     FatalException(try_catch);",
          "2633:   }",
          "2634: }",
          "2637: void StartThread(Isolate* isolate, int argc, char** argv) {",
          "2638:   uv_loop_t* loop = isolate->GetLoop();",
          "2640:   uv_prepare_init(loop, &prepare_tick_watcher);",
          "2644:   uv_check_init(loop, &check_tick_watcher);",
          "2648:   uv_idle_init(loop, &tick_spinner);",
          "2651:   uv_check_init(loop, &gc_check);",
          "2655:   uv_idle_init(loop, &gc_idle);",
          "2658:   uv_timer_init(loop, &gc_timer);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2668: #endif // __POSIX__",
          "2669:   }",
          "2686: }",
          "2689: int Start(int argc, char *argv[]) {",
          "2693:   v8::V8::Initialize();",
          "2694:   v8::HandleScope handle_scope;",
          "",
          "[Removed Lines]",
          "2671:   return argv;",
          "2672: }",
          "2675: void EmitExit(v8::Handle<v8::Object> process_l) {",
          "2677:   Local<Value> emit_v = process_l->Get(String::New(\"emit\"));",
          "2678:   assert(emit_v->IsFunction());",
          "2679:   Local<Function> emit = Local<Function>::Cast(emit_v);",
          "2680:   Local<Value> args[] = { String::New(\"exit\") };",
          "2681:   TryCatch try_catch;",
          "2682:   emit->Call(process_l, 1, args);",
          "2683:   if (try_catch.HasCaught()) {",
          "2684:     FatalException(try_catch);",
          "2685:   }",
          "2691:   argv = Init(argc, argv);",
          "",
          "[Added Lines]",
          "2690:   Handle<Object> process_l = SetupProcessObject(argc, argv);",
          "2691:   v8_typed_array::AttachBindings(v8::Context::GetCurrent()->Global());",
          "2695:   Load(process_l);",
          "2702:   uv_run(loop);",
          "2704:   EmitExit(process_l);",
          "2710:   argv = ProcessInit(argc, argv);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2701:   Isolate* isolate = Isolate::New(uv_default_loop());",
          "2720:   isolate->Dispose();",
          "2722: #ifndef NDEBUG",
          "",
          "[Removed Lines]",
          "2703:   Handle<Object> process_l = SetupProcessObject(argc, argv);",
          "2705:   v8_typed_array::AttachBindings(context->Global());",
          "2709:   Load(process_l);",
          "2716:   uv_run(NODE_LOOP());",
          "2718:   EmitExit(process_l);",
          "",
          "[Added Lines]",
          "2721:   StartThread(isolate, argc, argv);",
          "",
          "---------------"
        ]
      }
    }
  ]
}