{
  "cve_id": "CVE-2014-0236",
  "cve_desc": "file before 5.18, as used in the Fileinfo component in PHP before 5.6.0, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a zero root_storage value in a CDF file, related to cdf.c and readcdf.c.",
  "repo": "php/php-src",
  "patch_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
  "patch_info": {
    "commit_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "files": [
      "NEWS",
      "ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c"
    ],
    "message": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
    "before_after_code_files": [
      "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c"
    ]
  },
  "patch_diff": {
    "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c": [
      "File: ext/fileinfo/libmagic/cdf.c -> ext/fileinfo/libmagic/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.53 2013/02/26 16:20:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: int",
      "690: cdf_read_short_stream(const cdf_info_t *info, const cdf_header_t *h,",
      "692: {",
      "693:  size_t i;",
      "694:  const cdf_directory_t *d;",
      "696:  for (i = 0; i < dir->dir_len; i++)",
      "697:   if (dir->dir_tab[i].d_type == CDF_DIR_TYPE_ROOT_STORAGE)",
      "698:    break;",
      "",
      "[Removed Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn)",
      "",
      "[Added Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn,",
      "692:     const cdf_directory_t **root)",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h": [
      "File: ext/fileinfo/libmagic/cdf.h -> ext/fileinfo/libmagic/cdf.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: int cdf_read_ssat(const cdf_info_t *, const cdf_header_t *, const cdf_sat_t *,",
      "301:     cdf_sat_t *);",
      "302: int cdf_read_short_stream(const cdf_info_t *, const cdf_header_t *,",
      "304: int cdf_read_property_info(const cdf_stream_t *, const cdf_header_t *, uint32_t,",
      "305:     cdf_property_info_t **, size_t *, size_t *);",
      "306: int cdf_read_summary_info(const cdf_info_t *, const cdf_header_t *,",
      "",
      "[Removed Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *);",
      "",
      "[Added Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *,",
      "304:     const cdf_directory_t **);",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c": [
      "File: ext/fileinfo/libmagic/readcdf.c -> ext/fileinfo/libmagic/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: # define strcasestr strstr",
      "78: #endif",
      "80: private const char *",
      "81: cdf_app_to_mime(const char *vbuf, const struct nv *nv)",
      "82: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80: static const struct cv {",
      "81:  uint64_t clsid[2];",
      "82:  const char *mime;",
      "83: } clsid2mime[] = {",
      "84:  {",
      "85: #ifdef PHP_WIN32",
      "86:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "87: #else",
      "88:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "89: #endif",
      "90:   \"x-msi\",",
      "91:  }",
      "92: }, clsid2desc[] = {",
      "93:  {",
      "94: #ifdef PHP_WIN32",
      "95:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "96: #else",
      "97:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "98: #endif",
      "99:   \"MSI Installer\",",
      "100:  },",
      "101: };",
      "103: private const char *",
      "104: cdf_clsid_to_mime(const uint64_t clsid[2], const struct cv *cv)",
      "105: {",
      "106:  size_t i;",
      "107:  for (i = 0; cv[i].mime != NULL; i++) {",
      "108:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
      "109:    return cv[i].mime;",
      "110:  }",
      "111:  return NULL;",
      "112: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96: private int",
      "97: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "99: {",
      "100:         size_t i;",
      "101:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "98:     size_t count)",
      "",
      "[Added Lines]",
      "132:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "108:  memset(&ts, 0, sizeof(ts));",
      "110:         for (i = 0; i < count; i++) {",
      "111:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "112:                 switch (info[i].pi_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         if (!NOTMIME(ms) && root_storage)",
      "145:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "163:                                                     buf, vbuf) == -1)",
      "164:                                                         return -1;",
      "165:                                         }",
      "167:         CDF_PROPERTY_NAME_OF_APPLICATION) {",
      "168:      str = cdf_app_to_mime(vbuf, app2mime);",
      "169:     }",
      "",
      "[Removed Lines]",
      "166:                                 } else if (info[i].pi_id ==",
      "",
      "[Added Lines]",
      "203:                                 } else if (str == NULL && info[i].pi_id ==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "218: private int",
      "219: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "221: {",
      "222:         cdf_summary_info_header_t si;",
      "223:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "220:     const cdf_stream_t *sst)",
      "",
      "[Added Lines]",
      "257:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "228:                 return -1;",
      "230:         if (NOTMIME(ms)) {",
      "231:                 if (file_printf(ms, \"Composite Document File V2 Document\")",
      "232:       == -1)",
      "233:                         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:   const char *str;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "255:                                 return -2;",
      "256:                         break;",
      "257:                 }",
      "261:         free(info);",
      "263:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "258:         }",
      "260:         m = cdf_file_property_info(ms, info, count);",
      "",
      "[Added Lines]",
      "297:   if (root_storage) {",
      "298:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "299:    if (str)",
      "300:     if (file_printf(ms, \", %s\", str) == -1)",
      "301:      return -2;",
      "302:    }",
      "303:   }",
      "305:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "275:         int i;",
      "276:         const char *expn = \"\";",
      "277:         const char *corrupt = \"corrupt: \";",
      "279:         info.i_fd = fd;",
      "280:         info.i_buf = buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:         const cdf_directory_t *root_storage;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "308:                 goto out2;",
      "309:         }",
      "312:                 expn = \"Cannot read short stream\";",
      "313:                 goto out3;",
      "314:         }",
      "",
      "[Removed Lines]",
      "311:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst)) == -1) {",
      "",
      "[Added Lines]",
      "357:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst,",
      "358:      &root_storage)) == -1) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "329: #ifdef CDF_DEBUG",
      "330:         cdf_dump_summary_info(&h, &scn);",
      "331: #endif",
      "334:  if (i == 0) {",
      "335:   const char *str = NULL;",
      "336:   cdf_directory_t *d;",
      "337:   char name[__arraycount(d->d_name)];",
      "338:   size_t j, k;",
      "340:    d = &dir.dir_tab[j];",
      "341:    for (k = 0; k < sizeof(name); k++)",
      "342:     name[k] = (char)cdf_tole2(d->d_name[k]);",
      "349:   }",
      "350:   if (NOTMIME(ms)) {",
      "351:    if (str != NULL) {",
      "",
      "[Removed Lines]",
      "332:         if ((i = cdf_file_summary_info(ms, &h, &scn)) < 0)",
      "333:                 expn = \"Can't expand summary_info\";",
      "339:   for (j = 0; j < dir.dir_len; j++) {",
      "343:    if (NOTMIME(ms))",
      "344:     str = cdf_app_to_mime(name, name2desc);",
      "345:    else",
      "346:     str = cdf_app_to_mime(name, name2mime);",
      "347:    if (str != NULL)",
      "348:     break;",
      "",
      "[Added Lines]",
      "379:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "380:             expn = \"Can't expand summary_info\";",
      "388:   for (j = 0; str == NULL && j < dir.dir_len; j++) {",
      "392:    str = cdf_app_to_mime(name,",
      "393:        NOTMIME(ms) ? name2desc : name2mime);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2766926e29c8765230db6ea4ee11b891543a821a",
      "candidate_info": {
        "commit_hash": "2766926e29c8765230db6ea4ee11b891543a821a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/2766926e29c8765230db6ea4ee11b891543a821a",
        "files": [
          "Makefile.gcov"
        ],
        "message": "fix gcov data with some locales (again)",
        "before_after_code_files": [
          "Makefile.gcov||Makefile.gcov"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.gcov||Makefile.gcov": [
          "File: Makefile.gcov -> Makefile.gcov",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  @rm -rf lcov_data/",
          "15:  @$(mkinstalldirs) lcov_data/",
          "16:  @echo",
          "18:  for x in $$files; do \\",
          "19:   echo -n . ;\\",
          "20:   y=`echo $$x | sed -e 's!\\.libs/!!'`; \\",
          "",
          "[Removed Lines]",
          "17:  -@files=`find . -name \\*.gcda -o -name \\*.gcno -o -name \\*.da -o -name \\*.c -o -name \\*.h | sed -e 's/^\\.\\///' | sed -e 's/\\.gcda//g' -e 's/\\.gcno//g' -e 's/\\.da//g' | $(EGREP) $(LCOV_INCLUDE) | sed -e 's/.libs/ZZZZ/g' | sort -h | sed -e 's/ZZZZ/.libs/g' | uniq` ;\\",
          "",
          "[Added Lines]",
          "17:  -@files=`find . -name \\*.gcda -o -name \\*.gcno -o -name \\*.da -o -name \\*.c -o -name \\*.h | sed -e 's/^\\.\\///' | sed -e 's/\\.gcda//g' -e 's/\\.gcno//g' -e 's/\\.da//g' | $(EGREP) $(LCOV_INCLUDE) | sed -e 's/.libs/zzzz/g' | sort | sed -e 's/zzzz/.libs/g' | uniq` ;\\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c38ab260fe3a40cce049c835fb7833de00ab977c",
      "candidate_info": {
        "commit_hash": "c38ab260fe3a40cce049c835fb7833de00ab977c",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/c38ab260fe3a40cce049c835fb7833de00ab977c",
        "files": [
          "ext/standard/basic_functions.c",
          "ext/standard/tests/serialize/serialization_error_001.phpt",
          "ext/standard/tests/serialize/unserialize_consumed.phpt",
          "ext/standard/var.c"
        ],
        "message": "Revert \"Add optional second arg to unserialize()\"\n\nThis reverts commit cfd104582220d578ab1b78a5991065d038e1f931.",
        "before_after_code_files": [
          "ext/standard/basic_functions.c||ext/standard/basic_functions.c",
          "ext/standard/tests/serialize/serialization_error_001.phpt||ext/standard/tests/serialize/serialization_error_001.phpt",
          "ext/standard/tests/serialize/unserialize_consumed.phpt||ext/standard/tests/serialize/unserialize_consumed.phpt",
          "ext/standard/var.c||ext/standard/var.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/standard/basic_functions.c||ext/standard/basic_functions.c": [
          "File: ext/standard/basic_functions.c -> ext/standard/basic_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2649: ZEND_BEGIN_ARG_INFO_EX(arginfo_unserialize, 0, 0, 1)",
          "2650:  ZEND_ARG_INFO(0, variable_representation)",
          "2652: ZEND_END_ARG_INFO()",
          "2654: ZEND_BEGIN_ARG_INFO_EX(arginfo_memory_get_usage, 0, 0, 0)",
          "",
          "[Removed Lines]",
          "2651:  ZEND_ARG_INFO(1, consumed)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/serialization_error_001.phpt||ext/standard/tests/serialize/serialization_error_001.phpt": [
          "File: ext/standard/tests/serialize/serialization_error_001.phpt -> ext/standard/tests/serialize/serialization_error_001.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: var_dump( serialize(1,2) );",
          "26: echo \"Done\";",
          "27: ?>",
          "",
          "[Removed Lines]",
          "24: var_dump( unserialize(1,$x,2) );",
          "",
          "[Added Lines]",
          "24: var_dump( unserialize(1,2) );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: Warning: serialize() expects exactly 1 parameter, 0 given in %s on line 16",
          "32: NULL",
          "35: bool(false)",
          "37: Warning: serialize() expects exactly 1 parameter, 2 given in %s on line 20",
          "38: NULL",
          "41: bool(false)",
          "42: Done",
          "",
          "[Removed Lines]",
          "34: Warning: unserialize() expects at least 1 parameter, 0 given in %s on line 17",
          "40: Warning: unserialize() expects at most 2 parameters, 3 given in %s on line 21",
          "",
          "[Added Lines]",
          "34: Warning: unserialize() expects exactly 1 parameter, 0 given in %s on line 17",
          "40: Warning: unserialize() expects exactly 1 parameter, 2 given in %s on line 21",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/unserialize_consumed.phpt||ext/standard/tests/serialize/unserialize_consumed.phpt": [
          "File: ext/standard/tests/serialize/unserialize_consumed.phpt -> ext/standard/tests/serialize/unserialize_consumed.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/standard/var.c||ext/standard/var.c": [
          "File: ext/standard/var.c -> ext/standard/var.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "951:  int buf_len;",
          "952:  const unsigned char *p;",
          "953:  php_unserialize_data_t var_hash;",
          "957:   RETURN_FALSE;",
          "958:  }",
          "",
          "[Removed Lines]",
          "954:  zval *consumed = NULL;",
          "956:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|z\", &buf, &buf_len, &consumed) == FAILURE) {",
          "",
          "[Added Lines]",
          "955:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &buf, &buf_len) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "972:   RETURN_FALSE;",
          "973:  }",
          "974:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "980: }",
          "",
          "[Removed Lines]",
          "976:  if (consumed) {",
          "977:   zval_dtor(consumed);",
          "978:   ZVAL_LONG(consumed, ((char*)p) - buf);",
          "979:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cdb775906ddfd48fafc872eb905c01134599982a",
      "candidate_info": {
        "commit_hash": "cdb775906ddfd48fafc872eb905c01134599982a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/cdb775906ddfd48fafc872eb905c01134599982a",
        "files": [
          "phpdbg_watch.c"
        ],
        "message": "fix ZEND_DEBUG usage",
        "before_after_code_files": [
          "phpdbg_watch.c||phpdbg_watch.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg_watch.c||phpdbg_watch.c": [
          "File: phpdbg_watch.c -> phpdbg_watch.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "702:     }",
          "703:     case WATCH_ON_HASHTABLE:",
          "706:      if (watch->addr.ht->inconsistent) {",
          "707:       phpdbg_notice(\"Watchpoint %s was unset, removing watchpoint\", watch->str);",
          "708:       zend_hash_del(&PHPDBG_G(watchpoints), watch->str, watch->str_len);",
          "",
          "[Removed Lines]",
          "705: #ifdef ZEND_DEBUG",
          "",
          "[Added Lines]",
          "705: #if ZEND_DEBUG",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c5e6c2a5f58be770603b490d23384b5fc66a38f6",
      "candidate_info": {
        "commit_hash": "c5e6c2a5f58be770603b490d23384b5fc66a38f6",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/c5e6c2a5f58be770603b490d23384b5fc66a38f6",
        "files": [
          "Zend/zend_highlight.c",
          "Zend/zend_indent.c"
        ],
        "message": "Fix Bug #67468  Segfault in highlight_file()/highlight_string() when pgsql.so module is loaded\n\nstr_efree() must be used in zend_highlight() and zend_indent() to free\nstring data assigned to a zval to account for interned strings.",
        "before_after_code_files": [
          "Zend/zend_highlight.c||Zend/zend_highlight.c",
          "Zend/zend_indent.c||Zend/zend_indent.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Zend/zend_highlight.c||Zend/zend_highlight.c": [
          "File: Zend/zend_highlight.c -> Zend/zend_highlight.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:     case T_DOC_COMMENT:",
          "151:      break;",
          "152:     default:",
          "154:      break;",
          "155:    }",
          "156:   }",
          "",
          "[Removed Lines]",
          "153:      efree(token.value.str.val);",
          "",
          "[Added Lines]",
          "153:      str_efree(token.value.str.val);",
          "",
          "---------------"
        ],
        "Zend/zend_indent.c||Zend/zend_indent.c": [
          "File: Zend/zend_indent.c -> Zend/zend_indent.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:    case T_WHITESPACE:",
          "140:     break;",
          "141:    default:",
          "143:     break;",
          "144:    }",
          "145:   }",
          "",
          "[Removed Lines]",
          "142:     efree(token.value.str.val);",
          "",
          "[Added Lines]",
          "142:     str_efree(token.value.str.val);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8d359bbcca52722163f3fdf3550faa79472ea276",
      "candidate_info": {
        "commit_hash": "8d359bbcca52722163f3fdf3550faa79472ea276",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/8d359bbcca52722163f3fdf3550faa79472ea276",
        "files": [
          "ext/zlib/tests/bug65391.phpt"
        ],
        "message": "Test output relies on expose_php being on",
        "before_after_code_files": [
          "ext/zlib/tests/bug65391.phpt||ext/zlitests/bug65391.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/zlib/tests/bug65391.phpt||ext/zlitests/bug65391.phpt": [
          "File: ext/zlib/tests/bug65391.phpt -> ext/zlitests/bug65391.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: ?>",
          "7: --GET--",
          "8: dummy=1",
          "9: --FILE--",
          "10: <?php",
          "11: header(\"Vary: Cookie\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}