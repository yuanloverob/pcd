{
  "cve_id": "CVE-2015-0216",
  "cve_desc": "access.php in the Lesson module in Moodle 2.8.x before 2.8.2 does not set the RISK_XSS bit for graders, which allows remote authenticated users to conduct cross-site scripting (XSS) attacks via crafted essay feedback.",
  "repo": "moodle/moodle",
  "patch_hash": "b9c86823c70a1cba20bca1c4b5b032ee1559e22d",
  "patch_info": {
    "commit_hash": "b9c86823c70a1cba20bca1c4b5b032ee1559e22d",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/b9c86823c70a1cba20bca1c4b5b032ee1559e22d",
    "files": [
      "mod/lesson/db/access.php",
      "mod/lesson/version.php"
    ],
    "message": "MDL-48034 mod_lesson: grade capability missing RISK_XSS",
    "before_after_code_files": [
      "mod/lesson/db/access.php||mod/lesson/db/access.php",
      "mod/lesson/version.php||mod/lesson/version.php"
    ]
  },
  "patch_diff": {
    "mod/lesson/db/access.php||mod/lesson/db/access.php": [
      "File: mod/lesson/db/access.php -> mod/lesson/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "56:     'mod/lesson:grade' => array(",
      "58:         'captype' => 'write',",
      "59:         'contextlevel' => CONTEXT_MODULE,",
      "60:         'archetypes' => array(",
      "",
      "[Removed Lines]",
      "57:         'riskbitmask' => RISK_SPAM,",
      "",
      "[Added Lines]",
      "57:         'riskbitmask' => RISK_SPAM | RISK_XSS,",
      "",
      "---------------"
    ],
    "mod/lesson/version.php||mod/lesson/version.php": [
      "File: mod/lesson/version.php -> mod/lesson/version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: defined('MOODLE_INTERNAL') || die();",
      "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
      "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
      "30: $plugin->cron      = 0;",
      "",
      "[Removed Lines]",
      "27: $plugin->version   = 2014122900;       // The current module version (Date: YYYYMMDDXX)",
      "",
      "[Added Lines]",
      "27: $plugin->version   = 2015010600;       // The current module version (Date: YYYYMMDDXX)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6230f717bf310f03f56b9d3991cadb59ea2dacd7",
      "candidate_info": {
        "commit_hash": "6230f717bf310f03f56b9d3991cadb59ea2dacd7",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/6230f717bf310f03f56b9d3991cadb59ea2dacd7",
        "files": [
          "mod/lesson/backup/moodle2/restore_lesson_stepslib.php",
          "mod/lesson/db/upgrade.php",
          "mod/lesson/editpage.php",
          "mod/lesson/locallib.php",
          "mod/lesson/version.php"
        ],
        "message": "Merge branch 'MDL-48984' of git://github.com/jmvedrine/moodle",
        "before_after_code_files": [
          "mod/lesson/backup/moodle2/restore_lesson_stepslib.php||mod/lesson/backup/moodle2/restore_lesson_stepslib.php",
          "mod/lesson/db/upgrade.php||mod/lesson/db/upgrade.php",
          "mod/lesson/editpage.php||mod/lesson/editpage.php",
          "mod/lesson/locallib.php||mod/lesson/locallib.php",
          "mod/lesson/version.php||mod/lesson/version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ],
          "candidate": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lesson/backup/moodle2/restore_lesson_stepslib.php||mod/lesson/backup/moodle2/restore_lesson_stepslib.php": [
          "File: mod/lesson/backup/moodle2/restore_lesson_stepslib.php -> mod/lesson/backup/moodle2/restore_lesson_stepslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "244:         }",
          "245:         $rs->close();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251:         $sql = 'SELECT a.*",
          "252:                   FROM {lesson_answers} a",
          "253:                   JOIN {lesson_pages} p ON p.id = a.pageid",
          "254:                  WHERE a.answerformat <> :format",
          "255:                    AND a.lessonid = :lessonid",
          "256:                    AND p.qtype IN (1, 8, 20)';",
          "257:         $badanswers = $DB->get_recordset_sql($sql, array('lessonid' => $this->task->get_activityid(), 'format' => FORMAT_MOODLE));",
          "259:         foreach ($badanswers as $badanswer) {",
          "261:             $badanswer->answer = strip_tags($badanswer->answer);",
          "262:             $badanswer->answerformat = FORMAT_MOODLE;",
          "263:             $DB->update_record('lesson_answers', $badanswer);",
          "264:         }",
          "",
          "---------------"
        ],
        "mod/lesson/db/upgrade.php||mod/lesson/db/upgrade.php": [
          "File: mod/lesson/db/upgrade.php -> mod/lesson/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:         upgrade_mod_savepoint(true, 2015030300, 'lesson');",
          "154:     }",
          "156:     return true;",
          "157: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156:     if ($oldversion < 2015030301) {",
          "162:         $sql = 'SELECT a.*",
          "163:                   FROM {lesson_answers} a",
          "164:                   JOIN {lesson_pages} p ON p.id = a.pageid",
          "165:                  WHERE a.answerformat <> :format",
          "166:                    AND p.qtype IN (1, 8, 20)';",
          "167:         $badanswers = $DB->get_recordset_sql($sql, array('format' => FORMAT_MOODLE));",
          "169:         foreach ($badanswers as $badanswer) {",
          "171:             $badanswer->answer = strip_tags($badanswer->answer);",
          "172:             $badanswer->answerformat = FORMAT_MOODLE;",
          "173:             $DB->update_record('lesson_answers', $badanswer);",
          "174:         }",
          "177:         upgrade_mod_savepoint(true, 2015030301, 'lesson');",
          "178:     }",
          "",
          "---------------"
        ],
        "mod/lesson/editpage.php||mod/lesson/editpage.php": [
          "File: mod/lesson/editpage.php -> mod/lesson/editpage.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:         $answereditor = 'answer_editor['.$answerscount.']';",
          "94:         if (is_array($data->$answereditor)) {",
          "95:             $answerdata = $data->$answereditor;",
          "100:         }",
          "102:         $responseeditor = 'response_editor['.$answerscount.']';",
          "103:         if (is_array($data->$responseeditor)) {",
          "104:             $responsedata = $data->$responseeditor;",
          "110:         }",
          "111:         $answerscount++;",
          "112:     }",
          "",
          "[Removed Lines]",
          "96:             $answerdraftid = file_get_submitted_draft_itemid($answereditor);",
          "97:             $answertext = file_prepare_draft_area($answerdraftid, $PAGE->cm->context->id,",
          "98:                     'mod_lesson', 'page_answers', $answer->id, $editoroptions, $answerdata['text']);",
          "99:             $data->$answereditor = array('text' => $answertext, 'format' => $answerdata['format'], 'itemid' => $answerdraftid);",
          "105:             $responsedraftid = file_get_submitted_draft_itemid($responseeditor);",
          "106:             $responsetext = file_prepare_draft_area($responsedraftid, $PAGE->cm->context->id,",
          "107:                     'mod_lesson', 'page_responses', $answer->id, $editoroptions, $responsedata['text']);",
          "108:             $data->$responseeditor = array('text' => $responsetext, 'format' => $responsedata['format'],",
          "109:                     'itemid' => $responsedraftid);",
          "",
          "[Added Lines]",
          "96:             if ($answerdata['format'] != FORMAT_MOODLE) {",
          "97:                 $answerdata = $data->$answereditor;",
          "98:                 $answerdraftid = file_get_submitted_draft_itemid($answereditor);",
          "99:                 $answertext = file_prepare_draft_area($answerdraftid, $PAGE->cm->context->id,",
          "100:                         'mod_lesson', 'page_answers', $answer->id, $editoroptions, $answerdata['text']);",
          "101:                 $data->$answereditor = array('text' => $answertext, 'format' => $answerdata['format'], 'itemid' => $answerdraftid);",
          "102:             } else {",
          "103:                 $data->$answereditor = $answerdata['text'];",
          "104:             }",
          "110:             if ($responsedata['format'] != FORMAT_MOODLE) {",
          "111:                 $responsedraftid = file_get_submitted_draft_itemid($responseeditor);",
          "112:                 $responsetext = file_prepare_draft_area($responsedraftid, $PAGE->cm->context->id,",
          "113:                         'mod_lesson', 'page_responses', $answer->id, $editoroptions, $responsedata['text']);",
          "114:                 $data->$responseeditor = array('text' => $responsetext, 'format' => $responsedata['format'],",
          "115:                         'itemid' => $responsedraftid);",
          "116:             } else {",
          "117:                 $data->$responseeditor = $responsedata['text'];",
          "118:             }",
          "",
          "---------------"
        ],
        "mod/lesson/locallib.php||mod/lesson/locallib.php": [
          "File: mod/lesson/locallib.php -> mod/lesson/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "802:             $this->_form->setType('answer_editor['.$count.']', PARAM_RAW);",
          "803:             $this->_form->setDefault('answer_editor['.$count.']', array('text' => '', 'format' => FORMAT_HTML));",
          "804:         } else {",
          "808:         }",
          "810:         if ($required) {",
          "",
          "[Removed Lines]",
          "805:             $this->_form->addElement('editor', 'answer_editor['.$count.']', $label,",
          "806:                     array('rows' => '4', 'columns' => '80'), array('noclean' => true));",
          "807:             $this->_form->setDefault('answer_editor['.$count.']', array('text' => '', 'format' => FORMAT_MOODLE));",
          "",
          "[Added Lines]",
          "805:             $this->_form->addElement('text', 'answer_editor['.$count.']', $label,",
          "806:                     array('size' => '50', 'maxlength' => '200'));",
          "807:             $this->_form->setType('answer_editor['.$count.']', PARAM_TEXT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2363:                     $this->answers[$i]->timecreated = $this->timecreated;",
          "2364:                 }",
          "2369:                 }",
          "2370:                 if (!empty($properties->response_editor[$i]) && is_array($properties->response_editor[$i])) {",
          "2371:                     $this->answers[$i]->response = $properties->response_editor[$i]['text'];",
          "2372:                     $this->answers[$i]->responseformat = $properties->response_editor[$i]['format'];",
          "",
          "[Removed Lines]",
          "2366:                 if (!empty($properties->answer_editor[$i]) && is_array($properties->answer_editor[$i])) {",
          "2367:                     $this->answers[$i]->answer = $properties->answer_editor[$i]['text'];",
          "2368:                     $this->answers[$i]->answerformat = $properties->answer_editor[$i]['format'];",
          "",
          "[Added Lines]",
          "2367:                 if (!empty($properties->answer_editor[$i])) {",
          "2368:                     if (is_array($properties->answer_editor[$i])) {",
          "2370:                         $this->answers[$i]->answer = $properties->answer_editor[$i]['text'];",
          "2371:                         $this->answers[$i]->answerformat = $properties->answer_editor[$i]['format'];",
          "2372:                     } else {",
          "2374:                         $this->answers[$i]->answer = $properties->answer_editor[$i];",
          "2375:                         $this->answers[$i]->answerformat = FORMAT_MOODLE;",
          "2376:                     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2469:         for ($i = 0; $i < $this->lesson->maxanswers; $i++) {",
          "2470:             $answer = clone($newanswer);",
          "2475:             }",
          "2476:             if (!empty($properties->response_editor[$i]) && is_array($properties->response_editor[$i])) {",
          "2477:                 $answer->response = $properties->response_editor[$i]['text'];",
          "",
          "[Removed Lines]",
          "2472:             if (!empty($properties->answer_editor[$i]) && is_array($properties->answer_editor[$i])) {",
          "2473:                 $answer->answer = $properties->answer_editor[$i]['text'];",
          "2474:                 $answer->answerformat = $properties->answer_editor[$i]['format'];",
          "",
          "[Added Lines]",
          "2481:             if (!empty($properties->answer_editor[$i])) {",
          "2482:                 if (is_array($properties->answer_editor[$i])) {",
          "2484:                     $answer->answer = $properties->answer_editor[$i]['text'];",
          "2485:                     $answer->answerformat = $properties->answer_editor[$i]['format'];",
          "2486:                 } else {",
          "2488:                     $answer->answer = $properties->answer_editor[$i];",
          "2489:                     $answer->answerformat = FORMAT_MOODLE;",
          "2490:                 }",
          "",
          "---------------"
        ],
        "mod/lesson/version.php||mod/lesson/version.php": [
          "File: mod/lesson/version.php -> mod/lesson/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
          "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2015030300;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2015030301;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1cf8ca343fbf760668e695dbfb93291289e2808b",
      "candidate_info": {
        "commit_hash": "1cf8ca343fbf760668e695dbfb93291289e2808b",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/1cf8ca343fbf760668e695dbfb93291289e2808b",
        "files": [
          "mod/lesson/classes/event/page_created.php",
          "mod/lesson/classes/event/page_deleted.php",
          "mod/lesson/classes/event/page_updated.php",
          "mod/lesson/lang/en/lesson.php",
          "mod/lesson/locallib.php",
          "mod/lesson/pagetypes/essay.php",
          "mod/lesson/pagetypes/matching.php",
          "mod/lesson/pagetypes/truefalse.php",
          "mod/lesson/tests/events_test.php",
          "mod/lesson/version.php"
        ],
        "message": "MDL-49183 Lesson: Add additional events",
        "before_after_code_files": [
          "mod/lesson/classes/event/page_created.php||mod/lesson/classes/event/page_created.php",
          "mod/lesson/classes/event/page_deleted.php||mod/lesson/classes/event/page_deleted.php",
          "mod/lesson/classes/event/page_updated.php||mod/lesson/classes/event/page_updated.php",
          "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php",
          "mod/lesson/locallib.php||mod/lesson/locallib.php",
          "mod/lesson/pagetypes/essay.php||mod/lesson/pagetypes/essay.php",
          "mod/lesson/pagetypes/matching.php||mod/lesson/pagetypes/matching.php",
          "mod/lesson/pagetypes/truefalse.php||mod/lesson/pagetypes/truefalse.php",
          "mod/lesson/tests/events_test.php||mod/lesson/tests/events_test.php",
          "mod/lesson/version.php||mod/lesson/version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ],
          "candidate": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lesson/classes/event/page_created.php||mod/lesson/classes/event/page_created.php": [
          "File: mod/lesson/classes/event/page_created.php -> mod/lesson/classes/event/page_created.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace mod_lesson\\event;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "43: class page_created extends \\core\\event\\base {",
          "48:     protected function init() {",
          "49:         $this->data['objecttable'] = 'lesson_pages';",
          "50:         $this->data['crud'] = 'c';",
          "51:         $this->data['edulevel'] = self::LEVEL_TEACHING;",
          "52:     }",
          "59:     public static function get_name() {",
          "60:         return get_string('eventpagecreated', 'mod_lesson');",
          "61:     }",
          "68:     public function get_url() {",
          "69:         return new \\moodle_url('/mod/lesson/view.php', array('id' => $this->contextinstanceid, 'pageid' => $this->objectid));",
          "70:     }",
          "77:     public function get_description() {",
          "78:         return \"The user with id '$this->userid' has created a \".$this->other['pagetype'].\" page with the \".",
          "79:                 \"id '$this->objectid' in the lesson activity with course module id '$this->contextinstanceid'.\";",
          "80:     }",
          "88:     protected function validate_data() {",
          "89:         parent::validate_data();",
          "91:         if (!$this->contextlevel === CONTEXT_MODULE) {",
          "92:             throw new \\coding_exception('Context level must be CONTEXT_MODULE.');",
          "93:         }",
          "94:         if (!isset($this->other['pagetype'])) {",
          "95:             throw new \\coding_exception('The \\'pagetype\\' value must be set in other.');",
          "96:         }",
          "97:     }",
          "98: }",
          "",
          "---------------"
        ],
        "mod/lesson/classes/event/page_deleted.php||mod/lesson/classes/event/page_deleted.php": [
          "File: mod/lesson/classes/event/page_deleted.php -> mod/lesson/classes/event/page_deleted.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace mod_lesson\\event;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "43: class page_deleted extends \\core\\event\\base {",
          "48:     protected function init() {",
          "49:         $this->data['objecttable'] = 'lesson_pages';",
          "50:         $this->data['crud'] = 'd';",
          "51:         $this->data['edulevel'] = self::LEVEL_TEACHING;",
          "52:     }",
          "59:     public static function get_name() {",
          "60:         return get_string('eventpagedeleted', 'mod_lesson');",
          "61:     }",
          "68:     public function get_url() {",
          "69:         return new \\moodle_url('/mod/lesson/view.php', array('id' => $this->contextinstanceid));",
          "70:     }",
          "77:     public function get_description() {",
          "78:         return \"The user with id '$this->userid' has deleted the \".$this->other['pagetype'].\" page with the \".",
          "79:                 \"id '$this->objectid' in the lesson activity with course module id '$this->contextinstanceid'.\";",
          "80:     }",
          "88:     protected function validate_data() {",
          "89:         parent::validate_data();",
          "91:         if (!$this->contextlevel === CONTEXT_MODULE) {",
          "92:             throw new \\coding_exception('Context level must be CONTEXT_MODULE.');",
          "93:         }",
          "94:         if (!isset($this->other['pagetype'])) {",
          "95:             throw new \\coding_exception('The \\'pagetype\\' value must be set in other.');",
          "96:         }",
          "97:     }",
          "98: }",
          "",
          "---------------"
        ],
        "mod/lesson/classes/event/page_updated.php||mod/lesson/classes/event/page_updated.php": [
          "File: mod/lesson/classes/event/page_updated.php -> mod/lesson/classes/event/page_updated.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace mod_lesson\\event;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "42: class page_updated extends \\core\\event\\base {",
          "51:     public static function create_from_lesson_page(\\lesson_page $lessonpage, \\context_module $context) {",
          "52:         $data = array(",
          "53:             'context' => $context,",
          "54:             'objectid' => $lessonpage->properties()->id,",
          "55:             'other' => array(",
          "56:                 'pagetype' => $lessonpage->get_typestring()",
          "57:             )",
          "58:         );",
          "59:         return self::create($data);",
          "60:     }",
          "66:     protected function init() {",
          "67:         $this->data['objecttable'] = 'lesson_pages';",
          "68:         $this->data['crud'] = 'u';",
          "69:         $this->data['edulevel'] = self::LEVEL_TEACHING;",
          "70:     }",
          "77:     public static function get_name() {",
          "78:         return get_string('eventpageupdated', 'mod_lesson');",
          "79:     }",
          "86:     public function get_url() {",
          "87:         return new \\moodle_url('/mod/lesson/view.php', array('id' => $this->contextinstanceid, 'pageid' => $this->objectid));",
          "88:     }",
          "95:     public function get_description() {",
          "96:         return \"The user with id '$this->userid' has updated the \".$this->other['pagetype'].\" page with the \".",
          "97:                 \"id '$this->objectid' in the lesson activity with course module id '$this->contextinstanceid'.\";",
          "98:     }",
          "106:     protected function validate_data() {",
          "107:         parent::validate_data();",
          "109:         if (!$this->contextlevel === CONTEXT_MODULE) {",
          "110:             throw new \\coding_exception('Context level must be CONTEXT_MODULE.');",
          "111:         }",
          "112:         if (!isset($this->other['pagetype'])) {",
          "113:             throw new \\coding_exception('The \\'pagetype\\' value must be set in other.');",
          "114:         }",
          "115:     }",
          "116: }",
          "",
          "---------------"
        ],
        "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php": [
          "File: mod/lesson/lang/en/lesson.php -> mod/lesson/lang/en/lesson.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: $string['eventhighscoresviewed'] = 'Highscores viewed';",
          "182: $string['eventlessonended'] = 'Lesson ended';",
          "183: $string['eventlessonstarted'] = 'Lesson started';",
          "184: $string['eventquestionanswered'] = 'Question answered';",
          "185: $string['eventquestionviewed'] = 'Question viewed';",
          "186: $string['false'] = 'False';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "184: $string['eventpagecreated'] = 'Page created';",
          "185: $string['eventpageupdated'] = 'Page updated';",
          "186: $string['eventpagedeleted'] = 'Page deleted';",
          "",
          "---------------"
        ],
        "mod/lesson/locallib.php||mod/lesson/locallib.php": [
          "File: mod/lesson/locallib.php -> mod/lesson/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1846:         $page = lesson_page::load($newpage, $lesson);",
          "1847:         $page->create_answers($properties);",
          "1849:         $lesson->add_message(get_string('insertedpage', 'lesson').': '.format_string($newpage->title, true), 'notifysuccess');",
          "1851:         return $page;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1850:         $eventparams = array(",
          "1851:             'context' => $context,",
          "1852:             'objectid' => $newpage->id,",
          "1853:             'other' => array(",
          "1854:                 'pagetype' => $page->get_typestring()",
          "1855:                 )",
          "1856:             );",
          "1857:         $event = \\mod_lesson\\event\\page_created::create($eventparams);",
          "1858:         $snapshot = clone($newpage);",
          "1859:         $snapshot->timemodified = 0;",
          "1860:         $event->add_record_snapshot('lesson_pages', $snapshot);",
          "1861:         $event->trigger();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1909:         $DB->delete_records(\"lesson_pages\", array(\"id\" => $this->properties->id));",
          "1912:         $fs->delete_area_files($context->id, 'mod_lesson', 'page_contents', $this->properties->id);",
          "1913:         $fs->delete_area_files($context->id, 'mod_lesson', 'page_answers', $this->properties->id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1926:         $eventparams = array(",
          "1927:             'context' => $context,",
          "1928:             'objectid' => $this->properties->id,",
          "1929:             'other' => array(",
          "1930:                 'pagetype' => $this->get_typestring()",
          "1931:                 )",
          "1932:             );",
          "1933:         $event = \\mod_lesson\\event\\page_deleted::create($eventparams);",
          "1934:         $event->add_record_snapshot('lesson_pages', $this->properties);",
          "1935:         $event->trigger();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2297:         $properties->timemodified = time();",
          "2298:         $properties = file_postupdate_standard_editor($properties, 'contents', array('noclean'=>true, 'maxfiles'=>EDITOR_UNLIMITED_FILES, 'maxbytes'=>$maxbytes), $context, 'mod_lesson', 'page_contents', $properties->id);",
          "2299:         $DB->update_record(\"lesson_pages\", $properties);",
          "2300:         if ($this->type == self::TYPE_STRUCTURE && $this->get_typeid() != LESSON_PAGE_BRANCHTABLE) {",
          "2301:             if (count($answers) > 1) {",
          "2302:                 $answer = array_shift($answers);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2328:         \\mod_lesson\\event\\page_updated::create_from_lesson_page($this, $context)->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/pagetypes/essay.php||mod/lesson/pagetypes/essay.php": [
          "File: mod/lesson/pagetypes/essay.php -> mod/lesson/pagetypes/essay.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:         $properties = file_postupdate_standard_editor($properties, 'contents', array('noclean'=>true, 'maxfiles'=>EDITOR_UNLIMITED_FILES, 'maxbytes'=>$PAGE->course->maxbytes), context_module::instance($PAGE->cm->id), 'mod_lesson', 'page_contents', $properties->id);",
          "165:         $DB->update_record(\"lesson_pages\", $properties);",
          "167:         if (!array_key_exists(0, $this->answers)) {",
          "168:             $this->answers[0] = new stdClass;",
          "169:             $this->answers[0]->lessonid = $this->lesson->id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:         \\mod_lesson\\event\\page_updated::create_from_lesson_page($this, $context)->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/pagetypes/matching.php||mod/lesson/pagetypes/matching.php": [
          "File: mod/lesson/pagetypes/matching.php -> mod/lesson/pagetypes/matching.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:         $properties = file_postupdate_standard_editor($properties, 'contents', array('noclean'=>true, 'maxfiles'=>EDITOR_UNLIMITED_FILES, 'maxbytes'=>$PAGE->course->maxbytes), context_module::instance($PAGE->cm->id), 'mod_lesson', 'page_contents', $properties->id);",
          "322:         $DB->update_record(\"lesson_pages\", $properties);",
          "325:         $this->lesson->maxanswers += 2;",
          "326:         for ($i = 0; $i < $this->lesson->maxanswers; $i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "325:         \\mod_lesson\\event\\page_updated::create_from_lesson_page($this, $context)->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/pagetypes/truefalse.php||mod/lesson/pagetypes/truefalse.php": [
          "File: mod/lesson/pagetypes/truefalse.php -> mod/lesson/pagetypes/truefalse.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:         $properties = file_postupdate_standard_editor($properties, 'contents', array('noclean'=>true, 'maxfiles'=>EDITOR_UNLIMITED_FILES, 'maxbytes'=>$PAGE->course->maxbytes), context_module::instance($PAGE->cm->id), 'mod_lesson', 'page_contents', $properties->id);",
          "178:         $DB->update_record(\"lesson_pages\", $properties);",
          "181:         $this->lesson->maxanswers = 2;",
          "182:         for ($i = 0; $i < $this->lesson->maxanswers; $i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181:         \\mod_lesson\\event\\page_updated::create_from_lesson_page($this, $context)->trigger();",
          "",
          "---------------"
        ],
        "mod/lesson/tests/events_test.php||mod/lesson/tests/events_test.php": [
          "File: mod/lesson/tests/events_test.php -> mod/lesson/tests/events_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:         $this->lesson = new lesson($lesson);",
          "54:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:     public function test_page_created() {",
          "63:         $generator = $this->getDataGenerator()->get_plugin_generator('mod_lesson');",
          "65:         $sink = $this->redirectEvents();",
          "66:         $pagerecord = $generator->create_content($this->lesson);",
          "67:         $page = $this->lesson->load_page($pagerecord->id);",
          "70:         $events = $sink->get_events();",
          "71:         $event = reset($events);",
          "74:         $this->assertInstanceOf('\\mod_lesson\\event\\page_created', $event);",
          "75:         $this->assertEquals($page->id, $event->objectid);",
          "76:         $this->assertEventContextNotUsed($event);",
          "77:         $this->assertDebuggingNotCalled();",
          "78:     }",
          "84:     public function test_page_deleted() {",
          "87:         $generator = $this->getDataGenerator()->get_plugin_generator('mod_lesson');",
          "89:         $pagerecord = $generator->create_content($this->lesson);",
          "91:         $page = $this->lesson->load_page($pagerecord->id);",
          "93:         $sink = $this->redirectEvents();",
          "94:         $page->delete();",
          "97:         $events = $sink->get_events();",
          "98:         $event = reset($events);",
          "101:         $this->assertInstanceOf('\\mod_lesson\\event\\page_deleted', $event);",
          "102:         $this->assertEquals($page->id, $event->objectid);",
          "103:         $this->assertEventContextNotUsed($event);",
          "104:         $this->assertDebuggingNotCalled();",
          "105:     }",
          "113:     public function test_page_updated() {",
          "116:         $eventparams = array(",
          "117:             'context' => context_module::instance($this->lesson->properties()->cmid),",
          "118:             'objectid' => 25,",
          "119:             'other' => array(",
          "120:                 'pagetype' => 'True/false'",
          "121:                 )",
          "122:         );",
          "124:         $event = \\mod_lesson\\event\\page_updated::create($eventparams);",
          "127:         $sink = $this->redirectEvents();",
          "128:         $event->trigger();",
          "129:         $events = $sink->get_events();",
          "130:         $event = reset($events);",
          "133:         $this->assertInstanceOf('\\mod_lesson\\event\\page_updated', $event);",
          "134:         $this->assertEquals(25, $event->objectid);",
          "135:         $this->assertEquals('True/false', $event->other['pagetype']);",
          "136:         $this->assertEventContextNotUsed($event);",
          "137:         $this->assertDebuggingNotCalled();",
          "138:     }",
          "",
          "---------------"
        ],
        "mod/lesson/version.php||mod/lesson/version.php": [
          "File: mod/lesson/version.php -> mod/lesson/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
          "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2015021800;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2015021900;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25345cb4cd2366be97264f7479aff774ae5397b4",
      "candidate_info": {
        "commit_hash": "25345cb4cd2366be97264f7479aff774ae5397b4",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/25345cb4cd2366be97264f7479aff774ae5397b4",
        "files": [
          "mod/lesson/backup/moodle2/backup_lesson_stepslib.php",
          "mod/lesson/backup/moodle2/restore_lesson_stepslib.php",
          "mod/lesson/db/install.xml",
          "mod/lesson/db/upgrade.php",
          "mod/lesson/lang/en/lesson.php",
          "mod/lesson/lib.php",
          "mod/lesson/locallib.php",
          "mod/lesson/mod_form.php",
          "mod/lesson/tests/behat/completion_condition_end_reached.feature",
          "mod/lesson/upgrade.txt",
          "mod/lesson/version.php",
          "mod/lesson/view.php"
        ],
        "message": "MDL-48244 Lesson: add custom end of lesson reached completion rule",
        "before_after_code_files": [
          "mod/lesson/backup/moodle2/backup_lesson_stepslib.php||mod/lesson/backup/moodle2/backup_lesson_stepslib.php",
          "mod/lesson/backup/moodle2/restore_lesson_stepslib.php||mod/lesson/backup/moodle2/restore_lesson_stepslib.php",
          "mod/lesson/db/upgrade.php||mod/lesson/db/upgrade.php",
          "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php",
          "mod/lesson/lib.php||mod/lesson/lib.php",
          "mod/lesson/locallib.php||mod/lesson/locallib.php",
          "mod/lesson/mod_form.php||mod/lesson/mod_form.php",
          "mod/lesson/tests/behat/completion_condition_end_reached.feature||mod/lesson/tests/behat/completion_condition_end_reached.feature",
          "mod/lesson/version.php||mod/lesson/version.php",
          "mod/lesson/view.php||mod/lesson/view.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ],
          "candidate": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lesson/backup/moodle2/backup_lesson_stepslib.php||mod/lesson/backup/moodle2/backup_lesson_stepslib.php": [
          "File: mod/lesson/backup/moodle2/backup_lesson_stepslib.php -> mod/lesson/backup/moodle2/backup_lesson_stepslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:         $lesson = new backup_nested_element('lesson', array('id'), array(",
          "79:         ));",
          "",
          "[Removed Lines]",
          "72:             'course','name','practice','modattempts','usepassword','password',",
          "73:             'dependency','conditions','grade','custom','ongoing','usemaxgrade',",
          "74:             'maxanswers','maxattempts','review','nextpagedefault','feedback',",
          "75:             'minquestions','maxpages','timed','maxtime','retake','activitylink',",
          "76:             'mediafile','mediaheight','mediawidth','mediaclose','slideshow',",
          "77:             'width','height','bgcolor','displayleft','displayleftif','progressbar',",
          "78:             'showhighscores','maxhighscores','available','deadline','timemodified'",
          "",
          "[Added Lines]",
          "72:             'course', 'name', 'practice', 'modattempts', 'usepassword', 'password',",
          "73:             'dependency', 'conditions', 'grade', 'custom', 'ongoing', 'usemaxgrade',",
          "74:             'maxanswers', 'maxattempts', 'review', 'nextpagedefault', 'feedback',",
          "75:             'minquestions', 'maxpages', 'timed', 'maxtime', 'retake', 'activitylink',",
          "76:             'mediafile', 'mediaheight', 'mediawidth', 'mediaclose', 'slideshow',",
          "77:             'width', 'height', 'bgcolor', 'displayleft', 'displayleftif', 'progressbar',",
          "78:             'showhighscores', 'maxhighscores', 'available', 'deadline', 'timemodified',",
          "79:             'completionendreached'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:         $timers = new backup_nested_element('timers');",
          "142:         $timer = new backup_nested_element('timer', array('id'), array(",
          "144:         ));",
          "",
          "[Removed Lines]",
          "143:             'userid','starttime','lessontime'",
          "",
          "[Added Lines]",
          "144:             'userid', 'starttime', 'lessontime', 'completed'",
          "",
          "---------------"
        ],
        "mod/lesson/backup/moodle2/restore_lesson_stepslib.php||mod/lesson/backup/moodle2/restore_lesson_stepslib.php": [
          "File: mod/lesson/backup/moodle2/restore_lesson_stepslib.php -> mod/lesson/backup/moodle2/restore_lesson_stepslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:             unset($data->showhighscores);",
          "73:         }",
          "76:         $newitemid = $DB->insert_record('lesson', $data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:         if (!isset($data->completionendreached)) {",
          "77:             $data->completionendreached = 0;",
          "78:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175:         $data->userid = $this->get_mappingid('user', $data->userid);",
          "176:         $data->starttime = $this->apply_date_offset($data->starttime);",
          "177:         $data->lessontime = $this->apply_date_offset($data->lessontime);",
          "179:         $newitemid = $DB->insert_record('lesson_timer', $data);",
          "180:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "184:         if (!isset($data->completed)) {",
          "185:             $data->completed = 0;",
          "186:         }",
          "",
          "---------------"
        ],
        "mod/lesson/db/upgrade.php||mod/lesson/db/upgrade.php": [
          "File: mod/lesson/db/upgrade.php -> mod/lesson/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:     return true;",
          "106: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:     if ($oldversion < 2014112300) {",
          "108:         $table = new xmldb_table('lesson');",
          "109:         $field = new xmldb_field('completionendreached', XMLDB_TYPE_INTEGER, '1', null, null, null, '0', 'timemodified');",
          "112:         if (!$dbman->field_exists($table, $field)) {",
          "113:             $dbman->add_field($table, $field);",
          "114:         }",
          "117:         $table = new xmldb_table('lesson_timer');",
          "118:         $field = new xmldb_field('completed', XMLDB_TYPE_INTEGER, '1', null, null, null, '0', 'lessontime');",
          "121:         if (!$dbman->field_exists($table, $field)) {",
          "122:             $dbman->add_field($table, $field);",
          "123:         }",
          "125:         upgrade_mod_savepoint(true, 2014112300, 'lesson');",
          "126:     }",
          "",
          "---------------"
        ],
        "mod/lesson/lang/en/lesson.php||mod/lesson/lang/en/lesson.php": [
          "File: mod/lesson/lang/en/lesson.php -> mod/lesson/lang/en/lesson.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "94: $string['completed'] = 'Completed';",
          "95: $string['completederror'] = 'Complete the lesson';",
          "96: $string['completethefollowingconditions'] = 'You must complete the following condition(s) in <b>{$a}</b> lesson before you can proceed.';",
          "97: $string['conditionsfordependency'] = 'Condition(s) for the dependency';",
          "98: $string['configactionaftercorrectanswer'] = 'The default action to take after a correct answer';",
          "99: $string['configmaxanswers'] = 'Default maximum number of answers per page';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97: $string['completionendreached'] = 'Require end reached';",
          "98: $string['completionendreached_desc'] = 'Student must reach the end of lesson page to complete this activity';",
          "",
          "---------------"
        ],
        "mod/lesson/lib.php||mod/lesson/lib.php": [
          "File: mod/lesson/lib.php -> mod/lesson/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "750:             return true;",
          "751:         case FEATURE_GRADE_HAS_GRADE:",
          "752:             return true;",
          "753:         case FEATURE_GRADE_OUTCOMES:",
          "754:             return true;",
          "755:         case FEATURE_BACKUP_MOODLE2:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "753:         case FEATURE_COMPLETION_HAS_RULES:",
          "754:             return true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "761:     }",
          "762: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "776: function lesson_get_completion_state($course, $cm, $userid, $type) {",
          "777:     global $CFG, $DB;",
          "780:     $lesson = $DB->get_record('lesson', array('id' => $cm->instance), '*',",
          "781:             MUST_EXIST);",
          "784:     if ($lesson->completionendreached) {",
          "785:         return $DB->record_exists('lesson_timer', array(",
          "786:                 'lessonid' => $lesson->id, 'userid' => $userid, 'completed' => 1));",
          "787:     } else {",
          "789:         return $type;",
          "790:     }",
          "791: }",
          "",
          "---------------"
        ],
        "mod/lesson/locallib.php||mod/lesson/locallib.php": [
          "File: mod/lesson/locallib.php -> mod/lesson/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1255:         global $USER, $DB;",
          "",
          "[Removed Lines]",
          "1254:     public function update_timer($restart=false, $continue=false) {",
          "",
          "[Added Lines]",
          "1254:     public function update_timer($restart=false, $continue=false, $endreached =false) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1272:         }",
          "1274:         $timer->lessontime = time();",
          "1275:         $DB->update_record('lesson_timer', $timer);",
          "1276:         return $timer;",
          "1277:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1275:         $timer->completed = $endreached;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1295:         ));",
          "1296:         $event->trigger();",
          "1299:     }",
          "",
          "[Removed Lines]",
          "1298:         return $this->update_timer(false, false);",
          "",
          "[Added Lines]",
          "1299:         return $this->update_timer(false, false, true);",
          "",
          "---------------"
        ],
        "mod/lesson/mod_form.php||mod/lesson/mod_form.php": [
          "File: mod/lesson/mod_form.php -> mod/lesson/mod_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "344:         return $errors;",
          "345:     }",
          "346: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:     public function add_completion_rules() {",
          "353:         $mform = $this->_form;",
          "355:         $mform->addElement('checkbox', 'completionendreached', get_string('completionendreached', 'lesson'),",
          "356:                 get_string('completionendreached_desc', 'lesson'));",
          "357:         return array('completionendreached');",
          "358:     }",
          "366:     public function completion_rule_enabled($data) {",
          "367:         return !empty($data['completionendreached']);",
          "368:     }",
          "",
          "---------------"
        ],
        "mod/lesson/tests/behat/completion_condition_end_reached.feature||mod/lesson/tests/behat/completion_condition_end_reached.feature": [
          "File: mod/lesson/tests/behat/completion_condition_end_reached.feature -> mod/lesson/tests/behat/completion_condition_end_reached.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @mod @mod_lesson",
          "2: Feature: Set end of lesson reached as a completion condition for a lesson",
          "3:   In order to ensure students really see all lesson pages",
          "4:   As a teacher",
          "5:   I need to set end of lesson reached to mark the lesson activity as completed",
          "7:   @javascript",
          "8:   Scenario: Set end reached as a condition",
          "9:     Given the following \"users\" exist:",
          "10:       | username | firstname | lastname | email |",
          "11:       | student1 | Student | 1 | student1@asd.com |",
          "12:       | teacher1 | Teacher | 1 | teacher1@asd.com |",
          "13:     And the following \"courses\" exist:",
          "14:       | fullname | shortname | category |",
          "15:       | Course 1 | C1 | 0 |",
          "16:     And the following \"course enrolments\" exist:",
          "17:       | user | course | role |",
          "18:       | teacher1 | C1 | editingteacher |",
          "19:       | student1 | C1 | student |",
          "20:     And I log in as \"admin\"",
          "21:     And I set the following administration settings values:",
          "22:       | Enable completion tracking | 1 |",
          "23:     And I log out",
          "24:     And I log in as \"teacher1\"",
          "25:     And I follow \"Course 1\"",
          "26:     And I turn editing mode on",
          "27:     And I click on \"Edit settings\" \"link\" in the \"Administration\" \"block\"",
          "28:     And I set the following fields to these values:",
          "29:       | Enable completion tracking | Yes |",
          "30:     And I press \"Save and display\"",
          "31:     And I add a \"Lesson\" to section \"1\" and I fill the form with:",
          "32:       | Name | Test lesson |",
          "33:       | Description | Test lesson description |",
          "34:       | Completion tracking | Show activity as complete when conditions are met |",
          "35:       | completionendreached | 1 |",
          "36:     And I follow \"Test lesson\"",
          "37:     And I follow \"Add a content page\"",
          "38:     And I set the following fields to these values:",
          "39:       | Page title | First page name |",
          "40:       | Page contents | First page contents |",
          "41:       | id_answer_editor_0 | Next page |",
          "42:       | id_jumpto_0 | Next page |",
          "43:     And I press \"Save page\"",
          "44:     And I set the field \"qtype\" to \"Add a content page\"",
          "45:     And I set the following fields to these values:",
          "46:       | Page title | Second page name |",
          "47:       | Page contents | Second page contents |",
          "48:       | id_answer_editor_0 | Previous page |",
          "49:       | id_jumpto_0 | Previous page |",
          "50:       | id_answer_editor_1 | Next page |",
          "51:       | id_jumpto_1 | Next page |",
          "52:     And I press \"Save page\"",
          "53:     And I log out",
          "54:     When I log in as \"student1\"",
          "55:     And I follow \"Course 1\"",
          "56:     Then I hover \"//li[contains(concat(' ', normalize-space(@class), ' '), ' modtype_lesson ')]/descendant::img[@alt='Not completed: Test lesson']\" \"xpath_element\"",
          "57:     And I follow \"Test lesson\"",
          "58:     And I press \"Next page\"",
          "59:     And I follow \"Course 1\"",
          "60:     And I hover \"//li[contains(concat(' ', normalize-space(@class), ' '), ' modtype_lesson ')]/descendant::img[@alt='Not completed: Test lesson']\" \"xpath_element\"",
          "61:     And I follow \"Course 1\"",
          "62:     And I follow \"Test lesson\"",
          "63:     And I press \"Next page\"",
          "64:     And I press \"Next page\"",
          "65:     And I follow \"Course 1\"",
          "66:     And I hover \"//li[contains(concat(' ', normalize-space(@class), ' '), ' modtype_lesson ')]/descendant::img[@alt='Completed: Test lesson']\" \"xpath_element\"",
          "67:     And I log out",
          "68:     And I log in as \"teacher1\"",
          "69:     And I follow \"Course 1\"",
          "70:     And \"Student 1\" user has completed \"Test lesson\" activity",
          "",
          "---------------"
        ],
        "mod/lesson/version.php||mod/lesson/version.php": [
          "File: mod/lesson/version.php -> mod/lesson/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
          "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2014111000;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2014112300;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ],
        "mod/lesson/view.php||mod/lesson/view.php": [
          "File: mod/lesson/view.php -> mod/lesson/view.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "434:         $lesson->stop_timer();",
          "435:         $gradeinfo = lesson_grade($lesson, $ntries);",
          "437:         if ($gradeinfo->attempts) {",
          "438:             if (!$lesson->custom) {",
          "439:                 $lessoncontent .= $lessonoutput->paragraph(get_string(\"numberofpagesviewed\", \"lesson\", $gradeinfo->nquestions), 'center');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "438:         $completion = new completion_info($course);",
          "439:         if ($completion->is_enabled($cm) && $lesson->completionendreached) {",
          "440:             $completion->update_state($cm, COMPLETION_COMPLETE);",
          "441:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a4caa0128cafdf65bd684a0b1615059332461cf",
      "candidate_info": {
        "commit_hash": "6a4caa0128cafdf65bd684a0b1615059332461cf",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/6a4caa0128cafdf65bd684a0b1615059332461cf",
        "files": [
          "mod/lesson/backup/moodle2/backup_lesson_stepslib.php",
          "mod/lesson/backup/moodle2/restore_lesson_stepslib.php",
          "mod/lesson/db/install.xml",
          "mod/lesson/db/upgrade.php",
          "mod/lesson/pagetypes/branchtable.php",
          "mod/lesson/tests/behat/completion_condition_end_reached.feature",
          "mod/lesson/tests/behat/lesson_student_resume.feature",
          "mod/lesson/version.php",
          "mod/lesson/view.php"
        ],
        "message": "Merge branch 'MDL-34006_m29v6' of https://github.com/sbourget/moodle\n\nConflicts:\n\tmod/lesson/version.php\n\tmod/lesson/db/upgrade.php\n\tmod/lesson/db/install.xml",
        "before_after_code_files": [
          "mod/lesson/backup/moodle2/backup_lesson_stepslib.php||mod/lesson/backup/moodle2/backup_lesson_stepslib.php",
          "mod/lesson/backup/moodle2/restore_lesson_stepslib.php||mod/lesson/backup/moodle2/restore_lesson_stepslib.php",
          "mod/lesson/db/upgrade.php||mod/lesson/db/upgrade.php",
          "mod/lesson/pagetypes/branchtable.php||mod/lesson/pagetypes/branchtable.php",
          "mod/lesson/tests/behat/completion_condition_end_reached.feature||mod/lesson/tests/behat/completion_condition_end_reached.feature",
          "mod/lesson/tests/behat/lesson_student_resume.feature||mod/lesson/tests/behat/lesson_student_resume.feature",
          "mod/lesson/version.php||mod/lesson/version.php",
          "mod/lesson/view.php||mod/lesson/view.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ],
          "candidate": [
            "mod/lesson/version.php||mod/lesson/version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lesson/backup/moodle2/backup_lesson_stepslib.php||mod/lesson/backup/moodle2/backup_lesson_stepslib.php": [
          "File: mod/lesson/backup/moodle2/backup_lesson_stepslib.php -> mod/lesson/backup/moodle2/backup_lesson_stepslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:         $branches = new backup_nested_element('branches');",
          "121:         $branch = new backup_nested_element('branch', array('id'), array(",
          "123:         ));",
          "",
          "[Removed Lines]",
          "122:             'userid','retry','flag','timeseen'",
          "",
          "[Added Lines]",
          "122:              'userid', 'retry', 'flag', 'timeseen', 'nextpageid'",
          "",
          "---------------"
        ],
        "mod/lesson/backup/moodle2/restore_lesson_stepslib.php||mod/lesson/backup/moodle2/restore_lesson_stepslib.php": [
          "File: mod/lesson/backup/moodle2/restore_lesson_stepslib.php -> mod/lesson/backup/moodle2/restore_lesson_stepslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "233:         }",
          "234:         $rs->close();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "237:         $rs = $DB->get_recordset('lesson_branch', array('lessonid' => $this->task->get_activityid()),",
          "238:                                  '', 'id, nextpageid');",
          "239:         foreach ($rs as $answer) {",
          "240:             if ($answer->nextpageid > 0) {",
          "241:                 $answer->nextpageid = $this->get_mappingid('lesson_page', $answer->nextpageid);",
          "242:                 $DB->update_record('lesson_branch', $answer);",
          "243:             }",
          "244:         }",
          "245:         $rs->close();",
          "",
          "---------------"
        ],
        "mod/lesson/db/upgrade.php||mod/lesson/db/upgrade.php": [
          "File: mod/lesson/db/upgrade.php -> mod/lesson/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:         upgrade_mod_savepoint(true, 2014122900, 'lesson');",
          "139:     }",
          "140:     return true;",
          "141: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141:     if ($oldversion < 2015030300) {",
          "144:         $table = new xmldb_table('lesson_branch');",
          "145:         $field = new xmldb_field('nextpageid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, '0', 'timeseen');",
          "148:         if (!$dbman->field_exists($table, $field)) {",
          "149:             $dbman->add_field($table, $field);",
          "150:         }",
          "153:         upgrade_mod_savepoint(true, 2015030300, 'lesson');",
          "154:     }",
          "",
          "---------------"
        ],
        "mod/lesson/pagetypes/branchtable.php||mod/lesson/pagetypes/branchtable.php": [
          "File: mod/lesson/pagetypes/branchtable.php -> mod/lesson/pagetypes/branchtable.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:         } else {",
          "174:             $retries = 0;",
          "175:         }",
          "187:         $context = context_module::instance($PAGE->cm->id);",
          "",
          "[Removed Lines]",
          "176:         $branch = new stdClass;",
          "177:         $branch->lessonid = $this->lesson->id;",
          "178:         $branch->userid = $USER->id;",
          "179:         $branch->pageid = $this->properties->id;",
          "180:         $branch->retry = $retries;",
          "181:         $branch->flag = $branchflag;",
          "182:         $branch->timeseen = time();",
          "184:         $DB->insert_record(\"lesson_branch\", $branch);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "207:         } elseif ($newpageid == LESSON_RANDOMBRANCH) {",
          "208:             $newpageid = lesson_unseen_branch_jump($this->lesson, $USER->id);",
          "209:         }",
          "212:     }",
          "214:     public function display_answers(html_table $table) {",
          "",
          "[Removed Lines]",
          "211:         redirect(new moodle_url('/mod/lesson/view.php', array('id'=>$PAGE->cm->id,'pageid'=>$newpageid)));",
          "",
          "[Added Lines]",
          "203:         $branch = new stdClass;",
          "204:         $branch->lessonid = $this->lesson->id;",
          "205:         $branch->userid = $USER->id;",
          "206:         $branch->pageid = $this->properties->id;",
          "207:         $branch->retry = $retries;",
          "208:         $branch->flag = $branchflag;",
          "209:         $branch->timeseen = time();",
          "210:         $branch->nextpageid = $newpageid;",
          "211:         $DB->insert_record(\"lesson_branch\", $branch);",
          "213:         redirect(new moodle_url('/mod/lesson/view.php', array('id' => $PAGE->cm->id, 'pageid' => $newpageid)));",
          "",
          "---------------"
        ],
        "mod/lesson/tests/behat/completion_condition_end_reached.feature||mod/lesson/tests/behat/completion_condition_end_reached.feature": [
          "File: mod/lesson/tests/behat/completion_condition_end_reached.feature -> mod/lesson/tests/behat/completion_condition_end_reached.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:     And I hover \"//li[contains(concat(' ', normalize-space(@class), ' '), ' modtype_lesson ')]/descendant::img[@alt='Not completed: Test lesson']\" \"xpath_element\"",
          "61:     And I follow \"Course 1\"",
          "62:     And I follow \"Test lesson\"",
          "63:     And I press \"Next page\"",
          "64:     And I press \"Next page\"",
          "65:     And I follow \"Course 1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:     And I should see \"You have seen more than one page of this lesson already.\"",
          "64:     And I should see \"Do you want to start at the last page you saw?\"",
          "65:     And I follow \"No\"",
          "",
          "---------------"
        ],
        "mod/lesson/tests/behat/lesson_student_resume.feature||mod/lesson/tests/behat/lesson_student_resume.feature": [
          "File: mod/lesson/tests/behat/lesson_student_resume.feature -> mod/lesson/tests/behat/lesson_student_resume.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @mod @mod_lesson",
          "2: Feature: In a lesson activity a student should",
          "3:   be able to close the lesson and then later resume.",
          "5:   Background:",
          "6:     Given the following \"users\" exist:",
          "7:       | username | firstname | lastname | email |",
          "8:       | teacher1 | Teacher | 1 | teacher1@asd.com |",
          "9:       | student1 | Student | 1 | student1@asd.com |",
          "10:     And the following \"courses\" exist:",
          "11:       | fullname | shortname | category |",
          "12:       | Course 1 | C1 | 0 |",
          "13:     And the following \"course enrolments\" exist:",
          "14:       | user | course | role |",
          "15:       | teacher1 | C1 | editingteacher |",
          "16:       | student1 | C1 | student |",
          "17:     And I log in as \"teacher1\"",
          "18:     And I follow \"Course 1\"",
          "19:     And I turn editing mode on",
          "20:     And I add a \"Lesson\" to section \"1\"",
          "21:     And I set the following fields to these values:",
          "22:       | Name | Test lesson name |",
          "23:       | Description | Test lesson description |",
          "24:       | Re-takes allowed | Yes |",
          "25:     And I press \"Save and return to course\"",
          "26:     And I follow \"Test lesson name\"",
          "28:   @javascript",
          "29:   Scenario: resume a lesson with both content then question pages",
          "30:     Given I follow \"Add a content page\"",
          "31:     And I set the following fields to these values:",
          "32:       | Page title | First page name |",
          "33:       | Page contents | First page contents |",
          "34:       | id_answer_editor_0 | Next page |",
          "35:       | id_jumpto_0 | Next page |",
          "36:     And I press \"Save page\"",
          "37:     And I set the field \"qtype\" to \"Question\"",
          "38:     And I set the field \"Select a question type\" to \"True/false\"",
          "39:     And I press \"Add a question page\"",
          "40:     And I set the following fields to these values:",
          "41:       | Page title | True/false question 2 |",
          "42:       | Page contents | Kermit is a frog |",
          "43:       | id_answer_editor_0 | True |",
          "44:       | id_response_editor_0 | Correct |",
          "45:       | id_jumpto_0 | Next page |",
          "46:       | id_answer_editor_1 | False |",
          "47:       | id_response_editor_1 | Wrong |",
          "48:       | id_jumpto_1 | This page |",
          "49:     And I press \"Save page\"",
          "50:     And I set the field \"qtype\" to \"Question\"",
          "51:     And I set the field \"Select a question type\" to \"True/false\"",
          "52:     And I press \"Add a question page\"",
          "53:     And I set the following fields to these values:",
          "54:       | Page title | True/false question 1 |",
          "55:       | Page contents | Paper is made from trees. |",
          "56:       | id_answer_editor_0 | True |",
          "57:       | id_response_editor_0 | Correct |",
          "58:       | id_jumpto_0 | Next page |",
          "59:       | id_answer_editor_1 | False |",
          "60:       | id_response_editor_1 | Wrong |",
          "61:       | id_jumpto_1 | This page |",
          "62:     And I press \"Save page\"",
          "63:     And I set the field \"qtype\" to \"Add a content page\"",
          "64:     And I set the following fields to these values:",
          "65:       | Page title | Third page name |",
          "66:       | Page contents | Third page contents |",
          "67:       | id_answer_editor_0 | Previous page |",
          "68:       | id_jumpto_0 | Previous page |",
          "69:       | id_answer_editor_1 | Next page |",
          "70:       | id_jumpto_1 | Next page |",
          "71:     And I press \"Save page\"",
          "72:     And I set the field \"qtype\" to \"Add a content page\"",
          "73:     And I set the following fields to these values:",
          "74:       | Page title | Second page name |",
          "75:       | Page contents | Second page contents |",
          "76:       | id_answer_editor_0 | Previous page |",
          "77:       | id_jumpto_0 | Previous page |",
          "78:       | id_answer_editor_1 | Next page |",
          "79:       | id_jumpto_1 | Next page |",
          "80:     And I press \"Save page\"",
          "81:     And I log out",
          "82:     When I log in as \"student1\"",
          "83:     And I follow \"Course 1\"",
          "84:     And I follow \"Test lesson name\"",
          "85:     And I should see \"First page contents\"",
          "86:     And I press \"Next page\"",
          "87:     And I should see \"Second page contents\"",
          "88:     And I press \"Next page\"",
          "89:     And I should see \"Third page contents\"",
          "90:     And I follow \"Test lesson name\"",
          "91:     And I should see \"You have seen more than one page of this lesson already.\"",
          "92:     And I should see \"Do you want to start at the last page you saw?\"",
          "93:     And I follow \"Yes\"",
          "94:     Then I should see \"Third page contents\"",
          "95:     And I press \"Next page\"",
          "96:     And I should see \"Paper is made from trees.\"",
          "97:     And I follow \"Test lesson name\"",
          "98:     And I should see \"You have seen more than one page of this lesson already.\"",
          "99:     And I should see \"Do you want to start at the last page you saw?\"",
          "100:     And I follow \"Yes\"",
          "101:     And I should see \"Paper is made from trees.\"",
          "102:     And I set the following fields to these values:",
          "103:       | True | 1 |",
          "104:     And I press \"Submit\"",
          "105:     And I press \"Continue\"",
          "106:     And I should see \"Kermit is a frog\"",
          "107:     And I follow \"Test lesson name\"",
          "108:     And I should see \"You have seen more than one page of this lesson already.\"",
          "109:     And I should see \"Do you want to start at the last page you saw?\"",
          "110:     And I follow \"Yes\"",
          "111:     And I should see \"Kermit is a frog\"",
          "112:     And I set the following fields to these values:",
          "113:       | True | 1 |",
          "114:     And I press \"Submit\"",
          "115:     And I press \"Continue\"",
          "116:     And I should see \"Congratulations - end of lesson reached\"",
          "118:   @javascript",
          "119:   Scenario: resume a lesson with only content pages",
          "120:     Given I follow \"Add a content page\"",
          "121:     And I set the following fields to these values:",
          "122:       | Page title | First page name |",
          "123:       | Page contents | First page contents |",
          "124:       | id_answer_editor_0 | Next page |",
          "125:       | id_jumpto_0 | Next page |",
          "126:     And I press \"Save page\"",
          "127:     And I set the field \"qtype\" to \"Add a content page\"",
          "128:     And I set the following fields to these values:",
          "129:       | Page title | Fourth page name |",
          "130:       | Page contents | Fourth page contents |",
          "131:       | id_answer_editor_0 | Previous page |",
          "132:       | id_jumpto_0 | Previous page |",
          "133:       | id_answer_editor_1 | End of lesson |",
          "134:       | id_jumpto_1 | End of lesson |",
          "135:     And I press \"Save page\"",
          "136:     And I set the field \"qtype\" to \"Add a content page\"",
          "137:     And I set the following fields to these values:",
          "138:       | Page title | Third page name |",
          "139:       | Page contents | Third page contents |",
          "140:       | id_answer_editor_0 | Previous page |",
          "141:       | id_jumpto_0 | Previous page |",
          "142:       | id_answer_editor_1 | Next page |",
          "143:       | id_jumpto_1 | Next page |",
          "144:     And I press \"Save page\"",
          "145:     And I set the field \"qtype\" to \"Add a content page\"",
          "146:     And I set the following fields to these values:",
          "147:       | Page title | Second page name |",
          "148:       | Page contents | Second page contents |",
          "149:       | id_answer_editor_0 | Previous page |",
          "150:       | id_jumpto_0 | Previous page |",
          "151:       | id_answer_editor_1 | Next page |",
          "152:       | id_jumpto_1 | Next page |",
          "153:     And I press \"Save page\"",
          "154:     And I log out",
          "155:     When I log in as \"student1\"",
          "156:     And I follow \"Course 1\"",
          "157:     And I follow \"Test lesson name\"",
          "158:     And I should see \"First page contents\"",
          "159:     And I press \"Next page\"",
          "160:     And I should see \"Second page contents\"",
          "161:     And I press \"Next page\"",
          "162:     And I should see \"Third page contents\"",
          "163:     And I follow \"Test lesson name\"",
          "164:     Then I should see \"You have seen more than one page of this lesson already.\"",
          "165:     And I should see \"Do you want to start at the last page you saw?\"",
          "166:     And I follow \"Yes\"",
          "167:     And I should see \"Third page contents\"",
          "168:     And I press \"Next page\"",
          "169:     And I should see \"Fourth page contents\"",
          "170:     And I press \"End of lesson\"",
          "171:     And I log out",
          "172:     And I log in as \"student1\"",
          "173:     And I follow \"Course 1\"",
          "174:     And I follow \"Test lesson name\"",
          "175:     And I should see \"First page contents\"",
          "176:     And I log out",
          "178:   @javascript",
          "179:   Scenario: resume a lesson with both question then content pages",
          "180:     Given I follow \"Add a question page\"",
          "181:     And I set the field \"Select a question type\" to \"True/false\"",
          "182:     And I press \"Add a question page\"",
          "183:     And I set the following fields to these values:",
          "184:       | Page title | True/false question 1 |",
          "185:       | Page contents | Cat is an amphibian |",
          "186:       | id_answer_editor_0 | False |",
          "187:       | id_response_editor_0 | Correct |",
          "188:       | id_jumpto_0 | Next page |",
          "189:       | id_answer_editor_1 | True |",
          "190:       | id_response_editor_1 | Wrong |",
          "191:       | id_jumpto_1 | This page |",
          "192:     And I press \"Save page\"",
          "193:     And I set the field \"qtype\" to \"Question\"",
          "194:     And I set the field \"Select a question type\" to \"True/false\"",
          "195:     And I press \"Add a question page\"",
          "196:     And I set the following fields to these values:",
          "197:       | Page title | True/false question 5 |",
          "198:       | Page contents | Kermit is a frog |",
          "199:       | id_answer_editor_0 | True |",
          "200:       | id_response_editor_0 | Correct |",
          "201:       | id_jumpto_0 | Next page |",
          "202:       | id_answer_editor_1 | False |",
          "203:       | id_response_editor_1 | Wrong |",
          "204:       | id_jumpto_1 | This page |",
          "205:     And I press \"Save page\"",
          "206:     And I set the field \"qtype\" to \"Add a content page\"",
          "207:     And I set the following fields to these values:",
          "208:       | Page title | Content page 2 |",
          "209:       | Page contents | Second content page |",
          "210:       | id_answer_editor_0 | Next page |",
          "211:       | id_jumpto_0 | Next page |",
          "212:     And I press \"Save page\"",
          "213:     And I set the field \"qtype\" to \"Question\"",
          "214:     And I set the field \"Select a question type\" to \"True/false\"",
          "215:     And I press \"Add a question page\"",
          "216:     And I set the following fields to these values:",
          "217:       | Page title | True/false question 4 |",
          "218:       | Page contents | 2+2=4 |",
          "219:       | id_answer_editor_0 | True |",
          "220:       | id_response_editor_0 | Correct |",
          "221:       | id_jumpto_0 | Next page |",
          "222:       | id_answer_editor_1 | False |",
          "223:       | id_response_editor_1 | Wrong |",
          "224:       | id_jumpto_1 | This page |",
          "225:     And I press \"Save page\"",
          "226:     And I set the field \"qtype\" to \"Question\"",
          "227:     And I set the field \"Select a question type\" to \"True/false\"",
          "228:     And I press \"Add a question page\"",
          "229:     And I set the following fields to these values:",
          "230:       | Page title | True/false question 3 |",
          "231:       | Page contents | 1+1=2 |",
          "232:       | id_answer_editor_0 | True |",
          "233:       | id_response_editor_0 | Correct |",
          "234:       | id_jumpto_0 | Next page |",
          "235:       | id_answer_editor_1 | False |",
          "236:       | id_response_editor_1 | Wrong |",
          "237:       | id_jumpto_1 | This page |",
          "238:     And I press \"Save page\"",
          "239:     And I set the field \"qtype\" to \"Question\"",
          "240:     And I set the field \"Select a question type\" to \"True/false\"",
          "241:     And I press \"Add a question page\"",
          "242:     And I set the following fields to these values:",
          "243:       | Page title | True/false question 2 |",
          "244:       | Page contents | Paper is made from trees. |",
          "245:       | id_answer_editor_0 | True |",
          "246:       | id_response_editor_0 | Correct |",
          "247:       | id_jumpto_0 | Next page |",
          "248:       | id_answer_editor_1 | False |",
          "249:       | id_response_editor_1 | Wrong |",
          "250:       | id_jumpto_1 | This page |",
          "251:     And I press \"Save page\"",
          "252:     And I set the field \"qtype\" to \"Add a content page\"",
          "253:     And I set the following fields to these values:",
          "254:       | Page title | Content page 1 |",
          "255:       | Page contents | First content page |",
          "256:       | id_answer_editor_0 | Next page |",
          "257:       | id_jumpto_0 | Next page |",
          "258:     And I press \"Save page\"",
          "259:     And I log out",
          "260:     When I log in as \"student1\"",
          "261:     And I follow \"Course 1\"",
          "262:     And I follow \"Test lesson name\"",
          "263:     And I should see \"Cat is an amphibian\"",
          "264:     And I set the following fields to these values:",
          "265:       | False | 1 |",
          "266:     And I press \"Submit\"",
          "267:     And I press \"Continue\"",
          "268:     And I should see \"First content page\"",
          "269:     And I press \"Next page\"",
          "270:     And I should see \"Paper is made from trees.\"",
          "271:     And I set the following fields to these values:",
          "272:       | True | 1 |",
          "273:     And I press \"Submit\"",
          "274:     And I press \"Continue\"",
          "275:     And I should see \"1+1=2\"",
          "276:     And I set the following fields to these values:",
          "277:       | True | 1 |",
          "278:     And I press \"Submit\"",
          "279:     And I press \"Continue\"",
          "280:     And I should see \"2+2=4\"",
          "281:     And I follow \"Test lesson name\"",
          "282:     And I should see \"You have seen more than one page of this lesson already.\"",
          "283:     Then I should see \"Do you want to start at the last page you saw?\"",
          "284:     And I follow \"Yes\"",
          "285:     And I should see \"2+2=4\"",
          "286:     And I set the following fields to these values:",
          "287:       | True | 1 |",
          "288:     And I press \"Submit\"",
          "289:     And I press \"Continue\"",
          "290:     And I should see \"Second content page\"",
          "291:     And I follow \"Test lesson name\"",
          "292:     And I should see \"You have seen more than one page of this lesson already.\"",
          "293:     And I should see \"Do you want to start at the last page you saw?\"",
          "294:     And I follow \"Yes\"",
          "295:     And I should see \"Second content page\"",
          "296:     And I press \"Next page\"",
          "297:     And I should see \"Kermit is a frog\"",
          "298:     And I set the following fields to these values:",
          "299:       | True | 1 |",
          "300:     And I press \"Submit\"",
          "301:     And I press \"Continue\"",
          "302:     And I should see \"Congratulations - end of lesson reached\"",
          "304:   @javascript",
          "305:   Scenario: resume a lesson with only question pages",
          "306:     Given I follow \"Add a question page\"",
          "307:     And I set the field \"Select a question type\" to \"True/false\"",
          "308:     And I press \"Add a question page\"",
          "309:     And I set the following fields to these values:",
          "310:       | Page title | True/false question 1 |",
          "311:       | Page contents | Cat is an amphibian |",
          "312:       | id_answer_editor_0 | False |",
          "313:       | id_response_editor_0 | Correct |",
          "314:       | id_jumpto_0 | Next page |",
          "315:       | id_answer_editor_1 | True |",
          "316:       | id_response_editor_1 | Wrong |",
          "317:       | id_jumpto_1 | This page |",
          "318:     And I press \"Save page\"",
          "319:     And I set the field \"qtype\" to \"Question\"",
          "320:     And I set the field \"Select a question type\" to \"True/false\"",
          "321:     And I press \"Add a question page\"",
          "322:     And I set the following fields to these values:",
          "323:       | Page title | True/false question 5 |",
          "324:       | Page contents | Kermit is a frog |",
          "325:       | id_answer_editor_0 | True |",
          "326:       | id_response_editor_0 | Correct |",
          "327:       | id_jumpto_0 | Next page |",
          "328:       | id_answer_editor_1 | False |",
          "329:       | id_response_editor_1 | Wrong |",
          "330:       | id_jumpto_1 | This page |",
          "331:     And I press \"Save page\"",
          "332:     And I set the field \"qtype\" to \"Question\"",
          "333:     And I set the field \"Select a question type\" to \"True/false\"",
          "334:     And I press \"Add a question page\"",
          "335:     And I set the following fields to these values:",
          "336:       | Page title | True/false question 4 |",
          "337:       | Page contents | 2+2=4 |",
          "338:       | id_answer_editor_0 | True |",
          "339:       | id_response_editor_0 | Correct |",
          "340:       | id_jumpto_0 | Next page |",
          "341:       | id_answer_editor_1 | False |",
          "342:       | id_response_editor_1 | Wrong |",
          "343:       | id_jumpto_1 | This page |",
          "344:     And I press \"Save page\"",
          "345:     And I set the field \"qtype\" to \"Question\"",
          "346:     And I set the field \"Select a question type\" to \"True/false\"",
          "347:     And I press \"Add a question page\"",
          "348:     And I set the following fields to these values:",
          "349:       | Page title | True/false question 3 |",
          "350:       | Page contents | 1+1=2 |",
          "351:       | id_answer_editor_0 | True |",
          "352:       | id_response_editor_0 | Correct |",
          "353:       | id_jumpto_0 | Next page |",
          "354:       | id_answer_editor_1 | False |",
          "355:       | id_response_editor_1 | Wrong |",
          "356:       | id_jumpto_1 | This page |",
          "357:     And I press \"Save page\"",
          "358:     And I set the field \"qtype\" to \"Question\"",
          "359:     And I set the field \"Select a question type\" to \"True/false\"",
          "360:     And I press \"Add a question page\"",
          "361:     And I set the following fields to these values:",
          "362:       | Page title | True/false question 2 |",
          "363:       | Page contents | Paper is made from trees. |",
          "364:       | id_answer_editor_0 | True |",
          "365:       | id_response_editor_0 | Correct |",
          "366:       | id_jumpto_0 | Next page |",
          "367:       | id_answer_editor_1 | False |",
          "368:       | id_response_editor_1 | Wrong |",
          "369:       | id_jumpto_1 | This page |",
          "370:     And I press \"Save page\"",
          "371:     And I log out",
          "372:     When I log in as \"student1\"",
          "373:     And I follow \"Course 1\"",
          "374:     And I follow \"Test lesson name\"",
          "375:     And I should see \"Cat is an amphibian\"",
          "376:     And I set the following fields to these values:",
          "377:       | False | 1 |",
          "378:     And I press \"Submit\"",
          "379:     And I press \"Continue\"",
          "380:     And I should see \"Paper is made from trees.\"",
          "381:     And I set the following fields to these values:",
          "382:       | True | 1 |",
          "383:     And I press \"Submit\"",
          "384:     And I press \"Continue\"",
          "385:     And I should see \"1+1=2\"",
          "386:     And I set the following fields to these values:",
          "387:       | True | 1 |",
          "388:     And I press \"Submit\"",
          "389:     And I press \"Continue\"",
          "390:     And I should see \"2+2=4\"",
          "391:     And I follow \"Test lesson name\"",
          "392:     Then I should see \"You have seen more than one page of this lesson already.\"",
          "393:     And I should see \"Do you want to start at the last page you saw?\"",
          "394:     And I follow \"Yes\"",
          "395:     And I should see \"2+2=4\"",
          "396:     And I set the following fields to these values:",
          "397:       | True | 1 |",
          "398:     And I press \"Submit\"",
          "399:     And I press \"Continue\"",
          "400:     And I should see \"Kermit is a frog\"",
          "401:     And I set the following fields to these values:",
          "402:       | True | 1 |",
          "403:     And I press \"Submit\"",
          "404:     And I press \"Continue\"",
          "405:     And I should see \"Congratulations - end of lesson reached\"",
          "",
          "---------------"
        ],
        "mod/lesson/version.php||mod/lesson/version.php": [
          "File: mod/lesson/version.php -> mod/lesson/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014110400;    // Requires this Moodle version",
          "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2015021900;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2015030300;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ],
        "mod/lesson/view.php||mod/lesson/view.php": [
          "File: mod/lesson/view.php -> mod/lesson/view.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "216:         $lastbranchtable = current($branchtables);",
          "217:         if (count($allattempts) > 0) {",
          "221:                     $lastpageseen = $lastbranchtable->pageid;",
          "222:                 }",
          "224:             }",
          "225:         } else {",
          "228:         }",
          "229:     }",
          "236:             } else {",
          "239:             }",
          "242:         }",
          "245:     }",
          "247:     if ($attemptflag) {",
          "",
          "[Removed Lines]",
          "218:             foreach($allattempts as $attempt) {",
          "219:                 if ($lastbranchtable->timeseen > $attempt->timeseen) {",
          "223:                 break;",
          "227:             $lastpageseen = $lastbranchtable->pageid;",
          "230:     if (isset($lastpageseen) && $DB->count_records('lesson_attempts', array('lessonid'=>$lesson->id, 'userid'=>$USER->id, 'retry'=>$retries)) > 0) {",
          "231:         echo $lessonoutput->header($lesson, $cm, '', false, null, get_string('leftduringtimedsession', 'lesson'));",
          "232:         if ($lesson->timed) {",
          "233:             if ($lesson->retake) {",
          "234:                 $continuelink = new single_button(new moodle_url('/mod/lesson/view.php', array('id'=>$cm->id, 'pageid'=>$lesson->firstpageid, 'startlastseen'=>'no')), get_string('continue', 'lesson'), 'get');",
          "235:                 echo '<div class=\"center leftduring\">'.$lessonoutput->message(get_string('leftduringtimed', 'lesson'), $continuelink).'</div>';",
          "237:                 $courselink = new single_button(new moodle_url('/course/view.php', array('id'=>$PAGE->course->id)), get_string('returntocourse', 'lesson'), 'get');",
          "238:                 echo '<div class=\"center leftduring\">'.$lessonoutput->message(get_string('leftduringtimednoretake', 'lesson'), $courselink).'</div>';",
          "240:         } else {",
          "241:             echo $lessonoutput->continue_links($lesson, $lastpageseen);",
          "243:         echo $lessonoutput->footer();",
          "244:         exit();",
          "",
          "[Added Lines]",
          "218:             if ($lastbranchtable->timeseen > $attempt->timeseen) {",
          "220:                 if (!empty($lastbranchtable->nextpageid)) {",
          "221:                     $lastpageseen = $lastbranchtable->nextpageid;",
          "222:                 } else {",
          "229:             if (!empty($lastbranchtable->nextpageid)) {",
          "230:                 $lastpageseen = $lastbranchtable->nextpageid;",
          "231:             } else {",
          "233:                 $lastpageseen = $lastbranchtable->pageid;",
          "234:             }",
          "238:     if ((isset($lastpageseen) && ($lastpageseen != LESSON_EOL))) {",
          "239:         if (($DB->count_records('lesson_attempts', array('lessonid' => $lesson->id, 'userid' => $USER->id, 'retry' => $retries)) > 0)",
          "240:                 || $DB->count_records('lesson_branch', array(\"lessonid\" => $lesson->id, \"userid\" => $USER->id, \"retry\" => $retries)) > 0) {",
          "242:             echo $lessonoutput->header($lesson, $cm, '', false, null, get_string('leftduringtimedsession', 'lesson'));",
          "243:             if ($lesson->timed) {",
          "244:                 if ($lesson->retake) {",
          "245:                     $continuelink = new single_button(new moodle_url('/mod/lesson/view.php',",
          "246:                             array('id' => $cm->id, 'pageid' => $lesson->firstpageid, 'startlastseen' => 'no')),",
          "247:                             get_string('continue', 'lesson'), 'get');",
          "249:                     echo html_writer::div($lessonoutput->message(get_string('leftduringtimed', 'lesson'), $continuelink),",
          "250:                             'center leftduring');",
          "252:                 } else {",
          "253:                     $courselink = new single_button(new moodle_url('/course/view.php',",
          "254:                             array('id' => $PAGE->course->id)), get_string('returntocourse', 'lesson'), 'get');",
          "256:                     echo html_writer::div($lessonoutput->message(get_string('leftduringtimednoretake', 'lesson'), $courselink),",
          "257:                             'center leftduring');",
          "258:                 }",
          "260:                 echo $lessonoutput->continue_links($lesson, $lastpageseen);",
          "262:             echo $lessonoutput->footer();",
          "263:             exit();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5fc6a9e77b2048f29c2202c63a1225cd463feaae",
      "candidate_info": {
        "commit_hash": "5fc6a9e77b2048f29c2202c63a1225cd463feaae",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/5fc6a9e77b2048f29c2202c63a1225cd463feaae",
        "files": [
          "mod/lesson/db/access.php",
          "mod/lesson/essay.php",
          "mod/lesson/lib.php",
          "mod/lesson/tabs.php",
          "mod/lesson/tests/behat/teacher_grade_essays.feature",
          "mod/lesson/version.php"
        ],
        "message": "MDL-43245 Lesson: non editing teacher cannot grade lesson essay",
        "before_after_code_files": [
          "mod/lesson/db/access.php||mod/lesson/db/access.php",
          "mod/lesson/essay.php||mod/lesson/essay.php",
          "mod/lesson/lib.php||mod/lesson/lib.php",
          "mod/lesson/tabs.php||mod/lesson/tabs.php",
          "mod/lesson/tests/behat/teacher_grade_essays.feature||mod/lesson/tests/behat/teacher_grade_essays.feature",
          "mod/lesson/version.php||mod/lesson/version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lesson/db/access.php||mod/lesson/db/access.php",
            "mod/lesson/version.php||mod/lesson/version.php"
          ],
          "candidate": [
            "mod/lesson/db/access.php||mod/lesson/db/access.php",
            "mod/lesson/version.php||mod/lesson/version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lesson/db/access.php||mod/lesson/db/access.php": [
          "File: mod/lesson/db/access.php -> mod/lesson/db/access.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:         )",
          "53:     ),",
          "55:     'mod/lesson:manage' => array(",
          "57:         'captype' => 'write',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:     'mod/lesson:grade' => array(",
          "57:         'riskbitmask' => RISK_SPAM,",
          "58:         'captype' => 'write',",
          "59:         'contextlevel' => CONTEXT_MODULE,",
          "60:         'archetypes' => array(",
          "61:             'teacher' => CAP_ALLOW,",
          "62:             'editingteacher' => CAP_ALLOW,",
          "63:             'manager' => CAP_ALLOW",
          "64:         )",
          "65:     ),",
          "",
          "---------------"
        ],
        "mod/lesson/essay.php||mod/lesson/essay.php": [
          "File: mod/lesson/essay.php -> mod/lesson/essay.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: require_login($course, false, $cm);",
          "40: $context = context_module::instance($cm->id);",
          "43: $url = new moodle_url('/mod/lesson/essay.php', array('id'=>$id));",
          "44: if ($mode !== 'display') {",
          "",
          "[Removed Lines]",
          "41: require_capability('mod/lesson:edit', $context);",
          "",
          "[Added Lines]",
          "41: require_capability('mod/lesson:grade', $context);",
          "",
          "---------------"
        ],
        "mod/lesson/lib.php||mod/lesson/lib.php": [
          "File: mod/lesson/lib.php -> mod/lesson/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "773: function lesson_extend_settings_navigation($settings, $lessonnode) {",
          "774:     global $PAGE, $DB;",
          "778:     $url = new moodle_url('/mod/lesson/view.php', array('id'=>$PAGE->cm->id));",
          "779:     $lessonnode->add(get_string('preview', 'lesson'), $url);",
          "782:         $url = new moodle_url('/mod/lesson/edit.php', array('id'=>$PAGE->cm->id));",
          "783:         $lessonnode->add(get_string('edit', 'lesson'), $url);",
          "784:     }",
          "",
          "[Removed Lines]",
          "776:     $canedit = has_capability('mod/lesson:edit', $PAGE->cm->context);",
          "781:     if ($canedit) {",
          "",
          "[Added Lines]",
          "779:     if (has_capability('mod/lesson:edit', $PAGE->cm->context)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "791:         $reportsnode->add(get_string('detailedstats', 'lesson'), $url);",
          "792:     }",
          "795:         $url = new moodle_url('/mod/lesson/essay.php', array('id'=>$PAGE->cm->id));",
          "796:         $lessonnode->add(get_string('manualgrading', 'lesson'), $url);",
          "797:     }",
          "",
          "[Removed Lines]",
          "794:     if ($canedit) {",
          "",
          "[Added Lines]",
          "792:     if (has_capability('mod/lesson:grade', $PAGE->cm->context)) {",
          "",
          "---------------"
        ],
        "mod/lesson/tabs.php||mod/lesson/tabs.php": [
          "File: mod/lesson/tabs.php -> mod/lesson/tabs.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: $row[] = new tabobject('view', \"$CFG->wwwroot/mod/lesson/view.php?id=$cm->id\", get_string('preview', 'lesson'), get_string('previewlesson', 'lesson', format_string($lesson->name)));",
          "52: $row[] = new tabobject('edit', \"$CFG->wwwroot/mod/lesson/edit.php?id=$cm->id\", get_string('edit', 'lesson'), get_string('edita', 'moodle', format_string($lesson->name)));",
          "53: $row[] = new tabobject('reports', \"$CFG->wwwroot/mod/lesson/report.php?id=$cm->id\", get_string('reports', 'lesson'), get_string('viewreports2', 'lesson', $attemptscount));",
          "55:     $row[] = new tabobject('essay', \"$CFG->wwwroot/mod/lesson/essay.php?id=$cm->id\", get_string('manualgrading', 'lesson'));",
          "56: }",
          "57: if ($lesson->highscores) {",
          "",
          "[Removed Lines]",
          "54: if (has_capability('mod/lesson:edit', $context)) {",
          "",
          "[Added Lines]",
          "54: if (has_capability('mod/lesson:grade', $context)) {",
          "",
          "---------------"
        ],
        "mod/lesson/tests/behat/teacher_grade_essays.feature||mod/lesson/tests/behat/teacher_grade_essays.feature": [
          "File: mod/lesson/tests/behat/teacher_grade_essays.feature -> mod/lesson/tests/behat/teacher_grade_essays.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @mod @mod_lesson",
          "2: Feature: In a lesson activity, a non editing teacher can grade essay questions",
          "3:   As a non editing teacher",
          "4:   I need to grade student answers to essay questions in lesson",
          "6:   @javascript",
          "7:   Scenario: non editing teacher grade essay questions",
          "8:     Given the following \"users\" exist:",
          "9:       | username | firstname | lastname | email |",
          "10:       | teacher1 | Teacher | 1 | teacher1@asd.com |",
          "11:       | teacher2 | Teacher | 2 | teacher2@asd.com |",
          "12:       | student1 | Student | 1 | student1@asd.com |",
          "13:     And the following \"courses\" exist:",
          "14:       | fullname | shortname | category |",
          "15:       | Course 1 | C1 | 0 |",
          "16:     And the following \"course enrolments\" exist:",
          "17:       | user | course | role |",
          "18:       | teacher1 | C1 | editingteacher |",
          "19:       | teacher2 | C1 | teacher |",
          "20:       | student1 | C1 | student |",
          "21:     And I log in as \"teacher1\"",
          "22:     And I am on homepage",
          "23:     And I follow \"Course 1\"",
          "24:     And I turn editing mode on",
          "25:     And I add a \"Lesson\" to section \"1\" and I fill the form with:",
          "26:       | Name | Test lesson name |",
          "27:       | Description | Test lesson description |",
          "28:     And I follow \"Test lesson name\"",
          "29:     And I follow \"Add a question page\"",
          "30:     And I set the field \"Select a question type\" to \"Essay\"",
          "31:     And I press \"Add a question page\"",
          "32:     And I set the following fields to these values:",
          "33:       | Page title | Essay question |",
          "34:       | Page contents | <p>Please write a story about a frog.</p> |",
          "35:     And I press \"Save page\"",
          "36:     And I log out",
          "37:     And I log in as \"student1\"",
          "38:     And I follow \"Course 1\"",
          "39:     And I follow \"Test lesson name\"",
          "40:     And I set the field \"Your answer\" to \"<p>Once upon a time there was a little green frog.\"",
          "41:     And I press \"Submit\"",
          "42:     And I log out",
          "43:     When I log in as \"teacher2\"",
          "44:     And I follow \"Course 1\"",
          "45:     And I follow \"Test lesson name\"",
          "46:     Then I should see \"Grade essays\"",
          "47:     And I follow \"Grade essays\"",
          "48:     And I should see \"Student 1\"",
          "49:     And I should see \"Essay question\"",
          "50:     And I follow \"Essay question\"",
          "51:     And I should see \"Student 1's response\"",
          "52:     And I should see \"Once upon a time there was a little green frog.\"",
          "53:     And I set the following fields to these values:",
          "54:       | Your comments | Well done. |",
          "55:       | Essay score | 1 |",
          "56:     And I press \"Save changes\"",
          "57:     And I should see \"Changes saved\"",
          "",
          "---------------"
        ],
        "mod/lesson/version.php||mod/lesson/version.php": [
          "File: mod/lesson/version.php -> mod/lesson/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2014050800;    // Requires this Moodle version",
          "29: $plugin->component = 'mod_lesson'; // Full name of the plugin (used for diagnostics)",
          "30: $plugin->cron      = 0;",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2014100600;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2014101600;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ]
      }
    }
  ]
}