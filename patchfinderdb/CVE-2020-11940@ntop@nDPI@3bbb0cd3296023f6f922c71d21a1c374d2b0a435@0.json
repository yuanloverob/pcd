{
  "cve_id": "CVE-2020-11940",
  "cve_desc": "In nDPI through 3.2 Stable, an out-of-bounds read in concat_hash_string in ssh.c can be exploited by a network-positioned attacker that can send malformed SSH protocol messages on a network segment monitored by nDPI's library.",
  "repo": "ntop/nDPI",
  "patch_hash": "3bbb0cd3296023f6f922c71d21a1c374d2b0a435",
  "patch_info": {
    "commit_hash": "3bbb0cd3296023f6f922c71d21a1c374d2b0a435",
    "repo": "ntop/nDPI",
    "commit_url": "https://github.com/ntop/nDPI/commit/3bbb0cd3296023f6f922c71d21a1c374d2b0a435",
    "files": [
      "src/lib/protocols/ssh.c"
    ],
    "message": "ssh: adds systematic bounds checks in concat_hash_string\n\ncf GHSL-2020-052",
    "before_after_code_files": [
      "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
    ]
  },
  "patch_diff": {
    "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c": [
      "File: src/lib/protocols/ssh.c -> src/lib/protocols/ssh.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "110:   buf[buf_out_len++] = ';';",
      "111:   offset += len;",
      "114:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "115:   offset += 4 + len;",
      "118:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "113:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "114:     goto invalid_payload;",
      "119:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "120:     goto invalid_payload;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "130:   } else",
      "131:     offset += 4 + len;",
      "134:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "137:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "138:     goto invalid_payload;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "146:   } else",
      "147:     offset += 4 + len;",
      "150:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "156:     goto invalid_payload;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "162:   } else",
      "163:     offset += 4 + len;",
      "166:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "173:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "174:     goto invalid_payload;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "195:   } else",
      "196:     offset += 4 + len;",
      "199:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "208:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
      "209:     goto invalid_payload;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7ce478a58b4dd29a8d1e6f4e9df2f778613d9202",
      "candidate_info": {
        "commit_hash": "7ce478a58b4dd29a8d1e6f4e9df2f778613d9202",
        "repo": "ntop/nDPI",
        "commit_url": "https://github.com/ntop/nDPI/commit/7ce478a58b4dd29a8d1e6f4e9df2f778613d9202",
        "files": [
          "src/lib/protocols/ssh.c"
        ],
        "message": "ssh: fixing unsigned overflow leading to heap overflow\n\ncf GHSL-2020-051",
        "before_after_code_files": [
          "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/ntop/nDPI/pull/865"
        ],
        "olp_code_files": {
          "patch": [
            "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
          ],
          "candidate": [
            "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c": [
          "File: src/lib/protocols/ssh.c -> src/lib/protocols/ssh.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96: static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,",
          "97:        char *buf, u_int8_t client_hash) {",
          "99:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "100:     goto invalid_payload;",
          "101:   u_int32_t len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "",
          "[Removed Lines]",
          "98:   u_int16_t offset = 22, buf_out_len = 0;",
          "",
          "[Added Lines]",
          "98:   u_int32_t offset = 22, buf_out_len = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:     goto invalid_payload;",
          "116:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "117:   offset += 4 + len;",
          "119:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:   if (len > UINT32_MAX - 4 - offset)",
          "118:     goto invalid_payload;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "122:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "124:   if(client_hash) {",
          "127:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
          "128:       goto invalid_payload;",
          "130:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
          "131:     buf_out_len += len;",
          "132:     buf[buf_out_len++] = ';';",
          "137:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "138:     goto invalid_payload;",
          "140:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "142:   if(!client_hash) {",
          "145:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
          "146:       goto invalid_payload;",
          "148:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
          "149:     buf_out_len += len;",
          "150:     buf[buf_out_len++] = ';';",
          "155:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "156:     goto invalid_payload;",
          "158:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "160:   if(client_hash) {",
          "163:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
          "164:       goto invalid_payload;",
          "166:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
          "167:     buf_out_len += len;",
          "168:     buf[buf_out_len++] = ';';",
          "173:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "174:     goto invalid_payload;",
          "176:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "178:   if(!client_hash) {",
          "181:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
          "182:       goto invalid_payload;",
          "184:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
          "185:     buf_out_len += len;",
          "186:     buf[buf_out_len++] = ';';",
          "192:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "193:     goto invalid_payload;",
          "194:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "196:   if(client_hash) {",
          "199:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
          "200:       goto invalid_payload;",
          "202:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
          "203:     buf_out_len += len;",
          "208:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "209:     goto invalid_payload;",
          "211:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "213:   if(!client_hash) {",
          "216:     if((offset >= packet->payload_packet_len) || (len >= packet->payload_packet_len-offset-1))",
          "217:       goto invalid_payload;",
          "219:     strncpy(&buf[buf_out_len], (const char *)&packet->payload[offset], len);",
          "220:     buf_out_len += len;",
          "",
          "[Removed Lines]",
          "125:     offset += 4;",
          "133:     offset += len;",
          "134:   } else",
          "135:     offset += 4 + len;",
          "143:     offset += 4;",
          "151:     offset += len;",
          "152:   } else",
          "153:     offset += 4 + len;",
          "161:     offset += 4;",
          "169:     offset += len;",
          "170:   } else",
          "171:     offset += 4 + len;",
          "179:     offset += 4;",
          "187:     offset += len;",
          "188:   } else",
          "189:     offset += 4 + len;",
          "197:     offset += 4;",
          "204:     offset += len;",
          "205:   } else",
          "206:     offset += 4 + len;",
          "214:     offset += 4;",
          "221:     offset += len;",
          "222:   } else",
          "223:     offset += 4 + len;",
          "",
          "[Added Lines]",
          "126:   offset += 4;",
          "134:   }",
          "135:   if (len > UINT32_MAX - offset)",
          "136:     goto invalid_payload;",
          "137:   offset += len;",
          "144:   offset += 4;",
          "152:   }",
          "153:   if (len > UINT32_MAX - offset)",
          "154:     goto invalid_payload;",
          "155:   offset += len;",
          "162:   offset += 4;",
          "170:   }",
          "171:   if (len > UINT32_MAX - offset)",
          "172:     goto invalid_payload;",
          "173:   offset += len;",
          "180:   offset += 4;",
          "188:   }",
          "189:   if (len > UINT32_MAX - offset)",
          "190:     goto invalid_payload;",
          "191:   offset += len;",
          "198:   offset += 4;",
          "205:   }",
          "206:   if (len > UINT32_MAX - offset)",
          "207:     goto invalid_payload;",
          "208:   offset += len;",
          "215:   offset += 4;",
          "222:   }",
          "223:   if (len > UINT32_MAX - offset)",
          "224:     goto invalid_payload;",
          "225:   offset += len;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c120cca66272646c4277d71fa769d020b1026b28",
      "candidate_info": {
        "commit_hash": "c120cca66272646c4277d71fa769d020b1026b28",
        "repo": "ntop/nDPI",
        "commit_url": "https://github.com/ntop/nDPI/commit/c120cca66272646c4277d71fa769d020b1026b28",
        "files": [
          "src/lib/protocols/ssh.c"
        ],
        "message": "SSH boundary check rework",
        "before_after_code_files": [
          "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
          ],
          "candidate": [
            "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/protocols/ssh.c||src/lib/protocols/ssh.c": [
          "File: src/lib/protocols/ssh.c -> src/lib/protocols/ssh.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96: static u_int16_t concat_hash_string(struct ndpi_packet_struct *packet,",
          "97:         char *buf, u_int8_t client_hash) {",
          "102:     goto invalid_payload;",
          "104:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "",
          "[Removed Lines]",
          "98:   u_int32_t offset = 22, buf_out_len = 0;",
          "99:   int len;",
          "101:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "",
          "[Added Lines]",
          "98:   u_int32_t offset = 22, len, buf_out_len = 0, max_payload_len = packet->payload_packet_len-sizeof(u_int32_t);",
          "99:   const u_int32_t len_max = 65565;",
          "101:   if(offset >= max_payload_len)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:   buf[buf_out_len++] = ';';",
          "114:   offset += len;",
          "117:     goto invalid_payload;",
          "120:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "123:     goto invalid_payload;",
          "124:   offset += 4 + len;",
          "127:     goto invalid_payload;",
          "",
          "[Removed Lines]",
          "116:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "122:   if(len > UINT32_MAX - 8 - offset)",
          "126:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "",
          "[Added Lines]",
          "116:   if(offset >= max_payload_len)",
          "122:   if(len > len_max)",
          "126:   if(offset >= max_payload_len)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "139:     buf[buf_out_len++] = ';';",
          "140:   }",
          "143:     goto invalid_payload;",
          "144:   offset += len;",
          "147:     goto invalid_payload;",
          "",
          "[Removed Lines]",
          "142:   if(len > UINT32_MAX - 4 - offset)",
          "146:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "",
          "[Added Lines]",
          "142:   if(len > len_max)",
          "146:   if(offset >= max_payload_len)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "159:     buf[buf_out_len++] = ';';",
          "160:   }",
          "163:     goto invalid_payload;",
          "164:   offset += len;",
          "167:     goto invalid_payload;",
          "169:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "",
          "[Removed Lines]",
          "162:   if(len > UINT32_MAX - 4 - offset)",
          "166:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "",
          "[Added Lines]",
          "162:   if(len > len_max)",
          "166:   if(offset >= max_payload_len)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "177:     buf_out_len += len;",
          "178:     buf[buf_out_len++] = ';';",
          "179:   }",
          "181:     goto invalid_payload;",
          "182:   offset += len;",
          "185:     goto invalid_payload;",
          "187:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "",
          "[Removed Lines]",
          "180:   if(len > UINT32_MAX - 4 - offset)",
          "184:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "",
          "[Added Lines]",
          "181:   if(len > len_max)",
          "185:   if(offset >= max_payload_len)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "196:     buf[buf_out_len++] = ';';",
          "197:   }",
          "200:     goto invalid_payload;",
          "201:   offset += len;",
          "205:     goto invalid_payload;",
          "206:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "208:   offset += 4;",
          "",
          "[Removed Lines]",
          "199:   if(len > UINT32_MAX - 4 - offset)",
          "204:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "",
          "[Added Lines]",
          "200:   if(len > len_max)",
          "205:   if(offset >= max_payload_len)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "214:     buf_out_len += len;",
          "215:   }",
          "218:     goto invalid_payload;",
          "219:   offset += len;",
          "222:     goto invalid_payload;",
          "224:   len = ntohl(*(u_int32_t*)&packet->payload[offset]);",
          "",
          "[Removed Lines]",
          "217:   if(len > UINT32_MAX - 4 - offset)",
          "221:   if(offset+sizeof(u_int32_t) >= packet->payload_packet_len)",
          "",
          "[Added Lines]",
          "219:   if(len > len_max)",
          "223:   if(offset >= max_payload_len)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "232:     buf_out_len += len;",
          "233:   }",
          "236:     goto invalid_payload;",
          "237:   offset += len;",
          "",
          "[Removed Lines]",
          "235:   if(len > UINT32_MAX - offset)",
          "",
          "[Added Lines]",
          "237:   if(len > len_max)",
          "",
          "---------------"
        ]
      }
    }
  ]
}