{
  "cve_id": "CVE-2012-2789",
  "cve_desc": "Unspecified vulnerability in the avi_read_packet function in libavformat/avidec.c in FFmpeg before 0.11, and Libav 0.7.x before 0.7.7 and 0.8.x before 0.8.4, has unknown impact and attack vectors, related to a large number of vector coded coefficients (num_vec_coeffs).",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "97a5addfcf0029d0f5538ed70cb38cae4108a618",
  "patch_info": {
    "commit_hash": "97a5addfcf0029d0f5538ed70cb38cae4108a618",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/97a5addfcf0029d0f5538ed70cb38cae4108a618",
    "files": [
      "libavcodec/wmaprodec.c"
    ],
    "message": "wmaprodec: check num_vec_coeffs for validity\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c": [
      "File: libavcodec/wmaprodec.c -> libavcodec/wmaprodec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1169:             int num_bits = av_log2((s->subframe_len + 3)/4) + 1;",
      "1170:             for (i = 0; i < s->channels_for_cur_subframe; i++) {",
      "1171:                 int c = s->channel_indexes_for_cur_subframe[i];",
      "1173:             }",
      "1174:         } else {",
      "1175:             for (i = 0; i < s->channels_for_cur_subframe; i++) {",
      "",
      "[Removed Lines]",
      "1172:                 s->channel[c].num_vec_coeffs = get_bits(&s->gb, num_bits) << 2;",
      "",
      "[Added Lines]",
      "1172:                 int num_vec_coeffs = get_bits(&s->gb, num_bits) << 2;",
      "1173:                 if (num_vec_coeffs > WMAPRO_BLOCK_MAX_SIZE) {",
      "1174:                     av_log(s->avctx, AV_LOG_ERROR, \"num_vec_coeffs %d is too large\\n\", num_vec_coeffs);",
      "1175:                     return AVERROR_INVALIDDATA;",
      "1176:                 }",
      "1177:                 s->channel[c].num_vec_coeffs = num_vec_coeffs;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b21ba20cc83c80fe56192fee3626a8087f37d806",
      "candidate_info": {
        "commit_hash": "b21ba20cc83c80fe56192fee3626a8087f37d806",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/b21ba20cc83c80fe56192fee3626a8087f37d806",
        "files": [
          "libavcodec/wmaprodec.c"
        ],
        "message": "wmaprodec: tighter check for num_vec_coeffs\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c"
          ],
          "candidate": [
            "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c": [
          "File: libavcodec/wmaprodec.c -> libavcodec/wmaprodec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1166:             transmit_coeffs = 1;",
          "1167:     }",
          "1169:     if (transmit_coeffs) {",
          "1170:         int step;",
          "1171:         int quant_step = 90 * s->bits_per_sample >> 4;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1169:     av_assert0(s->subframe_len <= WMAPRO_BLOCK_MAX_SIZE);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1176:             for (i = 0; i < s->channels_for_cur_subframe; i++) {",
          "1177:                 int c = s->channel_indexes_for_cur_subframe[i];",
          "1178:                 int num_vec_coeffs = get_bits(&s->gb, num_bits) << 2;",
          "1180:                     av_log(s->avctx, AV_LOG_ERROR, \"num_vec_coeffs %d is too large\\n\", num_vec_coeffs);",
          "1181:                     return AVERROR_INVALIDDATA;",
          "1182:                 }",
          "",
          "[Removed Lines]",
          "1179:                 if (num_vec_coeffs > WMAPRO_BLOCK_MAX_SIZE) {",
          "",
          "[Added Lines]",
          "1180:                 if (num_vec_coeffs > s->subframe_len) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6744eee1e5bf68feb9930f1e3617311587b9d7a7",
      "candidate_info": {
        "commit_hash": "6744eee1e5bf68feb9930f1e3617311587b9d7a7",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6744eee1e5bf68feb9930f1e3617311587b9d7a7",
        "files": [
          "libavcodec/wmaprodec.c"
        ],
        "message": "wmaprodec: check num_vec_coeffs for validity\n\nFixes CVE-2012-2789\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Anton Khirnov <anton@khirnov.net>\n(cherry picked from commit 99f392a584dd10b553facc8e819f2c7e982e176d)\n\nSigned-off-by: Reinhard Tartler <siretart@tauware.de>",
        "before_after_code_files": [
          "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c"
          ],
          "candidate": [
            "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c": [
          "File: libavcodec/wmaprodec.c -> libavcodec/wmaprodec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1166:             int num_bits = av_log2((s->subframe_len + 3)/4) + 1;",
          "1167:             for (i = 0; i < s->channels_for_cur_subframe; i++) {",
          "1168:                 int c = s->channel_indexes_for_cur_subframe[i];",
          "1170:             }",
          "1171:         } else {",
          "1172:             for (i = 0; i < s->channels_for_cur_subframe; i++) {",
          "",
          "[Removed Lines]",
          "1169:                 s->channel[c].num_vec_coeffs = get_bits(&s->gb, num_bits) << 2;",
          "",
          "[Added Lines]",
          "1169:                 int num_vec_coeffs = get_bits(&s->gb, num_bits) << 2;",
          "1170:                 if (num_vec_coeffs > WMAPRO_BLOCK_MAX_SIZE) {",
          "1171:                     av_log(s->avctx, AV_LOG_ERROR, \"num_vec_coeffs %d is too large\\n\", num_vec_coeffs);",
          "1172:                     return AVERROR_INVALIDDATA;",
          "1173:                 }",
          "1174:                 s->channel[c].num_vec_coeffs = num_vec_coeffs;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a636a5e43685637129efbf2ac65f4bdad011e37",
      "candidate_info": {
        "commit_hash": "4a636a5e43685637129efbf2ac65f4bdad011e37",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/4a636a5e43685637129efbf2ac65f4bdad011e37",
        "files": [
          "libavcodec/wmaprodec.c"
        ],
        "message": "wmaprodec: check num_vec_coeffs for validity\n\nFixes CVE-2012-2789\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Anton Khirnov <anton@khirnov.net>\n(cherry picked from commit 99f392a584dd10b553facc8e819f2c7e982e176d)\n\nSigned-off-by: Reinhard Tartler <siretart@tauware.de>",
        "before_after_code_files": [
          "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c"
          ],
          "candidate": [
            "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/wmaprodec.c||libavcodec/wmaprodec.c": [
          "File: libavcodec/wmaprodec.c -> libavcodec/wmaprodec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1158:             int num_bits = av_log2((s->subframe_len + 3)/4) + 1;",
          "1159:             for (i = 0; i < s->channels_for_cur_subframe; i++) {",
          "1160:                 int c = s->channel_indexes_for_cur_subframe[i];",
          "1162:             }",
          "1163:         } else {",
          "1164:             for (i = 0; i < s->channels_for_cur_subframe; i++) {",
          "",
          "[Removed Lines]",
          "1161:                 s->channel[c].num_vec_coeffs = get_bits(&s->gb, num_bits) << 2;",
          "",
          "[Added Lines]",
          "1161:                 int num_vec_coeffs = get_bits(&s->gb, num_bits) << 2;",
          "1162:                 if (num_vec_coeffs > WMAPRO_BLOCK_MAX_SIZE) {",
          "1163:                     av_log(s->avctx, AV_LOG_ERROR, \"num_vec_coeffs %d is too large\\n\", num_vec_coeffs);",
          "1164:                     return AVERROR_INVALIDDATA;",
          "1165:                 }",
          "1166:                 s->channel[c].num_vec_coeffs = num_vec_coeffs;",
          "",
          "---------------"
        ]
      }
    }
  ]
}