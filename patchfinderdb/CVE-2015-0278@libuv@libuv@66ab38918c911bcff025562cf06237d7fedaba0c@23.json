{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d3c30aa276b344ebb4115acfe0dbdd0606b439d3",
      "candidate_info": {
        "commit_hash": "d3c30aa276b344ebb4115acfe0dbdd0606b439d3",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/d3c30aa276b344ebb4115acfe0dbdd0606b439d3",
        "files": [
          "uv.gyp"
        ],
        "message": "windows: use '-l<library>' form in gyp file\n\nThis fixes the build with MinGW32.",
        "before_after_code_files": [
          "uv.gyp||uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "uv.gyp||uv.gyp": [
          "File: uv.gyp -> uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:           ],",
          "115:           'link_settings': {",
          "116:             'libraries': [",
          "122:             ],",
          "123:           },",
          "124:         }, { # Not Windows i.e. POSIX",
          "",
          "[Removed Lines]",
          "117:               '-ladvapi32.lib',",
          "118:               '-liphlpapi.lib',",
          "119:               '-lpsapi.lib',",
          "120:               '-lshell32.lib',",
          "121:               '-lws2_32.lib'",
          "",
          "[Added Lines]",
          "117:               '-ladvapi32',",
          "118:               '-liphlpapi',",
          "119:               '-lpsapi',",
          "120:               '-lshell32',",
          "121:               '-lws2_32'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "409:             'test/runner-win.c',",
          "410:             'test/runner-win.h'",
          "411:           ],",
          "413:         }, { # POSIX",
          "414:           'defines': [ '_GNU_SOURCE' ],",
          "415:           'sources': [",
          "",
          "[Removed Lines]",
          "412:           'libraries': [ 'ws2_32.lib' ]",
          "",
          "[Added Lines]",
          "412:           'libraries': [ '-lws2_32' ]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "473:             'test/runner-win.c',",
          "474:             'test/runner-win.h',",
          "475:           ],",
          "477:         }, { # POSIX",
          "478:           'defines': [ '_GNU_SOURCE' ],",
          "479:           'sources': [",
          "",
          "[Removed Lines]",
          "476:           'libraries': [ 'ws2_32.lib' ]",
          "",
          "[Added Lines]",
          "476:           'libraries': [ '-lws2_32' ]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16fb1291a0214b5d7db6bad239d568b1307809af",
      "candidate_info": {
        "commit_hash": "16fb1291a0214b5d7db6bad239d568b1307809af",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/16fb1291a0214b5d7db6bad239d568b1307809af",
        "files": [
          "src/win/error.c"
        ],
        "message": "windows: fix duplicate case build error\n\nMea culpa, the previous commit added another ERROR_FILENAME_EXCED_RANGE\ncase to the switch statement in uv_translate_sys_error().  This commit\nfixes up the build error.",
        "before_after_code_files": [
          "src/win/error.c||src/win/error.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/error.c||src/win/error.c": [
          "File: src/win/error.c -> src/win/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:     case WSAETIMEDOUT:                      return UV_ETIMEDOUT;",
          "163:     case ERROR_NOT_SAME_DEVICE:             return UV_EXDEV;",
          "164:     case ERROR_INVALID_FUNCTION:            return UV_EISDIR;",
          "166:     case ERROR_META_EXPANSION_TOO_LONG:     return UV_E2BIG;",
          "167:     default:                                return UV_UNKNOWN;",
          "168:   }",
          "",
          "[Removed Lines]",
          "165:     case ERROR_FILENAME_EXCED_RANGE:        return UV_E2BIG;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ffb82ef08ce79cd20f0f0ca6b061b9a40b38f99",
      "candidate_info": {
        "commit_hash": "6ffb82ef08ce79cd20f0f0ca6b061b9a40b38f99",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/6ffb82ef08ce79cd20f0f0ca6b061b9a40b38f99",
        "files": [
          "src/unix/core.c"
        ],
        "message": "unix: don't run i/o callbacks after prepare callbacks\n\nRun them after timers, like Windows does.\n\nCloses #1317",
        "before_after_code_files": [
          "src/unix/core.c||src/unix/core.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/core.c||src/unix/core.c": [
          "File: src/unix/core.c -> src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "284:     uv__update_time(loop);",
          "285:     uv__run_timers(loop);",
          "286:     uv__run_idle(loop);",
          "287:     uv__run_prepare(loop);",
          "290:     timeout = 0;",
          "291:     if ((mode & UV_RUN_NOWAIT) == 0)",
          "",
          "[Removed Lines]",
          "288:     uv__run_pending(loop);",
          "",
          "[Added Lines]",
          "286:     uv__run_pending(loop);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5c00a0ee331ed77ee91a75ab33612afeb1a91088",
      "candidate_info": {
        "commit_hash": "5c00a0ee331ed77ee91a75ab33612afeb1a91088",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/5c00a0ee331ed77ee91a75ab33612afeb1a91088",
        "files": [
          "include/uv-unix.h",
          "src/unix/process.c"
        ],
        "message": "unix: fix SIGCHLD waitpid() race in process.c\n\nBefore this commit, multiple event loops raced with each other when a\nSIGCHLD signal was received.  More concretely, it was possible for\nevent loop A to consume waitpid() events that should have been\ndelivered to event loop B.\n\nThis commit addresses that by doing a linear scan over the list of\nchild processes.  An O(n) scan is not terribly efficient but the\nactual performance impact is not measurable in a benchmark that spawns\nrounds of several thousands instances of /bin/false.  For the time\nbeing, this patch will suffice; we can always revisit it later.\n\nFixes #887.",
        "before_after_code_files": [
          "include/uv-unix.h||include/uv-unix.h",
          "src/unix/process.c||src/unix/process.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [
            "src/unix/process.c||src/unix/process.c"
          ],
          "candidate": [
            "src/unix/process.c||src/unix/process.c"
          ]
        }
      },
      "candidate_diff": {
        "include/uv-unix.h||include/uv-unix.h": [
          "File: include/uv-unix.h -> include/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "288: #define UV_PROCESS_PRIVATE_FIELDS                                             \\",
          "289:   void* queue[2];                                                             \\",
          "290:   int errorno;                                                                \\",
          "292: #define UV_FS_PRIVATE_FIELDS                                                  \\",
          "293:   const char *new_path;                                                       \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "291:   int status;                                                                 \\",
          "",
          "---------------"
        ],
        "src/unix/process.c||src/unix/process.c": [
          "File: src/unix/process.c -> src/unix/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: }",
          "66: static void uv__chld(uv_signal_t* handle, int signum) {",
          "67:   uv_process_t* process;",
          "68:   int exit_status;",
          "69:   int term_signal;",
          "70:   int status;",
          "71:   pid_t pid;",
          "73:   assert(signum == SIGCHLD);",
          "112:   }",
          "113: }",
          "",
          "[Removed Lines]",
          "50: static uv_process_t* uv__process_find(uv_loop_t* loop, int pid) {",
          "51:   uv_process_t* handle;",
          "52:   QUEUE* h;",
          "53:   QUEUE* q;",
          "55:   h = uv__process_queue(loop, pid);",
          "57:   QUEUE_FOREACH(q, h) {",
          "58:     handle = QUEUE_DATA(q, uv_process_t, queue);",
          "59:     if (handle->pid == pid) return handle;",
          "60:   }",
          "62:   return NULL;",
          "63: }",
          "75:   for (;;) {",
          "76:     do",
          "77:       pid = waitpid(-1, &status, WNOHANG);",
          "78:     while (pid == -1 && errno == EINTR);",
          "80:     if (pid == 0)",
          "81:       return;",
          "83:     if (pid == -1) {",
          "84:       if (errno == ECHILD)",
          "86:       else",
          "87:         abort();",
          "88:     }",
          "90:     process = uv__process_find(handle->loop, pid);",
          "91:     if (process == NULL)",
          "94:     uv__handle_stop(process);",
          "96:     if (process->exit_cb == NULL)",
          "97:       continue;",
          "99:     exit_status = 0;",
          "100:     term_signal = 0;",
          "102:     if (WIFEXITED(status))",
          "103:       exit_status = WEXITSTATUS(status);",
          "105:     if (WIFSIGNALED(status))",
          "106:       term_signal = WTERMSIG(status);",
          "108:     if (process->errorno)",
          "111:     process->exit_cb(process, exit_status, term_signal);",
          "",
          "[Added Lines]",
          "52:   uv_loop_t* loop;",
          "55:   unsigned int i;",
          "58:   QUEUE pending;",
          "59:   QUEUE* h;",
          "60:   QUEUE* q;",
          "64:   QUEUE_INIT(&pending);",
          "65:   loop = handle->loop;",
          "67:   for (i = 0; i < ARRAY_SIZE(loop->process_handles); i++) {",
          "68:     h = loop->process_handles + i;",
          "69:     q = QUEUE_HEAD(h);",
          "71:     while (q != h) {",
          "72:       process = QUEUE_DATA(q, uv_process_t, queue);",
          "73:       q = QUEUE_NEXT(q);",
          "75:       do",
          "76:         pid = waitpid(process->pid, &status, WNOHANG);",
          "77:       while (pid == -1 && errno == EINTR);",
          "79:       if (pid == 0)",
          "80:         continue;",
          "82:       if (pid == -1) {",
          "83:         if (errno != ECHILD)",
          "84:           abort();",
          "85:         continue;",
          "86:       }",
          "88:       process->status = status;",
          "89:       QUEUE_REMOVE(&process->queue);",
          "90:       QUEUE_INSERT_TAIL(&pending, &process->queue);",
          "91:     }",
          "93:     while (!QUEUE_EMPTY(&pending)) {",
          "94:       q = QUEUE_HEAD(&pending);",
          "95:       QUEUE_REMOVE(q);",
          "96:       QUEUE_INIT(q);",
          "98:       process = QUEUE_DATA(q, uv_process_t, queue);",
          "99:       uv__handle_stop(process);",
          "101:       if (process->exit_cb == NULL)",
          "102:         continue;",
          "104:       exit_status = 0;",
          "105:       if (WIFEXITED(process->status))",
          "106:         exit_status = WEXITSTATUS(process->status);",
          "108:       term_signal = 0;",
          "109:       if (WIFSIGNALED(process->status))",
          "110:         term_signal = WTERMSIG(process->status);",
          "112:       if (process->errorno != 0)",
          "115:       process->exit_cb(process, exit_status, term_signal);",
          "116:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "429:   uv__close(signal_pipe[1]);",
          "431:   process->errorno = 0;",
          "432:   do",
          "433:     r = read(signal_pipe[0], &process->errorno, sizeof(process->errorno));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "436:   process->status = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed36b85d3b7f1c912fa9aaef9fd65196d12a263f",
      "candidate_info": {
        "commit_hash": "ed36b85d3b7f1c912fa9aaef9fd65196d12a263f",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/ed36b85d3b7f1c912fa9aaef9fd65196d12a263f",
        "files": [
          "Makefile.am",
          "include/uv.h",
          "src/unix/core.c",
          "src/win/core.c",
          "test/test-list.h",
          "test/test-loop-alive.c",
          "uv.gyp"
        ],
        "message": "unix, windows: add uv_loop_alive() function\n\nUseful to know when the the event loop is empty, this can't be done with\nuv_run() without possibly blocking, or running some events (which might\nempty the event loop as a side-effect).",
        "before_after_code_files": [
          "Makefile.am||Makefile.am",
          "include/uv.h||include/uv.h",
          "src/unix/core.c||src/unix/core.c",
          "src/win/core.c||src/win/core.c",
          "test/test-list.h||test/test-list.h",
          "test/test-loop-alive.c||test/test-loop-alive.c",
          "uv.gyp||uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:                          test/test-ipc.c \\",
          "146:                          test/test-list.h \\",
          "147:                          test/test-loop-handles.c \\",
          "148:                          test/test-loop-stop.c \\",
          "149:                          test/test-loop-time.c \\",
          "150:                          test/test-multiple-listen.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:                          test/test-loop-alive.c \\",
          "",
          "---------------"
        ],
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "273: UV_EXTERN int uv_run(uv_loop_t*, uv_run_mode mode);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279: UV_EXTERN int uv_loop_alive(const uv_loop_t* loop);",
          "",
          "---------------"
        ],
        "src/unix/core.c||src/unix/core.c": [
          "File: src/unix/core.c -> src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "248: }",
          "252:   return uv__has_active_handles(loop) ||",
          "253:          uv__has_active_reqs(loop) ||",
          "254:          loop->closing_handles != NULL;",
          "255: }",
          "258: int uv_run(uv_loop_t* loop, uv_run_mode mode) {",
          "259:   int timeout;",
          "260:   int r;",
          "",
          "[Removed Lines]",
          "251: static int uv__loop_alive(uv_loop_t* loop) {",
          "",
          "[Added Lines]",
          "251: static int uv__loop_alive(const uv_loop_t* loop) {",
          "258: int uv_loop_alive(const uv_loop_t* loop) {",
          "259:     return uv__loop_alive(loop);",
          "260: }",
          "",
          "---------------"
        ],
        "src/win/core.c||src/win/core.c": [
          "File: src/win/core.c -> src/win/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "256: }",
          "260:   return loop->active_handles > 0 ||",
          "261:          !QUEUE_EMPTY(&loop->active_reqs) ||",
          "262:          loop->endgame_handles != NULL;",
          "263: }",
          "266: int uv_run(uv_loop_t *loop, uv_run_mode mode) {",
          "267:   int r;",
          "268:   void (*poll)(uv_loop_t* loop, int block);",
          "",
          "[Removed Lines]",
          "259: static int uv__loop_alive(uv_loop_t* loop) {",
          "",
          "[Added Lines]",
          "259: static int uv__loop_alive(const uv_loop_t* loop) {",
          "266: int uv_loop_alive(const uv_loop_t* loop) {",
          "267:     return uv__loop_alive(loop);",
          "268: }",
          "",
          "---------------"
        ],
        "test/test-list.h||test/test-list.h": [
          "File: test/test-list.h -> test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: TEST_DECLARE   (close_order)",
          "25: TEST_DECLARE   (run_once)",
          "26: TEST_DECLARE   (run_nowait)",
          "27: TEST_DECLARE   (loop_stop)",
          "28: TEST_DECLARE   (loop_update_time)",
          "29: TEST_DECLARE   (barrier_1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: TEST_DECLARE   (loop_alive)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "253:   TEST_ENTRY  (close_order)",
          "254:   TEST_ENTRY  (run_once)",
          "255:   TEST_ENTRY  (run_nowait)",
          "256:   TEST_ENTRY  (loop_stop)",
          "257:   TEST_ENTRY  (loop_update_time)",
          "258:   TEST_ENTRY  (barrier_1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:   TEST_ENTRY  (loop_alive)",
          "",
          "---------------"
        ],
        "test/test-loop-alive.c||test/test-loop-alive.c": [
          "File: test/test-loop-alive.c -> test/test-loop-alive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"uv.h\"",
          "23: #include \"task.h\"",
          "25: static uv_timer_t timer_handle;",
          "27: static void timer_cb(uv_timer_t* handle, int status) {",
          "28:   ASSERT(handle);",
          "29:   ASSERT(status == 0);",
          "30: }",
          "33: static uv_work_t work_req;",
          "35: static void work_cb(uv_work_t* req) {",
          "36:   ASSERT(req);",
          "37: }",
          "39: static void after_work_cb(uv_work_t* req, int status) {",
          "40:   ASSERT(req);",
          "41:   ASSERT(status == 0);",
          "42: }",
          "45: TEST_IMPL(loop_alive) {",
          "46:   int r;",
          "47:   ASSERT(!uv_loop_alive(uv_default_loop()));",
          "50:   uv_timer_init(uv_default_loop(), &timer_handle);",
          "51:   uv_timer_start(&timer_handle, timer_cb, 100, 0);",
          "52:   ASSERT(uv_loop_alive(uv_default_loop()));",
          "54:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "55:   ASSERT(r == 0);",
          "56:   ASSERT(!uv_loop_alive(uv_default_loop()));",
          "59:   r = uv_queue_work(uv_default_loop(), &work_req, work_cb, after_work_cb);",
          "60:   ASSERT(r == 0);",
          "61:   ASSERT(uv_loop_alive(uv_default_loop()));",
          "63:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "64:   ASSERT(r == 0);",
          "65:   ASSERT(!uv_loop_alive(uv_default_loop()));",
          "67:   return 0;",
          "68: }",
          "",
          "---------------"
        ],
        "uv.gyp||uv.gyp": [
          "File: uv.gyp -> uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "323:         'test/test-ipc-send-recv.c',",
          "324:         'test/test-list.h',",
          "325:         'test/test-loop-handles.c',",
          "326:         'test/test-loop-stop.c',",
          "327:         'test/test-loop-time.c',",
          "328:         'test/test-walk-handles.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "326:         'test/test-loop-alive.c',",
          "",
          "---------------"
        ]
      }
    }
  ]
}