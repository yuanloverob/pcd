{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7fc835afe362ebd30a0dbec81d3360bd24525222",
      "candidate_info": {
        "commit_hash": "7fc835afe362ebd30a0dbec81d3360bd24525222",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7fc835afe362ebd30a0dbec81d3360bd24525222",
        "files": [
          "lib/timers.js",
          "test/simple/test-timers.js"
        ],
        "message": "timers: handle negative or non-numeric timeout values\n\nFollows browser behaviour by scheduling the callback on the next tick.\n\nFixes #593.",
        "before_after_code_files": [
          "lib/timers.js||litimers.js",
          "test/simple/test-timers.js||test/simple/test-timers.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/timers.js||litimers.js": [
          "File: lib/timers.js -> litimers.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: var L = require('_linklist');",
          "24: var assert = require('assert').ok;",
          "26: var debug;",
          "27: if (process.env.NODE_DEBUG && /timer/.test(process.env.NODE_DEBUG)) {",
          "28:   debug = function() { require('util').error.apply(this, arguments); };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "162: exports.setTimeout = function(callback, after) {",
          "163:   var timer;",
          "185:   } else {",
          "197:     }",
          "200:   }",
          "202:   return timer;",
          "203: };",
          "",
          "[Removed Lines]",
          "165:   if (after <= 0) {",
          "167:     timer = new Timer();",
          "168:     timer._callback = callback;",
          "170:     if (arguments.length <= 2) {",
          "171:       timer._onTimeout = function() {",
          "172:         this._callback();",
          "173:         this.close();",
          "174:       }",
          "175:     } else {",
          "176:       var args = Array.prototype.slice.call(arguments, 2);",
          "177:       timer._onTimeout = function() {",
          "178:         this._callback.apply(timer, args);",
          "179:         this.close();",
          "180:       }",
          "181:     }",
          "183:     timer.ontimeout = timer._onTimeout;",
          "184:     timer.start(0, 0);",
          "186:     timer = { _idleTimeout: after };",
          "187:     timer._idlePrev = timer;",
          "188:     timer._idleNext = timer;",
          "190:     if (arguments.length <= 2) {",
          "191:       timer._onTimeout = callback;",
          "192:     } else {",
          "193:       var args = Array.prototype.slice.call(arguments, 2);",
          "194:       timer._onTimeout = function() {",
          "195:         callback.apply(timer, args);",
          "196:       }",
          "199:     exports.active(timer);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "218: exports.setInterval = function(callback, repeat) {",
          "219:   var timer = new Timer();",
          "221:   var args = Array.prototype.slice.call(arguments, 2);",
          "222:   timer.ontimeout = function() {",
          "223:     callback.apply(timer, args);",
          "224:   }",
          "227:   return timer;",
          "228: };",
          "",
          "[Removed Lines]",
          "226:   timer.start(repeat, repeat ? repeat : 1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-timers.js||test/simple/test-timers.js": [
          "File: test/simple/test-timers.js -> test/simple/test-timers.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "25: var inputs = [",
          "26:   undefined,",
          "27:   null,",
          "28:   true,",
          "29:   false,",
          "30:   '',",
          "31:   [],",
          "32:   {},",
          "33:   NaN,",
          "34:   +Infinity,",
          "35:   -Infinity,",
          "36:   (1.0 / 0.0),      // sanity check",
          "37:   parseFloat('x'),  // NaN",
          "38:   -10,",
          "39:   -1,",
          "40:   -0.5,",
          "41:   -0.0,",
          "42:   0,",
          "43:   0.0,",
          "44:   0.5,",
          "45:   1,",
          "46:   1.0,",
          "47:   10,",
          "48:   2147483648 // browser behaviour: timeouts > 2^31-1 run on next tick",
          "49: ];",
          "51: var timeouts = [];",
          "52: var intervals = [];",
          "54: inputs.forEach(function(value, index) {",
          "55:   setTimeout(function() {",
          "56:     timeouts[index] = true;",
          "57:   }, value);",
          "59:   var handle = setInterval(function() {",
          "60:     clearInterval(handle); // disarm timer or we'll never finish",
          "61:     intervals[index] = true;",
          "62:   }, value);",
          "63: });",
          "65: process.on('exit', function() {",
          "67:   inputs.forEach(function(value, index) {",
          "68:     assert.equal(true, timeouts[index]);",
          "69:     assert.equal(true, intervals[index]);",
          "70:   });",
          "71: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3644b0bc9637fbb17ec74b41fe2dcb1dd978699e",
      "candidate_info": {
        "commit_hash": "3644b0bc9637fbb17ec74b41fe2dcb1dd978699e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3644b0bc9637fbb17ec74b41fe2dcb1dd978699e",
        "files": [
          "deps/uv/common.gypi",
          "deps/uv/src/unix/core.c",
          "deps/uv/src/unix/linux/syscalls.c"
        ],
        "message": "uv: upgrade to 5b8a112",
        "before_after_code_files": [
          "deps/uv/common.gypi||deps/uv/common.gypi",
          "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c",
          "deps/uv/src/unix/linux/syscalls.c||deps/uv/src/unix/linux/syscalls.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/common.gypi||deps/uv/common.gypi": [
          "File: deps/uv/common.gypi -> deps/uv/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:             'LinkIncremental': 2, # enable incremental linking",
          "33:           },",
          "34:         },",
          "35:         'conditions': [",
          "36:           ['OS != \"win\"', {",
          "37:             'defines': [ 'EV_VERIFY=2' ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:         'xcode_settings': {",
          "36:           'GCC_OPTIMIZATION_LEVEL': '0',",
          "37:         },",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c": [
          "File: deps/uv/src/unix/core.c -> deps/uv/src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "427:   while (1) {",
          "428: #if __linux__",
          "429:     peerfd = uv__accept4(sockfd,",
          "430:                          NULL,",
          "431:                          NULL,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "429:     static int no_accept4;",
          "431:     if (no_accept4)",
          "432:       goto skip;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "440:     if (errno != ENOSYS)",
          "441:       break;",
          "442: #endif",
          "444:     peerfd = accept(sockfd, NULL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "448:     no_accept4 = 1;",
          "449: skip:",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/linux/syscalls.c||deps/uv/src/unix/linux/syscalls.c": [
          "File: deps/uv/src/unix/linux/syscalls.c -> deps/uv/src/unix/linux/syscalls.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153: int uv__accept4(int fd, struct sockaddr* addr, socklen_t* addrlen, int flags) {",
          "154: #if __i386__",
          "162: #elif __NR_accept4",
          "163:   return syscall(__NR_accept4, fd, addr, addrlen, flags);",
          "164: #else",
          "",
          "[Removed Lines]",
          "155:   unsigned long args[] = {",
          "156:     (unsigned long) fd,",
          "157:     (unsigned long) addr,",
          "158:     (unsigned long) addrlen,",
          "159:     (unsigned long) flags",
          "160:   };",
          "161:   return syscall(__NR_socketcall, 18 /* SYS_ACCEPT4 */, args);",
          "",
          "[Added Lines]",
          "155:   unsigned long args[4];",
          "156:   int r;",
          "158:   args[0] = (unsigned long) fd;",
          "159:   args[1] = (unsigned long) addr;",
          "160:   args[2] = (unsigned long) addrlen;",
          "161:   args[3] = (unsigned long) flags;",
          "163:   r = syscall(__NR_socketcall, 18 /* SYS_ACCEPT4 */, args);",
          "168:   if (r == -1)",
          "169:     if (errno == EINVAL)",
          "170:       if ((flags & ~(UV__SOCK_CLOEXEC|UV__SOCK_NONBLOCK)) == 0)",
          "171:         errno = ENOSYS;",
          "173:   return r;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9fb088e3ab71ed88a9cbf1f7e6c3bbe30e8d2f1a",
      "candidate_info": {
        "commit_hash": "9fb088e3ab71ed88a9cbf1f7e6c3bbe30e8d2f1a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9fb088e3ab71ed88a9cbf1f7e6c3bbe30e8d2f1a",
        "files": [
          "src/node.d"
        ],
        "message": "dtrace: add missing translator\n\nAdd missing translator for node_dtrace_http_*_request_t types.\n\nFixes #2667.",
        "before_after_code_files": [
          "src/node.d||src/node.d"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.d||src/node.d": [
          "File: src/node.d -> src/node.d",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:      &((node_dtrace_connection64_t *)nc)->buffered, sizeof (int32_t));",
          "65: };",
          "67: typedef struct {",
          "68:  uint32_t version;",
          "69: } node_dtrace_http_request_t;",
          "71: typedef struct {",
          "72:  uint32_t url;",
          "73:  uint32_t method;",
          "76: typedef struct {",
          "77:  uint32_t version;",
          "78:  uint32_t url;",
          "79:  uint32_t method;",
          "80:  uint32_t forwardedFor;",
          "83: typedef struct {",
          "84:  uint64_t url;",
          "85:  uint64_t method;",
          "88: typedef struct {",
          "89:  uint32_t version;",
          "",
          "[Removed Lines]",
          "74: } node_dtrace_http_request_v0_t;",
          "81: } node_dtrace_http_request_v1_t;",
          "86: } node_dtrace_http_request64_v0_t;",
          "",
          "[Added Lines]",
          "71: typedef struct {",
          "72:  uint32_t url;",
          "73:  uint32_t method;",
          "74: } node_dtrace_http_client_request_t;",
          "76: typedef struct {",
          "77:  uint64_t url;",
          "78:  uint64_t method;",
          "79: } node_dtrace_http_client_request64_t;",
          "95:  uint64_t dummy1;",
          "98: typedef struct {",
          "99:  uint32_t version;",
          "100:  uint64_t dummy2;",
          "101:  uint64_t dummy3;",
          "102: } node_dtrace_http_server_request_t;",
          "111: } node_dtrace_http_server_request_v0_t;",
          "118: } node_dtrace_http_server_request_v1_t;",
          "123: } node_dtrace_http_server_request64_v0_t;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:  uint64_t url;",
          "92:  uint64_t method;",
          "93:  uint64_t forwardedFor;",
          "96: typedef struct {",
          "97:  string url;",
          "98:  string method;",
          "",
          "[Removed Lines]",
          "94: } node_dtrace_http_request64_v1_t;",
          "",
          "[Added Lines]",
          "131: } node_dtrace_http_server_request64_v1_t;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100: } node_http_request_t;",
          "119:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "120:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "122:       sizeof (uint32_t))) :",
          "123:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "125:       sizeof (uint64_t)))) :",
          "126:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "127:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "129:       sizeof (uint32_t))) :",
          "130:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "132:       sizeof (uint64_t))));",
          "135:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "136:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "138:       sizeof (uint32_t))) :",
          "139:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "141:       sizeof (uint64_t)))) :",
          "142:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "143:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "145:       sizeof (uint32_t))) :",
          "146:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "148:       sizeof (uint64_t))));",
          "152:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "153:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "155:       sizeof (uint32_t))) :",
          "156:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "158:       sizeof (uint64_t))));",
          "159: };",
          "",
          "[Removed Lines]",
          "117: translator node_http_request_t <node_dtrace_http_request_t *nd> {",
          "118:  url = (*(uint32_t *)copyin((uintptr_t)&nd->version, sizeof (uint32_t))) >= 4096 ?",
          "121:       &((node_dtrace_http_request_v0_t *)nd)->url,",
          "124:       &((node_dtrace_http_request64_v0_t *)nd)->url,",
          "128:       &((node_dtrace_http_request_v1_t *)nd)->url,",
          "131:       &((node_dtrace_http_request64_v1_t *)nd)->url,",
          "134:  method = (*(uint32_t *)copyin((uintptr_t)&nd->version, sizeof (uint32_t))) >= 4096 ?",
          "137:       &((node_dtrace_http_request_v0_t *)nd)->method,",
          "140:       &((node_dtrace_http_request64_v0_t *)nd)->method,",
          "144:       &((node_dtrace_http_request_v1_t *)nd)->method,",
          "147:       &((node_dtrace_http_request64_v1_t *)nd)->method,",
          "150:  forwardedFor = (*(uint32_t *)",
          "151:      copyin((uintptr_t)&nd->version, sizeof (uint32_t))) >= 4096 ? \"\" :",
          "154:       &((node_dtrace_http_request_v1_t *)nd)->forwardedFor,",
          "157:       &((node_dtrace_http_request64_v1_t *)nd)->forwardedFor,",
          "",
          "[Added Lines]",
          "177: translator node_http_request_t <node_dtrace_http_server_request_t *nd> {",
          "178:  url = (*(uint32_t *)copyin((uintptr_t)(uint32_t *)nd,",
          "179:   sizeof (uint32_t))) >= 4096 ?",
          "180:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "181:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "182:       &((node_dtrace_http_server_request_v0_t *)nd)->url,",
          "183:       sizeof (uint32_t))) :",
          "184:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "185:       &((node_dtrace_http_server_request64_v0_t *)nd)->url,",
          "186:       sizeof (uint64_t)))) :",
          "187:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "188:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "189:       &((node_dtrace_http_server_request_v1_t *)nd)->url,",
          "190:       sizeof (uint32_t))) :",
          "191:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "192:       &((node_dtrace_http_server_request64_v1_t *)nd)->url,",
          "193:       sizeof (uint64_t))));",
          "195:  method = (*(uint32_t *)copyin((uintptr_t)(uint32_t *)nd,",
          "196:   sizeof (uint32_t))) >= 4096 ?",
          "197:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "198:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "199:       &((node_dtrace_http_server_request_v0_t *)nd)->method,",
          "200:       sizeof (uint32_t))) :",
          "201:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "202:       &((node_dtrace_http_server_request64_v0_t *)nd)->method,",
          "203:       sizeof (uint64_t)))) :",
          "206:       &((node_dtrace_http_server_request_v1_t *)nd)->method,",
          "209:       &((node_dtrace_http_server_request64_v1_t *)nd)->method,",
          "210:       sizeof (uint64_t))));",
          "212:  forwardedFor = (*(uint32_t *)copyin((uintptr_t)(uint32_t *)nd,",
          "213:   sizeof (uint32_t))) >= 4096 ? \"\" :",
          "214:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "215:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "216:       &((node_dtrace_http_server_request_v1_t *)nd)->forwardedFor,",
          "217:       sizeof (uint32_t))) :",
          "218:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "219:       &((node_dtrace_http_server_request64_v1_t *)nd)->",
          "220:       forwardedFor, sizeof (uint64_t))));",
          "221: };",
          "227: translator node_http_request_t <node_dtrace_http_client_request_t *nd> {",
          "228:  url = (*(uint32_t *)copyin((uintptr_t)(uint32_t *)nd,",
          "229:   sizeof (uint32_t))) >= 4096 ?",
          "230:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "231:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "232:       &((node_dtrace_http_server_request_v0_t *)nd)->url,",
          "233:       sizeof (uint32_t))) :",
          "234:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "235:       &((node_dtrace_http_server_request64_v0_t *)nd)->url,",
          "239:       &((node_dtrace_http_server_request_v1_t *)nd)->url,",
          "242:       &((node_dtrace_http_server_request64_v1_t *)nd)->url,",
          "245:  method = (*(uint32_t *)copyin((uintptr_t)(uint32_t *)nd,",
          "246:   sizeof (uint32_t))) >= 4096 ?",
          "249:       &((node_dtrace_http_server_request_v0_t *)nd)->method,",
          "252:       &((node_dtrace_http_server_request64_v0_t *)nd)->method,",
          "256:       &((node_dtrace_http_server_request_v1_t *)nd)->method,",
          "259:       &((node_dtrace_http_server_request64_v1_t *)nd)->method,",
          "262:  forwardedFor = \"\";",
          "263: };",
          "271: translator node_http_request_t <node_dtrace_http_request_t *nd> {",
          "272:  url = (*(uint32_t *)copyin((uintptr_t)(uint32_t *)nd,",
          "273:   sizeof (uint32_t))) >= 4096 ?",
          "276:       &((node_dtrace_http_server_request_v0_t *)nd)->url,",
          "279:       &((node_dtrace_http_server_request64_v0_t *)nd)->url,",
          "280:       sizeof (uint64_t)))) :",
          "281:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "282:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "283:       &((node_dtrace_http_server_request_v1_t *)nd)->url,",
          "284:       sizeof (uint32_t))) :",
          "285:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "286:       &((node_dtrace_http_server_request64_v1_t *)nd)->url,",
          "287:       sizeof (uint64_t))));",
          "289:  method = (*(uint32_t *)copyin((uintptr_t)(uint32_t *)nd,",
          "290:   sizeof (uint32_t))) >= 4096 ?",
          "291:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "292:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "293:       &((node_dtrace_http_server_request_v0_t *)nd)->method,",
          "294:       sizeof (uint32_t))) :",
          "295:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "296:       &((node_dtrace_http_server_request64_v0_t *)nd)->method,",
          "297:       sizeof (uint64_t)))) :",
          "298:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "299:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "300:       &((node_dtrace_http_server_request_v1_t *)nd)->method,",
          "301:       sizeof (uint32_t))) :",
          "302:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "303:       &((node_dtrace_http_server_request64_v1_t *)nd)->method,",
          "306:  forwardedFor = (*(uint32_t *) copyin((uintptr_t)(uint32_t *)nd,",
          "307:   sizeof (uint32_t))) >= 4096 ? \"\" :",
          "308:      (curpsinfo->pr_dmodel == PR_MODEL_ILP32 ?",
          "309:   copyinstr(*(uint32_t *)copyin((uintptr_t)",
          "310:       &((node_dtrace_http_server_request_v1_t *)nd)->forwardedFor,",
          "311:       sizeof (uint32_t))) :",
          "312:   copyinstr(*(uint64_t *)copyin((uintptr_t)",
          "313:       &((node_dtrace_http_server_request64_v1_t *)nd)->",
          "314:       forwardedFor, sizeof (uint64_t))));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2fad7a8c1beb4df94d6842bb6576442164c65794",
      "candidate_info": {
        "commit_hash": "2fad7a8c1beb4df94d6842bb6576442164c65794",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2fad7a8c1beb4df94d6842bb6576442164c65794",
        "files": [
          "deps/openssl/openssl/crypto/sha/asm/sha1-armv4-large.pl"
        ],
        "message": "openssl: apply upstream sha1-armv4-large.pl patch\n\nThis is a back-port of r22768: sha1-armv4-large.pl: comply with ABI.",
        "before_after_code_files": [
          "deps/openssl/openssl/crypto/shasm/sha1-armv4-large.pl||deps/openssl/openssl/crypto/sha/asm/sha1-armv4-large.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/openssl/crypto/shasm/sha1-armv4-large.pl||deps/openssl/openssl/crypto/sha/asm/sha1-armv4-large.pl": [
          "File: deps/openssl/openssl/crypto/shasm/sha1-armv4-large.pl -> deps/openssl/openssl/crypto/sha/asm/sha1-armv4-large.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:  sub sp,sp,#25*4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a25a27817fc8796edd9181122e9aab7ab516751a",
      "candidate_info": {
        "commit_hash": "a25a27817fc8796edd9181122e9aab7ab516751a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a25a27817fc8796edd9181122e9aab7ab516751a",
        "files": [
          "deps/uv/src/unix/core.c",
          "deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/stream.c",
          "deps/uv/src/unix/tcp.c"
        ],
        "message": "deps: upgrade libuv to cc1b3de",
        "before_after_code_files": [
          "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c",
          "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c",
          "deps/uv/src/unix/tcp.c||deps/uv/src/unix/tcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c": [
          "File: deps/uv/src/unix/core.c -> deps/uv/src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "230: static unsigned int uv__poll_timeout(uv_loop_t* loop) {",
          "232:     return 0;",
          "234:   if (!ngx_queue_empty(&loop->idle_handles))",
          "",
          "[Removed Lines]",
          "231:   if (!uv__has_active_handles(loop))",
          "",
          "[Added Lines]",
          "231:   if (!uv__has_active_handles(loop) && !uv__has_active_reqs(loop))",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h": [
          "File: deps/uv/src/unix/internal.h -> deps/uv/src/unix/internal.h"
        ],
        "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c": [
          "File: deps/uv/src/unix/stream.c -> deps/uv/src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "787:   stream->connect_req = NULL;",
          "788:   uv__req_unregister(stream->loop, req);",
          "796:   if (req->cb) {",
          "797:     uv__set_sys_error(stream->loop, error);",
          "798:     req->cb(req, error ? -1 : 0);",
          "",
          "[Removed Lines]",
          "791:   if (stream->flags & UV_TCP_CONNECTING) {",
          "792:     assert(stream->type == UV_TCP);",
          "793:     uv__handle_stop(stream);",
          "794:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/tcp.c||deps/uv/src/unix/tcp.c": [
          "File: deps/uv/src/unix/tcp.c -> deps/uv/src/unix/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:   while (r == -1 && errno == EINTR);",
          "111:   if (r == -1) {",
          "123:     else if (errno == ECONNREFUSED)",
          "",
          "[Removed Lines]",
          "112:     if (errno == EINPROGRESS) {",
          "118:       if (!uv__is_active(handle)) {",
          "119:         handle->flags |= UV_TCP_CONNECTING;",
          "120:         uv__handle_start(handle);",
          "121:       }",
          "122:     }",
          "",
          "[Added Lines]",
          "112:     if (errno == EINPROGRESS)",
          "",
          "---------------"
        ]
      }
    }
  ]
}