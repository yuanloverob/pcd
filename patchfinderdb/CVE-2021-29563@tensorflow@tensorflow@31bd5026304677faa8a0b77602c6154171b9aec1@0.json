{
  "cve_id": "CVE-2021-29563",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can cause a denial of service by exploiting a `CHECK`-failure coming from the implementation of `tf.raw_ops.RFFT`. Eigen code operating on an empty matrix can trigger on an assertion and will cause program termination. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "31bd5026304677faa8a0b77602c6154171b9aec1",
  "patch_info": {
    "commit_hash": "31bd5026304677faa8a0b77602c6154171b9aec1",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/31bd5026304677faa8a0b77602c6154171b9aec1",
    "files": [
      "tensorflow/core/kernels/fft_ops.cc"
    ],
    "message": "Prevent check fail in FFT\n\nPiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299",
    "before_after_code_files": [
      "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc": [
      "File: tensorflow/core/kernels/fft_ops.cc -> tensorflow/core/kernels/fft_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "222:       input_slice_sizes[i] = fft_shape[i - 1];",
      "223:       temp_shape.AddDim(fft_shape[i - 1]);",
      "224:     }",
      "226:     auto output = out->flat_inner_dims<ComplexT, FFTRank + 1>();",
      "227:     const Eigen::DSizes<Eigen::DenseIndex, FFTRank + 1> zero_start_indices;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "225:     OP_REQUIRES(ctx, temp_shape.num_elements() > 0,",
      "226:                 errors::InvalidArgument(\"Obtained a FFT shape of 0 elements: \",",
      "227:                                         temp_shape.DebugString()));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5d117463ec4e01eb7a25562c3fd7842efb59985a",
      "candidate_info": {
        "commit_hash": "5d117463ec4e01eb7a25562c3fd7842efb59985a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5d117463ec4e01eb7a25562c3fd7842efb59985a",
        "files": [
          "tensorflow/core/kernels/fft_ops.cc"
        ],
        "message": "Prevent check fail in FFT\n\nPiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299",
        "before_after_code_files": [
          "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc": [
          "File: tensorflow/core/kernels/fft_ops.cc -> tensorflow/core/kernels/fft_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:       input_slice_sizes[i] = fft_shape[i - 1];",
          "223:       temp_shape.AddDim(fft_shape[i - 1]);",
          "224:     }",
          "226:     auto output = out->flat_inner_dims<ComplexT, FFTRank + 1>();",
          "227:     const Eigen::DSizes<Eigen::DenseIndex, FFTRank + 1> zero_start_indices;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "225:     OP_REQUIRES(ctx, temp_shape.num_elements() > 0,",
          "226:                 errors::InvalidArgument(\"Obtained a FFT shape of 0 elements: \",",
          "227:                                         temp_shape.DebugString()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c5f06898c7abe8c03d98cd9d0edecef3dbc8412b",
      "candidate_info": {
        "commit_hash": "c5f06898c7abe8c03d98cd9d0edecef3dbc8412b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c5f06898c7abe8c03d98cd9d0edecef3dbc8412b",
        "files": [
          "tensorflow/core/kernels/fft_ops.cc"
        ],
        "message": "Prevent check fail in FFT\n\nPiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299",
        "before_after_code_files": [
          "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc": [
          "File: tensorflow/core/kernels/fft_ops.cc -> tensorflow/core/kernels/fft_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:       input_slice_sizes[i] = fft_shape[i - 1];",
          "222:       temp_shape.AddDim(fft_shape[i - 1]);",
          "223:     }",
          "225:     auto output = out->flat_inner_dims<ComplexT, FFTRank + 1>();",
          "226:     const Eigen::DSizes<Eigen::DenseIndex, FFTRank + 1> zero_start_indices;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     OP_REQUIRES(ctx, temp_shape.num_elements() > 0,",
          "225:                 errors::InvalidArgument(\"Obtained a FFT shape of 0 elements: \",",
          "226:                                         temp_shape.DebugString()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f116a606f2bfdb2febb4f2f904429e529137fa03",
      "candidate_info": {
        "commit_hash": "f116a606f2bfdb2febb4f2f904429e529137fa03",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f116a606f2bfdb2febb4f2f904429e529137fa03",
        "files": [
          "tensorflow/core/kernels/fft_ops.cc"
        ],
        "message": "Prevent check fail in FFT\n\nPiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299",
        "before_after_code_files": [
          "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc": [
          "File: tensorflow/core/kernels/fft_ops.cc -> tensorflow/core/kernels/fft_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:       input_slice_sizes[i] = fft_shape[i - 1];",
          "222:       temp_shape.AddDim(fft_shape[i - 1]);",
          "223:     }",
          "225:     auto output = out->flat_inner_dims<ComplexT, FFTRank + 1>();",
          "226:     const Eigen::DSizes<Eigen::DenseIndex, FFTRank + 1> zero_start_indices;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     OP_REQUIRES(ctx, temp_shape.num_elements() > 0,",
          "225:                 errors::InvalidArgument(\"Obtained a FFT shape of 0 elements: \",",
          "226:                                         temp_shape.DebugString()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "292ae19bf5e4a860d9d152b5f68781f241f5d3d0",
      "candidate_info": {
        "commit_hash": "292ae19bf5e4a860d9d152b5f68781f241f5d3d0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/292ae19bf5e4a860d9d152b5f68781f241f5d3d0",
        "files": [
          "tensorflow/core/kernels/fft_ops.cc"
        ],
        "message": "Prevent check fail in FFT\n\nPiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299",
        "before_after_code_files": [
          "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc": [
          "File: tensorflow/core/kernels/fft_ops.cc -> tensorflow/core/kernels/fft_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:       input_slice_sizes[i] = fft_shape[i - 1];",
          "222:       temp_shape.AddDim(fft_shape[i - 1]);",
          "223:     }",
          "225:     auto output = out->flat_inner_dims<ComplexT, FFTRank + 1>();",
          "226:     const Eigen::DSizes<Eigen::DenseIndex, FFTRank + 1> zero_start_indices;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     OP_REQUIRES(ctx, temp_shape.num_elements() > 0,",
          "225:                 errors::InvalidArgument(\"Obtained a FFT shape of 0 elements: \",",
          "226:                                         temp_shape.DebugString()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b3874a86033e4498a1cecba2d1344c8ab6226319",
      "candidate_info": {
        "commit_hash": "b3874a86033e4498a1cecba2d1344c8ab6226319",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/b3874a86033e4498a1cecba2d1344c8ab6226319",
        "files": [
          "tensorflow/core/kernels/fft_ops.cc"
        ],
        "message": "Prevent check fail in FFT\n\nPiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299",
        "before_after_code_files": [
          "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/fft_ops.cc||tensorflow/core/kernels/fft_ops.cc": [
          "File: tensorflow/core/kernels/fft_ops.cc -> tensorflow/core/kernels/fft_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:       input_slice_sizes[i] = fft_shape[i - 1];",
          "222:       temp_shape.AddDim(fft_shape[i - 1]);",
          "223:     }",
          "225:     auto output = out->flat_inner_dims<ComplexT, FFTRank + 1>();",
          "226:     const Eigen::DSizes<Eigen::DenseIndex, FFTRank + 1> zero_start_indices;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     OP_REQUIRES(ctx, temp_shape.num_elements() > 0,",
          "225:                 errors::InvalidArgument(\"Obtained a FFT shape of 0 elements: \",",
          "226:                                         temp_shape.DebugString()));",
          "",
          "---------------"
        ]
      }
    }
  ]
}