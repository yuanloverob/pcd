{
  "cve_id": "CVE-2013-2080",
  "cve_desc": "The core_grade component in Moodle through 2.2.10, 2.3.x before 2.3.7, and 2.4.x before 2.4.4 does not properly consider the existence of hidden grades, which allows remote authenticated users to obtain sensitive information by leveraging the student role and reading the Gradebook Overview report.",
  "repo": "moodle/moodle",
  "patch_hash": "5df9bc3998095299c6862973866252649a5e0866",
  "patch_info": {
    "commit_hash": "5df9bc3998095299c6862973866252649a5e0866",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/5df9bc3998095299c6862973866252649a5e0866",
    "files": [
      "grade/report/lib.php",
      "grade/report/overview/lib.php",
      "grade/report/upgrade.txt",
      "grade/report/user/lib.php",
      "grade/tests/reportlib_test.php"
    ],
    "message": "MDL-37475 core_grade:fixed the handling of show totals",
    "before_after_code_files": [
      "grade/report/lib.php||grade/report/lib.php",
      "grade/report/overview/lib.php||grade/report/overview/lib.php",
      "grade/report/user/lib.php||grade/report/user/lib.php",
      "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php"
    ]
  },
  "patch_diff": {
    "grade/report/lib.php||grade/report/lib.php": [
      "File: grade/report/lib.php -> grade/report/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "359:         static $previous_courseid = null;",
      "362:             return $finalgrade;",
      "363:         }",
      "",
      "[Removed Lines]",
      "361:         if( $this->showtotalsifcontainhidden==GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN ) {",
      "",
      "[Added Lines]",
      "361:         if (!is_array($this->showtotalsifcontainhidden)) {",
      "362:             debugging('showtotalsifcontainhidden should be an array', DEBUG_DEVELOPER);",
      "363:             $this->showtotalsifcontainhidden = array($courseid => $this->showtotalsifcontainhidden);",
      "364:         }",
      "366:         if ($this->showtotalsifcontainhidden[$courseid] == GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "398:         if (array_key_exists($course_item->id, $hiding_affected['altered'])) {",
      "401:                 $finalgrade = null;",
      "402:             }",
      "",
      "[Removed Lines]",
      "399:             if( !$this->showtotalsifcontainhidden ) {",
      "",
      "[Added Lines]",
      "404:             if( !$this->showtotalsifcontainhidden[$courseid] ) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "406:             }",
      "407:         } else if (!empty($hiding_affected['unknown'][$course_item->id])) {",
      "411:                 $finalgrade = null;",
      "412:             }",
      "",
      "[Removed Lines]",
      "409:             if( !$this->showtotalsifcontainhidden ) {",
      "",
      "[Added Lines]",
      "414:             if( !$this->showtotalsifcontainhidden[$courseid] ) {",
      "",
      "---------------"
    ],
    "grade/report/overview/lib.php||grade/report/overview/lib.php": [
      "File: grade/report/overview/lib.php -> grade/report/overview/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "71:         global $CFG, $COURSE, $DB;",
      "72:         parent::__construct($COURSE->id, $gpr, $context);",
      "77:         $this->user = $DB->get_record('user', array('id' => $userid));",
      "",
      "[Removed Lines]",
      "74:         $this->showtotalsifcontainhidden = grade_get_setting($this->courseid, 'report_overview_showtotalsifcontainhidden', $CFG->grade_report_overview_showtotalsifcontainhidden);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "82:         $this->showrank = array();",
      "83:         $this->showrank['any'] = false;",
      "84:         if ($this->courses) {",
      "85:             foreach ($this->courses as $course) {",
      "86:                 $this->showrank[$course->id] = grade_get_setting($course->id, 'report_overview_showrank', !empty($CFG->grade_report_overview_showrank));",
      "87:                 if ($this->showrank[$course->id]) {",
      "88:                     $this->showrank['any'] = true;",
      "89:                 }",
      "90:             }",
      "91:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:         $this->showtotalsifcontainhidden = array();",
      "92:                 $this->showtotalsifcontainhidden[$course->id] = grade_get_setting($course->id, 'report_overview_showtotalsifcontainhidden', $CFG->grade_report_overview_showtotalsifcontainhidden);",
      "",
      "---------------"
    ],
    "grade/report/user/lib.php||grade/report/user/lib.php": [
      "File: grade/report/user/lib.php -> grade/report/user/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "165:         $this->showrank        = grade_get_setting($this->courseid, 'report_user_showrank', $CFG->grade_report_user_showrank);",
      "166:         $this->showpercentage  = grade_get_setting($this->courseid, 'report_user_showpercentage', $CFG->grade_report_user_showpercentage);",
      "167:         $this->showhiddenitems = grade_get_setting($this->courseid, 'report_user_showhiddenitems', $CFG->grade_report_user_showhiddenitems);",
      "170:         $this->showgrade       = grade_get_setting($this->courseid, 'report_user_showgrade',       !empty($CFG->grade_report_user_showgrade));",
      "171:         $this->showrange       = grade_get_setting($this->courseid, 'report_user_showrange',       !empty($CFG->grade_report_user_showrange));",
      "",
      "[Removed Lines]",
      "168:         $this->showtotalsifcontainhidden = grade_get_setting($this->courseid, 'report_user_showtotalsifcontainhidden', $CFG->grade_report_user_showtotalsifcontainhidden);",
      "",
      "[Added Lines]",
      "168:         $this->showtotalsifcontainhidden = array($this->courseid => grade_get_setting($this->courseid, 'report_user_showtotalsifcontainhidden', $CFG->grade_report_user_showtotalsifcontainhidden));",
      "",
      "---------------"
    ],
    "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php": [
      "File: grade/tests/reportlib_test.php -> grade/tests/reportlib_test.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "120:         $report = new grade_report_test($course->id, $gpr, $coursecontext, $student);",
      "124:         $this->assertEquals($datagrade + $forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
      "128:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
      "132:         $this->assertEquals($forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
      "",
      "[Removed Lines]",
      "123:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN;",
      "127:         $report->showtotalsifcontainhidden = GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN;",
      "131:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN;",
      "",
      "[Added Lines]",
      "123:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN);",
      "127:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN);",
      "131:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "182:         $report = new grade_report_test($course->id, $gpr, $coursecontext, $student);",
      "186:         $this->assertEquals($datagrade + $forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
      "190:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
      "195:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
      "196:     }",
      "197: }",
      "",
      "[Removed Lines]",
      "185:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN;",
      "189:         $report->showtotalsifcontainhidden = GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN;",
      "194:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN;",
      "",
      "[Added Lines]",
      "185:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN);",
      "189:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN);",
      "194:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9db8d0301cde7aa2a5d2e3f974cd8280abb365b7",
      "candidate_info": {
        "commit_hash": "9db8d0301cde7aa2a5d2e3f974cd8280abb365b7",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/9db8d0301cde7aa2a5d2e3f974cd8280abb365b7",
        "files": [
          "grade/report/overview/lib.php"
        ],
        "message": "MDL-37357 core_grade: fixed the showing and hiding of rank on the overview report",
        "before_after_code_files": [
          "grade/report/overview/lib.php||grade/report/overview/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "grade/report/overview/lib.php||grade/report/overview/lib.php"
          ],
          "candidate": [
            "grade/report/overview/lib.php||grade/report/overview/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "grade/report/overview/lib.php||grade/report/overview/lib.php": [
          "File: grade/report/overview/lib.php -> grade/report/overview/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:     public $user;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:     public $courses;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:     public function __construct($userid, $gpr, $context) {",
          "64:         global $CFG, $COURSE, $DB;",
          "65:         parent::__construct($COURSE->id, $gpr, $context);",
          "68:         $this->showtotalsifcontainhidden = grade_get_setting($this->courseid, 'report_overview_showtotalsifcontainhidden', $CFG->grade_report_overview_showtotalsifcontainhidden);",
          "71:         $this->user = $DB->get_record('user', array('id' => $userid));",
          "74:         $this->baseurl = $CFG->wwwroot.'/grade/overview/index.php?id='.$userid;",
          "75:         $this->pbarurl = $this->baseurl;",
          "",
          "[Removed Lines]",
          "67:         $this->showrank = grade_get_setting($this->courseid, 'report_overview_showrank', !empty($CFG->grade_report_overview_showrank));",
          "",
          "[Added Lines]",
          "80:         $this->courses = enrol_get_users_courses($this->user->id, false, 'id, shortname, showgrades');",
          "82:         $this->showrank = array();",
          "83:         $this->showrank['any'] = false;",
          "84:         if ($this->courses) {",
          "85:             foreach ($this->courses as $course) {",
          "86:                 $this->showrank[$course->id] = grade_get_setting($course->id, 'report_overview_showrank', !empty($CFG->grade_report_overview_showrank));",
          "87:                 if ($this->showrank[$course->id]) {",
          "88:                     $this->showrank['any'] = true;",
          "89:                 }",
          "90:             }",
          "91:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:             $tablecolumns = array('coursename', 'grade', 'rank');",
          "92:             $tableheaders = array($this->get_lang_string('coursename', 'grades'),",
          "93:                                   $this->get_lang_string('grade'),",
          "",
          "[Removed Lines]",
          "90:         if ($this->showrank) {",
          "",
          "[Added Lines]",
          "111:         if ($this->showrank['any']) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "113:     public function fill_table() {",
          "114:         global $CFG, $DB, $OUTPUT;",
          "118:             $numusers = $this->get_numusers(false);",
          "121:                 if (!$course->showgrades) {",
          "122:                     continue;",
          "123:                 }",
          "",
          "[Removed Lines]",
          "117:         if ($courses = enrol_get_users_courses($this->user->id, false, 'id, shortname, showgrades')) {",
          "120:             foreach ($courses as $course) {",
          "",
          "[Added Lines]",
          "138:         if ($this->courses) {",
          "141:             foreach ($this->courses as $course) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "152:                 $data = array($courselink, grade_format_gradevalue($finalgrade, $course_item, true));",
          "160:                     $params = array($finalgrade, $course_item->id);",
          "",
          "[Removed Lines]",
          "154:                 if (!$this->showrank) {",
          "157:                 } else if (!is_null($finalgrade)) {",
          "",
          "[Added Lines]",
          "175:                 if (!$this->showrank['any']) {",
          "178:                 } else if ($this->showrank[$course->id] && !is_null($finalgrade)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30dd9930ba9467cbeb721e75bf714a531cca7bdd",
      "candidate_info": {
        "commit_hash": "30dd9930ba9467cbeb721e75bf714a531cca7bdd",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/30dd9930ba9467cbeb721e75bf714a531cca7bdd",
        "files": [
          "grade/report/lib.php",
          "grade/tests/reportlib_test.php"
        ],
        "message": "MDL-36680 core_grade: fixed grade_report::blank_hidden_total() and added unit tests",
        "before_after_code_files": [
          "grade/report/lib.php||grade/report/lib.php",
          "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "grade/report/lib.php||grade/report/lib.php",
            "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php"
          ],
          "candidate": [
            "grade/report/lib.php||grade/report/lib.php",
            "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php"
          ]
        }
      },
      "candidate_diff": {
        "grade/report/lib.php||grade/report/lib.php": [
          "File: grade/report/lib.php -> grade/report/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "351:         global $CFG, $DB;",
          "352:         static $hiding_affected = null;//array of items in this course affected by hiding",
          "355:         static $previous_userid = null;",
          "357:         if( $this->showtotalsifcontainhidden==GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN ) {",
          "358:             return $finalgrade;",
          "359:         }",
          "363:             $hiding_affected = null;",
          "364:             $previous_userid = $this->user->id;",
          "365:         }",
          "367:         if( !$hiding_affected ) {",
          "",
          "[Removed Lines]",
          "362:         if ($previous_userid!=$this->user->id) {",
          "",
          "[Added Lines]",
          "358:         static $previous_courseid = null;",
          "365:         if ($previous_userid != $this->user->id || $previous_courseid != $courseid) {",
          "368:             $previous_courseid = $courseid;",
          "",
          "---------------"
        ],
        "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php": [
          "File: grade/tests/reportlib_test.php -> grade/tests/reportlib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "26: defined('MOODLE_INTERNAL') || die();",
          "28: global $CFG;",
          "29: require_once($CFG->dirroot.'/grade/lib.php');",
          "30: require_once($CFG->dirroot.'/grade/report/lib.php');",
          "35: class grade_report_test extends grade_report {",
          "36:     public function __construct($courseid, $gpr, $context, $user) {",
          "37:         parent::__construct($courseid, $gpr, $context);",
          "38:         $this->user = $user;",
          "39:     }",
          "44:     public function blank_hidden_total($courseid, $courseitem, $finalgrade) {",
          "45:         return parent::blank_hidden_total($courseid, $courseitem, $finalgrade);",
          "46:     }",
          "51:     public function process_data($data) {",
          "52:     }",
          "57:     public function process_action($target, $action) {",
          "58:     }",
          "59: }",
          "64: class gradereportlib_testcase extends advanced_testcase {",
          "69:     public function test_blank_hidden_total() {",
          "70:         global $DB;",
          "72:         $this->resetAfterTest(true);",
          "74:         $student = $this->getDataGenerator()->create_user();",
          "75:         $this->setUser($student);",
          "79:         $course = $this->getDataGenerator()->create_course();",
          "80:         $coursegradeitem = grade_item::fetch_course_item($course->id);",
          "81:         $coursecontext = context_course::instance($course->id);",
          "83:         $data = $this->getDataGenerator()->create_module('data', array('assessed' => 1, 'scale' => 100, 'course' => $course->id));",
          "84:         $datacm = get_coursemodule_from_id('data', $data->cmid);",
          "86:         $forum = $this->getDataGenerator()->create_module('forum', array('assessed' => 1, 'scale' => 100, 'course' => $course->id));",
          "87:         $forumcm = get_coursemodule_from_id('forum', $forum->cmid);",
          "90:         $gi = grade_item::fetch(array('itemtype' => 'mod', 'itemmodule' => 'data', 'iteminstance' => $data->id, 'courseid' => $course->id));",
          "91:         $datagrade = 50;",
          "92:         $grade_grade = new grade_grade();",
          "93:         $grade_grade->itemid = $gi->id;",
          "94:         $grade_grade->userid = $student->id;",
          "95:         $grade_grade->rawgrade = $datagrade;",
          "96:         $grade_grade->finalgrade = $datagrade;",
          "97:         $grade_grade->rawgrademax = 100;",
          "98:         $grade_grade->rawgrademin = 0;",
          "99:         $grade_grade->timecreated = time();",
          "100:         $grade_grade->timemodified = time();",
          "101:         $grade_grade->insert();",
          "103:         $gi = grade_item::fetch(array('itemtype' => 'mod', 'itemmodule' => 'forum', 'iteminstance' => $forum->id, 'courseid' => $course->id));",
          "104:         $forumgrade = 70;",
          "105:         $grade_grade = new grade_grade();",
          "106:         $grade_grade->itemid = $gi->id;",
          "107:         $grade_grade->userid = $student->id;",
          "108:         $grade_grade->rawgrade = $forumgrade;",
          "109:         $grade_grade->finalgrade = $forumgrade;",
          "110:         $grade_grade->rawgrademax = 100;",
          "111:         $grade_grade->rawgrademin = 0;",
          "112:         $grade_grade->timecreated = time();",
          "113:         $grade_grade->timemodified = time();",
          "114:         $grade_grade->insert();",
          "117:         set_coursemodule_visible($datacm->id, 0);",
          "119:         $gpr = new grade_plugin_return(array('type' => 'report', 'courseid' => $course->id));",
          "120:         $report = new grade_report_test($course->id, $gpr, $coursecontext, $student);",
          "123:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN;",
          "124:         $this->assertEquals($datagrade + $forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "127:         $report->showtotalsifcontainhidden = GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN;",
          "128:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "131:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN;",
          "132:         $this->assertEquals($forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "141:         $course = $this->getDataGenerator()->create_course();",
          "142:         $coursegradeitem = grade_item::fetch_course_item($course->id);",
          "143:         $coursecontext = context_course::instance($course->id);",
          "145:         $data = $this->getDataGenerator()->create_module('data', array('assessed' => 1, 'scale' => 100, 'course' => $course->id));",
          "146:         $datacm = get_coursemodule_from_id('data', $data->cmid);",
          "148:         $forum = $this->getDataGenerator()->create_module('forum', array('assessed' => 1, 'scale' => 100, 'course' => $course->id));",
          "149:         $forumcm = get_coursemodule_from_id('forum', $forum->cmid);",
          "151:         $gi = grade_item::fetch(array('itemtype' => 'mod', 'itemmodule' => 'data', 'iteminstance' => $data->id, 'courseid' => $course->id));",
          "152:         $datagrade = 50;",
          "153:         $grade_grade = new grade_grade();",
          "154:         $grade_grade->itemid = $gi->id;",
          "155:         $grade_grade->userid = $student->id;",
          "156:         $grade_grade->rawgrade = $datagrade;",
          "157:         $grade_grade->finalgrade = $datagrade;",
          "158:         $grade_grade->rawgrademax = 100;",
          "159:         $grade_grade->rawgrademin = 0;",
          "160:         $grade_grade->timecreated = time();",
          "161:         $grade_grade->timemodified = time();",
          "162:         $grade_grade->insert();",
          "164:         $gi = grade_item::fetch(array('itemtype' => 'mod', 'itemmodule' => 'forum', 'iteminstance' => $forum->id, 'courseid' => $course->id));",
          "165:         $forumgrade = 70;",
          "166:         $grade_grade = new grade_grade();",
          "167:         $grade_grade->itemid = $gi->id;",
          "168:         $grade_grade->userid = $student->id;",
          "169:         $grade_grade->rawgrade = $forumgrade;",
          "170:         $grade_grade->finalgrade = $forumgrade;",
          "171:         $grade_grade->rawgrademax = 100;",
          "172:         $grade_grade->rawgrademin = 0;",
          "173:         $grade_grade->timecreated = time();",
          "174:         $grade_grade->timemodified = time();",
          "175:         $grade_grade->insert();",
          "178:         set_coursemodule_visible($datacm->id, 0);",
          "179:         set_coursemodule_visible($forumcm->id, 0);",
          "181:         $gpr = new grade_plugin_return(array('type' => 'report', 'courseid' => $course->id));",
          "182:         $report = new grade_report_test($course->id, $gpr, $coursecontext, $student);",
          "185:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN;",
          "186:         $this->assertEquals($datagrade + $forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "189:         $report->showtotalsifcontainhidden = GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN;",
          "190:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "194:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN;",
          "195:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "196:     }",
          "197: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "02d1a0a5756fdcbcea4072a0b07cf4e7a8e5c0a7",
      "candidate_info": {
        "commit_hash": "02d1a0a5756fdcbcea4072a0b07cf4e7a8e5c0a7",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/02d1a0a5756fdcbcea4072a0b07cf4e7a8e5c0a7",
        "files": [
          "grade/report/grader/index.php",
          "grade/report/grader/lib.php",
          "grade/report/lib.php",
          "grade/report/upgrade.txt",
          "user/renderer.php"
        ],
        "message": "MDL-32888 Grader report: Refined SESSION and api function use",
        "before_after_code_files": [
          "grade/report/grader/index.php||grade/report/grader/index.php",
          "grade/report/grader/lib.php||grade/report/grader/lib.php",
          "grade/report/lib.php||grade/report/lib.php",
          "user/renderer.php||user/renderer.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "grade/report/lib.php||grade/report/lib.php"
          ],
          "candidate": [
            "grade/report/lib.php||grade/report/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "grade/report/grader/index.php||grade/report/grader/index.php": [
          "File: grade/report/grader/index.php -> grade/report/grader/index.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: $courseid      = required_param('id', PARAM_INT);        // course id",
          "32: $page          = optional_param('page', 0, PARAM_INT);   // active page",
          "",
          "[Removed Lines]",
          "25: require_once '../../../config.php';",
          "26: require_once $CFG->libdir.'/gradelib.php';",
          "27: require_once $CFG->dirroot.'/user/renderer.php';",
          "28: require_once $CFG->dirroot.'/grade/lib.php';",
          "29: require_once $CFG->dirroot.'/grade/report/grader/lib.php';",
          "",
          "[Added Lines]",
          "25: require_once('../../../config.php');",
          "26: require_once($CFG->libdir.'/gradelib.php');",
          "27: require_once($CFG->dirroot.'/user/renderer.php');",
          "28: require_once($CFG->dirroot.'/grade/lib.php');",
          "29: require_once($CFG->dirroot.'/grade/report/grader/lib.php');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37: $move          = optional_param('move', 0, PARAM_INT);",
          "38: $type          = optional_param('type', 0, PARAM_ALPHA);",
          "39: $target        = optional_param('target', 0, PARAM_ALPHANUM);",
          "41: $toggle_type   = optional_param('toggle_type', 0, PARAM_ALPHANUM);",
          "47: if (isset($graderreportsifirst)) {",
          "50: if (isset($graderreportsilast)) {",
          "54: $PAGE->set_url(new moodle_url('/grade/report/grader/index.php', array('id'=>$courseid)));",
          "57: if (!$course = $DB->get_record('course', array('id' => $courseid))) {",
          "58:     print_error('nocourseid');",
          "59: }",
          "",
          "[Removed Lines]",
          "40: $toggle        = optional_param('toggle', NULL, PARAM_INT);",
          "43: $graderreportsifirst  = optional_param('sifirst', NULL, PARAM_ALPHA);",
          "44: $graderreportsilast   = optional_param('silast', NULL, PARAM_ALPHA);",
          "48:     $SESSION->filterfirstname = $graderreportsifirst;",
          "49: }",
          "51:     $SESSION->filtersurname = $graderreportsilast;",
          "52: }",
          "",
          "[Added Lines]",
          "40: $toggle        = optional_param('toggle', null, PARAM_INT);",
          "43: $graderreportsifirst  = optional_param('sifirst', null, PARAM_ALPHA);",
          "44: $graderreportsilast   = optional_param('silast', null, PARAM_ALPHA);",
          "48:     $SESSION->gradereport['filterfirstname'] = $graderreportsifirst;",
          "49: }",
          "51:     $SESSION->gradereport['filtersurname'] = $graderreportsilast;",
          "52: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "155: $url = new moodle_url('/grade/report/grader/index.php', array('id' => $course->id));",
          "158: $totalusers = $report->get_numusers(true, false);",
          "159: $renderer = $PAGE->get_renderer('core_user');",
          "160: echo $renderer->user_search($url, $firstinitial, $lastinitial, $numusers, $totalusers, $report->currentgroupname);",
          "164:     echo $OUTPUT->notification($warning);",
          "165: }",
          "",
          "[Removed Lines]",
          "156: $firstinitial = isset($SESSION->filterfirstname) ? $SESSION->filterfirstname : '';",
          "157: $lastinitial  = isset($SESSION->filtersurname) ? $SESSION->filtersurname : '';",
          "163: foreach($warnings as $warning) {",
          "",
          "[Added Lines]",
          "156: $firstinitial = isset($SESSION->gradereport['filterfirstname']) ? $SESSION->gradereport['filterfirstname'] : '';",
          "157: $lastinitial  = isset($SESSION->gradereport['filtersurname']) ? $SESSION->gradereport['filtersurname'] : '';",
          "163: foreach ($warnings as $warning) {",
          "",
          "---------------"
        ],
        "grade/report/grader/lib.php||grade/report/grader/lib.php": [
          "File: grade/report/grader/lib.php -> grade/report/grader/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "87:     public $canviewhidden;",
          "",
          "[Removed Lines]",
          "89:     var $preferencespage=false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "231:                         if ($this->get_pref('quickgrading')) {",
          "232:                             $oldvalue->feedback = preg_replace(\"/\\r\\n|\\r|\\n/\", \"\", $oldvalue->feedback);",
          "233:                         }",
          "235:                             continue;",
          "236:                         }",
          "237:                     }",
          "",
          "[Removed Lines]",
          "234:                         if (($oldvalue->feedback === $postedvalue) or ($oldvalue->feedback === NULL and empty($postedvalue))) {",
          "",
          "[Added Lines]",
          "234:                         if (($oldvalue->feedback === $postedvalue) or ($oldvalue->feedback === null and empty($postedvalue))) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "257:                         $errorstr = '';",
          "262:                             $bounded = $gradeitem->bounded_grade($finalgrade);",
          "263:                             if ($bounded > $finalgrade) {",
          "264:                                 $errorstr = 'lessthanmin';",
          "",
          "[Removed Lines]",
          "259:                         if (is_null($finalgrade)) {",
          "261:                         } else {",
          "",
          "[Added Lines]",
          "259:                         if (!is_null($finalgrade)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "279:                         $finalgrade = false;",
          "280:                         $trimmed = trim($postedvalue);",
          "281:                         if (empty($trimmed)) {",
          "283:                         } else {",
          "284:                              $feedback = $postedvalue;",
          "285:                         }",
          "",
          "[Removed Lines]",
          "282:                              $feedback = NULL;",
          "",
          "[Added Lines]",
          "280:                              $feedback = null;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "292:                         $sharinggroup = false;",
          "294:                             if (groups_is_member($groupid, $userid)) {",
          "295:                                 $sharinggroup = true;",
          "296:                                 break;",
          "",
          "[Removed Lines]",
          "293:                         foreach($mygroups as $groupid) {",
          "",
          "[Added Lines]",
          "291:                         foreach ($mygroups as $groupid) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "378:             if (isset($SESSION->gradeuserreport->sortitemid)) {",
          "379:                 $this->sortitemid = $SESSION->gradeuserreport->sortitemid;",
          "381:                 $this->sortitemid = 'lastname';",
          "382:             }",
          "",
          "[Removed Lines]",
          "380:             }else{",
          "",
          "[Added Lines]",
          "378:             } else {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "416:         if (is_numeric($this->sortitemid)) {",
          "420:             $sortjoin = \"LEFT JOIN {grade_grades} g ON g.userid = u.id AND g.itemid = $this->sortitemid\";",
          "421:             $sort = \"g.finalgrade $this->sortorder\";",
          "",
          "[Removed Lines]",
          "417:             $params = array_merge(array('gitemid' => $this->sortitemid), $gradebookrolesparams, $this->userwheresql_params,",
          "418:                                         $this->groupwheresql_params, $enrolledparams, $relatedctxparams);",
          "",
          "[Added Lines]",
          "415:             $params = array_merge(array('gitemid' => $this->sortitemid), $gradebookrolesparams, $this->userwheresql_params,",
          "416:                     $this->groupwheresql_params, $enrolledparams, $relatedctxparams);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "532:         foreach ($userids as $userid) {",
          "534:                 if (!isset($this->grades[$userid][$itemid])) {",
          "535:                     $this->grades[$userid][$itemid] = new grade_grade();",
          "536:                     $this->grades[$userid][$itemid]->itemid = $itemid;",
          "",
          "[Removed Lines]",
          "533:             foreach ($this->gtree->get_items() as $itemid=>$unused) {",
          "",
          "[Added Lines]",
          "531:             foreach ($this->gtree->get_items() as $itemid => $unused) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "650:                 if (empty($suspendedstring)) {",
          "651:                     $suspendedstring = get_string('userenrolmentsuspended', 'grades');",
          "652:                 }",
          "654:             }",
          "656:             $userrow->cells[] = $usercell;",
          "",
          "[Removed Lines]",
          "653:                 $usercell->text .= html_writer::empty_tag('img', array('src'=>$OUTPUT->pix_url('i/enrolmentsuspended'), 'title'=>$suspendedstring, 'alt'=>$suspendedstring, 'class'=>'usersuspendedicon'));",
          "",
          "[Added Lines]",
          "654:                 $usercell->text .= html_writer::empty_tag('img', array('src'=>$OUTPUT->pix_url('i/enrolmentsuspended'), 'title'=>$suspendedstring,",
          "655:                         'alt'=>$suspendedstring, 'class'=>'usersuspendedicon'));",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "715:         );",
          "716:         $jsscales = array();",
          "724:             $headingrow = new html_table_row();",
          "725:             $headingrow->attributes['class'] = 'heading_name_row';",
          "",
          "[Removed Lines]",
          "718:         foreach ($this->gtree->get_levels() as $key=>$row) {",
          "719:             if ($key == 0) {",
          "722:             }",
          "",
          "[Added Lines]",
          "720:         foreach ($this->gtree->get_levels() as $key => $row) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "756:                     $fillercell->header = true;",
          "757:                     $fillercell->scope = 'col';",
          "758:                     $headingrow->cells[] = $fillercell;",
          "762:                     $categorycell = new html_table_cell();",
          "763:                     $categorycell->attributes['class'] = 'category ' . $catlevel;",
          "764:                     $categorycell->colspan = $colspan;",
          "",
          "[Removed Lines]",
          "759:                 }",
          "761:                 else if ($type == 'category') {",
          "",
          "[Added Lines]",
          "756:                 } else if ($type == 'category') {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "773:                     }",
          "775:                     $headingrow->cells[] = $categorycell;",
          "782:                     if ($element['object']->id == $this->sortitemid) {",
          "783:                         if ($this->sortorder == 'ASC') {",
          "784:                             $arrow = $this->get_sort_arrow('up', $sortlink);",
          "",
          "[Removed Lines]",
          "776:                 }",
          "778:                 else {",
          "",
          "[Added Lines]",
          "772:                 } else {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "815:         $scaleslist = array();",
          "816:         $tabindices = array();",
          "819:             $scale = null;",
          "820:             if (!empty($item->scaleid)) {",
          "821:                 $scaleslist[] = $item->scaleid;",
          "",
          "[Removed Lines]",
          "818:         foreach ($this->gtree->get_items() as $itemid=>$item) {",
          "",
          "[Added Lines]",
          "810:         foreach ($this->gtree->get_items() as $itemid => $item) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "848:                 unset($hidingaffected);",
          "849:             }",
          "852:             $itemrow = new html_table_row();",
          "853:             $itemrow->id = 'user_'.$userid;",
          "854:             $itemrow->attributes['class'] = $rowclasses[$this->rowcount % 2];",
          "856:             $jsarguments['users'][$userid] = fullname($user);",
          "859:                 $item =& $this->gtree->items[$itemid];",
          "860:                 $grade = $this->grades[$userid][$item->id];",
          "",
          "[Removed Lines]",
          "858:             foreach ($this->gtree->items as $itemid=>$unused) {",
          "",
          "[Added Lines]",
          "849:             foreach ($this->gtree->items as $itemid => $unused) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "874:                     $gradeval = $grade->finalgrade;",
          "875:                 }",
          "876:                 if (!empty($grade->finalgrade)) {",
          "878:                     if ($item->scaleid && !empty($scalesarray[$item->scaleid])) {",
          "880:                     } else {",
          "882:                     }",
          "884:                 }",
          "",
          "[Removed Lines]",
          "877:                     $gradevalforJS = null;",
          "879:                         $gradevalforJS = (int)$gradeval;",
          "881:                         $gradevalforJS = format_float($gradeval, $decimalpoints);",
          "883:                     $jsarguments['grades'][] = array('user'=>$userid, 'item'=>$itemid, 'grade'=>$gradevalforJS);",
          "",
          "[Added Lines]",
          "868:                     $gradevalforjs = null;",
          "870:                         $gradevalforjs = (int)$gradeval;",
          "872:                         $gradevalforjs = format_float($gradeval, $decimalpoints);",
          "874:                     $jsarguments['grades'][] = array('user'=>$userid, 'item'=>$itemid, 'grade'=>$gradevalforjs);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "888:                 if (!$this->canviewhidden and $grade->is_hidden()) {",
          "889:                     if (!empty($CFG->grade_hiddenasdate) and $grade->get_datesubmitted() and !$item->is_category_item() and !$item->is_course_item()) {",
          "892:                     } else {",
          "893:                         $itemcell->text = '-';",
          "894:                     }",
          "",
          "[Removed Lines]",
          "891:                         $itemcell->text = html_writer::tag('span', userdate($grade->get_datesubmitted(),get_string('strftimedatetimeshort')), array('class'=>'datesubmitted'));",
          "",
          "[Added Lines]",
          "882:                         $itemcell->text = html_writer::tag('span', userdate($grade->get_datesubmitted(), get_string('strftimedatetimeshort')), array('class'=>'datesubmitted'));",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "911:                     $itemcell->attributes['class'] .= ' overridden';",
          "912:                 }",
          "918:                 if (!empty($grade->feedback)) {",
          "921:                 }",
          "923:                 if ($grade->is_excluded()) {",
          "",
          "[Removed Lines]",
          "914:                 if ($grade->is_excluded()) {",
          "916:                 }",
          "920:                     $jsarguments['feedback'][] = array('user'=>$userid, 'item'=>$itemid, 'content'=>wordwrap(trim(format_string($grade->feedback, $grade->feedbackformat)), 34, '<br/ >'));",
          "",
          "[Added Lines]",
          "907:                     $jsarguments['feedback'][] = array('user'=>$userid, 'item'=>$itemid, 'content'=>wordwrap(trim(format_string($grade->feedback, $grade->feedbackformat)),",
          "908:                             34, '<br/ >'));",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "937:                 $gradepass = ' gradefail ';",
          "938:                 if ($grade->is_passed($item)) {",
          "939:                     $gradepass = ' gradepass ';",
          "941:                     $gradepass = '';",
          "942:                 }",
          "",
          "[Removed Lines]",
          "940:                 } elseif (is_null($grade->is_passed($item))) {",
          "",
          "[Added Lines]",
          "928:                 } else if (is_null($grade->is_passed($item))) {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "974:                             $attributes = array('tabindex' => $tabindices[$item->id]['grade'], 'id'=>'grade_'.$userid.'_'.$item->id);",
          "975:                             $itemcell->text .= html_writer::label(get_string('typescale', 'grades'), $attributes['id'], false, array('class' => 'accesshide'));",
          "976:                             $itemcell->text .= html_writer::select($scaleopt, 'grade['.$userid.']['.$item->id.']', $gradeval, array(-1=>$nogradestr), $attributes);",
          "978:                             $scales = explode(\",\", $scale->scale);",
          "",
          "[Removed Lines]",
          "977:                         } elseif(!empty($scale)) {",
          "",
          "[Added Lines]",
          "965:                         } else if (!empty($scale)) {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "984:                                 $gradeval = $grade->grade_item->bounded_grade($gradeval); //just in case somebody changes scale",
          "985:                                 $itemcell->text .= html_writer::tag('span', $scales[$gradeval-1], array('class'=>\"gradevalue$hidden$gradepass\"));",
          "986:                             }",
          "989:                         }",
          "991:                     } else if ($item->gradetype != GRADE_TYPE_TEXT) { // Value type",
          "",
          "[Removed Lines]",
          "987:                         } else {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1028:                     if ($item->needsupdate) {",
          "1029:                         $itemcell->text .= html_writer::tag('span', get_string('error'), array('class'=>\"gradingerror$hidden$gradepass\"));",
          "1030:                     } else {",
          "1032:                         if ($this->get_pref('showanalysisicon')) {",
          "1033:                             $itemcell->text .= $this->gtree->get_grade_analysis_icon($grade);",
          "1034:                         }",
          "",
          "[Removed Lines]",
          "1031:                         $itemcell->text .= html_writer::tag('span', grade_format_gradevalue($gradeval, $item, true, $gradedisplaytype, null), array('class'=>\"gradevalue$hidden$gradepass\"));",
          "",
          "[Added Lines]",
          "1016:                         $itemcell->text .= html_writer::tag('span', grade_format_gradevalue($gradeval, $item, true, $gradedisplaytype, null),",
          "1017:                                 array('class'=>\"gradevalue$hidden$gradepass\"));",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1048:             $jsarguments['cfg']['ajaxenabled'] = true;",
          "1049:             $jsarguments['cfg']['scales'] = array();",
          "1050:             foreach ($jsscales as $scale) {",
          "1052:             }",
          "1053:             $jsarguments['cfg']['feedbacktrunclength'] =  $this->feedback_trunc_length;",
          "",
          "[Removed Lines]",
          "1051:                 $jsarguments['cfg']['scales'][$scale->id] = explode(',',$scale->scale);",
          "",
          "[Added Lines]",
          "1037:                 $jsarguments['cfg']['scales'][$scale->id] = explode(',', $scale->scale);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1065:             'requires'  => array('base', 'dom', 'event', 'event-mouseenter', 'event-key', 'io-queue', 'json-parse', 'overlay')",
          "1066:         );",
          "1067:         $PAGE->requires->js_init_call('M.gradereport_grader.init_report', $jsarguments, false, $module);",
          "1071:         $rows = $this->get_right_range_row($rows);",
          "1072:         if ($displayaverages) {",
          "",
          "[Removed Lines]",
          "1068:         $PAGE->requires->strings_for_js(array('addfeedback','feedback', 'grade'), 'grades');",
          "1069:         $PAGE->requires->strings_for_js(array('ajaxchoosescale','ajaxclicktoclose','ajaxerror','ajaxfailedupdate', 'ajaxfieldchanged'), 'gradereport_grader');",
          "",
          "[Added Lines]",
          "1054:         $PAGE->requires->strings_for_js(array('addfeedback', 'feedback', 'grade'), 'grades');",
          "1055:         $PAGE->requires->strings_for_js(array('ajaxchoosescale', 'ajaxclicktoclose', 'ajaxerror', 'ajaxfailedupdate', 'ajaxfieldchanged'), 'gradereport_grader');",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1136:             $controlscell = new html_table_cell();",
          "1137:             $controlscell->attributes['class'] = 'header controls';",
          "1138:             $controlscell->colspan = $colspan;",
          "1141:             $controlsrow->cells[] = $controlscell;",
          "1142:             $rows[] = $controlsrow;",
          "",
          "[Removed Lines]",
          "1139:             $controlscell->text = $this->get_lang_string('controls','grades');",
          "",
          "[Added Lines]",
          "1124:             $controlscell->text = $this->get_lang_string('controls', 'grades');",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1161:             $rangecell->colspan = $colspan;",
          "1162:             $rangecell->header = true;",
          "1163:             $rangecell->scope = 'row';",
          "1165:             $rangerow->cells[] = $rangecell;",
          "1166:             $rows[] = $rangerow;",
          "1167:         }",
          "",
          "[Removed Lines]",
          "1164:             $rangecell->text = $this->get_lang_string('range','grades');",
          "",
          "[Added Lines]",
          "1149:             $rangecell->text = $this->get_lang_string('range', 'grades');",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1231:             $iconsrow = new html_table_row();",
          "1232:             $iconsrow->attributes['class'] = 'controls';",
          "1236:                 $item = $this->gtree->get_item($itemid);",
          "",
          "[Removed Lines]",
          "1234:             foreach ($this->gtree->items as $itemid=>$unused) {",
          "",
          "[Added Lines]",
          "1219:             foreach ($this->gtree->items as $itemid => $unused) {",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1261:             $rangerow = new html_table_row();",
          "1262:             $rangerow->attributes['class'] = 'heading range';",
          "1265:                 $item =& $this->gtree->items[$itemid];",
          "1266:                 $itemcell = new html_table_cell();",
          "1267:                 $itemcell->attributes['class'] .= ' range i'. $itemid;",
          "",
          "[Removed Lines]",
          "1264:             foreach ($this->gtree->items as $itemid=>$unused) {",
          "",
          "[Added Lines]",
          "1249:             foreach ($this->gtree->items as $itemid => $unused) {",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1377:             $avgrow = new html_table_row();",
          "1378:             $avgrow->attributes['class'] = 'avg';",
          "1381:                 $item =& $this->gtree->items[$itemid];",
          "1383:                 if ($item->needsupdate) {",
          "",
          "[Removed Lines]",
          "1380:             foreach ($this->gtree->items as $itemid=>$unused) {",
          "",
          "[Added Lines]",
          "1365:             foreach ($this->gtree->items as $itemid => $unused) {",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1483:             }",
          "1485:             if ($this->get_pref('showeyecons')) {",
          "1487:             }",
          "1489:             if ($this->get_pref('showlocks')) {",
          "",
          "[Removed Lines]",
          "1486:                $showhideicon = $this->gtree->get_hiding_icon($element, $this->gpr);",
          "",
          "[Added Lines]",
          "1471:                 $showhideicon = $this->gtree->get_hiding_icon($element, $this->gpr);",
          "",
          "---------------"
        ],
        "grade/report/lib.php||grade/report/lib.php": [
          "File: grade/report/lib.php -> grade/report/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "115:     var $groupmode;",
          "",
          "[Added Lines]",
          "116:     public $groupmode;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "207:         if (!isset($this) OR get_class($this) != 'grade_report') {",
          "208:             if (!empty($objectid)) {",
          "211:                 $retval = get_user_preferences($fullprefname, $CFG->$fullprefname);",
          "213:                 $retval = get_user_preferences($fullprefname, $CFG->$shortprefname);",
          "214:             } else {",
          "215:                 $retval = null;",
          "",
          "[Removed Lines]",
          "209:                 $retval = get_user_preferences($fullprefname . $objectid, grade_report::get_pref($pref));",
          "210:             } elseif (isset($CFG->$fullprefname)) {",
          "212:             } elseif (isset($CFG->$shortprefname)) {",
          "",
          "[Added Lines]",
          "209:                 $retval = get_user_preferences($fullprefname . $objectid, self::get_pref($pref));",
          "210:             } else if (isset($CFG->$fullprefname)) {",
          "212:             } else if (isset($CFG->$shortprefname)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "263:     abstract function process_data($data);",
          "",
          "[Added Lines]",
          "262:     abstract public function process_data($data);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "271:     abstract function process_action($target, $action);",
          "",
          "[Added Lines]",
          "270:     abstract public function process_action($target, $action);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "333:         $selectedusers = $DB->get_records_sql($sql, $params);",
          "335:         $count = 0;",
          "336:         if (!empty($selectedusers)) {",
          "350:             $coursecontext = $this->context->get_course_context(true);",
          "354:             $defaultgradeshowactiveenrol = !empty($CFG->grade_report_showonlyactiveenrol);",
          "355:             $showonlyactiveenrol = get_user_preferences('grade_report_showonlyactiveenrol', $defaultgradeshowactiveenrol);",
          "",
          "[Removed Lines]",
          "337:             list($usql, $uparams) = $DB->get_in_or_equal(array_keys($selectedusers), SQL_PARAMS_NAMED, 'usid0');",
          "338:             $this->userselect = \"AND g.userid $usql\";",
          "339:             $this->userselect_params = $uparams;",
          "342:             $sql = \"SELECT ue.userid",
          "343:                       FROM {user_enrolments} ue",
          "344:                       JOIN {enrol} e ON e.id = ue.enrolid",
          "345:                      WHERE ue.userid $usql",
          "346:                            AND ue.status = :uestatus",
          "347:                            AND e.status = :estatus",
          "348:                            AND e.courseid = :courseid",
          "349:                   GROUP BY ue.userid\";",
          "351:             $params = array_merge($uparams, array('estatus' => ENROL_INSTANCE_ENABLED, 'uestatus' => ENROL_USER_ACTIVE, 'courseid' => $coursecontext->instanceid));",
          "352:             $useractiveenrolments = $DB->get_records_sql($sql, $params);",
          "",
          "[Added Lines]",
          "339:             $useractiveenrolments = get_enrolled_users($coursecontext, '', 0, 'u.*',  null, 0, 0, true);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "360:                     $count++;",
          "361:                 }",
          "362:             }",
          "364:         return $count;",
          "365:     }",
          "",
          "[Removed Lines]",
          "363:         }",
          "",
          "[Added Lines]",
          "350:         }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "380:             if ($this->currentgroup) {",
          "381:                 $group = groups_get_group($this->currentgroup);",
          "383:                 $this->groupsql             = \" JOIN {groups_members} gm ON gm.userid = u.id \";",
          "384:                 $this->groupwheresql        = \" AND gm.groupid = :gr_grpid \";",
          "385:                 $this->groupwheresql_params = array('gr_grpid'=>$this->currentgroup);",
          "",
          "[Removed Lines]",
          "382:                 $this->currentgroupname     = $group->name;",
          "",
          "[Added Lines]",
          "369:                 $this->currentgroupname     = $group->name;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "387:         }",
          "388:     }",
          "390:     public function setup_users() {",
          "391:         global $SESSION, $DB;",
          "393:         $this->userwheresql = \"\";",
          "394:         $this->userwheresql_params = array();",
          "396:             $this->userwheresql .= ' AND '.$DB->sql_like('u.firstname', ':firstname', false, false);",
          "398:         }",
          "400:             $this->userwheresql .= ' AND '.$DB->sql_like('u.lastname', ':lastname', false, false);",
          "402:         }",
          "403:     }",
          "411:     protected function get_sort_arrow($direction='move', $sortlink=null) {",
          "412:         global $OUTPUT;",
          "",
          "[Removed Lines]",
          "395:         if (isset($SESSION->filterfirstname) && !empty($SESSION->filterfirstname)) {",
          "397:             $this->userwheresql_params['firstname'] = $SESSION->filterfirstname.'%';",
          "399:         if (isset($SESSION->filtersurname) && !empty($SESSION->filtersurname)) {",
          "401:             $this->userwheresql_params['lastname'] = $SESSION->filtersurname.'%';",
          "",
          "[Added Lines]",
          "385:         if (isset($SESSION->gradereport['filterfirstname']) && !empty($SESSION->gradereport['filterfirstname'])) {",
          "387:             $this->userwheresql_params['firstname'] = $SESSION->gradereport['filterfirstname'].'%';",
          "389:         if (isset($SESSION->gradereport['filtersurname']) && !empty($SESSION->gradereport['filtersurname'])) {",
          "391:             $this->userwheresql_params['lastname'] = $SESSION->gradereport['filtersurname'].'%';",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "451:             $previous_courseid = $courseid;",
          "452:         }",
          "455:             $items = grade_item::fetch_all(array('courseid'=>$courseid));",
          "456:             $grades = array();",
          "457:             $sql = \"SELECT g.*",
          "",
          "[Removed Lines]",
          "454:         if( !$hiding_affected ) {",
          "",
          "[Added Lines]",
          "443:         if (!$hiding_affected) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "464:                 }",
          "465:                 unset($gradesrecords);",
          "466:             }",
          "468:                 if (!isset($grades[$itemid])) {",
          "469:                     $grade_grade = new grade_grade();",
          "470:                     $grade_grade->userid = $this->user->id;",
          "",
          "[Removed Lines]",
          "467:             foreach ($items as $itemid=>$unused) {",
          "",
          "[Added Lines]",
          "456:             foreach ($items as $itemid => $unused) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "480:         if (array_key_exists($course_item->id, $hiding_affected['altered'])) {",
          "483:                 $finalgrade = null;",
          "487:                 $finalgrade = $hiding_affected['altered'][$course_item->id];",
          "488:             }",
          "489:         } else if (!empty($hiding_affected['unknown'][$course_item->id])) {",
          "493:                 $finalgrade = null;",
          "497:                 $finalgrade = $hiding_affected['unknown'][$course_item->id];",
          "498:             }",
          "",
          "[Removed Lines]",
          "481:             if( !$this->showtotalsifcontainhidden[$courseid] ) {",
          "484:             }",
          "485:             else {",
          "491:             if( !$this->showtotalsifcontainhidden[$courseid] ) {",
          "494:             }",
          "495:             else {",
          "",
          "[Added Lines]",
          "470:             if (!$this->showtotalsifcontainhidden[$courseid]) {",
          "473:             } else {",
          "479:             if (!$this->showtotalsifcontainhidden[$courseid]) {",
          "482:             } else {",
          "",
          "---------------"
        ],
        "user/renderer.php||user/renderer.php": [
          "File: user/renderer.php -> user/renderer.php"
        ]
      }
    },
    {
      "candidate_hash": "bf5f227817ec65cfdf76d4bdc961af81a701bc31",
      "candidate_info": {
        "commit_hash": "bf5f227817ec65cfdf76d4bdc961af81a701bc31",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/bf5f227817ec65cfdf76d4bdc961af81a701bc31",
        "files": [
          "grade/report/lib.php",
          "grade/report/overview/lib.php",
          "grade/report/upgrade.txt",
          "grade/report/user/lib.php",
          "grade/tests/reportlib_test.php"
        ],
        "message": "MDL-37475 core_grade:fixed the handling of show totals",
        "before_after_code_files": [
          "grade/report/lib.php||grade/report/lib.php",
          "grade/report/overview/lib.php||grade/report/overview/lib.php",
          "grade/report/user/lib.php||grade/report/user/lib.php",
          "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "grade/report/lib.php||grade/report/lib.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php",
            "grade/report/user/lib.php||grade/report/user/lib.php",
            "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php"
          ],
          "candidate": [
            "grade/report/lib.php||grade/report/lib.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php",
            "grade/report/user/lib.php||grade/report/user/lib.php",
            "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php"
          ]
        }
      },
      "candidate_diff": {
        "grade/report/lib.php||grade/report/lib.php": [
          "File: grade/report/lib.php -> grade/report/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:         static $previous_courseid = null;",
          "361:             return $finalgrade;",
          "362:         }",
          "",
          "[Removed Lines]",
          "360:         if( $this->showtotalsifcontainhidden==GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN ) {",
          "",
          "[Added Lines]",
          "360:         if (!is_array($this->showtotalsifcontainhidden)) {",
          "361:             debugging('showtotalsifcontainhidden should be an array', DEBUG_DEVELOPER);",
          "362:             $this->showtotalsifcontainhidden = array($courseid => $this->showtotalsifcontainhidden);",
          "363:         }",
          "365:         if ($this->showtotalsifcontainhidden[$courseid] == GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "397:         if (array_key_exists($course_item->id, $hiding_affected['altered'])) {",
          "400:                 $finalgrade = null;",
          "401:             }",
          "",
          "[Removed Lines]",
          "398:             if( !$this->showtotalsifcontainhidden ) {",
          "",
          "[Added Lines]",
          "403:             if( !$this->showtotalsifcontainhidden[$courseid] ) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "405:             }",
          "406:         } else if (!empty($hiding_affected['unknown'][$course_item->id])) {",
          "410:                 $finalgrade = null;",
          "411:             }",
          "",
          "[Removed Lines]",
          "408:             if( !$this->showtotalsifcontainhidden ) {",
          "",
          "[Added Lines]",
          "413:             if( !$this->showtotalsifcontainhidden[$courseid] ) {",
          "",
          "---------------"
        ],
        "grade/report/overview/lib.php||grade/report/overview/lib.php": [
          "File: grade/report/overview/lib.php -> grade/report/overview/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:         global $CFG, $COURSE, $DB;",
          "72:         parent::__construct($COURSE->id, $gpr, $context);",
          "77:         $this->user = $DB->get_record('user', array('id' => $userid));",
          "",
          "[Removed Lines]",
          "74:         $this->showtotalsifcontainhidden = grade_get_setting($this->courseid, 'report_overview_showtotalsifcontainhidden', $CFG->grade_report_overview_showtotalsifcontainhidden);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:         $this->showrank = array();",
          "83:         $this->showrank['any'] = false;",
          "84:         if ($this->courses) {",
          "85:             foreach ($this->courses as $course) {",
          "86:                 $this->showrank[$course->id] = grade_get_setting($course->id, 'report_overview_showrank', !empty($CFG->grade_report_overview_showrank));",
          "87:                 if ($this->showrank[$course->id]) {",
          "88:                     $this->showrank['any'] = true;",
          "89:                 }",
          "90:             }",
          "91:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:         $this->showtotalsifcontainhidden = array();",
          "92:                 $this->showtotalsifcontainhidden[$course->id] = grade_get_setting($course->id, 'report_overview_showtotalsifcontainhidden', $CFG->grade_report_overview_showtotalsifcontainhidden);",
          "",
          "---------------"
        ],
        "grade/report/user/lib.php||grade/report/user/lib.php": [
          "File: grade/report/user/lib.php -> grade/report/user/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:         $this->showrank        = grade_get_setting($this->courseid, 'report_user_showrank', $CFG->grade_report_user_showrank);",
          "166:         $this->showpercentage  = grade_get_setting($this->courseid, 'report_user_showpercentage', $CFG->grade_report_user_showpercentage);",
          "167:         $this->showhiddenitems = grade_get_setting($this->courseid, 'report_user_showhiddenitems', $CFG->grade_report_user_showhiddenitems);",
          "170:         $this->showgrade       = grade_get_setting($this->courseid, 'report_user_showgrade',       !empty($CFG->grade_report_user_showgrade));",
          "171:         $this->showrange       = grade_get_setting($this->courseid, 'report_user_showrange',       !empty($CFG->grade_report_user_showrange));",
          "",
          "[Removed Lines]",
          "168:         $this->showtotalsifcontainhidden = grade_get_setting($this->courseid, 'report_user_showtotalsifcontainhidden', $CFG->grade_report_user_showtotalsifcontainhidden);",
          "",
          "[Added Lines]",
          "168:         $this->showtotalsifcontainhidden = array($this->courseid => grade_get_setting($this->courseid, 'report_user_showtotalsifcontainhidden', $CFG->grade_report_user_showtotalsifcontainhidden));",
          "",
          "---------------"
        ],
        "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php": [
          "File: grade/tests/reportlib_test.php -> grade/tests/reportlib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:         $report = new grade_report_test($course->id, $gpr, $coursecontext, $student);",
          "124:         $this->assertEquals($datagrade + $forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "128:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "132:         $this->assertEquals($forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "",
          "[Removed Lines]",
          "123:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN;",
          "127:         $report->showtotalsifcontainhidden = GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN;",
          "131:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN;",
          "",
          "[Added Lines]",
          "123:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN);",
          "127:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN);",
          "131:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:         $report = new grade_report_test($course->id, $gpr, $coursecontext, $student);",
          "186:         $this->assertEquals($datagrade + $forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "190:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "195:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "196:     }",
          "197: }",
          "",
          "[Removed Lines]",
          "185:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN;",
          "189:         $report->showtotalsifcontainhidden = GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN;",
          "194:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN;",
          "",
          "[Added Lines]",
          "185:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN);",
          "189:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN);",
          "194:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b280ca67972479b4b86dd8861bcbeb8c06e41f9",
      "candidate_info": {
        "commit_hash": "4b280ca67972479b4b86dd8861bcbeb8c06e41f9",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/4b280ca67972479b4b86dd8861bcbeb8c06e41f9",
        "files": [
          "grade/report/lib.php",
          "grade/report/overview/lib.php",
          "grade/report/upgrade.txt",
          "grade/report/user/lib.php",
          "grade/tests/reportlib_test.php"
        ],
        "message": "MDL-37475 core_grade:fixed the handling of show totals",
        "before_after_code_files": [
          "grade/report/lib.php||grade/report/lib.php",
          "grade/report/overview/lib.php||grade/report/overview/lib.php",
          "grade/report/user/lib.php||grade/report/user/lib.php",
          "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "grade/report/lib.php||grade/report/lib.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php",
            "grade/report/user/lib.php||grade/report/user/lib.php",
            "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php"
          ],
          "candidate": [
            "grade/report/lib.php||grade/report/lib.php",
            "grade/report/overview/lib.php||grade/report/overview/lib.php",
            "grade/report/user/lib.php||grade/report/user/lib.php",
            "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php"
          ]
        }
      },
      "candidate_diff": {
        "grade/report/lib.php||grade/report/lib.php": [
          "File: grade/report/lib.php -> grade/report/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "359:         static $previous_courseid = null;",
          "362:             return $finalgrade;",
          "363:         }",
          "",
          "[Removed Lines]",
          "361:         if( $this->showtotalsifcontainhidden==GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN ) {",
          "",
          "[Added Lines]",
          "361:         if (!is_array($this->showtotalsifcontainhidden)) {",
          "362:             debugging('showtotalsifcontainhidden should be an array', DEBUG_DEVELOPER);",
          "363:             $this->showtotalsifcontainhidden = array($courseid => $this->showtotalsifcontainhidden);",
          "364:         }",
          "366:         if ($this->showtotalsifcontainhidden[$courseid] == GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "398:         if (array_key_exists($course_item->id, $hiding_affected['altered'])) {",
          "401:                 $finalgrade = null;",
          "402:             }",
          "",
          "[Removed Lines]",
          "399:             if( !$this->showtotalsifcontainhidden ) {",
          "",
          "[Added Lines]",
          "404:             if( !$this->showtotalsifcontainhidden[$courseid] ) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "406:             }",
          "407:         } else if (!empty($hiding_affected['unknown'][$course_item->id])) {",
          "411:                 $finalgrade = null;",
          "412:             }",
          "",
          "[Removed Lines]",
          "409:             if( !$this->showtotalsifcontainhidden ) {",
          "",
          "[Added Lines]",
          "414:             if( !$this->showtotalsifcontainhidden[$courseid] ) {",
          "",
          "---------------"
        ],
        "grade/report/overview/lib.php||grade/report/overview/lib.php": [
          "File: grade/report/overview/lib.php -> grade/report/overview/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:         global $CFG, $COURSE, $DB;",
          "72:         parent::__construct($COURSE->id, $gpr, $context);",
          "77:         $this->user = $DB->get_record('user', array('id' => $userid));",
          "",
          "[Removed Lines]",
          "74:         $this->showtotalsifcontainhidden = grade_get_setting($this->courseid, 'report_overview_showtotalsifcontainhidden', $CFG->grade_report_overview_showtotalsifcontainhidden);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:         $this->showrank = array();",
          "83:         $this->showrank['any'] = false;",
          "84:         if ($this->courses) {",
          "85:             foreach ($this->courses as $course) {",
          "86:                 $this->showrank[$course->id] = grade_get_setting($course->id, 'report_overview_showrank', !empty($CFG->grade_report_overview_showrank));",
          "87:                 if ($this->showrank[$course->id]) {",
          "88:                     $this->showrank['any'] = true;",
          "89:                 }",
          "90:             }",
          "91:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:         $this->showtotalsifcontainhidden = array();",
          "92:                 $this->showtotalsifcontainhidden[$course->id] = grade_get_setting($course->id, 'report_overview_showtotalsifcontainhidden', $CFG->grade_report_overview_showtotalsifcontainhidden);",
          "",
          "---------------"
        ],
        "grade/report/user/lib.php||grade/report/user/lib.php": [
          "File: grade/report/user/lib.php -> grade/report/user/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:         $this->showrank        = grade_get_setting($this->courseid, 'report_user_showrank', $CFG->grade_report_user_showrank);",
          "166:         $this->showpercentage  = grade_get_setting($this->courseid, 'report_user_showpercentage', $CFG->grade_report_user_showpercentage);",
          "167:         $this->showhiddenitems = grade_get_setting($this->courseid, 'report_user_showhiddenitems', $CFG->grade_report_user_showhiddenitems);",
          "170:         $this->showgrade       = grade_get_setting($this->courseid, 'report_user_showgrade',       !empty($CFG->grade_report_user_showgrade));",
          "171:         $this->showrange       = grade_get_setting($this->courseid, 'report_user_showrange',       !empty($CFG->grade_report_user_showrange));",
          "",
          "[Removed Lines]",
          "168:         $this->showtotalsifcontainhidden = grade_get_setting($this->courseid, 'report_user_showtotalsifcontainhidden', $CFG->grade_report_user_showtotalsifcontainhidden);",
          "",
          "[Added Lines]",
          "168:         $this->showtotalsifcontainhidden = array($this->courseid => grade_get_setting($this->courseid, 'report_user_showtotalsifcontainhidden', $CFG->grade_report_user_showtotalsifcontainhidden));",
          "",
          "---------------"
        ],
        "grade/tests/reportlib_test.php||grade/tests/reportlib_test.php": [
          "File: grade/tests/reportlib_test.php -> grade/tests/reportlib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:         $report = new grade_report_test($course->id, $gpr, $coursecontext, $student);",
          "124:         $this->assertEquals($datagrade + $forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "128:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "132:         $this->assertEquals($forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "",
          "[Removed Lines]",
          "123:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN;",
          "127:         $report->showtotalsifcontainhidden = GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN;",
          "131:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN;",
          "",
          "[Added Lines]",
          "123:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN);",
          "127:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN);",
          "131:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:         $report = new grade_report_test($course->id, $gpr, $coursecontext, $student);",
          "186:         $this->assertEquals($datagrade + $forumgrade, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "190:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "195:         $this->assertEquals(null, $report->blank_hidden_total($course->id, $coursegradeitem, $datagrade + $forumgrade));",
          "196:     }",
          "197: }",
          "",
          "[Removed Lines]",
          "185:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN;",
          "189:         $report->showtotalsifcontainhidden = GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN;",
          "194:         $report->showtotalsifcontainhidden = GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN;",
          "",
          "[Added Lines]",
          "185:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_REAL_TOTAL_IF_CONTAINS_HIDDEN);",
          "189:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_HIDE_TOTAL_IF_CONTAINS_HIDDEN);",
          "194:         $report->showtotalsifcontainhidden = array($course->id => GRADE_REPORT_SHOW_TOTAL_IF_CONTAINS_HIDDEN);",
          "",
          "---------------"
        ]
      }
    }
  ]
}