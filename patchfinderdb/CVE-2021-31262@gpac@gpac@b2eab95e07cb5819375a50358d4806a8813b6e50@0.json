{
  "cve_id": "CVE-2021-31262",
  "cve_desc": "The AV1_DuplicateConfig function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
  "repo": "gpac/gpac",
  "patch_hash": "b2eab95e07cb5819375a50358d4806a8813b6e50",
  "patch_info": {
    "commit_hash": "b2eab95e07cb5819375a50358d4806a8813b6e50",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/b2eab95e07cb5819375a50358d4806a8813b6e50",
    "files": [
      "src/isomedia/avc_ext.c"
    ],
    "message": "fixed #1738",
    "before_after_code_files": [
      "src/isomedia/avc_ext.c||src/isomedia/avc_ext.c"
    ]
  },
  "patch_diff": {
    "src/isomedia/avc_ext.c||src/isomedia/avc_ext.c": [
      "File: src/isomedia/avc_ext.c -> src/isomedia/avc_ext.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1338:  return GF_OK;",
      "1339: }",
      "1342:  u32 i = 0;",
      "1343:  GF_AV1Config *out = gf_malloc(sizeof(GF_AV1Config));",
      "",
      "[Removed Lines]",
      "1341: static GF_AV1Config* AV1_DuplicateConfig(GF_AV1Config const * const cfg) {",
      "",
      "[Added Lines]",
      "1341: static GF_AV1Config* AV1_DuplicateConfig(GF_AV1Config const * const cfg)",
      "1342: {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1382:   av1->emul_esd->decoderConfig->avgBitrate = btrt->avgBitrate;",
      "1383:   av1->emul_esd->decoderConfig->maxBitrate = btrt->maxBitrate;",
      "1384:  }",
      "1386:   GF_AV1Config *av1_cfg = AV1_DuplicateConfig(av1->av1_config->config);",
      "1387:   if (av1_cfg) {",
      "1388:    gf_odf_av1_cfg_write(av1_cfg, &av1->emul_esd->decoderConfig->decoderSpecificInfo->data, &av1->emul_esd->decoderConfig->decoderSpecificInfo->dataLength);",
      "",
      "[Removed Lines]",
      "1385:  if (av1->av1_config) {",
      "",
      "[Added Lines]",
      "1386:  if (av1->av1_config && av1->av1_config->config) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2406:  trak = gf_isom_get_track_from_file(the_file, trackNumber);",
      "2407:  if (!trak || !trak->Media || !DescriptionIndex) return NULL;",
      "2408:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex - 1);",
      "2410:  return AV1_DuplicateConfig(entry->av1_config->config);",
      "2411: }",
      "",
      "[Removed Lines]",
      "2409:  if (!entry || !entry->av1_config) return NULL;",
      "",
      "[Added Lines]",
      "2410:  if (!entry || !entry->av1_config|| !entry->av1_config->config) return NULL;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "737e1f39da80e02912953269966d89afd196ad30",
      "candidate_info": {
        "commit_hash": "737e1f39da80e02912953269966d89afd196ad30",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/737e1f39da80e02912953269966d89afd196ad30",
        "files": [
          "src/isomedia/avc_ext.c",
          "src/isomedia/sample_descs.c"
        ],
        "message": "fixed #1846",
        "before_after_code_files": [
          "src/isomedia/avc_ext.c||src/isomedia/avc_ext.c",
          "src/isomedia/sample_descs.c||src/isomedia/sample_descs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/isomedia/avc_ext.c||src/isomedia/avc_ext.c"
          ],
          "candidate": [
            "src/isomedia/avc_ext.c||src/isomedia/avc_ext.c"
          ]
        }
      },
      "candidate_diff": {
        "src/isomedia/avc_ext.c||src/isomedia/avc_ext.c": [
          "File: src/isomedia/avc_ext.c -> src/isomedia/avc_ext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2287:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex-1);",
          "2288:  if (!entry) return NULL;",
          "2290:  if (!entry->avc_config) return NULL;",
          "2291:  return AVC_DuplicateConfig(entry->avc_config->config);",
          "2292: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2289:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2309:   return NULL;",
          "2310:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex-1);",
          "2311:  if (!entry) return NULL;",
          "2312:  if (!entry->hevc_config) return NULL;",
          "2313:  return HEVC_DuplicateConfig(entry->hevc_config->config);",
          "2314: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2312:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2325:   return GF_ISOM_VVCTYPE_NONE;",
          "2326:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex-1);",
          "2327:  if (!entry) return GF_ISOM_VVCTYPE_NONE;",
          "2328:  type = entry->type;",
          "2330:  if (type == GF_ISOM_BOX_TYPE_ENCV) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2329:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return GF_ISOM_VVCTYPE_NONE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2357:   return NULL;",
          "2358:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex-1);",
          "2359:  if (!entry) return NULL;",
          "2360:  if (!entry->vvc_config) return NULL;",
          "2361:  return VVC_DuplicateConfig(entry->vvc_config->config);",
          "2362: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2362:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return NULL;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2372:   return NULL;",
          "2373:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex-1);",
          "2374:  if (!entry) return NULL;",
          "2375:  if (!entry->svc_config) return NULL;",
          "2376:  return AVC_DuplicateConfig(entry->svc_config->config);",
          "2377: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2378:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return NULL;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2388:   return NULL;",
          "2389:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex-1);",
          "2390:  if (!entry) return NULL;",
          "2391:  if (!entry->mvc_config) return NULL;",
          "2392:  return AVC_DuplicateConfig(entry->mvc_config->config);",
          "2393: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2395:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return NULL;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2407:  trak = gf_isom_get_track_from_file(the_file, trackNumber);",
          "2408:  if (!trak || !trak->Media || !DescriptionIndex) return NULL;",
          "2409:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex - 1);",
          "2411:  return AV1_DuplicateConfig(entry->av1_config->config);",
          "2412: }",
          "",
          "[Removed Lines]",
          "2410:  if (!entry || !entry->av1_config|| !entry->av1_config->config) return NULL;",
          "",
          "[Added Lines]",
          "2415:  if (!entry) return NULL;",
          "2416:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return NULL;",
          "2417:  if (!entry->av1_config|| !entry->av1_config->config) return NULL;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2420:  trak = gf_isom_get_track_from_file(the_file, trackNumber);",
          "2421:  if (!trak || !trak->Media || !DescriptionIndex) return NULL;",
          "2422:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex - 1);",
          "2424:  return VP_DuplicateConfig(entry->vp_config->config);",
          "2425: }",
          "",
          "[Removed Lines]",
          "2423:  if (!entry || !entry->vp_config || !entry->vp_config->config) return NULL;",
          "",
          "[Added Lines]",
          "2430:  if (!entry) return NULL;",
          "2431:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return NULL;",
          "2432:  if (!entry->vp_config || !entry->vp_config->config) return NULL;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2432:  trak = gf_isom_get_track_from_file(the_file, trackNumber);",
          "2433:  if (!trak || !trak->Media || !DescriptionIndex) return NULL;",
          "2434:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex - 1);",
          "2436:  return DOVI_DuplicateConfig(&entry->dovi_config->DOVIConfig);",
          "2437: }",
          "",
          "[Removed Lines]",
          "2435:  if (!entry || !entry->dovi_config) return NULL;",
          "",
          "[Added Lines]",
          "2444:  if (!entry) return NULL;",
          "2445:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return NULL;",
          "2446:  if (!entry->dovi_config) return NULL;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2450:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex-1);",
          "2451:  if (!entry) return GF_ISOM_AVCTYPE_NONE;",
          "2453:  type = entry->type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2463:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return GF_ISOM_AVCTYPE_NONE;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2491:   return GF_ISOM_HEVCTYPE_NONE;",
          "2492:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex-1);",
          "2493:  if (!entry) return GF_ISOM_HEVCTYPE_NONE;",
          "2494:  type = entry->type;",
          "2496:  if (type == GF_ISOM_BOX_TYPE_ENCV) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2506:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return GF_ISOM_HEVCTYPE_NONE;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2536:   return NULL;",
          "2537:  entry = (GF_MPEGVisualSampleEntryBox*)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, DescriptionIndex-1);",
          "2538:  if (!entry) return NULL;",
          "2539:  if (!entry->lhvc_config) return NULL;",
          "2540:  lhvc = HEVC_DuplicateConfig(entry->lhvc_config->config);",
          "2541:  if (!lhvc) return NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2552:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return NULL;",
          "",
          "---------------"
        ],
        "src/isomedia/sample_descs.c||src/isomedia/sample_descs.c": [
          "File: src/isomedia/sample_descs.c -> src/isomedia/sample_descs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:  case GF_ISOM_SUBTYPE_3GP_EVRC:",
          "315:  case GF_ISOM_SUBTYPE_3GP_QCELP:",
          "316:  case GF_ISOM_SUBTYPE_3GP_SMV:",
          "317:   if (! ((GF_MPEGAudioSampleEntryBox*)entry)->cfg_3gpp) return NULL;",
          "318:   config = & ((GF_MPEGAudioSampleEntryBox*)entry)->cfg_3gpp->cfg;",
          "319:   break;",
          "320:  case GF_ISOM_SUBTYPE_3GP_H263:",
          "321:   if (! ((GF_MPEGVisualSampleEntryBox*)entry)->cfg_3gpp) return NULL;",
          "322:   config = & ((GF_MPEGVisualSampleEntryBox*)entry)->cfg_3gpp->cfg;",
          "323:   break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "317:   if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_AUDIO) return NULL;",
          "322:   if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "342:  if (!trak || !StreamDescriptionIndex) return NULL;",
          "344:  entry = (GF_MPEGAudioSampleEntryBox *)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, StreamDescriptionIndex-1);",
          "346:  if (!entry->cfg_ac3) return NULL;",
          "347:  if ( (entry->cfg_ac3->type!=GF_ISOM_BOX_TYPE_DAC3) && (entry->cfg_ac3->type!=GF_ISOM_BOX_TYPE_DEC3) ) return NULL;",
          "349:  res = (GF_AC3Config*)gf_malloc(sizeof(GF_AC3Config));",
          "",
          "[Removed Lines]",
          "345:  if (!entry || !entry->cfg_ac3) return NULL;",
          "",
          "[Added Lines]",
          "347:  if (!entry) return NULL;",
          "349:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_AUDIO) return NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "364:  if (!trak || !StreamDescriptionIndex) return GF_BAD_PARAM;",
          "366:  entry = (GF_MPEGAudioSampleEntryBox *)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, StreamDescriptionIndex-1);",
          "368:  type = entry->type;",
          "369:  if (type==GF_ISOM_BOX_TYPE_ENCA) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "370:  if (!entry) return GF_BAD_PARAM;",
          "371:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_AUDIO) return GF_BAD_PARAM;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "391:  entry = (GF_MPEGAudioSampleEntryBox *)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, StreamDescriptionIndex-1);",
          "392:  if (!entry) return GF_BAD_PARAM;",
          "393:  if (entry->type != GF_ISOM_SUBTYPE_MLPA) return GF_BAD_PARAM;",
          "395:  if (!entry->cfg_mlp) return GF_ISOM_INVALID_FILE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "398:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_AUDIO) return GF_BAD_PARAM;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "492:  if (!trak || !StreamDescriptionIndex) return GF_BAD_PARAM;",
          "494:  entry = (GF_MPEGAudioSampleEntryBox *)gf_list_get(trak->Media->information->sampleTable->SampleDescription->child_boxes, StreamDescriptionIndex-1);",
          "496:  type = entry->type;",
          "497:  if (type==GF_ISOM_BOX_TYPE_ENCA) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "501:  if (!entry) return GF_BAD_PARAM;",
          "502:  if (entry->internal_type != GF_ISOM_SAMPLE_ENTRY_AUDIO) return GF_BAD_PARAM;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "634:  case GF_ISOM_SUBTYPE_3GP_EVRC:",
          "635:  case GF_ISOM_SUBTYPE_3GP_QCELP:",
          "636:  case GF_ISOM_SUBTYPE_3GP_SMV:",
          "637:   cfg = &a_entry->cfg_3gpp->cfg;",
          "638:   break;",
          "639:  case GF_ISOM_SUBTYPE_3GP_H263:",
          "640:   cfg = & v_entry->cfg_3gpp->cfg;",
          "641:   break;",
          "642:  default:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "645:   if (a_entry->internal_type != GF_ISOM_SAMPLE_ENTRY_AUDIO) return GF_ISOM_INVALID_FILE;",
          "649:   if (v_entry->internal_type != GF_ISOM_SAMPLE_ENTRY_VIDEO) return GF_ISOM_INVALID_FILE;",
          "",
          "---------------"
        ]
      }
    }
  ]
}