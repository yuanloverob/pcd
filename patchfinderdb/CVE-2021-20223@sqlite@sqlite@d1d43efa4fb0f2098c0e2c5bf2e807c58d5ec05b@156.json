{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "68cffa65fba2f59d91e1da582e2a0b0fa7a4211a",
      "candidate_info": {
        "commit_hash": "68cffa65fba2f59d91e1da582e2a0b0fa7a4211a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/68cffa65fba2f59d91e1da582e2a0b0fa7a4211a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in"
        ],
        "message": "Fix a typo in the documentation comment for sqlite3_preupdate_hook().\n\nFossilOrigin-Name: 4542d194e2fef5e21e1c3679914bd9e21fab31cfb111cf640524fb3514a8afa3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c666c85a433fbc83edef4dbfb0399672e570f5d7979ab61cb39ff5488595d822",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ]
      }
    },
    {
      "candidate_hash": "dd6c33d372f3b83f4fe57904c2bd5ebba5c38018",
      "candidate_info": {
        "commit_hash": "dd6c33d372f3b83f4fe57904c2bd5ebba5c38018",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dd6c33d372f3b83f4fe57904c2bd5ebba5c38018",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/printf.c",
          "test/printf.test"
        ],
        "message": "Limit the \"precision\" of floating-point to text conversions in the printf() function to 100,000,000.  Fix for ticket [23439ea582241138].\n\nFossilOrigin-Name: d08d3405878d394e08e5d3af281246edfbd81ca74cc8d16458808591512fb93d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/printf.c||src/printf.c",
          "test/printf.test||test/printf.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9224f1543b51a674ad6d7db8e90d97e1b0d1abe68bed3417820ebd09d27270f9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/printf.c||src/printf.c": [
          "File: src/printf.c -> src/printf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "194: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "200: #ifndef SQLITE_PRINTF_PRECISION_LIMIT",
          "201: # define SQLITE_FP_PRECISION_LIMIT 100000000",
          "202: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "515:         length = 0;",
          "516: #else",
          "518:         if( realvalue<0.0 ){",
          "519:           realvalue = -realvalue;",
          "520:           prefix = '-';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "525: #ifdef SQLITE_FP_PRECISION_LIMIT",
          "526:         if( precision>SQLITE_FP_PRECISION_LIMIT ){",
          "527:           precision = SQLITE_FP_PRECISION_LIMIT;",
          "528:         }",
          "529: #endif",
          "",
          "---------------"
        ],
        "test/printf.test||test/printf.test": [
          "File: test/printf.test -> test/printf.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "3777:   }",
          "3778: }",
          "3780: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3780: # 2020-05-23",
          "3781: # ticket 23439ea582241138",
          "3782: #",
          "3783: do_execsql_test printf-16.1 {",
          "3784:   SELECT printf('%.*g',2147483647,0.01);",
          "3785: } {0.01}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "348d7f64f2f24191570a9e47cb937d76ee3b5ca2",
      "candidate_info": {
        "commit_hash": "348d7f64f2f24191570a9e47cb937d76ee3b5ca2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/348d7f64f2f24191570a9e47cb937d76ee3b5ca2",
        "files": [
          "ext/rtree/rtree.c",
          "ext/rtree/rtree1.test",
          "ext/rtree/rtreeH.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Be strict about type enforcement on rowid look-ups in the RTREE extension. Ticket [30e2c183b6b356e4]\n\nFossilOrigin-Name: d43e0efb9642037dd751cfed13438e71cfceb50e14a0ec603880c6c3be2e93b1",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "ext/rtree/rtree1.test||ext/rtree/rtree1.test",
          "ext/rtree/rtreeH.test||ext/rtree/rtreeH.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1818:     i64 iRowid = sqlite3_value_int64(argv[0]);",
          "1819:     i64 iNode = 0;",
          "1821:     if( rc==SQLITE_OK && pLeaf!=0 ){",
          "1822:       p = rtreeSearchPointNew(pCsr, RTREE_ZERO, 0);",
          "",
          "[Removed Lines]",
          "1820:     rc = findLeafNode(pRtree, iRowid, &pLeaf, &iNode);",
          "",
          "[Added Lines]",
          "1820:     int eType = sqlite3_value_numeric_type(argv[0]);",
          "1821:     if( eType==SQLITE_INTEGER",
          "1822:      || (eType==SQLITE_FLOAT && sqlite3_value_double(argv[0])==iRowid)",
          "1823:     ){",
          "1824:       rc = findLeafNode(pRtree, iRowid, &pLeaf, &iNode);",
          "1825:     }else{",
          "1826:       rc = SQLITE_OK;",
          "1827:       pLeaf = 0;",
          "1828:     }",
          "",
          "---------------"
        ],
        "ext/rtree/rtree1.test||ext/rtree/rtree1.test": [
          "File: ext/rtree/rtree1.test -> ext/rtree/rtree1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "601:   1 0.0 0.0",
          "602:   2 52.0 81.0",
          "603: }",
          "606:   DROP TABLE t10;",
          "607:   CREATE VIRTUAL TABLE t10 USING rtree_i32(ii, x1, x2);",
          "608:   INSERT INTO t10 VALUES(1, 'one', 'two');",
          "609:   INSERT INTO t10 VALUES(2, '52xyz', '81...');",
          "610:   INSERT INTO t10 VALUES(3, 42.3, 49.9);",
          "611: }",
          "613:   SELECT * FROM t10;",
          "614: } {",
          "615:   1 0 0",
          "",
          "[Removed Lines]",
          "605: do_execsql_test 14.4 {",
          "612: do_execsql_test 14.5 {",
          "",
          "[Added Lines]",
          "604: do_execsql_test 14.6 {",
          "605:   INSERT INTO t10 VALUES(0,10,20);",
          "606:   SELECT * FROM t10 WHERE ii=NULL;",
          "607: } {}",
          "608: do_execsql_test 14.7 {",
          "609:   SELECT * FROM t10 WHERE ii='xyz';",
          "610: } {}",
          "611: do_execsql_test 14.8 {",
          "612:   SELECT * FROM t10 WHERE ii='0.0';",
          "613: } {0 10.0 20.0}",
          "614: do_execsql_test 14.9 {",
          "615:   SELECT * FROM t10 WHERE ii=0.0;",
          "616: } {0 10.0 20.0}",
          "619: do_execsql_test 14.104 {",
          "626: do_execsql_test 14.105 {",
          "",
          "---------------"
        ],
        "ext/rtree/rtreeH.test||ext/rtree/rtreeH.test": [
          "File: ext/rtree/rtreeH.test -> ext/rtree/rtreeH.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: do_execsql_test rtreeH-102 {",
          "44:   SELECT * FROM t1 WHERE rowid=5;",
          "45: } {5 40.0 60.0 40.0 60.0 center {}}",
          "46: do_execsql_test rtreeH-103 {",
          "47:   SELECT * FROM t1 WHERE label='center';",
          "48: } {5 40.0 60.0 40.0 60.0 center {}}",
          "50: do_rtree_integrity_test rtreeH-110 t1",
          "52: do_execsql_test rtreeH-120 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: do_execsql_test rtreeH-102b {",
          "47:   SELECT * FROM t1 WHERE rowid=5.0;",
          "48: } {5 40.0 60.0 40.0 60.0 center {}}",
          "49: do_execsql_test rtreeH-102c {",
          "50:   SELECT * FROM t1 WHERE rowid='5';",
          "51: } {5 40.0 60.0 40.0 60.0 center {}}",
          "52: do_execsql_test rtreeH-102d {",
          "53:   SELECT * FROM t1 WHERE rowid='0005';",
          "54: } {5 40.0 60.0 40.0 60.0 center {}}",
          "55: do_execsql_test rtreeH-102e {",
          "56:   SELECT * FROM t1 WHERE rowid='+5.0e+0';",
          "57: } {5 40.0 60.0 40.0 60.0 center {}}",
          "62: do_execsql_test rtreeH-104 {",
          "63:   SELECT * FROM t1 WHERE rowid='+5.0e+0x';",
          "64: } {}",
          "65: do_execsql_test rtreeH-105 {",
          "66:   SELECT * FROM t1 WHERE rowid=x'35';",
          "67: } {}",
          "68: do_execsql_test rtreeH-106 {",
          "69:   SELECT * FROM t1 WHERE rowid=null;",
          "70: } {}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f898d04cf272ef0130dcae146cb86d8630b10a6f19aecfc2fa70e97e082bd51c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3acd3fb9d8bfe867c6e4015720569b23bffaf4fb",
      "candidate_info": {
        "commit_hash": "3acd3fb9d8bfe867c6e4015720569b23bffaf4fb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3acd3fb9d8bfe867c6e4015720569b23bffaf4fb",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a \"jump depends on unitialized value\" valgrind/asan error in fts5.\n\nFossilOrigin-Name: 66f94d623c16b4527e42f0519e32ec78eaf9ee6fd61ee7d0eb657cc59a8f7d68",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4998:         fts5MergeAppendDocid(&out, iLastRowid, i2.iRowid);",
          "4999:         fts5BufferZero(&tmp);",
          "5001:         if( p->rc ) break;",
          "5003:         sqlite3Fts5PoslistNext64(a1, i1.nPoslist, &iOff1, &iPos1);",
          "",
          "[Removed Lines]",
          "5000:         sqlite3Fts5BufferSize(&p->rc, &tmp, i1.nPoslist + i2.nPoslist + 10 + 10);",
          "",
          "[Added Lines]",
          "5000:         sqlite3Fts5BufferSize(&p->rc, &tmp,",
          "5001:             i1.nPoslist + i2.nPoslist + 10 + 10 + FTS5_DATA_ZERO_PADDING",
          "5002:         );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5071:     }",
          "5072:     assert_nc( out.n<=(p1->n+p2->n+9) );",
          "5075:     fts5BufferFree(&tmp);",
          "5077:   }",
          "5078: }",
          "",
          "[Removed Lines]",
          "5074:     fts5BufferSet(&p->rc, p1, out.n, out.p);",
          "5076:     fts5BufferFree(&out);",
          "",
          "[Added Lines]",
          "5076:     fts5BufferFree(p1);",
          "5078:     memset(&out.p[out.n], 0, FTS5_DATA_ZERO_PADDING);",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "10324:   SELECT * FROM t1 WHERE a MATCH 'fx*'",
          "10325: } {1 {database disk image is malformed}}",
          "10327: sqlite3_fts5_may_be_corrupt 0",
          "10328: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10327: #-------------------------------------------------------------------------",
          "10328: reset_db",
          "10329: do_test 70.0 {",
          "10330:   sqlite3 db {}",
          "10331:   db deserialize [decode_hexdb {",
          "10332: .open --hexdb",
          "10333: | size 24576 pagesize 4096 filename sql022250.txt.db",
          "10334: | page 1 offset 0",
          "10335: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "10336: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "10337: |     96: 00 00 00 00 0d 00 00 00 06 0d e2 00 0f c4 0f 6a   ...............j",
          "10338: |    112: 0e fc 0e 9d 0e 3d 0d e2 00 00 00 00 00 00 00 00   .....=..........",
          "10339: |   3552: 00 00 59 06 06 17 21 21 01 7f 74 61 62 6c 65 74   ..Y...!!..tablet",
          "10340: |   3568: 74 74 5f 63 6f 6e 66 69 67 74 74 74 5f 63 6f 6e   tt_configttt_con",
          "10341: |   3584: 66 69 67 06 43 52 45 41 54 45 20 54 41 42 4c 45   fig.CREATE TABLE",
          "10342: |   3600: 20 27 74 74 74 5f 63 6f 6e 66 69 67 27 28 6b 20    'ttt_config'(k",
          "10343: |   3616: 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29 20   PRIMARY KEY, v)",
          "10344: |   3632: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5e 15 07   WITHOUT ROWID^..",
          "10345: |   3648: 17 23 23 01 81 03 74 61 62 6c 65 74 74 74 5f 64   .##...tablettt_d",
          "10346: |   3664: 6f 63 73 69 7a 65 74 74 74 5f 64 6f 63 73 69 7a   ocsizettt_docsiz",
          "10347: |   3680: 65 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27   e.CREATE TABLE '",
          "10348: |   3696: 74 74 74 5f 64 6f 63 73 69 7a 65 27 28 69 64 20   ttt_docsize'(id",
          "10349: |   3712: 49 4d 54 45 47 45 52 20 50 52 49 4d 41 52 59 20   IMTEGER PRIMARY",
          "10350: |   3728: 4b 45 59 2c 20 73 7a 20 42 4c 4f 20 29 5d 04 07   KEY, sz BLO )]..",
          "10351: |   3744: 17 23 23 01 81 01 74 61 62 6c 65 74 74 74 5f 63   .##...tablettt_c",
          "10352: |   3760: 6f 6e 74 65 6e 74 74 74 74 5f 63 6f 6e 74 65 6e   ontentttt_conten",
          "10353: |   3776: 74 04 43 52 45 41 54 45 20 54 41 42 4c 45 20 27   t.CREATE TABLE '",
          "10354: |   3792: 74 74 74 5f 63 6f 6e 74 65 6e 74 27 28 69 64 20   ttt_content'(id",
          "10355: |   3808: 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59 20   INTEGER PRIMARY",
          "10356: |   3824: 4b 45 59 2c 20 63 30 2c 20 63 31 29 6c 03 07 17   KEY, c0, c1)l...",
          "10357: |   3840: 1b 1b 01 81 2f 74 61 62 6c 65 74 74 74 5f 69 64   ..../tablettt_id",
          "10358: |   3856: 78 74 74 74 5f 69 64 78 03 43 52 45 41 54 45 20   xttt_idx.CREATE",
          "10359: |   3872: 54 41 42 4c 45 20 27 74 74 74 5f 69 64 78 27 28   TABLE 'ttt_idx'(",
          "10360: |   3888: 73 65 67 69 64 2c 20 74 65 72 6d 2c 20 70 67 6e   segid, term, pgn",
          "10361: |   3904: 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45 59 28 73   o, PRIMARY KEY(s",
          "10362: |   3920: 65 67 69 64 2c 20 74 65 72 6d 29 29 20 57 49 54   egid, term)) WIT",
          "10363: |   3936: 48 4f 55 54 20 52 4f 57 49 44 58 02 07 17 1d 1d   HOUT ROWIDX.....",
          "10364: |   3952: 01 81 03 74 61 62 6c 65 74 74 74 5f 64 61 74 61   ...tablettt_data",
          "10365: |   3968: 74 74 74 5f 64 61 74 61 02 43 52 45 41 54 45 20   ttt_data.CREATE",
          "10366: |   3984: 54 41 42 4c 45 20 27 74 74 74 5f 64 61 74 61 27   TABLE 'ttt_data'",
          "10367: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "10368: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "10369: |   4032: 4c 4f 42 29 3a 01 06 17 13 13 08 5f 74 61 62 6c   LOB):......_tabl",
          "10370: |   4048: 65 74 74 74 74 74 74 43 52 45 41 54 45 20 56 49   ettttttCREATE VI",
          "10371: |   4064: 52 54 55 41 4c 20 54 41 42 4c 45 20 74 74 74 20   RTUAL TABLE ttt",
          "10372: |   4080: 55 53 49 4e 47 20 66 74 73 35 28 61 2c 20 62 29   USING fts5(a, b)",
          "10373: | page 2 offset 4096",
          "10374: |      0: 0d 0f 54 00 05 0e 81 00 0f e7 0e 81 0f af 0f 58   ..T............X",
          "10375: |     16: 0e 98 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "10376: |   3712: 00 15 0a 03 00 30 00 00 00 00 01 03 03 00 03 01   .....0..........",
          "10377: |   3728: 01 01 02 01 01 03 01 01 81 24 8c 80 80 80 80 01   .........$......",
          "10378: |   3744: 04 00 82 4c 00 00 00 9b 02 30 65 03 1a 02 05 05   ...L.....0e.....",
          "10379: |   3760: 07 05 01 01 04 03 03 08 03 03 01 2e 02 05 05 07   ................",
          "10380: |   3776: 05 07 05 07 05 01 01 14 03 03 08 03 03 08 03 bf   ................",
          "10381: |   3792: 07 f2 f3 02 01 65 03 1e 03 05 05 04 05 05 01 01   .....e..........",
          "10382: |   3808: 03 06 04 04 06 04 03 01 36 03 05 05 04 05 05 04   ........6.......",
          "10383: |   3824: 05 15 04 05 05 01 01 03 06 04 04 06 04 04 a1 04   ................",
          "10384: |   3840: 04 06 04 03 03 01 65 03 14 04 05 07 05 05 01 01   ......e.........",
          "10385: |   3856: 02 09 0a 01 20 04 05 07 05 07 05 07 05 05 01 01   .... ...........",
          "10386: |   3872: 02 0f da 0a 0a 04 01 64 f3 02 0a 01 06 0a 0a 0a   .......d........",
          "10387: |   3888: 05 01 65 03 06 01 01 0a 01 0a 01 01 0a 0a 0a 04   ..e.............",
          "10388: |   3904: 2b 31 21 0b 0f ef 00 14 2a 00 00 00 00 01 02 02   +1!.....*.......",
          "10389: |   3920: 00 02 01 01 01 02 01 01 50 88 80 80 80 80 01 04   ........P.......",
          "10390: |   3936: 00 81 24 00 00 00 47 01 30 65 02 1a 02 05 05 07   ..$...G.0e......",
          "10391: |   3952: 05 01 01 04 03 03 08 03 03 02 01 65 02 1d f3 05   ...........e....",
          "10392: |   3968: 05 04 05 05 01 01 04 06 04 04 06 04 03 03 01 65   ...............e",
          "10393: |   3984: 02 14 04 05 07 05 05 01 01 02 08 0a 04 01 65 02   ..............e.",
          "10394: |   4000: 02 0a 05 01 65 02 06 01 01 0a 04 12 14 0f 06 31   ....e..........1",
          "10395: |   4016: 84 80 80 80 80 01 03 00 68 00 00 00 2b 02 30 65   ........h...+.0e",
          "10396: |   4032: 01 10 02 05 05 01 01 04 03 03 02 01 66 01 12 03   ............f...",
          "10397: |   4048: 05 05 01 01 03 06 04 03 03 01 65 01 0e 04 05 05   ..........e.....",
          "10398: |   4064: 01 01 02 08 04 0d 0e 06 01 03 00 12 04 4c 4c 00   .............LL.",
          "10399: |   4080: 00 00 11 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "10400: | page 3 offset 8192",
          "10401: |      0: 0a 2f 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ./..............",
          "10402: | page 4 offset 12288",
          "10403: |   3344: 00 00 00 00 00 00 00 00 00 00 81 52 04 06 10 81   ...........R....",
          "10404: |   3360: 5d 81 55 65 20 65 65 20 65 65 65 20 65 20 65 65   ].Ue ee eee e ee",
          "10405: |   3376: 20 65 65 65 20 65 20 65 65 20 65 65 65 65 20 65    eee e ee eeee e",
          "10406: |   3392: 65 20 65 65 65 24 a5 20 65 65 20 65 65 65 20 65   e eee$. ee eee e",
          "10407: |   3408: 24 05 65 20 65 65 65 65 20 65 65 20 65 65 65 20   $.e eeee ee eee",
          "10408: |   3424: 65 20 65 65 20 65 65 65 20 65 20 65 65 20 65 65   e ee eee e ee ee",
          "10409: |   3440: 65 65 20 65 65 20 65 65 65 20 65 20 65 65 10 65   ee ee eee e ee.e",
          "10410: |   3456: 65 65 20 65 20 65 65 20 65 65 65 65 65 65 20 65   ee e ee eeeeee e",
          "10411: |   3472: 65 20 65 20 65 20 65 20 65 65 20 65 65 65 20 65   e e e e ee eee e",
          "10412: |   3488: 1f 20 65 65 66 65 65 20 65 65 20 65 20 65 20 2d   . eefee ee e e -",
          "10413: | page 5 offset 16384",
          "10414: |   4064: 00 00 00 00 05 04 d0 00 10 21 21 05 03 03 00 10   .........!!.....",
          "10415: |   4080: 11 11 05 02 03 00 10 11 10 05 01 03 00 10 09 09   ................",
          "10416: | page 6 offset 20480",
          "10417: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "10418: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "10419: | end sql022250.txt.db",
          "10420: }]} {}",
          "10422: do_catchsql_test 70.1 {",
          "10423:   SELECT snippet(ttt, -1, '', '','','>')FROM ttt('e* NOT ee*e* NOT ee*');",
          "10424: } {1 {database disk image is malformed}}",
          "10426: do_catchsql_test 70.2 {",
          "10427:   SELECT snippet(ttt, -1, '', '','',13)FROM ttt('e* NOT ee*e* NOT ee*')",
          "10428: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e2074b24788149562b15022ccd2784d6649f08ebc41410e3bfb2401baf0892e2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f067ae8eba4b58f8b0fa88791157130e7cdd92f5",
      "candidate_info": {
        "commit_hash": "f067ae8eba4b58f8b0fa88791157130e7cdd92f5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f067ae8eba4b58f8b0fa88791157130e7cdd92f5",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/upfrom1.tcl",
          "test/upfrom1.test"
        ],
        "message": "Add test for LEFT JOIN in UPDATE...FROM statement.\n\nFossilOrigin-Name: 4f3dff045ab90e80479960fed64cf36f23dd0e13144edbde15043913ad3faac5",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/upfrom1.tcl||test/upfrom1.tcl",
          "test/upfrom1.test||test/upfrom1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 47c87af3e52bce10fbcc2cbe832d659b0c204bfb3368d9314fa1b01120129254",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/upfrom1.tcl||test/upfrom1.tcl": [
          "File: test/upfrom1.tcl -> test/upfrom1.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "76: }",
          "77: }]}",
          "79: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79: execsql_test 2.1 {",
          "80:   DROP TABLE IF EXISTS t5;",
          "81:   DROP TABLE IF EXISTS m1;",
          "82:   DROP TABLE IF EXISTS m2;",
          "83:   CREATE TABLE t5(a INTEGER PRIMARY KEY, b TEXT, c TEXT);",
          "84:   CREATE TABLE m1(x INTEGER PRIMARY KEY, y TEXT);",
          "85:   CREATE TABLE m2(u INTEGER PRIMARY KEY, v TEXT);",
          "87:   INSERT INTO t5 VALUES(1, 'one', 'ONE');",
          "88:   INSERT INTO t5 VALUES(2, 'two', 'TWO');",
          "89:   INSERT INTO t5 VALUES(3, 'three', 'THREE');",
          "90:   INSERT INTO t5 VALUES(4, 'four', 'FOUR');",
          "92:   INSERT INTO m1 VALUES(1, 'i');",
          "93:   INSERT INTO m1 VALUES(2, 'ii');",
          "94:   INSERT INTO m1 VALUES(3, 'iii');",
          "96:   INSERT INTO m2 VALUES(1, 'I');",
          "97:   INSERT INTO m2 VALUES(3, 'II');",
          "98:   INSERT INTO m2 VALUES(4, 'III');",
          "99: }",
          "101: execsql_test 2.2 {",
          "102:   UPDATE t5 SET b=y, c=v FROM m1 LEFT JOIN m2 ON (x=u) WHERE x=a;",
          "103:   SELECT * FROM t5 ORDER BY a;",
          "104: }",
          "",
          "---------------"
        ],
        "test/upfrom1.test||test/upfrom1.test": [
          "File: test/upfrom1.test -> test/upfrom1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:   SELECT * FROM t3 ORDER BY a;",
          "128: } {1 1 five   2 2 five   3 3 five}",
          "130: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130: do_execsql_test 2.1 {",
          "131:   DROP TABLE IF EXISTS t5;",
          "132:   DROP TABLE IF EXISTS m1;",
          "133:   DROP TABLE IF EXISTS m2;",
          "134:   CREATE TABLE t5(a INTEGER PRIMARY KEY, b TEXT, c TEXT);",
          "135:   CREATE TABLE m1(x INTEGER PRIMARY KEY, y TEXT);",
          "136:   CREATE TABLE m2(u INTEGER PRIMARY KEY, v TEXT);",
          "138:   INSERT INTO t5 VALUES(1, 'one', 'ONE');",
          "139:   INSERT INTO t5 VALUES(2, 'two', 'TWO');",
          "140:   INSERT INTO t5 VALUES(3, 'three', 'THREE');",
          "141:   INSERT INTO t5 VALUES(4, 'four', 'FOUR');",
          "143:   INSERT INTO m1 VALUES(1, 'i');",
          "144:   INSERT INTO m1 VALUES(2, 'ii');",
          "145:   INSERT INTO m1 VALUES(3, 'iii');",
          "147:   INSERT INTO m2 VALUES(1, 'I');",
          "148:   INSERT INTO m2 VALUES(3, 'II');",
          "149:   INSERT INTO m2 VALUES(4, 'III');",
          "150: } {}",
          "152: do_execsql_test 2.2 {",
          "153:   UPDATE t5 SET b=y, c=v FROM m1 LEFT JOIN m2 ON (x=u) WHERE x=a;",
          "154:   SELECT * FROM t5 ORDER BY a;",
          "155: } {1 i I   2 ii {}   3 iii II   4 four FOUR}",
          "",
          "---------------"
        ]
      }
    }
  ]
}