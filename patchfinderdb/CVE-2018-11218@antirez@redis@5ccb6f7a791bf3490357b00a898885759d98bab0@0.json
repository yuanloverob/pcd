{
  "cve_id": "CVE-2018-11218",
  "cve_desc": "Memory Corruption was discovered in the cmsgpack library in the Lua subsystem in Redis before 3.2.12, 4.x before 4.0.10, and 5.x before 5.0 RC2 because of stack-based buffer overflows.",
  "repo": "antirez/redis",
  "patch_hash": "5ccb6f7a791bf3490357b00a898885759d98bab0",
  "patch_info": {
    "commit_hash": "5ccb6f7a791bf3490357b00a898885759d98bab0",
    "repo": "antirez/redis",
    "commit_url": "https://github.com/antirez/redis/commit/5ccb6f7a791bf3490357b00a898885759d98bab0",
    "files": [
      "deps/lua/src/lua_cmsgpack.c"
    ],
    "message": "Security: more cmsgpack fixes by @soloestoy.\n\n@soloestoy sent me this additional fixes, after searching for similar\nproblems to the one reported in mp_pack(). I'm committing the changes\nbecause it was not possible during to make a public PR to protect Redis\nusers and give Redis providers some time to patch their systems.",
    "before_after_code_files": [
      "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c"
    ]
  },
  "patch_diff": {
    "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c": [
      "File: deps/lua/src/lua_cmsgpack.c -> deps/lua/src/lua_cmsgpack.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "385: #endif",
      "387:     mp_encode_array(L,buf,len);",
      "388:     for (j = 1; j <= len; j++) {",
      "389:         lua_pushnumber(L,j);",
      "390:         lua_gettable(L,-2);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "388:     luaL_checkstack(L, 1, \"in function mp_encode_lua_table_as_array\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "403:     lua_pushnil(L);",
      "404:     while(lua_next(L,-2)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "404:     luaL_checkstack(L, 3, \"in function mp_encode_lua_table_as_map\");",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "522:     for(i = 1; i <= nargs; i++) {",
      "525:         lua_pushvalue(L, i);",
      "527:         mp_encode_lua_type(L,buf,0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "527:         luaL_checkstack(L, 1, \"in function mp_check\");",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "550:     int index = 1;",
      "552:     lua_newtable(L);",
      "553:     while(len--) {",
      "554:         lua_pushnumber(L,index++);",
      "555:         mp_decode_to_lua_type(L,c);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "556:     luaL_checkstack(L, 1, \"in function mp_decode_to_lua_array\");",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "826:         int offset = len - c.left;",
      "828:         lua_pushinteger(L, c.left == 0 ? -1 : offset);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "832:         luaL_checkstack(L, 1, \"in function mp_unpack_full\");",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e27a0401462eed89d86fe336d4833c478b0960f2",
      "candidate_info": {
        "commit_hash": "e27a0401462eed89d86fe336d4833c478b0960f2",
        "repo": "antirez/redis",
        "commit_url": "https://github.com/antirez/redis/commit/e27a0401462eed89d86fe336d4833c478b0960f2",
        "files": [
          "deps/lua/src/lua_cmsgpack.c"
        ],
        "message": "Security: more cmsgpack fixes by @soloestoy.\n\n@soloestoy sent me this additional fixes, after searching for similar\nproblems to the one reported in mp_pack(). I'm committing the changes\nbecause it was not possible during to make a public PR to protect Redis\nusers and give Redis providers some time to patch their systems.",
        "before_after_code_files": [
          "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c"
          ],
          "candidate": [
            "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c"
          ]
        }
      },
      "candidate_diff": {
        "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c": [
          "File: deps/lua/src/lua_cmsgpack.c -> deps/lua/src/lua_cmsgpack.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "385: #endif",
          "387:     mp_encode_array(L,buf,len);",
          "388:     for (j = 1; j <= len; j++) {",
          "389:         lua_pushnumber(L,j);",
          "390:         lua_gettable(L,-2);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:     luaL_checkstack(L, 1, \"in function mp_encode_lua_table_as_array\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "403:     lua_pushnil(L);",
          "404:     while(lua_next(L,-2)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:     luaL_checkstack(L, 3, \"in function mp_encode_lua_table_as_map\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "522:     for(i = 1; i <= nargs; i++) {",
          "525:         lua_pushvalue(L, i);",
          "527:         mp_encode_lua_type(L,buf,0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "527:         luaL_checkstack(L, 1, \"in function mp_check\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "550:     int index = 1;",
          "552:     lua_newtable(L);",
          "553:     while(len--) {",
          "554:         lua_pushnumber(L,index++);",
          "555:         mp_decode_to_lua_type(L,c);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "556:     luaL_checkstack(L, 1, \"in function mp_decode_to_lua_array\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "826:         int offset = len - c.left;",
          "828:         lua_pushinteger(L, c.left == 0 ? -1 : offset);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "832:         luaL_checkstack(L, 1, \"in function mp_unpack_full\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3dcf42697b28a84d8634ba9608adc9b217f543d4",
      "candidate_info": {
        "commit_hash": "3dcf42697b28a84d8634ba9608adc9b217f543d4",
        "repo": "antirez/redis",
        "commit_url": "https://github.com/antirez/redis/commit/3dcf42697b28a84d8634ba9608adc9b217f543d4",
        "files": [
          "deps/lua/src/lua_cmsgpack.c"
        ],
        "message": "Security: more cmsgpack fixes by @soloestoy.\n\n@soloestoy sent me this additional fixes, after searching for similar\nproblems to the one reported in mp_pack(). I'm committing the changes\nbecause it was not possible during to make a public PR to protect Redis\nusers and give Redis providers some time to patch their systems.",
        "before_after_code_files": [
          "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c"
          ],
          "candidate": [
            "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c"
          ]
        }
      },
      "candidate_diff": {
        "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c": [
          "File: deps/lua/src/lua_cmsgpack.c -> deps/lua/src/lua_cmsgpack.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "385: #endif",
          "387:     mp_encode_array(L,buf,len);",
          "388:     for (j = 1; j <= len; j++) {",
          "389:         lua_pushnumber(L,j);",
          "390:         lua_gettable(L,-2);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:     luaL_checkstack(L, 1, \"in function mp_encode_lua_table_as_array\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "403:     lua_pushnil(L);",
          "404:     while(lua_next(L,-2)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:     luaL_checkstack(L, 3, \"in function mp_encode_lua_table_as_map\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "522:     for(i = 1; i <= nargs; i++) {",
          "525:         lua_pushvalue(L, i);",
          "527:         mp_encode_lua_type(L,buf,0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "527:         luaL_checkstack(L, 1, \"in function mp_check\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "550:     int index = 1;",
          "552:     lua_newtable(L);",
          "553:     while(len--) {",
          "554:         lua_pushnumber(L,index++);",
          "555:         mp_decode_to_lua_type(L,c);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "556:     luaL_checkstack(L, 1, \"in function mp_decode_to_lua_array\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "826:         int offset = len - c.left;",
          "828:         lua_pushinteger(L, c.left == 0 ? -1 : offset);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "832:         luaL_checkstack(L, 1, \"in function mp_unpack_full\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a57595cadeda5267da217dc2bf13bcdfc72884cc",
      "candidate_info": {
        "commit_hash": "a57595cadeda5267da217dc2bf13bcdfc72884cc",
        "repo": "antirez/redis",
        "commit_url": "https://github.com/antirez/redis/commit/a57595cadeda5267da217dc2bf13bcdfc72884cc",
        "files": [
          "deps/lua/src/lua_cmsgpack.c"
        ],
        "message": "Security: more cmsgpack fixes by @soloestoy.\n\n@soloestoy sent me this additional fixes, after searching for similar\nproblems to the one reported in mp_pack(). I'm committing the changes\nbecause it was not possible during to make a public PR to protect Redis\nusers and give Redis providers some time to patch their systems.",
        "before_after_code_files": [
          "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c"
          ],
          "candidate": [
            "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c"
          ]
        }
      },
      "candidate_diff": {
        "deps/lua/src/lua_cmsgpack.c||deps/lua/src/lua_cmsgpack.c": [
          "File: deps/lua/src/lua_cmsgpack.c -> deps/lua/src/lua_cmsgpack.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "385: #endif",
          "387:     mp_encode_array(L,buf,len);",
          "388:     for (j = 1; j <= len; j++) {",
          "389:         lua_pushnumber(L,j);",
          "390:         lua_gettable(L,-2);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:     luaL_checkstack(L, 1, \"in function mp_encode_lua_table_as_array\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "403:     lua_pushnil(L);",
          "404:     while(lua_next(L,-2)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:     luaL_checkstack(L, 3, \"in function mp_encode_lua_table_as_map\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "522:     for(i = 1; i <= nargs; i++) {",
          "525:         lua_pushvalue(L, i);",
          "527:         mp_encode_lua_type(L,buf,0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "527:         luaL_checkstack(L, 1, \"in function mp_check\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "550:     int index = 1;",
          "552:     lua_newtable(L);",
          "553:     while(len--) {",
          "554:         lua_pushnumber(L,index++);",
          "555:         mp_decode_to_lua_type(L,c);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "556:     luaL_checkstack(L, 1, \"in function mp_decode_to_lua_array\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "826:         int offset = len - c.left;",
          "828:         lua_pushinteger(L, c.left == 0 ? -1 : offset);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "832:         luaL_checkstack(L, 1, \"in function mp_unpack_full\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}