{
  "cve_id": "CVE-2015-8104",
  "cve_desc": "The KVM subsystem in the Linux kernel through 4.2.6, and Xen 4.3.x through 4.6.x, allows guest OS users to cause a denial of service (host OS panic or hang) by triggering many #DB (aka Debug) exceptions, related to svm.c.",
  "repo": "torvalds/linux",
  "patch_hash": "cbdb967af3d54993f5814f1cee0ed311a055377d",
  "patch_info": {
    "commit_hash": "cbdb967af3d54993f5814f1cee0ed311a055377d",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/cbdb967af3d54993f5814f1cee0ed311a055377d",
    "files": [
      "arch/x86/kvm/svm.c"
    ],
    "message": "KVM: svm: unconditionally intercept #DB\n\nThis is needed to avoid the possibility that the guest triggers\nan infinite stream of #DB exceptions (CVE-2015-8104).\n\nVMX is not affected: because it does not save DR6 in the VMCS,\nit already intercepts #DB unconditionally.\n\nReported-by: Jan Beulich <jbeulich@suse.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "before_after_code_files": [
      "arch/x86/kvm/svm.c||arch/x86/kvm/svm.c"
    ]
  },
  "patch_diff": {
    "arch/x86/kvm/svm.c||arch/x86/kvm/svm.c": [
      "File: arch/x86/kvm/svm.c -> arch/x86/kvm/svm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1020:  set_exception_intercept(svm, UD_VECTOR);",
      "1021:  set_exception_intercept(svm, MC_VECTOR);",
      "1022:  set_exception_intercept(svm, AC_VECTOR);",
      "1024:  set_intercept(svm, INTERCEPT_INTR);",
      "1025:  set_intercept(svm, INTERCEPT_NMI);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1023:  set_exception_intercept(svm, DB_VECTOR);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1554:  mark_dirty(svm->vmcb, VMCB_SEG);",
      "1555: }",
      "1558: {",
      "1559:  struct vcpu_svm *svm = to_svm(vcpu);",
      "1562:  clr_exception_intercept(svm, BP_VECTOR);",
      "1567:  if (vcpu->guest_debug & KVM_GUESTDBG_ENABLE) {",
      "1571:   if (vcpu->guest_debug & KVM_GUESTDBG_USE_SW_BP)",
      "1572:    set_exception_intercept(svm, BP_VECTOR);",
      "1573:  } else",
      "",
      "[Removed Lines]",
      "1557: static void update_db_bp_intercept(struct kvm_vcpu *vcpu)",
      "1561:  clr_exception_intercept(svm, DB_VECTOR);",
      "1564:  if (svm->nmi_singlestep)",
      "1565:   set_exception_intercept(svm, DB_VECTOR);",
      "1568:   if (vcpu->guest_debug &",
      "1569:       (KVM_GUESTDBG_SINGLESTEP | KVM_GUESTDBG_USE_HW_BP))",
      "1570:    set_exception_intercept(svm, DB_VECTOR);",
      "",
      "[Added Lines]",
      "1558: static void update_bp_intercept(struct kvm_vcpu *vcpu)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1673:   if (!(svm->vcpu.guest_debug & KVM_GUESTDBG_SINGLESTEP))",
      "1674:    svm->vmcb->save.rflags &=",
      "1675:     ~(X86_EFLAGS_TF | X86_EFLAGS_RF);",
      "1677:  }",
      "1679:  if (svm->vcpu.guest_debug &",
      "",
      "[Removed Lines]",
      "1676:   update_db_bp_intercept(&svm->vcpu);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3662:  svm->nmi_singlestep = true;",
      "3663:  svm->vmcb->save.rflags |= (X86_EFLAGS_TF | X86_EFLAGS_RF);",
      "3665: }",
      "3667: static int svm_set_tss_addr(struct kvm *kvm, unsigned int addr)",
      "",
      "[Removed Lines]",
      "3664:  update_db_bp_intercept(vcpu);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "4287:  .vcpu_load = svm_vcpu_load,",
      "4288:  .vcpu_put = svm_vcpu_put,",
      "4291:  .get_msr = svm_get_msr,",
      "4292:  .set_msr = svm_set_msr,",
      "4293:  .get_segment_base = svm_get_segment_base,",
      "",
      "[Removed Lines]",
      "4290:  .update_db_bp_intercept = update_db_bp_intercept,",
      "",
      "[Added Lines]",
      "4282:  .update_db_bp_intercept = update_bp_intercept,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a96036b8ef7df9f10cd575c0d78359bd33188e8e",
      "candidate_info": {
        "commit_hash": "a96036b8ef7df9f10cd575c0d78359bd33188e8e",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a96036b8ef7df9f10cd575c0d78359bd33188e8e",
        "files": [
          "arch/x86/include/asm/kvm_host.h",
          "arch/x86/kvm/svm.c",
          "arch/x86/kvm/vmx.c",
          "arch/x86/kvm/x86.c"
        ],
        "message": "KVM: x86: rename update_db_bp_intercept to update_bp_intercept\n\nBecause #DB is now intercepted unconditionally, this callback\nonly operates on #BP for both VMX and SVM.\n\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
        "before_after_code_files": [
          "arch/x86/include/asm/kvm_host.h||arch/x86/include/asm/kvm_host.h",
          "arch/x86/kvm/svm.c||arch/x86/kvm/svm.c",
          "arch/x86/kvm/vmx.c||arch/x86/kvm/vmx.c",
          "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "arch/x86/kvm/svm.c||arch/x86/kvm/svm.c"
          ],
          "candidate": [
            "arch/x86/kvm/svm.c||arch/x86/kvm/svm.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/x86/include/asm/kvm_host.h||arch/x86/include/asm/kvm_host.h": [
          "File: arch/x86/include/asm/kvm_host.h -> arch/x86/include/asm/kvm_host.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "778:  void (*vcpu_load)(struct kvm_vcpu *vcpu, int cpu);",
          "779:  void (*vcpu_put)(struct kvm_vcpu *vcpu);",
          "782:  int (*get_msr)(struct kvm_vcpu *vcpu, struct msr_data *msr);",
          "783:  int (*set_msr)(struct kvm_vcpu *vcpu, struct msr_data *msr);",
          "784:  u64 (*get_segment_base)(struct kvm_vcpu *vcpu, int seg);",
          "",
          "[Removed Lines]",
          "781:  void (*update_db_bp_intercept)(struct kvm_vcpu *vcpu);",
          "",
          "[Added Lines]",
          "781:  void (*update_bp_intercept)(struct kvm_vcpu *vcpu);",
          "",
          "---------------"
        ],
        "arch/x86/kvm/svm.c||arch/x86/kvm/svm.c": [
          "File: arch/x86/kvm/svm.c -> arch/x86/kvm/svm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4279:  .vcpu_load = svm_vcpu_load,",
          "4280:  .vcpu_put = svm_vcpu_put,",
          "4283:  .get_msr = svm_get_msr,",
          "4284:  .set_msr = svm_set_msr,",
          "4285:  .get_segment_base = svm_get_segment_base,",
          "",
          "[Removed Lines]",
          "4282:  .update_db_bp_intercept = update_bp_intercept,",
          "",
          "[Added Lines]",
          "4282:  .update_bp_intercept = update_bp_intercept,",
          "",
          "---------------"
        ],
        "arch/x86/kvm/vmx.c||arch/x86/kvm/vmx.c": [
          "File: arch/x86/kvm/vmx.c -> arch/x86/kvm/vmx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10759:  .vcpu_load = vmx_vcpu_load,",
          "10760:  .vcpu_put = vmx_vcpu_put,",
          "10763:  .get_msr = vmx_get_msr,",
          "10764:  .set_msr = vmx_set_msr,",
          "10765:  .get_segment_base = vmx_get_segment_base,",
          "",
          "[Removed Lines]",
          "10762:  .update_db_bp_intercept = update_exception_bitmap,",
          "",
          "[Added Lines]",
          "10762:  .update_bp_intercept = update_exception_bitmap,",
          "",
          "---------------"
        ],
        "arch/x86/kvm/x86.c||arch/x86/kvm/x86.c": [
          "File: arch/x86/kvm/x86.c -> arch/x86/kvm/x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7116:  kvm_set_rflags(vcpu, rflags);",
          "7120:  r = 0;",
          "",
          "[Removed Lines]",
          "7118:  kvm_x86_ops->update_db_bp_intercept(vcpu);",
          "",
          "[Added Lines]",
          "7118:  kvm_x86_ops->update_bp_intercept(vcpu);",
          "",
          "---------------"
        ]
      }
    }
  ]
}