{
  "cve_id": "CVE-2022-37032",
  "cve_desc": "An out-of-bounds read in the BGP daemon of FRRouting FRR before 8.4 may lead to a segmentation fault and denial of service. This occurs in bgp_capability_msg_parse in bgpd/bgp_packet.c.",
  "repo": "FRRouting/frr",
  "patch_hash": "ff6db1027f8f36df657ff2e5ea167773752537ed",
  "patch_info": {
    "commit_hash": "ff6db1027f8f36df657ff2e5ea167773752537ed",
    "repo": "FRRouting/frr",
    "commit_url": "https://github.com/FRRouting/frr/commit/ff6db1027f8f36df657ff2e5ea167773752537ed",
    "files": [
      "bgpd/bgp_packet.c"
    ],
    "message": "bgpd: Make sure hdr length is at a minimum of what is expected\n\nEnsure that if the capability length specified is enough data.\n\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>",
    "before_after_code_files": [
      "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
    ]
  },
  "patch_diff": {
    "bgpd/bgp_packet.c||bgpd/bgp_packet.c": [
      "File: bgpd/bgp_packet.c -> bgpd/bgp_packet.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2620:     \"%s CAPABILITY has action: %d, code: %u, length %u\",",
      "2621:     peer->host, action, hdr->code, hdr->length);",
      "2624:   if ((pnt + hdr->length + 3) > end) {",
      "2625:    zlog_info(\"%s Capability length error\", peer->host);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2623:   if (hdr->length < sizeof(struct capability_mp_data)) {",
      "2624:    zlog_info(",
      "2625:     \"%pBP Capability structure is not properly filled out, expected at least %zu bytes but header length specified is %d\",",
      "2626:     peer, sizeof(struct capability_mp_data),",
      "2627:     hdr->length);",
      "2628:    return BGP_Stop;",
      "2629:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "066770ac1c69ee5b484bb82581b22ad0423b004d",
      "candidate_info": {
        "commit_hash": "066770ac1c69ee5b484bb82581b22ad0423b004d",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/066770ac1c69ee5b484bb82581b22ad0423b004d",
        "files": [
          "bgpd/bgp_packet.c"
        ],
        "message": "bgpd: Make sure hdr length is at a minimum of what is expected\n\nEnsure that if the capability length specified is enough data.\n\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>\n(cherry picked from commit ff6db1027f8f36df657ff2e5ea167773752537ed)",
        "before_after_code_files": [
          "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
          ],
          "candidate": [
            "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
          ]
        }
      },
      "candidate_diff": {
        "bgpd/bgp_packet.c||bgpd/bgp_packet.c": [
          "File: bgpd/bgp_packet.c -> bgpd/bgp_packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2621:     \"%s CAPABILITY has action: %d, code: %u, length %u\",",
          "2622:     peer->host, action, hdr->code, hdr->length);",
          "2625:   if ((pnt + hdr->length + 3) > end) {",
          "2626:    zlog_info(\"%s Capability length error\", peer->host);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2624:   if (hdr->length < sizeof(struct capability_mp_data)) {",
          "2625:    zlog_info(",
          "2626:     \"%pBP Capability structure is not properly filled out, expected at least %zu bytes but header length specified is %d\",",
          "2627:     peer, sizeof(struct capability_mp_data),",
          "2628:     hdr->length);",
          "2629:    return BGP_Stop;",
          "2630:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "49efc80d342d8e8373c8af040580bd7940808730",
      "candidate_info": {
        "commit_hash": "49efc80d342d8e8373c8af040580bd7940808730",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/49efc80d342d8e8373c8af040580bd7940808730",
        "files": [
          "isisd/isis_tlvs.c"
        ],
        "message": "isisd: Ensure rcap is freed in error case\n\nunpack_tlv_router_cap allocates memory that in the error\ncase is not being freed.\n\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>",
        "before_after_code_files": [
          "isisd/isis_tlvs.c||isisd/isis_tlvs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FRRouting/frr/pull/11656"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "isisd/isis_tlvs.c||isisd/isis_tlvs.c": [
          "File: isisd/isis_tlvs.c -> isisd/isis_tlvs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3580: }",
          "3582: static int unpack_tlv_router_cap(enum isis_tlv_context context,",
          "3586: {",
          "3587:  struct isis_tlvs *tlvs = dest;",
          "3588:  struct isis_router_cap *rcap;",
          "",
          "[Removed Lines]",
          "3583:            uint8_t tlv_type, uint8_t tlv_len,",
          "3584:            struct stream *s, struct sbuf *log,",
          "3585:            void *dest, int indent)",
          "",
          "[Added Lines]",
          "3583:      uint8_t tlv_type, uint8_t tlv_len,",
          "3584:      struct stream *s, struct sbuf *log, void *dest,",
          "3585:      int indent)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3627:     log, indent,",
          "3628:     \"WARNING: Router Capability subTLV length too large compared to expected size\\n\");",
          "3629:    stream_forward_getp(s, STREAM_READABLE(s));",
          "3631:    return 0;",
          "3632:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3630:    XFREE(MTYPE_ISIS_TLV, rcap);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d2aeac38708d93fb028d6a53e6eea317f0c06d1b",
      "candidate_info": {
        "commit_hash": "d2aeac38708d93fb028d6a53e6eea317f0c06d1b",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/d2aeac38708d93fb028d6a53e6eea317f0c06d1b",
        "files": [
          "ospfclient/ospf_apiclient.c"
        ],
        "message": "ospfclient: Ensure ospf_apiclient_lsa_originate cannot accidently write into stack\n\nEven though OSPF_MAX_LSA_SIZE is quite large and holds the upper bound\non what can be written into a lsa, let's add a small check to ensure\nit is not possible to do a bad thing.\n\nThis wins one of the long standing bug awards.  2003!\n\nFixes: #11602\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>",
        "before_after_code_files": [
          "ospfclient/ospf_apiclient.c||ospfclient/ospf_apiclient.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FRRouting/frr/pull/11656"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ospfclient/ospf_apiclient.c||ospfclient/ospf_apiclient.c": [
          "File: ospfclient/ospf_apiclient.c -> ospfclient/ospf_apiclient.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "447:   return OSPF_API_ILLEGALLSATYPE;",
          "448:  }",
          "451:  lsah = (struct lsa_header *)buf;",
          "452:  lsah->ls_age = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "450:  if ((size_t)opaquelen > sizeof(buf) - sizeof(struct lsa_header)) {",
          "451:   fprintf(stderr, \"opaquelen(%d) is larger than buf size %zu\\n\",",
          "452:    opaquelen, sizeof(buf));",
          "453:   return OSPF_API_NOMEMORY;",
          "454:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c4821679f2362bcd38fcc7803f28a5210441ddb",
      "candidate_info": {
        "commit_hash": "3c4821679f2362bcd38fcc7803f28a5210441ddb",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/3c4821679f2362bcd38fcc7803f28a5210441ddb",
        "files": [
          "bgpd/bgp_packet.c"
        ],
        "message": "bgpd: Make sure hdr length is at a minimum of what is expected\n\nEnsure that if the capability length specified is enough data.\n\nSigned-off-by: Donald Sharp <sharpd@nvidia.com>",
        "before_after_code_files": [
          "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
          ],
          "candidate": [
            "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
          ]
        }
      },
      "candidate_diff": {
        "bgpd/bgp_packet.c||bgpd/bgp_packet.c": [
          "File: bgpd/bgp_packet.c -> bgpd/bgp_packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2440:     \"%s CAPABILITY has action: %d, code: %u, length %u\",",
          "2441:     peer->host, action, hdr->code, hdr->length);",
          "2444:   if ((pnt + hdr->length + 3) > end) {",
          "2445:    zlog_info(\"%s Capability length error\", peer->host);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2443:   if (hdr->length < sizeof(struct capability_mp_data)) {",
          "2444:    zlog_info(",
          "2445:     \"%s Capability structure is not properly filled out, expected at least %zu bytes but header length specified is %d\",",
          "2446:     peer->host, sizeof(struct capability_mp_data),",
          "2447:     hdr->length);",
          "2448:    return BGP_Stop;",
          "2449:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}