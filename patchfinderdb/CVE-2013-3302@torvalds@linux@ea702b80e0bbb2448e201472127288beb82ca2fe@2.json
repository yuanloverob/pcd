{
  "cve_id": "CVE-2013-3302",
  "cve_desc": "Race condition in the smb_send_rqst function in fs/cifs/transport.c in the Linux kernel before 3.7.2 allows local users to cause a denial of service (NULL pointer dereference and OOPS) or possibly have unspecified other impact via vectors involving a reconnection event.",
  "repo": "torvalds/linux",
  "patch_hash": "ea702b80e0bbb2448e201472127288beb82ca2fe",
  "patch_info": {
    "commit_hash": "ea702b80e0bbb2448e201472127288beb82ca2fe",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/ea702b80e0bbb2448e201472127288beb82ca2fe",
    "files": [
      "fs/cifs/transport.c"
    ],
    "message": "cifs: move check for NULL socket into smb_send_rqst\n\nCai reported this oops:\n\n[90701.616664] BUG: unable to handle kernel NULL pointer dereference at 0000000000000028\n[90701.625438] IP: [<ffffffff814a343e>] kernel_setsockopt+0x2e/0x60\n[90701.632167] PGD fea319067 PUD 103fda4067 PMD 0\n[90701.637255] Oops: 0000 [#1] SMP\n[90701.640878] Modules linked in: des_generic md4 nls_utf8 cifs dns_resolver binfmt_misc tun sg igb iTCO_wdt iTCO_vendor_support lpc_ich pcspkr i2c_i801 i2c_core i7core_edac edac_core ioatdma dca mfd_core coretemp kvm_intel kvm crc32c_intel microcode sr_mod cdrom ata_generic sd_mod pata_acpi crc_t10dif ata_piix libata megaraid_sas dm_mirror dm_region_hash dm_log dm_mod\n[90701.677655] CPU 10\n[90701.679808] Pid: 9627, comm: ls Tainted: G        W    3.7.1+ #10 QCI QSSC-S4R/QSSC-S4R\n[90701.688950] RIP: 0010:[<ffffffff814a343e>]  [<ffffffff814a343e>] kernel_setsockopt+0x2e/0x60\n[90701.698383] RSP: 0018:ffff88177b431bb8  EFLAGS: 00010206\n[90701.704309] RAX: ffff88177b431fd8 RBX: 00007ffffffff000 RCX: ffff88177b431bec\n[90701.712271] RDX: 0000000000000003 RSI: 0000000000000006 RDI: 0000000000000000\n[90701.720223] RBP: ffff88177b431bc8 R08: 0000000000000004 R09: 0000000000000000\n[90701.728185] R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000001\n[90701.736147] R13: ffff88184ef92000 R14: 0000000000000023 R15: ffff88177b431c88\n[90701.744109] FS:  00007fd56a1a47c0(0000) GS:ffff88105fc40000(0000) knlGS:0000000000000000\n[90701.753137] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[90701.759550] CR2: 0000000000000028 CR3: 000000104f15f000 CR4: 00000000000007e0\n[90701.767512] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[90701.775465] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n[90701.783428] Process ls (pid: 9627, threadinfo ffff88177b430000, task ffff88185ca4cb60)\n[90701.792261] Stack:\n[90701.794505]  0000000000000023 ffff88177b431c50 ffff88177b431c38 ffffffffa014fcb1\n[90701.802809]  ffff88184ef921bc 0000000000000000 00000001ffffffff ffff88184ef921c0\n[90701.811123]  ffff88177b431c08 ffffffff815ca3d9 ffff88177b431c18 ffff880857758000\n[90701.819433] Call Trace:\n[90701.822183]  [<ffffffffa014fcb1>] smb_send_rqst+0x71/0x1f0 [cifs]\n[90701.828991]  [<ffffffff815ca3d9>] ? schedule+0x29/0x70\n[90701.834736]  [<ffffffffa014fe6d>] smb_sendv+0x3d/0x40 [cifs]\n[90701.841062]  [<ffffffffa014fe96>] smb_send+0x26/0x30 [cifs]\n[90701.847291]  [<ffffffffa015801f>] send_nt_cancel+0x6f/0xd0 [cifs]\n[90701.854102]  [<ffffffffa015075e>] SendReceive+0x18e/0x360 [cifs]\n[90701.860814]  [<ffffffffa0134a78>] CIFSFindFirst+0x1a8/0x3f0 [cifs]\n[90701.867724]  [<ffffffffa013f731>] ? build_path_from_dentry+0xf1/0x260 [cifs]\n[90701.875601]  [<ffffffffa013f731>] ? build_path_from_dentry+0xf1/0x260 [cifs]\n[90701.883477]  [<ffffffffa01578e6>] cifs_query_dir_first+0x26/0x30 [cifs]\n[90701.890869]  [<ffffffffa015480d>] initiate_cifs_search+0xed/0x250 [cifs]\n[90701.898354]  [<ffffffff81195970>] ? fillonedir+0x100/0x100\n[90701.904486]  [<ffffffffa01554cb>] cifs_readdir+0x45b/0x8f0 [cifs]\n[90701.911288]  [<ffffffff81195970>] ? fillonedir+0x100/0x100\n[90701.917410]  [<ffffffff81195970>] ? fillonedir+0x100/0x100\n[90701.923533]  [<ffffffff81195970>] ? fillonedir+0x100/0x100\n[90701.929657]  [<ffffffff81195848>] vfs_readdir+0xb8/0xe0\n[90701.935490]  [<ffffffff81195b9f>] sys_getdents+0x8f/0x110\n[90701.941521]  [<ffffffff815d3b99>] system_call_fastpath+0x16/0x1b\n[90701.948222] Code: 66 90 55 65 48 8b 04 25 f0 c6 00 00 48 89 e5 53 48 83 ec 08 83 fe 01 48 8b 98 48 e0 ff ff 48 c7 80 48 e0 ff ff ff ff ff ff 74 22 <48> 8b 47 28 ff 50 68 65 48 8b 14 25 f0 c6 00 00 48 89 9a 48 e0\n[90701.970313] RIP  [<ffffffff814a343e>] kernel_setsockopt+0x2e/0x60\n[90701.977125]  RSP <ffff88177b431bb8>\n[90701.981018] CR2: 0000000000000028\n[90701.984809] ---[ end trace 24bd602971110a43 ]---\n\nThis is likely due to a race vs. a reconnection event.\n\nThe current code checks for a NULL socket in smb_send_kvec, but that's\ntoo late. By the time that check is done, the socket will already have\nbeen passed to kernel_setsockopt. Move the check into smb_send_rqst, so\nthat it's checked earlier.\n\nIn truth, this is a bit of a half-assed fix. The -ENOTSOCK error\nreturn here looks like it could bubble back up to userspace. The locking\nrules around the ssocket pointer are really unclear as well. There are\ncases where the ssocket pointer is changed without holding the srv_mutex,\nbut I'm not clear whether there's a potential race here yet or not.\n\nThis code seems like it could benefit from some fundamental re-think of\nhow the socket handling should behave. Until then though, this patch\nshould at least fix the above oops in most cases.\n\nCc: <stable@vger.kernel.org> # 3.7+\nReported-and-Tested-by: CAI Qian <caiqian@redhat.com>\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <smfrench@gmail.com>",
    "before_after_code_files": [
      "fs/cifs/transport.c||fs/cifs/transport.c"
    ]
  },
  "patch_diff": {
    "fs/cifs/transport.c||fs/cifs/transport.c": [
      "File: fs/cifs/transport.c -> fs/cifs/transport.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "150:  smb_msg.msg_name = (struct sockaddr *) &server->dstaddr;",
      "151:  smb_msg.msg_namelen = sizeof(struct sockaddr);",
      "152:  smb_msg.msg_control = NULL;",
      "",
      "[Removed Lines]",
      "147:  if (ssocket == NULL)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "291:  struct socket *ssocket = server->ssocket;",
      "292:  int val = 1;",
      "294:  cFYI(1, \"Sending smb: smb_len=%u\", smb_buf_length);",
      "295:  dump_smb(iov[0].iov_base, iov[0].iov_len);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "291:  if (ssocket == NULL)",
      "292:   return -ENOTSOCK;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "07fd296d3a44f41d8a40b7b3082fa53c2a73862e",
      "candidate_info": {
        "commit_hash": "07fd296d3a44f41d8a40b7b3082fa53c2a73862e",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/07fd296d3a44f41d8a40b7b3082fa53c2a73862e",
        "files": [
          "arch/arm/mach-omap1/board-ams-delta.c",
          "arch/arm/mach-omap1/usb.c"
        ],
        "message": "ARM: OMAP1: fix USB configuration use-after-release\n\nAll boards, except Amstrad E3, mark USB config with __initdata.\n\nAs a result, when you compile USB into modules, they will try to refer\nalready released platform data and the behaviour is undefined. For example\non Nokia 770, I get the following kernel panic when modprobing ohci-hcd:\n\n[    3.462158] Unable to handle kernel paging request at virtual address e7fddef0\n[    3.477050] pgd = c3434000\n[    3.487365] [e7fddef0] *pgd=00000000\n[    3.498535] Internal error: Oops: 80000005 [#1] ARM\n[    3.510955] Modules linked in: ohci_hcd(+)\n[    3.522705] CPU: 0    Not tainted  (3.7.0-770_tiny+ #5)\n[    3.535552] PC is at 0xe7fddef0\n[    3.546508] LR is at ohci_omap_init+0x5c/0x144 [ohci_hcd]\n[    3.560272] pc : [<e7fddef0>]    lr : [<bf003140>]    psr: a0000013\n[    3.560272] sp : c344bdb0  ip : c344bce0  fp : c344bdcc\n[    3.589782] r10: 00000001  r9 : 00000000  r8 : 00000000\n[    3.604553] r7 : 00000026  r6 : 000000de  r5 : c0227300  r4 : c342d620\n[    3.621032] r3 : e7fddef0  r2 : c048b880  r1 : 00000000  r0 : 0000000a\n[    3.637786] Flags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user\n[    3.655822] Control: 0005317f  Table: 13434000  DAC: 00000015\n[    3.672790] Process modprobe (pid: 425, stack limit = 0xc344a1b8)\n[    3.690643] Stack: (0xc344bdb0 to 0xc344c000)\n[    3.707031] bda0:                                     bf0030e4 c342d620 00000000 c049e62c\n[    3.727905] bdc0: c344be04 c344bdd0 c0150ff0 bf0030f4 bf001b88 00000000 c048a4ac c345b020\n[    3.748870] bde0: c342d620 00000000 c048a468 bf003968 00000001 bf006000 c344be34 c344be08\n[    3.769836] be00: bf001bf0 c0150e48 00000000 c344be18 c00b9bfc c048a478 c048a4ac bf0037f8\n[    3.790985] be20: c012ca04 c000e024 c344be44 c344be38 c012d968 bf001a84 c344be64 c344be48\n[    3.812164] be40: c012c8ac c012d95c 00000000 c048a478 c048a4ac bf0037f8 c344be84 c344be68\n[    3.833740] be60: c012ca74 c012c80c 20000013 00000000 c344be88 bf0037f8 c344beac c344be88\n[    3.855468] be80: c012b038 c012ca14 c38093cc c383ee10 bf0037f8 c35be5a0 c049d5e8 00000000\n[    3.877166] bea0: c344bebc c344beb0 c012c40c c012aff4 c344beec c344bec0 c012bfc0 c012c3fc\n[    3.898834] bec0: bf00378c 00000000 c344beec bf0037f8 00067f39 00000000 00005c44 c000e024\n[    3.920837] bee0: c344bf14 c344bef0 c012cd54 c012befc c04ce080 00067f39 00000000 00005c44\n[    3.943023] bf00: c000e024 bf006000 c344bf24 c344bf18 c012db14 c012ccc0 c344bf3c c344bf28\n[    3.965423] bf20: bf00604c c012dad8 c344a000 bf003834 c344bf7c c344bf40 c00087ac bf006010\n[    3.987976] bf40: 0000000f bf003834 00067f39 00000000 00005c44 bf003834 00067f39 00000000\n[    4.010711] bf60: 00005c44 c000e024 c344a000 00000000 c344bfa4 c344bf80 c004c35c c0008720\n[    4.033569] bf80: c344bfac c344bf90 01422192 01427ea0 00000000 00000080 00000000 c344bfa8\n[    4.056518] bfa0: c000dec0 c004c2f0 01422192 01427ea0 01427ea0 00005c44 00067f39 00000000\n[    4.079406] bfc0: 01422192 01427ea0 00000000 00000080 b6e11008 014221aa be941fcc b6e1e008\n[    4.102569] bfe0: b6ef6300 be941758 0000e93c b6ef6310 60000010 01427ea0 00000000 00000000\n[    4.125946] Backtrace:\n[    4.143463] [<bf0030e4>] (ohci_omap_init+0x0/0x144 [ohci_hcd]) from [<c0150ff0>] (usb_add_hcd+0x1b8/0x61c)\n[    4.183898]  r6:c049e62c r5:00000000 r4:c342d620 r3:bf0030e4\n[    4.205596] [<c0150e38>] (usb_add_hcd+0x0/0x61c) from [<bf001bf0>] (ohci_hcd_omap_drv_probe+0x17c/0x224 [ohci_hcd])\n[    4.248138] [<bf001a74>] (ohci_hcd_omap_drv_probe+0x0/0x224 [ohci_hcd]) from [<c012d968>] (platform_drv_probe+0x1c/0x20)\n[    4.292144]  r8:c000e024 r7:c012ca04 r6:bf0037f8 r5:c048a4ac r4:c048a478\n[    4.316192] [<c012d94c>] (platform_drv_probe+0x0/0x20) from [<c012c8ac>] (driver_probe_device+0xb0/0x208)\n[    4.360168] [<c012c7fc>] (driver_probe_device+0x0/0x208) from [<c012ca74>] (__driver_attach+0x70/0x94)\n[    4.405548]  r6:bf0037f8 r5:c048a4ac r4:c048a478 r3:00000000\n[    4.429809] [<c012ca04>] (__driver_attach+0x0/0x94) from [<c012b038>] (bus_for_each_dev+0x54/0x90)\n[    4.475708]  r6:bf0037f8 r5:c344be88 r4:00000000 r3:20000013\n[    4.500366] [<c012afe4>] (bus_for_each_dev+0x0/0x90) from [<c012c40c>] (driver_attach+0x20/0x28)\n[    4.528442]  r7:00000000 r6:c049d5e8 r5:c35be5a0 r4:bf0037f8\n[    4.553466] [<c012c3ec>] (driver_attach+0x0/0x28) from [<c012bfc0>] (bus_add_driver+0xd4/0x228)\n[    4.581878] [<c012beec>] (bus_add_driver+0x0/0x228) from [<c012cd54>] (driver_register+0xa4/0x134)\n[    4.629730]  r8:c000e024 r7:00005c44 r6:00000000 r5:00067f39 r4:bf0037f8\n[    4.656738] [<c012ccb0>] (driver_register+0x0/0x134) from [<c012db14>] (platform_driver_register+0x4c/0x60)\n[    4.706542] [<c012dac8>] (platform_driver_register+0x0/0x60) from [<bf00604c>] (ohci_hcd_mod_init+0x4c/0x8c [ohci_hcd])\n[    4.757843] [<bf006000>] (ohci_hcd_mod_init+0x0/0x8c [ohci_hcd]) from [<c00087ac>] (do_one_initcall+0x9c/0x174)\n[    4.808990]  r4:bf003834 r3:c344a000\n[    4.832641] [<c0008710>] (do_one_initcall+0x0/0x174) from [<c004c35c>] (sys_init_module+0x7c/0x194)\n[    4.881530] [<c004c2e0>] (sys_init_module+0x0/0x194) from [<c000dec0>] (ret_fast_syscall+0x0/0x2c)\n[    4.930664]  r7:00000080 r6:00000000 r5:01427ea0 r4:01422192\n[    4.956481] Code: bad PC value\n[    4.978729] ---[ end trace 58280240f08342c4 ]---\n[    5.002258] Kernel panic - not syncing: Fatal exception\n\nFix this by taking a copy of the data. Also mark Amstrad E3's data with\n__initdata to save some memory with multi-board kernels.\n\nSigned-off-by: Aaro Koskinen <aaro.koskinen@iki.fi>\nSigned-off-by: Tony Lindgren <tony@atomide.com>",
        "before_after_code_files": [
          "arch/arm/mach-omap1/board-ams-delta.c||arch/arm/mach-omap1/board-ams-delta.c",
          "arch/arm/mach-omap1/usb.c||arch/arm/mach-omap1/usb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/arm/mach-omap1/board-ams-delta.c||arch/arm/mach-omap1/board-ams-delta.c": [
          "File: arch/arm/mach-omap1/board-ams-delta.c -> arch/arm/mach-omap1/board-ams-delta.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:  .ctrl_name = \"internal\",",
          "161: };",
          "164:  .register_host = 1,",
          "165:  .hmc_mode = 16,",
          "166:  .pins[0] = 2,",
          "",
          "[Removed Lines]",
          "163: static struct omap_usb_config ams_delta_usb_config = {",
          "",
          "[Added Lines]",
          "163: static struct omap_usb_config ams_delta_usb_config __initdata = {",
          "",
          "---------------"
        ],
        "arch/arm/mach-omap1/usb.c||arch/arm/mach-omap1/usb.c": [
          "File: arch/arm/mach-omap1/usb.c -> arch/arm/mach-omap1/usb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "629: static inline void omap_1510_usb_init(struct omap_usb_config *config) {}",
          "630: #endif",
          "633: {",
          "634:  pdata->usb0_init = omap1_usb0_init;",
          "635:  pdata->usb1_init = omap1_usb1_init;",
          "636:  pdata->usb2_init = omap1_usb2_init;",
          "",
          "[Removed Lines]",
          "632: void __init omap1_usb_init(struct omap_usb_config *pdata)",
          "",
          "[Added Lines]",
          "632: void __init omap1_usb_init(struct omap_usb_config *_pdata)",
          "634:  struct omap_usb_config *pdata;",
          "636:  pdata = kmemdup(_pdata, sizeof(*pdata), GFP_KERNEL);",
          "637:  if (!pdata)",
          "638:   return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "678fb42e2b2c815c3475884017aac4da22124d0d",
      "candidate_info": {
        "commit_hash": "678fb42e2b2c815c3475884017aac4da22124d0d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/678fb42e2b2c815c3475884017aac4da22124d0d",
        "files": [
          "drivers/iio/adc/max1363.c"
        ],
        "message": "iio: (max1363) Fix probe error path\n\nInstantiating the driver with no available regulator results in:\n\n[39711.686393] i2c i2c-7: new_device: Instantiated device max1139 at 0x35\n[39711.688687] BUG: unable to handle kernel paging request at fffffffffffffe13\n[39711.688734] IP: [<ffffffff813e835b>] regulator_disable+0x1b/0x80\n[39711.688788] PGD 1c0e067 PUD 1c0f067 PMD 0\n[39711.688835] Oops: 0000 [#1] SMP\n\nCaused by bad probe error path. Fix it.\n\nDriver should also not attempt to free the interrupt in its error path if\nnone was allocated. Fix that problem as well.\n\nFinally, testing if the regulator was allocated is not necessary in the\nremove function, since the probe function bails out if this is the case.\nRemove that check.\n\nSigned-off-by: Guenter Roeck <linux@roeck-us.net>\nSigned-off-by: Jonathan Cameron <jic23@kernel.org>",
        "before_after_code_files": [
          "drivers/iio/adc/max1363.c||drivers/iio/adc/max1363.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/iio/adc/max1363.c||drivers/iio/adc/max1363.c": [
          "File: drivers/iio/adc/max1363.c -> drivers/iio/adc/max1363.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1606:  return 0;",
          "1607: error_free_irq:",
          "1609: error_uninit_buffer:",
          "1610:  iio_buffer_unregister(indio_dev);",
          "1611: error_cleanup_buffer:",
          "1612:  max1363_buffer_cleanup(indio_dev);",
          "1613: error_free_available_scan_masks:",
          "1614:  kfree(indio_dev->available_scan_masks);",
          "1617: error_disable_reg:",
          "1618:  regulator_disable(st->reg);",
          "1619: error_put_reg:",
          "1620:  regulator_put(st->reg);",
          "1621: error_free_device:",
          "1622:  iio_device_free(indio_dev);",
          "1623: error_out:",
          "",
          "[Removed Lines]",
          "1608:  free_irq(st->client->irq, indio_dev);",
          "1615: error_unregister_map:",
          "1616:  iio_map_array_unregister(indio_dev, client->dev.platform_data);",
          "",
          "[Added Lines]",
          "1608:  if (client->irq)",
          "1609:   free_irq(st->client->irq, indio_dev);",
          "1620: error_unregister_map:",
          "1621:  iio_map_array_unregister(indio_dev, client->dev.platform_data);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1635:  iio_buffer_unregister(indio_dev);",
          "1636:  max1363_buffer_cleanup(indio_dev);",
          "1637:  kfree(indio_dev->available_scan_masks);",
          "1642:  iio_map_array_unregister(indio_dev, client->dev.platform_data);",
          "1643:  iio_device_free(indio_dev);",
          "",
          "[Removed Lines]",
          "1638:  if (!IS_ERR(st->reg)) {",
          "1639:   regulator_disable(st->reg);",
          "1640:   regulator_put(st->reg);",
          "1641:  }",
          "",
          "[Added Lines]",
          "1639:  regulator_disable(st->reg);",
          "1640:  regulator_put(st->reg);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b4cf1e08c8ac95eff65faa53904f7f13ac78194b",
      "candidate_info": {
        "commit_hash": "b4cf1e08c8ac95eff65faa53904f7f13ac78194b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/b4cf1e08c8ac95eff65faa53904f7f13ac78194b",
        "files": [
          "fs/cachefiles/rdwr.c",
          "fs/fscache/page.c"
        ],
        "message": "CacheFiles: Add missing retrieval completions\n\nCacheFiles is missing some calls to fscache_retrieval_complete() in the error\nhandling/collision paths of its reader functions.\n\nThis can be seen by the following assertion tripping in fscache_put_operation()\nwhereby the operation being destroyed is still in the in-progress state and has\nnot been cancelled or completed:\n\nFS-Cache: Assertion failed\n3 == 5 is false\n------------[ cut here ]------------\nkernel BUG at fs/fscache/operation.c:408!\ninvalid opcode: 0000 [#1] SMP\nCPU 2\nModules linked in: xfs ioatdma dca loop joydev evdev\npsmouse dcdbas pcspkr serio_raw i5000_edac edac_core i5k_amb shpchp\npci_hotplug sg sr_mod]\n\nPid: 8062, comm: httpd Not tainted 3.1.0-rc8 #1 Dell Inc. PowerEdge 1950/0DT097\nRIP: 0010:[<ffffffff81197b24>]  [<ffffffff81197b24>] fscache_put_operation+0x304/0x330\nRSP: 0018:ffff880062f739d8  EFLAGS: 00010296\nRAX: 0000000000000025 RBX: ffff8800c5122e84 RCX: ffffffff81ddf040\nRDX: 00000000ffffffff RSI: 0000000000000082 RDI: ffffffff81ddef30\nRBP: ffff880062f739f8 R08: 0000000000000005 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000003 R12: ffff8800c5122e40\nR13: ffff880037a2cd20 R14: ffff880087c7a058 R15: ffff880087c7a000\nFS:  00007f63dcf636e0(0000) GS:ffff88022fc80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f0c0a91f000 CR3: 0000000062ec2000 CR4: 00000000000006e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\nProcess httpd (pid: 8062, threadinfo ffff880062f72000, task ffff880087e58000)\nStack:\n ffff880062f73bf8 0000000000000000 ffff880062f73bf8 ffff880037a2cd20\n ffff880062f73a68 ffffffff8119aa7e ffff88006540e000 ffff880062f73ad4\n ffff88008e9a4308 ffff880037a2cd20 ffff880062f73a48 ffff8800c5122e40\nCall Trace:\n [<ffffffff8119aa7e>] __fscache_read_or_alloc_pages+0x1fe/0x530\n [<ffffffff81250780>] __nfs_readpages_from_fscache+0x70/0x1c0\n [<ffffffff8123142a>] nfs_readpages+0xca/0x1e0\n [<ffffffff815f3c06>] ? rpc_do_put_task+0x36/0x50\n [<ffffffff8122755b>] ? alloc_nfs_open_context+0x4b/0x110\n [<ffffffff815ecd1a>] ? rpc_call_sync+0x5a/0x70\n [<ffffffff810e7e9a>] __do_page_cache_readahead+0x1ca/0x270\n [<ffffffff810e7f61>] ra_submit+0x21/0x30\n [<ffffffff810e818d>] ondemand_readahead+0x11d/0x250\n [<ffffffff810e83b6>] page_cache_sync_readahead+0x36/0x60\n [<ffffffff810dffa4>] generic_file_aio_read+0x454/0x770\n [<ffffffff81224ce1>] nfs_file_read+0xe1/0x130\n [<ffffffff81121bd9>] do_sync_read+0xd9/0x120\n [<ffffffff8114088f>] ? mntput+0x1f/0x40\n [<ffffffff811238cb>] ? fput+0x1cb/0x260\n [<ffffffff81122938>] vfs_read+0xc8/0x180\n [<ffffffff81122af5>] sys_read+0x55/0x90\n\nReported-by: Mark Moseley <moseleymark@gmail.com>\nSigned-off-by: David Howells <dhowells@redhat.com>",
        "before_after_code_files": [
          "fs/cachefiles/rdwr.c||fs/cachefiles/rdwr.c",
          "fs/fscache/page.c||fs/fscache/page.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/cachefiles/rdwr.c||fs/cachefiles/rdwr.c": [
          "File: fs/cachefiles/rdwr.c -> fs/cachefiles/rdwr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "362: read_error:",
          "363:  _debug(\"read error %d\", ret);",
          "365:   goto out;",
          "366: io_error:",
          "367:  cachefiles_io_error_obj(object, \"Page read error on backing file\");",
          "368:  fscache_retrieval_complete(op, 1);",
          "",
          "[Removed Lines]",
          "364:  if (ret == -ENOMEM)",
          "",
          "[Added Lines]",
          "364:  if (ret == -ENOMEM) {",
          "365:   fscache_retrieval_complete(op, 1);",
          "367:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "551:   if (ret < 0) {",
          "552:    if (ret == -EEXIST) {",
          "553:     page_cache_release(netpage);",
          "554:     continue;",
          "555:    }",
          "556:    goto nomem;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "556:     fscache_retrieval_complete(op, 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "627:   if (ret < 0) {",
          "628:    if (ret == -EEXIST) {",
          "629:     page_cache_release(netpage);",
          "630:     continue;",
          "631:    }",
          "632:    goto nomem;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "633:     fscache_retrieval_complete(op, 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "647:   fscache_end_io(op, netpage, 0);",
          "649:   page_cache_release(netpage);",
          "650:   netpage = NULL;",
          "651:   continue;",
          "652:  }",
          "",
          "[Removed Lines]",
          "648:   fscache_retrieval_complete(op, 1);",
          "",
          "[Added Lines]",
          "654:   fscache_retrieval_complete(op, 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "682: nomem:",
          "683:  _debug(\"nomem\");",
          "684:  ret = -ENOMEM;",
          "687: read_error:",
          "688:  _debug(\"read error %d\", ret);",
          "689:  if (ret == -ENOMEM)",
          "691: io_error:",
          "692:  cachefiles_io_error_obj(object, \"Page read error on backing file\");",
          "693:  ret = -ENOBUFS;",
          "694:  goto out;",
          "695: }",
          "",
          "[Removed Lines]",
          "685:  goto out;",
          "690:   goto out;",
          "",
          "[Added Lines]",
          "689:  goto record_page_complete;",
          "694:   goto record_page_complete;",
          "698: record_page_complete:",
          "699:  fscache_retrieval_complete(op, 1);",
          "",
          "---------------"
        ],
        "fs/fscache/page.c||fs/fscache/page.c": [
          "File: fs/fscache/page.c -> fs/fscache/page.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "329:   return -ENOBUFS;",
          "330:  }",
          "331:  if (unlikely(fscache_object_is_dead(object))) {",
          "332:   fscache_stat(stat_object_dead);",
          "333:   return -ENOBUFS;",
          "334:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "332:   pr_err(\"%s() = -ENOBUFS [obj dead %d]\", __func__, op->op.state);",
          "333:   fscache_cancel_op(&op->op);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ef001e937e8b9cbedb2fc1c31dd681ac3b31927",
      "candidate_info": {
        "commit_hash": "7ef001e937e8b9cbedb2fc1c31dd681ac3b31927",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7ef001e937e8b9cbedb2fc1c31dd681ac3b31927",
        "files": [
          "fs/fscache/page.c"
        ],
        "message": "FS-Cache: One of the write operation paths doesn't set the object state\n\nIn fscache_write_op(), if the object is determined to have become inactive or\nto have lost its cookie, we don't move the operation state from in-progress,\nand so an assertion in fscache_put_operation() fails with an assertion (see\nbelow).\n\nInstrumenting fscache_op_work_func() indicates that it called\nfscache_write_op() before calling fscache_put_operation() - where the assertion\nfailed.  The assertion at line 433 indicates that the operation state is\nIN_PROGRESS rather than being COMPLETE or CANCELLED.\n\nInstrumenting fscache_write_op() showed that it was being called on an object\nthat had had its cookie removed and that this was due to relinquishment of the\ncookie by the netfs.  At this point fscache no longer has access to the pages\nof netfs data that were requested to be written, and so simply cancelling the\noperation is the thing to do.\n\nFS-Cache: Assertion failed\n3 == 5 is false\n------------[ cut here ]------------\nkernel BUG at fs/fscache/operation.c:433!\ninvalid opcode: 0000 [#1] SMP\nModules linked in: cachefiles(F) nfsv4(F) nfsv3(F) nfsv2(F) nfs(F) fscache(F) auth_rpcgss(F) nfs_acl(F) lockd(F) sunrpc(F)\nCPU 0\nPid: 1035, comm: kworker/u:3 Tainted: GF            3.7.0-rc8-fsdevel+ #411                  /DG965RY\nRIP: 0010:[<ffffffffa007db22>]  [<ffffffffa007db22>] fscache_put_operation+0x11a/0x2ed [fscache]\nRSP: 0018:ffff88003e32bcf8  EFLAGS: 00010296\nRAX: 000000000000000f RBX: ffff88001818eb78 RCX: ffffffff6c102000\nRDX: ffffffff8102d1ad RSI: ffffffff6c102000 RDI: ffffffff8102d1d6\nRBP: ffff88003e32bd18 R08: 0000000000000002 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000000 R12: ffffffffa00811da\nR13: 0000000000000001 R14: 0000000100625d26 R15: 0000000000000000\nFS:  0000000000000000(0000) GS:ffff88003bc00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\nCR2: 00007fff7dd31c68 CR3: 000000003d730000 CR4: 00000000000007f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\nProcess kworker/u:3 (pid: 1035, threadinfo ffff88003e32a000, task ffff88003bb38080)\nStack:\n ffffffff8102d1ad ffff88001818eb78 ffffffffa00811da 0000000000000001\n ffff88003e32bd48 ffffffffa007f0ad ffff88001818eb78 ffffffff819583c0\n ffff88003df24e00 ffff88003882c3e0 ffff88003e32bde8 ffffffff81042de0\nCall Trace:\n [<ffffffff8102d1ad>] ? vprintk_emit+0x3c6/0x41a\n [<ffffffffa00811da>] ? __fscache_read_or_alloc_pages+0x4bc/0x4bc [fscache]\n [<ffffffffa007f0ad>] fscache_op_work_func+0xec/0x123 [fscache]\n [<ffffffff81042de0>] process_one_work+0x21c/0x3b0\n [<ffffffff81042d82>] ? process_one_work+0x1be/0x3b0\n [<ffffffffa007efc1>] ? fscache_operation_gc+0x23e/0x23e [fscache]\n [<ffffffff8104332e>] worker_thread+0x202/0x2df\n [<ffffffff8104312c>] ? rescuer_thread+0x18e/0x18e\n [<ffffffff81047c1c>] kthread+0xd0/0xd8\n [<ffffffff81421bfa>] ? _raw_spin_unlock_irq+0x29/0x3e\n [<ffffffff81047b4c>] ? __init_kthread_worker+0x55/0x55\n [<ffffffff814227ec>] ret_from_fork+0x7c/0xb0\n [<ffffffff81047b4c>] ? __init_kthread_worker+0x55/0x55\n\nSigned-off-by: David Howells <dhowells@redhat.com>",
        "before_after_code_files": [
          "fs/fscache/page.c||fs/fscache/page.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/fscache/page.c||fs/fscache/page.c": [
          "File: fs/fscache/page.c -> fs/fscache/page.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "699:  spin_lock(&object->lock);",
          "700:  cookie = object->cookie;",
          "703:   spin_unlock(&object->lock);",
          "705:   return;",
          "706:  }",
          "",
          "[Removed Lines]",
          "702:  if (!fscache_object_is_active(object) || !cookie) {",
          "704:   _leave(\"\");",
          "",
          "[Added Lines]",
          "702:  if (!fscache_object_is_active(object)) {",
          "707:   op->op.state = FSCACHE_OP_ST_CANCELLED;",
          "708:   _leave(\" [inactive]\");",
          "709:   return;",
          "710:  }",
          "712:  if (!cookie) {",
          "719:   spin_unlock(&object->lock);",
          "720:   op->op.state = FSCACHE_OP_ST_CANCELLED;",
          "721:   _leave(\" [cancel] op{f=%lx s=%u} obj{s=%u f=%lx}\",",
          "722:          _op->flags, _op->state, object->state, object->flags);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53a59fc67f97374758e63a9c785891ec62324c81",
      "candidate_info": {
        "commit_hash": "53a59fc67f97374758e63a9c785891ec62324c81",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/53a59fc67f97374758e63a9c785891ec62324c81",
        "files": [
          "include/asm-generic/tlb.h",
          "mm/memory.c"
        ],
        "message": "mm: limit mmu_gather batching to fix soft lockups on !CONFIG_PREEMPT\n\nSince commit e303297e6c3a (\"mm: extended batches for generic\nmmu_gather\") we are batching pages to be freed until either\ntlb_next_batch cannot allocate a new batch or we are done.\n\nThis works just fine most of the time but we can get in troubles with\nnon-preemptible kernel (CONFIG_PREEMPT_NONE or CONFIG_PREEMPT_VOLUNTARY)\non large machines where too aggressive batching might lead to soft\nlockups during process exit path (exit_mmap) because there are no\nscheduling points down the free_pages_and_swap_cache path and so the\nfreeing can take long enough to trigger the soft lockup.\n\nThe lockup is harmless except when the system is setup to panic on\nsoftlockup which is not that unusual.\n\nThe simplest way to work around this issue is to limit the maximum\nnumber of batches in a single mmu_gather.  10k of collected pages should\nbe safe to prevent from soft lockups (we would have 2ms for one) even if\nthey are all freed without an explicit scheduling point.\n\nThis patch doesn't add any new explicit scheduling points because it\nrelies on zap_pmd_range during page tables zapping which calls\ncond_resched per PMD.\n\nThe following lockup has been reported for 3.0 kernel with a huge\nprocess (in order of hundreds gigs but I do know any more details).\n\n  BUG: soft lockup - CPU#56 stuck for 22s! [kernel:31053]\n  Modules linked in: af_packet nfs lockd fscache auth_rpcgss nfs_acl sunrpc mptctl mptbase autofs4 binfmt_misc dm_round_robin dm_multipath bonding cpufreq_conservative cpufreq_userspace cpufreq_powersave pcc_cpufreq mperf microcode fuse loop osst sg sd_mod crc_t10dif st qla2xxx scsi_transport_fc scsi_tgt netxen_nic i7core_edac iTCO_wdt joydev e1000e serio_raw pcspkr edac_core iTCO_vendor_support acpi_power_meter rtc_cmos hpwdt hpilo button container usbhid hid dm_mirror dm_region_hash dm_log linear uhci_hcd ehci_hcd usbcore usb_common scsi_dh_emc scsi_dh_alua scsi_dh_hp_sw scsi_dh_rdac scsi_dh dm_snapshot pcnet32 mii edd dm_mod raid1 ext3 mbcache jbd fan thermal processor thermal_sys hwmon cciss scsi_mod\n  Supported: Yes\n  CPU 56\n  Pid: 31053, comm: kernel Not tainted 3.0.31-0.9-default #1 HP ProLiant DL580 G7\n  RIP: 0010:  _raw_spin_unlock_irqrestore+0x8/0x10\n  RSP: 0018:ffff883ec1037af0  EFLAGS: 00000206\n  RAX: 0000000000000e00 RBX: ffffea01a0817e28 RCX: ffff88803ffd9e80\n  RDX: 0000000000000200 RSI: 0000000000000206 RDI: 0000000000000206\n  RBP: 0000000000000002 R08: 0000000000000001 R09: ffff887ec724a400\n  R10: 0000000000000000 R11: dead000000200200 R12: ffffffff8144c26e\n  R13: 0000000000000030 R14: 0000000000000297 R15: 000000000000000e\n  FS:  00007ed834282700(0000) GS:ffff88c03f200000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n  CR2: 000000000068b240 CR3: 0000003ec13c5000 CR4: 00000000000006e0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n  Process kernel (pid: 31053, threadinfo ffff883ec1036000, task ffff883ebd5d4100)\n  Call Trace:\n    release_pages+0xc5/0x260\n    free_pages_and_swap_cache+0x9d/0xc0\n    tlb_flush_mmu+0x5c/0x80\n    tlb_finish_mmu+0xe/0x50\n    exit_mmap+0xbd/0x120\n    mmput+0x49/0x120\n    exit_mm+0x122/0x160\n    do_exit+0x17a/0x430\n    do_group_exit+0x3d/0xb0\n    get_signal_to_deliver+0x247/0x480\n    do_signal+0x71/0x1b0\n    do_notify_resume+0x98/0xb0\n    int_signal+0x12/0x17\n  DWARF2 unwinder stuck at int_signal+0x12/0x17\n\nSigned-off-by: Michal Hocko <mhocko@suse.cz>\nCc: <stable@vger.kernel.org>\t[3.0+]\nCc: Mel Gorman <mgorman@suse.de>\nCc: Rik van Riel <riel@redhat.com>\nCc: Peter Zijlstra <a.p.zijlstra@chello.nl>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
        "before_after_code_files": [
          "include/asm-generic/tlb.h||include/asm-generic/tlb.h",
          "mm/memory.c||mm/memory.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/asm-generic/tlb.h||include/asm-generic/tlb.h": [
          "File: include/asm-generic/tlb.h -> include/asm-generic/tlb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "78: #define MAX_GATHER_BATCH \\",
          "79:  ((PAGE_SIZE - sizeof(struct mmu_gather_batch)) / sizeof(void *))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87: #define MAX_GATHER_BATCH_COUNT (10000UL/MAX_GATHER_BATCH)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:  struct mmu_gather_batch *active;",
          "97:  struct mmu_gather_batch local;",
          "98:  struct page  *__pages[MMU_GATHER_BUNDLE];",
          "99: };",
          "101: #define HAVE_GENERIC_MMU_GATHER",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:  unsigned int  batch_count;",
          "",
          "---------------"
        ],
        "mm/memory.c||mm/memory.c": [
          "File: mm/memory.c -> mm/memory.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "184:   return 1;",
          "185:  }",
          "187:  batch = (void *)__get_free_pages(GFP_NOWAIT | __GFP_NOWARN, 0);",
          "188:  if (!batch)",
          "189:   return 0;",
          "191:  batch->next = NULL;",
          "192:  batch->nr   = 0;",
          "193:  batch->max  = MAX_GATHER_BATCH;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187:  if (tlb->batch_count == MAX_GATHER_BATCH_COUNT)",
          "188:   return 0;",
          "194:  tlb->batch_count++;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "216:  tlb->local.nr   = 0;",
          "217:  tlb->local.max  = ARRAY_SIZE(tlb->__pages);",
          "218:  tlb->active     = &tlb->local;",
          "220: #ifdef CONFIG_HAVE_RCU_TABLE_FREE",
          "221:  tlb->batch = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:  tlb->batch_count = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}