{
  "cve_id": "CVE-2019-16163",
  "cve_desc": "Oniguruma before 6.9.3 allows Stack Exhaustion in regcomp.c because of recursion in regparse.c.",
  "repo": "kkos/oniguruma",
  "patch_hash": "4097828d7cc87589864fecf452f2cd46c5f37180",
  "patch_info": {
    "commit_hash": "4097828d7cc87589864fecf452f2cd46c5f37180",
    "repo": "kkos/oniguruma",
    "commit_url": "https://github.com/kkos/oniguruma/commit/4097828d7cc87589864fecf452f2cd46c5f37180",
    "files": [
      "src/regparse.c"
    ],
    "message": "fix #147: Stack Exhaustion Problem caused by some parsing functions in regcomp.c making recursive calls to themselves.",
    "before_after_code_files": [
      "src/regparse.c||src/regparse.c"
    ]
  },
  "patch_diff": {
    "src/regparse.c||src/regparse.c": [
      "File: src/regparse.c -> src/regparse.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "7820: parse_exp(Node** np, PToken* tok, int term, UChar** src, UChar* end,",
      "7821:           ScanEnv* env, int group_head)",
      "7822: {",
      "7824:   Node* qn;",
      "7825:   Node** tp;",
      "7828:   if (tok->type == (enum TokenSyms )term)",
      "7829:     goto end_of_token;",
      "7831:   switch (tok->type) {",
      "7832:   case TK_ALT:",
      "7833:   case TK_EOT:",
      "",
      "[Removed Lines]",
      "7823:   int r, len, group = 0;",
      "",
      "[Added Lines]",
      "7824:   int r, len, group;",
      "7827:   unsigned int parse_depth;",
      "7829:   group = 0;",
      "7834:   parse_depth = env->parse_depth;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "8145:       if (is_invalid_quantifier_target(*tp))",
      "8146:         return ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID;",
      "8148:       qn = node_new_quantifier(tok->u.repeat.lower, tok->u.repeat.upper,",
      "8149:                                r == TK_INTERVAL);",
      "8150:       CHECK_NULL_RETURN_MEMERR(qn);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8153:       parse_depth++;",
      "8154:       if (parse_depth > ParseDepthLimit)",
      "8155:         return ONIGERR_PARSE_DEPTH_LIMIT_OVER;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f4565f57bad6f661df7f6d7d5a64b1d5600c48f6",
      "candidate_info": {
        "commit_hash": "f4565f57bad6f661df7f6d7d5a64b1d5600c48f6",
        "repo": "kkos/oniguruma",
        "commit_url": "https://github.com/kkos/oniguruma/commit/f4565f57bad6f661df7f6d7d5a64b1d5600c48f6",
        "files": [
          "src/regcomp.c",
          "src/regparse.c",
          "src/regparse.h"
        ],
        "message": "add output of max parse depth for ONIG_DEBUG_PARSE",
        "before_after_code_files": [
          "src/regcomp.c||src/regcomp.c",
          "src/regparse.c||src/regparse.c",
          "src/regparse.h||src/regparse.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/regparse.c||src/regparse.c"
          ],
          "candidate": [
            "src/regparse.c||src/regparse.c"
          ]
        }
      },
      "candidate_diff": {
        "src/regcomp.c||src/regcomp.c": [
          "File: src/regcomp.c -> src/regcomp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6587:   }",
          "6589: #ifdef ONIG_DEBUG_PARSE",
          "6590:   print_tree(stderr, root);",
          "6591: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6590:   fprintf(stderr, \"MAX PARSE DEPTH: %d\\n\", scan_env.max_parse_depth);",
          "",
          "---------------"
        ],
        "src/regparse.c||src/regparse.c": [
          "File: src/regparse.c -> src/regparse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "199:   return 0;",
          "200: }",
          "202: static int",
          "203: bbuf_init(BBuf* buf, int size)",
          "204: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202: #ifdef ONIG_DEBUG_PARSE",
          "203: #define INC_PARSE_DEPTH(d) do {\\",
          "204:   (d)++;\\",
          "205:   if (env->max_parse_depth < (d)) env->max_parse_depth = d;\\",
          "206:   if ((d) > ParseDepthLimit) \\",
          "207:     return ONIGERR_PARSE_DEPTH_LIMIT_OVER;\\",
          "208: } while (0)",
          "209: #else",
          "210: #define INC_PARSE_DEPTH(d) do {\\",
          "211:   (d)++;\\",
          "212:   if ((d) > ParseDepthLimit) \\",
          "213:     return ONIGERR_PARSE_DEPTH_LIMIT_OVER;\\",
          "214: } while (0)",
          "215: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1965:   xmemset(env->mem_env_static, 0, sizeof(env->mem_env_static));",
          "1967:   env->parse_depth         = 0;",
          "1968:   env->backref_num         = 0;",
          "1969:   env->keep_num            = 0;",
          "1970:   env->save_num            = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1983: #ifdef ONIG_DEBUG_PARSE",
          "1984:   env->max_parse_depth     = 0;",
          "1985: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6246:   val_type = -1;",
          "6251:   prev_cc = (CClassNode* )NULL;",
          "6252:   r = fetch_token_in_cc(tok, src, end, env);",
          "",
          "[Removed Lines]",
          "6247:   env->parse_depth++;",
          "6248:   if (env->parse_depth > ParseDepthLimit)",
          "6249:     return ONIGERR_PARSE_DEPTH_LIMIT_OVER;",
          "",
          "[Added Lines]",
          "6265:   INC_PARSE_DEPTH(env->parse_depth);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8169:       if (is_invalid_quantifier_target(*tp))",
          "8170:         return ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID;",
          "8176:       qn = node_new_quantifier(tok->u.repeat.lower, tok->u.repeat.upper,",
          "8177:                                r == TK_INTERVAL);",
          "",
          "[Removed Lines]",
          "8172:       parse_depth++;",
          "8173:       if (parse_depth > ParseDepthLimit)",
          "8174:         return ONIGERR_PARSE_DEPTH_LIMIT_OVER;",
          "",
          "[Added Lines]",
          "8188:       INC_PARSE_DEPTH(parse_depth);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8287:   Node *node, **headp;",
          "8294:   r = parse_branch(&node, tok, term, src, end, env, group_head);",
          "8295:   if (r < 0) {",
          "",
          "[Removed Lines]",
          "8290:   env->parse_depth++;",
          "8291:   if (env->parse_depth > ParseDepthLimit)",
          "8292:     return ONIGERR_PARSE_DEPTH_LIMIT_OVER;",
          "",
          "[Added Lines]",
          "8304:   INC_PARSE_DEPTH(env->parse_depth);",
          "",
          "---------------"
        ],
        "src/regparse.h||src/regparse.h": [
          "File: src/regparse.h -> src/regparse.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:   MemEnv           mem_env_static[SCANENV_MEMENV_SIZE];",
          "418:   MemEnv*          mem_env_dynamic;",
          "419:   unsigned int     parse_depth;",
          "420:   int backref_num;",
          "421:   int keep_num;",
          "422:   int save_num;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "420: #ifdef ONIG_DEBUG_PARSE",
          "421:   unsigned int     max_parse_depth;",
          "422: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}