{
  "cve_id": "CVE-2017-9304",
  "cve_desc": "libyara/re.c in the regexp module in YARA 3.5.0 allows remote attackers to cause a denial of service (stack consumption) via a crafted rule that is mishandled in the _yr_re_emit function.",
  "repo": "VirusTotal/yara",
  "patch_hash": "925bcf3c3b0a28b5b78e25d9efda5c0bf27ae699",
  "patch_info": {
    "commit_hash": "925bcf3c3b0a28b5b78e25d9efda5c0bf27ae699",
    "repo": "VirusTotal/yara",
    "commit_url": "https://github.com/VirusTotal/yara/commit/925bcf3c3b0a28b5b78e25d9efda5c0bf27ae699",
    "files": [
      "libyara/include/yara/limits.h",
      "libyara/include/yara/re.h",
      "libyara/re.c",
      "libyara/re_grammar.c",
      "libyara/re_grammar.h",
      "libyara/re_grammar.y"
    ],
    "message": "Fix issue #674. Move regexp limits to limits.h.",
    "before_after_code_files": [
      "libyara/include/yara/limits.h||libyara/include/yara/limits.h",
      "libyara/include/yara/re.h||libyara/include/yara/re.h",
      "libyara/re.c||libyara/re.c",
      "libyara/re_grammar.c||libyara/re_grammar.c",
      "libyara/re_grammar.h||libyara/re_grammar.h",
      "libyara/re_grammar.y||libyara/re_grammar.y"
    ]
  },
  "patch_diff": {
    "libyara/include/yara/limits.h||libyara/include/yara/limits.h": [
      "File: libyara/include/yara/limits.h -> libyara/include/yara/limits.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "65: #define LEX_BUF_SIZE                    8192",
      "68: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71: #define RE_MAX_SPLIT_ID                 128",
      "74: #define RE_MAX_STACK                    1024",
      "77: #define RE_MAX_CODE_SIZE                32768",
      "80: #define RE_SCAN_LIMIT                   4096",
      "83: #define RE_MAX_FIBERS                   1024",
      "86: #define RE_MAX_AST_LEVELS               2000",
      "",
      "---------------"
    ],
    "libyara/include/yara/re.h||libyara/include/yara/re.h": [
      "File: libyara/include/yara/re.h -> libyara/include/yara/re.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "136: struct RE_AST",
      "137: {",
      "138:   uint32_t flags;",
      "139:   RE_NODE* root_node;",
      "140: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "139:   uint16_t levels;",
      "",
      "---------------"
    ],
    "libyara/re.c||libyara/re.c": [
      "File: libyara/re.c -> libyara/re.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "52: #include <yara/re_lexer.h>",
      "53: #include <yara/hex_lexer.h>",
      "73: #define EMIT_BACKWARDS                  0x01",
      "74: #define EMIT_DONT_SET_FORWARDS_CODE     0x02",
      "",
      "[Removed Lines]",
      "58: #define RE_MAX_SPLIT_ID     128",
      "61: #define RE_MAX_STACK      1024",
      "64: #define RE_MAX_CODE_SIZE  32768",
      "67: #define RE_SCAN_LIMIT     4096",
      "70: #define RE_MAX_FIBERS     1024",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "268:     return ERROR_INSUFFICIENT_MEMORY;",
      "270:   (*re_ast)->flags = 0;",
      "271:   (*re_ast)->root_node = NULL;",
      "273:   return ERROR_SUCCESS;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "254:   (*re_ast)->levels = 0;",
      "",
      "---------------"
    ],
    "libyara/re_grammar.c||libyara/re_grammar.c": [
      "File: libyara/re_grammar.c -> libyara/re_grammar.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "88: #define mark_as_not_fast_regexp() \\",
      "89:     ((RE_AST*) yyget_extra(yyscanner))->flags &= ~RE_FLAGS_FAST_REGEXP",
      "91: #define ERROR_IF(x, error) \\",
      "92:     if (x) \\",
      "93:     { \\",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "91: #define incr_ast_levels() \\",
      "92:     if (((RE_AST*) yyget_extra(yyscanner))->levels++ > RE_MAX_AST_LEVELS) \\",
      "93:     { \\",
      "94:       lex_env->last_error_code = ERROR_INVALID_REGULAR_EXPRESSION; \\",
      "95:       YYABORT; \\",
      "96:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "492: static const yytype_uint16 yyrline[] =",
      "493: {",
      "498: };",
      "499: #endif",
      "",
      "[Removed Lines]",
      "494:        0,   104,   104,   109,   113,   117,   128,   146,   150,   161,",
      "495:      175,   191,   205,   221,   244,   268,   290,   313,   317,   323,",
      "496:      329,   335,   344,   348,   354,   362,   368,   374,   380,   386,",
      "497:      392,   398",
      "",
      "[Added Lines]",
      "502:        0,   112,   112,   117,   121,   125,   137,   156,   160,   173,",
      "503:      187,   203,   217,   233,   256,   280,   302,   325,   329,   335,",
      "504:      341,   347,   356,   362,   368,   376,   382,   388,   394,   400,",
      "505:      406,   412",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1331:   switch (yyn)",
      "1332:     {",
      "1333:         case 2:",
      "1335:     {",
      "1336:         RE_AST* re_ast = yyget_extra(yyscanner);",
      "1337:         re_ast->root_node = (yyvsp[0].re_node);",
      "1338:       }",
      "1340:     break;",
      "1342:   case 4:",
      "1344:     {",
      "1345:         (yyval.re_node) = (yyvsp[0].re_node);",
      "1346:       }",
      "1348:     break;",
      "1350:   case 5:",
      "1352:     {",
      "1353:         mark_as_not_fast_regexp();",
      "1355:         (yyval.re_node) = yr_re_node_create(RE_NODE_ALT, (yyvsp[-2].re_node), (yyvsp[0].re_node));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1362:         incr_ast_levels();",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1360:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
      "1361:       }",
      "1363:     break;",
      "1365:   case 6:",
      "1367:     {",
      "1368:         RE_NODE* node;",
      "1370:         mark_as_not_fast_regexp();",
      "1372:         node = yr_re_node_create(RE_NODE_EMPTY, NULL, NULL);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1380:         incr_ast_levels();",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1379:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
      "1380:       }",
      "1382:     break;",
      "1384:   case 7:",
      "1386:     {",
      "1387:         (yyval.re_node) = (yyvsp[0].re_node);",
      "1388:       }",
      "1390:     break;",
      "1392:   case 8:",
      "1394:     {",
      "1395:         (yyval.re_node) = yr_re_node_create(RE_NODE_CONCAT, (yyvsp[-1].re_node), (yyvsp[0].re_node));",
      "1397:         DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));",
      "1398:         DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));",
      "1399:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
      "1400:       }",
      "1402:     break;",
      "1404:   case 9:",
      "1406:     {",
      "1407:         RE_AST* re_ast;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1405:         incr_ast_levels();",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1582:         (yyval.re_node)->end = (yyvsp[-1].range) >> 16;;",
      "1583:         (yyval.re_node)->greedy = FALSE;",
      "1584:       }",
      "1586:     break;",
      "1588:   case 17:",
      "1590:     {",
      "1591:         (yyval.re_node) = (yyvsp[0].re_node);",
      "1592:       }",
      "1594:     break;",
      "1596:   case 18:",
      "1598:     {",
      "1599:         (yyval.re_node) = yr_re_node_create(RE_NODE_WORD_BOUNDARY, NULL, NULL);",
      "1601:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
      "1602:       }",
      "1604:     break;",
      "1606:   case 19:",
      "1608:     {",
      "1609:         (yyval.re_node) = yr_re_node_create(RE_NODE_NON_WORD_BOUNDARY, NULL, NULL);",
      "1611:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
      "1612:       }",
      "1614:     break;",
      "1616:   case 20:",
      "1618:     {",
      "1619:         (yyval.re_node) = yr_re_node_create(RE_NODE_ANCHOR_START, NULL, NULL);",
      "1621:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
      "1622:       }",
      "1624:     break;",
      "1626:   case 21:",
      "1628:     {",
      "1629:         (yyval.re_node) = yr_re_node_create(RE_NODE_ANCHOR_END, NULL, NULL);",
      "1631:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
      "1632:       }",
      "1634:     break;",
      "1636:   case 22:",
      "1638:     {",
      "1639:         (yyval.re_node) = (yyvsp[-1].re_node);",
      "1640:       }",
      "1642:     break;",
      "1644:   case 23:",
      "1646:     {",
      "1647:         (yyval.re_node) = yr_re_node_create(RE_NODE_ANY, NULL, NULL);",
      "1649:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
      "1650:       }",
      "1652:     break;",
      "1654:   case 24:",
      "1656:     {",
      "1657:         (yyval.re_node) = yr_re_node_create(RE_NODE_LITERAL, NULL, NULL);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1651:         incr_ast_levels();",
      "",
      "---------------"
    ],
    "libyara/re_grammar.h||libyara/re_grammar.h": [
      "File: libyara/re_grammar.h -> libyara/re_grammar.h"
    ],
    "libyara/re_grammar.y||libyara/re_grammar.y": [
      "File: libyara/re_grammar.y -> libyara/re_grammar.y",
      "--- Hunk 1 ---",
      "[Context before]",
      "46: #define mark_as_not_fast_regexp() \\",
      "47:     ((RE_AST*) yyget_extra(yyscanner))->flags &= ~RE_FLAGS_FAST_REGEXP",
      "49: #define ERROR_IF(x, error) \\",
      "50:     if (x) \\",
      "51:     { \\",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49: #define incr_ast_levels() \\",
      "50:     if (((RE_AST*) yyget_extra(yyscanner))->levels++ > RE_MAX_AST_LEVELS) \\",
      "51:     { \\",
      "52:       lex_env->last_error_code = ERROR_INVALID_REGULAR_EXPRESSION; \\",
      "53:       YYABORT; \\",
      "54:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "117:     | alternative '|' concatenation",
      "118:       {",
      "119:         mark_as_not_fast_regexp();",
      "121:         $$ = yr_re_node_create(RE_NODE_ALT, $1, $3);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "128:         incr_ast_levels();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "130:         RE_NODE* node;",
      "132:         mark_as_not_fast_regexp();",
      "134:         node = yr_re_node_create(RE_NODE_EMPTY, NULL, NULL);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "142:         incr_ast_levels();",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "149:       }",
      "150:     | concatenation repeat",
      "151:       {",
      "152:         $$ = yr_re_node_create(RE_NODE_CONCAT, $1, $2);",
      "154:         DESTROY_NODE_IF($$ == NULL, $1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "162:         incr_ast_levels();",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "343: single",
      "344:     : '(' alternative ')'",
      "345:       {",
      "346:         $$ = $2;",
      "347:       }",
      "348:     | '.'",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "358:         incr_ast_levels();",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "925bcf3c3b0a28b5b78e25d9efda5c0bf27ae699",
      "candidate_info": {
        "commit_hash": "925bcf3c3b0a28b5b78e25d9efda5c0bf27ae699",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/925bcf3c3b0a28b5b78e25d9efda5c0bf27ae699",
        "files": [
          "libyara/include/yara/limits.h",
          "libyara/include/yara/re.h",
          "libyara/re.c",
          "libyara/re_grammar.c",
          "libyara/re_grammar.h",
          "libyara/re_grammar.y"
        ],
        "message": "Fix issue #674. Move regexp limits to limits.h.",
        "before_after_code_files": [
          "libyara/include/yara/limits.h||libyara/include/yara/limits.h",
          "libyara/include/yara/re.h||libyara/include/yara/re.h",
          "libyara/re.c||libyara/re.c",
          "libyara/re_grammar.c||libyara/re_grammar.c",
          "libyara/re_grammar.h||libyara/re_grammar.h",
          "libyara/re_grammar.y||libyara/re_grammar.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libyara/include/yara/limits.h||libyara/include/yara/limits.h",
            "libyara/include/yara/re.h||libyara/include/yara/re.h",
            "libyara/re.c||libyara/re.c",
            "libyara/re_grammar.c||libyara/re_grammar.c",
            "libyara/re_grammar.h||libyara/re_grammar.h",
            "libyara/re_grammar.y||libyara/re_grammar.y"
          ],
          "candidate": [
            "libyara/include/yara/limits.h||libyara/include/yara/limits.h",
            "libyara/include/yara/re.h||libyara/include/yara/re.h",
            "libyara/re.c||libyara/re.c",
            "libyara/re_grammar.c||libyara/re_grammar.c",
            "libyara/re_grammar.h||libyara/re_grammar.h",
            "libyara/re_grammar.y||libyara/re_grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/include/yara/limits.h||libyara/include/yara/limits.h": [
          "File: libyara/include/yara/limits.h -> libyara/include/yara/limits.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: #define LEX_BUF_SIZE                    8192",
          "68: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: #define RE_MAX_SPLIT_ID                 128",
          "74: #define RE_MAX_STACK                    1024",
          "77: #define RE_MAX_CODE_SIZE                32768",
          "80: #define RE_SCAN_LIMIT                   4096",
          "83: #define RE_MAX_FIBERS                   1024",
          "86: #define RE_MAX_AST_LEVELS               2000",
          "",
          "---------------"
        ],
        "libyara/include/yara/re.h||libyara/include/yara/re.h": [
          "File: libyara/include/yara/re.h -> libyara/include/yara/re.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "136: struct RE_AST",
          "137: {",
          "138:   uint32_t flags;",
          "139:   RE_NODE* root_node;",
          "140: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:   uint16_t levels;",
          "",
          "---------------"
        ],
        "libyara/re.c||libyara/re.c": [
          "File: libyara/re.c -> libyara/re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: #include <yara/re_lexer.h>",
          "53: #include <yara/hex_lexer.h>",
          "73: #define EMIT_BACKWARDS                  0x01",
          "74: #define EMIT_DONT_SET_FORWARDS_CODE     0x02",
          "",
          "[Removed Lines]",
          "58: #define RE_MAX_SPLIT_ID     128",
          "61: #define RE_MAX_STACK      1024",
          "64: #define RE_MAX_CODE_SIZE  32768",
          "67: #define RE_SCAN_LIMIT     4096",
          "70: #define RE_MAX_FIBERS     1024",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:     return ERROR_INSUFFICIENT_MEMORY;",
          "270:   (*re_ast)->flags = 0;",
          "271:   (*re_ast)->root_node = NULL;",
          "273:   return ERROR_SUCCESS;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "254:   (*re_ast)->levels = 0;",
          "",
          "---------------"
        ],
        "libyara/re_grammar.c||libyara/re_grammar.c": [
          "File: libyara/re_grammar.c -> libyara/re_grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: #define mark_as_not_fast_regexp() \\",
          "89:     ((RE_AST*) yyget_extra(yyscanner))->flags &= ~RE_FLAGS_FAST_REGEXP",
          "91: #define ERROR_IF(x, error) \\",
          "92:     if (x) \\",
          "93:     { \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91: #define incr_ast_levels() \\",
          "92:     if (((RE_AST*) yyget_extra(yyscanner))->levels++ > RE_MAX_AST_LEVELS) \\",
          "93:     { \\",
          "94:       lex_env->last_error_code = ERROR_INVALID_REGULAR_EXPRESSION; \\",
          "95:       YYABORT; \\",
          "96:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "492: static const yytype_uint16 yyrline[] =",
          "493: {",
          "498: };",
          "499: #endif",
          "",
          "[Removed Lines]",
          "494:        0,   104,   104,   109,   113,   117,   128,   146,   150,   161,",
          "495:      175,   191,   205,   221,   244,   268,   290,   313,   317,   323,",
          "496:      329,   335,   344,   348,   354,   362,   368,   374,   380,   386,",
          "497:      392,   398",
          "",
          "[Added Lines]",
          "502:        0,   112,   112,   117,   121,   125,   137,   156,   160,   173,",
          "503:      187,   203,   217,   233,   256,   280,   302,   325,   329,   335,",
          "504:      341,   347,   356,   362,   368,   376,   382,   388,   394,   400,",
          "505:      406,   412",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1331:   switch (yyn)",
          "1332:     {",
          "1333:         case 2:",
          "1335:     {",
          "1336:         RE_AST* re_ast = yyget_extra(yyscanner);",
          "1337:         re_ast->root_node = (yyvsp[0].re_node);",
          "1338:       }",
          "1340:     break;",
          "1342:   case 4:",
          "1344:     {",
          "1345:         (yyval.re_node) = (yyvsp[0].re_node);",
          "1346:       }",
          "1348:     break;",
          "1350:   case 5:",
          "1352:     {",
          "1353:         mark_as_not_fast_regexp();",
          "1355:         (yyval.re_node) = yr_re_node_create(RE_NODE_ALT, (yyvsp[-2].re_node), (yyvsp[0].re_node));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1362:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1360:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1361:       }",
          "1363:     break;",
          "1365:   case 6:",
          "1367:     {",
          "1368:         RE_NODE* node;",
          "1370:         mark_as_not_fast_regexp();",
          "1372:         node = yr_re_node_create(RE_NODE_EMPTY, NULL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1380:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1379:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1380:       }",
          "1382:     break;",
          "1384:   case 7:",
          "1386:     {",
          "1387:         (yyval.re_node) = (yyvsp[0].re_node);",
          "1388:       }",
          "1390:     break;",
          "1392:   case 8:",
          "1394:     {",
          "1395:         (yyval.re_node) = yr_re_node_create(RE_NODE_CONCAT, (yyvsp[-1].re_node), (yyvsp[0].re_node));",
          "1397:         DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));",
          "1398:         DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));",
          "1399:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1400:       }",
          "1402:     break;",
          "1404:   case 9:",
          "1406:     {",
          "1407:         RE_AST* re_ast;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1405:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1582:         (yyval.re_node)->end = (yyvsp[-1].range) >> 16;;",
          "1583:         (yyval.re_node)->greedy = FALSE;",
          "1584:       }",
          "1586:     break;",
          "1588:   case 17:",
          "1590:     {",
          "1591:         (yyval.re_node) = (yyvsp[0].re_node);",
          "1592:       }",
          "1594:     break;",
          "1596:   case 18:",
          "1598:     {",
          "1599:         (yyval.re_node) = yr_re_node_create(RE_NODE_WORD_BOUNDARY, NULL, NULL);",
          "1601:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1602:       }",
          "1604:     break;",
          "1606:   case 19:",
          "1608:     {",
          "1609:         (yyval.re_node) = yr_re_node_create(RE_NODE_NON_WORD_BOUNDARY, NULL, NULL);",
          "1611:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1612:       }",
          "1614:     break;",
          "1616:   case 20:",
          "1618:     {",
          "1619:         (yyval.re_node) = yr_re_node_create(RE_NODE_ANCHOR_START, NULL, NULL);",
          "1621:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1622:       }",
          "1624:     break;",
          "1626:   case 21:",
          "1628:     {",
          "1629:         (yyval.re_node) = yr_re_node_create(RE_NODE_ANCHOR_END, NULL, NULL);",
          "1631:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1632:       }",
          "1634:     break;",
          "1636:   case 22:",
          "1638:     {",
          "1639:         (yyval.re_node) = (yyvsp[-1].re_node);",
          "1640:       }",
          "1642:     break;",
          "1644:   case 23:",
          "1646:     {",
          "1647:         (yyval.re_node) = yr_re_node_create(RE_NODE_ANY, NULL, NULL);",
          "1649:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1650:       }",
          "1652:     break;",
          "1654:   case 24:",
          "1656:     {",
          "1657:         (yyval.re_node) = yr_re_node_create(RE_NODE_LITERAL, NULL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1651:         incr_ast_levels();",
          "",
          "---------------"
        ],
        "libyara/re_grammar.h||libyara/re_grammar.h": [
          "File: libyara/re_grammar.h -> libyara/re_grammar.h"
        ],
        "libyara/re_grammar.y||libyara/re_grammar.y": [
          "File: libyara/re_grammar.y -> libyara/re_grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #define mark_as_not_fast_regexp() \\",
          "47:     ((RE_AST*) yyget_extra(yyscanner))->flags &= ~RE_FLAGS_FAST_REGEXP",
          "49: #define ERROR_IF(x, error) \\",
          "50:     if (x) \\",
          "51:     { \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: #define incr_ast_levels() \\",
          "50:     if (((RE_AST*) yyget_extra(yyscanner))->levels++ > RE_MAX_AST_LEVELS) \\",
          "51:     { \\",
          "52:       lex_env->last_error_code = ERROR_INVALID_REGULAR_EXPRESSION; \\",
          "53:       YYABORT; \\",
          "54:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:     | alternative '|' concatenation",
          "118:       {",
          "119:         mark_as_not_fast_regexp();",
          "121:         $$ = yr_re_node_create(RE_NODE_ALT, $1, $3);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "130:         RE_NODE* node;",
          "132:         mark_as_not_fast_regexp();",
          "134:         node = yr_re_node_create(RE_NODE_EMPTY, NULL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "149:       }",
          "150:     | concatenation repeat",
          "151:       {",
          "152:         $$ = yr_re_node_create(RE_NODE_CONCAT, $1, $2);",
          "154:         DESTROY_NODE_IF($$ == NULL, $1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "343: single",
          "344:     : '(' alternative ')'",
          "345:       {",
          "346:         $$ = $2;",
          "347:       }",
          "348:     | '.'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "358:         incr_ast_levels();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58f72d4d57c8a431c3b05df9f02150faf4323fe5",
      "candidate_info": {
        "commit_hash": "58f72d4d57c8a431c3b05df9f02150faf4323fe5",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/58f72d4d57c8a431c3b05df9f02150faf4323fe5",
        "files": [
          "libyara/include/yara/limits.h",
          "libyara/include/yara/re.h",
          "libyara/re.c",
          "libyara/re_grammar.c",
          "libyara/re_grammar.h",
          "libyara/re_grammar.y"
        ],
        "message": "Fix issue #674. Move regexp limits to limits.h.",
        "before_after_code_files": [
          "libyara/include/yara/limits.h||libyara/include/yara/limits.h",
          "libyara/include/yara/re.h||libyara/include/yara/re.h",
          "libyara/re.c||libyara/re.c",
          "libyara/re_grammar.c||libyara/re_grammar.c",
          "libyara/re_grammar.h||libyara/re_grammar.h",
          "libyara/re_grammar.y||libyara/re_grammar.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libyara/include/yara/limits.h||libyara/include/yara/limits.h",
            "libyara/include/yara/re.h||libyara/include/yara/re.h",
            "libyara/re.c||libyara/re.c",
            "libyara/re_grammar.c||libyara/re_grammar.c",
            "libyara/re_grammar.h||libyara/re_grammar.h",
            "libyara/re_grammar.y||libyara/re_grammar.y"
          ],
          "candidate": [
            "libyara/include/yara/limits.h||libyara/include/yara/limits.h",
            "libyara/include/yara/re.h||libyara/include/yara/re.h",
            "libyara/re.c||libyara/re.c",
            "libyara/re_grammar.c||libyara/re_grammar.c",
            "libyara/re_grammar.h||libyara/re_grammar.h",
            "libyara/re_grammar.y||libyara/re_grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/include/yara/limits.h||libyara/include/yara/limits.h": [
          "File: libyara/include/yara/limits.h -> libyara/include/yara/limits.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: #define LEX_BUF_SIZE                    8192",
          "68: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: #define RE_MAX_SPLIT_ID                 128",
          "74: #define RE_MAX_STACK                    1024",
          "77: #define RE_MAX_CODE_SIZE                32768",
          "80: #define RE_SCAN_LIMIT                   4096",
          "83: #define RE_MAX_FIBERS                   1024",
          "86: #define RE_MAX_AST_LEVELS               1000",
          "",
          "---------------"
        ],
        "libyara/include/yara/re.h||libyara/include/yara/re.h": [
          "File: libyara/include/yara/re.h -> libyara/include/yara/re.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "136: struct RE_AST",
          "137: {",
          "138:   uint32_t flags;",
          "139:   RE_NODE* root_node;",
          "140: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:   uint16_t levels;",
          "",
          "---------------"
        ],
        "libyara/re.c||libyara/re.c": [
          "File: libyara/re.c -> libyara/re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: #include <yara/re_lexer.h>",
          "53: #include <yara/hex_lexer.h>",
          "73: #define EMIT_BACKWARDS                  0x01",
          "74: #define EMIT_DONT_SET_FORWARDS_CODE     0x02",
          "",
          "[Removed Lines]",
          "58: #define RE_MAX_SPLIT_ID     128",
          "61: #define RE_MAX_STACK      1024",
          "64: #define RE_MAX_CODE_SIZE  32768",
          "67: #define RE_SCAN_LIMIT     4096",
          "70: #define RE_MAX_FIBERS     1024",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:     return ERROR_INSUFFICIENT_MEMORY;",
          "270:   (*re_ast)->flags = 0;",
          "271:   (*re_ast)->root_node = NULL;",
          "273:   return ERROR_SUCCESS;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "254:   (*re_ast)->levels = 0;",
          "",
          "---------------"
        ],
        "libyara/re_grammar.c||libyara/re_grammar.c": [
          "File: libyara/re_grammar.c -> libyara/re_grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: #define mark_as_not_fast_regexp() \\",
          "89:     ((RE_AST*) yyget_extra(yyscanner))->flags &= ~RE_FLAGS_FAST_REGEXP",
          "91: #define ERROR_IF(x, error) \\",
          "92:     if (x) \\",
          "93:     { \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91: #define incr_ast_levels() \\",
          "92:     if (((RE_AST*) yyget_extra(yyscanner))->levels++ > RE_MAX_AST_LEVELS) \\",
          "93:     { \\",
          "94:       lex_env->last_error_code = ERROR_INVALID_REGULAR_EXPRESSION; \\",
          "95:       YYABORT; \\",
          "96:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "492: static const yytype_uint16 yyrline[] =",
          "493: {",
          "498: };",
          "499: #endif",
          "",
          "[Removed Lines]",
          "494:        0,   104,   104,   109,   113,   117,   128,   146,   150,   161,",
          "495:      175,   191,   205,   221,   244,   268,   290,   313,   317,   323,",
          "496:      329,   335,   344,   348,   354,   362,   368,   374,   380,   386,",
          "497:      392,   398",
          "",
          "[Added Lines]",
          "502:        0,   112,   112,   117,   121,   125,   137,   156,   160,   173,",
          "503:      187,   203,   217,   233,   256,   280,   302,   325,   329,   335,",
          "504:      341,   347,   356,   362,   368,   376,   382,   388,   394,   400,",
          "505:      406,   412",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1331:   switch (yyn)",
          "1332:     {",
          "1333:         case 2:",
          "1335:     {",
          "1336:         RE_AST* re_ast = yyget_extra(yyscanner);",
          "1337:         re_ast->root_node = (yyvsp[0].re_node);",
          "1338:       }",
          "1340:     break;",
          "1342:   case 4:",
          "1344:     {",
          "1345:         (yyval.re_node) = (yyvsp[0].re_node);",
          "1346:       }",
          "1348:     break;",
          "1350:   case 5:",
          "1352:     {",
          "1353:         mark_as_not_fast_regexp();",
          "1355:         (yyval.re_node) = yr_re_node_create(RE_NODE_ALT, (yyvsp[-2].re_node), (yyvsp[0].re_node));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1362:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1360:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1361:       }",
          "1363:     break;",
          "1365:   case 6:",
          "1367:     {",
          "1368:         RE_NODE* node;",
          "1370:         mark_as_not_fast_regexp();",
          "1372:         node = yr_re_node_create(RE_NODE_EMPTY, NULL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1380:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1379:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1380:       }",
          "1382:     break;",
          "1384:   case 7:",
          "1386:     {",
          "1387:         (yyval.re_node) = (yyvsp[0].re_node);",
          "1388:       }",
          "1390:     break;",
          "1392:   case 8:",
          "1394:     {",
          "1395:         (yyval.re_node) = yr_re_node_create(RE_NODE_CONCAT, (yyvsp[-1].re_node), (yyvsp[0].re_node));",
          "1397:         DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[-1].re_node));",
          "1398:         DESTROY_NODE_IF((yyval.re_node) == NULL, (yyvsp[0].re_node));",
          "1399:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1400:       }",
          "1402:     break;",
          "1404:   case 9:",
          "1406:     {",
          "1407:         RE_AST* re_ast;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1405:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1582:         (yyval.re_node)->end = (yyvsp[-1].range) >> 16;;",
          "1583:         (yyval.re_node)->greedy = FALSE;",
          "1584:       }",
          "1586:     break;",
          "1588:   case 17:",
          "1590:     {",
          "1591:         (yyval.re_node) = (yyvsp[0].re_node);",
          "1592:       }",
          "1594:     break;",
          "1596:   case 18:",
          "1598:     {",
          "1599:         (yyval.re_node) = yr_re_node_create(RE_NODE_WORD_BOUNDARY, NULL, NULL);",
          "1601:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1602:       }",
          "1604:     break;",
          "1606:   case 19:",
          "1608:     {",
          "1609:         (yyval.re_node) = yr_re_node_create(RE_NODE_NON_WORD_BOUNDARY, NULL, NULL);",
          "1611:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1612:       }",
          "1614:     break;",
          "1616:   case 20:",
          "1618:     {",
          "1619:         (yyval.re_node) = yr_re_node_create(RE_NODE_ANCHOR_START, NULL, NULL);",
          "1621:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1622:       }",
          "1624:     break;",
          "1626:   case 21:",
          "1628:     {",
          "1629:         (yyval.re_node) = yr_re_node_create(RE_NODE_ANCHOR_END, NULL, NULL);",
          "1631:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1632:       }",
          "1634:     break;",
          "1636:   case 22:",
          "1638:     {",
          "1639:         (yyval.re_node) = (yyvsp[-1].re_node);",
          "1640:       }",
          "1642:     break;",
          "1644:   case 23:",
          "1646:     {",
          "1647:         (yyval.re_node) = yr_re_node_create(RE_NODE_ANY, NULL, NULL);",
          "1649:         ERROR_IF((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1650:       }",
          "1652:     break;",
          "1654:   case 24:",
          "1656:     {",
          "1657:         (yyval.re_node) = yr_re_node_create(RE_NODE_LITERAL, NULL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1651:         incr_ast_levels();",
          "",
          "---------------"
        ],
        "libyara/re_grammar.h||libyara/re_grammar.h": [
          "File: libyara/re_grammar.h -> libyara/re_grammar.h"
        ],
        "libyara/re_grammar.y||libyara/re_grammar.y": [
          "File: libyara/re_grammar.y -> libyara/re_grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #define mark_as_not_fast_regexp() \\",
          "47:     ((RE_AST*) yyget_extra(yyscanner))->flags &= ~RE_FLAGS_FAST_REGEXP",
          "49: #define ERROR_IF(x, error) \\",
          "50:     if (x) \\",
          "51:     { \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: #define incr_ast_levels() \\",
          "50:     if (((RE_AST*) yyget_extra(yyscanner))->levels++ > RE_MAX_AST_LEVELS) \\",
          "51:     { \\",
          "52:       lex_env->last_error_code = ERROR_INVALID_REGULAR_EXPRESSION; \\",
          "53:       YYABORT; \\",
          "54:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:     | alternative '|' concatenation",
          "118:       {",
          "119:         mark_as_not_fast_regexp();",
          "121:         $$ = yr_re_node_create(RE_NODE_ALT, $1, $3);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "130:         RE_NODE* node;",
          "132:         mark_as_not_fast_regexp();",
          "134:         node = yr_re_node_create(RE_NODE_EMPTY, NULL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "149:       }",
          "150:     | concatenation repeat",
          "151:       {",
          "152:         $$ = yr_re_node_create(RE_NODE_CONCAT, $1, $2);",
          "154:         DESTROY_NODE_IF($$ == NULL, $1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:         incr_ast_levels();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "343: single",
          "344:     : '(' alternative ')'",
          "345:       {",
          "346:         $$ = $2;",
          "347:       }",
          "348:     | '.'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "358:         incr_ast_levels();",
          "",
          "---------------"
        ]
      }
    }
  ]
}