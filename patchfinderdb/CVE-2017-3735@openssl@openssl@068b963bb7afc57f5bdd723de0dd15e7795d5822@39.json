{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "77882a94ee69a613c3b62ae9b5d0de0ed53799e8",
      "candidate_info": {
        "commit_hash": "77882a94ee69a613c3b62ae9b5d0de0ed53799e8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/77882a94ee69a613c3b62ae9b5d0de0ed53799e8",
        "files": [
          "include/openssl/ssl.h"
        ],
        "message": "Fix signature of min/max proto getter\n\nThe getters for min and max proto version wrongly passed NULL instead of\n0 as third argument to SSL_ctrl() and SSL_CTX_ctrl(). The third argument\nis not used, but the error results in a compiler warning:\n\nwarning: passing argument 3 of \u2018SSL_CTX_ctrl\u2019 makes integer from pointer without a cast [-Wint-conversion]\nint v = SSL_CTX_get_max_proto_version(self->ctx);\n\nSee https://github.com/openssl/openssl/pull/4364\n\nSigned-off-by: Christian Heimes <christian@python.org>\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\n(Merged from https://github.com/openssl/openssl/pull/5128)\n\n(cherry picked from commit 1f82eba718f758757a439e717ea7a5aa8be55f8d)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1302: #define SSL_set_max_proto_version(s, version) \\",
          "1303:         SSL_ctrl(s, SSL_CTRL_SET_MAX_PROTO_VERSION, version, NULL)",
          "1304: #define SSL_get_min_proto_version(s) \\",
          "1306: #define SSL_get_max_proto_version(s) \\",
          "1309: #if OPENSSL_API_COMPAT < 0x10100000L",
          "",
          "[Removed Lines]",
          "1305:         SSL_ctrl(s, SSL_CTRL_GET_MIN_PROTO_VERSION, NULL, NULL)",
          "1307:         SSL_ctrl(s, SSL_CTRL_GET_MAX_PROTO_VERSION, NULL, NULL)",
          "",
          "[Added Lines]",
          "1305:         SSL_ctrl(s, SSL_CTRL_GET_MIN_PROTO_VERSION, 0, NULL)",
          "1307:         SSL_ctrl(s, SSL_CTRL_GET_MAX_PROTO_VERSION, 0, NULL)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a02eefaad7c8e53d6c7b9f57d947a9cfe6a167f",
      "candidate_info": {
        "commit_hash": "5a02eefaad7c8e53d6c7b9f57d947a9cfe6a167f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5a02eefaad7c8e53d6c7b9f57d947a9cfe6a167f",
        "files": [
          "apps/srp.c"
        ],
        "message": "Fix endless loop on srp app when listing users\n\nWith the -list option the srp app loops on the main while() endlessly,\nwhether users were given on the command line or not. The loop should\nbe stopped when in list mode and there are no more users.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3489)\n\n(cherry picked from commit 5ec3210fc106ecc6badb48db6cfb1493a7607763)",
        "before_after_code_files": [
          "apps/srp.c||apps/srp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/srp.c||apps/srp.c": [
          "File: apps/srp.c -> apps/srp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     int i;",
          "38:     if (id == NULL)",
          "39:         return -1;",
          "41:         for (i = 0; i < sk_OPENSSL_PSTRING_num(db->db->data); i++) {",
          "42:             pp = sk_OPENSSL_PSTRING_value(db->db->data, i);",
          "43:             if (pp[DB_srptype][0] == DB_SRP_INDEX",
          "44:                 && strcmp(id, pp[DB_srpid]) == 0)",
          "45:                 return i;",
          "47:         for (i = 0; i < sk_OPENSSL_PSTRING_num(db->db->data); i++) {",
          "48:             pp = sk_OPENSSL_PSTRING_value(db->db->data, i);",
          "",
          "[Removed Lines]",
          "40:     if (type == DB_SRP_INDEX)",
          "46:     } else",
          "",
          "[Added Lines]",
          "40:     if (type == DB_SRP_INDEX) {",
          "46:         }",
          "47:     } else {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:                 && strcmp(id, pp[DB_srpid]) == 0)",
          "52:                 return i;",
          "53:         }",
          "55:     return -1;",
          "56: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "549:                 doupdatedb = 1;",
          "550:             }",
          "551:         }",
          "553:             user = *(argv++);",
          "556:         }",
          "557:     }",
          "",
          "[Removed Lines]",
          "552:         if (--argc > 0)",
          "554:         else {",
          "555:             user = NULL;",
          "",
          "[Added Lines]",
          "554:         if (--argc > 0) {",
          "556:         } else {",
          "558:             break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d51fd8aa1dca4a0b2bc7b28c74174695bfc9113",
      "candidate_info": {
        "commit_hash": "7d51fd8aa1dca4a0b2bc7b28c74174695bfc9113",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7d51fd8aa1dca4a0b2bc7b28c74174695bfc9113",
        "files": [
          "test/recipes/80-test_cms.t"
        ],
        "message": "no-ec2m fixes\n\nFix warning and don't use binary field certificate for ECDH CMS\nkey only test.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4134)\n\n(cherry picked from commit ed5c7ea250657796517fef035e162b20eb8d3c7f)",
        "before_after_code_files": [
          "test/recipes/80-test_cms.t||test/recipes/80-test_cms.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/80-test_cms.t||test/recipes/80-test_cms.t": [
          "File: test/recipes/80-test_cms.t -> test/recipes/80-test_cms.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "353:       [ \"-encrypt\", \"-in\", $smcont,",
          "354:  \"-stream\", \"-out\", \"test.cms\",",
          "355:  catfile($smdir, \"smec1.pem\"),",
          "358:  \"-in\", \"test.cms\", \"-out\", \"smtst.txt\" ]",
          "359:     ],",
          "",
          "[Removed Lines]",
          "356:  catfile($smdir, \"smec2.pem\") ],",
          "357:       [ \"-decrypt\", \"-inkey\", catfile($smdir, \"smec2.pem\"),",
          "",
          "[Added Lines]",
          "356:  catfile($smdir, \"smec3.pem\") ],",
          "357:       [ \"-decrypt\", \"-inkey\", catfile($smdir, \"smec3.pem\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0870b2cdaa65a30645bd0cc70f7ad6e30db7a2cf",
      "candidate_info": {
        "commit_hash": "0870b2cdaa65a30645bd0cc70f7ad6e30db7a2cf",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0870b2cdaa65a30645bd0cc70f7ad6e30db7a2cf",
        "files": [
          "apps/srp.c"
        ],
        "message": "Fix srp app missing NULL termination with password callback\n\nThe password_callback() function does not necessarily NULL terminate\nthe password buffer, the caller must use the returned length but the\nsrp app uses this function as if it was doing NULL termination.\n\nThis made the -passin and -passout options of \"openssl srp\"\nfail inexpicably and randomly or even crash.\n\nFixed by enlarging the buffer by one, so that the maximum password length\nremains unchanged, and adding NULL termination upon return.\n\n[Rearrange code for coding style compliance in process.]\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3475)\n\n(cherry picked from commit 0e83981d61fc435f42d4bb4d774272b69556b7bc)",
        "before_after_code_files": [
          "apps/srp.c||apps/srp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/srp.c||apps/srp.c": [
          "File: apps/srp.c -> apps/srp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:                              char *srp_usersalt, const char *g, const char *N,",
          "120:                              const char *passin, int verbose)",
          "121: {",
          "123:     PW_CB_DATA cb_tmp;",
          "124:     char *verifier = NULL;",
          "125:     char *gNid = NULL;",
          "127:     cb_tmp.prompt_info = user;",
          "128:     cb_tmp.password = passin;",
          "131:         if (verbose)",
          "132:             BIO_printf(bio_err,",
          "133:                        \"Validating\\n   user=\\\"%s\\\"\\n srp_verifier=\\\"%s\\\"\\n srp_usersalt=\\\"%s\\\"\\n g=\\\"%s\\\"\\n N=\\\"%s\\\"\\n\",",
          "134:                        user, srp_verifier, srp_usersalt, g, N);",
          "137:         OPENSSL_assert(srp_usersalt != NULL);",
          "142:             BIO_printf(bio_err, \"Internal error validating SRP verifier\\n\");",
          "143:         } else {",
          "144:             if (strcmp(verifier, srp_verifier))",
          "145:                 gNid = NULL;",
          "146:             OPENSSL_free(verifier);",
          "147:         }",
          "148:     }",
          "149:     return gNid;",
          "150: }",
          "",
          "[Removed Lines]",
          "122:     char password[1024];",
          "130:     if (password_callback(password, sizeof(password), 0, &cb_tmp) > 0) {",
          "135:         BIO_printf(bio_err, \"Pass %s\\n\", password);",
          "138:         if (!",
          "139:             (gNid =",
          "140:              SRP_create_verifier(user, password, &srp_usersalt, &verifier, N,",
          "141:                                  g))) {",
          "",
          "[Added Lines]",
          "122:     char password[1025];",
          "126:     int len;",
          "131:     len = password_callback(password, sizeof(password)-1, 0, &cb_tmp);",
          "132:     if (len > 0) {",
          "133:         password[len] = 0;",
          "138:         if (verbose > 1)",
          "139:             BIO_printf(bio_err, \"Pass %s\\n\", password);",
          "142:         if (!(gNid = SRP_create_verifier(user, password, &srp_usersalt,",
          "143:                                          &verifier, N, g)) ) {",
          "150:         OPENSSL_cleanse(password, len);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:                              char **srp_usersalt, char *g, char *N,",
          "154:                              char *passout, int verbose)",
          "155: {",
          "157:     PW_CB_DATA cb_tmp;",
          "158:     char *gNid = NULL;",
          "159:     char *salt = NULL;",
          "160:     cb_tmp.prompt_info = user;",
          "161:     cb_tmp.password = passout;",
          "164:         if (verbose)",
          "165:             BIO_printf(bio_err, \"Creating\\n user=\\\"%s\\\"\\n g=\\\"%s\\\"\\n N=\\\"%s\\\"\\n\",",
          "166:                        user, g, N);",
          "171:             BIO_printf(bio_err, \"Internal error creating SRP verifier\\n\");",
          "174:         if (verbose > 1)",
          "178:     }",
          "179:     return gNid;",
          "",
          "[Removed Lines]",
          "156:     char password[1024];",
          "163:     if (password_callback(password, sizeof(password), 1, &cb_tmp) > 0) {",
          "167:         if (!",
          "168:             (gNid =",
          "169:              SRP_create_verifier(user, password, &salt, srp_verifier, N,",
          "170:                                  g))) {",
          "172:         } else",
          "175:             BIO_printf(bio_err, \"gNid=%s salt =\\\"%s\\\"\\n verifier =\\\"%s\\\"\\n\", gNid,",
          "176:                        salt, *srp_verifier);",
          "",
          "[Added Lines]",
          "159:     char password[1025];",
          "163:     int len;",
          "167:     len = password_callback(password, sizeof(password)-1, 1, &cb_tmp);",
          "168:     if (len > 0) {",
          "169:         password[len] = 0;",
          "173:         if (!(gNid = SRP_create_verifier(user, password, &salt,",
          "174:                                          srp_verifier, N, g)) ) {",
          "176:         } else {",
          "178:         }",
          "179:         OPENSSL_cleanse(password, len);",
          "181:             BIO_printf(bio_err, \"gNid=%s salt =\\\"%s\\\"\\n verifier =\\\"%s\\\"\\n\",",
          "182:                        gNid, salt, *srp_verifier);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "251:         case OPT_LIST:",
          "252:             if (mode != OPT_ERR) {",
          "253:                 BIO_printf(bio_err,",
          "255:                            prog);",
          "256:                 goto opthelp;",
          "257:             }",
          "",
          "[Removed Lines]",
          "254:                            \"%s: Only one of -add/delete-modify/-list\\n\",",
          "",
          "[Added Lines]",
          "260:                            \"%s: Only one of -add/-delete/-modify/-list\\n\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "293:                    \"Need at least one user for options -add, -delete, -modify. \\n\");",
          "294:         goto opthelp;",
          "295:     }",
          "297:         BIO_printf(bio_err,",
          "298:                    \"-passin, -passout arguments only valid with one user.\\n\");",
          "299:         goto opthelp;",
          "",
          "[Removed Lines]",
          "296:     if ((passin || passout) && argc != 1) {",
          "",
          "[Added Lines]",
          "302:     if ((passinarg || passoutarg) && argc != 1) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f5083071528eb58f107d22ce91b47a352143dca",
      "candidate_info": {
        "commit_hash": "6f5083071528eb58f107d22ce91b47a352143dca",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6f5083071528eb58f107d22ce91b47a352143dca",
        "files": [
          "Configurations/windows-makefile.tmpl"
        ],
        "message": "Configurations/windows-makefile.tmpl: canonicalise configured paths\n\nThis avoids issues that can come with an ending backslash, among other.\n\nFixes #4458\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4461)\n\n(cherry picked from commit dc6a62d5d5de905776433ab8ab6b1b2fffaae1ea)",
        "before_after_code_files": [
          "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl": [
          "File: Configurations/windows-makefile.tmpl -> Configurations/windows-makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: INSTALLTOP_dev={- # $prefix is used in the OPENSSLDIR perl snippet",
          "109:                   #",
          "110:                   use File::Spec::Functions qw(:DEFAULT splitpath);",
          "112:                   our ($prefix_dev, $prefix_dir, $prefix_file) =",
          "113:                       splitpath($prefix, 1);",
          "114:                   $prefix_dev -}",
          "116: OPENSSLDIR_dev={- #",
          "117:                   # The logic here is that if no --openssldir was given,",
          "118:                   # OPENSSLDIR will get the value from $prefix plus \"/ssl\".",
          "",
          "[Removed Lines]",
          "111:                   our $prefix = $config{prefix} || \"$win_installroot\\\\OpenSSL\";",
          "115: INSTALLTOP_dir={- $prefix_dir -}",
          "",
          "[Added Lines]",
          "111:                   our $prefix = canonpath($config{prefix}",
          "112:                                           || \"$win_installroot\\\\OpenSSL\");",
          "116: INSTALLTOP_dir={- canonpath($prefix_dir) -}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:                   our $openssldir =",
          "127:                       $config{openssldir} ?",
          "128:                           (file_name_is_absolute($config{openssldir}) ?",
          "130:                                : catdir($prefix, $config{openssldir}))",
          "132:                   our ($openssldir_dev, $openssldir_dir, $openssldir_file) =",
          "133:                       splitpath($openssldir, 1);",
          "134:                   $openssldir_dev -}",
          "136: LIBDIR={- our $libdir = $config{libdir} || \"lib\";",
          "137:           $libdir -}",
          "138: ENGINESDIR_dev={- use File::Spec::Functions qw(:DEFAULT splitpath);",
          "",
          "[Removed Lines]",
          "129:                                $config{openssldir}",
          "131:                           : \"$win_commonroot\\\\SSL\";",
          "135: OPENSSLDIR_dir={- $openssldir_dir -}",
          "",
          "[Added Lines]",
          "130:                                canonpath($config{openssldir})",
          "132:                           : canonpath(\"$win_commonroot\\\\SSL\");",
          "136: OPENSSLDIR_dir={- canonpath($openssldir_dir) -}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "140:                   our ($enginesdir_dev, $enginesdir_dir, $enginesdir_file) =",
          "141:                       splitpath($enginesdir, 1);",
          "142:                   $enginesdir_dev -}",
          "144: !IF \"$(DESTDIR)\" != \"\"",
          "145: INSTALLTOP=$(DESTDIR)$(INSTALLTOP_dir)",
          "146: OPENSSLDIR=$(DESTDIR)$(OPENSSLDIR_dir)",
          "",
          "[Removed Lines]",
          "143: ENGINESDIR_dir={- $enginesdir_dir -}",
          "",
          "[Added Lines]",
          "144: ENGINESDIR_dir={- canonpath($enginesdir_dir) -}",
          "",
          "---------------"
        ]
      }
    }
  ]
}