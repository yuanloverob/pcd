{
  "cve_id": "CVE-2020-15900",
  "cve_desc": "A memory corruption issue was found in Artifex Ghostscript 9.50 and 9.52. Use of a non-standard PostScript operator can allow overriding of file access controls. The 'rsearch' calculation for the 'post' size resulted in a size that was too large, and could underflow to max uint32_t. This was fixed in commit 5d499272b95a6b890a1397e11d20937de000d31b.",
  "repo": "ArtifexSoftware/ghostpdl",
  "patch_hash": "5d499272b95a6b890a1397e11d20937de000d31b",
  "patch_info": {
    "commit_hash": "5d499272b95a6b890a1397e11d20937de000d31b",
    "repo": "ArtifexSoftware/ghostpdl",
    "commit_url": "https://github.com/ArtifexSoftware/ghostpdl/commit/5d499272b95a6b890a1397e11d20937de000d31b",
    "files": [
      "psi/zstring.c"
    ],
    "message": "Bug 702582, CVE 2020-15900 Memory Corruption in Ghostscript 9.52\n\nFix the 'rsearch' calculation for the 'post' size to give the correct\nsize.  Previous calculation would result in a size that was too large,\nand could underflow to max uint32_t. Also fix 'rsearch' to return the\ncorrect 'pre' string with empty string match.\n\nA future change may 'undefine' this undocumented, non-standard operator\nduring initialization as we do with the many other non-standard internal\nPostScript operators and procedures.",
    "before_after_code_files": [
      "psi/zstring.c||psi/zstring.c"
    ]
  },
  "patch_diff": {
    "psi/zstring.c||psi/zstring.c": [
      "File: psi/zstring.c -> psi/zstring.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "142:     return 0;",
      "143: found:",
      "144:     op->tas.type_attrs = op1->tas.type_attrs;",
      "147:     push(2);",
      "152:     make_true(op);",
      "153:     return 0;",
      "154: }",
      "",
      "[Removed Lines]",
      "145:     op->value.bytes = ptr;",
      "146:     r_set_size(op, size);",
      "148:     op[-1] = *op1;",
      "149:     r_set_size(op - 1, ptr - op[-1].value.bytes);",
      "150:     op1->value.bytes = ptr + size;",
      "151:     r_set_size(op1, count + (!forward ? (size - 1) : 0));",
      "",
      "[Added Lines]",
      "150:     if (forward) {",
      "153:     } else {",
      "156:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7eab8141718744cf533667dcf024b4f2bd47b458",
      "candidate_info": {
        "commit_hash": "7eab8141718744cf533667dcf024b4f2bd47b458",
        "repo": "ArtifexSoftware/ghostpdl",
        "commit_url": "https://github.com/ArtifexSoftware/ghostpdl/commit/7eab8141718744cf533667dcf024b4f2bd47b458",
        "files": [
          "psi/zstring.c"
        ],
        "message": "Bug 702582, CVE 2020-15900 Memory Corruption in Ghostscript 9.52\n\nFix the 'rsearch' calculation for the 'post' size to give the correct\nsize.  Previous calculation would result in a size that was too large,\nand could underflow to max uint32_t. Also fix 'rsearch' to return the\ncorrect 'pre' string with empty string match.\n\nA future change may 'undefine' this undocumented, non-standard operator\nduring initialization as we do with the many other non-standard internal\nPostScript operators and procedures.",
        "before_after_code_files": [
          "psi/zstring.c||psi/zstring.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "psi/zstring.c||psi/zstring.c"
          ],
          "candidate": [
            "psi/zstring.c||psi/zstring.c"
          ]
        }
      },
      "candidate_diff": {
        "psi/zstring.c||psi/zstring.c": [
          "File: psi/zstring.c -> psi/zstring.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:     return 0;",
          "143: found:",
          "144:     op->tas.type_attrs = op1->tas.type_attrs;",
          "147:     push(2);",
          "152:     make_true(op);",
          "153:     return 0;",
          "154: }",
          "",
          "[Removed Lines]",
          "145:     op->value.bytes = ptr;",
          "146:     r_set_size(op, size);",
          "148:     op[-1] = *op1;",
          "149:     r_set_size(op - 1, ptr - op[-1].value.bytes);",
          "150:     op1->value.bytes = ptr + size;",
          "151:     r_set_size(op1, count + (!forward ? (size - 1) : 0));",
          "",
          "[Added Lines]",
          "150:     if (forward) {",
          "153:     } else {",
          "156:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}