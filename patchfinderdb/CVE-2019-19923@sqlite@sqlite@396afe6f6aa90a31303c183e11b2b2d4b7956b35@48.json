{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e2d2ad6ece4611d7e548e14ab61bf0fe1d70bf11",
      "candidate_info": {
        "commit_hash": "e2d2ad6ece4611d7e548e14ab61bf0fe1d70bf11",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e2d2ad6ece4611d7e548e14ab61bf0fe1d70bf11",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Update the test/fuzzdata8.db database with new interesting cases from dbsqlfuzz.\n\nFossilOrigin-Name: e467e4c8fa256ddd6c26c1f21bc26289a21f18b781737eaf706bc813ed8234fa",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b0da6e0dd1f9a9ba7646ee6bb3c14945e570303c9a42d20fa8a653570e12c3f9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "59145813d20c9bf91775928d4899eab20fb93f0d",
      "candidate_info": {
        "commit_hash": "59145813d20c9bf91775928d4899eab20fb93f0d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/59145813d20c9bf91775928d4899eab20fb93f0d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/with1.test"
        ],
        "message": "Renumber the Select.selId values in the copies of SELECT statements that implement VIEWs when the VIEW is expanded, so that when the same VIEW is used twice in the same join, each expansion as a distinct selId. This fixes ticket [ce823231949d3abf42453c8].\n\nFossilOrigin-Name: 3cacc4b940fd69776d930deec9512df47a2f22cb04fb955e354a0b25bdec287c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/with1.test||test/with1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 42af7c819bc52ccb6953a58b1c05d3bd47cc438c5119a9555b1b796764eb9f20",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4843:   if( (selFlags & SF_Expanded)!=0 ){",
          "4844:     return WRC_Prune;",
          "4845:   }",
          "4846:   pTabList = p->pSrc;",
          "4847:   pEList = p->pEList;",
          "4848:   sqlite3WithPush(pParse, p->pWith, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4846:   if( pWalker->eCode ){",
          "4848:     p->selId = ++pParse->nSelect;",
          "4849:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4892: #if !defined(SQLITE_OMIT_VIEW) || !defined (SQLITE_OMIT_VIRTUALTABLE)",
          "4893:       if( IsVirtual(pTab) || pTab->pSelect ){",
          "4894:         i16 nCol;",
          "4895:         if( sqlite3ViewGetColumnNames(pParse, pTab) ) return WRC_Abort;",
          "4896:         assert( pFrom->pSelect==0 );",
          "4897:         pFrom->pSelect = sqlite3SelectDup(db, pTab->pSelect, 0);",
          "4898:         nCol = pTab->nCol;",
          "4899:         pTab->nCol = -1;",
          "4900:         sqlite3WalkSelect(pWalker, pFrom->pSelect);",
          "4901:         pTab->nCol = nCol;",
          "4902:       }",
          "4903: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4899:         u8 eCodeOrig = pWalker->eCode;",
          "4907:         pWalker->eCode = eCodeOrig;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5147:   }",
          "5148:   w.xSelectCallback = selectExpander;",
          "5149:   w.xSelectCallback2 = selectPopWith;",
          "5150:   sqlite3WalkSelect(&w, pSelect);",
          "5151: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5157:   w.eCode = 0;",
          "",
          "---------------"
        ],
        "test/with1.test||test/with1.test": [
          "File: test/with1.test -> test/with1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1091:   SELECT 4 FROM c,c,c,c,c,c,c,c,c;",
          "1092: } {1 {too many FROM clause terms, max: 200}}",
          "1094: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1094: # 2019-05-22",
          "1095: # ticket https://www.sqlite.org/src/tktview/ce823231949d3abf42453c8f20",
          "1096: #",
          "1097: sqlite3 db :memory:",
          "1098: do_execsql_test 23.1 {",
          "1099:   CREATE TABLE t1(id INTEGER NULL PRIMARY KEY, name Text);",
          "1100:   INSERT INTO t1 VALUES (1, 'john');",
          "1101:   INSERT INTO t1 VALUES (2, 'james');",
          "1102:   INSERT INTO t1 VALUES (3, 'jingle');",
          "1103:   INSERT INTO t1 VALUES (4, 'himer');",
          "1104:   INSERT INTO t1 VALUES (5, 'smith');",
          "1105:   CREATE VIEW v2 AS",
          "1106:     WITH t4(Name) AS (VALUES ('A'), ('B'))",
          "1107:     SELECT Name Name FROM t4;",
          "1108:   CREATE VIEW v3 AS",
          "1109:     WITH t4(Att, Val, Act) AS (VALUES",
          "1110:       ('C', 'D', 'E'),",
          "1111:       ('F', 'G', 'H')",
          "1112:     )",
          "1113:     SELECT D.Id Id, P.Name Protocol, T.Att Att, T.Val Val, T.Act Act",
          "1114:     FROM t1 D",
          "1115:     CROSS JOIN v2 P",
          "1116:     CROSS JOIN t4 T;",
          "1117:   SELECT * FROM v3;",
          "1118: } {1 A C D E 1 A F G H 1 B C D E 1 B F G H 2 A C D E 2 A F G H 2 B C D E 2 B F G H 3 A C D E 3 A F G H 3 B C D E 3 B F G H 4 A C D E 4 A F G H 4 B C D E 4 B F G H 5 A C D E 5 A F G H 5 B C D E 5 B F G H}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e7acce66b2f3bedc07e99ddf60bd3551e7bc6242",
      "candidate_info": {
        "commit_hash": "e7acce66b2f3bedc07e99ddf60bd3551e7bc6242",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e7acce66b2f3bedc07e99ddf60bd3551e7bc6242",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Avoid a buffer overread in ptrmapPutOvflPtr() that can occurs in a corrupt database file that has large entries and uses autovacuum.\n\nFossilOrigin-Name: f8b781cf41800e9f61a1c5376404a97e76a2bbbcaa17396d42be62f731363947",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fc9791ea987352e3e1322fbb7f833c23b402432af8249f9d397c6f7456788637",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1369:   assert( pCell!=0 );",
          "1370:   pPage->xParseCell(pPage, pCell, &info);",
          "1371:   if( info.nLocal<info.nPayload ){",
          "1373:     ptrmapPut(pPage->pBt, ovfl, PTRMAP_OVERFLOW1, pPage->pgno, pRC);",
          "1374:   }",
          "1375: }",
          "",
          "[Removed Lines]",
          "1372:     Pgno ovfl = get4byte(&pCell[info.nSize-4]);",
          "",
          "[Added Lines]",
          "1372:     Pgno ovfl;",
          "1373:     if( SQLITE_WITHIN(pPage->aDataEnd, pCell, pCell+info.nLocal) ){",
          "1375:       return;",
          "1376:     }",
          "1377:     ovfl = get4byte(&pCell[info.nSize-4]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e2081dd859867674dccd51b95d77d42fdada14cf",
      "candidate_info": {
        "commit_hash": "e2081dd859867674dccd51b95d77d42fdada14cf",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e2081dd859867674dccd51b95d77d42fdada14cf",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/dbfuzz001.test"
        ],
        "message": "Partially revert the test file changes in [4371a0c46e]. It is no longer required following [93ae382e97c23c90].\n\nFossilOrigin-Name: 593a7e6e20a2f91fe3497edd7effad50ac876f7f03c9222e332dfeb43d26882e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/dbfuzz001.test||test/dbfuzz001.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6fc0deffa4eed902fd13eefe6d2765f338f3dadc5b29f7cae5064e135417746b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/dbfuzz001.test||test/dbfuzz001.test": [
          "File: test/dbfuzz001.test -> test/dbfuzz001.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "189: # cause a rebalance operation, which would leave the btree in a weird",
          "190: # state that would lead to segfaults and or assertion faults.",
          "191: #",
          "195:   DELETE FROM t3 WHERE x IS NOT NULL AND +rowid=6;",
          "198: # This is a dbfuzz2-generate test case that can cause a page with",
          "199: # pPage->nCell==0 to enter the balancer.",
          "",
          "[Removed Lines]",
          "192: set res {0 {}}",
          "193: ifcapable oversize_cell_check { set res {1 {database disk image is malformed}} }",
          "194: do_catchsql_test dbfuzz001-110 {",
          "196: } $res",
          "",
          "[Added Lines]",
          "192: do_execsql_test dbfuzz001-110 {",
          "194: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "225b05795f9f9963e8c9431e3a4f1b0503a45ec1",
      "candidate_info": {
        "commit_hash": "225b05795f9f9963e8c9431e3a4f1b0503a45ec1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/225b05795f9f9963e8c9431e3a4f1b0503a45ec1",
        "files": [
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a memory leak introduced by [55c5d72a].\n\nFossilOrigin-Name: fbd681dce2905d8b8ad7948ba684b0b62d6c04be0f7a2992ee7d6836a99010de",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2569:     }",
          "2570:   }",
          "2574:   assert( *pnOut<=n1+n2+FTS3_VARINT_MAX-1 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2572:   if( rc!=SQLITE_OK ){",
          "2573:     sqlite3_free(aOut);",
          "2574:     p = aOut = 0;",
          "2575:   }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9e717c4377c0116a5d36815fbc30f8b8803f14770d30be361feb27cc5b5b537b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}