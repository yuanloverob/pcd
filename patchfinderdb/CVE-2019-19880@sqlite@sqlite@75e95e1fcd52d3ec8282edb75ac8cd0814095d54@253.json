{
  "cve_id": "CVE-2019-19880",
  "cve_desc": "exprListAppendList in window.c in SQLite 3.30.1 allows attackers to trigger an invalid pointer dereference because constant integer values in ORDER BY clauses of window definitions are mishandled.",
  "repo": "sqlite/sqlite",
  "patch_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
  "patch_info": {
    "commit_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/window.c"
    ],
    "message": "When processing constant integer values in ORDER BY clauses of window definitions (see check-in [7e4809eadfe99ebf]) be sure to fully disable the constant value to avoid an invalid pointer dereference if the expression is ever duplicated. This fixes a crash report from Yongheng and Rui.\n\nFossilOrigin-Name: 1ca0bd982ab1183bbafce0d260e4dceda5eb766ed2e7793374a88d1ae0bdd2ca",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8223e79f987feda5c8e51ec52cec6798cca16d070b10558939e2888ca1a25b8e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "895:     int nInit = pList ? pList->nExpr : 0;",
      "896:     for(i=0; i<pAppend->nExpr; i++){",
      "897:       Expr *pDup = sqlite3ExprDup(pParse->db, pAppend->a[i].pExpr, 0);",
      "898:       if( bIntToNull && pDup && pDup->op==TK_INTEGER ){",
      "899:         pDup->op = TK_NULL;",
      "900:         pDup->flags &= ~(EP_IntValue|EP_IsTrue|EP_IsFalse);",
      "901:       }",
      "902:       pList = sqlite3ExprListAppend(pParse, pList, pDup);",
      "903:       if( pList ) pList->a[nInit+i].sortFlags = pAppend->a[i].sortFlags;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "898:       assert( pDup==0 || !ExprHasProperty(pDup, EP_MemToken) );",
      "902:         pDup->u.zToken = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "91ed9ce0dd141ded4edc1e60118ddcd79828cebc",
      "candidate_info": {
        "commit_hash": "91ed9ce0dd141ded4edc1e60118ddcd79828cebc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/91ed9ce0dd141ded4edc1e60118ddcd79828cebc",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/extract-sqlite3h.tcl"
        ],
        "message": "Add a script to tool/ that will extract the sqlite3.h header file from an sqlite3.c amalgamation.\n\nFossilOrigin-Name: 38d2e510cdedf38153466b161c0842b1604aef7b5589c51f628ae7cbb6a8722a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/extract-sqlite3h.tcl||tool/extract-sqlite3h.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 25975e1fb2be0c011542c0a6b001385cec8113662df93dc618f725f2a4692bc2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/extract-sqlite3h.tcl||tool/extract-sqlite3h.tcl": [
          "File: tool/extract-sqlite3h.tcl -> tool/extract-sqlite3h.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/tclsh",
          "2: #",
          "3: # Given an sqlite3.c source file identified by the command-line",
          "4: # argument, extract the \"sqlite3.h\" header file that is embedded inside",
          "5: # the sqlite3.c source file and write it to standard output.",
          "6: #",
          "7: if {[llength $argv]!=1} {",
          "8:   puts stderr \"Usage: $argv0 sqlite3.c >sqlite3.h\"",
          "9:   exit 1",
          "10: }",
          "11: set in [open [lindex $argv 0] rb]",
          "12: while {![eof $in]} {",
          "13:   set line [gets $in]",
          "14:   if {[string match {* Begin file sqlite3.h *} $line]} break",
          "15: }",
          "16: while {![eof $in]} {",
          "17:   set line [gets $in]",
          "18:   if {[string match {* End of sqlite3.h *} $line]} break",
          "19:   puts $line",
          "20: }",
          "21: close $in",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "572b0dddeea32575f9e0ab882c9dd2c029675686",
      "candidate_info": {
        "commit_hash": "572b0dddeea32575f9e0ab882c9dd2c029675686",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/572b0dddeea32575f9e0ab882c9dd2c029675686",
        "files": [
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid",
          "src/test_hexio.c",
          "test/fts4record.test"
        ],
        "message": "Add extra tests for the handling of corrupt records in fts3.\n\nFossilOrigin-Name: 40e29a47d1266c16a4992e43579a51addcc632503099c4cd128f77dd4e67da3c",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid",
          "src/test_hexio.c||src/test_hexio.c",
          "test/fts4record.test||test/fts4record.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2580:       fts3PoslistCopy(&p, &p2);",
          "2581:       fts3GetDeltaVarint3(&p2, pEnd2, bDescDoclist, &i2);",
          "2582:     }",
          "2583:   }",
          "2585:   if( rc!=SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2584:     assert( (p-aOut)<=((p1?(p1-a1):n1)+(p2?(p2-a2):n2)+FTS3_VARINT_MAX-1) );",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 633b214e9b9d99788ed72ab4823a69a43c7c40ed07fb76c7d56c50453c0e58ab",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/test_hexio.c||src/test_hexio.c": [
          "File: src/test_hexio.c -> src/test_hexio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "337:   return (int) (q - (unsigned char *)p);",
          "338: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "340: static int putFts3Varint(char *p, sqlite_int64 v){",
          "341:   unsigned char *q = (unsigned char *) p;",
          "342:   sqlite_uint64 vu = v;",
          "343:   do{",
          "345:     vu >>= 7;",
          "346:   }while( vu!=0 );",
          "348:   assert( q - (unsigned char *)p <= 10 );",
          "349:   return (int) (q - (unsigned char *)p);",
          "350: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "367:   return TCL_OK;",
          "368: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "384: static int SQLITE_TCLAPI make_fts3record(",
          "385:   void * clientData,",
          "386:   Tcl_Interp *interp,",
          "387:   int objc,",
          "388:   Tcl_Obj *CONST objv[]",
          "389: ){",
          "390:   Tcl_Obj **aArg = 0;",
          "391:   int nArg = 0;",
          "392:   unsigned char *aOut = 0;",
          "393:   int nOut = 0;",
          "394:   int nAlloc = 0;",
          "395:   int i;",
          "396:   int rc = TCL_OK;",
          "398:   if( objc!=2 ){",
          "399:     Tcl_WrongNumArgs(interp, 1, objv, \"LIST\");",
          "400:     return TCL_ERROR;",
          "401:   }",
          "402:   if( Tcl_ListObjGetElements(interp, objv[1], &nArg, &aArg) ){",
          "403:     return TCL_ERROR;",
          "404:   }",
          "406:   for(i=0; i<nArg; i++){",
          "407:     sqlite3_int64 iVal;",
          "408:     if( TCL_OK==Tcl_GetWideIntFromObj(0, aArg[i], &iVal) ){",
          "409:       if( nOut+10>nAlloc ){",
          "410:         int nNew = nAlloc?nAlloc*2:128;",
          "411:         unsigned char *aNew = sqlite3_realloc(aOut, nNew);",
          "412:         if( aNew==0 ){",
          "413:           sqlite3_free(aOut);",
          "414:           return TCL_ERROR;",
          "415:         }",
          "416:         aOut = aNew;",
          "417:         nAlloc = nNew;",
          "418:       }",
          "419:       nOut += putFts3Varint((char*)&aOut[nOut], iVal);",
          "420:     }else{",
          "421:       int nVal = 0;",
          "422:       char *zVal = Tcl_GetStringFromObj(aArg[i], &nVal);",
          "423:       while( (nOut + nVal)>nAlloc ){",
          "424:         int nNew = nAlloc?nAlloc*2:128;",
          "425:         unsigned char *aNew = sqlite3_realloc(aOut, nNew);",
          "426:         if( aNew==0 ){",
          "427:           sqlite3_free(aOut);",
          "428:           return TCL_ERROR;",
          "429:         }",
          "430:         aOut = aNew;",
          "431:         nAlloc = nNew;",
          "432:       }",
          "433:       memcpy(&aOut[nOut], zVal, nVal);",
          "434:       nOut += nVal;",
          "435:     }",
          "436:   }",
          "438:   Tcl_SetObjResult(interp, Tcl_NewByteArrayObj(aOut, nOut));",
          "439:   sqlite3_free(aOut);",
          "440:   return TCL_OK;",
          "441: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "383:      { \"hexio_render_int32\",           hexio_render_int32    },",
          "384:      { \"utf8_to_utf8\",                 utf8_to_utf8          },",
          "385:      { \"read_fts3varint\",              read_fts3varint       },",
          "386:   };",
          "387:   int i;",
          "388:   for(i=0; i<sizeof(aObjCmd)/sizeof(aObjCmd[0]); i++){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "459:      { \"make_fts3record\",              make_fts3record       },",
          "",
          "---------------"
        ],
        "test/fts4record.test||test/fts4record.test": [
          "File: test/fts4record.test -> test/fts4record.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019 September 18",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #*************************************************************************",
          "11: # This file implements regression tests for SQLite library.  The",
          "12: # focus of this script is testing the FTS4 module.",
          "13: #",
          "14: #",
          "16: set testdir [file dirname $argv0]",
          "17: source $testdir/tester.tcl",
          "18: source $testdir/fts3_common.tcl",
          "19: set testprefix fts4record",
          "21: # If SQLITE_ENABLE_FTS3 is defined, omit this file.",
          "22: ifcapable !fts3 {",
          "23:   finish_test",
          "24:   return",
          "25: }",
          "27: sqlite3_fts3_may_be_corrupt 1",
          "29: do_execsql_test 1.0 {",
          "30:   CREATE VIRTUAL TABLE t1 USING fts4(x);",
          "31:   INSERT INTO t1 VALUES('terma terma terma termb');",
          "32: }",
          "34: do_execsql_test 1.1 {",
          "35:   SELECT quote(root) FROM t1_segdir",
          "36: } {",
          "37:   X'00057465726D6105010203030004016203010500'",
          "38: }",
          "40: proc make_record_wrapper {args} { make_fts3record $args }",
          "41: db func record make_record_wrapper",
          "43: do_execsql_test 1.2 {",
          "44:   select quote(",
          "45:     record(0,    5, 'terma', 5, 1, 2, 3, 3, 0,",
          "46:               4, 1, 'b'    , 3, 1, 5, 0",
          "47:   ) );",
          "48: } {",
          "49:   X'00057465726D6105010203030004016203010500'",
          "50: }",
          "52: do_execsql_test 1.3.1 {",
          "53:   UPDATE t1_segdir SET root =",
          "54:     record(0,    5, 'terma', 5, 1, 2, 3, 3, 0,",
          "55:               4, 1, 'b'    , 3, 1, 5,",
          "56:               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
          "57:               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
          "58:               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0",
          "59:           );",
          "60: }",
          "62: do_catchsql_test 1.3.2 {",
          "63:   SELECT snippet(t1) FROM t1 WHERE t1 MATCH 'term*'",
          "64: } {1 {database disk image is malformed}}",
          "66: do_execsql_test 1.4.1 {",
          "67:   UPDATE t1_segdir SET root =",
          "68:     record(0,    5, 'terma', 5, 1, 2, 3, 3, 0,",
          "69:               4, 1, 'b'    , 4, 1, 5,",
          "70:               256, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
          "71:               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
          "72:               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0",
          "73:           );",
          "74: }",
          "76: do_catchsql_test 1.4.2 {",
          "77:   SELECT snippet(t1) FROM t1 WHERE t1 MATCH 'term*'",
          "78: } {1 {database disk image is malformed}}",
          "80: do_execsql_test 1.4.3 {",
          "81:   SELECT quote(root) FROM t1_segdir",
          "82: } {",
          "83:   X'00057465726D610501020303000401620401058002010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100'",
          "84: }",
          "86: do_execsql_test 1.5.1 {",
          "87:   UPDATE t1_segdir SET root =",
          "88:     record(0,    5, 'terma', 5, 1, 2, 3, 3, 0,",
          "89:               4, 1, 'b'    , 4, 1, 5,",
          "90:               256, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
          "91:               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,",
          "92:               1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0",
          "93:           );",
          "94: }",
          "96: do_catchsql_test 1.4.2 {",
          "97:   SELECT snippet(t1) FROM t1 WHERE t1 MATCH 'term*'",
          "98: } {1 {database disk image is malformed}}",
          "100: do_execsql_test 1.4.3 {",
          "101:   SELECT quote(root) FROM t1_segdir",
          "102: } {",
          "103:   X'00057465726D610501020303000401620401058002010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100'",
          "104: }",
          "107: do_execsql_test 1.5.1 {",
          "108:   UPDATE t1_segdir SET root =",
          "109:   X'00057465726D61050102030300040162040105FF00010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100'",
          "110: }",
          "112: do_catchsql_test 1.5.2 {",
          "113:   SELECT snippet(t1) FROM t1 WHERE t1 MATCH 'term*'",
          "114: } {1 {database disk image is malformed}}",
          "116: do_catchsql_test 1.5.3 {",
          "117:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "118: } {1 {database disk image is malformed}}",
          "120: finish_test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53d30dd371832c13a62312b339cb0a86b1012b20",
      "candidate_info": {
        "commit_hash": "53d30dd371832c13a62312b339cb0a86b1012b20",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/53d30dd371832c13a62312b339cb0a86b1012b20",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "src/btree.h",
          "src/vdbemem.c"
        ],
        "message": "Early detection of implausibly sized records to avoid unnecessary large memory allocations.\n\nFossilOrigin-Name: 2c8769c69f301307db6663adb8b7c0b89f5959516bf6110cb8ff4b21bd903f70",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "src/btree.h||src/btree.h",
          "src/vdbemem.c||src/vdbemem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ada91aefe37efe3c009691b5599e4d6acf182e5ec3cf28dda0871d09858498b3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4519:   return pCur->info.nPayload;",
          "4520: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4535: sqlite3_int64 sqlite3BtreeMaxRecordSize(BtCursor *pCur){",
          "4536:   assert( cursorHoldsMutex(pCur) );",
          "4537:   assert( pCur->eState==CURSOR_VALID );",
          "4538:   return pCur->pBt->pageSize * (sqlite3_int64)pCur->pBt->nPage;",
          "4539: }",
          "",
          "---------------"
        ],
        "src/btree.h||src/btree.h": [
          "File: src/btree.h -> src/btree.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "315: int sqlite3BtreePayload(BtCursor*, u32 offset, u32 amt, void*);",
          "316: const void *sqlite3BtreePayloadFetch(BtCursor*, u32 *pAmt);",
          "317: u32 sqlite3BtreePayloadSize(BtCursor*);",
          "319: char *sqlite3BtreeIntegrityCheck(Btree*, int *aRoot, int nRoot, int, int*);",
          "320: struct Pager *sqlite3BtreePager(Btree*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318: sqlite3_int64 sqlite3BtreeMaxRecordSize(BtCursor*);",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1124: ){",
          "1125:   int rc;",
          "1126:   pMem->flags = MEM_Null;",
          "1127:   if( SQLITE_OK==(rc = sqlite3VdbeMemClearAndResize(pMem, amt+1)) ){",
          "1128:     rc = sqlite3BtreePayload(pCur, offset, amt, pMem->z);",
          "1129:     if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1127:   if( sqlite3BtreeMaxRecordSize(pCur)<offset+amt ){",
          "1128:     return SQLITE_CORRUPT_BKPT;",
          "1129:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7b846e4ed54c7859d022d12cfaa6510dbb1ac28",
      "candidate_info": {
        "commit_hash": "f7b846e4ed54c7859d022d12cfaa6510dbb1ac28",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f7b846e4ed54c7859d022d12cfaa6510dbb1ac28",
        "files": [
          "Makefile.in",
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "src/pager.c",
          "src/shell.c.in",
          "src/sqlite.h.in",
          "src/test1.c",
          "src/vdbeapi.c",
          "test/capi3d.test",
          "test/fts3corrupt4.test",
          "test/fuzzdata7.db",
          "test/fuzzdata8.db",
          "tool/extract-sqlite3h.tcl",
          "tool/showdb.c"
        ],
        "message": "Merge latest trunk changes into this branch.\n\nFossilOrigin-Name: 53ea550ce759ae4683bcf0ae3af655bfe04f85db70f74edee6bcab56d83bb041",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "src/pager.c||src/pager.c",
          "src/shell.c.in||src/shell.c.in",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/test1.c||src/test1.c",
          "src/vdbeapi.c||src/vdbeapi.c",
          "test/capi3d.test||test/capi3d.test",
          "test/fts3corrupt4.test||test/fts3corrupt4.test",
          "tool/extract-sqlite3h.tcl||tool/extract-sqlite3h.tcl",
          "tool/showdb.c||tool/showdb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1149: rtree.lo: $(TOP)/ext/rtree/rtree.c $(HDR) $(EXTHDR)",
          "1150:  $(LTCOMPILE) -DSQLITE_CORE -c $(TOP)/ext/rtree/rtree.c",
          "1153:  $(LTCOMPILE) -DSQLITE_CORE -c $(TOP)/ext/userauth/userauth.c",
          "1156:  $(LTCOMPILE) -DSQLITE_CORE -c $(TOP)/ext/session/sqlite3session.c",
          "1158: json1.lo: $(TOP)/ext/misc/json1.c",
          "",
          "[Removed Lines]",
          "1152: sqlite3session.lo: $(TOP)/ext/userauth/userauth.c $(HDR) $(EXTHDR)",
          "1155: userauth.lo: $(TOP)/ext/session/sqlite3session.c $(HDR) $(EXTHDR)",
          "",
          "[Added Lines]",
          "1152: userauth.lo: $(TOP)/ext/userauth/userauth.c $(HDR) $(EXTHDR)",
          "1155: sqlite3session.lo: $(TOP)/ext/session/sqlite3session.c $(HDR) $(EXTHDR)",
          "",
          "---------------"
        ],
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1873:     zCsr += fts3GetVarint32(zCsr, &nSuffix);",
          "1875:     assert( nPrefix>=0 && nSuffix>=0 );",
          "1877:       rc = FTS_CORRUPT_VTAB;",
          "1878:       goto finish_scan;",
          "1879:     }",
          "",
          "[Removed Lines]",
          "1876:     if( nPrefix>zCsr-zNode || nSuffix>zEnd-zCsr ){",
          "",
          "[Added Lines]",
          "1876:     if( nPrefix>zCsr-zNode || nSuffix>zEnd-zCsr || nSuffix==0 ){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2872702dacadad11f4fd7c437b77ef82763e840c9c92eefe87eac2491c38f963",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5552:             sqlite3_free(pCellKey);",
          "5553:             goto moveto_finish;",
          "5554:           }",
          "5556:           sqlite3_free(pCellKey);",
          "5557:         }",
          "5558:         assert(",
          "",
          "[Removed Lines]",
          "5555:           c = xRecordCompare(nCell, pCellKey, pIdxKey);",
          "",
          "[Added Lines]",
          "5555:           c = sqlite3VdbeRecordCompare(nCell, pCellKey, pIdxKey);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7152:     int iCell = (iOld + pPg->aiOvfl[i]) - iNew;",
          "7153:     if( iCell>=0 && iCell<nNew ){",
          "7154:       pCellptr = &pPg->aCellIdx[iCell * 2];",
          "7157:       nCell++;",
          "7158:       if( pageInsertArray(",
          "7159:             pPg, pBegin, &pData, pCellptr,",
          "",
          "[Removed Lines]",
          "7155:       assert( nCell>=iCell );",
          "7156:       memmove(&pCellptr[2], pCellptr, (nCell - iCell) * 2);",
          "",
          "[Added Lines]",
          "7155:       if( nCell>iCell ){",
          "7156:         memmove(&pCellptr[2], pCellptr, (nCell - iCell) * 2);",
          "7157:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9268:   assert( sqlite3BtreeHoldsMutex(p) );",
          "9269:   assert( p->inTrans==TRANS_WRITE );",
          "9270:   assert( iTable>=2 );",
          "9272:   rc = btreeGetPage(pBt, (Pgno)iTable, &pPage, 0);",
          "9273:   if( rc ) return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9272:   if( iTable>btreePagecount(pBt) ){",
          "9273:     return SQLITE_CORRUPT_BKPT;",
          "9274:   }",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7178:   pPg->flags &= ~PGHDR_NEED_SYNC;",
          "7179:   pPgOld = sqlite3PagerLookup(pPager, pgno);",
          "7181:   if( pPgOld ){",
          "7182:     pPg->flags |= (pPgOld->flags&PGHDR_NEED_SYNC);",
          "7183:     if( pPager->tempFile ){",
          "",
          "[Removed Lines]",
          "7180:   assert( !pPgOld || pPgOld->nRef==1 );",
          "",
          "[Added Lines]",
          "7180:   assert( !pPgOld || pPgOld->nRef==1 || CORRUPT_DB );",
          "7182:     if( pPgOld->nRef>1 ){",
          "7183:       sqlite3PagerUnrefNotNull(pPgOld);",
          "7184:       return SQLITE_CORRUPT_BKPT;",
          "7185:     }",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3058:       }",
          "3062:         sqlite3_stmt *pExplain;",
          "3063:         char *zEQP;",
          "3064:         int triggerEQP = 0;",
          "",
          "[Removed Lines]",
          "3061:       if( pArg && pArg->autoEQP && sqlite3_strlike(\"EXPLAIN%\",zStmtSql,0)!=0 ){",
          "",
          "[Added Lines]",
          "3061:       if( pArg && pArg->autoEQP && sqlite3_stmt_isexplain(pStmt)==0 ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3107:       if( pArg ){",
          "3108:         pArg->cMode = pArg->mode;",
          "3109:         if( pArg->autoExplain ){",
          "3113:             pArg->cMode = MODE_Explain;",
          "3114:           }",
          "3117:             pArg->cMode = MODE_EQP;",
          "3118:           }",
          "3119:         }",
          "",
          "[Removed Lines]",
          "3110:           if( sqlite3_column_count(pStmt)==8",
          "3111:            && sqlite3_strlike(\"EXPLAIN%\", zStmtSql,0)==0",
          "3112:           ){",
          "3115:           if( sqlite3_column_count(pStmt)==4",
          "3116:            && sqlite3_strlike(\"EXPLAIN QUERY PLAN%\", zStmtSql,0)==0 ){",
          "",
          "[Added Lines]",
          "3110:           if( sqlite3_stmt_isexplain(pStmt)==1 ){",
          "3113:           if( sqlite3_stmt_isexplain(pStmt)==2 ){",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3895: int sqlite3_stmt_readonly(sqlite3_stmt *pStmt);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3907: int sqlite3_stmt_isexplain(sqlite3_stmt *pStmt);",
          "",
          "---------------"
        ],
        "src/test1.c||src/test1.c": [
          "File: src/test1.c -> src/test1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2674:   return TCL_OK;",
          "2675: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2683: static int SQLITE_TCLAPI test_stmt_isexplain(",
          "2684:   void * clientData,",
          "2685:   Tcl_Interp *interp,",
          "2686:   int objc,",
          "2687:   Tcl_Obj *CONST objv[]",
          "2688: ){",
          "2689:   sqlite3_stmt *pStmt;",
          "2690:   int rc;",
          "2692:   if( objc!=2 ){",
          "2693:     Tcl_AppendResult(interp, \"wrong # args: should be \\\"\",",
          "2694:         Tcl_GetStringFromObj(objv[0], 0), \" STMT\", 0);",
          "2695:     return TCL_ERROR;",
          "2696:   }",
          "2698:   if( getStmtPointer(interp, Tcl_GetString(objv[1]), &pStmt) ) return TCL_ERROR;",
          "2699:   rc = sqlite3_stmt_isexplain(pStmt);",
          "2700:   Tcl_SetObjResult(interp, Tcl_NewIntObj(rc));",
          "2701:   return TCL_OK;",
          "2702: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7840: #endif",
          "7841:      { \"sqlite3_next_stmt\",             test_next_stmt     ,0 },",
          "7842:      { \"sqlite3_stmt_readonly\",         test_stmt_readonly ,0 },",
          "7843:      { \"sqlite3_stmt_busy\",             test_stmt_busy     ,0 },",
          "7844:      { \"uses_stmt_journal\",             uses_stmt_journal ,0 },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7870:      { \"sqlite3_stmt_isexplain\",        test_stmt_isexplain,0 },",
          "",
          "---------------"
        ],
        "src/vdbeapi.c||src/vdbeapi.c": [
          "File: src/vdbeapi.c -> src/vdbeapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1608:   return pStmt ? ((Vdbe*)pStmt)->readOnly : 1;",
          "1609: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1615: int sqlite3_stmt_isexplain(sqlite3_stmt *pStmt){",
          "1616:   return pStmt ? ((Vdbe*)pStmt)->explain : 0;",
          "1617: }",
          "",
          "---------------"
        ],
        "test/capi3d.test||test/capi3d.test": [
          "File: test/capi3d.test -> test/capi3d.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: test_is_readonly capi3d-2.8 {PRAGMA application_id=1234} 0",
          "116: test_is_readonly capi3d-2.9 {VACUUM} 0",
          "117: test_is_readonly capi3d-2.10 {PRAGMA integrity_check} 1",
          "119:   sqlite3_stmt_readonly 0",
          "120: } 1",
          "122: # Tests for sqlite3_stmt_busy",
          "123: #",
          "124: do_test capi3d-3.1 {",
          "",
          "[Removed Lines]",
          "118: do_test capi3-2.99 {",
          "",
          "[Added Lines]",
          "118: do_test capi3-2.49 {",
          "123: # Tests for the is-explain interface.",
          "124: #",
          "125: proc test_is_explain {testname sql truth} {",
          "126:   do_test $testname [format {",
          "127:     set DB [sqlite3_connection_pointer db]",
          "128:     set STMT [sqlite3_prepare $DB {%s} -1 TAIL]",
          "129:     set rc [sqlite3_stmt_isexplain $STMT]",
          "130:     sqlite3_finalize $STMT",
          "131:     set rc",
          "132:   } $sql] $truth",
          "133: }",
          "135: test_is_explain capi3d-2.51 {SELECT * FROM sqlite_master} 0",
          "136: test_is_explain capi3d-2.52 { explain SELECT * FROM sqlite_master} 1",
          "137: test_is_explain capi3d-2.53 {  Explain Query Plan select * FROM sqlite_master} 2",
          "138: do_test capi3-2.99 {",
          "139:   sqlite3_stmt_isexplain 0",
          "140: } 0",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "3697:     FROM t1 WHERE a MATCH 'rtree OR json1rtree OR json1';",
          "3698: } {0 {0 0 0 0 0 0 0}}",
          "3700: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3700: #-------------------------------------------------------------------------",
          "3701: reset_db",
          "3702: do_test 23.0 {",
          "3703:   sqlite3 db {}",
          "3704:   db deserialize [decode_hexdb {",
          "3705: .open --hexdb",
          "3706: | size 28672 pagesize 4096 filename crash-670b15f2955a36.db",
          "3707: | page 1 offset 0",
          "3708: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "3709: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "3710: |     32: 00 00 00 02 10 00 00 01 00 00 00 07 00 00 00 00   ................",
          "3711: |     96: 00 00 00 00 0d 0e b1 00 06 0d a4 00 0f 8d 0f 21   ...............!",
          "3712: |    112: 0e b9 0d c8 0e 7e 0d a4 00 00 00 00 00 00 00 00   .....~..........",
          "3713: |   3488: 00 00 00 00 22 07 06 17 11 11 01 31 74 61 62 6c   ...........1tabl",
          "3714: |   3504: 65 74 32 74 32 07 43 52 45 41 54 45 20 54 41 42   et2t2.CREATE TAB",
          "3715: |   3520: 4c 45 20 74 32 28 78 29 81 33 05 07 17 1f 1f 01   LE t2(x).3......",
          "3716: |   3536: 82 35 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72   .5tablet1_segdir",
          "3717: |   3552: 74 31 5f 73 65 67 64 69 72 05 43 52 45 41 54 45   t1_segdir.CREATE",
          "3718: |   3568: 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69    TABLE 't1_segdi",
          "3719: |   3584: 72 27 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 52   r'(level INTEGER",
          "3720: |   3600: 2c 69 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61   ,idx INTEGER,sta",
          "3721: |   3616: 72 74 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52   rt_block INTEGER",
          "3722: |   3632: 2c 6c 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63   ,leaves_end_bloc",
          "3723: |   3648: 6b 20 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c   k INTEGER,end_bl",
          "3724: |   3664: 6f 63 6b 20 49 4e 54 45 47 45 52 2c 72 6f 6f 74   ock INTEGER,root",
          "3725: |   3680: 20 42 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45    BLOB,PRIMARY KE",
          "3726: |   3696: 59 28 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 06   Y(level, idx))1.",
          "3727: |   3712: 06 17 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74   ..E...indexsqlit",
          "3728: |   3728: 65 5f 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73   e_autoindex_t1_s",
          "3729: |   3744: 65 67 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72   egdir_1t1_segdir",
          "3730: |   3760: 06 0f c7 00 08 00 00 00 00 66 04 07 17 23 23 01   .........f...##.",
          "3731: |   3776: 81 13 74 61 62 6c 75 74 31 5f 73 65 67 6d 65 6e   ..tablut1_segmen",
          "3732: |   3792: 74 73 74 31 5f 73 65 67 6d 65 6e 74 73 04 43 52   tst1_segments.CR",
          "3733: |   3808: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73   EATE TABLE 't1_s",
          "3734: |   3824: 65 67 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64   egments'(blockid",
          "3735: |   3840: 20 49 4e 54 45 47 45 42 20 50 52 49 4d 41 52 59    INTEGEB PRIMARY",
          "3736: |   3856: 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42    KEY, block BLOB",
          "3737: |   3872: 29 6a 03 07 17 21 21 01 81 1f 74 61 62 6c 65 74   )j...!!...tablet",
          "3738: |   3888: 31 5f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1_contentt1_cont",
          "3739: |   3904: 65 6e 74 03 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "3740: |   3920: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f    't1_content'(do",
          "3741: |   3936: 63 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   cid INTEGER PRIM",
          "3742: |   3952: 41 52 59 20 4b 45 59 2c 20 27 63 30 61 27 2c 20   ARY KEY, 'c0a',",
          "3743: |   3968: 27 63 31 62 27 2c 20 27 63 32 63 27 29 38 02 06   'c1b', 'c2c')8..",
          "3744: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "3745: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "3746: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "3747: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "3748: | page 3 offset 8192",
          "3749: |      0: 0d 00 00 00 25 0b 48 01 0f d8 00 2f 0f 86 0f 74   ....%.H..../...t",
          "3750: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "3751: |     32: 0e 8d 0e 74 0e 5a fe 40 0e 24 0e 08 0d ef 0d d5   ...t.Z.@.$......",
          "3752: |     48: 0d bb 0d a0 0d 84 0d 68 0d 4f 81 35 0d 1b 0c fb   .......h.O.5....",
          "3753: |     64: 0c da 0c b9 0c 99 0c 78 0c 57 0c 3e 00 00 00 00   .......x.W.>....",
          "3754: |   2880: 00 00 00 00 00 00 00 00 81 3f 25 06 00 82 7f 10   .........?%.....",
          "3755: |   2896: 00 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e   .COMPILER=gcc-5.",
          "3756: |   2912: 34 2e 30 20 32 30 31 36 30 36 30 39 20 44 45 42   4.0 20160609 DEB",
          "3757: |   2928: 55 47 20 45 4e 41 42 4c 45 20 44 42 53 54 41 54   UG ENABLE DBSTAT",
          "3758: |   2944: 20 56 54 41 42 20 45 4e 41 42 4c 45 20 46 54 53    VTAB ENABLE FTS",
          "3759: |   2960: 34 20 45 4e 41 42 4c 45 20 46 54 53 35 20 45 4e   4 ENABLE FTS5 EN",
          "3760: |   2976: 41 42 4c 45 20 47 45 4f 50 4f 4c 59 20 45 4e 41   ABLE GEOPOLY ENA",
          "3761: |   2992: 42 4c 45 20 4a 53 4f 4e 31 20 45 4e 41 42 4c 45   BLE JSON1 ENABLE",
          "3762: |   3008: 20 4d 45 4d 53 59 53 35 20 45 4e 41 42 4c 45 20    MEMSYS5 ENABLE",
          "3763: |   3024: 52 54 52 45 45 20 4d 41 58 20 4d 45 4d 4f 52 59   RTREE MAX MEMORY",
          "3764: |   3040: 3d 35 30 30 30 30 30 30 30 20 4f 4d 49 54 20 4c   =50000000 OMIT L",
          "3765: |   3056: 4f 41 44 20 45 58 54 45 4e 53 49 4f 4e 20 54 48   OAD EXTENSION TH",
          "3766: |   3072: 52 45 41 44 53 41 46 45 3d 30 18 24 05 00 35 0f   READSAFE=0.$..5.",
          "3767: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "3768: |   3104: 4e 41 52 59 18 23 55 00 25 0f 19 54 48 52 45 41   NARY.#U.%..THREA",
          "3769: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 22   DSAFE=0XNOCASE..",
          "3770: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 45 3d   ..%..THREADSAFE=",
          "3771: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "3772: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49 4f   IT LOAD EXTENSIO",
          "3773: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "3774: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "3775: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "3776: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "3777: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "3778: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30 30   MAX MEMORY=50000",
          "3779: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "3780: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "3781: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "3782: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "3783: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "3784: |   3360: 0f 19 45 4e 41 42 4c 44 20 52 54 52 45 45 58 42   ..ENABLD RTREEXB",
          "3785: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "3786: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 43 41 53 45 17   LE RTREEXNOCASE.",
          "3787: |   3408: 19 05 00 24 0f 17 45 4e 40 42 4c 45 20 52 54 52   ...$..EN@BLE RTR",
          "3788: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "3789: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "3790: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4d 41 42 4c   NARY....)..EMABL",
          "3791: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 4c 45   E MEMSYS5XNOCALE",
          "3792: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "3793: |   3504: 4e 53 59 53 35 58 52 54 52 49 4d 18 15 05 00 25   NSYS5XRTRIM....%",
          "3794: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "3795: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "3796: |   3552: 4c 45 20 4a 53 4f 4e 31 58 4e 4f 43 41 53 45 17   LE JSON1XNOCASE.",
          "3797: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "3798: |   3584: 4e 31 58 52 54 5f b9 4d 1a 12 05 00 29 0f 19 45   N1XRT_.M....)..E",
          "3799: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 31 4c 59 58 42 49   NABLE GEOP1LYXBI",
          "3800: |   3616: 4e 41 52 58 1a 11 05 00 29 0f 19 45 4e 41 42 4c   NARX....)..ENABL",
          "3801: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 43 41 53 45   E GEOPOLYXNOCASE",
          "3802: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 57 45   ....)..ENABLE WE",
          "3803: |   3664: 4f 50 4f 4c 59 48 52 54 52 49 4d 17 0f 05 00 23   OPOLYHRTRIM....#",
          "3804: |   3680: 0f 19 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "3805: |   3696: 4e 41 53 59 17 0e 05 00 23 0f 19 45 4e 40 42 4b   NASY....#..EN@BK",
          "3806: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0d 05   E FTS5XNOCASE...",
          "3807: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "3808: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "3809: |   3760: 4c 45 20 46 54 94 34 58 42 49 4e 41 52 59 17 0b   LE FT.4XBINARY..",
          "3810: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 43 70 46 54 53 34   ..#..ENABLCpFTS4",
          "3811: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "3812: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "3813: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "3814: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "3815: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 32 53   ...1..ENABLE D2S",
          "3816: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "3817: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "3818: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   TAT VTABXRTRIM..",
          "3819: |   3920: 05 0b 27 0f 19 44 45 42 55 47 58 42 49 4e 41 52   ..'..DEBUGXBINAR",
          "3820: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "3821: |   3952: 43 41 53 45 10 03 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "3822: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "3823: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "3824: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "3825: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 35 52 3d 67   ...C..COMPIL5R=g",
          "3826: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "3827: |   4048: 39 58 4e 4f 43 41 53 45 26 01 05 00 43 0f 02 43   9XNOCASE&...C..C",
          "3828: |   4064: 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPILER=gcc-5.4.",
          "3829: |   4080: 30 20 32 30 31 36 30 36 30 39 58 00 00 00 00 00   0 20160609X.....",
          "3830: | page 5 offset 16384",
          "3831: |      0: 0d 00 00 00 02 0b a0 00 0c ad 0b a0 00 00 00 00   ................",
          "3832: |   2976: 82 0a 02 08 08 09 08 08 17 84 06 30 20 32 35 33   ...........0 253",
          "3833: |   2992: 00 01 30 04 25 06 1b 00 00 08 32 30 31 36 30 36   ..0.%.....201606",
          "3834: |   3008: 30 39 03 25 07 00 00 01 34 03 25 05 00 00 01 35   09.%....4.%....5",
          "3835: |   3024: 03 25 04 00 01 07 30 30 30 30 30 30 30 08 55 1a   .%....0000000.U.",
          "3836: |   3040: 00 00 08 63 6f 6d 70 69 6c 65 72 03 25 02 00 00   ...compiler.%...",
          "3837: |   3056: 06 64 62 73 74 61 74 03 25 0a 00 01 04 65 61 75   .dbstat.%....eau",
          "3838: |   3072: 67 03 25 08 00 00 06 65 6e 61 62 6c 65 09 25 09   g.%....enable.%.",
          "3839: |   3088: 05 04 04 04 04 04 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "3840: |   3104: 6e 03 25 1d 00 00 04 66 74 73 34 03 25 0d 00 03   n.%....fts4.%...",
          "3841: |   3120: 01 35 03 25 0f 00 00 0c 97 63 63 03 25 03 00 01   .5.%.....cc.%...",
          "3842: |   3136: 06 65 6f 70 6f 6c 7a 03 25 11 00 00 05 6a 73 6f   .eopolz.%....jso",
          "3843: |   3152: 6e 31 03 25 13 00 00 04 6c 6f 61 64 03 25 1c 00   n1.%....load.%..",
          "3844: |   3168: 00 03 6d 61 78 03 25 18 00 01 05 65 6d 6f 72 79   ..max.%....emory",
          "3845: |   3184: 03 25 3d f0 03 04 73 79 73 35 03 25 15 00 00 04   .%=...sys5.%....",
          "3846: |   3200: 6f 6d 69 74 03 25 1b 00 00 05 72 74 72 65 65 03   omit.%....rtree.",
          "3847: |   3216: 25 17 00 00 0a 74 68 72 65 61 64 73 61 66 65 03   %....threadsafe.",
          "3848: |   3232: 25 1e 00 00 04 76 74 61 62 03 25 0b 00 86 50 01   %....vtab.%...P.",
          "3849: |   3248: 08 08 08 09 08 17 8d 12 30 20 38 33 37 e3 aa e0   ........0 837...",
          "3850: |   3264: 12 d1 06 00 01 06 00 01 06 00 1f 03 00 01 03 00   ................",
          "3851: |   3280: 01 03 00 00 08 32 30 31 36 30 36 30 49 09 01 07   .....2016060I...",
          "3852: |   3296: 00 01 07 00 01 07 00 00 01 34 09 01 05 00 01 05   .........4......",
          "3853: |   3312: 00 01 05 00 00 01 35 09 01 04 00 01 04 00 01 04   ......5.........",
          "3854: |   3328: 00 01 07 30 30 30 30 30 30 30 09 1c 04 00 01 04   ...0000000......",
          "3855: |   3344: 00 01 04 00 00 06 62 69 6e 61 72 79 3c 03 01 02   ......binary<...",
          "3856: |   3360: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "3857: |   3376: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "3858: |   3392: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "3859: |   3408: 01 02 02 00 03 01 02 02 00 00 08 63 6f 6d 70 69   ...........compi",
          "3860: |   3424: 6c 65 72 09 01 02 00 01 02 00 01 02 00 00 06 64   ler............d",
          "3861: |   3440: 62 73 74 61 74 09 07 03 00 01 03 00 01 03 00 01   bstat...........",
          "3862: |   3456: 04 65 62 75 67 09 04 01 f0 01 02 00 01 02 00 00   .ebug...........",
          "3863: |   3472: 06 65 6e 61 62 6c 65 3f 07 02 00 01 02 00 01 02   .enable?........",
          "3864: |   3488: 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00   ................",
          "3865: |   3504: 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01   ................",
          "3866: |   3520: 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02   ................",
          "3867: |   3536: 00 01 02 00 01 02 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "3868: |   3552: 6e 09 1f 04 00 01 04 00 01 04 00 00 04 66 74 73   n............fts",
          "3869: |   3568: 34 09 0a 03 f3 01 03 00 01 03 00 19 01 35 09 0d   4............5..",
          "3870: |   3584: 03 00 01 03 00 01 03 00 00 03 67 63 63 09 01 03   ..........gcc...",
          "3871: |   3600: 00 01 03 00 01 03 00 01 06 65 6f 70 6f 6c 79 09   .........eopoly.",
          "3872: |   3616: 10 03 00 01 03 00 01 03 00 00 05 6a 73 6f 6e 31   ...........json1",
          "3873: |   3632: 09 13 03 00 01 03 00 00 f3 00 00 04 6c 6f 61 64   ............load",
          "3874: |   3648: 09 1f 03 00 01 03 00 01 03 00 00 03 6d 61 78 09   ............max.",
          "3875: |   3664: 1c 02 00 01 02 00 01 02 00 01 05 65 6d 6f 72 79   ...........emory",
          "3876: |   3680: 09 1c 03 00 01 03 00 01 03 00 03 04 73 79 73 35   ............sys5",
          "3877: |   3696: 09 16 03 00 01 03 00 01 03 00 00 06 6e 6f 63 61   ............noca",
          "3878: |   3712: 73 65 3c 02 01 02 02 00 03 01 02 02 00 03 01 02   se<.............",
          "3879: |   3728: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "3880: |   3744: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "3881: |   3760: 03 01 02 02 00 03 01 02 02 00 46 01 02 02 00 00   ..........F.....",
          "3882: |   3776: 04 6f 6d 69 74 09 1f 02 00 01 02 00 01 02 00 00   .omit...........",
          "3883: |   3792: 05 72 74 72 64 65 09 19 03 00 01 03 00 01 03 00   .rtrde..........",
          "3884: |   3808: 03 02 69 6d 3c 01 01 02 02 00 03 01 02 02 00 03   ..im<...........",
          "3885: |   3824: 01 02 02 00 03 01 02 01 ff 03 01 02 02 00 03 01   ................",
          "3886: |   3840: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "3887: |   3856: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "3888: |   3872: 00 00 0a 74 68 72 65 61 64 73 61 66 65 09 22 02   ...threadsafe...",
          "3889: |   3888: 00 01 02 00 01 02 00 00 04 76 74 61 62 09 07 04   .........vtab...",
          "3890: |   3904: 00 01 04 00 01 04 00 00 01 78 b4 01 01 01 01 02   .........x......",
          "3891: |   3920: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "3892: |   3936: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "3893: |   3952: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "3894: |   3968: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "3895: |   3984: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "3896: |   4000: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "3897: |   4016: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "3898: |   4032: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "3899: |   4048: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "3900: |   4064: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 02 02   ................",
          "3901: |   4080: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "3902: | page 6 offset 20480",
          "3903: |      0: 0a 00 00 00 02 0f f5 00 0f fb 0f f5 00 00 00 00   ................",
          "3904: |   4080: 00 00 00 00 00 05 04 08 09 01 02 04 04 08 09 09   ................",
          "3905: | page 7 offset 24576",
          "3906: |      0: 0d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "3907: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 75 74 6f   ...........#auto",
          "3908: |   4032: 6d 65 71 97 65 3d 35 0d 04 02 23 6d 65 72 67 65   meq.e=5...#merge",
          "3909: |   4048: 3d 31 30 30 2c 38 11 03 02 2b 69 6e 74 65 67 72   =100,8...+integr",
          "3910: |   4064: 69 74 79 00 00 00 00 00 00 00 00 00 00 00 00 00   ity.............",
          "3911: | end crash-670b15f2955a36.db",
          "3912: }]} {}",
          "3914: do_catchsql_test 23.1 {",
          "3915:   SELECT 'FyzLy'FROM t1 WHERE t1 MATCH 'j';",
          "3916: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "tool/extract-sqlite3h.tcl||tool/extract-sqlite3h.tcl": [
          "File: tool/extract-sqlite3h.tcl -> tool/extract-sqlite3h.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/tclsh",
          "2: #",
          "3: # Given an sqlite3.c source file identified by the command-line",
          "4: # argument, extract the \"sqlite3.h\" header file that is embedded inside",
          "5: # the sqlite3.c source file and write it to standard output.",
          "6: #",
          "7: if {[llength $argv]!=1} {",
          "8:   puts stderr \"Usage: $argv0 sqlite3.c >sqlite3.h\"",
          "9:   exit 1",
          "10: }",
          "11: set in [open [lindex $argv 0] rb]",
          "12: while {![eof $in]} {",
          "13:   set line [gets $in]",
          "14:   if {[string match {* Begin file sqlite3.h *} $line]} break",
          "15: }",
          "16: while {![eof $in]} {",
          "17:   set line [gets $in]",
          "18:   if {[string match {* End of sqlite3.h *} $line]} break",
          "19:   puts $line",
          "20: }",
          "21: close $in",
          "",
          "---------------"
        ],
        "tool/showdb.c||tool/showdb.c": [
          "File: tool/showdb.c -> tool/showdb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "828:     while( ovfl && (cnt++)<g.mxPage ){",
          "829:       page_usage_msg(ovfl, \"overflow %d from cell %d of page %d\",",
          "830:                      cnt, cellno, pgno);",
          "832:       ovfl = decodeInt32(a);",
          "833:       sqlite3_free(a);",
          "834:     }",
          "",
          "[Removed Lines]",
          "831:       a = fileRead((ovfl-1)*g.pagesize, 4);",
          "",
          "[Added Lines]",
          "831:       a = fileRead((ovfl-1)*(sqlite3_int64)g.pagesize, 4);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "29fa6b6642793aef1ed50a82046f586ef0c60e9d",
      "candidate_info": {
        "commit_hash": "29fa6b6642793aef1ed50a82046f586ef0c60e9d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/29fa6b6642793aef1ed50a82046f586ef0c60e9d",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test",
          "test/fts3corrupt5.test"
        ],
        "message": "Fix a buffer overread that could in fts3 when dealing with corrupt records.\n\nFossilOrigin-Name: 1660d7733eb443ab085ddef7666b998a1c75ac81cc54a9620960a8d3b377e28e",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test",
          "test/fts3corrupt5.test||test/fts3corrupt5.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2620:     nList -= (int)(p - pList);",
          "2621:     pList = p;",
          "2623:       break;",
          "2624:     }",
          "2625:     p = &pList[1];",
          "2626:     p += fts3GetVarint32(p, &iCurrent);",
          "2627:   }",
          "2630:     memset(&pList[nList], 0, pEnd - &pList[nList]);",
          "2631:   }",
          "",
          "[Removed Lines]",
          "2622:     if( nList==0 ){",
          "2629:   if( bZero && &pList[nList]!=pEnd ){",
          "",
          "[Added Lines]",
          "2622:     if( nList<=0 ){",
          "2629:   if( bZero && (pEnd - &pList[nList])>0){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b3692c406f7ba62587c9d3256f888748393519680e9e2db53f59557f1a300e05",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1947: do_catchsql_test 13.1 {",
          "1948:   SELECT quote(matchinfo(t1,'pcxybs'))==0 FROM t1 WHERE b MATCH 'e*';",
          "1951: #-------------------------------------------------------------------------",
          "1952: reset_db",
          "",
          "[Removed Lines]",
          "1949: } {0 {0 0}}",
          "",
          "[Added Lines]",
          "1949: } {0 {}}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2827: do_catchsql_test 18.1 {",
          "2828:   SELECT quote(matchinfo(t1,'pcxybs'))==0 FROM t1 WHERE b MATCH 'e*';",
          "2831: #-------------------------------------------------------------------------",
          "2832: reset_db",
          "",
          "[Removed Lines]",
          "2829: } {0 0}",
          "",
          "[Added Lines]",
          "2829: } {0 {}}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4400:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "4401:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "4402: } {1 {database disk image is malformed}}",
          "4404: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4404: #-------------------------------------------------------------------------",
          "4405: reset_db",
          "4406: do_test 26.0 {",
          "4407:   sqlite3 db {}",
          "4408:   db deserialize [decode_hexdb {",
          "4409: .open --hexdb",
          "4410: | size 28672 pagesize 4096 filename crash-26682721375870.db",
          "4411: | page 1 offset 0",
          "4412: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "4413: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "4414: |     96: 00 00 00 00 0d 0e b1 00 06 0d a4 00 0f 8d 0f 21   ...............!",
          "4415: |    112: 0e b9 0d c8 0e 7e 0d a4 00 00 00 00 00 00 00 00   .....~..........",
          "4416: |   3488: 00 00 00 00 22 07 06 17 11 11 01 31 74 61 62 6c   ...........1tabl",
          "4417: |   3504: 65 74 32 74 32 07 43 52 45 41 54 45 20 54 41 42   et2t2.CREATE TAB",
          "4418: |   3520: 4c 45 20 74 32 28 78 29 81 33 05 07 17 1f 1f 01   LE t2(x).3......",
          "4419: |   3536: 82 35 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72   .5tablet1_segdir",
          "4420: |   3552: 74 31 5f 73 65 67 64 69 72 05 43 52 45 41 54 45   t1_segdir.CREATE",
          "4421: |   3568: 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69    TABLE 't1_segdi",
          "4422: |   3584: 72 27 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 51   r'(level INTEGEQ",
          "4423: |   3600: 2c 69 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61   ,idx INTEGER,sta",
          "4424: |   3616: 72 74 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52   rt_block INTEGER",
          "4425: |   3632: 2c 6c 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63   ,leaves_end_bloc",
          "4426: |   3648: 6b 20 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c   k INTEGER,end_bl",
          "4427: |   3664: 6f 63 6b 20 49 4e 54 45 47 45 62 2c 72 6f 6f 74   ock INTEGEb,root",
          "4428: |   3680: 20 42 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45    BLOB,PRIMARY KE",
          "4429: |   3696: 59 28 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 06   Y(level, idx))1.",
          "4430: |   3712: 06 17 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74   ..E...indexsqlit",
          "4431: |   3728: 65 5f 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73   e_autoindex_t1_s",
          "4432: |   3744: 65 67 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72   egdir_1t1_segdir",
          "4433: |   3760: 06 0f c7 00 08 00 00 00 00 66 04 07 17 23 23 01   .........f...##.",
          "4434: |   3776: 81 13 74 61 62 6c 65 74 31 5f 73 65 66 6d 65 6e   ..tablet1_sefmen",
          "4435: |   3792: 74 73 74 31 5f 73 65 67 6d 65 6e 74 73 04 43 52   tst1_segments.CR",
          "4436: |   3808: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73   EATE TABLE 't1_s",
          "4437: |   3824: 65 67 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64   egments'(blockid",
          "4438: |   3840: 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59    INTEGER PRIMARY",
          "4439: |   3856: 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42    KEY, block BLOB",
          "4440: |   3872: 29 6a 03 07 17 21 21 01 81 1f 74 61 62 6c 65 74   )j...!!...tablet",
          "4441: |   3888: 31 5f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1_contentt1_cont",
          "4442: |   3904: 65 6e 74 03 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "4443: |   3920: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f    't1_content'(do",
          "4444: |   3936: 63 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   cid INTEGER PRIM",
          "4445: |   3952: 41 52 59 20 4b 45 59 2c 20 27 63 30 61 27 2c 20   ARY KEY, 'c0a',",
          "4446: |   3968: 27 63 31 62 27 2c 20 27 63 32 63 27 29 38 02 06   'c1b', 'c2c')8..",
          "4447: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "4448: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "4449: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "4450: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "4451: | page 3 offset 8192",
          "4452: |      0: 0d 00 00 00 25 0b 48 00 0f d8 0f af 0f 86 0f 74   ....%.H........t",
          "4453: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "4454: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 00 00   ...t.[.@.$......",
          "4455: |   2880: 00 00 00 00 00 00 00 00 81 3f 25 06 00 82 7f 00   .........?%.....",
          "4456: |   2896: 00 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e   .COMPILER=gcc-5.",
          "4457: |   2912: 34 23 00 20 32 2f 31 36 30 36 30 39 20 44 45 42   4#. 2/160609 DEB",
          "4458: |   2928: 55 47 20 45 4e 41 42 4c 45 20 44 42 53 54 41 54   UG ENABLE DBSTAT",
          "4459: |   2944: 20 56 54 41 42 20 45 4e 41 42 4c 45 20 46 54 53    VTAB ENABLE FTS",
          "4460: |   2960: 34 20 45 4e 41 42 4c 45 20 46 54 53 35 20 45 4e   4 ENABLE FTS5 EN",
          "4461: |   2976: 41 42 4c 45 20 47 45 4f 50 4f 4c 59 20 45 4e 41   ABLE GEOPOLY ENA",
          "4462: |   2992: 42 4c 45 20 4a 53 4f 4e 31 20 45 4e 41 42 4c 45   BLE JSON1 ENABLE",
          "4463: |   3008: 20 4d 45 4d 53 59 53 35 20 45 4e 41 42 4c 45 20    MEMSYS5 ENABLE",
          "4464: |   3024: 52 54 52 45 45 20 4d 41 58 20 4d 45 4d 4f 52 59   RTREE MAX MEMORY",
          "4465: |   3040: 3d 35 30 30 30 30 30 30 30 20 4f 4d 49 54 20 4c   =50000000 OMIT L",
          "4466: |   3056: 4f 41 44 20 45 58 54 45 4e 53 59 4f 4e 20 54 48   OAD EXTENSYON TH",
          "4467: |   3072: 52 45 41 44 53 41 46 45 3d 30 18 24 05 00 25 0f   READSAFE=0.$..%.",
          "4468: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "4469: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "4470: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 22   DSAFE=0XNOCASE..",
          "4471: |   3136: 05 00 25 0f 17 54 38 52 45 41 44 53 41 46 45 3d   ..%..T8READSAFE=",
          "4472: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "4473: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 fc 53 49 4f   IT LOAD EXTE.SIO",
          "4474: |   3184: 4e 68 42 49 4e 4a c2 59 1f 20 05 00 33 0f 19 4f   NhBINJ.Y. ..3..O",
          "4475: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "4476: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "4477: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "4478: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "4479: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 2f 30 30   MAX MEMORY=50/00",
          "4480: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "4481: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "4482: |   3312: 30 30 30 30 48 4e 4f 43 41 53 45 1e 1c 05 00 33   0000HNOCASE....3",
          "4483: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "4484: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "4485: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "4486: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "4487: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 53 41 53 45 17   LE RTREEXNOSASE.",
          "4488: |   3408: 19 05 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   ...%..ENABLE RTR",
          "4489: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "4490: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "4491: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "4492: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "4493: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "4494: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 15 05 00 25   MSYS5XRTRIM....%",
          "4495: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "4496: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 42 42   INARY....%..ENBB",
          "4497: |   3552: 4d 45 20 4a 53 4f 4e 31 58 4e 4f 43 41 53 45 17   ME JSON1XNOCASE.",
          "4498: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "4499: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "4500: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "4501: |   3616: 4e 41 52 59 1a 11 05 00 29 0f 19 45 4e 41 1e 4c   NARY....)..ENA.L",
          "4502: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 43 41 53 45   E GEOPOLYXNOCASE",
          "4503: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "4504: |   3664: 4f 50 4f 4c 59 58 62 54 52 49 4d 17 0f 05 00 23   OPOLYXbTRIM....#",
          "4505: |   3680: 0f 19 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "4506: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "4507: |   3712: 45 20 46 54 fc 35 58 4e 4f 43 41 53 45 16 0d 05   E FT.5XNOCASE...",
          "4508: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "4509: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "4510: |   3760: 4c 45 20 46 54 53 34 58 42 49 4e 41 52 59 17 0b   LE FTS4XBINARY..",
          "4511: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 35   ..#..ENABLE FTS5",
          "4512: |   3792: 58 4e 4f 43 40 53 45 16 0a 05 00 23 0f 17 45 4e   XNOC@SE....#..EN",
          "4513: |   3808: 41 42 4c 45 20 56 54 53 34 58 52 54 52 49 4d 1e   ABLE VTS4XRTRIM.",
          "4514: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4515: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 b3 58 1e   TAT VTABXBINA.X.",
          "4516: |   3856: 08 05 00 31 0f 19 45 4e 40 42 4c 45 20 44 42 53   ...1..EN@BLE DBS",
          "4517: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "4518: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 45 42 53   ...1..ENABLE EBS",
          "4519: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   TAT VTABXRTRIM..",
          "4520: |   3920: 05 00 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "4521: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "4522: |   3952: 43 41 53 45 10 04 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "4523: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "4524: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "4525: |   4000: 32 30 31 36 30 36 30 39 58 4b 19 4e 41 52 59 27   20160609XK.NARY'",
          "4526: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "4527: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "4528: | page 5 offset 16384",
          "4529: |      0: 0d 00 00 00 02 0b a0 00 0c ad 0b a0 00 00 00 00   ................",
          "4530: |   2976: 82 0a 02 08 08 09 08 08 17 84 06 30 20 32 34 33   ...........0 243",
          "4531: |   2992: 00 01 30 04 25 06 1b 00 00 08 32 30 31 36 30 36   ..0.%.....201606",
          "4532: |   3008: 30 39 03 25 07 00 00 01 34 03 25 05 00 00 01 35   09.%....4.%....5",
          "4533: |   3024: 03 25 04 00 01 07 30 30 30 30 30 30 30 03 25 1a   .%....0000000.%.",
          "4534: |   3040: 00 00 08 63 6f 6d 70 69 6c 65 72 03 25 02 00 00   ...compiler.%...",
          "4535: |   3056: 06 64 62 73 74 51 74 03 25 0a 00 01 04 65 62 75   .dbstQt.%....ebu",
          "4536: |   3072: 67 03 25 08 00 00 06 65 6e 61 62 6c 65 09 25 09   g.%....enable.%.",
          "4537: |   3088: 05 04 04 04 04 04 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "4538: |   3104: 6e 03 25 1d 00 00 04 66 74 73 34 03 25 0d 00 03   n.%....fts4.%...",
          "4539: |   3120: 01 35 03 25 0f 00 00 03 67 63 63 03 25 03 00 01   .5.%....gcc.%...",
          "4540: |   3136: 06 65 6f 70 6f 6c 79 03 25 11 00 00 05 6a 73 6f   .eopoly.%....jso",
          "4541: |   3152: 6e 31 03 25 13 00 00 04 6c 6f 61 64 03 25 1c 00   n1.%....load.%..",
          "4542: |   3168: 00 03 6d 61 78 03 25 18 00 01 05 65 6d 6f 72 79   ..max.%....emory",
          "4543: |   3184: 03 25 19 00 03 04 73 79 73 35 03 25 15 00 00 04   .%....sys5.%....",
          "4544: |   3200: 6f 6d 69 74 03 25 1b 00 00 05 72 74 72 65 65 03   omit.%....rtree.",
          "4545: |   3216: 25 17 00 00 0a 74 68 72 65 61 64 73 61 66 65 03   %....threadsafe.",
          "4546: |   3232: 25 1e 00 00 04 76 74 61 62 03 25 0b 00 86 50 01   %....vtab.%...P.",
          "4547: |   3248: 08 08 08 08 08 17 8d 12 30 20 38 33 35 00 01 30   ........0 835..0",
          "4548: |   3264: 12 01 06 00 01 06 00 01 06 00 1e f3 00 01 03 00   ................",
          "4549: |   3280: 01 03 00 00 08 32 30 31 36 30 36 30 39 09 01 07   .....20160609...",
          "4550: |   3296: 00 01 07 00 01 07 00 00 01 34 09 01 05 00 01 05   .........4......",
          "4551: |   3312: 00 01 05 00 00 01 35 09 01 04 00 01 04 00 01 04   ......5.........",
          "4552: |   3328: 00 01 07 30 30 30 30 2f 30 30 09 1c 04 00 01 04   ...0000/00......",
          "4553: |   3344: 00 01 04 00 00 06 62 69 6e 61 72 79 3c 03 01 02   ......binary<...",
          "4554: |   3360: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4555: |   3376: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "4556: |   3392: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "4557: |   3408: 01 02 02 00 03 01 02 02 00 00 08 63 6f 6d 70 69   ...........compi",
          "4558: |   3424: 6c 65 72 09 01 02 00 01 02 00 01 02 00 00 06 64   ler............d",
          "4559: |   3440: 62 73 74 61 74 09 07 03 00 01 03 00 01 03 00 01   bstat...........",
          "4560: |   3456: 04 65 62 75 67 09 04 02 00 01 02 00 01 02 00 00   .ebug...........",
          "4561: |   3472: 06 65 6e 61 62 6c 65 3f 07 02 00 01 02 00 01 02   .enable?........",
          "4562: |   3488: 00 01 02 00 01 02 00 01 01 f0 01 02 00 57 02 00   .............W..",
          "4563: |   3504: 01 02 00 01 02 00 01 02 00 01 02 00 01 02 10 01   ................",
          "4564: |   3520: 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02   ................",
          "4565: |   3536: 00 00 02 00 01 02 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "4566: |   3552: 6e 09 1f 04 00 01 04 00 01 04 00 00 04 66 74 73   n............fts",
          "4567: |   3568: 34 09 0a 03 00 01 03 00 01 03 00 03 01 35 09 0d   4............5..",
          "4568: |   3584: 03 00 01 03 00 a9 03 00 00 03 67 63 63 09 01 03   ..........gcc...",
          "4569: |   3600: 00 01 03 00 01 03 00 01 06 65 6f 70 6f 6c 79 09   .........eopoly.",
          "4570: |   3616: 10 03 00 01 03 00 01 03 00 00 05 6a 73 6f 6e 31   ...........json1",
          "4571: |   3632: 09 13 03 00 01 03 00 01 03 00 00 04 6c 6f 61 64   ............load",
          "4572: |   3648: 09 1f 03 00 01 03 00 01 03 00 00 03 6d 61 78 09   ............max.",
          "4573: |   3664: 1c 02 0b 31 02 00 01 02 00 01 05 65 6d 6f 72 79   ...1.......emory",
          "4574: |   3680: 09 1c 03 00 01 03 00 01 03 00 03 04 73 79 73 35   ............sys5",
          "4575: |   3696: 09 16 03 00 01 03 00 01 03 00 00 06 6e 6f 63 61   ............noca",
          "4576: |   3712: 73 65 3c 02 01 02 02 00 03 01 02 02 00 03 01 02   se<.............",
          "4577: |   3728: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4578: |   3744: 00 03 01 02 02 00 f3 01 02 02 00 03 01 02 02 00   ................",
          "4579: |   3760: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 00   ................",
          "4580: |   3776: 04 6f 6d 69 74 09 1f 02 00 01 02 00 01 02 00 00   .omit...........",
          "4581: |   3792: 05 72 74 72 65 65 09 19 03 00 01 03 00 01 03 00   .rtree..........",
          "4582: |   3808: 03 02 69 6d 3c 01 01 02 02 00 03 01 02 02 00 03   ..im<...........",
          "4583: |   3824: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "4584: |   3840: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "4585: |   3856: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4586: |   3872: 00 00 0a 74 68 72 65 61 64 63 61 66 65 09 22 02   ...threadcafe...",
          "4587: |   3888: 00 01 02 00 02 02 00 00 04 76 74 61 62 09 07 04   .........vtab...",
          "4588: |   3904: 00 01 04 00 01 04 00 00 01 78 b4 01 01 01 01 02   .........x......",
          "4589: |   3920: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4590: |   3936: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "4591: |   3952: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "4592: |   3968: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "4593: |   3984: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "4594: |   4000: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4595: |   4016: 01 01 01 02 00 01 01 01 02 00 01 00 01 02 00 01   ................",
          "4596: |   4032: 01 01 02 00 01 01 00 e2 00 01 01 01 02 00 01 01   ................",
          "4597: |   4048: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "4598: |   4064: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "4599: |   4080: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4600: | page 6 offset 20480",
          "4601: |      0: 0a 00 00 00 02 0f f5 00 0f fb 0f f5 00 00 00 00   ................",
          "4602: |   4080: 00 00 00 00 00 05 04 08 09 01 02 04 04 08 08 09   ................",
          "4603: | page 7 offset 24576",
          "4604: |      0: 0d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "4605: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 00 00 00   ...........#a...",
          "4606: | end crash-26682721375870.db",
          "4607: }]} {}",
          "4609: do_execsql_test 26.1 {",
          "4610:   SELECT count(*) FROM (",
          "4611:     SELECT t1, (t1) FROM t1 WHERE b MATCH 'x'",
          "4612:   )",
          "4613: } 34",
          "",
          "---------------"
        ],
        "test/fts3corrupt5.test||test/fts3corrupt5.test": [
          "File: test/fts3corrupt5.test -> test/fts3corrupt5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019 May 22",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #*************************************************************************",
          "11: #",
          "12: #",
          "14: set testdir [file dirname $argv0]",
          "15: source $testdir/tester.tcl",
          "16: source $testdir/fts3_common.tcl",
          "17: set testprefix fts3corrupt5",
          "19: # If SQLITE_ENABLE_FTS3 is defined, omit this file.",
          "20: ifcapable !fts3 {",
          "21:   finish_test",
          "22:   return",
          "23: }",
          "25: sqlite3_fts3_may_be_corrupt 1",
          "27: do_execsql_test 1.0 {",
          "28:   BEGIN;",
          "29:     CREATE VIRTUAL TABLE ft USING fts3(a, b, c);",
          "30:     INSERT INTO ft VALUES('one', 'one', 'one');",
          "31:   COMMIT;",
          "32: }",
          "34: do_execsql_test 1.1 {",
          "35:   SELECT * FROM ft WHERE ft MATCH 'b:one'",
          "36: } {one one one}",
          "38: do_execsql_test 1.2 {",
          "39:   SELECT quote(root) FROM ft_segdir;",
          "40: } {X'00036F6E6509010201010201020200'}",
          "42: breakpoint",
          "43: foreach {tn val q bCorrupt} {",
          "44:   1 X'00036F6E650901'                   'b:one'  1",
          "45:   2 X'00036F6E6509010201010201FFFFFF'   'c:one'  1",
          "46:   3 X'00036F6E6501'                     'b:one'  1",
          "47:   4 X'00036F6E650101'                   'b:one'  1",
          "48:   5 X'00036F6E650100'                   'b:one'  0",
          "49: } {",
          "50:   do_execsql_test 1.3.$tn.1 \"UPDATE ft_segdir SET root = $val\"",
          "52:   set res {0 {}}",
          "53:   if {$bCorrupt} { set res {1 {database disk image is malformed}}}",
          "54:   do_catchsql_test 1.3.$tn.2 {",
          "55:     SELECT * FROM ft WHERE ft MATCH $q",
          "56:   } $res",
          "57: }",
          "59: finish_test",
          "",
          "---------------"
        ]
      }
    }
  ]
}