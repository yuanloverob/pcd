{
  "cve_id": "CVE-2014-3548",
  "cve_desc": "Multiple cross-site scripting (XSS) vulnerabilities in Moodle through 2.3.11, 2.4.x before 2.4.11, 2.5.x before 2.5.7, 2.6.x before 2.6.4, and 2.7.x before 2.7.1 allow remote attackers to inject arbitrary web script or HTML via vectors that trigger an AJAX exception dialog.",
  "repo": "moodle/moodle",
  "patch_hash": "cd6e149c86b282b8926155451802799af1402418",
  "patch_info": {
    "commit_hash": "cd6e149c86b282b8926155451802799af1402418",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/cd6e149c86b282b8926155451802799af1402418",
    "files": [
      "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-debug.js",
      "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-min.js",
      "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception.js",
      "lib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue-debug.js",
      "lib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue-min.js",
      "lib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue.js",
      "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-debug.js",
      "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-min.js",
      "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception.js",
      "lib/yui/src/notification/js/ajaxexception.js",
      "lib/yui/src/notification/js/exception.js",
      "lib/yui/src/notification/meta/notification.json"
    ],
    "message": "MDL-45471 javascript: Escape content of exception dialogs",
    "before_after_code_files": [
      "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js",
      "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js"
    ]
  },
  "patch_diff": {
    "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js": [
      "File: lib/yui/src/notification/js/ajaxexception.js -> lib/yui/src/notification/js/ajaxexception.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "30:             delay = this.get('hideTimeoutDelay');",
      "31:         this.get(BASE).addClass('moodle-dialogue-exception');",
      "32:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
      "34:         content = Y.Node.create('<div class=\"moodle-ajaxexception\"></div>')",
      "36:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-debuginfo\"><label>URL:</label> ' +",
      "37:                         this.get('reproductionlink')+'</div>'))",
      "38:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-debuginfo\"><label>Debug info:</label> ' +",
      "40:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-stacktrace\"><label>Stack trace:</label> <pre>' +",
      "42:         if (M.cfg.developerdebug) {",
      "43:             content.all('.moodle-exception-param').removeClass('hidden');",
      "44:         }",
      "",
      "[Removed Lines]",
      "33:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + config.name + '</h1>', Y.WidgetStdMod.REPLACE);",
      "35:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+this.get('error')+'</div>'))",
      "39:                         this.get('debuginfo')+'</div>'))",
      "41:                         this.get('stacktrace')+'</pre></div>'));",
      "",
      "[Added Lines]",
      "33:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + Y.Escape.html(config.name) + '</h1>',",
      "34:                 Y.WidgetStdMod.REPLACE);",
      "36:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+Y.Escape.html(this.get('error'))+'</div>'))",
      "40:                         Y.Escape.html(this.get('debuginfo'))+'</div>'))",
      "42:                         Y.Escape.html(this.get('stacktrace'))+'</pre></div>'));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "111:         reproductionlink : {",
      "112:             setter : function(link) {",
      "113:                 if (link !== null) {",
      "114:                     link = '<a href=\"'+link+'\">'+link.replace(M.cfg.wwwroot, '')+'</a>';",
      "115:                 }",
      "116:                 return link;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "115:                     link = Y.Escape.html(link);",
      "",
      "---------------"
    ],
    "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js": [
      "File: lib/yui/src/notification/js/exception.js -> lib/yui/src/notification/js/exception.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "46:             delay = this.get('hideTimeoutDelay');",
      "47:         this.get(BASE).addClass('moodle-dialogue-exception');",
      "48:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
      "50:         content = Y.Node.create('<div class=\"moodle-exception\"></div>')",
      "52:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-filename\"><label>File:</label> ' +",
      "54:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-linenumber\"><label>Line:</label> ' +",
      "56:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-stacktrace\"><label>Stack trace:</label> <pre>' +",
      "57:                         this.get('stack')+'</pre></div>'));",
      "58:         if (M.cfg.developerdebug) {",
      "",
      "[Removed Lines]",
      "49:                 '<h1 id=\"moodle-dialogue-'+config.COUNT+'-header-text\">' + config.name + '</h1>', Y.WidgetStdMod.REPLACE);",
      "51:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+this.get('message')+'</div>'))",
      "53:                         this.get('fileName')+'</div>'))",
      "55:                         this.get('lineNumber')+'</div>'))",
      "",
      "[Added Lines]",
      "49:                 '<h1 id=\"moodle-dialogue-'+config.COUNT+'-header-text\">' + Y.Escape.html(config.name) + '</h1>',",
      "50:                 Y.WidgetStdMod.REPLACE);",
      "52:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+Y.Escape.html(this.get('message'))+'</div>'))",
      "54:                         Y.Escape.html(this.get('fileName'))+'</div>'))",
      "56:                         Y.Escape.html(this.get('lineNumber'))+'</div>'))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "134:         stack : {",
      "135:             setter : function(str) {",
      "137:                     pattern = new RegExp('^(.+)@('+M.cfg.wwwroot+')?(.{0,75}).*:(\\\\d+)$'),",
      "138:                     i;",
      "139:                 for (i in lines) {",
      "",
      "[Removed Lines]",
      "136:                 var lines = str.split(\"\\n\"),",
      "",
      "[Added Lines]",
      "137:                 var lines = Y.Escape.html(str).split(\"\\n\"),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5344148b34d465d513fcf65b86ea600d0d18e122",
      "candidate_info": {
        "commit_hash": "5344148b34d465d513fcf65b86ea600d0d18e122",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/5344148b34d465d513fcf65b86ea600d0d18e122",
        "files": [
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-debug.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-min.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception.js",
          "lib/yui/src/notification/js/exception.js"
        ],
        "message": "MDL-45119 ajax: Correct use of COUNT in exception dialogue",
        "before_after_code_files": [
          "lib/yui/src/notification/js/exception.js||liyui/src/notification/js/exception.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js"
          ],
          "candidate": [
            "lib/yui/src/notification/js/exception.js||liyui/src/notification/js/exception.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/yui/src/notification/js/exception.js||liyui/src/notification/js/exception.js": [
          "File: lib/yui/src/notification/js/exception.js -> liyui/src/notification/js/exception.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:             delay = this.get('hideTimeoutDelay');",
          "32:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "33:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "35:         content = Y.Node.create('<div class=\"moodle-exception\"></div>')",
          "36:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+this.get('message')+'</div>'))",
          "37:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-filename\"><label>File:</label> ' +",
          "",
          "[Removed Lines]",
          "34:                 '<h1 id=\"moodle-dialogue-'+COUNT+'-header-text\">' + config.name + '</h1>', Y.WidgetStdMod.REPLACE);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c44012e09e29f1b98a2eb4db57422c615b0e3a47",
      "candidate_info": {
        "commit_hash": "c44012e09e29f1b98a2eb4db57422c615b0e3a47",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/c44012e09e29f1b98a2eb4db57422c615b0e3a47",
        "files": [
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-debug.js",
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-min.js",
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception.js",
          "lib/yui/build/moodle-core-notification-alert/moodle-core-notification-alert-debug.js",
          "lib/yui/build/moodle-core-notification-alert/moodle-core-notification-alert-min.js",
          "lib/yui/build/moodle-core-notification-alert/moodle-core-notification-alert.js",
          "lib/yui/build/moodle-core-notification-confirm/moodle-core-notification-confirm-debug.js",
          "lib/yui/build/moodle-core-notification-confirm/moodle-core-notification-confirm-min.js",
          "lib/yui/build/moodle-core-notification-confirm/moodle-core-notification-confirm.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-debug.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-min.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception.js",
          "lib/yui/src/notification/js/ajaxexception.js",
          "lib/yui/src/notification/js/alert.js",
          "lib/yui/src/notification/js/confirm.js",
          "lib/yui/src/notification/js/exception.js"
        ],
        "message": "Revert \"Merge branch 'm28_MDL-46431' of https://github.com/totara/moodle\"\n\nThis reverts commit 14a3ccc96da2c23fd5c34167d02e1323fb01d113, reversing\nchanges made to 4709708d4889e12f0f4a621ceaacb80c4cde6c51.",
        "before_after_code_files": [
          "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js",
          "lib/yui/src/notification/js/alert.js||lib/yui/src/notification/js/alert.js",
          "lib/yui/src/notification/js/confirm.js||lib/yui/src/notification/js/confirm.js",
          "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js",
            "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js"
          ],
          "candidate": [
            "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js",
            "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js": [
          "File: lib/yui/src/notification/js/ajaxexception.js -> lib/yui/src/notification/js/ajaxexception.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:             delay = this.get('hideTimeoutDelay');",
          "31:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "32:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "34:                 Y.WidgetStdMod.REPLACE);",
          "35:         content = Y.Node.create('<div class=\"moodle-ajaxexception\"></div>')",
          "36:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+Y.Escape.html(this.get('error'))+'</div>'))",
          "",
          "[Removed Lines]",
          "33:                 '<h3 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + Y.Escape.html(config.name) + '</h3>',",
          "",
          "[Added Lines]",
          "33:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + Y.Escape.html(config.name) + '</h1>',",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/alert.js||lib/yui/src/notification/js/alert.js": [
          "File: lib/yui/src/notification/js/alert.js -> lib/yui/src/notification/js/alert.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:         this.get(BASE).addClass('moodle-dialogue-confirm');",
          "41:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "42:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "45:         this._closeEvents.push(",
          "46:             Y.on('key', this.submit, window, 'down:13', this),",
          "",
          "[Removed Lines]",
          "43:                 '<h3 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + this.get(TITLE) + '</h3>', Y.WidgetStdMod.REPLACE);",
          "",
          "[Added Lines]",
          "43:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + this.get(TITLE) + '</h1>', Y.WidgetStdMod.REPLACE);",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/confirm.js||lib/yui/src/notification/js/confirm.js": [
          "File: lib/yui/src/notification/js/confirm.js -> lib/yui/src/notification/js/confirm.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:         this.get(BASE).addClass('moodle-dialogue-confirm');",
          "44:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "45:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "48:         this._closeEvents.push(",
          "49:             Y.on('key', this.submit, window, 'down:27', this, false),",
          "",
          "[Removed Lines]",
          "46:                 '<h3 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + this.get(TITLE) + '</h3>', Y.WidgetStdMod.REPLACE);",
          "",
          "[Added Lines]",
          "46:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + this.get(TITLE) + '</h1>', Y.WidgetStdMod.REPLACE);",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js": [
          "File: lib/yui/src/notification/js/exception.js -> lib/yui/src/notification/js/exception.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             delay = this.get('hideTimeoutDelay');",
          "47:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "48:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "50:                 Y.WidgetStdMod.REPLACE);",
          "51:         content = Y.Node.create('<div class=\"moodle-exception\"></div>')",
          "52:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+Y.Escape.html(this.get('message'))+'</div>'))",
          "",
          "[Removed Lines]",
          "49:                 '<h3 id=\"moodle-dialogue-'+config.COUNT+'-header-text\">' + Y.Escape.html(config.name) + '</h3>',",
          "",
          "[Added Lines]",
          "49:                 '<h1 id=\"moodle-dialogue-'+config.COUNT+'-header-text\">' + Y.Escape.html(config.name) + '</h1>',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a15691beeb82f0d64753902853c0d9ca7ab4f913",
      "candidate_info": {
        "commit_hash": "a15691beeb82f0d64753902853c0d9ca7ab4f913",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/a15691beeb82f0d64753902853c0d9ca7ab4f913",
        "files": [
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-debug.js",
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-min.js",
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception.js",
          "lib/yui/build/moodle-core-notification-alert/moodle-core-notification-alert-debug.js",
          "lib/yui/build/moodle-core-notification-alert/moodle-core-notification-alert-min.js",
          "lib/yui/build/moodle-core-notification-alert/moodle-core-notification-alert.js",
          "lib/yui/build/moodle-core-notification-confirm/moodle-core-notification-confirm-debug.js",
          "lib/yui/build/moodle-core-notification-confirm/moodle-core-notification-confirm-min.js",
          "lib/yui/build/moodle-core-notification-confirm/moodle-core-notification-confirm.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-debug.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-min.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception.js",
          "lib/yui/src/notification/js/ajaxexception.js",
          "lib/yui/src/notification/js/alert.js",
          "lib/yui/src/notification/js/confirm.js",
          "lib/yui/src/notification/js/exception.js"
        ],
        "message": "MDL-46431 javascript_notifications: changed dialogue headings to h3's",
        "before_after_code_files": [
          "lib/yui/src/notification/js/ajaxexception.js||liyui/src/notification/js/ajaxexception.js",
          "lib/yui/src/notification/js/alert.js||liyui/src/notification/js/alert.js",
          "lib/yui/src/notification/js/confirm.js||liyui/src/notification/js/confirm.js",
          "lib/yui/src/notification/js/exception.js||liyui/src/notification/js/exception.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/yui/src/notification/js/ajaxexception.js||liyui/src/notification/js/ajaxexception.js": [
          "File: lib/yui/src/notification/js/ajaxexception.js -> liyui/src/notification/js/ajaxexception.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:             delay = this.get('hideTimeoutDelay');",
          "31:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "32:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "34:                 Y.WidgetStdMod.REPLACE);",
          "35:         content = Y.Node.create('<div class=\"moodle-ajaxexception\"></div>')",
          "36:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+Y.Escape.html(this.get('error'))+'</div>'))",
          "",
          "[Removed Lines]",
          "33:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + Y.Escape.html(config.name) + '</h1>',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/alert.js||liyui/src/notification/js/alert.js": [
          "File: lib/yui/src/notification/js/alert.js -> liyui/src/notification/js/alert.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:         this.get(BASE).addClass('moodle-dialogue-confirm');",
          "41:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "42:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "45:         this._closeEvents.push(",
          "46:             Y.on('key', this.submit, window, 'down:13', this),",
          "",
          "[Removed Lines]",
          "43:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + this.get(TITLE) + '</h1>', Y.WidgetStdMod.REPLACE);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/confirm.js||liyui/src/notification/js/confirm.js": [
          "File: lib/yui/src/notification/js/confirm.js -> liyui/src/notification/js/confirm.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:         this.get(BASE).addClass('moodle-dialogue-confirm');",
          "44:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "45:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "48:         this._closeEvents.push(",
          "49:             Y.on('key', this.submit, window, 'down:27', this, false),",
          "",
          "[Removed Lines]",
          "46:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + this.get(TITLE) + '</h1>', Y.WidgetStdMod.REPLACE);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/exception.js||liyui/src/notification/js/exception.js": [
          "File: lib/yui/src/notification/js/exception.js -> liyui/src/notification/js/exception.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             delay = this.get('hideTimeoutDelay');",
          "47:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "48:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "50:                 Y.WidgetStdMod.REPLACE);",
          "51:         content = Y.Node.create('<div class=\"moodle-exception\"></div>')",
          "52:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+Y.Escape.html(this.get('message'))+'</div>'))",
          "",
          "[Removed Lines]",
          "49:                 '<h1 id=\"moodle-dialogue-'+config.COUNT+'-header-text\">' + Y.Escape.html(config.name) + '</h1>',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7868699535a6fc2527fc03e500e09eb4c011cc6f",
      "candidate_info": {
        "commit_hash": "7868699535a6fc2527fc03e500e09eb4c011cc6f",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/7868699535a6fc2527fc03e500e09eb4c011cc6f",
        "files": [
          "lib/upgrade.txt",
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-debug.js",
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-min.js",
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception.js",
          "lib/yui/build/moodle-core-notification-alert/moodle-core-notification-alert-debug.js",
          "lib/yui/build/moodle-core-notification-alert/moodle-core-notification-alert-min.js",
          "lib/yui/build/moodle-core-notification-alert/moodle-core-notification-alert.js",
          "lib/yui/build/moodle-core-notification-confirm/moodle-core-notification-confirm-debug.js",
          "lib/yui/build/moodle-core-notification-confirm/moodle-core-notification-confirm-min.js",
          "lib/yui/build/moodle-core-notification-confirm/moodle-core-notification-confirm.js",
          "lib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue-debug.js",
          "lib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue-min.js",
          "lib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-debug.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-min.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception.js",
          "lib/yui/build/moodle-core-notification/moodle-core-notification-debug.js",
          "lib/yui/build/moodle-core-notification/moodle-core-notification-min.js",
          "lib/yui/build/moodle-core-notification/moodle-core-notification.js",
          "lib/yui/src/notification/build.json",
          "lib/yui/src/notification/js/ajaxexception.js",
          "lib/yui/src/notification/js/alert.js",
          "lib/yui/src/notification/js/confirm.js",
          "lib/yui/src/notification/js/dialogue.js",
          "lib/yui/src/notification/js/exception.js",
          "lib/yui/src/notification/js/notification.js",
          "lib/yui/src/notification/js/shared.js",
          "lib/yui/src/notification/meta/notification.json"
        ],
        "message": "MDL-40678 JavaScript: Split out moodle-core-notification into submodules",
        "before_after_code_files": [
          "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js",
          "lib/yui/src/notification/js/alert.js||lib/yui/src/notification/js/alert.js",
          "lib/yui/src/notification/js/confirm.js||lib/yui/src/notification/js/confirm.js",
          "lib/yui/src/notification/js/dialogue.js||lib/yui/src/notification/js/dialogue.js",
          "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js",
          "lib/yui/src/notification/js/notification.js||lib/yui/src/notification/js/notification.js",
          "lib/yui/src/notification/js/shared.js||lib/yui/src/notification/js/shared.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js",
            "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js"
          ],
          "candidate": [
            "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js",
            "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js": [
          "File: lib/yui/src/notification/js/ajaxexception.js -> lib/yui/src/notification/js/ajaxexception.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: var AJAXEXCEPTION_NAME = 'Moodle AJAX exception',",
          "10:     AJAXEXCEPTION;",
          "20: AJAXEXCEPTION = function(config) {",
          "21:     config.name = config.name || 'Error';",
          "22:     config.closeButton = true;",
          "23:     AJAXEXCEPTION.superclass.constructor.apply(this, [config]);",
          "24: };",
          "25: Y.extend(AJAXEXCEPTION, M.core.dialogue, {",
          "26:     _keypress : null,",
          "27:     initializer : function(config) {",
          "28:         var content,",
          "29:             self = this,",
          "30:             delay = this.get('hideTimeoutDelay');",
          "31:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "32:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "33:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + config.name + '</h1>', Y.WidgetStdMod.REPLACE);",
          "34:         content = Y.Node.create('<div class=\"moodle-ajaxexception\"></div>')",
          "35:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+this.get('error')+'</div>'))",
          "36:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-debuginfo\"><label>URL:</label> ' +",
          "37:                         this.get('reproductionlink')+'</div>'))",
          "38:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-debuginfo\"><label>Debug info:</label> ' +",
          "39:                         this.get('debuginfo')+'</div>'))",
          "40:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-stacktrace\"><label>Stack trace:</label> <pre>' +",
          "41:                         this.get('stacktrace')+'</pre></div>'));",
          "42:         if (M.cfg.developerdebug) {",
          "43:             content.all('.moodle-exception-param').removeClass('hidden');",
          "44:         }",
          "45:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "47:         if (delay) {",
          "48:             this._hideTimeout = setTimeout(function(){self.hide();}, delay);",
          "49:         }",
          "50:         this.after('visibleChange', this.visibilityChanged, this);",
          "51:         this._keypress = Y.on('key', this.hide, window, 'down:13, 27', this);",
          "52:         this.centerDialogue();",
          "53:     },",
          "54:     visibilityChanged : function(e) {",
          "55:         if (e.attrName === 'visible' && e.prevVal && !e.newVal) {",
          "56:             var self = this;",
          "57:             this._keypress.detach();",
          "58:             setTimeout(function(){self.destroy();}, 1000);",
          "59:         }",
          "60:     }",
          "61: }, {",
          "62:     NAME : AJAXEXCEPTION_NAME,",
          "63:     CSS_PREFIX : DIALOGUE_PREFIX,",
          "64:     ATTRS : {",
          "74:         error : {",
          "75:             validator : Y.Lang.isString,",
          "76:             value : 'Unknown error'",
          "77:         },",
          "87:         debuginfo : {",
          "88:             value : null",
          "89:         },",
          "99:         stacktrace : {",
          "100:             value : null",
          "101:         },",
          "111:         reproductionlink : {",
          "112:             setter : function(link) {",
          "113:                 if (link !== null) {",
          "114:                     link = '<a href=\"'+link+'\">'+link.replace(M.cfg.wwwroot, '')+'</a>';",
          "115:                 }",
          "116:                 return link;",
          "117:             },",
          "118:             value : null",
          "119:         },",
          "129:         hideTimeoutDelay : {",
          "130:             validator : Y.Lang.isNumber,",
          "131:             value : null",
          "132:         }",
          "133:     }",
          "134: });",
          "136: M.core.ajaxException = AJAXEXCEPTION;",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/alert.js||lib/yui/src/notification/js/alert.js": [
          "File: lib/yui/src/notification/js/alert.js -> lib/yui/src/notification/js/alert.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: var ALERT_NAME = 'Moodle alert',",
          "9:     ALERT;",
          "19: ALERT = function(config) {",
          "20:     config.closeButton = false;",
          "21:     ALERT.superclass.constructor.apply(this, [config]);",
          "22: };",
          "23: Y.extend(ALERT, M.core.dialogue, {",
          "24:     _enterKeypress : null,",
          "25:     initializer : function() {",
          "26:         this.publish('complete');",
          "27:         var yes = Y.Node.create('<input type=\"button\" id=\"id_yuialertconfirm-' + this.get('COUNT') + '\" value=\"'+this.get(CONFIRMYES)+'\" />'),",
          "28:             content = Y.Node.create('<div class=\"confirmation-dialogue\"></div>')",
          "29:                     .append(Y.Node.create('<div class=\"confirmation-message\">'+this.get('message')+'</div>'))",
          "30:                     .append(Y.Node.create('<div class=\"confirmation-buttons\"></div>')",
          "31:                             .append(yes));",
          "32:         this.get(BASE).addClass('moodle-dialogue-confirm');",
          "33:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "34:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "35:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + this.get(TITLE) + '</h1>', Y.WidgetStdMod.REPLACE);",
          "36:         this.after('destroyedChange', function(){this.get(BASE).remove();}, this);",
          "37:         this._enterKeypress = Y.on('key', this.submit, window, 'down:13', this);",
          "38:         yes.on('click', this.submit, this);",
          "39:     },",
          "40:     submit : function() {",
          "41:         this._enterKeypress.detach();",
          "42:         this.fire('complete');",
          "43:         this.hide();",
          "44:         this.destroy();",
          "45:     }",
          "46: }, {",
          "47:     NAME : ALERT_NAME,",
          "48:     CSS_PREFIX : DIALOGUE_PREFIX,",
          "49:     ATTRS : {",
          "58:         title : {",
          "59:             validator : Y.Lang.isString,",
          "60:             value : 'Alert'",
          "61:         },",
          "70:         message : {",
          "71:             validator : Y.Lang.isString,",
          "72:             value : 'Confirm'",
          "73:         },",
          "82:         yesLabel : {",
          "83:             validator : Y.Lang.isString,",
          "84:             setter : function(txt) {",
          "85:                 if (!txt) {",
          "86:                     txt = 'Ok';",
          "87:                 }",
          "88:                 return txt;",
          "89:             },",
          "90:             value : 'Ok'",
          "91:         }",
          "92:     }",
          "93: });",
          "95: M.core.alert = ALERT;",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/confirm.js||lib/yui/src/notification/js/confirm.js": [
          "File: lib/yui/src/notification/js/confirm.js -> lib/yui/src/notification/js/confirm.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: var CONFIRM_NAME = 'Moodle confirmation dialogue',",
          "9:     CONFIRM;",
          "19: CONFIRM = function(config) {",
          "20:     CONFIRM.superclass.constructor.apply(this, [config]);",
          "21: };",
          "22: Y.extend(CONFIRM, M.core.dialogue, {",
          "23:     _enterKeypress : null,",
          "24:     _escKeypress : null,",
          "25:     initializer : function() {",
          "26:         this.publish('complete');",
          "27:         this.publish('complete-yes');",
          "28:         this.publish('complete-no');",
          "29:         var yes = Y.Node.create('<input type=\"button\" id=\"id_yuiconfirmyes-' + this.get('COUNT') + '\" value=\"'+this.get(CONFIRMYES)+'\" />'),",
          "30:             no = Y.Node.create('<input type=\"button\" id=\"id_yuiconfirmno-' + this.get('COUNT') + '\" value=\"'+this.get(CONFIRMNO)+'\" />'),",
          "31:             content = Y.Node.create('<div class=\"confirmation-dialogue\"></div>')",
          "32:                         .append(Y.Node.create('<div class=\"confirmation-message\">'+this.get(QUESTION)+'</div>'))",
          "33:                         .append(Y.Node.create('<div class=\"confirmation-buttons\"></div>')",
          "34:                             .append(yes)",
          "35:                             .append(no));",
          "36:         this.get(BASE).addClass('moodle-dialogue-confirm');",
          "37:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "38:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "39:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + this.get(TITLE) + '</h1>', Y.WidgetStdMod.REPLACE);",
          "40:         this.after('destroyedChange', function(){this.get(BASE).remove();}, this);",
          "41:         this._enterKeypress = Y.on('key', this.submit, window, 'down:13', this, true);",
          "42:         this._escKeypress = Y.on('key', this.submit, window, 'down:27', this, false);",
          "43:         yes.on('click', this.submit, this, true);",
          "44:         no.on('click', this.submit, this, false);",
          "45:     },",
          "46:     submit : function(e, outcome) {",
          "47:         this._enterKeypress.detach();",
          "48:         this._escKeypress.detach();",
          "49:         this.fire('complete', outcome);",
          "50:         if (outcome) {",
          "51:             this.fire('complete-yes');",
          "52:         } else {",
          "53:             this.fire('complete-no');",
          "54:         }",
          "55:         this.hide();",
          "56:         this.destroy();",
          "57:     }",
          "58: }, {",
          "59:     NAME : CONFIRM_NAME,",
          "60:     CSS_PREFIX : DIALOGUE_PREFIX,",
          "61:     ATTRS : {",
          "70:         yesLabel : {",
          "71:             validator : Y.Lang.isString,",
          "72:             value : 'Yes'",
          "73:         },",
          "82:         noLabel : {",
          "83:             validator : Y.Lang.isString,",
          "84:             value : 'No'",
          "85:         },",
          "94:         title : {",
          "95:             validator : Y.Lang.isString,",
          "96:             value : 'Confirm'",
          "97:         },",
          "106:         question : {",
          "107:             validator : Y.Lang.isString,",
          "108:             value : 'Are you sure?'",
          "109:         }",
          "110:     }",
          "111: });",
          "112: Y.augment(CONFIRM, Y.EventTarget);",
          "114: M.core.confirm = CONFIRM;",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/dialogue.js||lib/yui/src/notification/js/dialogue.js": [
          "File: lib/yui/src/notification/js/dialogue.js -> lib/yui/src/notification/js/dialogue.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: var DIALOGUE_NAME = 'Moodle dialogue',",
          "9:     DIALOGUE;",
          "19: DIALOGUE = function(config) {",
          "20:     COUNT++;",
          "21:     var id = 'moodle-dialogue-'+COUNT;",
          "22:     config.notificationBase =",
          "23:         Y.Node.create('<div class=\"'+CSS.BASE+'\">')",
          "24:               .append(Y.Node.create('<div id=\"'+id+'\" role=\"dialog\" aria-labelledby=\"'+id+'-header-text\" class=\"'+CSS.WRAP+'\"></div>')",
          "25:               .append(Y.Node.create('<div class=\"'+CSS.HEADER+' yui3-widget-hd\"></div>'))",
          "26:               .append(Y.Node.create('<div class=\"'+CSS.BODY+' yui3-widget-bd\"></div>'))",
          "27:               .append(Y.Node.create('<div class=\"'+CSS.FOOTER+' yui3-widget-ft\"></div>')));",
          "28:     Y.one(document.body).append(config.notificationBase);",
          "29:     config.srcNode =    '#'+id;",
          "30:     config.width =      config.width || '400px';",
          "31:     config.visible =    config.visible || false;",
          "32:     config.center =     config.centered || true;",
          "33:     config.centered =   false;",
          "34:     config.COUNT = COUNT;",
          "37:     if (config.lightbox !== false) {",
          "38:         config.modal = true;",
          "39:     }",
          "40:     delete config.lightbox;",
          "43:     if (config.closeButton === false) {",
          "44:         config.buttons = null;",
          "45:     } else {",
          "46:         config.buttons = [",
          "47:             {",
          "48:                 section: Y.WidgetStdMod.HEADER,",
          "49:                 classNames: 'closebutton',",
          "50:                 action: function () {",
          "51:                     this.hide();",
          "52:                 }",
          "53:             }",
          "54:         ];",
          "55:     }",
          "56:     DIALOGUE.superclass.constructor.apply(this, [config]);",
          "58:     if (config.closeButton !== false) {",
          "60:         this.get('buttons').header[0].setAttribute('title', this.get('closeButtonTitle'));",
          "61:     }",
          "62: };",
          "63: Y.extend(DIALOGUE, Y.Panel, {",
          "64:     initializer : function() {",
          "65:         this.after('visibleChange', this.visibilityChanged, this);",
          "66:         this.render();",
          "67:         this.show();",
          "68:         this.set('COUNT', COUNT);",
          "72:         this.get('boundingBox').setStyle('zIndex', null);",
          "73:     },",
          "74:     visibilityChanged : function(e) {",
          "75:         var titlebar;",
          "76:         if (e.attrName === 'visible') {",
          "77:             this.get('maskNode').addClass(CSS.LIGHTBOX);",
          "78:             if (this.get('center') && !e.prevVal && e.newVal) {",
          "79:                 this.centerDialogue();",
          "80:             }",
          "81:             if (this.get('draggable')) {",
          "82:                 titlebar = '#' + this.get('id') + ' .' + CSS.HEADER;",
          "83:                 this.plug(Y.Plugin.Drag, {handles : [titlebar]});",
          "84:                 Y.one(titlebar).setStyle('cursor', 'move');",
          "85:             }",
          "86:         }",
          "87:     },",
          "88:     centerDialogue : function() {",
          "89:         var bb = this.get('boundingBox'),",
          "90:             hidden = bb.hasClass(DIALOGUE_PREFIX+'-hidden'),",
          "91:             x, y;",
          "92:         if (hidden) {",
          "93:             bb.setStyle('top', '-1000px').removeClass(DIALOGUE_PREFIX+'-hidden');",
          "94:         }",
          "95:         x = Math.max(Math.round((bb.get('winWidth') - bb.get('offsetWidth'))/2), 15);",
          "96:         y = Math.max(Math.round((bb.get('winHeight') - bb.get('offsetHeight'))/2), 15) + Y.one(window).get('scrollTop');",
          "98:         if (hidden) {",
          "99:             bb.addClass(DIALOGUE_PREFIX+'-hidden');",
          "100:         }",
          "101:         bb.setStyle('left', x).setStyle('top', y);",
          "102:     }",
          "103: }, {",
          "104:     NAME : DIALOGUE_NAME,",
          "105:     CSS_PREFIX : DIALOGUE_PREFIX,",
          "106:     ATTRS : {",
          "107:         notificationBase : {",
          "109:         },",
          "119:         lightbox : {",
          "120:             validator : Y.Lang.isBoolean,",
          "121:             value : true",
          "122:         },",
          "134:         closeButton : {",
          "135:             validator : Y.Lang.isBoolean,",
          "136:             value : true",
          "137:         },",
          "146:         closeButtonTitle : {",
          "147:             validator : Y.Lang.isString,",
          "148:             value : 'Close'",
          "149:         },",
          "158:         center : {",
          "159:             validator : Y.Lang.isBoolean,",
          "160:             value : true",
          "161:         },",
          "170:         draggable : {",
          "171:             validator : Y.Lang.isBoolean,",
          "172:             value : false",
          "173:         },",
          "174:         COUNT: {",
          "175:             value: 0",
          "176:         }",
          "177:     }",
          "178: });",
          "180: M.core.dialogue = DIALOGUE;",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js": [
          "File: lib/yui/src/notification/js/exception.js -> lib/yui/src/notification/js/exception.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: var EXCEPTION_NAME = 'Moodle exception',",
          "10:     EXCEPTION;",
          "20: EXCEPTION = function(config) {",
          "21:     config.width = config.width || (M.cfg.developerdebug)?Math.floor(Y.one(document.body).get('winWidth')/3)+'px':null;",
          "22:     config.closeButton = true;",
          "23:     EXCEPTION.superclass.constructor.apply(this, [config]);",
          "24: };",
          "25: Y.extend(EXCEPTION, M.core.dialogue, {",
          "26:     _hideTimeout : null,",
          "27:     _keypress : null,",
          "28:     initializer : function(config) {",
          "29:         var content,",
          "30:             self = this,",
          "31:             delay = this.get('hideTimeoutDelay');",
          "32:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "33:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "34:                 '<h1 id=\"moodle-dialogue-'+COUNT+'-header-text\">' + config.name + '</h1>', Y.WidgetStdMod.REPLACE);",
          "35:         content = Y.Node.create('<div class=\"moodle-exception\"></div>')",
          "36:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+this.get('message')+'</div>'))",
          "37:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-filename\"><label>File:</label> ' +",
          "38:                         this.get('fileName')+'</div>'))",
          "39:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-linenumber\"><label>Line:</label> ' +",
          "40:                         this.get('lineNumber')+'</div>'))",
          "41:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-stacktrace\"><label>Stack trace:</label> <pre>' +",
          "42:                         this.get('stack')+'</pre></div>'));",
          "43:         if (M.cfg.developerdebug) {",
          "44:             content.all('.moodle-exception-param').removeClass('hidden');",
          "45:         }",
          "46:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "48:         if (delay) {",
          "49:             this._hideTimeout = setTimeout(function(){self.hide();}, delay);",
          "50:         }",
          "51:         this.after('visibleChange', this.visibilityChanged, this);",
          "52:         this.after('destroyedChange', function(){this.get(BASE).remove();}, this);",
          "53:         this._keypress = Y.on('key', this.hide, window, 'down:13,27', this);",
          "54:         this.centerDialogue();",
          "55:     },",
          "56:     visibilityChanged : function(e) {",
          "57:         if (e.attrName === 'visible' && e.prevVal && !e.newVal) {",
          "58:             if (this._keypress) {",
          "59:                 this._keypress.detach();",
          "60:             }",
          "61:             var self = this;",
          "62:             setTimeout(function(){self.destroy();}, 1000);",
          "63:         }",
          "64:     }",
          "65: }, {",
          "66:     NAME : EXCEPTION_NAME,",
          "67:     CSS_PREFIX : DIALOGUE_PREFIX,",
          "68:     ATTRS : {",
          "76:         message : {",
          "77:             value : ''",
          "78:         },",
          "87:         name : {",
          "88:             value : ''",
          "89:         },",
          "98:         fileName : {",
          "99:             value : ''",
          "100:         },",
          "109:         lineNumber : {",
          "110:             value : ''",
          "111:         },",
          "120:         stack : {",
          "121:             setter : function(str) {",
          "122:                 var lines = str.split(\"\\n\"),",
          "123:                     pattern = new RegExp('^(.+)@('+M.cfg.wwwroot+')?(.{0,75}).*:(\\\\d+)$'),",
          "124:                     i;",
          "125:                 for (i in lines) {",
          "126:                     lines[i] = lines[i].replace(pattern,",
          "127:                             \"<div class='stacktrace-line'>ln: $4</div><div class='stacktrace-file'>$3</div><div class='stacktrace-call'>$1</div>\");",
          "128:                 }",
          "129:                 return lines.join('');",
          "130:             },",
          "131:             value : ''",
          "132:         },",
          "142:         hideTimeoutDelay : {",
          "143:             validator : Y.Lang.isNumber,",
          "144:             value : null",
          "145:         }",
          "146:     }",
          "147: });",
          "149: M.core.exception = EXCEPTION;",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/notification.js||lib/yui/src/notification/js/notification.js": [
          "File: lib/yui/src/notification/js/notification.js -> lib/yui/src/notification/js/notification.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: var DIALOGUE_NAME = 'Moodle dialogue',",
          "2:     DIALOGUE_PREFIX = 'moodle-dialogue',",
          "3:     CONFIRM_NAME = 'Moodle confirmation dialogue',",
          "4:     EXCEPTION_NAME = 'Moodle exception',",
          "5:     AJAXEXCEPTION_NAME = 'Moodle AJAX exception',",
          "6:     ALERT_NAME = 'Moodle alert',",
          "7:     BASE = 'notificationBase',",
          "8:     COUNT = 0,",
          "9:     CONFIRMYES = 'yesLabel',",
          "10:     CONFIRMNO = 'noLabel',",
          "11:     TITLE = 'title',",
          "12:     QUESTION = 'question',",
          "13:     CSS = {",
          "14:         BASE : 'moodle-dialogue-base',",
          "15:         WRAP : 'moodle-dialogue-wrap',",
          "16:         HEADER : 'moodle-dialogue-hd',",
          "17:         BODY : 'moodle-dialogue-bd',",
          "18:         CONTENT : 'moodle-dialogue-content',",
          "19:         FOOTER : 'moodle-dialogue-ft',",
          "20:         HIDDEN : 'hidden',",
          "21:         LIGHTBOX : 'moodle-dialogue-lightbox'",
          "22:     },",
          "23:     EXCEPTION,",
          "24:     ALERT,",
          "25:     CONFIRM,",
          "26:     AJAXEXCEPTION,",
          "27:     DIALOGUE;",
          "29: DIALOGUE = function(config) {",
          "30:     COUNT++;",
          "31:     var id = 'moodle-dialogue-'+COUNT;",
          "32:     config.notificationBase =",
          "33:         Y.Node.create('<div class=\"'+CSS.BASE+'\">')",
          "34:               .append(Y.Node.create('<div id=\"'+id+'\" role=\"dialog\" aria-labelledby=\"'+id+'-header-text\" class=\"'+CSS.WRAP+'\"></div>')",
          "35:               .append(Y.Node.create('<div class=\"'+CSS.HEADER+' yui3-widget-hd\"></div>'))",
          "36:               .append(Y.Node.create('<div class=\"'+CSS.BODY+' yui3-widget-bd\"></div>'))",
          "37:               .append(Y.Node.create('<div class=\"'+CSS.FOOTER+' yui3-widget-ft\"></div>')));",
          "38:     Y.one(document.body).append(config.notificationBase);",
          "39:     config.srcNode =    '#'+id;",
          "40:     config.width =      config.width || '400px';",
          "41:     config.visible =    config.visible || false;",
          "42:     config.center =     config.centered || true;",
          "43:     config.centered =   false;",
          "46:     if (config.lightbox !== false) {",
          "47:         config.modal = true;",
          "48:     }",
          "49:     delete config.lightbox;",
          "52:     if (config.closeButton === false) {",
          "53:         config.buttons = null;",
          "54:     } else {",
          "55:         config.buttons = [",
          "56:             {",
          "57:                 section: Y.WidgetStdMod.HEADER,",
          "58:                 classNames: 'closebutton',",
          "59:                 action: function () {",
          "60:                     this.hide();",
          "61:                 }",
          "62:             }",
          "63:         ];",
          "64:     }",
          "65:     DIALOGUE.superclass.constructor.apply(this, [config]);",
          "67:     if (config.closeButton !== false) {",
          "69:         this.get('buttons').header[0].setAttribute('title', this.get('closeButtonTitle'));",
          "70:     }",
          "71: };",
          "72: Y.extend(DIALOGUE, Y.Panel, {",
          "73:     initializer : function() {",
          "74:         this.after('visibleChange', this.visibilityChanged, this);",
          "75:         this.render();",
          "76:         this.show();",
          "80:         this.get('boundingBox').setStyle('zIndex', null);",
          "81:     },",
          "82:     visibilityChanged : function(e) {",
          "83:         var titlebar;",
          "84:         if (e.attrName === 'visible') {",
          "85:             this.get('maskNode').addClass(CSS.LIGHTBOX);",
          "86:             if (this.get('center') && !e.prevVal && e.newVal) {",
          "87:                 this.centerDialogue();",
          "88:             }",
          "89:             if (this.get('draggable')) {",
          "90:                 titlebar = '#' + this.get('id') + ' .' + CSS.HEADER;",
          "91:                 this.plug(Y.Plugin.Drag, {handles : [titlebar]});",
          "92:                 Y.one(titlebar).setStyle('cursor', 'move');",
          "93:             }",
          "94:         }",
          "95:     },",
          "96:     centerDialogue : function() {",
          "97:         var bb = this.get('boundingBox'),",
          "98:             hidden = bb.hasClass(DIALOGUE_PREFIX+'-hidden'),",
          "99:             x, y;",
          "100:         if (hidden) {",
          "101:             bb.setStyle('top', '-1000px').removeClass(DIALOGUE_PREFIX+'-hidden');",
          "102:         }",
          "103:         x = Math.max(Math.round((bb.get('winWidth') - bb.get('offsetWidth'))/2), 15);",
          "104:         y = Math.max(Math.round((bb.get('winHeight') - bb.get('offsetHeight'))/2), 15) + Y.one(window).get('scrollTop');",
          "106:         if (hidden) {",
          "107:             bb.addClass(DIALOGUE_PREFIX+'-hidden');",
          "108:         }",
          "109:         bb.setStyle('left', x).setStyle('top', y);",
          "110:     }",
          "111: }, {",
          "112:     NAME : DIALOGUE_NAME,",
          "113:     CSS_PREFIX : DIALOGUE_PREFIX,",
          "114:     ATTRS : {",
          "115:         notificationBase : {",
          "117:         },",
          "118:         lightbox : {",
          "119:             validator : Y.Lang.isBoolean,",
          "120:             value : true",
          "121:         },",
          "122:         closeButton : {",
          "123:             validator : Y.Lang.isBoolean,",
          "124:             value : true",
          "125:         },",
          "126:         closeButtonTitle : {",
          "127:             validator : Y.Lang.isString,",
          "128:             value : 'Close'",
          "129:         },",
          "130:         center : {",
          "131:             validator : Y.Lang.isBoolean,",
          "132:             value : true",
          "133:         },",
          "134:         draggable : {",
          "135:             validator : Y.Lang.isBoolean,",
          "136:             value : false",
          "137:         }",
          "138:     }",
          "139: });",
          "141: ALERT = function(config) {",
          "142:     config.closeButton = false;",
          "143:     ALERT.superclass.constructor.apply(this, [config]);",
          "144: };",
          "145: Y.extend(ALERT, DIALOGUE, {",
          "146:     _enterKeypress : null,",
          "147:     initializer : function() {",
          "148:         this.publish('complete');",
          "149:         var yes = Y.Node.create('<input type=\"button\" id=\"id_yuialertconfirm-' + this.COUNT + '\" value=\"'+this.get(CONFIRMYES)+'\" />'),",
          "150:             content = Y.Node.create('<div class=\"confirmation-dialogue\"></div>')",
          "151:                     .append(Y.Node.create('<div class=\"confirmation-message\">'+this.get('message')+'</div>'))",
          "152:                     .append(Y.Node.create('<div class=\"confirmation-buttons\"></div>')",
          "153:                             .append(yes));",
          "154:         this.get(BASE).addClass('moodle-dialogue-confirm');",
          "155:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "156:         this.setStdModContent(Y.WidgetStdMod.HEADER, '<h1 id=\"moodle-dialogue-'+COUNT+'-header-text\">' + this.get(TITLE) + '</h1>', Y.WidgetStdMod.REPLACE);",
          "157:         this.after('destroyedChange', function(){this.get(BASE).remove();}, this);",
          "158:         this._enterKeypress = Y.on('key', this.submit, window, 'down:13', this);",
          "159:         yes.on('click', this.submit, this);",
          "160:     },",
          "161:     submit : function() {",
          "162:         this._enterKeypress.detach();",
          "163:         this.fire('complete');",
          "164:         this.hide();",
          "165:         this.destroy();",
          "166:     }",
          "167: }, {",
          "168:     NAME : ALERT_NAME,",
          "169:     CSS_PREFIX : DIALOGUE_PREFIX,",
          "170:     ATTRS : {",
          "171:         title : {",
          "172:             validator : Y.Lang.isString,",
          "173:             value : 'Alert'",
          "174:         },",
          "175:         message : {",
          "176:             validator : Y.Lang.isString,",
          "177:             value : 'Confirm'",
          "178:         },",
          "179:         yesLabel : {",
          "180:             validator : Y.Lang.isString,",
          "181:             setter : function(txt) {",
          "182:                 if (!txt) {",
          "183:                     txt = 'Ok';",
          "184:                 }",
          "185:                 return txt;",
          "186:             },",
          "187:             value : 'Ok'",
          "188:         }",
          "189:     }",
          "190: });",
          "192: CONFIRM = function(config) {",
          "193:     CONFIRM.superclass.constructor.apply(this, [config]);",
          "194: };",
          "195: Y.extend(CONFIRM, DIALOGUE, {",
          "196:     _enterKeypress : null,",
          "197:     _escKeypress : null,",
          "198:     initializer : function() {",
          "199:         this.publish('complete');",
          "200:         this.publish('complete-yes');",
          "201:         this.publish('complete-no');",
          "202:         var yes = Y.Node.create('<input type=\"button\" id=\"id_yuiconfirmyes-' + this.COUNT + '\" value=\"'+this.get(CONFIRMYES)+'\" />'),",
          "203:             no = Y.Node.create('<input type=\"button\" id=\"id_yuiconfirmno-' + this.COUNT + '\" value=\"'+this.get(CONFIRMNO)+'\" />'),",
          "204:             content = Y.Node.create('<div class=\"confirmation-dialogue\"></div>')",
          "205:                         .append(Y.Node.create('<div class=\"confirmation-message\">'+this.get(QUESTION)+'</div>'))",
          "206:                         .append(Y.Node.create('<div class=\"confirmation-buttons\"></div>')",
          "207:                             .append(yes)",
          "208:                             .append(no));",
          "209:         this.get(BASE).addClass('moodle-dialogue-confirm');",
          "210:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "211:         this.setStdModContent(Y.WidgetStdMod.HEADER, '<h1 id=\"moodle-dialogue-'+COUNT+'-header-text\">' + this.get(TITLE) + '</h1>', Y.WidgetStdMod.REPLACE);",
          "212:         this.after('destroyedChange', function(){this.get(BASE).remove();}, this);",
          "213:         this._enterKeypress = Y.on('key', this.submit, window, 'down:13', this, true);",
          "214:         this._escKeypress = Y.on('key', this.submit, window, 'down:27', this, false);",
          "215:         yes.on('click', this.submit, this, true);",
          "216:         no.on('click', this.submit, this, false);",
          "217:     },",
          "218:     submit : function(e, outcome) {",
          "219:         this._enterKeypress.detach();",
          "220:         this._escKeypress.detach();",
          "221:         this.fire('complete', outcome);",
          "222:         if (outcome) {",
          "223:             this.fire('complete-yes');",
          "224:         } else {",
          "225:             this.fire('complete-no');",
          "226:         }",
          "227:         this.hide();",
          "228:         this.destroy();",
          "229:     }",
          "230: }, {",
          "231:     NAME : CONFIRM_NAME,",
          "232:     CSS_PREFIX : DIALOGUE_PREFIX,",
          "233:     ATTRS : {",
          "234:         yesLabel : {",
          "235:             validator : Y.Lang.isString,",
          "236:             value : 'Yes'",
          "237:         },",
          "238:         noLabel : {",
          "239:             validator : Y.Lang.isString,",
          "240:             value : 'No'",
          "241:         },",
          "242:         title : {",
          "243:             validator : Y.Lang.isString,",
          "244:             value : 'Confirm'",
          "245:         },",
          "246:         question : {",
          "247:             validator : Y.Lang.isString,",
          "248:             value : 'Are you sure?'",
          "249:         }",
          "250:     }",
          "251: });",
          "252: Y.augment(CONFIRM, Y.EventTarget);",
          "254: EXCEPTION = function(config) {",
          "255:     config.width = config.width || (M.cfg.developerdebug)?Math.floor(Y.one(document.body).get('winWidth')/3)+'px':null;",
          "256:     config.closeButton = true;",
          "257:     EXCEPTION.superclass.constructor.apply(this, [config]);",
          "258: };",
          "259: Y.extend(EXCEPTION, DIALOGUE, {",
          "260:     _hideTimeout : null,",
          "261:     _keypress : null,",
          "262:     initializer : function(config) {",
          "263:         var content,",
          "264:             self = this,",
          "265:             delay = this.get('hideTimeoutDelay');",
          "266:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "267:         this.setStdModContent(Y.WidgetStdMod.HEADER, '<h1 id=\"moodle-dialogue-'+COUNT+'-header-text\">' + config.name + '</h1>', Y.WidgetStdMod.REPLACE);",
          "268:         content = Y.Node.create('<div class=\"moodle-exception\"></div>')",
          "269:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+this.get('message')+'</div>'))",
          "270:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-filename\"><label>File:</label> '+this.get('fileName')+'</div>'))",
          "271:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-linenumber\"><label>Line:</label> '+this.get('lineNumber')+'</div>'))",
          "272:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-stacktrace\"><label>Stack trace:</label> <pre>'+this.get('stack')+'</pre></div>'));",
          "273:         if (M.cfg.developerdebug) {",
          "274:             content.all('.moodle-exception-param').removeClass('hidden');",
          "275:         }",
          "276:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "278:         if (delay) {",
          "279:             this._hideTimeout = setTimeout(function(){self.hide();}, delay);",
          "280:         }",
          "281:         this.after('visibleChange', this.visibilityChanged, this);",
          "282:         this.after('destroyedChange', function(){this.get(BASE).remove();}, this);",
          "283:         this._keypress = Y.on('key', this.hide, window, 'down:13,27', this);",
          "284:         this.centerDialogue();",
          "285:     },",
          "286:     visibilityChanged : function(e) {",
          "287:         if (e.attrName === 'visible' && e.prevVal && !e.newVal) {",
          "288:             if (this._keypress) {",
          "289:                 this._keypress.detach();",
          "290:             }",
          "291:             var self = this;",
          "292:             setTimeout(function(){self.destroy();}, 1000);",
          "293:         }",
          "294:     }",
          "295: }, {",
          "296:     NAME : EXCEPTION_NAME,",
          "297:     CSS_PREFIX : DIALOGUE_PREFIX,",
          "298:     ATTRS : {",
          "299:         message : {",
          "300:             value : ''",
          "301:         },",
          "302:         name : {",
          "303:             value : ''",
          "304:         },",
          "305:         fileName : {",
          "306:             value : ''",
          "307:         },",
          "308:         lineNumber : {",
          "309:             value : ''",
          "310:         },",
          "311:         stack : {",
          "312:             setter : function(str) {",
          "313:                 var lines = str.split(\"\\n\"),",
          "314:                     pattern = new RegExp('^(.+)@('+M.cfg.wwwroot+')?(.{0,75}).*:(\\\\d+)$'),",
          "315:                     i;",
          "316:                 for (i in lines) {",
          "317:                     lines[i] = lines[i].replace(pattern,",
          "318:                             \"<div class='stacktrace-line'>ln: $4</div><div class='stacktrace-file'>$3</div><div class='stacktrace-call'>$1</div>\");",
          "319:                 }",
          "320:                 return lines.join('');",
          "321:             },",
          "322:             value : ''",
          "323:         },",
          "324:         hideTimeoutDelay : {",
          "325:             validator : Y.Lang.isNumber,",
          "326:             value : null",
          "327:         }",
          "328:     }",
          "329: });",
          "331: AJAXEXCEPTION = function(config) {",
          "332:     config.name = config.name || 'Error';",
          "333:     config.closeButton = true;",
          "334:     AJAXEXCEPTION.superclass.constructor.apply(this, [config]);",
          "335: };",
          "336: Y.extend(AJAXEXCEPTION, DIALOGUE, {",
          "337:     _keypress : null,",
          "338:     initializer : function(config) {",
          "339:         var content,",
          "340:             self = this,",
          "341:             delay = this.get('hideTimeoutDelay');",
          "342:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "343:         this.setStdModContent(Y.WidgetStdMod.HEADER, '<h1 id=\"moodle-dialogue-'+COUNT+'-header-text\">' + config.name + '</h1>', Y.WidgetStdMod.REPLACE);",
          "344:         content = Y.Node.create('<div class=\"moodle-ajaxexception\"></div>')",
          "345:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+this.get('error')+'</div>'))",
          "346:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-debuginfo\"><label>URL:</label> '+this.get('reproductionlink')+'</div>'))",
          "347:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-debuginfo\"><label>Debug info:</label> '+this.get('debuginfo')+'</div>'))",
          "348:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-stacktrace\"><label>Stack trace:</label> <pre>'+this.get('stacktrace')+'</pre></div>'));",
          "349:         if (M.cfg.developerdebug) {",
          "350:             content.all('.moodle-exception-param').removeClass('hidden');",
          "351:         }",
          "352:         this.setStdModContent(Y.WidgetStdMod.BODY, content, Y.WidgetStdMod.REPLACE);",
          "354:         if (delay) {",
          "355:             this._hideTimeout = setTimeout(function(){self.hide();}, delay);",
          "356:         }",
          "357:         this.after('visibleChange', this.visibilityChanged, this);",
          "358:         this._keypress = Y.on('key', this.hide, window, 'down:13, 27', this);",
          "359:         this.centerDialogue();",
          "360:     },",
          "361:     visibilityChanged : function(e) {",
          "362:         if (e.attrName === 'visible' && e.prevVal && !e.newVal) {",
          "363:             var self = this;",
          "364:             this._keypress.detach();",
          "365:             setTimeout(function(){self.destroy();}, 1000);",
          "366:         }",
          "367:     }",
          "368: }, {",
          "369:     NAME : AJAXEXCEPTION_NAME,",
          "370:     CSS_PREFIX : DIALOGUE_PREFIX,",
          "371:     ATTRS : {",
          "372:         error : {",
          "373:             validator : Y.Lang.isString,",
          "374:             value : 'Unknown error'",
          "375:         },",
          "376:         debuginfo : {",
          "377:             value : null",
          "378:         },",
          "379:         stacktrace : {",
          "380:             value : null",
          "381:         },",
          "382:         reproductionlink : {",
          "383:             setter : function(link) {",
          "384:                 if (link !== null) {",
          "385:                     link = '<a href=\"'+link+'\">'+link.replace(M.cfg.wwwroot, '')+'</a>';",
          "386:                 }",
          "387:                 return link;",
          "388:             },",
          "389:             value : null",
          "390:         },",
          "391:         hideTimeoutDelay : {",
          "392:             validator : Y.Lang.isNumber,",
          "393:             value : null",
          "394:         }",
          "395:     }",
          "396: });",
          "398: M.core = M.core || {};",
          "399: M.core.dialogue = DIALOGUE;",
          "400: M.core.alert = ALERT;",
          "401: M.core.confirm = CONFIRM;",
          "402: M.core.exception = EXCEPTION;",
          "403: M.core.ajaxException = AJAXEXCEPTION;",
          "",
          "[Added Lines]",
          "24: Y.log(\"The moodle-core-notification parent module has been deprecated. \" +",
          "25:         \"Please use one of its' subclasses instead.\", 'moodle-core-notification', 'warn');",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/shared.js||lib/yui/src/notification/js/shared.js": [
          "File: lib/yui/src/notification/js/shared.js -> lib/yui/src/notification/js/shared.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: var DIALOGUE_PREFIX,",
          "2:     BASE,",
          "3:     COUNT,",
          "4:     CONFIRMYES,",
          "5:     CONFIRMNO,",
          "6:     TITLE,",
          "7:     QUESTION,",
          "8:     CSS;",
          "10: DIALOGUE_PREFIX = 'moodle-dialogue',",
          "11: BASE = 'notificationBase',",
          "12: COUNT = 0,",
          "13: CONFIRMYES = 'yesLabel',",
          "14: CONFIRMNO = 'noLabel',",
          "15: TITLE = 'title',",
          "16: QUESTION = 'question',",
          "17: CSS = {",
          "18:     BASE : 'moodle-dialogue-base',",
          "19:     WRAP : 'moodle-dialogue-wrap',",
          "20:     HEADER : 'moodle-dialogue-hd',",
          "21:     BODY : 'moodle-dialogue-bd',",
          "22:     CONTENT : 'moodle-dialogue-content',",
          "23:     FOOTER : 'moodle-dialogue-ft',",
          "24:     HIDDEN : 'hidden',",
          "25:     LIGHTBOX : 'moodle-dialogue-lightbox'",
          "26: };",
          "29: M.core = M.core || {};",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "166e18d7cbb36d58d08a2783edd98284d5a3b98a",
      "candidate_info": {
        "commit_hash": "166e18d7cbb36d58d08a2783edd98284d5a3b98a",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/166e18d7cbb36d58d08a2783edd98284d5a3b98a",
        "files": [
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-debug.js",
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-min.js",
          "lib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception.js",
          "lib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue-debug.js",
          "lib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue-min.js",
          "lib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-debug.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-min.js",
          "lib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception.js",
          "lib/yui/src/notification/js/ajaxexception.js",
          "lib/yui/src/notification/js/exception.js",
          "lib/yui/src/notification/meta/notification.json"
        ],
        "message": "MDL-45471 javascript: Escape content of exception dialogs\n\nConflicts:\n\n\tlib/yui/build/moodle-core-notification-ajaxexception/moodle-core-notification-ajaxexception-min.js\n\tlib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue-debug.js\n\tlib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue-min.js\n\tlib/yui/build/moodle-core-notification-dialogue/moodle-core-notification-dialogue.js\n\tlib/yui/build/moodle-core-notification-exception/moodle-core-notification-exception-min.js",
        "before_after_code_files": [
          "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js",
          "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js",
            "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js"
          ],
          "candidate": [
            "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js",
            "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/yui/src/notification/js/ajaxexception.js||lib/yui/src/notification/js/ajaxexception.js": [
          "File: lib/yui/src/notification/js/ajaxexception.js -> lib/yui/src/notification/js/ajaxexception.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:             delay = this.get('hideTimeoutDelay');",
          "31:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "32:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "34:         content = Y.Node.create('<div class=\"moodle-ajaxexception\"></div>')",
          "36:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-debuginfo\"><label>URL:</label> ' +",
          "37:                         this.get('reproductionlink')+'</div>'))",
          "38:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-debuginfo\"><label>Debug info:</label> ' +",
          "40:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-stacktrace\"><label>Stack trace:</label> <pre>' +",
          "42:         if (M.cfg.developerdebug) {",
          "43:             content.all('.moodle-exception-param').removeClass('hidden');",
          "44:         }",
          "",
          "[Removed Lines]",
          "33:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + config.name + '</h1>', Y.WidgetStdMod.REPLACE);",
          "35:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+this.get('error')+'</div>'))",
          "39:                         this.get('debuginfo')+'</div>'))",
          "41:                         this.get('stacktrace')+'</pre></div>'));",
          "",
          "[Added Lines]",
          "33:                 '<h1 id=\"moodle-dialogue-'+this.get('COUNT')+'-header-text\">' + Y.Escape.html(config.name) + '</h1>',",
          "34:                 Y.WidgetStdMod.REPLACE);",
          "36:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+Y.Escape.html(this.get('error'))+'</div>'))",
          "40:                         Y.Escape.html(this.get('debuginfo'))+'</div>'))",
          "42:                         Y.Escape.html(this.get('stacktrace'))+'</pre></div>'));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111:         reproductionlink : {",
          "112:             setter : function(link) {",
          "113:                 if (link !== null) {",
          "114:                     link = '<a href=\"'+link+'\">'+link.replace(M.cfg.wwwroot, '')+'</a>';",
          "115:                 }",
          "116:                 return link;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:                     link = Y.Escape.html(link);",
          "",
          "---------------"
        ],
        "lib/yui/src/notification/js/exception.js||lib/yui/src/notification/js/exception.js": [
          "File: lib/yui/src/notification/js/exception.js -> lib/yui/src/notification/js/exception.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             delay = this.get('hideTimeoutDelay');",
          "47:         this.get(BASE).addClass('moodle-dialogue-exception');",
          "48:         this.setStdModContent(Y.WidgetStdMod.HEADER,",
          "50:         content = Y.Node.create('<div class=\"moodle-exception\"></div>')",
          "52:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-filename\"><label>File:</label> ' +",
          "54:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-linenumber\"><label>Line:</label> ' +",
          "56:                 .append(Y.Node.create('<div class=\"moodle-exception-param hidden param-stacktrace\"><label>Stack trace:</label> <pre>' +",
          "57:                         this.get('stack')+'</pre></div>'));",
          "58:         if (M.cfg.developerdebug) {",
          "",
          "[Removed Lines]",
          "49:                 '<h1 id=\"moodle-dialogue-'+config.COUNT+'-header-text\">' + config.name + '</h1>', Y.WidgetStdMod.REPLACE);",
          "51:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+this.get('message')+'</div>'))",
          "53:                         this.get('fileName')+'</div>'))",
          "55:                         this.get('lineNumber')+'</div>'))",
          "",
          "[Added Lines]",
          "49:                 '<h1 id=\"moodle-dialogue-'+config.COUNT+'-header-text\">' + Y.Escape.html(config.name) + '</h1>',",
          "50:                 Y.WidgetStdMod.REPLACE);",
          "52:                 .append(Y.Node.create('<div class=\"moodle-exception-message\">'+Y.Escape.html(this.get('message'))+'</div>'))",
          "54:                         Y.Escape.html(this.get('fileName'))+'</div>'))",
          "56:                         Y.Escape.html(this.get('lineNumber'))+'</div>'))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "135:         stack : {",
          "136:             setter : function(str) {",
          "138:                     pattern = new RegExp('^(.+)@('+M.cfg.wwwroot+')?(.{0,75}).*:(\\\\d+)$'),",
          "139:                     i;",
          "140:                 for (i in lines) {",
          "",
          "[Removed Lines]",
          "137:                 var lines = str.split(\"\\n\"),",
          "",
          "[Added Lines]",
          "138:                 var lines = Y.Escape.html(str).split(\"\\n\"),",
          "",
          "---------------"
        ]
      }
    }
  ]
}