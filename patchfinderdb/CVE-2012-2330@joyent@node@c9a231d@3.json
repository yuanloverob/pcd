{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e4cef1a0833e6d677298600e205a142d15639bf2",
      "candidate_info": {
        "commit_hash": "e4cef1a0833e6d677298600e205a142d15639bf2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e4cef1a0833e6d677298600e205a142d15639bf2",
        "files": [
          "doc/api/assert.markdown",
          "lib/assert.js"
        ],
        "message": "doc: update assert.doesNotThrow() docs\n\nIt takes an optional \"expected exception\" argument that is not used meaningfully\nbut is nevertheless documented. Undocument it, it confuses casual readers of the\ndocumentation.\n\nFixes #3935.",
        "before_after_code_files": [
          "lib/assert.js||liassert.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/assert.js||liassert.js": [
          "File: lib/assert.js -> liassert.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "327: };",
          "331:   _throws.apply(this, [false].concat(pSlice.call(arguments)));",
          "332: };",
          "",
          "[Removed Lines]",
          "330: assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7282ce9014a4d17297f5d0395aa60461d4a14823",
      "candidate_info": {
        "commit_hash": "7282ce9014a4d17297f5d0395aa60461d4a14823",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7282ce9014a4d17297f5d0395aa60461d4a14823",
        "files": [
          "deps/v8/src/objects.cc"
        ],
        "message": "Remove unused-but-set variable from objects.cc.\n\nThis fixes compilation with newer GCCs.\n\nR=erik.corry@gmail.com\n\nReview URL: https://chromiumcodereview.appspot.com/10568006\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@11838 ce2b1a6d-e550-0410-aec6-3dcde31c8c00",
        "before_after_code_files": [
          "deps/v8/src/objects.cc||deps/v8/src/objects.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/objects.cc||deps/v8/src/objects.cc": [
          "File: deps/v8/src/objects.cc -> deps/v8/src/objects.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "7518:   if (!HasFastProperties()) {",
          "7519:     MaybeObject* new_proto = TransformToFastProperties(0);",
          "7520:     if (new_proto->IsFailure()) return new_proto;",
          "7521:     ASSERT(new_proto == this);",
          "7523:   }",
          "7524:   return this;",
          "7525: }",
          "",
          "[Removed Lines]",
          "7517:   Map* proto_map = map();",
          "7522:     proto_map = map();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0a0062d612cf76f8161af3be7896bd15a2682a1",
      "candidate_info": {
        "commit_hash": "a0a0062d612cf76f8161af3be7896bd15a2682a1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a0a0062d612cf76f8161af3be7896bd15a2682a1",
        "files": [
          "deps/v8/build/common.gypi",
          "deps/v8/src/debug.cc",
          "deps/v8/src/debug.h",
          "deps/v8/src/execution.cc",
          "deps/v8/src/runtime.cc",
          "deps/v8/src/version.cc",
          "deps/v8/test/cctest/test-debug.cc"
        ],
        "message": "v8: upgrade to 3.11.10.15",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi",
          "deps/v8/src/debug.cc||deps/v8/src/debug.cc",
          "deps/v8/src/debug.h||deps/v8/src/debug.h",
          "deps/v8/src/execution.cc||deps/v8/src/execution.cc",
          "deps/v8/src/runtime.cc||deps/v8/src/runtime.cc",
          "deps/v8/src/version.cc||deps/v8/src/version.cc",
          "deps/v8/test/cctest/test-debug.cc||deps/v8/test/cctest/test-debug.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:           'WIN32',",
          "240:         ],",
          "241:         'msvs_configuration_attributes': {",
          "242:           'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "243:           'CharacterSet': '1',",
          "244:         },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:           'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "270:         'target_conditions': [",
          "271:           ['_toolset==\"host\"', {",
          "272:             'variables': {",
          "274:             },",
          "275:             'cflags': [ '<(m32flag)' ],",
          "276:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "273:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "274:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:           }],",
          "281:           ['_toolset==\"target\"', {",
          "282:             'variables': {",
          "284:             },",
          "285:             'cflags': [ '<(m32flag)' ],",
          "286:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "283:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "284:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "323:         },",
          "324:         'conditions': [",
          "325:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "327:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "328:           }],",
          "329:         ],",
          "",
          "[Removed Lines]",
          "326:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "327:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "332:         'conditions': [",
          "333:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\" \\",
          "334:             or OS==\"android\"', {",
          "335:             'cflags': [",
          "336:               '-fdata-sections',",
          "337:               '-ffunction-sections',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:             'cflags!': [",
          "337:               '-O2',",
          "338:               '-Os',",
          "339:             ],",
          "",
          "---------------"
        ],
        "deps/v8/src/debug.cc||deps/v8/src/debug.cc": [
          "File: deps/v8/src/debug.cc -> deps/v8/src/debug.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "892: }",
          "905: Object* Debug::Break(Arguments args) {",
          "906:   Heap* heap = isolate_->heap();",
          "907:   HandleScope scope(isolate_);",
          "",
          "[Removed Lines]",
          "895: void Debug::PutValuesOnStackAndDie(int start,",
          "896:                                    Address c_entry_fp,",
          "897:                                    Address last_fp,",
          "898:                                    Address larger_fp,",
          "899:                                    int count,",
          "900:                                    int end) {",
          "901:   OS::Abort();",
          "902: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "999:         it.Advance();",
          "1000:       }",
          "1023:       }",
          "1037:     }",
          "",
          "[Removed Lines]",
          "1007:       if (it.done()) {",
          "1009:         PutValuesOnStackAndDie(0xBEEEEEEE,",
          "1010:                                frame->fp(),",
          "1011:                                thread_local_.last_fp_,",
          "1012:                                NULL,",
          "1013:                                count,",
          "1014:                                0xFEEEEEEE);",
          "1015:       } else if (it.frame()->fp() != thread_local_.last_fp_) {",
          "1017:         PutValuesOnStackAndDie(0xBEEEEEEE,",
          "1018:                                frame->fp(),",
          "1019:                                thread_local_.last_fp_,",
          "1020:                                it.frame()->fp(),",
          "1021:                                count,",
          "1022:                                0xFEEEEEEE);",
          "1026:       if (it.frame()->fp() == thread_local_.last_fp_) {",
          "1027:         if (step_count > 1) {",
          "1030:           thread_local_.queued_step_count_ = step_count - 1;",
          "1031:         }",
          "1034:         step_action = StepOut;",
          "1035:         step_count = count;",
          "1036:       }",
          "",
          "[Added Lines]",
          "993:       CHECK(!it.done() && (it.frame()->fp() == thread_local_.last_fp_));",
          "994:       if (step_count > 1) {",
          "997:         thread_local_.queued_step_count_ = step_count - 1;",
          "1001:       step_action = StepOut;",
          "1002:       step_count = count;",
          "",
          "---------------"
        ],
        "deps/v8/src/debug.h||deps/v8/src/debug.h": [
          "File: deps/v8/src/debug.h -> deps/v8/src/debug.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:   void PreemptionWhileInDebugger();",
          "233:   void Iterate(ObjectVisitor* v);",
          "241:   Object* Break(Arguments args);",
          "242:   void SetBreakPoint(Handle<SharedFunctionInfo> shared,",
          "243:                      Handle<Object> break_point_object,",
          "",
          "[Removed Lines]",
          "235:   NO_INLINE(void PutValuesOnStackAndDie(int start,",
          "236:                                         Address c_entry_fp,",
          "237:                                         Address last_fp,",
          "238:                                         Address larger_fp,",
          "239:                                         int count,",
          "240:                                         int end));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/execution.cc||deps/v8/src/execution.cc": [
          "File: deps/v8/src/execution.cc -> deps/v8/src/execution.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:         V8::FatalProcessOutOfMemory(\"JS\", true);",
          "133:       }",
          "134:     }",
          "135:     return Handle<Object>();",
          "136:   } else {",
          "137:     isolate->clear_pending_message();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135: #ifdef ENABLE_DEBUGGER_SUPPORT",
          "137:     if (isolate->debugger()->IsDebuggerActive()) {",
          "138:       isolate->debug()->ClearStepping();",
          "139:     }",
          "140: #endif  // ENABLE_DEBUGGER_SUPPORT",
          "",
          "---------------"
        ],
        "deps/v8/src/runtime.cc||deps/v8/src/runtime.cc": [
          "File: deps/v8/src/runtime.cc -> deps/v8/src/runtime.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4844: RUNTIME_FUNCTION(MaybeObject*, Runtime_DebugCallbackSupportsStepping) {",
          "4846:   CONVERT_ARG_CHECKED(Object, callback, 0);",
          "4848:   if (!callback->IsJSFunction() || JSFunction::cast(callback)->IsBuiltin()) {",
          "4849:     return isolate->heap()->false_value();",
          "4850:   }",
          "4851:   return isolate->heap()->true_value();",
          "4852: }",
          "4857: RUNTIME_FUNCTION(MaybeObject*, Runtime_DebugPrepareStepInIfStepping) {",
          "4858:   Debug* debug = isolate->debug();",
          "4860:   CONVERT_ARG_CHECKED(Object, callback, 0);",
          "4861:   HandleScope scope(isolate);",
          "4862:   Handle<SharedFunctionInfo> shared_info(JSFunction::cast(callback)->shared());",
          "",
          "[Removed Lines]",
          "4845:   if (!isolate->IsDebuggerActive()) return isolate->heap()->false_value();",
          "4859:   if (!debug->IsStepping()) return NULL;",
          "",
          "[Added Lines]",
          "4845: #ifdef ENABLE_DEBUGGER_SUPPORT",
          "4846:   if (!isolate->IsDebuggerActive() || !isolate->debug()->StepInActive()) {",
          "4847:     return isolate->heap()->false_value();",
          "4848:   }",
          "4855: #else",
          "4856:   return isolate->heap()->false_value();",
          "4857: #endif  // ENABLE_DEBUGGER_SUPPORT",
          "4864: #ifdef ENABLE_DEBUGGER_SUPPORT",
          "4866:   if (!debug->IsStepping()) return isolate->heap()->undefined_value();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4866:   debug->ClearStepOut();",
          "4867:   debug->FloodWithOneShot(shared_info);",
          "4869: }",
          "",
          "[Removed Lines]",
          "4868:   return NULL;",
          "",
          "[Added Lines]",
          "4875: #endif  // ENABLE_DEBUGGER_SUPPORT",
          "4876:   return isolate->heap()->undefined_value();",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     11",
          "37: #define BUILD_NUMBER      10",
          "41: #define IS_CANDIDATE_VERSION 0",
          "",
          "[Removed Lines]",
          "38: #define PATCH_LEVEL       14",
          "",
          "[Added Lines]",
          "38: #define PATCH_LEVEL       15",
          "",
          "---------------"
        ],
        "deps/v8/test/cctest/test-debug.cc||deps/v8/test/cctest/test-debug.cc": [
          "File: deps/v8/test/cctest/test-debug.cc -> deps/v8/test/cctest/test-debug.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "7350: }",
          "7353: #endif  // ENABLE_DEBUGGER_SUPPORT",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7353: static void DebugEventStepNext(v8::DebugEvent event,",
          "7354:                                v8::Handle<v8::Object> exec_state,",
          "7355:                                v8::Handle<v8::Object> event_data,",
          "7356:                                v8::Handle<v8::Value> data) {",
          "7357:   if (event == v8::Break) {",
          "7358:     PrepareStep(StepNext);",
          "7359:   }",
          "7360: }",
          "7363: static void RunScriptInANewCFrame(const char* source) {",
          "7364:   v8::TryCatch try_catch;",
          "7365:   CompileRun(source);",
          "7366:   CHECK(try_catch.HasCaught());",
          "7367: }",
          "7370: TEST(Regress131642) {",
          "7379:   v8::HandleScope scope;",
          "7380:   DebugLocalContext env;",
          "7381:   v8::Debug::SetDebugEventListener(DebugEventStepNext);",
          "7386:   const char* script_1 = \"debugger; throw new Error();\";",
          "7387:   RunScriptInANewCFrame(script_1);",
          "7390:   const char* script_2 = \"[0].forEach(function() { });\";",
          "7391:   CompileRun(script_2);",
          "7393:   v8::Debug::SetDebugEventListener(NULL);",
          "7394: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cacd651ec6944c7b6596d1c199ab9a37ba9abf7c",
      "candidate_info": {
        "commit_hash": "cacd651ec6944c7b6596d1c199ab9a37ba9abf7c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/cacd651ec6944c7b6596d1c199ab9a37ba9abf7c",
        "files": [
          "lib/punycode.js"
        ],
        "message": "punycode: Update to v1.0.0",
        "before_after_code_files": [
          "lib/punycode.js||lipunycode.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/punycode.js||lipunycode.js": [
          "File: lib/punycode.js -> lipunycode.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  delimiter = '-', // '\\x2D'",
          "38:  regexPunycode = /^xn--/,",
          "",
          "[Removed Lines]",
          "37:  regexNonASCII = /[^ -~]/, // matches unprintable ASCII chars + non-ASCII chars",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "281:     }",
          "283:     i += digit * w;",
          "286:     if (digit < t) {",
          "287:      break;",
          "",
          "[Removed Lines]",
          "284:     t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "404:     if (currentValue == n) {",
          "406:      for (q = delta, k = base; /* no condition */; k += base) {",
          "408:       if (q < t) {",
          "409:        break;",
          "410:       }",
          "",
          "[Removed Lines]",
          "407:       t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "476:   'version': '0.3.0',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "407181538b5193f6810bf06a2056a200265c0e93",
      "candidate_info": {
        "commit_hash": "407181538b5193f6810bf06a2056a200265c0e93",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/407181538b5193f6810bf06a2056a200265c0e93",
        "files": [
          "src/node.cc"
        ],
        "message": "Revert \"Re-add top-level v8::Locker\"\n\nThe locker makes node crash in debug mode sometimes.\nFor example, test/simple/test-repl.js triggers it.\n\nThis reverts commit 9a6012edd9330296b7476bc6b7fbda2cd5c8165d.\n\nConflicts:\n\n\tsrc/node.cc",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2760:   Init(argc, argv_copy);",
          "2793: #ifndef NDEBUG",
          "2795:   V8::Dispose();",
          "2796: #endif  // NDEBUG",
          "",
          "[Removed Lines]",
          "2762:   V8::Initialize();",
          "2763:   Persistent<Context> context;",
          "2764:   {",
          "2765:     Locker locker;",
          "2766:     HandleScope handle_scope;",
          "2769:     Persistent<Context> context = Context::New();",
          "2770:     Context::Scope context_scope(context);",
          "2773:     Handle<Object> process_l = SetupProcessObject(argc, argv);",
          "2774:     v8_typed_array::AttachBindings(context->Global());",
          "2778:     Load(process_l);",
          "2785:     uv_run(uv_default_loop());",
          "2787:     EmitExit(process_l);",
          "2788: #ifndef NDEBUG",
          "2789:     context.Dispose();",
          "2790: #endif",
          "2791:   }",
          "",
          "[Added Lines]",
          "2762:   v8::V8::Initialize();",
          "2763:   v8::HandleScope handle_scope;",
          "2766:   Persistent<v8::Context> context = v8::Context::New();",
          "2767:   v8::Context::Scope context_scope(context);",
          "2770:   Handle<Object> process_l = SetupProcessObject(argc, argv);",
          "2771:   v8_typed_array::AttachBindings(context->Global());",
          "2775:   Load(process_l);",
          "2782:   uv_run(uv_default_loop());",
          "2784:   EmitExit(process_l);",
          "2788:   context.Dispose();",
          "",
          "---------------"
        ]
      }
    }
  ]
}