{
  "cve_id": "CVE-2013-3735",
  "cve_desc": "The Zend Engine in PHP before 5.4.16 RC1, and 5.5.0 before RC2, does not properly determine whether a parser error occurred, which allows context-dependent attackers to cause a denial of service (memory consumption and application crash) via a crafted function definition, as demonstrated by an attack within a shared web-hosting environment.  NOTE: the vendor's http://php.net/security-note.php page says \"for critical security situations you should be using OS-level security by running multiple web servers each as their own user id.",
  "repo": "php/php-src",
  "patch_hash": "fb58e69a84f4fde603a630d2c9df2fa3be16d846",
  "patch_info": {
    "commit_hash": "fb58e69a84f4fde603a630d2c9df2fa3be16d846",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/fb58e69a84f4fde603a630d2c9df2fa3be16d846",
    "files": [
      "NEWS",
      "Zend/tests/bug64660.phpt",
      "Zend/zend_language_scanner.c",
      "Zend/zend_language_scanner.l"
    ],
    "message": "fix bug #64660 - yyparse can return 2, not only 1",
    "before_after_code_files": [
      "Zend/tests/bug64660.phpt||Zend/tests/bug64660.phpt",
      "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
      "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
    ]
  },
  "patch_diff": {
    "Zend/tests/bug64660.phpt||Zend/tests/bug64660.phpt": [
      "File: Zend/tests/bug64660.phpt -> Zend/tests/bug64660.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #64660 (Segfault on memory exhaustion within function definition)",
      "3: --FILE--",
      "4: <?php",
      "5: function a() {",
      "6:         [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]",
      "7: }",
      "8: echo \"Done\\n\";",
      "9: --EXPECTF--",
      "11: Parse error: memory exhausted in %s on line %d",
      "",
      "---------------"
    ],
    "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c": [
      "File: Zend/zend_language_scanner.c -> Zend/zend_language_scanner.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "760:    SCNG(script_filtered) = NULL;",
      "761:   }",
      "764:    CG(active_op_array) = original_active_op_array;",
      "765:    CG(unclean_shutdown)=1;",
      "766:    destroy_op_array(op_array TSRMLS_CC);",
      "",
      "[Removed Lines]",
      "763:   if (compiler_result==1) {",
      "",
      "[Added Lines]",
      "763:   if (compiler_result != 0) {",
      "",
      "---------------"
    ],
    "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l": [
      "File: Zend/zend_language_scanner.l -> Zend/zend_language_scanner.l",
      "--- Hunk 1 ---",
      "[Context before]",
      "758:    SCNG(script_filtered) = NULL;",
      "759:   }",
      "762:    CG(active_op_array) = original_active_op_array;",
      "763:    CG(unclean_shutdown)=1;",
      "764:    destroy_op_array(op_array TSRMLS_CC);",
      "",
      "[Removed Lines]",
      "761:   if (compiler_result==1) {",
      "",
      "[Added Lines]",
      "761:   if (compiler_result != 0) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "80d5ae3cea4c6fdd85789edfde0e2da721a0741b",
      "candidate_info": {
        "commit_hash": "80d5ae3cea4c6fdd85789edfde0e2da721a0741b",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/80d5ae3cea4c6fdd85789edfde0e2da721a0741b",
        "files": [
          "NEWS",
          "UPGRADING",
          "Zend/tests/catch_finally_001.phpt",
          "Zend/tests/catch_finally_002.phpt",
          "Zend/tests/catch_finally_003.phpt",
          "Zend/tests/catch_finally_004.phpt",
          "Zend/tests/catch_finally_005.phpt",
          "Zend/tests/catch_finally_006.phpt",
          "Zend/tests/try_catch_finally_001.phpt",
          "Zend/tests/try_catch_finally_002.phpt",
          "Zend/tests/try_catch_finally_003.phpt",
          "Zend/tests/try_catch_finally_004.phpt",
          "Zend/tests/try_finally_001.phpt",
          "Zend/tests/try_finally_002.phpt",
          "Zend/tests/try_finally_003.phpt",
          "Zend/zend_compile.c",
          "Zend/zend_compile.h",
          "Zend/zend_language_parser.y",
          "Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l",
          "Zend/zend_language_scanner_defs.h",
          "Zend/zend_vm_def.h",
          "Zend/zend_vm_execute.h",
          "Zend/zend_vm_execute.skl",
          "Zend/zend_vm_opcodes.h"
        ],
        "message": "Implemented 'finally' keywords for php\n\nRFC: https://wiki.php.net/rfc/finally\nFR: https://bugs.php.net/bug.php?id=32100\nand I have got some improvment ideas(performance), will implemented\nlater. thanks",
        "before_after_code_files": [
          "Zend/tests/catch_finally_001.phpt||Zend/tests/catch_finally_001.phpt",
          "Zend/tests/catch_finally_002.phpt||Zend/tests/catch_finally_002.phpt",
          "Zend/tests/catch_finally_003.phpt||Zend/tests/catch_finally_003.phpt",
          "Zend/tests/catch_finally_004.phpt||Zend/tests/catch_finally_004.phpt",
          "Zend/tests/catch_finally_005.phpt||Zend/tests/catch_finally_005.phpt",
          "Zend/tests/catch_finally_006.phpt||Zend/tests/catch_finally_006.phpt",
          "Zend/tests/try_catch_finally_001.phpt||Zend/tests/try_catch_finally_001.phpt",
          "Zend/tests/try_catch_finally_002.phpt||Zend/tests/try_catch_finally_002.phpt",
          "Zend/tests/try_catch_finally_003.phpt||Zend/tests/try_catch_finally_003.phpt",
          "Zend/tests/try_catch_finally_004.phpt||Zend/tests/try_catch_finally_004.phpt",
          "Zend/tests/try_finally_001.phpt||Zend/tests/try_finally_001.phpt",
          "Zend/tests/try_finally_002.phpt||Zend/tests/try_finally_002.phpt",
          "Zend/tests/try_finally_003.phpt||Zend/tests/try_finally_003.phpt",
          "Zend/zend_compile.c||Zend/zend_compile.c",
          "Zend/zend_compile.h||Zend/zend_compile.h",
          "Zend/zend_language_parser.y||Zend/zend_language_parser.y",
          "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l",
          "Zend/zend_language_scanner_defs.h||Zend/zend_language_scanner_defs.h",
          "Zend/zend_vm_def.h||Zend/zend_vm_def.h",
          "Zend/zend_vm_execute.skl||Zend/zend_vm_execute.skl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
            "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
          ],
          "candidate": [
            "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
            "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
          ]
        }
      },
      "candidate_diff": {
        "Zend/tests/catch_finally_001.phpt||Zend/tests/catch_finally_001.phpt": [
          "File: Zend/tests/catch_finally_001.phpt -> Zend/tests/catch_finally_001.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try catch finally",
          "3: --FILE--",
          "4: <?php",
          "5: function foo ($throw = FALSE) {",
          "6:    try {",
          "7:      echo \"try\\n\";",
          "8:      if ($throw) {",
          "9:         throw new Exception(\"ex\");",
          "10:      }",
          "11:    } catch (Exception $e) {",
          "12:      echo \"catch\\n\";",
          "13:    } finally {",
          "14:      echo \"finally\\n\";",
          "15:    }",
          "17:    echo \"end\\n\";",
          "18: }",
          "20: foo();",
          "21: echo \"\\n\";",
          "22: foo(true);",
          "23: ?>",
          "24: --EXPECTF--",
          "25: try",
          "26: finally",
          "27: end",
          "29: try",
          "30: catch",
          "31: finally",
          "32: end",
          "",
          "---------------"
        ],
        "Zend/tests/catch_finally_002.phpt||Zend/tests/catch_finally_002.phpt": [
          "File: Zend/tests/catch_finally_002.phpt -> Zend/tests/catch_finally_002.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try catch finally return",
          "3: --FILE--",
          "4: <?php",
          "5: function foo () {",
          "6:    try {",
          "7:      echo \"try\\n\";",
          "8:      return 1;",
          "9:    } catch (Exception $e) {",
          "10:    } finally {",
          "11:      echo \"finally\\n\";",
          "12:    }",
          "13:    return 2;",
          "14: }",
          "16: var_dump(foo());",
          "17: ?>",
          "18: --EXPECTF--",
          "19: try",
          "20: finally",
          "21: int(1)",
          "",
          "---------------"
        ],
        "Zend/tests/catch_finally_003.phpt||Zend/tests/catch_finally_003.phpt": [
          "File: Zend/tests/catch_finally_003.phpt -> Zend/tests/catch_finally_003.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try catch finally multi-return",
          "3: --FILE--",
          "4: <?php",
          "5: function dummy($msg) {",
          "6:    var_dump($msg);",
          "7: }",
          "9: function foo ($a) {",
          "10:    try {",
          "11:        dummy(\"try\");",
          "12:        return $a;",
          "13:    } catch (Exception $e) {",
          "14:        throw $e;",
          "15:    } finally {",
          "16:        dummy(\"finally\");",
          "17:        return \"finally\";",
          "18:    }",
          "19:    return \"end\";",
          "20: }",
          "22: function &bar($a) {",
          "23:    try {",
          "24:      echo \"try\\n\";",
          "25:      throw new Exception(\"ex\");",
          "26:    } catch (Exception $e) {",
          "27:    } finally {",
          "28:      return $a;",
          "29:    }",
          "30:    return ($c = \"end\");",
          "31: }",
          "32: var_dump(foo(\"para\"));",
          "33: var_dump(bar(\"para\"));",
          "34: ?>",
          "35: --EXPECTF--",
          "36: string(3) \"try\"",
          "37: string(7) \"finally\"",
          "38: string(7) \"finally\"",
          "39: try",
          "40: string(4) \"para\"",
          "",
          "---------------"
        ],
        "Zend/tests/catch_finally_004.phpt||Zend/tests/catch_finally_004.phpt": [
          "File: Zend/tests/catch_finally_004.phpt -> Zend/tests/catch_finally_004.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Nesting try catch finally",
          "3: --FILE--",
          "4: <?php",
          "6: function throw_exception($msg) {",
          "7:     throw new Exception($msg);",
          "8: }",
          "10: function foo (&$ex) {",
          "11:    try {",
          "12:       echo \"1\";",
          "13:       try {",
          "14:         echo \"2\";",
          "15:         throw_exception(\"try\");",
          "16:       } catch (Exception $e) {",
          "17:         echo \"3\";",
          "18:         throw_exception(\"catch\");",
          "19:       } finally {",
          "20:         echo \"4\";",
          "21:         throw_exception(\"finally\");",
          "22:       }",
          "23:    } catch (Exception $e) {",
          "24:       $ex = $e;",
          "25:       echo \"3\";",
          "26:    } finally {",
          "27:       echo \"2\";",
          "28:    }",
          "29:    return 1;",
          "30: }",
          "32: var_dump(foo($ex));",
          "34: do {",
          "35:   var_dump($ex->getMessage());",
          "36: } while ($ex = $ex->getPrevious());",
          "37: ?>",
          "38: --EXPECT--",
          "39: 123432int(1)",
          "40: string(7) \"finally\"",
          "41: string(5) \"catch\"",
          "",
          "---------------"
        ],
        "Zend/tests/catch_finally_005.phpt||Zend/tests/catch_finally_005.phpt": [
          "File: Zend/tests/catch_finally_005.phpt -> Zend/tests/catch_finally_005.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try catch finally with return",
          "3: --FILE--",
          "4: <?php",
          "5: function foo ($a) {",
          "6:    try {",
          "7:      throw new Exception(\"ex\");",
          "8:    } catch (PdoException $e) {",
          "9:      die(\"error\");",
          "10:    } catch (Exception $e) {",
          "11:      return 2;",
          "12:    } finally {",
          "13:      return 3;",
          "14:    }",
          "15:    return 1;",
          "16: }",
          "18: var_dump(foo(\"para\"));",
          "19: ?>",
          "20: --EXPECTF--",
          "21: int(3)",
          "",
          "---------------"
        ],
        "Zend/tests/catch_finally_006.phpt||Zend/tests/catch_finally_006.phpt": [
          "File: Zend/tests/catch_finally_006.phpt -> Zend/tests/catch_finally_006.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try catch finally: re-throw exception in catch block",
          "3: --FILE--",
          "4: <?php",
          "5: function foo ($a) {",
          "6:    try {",
          "7:      throw new Exception(\"ex\");",
          "8:    } catch (Exception $e) {",
          "9:      var_dump($a);",
          "10:      throw $e;",
          "11:    } finally {",
          "12:      var_dump(\"finally\");",
          "13:      return \"return\";",
          "14:    }",
          "15:    return 1;",
          "16: }",
          "18: try {",
          "19:    var_dump(foo(\"para\"));",
          "20: } catch (Exception $e) {",
          "21:     \"caught exception\" . PHP_EOL;",
          "22:     var_dump($e->getMessage());",
          "23: }",
          "24: ?>",
          "25: --EXPECT--",
          "26: string(4) \"para\"",
          "27: string(7) \"finally\"",
          "28: string(2) \"ex\"",
          "",
          "---------------"
        ],
        "Zend/tests/try_catch_finally_001.phpt||Zend/tests/try_catch_finally_001.phpt": [
          "File: Zend/tests/try_catch_finally_001.phpt -> Zend/tests/try_catch_finally_001.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try catch finally",
          "3: --FILE--",
          "4: <?php",
          "6: class AE extends Exception {};",
          "7: class BE extends Exception {};",
          "9: function foo () {",
          "10:     try {",
          "11:         try {",
          "12:             try {",
          "13:                 throw new Exception(\"try\");",
          "14:             } catch (AE $e) {",
          "15:                 echo \"0\";",
          "16:                 die(\"error\");",
          "17:             } finally {",
          "18:                 echo \"1\";",
          "19:             }",
          "20:         } finally {",
          "21:             echo \"2\";",
          "22:         }",
          "23:     } catch (BE $e) {",
          "24:       die(\"error\");",
          "25:     } catch (Exception $e) {",
          "26:         echo \"3\";",
          "27:     } finally {",
          "28:         echo \"4\";",
          "29:     }",
          "30:    return 1;",
          "31: }",
          "33: var_dump(foo());",
          "34: ?>",
          "35: --EXPECTF--",
          "36: 1234int(1)",
          "",
          "---------------"
        ],
        "Zend/tests/try_catch_finally_002.phpt||Zend/tests/try_catch_finally_002.phpt": [
          "File: Zend/tests/try_catch_finally_002.phpt -> Zend/tests/try_catch_finally_002.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try catch finally",
          "3: --FILE--",
          "4: <?php",
          "6: class AE extends Exception {};",
          "7: class BE extends Exception {};",
          "9: function foo () {",
          "10:     try {",
          "11:         try {",
          "12:             try {",
          "13:                 try {",
          "14:                    echo \"1\";",
          "15:                    throw new Exception(\"try\");",
          "16:                 } catch (AE $e) {",
          "17:                    die(\"error\");",
          "18:                 } finally {",
          "19:                    echo \"2\";",
          "20:                 }",
          "21:             } finally {",
          "22:                 echo \"3\";",
          "23:             }",
          "24:         } catch (BE $e) {",
          "25:             die(\"error\");",
          "26:         } finally {",
          "27:             echo \"4\";",
          "28:         }",
          "29:     } catch (Exception $e) {",
          "30:         echo \"5\";",
          "31:     } catch (AE $e) {",
          "32:         die(\"error\");",
          "33:     } finally {",
          "34:         echo \"6\";",
          "35:     }",
          "36:    return 7;",
          "37: }",
          "39: var_dump(foo());",
          "40: ?>",
          "41: --EXPECTF--",
          "42: 123456int(7)",
          "",
          "---------------"
        ],
        "Zend/tests/try_catch_finally_003.phpt||Zend/tests/try_catch_finally_003.phpt": [
          "File: Zend/tests/try_catch_finally_003.phpt -> Zend/tests/try_catch_finally_003.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try catch finally",
          "3: --FILE--",
          "4: <?php",
          "6: class AE extends Exception {};",
          "7: class BE extends Exception {};",
          "9: function foo () {",
          "10:     try {",
          "11:         try {",
          "12:             try {",
          "13:                 throw new Exception(\"try\");",
          "14:             } catch (AE $e) {",
          "15:                 die(\"error\");",
          "16:             } finally {",
          "17:                echo \"1\";",
          "18:                return 1;",
          "19:             }",
          "20:         } finally {",
          "21:            echo \"2\";",
          "22:            return 2;",
          "23:         }",
          "24:     } catch (BE $e) {",
          "25:       die(\"error\");",
          "26:     } catch (Exception $e) {",
          "27:         echo \"3\";",
          "28:     } finally {",
          "29:         echo \"4\";",
          "30:         return 4;",
          "31:     }",
          "32:    return 5;",
          "33: }",
          "35: var_dump(foo());",
          "36: ?>",
          "37: --EXPECTF--",
          "38: 1234int(4)",
          "",
          "---------------"
        ],
        "Zend/tests/try_catch_finally_004.phpt||Zend/tests/try_catch_finally_004.phpt": [
          "File: Zend/tests/try_catch_finally_004.phpt -> Zend/tests/try_catch_finally_004.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try catch finally",
          "3: --CREDITS--",
          "4: adoy",
          "5: --FILE--",
          "6: <?php",
          "7: function dummy($msg) {",
          "8:    var_dump($msg);",
          "9: }",
          "10: try {",
          "11:     try {",
          "12:         var_dump(\"try\");",
          "13:         return;",
          "14:     } catch (Exception $e) {",
          "15:         dummy(\"catch\");",
          "16:         throw $e;",
          "17:     } finally {",
          "18:         dummy(\"finally\");",
          "19:     }",
          "20: } catch (Exception $e) {",
          "21:   dummy(\"catch2\");",
          "22: } finally {",
          "23:   dummy(\"finally2\");",
          "24: }",
          "25: var_dump(\"end\");",
          "26: ?>",
          "27: --EXPECTF--",
          "28: string(3) \"try\"",
          "29: string(7) \"finally\"",
          "30: string(8) \"finally2\"",
          "",
          "---------------"
        ],
        "Zend/tests/try_finally_001.phpt||Zend/tests/try_finally_001.phpt": [
          "File: Zend/tests/try_finally_001.phpt -> Zend/tests/try_finally_001.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try finally",
          "3: --FILE--",
          "4: <?php",
          "5: function foo ($a) {",
          "6:    try {",
          "7:      throw new Exception(\"ex\");",
          "8:    } finally {",
          "9:      var_dump($a);",
          "10:    }",
          "11: }",
          "13: foo(\"finally\");",
          "14: ?>",
          "15: --EXPECTF--",
          "16: string(7) \"finally\"",
          "18: Fatal error: Uncaught exception 'Exception' with message 'ex' %s",
          "19: Stack trace:",
          "20: #0 %stry_finally_001.php(%d): foo('finally')",
          "21: #1 {main}",
          "22:   thrown in %stry_finally_001.php on line %d",
          "",
          "---------------"
        ],
        "Zend/tests/try_finally_002.phpt||Zend/tests/try_finally_002.phpt": [
          "File: Zend/tests/try_finally_002.phpt -> Zend/tests/try_finally_002.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try finally",
          "3: --FILE--",
          "4: <?php",
          "5: function foo () {",
          "6:    try {",
          "7:      throw new Exception(\"try\");",
          "8:    } finally {",
          "9:      throw new Exception(\"finally\");",
          "10:    }",
          "11: }",
          "13: try {",
          "14:   foo();",
          "15: } catch (Exception $e) {",
          "16:   do {",
          "17:     var_dump($e->getMessage());",
          "18:   } while ($e = $e->getPrevious());",
          "19: }",
          "20: ?>",
          "21: --EXPECT--",
          "22: string(7) \"finally\"",
          "23: string(3) \"try\"",
          "",
          "---------------"
        ],
        "Zend/tests/try_finally_003.phpt||Zend/tests/try_finally_003.phpt": [
          "File: Zend/tests/try_finally_003.phpt -> Zend/tests/try_finally_003.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Try finally",
          "3: --FILE--",
          "4: <?php",
          "5: function foo () {",
          "6:    try {",
          "7:       echo \"1\";",
          "8:       try {",
          "9:         echo \"2\";",
          "10:         throw new Exception(\"ex\");",
          "11:       } finally {",
          "12:         echo \"3\";",
          "13:       }",
          "14:    } finally {",
          "15:       echo \"4\";",
          "16:    }",
          "17: }",
          "19: foo();",
          "20: ?>",
          "21: --EXPECTF--",
          "22: 1234",
          "23: Fatal error: Uncaught exception 'Exception' with message 'ex' %s",
          "24: Stack trace:",
          "25: #0 %stry_finally_003.php(%d): foo()",
          "26: #1 {main}",
          "27:   thrown in %stry_finally_003.php on line %d",
          "",
          "---------------"
        ],
        "Zend/zend_compile.c||Zend/zend_compile.c": [
          "File: Zend/zend_compile.c -> Zend/zend_compile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2662:  CG(active_op_array)->try_catch_array = erealloc(CG(active_op_array)->try_catch_array, sizeof(zend_try_catch_element)*CG(active_op_array)->last_try_catch);",
          "2663:  CG(active_op_array)->try_catch_array[try_catch_offset].try_op = try_op;",
          "2664:  return try_catch_offset;",
          "2665: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2664:  CG(active_op_array)->try_catch_array[try_catch_offset].finally_op = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2694:  zend_stack_top(&CG(bp_stack), (void **) &jmp_list_ptr);",
          "2695:  zend_llist_add_element(jmp_list_ptr, &jmp_op_number);",
          "2698: }",
          "",
          "[Removed Lines]",
          "2697:  zend_add_catch_element(try_token->u.op.opline_num, get_next_op_number(CG(active_op_array)) TSRMLS_CC);",
          "",
          "[Added Lines]",
          "2698:     catch_token->EA = get_next_op_number(CG(active_op_array));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2720: }",
          "2724: {",
          "2725:  long catch_op_number;",
          "2726:  zend_op *opline;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2724: void zend_do_finally(znode *finally_token TSRMLS_DC) /* {{{ */ {",
          "2725:     finally_token->u.op.opline_num = get_next_op_number(CG(active_op_array));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2748:  Z_STRVAL(catch_var->u.constant) = (char*)CG(active_op_array)->vars[opline->op2.var].name;",
          "2752: }",
          "2756: {",
          "2757:  int jmp_op_number = get_next_op_number(CG(active_op_array));",
          "2758:  zend_op *opline = get_next_op(CG(active_op_array) TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2751:  try_token->u.op.opline_num = catch_op_number;",
          "",
          "[Added Lines]",
          "2756:  catch_token->u.op.opline_num = catch_op_number;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2766:  zend_stack_top(&CG(bp_stack), (void **) &jmp_list_ptr);",
          "2767:  zend_llist_add_element(jmp_list_ptr, &jmp_op_number);",
          "2770: }",
          "",
          "[Removed Lines]",
          "2769:  CG(active_op_array)->opcodes[try_token->u.op.opline_num].extended_value = get_next_op_number(CG(active_op_array));",
          "",
          "[Added Lines]",
          "2774:  CG(active_op_array)->opcodes[catch_token->u.op.opline_num].extended_value = get_next_op_number(CG(active_op_array));",
          "2775: }",
          "2778: void zend_do_bind_catch(znode *try_token, znode *catch_token TSRMLS_DC) /* {{{ */ {",
          "2779:     if (catch_token->op_type != IS_UNUSED) {",
          "2780:        zend_add_catch_element(try_token->u.op.opline_num, catch_token->EA TSRMLS_CC);",
          "2781:     }",
          "2782: }",
          "2787: {",
          "2788:  zend_op *opline = get_next_op(CG(active_op_array) TSRMLS_CC);",
          "2790:     if (catch_token->op_type == IS_UNUSED && finally_token->op_type == IS_UNUSED) {",
          "2791:         zend_error(E_COMPILE_ERROR, \"Cannot use try without catch or finally\");",
          "2792:     }",
          "2793:     if (finally_token->op_type != IS_UNUSED) {",
          "2794:         CG(active_op_array)->try_catch_array[try_token->u.op.opline_num].finally_op = finally_token->u.op.opline_num;",
          "2797:         opline->opcode = ZEND_LEAVE;",
          "2798:         SET_UNUSED(opline->op1);",
          "2799:         SET_UNUSED(opline->op2);",
          "2800:     }",
          "2801:     if (catch_token->op_type == IS_UNUSED) {",
          "2802:         CG(active_op_array)->try_catch_array[try_token->u.op.opline_num].catch_op = 0;",
          "2803:     } //else {",
          "",
          "---------------"
        ],
        "Zend/zend_compile.h||Zend/zend_compile.h": [
          "File: Zend/zend_compile.h -> Zend/zend_compile.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "132: typedef struct _zend_try_catch_element {",
          "133:  zend_uint try_op;",
          "135: } zend_try_catch_element;",
          "137: #if SIZEOF_LONG == 8",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:     zend_uint finally_op;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "381:  zend_class_entry *current_called_scope;",
          "382:  zval *current_this;",
          "383:  zval *current_object;",
          "384: };",
          "386: #define EX(element) execute_data.element",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "385:     zend_bool leaving;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "497: void zend_do_try(znode *try_token TSRMLS_DC);",
          "498: void zend_do_begin_catch(znode *try_token, znode *catch_class, znode *catch_var, znode *first_catch TSRMLS_DC);",
          "500: void zend_do_throw(const znode *expr TSRMLS_DC);",
          "502: ZEND_API int do_bind_function(const zend_op_array *op_array, zend_op *opline, HashTable *function_table, zend_bool compile_time);",
          "",
          "[Removed Lines]",
          "499: void zend_do_end_catch(const znode *try_token TSRMLS_DC);",
          "",
          "[Added Lines]",
          "501: void zend_do_end_catch(znode *catch_token TSRMLS_DC);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "662: ZEND_API int pass_two(zend_op_array *op_array TSRMLS_DC);",
          "663: zend_brk_cont_element *get_next_brk_cont_element(zend_op_array *op_array);",
          "664: void zend_do_first_catch(znode *open_parentheses TSRMLS_DC);",
          "666: void zend_do_mark_last_catch(const znode *first_catch, const znode *last_additional_catch TSRMLS_DC);",
          "667: ZEND_API zend_bool zend_is_compiling(TSRMLS_D);",
          "668: ZEND_API char *zend_make_compiled_string_description(const char *name TSRMLS_DC);",
          "",
          "[Removed Lines]",
          "665: void zend_initialize_try_catch_element(const znode *try_token TSRMLS_DC);",
          "",
          "[Added Lines]",
          "667: void zend_initialize_try_catch_element(znode *catch_token TSRMLS_DC);",
          "",
          "---------------"
        ],
        "Zend/zend_language_parser.y||Zend/zend_language_parser.y": [
          "File: Zend/zend_language_parser.y -> Zend/zend_language_parser.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "160: %token T_RETURN     \"return (T_RETURN)\"",
          "161: %token T_TRY        \"try (T_TRY)\"",
          "162: %token T_CATCH      \"catch (T_CATCH)\"",
          "163: %token T_THROW      \"throw (T_THROW)\"",
          "164: %token T_USE        \"use (T_USE)\"",
          "165: %token T_INSTEADOF  \"insteadof (T_INSTEADOF)\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163: %token T_FINALLY    \"finally (T_FINALLY)\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "314:  | T_DECLARE { $1.u.op.opline_num = get_next_op_number(CG(active_op_array)); zend_do_declare_begin(TSRMLS_C); } '(' declare_list ')' declare_statement { zend_do_declare_end(&$1 TSRMLS_CC); }",
          "316:  | T_TRY { zend_do_try(&$1 TSRMLS_CC); } '{' inner_statement_list '}'",
          "322:  | T_THROW expr ';' { zend_do_throw(&$2 TSRMLS_CC); }",
          "323:  | T_GOTO T_STRING ';' { zend_do_goto(&$2 TSRMLS_CC); }",
          "324: ;",
          "327: additional_catches:",
          "328:   non_empty_additional_catches { $$ = $1; }",
          "",
          "[Removed Lines]",
          "317:   T_CATCH '(' { zend_initialize_try_catch_element(&$1 TSRMLS_CC); }",
          "318:   fully_qualified_class_name { zend_do_first_catch(&$7 TSRMLS_CC); }",
          "319:   T_VARIABLE ')' { zend_do_begin_catch(&$1, &$9, &$11, &$7 TSRMLS_CC); }",
          "320:   '{' inner_statement_list '}' { zend_do_end_catch(&$1 TSRMLS_CC); }",
          "321:   additional_catches { zend_do_mark_last_catch(&$7, &$18 TSRMLS_CC); }",
          "",
          "[Added Lines]",
          "318:         catch_statement { zend_do_bind_catch(&$1, &$6 TSRMLS_CC); }",
          "319:         finally_statement { zend_do_end_finally(&$1, &$6, &$8 TSRMLS_CC); }",
          "324: catch_statement:",
          "326:     |   T_CATCH '(' { zend_initialize_try_catch_element(&$1 TSRMLS_CC); }",
          "327:         fully_qualified_class_name { zend_do_first_catch(&$2 TSRMLS_CC); }",
          "328:         T_VARIABLE ')' { zend_do_begin_catch(&$1, &$4, &$6, &$2 TSRMLS_CC); }",
          "329:   '{' inner_statement_list '}' { zend_do_end_catch(&$1 TSRMLS_CC); }",
          "330:   additional_catches { zend_do_mark_last_catch(&$2, &$13 TSRMLS_CC); $$ = $1;}",
          "332: finally_statement:",
          "334:     |  T_FINALLY { zend_do_finally(&$1 TSRMLS_CC); } '{' inner_statement_list '}' { $$ = $1; }",
          "335: ;",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c": [
          "File: Zend/zend_language_scanner.c -> Zend/zend_language_scanner.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1097: yy3:",
          "1098:   YYDEBUG(3, *YYCURSOR);",
          "1099:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1101:   {",
          "1102:  if (YYCURSOR > YYLIMIT) {",
          "1103:   return 0;",
          "",
          "[Removed Lines]",
          "1100: #line 1791 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1100: #line 1795 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1175: yy6:",
          "1176:   YYDEBUG(6, *YYCURSOR);",
          "1177:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1179:   {",
          "1180:  if (CG(short_tags)) {",
          "",
          "[Removed Lines]",
          "1178: #line 1779 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1178: #line 1783 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1194:   if ((yych = *YYCURSOR) == '=') goto yy43;",
          "1195:   YYDEBUG(8, *YYCURSOR);",
          "1196:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1198:   {",
          "1199:  if (CG(asp_tags)) {",
          "",
          "[Removed Lines]",
          "1197: #line 1756 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1197: #line 1760 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1392:   ++YYCURSOR;",
          "1393:   YYDEBUG(38, *YYCURSOR);",
          "1394:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1396:   {",
          "1397:  YYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));",
          "",
          "[Removed Lines]",
          "1395: #line 1716 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1395: #line 1720 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1436:   ++YYCURSOR;",
          "1437:   YYDEBUG(44, *YYCURSOR);",
          "1438:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1440:   {",
          "1441:  if (CG(asp_tags)) {",
          "",
          "[Removed Lines]",
          "1439: #line 1734 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1439: #line 1738 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1454:   ++YYCURSOR;",
          "1455:   YYDEBUG(46, *YYCURSOR);",
          "1456:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1458:   {",
          "1460:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "1457: #line 1747 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1457: #line 1751 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1489: yy51:",
          "1490:   YYDEBUG(51, *YYCURSOR);",
          "1491:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1493:   {",
          "1495:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "1492: #line 1769 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1492: #line 1773 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1569: yy56:",
          "1570:   YYDEBUG(56, *YYCURSOR);",
          "1571:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1573:   {",
          "1574:  if (YYCURSOR > YYLIMIT) {",
          "1575:   return 0;",
          "",
          "[Removed Lines]",
          "1572: #line 2242 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1572: #line 2246 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1621:   ++YYCURSOR;",
          "1622:   YYDEBUG(59, *YYCURSOR);",
          "1623:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1625:   {",
          "1626:  BEGIN(ST_IN_SCRIPTING);",
          "1627:  return '`';",
          "",
          "[Removed Lines]",
          "1624: #line 2186 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1624: #line 2190 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1636:   ++YYCURSOR;",
          "1637:   YYDEBUG(62, *YYCURSOR);",
          "1638:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1640:   {",
          "1641:  zendlval->value.lval = (long) '{';",
          "1642:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1639: #line 2173 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1639: #line 2177 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1659: yy65:",
          "1660:   YYDEBUG(65, *YYCURSOR);",
          "1661:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1663:   {",
          "1664:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1665:  zendlval->type = IS_STRING;",
          "",
          "[Removed Lines]",
          "1662: #line 1873 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1662: #line 1877 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1671:   ++YYCURSOR;",
          "1672:   YYDEBUG(67, *YYCURSOR);",
          "1673:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1675:   {",
          "1676:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1677:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "",
          "[Removed Lines]",
          "1674: #line 1449 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1674: #line 1453 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1690:   ++YYCURSOR;",
          "1691:   YYDEBUG(71, *YYCURSOR);",
          "1692:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1694:   {",
          "1695:  yyless(yyleng - 1);",
          "1696:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1693: #line 1865 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1693: #line 1869 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1716:   ++YYCURSOR;",
          "1717:   YYDEBUG(74, *YYCURSOR);",
          "1718:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1720:   {",
          "1721:  yyless(yyleng - 3);",
          "1722:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1719: #line 1855 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1719: #line 1859 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1792: yy78:",
          "1793:   YYDEBUG(78, *YYCURSOR);",
          "1794:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1796:   {",
          "1797:  if (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {",
          "1798:   YYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;",
          "",
          "[Removed Lines]",
          "1795: #line 2192 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1795: #line 2196 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1852:   ++YYCURSOR;",
          "1853:   YYDEBUG(81, *YYCURSOR);",
          "1854:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1856:   {",
          "1857:  BEGIN(ST_IN_SCRIPTING);",
          "1858:  return '\"';",
          "",
          "[Removed Lines]",
          "1855: #line 2181 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1855: #line 2185 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1867:   ++YYCURSOR;",
          "1868:   YYDEBUG(84, *YYCURSOR);",
          "1869:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1871:   {",
          "1872:  zendlval->value.lval = (long) '{';",
          "1873:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1870: #line 2173 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1870: #line 2177 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1890: yy87:",
          "1891:   YYDEBUG(87, *YYCURSOR);",
          "1892:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1894:   {",
          "1895:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1896:  zendlval->type = IS_STRING;",
          "",
          "[Removed Lines]",
          "1893: #line 1873 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1893: #line 1877 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1902:   ++YYCURSOR;",
          "1903:   YYDEBUG(89, *YYCURSOR);",
          "1904:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1906:   {",
          "1907:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1908:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "",
          "[Removed Lines]",
          "1905: #line 1449 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1905: #line 1453 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1921:   ++YYCURSOR;",
          "1922:   YYDEBUG(93, *YYCURSOR);",
          "1923:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1925:   {",
          "1926:  yyless(yyleng - 1);",
          "1927:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1924: #line 1865 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1924: #line 1869 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1947:   ++YYCURSOR;",
          "1948:   YYDEBUG(96, *YYCURSOR);",
          "1949:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1951:   {",
          "1952:  yyless(yyleng - 3);",
          "1953:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1950: #line 1855 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1950: #line 1859 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1966:  ++YYCURSOR;",
          "1967:  YYDEBUG(100, *YYCURSOR);",
          "1968:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1970:  {",
          "1971:  YYCURSOR += CG(heredoc_len) - 1;",
          "1972:  yyleng = CG(heredoc_len);",
          "",
          "[Removed Lines]",
          "1969: #line 2160 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1969: #line 2164 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2040: yy104:",
          "2041:   YYDEBUG(104, *YYCURSOR);",
          "2042:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2044:   {",
          "2045:  int newline = 0;",
          "",
          "[Removed Lines]",
          "2043: #line 2284 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2043: #line 2288 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2126:   ++YYCURSOR;",
          "2127:   YYDEBUG(108, *YYCURSOR);",
          "2128:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2130:   {",
          "2131:  zendlval->value.lval = (long) '{';",
          "2132:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2129: #line 2173 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2129: #line 2177 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2149: yy111:",
          "2150:   YYDEBUG(111, *YYCURSOR);",
          "2151:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2153:   {",
          "2154:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2155:  zendlval->type = IS_STRING;",
          "",
          "[Removed Lines]",
          "2152: #line 1873 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2152: #line 1877 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2161:   ++YYCURSOR;",
          "2162:   YYDEBUG(113, *YYCURSOR);",
          "2163:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2165:   {",
          "2166:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "2167:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "",
          "[Removed Lines]",
          "2164: #line 1449 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2164: #line 1453 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2180:   ++YYCURSOR;",
          "2181:   YYDEBUG(117, *YYCURSOR);",
          "2182:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2184:   {",
          "2185:  yyless(yyleng - 1);",
          "2186:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2183: #line 1865 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2183: #line 1869 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2206:   ++YYCURSOR;",
          "2207:   YYDEBUG(120, *YYCURSOR);",
          "2208:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2210:   {",
          "2211:  yyless(yyleng - 3);",
          "2212:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2209: #line 1855 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2209: #line 1859 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2379:   YYDEBUG(-1, yych);",
          "2380:   switch ((yych = *YYCURSOR)) {",
          "2381:   case 'C':",
          "2383:   case 'L':",
          "2385:   case 'M':",
          "2387:   case 'N':",
          "2389:   case 'V':",
          "2391:   case 'X':",
          "2393:   default: goto yy186;",
          "2394:   }",
          "2395: yy124:",
          "2396:   YYDEBUG(124, *YYCURSOR);",
          "2397:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2399:   {",
          "2400:  zend_copy_value(zendlval, yytext, yyleng);",
          "2401:  zendlval->type = IS_STRING;",
          "",
          "[Removed Lines]",
          "2382:   case 'c': goto yy726;",
          "2384:   case 'l': goto yy727;",
          "2386:   case 'm': goto yy728;",
          "2388:   case 'n': goto yy729;",
          "2390:   case 'v': goto yy730;",
          "2392:   case 'x': goto yy731;",
          "2398: #line 1896 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2382:   case 'c': goto yy729;",
          "2384:   case 'l': goto yy730;",
          "2386:   case 'm': goto yy731;",
          "2388:   case 'n': goto yy732;",
          "2390:   case 'v': goto yy733;",
          "2392:   case 'x': goto yy734;",
          "2398: #line 1900 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2407:   yych = *++YYCURSOR;",
          "2408:   if (yych <= 'O') {",
          "2409:    if (yych <= 'H') {",
          "2411:     goto yy186;",
          "2412:    } else {",
          "2414:     if (yych <= 'N') goto yy186;",
          "2416:    }",
          "2417:   } else {",
          "2418:    if (yych <= 'h') {",
          "2420:     goto yy186;",
          "2421:    } else {",
          "2424:     goto yy186;",
          "2425:    }",
          "2426:   }",
          "",
          "[Removed Lines]",
          "2410:     if (yych == 'E') goto yy708;",
          "2413:     if (yych <= 'I') goto yy709;",
          "2415:     goto yy710;",
          "2419:     if (yych == 'e') goto yy708;",
          "2422:     if (yych <= 'i') goto yy709;",
          "2423:     if (yych == 'o') goto yy710;",
          "",
          "[Added Lines]",
          "2410:     if (yych == 'E') goto yy711;",
          "2413:     if (yych <= 'I') goto yy712;",
          "2415:     goto yy713;",
          "2419:     if (yych == 'e') goto yy711;",
          "2422:     if (yych <= 'i') goto yy712;",
          "2423:     if (yych == 'o') goto yy713;",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2627: yy138:",
          "2628:   YYDEBUG(138, *YYCURSOR);",
          "2629:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2631:   {",
          "2632:  return yytext[0];",
          "2633: }",
          "",
          "[Removed Lines]",
          "2630: #line 1438 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2630: #line 1442 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2640: yy140:",
          "2641:   YYDEBUG(140, *YYCURSOR);",
          "2642:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2644:   {",
          "2646:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "2643: #line 1169 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2643: #line 1173 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2659:   ++YYCURSOR;",
          "2660:   YYDEBUG(143, *YYCURSOR);",
          "2661:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2663:   {",
          "2664:  return T_NS_SEPARATOR;",
          "2665: }",
          "",
          "[Removed Lines]",
          "2662: #line 1198 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2662: #line 1202 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2891:   ++YYCURSOR;",
          "2892:   YYDEBUG(168, *YYCURSOR);",
          "2893:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2895:   {",
          "2896:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2897:  return '{';",
          "",
          "[Removed Lines]",
          "2894: #line 1443 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2894: #line 1447 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2902:   ++YYCURSOR;",
          "2903:   YYDEBUG(170, *YYCURSOR);",
          "2904:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2906:   {",
          "2907:  RESET_DOC_COMMENT();",
          "2908:  if (!zend_stack_is_empty(&SCNG(state_stack))) {",
          "",
          "[Removed Lines]",
          "2905: #line 1455 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2905: #line 1459 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2938: yy172:",
          "2939:   YYDEBUG(172, *YYCURSOR);",
          "2940:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2942:   {",
          "2944:   zendlval->value.lval = strtol(yytext, NULL, 0);",
          "",
          "[Removed Lines]",
          "2941: #line 1506 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2941: #line 1510 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2987: yy176:",
          "2988:   YYDEBUG(176, *YYCURSOR);",
          "2989:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2991:   {",
          "2992:  while (YYCURSOR < YYLIMIT) {",
          "2993:   switch (*YYCURSOR++) {",
          "",
          "[Removed Lines]",
          "2990: #line 1903 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2990: #line 1907 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "3028: yy178:",
          "3029:   YYDEBUG(178, *YYCURSOR);",
          "3030:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3032:   {",
          "3033:  register char *s, *t;",
          "3034:  char *end;",
          "",
          "[Removed Lines]",
          "3031: #line 1994 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3031: #line 1998 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "3103: yy180:",
          "3104:   YYDEBUG(180, *YYCURSOR);",
          "3105:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3107:   {",
          "3108:  int bprefix = (yytext[0] != '\"') ? 1 : 0;",
          "",
          "[Removed Lines]",
          "3106: #line 2063 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3106: #line 2067 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "3150:   ++YYCURSOR;",
          "3151:   YYDEBUG(182, *YYCURSOR);",
          "3152:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3154:   {",
          "3155:  BEGIN(ST_BACKQUOTE);",
          "3156:  return '`';",
          "",
          "[Removed Lines]",
          "3153: #line 2154 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3153: #line 2158 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "3161:   ++YYCURSOR;",
          "3162:   YYDEBUG(184, *YYCURSOR);",
          "3163:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3165:   {",
          "3166:  if (YYCURSOR > YYLIMIT) {",
          "3167:   return 0;",
          "",
          "[Removed Lines]",
          "3164: #line 2412 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3164: #line 2416 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "3197: yy189:",
          "3198:   YYDEBUG(189, *YYCURSOR);",
          "3199:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3201:   {",
          "3202:  zendlval->value.dval = zend_strtod(yytext, NULL);",
          "3203:  zendlval->type = IS_DOUBLE;",
          "",
          "[Removed Lines]",
          "3200: #line 1571 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3200: #line 1575 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "3295:   }",
          "3296:   YYDEBUG(201, *YYCURSOR);",
          "3297:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3299:   {",
          "3301:  int len = yyleng - 2;",
          "",
          "[Removed Lines]",
          "3298: #line 1481 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3298: #line 1485 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "3332:   }",
          "3333:   YYDEBUG(204, *YYCURSOR);",
          "3334:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3336:   {",
          "3338:  int len = yyleng - 2;",
          "",
          "[Removed Lines]",
          "3335: #line 1527 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3335: #line 1531 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "3366: yy206:",
          "3367:   YYDEBUG(206, *YYCURSOR);",
          "3368:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3370:   {",
          "3372:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "3369: #line 1971 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3369: #line 1975 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "3408: yy211:",
          "3409:   YYDEBUG(211, *YYCURSOR);",
          "3410:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3412:   {",
          "3413:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "3414:  zendlval->type = IS_STRING;",
          "",
          "[Removed Lines]",
          "3411: #line 1873 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3411: #line 1877 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "3428:   }",
          "3429:   YYDEBUG(214, *YYCURSOR);",
          "3430:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3432:   {",
          "3433:  return T_LOGICAL_XOR;",
          "3434: }",
          "",
          "[Removed Lines]",
          "3431: #line 1426 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3431: #line 1430 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3441:   }",
          "3442:   YYDEBUG(216, *YYCURSOR);",
          "3443:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3445:   {",
          "3446:  return T_LOGICAL_OR;",
          "3447: }",
          "",
          "[Removed Lines]",
          "3444: #line 1418 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3444: #line 1422 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3451:   ++YYCURSOR;",
          "3452:   YYDEBUG(218, *YYCURSOR);",
          "3453:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3455:   {",
          "3456:  return T_XOR_EQUAL;",
          "3457: }",
          "",
          "[Removed Lines]",
          "3454: #line 1406 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3454: #line 1410 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3461:   ++YYCURSOR;",
          "3462:   YYDEBUG(220, *YYCURSOR);",
          "3463:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3465:   {",
          "3466:  return T_BOOLEAN_OR;",
          "3467: }",
          "",
          "[Removed Lines]",
          "3464: #line 1410 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3464: #line 1414 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3471:   ++YYCURSOR;",
          "3472:   YYDEBUG(222, *YYCURSOR);",
          "3473:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3475:   {",
          "3476:  return T_OR_EQUAL;",
          "3477: }",
          "",
          "[Removed Lines]",
          "3474: #line 1402 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3474: #line 1406 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3481:   ++YYCURSOR;",
          "3482:   YYDEBUG(224, *YYCURSOR);",
          "3483:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3485:   {",
          "3486:  return T_BOOLEAN_AND;",
          "3487: }",
          "",
          "[Removed Lines]",
          "3484: #line 1414 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3484: #line 1418 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3491:   ++YYCURSOR;",
          "3492:   YYDEBUG(226, *YYCURSOR);",
          "3493:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3495:   {",
          "3496:  return T_AND_EQUAL;",
          "3497: }",
          "",
          "[Removed Lines]",
          "3494: #line 1398 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3494: #line 1402 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3504: yy228:",
          "3505:   YYDEBUG(228, *YYCURSOR);",
          "3506:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3508:   {",
          "3509:  if (CG(asp_tags)) {",
          "3510:   BEGIN(INITIAL);",
          "",
          "[Removed Lines]",
          "3507: #line 1980 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3507: #line 1984 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3523:   ++YYCURSOR;",
          "3524:   YYDEBUG(230, *YYCURSOR);",
          "3525:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3527:   {",
          "3528:  return T_MOD_EQUAL;",
          "3529: }",
          "",
          "[Removed Lines]",
          "3526: #line 1386 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3526: #line 1390 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3558:   ++YYCURSOR;",
          "3559:   YYDEBUG(236, *YYCURSOR);",
          "3560:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3562:   {",
          "3563:  return T_CONCAT_EQUAL;",
          "3564: }",
          "",
          "[Removed Lines]",
          "3561: #line 1382 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3561: #line 1386 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3571: yy238:",
          "3572:   YYDEBUG(238, *YYCURSOR);",
          "3573:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3575:   {",
          "3576:  int doc_com;",
          "",
          "[Removed Lines]",
          "3574: #line 1937 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3574: #line 1941 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3615:   ++YYCURSOR;",
          "3616:   YYDEBUG(241, *YYCURSOR);",
          "3617:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3619:   {",
          "3620:  return T_DIV_EQUAL;",
          "3621: }",
          "",
          "[Removed Lines]",
          "3618: #line 1378 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3618: #line 1382 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3642:   ++YYCURSOR;",
          "3643:   YYDEBUG(246, *YYCURSOR);",
          "3644:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3646:   {",
          "3647:  return T_MUL_EQUAL;",
          "3648: }",
          "",
          "[Removed Lines]",
          "3645: #line 1374 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3645: #line 1378 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3653:   if ((yych = *YYCURSOR) == '=') goto yy251;",
          "3654:   YYDEBUG(248, *YYCURSOR);",
          "3655:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3657:   {",
          "3658:  return T_SR;",
          "3659: }",
          "",
          "[Removed Lines]",
          "3656: #line 1434 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3656: #line 1438 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3663:   ++YYCURSOR;",
          "3664:   YYDEBUG(250, *YYCURSOR);",
          "3665:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3667:   {",
          "3668:  return T_IS_GREATER_OR_EQUAL;",
          "3669: }",
          "",
          "[Removed Lines]",
          "3666: #line 1362 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3666: #line 1366 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3673:   ++YYCURSOR;",
          "3674:   YYDEBUG(252, *YYCURSOR);",
          "3675:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3677:   {",
          "3678:  return T_SR_EQUAL;",
          "3679: }",
          "",
          "[Removed Lines]",
          "3676: #line 1394 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3676: #line 1398 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3688: yy254:",
          "3689:   YYDEBUG(254, *YYCURSOR);",
          "3690:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3692:   {",
          "3693:  return T_SL;",
          "3694: }",
          "",
          "[Removed Lines]",
          "3691: #line 1430 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3691: #line 1434 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3704:   ++YYCURSOR;",
          "3705:   YYDEBUG(257, *YYCURSOR);",
          "3706:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3708:   {",
          "3709:  return T_IS_SMALLER_OR_EQUAL;",
          "3710: }",
          "",
          "[Removed Lines]",
          "3707: #line 1358 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3707: #line 1362 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3715: yy259:",
          "3716:   YYDEBUG(259, *YYCURSOR);",
          "3717:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3719:   {",
          "3720:  return T_IS_NOT_EQUAL;",
          "3721: }",
          "",
          "[Removed Lines]",
          "3718: #line 1354 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3718: #line 1358 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3770:   ++YYCURSOR;",
          "3771:   YYDEBUG(268, *YYCURSOR);",
          "3772:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3774:   {",
          "3775:  return T_SL_EQUAL;",
          "3776: }",
          "",
          "[Removed Lines]",
          "3773: #line 1390 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3773: #line 1394 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3879: yy279:",
          "3880:   YYDEBUG(279, *YYCURSOR);",
          "3881:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3883:   {",
          "3884:  char *s;",
          "3885:  int bprefix = (yytext[0] != '<') ? 1 : 0;",
          "",
          "[Removed Lines]",
          "3882: #line 2105 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3882: #line 2109 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "3967:   ++YYCURSOR;",
          "3968:   YYDEBUG(285, *YYCURSOR);",
          "3969:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3971:   {",
          "3972:  return T_IS_NOT_IDENTICAL;",
          "3973: }",
          "",
          "[Removed Lines]",
          "3970: #line 1346 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3970: #line 1350 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "3977:   ++YYCURSOR;",
          "3978:   YYDEBUG(287, *YYCURSOR);",
          "3979:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3981:   {",
          "3982:  return T_PLUS_EQUAL;",
          "3983: }",
          "",
          "[Removed Lines]",
          "3980: #line 1366 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3980: #line 1370 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "3987:   ++YYCURSOR;",
          "3988:   YYDEBUG(289, *YYCURSOR);",
          "3989:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3991:   {",
          "3992:  return T_INC;",
          "3993: }",
          "",
          "[Removed Lines]",
          "3990: #line 1334 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3990: #line 1338 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "4010:   }",
          "4011:   YYDEBUG(293, *YYCURSOR);",
          "4012:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4014:   {",
          "4015:  return T_LIST;",
          "4016: }",
          "",
          "[Removed Lines]",
          "4013: #line 1322 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4013: #line 1326 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "4021:   if ((yych = *YYCURSOR) == '=') goto yy298;",
          "4022:   YYDEBUG(295, *YYCURSOR);",
          "4023:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4025:   {",
          "4026:  return T_IS_EQUAL;",
          "4027: }",
          "",
          "[Removed Lines]",
          "4024: #line 1350 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4024: #line 1354 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "4031:   ++YYCURSOR;",
          "4032:   YYDEBUG(297, *YYCURSOR);",
          "4033:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4035:   {",
          "4036:  return T_DOUBLE_ARROW;",
          "4037: }",
          "",
          "[Removed Lines]",
          "4034: #line 1318 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4034: #line 1322 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "4041:   ++YYCURSOR;",
          "4042:   YYDEBUG(299, *YYCURSOR);",
          "4043:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4045:   {",
          "4046:  return T_IS_IDENTICAL;",
          "4047: }",
          "",
          "[Removed Lines]",
          "4044: #line 1342 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4044: #line 1346 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "4175:   }",
          "4176:   YYDEBUG(319, *YYCURSOR);",
          "4177:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4179:   {",
          "4180:  if (CG(current_namespace)) {",
          "",
          "[Removed Lines]",
          "4178: #line 1706 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4178: #line 1710 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "4205:   }",
          "4206:   YYDEBUG(324, *YYCURSOR);",
          "4207:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4209:   {",
          "4210:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "4211:  const size_t filename_len = strlen(filename);",
          "",
          "[Removed Lines]",
          "4208: #line 1679 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4208: #line 1683 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "4257:   }",
          "4258:   YYDEBUG(330, *YYCURSOR);",
          "4259:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4261:   {",
          "4262:  zendlval->value.lval = CG(zend_lineno);",
          "4263:  zendlval->type = IS_LONG;",
          "",
          "[Removed Lines]",
          "4260: #line 1661 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4260: #line 1665 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "4298:   }",
          "4299:   YYDEBUG(338, *YYCURSOR);",
          "4300:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4302:   {",
          "4303:  const char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;",
          "4304:  const char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;",
          "",
          "[Removed Lines]",
          "4301: #line 1640 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4301: #line 1644 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "4370:   }",
          "4371:   YYDEBUG(349, *YYCURSOR);",
          "4372:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4374:   {",
          "4375:  const char *func_name = NULL;",
          "",
          "[Removed Lines]",
          "4373: #line 1624 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4373: #line 1628 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "4406:   }",
          "4407:   YYDEBUG(354, *YYCURSOR);",
          "4408:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4410:   {",
          "4411:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "",
          "[Removed Lines]",
          "4409: #line 1667 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4409: #line 1671 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "4448:   }",
          "4449:   YYDEBUG(361, *YYCURSOR);",
          "4450:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4452:   {",
          "4453:  const char *trait_name = NULL;",
          "",
          "[Removed Lines]",
          "4451: #line 1604 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4451: #line 1608 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "4498:   }",
          "4499:   YYDEBUG(368, *YYCURSOR);",
          "4500:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4502:   {",
          "4503:  const char *class_name = NULL;",
          "",
          "[Removed Lines]",
          "4501: #line 1577 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4501: #line 1581 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "4587:   }",
          "4588:   YYDEBUG(381, *YYCURSOR);",
          "4589:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4591:   {",
          "4592:  return T_HALT_COMPILER;",
          "4593: }",
          "",
          "[Removed Lines]",
          "4590: #line 1286 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4590: #line 1290 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "4611:   }",
          "4612:   YYDEBUG(385, *YYCURSOR);",
          "4613:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4615:   {",
          "4616:  return T_USE;",
          "4617: }",
          "",
          "[Removed Lines]",
          "4614: #line 1266 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4614: #line 1270 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "4634:   }",
          "4635:   YYDEBUG(389, *YYCURSOR);",
          "4636:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4638:   {",
          "4639:  return T_UNSET;",
          "4640: }",
          "",
          "[Removed Lines]",
          "4637: #line 1314 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4637: #line 1318 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "4810:   ++YYCURSOR;",
          "4811:   YYDEBUG(407, *YYCURSOR);",
          "4812:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4814:   {",
          "4815:  return T_INT_CAST;",
          "4816: }",
          "",
          "[Removed Lines]",
          "4813: #line 1214 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4813: #line 1218 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "4858:   ++YYCURSOR;",
          "4859:   YYDEBUG(416, *YYCURSOR);",
          "4860:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4862:   {",
          "4863:  return T_DOUBLE_CAST;",
          "4864: }",
          "",
          "[Removed Lines]",
          "4861: #line 1218 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4861: #line 1222 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "4932:   ++YYCURSOR;",
          "4933:   YYDEBUG(430, *YYCURSOR);",
          "4934:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4936:   {",
          "4937:  return T_STRING_CAST;",
          "4938: }",
          "",
          "[Removed Lines]",
          "4935: #line 1222 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4935: #line 1226 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "4969:   ++YYCURSOR;",
          "4970:   YYDEBUG(437, *YYCURSOR);",
          "4971:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4973:   {",
          "4974:  return T_ARRAY_CAST;",
          "4975: }",
          "",
          "[Removed Lines]",
          "4972: #line 1226 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4972: #line 1230 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "5011:   ++YYCURSOR;",
          "5012:   YYDEBUG(445, *YYCURSOR);",
          "5013:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5015:   {",
          "5016:  return T_OBJECT_CAST;",
          "5017: }",
          "",
          "[Removed Lines]",
          "5014: #line 1230 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5014: #line 1234 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "5056:   ++YYCURSOR;",
          "5057:   YYDEBUG(453, *YYCURSOR);",
          "5058:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5060:   {",
          "5061:  return T_BOOL_CAST;",
          "5062: }",
          "",
          "[Removed Lines]",
          "5059: #line 1234 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5059: #line 1238 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "5120:   ++YYCURSOR;",
          "5121:   YYDEBUG(465, *YYCURSOR);",
          "5122:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5124:   {",
          "5125:  return T_UNSET_CAST;",
          "5126: }",
          "",
          "[Removed Lines]",
          "5123: #line 1238 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5123: #line 1242 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "5138:   }",
          "5139:   YYDEBUG(468, *YYCURSOR);",
          "5140:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5142:   {",
          "5143:  return T_VAR;",
          "5144: }",
          "",
          "[Removed Lines]",
          "5141: #line 1210 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5141: #line 1214 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "5162:   }",
          "5163:   YYDEBUG(472, *YYCURSOR);",
          "5164:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5166:   {",
          "5167:  return T_NEW;",
          "5168: }",
          "",
          "[Removed Lines]",
          "5165: #line 1202 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5165: #line 1206 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "5205:   }",
          "5206:   YYDEBUG(480, *YYCURSOR);",
          "5207:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5209:   {",
          "5210:  return T_NAMESPACE;",
          "5211: }",
          "",
          "[Removed Lines]",
          "5208: #line 1262 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5208: #line 1266 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "5215:   ++YYCURSOR;",
          "5216:   YYDEBUG(482, *YYCURSOR);",
          "5217:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5219:   {",
          "5220:  return T_PAAMAYIM_NEKUDOTAYIM;",
          "5221: }",
          "",
          "[Removed Lines]",
          "5218: #line 1194 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5218: #line 1198 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "5241:   ++YYCURSOR;",
          "5242:   YYDEBUG(486, *YYCURSOR);",
          "5243:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5245:   {",
          "5246:  return T_MINUS_EQUAL;",
          "5247: }",
          "",
          "[Removed Lines]",
          "5244: #line 1370 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5244: #line 1374 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "5251:   ++YYCURSOR;",
          "5252:   YYDEBUG(488, *YYCURSOR);",
          "5253:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5255:   {",
          "5256:  return T_DEC;",
          "5257: }",
          "",
          "[Removed Lines]",
          "5254: #line 1338 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5254: #line 1342 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "5261:   ++YYCURSOR;",
          "5262:   YYDEBUG(490, *YYCURSOR);",
          "5263:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5265:   {",
          "5266:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "5267:  return T_OBJECT_OPERATOR;",
          "",
          "[Removed Lines]",
          "5264: #line 1164 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5264: #line 1168 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "5311:   }",
          "5312:   YYDEBUG(497, *YYCURSOR);",
          "5313:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5315:   {",
          "5316:  return T_PUBLIC;",
          "5317: }",
          "",
          "[Removed Lines]",
          "5314: #line 1310 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5314: #line 1314 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "5370:   }",
          "5371:   YYDEBUG(506, *YYCURSOR);",
          "5372:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5374:   {",
          "5375:  return T_PROTECTED;",
          "5376: }",
          "",
          "[Removed Lines]",
          "5373: #line 1306 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5373: #line 1310 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "5404:   }",
          "5405:   YYDEBUG(512, *YYCURSOR);",
          "5406:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5408:   {",
          "5409:  return T_PRIVATE;",
          "5410: }",
          "",
          "[Removed Lines]",
          "5407: #line 1302 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5407: #line 1306 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "5417:   }",
          "5418:   YYDEBUG(514, *YYCURSOR);",
          "5419:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5421:   {",
          "5422:  return T_PRINT;",
          "5423: }",
          "",
          "[Removed Lines]",
          "5420: #line 1140 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5420: #line 1144 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "5446:   }",
          "5447:   YYDEBUG(519, *YYCURSOR);",
          "5448:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5450:   {",
          "5451:  return T_GOTO;",
          "5452: }",
          "",
          "[Removed Lines]",
          "5449: #line 1132 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5449: #line 1136 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "5474:   }",
          "5475:   YYDEBUG(524, *YYCURSOR);",
          "5476:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5478:   {",
          "5479:  return T_GLOBAL;",
          "5480: }",
          "",
          "[Removed Lines]",
          "5477: #line 1274 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5477: #line 1278 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "5515:   }",
          "5516:   YYDEBUG(532, *YYCURSOR);",
          "5517:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5519:   {",
          "5520:  return T_BREAK;",
          "5521: }",
          "",
          "[Removed Lines]",
          "5518: #line 1124 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5518: #line 1128 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "5559:   }",
          "5560:   YYDEBUG(540, *YYCURSOR);",
          "5561:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5563:   {",
          "5564:  return T_SWITCH;",
          "5565: }",
          "",
          "[Removed Lines]",
          "5562: #line 1108 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5562: #line 1112 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "5587:   }",
          "5588:   YYDEBUG(545, *YYCURSOR);",
          "5589:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5591:   {",
          "5592:  return T_STATIC;",
          "5593: }",
          "",
          "[Removed Lines]",
          "5590: #line 1290 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5590: #line 1294 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "5618:   }",
          "5619:   YYDEBUG(550, *YYCURSOR);",
          "5620:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5622:   {",
          "5623:  return T_AS;",
          "5624: }",
          "",
          "[Removed Lines]",
          "5621: #line 1104 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5621: #line 1108 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "5641:   }",
          "5642:   YYDEBUG(554, *YYCURSOR);",
          "5643:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5645:   {",
          "5646:  return T_ARRAY;",
          "5647: }",
          "",
          "[Removed Lines]",
          "5644: #line 1326 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5644: #line 1330 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "5654:   }",
          "5655:   YYDEBUG(556, *YYCURSOR);",
          "5656:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5658:   {",
          "5659:  return T_LOGICAL_AND;",
          "5660: }",
          "",
          "[Removed Lines]",
          "5657: #line 1422 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5657: #line 1426 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "5692:   }",
          "5693:   YYDEBUG(563, *YYCURSOR);",
          "5694:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5696:   {",
          "5697:  return T_ABSTRACT;",
          "5698: }",
          "",
          "[Removed Lines]",
          "5695: #line 1294 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5695: #line 1298 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "5720:   }",
          "5721:   YYDEBUG(568, *YYCURSOR);",
          "5722:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5724:   {",
          "5725:  return T_WHILE;",
          "5726: }",
          "",
          "[Removed Lines]",
          "5723: #line 1064 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5723: #line 1068 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "5733:   }",
          "5734:   YYDEBUG(570, *YYCURSOR);",
          "5735:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5737:   {",
          "5738:  return T_IF;",
          "5739: }",
          "",
          "[Removed Lines]",
          "5736: #line 1048 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5736: #line 1052 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "5789:   }",
          "5790:   YYDEBUG(577, *YYCURSOR);",
          "5791:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5793:   {",
          "5794:  return T_ISSET;",
          "5795: }",
          "",
          "[Removed Lines]",
          "5792: #line 1278 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5792: #line 1282 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 116 ---",
          "[Context before]",
          "5847: yy585:",
          "5848:   YYDEBUG(585, *YYCURSOR);",
          "5849:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5851:   {",
          "5852:  return T_INCLUDE;",
          "5853: }",
          "",
          "[Removed Lines]",
          "5850: #line 1246 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5850: #line 1250 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 117 ---",
          "[Context before]",
          "5880:   }",
          "5881:   YYDEBUG(591, *YYCURSOR);",
          "5882:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5884:   {",
          "5885:  return T_INCLUDE_ONCE;",
          "5886: }",
          "",
          "[Removed Lines]",
          "5883: #line 1250 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5883: #line 1254 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 118 ---",
          "[Context before]",
          "5918:   }",
          "5919:   YYDEBUG(598, *YYCURSOR);",
          "5920:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5922:   {",
          "5923:  return T_INTERFACE;",
          "5924: }",
          "",
          "[Removed Lines]",
          "5921: #line 1148 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5921: #line 1152 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 119 ---",
          "[Context before]",
          "5972:   }",
          "5973:   YYDEBUG(606, *YYCURSOR);",
          "5974:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5976:   {",
          "5977:         return T_INSTEADOF;",
          "5978: }",
          "",
          "[Removed Lines]",
          "5975: #line 1270 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "5975: #line 1274 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 120 ---",
          "[Context before]",
          "6005:   }",
          "6006:   YYDEBUG(612, *YYCURSOR);",
          "6007:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6009:   {",
          "6010:  return T_INSTANCEOF;",
          "6011: }",
          "",
          "[Removed Lines]",
          "6008: #line 1100 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6008: #line 1104 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 121 ---",
          "[Context before]",
          "6053:   }",
          "6054:   YYDEBUG(621, *YYCURSOR);",
          "6055:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6057:   {",
          "6058:  return T_IMPLEMENTS;",
          "6059: }",
          "",
          "[Removed Lines]",
          "6056: #line 1160 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6056: #line 1164 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 122 ---",
          "[Context before]",
          "6108:   }",
          "6109:   YYDEBUG(629, *YYCURSOR);",
          "6110:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6112:   {",
          "6113:  return T_TRAIT;",
          "6114: }",
          "",
          "[Removed Lines]",
          "6111: #line 1152 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6111: #line 1156 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 123 ---",
          "[Context before]",
          "6131:   }",
          "6132:   YYDEBUG(633, *YYCURSOR);",
          "6133:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6135:   {",
          "6136:  return T_THROW;",
          "6137: }",
          "",
          "[Removed Lines]",
          "6134: #line 1044 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6134: #line 1048 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 124 ---",
          "[Context before]",
          "6196: yy641:",
          "6197:   YYDEBUG(641, *YYCURSOR);",
          "6198:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6200:   {",
          "6201:  return T_REQUIRE;",
          "6202: }",
          "",
          "[Removed Lines]",
          "6199: #line 1254 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6199: #line 1258 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 125 ---",
          "[Context before]",
          "6229:   }",
          "6230:   YYDEBUG(647, *YYCURSOR);",
          "6231:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6233:   {",
          "6234:  return T_REQUIRE_ONCE;",
          "6235: }",
          "",
          "[Removed Lines]",
          "6232: #line 1258 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6232: #line 1262 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 126 ---",
          "[Context before]",
          "6346:   }",
          "6347:   YYDEBUG(662, *YYCURSOR);",
          "6348:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6350:   {",
          "6351:  return T_CONTINUE;",
          "6352: }",
          "",
          "[Removed Lines]",
          "6349: #line 1128 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6349: #line 1132 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 127 ---",
          "[Context before]",
          "6388:   }",
          "6389:   YYDEBUG(669, *YYCURSOR);",
          "6390:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6392:   {",
          "6393:  return T_CLONE;",
          "6394: }",
          "",
          "[Removed Lines]",
          "6391: #line 1206 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6391: #line 1210 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 128 ---",
          "[Context before]",
          "6406:   }",
          "6407:   YYDEBUG(672, *YYCURSOR);",
          "6408:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6410:   {",
          "6411:  return T_CLASS;",
          "6412: }",
          "",
          "[Removed Lines]",
          "6409: #line 1144 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6409: #line 1148 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 129 ---",
          "[Context before]",
          "6456:   }",
          "6457:   YYDEBUG(681, *YYCURSOR);",
          "6458:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6460:   {",
          "6461:  return T_CALLABLE;",
          "6462: }",
          "",
          "[Removed Lines]",
          "6459: #line 1330 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6459: #line 1334 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 130 ---",
          "[Context before]",
          "6469:   }",
          "6470:   YYDEBUG(683, *YYCURSOR);",
          "6471:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6473:   {",
          "6474:  return T_CASE;",
          "6475: }",
          "",
          "[Removed Lines]",
          "6472: #line 1116 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6472: #line 1120 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 131 ---",
          "[Context before]",
          "6570: yy698:",
          "6571:   YYDEBUG(698, *YYCURSOR);",
          "6572:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6574:   {",
          "6575:  return T_FOR;",
          "6576: }",
          "",
          "[Removed Lines]",
          "6573: #line 1076 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6573: #line 1080 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 132 ---",
          "[Context before]",
          "6598:   }",
          "6599:   YYDEBUG(703, *YYCURSOR);",
          "6600:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6602:   {",
          "6603:  return T_FOREACH;",
          "6604: }",
          "",
          "[Removed Lines]",
          "6601: #line 1084 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "6601: #line 1088 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 133 ---",
          "[Context before]",
          "6616: yy706:",
          "6617:   YYDEBUG(706, *YYCURSOR);",
          "6618:   ++YYCURSOR;",
          "6621:   }",
          "6622:   YYDEBUG(707, *YYCURSOR);",
          "6623:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6625:   {",
          "6626:  return T_FINAL;",
          "6627: }",
          "6629: yy708:",
          "6630:   YYDEBUG(708, *YYCURSOR);",
          "6631:   yych = *++YYCURSOR;",
          "6632:   if (yych <= 'F') {",
          "6634:    if (yych <= 'E') goto yy186;",
          "6636:   } else {",
          "6637:    if (yych <= 'c') {",
          "6638:     if (yych <= 'b') goto yy186;",
          "6640:    } else {",
          "6642:     goto yy186;",
          "6643:    }",
          "6644:   }",
          "6647:   yych = *++YYCURSOR;",
          "6650:   goto yy186;",
          "6653:   ++YYCURSOR;",
          "6654:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6655:    goto yy185;",
          "6656:   }",
          "6658:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6660:   {",
          "6661:  return T_DO;",
          "6662: }",
          "6666:   ++YYCURSOR;",
          "6667:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6668:    goto yy185;",
          "6669:   }",
          "6671:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6672: #line 1020 \"Zend/zend_language_scanner.l\"",
          "6673:   {",
          "6674:  return T_EXIT;",
          "6675: }",
          "6679:   yych = *++YYCURSOR;",
          "6682:   goto yy186;",
          "6685:   yych = *++YYCURSOR;",
          "6687:   if (yych != 'a') goto yy186;",
          "6690:   yych = *++YYCURSOR;",
          "6692:   if (yych != 'u') goto yy186;",
          "6695:   yych = *++YYCURSOR;",
          "6697:   if (yych != 'l') goto yy186;",
          "6700:   yych = *++YYCURSOR;",
          "6702:   if (yych != 't') goto yy186;",
          "6705:   ++YYCURSOR;",
          "6706:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6707:    goto yy185;",
          "6708:   }",
          "6710:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6712:   {",
          "6713:  return T_DEFAULT;",
          "6714: }",
          "6718:   yych = *++YYCURSOR;",
          "6720:   if (yych != 'a') goto yy186;",
          "6723:   yych = *++YYCURSOR;",
          "6725:   if (yych != 'r') goto yy186;",
          "6728:   yych = *++YYCURSOR;",
          "6730:   if (yych != 'e') goto yy186;",
          "6733:   ++YYCURSOR;",
          "6734:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6735:    goto yy185;",
          "6736:   }",
          "6738:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6740:   {",
          "6741:  return T_DECLARE;",
          "6742: }",
          "6762: yy729:",
          "6763:   YYDEBUG(729, *YYCURSOR);",
          "6764:   yych = *++YYCURSOR;",
          "6767:   goto yy186;",
          "6768: yy730:",
          "6769:   YYDEBUG(730, *YYCURSOR);",
          "6770:   yych = *++YYCURSOR;",
          "6773:   goto yy186;",
          "6774: yy731:",
          "6775:   YYDEBUG(731, *YYCURSOR);",
          "6776:   yych = *++YYCURSOR;",
          "6789: yy732:",
          "6790:   YYDEBUG(732, *YYCURSOR);",
          "6791:   yych = *++YYCURSOR;",
          "6794:   goto yy186;",
          "6795: yy733:",
          "6796:   YYDEBUG(733, *YYCURSOR);",
          "6797:   yych = *++YYCURSOR;",
          "6800: yy734:",
          "6801:   YYDEBUG(734, *YYCURSOR);",
          "6802:   yych = *++YYCURSOR;",
          "6805: yy735:",
          "6806:   YYDEBUG(735, *YYCURSOR);",
          "6807:   yych = *++YYCURSOR;",
          "6810: yy736:",
          "6811:   YYDEBUG(736, *YYCURSOR);",
          "6812:   yych = *++YYCURSOR;",
          "6815: yy737:",
          "6816:   YYDEBUG(737, *YYCURSOR);",
          "6817:   ++YYCURSOR;",
          "6818:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6819:    goto yy185;",
          "6820:   }",
          "6822:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6824:   {",
          "6825:  return T_EXTENDS;",
          "6826: }",
          "6830:   ++YYCURSOR;",
          "6831:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6832:    goto yy185;",
          "6833:   }",
          "6835:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6836: #line 1016 \"Zend/zend_language_scanner.l\"",
          "6837:   {",
          "6838:  return T_EXIT;",
          "6839: }",
          "6843:   yych = *++YYCURSOR;",
          "6845:   if (yych != 'l') goto yy186;",
          "6848:   ++YYCURSOR;",
          "6849:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6850:    goto yy185;",
          "6851:   }",
          "6853:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6855:   {",
          "6856:  return T_EVAL;",
          "6857: }",
          "6861:   yych = *++YYCURSOR;",
          "6862:   YYDEBUG(-1, yych);",
          "6863:   switch (yych) {",
          "6864:   case 'D':",
          "6866:   case 'F':",
          "6868:   case 'I':",
          "6870:   case 'S':",
          "6872:   case 'W':",
          "6874:   default: goto yy186;",
          "6875:   }",
          "6894: yy748:",
          "6895:   YYDEBUG(748, *YYCURSOR);",
          "6896:   yych = *++YYCURSOR;",
          "6899:   goto yy186;",
          "6900: yy749:",
          "6901:   YYDEBUG(749, *YYCURSOR);",
          "6902:   yych = *++YYCURSOR;",
          "6905: yy750:",
          "6906:   YYDEBUG(750, *YYCURSOR);",
          "6907:   yych = *++YYCURSOR;",
          "6910: yy751:",
          "6911:   YYDEBUG(751, *YYCURSOR);",
          "6912:   yych = *++YYCURSOR;",
          "6915: yy752:",
          "6916:   YYDEBUG(752, *YYCURSOR);",
          "6917:   yych = *++YYCURSOR;",
          "6920: yy753:",
          "6921:   YYDEBUG(753, *YYCURSOR);",
          "6922:   ++YYCURSOR;",
          "6923:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6924:    goto yy185;",
          "6925:   }",
          "6927:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6929:   {",
          "6930:  return T_ENDWHILE;",
          "6931: }",
          "6935:   yych = *++YYCURSOR;",
          "6937:   if (yych != 'i') goto yy186;",
          "6940:   yych = *++YYCURSOR;",
          "6942:   if (yych != 't') goto yy186;",
          "6945:   yych = *++YYCURSOR;",
          "6947:   if (yych != 'c') goto yy186;",
          "6950:   yych = *++YYCURSOR;",
          "6952:   if (yych != 'h') goto yy186;",
          "6955:   ++YYCURSOR;",
          "6956:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6957:    goto yy185;",
          "6958:   }",
          "6960:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6962:   {",
          "6963:  return T_ENDSWITCH;",
          "6964: }",
          "6968:   ++YYCURSOR;",
          "6969:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6970:    goto yy185;",
          "6971:   }",
          "6973:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6975:   {",
          "6976:  return T_ENDIF;",
          "6977: }",
          "6981:   yych = *++YYCURSOR;",
          "6983:   if (yych != 'r') goto yy186;",
          "6986:   ++YYCURSOR;",
          "6987:   if ((yych = *YYCURSOR) <= '^') {",
          "6988:    if (yych <= '@') {",
          "6990:     if (yych <= '9') goto yy185;",
          "6991:    } else {",
          "6993:     if (yych <= 'Z') goto yy185;",
          "6994:    }",
          "6995:   } else {",
          "6996:    if (yych <= 'd') {",
          "6997:     if (yych != '`') goto yy185;",
          "6998:    } else {",
          "7000:     if (yych <= 'z') goto yy185;",
          "7001:     if (yych >= 0x7F) goto yy185;",
          "7002:    }",
          "7003:   }",
          "7006:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7008:   {",
          "7009:  return T_ENDFOR;",
          "7010: }",
          "7014:   yych = *++YYCURSOR;",
          "7016:   if (yych != 'a') goto yy186;",
          "7019:   yych = *++YYCURSOR;",
          "7021:   if (yych != 'c') goto yy186;",
          "7024:   yych = *++YYCURSOR;",
          "7026:   if (yych != 'h') goto yy186;",
          "7029:   ++YYCURSOR;",
          "7030:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7031:    goto yy185;",
          "7032:   }",
          "7034:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7036:   {",
          "7037:  return T_ENDFOREACH;",
          "7038: }",
          "7042:   yych = *++YYCURSOR;",
          "7044:   if (yych != 'c') goto yy186;",
          "7047:   yych = *++YYCURSOR;",
          "7049:   if (yych != 'l') goto yy186;",
          "7052:   yych = *++YYCURSOR;",
          "7054:   if (yych != 'a') goto yy186;",
          "7057:   yych = *++YYCURSOR;",
          "7059:   if (yych != 'r') goto yy186;",
          "7062:   yych = *++YYCURSOR;",
          "7064:   if (yych != 'e') goto yy186;",
          "7067:   ++YYCURSOR;",
          "7068:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7069:    goto yy185;",
          "7070:   }",
          "7072:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7074:   {",
          "7075:  return T_ENDDECLARE;",
          "7076: }",
          "7080:   yych = *++YYCURSOR;",
          "7082:   if (yych != 't') goto yy186;",
          "7085:   yych = *++YYCURSOR;",
          "7087:   if (yych != 'y') goto yy186;",
          "7090:   ++YYCURSOR;",
          "7091:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7092:    goto yy185;",
          "7093:   }",
          "7095:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7097:   {",
          "7098:  return T_EMPTY;",
          "7099: }",
          "7103:   yych = *++YYCURSOR;",
          "7105:   if (yych != 'e') goto yy186;",
          "7108:   ++YYCURSOR;",
          "7109:   if ((yych = *YYCURSOR) <= '^') {",
          "7110:    if (yych <= '@') {",
          "7112:     if (yych <= '9') goto yy185;",
          "7113:    } else {",
          "7115:     if (yych <= 'Z') goto yy185;",
          "7116:    }",
          "7117:   } else {",
          "7118:    if (yych <= 'h') {",
          "7119:     if (yych != '`') goto yy185;",
          "7120:    } else {",
          "7122:     if (yych <= 'z') goto yy185;",
          "7123:     if (yych >= 0x7F) goto yy185;",
          "7124:    }",
          "7125:   }",
          "7128:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7130:   {",
          "7131:  return T_ELSE;",
          "7132: }",
          "7136:   yych = *++YYCURSOR;",
          "7138:   if (yych != 'f') goto yy186;",
          "7141:   ++YYCURSOR;",
          "7142:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7143:    goto yy185;",
          "7144:   }",
          "7146:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7148:   {",
          "7149:  return T_ELSEIF;",
          "7150: }",
          "7154:   yych = *++YYCURSOR;",
          "7156:   if (yych != 'o') goto yy186;",
          "7159:   ++YYCURSOR;",
          "7160:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7161:    goto yy185;",
          "7162:   }",
          "7164:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7166:   {",
          "7167:  return T_ECHO;",
          "7168: }",
          "7170:  }",
          "7172: yyc_ST_LOOKING_FOR_PROPERTY:",
          "",
          "[Removed Lines]",
          "6619:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6620:    goto yy185;",
          "6624: #line 1298 \"Zend/zend_language_scanner.l\"",
          "6628: #line 6629 \"Zend/zend_language_scanner.c\"",
          "6633:    if (yych == 'C') goto yy714;",
          "6635:    goto yy715;",
          "6639:     goto yy714;",
          "6641:     if (yych == 'f') goto yy715;",
          "6645: yy709:",
          "6646:   YYDEBUG(709, *YYCURSOR);",
          "6648:   if (yych == 'E') goto yy712;",
          "6649:   if (yych == 'e') goto yy712;",
          "6651: yy710:",
          "6652:   YYDEBUG(710, *YYCURSOR);",
          "6657:   YYDEBUG(711, *YYCURSOR);",
          "6659: #line 1072 \"Zend/zend_language_scanner.l\"",
          "6663: #line 6664 \"Zend/zend_language_scanner.c\"",
          "6664: yy712:",
          "6665:   YYDEBUG(712, *YYCURSOR);",
          "6670:   YYDEBUG(713, *YYCURSOR);",
          "6676: #line 6677 \"Zend/zend_language_scanner.c\"",
          "6677: yy714:",
          "6678:   YYDEBUG(714, *YYCURSOR);",
          "6680:   if (yych == 'L') goto yy721;",
          "6681:   if (yych == 'l') goto yy721;",
          "6683: yy715:",
          "6684:   YYDEBUG(715, *YYCURSOR);",
          "6686:   if (yych == 'A') goto yy716;",
          "6688: yy716:",
          "6689:   YYDEBUG(716, *YYCURSOR);",
          "6691:   if (yych == 'U') goto yy717;",
          "6693: yy717:",
          "6694:   YYDEBUG(717, *YYCURSOR);",
          "6696:   if (yych == 'L') goto yy718;",
          "6698: yy718:",
          "6699:   YYDEBUG(718, *YYCURSOR);",
          "6701:   if (yych == 'T') goto yy719;",
          "6703: yy719:",
          "6704:   YYDEBUG(719, *YYCURSOR);",
          "6709:   YYDEBUG(720, *YYCURSOR);",
          "6711: #line 1120 \"Zend/zend_language_scanner.l\"",
          "6715: #line 6716 \"Zend/zend_language_scanner.c\"",
          "6716: yy721:",
          "6717:   YYDEBUG(721, *YYCURSOR);",
          "6719:   if (yych == 'A') goto yy722;",
          "6721: yy722:",
          "6722:   YYDEBUG(722, *YYCURSOR);",
          "6724:   if (yych == 'R') goto yy723;",
          "6726: yy723:",
          "6727:   YYDEBUG(723, *YYCURSOR);",
          "6729:   if (yych == 'E') goto yy724;",
          "6731: yy724:",
          "6732:   YYDEBUG(724, *YYCURSOR);",
          "6737:   YYDEBUG(725, *YYCURSOR);",
          "6739: #line 1092 \"Zend/zend_language_scanner.l\"",
          "6743: #line 6744 \"Zend/zend_language_scanner.c\"",
          "6744: yy726:",
          "6745:   YYDEBUG(726, *YYCURSOR);",
          "6746:   yych = *++YYCURSOR;",
          "6747:   if (yych == 'H') goto yy788;",
          "6748:   if (yych == 'h') goto yy788;",
          "6749:   goto yy186;",
          "6750: yy727:",
          "6751:   YYDEBUG(727, *YYCURSOR);",
          "6752:   yych = *++YYCURSOR;",
          "6753:   if (yych == 'S') goto yy782;",
          "6754:   if (yych == 's') goto yy782;",
          "6755:   goto yy186;",
          "6756: yy728:",
          "6757:   YYDEBUG(728, *YYCURSOR);",
          "6758:   yych = *++YYCURSOR;",
          "6759:   if (yych == 'P') goto yy778;",
          "6760:   if (yych == 'p') goto yy778;",
          "6761:   goto yy186;",
          "6765:   if (yych == 'D') goto yy744;",
          "6766:   if (yych == 'd') goto yy744;",
          "6771:   if (yych == 'A') goto yy741;",
          "6772:   if (yych == 'a') goto yy741;",
          "6777:   if (yych <= 'T') {",
          "6778:    if (yych == 'I') goto yy732;",
          "6779:    if (yych <= 'S') goto yy186;",
          "6780:    goto yy733;",
          "6781:   } else {",
          "6782:    if (yych <= 'i') {",
          "6783:     if (yych <= 'h') goto yy186;",
          "6784:    } else {",
          "6785:     if (yych == 't') goto yy733;",
          "6786:     goto yy186;",
          "6787:    }",
          "6788:   }",
          "6792:   if (yych == 'T') goto yy739;",
          "6793:   if (yych == 't') goto yy739;",
          "6798:   if (yych == 'E') goto yy734;",
          "6799:   if (yych != 'e') goto yy186;",
          "6803:   if (yych == 'N') goto yy735;",
          "6804:   if (yych != 'n') goto yy186;",
          "6808:   if (yych == 'D') goto yy736;",
          "6809:   if (yych != 'd') goto yy186;",
          "6813:   if (yych == 'S') goto yy737;",
          "6814:   if (yych != 's') goto yy186;",
          "6821:   YYDEBUG(738, *YYCURSOR);",
          "6823: #line 1156 \"Zend/zend_language_scanner.l\"",
          "6827: #line 6828 \"Zend/zend_language_scanner.c\"",
          "6828: yy739:",
          "6829:   YYDEBUG(739, *YYCURSOR);",
          "6834:   YYDEBUG(740, *YYCURSOR);",
          "6840: #line 6841 \"Zend/zend_language_scanner.c\"",
          "6841: yy741:",
          "6842:   YYDEBUG(741, *YYCURSOR);",
          "6844:   if (yych == 'L') goto yy742;",
          "6846: yy742:",
          "6847:   YYDEBUG(742, *YYCURSOR);",
          "6852:   YYDEBUG(743, *YYCURSOR);",
          "6854: #line 1242 \"Zend/zend_language_scanner.l\"",
          "6858: #line 6859 \"Zend/zend_language_scanner.c\"",
          "6859: yy744:",
          "6860:   YYDEBUG(744, *YYCURSOR);",
          "6865:   case 'd': goto yy745;",
          "6867:   case 'f': goto yy746;",
          "6869:   case 'i': goto yy747;",
          "6871:   case 's': goto yy748;",
          "6873:   case 'w': goto yy749;",
          "6876: yy745:",
          "6877:   YYDEBUG(745, *YYCURSOR);",
          "6878:   yych = *++YYCURSOR;",
          "6879:   if (yych == 'E') goto yy771;",
          "6880:   if (yych == 'e') goto yy771;",
          "6881:   goto yy186;",
          "6882: yy746:",
          "6883:   YYDEBUG(746, *YYCURSOR);",
          "6884:   yych = *++YYCURSOR;",
          "6885:   if (yych == 'O') goto yy763;",
          "6886:   if (yych == 'o') goto yy763;",
          "6887:   goto yy186;",
          "6888: yy747:",
          "6889:   YYDEBUG(747, *YYCURSOR);",
          "6890:   yych = *++YYCURSOR;",
          "6891:   if (yych == 'F') goto yy761;",
          "6892:   if (yych == 'f') goto yy761;",
          "6893:   goto yy186;",
          "6897:   if (yych == 'W') goto yy755;",
          "6898:   if (yych == 'w') goto yy755;",
          "6903:   if (yych == 'H') goto yy750;",
          "6904:   if (yych != 'h') goto yy186;",
          "6908:   if (yych == 'I') goto yy751;",
          "6909:   if (yych != 'i') goto yy186;",
          "6913:   if (yych == 'L') goto yy752;",
          "6914:   if (yych != 'l') goto yy186;",
          "6918:   if (yych == 'E') goto yy753;",
          "6919:   if (yych != 'e') goto yy186;",
          "6926:   YYDEBUG(754, *YYCURSOR);",
          "6928: #line 1068 \"Zend/zend_language_scanner.l\"",
          "6932: #line 6933 \"Zend/zend_language_scanner.c\"",
          "6933: yy755:",
          "6934:   YYDEBUG(755, *YYCURSOR);",
          "6936:   if (yych == 'I') goto yy756;",
          "6938: yy756:",
          "6939:   YYDEBUG(756, *YYCURSOR);",
          "6941:   if (yych == 'T') goto yy757;",
          "6943: yy757:",
          "6944:   YYDEBUG(757, *YYCURSOR);",
          "6946:   if (yych == 'C') goto yy758;",
          "6948: yy758:",
          "6949:   YYDEBUG(758, *YYCURSOR);",
          "6951:   if (yych == 'H') goto yy759;",
          "6953: yy759:",
          "6954:   YYDEBUG(759, *YYCURSOR);",
          "6959:   YYDEBUG(760, *YYCURSOR);",
          "6961: #line 1112 \"Zend/zend_language_scanner.l\"",
          "6965: #line 6966 \"Zend/zend_language_scanner.c\"",
          "6966: yy761:",
          "6967:   YYDEBUG(761, *YYCURSOR);",
          "6972:   YYDEBUG(762, *YYCURSOR);",
          "6974: #line 1056 \"Zend/zend_language_scanner.l\"",
          "6978: #line 6979 \"Zend/zend_language_scanner.c\"",
          "6979: yy763:",
          "6980:   YYDEBUG(763, *YYCURSOR);",
          "6982:   if (yych == 'R') goto yy764;",
          "6984: yy764:",
          "6985:   YYDEBUG(764, *YYCURSOR);",
          "6989:     if (yych <= '/') goto yy765;",
          "6992:     if (yych == 'E') goto yy766;",
          "6999:     if (yych <= 'e') goto yy766;",
          "7004: yy765:",
          "7005:   YYDEBUG(765, *YYCURSOR);",
          "7007: #line 1080 \"Zend/zend_language_scanner.l\"",
          "7011: #line 7012 \"Zend/zend_language_scanner.c\"",
          "7012: yy766:",
          "7013:   YYDEBUG(766, *YYCURSOR);",
          "7015:   if (yych == 'A') goto yy767;",
          "7017: yy767:",
          "7018:   YYDEBUG(767, *YYCURSOR);",
          "7020:   if (yych == 'C') goto yy768;",
          "7022: yy768:",
          "7023:   YYDEBUG(768, *YYCURSOR);",
          "7025:   if (yych == 'H') goto yy769;",
          "7027: yy769:",
          "7028:   YYDEBUG(769, *YYCURSOR);",
          "7033:   YYDEBUG(770, *YYCURSOR);",
          "7035: #line 1088 \"Zend/zend_language_scanner.l\"",
          "7039: #line 7040 \"Zend/zend_language_scanner.c\"",
          "7040: yy771:",
          "7041:   YYDEBUG(771, *YYCURSOR);",
          "7043:   if (yych == 'C') goto yy772;",
          "7045: yy772:",
          "7046:   YYDEBUG(772, *YYCURSOR);",
          "7048:   if (yych == 'L') goto yy773;",
          "7050: yy773:",
          "7051:   YYDEBUG(773, *YYCURSOR);",
          "7053:   if (yych == 'A') goto yy774;",
          "7055: yy774:",
          "7056:   YYDEBUG(774, *YYCURSOR);",
          "7058:   if (yych == 'R') goto yy775;",
          "7060: yy775:",
          "7061:   YYDEBUG(775, *YYCURSOR);",
          "7063:   if (yych == 'E') goto yy776;",
          "7065: yy776:",
          "7066:   YYDEBUG(776, *YYCURSOR);",
          "7071:   YYDEBUG(777, *YYCURSOR);",
          "7073: #line 1096 \"Zend/zend_language_scanner.l\"",
          "7077: #line 7078 \"Zend/zend_language_scanner.c\"",
          "7078: yy778:",
          "7079:   YYDEBUG(778, *YYCURSOR);",
          "7081:   if (yych == 'T') goto yy779;",
          "7083: yy779:",
          "7084:   YYDEBUG(779, *YYCURSOR);",
          "7086:   if (yych == 'Y') goto yy780;",
          "7088: yy780:",
          "7089:   YYDEBUG(780, *YYCURSOR);",
          "7094:   YYDEBUG(781, *YYCURSOR);",
          "7096: #line 1282 \"Zend/zend_language_scanner.l\"",
          "7100: #line 7101 \"Zend/zend_language_scanner.c\"",
          "7101: yy782:",
          "7102:   YYDEBUG(782, *YYCURSOR);",
          "7104:   if (yych == 'E') goto yy783;",
          "7106: yy783:",
          "7107:   YYDEBUG(783, *YYCURSOR);",
          "7111:     if (yych <= '/') goto yy784;",
          "7114:     if (yych == 'I') goto yy785;",
          "7121:     if (yych <= 'i') goto yy785;",
          "7126: yy784:",
          "7127:   YYDEBUG(784, *YYCURSOR);",
          "7129: #line 1060 \"Zend/zend_language_scanner.l\"",
          "7133: #line 7134 \"Zend/zend_language_scanner.c\"",
          "7134: yy785:",
          "7135:   YYDEBUG(785, *YYCURSOR);",
          "7137:   if (yych == 'F') goto yy786;",
          "7139: yy786:",
          "7140:   YYDEBUG(786, *YYCURSOR);",
          "7145:   YYDEBUG(787, *YYCURSOR);",
          "7147: #line 1052 \"Zend/zend_language_scanner.l\"",
          "7151: #line 7152 \"Zend/zend_language_scanner.c\"",
          "7152: yy788:",
          "7153:   YYDEBUG(788, *YYCURSOR);",
          "7155:   if (yych == 'O') goto yy789;",
          "7157: yy789:",
          "7158:   YYDEBUG(789, *YYCURSOR);",
          "7163:   YYDEBUG(790, *YYCURSOR);",
          "7165: #line 1136 \"Zend/zend_language_scanner.l\"",
          "7169: #line 7170 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6619:   if ((yych = *YYCURSOR) <= '^') {",
          "6620:    if (yych <= '@') {",
          "6621:     if (yych <= '/') goto yy707;",
          "6622:     if (yych <= '9') goto yy185;",
          "6623:    } else {",
          "6624:     if (yych == 'L') goto yy708;",
          "6625:     if (yych <= 'Z') goto yy185;",
          "6626:    }",
          "6627:   } else {",
          "6628:    if (yych <= 'k') {",
          "6629:     if (yych != '`') goto yy185;",
          "6630:    } else {",
          "6631:     if (yych <= 'l') goto yy708;",
          "6632:     if (yych <= 'z') goto yy185;",
          "6633:     if (yych >= 0x7F) goto yy185;",
          "6634:    }",
          "6636: yy707:",
          "6639: #line 1302 \"Zend/zend_language_scanner.l\"",
          "6643: #line 6644 \"Zend/zend_language_scanner.c\"",
          "6647:   if (yych == 'Y') goto yy709;",
          "6648:   if (yych != 'y') goto yy186;",
          "6649: yy709:",
          "6650:   YYDEBUG(709, *YYCURSOR);",
          "6651:   ++YYCURSOR;",
          "6652:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6653:    goto yy185;",
          "6654:   }",
          "6655:   YYDEBUG(710, *YYCURSOR);",
          "6656:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6657: #line 1044 \"Zend/zend_language_scanner.l\"",
          "6658:   {",
          "6659:  return T_FINALLY;",
          "6660: }",
          "6661: #line 6662 \"Zend/zend_language_scanner.c\"",
          "6662: yy711:",
          "6663:   YYDEBUG(711, *YYCURSOR);",
          "6664:   yych = *++YYCURSOR;",
          "6666:    if (yych == 'C') goto yy717;",
          "6668:    goto yy718;",
          "6672:     goto yy717;",
          "6674:     if (yych == 'f') goto yy718;",
          "6678: yy712:",
          "6679:   YYDEBUG(712, *YYCURSOR);",
          "6681:   if (yych == 'E') goto yy715;",
          "6682:   if (yych == 'e') goto yy715;",
          "6684: yy713:",
          "6685:   YYDEBUG(713, *YYCURSOR);",
          "6690:   YYDEBUG(714, *YYCURSOR);",
          "6692: #line 1076 \"Zend/zend_language_scanner.l\"",
          "6696: #line 6697 \"Zend/zend_language_scanner.c\"",
          "6697: yy715:",
          "6698:   YYDEBUG(715, *YYCURSOR);",
          "6703:   YYDEBUG(716, *YYCURSOR);",
          "6709: #line 6710 \"Zend/zend_language_scanner.c\"",
          "6710: yy717:",
          "6711:   YYDEBUG(717, *YYCURSOR);",
          "6713:   if (yych == 'L') goto yy724;",
          "6714:   if (yych == 'l') goto yy724;",
          "6716: yy718:",
          "6717:   YYDEBUG(718, *YYCURSOR);",
          "6719:   if (yych == 'A') goto yy719;",
          "6721: yy719:",
          "6722:   YYDEBUG(719, *YYCURSOR);",
          "6724:   if (yych == 'U') goto yy720;",
          "6726: yy720:",
          "6727:   YYDEBUG(720, *YYCURSOR);",
          "6729:   if (yych == 'L') goto yy721;",
          "6731: yy721:",
          "6732:   YYDEBUG(721, *YYCURSOR);",
          "6734:   if (yych == 'T') goto yy722;",
          "6736: yy722:",
          "6737:   YYDEBUG(722, *YYCURSOR);",
          "6742:   YYDEBUG(723, *YYCURSOR);",
          "6744: #line 1124 \"Zend/zend_language_scanner.l\"",
          "6748: #line 6749 \"Zend/zend_language_scanner.c\"",
          "6749: yy724:",
          "6750:   YYDEBUG(724, *YYCURSOR);",
          "6752:   if (yych == 'A') goto yy725;",
          "6754: yy725:",
          "6755:   YYDEBUG(725, *YYCURSOR);",
          "6757:   if (yych == 'R') goto yy726;",
          "6759: yy726:",
          "6760:   YYDEBUG(726, *YYCURSOR);",
          "6762:   if (yych == 'E') goto yy727;",
          "6764: yy727:",
          "6765:   YYDEBUG(727, *YYCURSOR);",
          "6770:   YYDEBUG(728, *YYCURSOR);",
          "6772: #line 1096 \"Zend/zend_language_scanner.l\"",
          "6776: #line 6777 \"Zend/zend_language_scanner.c\"",
          "6780:   if (yych == 'H') goto yy791;",
          "6781:   if (yych == 'h') goto yy791;",
          "6786:   if (yych == 'S') goto yy785;",
          "6787:   if (yych == 's') goto yy785;",
          "6792:   if (yych == 'P') goto yy781;",
          "6793:   if (yych == 'p') goto yy781;",
          "6794:   goto yy186;",
          "6798:   if (yych == 'D') goto yy747;",
          "6799:   if (yych == 'd') goto yy747;",
          "6804:   if (yych == 'A') goto yy744;",
          "6805:   if (yych == 'a') goto yy744;",
          "6806:   goto yy186;",
          "6810:   if (yych <= 'T') {",
          "6811:    if (yych == 'I') goto yy735;",
          "6812:    if (yych <= 'S') goto yy186;",
          "6813:    goto yy736;",
          "6814:   } else {",
          "6815:    if (yych <= 'i') {",
          "6816:     if (yych <= 'h') goto yy186;",
          "6817:    } else {",
          "6818:     if (yych == 't') goto yy736;",
          "6819:     goto yy186;",
          "6820:    }",
          "6821:   }",
          "6825:   if (yych == 'T') goto yy742;",
          "6826:   if (yych == 't') goto yy742;",
          "6827:   goto yy186;",
          "6831:   if (yych == 'E') goto yy737;",
          "6832:   if (yych != 'e') goto yy186;",
          "6835:   yych = *++YYCURSOR;",
          "6836:   if (yych == 'N') goto yy738;",
          "6837:   if (yych != 'n') goto yy186;",
          "6838: yy738:",
          "6839:   YYDEBUG(738, *YYCURSOR);",
          "6840:   yych = *++YYCURSOR;",
          "6841:   if (yych == 'D') goto yy739;",
          "6842:   if (yych != 'd') goto yy186;",
          "6843: yy739:",
          "6844:   YYDEBUG(739, *YYCURSOR);",
          "6845:   yych = *++YYCURSOR;",
          "6846:   if (yych == 'S') goto yy740;",
          "6847:   if (yych != 's') goto yy186;",
          "6848: yy740:",
          "6849:   YYDEBUG(740, *YYCURSOR);",
          "6854:   YYDEBUG(741, *YYCURSOR);",
          "6856: #line 1160 \"Zend/zend_language_scanner.l\"",
          "6860: #line 6861 \"Zend/zend_language_scanner.c\"",
          "6861: yy742:",
          "6862:   YYDEBUG(742, *YYCURSOR);",
          "6867:   YYDEBUG(743, *YYCURSOR);",
          "6873: #line 6874 \"Zend/zend_language_scanner.c\"",
          "6874: yy744:",
          "6875:   YYDEBUG(744, *YYCURSOR);",
          "6877:   if (yych == 'L') goto yy745;",
          "6879: yy745:",
          "6880:   YYDEBUG(745, *YYCURSOR);",
          "6885:   YYDEBUG(746, *YYCURSOR);",
          "6887: #line 1246 \"Zend/zend_language_scanner.l\"",
          "6891: #line 6892 \"Zend/zend_language_scanner.c\"",
          "6892: yy747:",
          "6893:   YYDEBUG(747, *YYCURSOR);",
          "6898:   case 'd': goto yy748;",
          "6900:   case 'f': goto yy749;",
          "6902:   case 'i': goto yy750;",
          "6904:   case 's': goto yy751;",
          "6906:   case 'w': goto yy752;",
          "6912:   if (yych == 'E') goto yy774;",
          "6913:   if (yych == 'e') goto yy774;",
          "6918:   if (yych == 'O') goto yy766;",
          "6919:   if (yych == 'o') goto yy766;",
          "6920:   goto yy186;",
          "6924:   if (yych == 'F') goto yy764;",
          "6925:   if (yych == 'f') goto yy764;",
          "6926:   goto yy186;",
          "6930:   if (yych == 'W') goto yy758;",
          "6931:   if (yych == 'w') goto yy758;",
          "6932:   goto yy186;",
          "6936:   if (yych == 'H') goto yy753;",
          "6937:   if (yych != 'h') goto yy186;",
          "6940:   yych = *++YYCURSOR;",
          "6941:   if (yych == 'I') goto yy754;",
          "6942:   if (yych != 'i') goto yy186;",
          "6943: yy754:",
          "6944:   YYDEBUG(754, *YYCURSOR);",
          "6945:   yych = *++YYCURSOR;",
          "6946:   if (yych == 'L') goto yy755;",
          "6947:   if (yych != 'l') goto yy186;",
          "6948: yy755:",
          "6949:   YYDEBUG(755, *YYCURSOR);",
          "6950:   yych = *++YYCURSOR;",
          "6951:   if (yych == 'E') goto yy756;",
          "6952:   if (yych != 'e') goto yy186;",
          "6953: yy756:",
          "6954:   YYDEBUG(756, *YYCURSOR);",
          "6959:   YYDEBUG(757, *YYCURSOR);",
          "6961: #line 1072 \"Zend/zend_language_scanner.l\"",
          "6965: #line 6966 \"Zend/zend_language_scanner.c\"",
          "6966: yy758:",
          "6967:   YYDEBUG(758, *YYCURSOR);",
          "6969:   if (yych == 'I') goto yy759;",
          "6971: yy759:",
          "6972:   YYDEBUG(759, *YYCURSOR);",
          "6974:   if (yych == 'T') goto yy760;",
          "6976: yy760:",
          "6977:   YYDEBUG(760, *YYCURSOR);",
          "6979:   if (yych == 'C') goto yy761;",
          "6981: yy761:",
          "6982:   YYDEBUG(761, *YYCURSOR);",
          "6984:   if (yych == 'H') goto yy762;",
          "6986: yy762:",
          "6987:   YYDEBUG(762, *YYCURSOR);",
          "6992:   YYDEBUG(763, *YYCURSOR);",
          "6994: #line 1116 \"Zend/zend_language_scanner.l\"",
          "6998: #line 6999 \"Zend/zend_language_scanner.c\"",
          "6999: yy764:",
          "7000:   YYDEBUG(764, *YYCURSOR);",
          "7005:   YYDEBUG(765, *YYCURSOR);",
          "7007: #line 1060 \"Zend/zend_language_scanner.l\"",
          "7011: #line 7012 \"Zend/zend_language_scanner.c\"",
          "7012: yy766:",
          "7013:   YYDEBUG(766, *YYCURSOR);",
          "7015:   if (yych == 'R') goto yy767;",
          "7017: yy767:",
          "7018:   YYDEBUG(767, *YYCURSOR);",
          "7022:     if (yych <= '/') goto yy768;",
          "7025:     if (yych == 'E') goto yy769;",
          "7032:     if (yych <= 'e') goto yy769;",
          "7037: yy768:",
          "7038:   YYDEBUG(768, *YYCURSOR);",
          "7040: #line 1084 \"Zend/zend_language_scanner.l\"",
          "7044: #line 7045 \"Zend/zend_language_scanner.c\"",
          "7045: yy769:",
          "7046:   YYDEBUG(769, *YYCURSOR);",
          "7048:   if (yych == 'A') goto yy770;",
          "7050: yy770:",
          "7051:   YYDEBUG(770, *YYCURSOR);",
          "7053:   if (yych == 'C') goto yy771;",
          "7055: yy771:",
          "7056:   YYDEBUG(771, *YYCURSOR);",
          "7058:   if (yych == 'H') goto yy772;",
          "7060: yy772:",
          "7061:   YYDEBUG(772, *YYCURSOR);",
          "7066:   YYDEBUG(773, *YYCURSOR);",
          "7068: #line 1092 \"Zend/zend_language_scanner.l\"",
          "7072: #line 7073 \"Zend/zend_language_scanner.c\"",
          "7073: yy774:",
          "7074:   YYDEBUG(774, *YYCURSOR);",
          "7076:   if (yych == 'C') goto yy775;",
          "7078: yy775:",
          "7079:   YYDEBUG(775, *YYCURSOR);",
          "7081:   if (yych == 'L') goto yy776;",
          "7083: yy776:",
          "7084:   YYDEBUG(776, *YYCURSOR);",
          "7086:   if (yych == 'A') goto yy777;",
          "7088: yy777:",
          "7089:   YYDEBUG(777, *YYCURSOR);",
          "7091:   if (yych == 'R') goto yy778;",
          "7093: yy778:",
          "7094:   YYDEBUG(778, *YYCURSOR);",
          "7096:   if (yych == 'E') goto yy779;",
          "7098: yy779:",
          "7099:   YYDEBUG(779, *YYCURSOR);",
          "7104:   YYDEBUG(780, *YYCURSOR);",
          "7106: #line 1100 \"Zend/zend_language_scanner.l\"",
          "7110: #line 7111 \"Zend/zend_language_scanner.c\"",
          "7111: yy781:",
          "7112:   YYDEBUG(781, *YYCURSOR);",
          "7114:   if (yych == 'T') goto yy782;",
          "7116: yy782:",
          "7117:   YYDEBUG(782, *YYCURSOR);",
          "7119:   if (yych == 'Y') goto yy783;",
          "7121: yy783:",
          "7122:   YYDEBUG(783, *YYCURSOR);",
          "7127:   YYDEBUG(784, *YYCURSOR);",
          "7129: #line 1286 \"Zend/zend_language_scanner.l\"",
          "7133: #line 7134 \"Zend/zend_language_scanner.c\"",
          "7134: yy785:",
          "7135:   YYDEBUG(785, *YYCURSOR);",
          "7137:   if (yych == 'E') goto yy786;",
          "7139: yy786:",
          "7140:   YYDEBUG(786, *YYCURSOR);",
          "7144:     if (yych <= '/') goto yy787;",
          "7147:     if (yych == 'I') goto yy788;",
          "7154:     if (yych <= 'i') goto yy788;",
          "7159: yy787:",
          "7160:   YYDEBUG(787, *YYCURSOR);",
          "7162: #line 1064 \"Zend/zend_language_scanner.l\"",
          "7166: #line 7167 \"Zend/zend_language_scanner.c\"",
          "7167: yy788:",
          "7168:   YYDEBUG(788, *YYCURSOR);",
          "7170:   if (yych == 'F') goto yy789;",
          "7172: yy789:",
          "7173:   YYDEBUG(789, *YYCURSOR);",
          "7178:   YYDEBUG(790, *YYCURSOR);",
          "7180: #line 1056 \"Zend/zend_language_scanner.l\"",
          "7184: #line 7185 \"Zend/zend_language_scanner.c\"",
          "7185: yy791:",
          "7186:   YYDEBUG(791, *YYCURSOR);",
          "7188:   if (yych == 'O') goto yy792;",
          "7190: yy792:",
          "7191:   YYDEBUG(792, *YYCURSOR);",
          "7196:   YYDEBUG(793, *YYCURSOR);",
          "7198: #line 1140 \"Zend/zend_language_scanner.l\"",
          "7202: #line 7203 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 134 ---",
          "[Context before]",
          "7205:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7206:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7207:   };",
          "7209:   YYFILL(2);",
          "7210:   yych = *YYCURSOR;",
          "7211:   if (yych <= '-') {",
          "7212:    if (yych <= '\\r') {",
          "7216:    } else {",
          "7220:    }",
          "7221:   } else {",
          "7222:    if (yych <= '_') {",
          "7227:    } else {",
          "7232:    }",
          "7233:   }",
          "7236:   ++YYCURSOR;",
          "7237:   yych = *YYCURSOR;",
          "7241:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7243:   {",
          "7245:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "7208:   YYDEBUG(791, *YYCURSOR);",
          "7213:     if (yych <= 0x08) goto yy799;",
          "7214:     if (yych <= '\\n') goto yy793;",
          "7215:     if (yych <= '\\f') goto yy799;",
          "7217:     if (yych == ' ') goto yy793;",
          "7218:     if (yych <= ',') goto yy799;",
          "7219:     goto yy795;",
          "7223:     if (yych <= '@') goto yy799;",
          "7224:     if (yych <= 'Z') goto yy797;",
          "7225:     if (yych <= '^') goto yy799;",
          "7226:     goto yy797;",
          "7228:     if (yych <= '`') goto yy799;",
          "7229:     if (yych <= 'z') goto yy797;",
          "7230:     if (yych <= '~') goto yy799;",
          "7231:     goto yy797;",
          "7234: yy793:",
          "7235:   YYDEBUG(793, *YYCURSOR);",
          "7238:   goto yy805;",
          "7239: yy794:",
          "7240:   YYDEBUG(794, *YYCURSOR);",
          "7242: #line 1169 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7241:   YYDEBUG(794, *YYCURSOR);",
          "7246:     if (yych <= 0x08) goto yy802;",
          "7247:     if (yych <= '\\n') goto yy796;",
          "7248:     if (yych <= '\\f') goto yy802;",
          "7250:     if (yych == ' ') goto yy796;",
          "7251:     if (yych <= ',') goto yy802;",
          "7252:     goto yy798;",
          "7256:     if (yych <= '@') goto yy802;",
          "7257:     if (yych <= 'Z') goto yy800;",
          "7258:     if (yych <= '^') goto yy802;",
          "7259:     goto yy800;",
          "7261:     if (yych <= '`') goto yy802;",
          "7262:     if (yych <= 'z') goto yy800;",
          "7263:     if (yych <= '~') goto yy802;",
          "7264:     goto yy800;",
          "7267: yy796:",
          "7268:   YYDEBUG(796, *YYCURSOR);",
          "7271:   goto yy808;",
          "7272: yy797:",
          "7273:   YYDEBUG(797, *YYCURSOR);",
          "7275: #line 1173 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 135 ---",
          "[Context before]",
          "7247:  HANDLE_NEWLINES(yytext, yyleng);",
          "7248:  return T_WHITESPACE;",
          "7249: }",
          "7253:   ++YYCURSOR;",
          "7257:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7259:   {",
          "7260:  yyless(0);",
          "7261:  yy_pop_state(TSRMLS_C);",
          "7262:  goto restart;",
          "7263: }",
          "7267:   ++YYCURSOR;",
          "7268:   yych = *YYCURSOR;",
          "7272:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7274:   {",
          "7275:  yy_pop_state(TSRMLS_C);",
          "7276:  zend_copy_value(zendlval, yytext, yyleng);",
          "7277:  zendlval->type = IS_STRING;",
          "7278:  return T_STRING;",
          "7279: }",
          "7283:   yych = *++YYCURSOR;",
          "7287:   ++YYCURSOR;",
          "7288:   YYFILL(1);",
          "7289:   yych = *YYCURSOR;",
          "7292:   if (yybm[0+yych] & 64) {",
          "7294:   }",
          "7298:   ++YYCURSOR;",
          "7300:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7302:   {",
          "7303:  return T_OBJECT_OPERATOR;",
          "7304: }",
          "7308:   ++YYCURSOR;",
          "7309:   YYFILL(1);",
          "7310:   yych = *YYCURSOR;",
          "7313:   if (yybm[0+yych] & 128) {",
          "7315:   }",
          "7317:  }",
          "7319: yyc_ST_LOOKING_FOR_VARNAME:",
          "",
          "[Removed Lines]",
          "7250: #line 7251 \"Zend/zend_language_scanner.c\"",
          "7251: yy795:",
          "7252:   YYDEBUG(795, *YYCURSOR);",
          "7254:   if ((yych = *YYCURSOR) == '>') goto yy802;",
          "7255: yy796:",
          "7256:   YYDEBUG(796, *YYCURSOR);",
          "7258: #line 1188 \"Zend/zend_language_scanner.l\"",
          "7264: #line 7265 \"Zend/zend_language_scanner.c\"",
          "7265: yy797:",
          "7266:   YYDEBUG(797, *YYCURSOR);",
          "7269:   goto yy801;",
          "7270: yy798:",
          "7271:   YYDEBUG(798, *YYCURSOR);",
          "7273: #line 1181 \"Zend/zend_language_scanner.l\"",
          "7280: #line 7281 \"Zend/zend_language_scanner.c\"",
          "7281: yy799:",
          "7282:   YYDEBUG(799, *YYCURSOR);",
          "7284:   goto yy796;",
          "7285: yy800:",
          "7286:   YYDEBUG(800, *YYCURSOR);",
          "7290: yy801:",
          "7291:   YYDEBUG(801, *YYCURSOR);",
          "7293:    goto yy800;",
          "7295:   goto yy798;",
          "7296: yy802:",
          "7297:   YYDEBUG(802, *YYCURSOR);",
          "7299:   YYDEBUG(803, *YYCURSOR);",
          "7301: #line 1177 \"Zend/zend_language_scanner.l\"",
          "7305: #line 7306 \"Zend/zend_language_scanner.c\"",
          "7306: yy804:",
          "7307:   YYDEBUG(804, *YYCURSOR);",
          "7311: yy805:",
          "7312:   YYDEBUG(805, *YYCURSOR);",
          "7314:    goto yy804;",
          "7316:   goto yy794;",
          "",
          "[Added Lines]",
          "7283: #line 7284 \"Zend/zend_language_scanner.c\"",
          "7284: yy798:",
          "7285:   YYDEBUG(798, *YYCURSOR);",
          "7287:   if ((yych = *YYCURSOR) == '>') goto yy805;",
          "7288: yy799:",
          "7289:   YYDEBUG(799, *YYCURSOR);",
          "7291: #line 1192 \"Zend/zend_language_scanner.l\"",
          "7297: #line 7298 \"Zend/zend_language_scanner.c\"",
          "7298: yy800:",
          "7299:   YYDEBUG(800, *YYCURSOR);",
          "7302:   goto yy804;",
          "7303: yy801:",
          "7304:   YYDEBUG(801, *YYCURSOR);",
          "7306: #line 1185 \"Zend/zend_language_scanner.l\"",
          "7313: #line 7314 \"Zend/zend_language_scanner.c\"",
          "7314: yy802:",
          "7315:   YYDEBUG(802, *YYCURSOR);",
          "7317:   goto yy799;",
          "7318: yy803:",
          "7319:   YYDEBUG(803, *YYCURSOR);",
          "7323: yy804:",
          "7324:   YYDEBUG(804, *YYCURSOR);",
          "7326:    goto yy803;",
          "7328:   goto yy801;",
          "7329: yy805:",
          "7330:   YYDEBUG(805, *YYCURSOR);",
          "7332:   YYDEBUG(806, *YYCURSOR);",
          "7334: #line 1181 \"Zend/zend_language_scanner.l\"",
          "7338: #line 7339 \"Zend/zend_language_scanner.c\"",
          "7339: yy807:",
          "7340:   YYDEBUG(807, *YYCURSOR);",
          "7344: yy808:",
          "7345:   YYDEBUG(808, *YYCURSOR);",
          "7347:    goto yy807;",
          "7349:   goto yy797;",
          "",
          "---------------",
          "--- Hunk 136 ---",
          "[Context before]",
          "7352:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7353:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7354:   };",
          "7356:   YYFILL(2);",
          "7357:   yych = *YYCURSOR;",
          "7358:   if (yych <= '_') {",
          "7362:   } else {",
          "7366:   }",
          "7369:   yyaccept = 0;",
          "7370:   yych = *(YYMARKER = ++YYCURSOR);",
          "7371:   if (yych <= '_') {",
          "7372:    if (yych <= '@') {",
          "7375:    } else {",
          "7378:    }",
          "7379:   } else {",
          "7380:    if (yych <= '|') {",
          "7383:    } else {",
          "7385:    }",
          "7386:   }",
          "7389:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7391:   {",
          "7392:  yyless(0);",
          "7393:  yy_pop_state(TSRMLS_C);",
          "7394:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7395:  goto restart;",
          "7396: }",
          "7400:   yych = *++YYCURSOR;",
          "7404:   ++YYCURSOR;",
          "7405:   YYFILL(1);",
          "7406:   yych = *YYCURSOR;",
          "7409:   if (yybm[0+yych] & 128) {",
          "7411:   }",
          "7415:   YYCURSOR = YYMARKER;",
          "7419:   ++YYCURSOR;",
          "7421:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7423:   {",
          "7424:  yyless(yyleng - 1);",
          "7425:  zend_copy_value(zendlval, yytext, yyleng);",
          "",
          "[Removed Lines]",
          "7355:   YYDEBUG(806, *YYCURSOR);",
          "7359:    if (yych <= '@') goto yy810;",
          "7360:    if (yych <= 'Z') goto yy808;",
          "7361:    if (yych <= '^') goto yy810;",
          "7363:    if (yych <= '`') goto yy810;",
          "7364:    if (yych <= 'z') goto yy808;",
          "7365:    if (yych <= '~') goto yy810;",
          "7367: yy808:",
          "7368:   YYDEBUG(808, *YYCURSOR);",
          "7373:     if (yych <= '/') goto yy809;",
          "7374:     if (yych <= '9') goto yy812;",
          "7376:     if (yych <= '[') goto yy812;",
          "7377:     if (yych >= '_') goto yy812;",
          "7381:     if (yych <= '`') goto yy809;",
          "7382:     if (yych <= 'z') goto yy812;",
          "7384:     if (yych != '~') goto yy812;",
          "7387: yy809:",
          "7388:   YYDEBUG(809, *YYCURSOR);",
          "7390: #line 1474 \"Zend/zend_language_scanner.l\"",
          "7397: #line 7398 \"Zend/zend_language_scanner.c\"",
          "7398: yy810:",
          "7399:   YYDEBUG(810, *YYCURSOR);",
          "7401:   goto yy809;",
          "7402: yy811:",
          "7403:   YYDEBUG(811, *YYCURSOR);",
          "7407: yy812:",
          "7408:   YYDEBUG(812, *YYCURSOR);",
          "7410:    goto yy811;",
          "7412:   if (yych == '[') goto yy814;",
          "7413:   if (yych == '}') goto yy814;",
          "7414:   YYDEBUG(813, *YYCURSOR);",
          "7416:   goto yy809;",
          "7417: yy814:",
          "7418:   YYDEBUG(814, *YYCURSOR);",
          "7420:   YYDEBUG(815, *YYCURSOR);",
          "7422: #line 1464 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7388:   YYDEBUG(809, *YYCURSOR);",
          "7392:    if (yych <= '@') goto yy813;",
          "7393:    if (yych <= 'Z') goto yy811;",
          "7394:    if (yych <= '^') goto yy813;",
          "7396:    if (yych <= '`') goto yy813;",
          "7397:    if (yych <= 'z') goto yy811;",
          "7398:    if (yych <= '~') goto yy813;",
          "7400: yy811:",
          "7401:   YYDEBUG(811, *YYCURSOR);",
          "7406:     if (yych <= '/') goto yy812;",
          "7407:     if (yych <= '9') goto yy815;",
          "7409:     if (yych <= '[') goto yy815;",
          "7410:     if (yych >= '_') goto yy815;",
          "7414:     if (yych <= '`') goto yy812;",
          "7415:     if (yych <= 'z') goto yy815;",
          "7417:     if (yych != '~') goto yy815;",
          "7420: yy812:",
          "7421:   YYDEBUG(812, *YYCURSOR);",
          "7423: #line 1478 \"Zend/zend_language_scanner.l\"",
          "7430: #line 7431 \"Zend/zend_language_scanner.c\"",
          "7431: yy813:",
          "7432:   YYDEBUG(813, *YYCURSOR);",
          "7434:   goto yy812;",
          "7435: yy814:",
          "7436:   YYDEBUG(814, *YYCURSOR);",
          "7440: yy815:",
          "7441:   YYDEBUG(815, *YYCURSOR);",
          "7443:    goto yy814;",
          "7445:   if (yych == '[') goto yy817;",
          "7446:   if (yych == '}') goto yy817;",
          "7447:   YYDEBUG(816, *YYCURSOR);",
          "7449:   goto yy812;",
          "7450: yy817:",
          "7451:   YYDEBUG(817, *YYCURSOR);",
          "7453:   YYDEBUG(818, *YYCURSOR);",
          "7455: #line 1468 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 137 ---",
          "[Context before]",
          "7428:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7429:  return T_STRING_VARNAME;",
          "7430: }",
          "7432:  }",
          "7434: yyc_ST_NOWDOC:",
          "7436:  YYFILL(1);",
          "7437:  yych = *YYCURSOR;",
          "7439:  ++YYCURSOR;",
          "7441:  yyleng = YYCURSOR - SCNG(yy_text);",
          "7443:  {",
          "7444:  int newline = 0;",
          "",
          "[Removed Lines]",
          "7431: #line 7432 \"Zend/zend_language_scanner.c\"",
          "7435:  YYDEBUG(816, *YYCURSOR);",
          "7438:  YYDEBUG(818, *YYCURSOR);",
          "7440:  YYDEBUG(819, *YYCURSOR);",
          "7442: #line 2356 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7464: #line 7465 \"Zend/zend_language_scanner.c\"",
          "7468:  YYDEBUG(819, *YYCURSOR);",
          "7471:  YYDEBUG(821, *YYCURSOR);",
          "7473:  YYDEBUG(822, *YYCURSOR);",
          "7475: #line 2360 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 138 ---",
          "[Context before]",
          "7494:  HANDLE_NEWLINES(yytext, yyleng - newline);",
          "7495:  return T_ENCAPSED_AND_WHITESPACE;",
          "7496: }",
          "7499: yyc_ST_VAR_OFFSET:",
          "7500:  {",
          "",
          "[Removed Lines]",
          "7497: #line 7498 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7530: #line 7531 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 139 ---",
          "[Context before]",
          "7532:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7533:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7534:   };",
          "7536:   YYFILL(3);",
          "7537:   yych = *YYCURSOR;",
          "7538:   if (yych <= '/') {",
          "7539:    if (yych <= ' ') {",
          "7540:     if (yych <= '\\f') {",
          "7544:     } else {",
          "7548:     }",
          "7549:    } else {",
          "7550:     if (yych <= '$') {",
          "7554:     } else {",
          "7557:     }",
          "7558:    }",
          "7559:   } else {",
          "7560:    if (yych <= '\\\\') {",
          "7561:     if (yych <= '@') {",
          "7565:     } else {",
          "7569:     }",
          "7570:    } else {",
          "7571:     if (yych <= '_') {",
          "7575:     } else {",
          "7580:     }",
          "7581:    }",
          "7582:   }",
          "7585:   yyaccept = 0;",
          "7586:   yych = *(YYMARKER = ++YYCURSOR);",
          "7587:   if (yych <= 'W') {",
          "7588:    if (yych <= '9') {",
          "7590:    } else {",
          "7592:    }",
          "7593:   } else {",
          "7594:    if (yych <= 'b') {",
          "7597:    } else {",
          "7599:    }",
          "7600:   }",
          "7603:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7606:  if (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {",
          "7607:   zendlval->value.lval = strtol(yytext, NULL, 10);",
          "",
          "[Removed Lines]",
          "7535:   YYDEBUG(820, *YYCURSOR);",
          "7541:      if (yych <= 0x08) goto yy834;",
          "7542:      if (yych <= '\\n') goto yy830;",
          "7543:      goto yy834;",
          "7545:      if (yych <= '\\r') goto yy830;",
          "7546:      if (yych <= 0x1F) goto yy834;",
          "7547:      goto yy830;",
          "7551:      if (yych <= '\"') goto yy829;",
          "7552:      if (yych <= '#') goto yy830;",
          "7553:      goto yy825;",
          "7555:      if (yych == '\\'') goto yy830;",
          "7556:      goto yy829;",
          "7562:      if (yych <= '0') goto yy822;",
          "7563:      if (yych <= '9') goto yy824;",
          "7564:      goto yy829;",
          "7566:      if (yych <= 'Z') goto yy832;",
          "7567:      if (yych <= '[') goto yy829;",
          "7568:      goto yy830;",
          "7572:      if (yych <= ']') goto yy827;",
          "7573:      if (yych <= '^') goto yy829;",
          "7574:      goto yy832;",
          "7576:      if (yych <= '`') goto yy829;",
          "7577:      if (yych <= 'z') goto yy832;",
          "7578:      if (yych <= '~') goto yy829;",
          "7579:      goto yy832;",
          "7583: yy822:",
          "7584:   YYDEBUG(822, *YYCURSOR);",
          "7589:     if (yych >= '0') goto yy846;",
          "7591:     if (yych == 'B') goto yy843;",
          "7595:     if (yych <= 'X') goto yy845;",
          "7596:     if (yych >= 'b') goto yy843;",
          "7598:     if (yych == 'x') goto yy845;",
          "7601: yy823:",
          "7602:   YYDEBUG(823, *YYCURSOR);",
          "7604: #line 1552 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7568:   YYDEBUG(823, *YYCURSOR);",
          "7574:      if (yych <= 0x08) goto yy837;",
          "7575:      if (yych <= '\\n') goto yy833;",
          "7576:      goto yy837;",
          "7578:      if (yych <= '\\r') goto yy833;",
          "7579:      if (yych <= 0x1F) goto yy837;",
          "7580:      goto yy833;",
          "7584:      if (yych <= '\"') goto yy832;",
          "7585:      if (yych <= '#') goto yy833;",
          "7586:      goto yy828;",
          "7588:      if (yych == '\\'') goto yy833;",
          "7589:      goto yy832;",
          "7595:      if (yych <= '0') goto yy825;",
          "7596:      if (yych <= '9') goto yy827;",
          "7597:      goto yy832;",
          "7599:      if (yych <= 'Z') goto yy835;",
          "7600:      if (yych <= '[') goto yy832;",
          "7601:      goto yy833;",
          "7605:      if (yych <= ']') goto yy830;",
          "7606:      if (yych <= '^') goto yy832;",
          "7607:      goto yy835;",
          "7609:      if (yych <= '`') goto yy832;",
          "7610:      if (yych <= 'z') goto yy835;",
          "7611:      if (yych <= '~') goto yy832;",
          "7612:      goto yy835;",
          "7616: yy825:",
          "7617:   YYDEBUG(825, *YYCURSOR);",
          "7622:     if (yych >= '0') goto yy849;",
          "7624:     if (yych == 'B') goto yy846;",
          "7628:     if (yych <= 'X') goto yy848;",
          "7629:     if (yych >= 'b') goto yy846;",
          "7631:     if (yych == 'x') goto yy848;",
          "7634: yy826:",
          "7635:   YYDEBUG(826, *YYCURSOR);",
          "7637: #line 1556 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 140 ---",
          "[Context before]",
          "7613:  }",
          "7614:  return T_NUM_STRING;",
          "7615: }",
          "7619:   yych = *++YYCURSOR;",
          "7623:   ++YYCURSOR;",
          "7624:   if ((yych = *YYCURSOR) <= '_') {",
          "7628:   } else {",
          "7632:   }",
          "7635:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7637:   {",
          "7639:  return yytext[0];",
          "7640: }",
          "7644:   ++YYCURSOR;",
          "7646:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7648:   {",
          "7649:  yy_pop_state(TSRMLS_C);",
          "7650:  return ']';",
          "7651: }",
          "7655:   yych = *++YYCURSOR;",
          "7659:   ++YYCURSOR;",
          "7661:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7663:   {",
          "7665:  yyless(0);",
          "7666:  yy_pop_state(TSRMLS_C);",
          "7667:  return T_ENCAPSED_AND_WHITESPACE;",
          "7668: }",
          "7672:   ++YYCURSOR;",
          "7673:   yych = *YYCURSOR;",
          "7677:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7679:   {",
          "7680:  zend_copy_value(zendlval, yytext, yyleng);",
          "7681:  zendlval->type = IS_STRING;",
          "7682:  return T_STRING;",
          "7683: }",
          "7687:   ++YYCURSOR;",
          "7689:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7691:   {",
          "7692:  if (YYCURSOR > YYLIMIT) {",
          "7693:   return 0;",
          "",
          "[Removed Lines]",
          "7616: #line 7617 \"Zend/zend_language_scanner.c\"",
          "7617: yy824:",
          "7618:   YYDEBUG(824, *YYCURSOR);",
          "7620:   goto yy842;",
          "7621: yy825:",
          "7622:   YYDEBUG(825, *YYCURSOR);",
          "7625:    if (yych <= '@') goto yy826;",
          "7626:    if (yych <= 'Z') goto yy838;",
          "7627:    if (yych >= '_') goto yy838;",
          "7629:    if (yych <= '`') goto yy826;",
          "7630:    if (yych <= 'z') goto yy838;",
          "7631:    if (yych >= 0x7F) goto yy838;",
          "7633: yy826:",
          "7634:   YYDEBUG(826, *YYCURSOR);",
          "7636: #line 1884 \"Zend/zend_language_scanner.l\"",
          "7641: #line 7642 \"Zend/zend_language_scanner.c\"",
          "7642: yy827:",
          "7643:   YYDEBUG(827, *YYCURSOR);",
          "7645:   YYDEBUG(828, *YYCURSOR);",
          "7647: #line 1879 \"Zend/zend_language_scanner.l\"",
          "7652: #line 7653 \"Zend/zend_language_scanner.c\"",
          "7653: yy829:",
          "7654:   YYDEBUG(829, *YYCURSOR);",
          "7656:   goto yy826;",
          "7657: yy830:",
          "7658:   YYDEBUG(830, *YYCURSOR);",
          "7660:   YYDEBUG(831, *YYCURSOR);",
          "7662: #line 1889 \"Zend/zend_language_scanner.l\"",
          "7669: #line 7670 \"Zend/zend_language_scanner.c\"",
          "7670: yy832:",
          "7671:   YYDEBUG(832, *YYCURSOR);",
          "7674:   goto yy837;",
          "7675: yy833:",
          "7676:   YYDEBUG(833, *YYCURSOR);",
          "7678: #line 1896 \"Zend/zend_language_scanner.l\"",
          "7684: #line 7685 \"Zend/zend_language_scanner.c\"",
          "7685: yy834:",
          "7686:   YYDEBUG(834, *YYCURSOR);",
          "7688:   YYDEBUG(835, *YYCURSOR);",
          "7690: #line 2412 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7649: #line 7650 \"Zend/zend_language_scanner.c\"",
          "7650: yy827:",
          "7651:   YYDEBUG(827, *YYCURSOR);",
          "7653:   goto yy845;",
          "7654: yy828:",
          "7655:   YYDEBUG(828, *YYCURSOR);",
          "7658:    if (yych <= '@') goto yy829;",
          "7659:    if (yych <= 'Z') goto yy841;",
          "7660:    if (yych >= '_') goto yy841;",
          "7662:    if (yych <= '`') goto yy829;",
          "7663:    if (yych <= 'z') goto yy841;",
          "7664:    if (yych >= 0x7F) goto yy841;",
          "7666: yy829:",
          "7667:   YYDEBUG(829, *YYCURSOR);",
          "7669: #line 1888 \"Zend/zend_language_scanner.l\"",
          "7674: #line 7675 \"Zend/zend_language_scanner.c\"",
          "7675: yy830:",
          "7676:   YYDEBUG(830, *YYCURSOR);",
          "7678:   YYDEBUG(831, *YYCURSOR);",
          "7680: #line 1883 \"Zend/zend_language_scanner.l\"",
          "7685: #line 7686 \"Zend/zend_language_scanner.c\"",
          "7686: yy832:",
          "7687:   YYDEBUG(832, *YYCURSOR);",
          "7689:   goto yy829;",
          "7690: yy833:",
          "7691:   YYDEBUG(833, *YYCURSOR);",
          "7693:   YYDEBUG(834, *YYCURSOR);",
          "7695: #line 1893 \"Zend/zend_language_scanner.l\"",
          "7702: #line 7703 \"Zend/zend_language_scanner.c\"",
          "7703: yy835:",
          "7704:   YYDEBUG(835, *YYCURSOR);",
          "7707:   goto yy840;",
          "7708: yy836:",
          "7709:   YYDEBUG(836, *YYCURSOR);",
          "7711: #line 1900 \"Zend/zend_language_scanner.l\"",
          "7717: #line 7718 \"Zend/zend_language_scanner.c\"",
          "7718: yy837:",
          "7719:   YYDEBUG(837, *YYCURSOR);",
          "7721:   YYDEBUG(838, *YYCURSOR);",
          "7723: #line 2416 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 141 ---",
          "[Context before]",
          "7696:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "7697:  goto restart;",
          "7698: }",
          "7702:   ++YYCURSOR;",
          "7703:   YYFILL(1);",
          "7704:   yych = *YYCURSOR;",
          "7707:   if (yybm[0+yych] & 16) {",
          "7709:   }",
          "7713:   ++YYCURSOR;",
          "7714:   YYFILL(1);",
          "7715:   yych = *YYCURSOR;",
          "7717:   if (yych <= '^') {",
          "7718:    if (yych <= '9') {",
          "7720:    } else {",
          "7723:    }",
          "7724:   } else {",
          "7725:    if (yych <= '`') {",
          "7727:    } else {",
          "7730:    }",
          "7731:   }",
          "7734:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7736:   {",
          "7737:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "7738:  zendlval->type = IS_STRING;",
          "7739:  return T_VARIABLE;",
          "7740: }",
          "7744:   ++YYCURSOR;",
          "7745:   YYFILL(1);",
          "7746:   yych = *YYCURSOR;",
          "7749:   if (yybm[0+yych] & 32) {",
          "7751:   }",
          "7755:   yych = *++YYCURSOR;",
          "7756:   if (yybm[0+yych] & 128) {",
          "7758:   }",
          "7761:   YYCURSOR = YYMARKER;",
          "7765:   yych = *++YYCURSOR;",
          "7766:   if (yybm[0+yych] & 64) {",
          "7768:   }",
          "7772:   ++YYCURSOR;",
          "7773:   YYFILL(1);",
          "7774:   yych = *YYCURSOR;",
          "7780:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7783:  zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "7784:  zendlval->value.str.len = yyleng;",
          "7785:  zendlval->type = IS_STRING;",
          "7786:  return T_NUM_STRING;",
          "7787: }",
          "7791:   ++YYCURSOR;",
          "7792:   YYFILL(1);",
          "7793:   yych = *YYCURSOR;",
          "7795:   if (yybm[0+yych] & 64) {",
          "7797:   }",
          "7801:   ++YYCURSOR;",
          "7802:   YYFILL(1);",
          "7803:   yych = *YYCURSOR;",
          "7805:   if (yybm[0+yych] & 128) {",
          "7807:   }",
          "7809:  }",
          "7810: }",
          "7813: }",
          "",
          "[Removed Lines]",
          "7699: #line 7700 \"Zend/zend_language_scanner.c\"",
          "7700: yy836:",
          "7701:   YYDEBUG(836, *YYCURSOR);",
          "7705: yy837:",
          "7706:   YYDEBUG(837, *YYCURSOR);",
          "7708:    goto yy836;",
          "7710:   goto yy833;",
          "7711: yy838:",
          "7712:   YYDEBUG(838, *YYCURSOR);",
          "7716:   YYDEBUG(839, *YYCURSOR);",
          "7719:     if (yych >= '0') goto yy838;",
          "7721:     if (yych <= '@') goto yy840;",
          "7722:     if (yych <= 'Z') goto yy838;",
          "7726:     if (yych <= '_') goto yy838;",
          "7728:     if (yych <= 'z') goto yy838;",
          "7729:     if (yych >= 0x7F) goto yy838;",
          "7732: yy840:",
          "7733:   YYDEBUG(840, *YYCURSOR);",
          "7735: #line 1873 \"Zend/zend_language_scanner.l\"",
          "7741: #line 7742 \"Zend/zend_language_scanner.c\"",
          "7742: yy841:",
          "7743:   YYDEBUG(841, *YYCURSOR);",
          "7747: yy842:",
          "7748:   YYDEBUG(842, *YYCURSOR);",
          "7750:    goto yy841;",
          "7752:   goto yy823;",
          "7753: yy843:",
          "7754:   YYDEBUG(843, *YYCURSOR);",
          "7757:    goto yy851;",
          "7759: yy844:",
          "7760:   YYDEBUG(844, *YYCURSOR);",
          "7762:   goto yy823;",
          "7763: yy845:",
          "7764:   YYDEBUG(845, *YYCURSOR);",
          "7767:    goto yy849;",
          "7769:   goto yy844;",
          "7770: yy846:",
          "7771:   YYDEBUG(846, *YYCURSOR);",
          "7775:   YYDEBUG(847, *YYCURSOR);",
          "7776:   if (yych <= '/') goto yy848;",
          "7777:   if (yych <= '9') goto yy846;",
          "7778: yy848:",
          "7779:   YYDEBUG(848, *YYCURSOR);",
          "7781: #line 1564 \"Zend/zend_language_scanner.l\"",
          "7788: #line 7789 \"Zend/zend_language_scanner.c\"",
          "7789: yy849:",
          "7790:   YYDEBUG(849, *YYCURSOR);",
          "7794:   YYDEBUG(850, *YYCURSOR);",
          "7796:    goto yy849;",
          "7798:   goto yy848;",
          "7799: yy851:",
          "7800:   YYDEBUG(851, *YYCURSOR);",
          "7804:   YYDEBUG(852, *YYCURSOR);",
          "7806:    goto yy851;",
          "7808:   goto yy848;",
          "7811: #line 2421 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7732: #line 7733 \"Zend/zend_language_scanner.c\"",
          "7733: yy839:",
          "7734:   YYDEBUG(839, *YYCURSOR);",
          "7738: yy840:",
          "7739:   YYDEBUG(840, *YYCURSOR);",
          "7741:    goto yy839;",
          "7743:   goto yy836;",
          "7744: yy841:",
          "7745:   YYDEBUG(841, *YYCURSOR);",
          "7749:   YYDEBUG(842, *YYCURSOR);",
          "7752:     if (yych >= '0') goto yy841;",
          "7754:     if (yych <= '@') goto yy843;",
          "7755:     if (yych <= 'Z') goto yy841;",
          "7759:     if (yych <= '_') goto yy841;",
          "7761:     if (yych <= 'z') goto yy841;",
          "7762:     if (yych >= 0x7F) goto yy841;",
          "7765: yy843:",
          "7766:   YYDEBUG(843, *YYCURSOR);",
          "7768: #line 1877 \"Zend/zend_language_scanner.l\"",
          "7774: #line 7775 \"Zend/zend_language_scanner.c\"",
          "7775: yy844:",
          "7776:   YYDEBUG(844, *YYCURSOR);",
          "7780: yy845:",
          "7781:   YYDEBUG(845, *YYCURSOR);",
          "7783:    goto yy844;",
          "7785:   goto yy826;",
          "7786: yy846:",
          "7787:   YYDEBUG(846, *YYCURSOR);",
          "7790:    goto yy854;",
          "7792: yy847:",
          "7793:   YYDEBUG(847, *YYCURSOR);",
          "7795:   goto yy826;",
          "7796: yy848:",
          "7797:   YYDEBUG(848, *YYCURSOR);",
          "7800:    goto yy852;",
          "7802:   goto yy847;",
          "7803: yy849:",
          "7804:   YYDEBUG(849, *YYCURSOR);",
          "7808:   YYDEBUG(850, *YYCURSOR);",
          "7809:   if (yych <= '/') goto yy851;",
          "7810:   if (yych <= '9') goto yy849;",
          "7811: yy851:",
          "7812:   YYDEBUG(851, *YYCURSOR);",
          "7814: #line 1568 \"Zend/zend_language_scanner.l\"",
          "7821: #line 7822 \"Zend/zend_language_scanner.c\"",
          "7822: yy852:",
          "7823:   YYDEBUG(852, *YYCURSOR);",
          "7827:   YYDEBUG(853, *YYCURSOR);",
          "7829:    goto yy852;",
          "7831:   goto yy851;",
          "7832: yy854:",
          "7833:   YYDEBUG(854, *YYCURSOR);",
          "7837:   YYDEBUG(855, *YYCURSOR);",
          "7839:    goto yy854;",
          "7841:   goto yy851;",
          "7844: #line 2425 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l": [
          "File: Zend/zend_language_scanner.l -> Zend/zend_language_scanner.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "1041:  return T_CATCH;",
          "1042: }",
          "1044: <ST_IN_SCRIPTING>\"throw\" {",
          "1045:  return T_THROW;",
          "1046: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1044: <ST_IN_SCRIPTING>\"finally\" {",
          "1045:  return T_FINALLY;",
          "1046: }",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner_defs.h||Zend/zend_language_scanner_defs.h": [
          "File: Zend/zend_language_scanner_defs.h -> Zend/zend_language_scanner_defs.h"
        ],
        "Zend/zend_vm_def.h||Zend/zend_vm_def.h": [
          "File: Zend/zend_vm_def.h -> Zend/zend_vm_def.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2133:  USE_OPLINE",
          "2135:  SAVE_OPLINE();",
          "2137:  if (OP2_TYPE == IS_UNUSED) {",
          "2138:   EX_T(opline->result.var).class_entry = zend_fetch_class(NULL, 0, opline->extended_value TSRMLS_CC);",
          "2139:   CHECK_EXCEPTION();",
          "",
          "[Removed Lines]",
          "2136:  EG(exception) = NULL;",
          "",
          "[Added Lines]",
          "2136:     if (EG(exception)) {",
          "2137:         zend_exception_save(TSRMLS_C);",
          "2138:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2842:    FREE_OP1();",
          "2843:   }",
          "2845:   if (OP1_TYPE == IS_CONST ||",
          "2846:       (PZVAL_IS_REF(retval_ptr) && Z_REFCOUNT_P(retval_ptr) > 0)) {",
          "2847:    zval *ret;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2847:         if (*EG(return_value_ptr_ptr)) {",
          "2848:             zval_ptr_dtor(EG(return_value_ptr_ptr));",
          "2849:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2863:  } else {",
          "2864:   zval *ret;",
          "2866:   ALLOC_ZVAL(ret);",
          "2867:   INIT_PZVAL_COPY(ret, retval_ptr);",
          "2869:  }",
          "2870:  FREE_OP1_IF_VAR();",
          "2872: }",
          "2874: ZEND_VM_HANDLER(111, ZEND_RETURN_BY_REF, CONST|TMP|VAR|CV, ANY)",
          "",
          "[Removed Lines]",
          "2871:  ZEND_VM_DISPATCH_TO_HELPER(zend_leave_helper);",
          "",
          "[Added Lines]",
          "2871:         if (*EG(return_value_ptr_ptr)) {",
          "2872:             zval_ptr_dtor(EG(return_value_ptr_ptr));",
          "2873:         }",
          "2881:     if (!(EG(active_op_array)->last_try_catch)) {",
          "2882:         ZEND_VM_DISPATCH_TO_HELPER(zend_leave_helper);",
          "2883:     } else {",
          "2884:         zend_uint i, op_num = opline - EX(op_array)->opcodes;",
          "2885:         zend_uint catch_op_num = 0, finally_op_num = 0;",
          "2886:         for (i=0; i<EG(active_op_array)->last_try_catch; i++) {",
          "2887:             if (EG(active_op_array)->try_catch_array[i].try_op > op_num) {",
          "2888:                 break;",
          "2889:             }",
          "2890:             if (op_num < EG(active_op_array)->try_catch_array[i].finally_op) {",
          "2891:                 finally_op_num = EG(active_op_array)->try_catch_array[i].finally_op;",
          "2892:             }",
          "2893:             if (EG(prev_exception)) {",
          "2895:                 if (op_num < EG(active_op_array)->try_catch_array[i].catch_op) {",
          "2896:                     catch_op_num = EG(active_op_array)->try_catch_array[i].catch_op;",
          "2897:                 }",
          "2898:             }",
          "2899:         }",
          "2901:         if (catch_op_num && finally_op_num) {",
          "2902:             if (catch_op_num > finally_op_num) {",
          "2903:                 EX(leaving) = 1;",
          "2904:                 ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[finally_op_num]);",
          "2905:                 ZEND_VM_CONTINUE();",
          "2906:             } else {",
          "2907:                 EX(leaving) = 0;",
          "2908:                 ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[catch_op_num]);",
          "2909:                 ZEND_VM_CONTINUE();",
          "2910:             }",
          "2911:         } else if (catch_op_num) {",
          "2912:             ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[catch_op_num]);",
          "2913:             ZEND_VM_CONTINUE();",
          "2914:         } else if (finally_op_num) {",
          "2915:             EX(leaving) = 1;",
          "2916:             ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[finally_op_num]);",
          "2917:             ZEND_VM_CONTINUE();",
          "2918:         } else if (EX(leaving)) {",
          "2919:             ZEND_VM_NEXT_OPCODE();",
          "2920:         } else {",
          "2921:             ZEND_VM_DISPATCH_TO_HELPER(zend_leave_helper);",
          "2922:         }",
          "2923:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2881:  SAVE_OPLINE();",
          "2883:  do {",
          "2884:   if (OP1_TYPE == IS_CONST || OP1_TYPE == IS_TMP_VAR) {",
          "2886:    zend_error(E_NOTICE, \"Only variable references should be returned by reference\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2936:         if (EG(return_value_ptr_ptr) && *EG(return_value_ptr_ptr)) {",
          "2937:             zval_ptr_dtor(EG(return_value_ptr_ptr));",
          "2938:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2936:  } while (0);",
          "2938:  FREE_OP1_IF_VAR();",
          "2940: }",
          "2942: ZEND_VM_HANDLER(108, ZEND_THROW, CONST|TMP|VAR|CV, ANY)",
          "",
          "[Removed Lines]",
          "2939:  ZEND_VM_DISPATCH_TO_HELPER(zend_leave_helper);",
          "",
          "[Added Lines]",
          "2996:     if (!(EG(active_op_array)->last_try_catch)) {",
          "2997:         ZEND_VM_DISPATCH_TO_HELPER(zend_leave_helper);",
          "2998:     } else {",
          "2999:         zend_uint i, op_num = opline - EX(op_array)->opcodes;",
          "3000:         zend_uint catch_op_num = 0, finally_op_num = 0;",
          "3001:         for (i=0; i<EG(active_op_array)->last_try_catch; i++) {",
          "3002:             if (EG(active_op_array)->try_catch_array[i].try_op > op_num) {",
          "3003:                 break;",
          "3004:             }",
          "3005:             if (op_num < EG(active_op_array)->try_catch_array[i].finally_op) {",
          "3006:                 finally_op_num = EG(active_op_array)->try_catch_array[i].finally_op;",
          "3007:             }",
          "3008:             if (EG(prev_exception)) {",
          "3010:                 if (op_num < EG(active_op_array)->try_catch_array[i].catch_op) {",
          "3011:                     catch_op_num = EG(active_op_array)->try_catch_array[i].catch_op;",
          "3012:                 }",
          "3013:             }",
          "3014:         }",
          "3016:         if (catch_op_num && finally_op_num) {",
          "3017:             if (catch_op_num > finally_op_num) {",
          "3018:                 EX(leaving) = 1;",
          "3019:                 ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[finally_op_num]);",
          "3020:                 ZEND_VM_CONTINUE();",
          "3021:             } else {",
          "3022:                 EX(leaving) = 0;",
          "3023:                 ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[catch_op_num]);",
          "3024:                 ZEND_VM_CONTINUE();",
          "3025:             }",
          "3026:         } else if (catch_op_num) {",
          "3027:             ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[catch_op_num]);",
          "3028:             ZEND_VM_CONTINUE();",
          "3029:         } else if (finally_op_num) {",
          "3030:             EX(leaving) = 1;",
          "3031:             ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[finally_op_num]);",
          "3032:             ZEND_VM_CONTINUE();",
          "3033:         } else if (EX(leaving)) {",
          "3034:             ZEND_VM_NEXT_OPCODE();",
          "3035:         } else {",
          "3036:             ZEND_VM_DISPATCH_TO_HELPER(zend_leave_helper);",
          "3037:         }",
          "3038:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4997: {",
          "4998:  zend_uint op_num = EG(opline_before_exception)-EG(active_op_array)->opcodes;",
          "4999:  int i;",
          "5002:  zval restored_error_reporting;",
          "5004:  void **stack_frame = (void**)(((char*)EX_Ts()) +",
          "",
          "[Removed Lines]",
          "5000:  zend_uint catch_op_num = 0;",
          "5001:  int catched = 0;",
          "",
          "[Added Lines]",
          "5099:  zend_uint catch_op_num = 0, finally_op_num = 0;",
          "5100:  int catched = 0, finally = 0;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "5013:   if (EG(active_op_array)->try_catch_array[i].try_op > op_num) {",
          "5015:    break;",
          "5017:    catch_op_num = EX(op_array)->try_catch_array[i].catch_op;",
          "5019:   }",
          "5020:  }",
          "5022:  while (EX(fbc)) {",
          "",
          "[Removed Lines]",
          "5016:   } else if (op_num < EG(active_op_array)->try_catch_array[i].catch_op) {",
          "5018:    catched = 1;",
          "",
          "[Added Lines]",
          "5115:   }",
          "5116:         if (op_num < EG(active_op_array)->try_catch_array[i].catch_op) {",
          "5118:    catched = i + 1;",
          "5120:         if (op_num < EG(active_op_array)->try_catch_array[i].finally_op) {",
          "5121:             finally_op_num = EX(op_array)->try_catch_array[i].finally_op;",
          "5122:             finally = i + 1;",
          "5123:         }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "5073:  }",
          "5074:  EX(old_error_reporting) = NULL;",
          "5082: }",
          "5084: ZEND_VM_HANDLER(146, ZEND_VERIFY_ABSTRACT_CLASS, ANY, ANY)",
          "",
          "[Removed Lines]",
          "5076:  if (!catched) {",
          "5077:   ZEND_VM_DISPATCH_TO_HELPER(zend_leave_helper);",
          "5078:   } else {",
          "5079:   ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[catch_op_num]);",
          "5080:    ZEND_VM_CONTINUE();",
          "5081:   }",
          "",
          "[Added Lines]",
          "5180:  if (catched && finally) {",
          "5181:         if (finally_op_num > catch_op_num) {",
          "5182:             EX(leaving) = 0;",
          "5183:             ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[catch_op_num]);",
          "5184:             ZEND_VM_CONTINUE();",
          "5185:         } else {",
          "5186:             zend_exception_save(TSRMLS_C);",
          "5187:             EX(leaving) = finally;",
          "5188:             ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[finally_op_num]);",
          "5189:             ZEND_VM_CONTINUE();",
          "5190:         }",
          "5191:     } else if (catched) {",
          "5192:         EX(leaving) = 0;",
          "5193:         ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[catch_op_num]);",
          "5194:         ZEND_VM_CONTINUE();",
          "5195:     } else if (finally) {",
          "5196:         zend_exception_save(TSRMLS_C);",
          "5197:         EX(leaving) = finally;",
          "5198:         ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[finally_op_num]);",
          "5199:         ZEND_VM_CONTINUE();",
          "5200:     } else {",
          "5201:         ZEND_VM_DISPATCH_TO_HELPER(zend_leave_helper);",
          "5202:     }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5196:  ZEND_VM_NEXT_OPCODE();",
          "5197: }",
          "5199: ZEND_VM_EXPORT_HELPER(zend_do_fcall, zend_do_fcall_common_helper)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5320: ZEND_VM_HANDLER(159, ZEND_LEAVE, ANY, ANY) {",
          "5321: {",
          "5322:     USE_OPLINE;",
          "5323:  SAVE_OPLINE();",
          "5324:     zend_uint i, op_num = opline - EG(active_op_array)->opcodes;",
          "5326:     zend_exception_restore(TSRMLS_C);",
          "5327:     if (EX(leaving)) {",
          "5328:         zend_uint catch_op_num = 0, finally_op_num = 0;",
          "5329:         for (i = 0; i < EX(leaving); i++) {",
          "5330:             if (EG(active_op_array)->try_catch_array[i].try_op > op_num) {",
          "5331:                 break;",
          "5332:             }",
          "5333:             if (op_num < EG(active_op_array)->try_catch_array[i].finally_op) {",
          "5334:                 finally_op_num = EG(active_op_array)->try_catch_array[i].finally_op;",
          "5335:             }",
          "5336:             if (EG(exception)) {",
          "5337:                 if (op_num < EG(active_op_array)->try_catch_array[i].catch_op) {",
          "5338:                     catch_op_num = EG(active_op_array)->try_catch_array[i].catch_op;",
          "5339:                 }",
          "5340:             }",
          "5341:         }",
          "5343:         if (catch_op_num && finally_op_num) {",
          "5344:             if (catch_op_num > finally_op_num) {",
          "5345:                 ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[finally_op_num]);",
          "5346:                 ZEND_VM_CONTINUE();",
          "5347:             } else {",
          "5348:                 EX(leaving) = 0;",
          "5349:                 ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[catch_op_num]);",
          "5350:                 ZEND_VM_CONTINUE();",
          "5351:             }",
          "5352:         } else if (catch_op_num) {",
          "5353:             ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[catch_op_num]);",
          "5354:             ZEND_VM_CONTINUE();",
          "5355:         } else if (finally_op_num) {",
          "5356:             ZEND_VM_SET_OPCODE(&EX(op_array)->opcodes[finally_op_num]);",
          "5357:             ZEND_VM_CONTINUE();",
          "5358:         } else {",
          "5359:             ZEND_VM_DISPATCH_TO_HELPER(zend_leave_helper);",
          "5360:         }",
          "5361:     } else {",
          "5362:         ZEND_VM_NEXT_OPCODE();",
          "5363:     }",
          "5364: }",
          "",
          "---------------"
        ],
        "Zend/zend_vm_execute.skl||Zend/zend_vm_execute.skl": [
          "File: Zend/zend_vm_execute.skl -> Zend/zend_vm_execute.skl",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:  EX(prev_execute_data) = EG(current_execute_data);",
          "36:  EG(current_execute_data) = execute_data;",
          "37:  EX(nested) = nested;",
          "38:  nested = 1;",
          "40:  LOAD_REGS();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:     EX(leaving) = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "506f6a428267379b4aceb91d3a66d0762f3fd3a3",
      "candidate_info": {
        "commit_hash": "506f6a428267379b4aceb91d3a66d0762f3fd3a3",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/506f6a428267379b4aceb91d3a66d0762f3fd3a3",
        "files": [
          "Zend/zend.h",
          "Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l",
          "Zend/zend_multibyte.c",
          "ext/mbstring/mbstring.c",
          "ext/mbstring/php_mbregex.c",
          "ext/mbstring/tests/bug26639.phpt",
          "ext/mbstring/tests/mb_http_output.phpt",
          "ext/mbstring/tests/mb_strpos.phpt",
          "ext/mbstring/tests/mb_strpos_error1.phpt",
          "ext/mbstring/tests/mb_strpos_variation1.phpt",
          "ext/mbstring/tests/mb_strpos_variation2.phpt",
          "ext/mbstring/tests/mb_strpos_variation3.phpt",
          "ext/mbstring/tests/mb_strpos_variation4.phpt",
          "ext/mbstring/tests/mb_strrpos_error1.phpt",
          "ext/mbstring/tests/mb_strrpos_variation1.phpt",
          "ext/mbstring/tests/mb_strrpos_variation2.phpt",
          "ext/mbstring/tests/mb_strrpos_variation4.phpt"
        ],
        "message": "Refactor mbstring (incompleted)",
        "before_after_code_files": [
          "Zend/zend.h||Zend/zend.h",
          "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l",
          "Zend/zend_multibyte.c||Zend/zend_multibyte.c",
          "ext/mbstring/mbstring.c||ext/mbstring/mbstring.c",
          "ext/mbstring/php_mbregex.c||ext/mbstring/php_mbregex.c",
          "ext/mbstring/tests/bug26639.phpt||ext/mbstring/tests/bug26639.phpt",
          "ext/mbstring/tests/mb_http_output.phpt||ext/mbstring/tests/mb_http_output.phpt",
          "ext/mbstring/tests/mb_strpos.phpt||ext/mbstring/tests/mb_strpos.phpt",
          "ext/mbstring/tests/mb_strpos_error1.phpt||ext/mbstring/tests/mb_strpos_error1.phpt",
          "ext/mbstring/tests/mb_strpos_variation1.phpt||ext/mbstring/tests/mb_strpos_variation1.phpt",
          "ext/mbstring/tests/mb_strpos_variation2.phpt||ext/mbstring/tests/mb_strpos_variation2.phpt",
          "ext/mbstring/tests/mb_strpos_variation3.phpt||ext/mbstring/tests/mb_strpos_variation3.phpt",
          "ext/mbstring/tests/mb_strpos_variation4.phpt||ext/mbstring/tests/mb_strpos_variation4.phpt",
          "ext/mbstring/tests/mb_strrpos_error1.phpt||ext/mbstring/tests/mb_strrpos_error1.phpt",
          "ext/mbstring/tests/mb_strrpos_variation1.phpt||ext/mbstring/tests/mb_strrpos_variation1.phpt",
          "ext/mbstring/tests/mb_strrpos_variation2.phpt||ext/mbstring/tests/mb_strrpos_variation2.phpt",
          "ext/mbstring/tests/mb_strrpos_variation4.phpt||ext/mbstring/tests/mb_strrpos_variation4.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
            "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
          ],
          "candidate": [
            "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
            "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend.h||Zend/zend.h": [
          "File: Zend/zend.h -> Zend/zend.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "691:   efree(ref);          \\",
          "692:  } while (0)",
          "695: #define INIT_PZVAL_COPY(z, v)       \\",
          "696:  do {            \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "694: #define ZVAL_DEREF(z) do {        \\",
          "695:   if (Z_ISREF_P((z))) {       \\",
          "696:    (z) = Z_REFVAL_P((z));      \\",
          "697:   }            \\",
          "698:  } while (0)",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c": [
          "File: Zend/zend_language_scanner.c -> Zend/zend_language_scanner.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "983:  if (SCNG(output_filter)) {",
          "984:   size_t sz = 0;",
          "985:   s = Z_STRVAL_P(zendlval);",
          "989:  }",
          "990: }",
          "",
          "[Removed Lines]",
          "986:   SCNG(output_filter)((unsigned char **)&Z_STRVAL_P(zendlval), &sz, (unsigned char *)s, (size_t)Z_STRLEN_P(zendlval) TSRMLS_CC);",
          "987:   Z_STRLEN_P(zendlval) = sz;",
          "988:   efree(s);",
          "",
          "[Added Lines]",
          "985:   unsigned char *str;",
          "988:   SCNG(output_filter)(&str, &sz, (unsigned char *)s, (size_t)Z_STRLEN_P(zendlval) TSRMLS_CC);",
          "989:   zval_ptr_dtor(zendlval);",
          "990:   ZVAL_STRINGL(zendlval, str, sz);",
          "991:   efree(str);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "998: yymore_restart:",
          "1002: {",
          "1003:  YYCTYPE yych;",
          "1004:  unsigned int yyaccept = 0;",
          "",
          "[Removed Lines]",
          "1001: #line 1002 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1004: #line 1005 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1097: yy3:",
          "1098:   YYDEBUG(3, *YYCURSOR);",
          "1099:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1101:   {",
          "1102:  if (YYCURSOR > YYLIMIT) {",
          "1103:   return 0;",
          "",
          "[Removed Lines]",
          "1100: #line 1764 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1103: #line 1767 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1156:  HANDLE_NEWLINES(yytext, yyleng);",
          "1157:  return T_INLINE_HTML;",
          "1158: }",
          "1160: yy4:",
          "1161:   YYDEBUG(4, *YYCURSOR);",
          "1162:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1159: #line 1160 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1162: #line 1163 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1174: yy6:",
          "1175:   YYDEBUG(6, *YYCURSOR);",
          "1176:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1178:   {",
          "1179:  if (CG(short_tags)) {",
          "",
          "[Removed Lines]",
          "1177: #line 1753 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1180: #line 1756 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1185:   goto inline_char_handler;",
          "1186:  }",
          "1187: }",
          "1189: yy7:",
          "1190:   YYDEBUG(7, *YYCURSOR);",
          "1191:   ++YYCURSOR;",
          "1192:   if ((yych = *YYCURSOR) == '=') goto yy43;",
          "1193:   YYDEBUG(8, *YYCURSOR);",
          "1194:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1196:   {",
          "1197:  if (CG(asp_tags)) {",
          "",
          "[Removed Lines]",
          "1188: #line 1189 \"Zend/zend_language_scanner.c\"",
          "1195: #line 1732 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1191: #line 1192 \"Zend/zend_language_scanner.c\"",
          "1198: #line 1735 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1203:   goto inline_char_handler;",
          "1204:  }",
          "1205: }",
          "1207: yy9:",
          "1208:   YYDEBUG(9, *YYCURSOR);",
          "1209:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1206: #line 1207 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1209: #line 1210 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1389:   ++YYCURSOR;",
          "1390:   YYDEBUG(38, *YYCURSOR);",
          "1391:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1393:   {",
          "1394:  YYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));",
          "",
          "[Removed Lines]",
          "1392: #line 1695 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1395: #line 1698 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1405:  BEGIN(ST_IN_SCRIPTING);",
          "1406:  return T_OPEN_TAG;",
          "1407: }",
          "1409: yy39:",
          "1410:   YYDEBUG(39, *YYCURSOR);",
          "1411:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1408: #line 1409 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1411: #line 1412 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1432:   ++YYCURSOR;",
          "1433:   YYDEBUG(44, *YYCURSOR);",
          "1434:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1436:   {",
          "1437:  if (CG(asp_tags)) {",
          "",
          "[Removed Lines]",
          "1435: #line 1712 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1438: #line 1715 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1443:   goto inline_char_handler;",
          "1444:  }",
          "1445: }",
          "1447: yy45:",
          "1448:   YYDEBUG(45, *YYCURSOR);",
          "1449:   ++YYCURSOR;",
          "1450:   YYDEBUG(46, *YYCURSOR);",
          "1451:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1453:   {",
          "1456:  BEGIN(ST_IN_SCRIPTING);",
          "1457:  return T_OPEN_TAG_WITH_ECHO;",
          "1458: }",
          "1460: yy47:",
          "1461:   YYDEBUG(47, *YYCURSOR);",
          "1462:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1446: #line 1447 \"Zend/zend_language_scanner.c\"",
          "1452: #line 1724 \"Zend/zend_language_scanner.l\"",
          "1459: #line 1460 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1449: #line 1450 \"Zend/zend_language_scanner.c\"",
          "1455: #line 1727 \"Zend/zend_language_scanner.l\"",
          "1462: #line 1463 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1483: yy51:",
          "1484:   YYDEBUG(51, *YYCURSOR);",
          "1485:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1487:   {",
          "",
          "[Removed Lines]",
          "1486: #line 1744 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1489: #line 1747 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1491:  BEGIN(ST_IN_SCRIPTING);",
          "1492:  return T_OPEN_TAG;",
          "1493: }",
          "1495: yy52:",
          "1496:   YYDEBUG(52, *YYCURSOR);",
          "1497:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1494: #line 1495 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1497: #line 1498 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1562: yy56:",
          "1563:   YYDEBUG(56, *YYCURSOR);",
          "1564:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1566:   {",
          "1567:  if (YYCURSOR > YYLIMIT) {",
          "1568:   return 0;",
          "",
          "[Removed Lines]",
          "1565: #line 2205 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1568: #line 2208 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1603:  zend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);",
          "1604:  return T_ENCAPSED_AND_WHITESPACE;",
          "1605: }",
          "1607: yy57:",
          "1608:   YYDEBUG(57, *YYCURSOR);",
          "1609:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1606: #line 1607 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1609: #line 1610 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1614:   ++YYCURSOR;",
          "1615:   YYDEBUG(59, *YYCURSOR);",
          "1616:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1618:   {",
          "1619:  BEGIN(ST_IN_SCRIPTING);",
          "1620:  return '`';",
          "1621: }",
          "1623: yy60:",
          "1624:   YYDEBUG(60, *YYCURSOR);",
          "1625:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1617: #line 2149 \"Zend/zend_language_scanner.l\"",
          "1622: #line 1623 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1620: #line 2152 \"Zend/zend_language_scanner.l\"",
          "1625: #line 1626 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1629:   ++YYCURSOR;",
          "1630:   YYDEBUG(62, *YYCURSOR);",
          "1631:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1633:   {",
          "1634:  Z_LVAL_P(zendlval) = (long) '{';",
          "1635:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1636:  yyless(1);",
          "1637:  return T_CURLY_OPEN;",
          "1638: }",
          "1640: yy63:",
          "1641:   YYDEBUG(63, *YYCURSOR);",
          "1642:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "1632: #line 2136 \"Zend/zend_language_scanner.l\"",
          "1639: #line 1640 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1635: #line 2139 \"Zend/zend_language_scanner.l\"",
          "1642: #line 1643 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1652: yy65:",
          "1653:   YYDEBUG(65, *YYCURSOR);",
          "1654:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1656:   {",
          "1657:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1658:  return T_VARIABLE;",
          "1659: }",
          "1661: yy66:",
          "1662:   YYDEBUG(66, *YYCURSOR);",
          "1663:   ++YYCURSOR;",
          "1664:   YYDEBUG(67, *YYCURSOR);",
          "1665:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1667:   {",
          "1668:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1669:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1670: }",
          "1672: yy68:",
          "1673:   YYDEBUG(68, *YYCURSOR);",
          "1674:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1655: #line 1843 \"Zend/zend_language_scanner.l\"",
          "1660: #line 1661 \"Zend/zend_language_scanner.c\"",
          "1666: #line 1458 \"Zend/zend_language_scanner.l\"",
          "1671: #line 1672 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1658: #line 1846 \"Zend/zend_language_scanner.l\"",
          "1663: #line 1664 \"Zend/zend_language_scanner.c\"",
          "1669: #line 1461 \"Zend/zend_language_scanner.l\"",
          "1674: #line 1675 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1682:   ++YYCURSOR;",
          "1683:   YYDEBUG(71, *YYCURSOR);",
          "1684:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1686:   {",
          "1687:  yyless(yyleng - 1);",
          "1688:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "1689:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1690:  return T_VARIABLE;",
          "1691: }",
          "1693: yy72:",
          "1694:   YYDEBUG(72, *YYCURSOR);",
          "1695:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1685: #line 1836 \"Zend/zend_language_scanner.l\"",
          "1692: #line 1693 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1688: #line 1839 \"Zend/zend_language_scanner.l\"",
          "1695: #line 1696 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1707:   ++YYCURSOR;",
          "1708:   YYDEBUG(74, *YYCURSOR);",
          "1709:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1711:   {",
          "1712:  yyless(yyleng - 3);",
          "1713:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "1714:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1715:  return T_VARIABLE;",
          "1716: }",
          "1718:  }",
          "1720: yyc_ST_DOUBLE_QUOTES:",
          "",
          "[Removed Lines]",
          "1710: #line 1827 \"Zend/zend_language_scanner.l\"",
          "1717: #line 1718 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1713: #line 1830 \"Zend/zend_language_scanner.l\"",
          "1720: #line 1721 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1782: yy78:",
          "1783:   YYDEBUG(78, *YYCURSOR);",
          "1784:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1786:   {",
          "1787:  if (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {",
          "1788:   YYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;",
          "",
          "[Removed Lines]",
          "1785: #line 2155 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1788: #line 2158 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1831:  zend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);",
          "1832:  return T_ENCAPSED_AND_WHITESPACE;",
          "1833: }",
          "1835: yy79:",
          "1836:   YYDEBUG(79, *YYCURSOR);",
          "1837:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1834: #line 1835 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1837: #line 1838 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1842:   ++YYCURSOR;",
          "1843:   YYDEBUG(81, *YYCURSOR);",
          "1844:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1846:   {",
          "1847:  BEGIN(ST_IN_SCRIPTING);",
          "1848:  return '\"';",
          "1849: }",
          "1851: yy82:",
          "1852:   YYDEBUG(82, *YYCURSOR);",
          "1853:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1845: #line 2144 \"Zend/zend_language_scanner.l\"",
          "1850: #line 1851 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1848: #line 2147 \"Zend/zend_language_scanner.l\"",
          "1853: #line 1854 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1857:   ++YYCURSOR;",
          "1858:   YYDEBUG(84, *YYCURSOR);",
          "1859:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1861:   {",
          "1862:  Z_LVAL_P(zendlval) = (long) '{';",
          "1863:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1864:  yyless(1);",
          "1865:  return T_CURLY_OPEN;",
          "1866: }",
          "1868: yy85:",
          "1869:   YYDEBUG(85, *YYCURSOR);",
          "1870:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "1860: #line 2136 \"Zend/zend_language_scanner.l\"",
          "1867: #line 1868 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1863: #line 2139 \"Zend/zend_language_scanner.l\"",
          "1870: #line 1871 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1880: yy87:",
          "1881:   YYDEBUG(87, *YYCURSOR);",
          "1882:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1884:   {",
          "1885:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1886:  return T_VARIABLE;",
          "1887: }",
          "1889: yy88:",
          "1890:   YYDEBUG(88, *YYCURSOR);",
          "1891:   ++YYCURSOR;",
          "1892:   YYDEBUG(89, *YYCURSOR);",
          "1893:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1895:   {",
          "1896:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1897:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1898: }",
          "1900: yy90:",
          "1901:   YYDEBUG(90, *YYCURSOR);",
          "1902:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1883: #line 1843 \"Zend/zend_language_scanner.l\"",
          "1888: #line 1889 \"Zend/zend_language_scanner.c\"",
          "1894: #line 1458 \"Zend/zend_language_scanner.l\"",
          "1899: #line 1900 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1886: #line 1846 \"Zend/zend_language_scanner.l\"",
          "1891: #line 1892 \"Zend/zend_language_scanner.c\"",
          "1897: #line 1461 \"Zend/zend_language_scanner.l\"",
          "1902: #line 1903 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1910:   ++YYCURSOR;",
          "1911:   YYDEBUG(93, *YYCURSOR);",
          "1912:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1914:   {",
          "1915:  yyless(yyleng - 1);",
          "1916:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "1917:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1918:  return T_VARIABLE;",
          "1919: }",
          "1921: yy94:",
          "1922:   YYDEBUG(94, *YYCURSOR);",
          "1923:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1913: #line 1836 \"Zend/zend_language_scanner.l\"",
          "1920: #line 1921 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1916: #line 1839 \"Zend/zend_language_scanner.l\"",
          "1923: #line 1924 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1935:   ++YYCURSOR;",
          "1936:   YYDEBUG(96, *YYCURSOR);",
          "1937:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1939:   {",
          "1940:  yyless(yyleng - 3);",
          "1941:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "1942:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1943:  return T_VARIABLE;",
          "1944: }",
          "1946:  }",
          "1948: yyc_ST_END_HEREDOC:",
          "",
          "[Removed Lines]",
          "1938: #line 1827 \"Zend/zend_language_scanner.l\"",
          "1945: #line 1946 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1941: #line 1830 \"Zend/zend_language_scanner.l\"",
          "1948: #line 1949 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1953:  ++YYCURSOR;",
          "1954:  YYDEBUG(100, *YYCURSOR);",
          "1955:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1957:  {",
          "1958:  zend_heredoc_label *heredoc_label = zend_ptr_stack_pop(&SCNG(heredoc_label_stack));",
          "",
          "[Removed Lines]",
          "1956: #line 2122 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1959: #line 2125 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1966:  BEGIN(ST_IN_SCRIPTING);",
          "1967:  return T_END_HEREDOC;",
          "1968: }",
          "1971: yyc_ST_HEREDOC:",
          "1972:  {",
          "",
          "[Removed Lines]",
          "1969: #line 1970 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1972: #line 1973 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2028: yy104:",
          "2029:   YYDEBUG(104, *YYCURSOR);",
          "2030:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2032:   {",
          "2033:  int newline = 0;",
          "",
          "[Removed Lines]",
          "2031: #line 2247 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2034: #line 2250 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2101:  zend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);",
          "2102:  return T_ENCAPSED_AND_WHITESPACE;",
          "2103: }",
          "2105: yy105:",
          "2106:   YYDEBUG(105, *YYCURSOR);",
          "2107:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2104: #line 2105 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2107: #line 2108 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2116:   ++YYCURSOR;",
          "2117:   YYDEBUG(108, *YYCURSOR);",
          "2118:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2120:   {",
          "2121:  Z_LVAL_P(zendlval) = (long) '{';",
          "2122:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2123:  yyless(1);",
          "2124:  return T_CURLY_OPEN;",
          "2125: }",
          "2127: yy109:",
          "2128:   YYDEBUG(109, *YYCURSOR);",
          "2129:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "2119: #line 2136 \"Zend/zend_language_scanner.l\"",
          "2126: #line 2127 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2122: #line 2139 \"Zend/zend_language_scanner.l\"",
          "2129: #line 2130 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2139: yy111:",
          "2140:   YYDEBUG(111, *YYCURSOR);",
          "2141:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2143:   {",
          "2144:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2145:  return T_VARIABLE;",
          "2146: }",
          "2148: yy112:",
          "2149:   YYDEBUG(112, *YYCURSOR);",
          "2150:   ++YYCURSOR;",
          "2151:   YYDEBUG(113, *YYCURSOR);",
          "2152:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2154:   {",
          "2155:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "2156:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "2157: }",
          "2159: yy114:",
          "2160:   YYDEBUG(114, *YYCURSOR);",
          "2161:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2142: #line 1843 \"Zend/zend_language_scanner.l\"",
          "2147: #line 2148 \"Zend/zend_language_scanner.c\"",
          "2153: #line 1458 \"Zend/zend_language_scanner.l\"",
          "2158: #line 2159 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2145: #line 1846 \"Zend/zend_language_scanner.l\"",
          "2150: #line 2151 \"Zend/zend_language_scanner.c\"",
          "2156: #line 1461 \"Zend/zend_language_scanner.l\"",
          "2161: #line 2162 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2169:   ++YYCURSOR;",
          "2170:   YYDEBUG(117, *YYCURSOR);",
          "2171:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2173:   {",
          "2174:  yyless(yyleng - 1);",
          "2175:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "2176:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2177:  return T_VARIABLE;",
          "2178: }",
          "2180: yy118:",
          "2181:   YYDEBUG(118, *YYCURSOR);",
          "2182:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2172: #line 1836 \"Zend/zend_language_scanner.l\"",
          "2179: #line 2180 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2175: #line 1839 \"Zend/zend_language_scanner.l\"",
          "2182: #line 2183 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2194:   ++YYCURSOR;",
          "2195:   YYDEBUG(120, *YYCURSOR);",
          "2196:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2198:   {",
          "2199:  yyless(yyleng - 3);",
          "2200:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "2201:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2202:  return T_VARIABLE;",
          "2203: }",
          "2205:  }",
          "2207: yyc_ST_IN_SCRIPTING:",
          "",
          "[Removed Lines]",
          "2197: #line 1827 \"Zend/zend_language_scanner.l\"",
          "2204: #line 2205 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2200: #line 1830 \"Zend/zend_language_scanner.l\"",
          "2207: #line 2208 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2384: yy124:",
          "2385:   YYDEBUG(124, *YYCURSOR);",
          "2386:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2388:   {",
          "2389:  zend_copy_value(zendlval, yytext, yyleng);",
          "2390:  return T_STRING;",
          "2391: }",
          "2393: yy125:",
          "2394:   YYDEBUG(125, *YYCURSOR);",
          "2395:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2387: #line 1865 \"Zend/zend_language_scanner.l\"",
          "2392: #line 2393 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2390: #line 1868 \"Zend/zend_language_scanner.l\"",
          "2395: #line 2396 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2621: yy139:",
          "2622:   YYDEBUG(139, *YYCURSOR);",
          "2623:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2625:   {",
          "2626:  return yytext[0];",
          "2627: }",
          "2629: yy140:",
          "2630:   YYDEBUG(140, *YYCURSOR);",
          "2631:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2624: #line 1447 \"Zend/zend_language_scanner.l\"",
          "2628: #line 2629 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2627: #line 1450 \"Zend/zend_language_scanner.l\"",
          "2631: #line 2632 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2634: yy141:",
          "2635:   YYDEBUG(141, *YYCURSOR);",
          "2636:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2638:   {",
          "2641:  HANDLE_NEWLINES(yytext, yyleng);",
          "2642:  return T_WHITESPACE;",
          "2643: }",
          "2645: yy142:",
          "2646:   YYDEBUG(142, *YYCURSOR);",
          "2647:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2637: #line 1176 \"Zend/zend_language_scanner.l\"",
          "2644: #line 2645 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2640: #line 1179 \"Zend/zend_language_scanner.l\"",
          "2647: #line 2648 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2652:   ++YYCURSOR;",
          "2653:   YYDEBUG(144, *YYCURSOR);",
          "2654:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2656:   {",
          "2657:  return T_NS_SEPARATOR;",
          "2658: }",
          "2660: yy145:",
          "2661:   YYDEBUG(145, *YYCURSOR);",
          "2662:   yyaccept = 1;",
          "",
          "[Removed Lines]",
          "2655: #line 1203 \"Zend/zend_language_scanner.l\"",
          "2659: #line 2660 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2658: #line 1206 \"Zend/zend_language_scanner.l\"",
          "2662: #line 2663 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2889:   ++YYCURSOR;",
          "2890:   YYDEBUG(169, *YYCURSOR);",
          "2891:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2893:   {",
          "2894:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2895:  return '{';",
          "2896: }",
          "2898: yy170:",
          "2899:   YYDEBUG(170, *YYCURSOR);",
          "2900:   ++YYCURSOR;",
          "2901:   YYDEBUG(171, *YYCURSOR);",
          "2902:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2904:   {",
          "2905:  RESET_DOC_COMMENT();",
          "2906:  if (!zend_stack_is_empty(&SCNG(state_stack))) {",
          "",
          "[Removed Lines]",
          "2892: #line 1452 \"Zend/zend_language_scanner.l\"",
          "2897: #line 2898 \"Zend/zend_language_scanner.c\"",
          "2903: #line 1464 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2895: #line 1455 \"Zend/zend_language_scanner.l\"",
          "2900: #line 2901 \"Zend/zend_language_scanner.c\"",
          "2906: #line 1467 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2908:  }",
          "2909:  return '}';",
          "2910: }",
          "2912: yy172:",
          "2913:   YYDEBUG(172, *YYCURSOR);",
          "2914:   yyaccept = 2;",
          "",
          "[Removed Lines]",
          "2911: #line 2912 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2914: #line 2915 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2936: yy173:",
          "2937:   YYDEBUG(173, *YYCURSOR);",
          "2938:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2940:   {",
          "2942:   Z_LVAL_P(zendlval) = strtol(yytext, NULL, 0);",
          "",
          "[Removed Lines]",
          "2939: #line 1513 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2942: #line 1516 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2957:  zendlval->type = IS_LONG;",
          "2958:  return T_LNUMBER;",
          "2959: }",
          "2961: yy174:",
          "2962:   YYDEBUG(174, *YYCURSOR);",
          "2963:   yyaccept = 2;",
          "",
          "[Removed Lines]",
          "2960: #line 2961 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2963: #line 2964 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2985: yy177:",
          "2986:   YYDEBUG(177, *YYCURSOR);",
          "2987:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2989:   {",
          "2990:  while (YYCURSOR < YYLIMIT) {",
          "2991:   switch (*YYCURSOR++) {",
          "",
          "[Removed Lines]",
          "2988: #line 1871 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2991: #line 1874 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "3020:  return T_COMMENT;",
          "3021: }",
          "3023: yy178:",
          "3024:   YYDEBUG(178, *YYCURSOR);",
          "3025:   ++YYCURSOR;",
          "3026: yy179:",
          "3027:   YYDEBUG(179, *YYCURSOR);",
          "3028:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3030:   {",
          "3031:  register char *s, *t;",
          "3032:  char *end;",
          "",
          "[Removed Lines]",
          "3022: #line 3023 \"Zend/zend_language_scanner.c\"",
          "3029: #line 1959 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3025: #line 3026 \"Zend/zend_language_scanner.c\"",
          "3032: #line 1962 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "3092:  }",
          "3093:  return T_CONSTANT_ENCAPSED_STRING;",
          "3094: }",
          "3096: yy180:",
          "3097:   YYDEBUG(180, *YYCURSOR);",
          "3098:   ++YYCURSOR;",
          "3099: yy181:",
          "3100:   YYDEBUG(181, *YYCURSOR);",
          "3101:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3103:   {",
          "3104:  int bprefix = (yytext[0] != '\"') ? 1 : 0;",
          "",
          "[Removed Lines]",
          "3095: #line 3096 \"Zend/zend_language_scanner.c\"",
          "3102: #line 2026 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3098: #line 3099 \"Zend/zend_language_scanner.c\"",
          "3105: #line 2029 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "3140:  BEGIN(ST_DOUBLE_QUOTES);",
          "3141:  return '\"';",
          "3142: }",
          "3144: yy182:",
          "3145:   YYDEBUG(182, *YYCURSOR);",
          "3146:   ++YYCURSOR;",
          "3147:   YYDEBUG(183, *YYCURSOR);",
          "3148:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3150:   {",
          "3151:  BEGIN(ST_BACKQUOTE);",
          "3152:  return '`';",
          "3153: }",
          "3155: yy184:",
          "3156:   YYDEBUG(184, *YYCURSOR);",
          "3157:   ++YYCURSOR;",
          "3158:   YYDEBUG(185, *YYCURSOR);",
          "3159:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3161:   {",
          "3162:  if (YYCURSOR > YYLIMIT) {",
          "3163:   return 0;",
          "",
          "[Removed Lines]",
          "3143: #line 3144 \"Zend/zend_language_scanner.c\"",
          "3149: #line 2116 \"Zend/zend_language_scanner.l\"",
          "3154: #line 3155 \"Zend/zend_language_scanner.c\"",
          "3160: #line 2378 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3146: #line 3147 \"Zend/zend_language_scanner.c\"",
          "3152: #line 2119 \"Zend/zend_language_scanner.l\"",
          "3157: #line 3158 \"Zend/zend_language_scanner.c\"",
          "3163: #line 2381 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3166:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "3167:  goto restart;",
          "3168: }",
          "3170: yy186:",
          "3171:   YYDEBUG(186, *YYCURSOR);",
          "3172:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3169: #line 3170 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3172: #line 3173 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3193: yy190:",
          "3194:   YYDEBUG(190, *YYCURSOR);",
          "3195:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3197:   {",
          "3198:  ZVAL_DOUBLE(zendlval, zend_strtod(yytext, NULL));",
          "3199:  return T_DNUMBER;",
          "3200: }",
          "3202: yy191:",
          "3203:   YYDEBUG(191, *YYCURSOR);",
          "3204:   yyaccept = 2;",
          "",
          "[Removed Lines]",
          "3196: #line 1572 \"Zend/zend_language_scanner.l\"",
          "3201: #line 3202 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3199: #line 1575 \"Zend/zend_language_scanner.l\"",
          "3204: #line 3205 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3290:   }",
          "3291:   YYDEBUG(202, *YYCURSOR);",
          "3292:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3294:   {",
          "3296:  int len = yyleng - 2;",
          "",
          "[Removed Lines]",
          "3293: #line 1489 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3296: #line 1492 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3314:   return T_DNUMBER;",
          "3315:  }",
          "3316: }",
          "3318: yy203:",
          "3319:   YYDEBUG(203, *YYCURSOR);",
          "3320:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3317: #line 3318 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3320: #line 3321 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3326:   }",
          "3327:   YYDEBUG(205, *YYCURSOR);",
          "3328:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3330:   {",
          "3332:  int len = yyleng - 2;",
          "",
          "[Removed Lines]",
          "3329: #line 1534 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3332: #line 1537 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3350:   return T_DNUMBER;",
          "3351:  }",
          "3352: }",
          "3354: yy206:",
          "3355:   YYDEBUG(206, *YYCURSOR);",
          "3356:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3353: #line 3354 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3356: #line 3357 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3359: yy207:",
          "3360:   YYDEBUG(207, *YYCURSOR);",
          "3361:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3363:   {",
          "3366:  BEGIN(INITIAL);",
          "3368: }",
          "3370: yy208:",
          "3371:   YYDEBUG(208, *YYCURSOR);",
          "3372:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3362: #line 1938 \"Zend/zend_language_scanner.l\"",
          "3369: #line 3370 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3365: #line 1941 \"Zend/zend_language_scanner.l\"",
          "3372: #line 3373 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3400: yy212:",
          "3401:   YYDEBUG(212, *YYCURSOR);",
          "3402:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3404:   {",
          "3405:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "3406:  return T_VARIABLE;",
          "3407: }",
          "3409: yy213:",
          "3410:   YYDEBUG(213, *YYCURSOR);",
          "3411:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3403: #line 1843 \"Zend/zend_language_scanner.l\"",
          "3408: #line 3409 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3406: #line 1846 \"Zend/zend_language_scanner.l\"",
          "3411: #line 3412 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3419:   }",
          "3420:   YYDEBUG(215, *YYCURSOR);",
          "3421:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3423:   {",
          "3424:  return T_LOGICAL_XOR;",
          "3425: }",
          "3427: yy216:",
          "3428:   YYDEBUG(216, *YYCURSOR);",
          "3429:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3422: #line 1435 \"Zend/zend_language_scanner.l\"",
          "3426: #line 3427 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3425: #line 1438 \"Zend/zend_language_scanner.l\"",
          "3429: #line 3430 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3432:   }",
          "3433:   YYDEBUG(217, *YYCURSOR);",
          "3434:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3436:   {",
          "3437:  return T_LOGICAL_OR;",
          "3438: }",
          "3440: yy218:",
          "3441:   YYDEBUG(218, *YYCURSOR);",
          "3442:   ++YYCURSOR;",
          "3443:   YYDEBUG(219, *YYCURSOR);",
          "3444:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3446:   {",
          "3447:  return T_XOR_EQUAL;",
          "3448: }",
          "3450: yy220:",
          "3451:   YYDEBUG(220, *YYCURSOR);",
          "3452:   ++YYCURSOR;",
          "3453:   YYDEBUG(221, *YYCURSOR);",
          "3454:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3456:   {",
          "3457:  return T_BOOLEAN_OR;",
          "3458: }",
          "3460: yy222:",
          "3461:   YYDEBUG(222, *YYCURSOR);",
          "3462:   ++YYCURSOR;",
          "3463:   YYDEBUG(223, *YYCURSOR);",
          "3464:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3466:   {",
          "3467:  return T_OR_EQUAL;",
          "3468: }",
          "3470: yy224:",
          "3471:   YYDEBUG(224, *YYCURSOR);",
          "3472:   ++YYCURSOR;",
          "3473:   YYDEBUG(225, *YYCURSOR);",
          "3474:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3476:   {",
          "3477:  return T_BOOLEAN_AND;",
          "3478: }",
          "3480: yy226:",
          "3481:   YYDEBUG(226, *YYCURSOR);",
          "3482:   ++YYCURSOR;",
          "3483:   YYDEBUG(227, *YYCURSOR);",
          "3484:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3486:   {",
          "3487:  return T_AND_EQUAL;",
          "3488: }",
          "3490: yy228:",
          "3491:   YYDEBUG(228, *YYCURSOR);",
          "3492:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3435: #line 1427 \"Zend/zend_language_scanner.l\"",
          "3439: #line 3440 \"Zend/zend_language_scanner.c\"",
          "3445: #line 1415 \"Zend/zend_language_scanner.l\"",
          "3449: #line 3450 \"Zend/zend_language_scanner.c\"",
          "3455: #line 1419 \"Zend/zend_language_scanner.l\"",
          "3459: #line 3460 \"Zend/zend_language_scanner.c\"",
          "3465: #line 1411 \"Zend/zend_language_scanner.l\"",
          "3469: #line 3470 \"Zend/zend_language_scanner.c\"",
          "3475: #line 1423 \"Zend/zend_language_scanner.l\"",
          "3479: #line 3480 \"Zend/zend_language_scanner.c\"",
          "3485: #line 1407 \"Zend/zend_language_scanner.l\"",
          "3489: #line 3490 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3438: #line 1430 \"Zend/zend_language_scanner.l\"",
          "3442: #line 3443 \"Zend/zend_language_scanner.c\"",
          "3448: #line 1418 \"Zend/zend_language_scanner.l\"",
          "3452: #line 3453 \"Zend/zend_language_scanner.c\"",
          "3458: #line 1422 \"Zend/zend_language_scanner.l\"",
          "3462: #line 3463 \"Zend/zend_language_scanner.c\"",
          "3468: #line 1414 \"Zend/zend_language_scanner.l\"",
          "3472: #line 3473 \"Zend/zend_language_scanner.c\"",
          "3478: #line 1426 \"Zend/zend_language_scanner.l\"",
          "3482: #line 3483 \"Zend/zend_language_scanner.c\"",
          "3488: #line 1410 \"Zend/zend_language_scanner.l\"",
          "3492: #line 3493 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3495: yy229:",
          "3496:   YYDEBUG(229, *YYCURSOR);",
          "3497:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3499:   {",
          "3500:  if (CG(asp_tags)) {",
          "3501:   BEGIN(INITIAL);",
          "",
          "[Removed Lines]",
          "3498: #line 1946 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3501: #line 1949 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3507:   return yytext[0];",
          "3508:  }",
          "3509: }",
          "3511: yy230:",
          "3512:   YYDEBUG(230, *YYCURSOR);",
          "3513:   ++YYCURSOR;",
          "3514:   YYDEBUG(231, *YYCURSOR);",
          "3515:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3517:   {",
          "3518:  return T_MOD_EQUAL;",
          "3519: }",
          "3521: yy232:",
          "3522:   YYDEBUG(232, *YYCURSOR);",
          "3523:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3510: #line 3511 \"Zend/zend_language_scanner.c\"",
          "3516: #line 1395 \"Zend/zend_language_scanner.l\"",
          "3520: #line 3521 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3513: #line 3514 \"Zend/zend_language_scanner.c\"",
          "3519: #line 1398 \"Zend/zend_language_scanner.l\"",
          "3523: #line 3524 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3535: yy235:",
          "3536:   YYDEBUG(235, *YYCURSOR);",
          "3537:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3539:   {",
          "3540:  int doc_com;",
          "",
          "[Removed Lines]",
          "3538: #line 1905 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3541: #line 1908 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3569:  return T_COMMENT;",
          "3570: }",
          "3572: yy236:",
          "3573:   YYDEBUG(236, *YYCURSOR);",
          "3574:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3571: #line 3572 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3574: #line 3575 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3578:   ++YYCURSOR;",
          "3579:   YYDEBUG(238, *YYCURSOR);",
          "3580:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3582:   {",
          "3583:  return T_DIV_EQUAL;",
          "3584: }",
          "3586: yy239:",
          "3587:   YYDEBUG(239, *YYCURSOR);",
          "3588:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3581: #line 1387 \"Zend/zend_language_scanner.l\"",
          "3585: #line 3586 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3584: #line 1390 \"Zend/zend_language_scanner.l\"",
          "3588: #line 3589 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3605:   ++YYCURSOR;",
          "3606:   YYDEBUG(243, *YYCURSOR);",
          "3607:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3609:   {",
          "3610:  return T_MUL_EQUAL;",
          "3611: }",
          "3613: yy244:",
          "3614:   YYDEBUG(244, *YYCURSOR);",
          "3615:   ++YYCURSOR;",
          "3616:   if ((yych = *YYCURSOR) == '=') goto yy248;",
          "3617:   YYDEBUG(245, *YYCURSOR);",
          "3618:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3620:   {",
          "3621:  return T_SR;",
          "3622: }",
          "3624: yy246:",
          "3625:   YYDEBUG(246, *YYCURSOR);",
          "3626:   ++YYCURSOR;",
          "3627:   YYDEBUG(247, *YYCURSOR);",
          "3628:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3630:   {",
          "3631:  return T_IS_GREATER_OR_EQUAL;",
          "3632: }",
          "3634: yy248:",
          "3635:   YYDEBUG(248, *YYCURSOR);",
          "3636:   ++YYCURSOR;",
          "3637:   YYDEBUG(249, *YYCURSOR);",
          "3638:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3640:   {",
          "3641:  return T_SR_EQUAL;",
          "3642: }",
          "3644: yy250:",
          "3645:   YYDEBUG(250, *YYCURSOR);",
          "3646:   yyaccept = 5;",
          "",
          "[Removed Lines]",
          "3608: #line 1383 \"Zend/zend_language_scanner.l\"",
          "3612: #line 3613 \"Zend/zend_language_scanner.c\"",
          "3619: #line 1443 \"Zend/zend_language_scanner.l\"",
          "3623: #line 3624 \"Zend/zend_language_scanner.c\"",
          "3629: #line 1371 \"Zend/zend_language_scanner.l\"",
          "3633: #line 3634 \"Zend/zend_language_scanner.c\"",
          "3639: #line 1403 \"Zend/zend_language_scanner.l\"",
          "3643: #line 3644 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3611: #line 1386 \"Zend/zend_language_scanner.l\"",
          "3615: #line 3616 \"Zend/zend_language_scanner.c\"",
          "3622: #line 1446 \"Zend/zend_language_scanner.l\"",
          "3626: #line 3627 \"Zend/zend_language_scanner.c\"",
          "3632: #line 1374 \"Zend/zend_language_scanner.l\"",
          "3636: #line 3637 \"Zend/zend_language_scanner.c\"",
          "3642: #line 1406 \"Zend/zend_language_scanner.l\"",
          "3646: #line 3647 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3651: yy251:",
          "3652:   YYDEBUG(251, *YYCURSOR);",
          "3653:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3655:   {",
          "3656:  return T_SL;",
          "3657: }",
          "3659: yy252:",
          "3660:   YYDEBUG(252, *YYCURSOR);",
          "3661:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3654: #line 1439 \"Zend/zend_language_scanner.l\"",
          "3658: #line 3659 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3657: #line 1442 \"Zend/zend_language_scanner.l\"",
          "3661: #line 3662 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3667:   ++YYCURSOR;",
          "3668:   YYDEBUG(254, *YYCURSOR);",
          "3669:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3671:   {",
          "3672:  return T_IS_SMALLER_OR_EQUAL;",
          "3673: }",
          "3675: yy255:",
          "3676:   YYDEBUG(255, *YYCURSOR);",
          "3677:   ++YYCURSOR;",
          "3678: yy256:",
          "3679:   YYDEBUG(256, *YYCURSOR);",
          "3680:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3682:   {",
          "3683:  return T_IS_NOT_EQUAL;",
          "3684: }",
          "3686: yy257:",
          "3687:   YYDEBUG(257, *YYCURSOR);",
          "3688:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3670: #line 1367 \"Zend/zend_language_scanner.l\"",
          "3674: #line 3675 \"Zend/zend_language_scanner.c\"",
          "3681: #line 1363 \"Zend/zend_language_scanner.l\"",
          "3685: #line 3686 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3673: #line 1370 \"Zend/zend_language_scanner.l\"",
          "3677: #line 3678 \"Zend/zend_language_scanner.c\"",
          "3684: #line 1366 \"Zend/zend_language_scanner.l\"",
          "3688: #line 3689 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3733:   ++YYCURSOR;",
          "3734:   YYDEBUG(265, *YYCURSOR);",
          "3735:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3737:   {",
          "3738:  return T_SL_EQUAL;",
          "3739: }",
          "3741: yy266:",
          "3742:   YYDEBUG(266, *YYCURSOR);",
          "3743:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3736: #line 1399 \"Zend/zend_language_scanner.l\"",
          "3740: #line 3741 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3739: #line 1402 \"Zend/zend_language_scanner.l\"",
          "3743: #line 3744 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3842: yy276:",
          "3843:   YYDEBUG(276, *YYCURSOR);",
          "3844:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3846:   {",
          "3847:  char *s;",
          "3848:  int bprefix = (yytext[0] != '<') ? 1 : 0;",
          "",
          "[Removed Lines]",
          "3845: #line 2068 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3848: #line 2071 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "3890:  return T_START_HEREDOC;",
          "3891: }",
          "3893: yy277:",
          "3894:   YYDEBUG(277, *YYCURSOR);",
          "3895:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3892: #line 3893 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3895: #line 3896 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "3929:   ++YYCURSOR;",
          "3930:   YYDEBUG(282, *YYCURSOR);",
          "3931:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3933:   {",
          "3934:  return T_IS_NOT_IDENTICAL;",
          "3935: }",
          "3937: yy283:",
          "3938:   YYDEBUG(283, *YYCURSOR);",
          "3939:   ++YYCURSOR;",
          "3940:   YYDEBUG(284, *YYCURSOR);",
          "3941:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3943:   {",
          "3944:  return T_PLUS_EQUAL;",
          "3945: }",
          "3947: yy285:",
          "3948:   YYDEBUG(285, *YYCURSOR);",
          "3949:   ++YYCURSOR;",
          "3950:   YYDEBUG(286, *YYCURSOR);",
          "3951:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3953:   {",
          "3954:  return T_INC;",
          "3955: }",
          "3957: yy287:",
          "3958:   YYDEBUG(287, *YYCURSOR);",
          "3959:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3932: #line 1355 \"Zend/zend_language_scanner.l\"",
          "3936: #line 3937 \"Zend/zend_language_scanner.c\"",
          "3942: #line 1375 \"Zend/zend_language_scanner.l\"",
          "3946: #line 3947 \"Zend/zend_language_scanner.c\"",
          "3952: #line 1343 \"Zend/zend_language_scanner.l\"",
          "3956: #line 3957 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3935: #line 1358 \"Zend/zend_language_scanner.l\"",
          "3939: #line 3940 \"Zend/zend_language_scanner.c\"",
          "3945: #line 1378 \"Zend/zend_language_scanner.l\"",
          "3949: #line 3950 \"Zend/zend_language_scanner.c\"",
          "3955: #line 1346 \"Zend/zend_language_scanner.l\"",
          "3959: #line 3960 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "3972:   }",
          "3973:   YYDEBUG(290, *YYCURSOR);",
          "3974:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3976:   {",
          "3977:  return T_LIST;",
          "3978: }",
          "3980: yy291:",
          "3981:   YYDEBUG(291, *YYCURSOR);",
          "3982:   ++YYCURSOR;",
          "3983:   if ((yych = *YYCURSOR) == '=') goto yy295;",
          "3984:   YYDEBUG(292, *YYCURSOR);",
          "3985:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3987:   {",
          "3988:  return T_IS_EQUAL;",
          "3989: }",
          "3991: yy293:",
          "3992:   YYDEBUG(293, *YYCURSOR);",
          "3993:   ++YYCURSOR;",
          "3994:   YYDEBUG(294, *YYCURSOR);",
          "3995:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3997:   {",
          "3998:  return T_DOUBLE_ARROW;",
          "3999: }",
          "4001: yy295:",
          "4002:   YYDEBUG(295, *YYCURSOR);",
          "4003:   ++YYCURSOR;",
          "4004:   YYDEBUG(296, *YYCURSOR);",
          "4005:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4007:   {",
          "4008:  return T_IS_IDENTICAL;",
          "4009: }",
          "4011: yy297:",
          "4012:   YYDEBUG(297, *YYCURSOR);",
          "4013:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3975: #line 1331 \"Zend/zend_language_scanner.l\"",
          "3979: #line 3980 \"Zend/zend_language_scanner.c\"",
          "3986: #line 1359 \"Zend/zend_language_scanner.l\"",
          "3990: #line 3991 \"Zend/zend_language_scanner.c\"",
          "3996: #line 1327 \"Zend/zend_language_scanner.l\"",
          "4000: #line 4001 \"Zend/zend_language_scanner.c\"",
          "4006: #line 1351 \"Zend/zend_language_scanner.l\"",
          "4010: #line 4011 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3978: #line 1334 \"Zend/zend_language_scanner.l\"",
          "3982: #line 3983 \"Zend/zend_language_scanner.c\"",
          "3989: #line 1362 \"Zend/zend_language_scanner.l\"",
          "3993: #line 3994 \"Zend/zend_language_scanner.c\"",
          "3999: #line 1330 \"Zend/zend_language_scanner.l\"",
          "4003: #line 4004 \"Zend/zend_language_scanner.c\"",
          "4009: #line 1354 \"Zend/zend_language_scanner.l\"",
          "4013: #line 4014 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "4137:   }",
          "4138:   YYDEBUG(316, *YYCURSOR);",
          "4139:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4141:   {",
          "4142:  if (Z_TYPE(CG(current_namespace)) != IS_UNDEF) {",
          "4143:   ZVAL_DUP(zendlval, &CG(current_namespace));",
          "",
          "[Removed Lines]",
          "4140: #line 1686 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4143: #line 1689 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "4146:  }",
          "4147:  return T_NS_C;",
          "4148: }",
          "4150: yy317:",
          "4151:   YYDEBUG(317, *YYCURSOR);",
          "4152:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4149: #line 4150 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4152: #line 4153 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "4166:   }",
          "4167:   YYDEBUG(321, *YYCURSOR);",
          "4168:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4170:   {",
          "4171:  zend_string *filename = zend_get_compiled_filename(TSRMLS_C);",
          "4172:  zend_string *dirname;",
          "",
          "[Removed Lines]",
          "4169: #line 1661 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4172: #line 1664 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "4191:  ZVAL_STR(zendlval, dirname);",
          "4192:  return T_DIR;",
          "4193: }",
          "4195: yy322:",
          "4196:   YYDEBUG(322, *YYCURSOR);",
          "4197:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4194: #line 4195 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4197: #line 4198 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "4216:   }",
          "4217:   YYDEBUG(327, *YYCURSOR);",
          "4218:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4220:   {",
          "4221:  ZVAL_LONG(zendlval, CG(zend_lineno));",
          "4222:  return T_LINE;",
          "4223: }",
          "4225: yy328:",
          "4226:   YYDEBUG(328, *YYCURSOR);",
          "4227:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4219: #line 1646 \"Zend/zend_language_scanner.l\"",
          "4224: #line 4225 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4222: #line 1649 \"Zend/zend_language_scanner.l\"",
          "4227: #line 4228 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "4256:   }",
          "4257:   YYDEBUG(335, *YYCURSOR);",
          "4258:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4260:   {",
          "4261:  if (CG(active_class_entry)) {",
          "4262:   int len = 0;",
          "",
          "[Removed Lines]",
          "4259: #line 1614 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4262: #line 1617 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "4288:  }",
          "4289:  return T_METHOD_C;",
          "4290: }",
          "4292: yy336:",
          "4293:   YYDEBUG(336, *YYCURSOR);",
          "4294:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4291: #line 4292 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4294: #line 4295 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "4339:   }",
          "4340:   YYDEBUG(346, *YYCURSOR);",
          "4341:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4343:   {",
          "4344:  zend_op_array *op_array = CG(active_op_array);",
          "4345:  if (op_array && op_array->function_name) {",
          "",
          "[Removed Lines]",
          "4342: #line 1604 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4345: #line 1607 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "4349:  }",
          "4350:  return T_FUNC_C;",
          "4351: }",
          "4353: yy347:",
          "4354:   YYDEBUG(347, *YYCURSOR);",
          "4355:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4352: #line 4353 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4355: #line 4356 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "4369:   }",
          "4370:   YYDEBUG(351, *YYCURSOR);",
          "4371:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4373:   {",
          "4374:  zend_string *filename = zend_get_compiled_filename(TSRMLS_C);",
          "",
          "[Removed Lines]",
          "4372: #line 1651 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4375: #line 1654 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "4379:  ZVAL_STR(zendlval, STR_COPY(filename));",
          "4380:  return T_FILE;",
          "4381: }",
          "4383: yy352:",
          "4384:   YYDEBUG(352, *YYCURSOR);",
          "4385:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4382: #line 4383 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4385: #line 4386 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "4409:   }",
          "4410:   YYDEBUG(358, *YYCURSOR);",
          "4411:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4413:   {",
          "4414:  zend_class_entry *ce = CG(active_class_entry);",
          "4415:  if (ce && ce->name && ZEND_ACC_TRAIT == (ce->ce_flags & ZEND_ACC_TRAIT)) {",
          "",
          "[Removed Lines]",
          "4412: #line 1594 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4415: #line 1597 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "4419:  }",
          "4420:  return T_TRAIT_C;",
          "4421: }",
          "4423: yy359:",
          "4424:   YYDEBUG(359, *YYCURSOR);",
          "4425:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4422: #line 4423 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4425: #line 4426 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "4449:   }",
          "4450:   YYDEBUG(365, *YYCURSOR);",
          "4451:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4453:   {",
          "4454:  zend_class_entry *ce = CG(active_class_entry);",
          "4455:  if (ce && ZEND_ACC_TRAIT == (ce->ce_flags & ZEND_ACC_TRAIT)) {",
          "",
          "[Removed Lines]",
          "4452: #line 1577 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4455: #line 1580 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "4466:  }",
          "4467:  return T_CLASS_C;",
          "4468: }",
          "4470: yy366:",
          "4471:   YYDEBUG(366, *YYCURSOR);",
          "4472:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4469: #line 4470 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4472: #line 4473 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "4528:   }",
          "4529:   YYDEBUG(378, *YYCURSOR);",
          "4530:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4532:   {",
          "4533:  return T_HALT_COMPILER;",
          "4534: }",
          "4536: yy379:",
          "4537:   YYDEBUG(379, *YYCURSOR);",
          "4538:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4531: #line 1295 \"Zend/zend_language_scanner.l\"",
          "4535: #line 4536 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4534: #line 1298 \"Zend/zend_language_scanner.l\"",
          "4538: #line 4539 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "4552:   }",
          "4553:   YYDEBUG(382, *YYCURSOR);",
          "4554:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4556:   {",
          "4557:  return T_USE;",
          "4558: }",
          "4560: yy383:",
          "4561:   YYDEBUG(383, *YYCURSOR);",
          "4562:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4555: #line 1275 \"Zend/zend_language_scanner.l\"",
          "4559: #line 4560 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4558: #line 1278 \"Zend/zend_language_scanner.l\"",
          "4562: #line 4563 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "4575:   }",
          "4576:   YYDEBUG(386, *YYCURSOR);",
          "4577:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4579:   {",
          "4580:  return T_UNSET;",
          "4581: }",
          "4583: yy387:",
          "4584:   YYDEBUG(387, *YYCURSOR);",
          "4585:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4578: #line 1323 \"Zend/zend_language_scanner.l\"",
          "4582: #line 4583 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4581: #line 1326 \"Zend/zend_language_scanner.l\"",
          "4585: #line 4586 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "4751:   ++YYCURSOR;",
          "4752:   YYDEBUG(404, *YYCURSOR);",
          "4753:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4755:   {",
          "4756:  return T_INT_CAST;",
          "4757: }",
          "4759: yy405:",
          "4760:   YYDEBUG(405, *YYCURSOR);",
          "4761:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4754: #line 1223 \"Zend/zend_language_scanner.l\"",
          "4758: #line 4759 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4757: #line 1226 \"Zend/zend_language_scanner.l\"",
          "4761: #line 4762 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "4799:   ++YYCURSOR;",
          "4800:   YYDEBUG(413, *YYCURSOR);",
          "4801:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4803:   {",
          "4804:  return T_DOUBLE_CAST;",
          "4805: }",
          "4807: yy414:",
          "4808:   YYDEBUG(414, *YYCURSOR);",
          "4809:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4802: #line 1227 \"Zend/zend_language_scanner.l\"",
          "4806: #line 4807 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4805: #line 1230 \"Zend/zend_language_scanner.l\"",
          "4809: #line 4810 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "4873:   ++YYCURSOR;",
          "4874:   YYDEBUG(427, *YYCURSOR);",
          "4875:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4877:   {",
          "4878:  return T_STRING_CAST;",
          "4879: }",
          "4881: yy428:",
          "4882:   YYDEBUG(428, *YYCURSOR);",
          "4883:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4876: #line 1231 \"Zend/zend_language_scanner.l\"",
          "4880: #line 4881 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4879: #line 1234 \"Zend/zend_language_scanner.l\"",
          "4883: #line 4884 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "4910:   ++YYCURSOR;",
          "4911:   YYDEBUG(434, *YYCURSOR);",
          "4912:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4914:   {",
          "4915:  return T_ARRAY_CAST;",
          "4916: }",
          "4918: yy435:",
          "4919:   YYDEBUG(435, *YYCURSOR);",
          "4920:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4913: #line 1235 \"Zend/zend_language_scanner.l\"",
          "4917: #line 4918 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4916: #line 1238 \"Zend/zend_language_scanner.l\"",
          "4920: #line 4921 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "4952:   ++YYCURSOR;",
          "4953:   YYDEBUG(442, *YYCURSOR);",
          "4954:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4956:   {",
          "4957:  return T_OBJECT_CAST;",
          "4958: }",
          "4960: yy443:",
          "4961:   YYDEBUG(443, *YYCURSOR);",
          "4962:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4955: #line 1239 \"Zend/zend_language_scanner.l\"",
          "4959: #line 4960 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4958: #line 1242 \"Zend/zend_language_scanner.l\"",
          "4962: #line 4963 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "4997:   ++YYCURSOR;",
          "4998:   YYDEBUG(450, *YYCURSOR);",
          "4999:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5001:   {",
          "5002:  return T_BOOL_CAST;",
          "5003: }",
          "5005: yy451:",
          "5006:   YYDEBUG(451, *YYCURSOR);",
          "5007:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5000: #line 1243 \"Zend/zend_language_scanner.l\"",
          "5004: #line 5005 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5003: #line 1246 \"Zend/zend_language_scanner.l\"",
          "5007: #line 5008 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "5061:   ++YYCURSOR;",
          "5062:   YYDEBUG(462, *YYCURSOR);",
          "5063:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5065:   {",
          "5066:  return T_UNSET_CAST;",
          "5067: }",
          "5069: yy463:",
          "5070:   YYDEBUG(463, *YYCURSOR);",
          "5071:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5064: #line 1247 \"Zend/zend_language_scanner.l\"",
          "5068: #line 5069 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5067: #line 1250 \"Zend/zend_language_scanner.l\"",
          "5071: #line 5072 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "5079:   }",
          "5080:   YYDEBUG(465, *YYCURSOR);",
          "5081:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5083:   {",
          "5084:  return T_VAR;",
          "5085: }",
          "5087: yy466:",
          "5088:   YYDEBUG(466, *YYCURSOR);",
          "5089:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5082: #line 1219 \"Zend/zend_language_scanner.l\"",
          "5086: #line 5087 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5085: #line 1222 \"Zend/zend_language_scanner.l\"",
          "5089: #line 5090 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "5103:   }",
          "5104:   YYDEBUG(469, *YYCURSOR);",
          "5105:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5107:   {",
          "5108:  return T_NEW;",
          "5109: }",
          "5111: yy470:",
          "5112:   YYDEBUG(470, *YYCURSOR);",
          "5113:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5106: #line 1211 \"Zend/zend_language_scanner.l\"",
          "5110: #line 5111 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5109: #line 1214 \"Zend/zend_language_scanner.l\"",
          "5113: #line 5114 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "5146:   }",
          "5147:   YYDEBUG(477, *YYCURSOR);",
          "5148:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5150:   {",
          "5151:  return T_NAMESPACE;",
          "5152: }",
          "5154: yy478:",
          "5155:   YYDEBUG(478, *YYCURSOR);",
          "5156:   yyaccept = 3;",
          "",
          "[Removed Lines]",
          "5149: #line 1271 \"Zend/zend_language_scanner.l\"",
          "5153: #line 5154 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5152: #line 1274 \"Zend/zend_language_scanner.l\"",
          "5156: #line 5157 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "5172:   ++YYCURSOR;",
          "5173:   YYDEBUG(481, *YYCURSOR);",
          "5174:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5176:   {",
          "5177:  return T_CONCAT_EQUAL;",
          "5178: }",
          "5180: yy482:",
          "5181:   YYDEBUG(482, *YYCURSOR);",
          "5182:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5175: #line 1391 \"Zend/zend_language_scanner.l\"",
          "5179: #line 5180 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5178: #line 1394 \"Zend/zend_language_scanner.l\"",
          "5182: #line 5183 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "5185:   ++YYCURSOR;",
          "5186:   YYDEBUG(484, *YYCURSOR);",
          "5187:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5189:   {",
          "5190:  return T_ELLIPSIS;",
          "5191: }",
          "5193: yy485:",
          "5194:   YYDEBUG(485, *YYCURSOR);",
          "5195:   ++YYCURSOR;",
          "5196:   YYDEBUG(486, *YYCURSOR);",
          "5197:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5199:   {",
          "5200:  return T_PAAMAYIM_NEKUDOTAYIM;",
          "5201: }",
          "5203: yy487:",
          "5204:   YYDEBUG(487, *YYCURSOR);",
          "5205:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5188: #line 1207 \"Zend/zend_language_scanner.l\"",
          "5192: #line 5193 \"Zend/zend_language_scanner.c\"",
          "5198: #line 1199 \"Zend/zend_language_scanner.l\"",
          "5202: #line 5203 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5191: #line 1210 \"Zend/zend_language_scanner.l\"",
          "5195: #line 5196 \"Zend/zend_language_scanner.c\"",
          "5201: #line 1202 \"Zend/zend_language_scanner.l\"",
          "5205: #line 5206 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "5221:   ++YYCURSOR;",
          "5222:   YYDEBUG(490, *YYCURSOR);",
          "5223:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5225:   {",
          "5226:  return T_MINUS_EQUAL;",
          "5227: }",
          "5229: yy491:",
          "5230:   YYDEBUG(491, *YYCURSOR);",
          "5231:   ++YYCURSOR;",
          "5232:   YYDEBUG(492, *YYCURSOR);",
          "5233:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5235:   {",
          "5236:  return T_DEC;",
          "5237: }",
          "5239: yy493:",
          "5240:   YYDEBUG(493, *YYCURSOR);",
          "5241:   ++YYCURSOR;",
          "5242:   YYDEBUG(494, *YYCURSOR);",
          "5243:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5245:   {",
          "5246:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "5247:  return T_OBJECT_OPERATOR;",
          "5248: }",
          "5250: yy495:",
          "5251:   YYDEBUG(495, *YYCURSOR);",
          "5252:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5224: #line 1379 \"Zend/zend_language_scanner.l\"",
          "5228: #line 5229 \"Zend/zend_language_scanner.c\"",
          "5234: #line 1347 \"Zend/zend_language_scanner.l\"",
          "5238: #line 5239 \"Zend/zend_language_scanner.c\"",
          "5244: #line 1171 \"Zend/zend_language_scanner.l\"",
          "5249: #line 5250 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5227: #line 1382 \"Zend/zend_language_scanner.l\"",
          "5231: #line 5232 \"Zend/zend_language_scanner.c\"",
          "5237: #line 1350 \"Zend/zend_language_scanner.l\"",
          "5241: #line 5242 \"Zend/zend_language_scanner.c\"",
          "5247: #line 1174 \"Zend/zend_language_scanner.l\"",
          "5252: #line 5253 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "5291:   }",
          "5292:   YYDEBUG(501, *YYCURSOR);",
          "5293:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5295:   {",
          "5296:  return T_PUBLIC;",
          "5297: }",
          "5299: yy502:",
          "5300:   YYDEBUG(502, *YYCURSOR);",
          "5301:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5294: #line 1319 \"Zend/zend_language_scanner.l\"",
          "5298: #line 5299 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5297: #line 1322 \"Zend/zend_language_scanner.l\"",
          "5301: #line 5302 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "5350:   }",
          "5351:   YYDEBUG(510, *YYCURSOR);",
          "5352:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5354:   {",
          "5355:  return T_PROTECTED;",
          "5356: }",
          "5358: yy511:",
          "5359:   YYDEBUG(511, *YYCURSOR);",
          "5360:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5353: #line 1315 \"Zend/zend_language_scanner.l\"",
          "5357: #line 5358 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5356: #line 1318 \"Zend/zend_language_scanner.l\"",
          "5360: #line 5361 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "5384:   }",
          "5385:   YYDEBUG(516, *YYCURSOR);",
          "5386:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5388:   {",
          "5389:  return T_PRIVATE;",
          "5390: }",
          "5392: yy517:",
          "5393:   YYDEBUG(517, *YYCURSOR);",
          "5394:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5387: #line 1311 \"Zend/zend_language_scanner.l\"",
          "5391: #line 5392 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5390: #line 1314 \"Zend/zend_language_scanner.l\"",
          "5394: #line 5395 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "5397:   }",
          "5398:   YYDEBUG(518, *YYCURSOR);",
          "5399:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5401:   {",
          "5402:  return T_PRINT;",
          "5403: }",
          "5405: yy519:",
          "5406:   YYDEBUG(519, *YYCURSOR);",
          "5407:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5400: #line 1147 \"Zend/zend_language_scanner.l\"",
          "5404: #line 5405 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5403: #line 1150 \"Zend/zend_language_scanner.l\"",
          "5407: #line 5408 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "5426:   }",
          "5427:   YYDEBUG(523, *YYCURSOR);",
          "5428:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5430:   {",
          "5431:  return T_GOTO;",
          "5432: }",
          "5434: yy524:",
          "5435:   YYDEBUG(524, *YYCURSOR);",
          "5436:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5429: #line 1139 \"Zend/zend_language_scanner.l\"",
          "5433: #line 5434 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5432: #line 1142 \"Zend/zend_language_scanner.l\"",
          "5436: #line 5437 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "5454:   }",
          "5455:   YYDEBUG(528, *YYCURSOR);",
          "5456:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5458:   {",
          "5459:  return T_GLOBAL;",
          "5460: }",
          "5462: yy529:",
          "5463:   YYDEBUG(529, *YYCURSOR);",
          "5464:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5457: #line 1283 \"Zend/zend_language_scanner.l\"",
          "5461: #line 5462 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5460: #line 1286 \"Zend/zend_language_scanner.l\"",
          "5464: #line 5465 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "5495:   }",
          "5496:   YYDEBUG(536, *YYCURSOR);",
          "5497:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5499:   {",
          "5500:  return T_BREAK;",
          "5501: }",
          "5503: yy537:",
          "5504:   YYDEBUG(537, *YYCURSOR);",
          "5505:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5498: #line 1131 \"Zend/zend_language_scanner.l\"",
          "5502: #line 5503 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5501: #line 1134 \"Zend/zend_language_scanner.l\"",
          "5505: #line 5506 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "5539:   }",
          "5540:   YYDEBUG(544, *YYCURSOR);",
          "5541:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5543:   {",
          "5544:  return T_SWITCH;",
          "5545: }",
          "5547: yy545:",
          "5548:   YYDEBUG(545, *YYCURSOR);",
          "5549:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5542: #line 1115 \"Zend/zend_language_scanner.l\"",
          "5546: #line 5547 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5545: #line 1118 \"Zend/zend_language_scanner.l\"",
          "5549: #line 5550 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "5567:   }",
          "5568:   YYDEBUG(549, *YYCURSOR);",
          "5569:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5571:   {",
          "5572:  return T_STATIC;",
          "5573: }",
          "5575: yy550:",
          "5576:   YYDEBUG(550, *YYCURSOR);",
          "5577:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5570: #line 1299 \"Zend/zend_language_scanner.l\"",
          "5574: #line 5575 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5573: #line 1302 \"Zend/zend_language_scanner.l\"",
          "5577: #line 5578 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "5598:   }",
          "5599:   YYDEBUG(554, *YYCURSOR);",
          "5600:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5602:   {",
          "5603:  return T_AS;",
          "5604: }",
          "5606: yy555:",
          "5607:   YYDEBUG(555, *YYCURSOR);",
          "5608:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5601: #line 1111 \"Zend/zend_language_scanner.l\"",
          "5605: #line 5606 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5604: #line 1114 \"Zend/zend_language_scanner.l\"",
          "5608: #line 5609 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "5621:   }",
          "5622:   YYDEBUG(558, *YYCURSOR);",
          "5623:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5625:   {",
          "5626:  return T_ARRAY;",
          "5627: }",
          "5629: yy559:",
          "5630:   YYDEBUG(559, *YYCURSOR);",
          "5631:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5624: #line 1335 \"Zend/zend_language_scanner.l\"",
          "5628: #line 5629 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5627: #line 1338 \"Zend/zend_language_scanner.l\"",
          "5631: #line 5632 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "5634:   }",
          "5635:   YYDEBUG(560, *YYCURSOR);",
          "5636:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5638:   {",
          "5639:  return T_LOGICAL_AND;",
          "5640: }",
          "5642: yy561:",
          "5643:   YYDEBUG(561, *YYCURSOR);",
          "5644:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5637: #line 1431 \"Zend/zend_language_scanner.l\"",
          "5641: #line 5642 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5640: #line 1434 \"Zend/zend_language_scanner.l\"",
          "5644: #line 5645 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "5672:   }",
          "5673:   YYDEBUG(567, *YYCURSOR);",
          "5674:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5676:   {",
          "5677:  return T_ABSTRACT;",
          "5678: }",
          "5680: yy568:",
          "5681:   YYDEBUG(568, *YYCURSOR);",
          "5682:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5675: #line 1303 \"Zend/zend_language_scanner.l\"",
          "5679: #line 5680 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5678: #line 1306 \"Zend/zend_language_scanner.l\"",
          "5682: #line 5683 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "5700:   }",
          "5701:   YYDEBUG(572, *YYCURSOR);",
          "5702:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5704:   {",
          "5705:  return T_WHILE;",
          "5706: }",
          "5708: yy573:",
          "5709:   YYDEBUG(573, *YYCURSOR);",
          "5710:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5703: #line 1071 \"Zend/zend_language_scanner.l\"",
          "5707: #line 5708 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5706: #line 1074 \"Zend/zend_language_scanner.l\"",
          "5710: #line 5711 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 116 ---",
          "[Context before]",
          "5713:   }",
          "5714:   YYDEBUG(574, *YYCURSOR);",
          "5715:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5717:   {",
          "5718:  return T_IF;",
          "5719: }",
          "5721: yy575:",
          "5722:   YYDEBUG(575, *YYCURSOR);",
          "5723:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5716: #line 1055 \"Zend/zend_language_scanner.l\"",
          "5720: #line 5721 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5719: #line 1058 \"Zend/zend_language_scanner.l\"",
          "5723: #line 5724 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 117 ---",
          "[Context before]",
          "5769:   }",
          "5770:   YYDEBUG(581, *YYCURSOR);",
          "5771:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5773:   {",
          "5774:  return T_ISSET;",
          "5775: }",
          "5777: yy582:",
          "5778:   YYDEBUG(582, *YYCURSOR);",
          "5779:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5772: #line 1287 \"Zend/zend_language_scanner.l\"",
          "5776: #line 5777 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5775: #line 1290 \"Zend/zend_language_scanner.l\"",
          "5779: #line 5780 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 118 ---",
          "[Context before]",
          "5827: yy589:",
          "5828:   YYDEBUG(589, *YYCURSOR);",
          "5829:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5831:   {",
          "5832:  return T_INCLUDE;",
          "5833: }",
          "5835: yy590:",
          "5836:   YYDEBUG(590, *YYCURSOR);",
          "5837:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5830: #line 1255 \"Zend/zend_language_scanner.l\"",
          "5834: #line 5835 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5833: #line 1258 \"Zend/zend_language_scanner.l\"",
          "5837: #line 5838 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 119 ---",
          "[Context before]",
          "5860:   }",
          "5861:   YYDEBUG(595, *YYCURSOR);",
          "5862:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5864:   {",
          "5865:  return T_INCLUDE_ONCE;",
          "5866: }",
          "5868: yy596:",
          "5869:   YYDEBUG(596, *YYCURSOR);",
          "5870:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5863: #line 1259 \"Zend/zend_language_scanner.l\"",
          "5867: #line 5868 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5866: #line 1262 \"Zend/zend_language_scanner.l\"",
          "5870: #line 5871 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 120 ---",
          "[Context before]",
          "5898:   }",
          "5899:   YYDEBUG(602, *YYCURSOR);",
          "5900:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5902:   {",
          "5903:  return T_INTERFACE;",
          "5904: }",
          "5906: yy603:",
          "5907:   YYDEBUG(603, *YYCURSOR);",
          "5908:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5901: #line 1155 \"Zend/zend_language_scanner.l\"",
          "5905: #line 5906 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5904: #line 1158 \"Zend/zend_language_scanner.l\"",
          "5908: #line 5909 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 121 ---",
          "[Context before]",
          "5952:   }",
          "5953:   YYDEBUG(610, *YYCURSOR);",
          "5954:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5956:   {",
          "5957:         return T_INSTEADOF;",
          "5958: }",
          "5960: yy611:",
          "5961:   YYDEBUG(611, *YYCURSOR);",
          "5962:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5955: #line 1279 \"Zend/zend_language_scanner.l\"",
          "5959: #line 5960 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5958: #line 1282 \"Zend/zend_language_scanner.l\"",
          "5962: #line 5963 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 122 ---",
          "[Context before]",
          "5985:   }",
          "5986:   YYDEBUG(616, *YYCURSOR);",
          "5987:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5989:   {",
          "5990:  return T_INSTANCEOF;",
          "5991: }",
          "5993: yy617:",
          "5994:   YYDEBUG(617, *YYCURSOR);",
          "5995:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5988: #line 1107 \"Zend/zend_language_scanner.l\"",
          "5992: #line 5993 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5991: #line 1110 \"Zend/zend_language_scanner.l\"",
          "5995: #line 5996 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 123 ---",
          "[Context before]",
          "6033:   }",
          "6034:   YYDEBUG(625, *YYCURSOR);",
          "6035:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6037:   {",
          "6038:  return T_IMPLEMENTS;",
          "6039: }",
          "6041: yy626:",
          "6042:   YYDEBUG(626, *YYCURSOR);",
          "6043:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6036: #line 1167 \"Zend/zend_language_scanner.l\"",
          "6040: #line 6041 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6039: #line 1170 \"Zend/zend_language_scanner.l\"",
          "6043: #line 6044 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 124 ---",
          "[Context before]",
          "6065:   }",
          "6066:   YYDEBUG(629, *YYCURSOR);",
          "6067:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6069:   {",
          "6070:  return T_TRY;",
          "6071: }",
          "6073: yy630:",
          "6074:   YYDEBUG(630, *YYCURSOR);",
          "6075:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6068: #line 1039 \"Zend/zend_language_scanner.l\"",
          "6072: #line 6073 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6071: #line 1042 \"Zend/zend_language_scanner.l\"",
          "6075: #line 6076 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 125 ---",
          "[Context before]",
          "6088:   }",
          "6089:   YYDEBUG(633, *YYCURSOR);",
          "6090:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6092:   {",
          "6093:  return T_TRAIT;",
          "6094: }",
          "6096: yy634:",
          "6097:   YYDEBUG(634, *YYCURSOR);",
          "6098:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6091: #line 1159 \"Zend/zend_language_scanner.l\"",
          "6095: #line 6096 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6094: #line 1162 \"Zend/zend_language_scanner.l\"",
          "6098: #line 6099 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 126 ---",
          "[Context before]",
          "6111:   }",
          "6112:   YYDEBUG(637, *YYCURSOR);",
          "6113:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6115:   {",
          "6116:  return T_THROW;",
          "6117: }",
          "6119: yy638:",
          "6120:   YYDEBUG(638, *YYCURSOR);",
          "6121:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6114: #line 1051 \"Zend/zend_language_scanner.l\"",
          "6118: #line 6119 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6117: #line 1054 \"Zend/zend_language_scanner.l\"",
          "6121: #line 6122 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 127 ---",
          "[Context before]",
          "6139:   }",
          "6140:   YYDEBUG(642, *YYCURSOR);",
          "6141:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6143:   {",
          "6144:  return T_YIELD;",
          "6145: }",
          "6147: yy643:",
          "6148:   YYDEBUG(643, *YYCURSOR);",
          "6149:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6142: #line 1035 \"Zend/zend_language_scanner.l\"",
          "6146: #line 6147 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6145: #line 1038 \"Zend/zend_language_scanner.l\"",
          "6149: #line 6150 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 128 ---",
          "[Context before]",
          "6204: yy650:",
          "6205:   YYDEBUG(650, *YYCURSOR);",
          "6206:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6208:   {",
          "6209:  return T_REQUIRE;",
          "6210: }",
          "6212: yy651:",
          "6213:   YYDEBUG(651, *YYCURSOR);",
          "6214:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6207: #line 1263 \"Zend/zend_language_scanner.l\"",
          "6211: #line 6212 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6210: #line 1266 \"Zend/zend_language_scanner.l\"",
          "6214: #line 6215 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 129 ---",
          "[Context before]",
          "6237:   }",
          "6238:   YYDEBUG(656, *YYCURSOR);",
          "6239:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6241:   {",
          "6242:  return T_REQUIRE_ONCE;",
          "6243: }",
          "6245: yy657:",
          "6246:   YYDEBUG(657, *YYCURSOR);",
          "6247:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6240: #line 1267 \"Zend/zend_language_scanner.l\"",
          "6244: #line 6245 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6243: #line 1270 \"Zend/zend_language_scanner.l\"",
          "6247: #line 6248 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 130 ---",
          "[Context before]",
          "6260:   }",
          "6261:   YYDEBUG(660, *YYCURSOR);",
          "6262:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6264:   {",
          "6265:  return T_RETURN;",
          "6266: }",
          "6268: yy661:",
          "6269:   YYDEBUG(661, *YYCURSOR);",
          "6270:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6263: #line 1031 \"Zend/zend_language_scanner.l\"",
          "6267: #line 6268 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6266: #line 1034 \"Zend/zend_language_scanner.l\"",
          "6270: #line 6271 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 131 ---",
          "[Context before]",
          "6354:   }",
          "6355:   YYDEBUG(671, *YYCURSOR);",
          "6356:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6358:   {",
          "6359:  return T_CONTINUE;",
          "6360: }",
          "6362: yy672:",
          "6363:   YYDEBUG(672, *YYCURSOR);",
          "6364:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6357: #line 1135 \"Zend/zend_language_scanner.l\"",
          "6361: #line 6362 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6360: #line 1138 \"Zend/zend_language_scanner.l\"",
          "6364: #line 6365 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 132 ---",
          "[Context before]",
          "6367:   }",
          "6368:   YYDEBUG(673, *YYCURSOR);",
          "6369:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6371:   {",
          "6372:  return T_CONST;",
          "6373: }",
          "6375: yy674:",
          "6376:   YYDEBUG(674, *YYCURSOR);",
          "6377:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6370: #line 1027 \"Zend/zend_language_scanner.l\"",
          "6374: #line 6375 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6373: #line 1030 \"Zend/zend_language_scanner.l\"",
          "6377: #line 6378 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 133 ---",
          "[Context before]",
          "6396:   }",
          "6397:   YYDEBUG(678, *YYCURSOR);",
          "6398:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6400:   {",
          "6401:  return T_CLONE;",
          "6402: }",
          "6404: yy679:",
          "6405:   YYDEBUG(679, *YYCURSOR);",
          "6406:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6399: #line 1215 \"Zend/zend_language_scanner.l\"",
          "6403: #line 6404 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6402: #line 1218 \"Zend/zend_language_scanner.l\"",
          "6406: #line 6407 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 134 ---",
          "[Context before]",
          "6414:   }",
          "6415:   YYDEBUG(681, *YYCURSOR);",
          "6416:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6418:   {",
          "6419:  return T_CLASS;",
          "6420: }",
          "6422: yy682:",
          "6423:   YYDEBUG(682, *YYCURSOR);",
          "6424:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6417: #line 1151 \"Zend/zend_language_scanner.l\"",
          "6421: #line 6422 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6420: #line 1154 \"Zend/zend_language_scanner.l\"",
          "6424: #line 6425 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 135 ---",
          "[Context before]",
          "6464:   }",
          "6465:   YYDEBUG(690, *YYCURSOR);",
          "6466:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6468:   {",
          "6469:  return T_CALLABLE;",
          "6470: }",
          "6472: yy691:",
          "6473:   YYDEBUG(691, *YYCURSOR);",
          "6474:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6467: #line 1339 \"Zend/zend_language_scanner.l\"",
          "6471: #line 6472 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6470: #line 1342 \"Zend/zend_language_scanner.l\"",
          "6474: #line 6475 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 136 ---",
          "[Context before]",
          "6477:   }",
          "6478:   YYDEBUG(692, *YYCURSOR);",
          "6479:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6481:   {",
          "6482:  return T_CASE;",
          "6483: }",
          "6485: yy693:",
          "6486:   YYDEBUG(693, *YYCURSOR);",
          "6487:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6480: #line 1123 \"Zend/zend_language_scanner.l\"",
          "6484: #line 6485 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6483: #line 1126 \"Zend/zend_language_scanner.l\"",
          "6487: #line 6488 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 137 ---",
          "[Context before]",
          "6495:   }",
          "6496:   YYDEBUG(695, *YYCURSOR);",
          "6497:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6499:   {",
          "6500:  return T_CATCH;",
          "6501: }",
          "6503: yy696:",
          "6504:   YYDEBUG(696, *YYCURSOR);",
          "6505:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6498: #line 1043 \"Zend/zend_language_scanner.l\"",
          "6502: #line 6503 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6501: #line 1046 \"Zend/zend_language_scanner.l\"",
          "6505: #line 6506 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 138 ---",
          "[Context before]",
          "6550:   }",
          "6551:   YYDEBUG(705, *YYCURSOR);",
          "6552:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6554:   {",
          "6555:  return T_FUNCTION;",
          "6556: }",
          "6558: yy706:",
          "6559:   YYDEBUG(706, *YYCURSOR);",
          "6560:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6553: #line 1023 \"Zend/zend_language_scanner.l\"",
          "6557: #line 6558 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6556: #line 1026 \"Zend/zend_language_scanner.l\"",
          "6560: #line 6561 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 139 ---",
          "[Context before]",
          "6578: yy707:",
          "6579:   YYDEBUG(707, *YYCURSOR);",
          "6580:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6582:   {",
          "6583:  return T_FOR;",
          "6584: }",
          "6586: yy708:",
          "6587:   YYDEBUG(708, *YYCURSOR);",
          "6588:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6581: #line 1083 \"Zend/zend_language_scanner.l\"",
          "6585: #line 6586 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6584: #line 1086 \"Zend/zend_language_scanner.l\"",
          "6588: #line 6589 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 140 ---",
          "[Context before]",
          "6606:   }",
          "6607:   YYDEBUG(712, *YYCURSOR);",
          "6608:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6610:   {",
          "6611:  return T_FOREACH;",
          "6612: }",
          "6614: yy713:",
          "6615:   YYDEBUG(713, *YYCURSOR);",
          "6616:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6609: #line 1091 \"Zend/zend_language_scanner.l\"",
          "6613: #line 6614 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6612: #line 1094 \"Zend/zend_language_scanner.l\"",
          "6616: #line 6617 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 141 ---",
          "[Context before]",
          "6644: yy716:",
          "6645:   YYDEBUG(716, *YYCURSOR);",
          "6646:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6648:   {",
          "6649:  return T_FINAL;",
          "6650: }",
          "6652: yy717:",
          "6653:   YYDEBUG(717, *YYCURSOR);",
          "6654:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6647: #line 1307 \"Zend/zend_language_scanner.l\"",
          "6651: #line 6652 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6650: #line 1310 \"Zend/zend_language_scanner.l\"",
          "6654: #line 6655 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 142 ---",
          "[Context before]",
          "6662:   }",
          "6663:   YYDEBUG(719, *YYCURSOR);",
          "6664:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6666:   {",
          "6667:  return T_FINALLY;",
          "6668: }",
          "6670: yy720:",
          "6671:   YYDEBUG(720, *YYCURSOR);",
          "6672:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6665: #line 1047 \"Zend/zend_language_scanner.l\"",
          "6669: #line 6670 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6668: #line 1050 \"Zend/zend_language_scanner.l\"",
          "6672: #line 6673 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 143 ---",
          "[Context before]",
          "6697:   }",
          "6698:   YYDEBUG(723, *YYCURSOR);",
          "6699:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6701:   {",
          "6702:  return T_DO;",
          "6703: }",
          "6705: yy724:",
          "6706:   YYDEBUG(724, *YYCURSOR);",
          "6707:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6700: #line 1079 \"Zend/zend_language_scanner.l\"",
          "6704: #line 6705 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6703: #line 1082 \"Zend/zend_language_scanner.l\"",
          "6707: #line 6708 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 144 ---",
          "[Context before]",
          "6710:   }",
          "6711:   YYDEBUG(725, *YYCURSOR);",
          "6712:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6714:   {",
          "6715:  return T_EXIT;",
          "6716: }",
          "6718: yy726:",
          "6719:   YYDEBUG(726, *YYCURSOR);",
          "6720:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6713: #line 1019 \"Zend/zend_language_scanner.l\"",
          "6717: #line 6718 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6716: #line 1022 \"Zend/zend_language_scanner.l\"",
          "6720: #line 6721 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 145 ---",
          "[Context before]",
          "6749:   }",
          "6750:   YYDEBUG(732, *YYCURSOR);",
          "6751:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6753:   {",
          "6754:  return T_DEFAULT;",
          "6755: }",
          "6757: yy733:",
          "6758:   YYDEBUG(733, *YYCURSOR);",
          "6759:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6752: #line 1127 \"Zend/zend_language_scanner.l\"",
          "6756: #line 6757 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6755: #line 1130 \"Zend/zend_language_scanner.l\"",
          "6759: #line 6760 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 146 ---",
          "[Context before]",
          "6777:   }",
          "6778:   YYDEBUG(737, *YYCURSOR);",
          "6779:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6781:   {",
          "6782:  return T_DECLARE;",
          "6783: }",
          "6785: yy738:",
          "6786:   YYDEBUG(738, *YYCURSOR);",
          "6787:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6780: #line 1099 \"Zend/zend_language_scanner.l\"",
          "6784: #line 6785 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6783: #line 1102 \"Zend/zend_language_scanner.l\"",
          "6787: #line 6788 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 147 ---",
          "[Context before]",
          "6861:   }",
          "6862:   YYDEBUG(750, *YYCURSOR);",
          "6863:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6865:   {",
          "6866:  return T_EXTENDS;",
          "6867: }",
          "6869: yy751:",
          "6870:   YYDEBUG(751, *YYCURSOR);",
          "6871:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6864: #line 1163 \"Zend/zend_language_scanner.l\"",
          "6868: #line 6869 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6867: #line 1166 \"Zend/zend_language_scanner.l\"",
          "6871: #line 6872 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 148 ---",
          "[Context before]",
          "6874:   }",
          "6875:   YYDEBUG(752, *YYCURSOR);",
          "6876:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6878:   {",
          "6879:  return T_EXIT;",
          "6880: }",
          "6882: yy753:",
          "6883:   YYDEBUG(753, *YYCURSOR);",
          "6884:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6877: #line 1015 \"Zend/zend_language_scanner.l\"",
          "6881: #line 6882 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6880: #line 1018 \"Zend/zend_language_scanner.l\"",
          "6884: #line 6885 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 149 ---",
          "[Context before]",
          "6892:   }",
          "6893:   YYDEBUG(755, *YYCURSOR);",
          "6894:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6896:   {",
          "6897:  return T_EVAL;",
          "6898: }",
          "6900: yy756:",
          "6901:   YYDEBUG(756, *YYCURSOR);",
          "6902:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6895: #line 1251 \"Zend/zend_language_scanner.l\"",
          "6899: #line 6900 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6898: #line 1254 \"Zend/zend_language_scanner.l\"",
          "6902: #line 6903 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 150 ---",
          "[Context before]",
          "6966:   }",
          "6967:   YYDEBUG(766, *YYCURSOR);",
          "6968:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6970:   {",
          "6971:  return T_ENDWHILE;",
          "6972: }",
          "6974: yy767:",
          "6975:   YYDEBUG(767, *YYCURSOR);",
          "6976:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6969: #line 1075 \"Zend/zend_language_scanner.l\"",
          "6973: #line 6974 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6972: #line 1078 \"Zend/zend_language_scanner.l\"",
          "6976: #line 6977 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 151 ---",
          "[Context before]",
          "6999:   }",
          "7000:   YYDEBUG(772, *YYCURSOR);",
          "7001:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7003:   {",
          "7004:  return T_ENDSWITCH;",
          "7005: }",
          "7007: yy773:",
          "7008:   YYDEBUG(773, *YYCURSOR);",
          "7009:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7002: #line 1119 \"Zend/zend_language_scanner.l\"",
          "7006: #line 7007 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7005: #line 1122 \"Zend/zend_language_scanner.l\"",
          "7009: #line 7010 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 152 ---",
          "[Context before]",
          "7012:   }",
          "7013:   YYDEBUG(774, *YYCURSOR);",
          "7014:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7016:   {",
          "7017:  return T_ENDIF;",
          "7018: }",
          "7020: yy775:",
          "7021:   YYDEBUG(775, *YYCURSOR);",
          "7022:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7015: #line 1063 \"Zend/zend_language_scanner.l\"",
          "7019: #line 7020 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7018: #line 1066 \"Zend/zend_language_scanner.l\"",
          "7022: #line 7023 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 153 ---",
          "[Context before]",
          "7045: yy777:",
          "7046:   YYDEBUG(777, *YYCURSOR);",
          "7047:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7049:   {",
          "7050:  return T_ENDFOR;",
          "7051: }",
          "7053: yy778:",
          "7054:   YYDEBUG(778, *YYCURSOR);",
          "7055:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7048: #line 1087 \"Zend/zend_language_scanner.l\"",
          "7052: #line 7053 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7051: #line 1090 \"Zend/zend_language_scanner.l\"",
          "7055: #line 7056 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 154 ---",
          "[Context before]",
          "7073:   }",
          "7074:   YYDEBUG(782, *YYCURSOR);",
          "7075:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7077:   {",
          "7078:  return T_ENDFOREACH;",
          "7079: }",
          "7081: yy783:",
          "7082:   YYDEBUG(783, *YYCURSOR);",
          "7083:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7076: #line 1095 \"Zend/zend_language_scanner.l\"",
          "7080: #line 7081 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7079: #line 1098 \"Zend/zend_language_scanner.l\"",
          "7083: #line 7084 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 155 ---",
          "[Context before]",
          "7111:   }",
          "7112:   YYDEBUG(789, *YYCURSOR);",
          "7113:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7115:   {",
          "7116:  return T_ENDDECLARE;",
          "7117: }",
          "7119: yy790:",
          "7120:   YYDEBUG(790, *YYCURSOR);",
          "7121:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7114: #line 1103 \"Zend/zend_language_scanner.l\"",
          "7118: #line 7119 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7117: #line 1106 \"Zend/zend_language_scanner.l\"",
          "7121: #line 7122 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 156 ---",
          "[Context before]",
          "7134:   }",
          "7135:   YYDEBUG(793, *YYCURSOR);",
          "7136:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7138:   {",
          "7139:  return T_EMPTY;",
          "7140: }",
          "7142: yy794:",
          "7143:   YYDEBUG(794, *YYCURSOR);",
          "7144:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7137: #line 1291 \"Zend/zend_language_scanner.l\"",
          "7141: #line 7142 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7140: #line 1294 \"Zend/zend_language_scanner.l\"",
          "7144: #line 7145 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 157 ---",
          "[Context before]",
          "7167: yy796:",
          "7168:   YYDEBUG(796, *YYCURSOR);",
          "7169:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7171:   {",
          "7172:  return T_ELSE;",
          "7173: }",
          "7175: yy797:",
          "7176:   YYDEBUG(797, *YYCURSOR);",
          "7177:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7170: #line 1067 \"Zend/zend_language_scanner.l\"",
          "7174: #line 7175 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7173: #line 1070 \"Zend/zend_language_scanner.l\"",
          "7177: #line 7178 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 158 ---",
          "[Context before]",
          "7185:   }",
          "7186:   YYDEBUG(799, *YYCURSOR);",
          "7187:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7189:   {",
          "7190:  return T_ELSEIF;",
          "7191: }",
          "7193: yy800:",
          "7194:   YYDEBUG(800, *YYCURSOR);",
          "7195:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7188: #line 1059 \"Zend/zend_language_scanner.l\"",
          "7192: #line 7193 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7191: #line 1062 \"Zend/zend_language_scanner.l\"",
          "7195: #line 7196 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 159 ---",
          "[Context before]",
          "7203:   }",
          "7204:   YYDEBUG(802, *YYCURSOR);",
          "7205:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7207:   {",
          "7208:  return T_ECHO;",
          "7209: }",
          "7211:  }",
          "7213: yyc_ST_LOOKING_FOR_PROPERTY:",
          "",
          "[Removed Lines]",
          "7206: #line 1143 \"Zend/zend_language_scanner.l\"",
          "7210: #line 7211 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7209: #line 1146 \"Zend/zend_language_scanner.l\"",
          "7213: #line 7214 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 160 ---",
          "[Context before]",
          "7280: yy806:",
          "7281:   YYDEBUG(806, *YYCURSOR);",
          "7282:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7284:   {",
          "7287:  HANDLE_NEWLINES(yytext, yyleng);",
          "7288:  return T_WHITESPACE;",
          "7289: }",
          "7291: yy807:",
          "7292:   YYDEBUG(807, *YYCURSOR);",
          "7293:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7283: #line 1176 \"Zend/zend_language_scanner.l\"",
          "7290: #line 7291 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7286: #line 1179 \"Zend/zend_language_scanner.l\"",
          "7293: #line 7294 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 161 ---",
          "[Context before]",
          "7295: yy808:",
          "7296:   YYDEBUG(808, *YYCURSOR);",
          "7297:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7299:   {",
          "7300:  yyless(0);",
          "7301:  yy_pop_state(TSRMLS_C);",
          "7302:  goto restart;",
          "7303: }",
          "7305: yy809:",
          "7306:   YYDEBUG(809, *YYCURSOR);",
          "7307:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7298: #line 1193 \"Zend/zend_language_scanner.l\"",
          "7304: #line 7305 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7301: #line 1196 \"Zend/zend_language_scanner.l\"",
          "7307: #line 7308 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 162 ---",
          "[Context before]",
          "7310: yy810:",
          "7311:   YYDEBUG(810, *YYCURSOR);",
          "7312:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7314:   {",
          "7315:  yy_pop_state(TSRMLS_C);",
          "7316:  zend_copy_value(zendlval, yytext, yyleng);",
          "7317:  return T_STRING;",
          "7318: }",
          "7320: yy811:",
          "7321:   YYDEBUG(811, *YYCURSOR);",
          "7322:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7313: #line 1187 \"Zend/zend_language_scanner.l\"",
          "7319: #line 7320 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7316: #line 1190 \"Zend/zend_language_scanner.l\"",
          "7322: #line 7323 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 163 ---",
          "[Context before]",
          "7337:   ++YYCURSOR;",
          "7338:   YYDEBUG(815, *YYCURSOR);",
          "7339:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7341:   {",
          "7342:  return T_OBJECT_OPERATOR;",
          "7343: }",
          "7345: yy816:",
          "7346:   YYDEBUG(816, *YYCURSOR);",
          "7347:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7340: #line 1183 \"Zend/zend_language_scanner.l\"",
          "7344: #line 7345 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7343: #line 1186 \"Zend/zend_language_scanner.l\"",
          "7347: #line 7348 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 164 ---",
          "[Context before]",
          "7426: yy821:",
          "7427:   YYDEBUG(821, *YYCURSOR);",
          "7428:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7430:   {",
          "7431:  yyless(0);",
          "7432:  yy_pop_state(TSRMLS_C);",
          "7433:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7434:  goto restart;",
          "7435: }",
          "7437: yy822:",
          "7438:   YYDEBUG(822, *YYCURSOR);",
          "7439:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7429: #line 1482 \"Zend/zend_language_scanner.l\"",
          "7436: #line 7437 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7432: #line 1485 \"Zend/zend_language_scanner.l\"",
          "7439: #line 7440 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 165 ---",
          "[Context before]",
          "7458:   ++YYCURSOR;",
          "7459:   YYDEBUG(827, *YYCURSOR);",
          "7460:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7462:   {",
          "7463:  yyless(yyleng - 1);",
          "7464:  zend_copy_value(zendlval, yytext, yyleng);",
          "",
          "[Removed Lines]",
          "7461: #line 1473 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7464: #line 1476 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 166 ---",
          "[Context before]",
          "7466:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7467:  return T_STRING_VARNAME;",
          "7468: }",
          "7470:  }",
          "7472: yyc_ST_NOWDOC:",
          "",
          "[Removed Lines]",
          "7469: #line 7470 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7472: #line 7473 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 167 ---",
          "[Context before]",
          "7477:  ++YYCURSOR;",
          "7478:  YYDEBUG(831, *YYCURSOR);",
          "7479:  yyleng = YYCURSOR - SCNG(yy_text);",
          "7481:  {",
          "7482:  int newline = 0;",
          "",
          "[Removed Lines]",
          "7480: #line 2321 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7483: #line 2324 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 168 ---",
          "[Context before]",
          "7533:  HANDLE_NEWLINES(yytext, yyleng - newline);",
          "7534:  return T_ENCAPSED_AND_WHITESPACE;",
          "7535: }",
          "7538: yyc_ST_VAR_OFFSET:",
          "7539:  {",
          "",
          "[Removed Lines]",
          "7536: #line 7537 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7539: #line 7540 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 169 ---",
          "[Context before]",
          "7640: yy835:",
          "7641:   YYDEBUG(835, *YYCURSOR);",
          "7642:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7645:  if (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {",
          "7646:   ZVAL_LONG(zendlval, strtol(yytext, NULL, 10));",
          "",
          "[Removed Lines]",
          "7643: #line 1558 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7646: #line 1561 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 170 ---",
          "[Context before]",
          "7649:  }",
          "7650:  return T_NUM_STRING;",
          "7651: }",
          "7653: yy836:",
          "7654:   YYDEBUG(836, *YYCURSOR);",
          "7655:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7652: #line 7653 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7655: #line 7656 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 171 ---",
          "[Context before]",
          "7669: yy838:",
          "7670:   YYDEBUG(838, *YYCURSOR);",
          "7671:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7673:   {",
          "7675:  return yytext[0];",
          "7676: }",
          "7678: yy839:",
          "7679:   YYDEBUG(839, *YYCURSOR);",
          "7680:   ++YYCURSOR;",
          "7681:   YYDEBUG(840, *YYCURSOR);",
          "7682:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7684:   {",
          "7685:  yy_pop_state(TSRMLS_C);",
          "7686:  return ']';",
          "7687: }",
          "7689: yy841:",
          "7690:   YYDEBUG(841, *YYCURSOR);",
          "7691:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7672: #line 1853 \"Zend/zend_language_scanner.l\"",
          "7677: #line 7678 \"Zend/zend_language_scanner.c\"",
          "7683: #line 1848 \"Zend/zend_language_scanner.l\"",
          "7688: #line 7689 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7675: #line 1856 \"Zend/zend_language_scanner.l\"",
          "7680: #line 7681 \"Zend/zend_language_scanner.c\"",
          "7686: #line 1851 \"Zend/zend_language_scanner.l\"",
          "7691: #line 7692 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 172 ---",
          "[Context before]",
          "7695:   ++YYCURSOR;",
          "7696:   YYDEBUG(843, *YYCURSOR);",
          "7697:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7699:   {",
          "7701:  yyless(0);",
          "7702:  yy_pop_state(TSRMLS_C);",
          "7703:  return T_ENCAPSED_AND_WHITESPACE;",
          "7704: }",
          "7706: yy844:",
          "7707:   YYDEBUG(844, *YYCURSOR);",
          "7708:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7698: #line 1858 \"Zend/zend_language_scanner.l\"",
          "7705: #line 7706 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7701: #line 1861 \"Zend/zend_language_scanner.l\"",
          "7708: #line 7709 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 173 ---",
          "[Context before]",
          "7711: yy845:",
          "7712:   YYDEBUG(845, *YYCURSOR);",
          "7713:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7715:   {",
          "7716:  zend_copy_value(zendlval, yytext, yyleng);",
          "7717:  return T_STRING;",
          "7718: }",
          "7720: yy846:",
          "7721:   YYDEBUG(846, *YYCURSOR);",
          "7722:   ++YYCURSOR;",
          "7723:   YYDEBUG(847, *YYCURSOR);",
          "7724:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7726:   {",
          "7727:  if (YYCURSOR > YYLIMIT) {",
          "7728:   return 0;",
          "",
          "[Removed Lines]",
          "7714: #line 1865 \"Zend/zend_language_scanner.l\"",
          "7719: #line 7720 \"Zend/zend_language_scanner.c\"",
          "7725: #line 2378 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7717: #line 1868 \"Zend/zend_language_scanner.l\"",
          "7722: #line 7723 \"Zend/zend_language_scanner.c\"",
          "7728: #line 2381 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 174 ---",
          "[Context before]",
          "7731:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "7732:  goto restart;",
          "7733: }",
          "7735: yy848:",
          "7736:   YYDEBUG(848, *YYCURSOR);",
          "7737:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7734: #line 7735 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7737: #line 7738 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 175 ---",
          "[Context before]",
          "7767: yy852:",
          "7768:   YYDEBUG(852, *YYCURSOR);",
          "7769:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7771:   {",
          "7772:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "7773:  return T_VARIABLE;",
          "7774: }",
          "7776: yy853:",
          "7777:   YYDEBUG(853, *YYCURSOR);",
          "7778:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7770: #line 1843 \"Zend/zend_language_scanner.l\"",
          "7775: #line 7776 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7773: #line 1846 \"Zend/zend_language_scanner.l\"",
          "7778: #line 7779 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 176 ---",
          "[Context before]",
          "7812: yy860:",
          "7813:   YYDEBUG(860, *YYCURSOR);",
          "7814:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7817:  ZVAL_STRINGL(zendlval, yytext, yyleng);",
          "7818:  return T_NUM_STRING;",
          "7819: }",
          "7821: yy861:",
          "7822:   YYDEBUG(861, *YYCURSOR);",
          "7823:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7815: #line 1567 \"Zend/zend_language_scanner.l\"",
          "7820: #line 7821 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7818: #line 1570 \"Zend/zend_language_scanner.l\"",
          "7823: #line 7824 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 177 ---",
          "[Context before]",
          "7840:   goto yy860;",
          "7841:  }",
          "7842: }",
          "7845: }",
          "",
          "[Removed Lines]",
          "7843: #line 2387 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7846: #line 2390 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l": [
          "File: Zend/zend_language_scanner.l -> Zend/zend_language_scanner.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "981:  if (SCNG(output_filter)) {",
          "982:   size_t sz = 0;",
          "983:   s = Z_STRVAL_P(zendlval);",
          "987:  }",
          "988: }",
          "",
          "[Removed Lines]",
          "984:   SCNG(output_filter)((unsigned char **)&Z_STRVAL_P(zendlval), &sz, (unsigned char *)s, (size_t)Z_STRLEN_P(zendlval) TSRMLS_CC);",
          "985:   Z_STRLEN_P(zendlval) = sz;",
          "986:   efree(s);",
          "",
          "[Added Lines]",
          "983:   unsigned char *str;",
          "986:   SCNG(output_filter)(&str, &sz, (unsigned char *)s, (size_t)Z_STRLEN_P(zendlval) TSRMLS_CC);",
          "987:   zval_ptr_dtor(zendlval);",
          "988:   ZVAL_STRINGL(zendlval, str, sz);",
          "989:   efree(str);",
          "",
          "---------------"
        ],
        "Zend/zend_multibyte.c||Zend/zend_multibyte.c": [
          "File: Zend/zend_multibyte.c -> Zend/zend_multibyte.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:  {",
          "118:   zend_multibyte_set_script_encoding_by_string(value, strlen(value) TSRMLS_CC);",
          "119:  }",
          "120:  return SUCCESS;",
          "",
          "[Removed Lines]",
          "117:   const char *value = zend_ini_string(\"zend.script_encoding\", sizeof(\"zend.script_encoding\"), 0);",
          "",
          "[Added Lines]",
          "117:   const char *value = zend_ini_string(\"zend.script_encoding\", sizeof(\"zend.script_encoding\") - 1, 0);",
          "",
          "---------------"
        ],
        "ext/mbstring/mbstring.c||ext/mbstring/mbstring.c": [
          "File: ext/mbstring/mbstring.c -> ext/mbstring/mbstring.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2048:  if (track_vars_array != NULL) {",
          "2050:   zval_dtor(track_vars_array);",
          "2051:   array_init(track_vars_array);",
          "2052:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2050:   ZVAL_DEREF(track_vars_array);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3174:  if (newstr) {",
          "3177:  }",
          "3178:  RETURN_FALSE;",
          "3179: }",
          "",
          "[Removed Lines]",
          "3176:   RETURN_STRINGL(newstr, ret_len);",
          "",
          "[Added Lines]",
          "3177:   RETVAL_STRINGL(newstr, ret_len);",
          "3178:   efree(newstr);",
          "3179:   return;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3199:  if (newstr) {",
          "3202:  }",
          "3203:  RETURN_FALSE;",
          "3204: }",
          "",
          "[Removed Lines]",
          "3201:   RETURN_STRINGL(newstr, ret_len);",
          "",
          "[Added Lines]",
          "3204:   RETVAL_STRINGL(newstr, ret_len);",
          "3205:   efree(newstr);",
          "3206:   return;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3378:  if (ret != NULL) {",
          "3381:  } else {",
          "3382:   RETVAL_FALSE;",
          "3383:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3386:   efree(ret->val);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3403:  if (ret != NULL) {",
          "3406:  } else {",
          "3407:   RETVAL_FALSE;",
          "3408:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3412:   efree(ret->val);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4365:   if (MBSTRG(current_http_output_encoding)) {",
          "4366:    add_assoc_string(return_value, \"http_output\", (char *)MBSTRG(current_http_output_encoding)->name, 1);",
          "4367:   }",
          "4369:    add_assoc_string(return_value, \"http_output_conv_mimetypes\", name, 1);",
          "4370:   }",
          "4371:   add_assoc_long(return_value, \"func_overload\", MBSTRG(func_overload));",
          "",
          "[Removed Lines]",
          "4368:   if ((name = (char *)zend_ini_string(\"mbstring.http_output_conv_mimetypes\", sizeof(\"mbstring.http_output_conv_mimetypes\"), 0)) != NULL) {",
          "",
          "[Added Lines]",
          "4375:   if ((name = (char *)zend_ini_string(\"mbstring.http_output_conv_mimetypes\", sizeof(\"mbstring.http_output_conv_mimetypes\") - 1, 0)) != NULL) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4440:    RETVAL_STRING((char *)MBSTRG(current_http_output_encoding)->name);",
          "4441:   }",
          "4442:  } else if (!strcasecmp(\"http_output_conv_mimetypes\", typ)) {",
          "4444:    RETVAL_STRING(name);",
          "4445:   }",
          "4446:  } else if (!strcasecmp(\"func_overload\", typ)) {",
          "",
          "[Removed Lines]",
          "4443:   if ((name = (char *)zend_ini_string(\"mbstring.http_output_conv_mimetypes\", sizeof(\"mbstring.http_output_conv_mimetypes\"), 0)) != NULL) {",
          "",
          "[Added Lines]",
          "4450:   if ((name = (char *)zend_ini_string(\"mbstring.http_output_conv_mimetypes\", sizeof(\"mbstring.http_output_conv_mimetypes\") - 1, 0)) != NULL) {",
          "",
          "---------------"
        ],
        "ext/mbstring/php_mbregex.c||ext/mbstring/php_mbregex.c": [
          "File: ext/mbstring/php_mbregex.c -> ext/mbstring/php_mbregex.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "740:  match_len = 1;",
          "741:  str = string;",
          "742:  if (array != NULL) {",
          "744:   zval_dtor(array);",
          "745:   array_init(array);",
          "746:   for (i = 0; i < regs->num_regs; i++) {",
          "747:    beg = regs->beg[i];",
          "748:    end = regs->end[i];",
          "",
          "[Removed Lines]",
          "743:   match_len = regs->end[0] - regs->beg[0];",
          "",
          "[Added Lines]",
          "743:   ZVAL_DEREF(array);",
          "747:   match_len = regs->end[0] - regs->beg[0];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1011:  if (err <= -2) {",
          "1012:   smart_str_free(&out_buf);",
          "1013:   RETVAL_FALSE;",
          "1016:   RETVAL_STR(out_buf.s);",
          "1017:  }",
          "1018: }",
          "",
          "[Removed Lines]",
          "1014:  } else {",
          "1015:   smart_str_appendc(&out_buf, '\\0');",
          "",
          "[Added Lines]",
          "1016:  } else if (out_buf.s) {",
          "1017:   smart_str_0(&out_buf);",
          "1019:  } else {",
          "1020:   RETVAL_EMPTY_STRING();",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/bug26639.phpt||ext/mbstring/tests/bug26639.phpt": [
          "File: ext/mbstring/tests/bug26639.phpt -> ext/mbstring/tests/bug26639.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: unset($b);",
          "71: unset($c);",
          "72: ?>",
          "79:   [0]=>",
          "81: }",
          "83:   [0]=>",
          "85: }",
          "87:   [0]=>",
          "89: }",
          "91:   [0]=>",
          "93: }",
          "95:   [0]=>",
          "97: }",
          "99:   [0]=>",
          "101: }",
          "103:   [0]=>",
          "105: }",
          "107:   [0]=>",
          "109: }",
          "111:   [0]=>",
          "113:     [0]=>",
          "115:   }",
          "116: }",
          "118:   [0]=>",
          "120:     [0]=>",
          "122:   }",
          "123: }",
          "",
          "[Removed Lines]",
          "73: --EXPECT--",
          "74: string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(2)",
          "75: string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(2)",
          "76: string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(1)",
          "77: string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(1)",
          "78: array(1) refcount(2){",
          "80:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(2)",
          "82: array(1) refcount(2){",
          "84:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(1)",
          "86: array(1) refcount(2){",
          "88:   &string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(2)",
          "90: array(1) refcount(2){",
          "92:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(1)",
          "94: array(1) refcount(1){",
          "96:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(2)",
          "98: array(1) refcount(1){",
          "100:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(2)",
          "102: array(1) refcount(1){",
          "104:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(2)",
          "106: array(1) refcount(1){",
          "108:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(2)",
          "110: array(1) refcount(3){",
          "112:   array(1) refcount(1){",
          "114:     string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(1)",
          "117: array(1) refcount(2){",
          "119:   array(1) refcount(1){",
          "121:     string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(1)",
          "",
          "[Added Lines]",
          "73: --EXPECTF--",
          "74: string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "75: string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "76: string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "77: string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "78: array(1) refcount(%d){",
          "80:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "82: array(1) refcount(%d){",
          "84:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "86: array(1) refcount(%d){",
          "88:   &string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "90: array(1) refcount(%d){",
          "92:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "94: array(1) refcount(%d){",
          "96:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "98: array(1) refcount(%d){",
          "100:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "102: array(1) refcount(%d){",
          "104:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "106: array(1) refcount(%d){",
          "108:   string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "110: array(1) refcount(%d){",
          "112:   array(1) refcount(%d){",
          "114:     string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "117: array(1) refcount(%d){",
          "119:   array(1) refcount(%d){",
          "121:     string(10) \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\" refcount(%d)",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_http_output.phpt||ext/mbstring/tests/mb_http_output.phpt": [
          "File: ext/mbstring/tests/mb_http_output.phpt -> ext/mbstring/tests/mb_http_output.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: print \"$enc\\n\";",
          "51: $r = mb_http_output($t_ary);",
          "53: $enc = mb_http_output();",
          "54: print \"$enc\\n\";",
          "56: $r = mb_http_output($t_obj);",
          "58: $enc = mb_http_output();",
          "59: print \"$enc\\n\";",
          "",
          "[Removed Lines]",
          "52: ($r === FALSE) ? print \"OK_BAD_ARY_SET\\n\" : print \"NG_BAD_ARY_SET\\n\";",
          "57: ($r === FALSE) ? print \"OK_BAD_OBJ_SET\\n\" : print \"NG_BAD_OBJ_SET\\n\";",
          "",
          "[Added Lines]",
          "52: ($r === NULL) ? print \"OK_BAD_ARY_SET\\n\" : print \"NG_BAD_ARY_SET\\n\";",
          "57: ($r === NULL) ? print \"OK_BAD_OBJ_SET\\n\" : print \"NG_BAD_OBJ_SET\\n\";",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_strpos.phpt||ext/mbstring/tests/mb_strpos.phpt": [
          "File: ext/mbstring/tests/mb_strpos.phpt -> ext/mbstring/tests/mb_strpos.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: echo \"== INVALID PARAMETER TEST ==\\n\";",
          "105: $r = mb_strpos($euc_jp,'','EUC-JP');",
          "107: $r = mb_strpos($euc_jp, $t_ary, 'EUC-JP');",
          "109: $r = mb_strpos($euc_jp, $t_obj, 'EUC-JP');",
          "111: $r = mb_strpos($euc_jp, $t_obj, 'BAD_ENCODING');",
          "115: ?>",
          "",
          "[Removed Lines]",
          "106: ($r === FALSE) ? print(\"OK_NULL\\n\") : print(\"NG_NULL\\n\");",
          "108: ($r === FALSE) ? print(\"OK_ARRAY\\n\") : print(\"NG_ARRAY\\n\");",
          "110: ($r === FALSE) ? print(\"OK_OBJECT\\n\") : print(\"NG_OBJECT\\n\");",
          "112: ($r === FALSE) ? print(\"OK_BAD_ENCODING\\n\") : print(\"NG_BAD_ENCODING\\n\");",
          "",
          "[Added Lines]",
          "106: ($r === NULL) ? print(\"OK_NULL\\n\") : print(\"NG_NULL\\n\");",
          "108: ($r === NULL) ? print(\"OK_ARRAY\\n\") : print(\"NG_ARRAY\\n\");",
          "110: ($r === NULL) ? print(\"OK_OBJECT\\n\") : print(\"NG_OBJECT\\n\");",
          "112: ($r === NULL) ? print(\"OK_BAD_ENCODING\\n\") : print(\"NG_BAD_ENCODING\\n\");",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_strpos_error1.phpt||ext/mbstring/tests/mb_strpos_error1.phpt": [
          "File: ext/mbstring/tests/mb_strpos_error1.phpt -> ext/mbstring/tests/mb_strpos_error1.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: -- Testing mb_strpos() function with more than expected no. of arguments --",
          "43: Warning: mb_strpos() expects at most 4 parameters, 5 given in %s on line %d",
          "46: -- Testing mb_strpos() function with less than expected no. of arguments --",
          "48: Warning: mb_strpos() expects at least 2 parameters, 1 given in %s on line %d",
          "50: Done",
          "",
          "[Removed Lines]",
          "44: bool(false)",
          "49: bool(false)",
          "",
          "[Added Lines]",
          "44: NULL",
          "49: NULL",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_strpos_variation1.phpt||ext/mbstring/tests/mb_strpos_variation1.phpt": [
          "File: ext/mbstring/tests/mb_strpos_variation1.phpt -> ext/mbstring/tests/mb_strpos_variation1.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "178: -- Iteration 24 --",
          "180: Warning: mb_strpos() expects parameter 1 to be string, resource given in %s on line %d",
          "182: Done",
          "",
          "[Removed Lines]",
          "181: bool(false)",
          "",
          "[Added Lines]",
          "181: NULL",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_strpos_variation2.phpt||ext/mbstring/tests/mb_strpos_variation2.phpt": [
          "File: ext/mbstring/tests/mb_strpos_variation2.phpt -> ext/mbstring/tests/mb_strpos_variation2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "194: -- Iteration 24 --",
          "196: Warning: mb_strpos() expects parameter 2 to be string, resource given in %s on line %d",
          "198: Done",
          "",
          "[Removed Lines]",
          "197: bool(false)",
          "",
          "[Added Lines]",
          "197: NULL",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_strpos_variation3.phpt||ext/mbstring/tests/mb_strpos_variation3.phpt": [
          "File: ext/mbstring/tests/mb_strpos_variation3.phpt -> ext/mbstring/tests/mb_strpos_variation3.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "162: -- Iteration 16 --",
          "164: Warning: mb_strpos() expects parameter 3 to be long, string given in %s on line %d",
          "167: -- Iteration 17 --",
          "169: Warning: mb_strpos() expects parameter 3 to be long, string given in %s on line %d",
          "172: -- Iteration 18 --",
          "174: Warning: mb_strpos() expects parameter 3 to be long, string given in %s on line %d",
          "177: -- Iteration 19 --",
          "179: Warning: mb_strpos() expects parameter 3 to be long, string given in %s on line %d",
          "182: -- Iteration 20 --",
          "184: Warning: mb_strpos() expects parameter 3 to be long, string given in %s on line %d",
          "187: -- Iteration 21 --",
          "189: Warning: mb_strpos() expects parameter 3 to be long, object given in %s on line %d",
          "192: -- Iteration 22 --",
          "193: int(8)",
          "",
          "[Removed Lines]",
          "165: bool(false)",
          "170: bool(false)",
          "175: bool(false)",
          "180: bool(false)",
          "185: bool(false)",
          "190: bool(false)",
          "",
          "[Added Lines]",
          "165: NULL",
          "170: NULL",
          "175: NULL",
          "180: NULL",
          "185: NULL",
          "190: NULL",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198: -- Iteration 24 --",
          "200: Warning: mb_strpos() expects parameter 3 to be long, resource given in %s on line %d",
          "202: Done",
          "",
          "[Removed Lines]",
          "201: bool(false)",
          "",
          "[Added Lines]",
          "201: NULL",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_strpos_variation4.phpt||ext/mbstring/tests/mb_strpos_variation4.phpt": [
          "File: ext/mbstring/tests/mb_strpos_variation4.phpt -> ext/mbstring/tests/mb_strpos_variation4.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "218: -- Iteration 24 --",
          "220: Warning: mb_strpos() expects parameter 4 to be string, resource given in %s on line %d",
          "",
          "[Removed Lines]",
          "221: bool(false)",
          "222: Done",
          "",
          "[Added Lines]",
          "222: Done",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_strrpos_error1.phpt||ext/mbstring/tests/mb_strrpos_error1.phpt": [
          "File: ext/mbstring/tests/mb_strrpos_error1.phpt -> ext/mbstring/tests/mb_strrpos_error1.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: -- Testing mb_strrpos() function with more than expected no. of arguments --",
          "43: Warning: mb_strrpos() expects at most 4 parameters, 5 given in %s on line %d",
          "46: -- Testing mb_strrpos() function with less than expected no. of arguments --",
          "48: Warning: mb_strrpos() expects at least 2 parameters, 1 given in %s on line %d",
          "50: Done",
          "",
          "[Removed Lines]",
          "44: bool(false)",
          "49: bool(false)",
          "",
          "[Added Lines]",
          "44: NULL",
          "49: NULL",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_strrpos_variation1.phpt||ext/mbstring/tests/mb_strrpos_variation1.phpt": [
          "File: ext/mbstring/tests/mb_strrpos_variation1.phpt -> ext/mbstring/tests/mb_strrpos_variation1.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "177: -- Iteration 24 --",
          "179: Warning: mb_strrpos() expects parameter 1 to be string, resource given in %s on line %d",
          "",
          "[Removed Lines]",
          "180: bool(false)",
          "181: Done",
          "",
          "[Added Lines]",
          "181: Done",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_strrpos_variation2.phpt||ext/mbstring/tests/mb_strrpos_variation2.phpt": [
          "File: ext/mbstring/tests/mb_strrpos_variation2.phpt -> ext/mbstring/tests/mb_strrpos_variation2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "179: -- Iteration 24 --",
          "181: Warning: mb_strrpos() expects parameter 2 to be string, resource given in %s on line %d",
          "183: Done",
          "",
          "[Removed Lines]",
          "182: bool(false)",
          "",
          "[Added Lines]",
          "182: NULL",
          "",
          "---------------"
        ],
        "ext/mbstring/tests/mb_strrpos_variation4.phpt||ext/mbstring/tests/mb_strrpos_variation4.phpt": [
          "File: ext/mbstring/tests/mb_strrpos_variation4.phpt -> ext/mbstring/tests/mb_strrpos_variation4.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "218: -- Iteration 24 --",
          "220: Warning: mb_strrpos() expects parameter 4 to be string, resource given in %s on line %d",
          "",
          "[Removed Lines]",
          "221: bool(false)",
          "222: Done",
          "",
          "[Added Lines]",
          "222: Done",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5e835737ce6d7940e22ab3cab2fc2270ec15863",
      "candidate_info": {
        "commit_hash": "d5e835737ce6d7940e22ab3cab2fc2270ec15863",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/d5e835737ce6d7940e22ab3cab2fc2270ec15863",
        "files": [
          "Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l",
          "Zend/zend_language_scanner_defs.h"
        ],
        "message": "fixed binary int representation",
        "before_after_code_files": [
          "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l",
          "Zend/zend_language_scanner_defs.h||Zend/zend_language_scanner_defs.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
            "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
          ],
          "candidate": [
            "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
            "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c": [
          "File: Zend/zend_language_scanner.c -> Zend/zend_language_scanner.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3304:   --len;",
          "3305:  }",
          "3308:   if (len == 0) {",
          "3309:    Z_LVAL_P(zendlval) = 0;",
          "3310:   } else {",
          "",
          "[Removed Lines]",
          "3307:  if (len < SIZEOF_LONG * 8) {",
          "",
          "[Added Lines]",
          "3307:  if (len < SIZEOF_ZEND_INT * 8) {",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l": [
          "File: Zend/zend_language_scanner.l -> Zend/zend_language_scanner.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "1496:   --len;",
          "1497:  }",
          "1500:   if (len == 0) {",
          "1501:    Z_LVAL_P(zendlval) = 0;",
          "1502:   } else {",
          "",
          "[Removed Lines]",
          "1499:  if (len < SIZEOF_LONG * 8) {",
          "",
          "[Added Lines]",
          "1499:  if (len < SIZEOF_ZEND_INT * 8) {",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner_defs.h||Zend/zend_language_scanner_defs.h": [
          "File: Zend/zend_language_scanner_defs.h -> Zend/zend_language_scanner_defs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: enum YYCONDTYPE {",
          "4:  yycST_IN_SCRIPTING,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #line 3 \"Zend/zend_language_scanner_defs.h\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba8a06fd95ed4bce920569b4c9f8e71f927bd498",
      "candidate_info": {
        "commit_hash": "ba8a06fd95ed4bce920569b4c9f8e71f927bd498",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/ba8a06fd95ed4bce920569b4c9f8e71f927bd498",
        "files": [
          "Zend/zend_compile.c",
          "Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l",
          "Zend/zend_language_scanner_defs.h"
        ],
        "message": "Merge branch 'PHP-5.4' into PHP-5.5\n\n* PHP-5.4:\n  Fixed compiler reenterability\n  Fixed compiler reenterability\n\nConflicts:\n\tZend/zend_language_scanner.c\n\tZend/zend_language_scanner_defs.h",
        "before_after_code_files": [
          "Zend/zend_compile.c||Zend/zend_compile.c",
          "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l",
          "Zend/zend_language_scanner_defs.h||Zend/zend_language_scanner_defs.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
            "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
          ],
          "candidate": [
            "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
            "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_compile.c||Zend/zend_compile.c": [
          "File: Zend/zend_compile.c -> Zend/zend_compile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "220: {",
          "221:  CG(active_op_array) = NULL;",
          "222:  zend_init_compiler_data_structures(TSRMLS_C);",
          "223:  zend_init_rsrc_list(TSRMLS_C);",
          "224:  zend_hash_init(&CG(filenames_table), 5, NULL, (dtor_func_t) free_estring, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:  memset(&CG(context), 0, sizeof(CG(context)));",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c": [
          "File: Zend/zend_language_scanner.c -> Zend/zend_language_scanner.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "582:   init_op_array(op_array, ZEND_USER_FUNCTION, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "583:   CG(in_compilation) = 1;",
          "584:   CG(active_op_array) = op_array;",
          "585:   zend_init_compiler_context(TSRMLS_C);",
          "586:   compiler_result = zendparse(TSRMLS_C);",
          "587:   zend_do_return(&retval_znode, 0 TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "585:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "751:   init_op_array(op_array, ZEND_EVAL_CODE, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "752:   CG(interactive) = orig_interactive;",
          "753:   CG(active_op_array) = op_array;",
          "754:   zend_init_compiler_context(TSRMLS_C);",
          "755:   BEGIN(ST_IN_SCRIPTING);",
          "756:   compiler_result = zendparse(TSRMLS_C);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "755:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1000: yymore_restart:",
          "1004: {",
          "1005:  YYCTYPE yych;",
          "1006:  unsigned int yyaccept = 0;",
          "",
          "[Removed Lines]",
          "1003: #line 1004 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1005: #line 1006 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1099: yy3:",
          "1100:   YYDEBUG(3, *YYCURSOR);",
          "1101:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1103:   {",
          "1104:  if (YYCURSOR > YYLIMIT) {",
          "1105:   return 0;",
          "",
          "[Removed Lines]",
          "1102: #line 1801 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1104: #line 1803 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1159:  HANDLE_NEWLINES(yytext, yyleng);",
          "1160:  return T_INLINE_HTML;",
          "1161: }",
          "1163: yy4:",
          "1164:   YYDEBUG(4, *YYCURSOR);",
          "1165:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1162: #line 1163 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1164: #line 1165 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1177: yy6:",
          "1178:   YYDEBUG(6, *YYCURSOR);",
          "1179:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1181:   {",
          "1182:  if (CG(short_tags)) {",
          "",
          "[Removed Lines]",
          "1180: #line 1789 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1182: #line 1791 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1189:   goto inline_char_handler;",
          "1190:  }",
          "1191: }",
          "1193: yy7:",
          "1194:   YYDEBUG(7, *YYCURSOR);",
          "1195:   ++YYCURSOR;",
          "1196:   if ((yych = *YYCURSOR) == '=') goto yy43;",
          "1197:   YYDEBUG(8, *YYCURSOR);",
          "1198:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1200:   {",
          "1201:  if (CG(asp_tags)) {",
          "",
          "[Removed Lines]",
          "1192: #line 1193 \"Zend/zend_language_scanner.c\"",
          "1199: #line 1766 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1194: #line 1195 \"Zend/zend_language_scanner.c\"",
          "1201: #line 1768 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1208:   goto inline_char_handler;",
          "1209:  }",
          "1210: }",
          "1212: yy9:",
          "1213:   YYDEBUG(9, *YYCURSOR);",
          "1214:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1211: #line 1212 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1213: #line 1214 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1394:   ++YYCURSOR;",
          "1395:   YYDEBUG(38, *YYCURSOR);",
          "1396:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1398:   {",
          "1399:  YYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));",
          "",
          "[Removed Lines]",
          "1397: #line 1726 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1399: #line 1728 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1411:  BEGIN(ST_IN_SCRIPTING);",
          "1412:  return T_OPEN_TAG;",
          "1413: }",
          "1415: yy39:",
          "1416:   YYDEBUG(39, *YYCURSOR);",
          "1417:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1414: #line 1415 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1416: #line 1417 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1438:   ++YYCURSOR;",
          "1439:   YYDEBUG(44, *YYCURSOR);",
          "1440:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1442:   {",
          "1443:  if (CG(asp_tags)) {",
          "",
          "[Removed Lines]",
          "1441: #line 1744 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1443: #line 1746 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1450:   goto inline_char_handler;",
          "1451:  }",
          "1452: }",
          "1454: yy45:",
          "1455:   YYDEBUG(45, *YYCURSOR);",
          "1456:   ++YYCURSOR;",
          "1457:   YYDEBUG(46, *YYCURSOR);",
          "1458:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1460:   {",
          "1462:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "1453: #line 1454 \"Zend/zend_language_scanner.c\"",
          "1459: #line 1757 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1455: #line 1456 \"Zend/zend_language_scanner.c\"",
          "1461: #line 1759 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1464:  BEGIN(ST_IN_SCRIPTING);",
          "1465:  return T_OPEN_TAG_WITH_ECHO;",
          "1466: }",
          "1468: yy47:",
          "1469:   YYDEBUG(47, *YYCURSOR);",
          "1470:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1467: #line 1468 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1469: #line 1470 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1491: yy51:",
          "1492:   YYDEBUG(51, *YYCURSOR);",
          "1493:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1495:   {",
          "1497:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "1494: #line 1779 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1496: #line 1781 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1500:  BEGIN(ST_IN_SCRIPTING);",
          "1501:  return T_OPEN_TAG;",
          "1502: }",
          "1504: yy52:",
          "1505:   YYDEBUG(52, *YYCURSOR);",
          "1506:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1503: #line 1504 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1505: #line 1506 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1571: yy56:",
          "1572:   YYDEBUG(56, *YYCURSOR);",
          "1573:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1575:   {",
          "1576:  if (YYCURSOR > YYLIMIT) {",
          "1577:   return 0;",
          "",
          "[Removed Lines]",
          "1574: #line 2252 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1576: #line 2254 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1612:  zend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);",
          "1613:  return T_ENCAPSED_AND_WHITESPACE;",
          "1614: }",
          "1616: yy57:",
          "1617:   YYDEBUG(57, *YYCURSOR);",
          "1618:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1615: #line 1616 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1617: #line 1618 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1623:   ++YYCURSOR;",
          "1624:   YYDEBUG(59, *YYCURSOR);",
          "1625:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1627:   {",
          "1628:  BEGIN(ST_IN_SCRIPTING);",
          "1629:  return '`';",
          "1630: }",
          "1632: yy60:",
          "1633:   YYDEBUG(60, *YYCURSOR);",
          "1634:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1626: #line 2196 \"Zend/zend_language_scanner.l\"",
          "1631: #line 1632 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1628: #line 2198 \"Zend/zend_language_scanner.l\"",
          "1633: #line 1634 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1638:   ++YYCURSOR;",
          "1639:   YYDEBUG(62, *YYCURSOR);",
          "1640:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1642:   {",
          "1643:  zendlval->value.lval = (long) '{';",
          "1644:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1645:  yyless(1);",
          "1646:  return T_CURLY_OPEN;",
          "1647: }",
          "1649: yy63:",
          "1650:   YYDEBUG(63, *YYCURSOR);",
          "1651:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "1641: #line 2183 \"Zend/zend_language_scanner.l\"",
          "1648: #line 1649 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1643: #line 2185 \"Zend/zend_language_scanner.l\"",
          "1650: #line 1651 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1661: yy65:",
          "1662:   YYDEBUG(65, *YYCURSOR);",
          "1663:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1665:   {",
          "1666:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1667:  zendlval->type = IS_STRING;",
          "1668:  return T_VARIABLE;",
          "1669: }",
          "1671: yy66:",
          "1672:   YYDEBUG(66, *YYCURSOR);",
          "1673:   ++YYCURSOR;",
          "1674:   YYDEBUG(67, *YYCURSOR);",
          "1675:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1677:   {",
          "1678:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1679:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1680: }",
          "1682: yy68:",
          "1683:   YYDEBUG(68, *YYCURSOR);",
          "1684:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1664: #line 1883 \"Zend/zend_language_scanner.l\"",
          "1670: #line 1671 \"Zend/zend_language_scanner.c\"",
          "1676: #line 1459 \"Zend/zend_language_scanner.l\"",
          "1681: #line 1682 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1666: #line 1885 \"Zend/zend_language_scanner.l\"",
          "1672: #line 1673 \"Zend/zend_language_scanner.c\"",
          "1678: #line 1461 \"Zend/zend_language_scanner.l\"",
          "1683: #line 1684 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1692:   ++YYCURSOR;",
          "1693:   YYDEBUG(71, *YYCURSOR);",
          "1694:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1696:   {",
          "1697:  yyless(yyleng - 1);",
          "1698:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1695: #line 1875 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1697: #line 1877 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1700:  zendlval->type = IS_STRING;",
          "1701:  return T_VARIABLE;",
          "1702: }",
          "1704: yy72:",
          "1705:   YYDEBUG(72, *YYCURSOR);",
          "1706:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1703: #line 1704 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1705: #line 1706 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1718:   ++YYCURSOR;",
          "1719:   YYDEBUG(74, *YYCURSOR);",
          "1720:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1722:   {",
          "1723:  yyless(yyleng - 3);",
          "1724:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1721: #line 1865 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1723: #line 1867 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1726:  zendlval->type = IS_STRING;",
          "1727:  return T_VARIABLE;",
          "1728: }",
          "1730:  }",
          "1732: yyc_ST_DOUBLE_QUOTES:",
          "",
          "[Removed Lines]",
          "1729: #line 1730 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1731: #line 1732 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1794: yy78:",
          "1795:   YYDEBUG(78, *YYCURSOR);",
          "1796:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1798:   {",
          "1799:  if (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {",
          "1800:   YYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;",
          "",
          "[Removed Lines]",
          "1797: #line 2202 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1799: #line 2204 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1843:  zend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);",
          "1844:  return T_ENCAPSED_AND_WHITESPACE;",
          "1845: }",
          "1847: yy79:",
          "1848:   YYDEBUG(79, *YYCURSOR);",
          "1849:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1846: #line 1847 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1848: #line 1849 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1854:   ++YYCURSOR;",
          "1855:   YYDEBUG(81, *YYCURSOR);",
          "1856:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1858:   {",
          "1859:  BEGIN(ST_IN_SCRIPTING);",
          "1860:  return '\"';",
          "1861: }",
          "1863: yy82:",
          "1864:   YYDEBUG(82, *YYCURSOR);",
          "1865:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1857: #line 2191 \"Zend/zend_language_scanner.l\"",
          "1862: #line 1863 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1859: #line 2193 \"Zend/zend_language_scanner.l\"",
          "1864: #line 1865 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1869:   ++YYCURSOR;",
          "1870:   YYDEBUG(84, *YYCURSOR);",
          "1871:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1873:   {",
          "1874:  zendlval->value.lval = (long) '{';",
          "1875:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1876:  yyless(1);",
          "1877:  return T_CURLY_OPEN;",
          "1878: }",
          "1880: yy85:",
          "1881:   YYDEBUG(85, *YYCURSOR);",
          "1882:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "1872: #line 2183 \"Zend/zend_language_scanner.l\"",
          "1879: #line 1880 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1874: #line 2185 \"Zend/zend_language_scanner.l\"",
          "1881: #line 1882 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1892: yy87:",
          "1893:   YYDEBUG(87, *YYCURSOR);",
          "1894:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1896:   {",
          "1897:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1898:  zendlval->type = IS_STRING;",
          "1899:  return T_VARIABLE;",
          "1900: }",
          "1902: yy88:",
          "1903:   YYDEBUG(88, *YYCURSOR);",
          "1904:   ++YYCURSOR;",
          "1905:   YYDEBUG(89, *YYCURSOR);",
          "1906:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1908:   {",
          "1909:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1910:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1911: }",
          "1913: yy90:",
          "1914:   YYDEBUG(90, *YYCURSOR);",
          "1915:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1895: #line 1883 \"Zend/zend_language_scanner.l\"",
          "1901: #line 1902 \"Zend/zend_language_scanner.c\"",
          "1907: #line 1459 \"Zend/zend_language_scanner.l\"",
          "1912: #line 1913 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1897: #line 1885 \"Zend/zend_language_scanner.l\"",
          "1903: #line 1904 \"Zend/zend_language_scanner.c\"",
          "1909: #line 1461 \"Zend/zend_language_scanner.l\"",
          "1914: #line 1915 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1923:   ++YYCURSOR;",
          "1924:   YYDEBUG(93, *YYCURSOR);",
          "1925:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1927:   {",
          "1928:  yyless(yyleng - 1);",
          "1929:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1926: #line 1875 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1928: #line 1877 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1931:  zendlval->type = IS_STRING;",
          "1932:  return T_VARIABLE;",
          "1933: }",
          "1935: yy94:",
          "1936:   YYDEBUG(94, *YYCURSOR);",
          "1937:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1934: #line 1935 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1936: #line 1937 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1949:   ++YYCURSOR;",
          "1950:   YYDEBUG(96, *YYCURSOR);",
          "1951:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1953:   {",
          "1954:  yyless(yyleng - 3);",
          "1955:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1952: #line 1865 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1954: #line 1867 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1957:  zendlval->type = IS_STRING;",
          "1958:  return T_VARIABLE;",
          "1959: }",
          "1961:  }",
          "1963: yyc_ST_END_HEREDOC:",
          "",
          "[Removed Lines]",
          "1960: #line 1961 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1962: #line 1963 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1968:  ++YYCURSOR;",
          "1969:  YYDEBUG(100, *YYCURSOR);",
          "1970:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1972:  {",
          "1973:  zend_heredoc_label *heredoc_label = zend_ptr_stack_pop(&SCNG(heredoc_label_stack));",
          "",
          "[Removed Lines]",
          "1971: #line 2169 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "1973: #line 2171 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1981:  BEGIN(ST_IN_SCRIPTING);",
          "1982:  return T_END_HEREDOC;",
          "1983: }",
          "1986: yyc_ST_HEREDOC:",
          "1987:  {",
          "",
          "[Removed Lines]",
          "1984: #line 1985 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "1986: #line 1987 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2043: yy104:",
          "2044:   YYDEBUG(104, *YYCURSOR);",
          "2045:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2047:   {",
          "2048:  int newline = 0;",
          "",
          "[Removed Lines]",
          "2046: #line 2294 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2048: #line 2296 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2116:  zend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);",
          "2117:  return T_ENCAPSED_AND_WHITESPACE;",
          "2118: }",
          "2120: yy105:",
          "2121:   YYDEBUG(105, *YYCURSOR);",
          "2122:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2119: #line 2120 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2121: #line 2122 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2131:   ++YYCURSOR;",
          "2132:   YYDEBUG(108, *YYCURSOR);",
          "2133:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2135:   {",
          "2136:  zendlval->value.lval = (long) '{';",
          "2137:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2138:  yyless(1);",
          "2139:  return T_CURLY_OPEN;",
          "2140: }",
          "2142: yy109:",
          "2143:   YYDEBUG(109, *YYCURSOR);",
          "2144:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "2134: #line 2183 \"Zend/zend_language_scanner.l\"",
          "2141: #line 2142 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2136: #line 2185 \"Zend/zend_language_scanner.l\"",
          "2143: #line 2144 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2154: yy111:",
          "2155:   YYDEBUG(111, *YYCURSOR);",
          "2156:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2158:   {",
          "2159:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2160:  zendlval->type = IS_STRING;",
          "2161:  return T_VARIABLE;",
          "2162: }",
          "2164: yy112:",
          "2165:   YYDEBUG(112, *YYCURSOR);",
          "2166:   ++YYCURSOR;",
          "2167:   YYDEBUG(113, *YYCURSOR);",
          "2168:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2170:   {",
          "2171:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "2172:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "2173: }",
          "2175: yy114:",
          "2176:   YYDEBUG(114, *YYCURSOR);",
          "2177:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2157: #line 1883 \"Zend/zend_language_scanner.l\"",
          "2163: #line 2164 \"Zend/zend_language_scanner.c\"",
          "2169: #line 1459 \"Zend/zend_language_scanner.l\"",
          "2174: #line 2175 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2159: #line 1885 \"Zend/zend_language_scanner.l\"",
          "2165: #line 2166 \"Zend/zend_language_scanner.c\"",
          "2171: #line 1461 \"Zend/zend_language_scanner.l\"",
          "2176: #line 2177 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2185:   ++YYCURSOR;",
          "2186:   YYDEBUG(117, *YYCURSOR);",
          "2187:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2189:   {",
          "2190:  yyless(yyleng - 1);",
          "2191:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2188: #line 1875 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2190: #line 1877 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2193:  zendlval->type = IS_STRING;",
          "2194:  return T_VARIABLE;",
          "2195: }",
          "2197: yy118:",
          "2198:   YYDEBUG(118, *YYCURSOR);",
          "2199:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2196: #line 2197 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2198: #line 2199 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2211:   ++YYCURSOR;",
          "2212:   YYDEBUG(120, *YYCURSOR);",
          "2213:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2215:   {",
          "2216:  yyless(yyleng - 3);",
          "2217:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2214: #line 1865 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2216: #line 1867 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2219:  zendlval->type = IS_STRING;",
          "2220:  return T_VARIABLE;",
          "2221: }",
          "2223:  }",
          "2225: yyc_ST_IN_SCRIPTING:",
          "",
          "[Removed Lines]",
          "2222: #line 2223 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2224: #line 2225 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2402: yy124:",
          "2403:   YYDEBUG(124, *YYCURSOR);",
          "2404:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2406:   {",
          "2407:  zend_copy_value(zendlval, yytext, yyleng);",
          "2408:  zendlval->type = IS_STRING;",
          "2409:  return T_STRING;",
          "2410: }",
          "2412: yy125:",
          "2413:   YYDEBUG(125, *YYCURSOR);",
          "2414:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2405: #line 1906 \"Zend/zend_language_scanner.l\"",
          "2411: #line 2412 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2407: #line 1908 \"Zend/zend_language_scanner.l\"",
          "2413: #line 2414 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "2640: yy139:",
          "2641:   YYDEBUG(139, *YYCURSOR);",
          "2642:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2644:   {",
          "2645:  return yytext[0];",
          "2646: }",
          "2648: yy140:",
          "2649:   YYDEBUG(140, *YYCURSOR);",
          "2650:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2643: #line 1448 \"Zend/zend_language_scanner.l\"",
          "2647: #line 2648 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2645: #line 1450 \"Zend/zend_language_scanner.l\"",
          "2649: #line 2650 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "2653: yy141:",
          "2654:   YYDEBUG(141, *YYCURSOR);",
          "2655:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2657:   {",
          "2659:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "2656: #line 1179 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2658: #line 1181 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "2661:  HANDLE_NEWLINES(yytext, yyleng);",
          "2662:  return T_WHITESPACE;",
          "2663: }",
          "2665: yy142:",
          "2666:   YYDEBUG(142, *YYCURSOR);",
          "2667:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2664: #line 2665 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2666: #line 2667 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "2672:   ++YYCURSOR;",
          "2673:   YYDEBUG(144, *YYCURSOR);",
          "2674:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2676:   {",
          "2677:  return T_NS_SEPARATOR;",
          "2678: }",
          "2680: yy145:",
          "2681:   YYDEBUG(145, *YYCURSOR);",
          "2682:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2675: #line 1208 \"Zend/zend_language_scanner.l\"",
          "2679: #line 2680 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2677: #line 1210 \"Zend/zend_language_scanner.l\"",
          "2681: #line 2682 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "2904:   ++YYCURSOR;",
          "2905:   YYDEBUG(169, *YYCURSOR);",
          "2906:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2908:   {",
          "2909:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2910:  return '{';",
          "2911: }",
          "2913: yy170:",
          "2914:   YYDEBUG(170, *YYCURSOR);",
          "2915:   ++YYCURSOR;",
          "2916:   YYDEBUG(171, *YYCURSOR);",
          "2917:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2919:   {",
          "2920:  RESET_DOC_COMMENT();",
          "2921:  if (!zend_stack_is_empty(&SCNG(state_stack))) {",
          "",
          "[Removed Lines]",
          "2907: #line 1453 \"Zend/zend_language_scanner.l\"",
          "2912: #line 2913 \"Zend/zend_language_scanner.c\"",
          "2918: #line 1465 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2909: #line 1455 \"Zend/zend_language_scanner.l\"",
          "2914: #line 2915 \"Zend/zend_language_scanner.c\"",
          "2920: #line 1467 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "2923:  }",
          "2924:  return '}';",
          "2925: }",
          "2927: yy172:",
          "2928:   YYDEBUG(172, *YYCURSOR);",
          "2929:   yyaccept = 2;",
          "",
          "[Removed Lines]",
          "2926: #line 2927 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2928: #line 2929 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "2951: yy173:",
          "2952:   YYDEBUG(173, *YYCURSOR);",
          "2953:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2955:   {",
          "2957:   zendlval->value.lval = strtol(yytext, NULL, 0);",
          "",
          "[Removed Lines]",
          "2954: #line 1516 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "2956: #line 1518 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "2972:  zendlval->type = IS_LONG;",
          "2973:  return T_LNUMBER;",
          "2974: }",
          "2976: yy174:",
          "2977:   YYDEBUG(174, *YYCURSOR);",
          "2978:   yyaccept = 2;",
          "",
          "[Removed Lines]",
          "2975: #line 2976 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "2977: #line 2978 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3000: yy177:",
          "3001:   YYDEBUG(177, *YYCURSOR);",
          "3002:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3004:   {",
          "3005:  while (YYCURSOR < YYLIMIT) {",
          "3006:   switch (*YYCURSOR++) {",
          "",
          "[Removed Lines]",
          "3003: #line 1913 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3005: #line 1915 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3035:  return T_COMMENT;",
          "3036: }",
          "3038: yy178:",
          "3039:   YYDEBUG(178, *YYCURSOR);",
          "3040:   ++YYCURSOR;",
          "3041: yy179:",
          "3042:   YYDEBUG(179, *YYCURSOR);",
          "3043:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3045:   {",
          "3046:  register char *s, *t;",
          "3047:  char *end;",
          "",
          "[Removed Lines]",
          "3037: #line 3038 \"Zend/zend_language_scanner.c\"",
          "3044: #line 2004 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3039: #line 3040 \"Zend/zend_language_scanner.c\"",
          "3046: #line 2006 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3109:  }",
          "3110:  return T_CONSTANT_ENCAPSED_STRING;",
          "3111: }",
          "3113: yy180:",
          "3114:   YYDEBUG(180, *YYCURSOR);",
          "3115:   ++YYCURSOR;",
          "3116: yy181:",
          "3117:   YYDEBUG(181, *YYCURSOR);",
          "3118:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3120:   {",
          "3121:  int bprefix = (yytext[0] != '\"') ? 1 : 0;",
          "",
          "[Removed Lines]",
          "3112: #line 3113 \"Zend/zend_language_scanner.c\"",
          "3119: #line 2073 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3114: #line 3115 \"Zend/zend_language_scanner.c\"",
          "3121: #line 2075 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3157:  BEGIN(ST_DOUBLE_QUOTES);",
          "3158:  return '\"';",
          "3159: }",
          "3161: yy182:",
          "3162:   YYDEBUG(182, *YYCURSOR);",
          "3163:   ++YYCURSOR;",
          "3164:   YYDEBUG(183, *YYCURSOR);",
          "3165:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3167:   {",
          "3168:  BEGIN(ST_BACKQUOTE);",
          "3169:  return '`';",
          "3170: }",
          "3172: yy184:",
          "3173:   YYDEBUG(184, *YYCURSOR);",
          "3174:   ++YYCURSOR;",
          "3175:   YYDEBUG(185, *YYCURSOR);",
          "3176:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3178:   {",
          "3179:  if (YYCURSOR > YYLIMIT) {",
          "3180:   return 0;",
          "",
          "[Removed Lines]",
          "3160: #line 3161 \"Zend/zend_language_scanner.c\"",
          "3166: #line 2163 \"Zend/zend_language_scanner.l\"",
          "3171: #line 3172 \"Zend/zend_language_scanner.c\"",
          "3177: #line 2426 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3162: #line 3163 \"Zend/zend_language_scanner.c\"",
          "3168: #line 2165 \"Zend/zend_language_scanner.l\"",
          "3173: #line 3174 \"Zend/zend_language_scanner.c\"",
          "3179: #line 2428 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3183:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "3184:  goto restart;",
          "3185: }",
          "3187: yy186:",
          "3188:   YYDEBUG(186, *YYCURSOR);",
          "3189:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3186: #line 3187 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3188: #line 3189 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3210: yy190:",
          "3211:   YYDEBUG(190, *YYCURSOR);",
          "3212:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3214:   {",
          "3215:  zendlval->value.dval = zend_strtod(yytext, NULL);",
          "3216:  zendlval->type = IS_DOUBLE;",
          "3217:  return T_DNUMBER;",
          "3218: }",
          "3220: yy191:",
          "3221:   YYDEBUG(191, *YYCURSOR);",
          "3222:   yyaccept = 2;",
          "",
          "[Removed Lines]",
          "3213: #line 1581 \"Zend/zend_language_scanner.l\"",
          "3219: #line 3220 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3215: #line 1583 \"Zend/zend_language_scanner.l\"",
          "3221: #line 3222 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3308:   }",
          "3309:   YYDEBUG(202, *YYCURSOR);",
          "3310:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3312:   {",
          "3314:  int len = yyleng - 2;",
          "",
          "[Removed Lines]",
          "3311: #line 1491 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3313: #line 1493 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3333:   return T_DNUMBER;",
          "3334:  }",
          "3335: }",
          "3337: yy203:",
          "3338:   YYDEBUG(203, *YYCURSOR);",
          "3339:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3336: #line 3337 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3338: #line 3339 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3345:   }",
          "3346:   YYDEBUG(205, *YYCURSOR);",
          "3347:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3349:   {",
          "3351:  int len = yyleng - 2;",
          "",
          "[Removed Lines]",
          "3348: #line 1537 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3350: #line 1539 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3370:   return T_DNUMBER;",
          "3371:  }",
          "3372: }",
          "3374: yy206:",
          "3375:   YYDEBUG(206, *YYCURSOR);",
          "3376:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3373: #line 3374 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3375: #line 3376 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3379: yy207:",
          "3380:   YYDEBUG(207, *YYCURSOR);",
          "3381:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3383:   {",
          "3385:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "3382: #line 1981 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3384: #line 1983 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3387:  BEGIN(INITIAL);",
          "3389: }",
          "3391: yy208:",
          "3392:   YYDEBUG(208, *YYCURSOR);",
          "3393:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3390: #line 3391 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3392: #line 3393 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3421: yy212:",
          "3422:   YYDEBUG(212, *YYCURSOR);",
          "3423:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3425:   {",
          "3426:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "3427:  zendlval->type = IS_STRING;",
          "3428:  return T_VARIABLE;",
          "3429: }",
          "3431: yy213:",
          "3432:   YYDEBUG(213, *YYCURSOR);",
          "3433:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3424: #line 1883 \"Zend/zend_language_scanner.l\"",
          "3430: #line 3431 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3426: #line 1885 \"Zend/zend_language_scanner.l\"",
          "3432: #line 3433 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3441:   }",
          "3442:   YYDEBUG(215, *YYCURSOR);",
          "3443:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3445:   {",
          "3446:  return T_LOGICAL_XOR;",
          "3447: }",
          "3449: yy216:",
          "3450:   YYDEBUG(216, *YYCURSOR);",
          "3451:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3444: #line 1436 \"Zend/zend_language_scanner.l\"",
          "3448: #line 3449 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3446: #line 1438 \"Zend/zend_language_scanner.l\"",
          "3450: #line 3451 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3454:   }",
          "3455:   YYDEBUG(217, *YYCURSOR);",
          "3456:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3458:   {",
          "3459:  return T_LOGICAL_OR;",
          "3460: }",
          "3462: yy218:",
          "3463:   YYDEBUG(218, *YYCURSOR);",
          "3464:   ++YYCURSOR;",
          "3465:   YYDEBUG(219, *YYCURSOR);",
          "3466:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3468:   {",
          "3469:  return T_XOR_EQUAL;",
          "3470: }",
          "3472: yy220:",
          "3473:   YYDEBUG(220, *YYCURSOR);",
          "3474:   ++YYCURSOR;",
          "3475:   YYDEBUG(221, *YYCURSOR);",
          "3476:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3478:   {",
          "3479:  return T_BOOLEAN_OR;",
          "3480: }",
          "3482: yy222:",
          "3483:   YYDEBUG(222, *YYCURSOR);",
          "3484:   ++YYCURSOR;",
          "3485:   YYDEBUG(223, *YYCURSOR);",
          "3486:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3488:   {",
          "3489:  return T_OR_EQUAL;",
          "3490: }",
          "3492: yy224:",
          "3493:   YYDEBUG(224, *YYCURSOR);",
          "3494:   ++YYCURSOR;",
          "3495:   YYDEBUG(225, *YYCURSOR);",
          "3496:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3498:   {",
          "3499:  return T_BOOLEAN_AND;",
          "3500: }",
          "3502: yy226:",
          "3503:   YYDEBUG(226, *YYCURSOR);",
          "3504:   ++YYCURSOR;",
          "3505:   YYDEBUG(227, *YYCURSOR);",
          "3506:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3508:   {",
          "3509:  return T_AND_EQUAL;",
          "3510: }",
          "3512: yy228:",
          "3513:   YYDEBUG(228, *YYCURSOR);",
          "3514:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3457: #line 1428 \"Zend/zend_language_scanner.l\"",
          "3461: #line 3462 \"Zend/zend_language_scanner.c\"",
          "3467: #line 1416 \"Zend/zend_language_scanner.l\"",
          "3471: #line 3472 \"Zend/zend_language_scanner.c\"",
          "3477: #line 1420 \"Zend/zend_language_scanner.l\"",
          "3481: #line 3482 \"Zend/zend_language_scanner.c\"",
          "3487: #line 1412 \"Zend/zend_language_scanner.l\"",
          "3491: #line 3492 \"Zend/zend_language_scanner.c\"",
          "3497: #line 1424 \"Zend/zend_language_scanner.l\"",
          "3501: #line 3502 \"Zend/zend_language_scanner.c\"",
          "3507: #line 1408 \"Zend/zend_language_scanner.l\"",
          "3511: #line 3512 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3459: #line 1430 \"Zend/zend_language_scanner.l\"",
          "3463: #line 3464 \"Zend/zend_language_scanner.c\"",
          "3469: #line 1418 \"Zend/zend_language_scanner.l\"",
          "3473: #line 3474 \"Zend/zend_language_scanner.c\"",
          "3479: #line 1422 \"Zend/zend_language_scanner.l\"",
          "3483: #line 3484 \"Zend/zend_language_scanner.c\"",
          "3489: #line 1414 \"Zend/zend_language_scanner.l\"",
          "3493: #line 3494 \"Zend/zend_language_scanner.c\"",
          "3499: #line 1426 \"Zend/zend_language_scanner.l\"",
          "3503: #line 3504 \"Zend/zend_language_scanner.c\"",
          "3509: #line 1410 \"Zend/zend_language_scanner.l\"",
          "3513: #line 3514 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "3517: yy229:",
          "3518:   YYDEBUG(229, *YYCURSOR);",
          "3519:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3521:   {",
          "3522:  if (CG(asp_tags)) {",
          "3523:   BEGIN(INITIAL);",
          "",
          "[Removed Lines]",
          "3520: #line 1990 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3522: #line 1992 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "3530:   return yytext[0];",
          "3531:  }",
          "3532: }",
          "3534: yy230:",
          "3535:   YYDEBUG(230, *YYCURSOR);",
          "3536:   ++YYCURSOR;",
          "3537:   YYDEBUG(231, *YYCURSOR);",
          "3538:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3540:   {",
          "3541:  return T_MOD_EQUAL;",
          "3542: }",
          "3544: yy232:",
          "3545:   YYDEBUG(232, *YYCURSOR);",
          "3546:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3533: #line 3534 \"Zend/zend_language_scanner.c\"",
          "3539: #line 1396 \"Zend/zend_language_scanner.l\"",
          "3543: #line 3544 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3535: #line 3536 \"Zend/zend_language_scanner.c\"",
          "3541: #line 1398 \"Zend/zend_language_scanner.l\"",
          "3545: #line 3546 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "3571:   ++YYCURSOR;",
          "3572:   YYDEBUG(237, *YYCURSOR);",
          "3573:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3575:   {",
          "3576:  return T_CONCAT_EQUAL;",
          "3577: }",
          "3579: yy238:",
          "3580:   YYDEBUG(238, *YYCURSOR);",
          "3581:   yyaccept = 4;",
          "",
          "[Removed Lines]",
          "3574: #line 1392 \"Zend/zend_language_scanner.l\"",
          "3578: #line 3579 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3576: #line 1394 \"Zend/zend_language_scanner.l\"",
          "3580: #line 3581 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "3584: yy239:",
          "3585:   YYDEBUG(239, *YYCURSOR);",
          "3586:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3588:   {",
          "3589:  int doc_com;",
          "",
          "[Removed Lines]",
          "3587: #line 1947 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3589: #line 1949 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "3619:  return T_COMMENT;",
          "3620: }",
          "3622: yy240:",
          "3623:   YYDEBUG(240, *YYCURSOR);",
          "3624:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3621: #line 3622 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3623: #line 3624 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "3628:   ++YYCURSOR;",
          "3629:   YYDEBUG(242, *YYCURSOR);",
          "3630:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3632:   {",
          "3633:  return T_DIV_EQUAL;",
          "3634: }",
          "3636: yy243:",
          "3637:   YYDEBUG(243, *YYCURSOR);",
          "3638:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3631: #line 1388 \"Zend/zend_language_scanner.l\"",
          "3635: #line 3636 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3633: #line 1390 \"Zend/zend_language_scanner.l\"",
          "3637: #line 3638 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "3655:   ++YYCURSOR;",
          "3656:   YYDEBUG(247, *YYCURSOR);",
          "3657:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3659:   {",
          "3660:  return T_MUL_EQUAL;",
          "3661: }",
          "3663: yy248:",
          "3664:   YYDEBUG(248, *YYCURSOR);",
          "3665:   ++YYCURSOR;",
          "3666:   if ((yych = *YYCURSOR) == '=') goto yy252;",
          "3667:   YYDEBUG(249, *YYCURSOR);",
          "3668:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3670:   {",
          "3671:  return T_SR;",
          "3672: }",
          "3674: yy250:",
          "3675:   YYDEBUG(250, *YYCURSOR);",
          "3676:   ++YYCURSOR;",
          "3677:   YYDEBUG(251, *YYCURSOR);",
          "3678:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3680:   {",
          "3681:  return T_IS_GREATER_OR_EQUAL;",
          "3682: }",
          "3684: yy252:",
          "3685:   YYDEBUG(252, *YYCURSOR);",
          "3686:   ++YYCURSOR;",
          "3687:   YYDEBUG(253, *YYCURSOR);",
          "3688:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3690:   {",
          "3691:  return T_SR_EQUAL;",
          "3692: }",
          "3694: yy254:",
          "3695:   YYDEBUG(254, *YYCURSOR);",
          "3696:   yyaccept = 5;",
          "",
          "[Removed Lines]",
          "3658: #line 1384 \"Zend/zend_language_scanner.l\"",
          "3662: #line 3663 \"Zend/zend_language_scanner.c\"",
          "3669: #line 1444 \"Zend/zend_language_scanner.l\"",
          "3673: #line 3674 \"Zend/zend_language_scanner.c\"",
          "3679: #line 1372 \"Zend/zend_language_scanner.l\"",
          "3683: #line 3684 \"Zend/zend_language_scanner.c\"",
          "3689: #line 1404 \"Zend/zend_language_scanner.l\"",
          "3693: #line 3694 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3660: #line 1386 \"Zend/zend_language_scanner.l\"",
          "3664: #line 3665 \"Zend/zend_language_scanner.c\"",
          "3671: #line 1446 \"Zend/zend_language_scanner.l\"",
          "3675: #line 3676 \"Zend/zend_language_scanner.c\"",
          "3681: #line 1374 \"Zend/zend_language_scanner.l\"",
          "3685: #line 3686 \"Zend/zend_language_scanner.c\"",
          "3691: #line 1406 \"Zend/zend_language_scanner.l\"",
          "3695: #line 3696 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "3701: yy255:",
          "3702:   YYDEBUG(255, *YYCURSOR);",
          "3703:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3705:   {",
          "3706:  return T_SL;",
          "3707: }",
          "3709: yy256:",
          "3710:   YYDEBUG(256, *YYCURSOR);",
          "3711:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3704: #line 1440 \"Zend/zend_language_scanner.l\"",
          "3708: #line 3709 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3706: #line 1442 \"Zend/zend_language_scanner.l\"",
          "3710: #line 3711 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "3717:   ++YYCURSOR;",
          "3718:   YYDEBUG(258, *YYCURSOR);",
          "3719:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3721:   {",
          "3722:  return T_IS_SMALLER_OR_EQUAL;",
          "3723: }",
          "3725: yy259:",
          "3726:   YYDEBUG(259, *YYCURSOR);",
          "3727:   ++YYCURSOR;",
          "3728: yy260:",
          "3729:   YYDEBUG(260, *YYCURSOR);",
          "3730:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3732:   {",
          "3733:  return T_IS_NOT_EQUAL;",
          "3734: }",
          "3736: yy261:",
          "3737:   YYDEBUG(261, *YYCURSOR);",
          "3738:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3720: #line 1368 \"Zend/zend_language_scanner.l\"",
          "3724: #line 3725 \"Zend/zend_language_scanner.c\"",
          "3731: #line 1364 \"Zend/zend_language_scanner.l\"",
          "3735: #line 3736 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3722: #line 1370 \"Zend/zend_language_scanner.l\"",
          "3726: #line 3727 \"Zend/zend_language_scanner.c\"",
          "3733: #line 1366 \"Zend/zend_language_scanner.l\"",
          "3737: #line 3738 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "3783:   ++YYCURSOR;",
          "3784:   YYDEBUG(269, *YYCURSOR);",
          "3785:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3787:   {",
          "3788:  return T_SL_EQUAL;",
          "3789: }",
          "3791: yy270:",
          "3792:   YYDEBUG(270, *YYCURSOR);",
          "3793:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3786: #line 1400 \"Zend/zend_language_scanner.l\"",
          "3790: #line 3791 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3788: #line 1402 \"Zend/zend_language_scanner.l\"",
          "3792: #line 3793 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "3892: yy280:",
          "3893:   YYDEBUG(280, *YYCURSOR);",
          "3894:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3896:   {",
          "3897:  char *s;",
          "3898:  int bprefix = (yytext[0] != '<') ? 1 : 0;",
          "",
          "[Removed Lines]",
          "3895: #line 2115 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "3897: #line 2117 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "3940:  return T_START_HEREDOC;",
          "3941: }",
          "3943: yy281:",
          "3944:   YYDEBUG(281, *YYCURSOR);",
          "3945:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3942: #line 3943 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3944: #line 3945 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "3979:   ++YYCURSOR;",
          "3980:   YYDEBUG(286, *YYCURSOR);",
          "3981:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3983:   {",
          "3984:  return T_IS_NOT_IDENTICAL;",
          "3985: }",
          "3987: yy287:",
          "3988:   YYDEBUG(287, *YYCURSOR);",
          "3989:   ++YYCURSOR;",
          "3990:   YYDEBUG(288, *YYCURSOR);",
          "3991:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3993:   {",
          "3994:  return T_PLUS_EQUAL;",
          "3995: }",
          "3997: yy289:",
          "3998:   YYDEBUG(289, *YYCURSOR);",
          "3999:   ++YYCURSOR;",
          "4000:   YYDEBUG(290, *YYCURSOR);",
          "4001:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4003:   {",
          "4004:  return T_INC;",
          "4005: }",
          "4007: yy291:",
          "4008:   YYDEBUG(291, *YYCURSOR);",
          "4009:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3982: #line 1356 \"Zend/zend_language_scanner.l\"",
          "3986: #line 3987 \"Zend/zend_language_scanner.c\"",
          "3992: #line 1376 \"Zend/zend_language_scanner.l\"",
          "3996: #line 3997 \"Zend/zend_language_scanner.c\"",
          "4002: #line 1344 \"Zend/zend_language_scanner.l\"",
          "4006: #line 4007 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "3984: #line 1358 \"Zend/zend_language_scanner.l\"",
          "3988: #line 3989 \"Zend/zend_language_scanner.c\"",
          "3994: #line 1378 \"Zend/zend_language_scanner.l\"",
          "3998: #line 3999 \"Zend/zend_language_scanner.c\"",
          "4004: #line 1346 \"Zend/zend_language_scanner.l\"",
          "4008: #line 4009 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "4022:   }",
          "4023:   YYDEBUG(294, *YYCURSOR);",
          "4024:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4026:   {",
          "4027:  return T_LIST;",
          "4028: }",
          "4030: yy295:",
          "4031:   YYDEBUG(295, *YYCURSOR);",
          "4032:   ++YYCURSOR;",
          "4033:   if ((yych = *YYCURSOR) == '=') goto yy299;",
          "4034:   YYDEBUG(296, *YYCURSOR);",
          "4035:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4037:   {",
          "4038:  return T_IS_EQUAL;",
          "4039: }",
          "4041: yy297:",
          "4042:   YYDEBUG(297, *YYCURSOR);",
          "4043:   ++YYCURSOR;",
          "4044:   YYDEBUG(298, *YYCURSOR);",
          "4045:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4047:   {",
          "4048:  return T_DOUBLE_ARROW;",
          "4049: }",
          "4051: yy299:",
          "4052:   YYDEBUG(299, *YYCURSOR);",
          "4053:   ++YYCURSOR;",
          "4054:   YYDEBUG(300, *YYCURSOR);",
          "4055:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4057:   {",
          "4058:  return T_IS_IDENTICAL;",
          "4059: }",
          "4061: yy301:",
          "4062:   YYDEBUG(301, *YYCURSOR);",
          "4063:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4025: #line 1332 \"Zend/zend_language_scanner.l\"",
          "4029: #line 4030 \"Zend/zend_language_scanner.c\"",
          "4036: #line 1360 \"Zend/zend_language_scanner.l\"",
          "4040: #line 4041 \"Zend/zend_language_scanner.c\"",
          "4046: #line 1328 \"Zend/zend_language_scanner.l\"",
          "4050: #line 4051 \"Zend/zend_language_scanner.c\"",
          "4056: #line 1352 \"Zend/zend_language_scanner.l\"",
          "4060: #line 4061 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4027: #line 1334 \"Zend/zend_language_scanner.l\"",
          "4031: #line 4032 \"Zend/zend_language_scanner.c\"",
          "4038: #line 1362 \"Zend/zend_language_scanner.l\"",
          "4042: #line 4043 \"Zend/zend_language_scanner.c\"",
          "4048: #line 1330 \"Zend/zend_language_scanner.l\"",
          "4052: #line 4053 \"Zend/zend_language_scanner.c\"",
          "4058: #line 1354 \"Zend/zend_language_scanner.l\"",
          "4062: #line 4063 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "4187:   }",
          "4188:   YYDEBUG(320, *YYCURSOR);",
          "4189:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4191:   {",
          "4192:  if (CG(current_namespace)) {",
          "",
          "[Removed Lines]",
          "4190: #line 1716 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4192: #line 1718 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "4197:  }",
          "4198:  return T_NS_C;",
          "4199: }",
          "4201: yy321:",
          "4202:   YYDEBUG(321, *YYCURSOR);",
          "4203:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4200: #line 4201 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4202: #line 4203 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "4217:   }",
          "4218:   YYDEBUG(325, *YYCURSOR);",
          "4219:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4221:   {",
          "4222:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "4223:  const size_t filename_len = strlen(filename);",
          "",
          "[Removed Lines]",
          "4220: #line 1689 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4222: #line 1691 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "4244:  zendlval->type = IS_STRING;",
          "4245:  return T_DIR;",
          "4246: }",
          "4248: yy326:",
          "4249:   YYDEBUG(326, *YYCURSOR);",
          "4250:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4247: #line 4248 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4249: #line 4250 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "4269:   }",
          "4270:   YYDEBUG(331, *YYCURSOR);",
          "4271:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4273:   {",
          "4274:  zendlval->value.lval = CG(zend_lineno);",
          "4275:  zendlval->type = IS_LONG;",
          "4276:  return T_LINE;",
          "4277: }",
          "4279: yy332:",
          "4280:   YYDEBUG(332, *YYCURSOR);",
          "4281:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4272: #line 1671 \"Zend/zend_language_scanner.l\"",
          "4278: #line 4279 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4274: #line 1673 \"Zend/zend_language_scanner.l\"",
          "4280: #line 4281 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "4310:   }",
          "4311:   YYDEBUG(339, *YYCURSOR);",
          "4312:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4314:   {",
          "4315:  const char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;",
          "4316:  const char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;",
          "",
          "[Removed Lines]",
          "4313: #line 1650 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4315: #line 1652 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "4331:  zendlval->type = IS_STRING;",
          "4332:  return T_METHOD_C;",
          "4333: }",
          "4335: yy340:",
          "4336:   YYDEBUG(340, *YYCURSOR);",
          "4337:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4334: #line 4335 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4336: #line 4337 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "4382:   }",
          "4383:   YYDEBUG(350, *YYCURSOR);",
          "4384:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4386:   {",
          "4387:  const char *func_name = NULL;",
          "",
          "[Removed Lines]",
          "4385: #line 1634 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4387: #line 1636 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "4398:  zendlval->type = IS_STRING;",
          "4399:  return T_FUNC_C;",
          "4400: }",
          "4402: yy351:",
          "4403:   YYDEBUG(351, *YYCURSOR);",
          "4404:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4401: #line 4402 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4403: #line 4404 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "4418:   }",
          "4419:   YYDEBUG(355, *YYCURSOR);",
          "4420:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4422:   {",
          "4423:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "",
          "[Removed Lines]",
          "4421: #line 1677 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4423: #line 1679 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "4430:  zendlval->type = IS_STRING;",
          "4431:  return T_FILE;",
          "4432: }",
          "4434: yy356:",
          "4435:   YYDEBUG(356, *YYCURSOR);",
          "4436:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4433: #line 4434 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4435: #line 4436 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "4460:   }",
          "4461:   YYDEBUG(362, *YYCURSOR);",
          "4462:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4464:   {",
          "4465:  const char *trait_name = NULL;",
          "",
          "[Removed Lines]",
          "4463: #line 1614 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4465: #line 1616 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "4481:  return T_TRAIT_C;",
          "4482: }",
          "4484: yy363:",
          "4485:   YYDEBUG(363, *YYCURSOR);",
          "4486:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4483: #line 4484 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4485: #line 4486 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "4510:   }",
          "4511:   YYDEBUG(369, *YYCURSOR);",
          "4512:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4514:   {",
          "4515:  const char *class_name = NULL;",
          "",
          "[Removed Lines]",
          "4513: #line 1587 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "4515: #line 1589 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "4537:  }",
          "4538:  return T_CLASS_C;",
          "4539: }",
          "4541: yy370:",
          "4542:   YYDEBUG(370, *YYCURSOR);",
          "4543:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4540: #line 4541 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4542: #line 4543 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "4599:   }",
          "4600:   YYDEBUG(382, *YYCURSOR);",
          "4601:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4603:   {",
          "4604:  return T_HALT_COMPILER;",
          "4605: }",
          "4607: yy383:",
          "4608:   YYDEBUG(383, *YYCURSOR);",
          "4609:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4602: #line 1296 \"Zend/zend_language_scanner.l\"",
          "4606: #line 4607 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4604: #line 1298 \"Zend/zend_language_scanner.l\"",
          "4608: #line 4609 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "4623:   }",
          "4624:   YYDEBUG(386, *YYCURSOR);",
          "4625:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4627:   {",
          "4628:  return T_USE;",
          "4629: }",
          "4631: yy387:",
          "4632:   YYDEBUG(387, *YYCURSOR);",
          "4633:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4626: #line 1276 \"Zend/zend_language_scanner.l\"",
          "4630: #line 4631 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4628: #line 1278 \"Zend/zend_language_scanner.l\"",
          "4632: #line 4633 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "4646:   }",
          "4647:   YYDEBUG(390, *YYCURSOR);",
          "4648:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4650:   {",
          "4651:  return T_UNSET;",
          "4652: }",
          "4654: yy391:",
          "4655:   YYDEBUG(391, *YYCURSOR);",
          "4656:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4649: #line 1324 \"Zend/zend_language_scanner.l\"",
          "4653: #line 4654 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4651: #line 1326 \"Zend/zend_language_scanner.l\"",
          "4655: #line 4656 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "4822:   ++YYCURSOR;",
          "4823:   YYDEBUG(408, *YYCURSOR);",
          "4824:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4826:   {",
          "4827:  return T_INT_CAST;",
          "4828: }",
          "4830: yy409:",
          "4831:   YYDEBUG(409, *YYCURSOR);",
          "4832:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4825: #line 1224 \"Zend/zend_language_scanner.l\"",
          "4829: #line 4830 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4827: #line 1226 \"Zend/zend_language_scanner.l\"",
          "4831: #line 4832 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "4870:   ++YYCURSOR;",
          "4871:   YYDEBUG(417, *YYCURSOR);",
          "4872:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4874:   {",
          "4875:  return T_DOUBLE_CAST;",
          "4876: }",
          "4878: yy418:",
          "4879:   YYDEBUG(418, *YYCURSOR);",
          "4880:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4873: #line 1228 \"Zend/zend_language_scanner.l\"",
          "4877: #line 4878 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4875: #line 1230 \"Zend/zend_language_scanner.l\"",
          "4879: #line 4880 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "4944:   ++YYCURSOR;",
          "4945:   YYDEBUG(431, *YYCURSOR);",
          "4946:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4948:   {",
          "4949:  return T_STRING_CAST;",
          "4950: }",
          "4952: yy432:",
          "4953:   YYDEBUG(432, *YYCURSOR);",
          "4954:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4947: #line 1232 \"Zend/zend_language_scanner.l\"",
          "4951: #line 4952 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4949: #line 1234 \"Zend/zend_language_scanner.l\"",
          "4953: #line 4954 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "4981:   ++YYCURSOR;",
          "4982:   YYDEBUG(438, *YYCURSOR);",
          "4983:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4985:   {",
          "4986:  return T_ARRAY_CAST;",
          "4987: }",
          "4989: yy439:",
          "4990:   YYDEBUG(439, *YYCURSOR);",
          "4991:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4984: #line 1236 \"Zend/zend_language_scanner.l\"",
          "4988: #line 4989 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "4986: #line 1238 \"Zend/zend_language_scanner.l\"",
          "4990: #line 4991 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "5023:   ++YYCURSOR;",
          "5024:   YYDEBUG(446, *YYCURSOR);",
          "5025:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5027:   {",
          "5028:  return T_OBJECT_CAST;",
          "5029: }",
          "5031: yy447:",
          "5032:   YYDEBUG(447, *YYCURSOR);",
          "5033:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5026: #line 1240 \"Zend/zend_language_scanner.l\"",
          "5030: #line 5031 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5028: #line 1242 \"Zend/zend_language_scanner.l\"",
          "5032: #line 5033 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "5068:   ++YYCURSOR;",
          "5069:   YYDEBUG(454, *YYCURSOR);",
          "5070:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5072:   {",
          "5073:  return T_BOOL_CAST;",
          "5074: }",
          "5076: yy455:",
          "5077:   YYDEBUG(455, *YYCURSOR);",
          "5078:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5071: #line 1244 \"Zend/zend_language_scanner.l\"",
          "5075: #line 5076 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5073: #line 1246 \"Zend/zend_language_scanner.l\"",
          "5077: #line 5078 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "5132:   ++YYCURSOR;",
          "5133:   YYDEBUG(466, *YYCURSOR);",
          "5134:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5136:   {",
          "5137:  return T_UNSET_CAST;",
          "5138: }",
          "5140: yy467:",
          "5141:   YYDEBUG(467, *YYCURSOR);",
          "5142:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5135: #line 1248 \"Zend/zend_language_scanner.l\"",
          "5139: #line 5140 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5137: #line 1250 \"Zend/zend_language_scanner.l\"",
          "5141: #line 5142 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "5150:   }",
          "5151:   YYDEBUG(469, *YYCURSOR);",
          "5152:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5154:   {",
          "5155:  return T_VAR;",
          "5156: }",
          "5158: yy470:",
          "5159:   YYDEBUG(470, *YYCURSOR);",
          "5160:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5153: #line 1220 \"Zend/zend_language_scanner.l\"",
          "5157: #line 5158 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5155: #line 1222 \"Zend/zend_language_scanner.l\"",
          "5159: #line 5160 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "5174:   }",
          "5175:   YYDEBUG(473, *YYCURSOR);",
          "5176:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5178:   {",
          "5179:  return T_NEW;",
          "5180: }",
          "5182: yy474:",
          "5183:   YYDEBUG(474, *YYCURSOR);",
          "5184:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5177: #line 1212 \"Zend/zend_language_scanner.l\"",
          "5181: #line 5182 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5179: #line 1214 \"Zend/zend_language_scanner.l\"",
          "5183: #line 5184 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "5217:   }",
          "5218:   YYDEBUG(481, *YYCURSOR);",
          "5219:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5221:   {",
          "5222:  return T_NAMESPACE;",
          "5223: }",
          "5225: yy482:",
          "5226:   YYDEBUG(482, *YYCURSOR);",
          "5227:   ++YYCURSOR;",
          "5228:   YYDEBUG(483, *YYCURSOR);",
          "5229:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5231:   {",
          "5232:  return T_PAAMAYIM_NEKUDOTAYIM;",
          "5233: }",
          "5235: yy484:",
          "5236:   YYDEBUG(484, *YYCURSOR);",
          "5237:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5220: #line 1272 \"Zend/zend_language_scanner.l\"",
          "5224: #line 5225 \"Zend/zend_language_scanner.c\"",
          "5230: #line 1204 \"Zend/zend_language_scanner.l\"",
          "5234: #line 5235 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5222: #line 1274 \"Zend/zend_language_scanner.l\"",
          "5226: #line 5227 \"Zend/zend_language_scanner.c\"",
          "5232: #line 1206 \"Zend/zend_language_scanner.l\"",
          "5236: #line 5237 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "5253:   ++YYCURSOR;",
          "5254:   YYDEBUG(487, *YYCURSOR);",
          "5255:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5257:   {",
          "5258:  return T_MINUS_EQUAL;",
          "5259: }",
          "5261: yy488:",
          "5262:   YYDEBUG(488, *YYCURSOR);",
          "5263:   ++YYCURSOR;",
          "5264:   YYDEBUG(489, *YYCURSOR);",
          "5265:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5267:   {",
          "5268:  return T_DEC;",
          "5269: }",
          "5271: yy490:",
          "5272:   YYDEBUG(490, *YYCURSOR);",
          "5273:   ++YYCURSOR;",
          "5274:   YYDEBUG(491, *YYCURSOR);",
          "5275:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5277:   {",
          "5278:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "5279:  return T_OBJECT_OPERATOR;",
          "5280: }",
          "5282: yy492:",
          "5283:   YYDEBUG(492, *YYCURSOR);",
          "5284:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5256: #line 1380 \"Zend/zend_language_scanner.l\"",
          "5260: #line 5261 \"Zend/zend_language_scanner.c\"",
          "5266: #line 1348 \"Zend/zend_language_scanner.l\"",
          "5270: #line 5271 \"Zend/zend_language_scanner.c\"",
          "5276: #line 1174 \"Zend/zend_language_scanner.l\"",
          "5281: #line 5282 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5258: #line 1382 \"Zend/zend_language_scanner.l\"",
          "5262: #line 5263 \"Zend/zend_language_scanner.c\"",
          "5268: #line 1350 \"Zend/zend_language_scanner.l\"",
          "5272: #line 5273 \"Zend/zend_language_scanner.c\"",
          "5278: #line 1176 \"Zend/zend_language_scanner.l\"",
          "5283: #line 5284 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "5323:   }",
          "5324:   YYDEBUG(498, *YYCURSOR);",
          "5325:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5327:   {",
          "5328:  return T_PUBLIC;",
          "5329: }",
          "5331: yy499:",
          "5332:   YYDEBUG(499, *YYCURSOR);",
          "5333:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5326: #line 1320 \"Zend/zend_language_scanner.l\"",
          "5330: #line 5331 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5328: #line 1322 \"Zend/zend_language_scanner.l\"",
          "5332: #line 5333 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "5382:   }",
          "5383:   YYDEBUG(507, *YYCURSOR);",
          "5384:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5386:   {",
          "5387:  return T_PROTECTED;",
          "5388: }",
          "5390: yy508:",
          "5391:   YYDEBUG(508, *YYCURSOR);",
          "5392:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5385: #line 1316 \"Zend/zend_language_scanner.l\"",
          "5389: #line 5390 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5387: #line 1318 \"Zend/zend_language_scanner.l\"",
          "5391: #line 5392 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "5416:   }",
          "5417:   YYDEBUG(513, *YYCURSOR);",
          "5418:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5420:   {",
          "5421:  return T_PRIVATE;",
          "5422: }",
          "5424: yy514:",
          "5425:   YYDEBUG(514, *YYCURSOR);",
          "5426:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5419: #line 1312 \"Zend/zend_language_scanner.l\"",
          "5423: #line 5424 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5421: #line 1314 \"Zend/zend_language_scanner.l\"",
          "5425: #line 5426 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "5429:   }",
          "5430:   YYDEBUG(515, *YYCURSOR);",
          "5431:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5433:   {",
          "5434:  return T_PRINT;",
          "5435: }",
          "5437: yy516:",
          "5438:   YYDEBUG(516, *YYCURSOR);",
          "5439:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5432: #line 1150 \"Zend/zend_language_scanner.l\"",
          "5436: #line 5437 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5434: #line 1152 \"Zend/zend_language_scanner.l\"",
          "5438: #line 5439 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "5458:   }",
          "5459:   YYDEBUG(520, *YYCURSOR);",
          "5460:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5462:   {",
          "5463:  return T_GOTO;",
          "5464: }",
          "5466: yy521:",
          "5467:   YYDEBUG(521, *YYCURSOR);",
          "5468:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5461: #line 1142 \"Zend/zend_language_scanner.l\"",
          "5465: #line 5466 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5463: #line 1144 \"Zend/zend_language_scanner.l\"",
          "5467: #line 5468 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 116 ---",
          "[Context before]",
          "5486:   }",
          "5487:   YYDEBUG(525, *YYCURSOR);",
          "5488:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5490:   {",
          "5491:  return T_GLOBAL;",
          "5492: }",
          "5494: yy526:",
          "5495:   YYDEBUG(526, *YYCURSOR);",
          "5496:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5489: #line 1284 \"Zend/zend_language_scanner.l\"",
          "5493: #line 5494 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5491: #line 1286 \"Zend/zend_language_scanner.l\"",
          "5495: #line 5496 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 117 ---",
          "[Context before]",
          "5527:   }",
          "5528:   YYDEBUG(533, *YYCURSOR);",
          "5529:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5531:   {",
          "5532:  return T_BREAK;",
          "5533: }",
          "5535: yy534:",
          "5536:   YYDEBUG(534, *YYCURSOR);",
          "5537:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5530: #line 1134 \"Zend/zend_language_scanner.l\"",
          "5534: #line 5535 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5532: #line 1136 \"Zend/zend_language_scanner.l\"",
          "5536: #line 5537 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 118 ---",
          "[Context before]",
          "5571:   }",
          "5572:   YYDEBUG(541, *YYCURSOR);",
          "5573:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5575:   {",
          "5576:  return T_SWITCH;",
          "5577: }",
          "5579: yy542:",
          "5580:   YYDEBUG(542, *YYCURSOR);",
          "5581:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5574: #line 1118 \"Zend/zend_language_scanner.l\"",
          "5578: #line 5579 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5576: #line 1120 \"Zend/zend_language_scanner.l\"",
          "5580: #line 5581 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 119 ---",
          "[Context before]",
          "5599:   }",
          "5600:   YYDEBUG(546, *YYCURSOR);",
          "5601:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5603:   {",
          "5604:  return T_STATIC;",
          "5605: }",
          "5607: yy547:",
          "5608:   YYDEBUG(547, *YYCURSOR);",
          "5609:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5602: #line 1300 \"Zend/zend_language_scanner.l\"",
          "5606: #line 5607 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5604: #line 1302 \"Zend/zend_language_scanner.l\"",
          "5608: #line 5609 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 120 ---",
          "[Context before]",
          "5630:   }",
          "5631:   YYDEBUG(551, *YYCURSOR);",
          "5632:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5634:   {",
          "5635:  return T_AS;",
          "5636: }",
          "5638: yy552:",
          "5639:   YYDEBUG(552, *YYCURSOR);",
          "5640:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5633: #line 1114 \"Zend/zend_language_scanner.l\"",
          "5637: #line 5638 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5635: #line 1116 \"Zend/zend_language_scanner.l\"",
          "5639: #line 5640 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 121 ---",
          "[Context before]",
          "5653:   }",
          "5654:   YYDEBUG(555, *YYCURSOR);",
          "5655:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5657:   {",
          "5658:  return T_ARRAY;",
          "5659: }",
          "5661: yy556:",
          "5662:   YYDEBUG(556, *YYCURSOR);",
          "5663:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5656: #line 1336 \"Zend/zend_language_scanner.l\"",
          "5660: #line 5661 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5658: #line 1338 \"Zend/zend_language_scanner.l\"",
          "5662: #line 5663 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 122 ---",
          "[Context before]",
          "5666:   }",
          "5667:   YYDEBUG(557, *YYCURSOR);",
          "5668:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5670:   {",
          "5671:  return T_LOGICAL_AND;",
          "5672: }",
          "5674: yy558:",
          "5675:   YYDEBUG(558, *YYCURSOR);",
          "5676:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5669: #line 1432 \"Zend/zend_language_scanner.l\"",
          "5673: #line 5674 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5671: #line 1434 \"Zend/zend_language_scanner.l\"",
          "5675: #line 5676 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 123 ---",
          "[Context before]",
          "5704:   }",
          "5705:   YYDEBUG(564, *YYCURSOR);",
          "5706:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5708:   {",
          "5709:  return T_ABSTRACT;",
          "5710: }",
          "5712: yy565:",
          "5713:   YYDEBUG(565, *YYCURSOR);",
          "5714:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5707: #line 1304 \"Zend/zend_language_scanner.l\"",
          "5711: #line 5712 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5709: #line 1306 \"Zend/zend_language_scanner.l\"",
          "5713: #line 5714 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 124 ---",
          "[Context before]",
          "5732:   }",
          "5733:   YYDEBUG(569, *YYCURSOR);",
          "5734:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5736:   {",
          "5737:  return T_WHILE;",
          "5738: }",
          "5740: yy570:",
          "5741:   YYDEBUG(570, *YYCURSOR);",
          "5742:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5735: #line 1074 \"Zend/zend_language_scanner.l\"",
          "5739: #line 5740 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5737: #line 1076 \"Zend/zend_language_scanner.l\"",
          "5741: #line 5742 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 125 ---",
          "[Context before]",
          "5745:   }",
          "5746:   YYDEBUG(571, *YYCURSOR);",
          "5747:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5749:   {",
          "5750:  return T_IF;",
          "5751: }",
          "5753: yy572:",
          "5754:   YYDEBUG(572, *YYCURSOR);",
          "5755:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5748: #line 1058 \"Zend/zend_language_scanner.l\"",
          "5752: #line 5753 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5750: #line 1060 \"Zend/zend_language_scanner.l\"",
          "5754: #line 5755 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 126 ---",
          "[Context before]",
          "5801:   }",
          "5802:   YYDEBUG(578, *YYCURSOR);",
          "5803:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5805:   {",
          "5806:  return T_ISSET;",
          "5807: }",
          "5809: yy579:",
          "5810:   YYDEBUG(579, *YYCURSOR);",
          "5811:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5804: #line 1288 \"Zend/zend_language_scanner.l\"",
          "5808: #line 5809 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5806: #line 1290 \"Zend/zend_language_scanner.l\"",
          "5810: #line 5811 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 127 ---",
          "[Context before]",
          "5859: yy586:",
          "5860:   YYDEBUG(586, *YYCURSOR);",
          "5861:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5863:   {",
          "5864:  return T_INCLUDE;",
          "5865: }",
          "5867: yy587:",
          "5868:   YYDEBUG(587, *YYCURSOR);",
          "5869:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5862: #line 1256 \"Zend/zend_language_scanner.l\"",
          "5866: #line 5867 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5864: #line 1258 \"Zend/zend_language_scanner.l\"",
          "5868: #line 5869 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 128 ---",
          "[Context before]",
          "5892:   }",
          "5893:   YYDEBUG(592, *YYCURSOR);",
          "5894:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5896:   {",
          "5897:  return T_INCLUDE_ONCE;",
          "5898: }",
          "5900: yy593:",
          "5901:   YYDEBUG(593, *YYCURSOR);",
          "5902:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5895: #line 1260 \"Zend/zend_language_scanner.l\"",
          "5899: #line 5900 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5897: #line 1262 \"Zend/zend_language_scanner.l\"",
          "5901: #line 5902 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 129 ---",
          "[Context before]",
          "5930:   }",
          "5931:   YYDEBUG(599, *YYCURSOR);",
          "5932:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5934:   {",
          "5935:  return T_INTERFACE;",
          "5936: }",
          "5938: yy600:",
          "5939:   YYDEBUG(600, *YYCURSOR);",
          "5940:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5933: #line 1158 \"Zend/zend_language_scanner.l\"",
          "5937: #line 5938 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5935: #line 1160 \"Zend/zend_language_scanner.l\"",
          "5939: #line 5940 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 130 ---",
          "[Context before]",
          "5984:   }",
          "5985:   YYDEBUG(607, *YYCURSOR);",
          "5986:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5988:   {",
          "5989:         return T_INSTEADOF;",
          "5990: }",
          "5992: yy608:",
          "5993:   YYDEBUG(608, *YYCURSOR);",
          "5994:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5987: #line 1280 \"Zend/zend_language_scanner.l\"",
          "5991: #line 5992 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "5989: #line 1282 \"Zend/zend_language_scanner.l\"",
          "5993: #line 5994 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 131 ---",
          "[Context before]",
          "6017:   }",
          "6018:   YYDEBUG(613, *YYCURSOR);",
          "6019:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6021:   {",
          "6022:  return T_INSTANCEOF;",
          "6023: }",
          "6025: yy614:",
          "6026:   YYDEBUG(614, *YYCURSOR);",
          "6027:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6020: #line 1110 \"Zend/zend_language_scanner.l\"",
          "6024: #line 6025 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6022: #line 1112 \"Zend/zend_language_scanner.l\"",
          "6026: #line 6027 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 132 ---",
          "[Context before]",
          "6065:   }",
          "6066:   YYDEBUG(622, *YYCURSOR);",
          "6067:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6069:   {",
          "6070:  return T_IMPLEMENTS;",
          "6071: }",
          "6073: yy623:",
          "6074:   YYDEBUG(623, *YYCURSOR);",
          "6075:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6068: #line 1170 \"Zend/zend_language_scanner.l\"",
          "6072: #line 6073 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6070: #line 1172 \"Zend/zend_language_scanner.l\"",
          "6074: #line 6075 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 133 ---",
          "[Context before]",
          "6097:   }",
          "6098:   YYDEBUG(626, *YYCURSOR);",
          "6099:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6101:   {",
          "6102:  return T_TRY;",
          "6103: }",
          "6105: yy627:",
          "6106:   YYDEBUG(627, *YYCURSOR);",
          "6107:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6100: #line 1042 \"Zend/zend_language_scanner.l\"",
          "6104: #line 6105 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6102: #line 1044 \"Zend/zend_language_scanner.l\"",
          "6106: #line 6107 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 134 ---",
          "[Context before]",
          "6120:   }",
          "6121:   YYDEBUG(630, *YYCURSOR);",
          "6122:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6124:   {",
          "6125:  return T_TRAIT;",
          "6126: }",
          "6128: yy631:",
          "6129:   YYDEBUG(631, *YYCURSOR);",
          "6130:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6123: #line 1162 \"Zend/zend_language_scanner.l\"",
          "6127: #line 6128 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6125: #line 1164 \"Zend/zend_language_scanner.l\"",
          "6129: #line 6130 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 135 ---",
          "[Context before]",
          "6143:   }",
          "6144:   YYDEBUG(634, *YYCURSOR);",
          "6145:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6147:   {",
          "6148:  return T_THROW;",
          "6149: }",
          "6151: yy635:",
          "6152:   YYDEBUG(635, *YYCURSOR);",
          "6153:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6146: #line 1054 \"Zend/zend_language_scanner.l\"",
          "6150: #line 6151 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6148: #line 1056 \"Zend/zend_language_scanner.l\"",
          "6152: #line 6153 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 136 ---",
          "[Context before]",
          "6171:   }",
          "6172:   YYDEBUG(639, *YYCURSOR);",
          "6173:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6175:   {",
          "6176:  return T_YIELD;",
          "6177: }",
          "6179: yy640:",
          "6180:   YYDEBUG(640, *YYCURSOR);",
          "6181:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6174: #line 1038 \"Zend/zend_language_scanner.l\"",
          "6178: #line 6179 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6176: #line 1040 \"Zend/zend_language_scanner.l\"",
          "6180: #line 6181 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 137 ---",
          "[Context before]",
          "6236: yy647:",
          "6237:   YYDEBUG(647, *YYCURSOR);",
          "6238:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6240:   {",
          "6241:  return T_REQUIRE;",
          "6242: }",
          "6244: yy648:",
          "6245:   YYDEBUG(648, *YYCURSOR);",
          "6246:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6239: #line 1264 \"Zend/zend_language_scanner.l\"",
          "6243: #line 6244 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6241: #line 1266 \"Zend/zend_language_scanner.l\"",
          "6245: #line 6246 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 138 ---",
          "[Context before]",
          "6269:   }",
          "6270:   YYDEBUG(653, *YYCURSOR);",
          "6271:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6273:   {",
          "6274:  return T_REQUIRE_ONCE;",
          "6275: }",
          "6277: yy654:",
          "6278:   YYDEBUG(654, *YYCURSOR);",
          "6279:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6272: #line 1268 \"Zend/zend_language_scanner.l\"",
          "6276: #line 6277 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6274: #line 1270 \"Zend/zend_language_scanner.l\"",
          "6278: #line 6279 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 139 ---",
          "[Context before]",
          "6292:   }",
          "6293:   YYDEBUG(657, *YYCURSOR);",
          "6294:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6296:   {",
          "6297:  return T_RETURN;",
          "6298: }",
          "6300: yy658:",
          "6301:   YYDEBUG(658, *YYCURSOR);",
          "6302:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6295: #line 1034 \"Zend/zend_language_scanner.l\"",
          "6299: #line 6300 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6297: #line 1036 \"Zend/zend_language_scanner.l\"",
          "6301: #line 6302 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 140 ---",
          "[Context before]",
          "6386:   }",
          "6387:   YYDEBUG(668, *YYCURSOR);",
          "6388:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6390:   {",
          "6391:  return T_CONTINUE;",
          "6392: }",
          "6394: yy669:",
          "6395:   YYDEBUG(669, *YYCURSOR);",
          "6396:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6389: #line 1138 \"Zend/zend_language_scanner.l\"",
          "6393: #line 6394 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6391: #line 1140 \"Zend/zend_language_scanner.l\"",
          "6395: #line 6396 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 141 ---",
          "[Context before]",
          "6399:   }",
          "6400:   YYDEBUG(670, *YYCURSOR);",
          "6401:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6403:   {",
          "6404:  return T_CONST;",
          "6405: }",
          "6407: yy671:",
          "6408:   YYDEBUG(671, *YYCURSOR);",
          "6409:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6402: #line 1030 \"Zend/zend_language_scanner.l\"",
          "6406: #line 6407 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6404: #line 1032 \"Zend/zend_language_scanner.l\"",
          "6408: #line 6409 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 142 ---",
          "[Context before]",
          "6428:   }",
          "6429:   YYDEBUG(675, *YYCURSOR);",
          "6430:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6432:   {",
          "6433:  return T_CLONE;",
          "6434: }",
          "6436: yy676:",
          "6437:   YYDEBUG(676, *YYCURSOR);",
          "6438:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6431: #line 1216 \"Zend/zend_language_scanner.l\"",
          "6435: #line 6436 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6433: #line 1218 \"Zend/zend_language_scanner.l\"",
          "6437: #line 6438 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 143 ---",
          "[Context before]",
          "6446:   }",
          "6447:   YYDEBUG(678, *YYCURSOR);",
          "6448:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6450:   {",
          "6451:  return T_CLASS;",
          "6452: }",
          "6454: yy679:",
          "6455:   YYDEBUG(679, *YYCURSOR);",
          "6456:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6449: #line 1154 \"Zend/zend_language_scanner.l\"",
          "6453: #line 6454 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6451: #line 1156 \"Zend/zend_language_scanner.l\"",
          "6455: #line 6456 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 144 ---",
          "[Context before]",
          "6496:   }",
          "6497:   YYDEBUG(687, *YYCURSOR);",
          "6498:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6500:   {",
          "6501:  return T_CALLABLE;",
          "6502: }",
          "6504: yy688:",
          "6505:   YYDEBUG(688, *YYCURSOR);",
          "6506:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6499: #line 1340 \"Zend/zend_language_scanner.l\"",
          "6503: #line 6504 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6501: #line 1342 \"Zend/zend_language_scanner.l\"",
          "6505: #line 6506 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 145 ---",
          "[Context before]",
          "6509:   }",
          "6510:   YYDEBUG(689, *YYCURSOR);",
          "6511:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6513:   {",
          "6514:  return T_CASE;",
          "6515: }",
          "6517: yy690:",
          "6518:   YYDEBUG(690, *YYCURSOR);",
          "6519:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6512: #line 1126 \"Zend/zend_language_scanner.l\"",
          "6516: #line 6517 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6514: #line 1128 \"Zend/zend_language_scanner.l\"",
          "6518: #line 6519 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 146 ---",
          "[Context before]",
          "6527:   }",
          "6528:   YYDEBUG(692, *YYCURSOR);",
          "6529:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6531:   {",
          "6532:  return T_CATCH;",
          "6533: }",
          "6535: yy693:",
          "6536:   YYDEBUG(693, *YYCURSOR);",
          "6537:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6530: #line 1046 \"Zend/zend_language_scanner.l\"",
          "6534: #line 6535 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6532: #line 1048 \"Zend/zend_language_scanner.l\"",
          "6536: #line 6537 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 147 ---",
          "[Context before]",
          "6582:   }",
          "6583:   YYDEBUG(702, *YYCURSOR);",
          "6584:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6586:   {",
          "6587:  return T_FUNCTION;",
          "6588: }",
          "6590: yy703:",
          "6591:   YYDEBUG(703, *YYCURSOR);",
          "6592:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6585: #line 1026 \"Zend/zend_language_scanner.l\"",
          "6589: #line 6590 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6587: #line 1028 \"Zend/zend_language_scanner.l\"",
          "6591: #line 6592 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 148 ---",
          "[Context before]",
          "6610: yy704:",
          "6611:   YYDEBUG(704, *YYCURSOR);",
          "6612:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6614:   {",
          "6615:  return T_FOR;",
          "6616: }",
          "6618: yy705:",
          "6619:   YYDEBUG(705, *YYCURSOR);",
          "6620:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6613: #line 1086 \"Zend/zend_language_scanner.l\"",
          "6617: #line 6618 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6615: #line 1088 \"Zend/zend_language_scanner.l\"",
          "6619: #line 6620 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 149 ---",
          "[Context before]",
          "6638:   }",
          "6639:   YYDEBUG(709, *YYCURSOR);",
          "6640:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6642:   {",
          "6643:  return T_FOREACH;",
          "6644: }",
          "6646: yy710:",
          "6647:   YYDEBUG(710, *YYCURSOR);",
          "6648:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6641: #line 1094 \"Zend/zend_language_scanner.l\"",
          "6645: #line 6646 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6643: #line 1096 \"Zend/zend_language_scanner.l\"",
          "6647: #line 6648 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 150 ---",
          "[Context before]",
          "6676: yy713:",
          "6677:   YYDEBUG(713, *YYCURSOR);",
          "6678:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6680:   {",
          "6681:  return T_FINAL;",
          "6682: }",
          "6684: yy714:",
          "6685:   YYDEBUG(714, *YYCURSOR);",
          "6686:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6679: #line 1308 \"Zend/zend_language_scanner.l\"",
          "6683: #line 6684 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6681: #line 1310 \"Zend/zend_language_scanner.l\"",
          "6685: #line 6686 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 151 ---",
          "[Context before]",
          "6694:   }",
          "6695:   YYDEBUG(716, *YYCURSOR);",
          "6696:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6698:   {",
          "6699:  return T_FINALLY;",
          "6700: }",
          "6702: yy717:",
          "6703:   YYDEBUG(717, *YYCURSOR);",
          "6704:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6697: #line 1050 \"Zend/zend_language_scanner.l\"",
          "6701: #line 6702 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6699: #line 1052 \"Zend/zend_language_scanner.l\"",
          "6703: #line 6704 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 152 ---",
          "[Context before]",
          "6729:   }",
          "6730:   YYDEBUG(720, *YYCURSOR);",
          "6731:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6733:   {",
          "6734:  return T_DO;",
          "6735: }",
          "6737: yy721:",
          "6738:   YYDEBUG(721, *YYCURSOR);",
          "6739:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6732: #line 1082 \"Zend/zend_language_scanner.l\"",
          "6736: #line 6737 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6734: #line 1084 \"Zend/zend_language_scanner.l\"",
          "6738: #line 6739 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 153 ---",
          "[Context before]",
          "6742:   }",
          "6743:   YYDEBUG(722, *YYCURSOR);",
          "6744:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6746:   {",
          "6747:  return T_EXIT;",
          "6748: }",
          "6750: yy723:",
          "6751:   YYDEBUG(723, *YYCURSOR);",
          "6752:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6745: #line 1022 \"Zend/zend_language_scanner.l\"",
          "6749: #line 6750 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6747: #line 1024 \"Zend/zend_language_scanner.l\"",
          "6751: #line 6752 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 154 ---",
          "[Context before]",
          "6781:   }",
          "6782:   YYDEBUG(729, *YYCURSOR);",
          "6783:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6785:   {",
          "6786:  return T_DEFAULT;",
          "6787: }",
          "6789: yy730:",
          "6790:   YYDEBUG(730, *YYCURSOR);",
          "6791:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6784: #line 1130 \"Zend/zend_language_scanner.l\"",
          "6788: #line 6789 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6786: #line 1132 \"Zend/zend_language_scanner.l\"",
          "6790: #line 6791 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 155 ---",
          "[Context before]",
          "6809:   }",
          "6810:   YYDEBUG(734, *YYCURSOR);",
          "6811:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6813:   {",
          "6814:  return T_DECLARE;",
          "6815: }",
          "6817: yy735:",
          "6818:   YYDEBUG(735, *YYCURSOR);",
          "6819:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6812: #line 1102 \"Zend/zend_language_scanner.l\"",
          "6816: #line 6817 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6814: #line 1104 \"Zend/zend_language_scanner.l\"",
          "6818: #line 6819 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 156 ---",
          "[Context before]",
          "6893:   }",
          "6894:   YYDEBUG(747, *YYCURSOR);",
          "6895:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6897:   {",
          "6898:  return T_EXTENDS;",
          "6899: }",
          "6901: yy748:",
          "6902:   YYDEBUG(748, *YYCURSOR);",
          "6903:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6896: #line 1166 \"Zend/zend_language_scanner.l\"",
          "6900: #line 6901 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6898: #line 1168 \"Zend/zend_language_scanner.l\"",
          "6902: #line 6903 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 157 ---",
          "[Context before]",
          "6906:   }",
          "6907:   YYDEBUG(749, *YYCURSOR);",
          "6908:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6910:   {",
          "6911:  return T_EXIT;",
          "6912: }",
          "6914: yy750:",
          "6915:   YYDEBUG(750, *YYCURSOR);",
          "6916:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6909: #line 1018 \"Zend/zend_language_scanner.l\"",
          "6913: #line 6914 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6911: #line 1020 \"Zend/zend_language_scanner.l\"",
          "6915: #line 6916 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 158 ---",
          "[Context before]",
          "6924:   }",
          "6925:   YYDEBUG(752, *YYCURSOR);",
          "6926:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6928:   {",
          "6929:  return T_EVAL;",
          "6930: }",
          "6932: yy753:",
          "6933:   YYDEBUG(753, *YYCURSOR);",
          "6934:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6927: #line 1252 \"Zend/zend_language_scanner.l\"",
          "6931: #line 6932 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "6929: #line 1254 \"Zend/zend_language_scanner.l\"",
          "6933: #line 6934 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 159 ---",
          "[Context before]",
          "6998:   }",
          "6999:   YYDEBUG(763, *YYCURSOR);",
          "7000:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7002:   {",
          "7003:  return T_ENDWHILE;",
          "7004: }",
          "7006: yy764:",
          "7007:   YYDEBUG(764, *YYCURSOR);",
          "7008:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7001: #line 1078 \"Zend/zend_language_scanner.l\"",
          "7005: #line 7006 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7003: #line 1080 \"Zend/zend_language_scanner.l\"",
          "7007: #line 7008 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 160 ---",
          "[Context before]",
          "7031:   }",
          "7032:   YYDEBUG(769, *YYCURSOR);",
          "7033:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7035:   {",
          "7036:  return T_ENDSWITCH;",
          "7037: }",
          "7039: yy770:",
          "7040:   YYDEBUG(770, *YYCURSOR);",
          "7041:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7034: #line 1122 \"Zend/zend_language_scanner.l\"",
          "7038: #line 7039 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7036: #line 1124 \"Zend/zend_language_scanner.l\"",
          "7040: #line 7041 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 161 ---",
          "[Context before]",
          "7044:   }",
          "7045:   YYDEBUG(771, *YYCURSOR);",
          "7046:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7048:   {",
          "7049:  return T_ENDIF;",
          "7050: }",
          "7052: yy772:",
          "7053:   YYDEBUG(772, *YYCURSOR);",
          "7054:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7047: #line 1066 \"Zend/zend_language_scanner.l\"",
          "7051: #line 7052 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7049: #line 1068 \"Zend/zend_language_scanner.l\"",
          "7053: #line 7054 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 162 ---",
          "[Context before]",
          "7077: yy774:",
          "7078:   YYDEBUG(774, *YYCURSOR);",
          "7079:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7081:   {",
          "7082:  return T_ENDFOR;",
          "7083: }",
          "7085: yy775:",
          "7086:   YYDEBUG(775, *YYCURSOR);",
          "7087:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7080: #line 1090 \"Zend/zend_language_scanner.l\"",
          "7084: #line 7085 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7082: #line 1092 \"Zend/zend_language_scanner.l\"",
          "7086: #line 7087 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 163 ---",
          "[Context before]",
          "7105:   }",
          "7106:   YYDEBUG(779, *YYCURSOR);",
          "7107:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7109:   {",
          "7110:  return T_ENDFOREACH;",
          "7111: }",
          "7113: yy780:",
          "7114:   YYDEBUG(780, *YYCURSOR);",
          "7115:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7108: #line 1098 \"Zend/zend_language_scanner.l\"",
          "7112: #line 7113 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7110: #line 1100 \"Zend/zend_language_scanner.l\"",
          "7114: #line 7115 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 164 ---",
          "[Context before]",
          "7143:   }",
          "7144:   YYDEBUG(786, *YYCURSOR);",
          "7145:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7147:   {",
          "7148:  return T_ENDDECLARE;",
          "7149: }",
          "7151: yy787:",
          "7152:   YYDEBUG(787, *YYCURSOR);",
          "7153:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7146: #line 1106 \"Zend/zend_language_scanner.l\"",
          "7150: #line 7151 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7148: #line 1108 \"Zend/zend_language_scanner.l\"",
          "7152: #line 7153 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 165 ---",
          "[Context before]",
          "7166:   }",
          "7167:   YYDEBUG(790, *YYCURSOR);",
          "7168:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7170:   {",
          "7171:  return T_EMPTY;",
          "7172: }",
          "7174: yy791:",
          "7175:   YYDEBUG(791, *YYCURSOR);",
          "7176:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7169: #line 1292 \"Zend/zend_language_scanner.l\"",
          "7173: #line 7174 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7171: #line 1294 \"Zend/zend_language_scanner.l\"",
          "7175: #line 7176 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 166 ---",
          "[Context before]",
          "7199: yy793:",
          "7200:   YYDEBUG(793, *YYCURSOR);",
          "7201:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7203:   {",
          "7204:  return T_ELSE;",
          "7205: }",
          "7207: yy794:",
          "7208:   YYDEBUG(794, *YYCURSOR);",
          "7209:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7202: #line 1070 \"Zend/zend_language_scanner.l\"",
          "7206: #line 7207 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7204: #line 1072 \"Zend/zend_language_scanner.l\"",
          "7208: #line 7209 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 167 ---",
          "[Context before]",
          "7217:   }",
          "7218:   YYDEBUG(796, *YYCURSOR);",
          "7219:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7221:   {",
          "7222:  return T_ELSEIF;",
          "7223: }",
          "7225: yy797:",
          "7226:   YYDEBUG(797, *YYCURSOR);",
          "7227:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7220: #line 1062 \"Zend/zend_language_scanner.l\"",
          "7224: #line 7225 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7222: #line 1064 \"Zend/zend_language_scanner.l\"",
          "7226: #line 7227 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 168 ---",
          "[Context before]",
          "7235:   }",
          "7236:   YYDEBUG(799, *YYCURSOR);",
          "7237:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7239:   {",
          "7240:  return T_ECHO;",
          "7241: }",
          "7243:  }",
          "7245: yyc_ST_LOOKING_FOR_PROPERTY:",
          "",
          "[Removed Lines]",
          "7238: #line 1146 \"Zend/zend_language_scanner.l\"",
          "7242: #line 7243 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7240: #line 1148 \"Zend/zend_language_scanner.l\"",
          "7244: #line 7245 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 169 ---",
          "[Context before]",
          "7312: yy803:",
          "7313:   YYDEBUG(803, *YYCURSOR);",
          "7314:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7316:   {",
          "7318:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "7315: #line 1179 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7317: #line 1181 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 170 ---",
          "[Context before]",
          "7320:  HANDLE_NEWLINES(yytext, yyleng);",
          "7321:  return T_WHITESPACE;",
          "7322: }",
          "7324: yy804:",
          "7325:   YYDEBUG(804, *YYCURSOR);",
          "7326:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7323: #line 7324 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7325: #line 7326 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 171 ---",
          "[Context before]",
          "7328: yy805:",
          "7329:   YYDEBUG(805, *YYCURSOR);",
          "7330:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7332:   {",
          "7333:  yyless(0);",
          "7334:  yy_pop_state(TSRMLS_C);",
          "7335:  goto restart;",
          "7336: }",
          "7338: yy806:",
          "7339:   YYDEBUG(806, *YYCURSOR);",
          "7340:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7331: #line 1198 \"Zend/zend_language_scanner.l\"",
          "7337: #line 7338 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7333: #line 1200 \"Zend/zend_language_scanner.l\"",
          "7339: #line 7340 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 172 ---",
          "[Context before]",
          "7343: yy807:",
          "7344:   YYDEBUG(807, *YYCURSOR);",
          "7345:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7347:   {",
          "7348:  yy_pop_state(TSRMLS_C);",
          "7349:  zend_copy_value(zendlval, yytext, yyleng);",
          "7350:  zendlval->type = IS_STRING;",
          "7351:  return T_STRING;",
          "7352: }",
          "7354: yy808:",
          "7355:   YYDEBUG(808, *YYCURSOR);",
          "7356:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7346: #line 1191 \"Zend/zend_language_scanner.l\"",
          "7353: #line 7354 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7348: #line 1193 \"Zend/zend_language_scanner.l\"",
          "7355: #line 7356 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 173 ---",
          "[Context before]",
          "7371:   ++YYCURSOR;",
          "7372:   YYDEBUG(812, *YYCURSOR);",
          "7373:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7375:   {",
          "7376:  return T_OBJECT_OPERATOR;",
          "7377: }",
          "7379: yy813:",
          "7380:   YYDEBUG(813, *YYCURSOR);",
          "7381:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7374: #line 1187 \"Zend/zend_language_scanner.l\"",
          "7378: #line 7379 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7376: #line 1189 \"Zend/zend_language_scanner.l\"",
          "7380: #line 7381 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 174 ---",
          "[Context before]",
          "7460: yy818:",
          "7461:   YYDEBUG(818, *YYCURSOR);",
          "7462:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7464:   {",
          "7465:  yyless(0);",
          "7466:  yy_pop_state(TSRMLS_C);",
          "7467:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7468:  goto restart;",
          "7469: }",
          "7471: yy819:",
          "7472:   YYDEBUG(819, *YYCURSOR);",
          "7473:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7463: #line 1484 \"Zend/zend_language_scanner.l\"",
          "7470: #line 7471 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7465: #line 1486 \"Zend/zend_language_scanner.l\"",
          "7472: #line 7473 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 175 ---",
          "[Context before]",
          "7492:   ++YYCURSOR;",
          "7493:   YYDEBUG(824, *YYCURSOR);",
          "7494:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7496:   {",
          "7497:  yyless(yyleng - 1);",
          "7498:  zend_copy_value(zendlval, yytext, yyleng);",
          "",
          "[Removed Lines]",
          "7495: #line 1474 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7497: #line 1476 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 176 ---",
          "[Context before]",
          "7501:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7502:  return T_STRING_VARNAME;",
          "7503: }",
          "7505:  }",
          "7507: yyc_ST_NOWDOC:",
          "",
          "[Removed Lines]",
          "7504: #line 7505 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7506: #line 7507 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 177 ---",
          "[Context before]",
          "7512:  ++YYCURSOR;",
          "7513:  YYDEBUG(828, *YYCURSOR);",
          "7514:  yyleng = YYCURSOR - SCNG(yy_text);",
          "7516:  {",
          "7517:  int newline = 0;",
          "",
          "[Removed Lines]",
          "7515: #line 2368 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7517: #line 2370 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 178 ---",
          "[Context before]",
          "7569:  HANDLE_NEWLINES(yytext, yyleng - newline);",
          "7570:  return T_ENCAPSED_AND_WHITESPACE;",
          "7571: }",
          "7574: yyc_ST_VAR_OFFSET:",
          "7575:  {",
          "",
          "[Removed Lines]",
          "7572: #line 7573 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7574: #line 7575 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 179 ---",
          "[Context before]",
          "7676: yy832:",
          "7677:   YYDEBUG(832, *YYCURSOR);",
          "7678:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7681:  if (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {",
          "7682:   zendlval->value.lval = strtol(yytext, NULL, 10);",
          "",
          "[Removed Lines]",
          "7679: #line 1562 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7681: #line 1564 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 180 ---",
          "[Context before]",
          "7688:  }",
          "7689:  return T_NUM_STRING;",
          "7690: }",
          "7692: yy833:",
          "7693:   YYDEBUG(833, *YYCURSOR);",
          "7694:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7691: #line 7692 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7693: #line 7694 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 181 ---",
          "[Context before]",
          "7708: yy835:",
          "7709:   YYDEBUG(835, *YYCURSOR);",
          "7710:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7712:   {",
          "7714:  return yytext[0];",
          "7715: }",
          "7717: yy836:",
          "7718:   YYDEBUG(836, *YYCURSOR);",
          "7719:   ++YYCURSOR;",
          "7720:   YYDEBUG(837, *YYCURSOR);",
          "7721:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7723:   {",
          "7724:  yy_pop_state(TSRMLS_C);",
          "7725:  return ']';",
          "7726: }",
          "7728: yy838:",
          "7729:   YYDEBUG(838, *YYCURSOR);",
          "7730:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7711: #line 1894 \"Zend/zend_language_scanner.l\"",
          "7716: #line 7717 \"Zend/zend_language_scanner.c\"",
          "7722: #line 1889 \"Zend/zend_language_scanner.l\"",
          "7727: #line 7728 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7713: #line 1896 \"Zend/zend_language_scanner.l\"",
          "7718: #line 7719 \"Zend/zend_language_scanner.c\"",
          "7724: #line 1891 \"Zend/zend_language_scanner.l\"",
          "7729: #line 7730 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 182 ---",
          "[Context before]",
          "7734:   ++YYCURSOR;",
          "7735:   YYDEBUG(840, *YYCURSOR);",
          "7736:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7738:   {",
          "7740:  yyless(0);",
          "7741:  yy_pop_state(TSRMLS_C);",
          "7742:  return T_ENCAPSED_AND_WHITESPACE;",
          "7743: }",
          "7745: yy841:",
          "7746:   YYDEBUG(841, *YYCURSOR);",
          "7747:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7737: #line 1899 \"Zend/zend_language_scanner.l\"",
          "7744: #line 7745 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7739: #line 1901 \"Zend/zend_language_scanner.l\"",
          "7746: #line 7747 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 183 ---",
          "[Context before]",
          "7750: yy842:",
          "7751:   YYDEBUG(842, *YYCURSOR);",
          "7752:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7754:   {",
          "7755:  zend_copy_value(zendlval, yytext, yyleng);",
          "7756:  zendlval->type = IS_STRING;",
          "7757:  return T_STRING;",
          "7758: }",
          "7760: yy843:",
          "7761:   YYDEBUG(843, *YYCURSOR);",
          "7762:   ++YYCURSOR;",
          "7763:   YYDEBUG(844, *YYCURSOR);",
          "7764:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7766:   {",
          "7767:  if (YYCURSOR > YYLIMIT) {",
          "7768:   return 0;",
          "",
          "[Removed Lines]",
          "7753: #line 1906 \"Zend/zend_language_scanner.l\"",
          "7759: #line 7760 \"Zend/zend_language_scanner.c\"",
          "7765: #line 2426 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7755: #line 1908 \"Zend/zend_language_scanner.l\"",
          "7761: #line 7762 \"Zend/zend_language_scanner.c\"",
          "7767: #line 2428 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------",
          "--- Hunk 184 ---",
          "[Context before]",
          "7771:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "7772:  goto restart;",
          "7773: }",
          "7775: yy845:",
          "7776:   YYDEBUG(845, *YYCURSOR);",
          "7777:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7774: #line 7775 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7776: #line 7777 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 185 ---",
          "[Context before]",
          "7807: yy849:",
          "7808:   YYDEBUG(849, *YYCURSOR);",
          "7809:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7811:   {",
          "7812:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "7813:  zendlval->type = IS_STRING;",
          "7814:  return T_VARIABLE;",
          "7815: }",
          "7817: yy850:",
          "7818:   YYDEBUG(850, *YYCURSOR);",
          "7819:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7810: #line 1883 \"Zend/zend_language_scanner.l\"",
          "7816: #line 7817 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7812: #line 1885 \"Zend/zend_language_scanner.l\"",
          "7818: #line 7819 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 186 ---",
          "[Context before]",
          "7853: yy857:",
          "7854:   YYDEBUG(857, *YYCURSOR);",
          "7855:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7858:  zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "7859:  zendlval->value.str.len = yyleng;",
          "7860:  zendlval->type = IS_STRING;",
          "7861:  return T_NUM_STRING;",
          "7862: }",
          "7864: yy858:",
          "7865:   YYDEBUG(858, *YYCURSOR);",
          "7866:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7856: #line 1574 \"Zend/zend_language_scanner.l\"",
          "7863: #line 7864 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "7858: #line 1576 \"Zend/zend_language_scanner.l\"",
          "7865: #line 7866 \"Zend/zend_language_scanner.c\"",
          "",
          "---------------",
          "--- Hunk 187 ---",
          "[Context before]",
          "7883:   goto yy857;",
          "7884:  }",
          "7885: }",
          "7888: }",
          "",
          "[Removed Lines]",
          "7886: #line 2435 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "7888: #line 2437 \"Zend/zend_language_scanner.l\"",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l": [
          "File: Zend/zend_language_scanner.l -> Zend/zend_language_scanner.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "580:   init_op_array(op_array, ZEND_USER_FUNCTION, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "581:   CG(in_compilation) = 1;",
          "582:   CG(active_op_array) = op_array;",
          "583:   zend_init_compiler_context(TSRMLS_C);",
          "584:   compiler_result = zendparse(TSRMLS_C);",
          "585:   zend_do_return(&retval_znode, 0 TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "583:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "749:   init_op_array(op_array, ZEND_EVAL_CODE, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "750:   CG(interactive) = orig_interactive;",
          "751:   CG(active_op_array) = op_array;",
          "752:   zend_init_compiler_context(TSRMLS_C);",
          "753:   BEGIN(ST_IN_SCRIPTING);",
          "754:   compiler_result = zendparse(TSRMLS_C);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "753:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner_defs.h||Zend/zend_language_scanner_defs.h": [
          "File: Zend/zend_language_scanner_defs.h -> Zend/zend_language_scanner_defs.h"
        ]
      }
    },
    {
      "candidate_hash": "13cb1b7e4ac8f21b798d49c2cee5a0cbd84c3f3d",
      "candidate_info": {
        "commit_hash": "13cb1b7e4ac8f21b798d49c2cee5a0cbd84c3f3d",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/13cb1b7e4ac8f21b798d49c2cee5a0cbd84c3f3d",
        "files": [
          "Zend/zend_int.h",
          "Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l",
          "Zend/zend_language_scanner_defs.h"
        ],
        "message": "made lang scanner use zend_int.h and regenerated it",
        "before_after_code_files": [
          "Zend/zend_int.h||Zend/zend_int.h",
          "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l",
          "Zend/zend_language_scanner_defs.h||Zend/zend_language_scanner_defs.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
            "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
          ],
          "candidate": [
            "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
            "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_int.h||Zend/zend_int.h": [
          "File: Zend/zend_int.h -> Zend/zend_int.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: # ifdef PHP_WIN32",
          "46: #  define ZEND_ITOA(i, s, len) _i64toa_s((i), (s), (len), 10)",
          "47: #  define ZEND_ATOI(i, s) i = _atoi64((s))",
          "48: # else",
          "49: #  define ZEND_ITOA(i, s, len) \\",
          "50:  do { \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: #  define ZEND_STRTOL(s0, s1, base) _strtoi64((s0), (s1), (base))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:   (s)[st] = '\\0'; \\",
          "53:   } while (0)",
          "54: #  define ZEND_ATOI(i, s) (i) = atoll((s))",
          "55: # endif",
          "56: #else",
          "57: # ifdef PHP_WIN32",
          "58: #  define ZEND_ITOA(i, s, len) _ltoa_s((i), (s), (len), 10)",
          "59: #  define ZEND_ATOI(i, s) i = atol((s))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: #  define ZEND_STRTOL(s0, s1, base) strtoll((s0), (s1), (base))",
          "59: # define ZEND_STRTOL(s0, s1, base) strtol((s0), (s1), (base))",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c": [
          "File: Zend/zend_language_scanner.c -> Zend/zend_language_scanner.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:    +----------------------------------------------------------------------+",
          "5:    | Zend Engine                                                          |",
          "",
          "[Removed Lines]",
          "2: #line 1 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1006: yymore_restart:",
          "1010: {",
          "1011:  YYCTYPE yych;",
          "1012:  unsigned int yyaccept = 0;",
          "",
          "[Removed Lines]",
          "1009: #line 1010 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1105: yy3:",
          "1106:   YYDEBUG(3, *YYCURSOR);",
          "1107:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1109:   {",
          "1110:  if (YYCURSOR > YYLIMIT) {",
          "1111:   return 0;",
          "",
          "[Removed Lines]",
          "1108: #line 1807 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1165:  HANDLE_NEWLINES(yytext, yyleng);",
          "1166:  return T_INLINE_HTML;",
          "1167: }",
          "1169: yy4:",
          "1170:   YYDEBUG(4, *YYCURSOR);",
          "1171:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1168: #line 1169 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1183: yy6:",
          "1184:   YYDEBUG(6, *YYCURSOR);",
          "1185:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1187:   {",
          "1188:  if (CG(short_tags)) {",
          "",
          "[Removed Lines]",
          "1186: #line 1795 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1195:   goto inline_char_handler;",
          "1196:  }",
          "1197: }",
          "1199: yy7:",
          "1200:   YYDEBUG(7, *YYCURSOR);",
          "1201:   ++YYCURSOR;",
          "1202:   if ((yych = *YYCURSOR) == '=') goto yy43;",
          "1203:   YYDEBUG(8, *YYCURSOR);",
          "1204:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1206:   {",
          "1207:  if (CG(asp_tags)) {",
          "",
          "[Removed Lines]",
          "1198: #line 1199 \"Zend/zend_language_scanner.c\"",
          "1205: #line 1772 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1214:   goto inline_char_handler;",
          "1215:  }",
          "1216: }",
          "1218: yy9:",
          "1219:   YYDEBUG(9, *YYCURSOR);",
          "1220:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1217: #line 1218 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1400:   ++YYCURSOR;",
          "1401:   YYDEBUG(38, *YYCURSOR);",
          "1402:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1404:   {",
          "1405:  YYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));",
          "",
          "[Removed Lines]",
          "1403: #line 1732 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1417:  BEGIN(ST_IN_SCRIPTING);",
          "1418:  return T_OPEN_TAG;",
          "1419: }",
          "1421: yy39:",
          "1422:   YYDEBUG(39, *YYCURSOR);",
          "1423:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1420: #line 1421 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1444:   ++YYCURSOR;",
          "1445:   YYDEBUG(44, *YYCURSOR);",
          "1446:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1448:   {",
          "1449:  if (CG(asp_tags)) {",
          "",
          "[Removed Lines]",
          "1447: #line 1750 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1456:   goto inline_char_handler;",
          "1457:  }",
          "1458: }",
          "1460: yy45:",
          "1461:   YYDEBUG(45, *YYCURSOR);",
          "1462:   ++YYCURSOR;",
          "1463:   YYDEBUG(46, *YYCURSOR);",
          "1464:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1466:   {",
          "1468:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "1459: #line 1460 \"Zend/zend_language_scanner.c\"",
          "1465: #line 1763 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1470:  BEGIN(ST_IN_SCRIPTING);",
          "1471:  return T_OPEN_TAG_WITH_ECHO;",
          "1472: }",
          "1474: yy47:",
          "1475:   YYDEBUG(47, *YYCURSOR);",
          "1476:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1473: #line 1474 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1497: yy51:",
          "1498:   YYDEBUG(51, *YYCURSOR);",
          "1499:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1501:   {",
          "1503:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "1500: #line 1785 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1506:  BEGIN(ST_IN_SCRIPTING);",
          "1507:  return T_OPEN_TAG;",
          "1508: }",
          "1510: yy52:",
          "1511:   YYDEBUG(52, *YYCURSOR);",
          "1512:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1509: #line 1510 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1577: yy56:",
          "1578:   YYDEBUG(56, *YYCURSOR);",
          "1579:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1581:   {",
          "1582:  if (YYCURSOR > YYLIMIT) {",
          "1583:   return 0;",
          "",
          "[Removed Lines]",
          "1580: #line 2258 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1618:  zend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);",
          "1619:  return T_ENCAPSED_AND_WHITESPACE;",
          "1620: }",
          "1622: yy57:",
          "1623:   YYDEBUG(57, *YYCURSOR);",
          "1624:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1621: #line 1622 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1629:   ++YYCURSOR;",
          "1630:   YYDEBUG(59, *YYCURSOR);",
          "1631:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1633:   {",
          "1634:  BEGIN(ST_IN_SCRIPTING);",
          "1635:  return '`';",
          "1636: }",
          "1638: yy60:",
          "1639:   YYDEBUG(60, *YYCURSOR);",
          "1640:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1632: #line 2202 \"Zend/zend_language_scanner.l\"",
          "1637: #line 1638 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1644:   ++YYCURSOR;",
          "1645:   YYDEBUG(62, *YYCURSOR);",
          "1646:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1648:   {",
          "1649:  zendlval->value.lval = (long) '{';",
          "1650:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1651:  yyless(1);",
          "1652:  return T_CURLY_OPEN;",
          "1653: }",
          "1655: yy63:",
          "1656:   YYDEBUG(63, *YYCURSOR);",
          "1657:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "1647: #line 2189 \"Zend/zend_language_scanner.l\"",
          "1654: #line 1655 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1667: yy65:",
          "1668:   YYDEBUG(65, *YYCURSOR);",
          "1669:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1671:   {",
          "1672:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1673:  zendlval->type = IS_STRING;",
          "1674:  return T_VARIABLE;",
          "1675: }",
          "1677: yy66:",
          "1678:   YYDEBUG(66, *YYCURSOR);",
          "1679:   ++YYCURSOR;",
          "1680:   YYDEBUG(67, *YYCURSOR);",
          "1681:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1683:   {",
          "1684:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1685:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1686: }",
          "1688: yy68:",
          "1689:   YYDEBUG(68, *YYCURSOR);",
          "1690:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1670: #line 1889 \"Zend/zend_language_scanner.l\"",
          "1676: #line 1677 \"Zend/zend_language_scanner.c\"",
          "1682: #line 1465 \"Zend/zend_language_scanner.l\"",
          "1687: #line 1688 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1698:   ++YYCURSOR;",
          "1699:   YYDEBUG(71, *YYCURSOR);",
          "1700:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1702:   {",
          "1703:  yyless(yyleng - 1);",
          "1704:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1701: #line 1881 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1706:  zendlval->type = IS_STRING;",
          "1707:  return T_VARIABLE;",
          "1708: }",
          "1710: yy72:",
          "1711:   YYDEBUG(72, *YYCURSOR);",
          "1712:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1709: #line 1710 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1724:   ++YYCURSOR;",
          "1725:   YYDEBUG(74, *YYCURSOR);",
          "1726:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1728:   {",
          "1729:  yyless(yyleng - 3);",
          "1730:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1727: #line 1871 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1732:  zendlval->type = IS_STRING;",
          "1733:  return T_VARIABLE;",
          "1734: }",
          "1736:  }",
          "1738: yyc_ST_DOUBLE_QUOTES:",
          "",
          "[Removed Lines]",
          "1735: #line 1736 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1800: yy78:",
          "1801:   YYDEBUG(78, *YYCURSOR);",
          "1802:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1804:   {",
          "1805:  if (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {",
          "1806:   YYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;",
          "",
          "[Removed Lines]",
          "1803: #line 2208 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1849:  zend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);",
          "1850:  return T_ENCAPSED_AND_WHITESPACE;",
          "1851: }",
          "1853: yy79:",
          "1854:   YYDEBUG(79, *YYCURSOR);",
          "1855:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1852: #line 1853 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1860:   ++YYCURSOR;",
          "1861:   YYDEBUG(81, *YYCURSOR);",
          "1862:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1864:   {",
          "1865:  BEGIN(ST_IN_SCRIPTING);",
          "1866:  return '\"';",
          "1867: }",
          "1869: yy82:",
          "1870:   YYDEBUG(82, *YYCURSOR);",
          "1871:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1863: #line 2197 \"Zend/zend_language_scanner.l\"",
          "1868: #line 1869 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1875:   ++YYCURSOR;",
          "1876:   YYDEBUG(84, *YYCURSOR);",
          "1877:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1879:   {",
          "1880:  zendlval->value.lval = (long) '{';",
          "1881:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1882:  yyless(1);",
          "1883:  return T_CURLY_OPEN;",
          "1884: }",
          "1886: yy85:",
          "1887:   YYDEBUG(85, *YYCURSOR);",
          "1888:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "1878: #line 2189 \"Zend/zend_language_scanner.l\"",
          "1885: #line 1886 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1898: yy87:",
          "1899:   YYDEBUG(87, *YYCURSOR);",
          "1900:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1902:   {",
          "1903:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1904:  zendlval->type = IS_STRING;",
          "1905:  return T_VARIABLE;",
          "1906: }",
          "1908: yy88:",
          "1909:   YYDEBUG(88, *YYCURSOR);",
          "1910:   ++YYCURSOR;",
          "1911:   YYDEBUG(89, *YYCURSOR);",
          "1912:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1914:   {",
          "1915:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1916:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1917: }",
          "1919: yy90:",
          "1920:   YYDEBUG(90, *YYCURSOR);",
          "1921:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1901: #line 1889 \"Zend/zend_language_scanner.l\"",
          "1907: #line 1908 \"Zend/zend_language_scanner.c\"",
          "1913: #line 1465 \"Zend/zend_language_scanner.l\"",
          "1918: #line 1919 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1929:   ++YYCURSOR;",
          "1930:   YYDEBUG(93, *YYCURSOR);",
          "1931:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1933:   {",
          "1934:  yyless(yyleng - 1);",
          "1935:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1932: #line 1881 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1937:  zendlval->type = IS_STRING;",
          "1938:  return T_VARIABLE;",
          "1939: }",
          "1941: yy94:",
          "1942:   YYDEBUG(94, *YYCURSOR);",
          "1943:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "1940: #line 1941 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1955:   ++YYCURSOR;",
          "1956:   YYDEBUG(96, *YYCURSOR);",
          "1957:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1959:   {",
          "1960:  yyless(yyleng - 3);",
          "1961:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1958: #line 1871 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1963:  zendlval->type = IS_STRING;",
          "1964:  return T_VARIABLE;",
          "1965: }",
          "1967:  }",
          "1969: yyc_ST_END_HEREDOC:",
          "",
          "[Removed Lines]",
          "1966: #line 1967 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1974:  ++YYCURSOR;",
          "1975:  YYDEBUG(100, *YYCURSOR);",
          "1976:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1978:  {",
          "1979:  zend_heredoc_label *heredoc_label = zend_ptr_stack_pop(&SCNG(heredoc_label_stack));",
          "",
          "[Removed Lines]",
          "1977: #line 2175 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1987:  BEGIN(ST_IN_SCRIPTING);",
          "1988:  return T_END_HEREDOC;",
          "1989: }",
          "1992: yyc_ST_HEREDOC:",
          "1993:  {",
          "",
          "[Removed Lines]",
          "1990: #line 1991 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2049: yy104:",
          "2050:   YYDEBUG(104, *YYCURSOR);",
          "2051:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2053:   {",
          "2054:  int newline = 0;",
          "",
          "[Removed Lines]",
          "2052: #line 2300 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2122:  zend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);",
          "2123:  return T_ENCAPSED_AND_WHITESPACE;",
          "2124: }",
          "2126: yy105:",
          "2127:   YYDEBUG(105, *YYCURSOR);",
          "2128:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2125: #line 2126 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2137:   ++YYCURSOR;",
          "2138:   YYDEBUG(108, *YYCURSOR);",
          "2139:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2141:   {",
          "2142:  zendlval->value.lval = (long) '{';",
          "2143:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2144:  yyless(1);",
          "2145:  return T_CURLY_OPEN;",
          "2146: }",
          "2148: yy109:",
          "2149:   YYDEBUG(109, *YYCURSOR);",
          "2150:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "2140: #line 2189 \"Zend/zend_language_scanner.l\"",
          "2147: #line 2148 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2160: yy111:",
          "2161:   YYDEBUG(111, *YYCURSOR);",
          "2162:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2164:   {",
          "2165:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2166:  zendlval->type = IS_STRING;",
          "2167:  return T_VARIABLE;",
          "2168: }",
          "2170: yy112:",
          "2171:   YYDEBUG(112, *YYCURSOR);",
          "2172:   ++YYCURSOR;",
          "2173:   YYDEBUG(113, *YYCURSOR);",
          "2174:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2176:   {",
          "2177:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "2178:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "2179: }",
          "2181: yy114:",
          "2182:   YYDEBUG(114, *YYCURSOR);",
          "2183:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2163: #line 1889 \"Zend/zend_language_scanner.l\"",
          "2169: #line 2170 \"Zend/zend_language_scanner.c\"",
          "2175: #line 1465 \"Zend/zend_language_scanner.l\"",
          "2180: #line 2181 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2191:   ++YYCURSOR;",
          "2192:   YYDEBUG(117, *YYCURSOR);",
          "2193:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2195:   {",
          "2196:  yyless(yyleng - 1);",
          "2197:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2194: #line 1881 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2199:  zendlval->type = IS_STRING;",
          "2200:  return T_VARIABLE;",
          "2201: }",
          "2203: yy118:",
          "2204:   YYDEBUG(118, *YYCURSOR);",
          "2205:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2202: #line 2203 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2217:   ++YYCURSOR;",
          "2218:   YYDEBUG(120, *YYCURSOR);",
          "2219:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2221:   {",
          "2222:  yyless(yyleng - 3);",
          "2223:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2220: #line 1871 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2225:  zendlval->type = IS_STRING;",
          "2226:  return T_VARIABLE;",
          "2227: }",
          "2229:  }",
          "2231: yyc_ST_IN_SCRIPTING:",
          "",
          "[Removed Lines]",
          "2228: #line 2229 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2408: yy124:",
          "2409:   YYDEBUG(124, *YYCURSOR);",
          "2410:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2412:   {",
          "2413:  zend_copy_value(zendlval, yytext, yyleng);",
          "2414:  zendlval->type = IS_STRING;",
          "2415:  return T_STRING;",
          "2416: }",
          "2418: yy125:",
          "2419:   YYDEBUG(125, *YYCURSOR);",
          "2420:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2411: #line 1912 \"Zend/zend_language_scanner.l\"",
          "2417: #line 2418 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2646: yy139:",
          "2647:   YYDEBUG(139, *YYCURSOR);",
          "2648:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2650:   {",
          "2651:  return yytext[0];",
          "2652: }",
          "2654: yy140:",
          "2655:   YYDEBUG(140, *YYCURSOR);",
          "2656:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2649: #line 1454 \"Zend/zend_language_scanner.l\"",
          "2653: #line 2654 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "2659: yy141:",
          "2660:   YYDEBUG(141, *YYCURSOR);",
          "2661:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2663:   {",
          "2665:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "2662: #line 1185 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "2667:  HANDLE_NEWLINES(yytext, yyleng);",
          "2668:  return T_WHITESPACE;",
          "2669: }",
          "2671: yy142:",
          "2672:   YYDEBUG(142, *YYCURSOR);",
          "2673:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2670: #line 2671 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "2678:   ++YYCURSOR;",
          "2679:   YYDEBUG(144, *YYCURSOR);",
          "2680:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2682:   {",
          "2683:  return T_NS_SEPARATOR;",
          "2684: }",
          "2686: yy145:",
          "2687:   YYDEBUG(145, *YYCURSOR);",
          "2688:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "2681: #line 1214 \"Zend/zend_language_scanner.l\"",
          "2685: #line 2686 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "2910:   ++YYCURSOR;",
          "2911:   YYDEBUG(169, *YYCURSOR);",
          "2912:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2914:   {",
          "2915:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2916:  return '{';",
          "2917: }",
          "2919: yy170:",
          "2920:   YYDEBUG(170, *YYCURSOR);",
          "2921:   ++YYCURSOR;",
          "2922:   YYDEBUG(171, *YYCURSOR);",
          "2923:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2925:   {",
          "2926:  RESET_DOC_COMMENT();",
          "2927:  if (!zend_stack_is_empty(&SCNG(state_stack))) {",
          "",
          "[Removed Lines]",
          "2913: #line 1459 \"Zend/zend_language_scanner.l\"",
          "2918: #line 2919 \"Zend/zend_language_scanner.c\"",
          "2924: #line 1471 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "2929:  }",
          "2930:  return '}';",
          "2931: }",
          "2933: yy172:",
          "2934:   YYDEBUG(172, *YYCURSOR);",
          "2935:   yyaccept = 2;",
          "",
          "[Removed Lines]",
          "2932: #line 2933 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "2957: yy173:",
          "2958:   YYDEBUG(173, *YYCURSOR);",
          "2959:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2961:   {",
          "2964:  } else {",
          "2965:   errno = 0;",
          "2969:     zendlval->value.dval = zend_oct_strtod(yytext, NULL);",
          "",
          "[Removed Lines]",
          "2960: #line 1522 \"Zend/zend_language_scanner.l\"",
          "2963:   zendlval->value.lval = strtol(yytext, NULL, 0);",
          "2966:   zendlval->value.lval = strtol(yytext, NULL, 0);",
          "",
          "[Added Lines]",
          "2892:   zendlval->value.lval = ZEND_STRTOL(yytext, NULL, 0);",
          "2895:   zendlval->value.lval = ZEND_STRTOL(yytext, NULL, 0);",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "2978:  zendlval->type = IS_LONG;",
          "2979:  return T_LNUMBER;",
          "2980: }",
          "2982: yy174:",
          "2983:   YYDEBUG(174, *YYCURSOR);",
          "2984:   yyaccept = 2;",
          "",
          "[Removed Lines]",
          "2981: #line 2982 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3006: yy177:",
          "3007:   YYDEBUG(177, *YYCURSOR);",
          "3008:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3010:   {",
          "3011:  while (YYCURSOR < YYLIMIT) {",
          "3012:   switch (*YYCURSOR++) {",
          "",
          "[Removed Lines]",
          "3009: #line 1919 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3041:  return T_COMMENT;",
          "3042: }",
          "3044: yy178:",
          "3045:   YYDEBUG(178, *YYCURSOR);",
          "3046:   ++YYCURSOR;",
          "3047: yy179:",
          "3048:   YYDEBUG(179, *YYCURSOR);",
          "3049:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3051:   {",
          "3052:  register char *s, *t;",
          "3053:  char *end;",
          "",
          "[Removed Lines]",
          "3043: #line 3044 \"Zend/zend_language_scanner.c\"",
          "3050: #line 2010 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3115:  }",
          "3116:  return T_CONSTANT_ENCAPSED_STRING;",
          "3117: }",
          "3119: yy180:",
          "3120:   YYDEBUG(180, *YYCURSOR);",
          "3121:   ++YYCURSOR;",
          "3122: yy181:",
          "3123:   YYDEBUG(181, *YYCURSOR);",
          "3124:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3126:   {",
          "3127:  int bprefix = (yytext[0] != '\"') ? 1 : 0;",
          "",
          "[Removed Lines]",
          "3118: #line 3119 \"Zend/zend_language_scanner.c\"",
          "3125: #line 2079 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3163:  BEGIN(ST_DOUBLE_QUOTES);",
          "3164:  return '\"';",
          "3165: }",
          "3167: yy182:",
          "3168:   YYDEBUG(182, *YYCURSOR);",
          "3169:   ++YYCURSOR;",
          "3170:   YYDEBUG(183, *YYCURSOR);",
          "3171:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3173:   {",
          "3174:  BEGIN(ST_BACKQUOTE);",
          "3175:  return '`';",
          "3176: }",
          "3178: yy184:",
          "3179:   YYDEBUG(184, *YYCURSOR);",
          "3180:   ++YYCURSOR;",
          "3181:   YYDEBUG(185, *YYCURSOR);",
          "3182:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3184:   {",
          "3185:  if (YYCURSOR > YYLIMIT) {",
          "3186:   return 0;",
          "",
          "[Removed Lines]",
          "3166: #line 3167 \"Zend/zend_language_scanner.c\"",
          "3172: #line 2169 \"Zend/zend_language_scanner.l\"",
          "3177: #line 3178 \"Zend/zend_language_scanner.c\"",
          "3183: #line 2432 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3189:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "3190:  goto restart;",
          "3191: }",
          "3193: yy186:",
          "3194:   YYDEBUG(186, *YYCURSOR);",
          "3195:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3192: #line 3193 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3216: yy190:",
          "3217:   YYDEBUG(190, *YYCURSOR);",
          "3218:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3220:   {",
          "3221:  zendlval->value.dval = zend_strtod(yytext, NULL);",
          "3222:  zendlval->type = IS_DOUBLE;",
          "3223:  return T_DNUMBER;",
          "3224: }",
          "3226: yy191:",
          "3227:   YYDEBUG(191, *YYCURSOR);",
          "3228:   yyaccept = 2;",
          "",
          "[Removed Lines]",
          "3219: #line 1587 \"Zend/zend_language_scanner.l\"",
          "3225: #line 3226 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3314:   }",
          "3315:   YYDEBUG(202, *YYCURSOR);",
          "3316:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3318:   {",
          "3320:  int len = yyleng - 2;",
          "",
          "[Removed Lines]",
          "3317: #line 1497 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3329:   if (len == 0) {",
          "3330:    zendlval->value.lval = 0;",
          "3331:   } else {",
          "3333:   }",
          "3334:   zendlval->type = IS_LONG;",
          "3335:   return T_LNUMBER;",
          "",
          "[Removed Lines]",
          "3332:    zendlval->value.lval = strtol(bin, NULL, 2);",
          "",
          "[Added Lines]",
          "3247:    zendlval->value.lval = ZEND_STRTOL(bin, NULL, 2);",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3339:   return T_DNUMBER;",
          "3340:  }",
          "3341: }",
          "3343: yy203:",
          "3344:   YYDEBUG(203, *YYCURSOR);",
          "3345:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3342: #line 3343 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3351:   }",
          "3352:   YYDEBUG(205, *YYCURSOR);",
          "3353:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3355:   {",
          "3357:  int len = yyleng - 2;",
          "",
          "[Removed Lines]",
          "3354: #line 1543 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3366:   if (len == 0) {",
          "3367:    zendlval->value.lval = 0;",
          "3368:   } else {",
          "3370:   }",
          "3371:   zendlval->type = IS_LONG;",
          "3372:   return T_LNUMBER;",
          "",
          "[Removed Lines]",
          "3369:    zendlval->value.lval = strtol(hex, NULL, 16);",
          "",
          "[Added Lines]",
          "3282:    zendlval->value.lval = ZEND_STRTOL(hex, NULL, 16);",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3376:   return T_DNUMBER;",
          "3377:  }",
          "3378: }",
          "3380: yy206:",
          "3381:   YYDEBUG(206, *YYCURSOR);",
          "3382:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3379: #line 3380 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3385: yy207:",
          "3386:   YYDEBUG(207, *YYCURSOR);",
          "3387:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3389:   {",
          "3391:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "3388: #line 1987 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3393:  BEGIN(INITIAL);",
          "3395: }",
          "3397: yy208:",
          "3398:   YYDEBUG(208, *YYCURSOR);",
          "3399:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3396: #line 3397 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3427: yy212:",
          "3428:   YYDEBUG(212, *YYCURSOR);",
          "3429:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3431:   {",
          "3432:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "3433:  zendlval->type = IS_STRING;",
          "3434:  return T_VARIABLE;",
          "3435: }",
          "3437: yy213:",
          "3438:   YYDEBUG(213, *YYCURSOR);",
          "3439:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3430: #line 1889 \"Zend/zend_language_scanner.l\"",
          "3436: #line 3437 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3447:   }",
          "3448:   YYDEBUG(215, *YYCURSOR);",
          "3449:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3451:   {",
          "3452:  return T_LOGICAL_XOR;",
          "3453: }",
          "3455: yy216:",
          "3456:   YYDEBUG(216, *YYCURSOR);",
          "3457:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3450: #line 1442 \"Zend/zend_language_scanner.l\"",
          "3454: #line 3455 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "3460:   }",
          "3461:   YYDEBUG(217, *YYCURSOR);",
          "3462:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3464:   {",
          "3465:  return T_LOGICAL_OR;",
          "3466: }",
          "3468: yy218:",
          "3469:   YYDEBUG(218, *YYCURSOR);",
          "3470:   ++YYCURSOR;",
          "3471:   YYDEBUG(219, *YYCURSOR);",
          "3472:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3474:   {",
          "3475:  return T_XOR_EQUAL;",
          "3476: }",
          "3478: yy220:",
          "3479:   YYDEBUG(220, *YYCURSOR);",
          "3480:   ++YYCURSOR;",
          "3481:   YYDEBUG(221, *YYCURSOR);",
          "3482:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3484:   {",
          "3485:  return T_BOOLEAN_OR;",
          "3486: }",
          "3488: yy222:",
          "3489:   YYDEBUG(222, *YYCURSOR);",
          "3490:   ++YYCURSOR;",
          "3491:   YYDEBUG(223, *YYCURSOR);",
          "3492:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3494:   {",
          "3495:  return T_OR_EQUAL;",
          "3496: }",
          "3498: yy224:",
          "3499:   YYDEBUG(224, *YYCURSOR);",
          "3500:   ++YYCURSOR;",
          "3501:   YYDEBUG(225, *YYCURSOR);",
          "3502:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3504:   {",
          "3505:  return T_BOOLEAN_AND;",
          "3506: }",
          "3508: yy226:",
          "3509:   YYDEBUG(226, *YYCURSOR);",
          "3510:   ++YYCURSOR;",
          "3511:   YYDEBUG(227, *YYCURSOR);",
          "3512:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3514:   {",
          "3515:  return T_AND_EQUAL;",
          "3516: }",
          "3518: yy228:",
          "3519:   YYDEBUG(228, *YYCURSOR);",
          "3520:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3463: #line 1434 \"Zend/zend_language_scanner.l\"",
          "3467: #line 3468 \"Zend/zend_language_scanner.c\"",
          "3473: #line 1422 \"Zend/zend_language_scanner.l\"",
          "3477: #line 3478 \"Zend/zend_language_scanner.c\"",
          "3483: #line 1426 \"Zend/zend_language_scanner.l\"",
          "3487: #line 3488 \"Zend/zend_language_scanner.c\"",
          "3493: #line 1418 \"Zend/zend_language_scanner.l\"",
          "3497: #line 3498 \"Zend/zend_language_scanner.c\"",
          "3503: #line 1430 \"Zend/zend_language_scanner.l\"",
          "3507: #line 3508 \"Zend/zend_language_scanner.c\"",
          "3513: #line 1414 \"Zend/zend_language_scanner.l\"",
          "3517: #line 3518 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "3523: yy229:",
          "3524:   YYDEBUG(229, *YYCURSOR);",
          "3525:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3527:   {",
          "3528:  if (CG(asp_tags)) {",
          "3529:   BEGIN(INITIAL);",
          "",
          "[Removed Lines]",
          "3526: #line 1996 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "3536:   return yytext[0];",
          "3537:  }",
          "3538: }",
          "3540: yy230:",
          "3541:   YYDEBUG(230, *YYCURSOR);",
          "3542:   ++YYCURSOR;",
          "3543:   YYDEBUG(231, *YYCURSOR);",
          "3544:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3546:   {",
          "3547:  return T_MOD_EQUAL;",
          "3548: }",
          "3550: yy232:",
          "3551:   YYDEBUG(232, *YYCURSOR);",
          "3552:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3539: #line 3540 \"Zend/zend_language_scanner.c\"",
          "3545: #line 1402 \"Zend/zend_language_scanner.l\"",
          "3549: #line 3550 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "3577:   ++YYCURSOR;",
          "3578:   YYDEBUG(237, *YYCURSOR);",
          "3579:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3581:   {",
          "3582:  return T_CONCAT_EQUAL;",
          "3583: }",
          "3585: yy238:",
          "3586:   YYDEBUG(238, *YYCURSOR);",
          "3587:   yyaccept = 4;",
          "",
          "[Removed Lines]",
          "3580: #line 1398 \"Zend/zend_language_scanner.l\"",
          "3584: #line 3585 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "3590: yy239:",
          "3591:   YYDEBUG(239, *YYCURSOR);",
          "3592:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3594:   {",
          "3595:  int doc_com;",
          "",
          "[Removed Lines]",
          "3593: #line 1953 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "3625:  return T_COMMENT;",
          "3626: }",
          "3628: yy240:",
          "3629:   YYDEBUG(240, *YYCURSOR);",
          "3630:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3627: #line 3628 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "3634:   ++YYCURSOR;",
          "3635:   YYDEBUG(242, *YYCURSOR);",
          "3636:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3638:   {",
          "3639:  return T_DIV_EQUAL;",
          "3640: }",
          "3642: yy243:",
          "3643:   YYDEBUG(243, *YYCURSOR);",
          "3644:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3637: #line 1394 \"Zend/zend_language_scanner.l\"",
          "3641: #line 3642 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "3661:   ++YYCURSOR;",
          "3662:   YYDEBUG(247, *YYCURSOR);",
          "3663:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3665:   {",
          "3666:  return T_MUL_EQUAL;",
          "3667: }",
          "3669: yy248:",
          "3670:   YYDEBUG(248, *YYCURSOR);",
          "3671:   ++YYCURSOR;",
          "3672:   if ((yych = *YYCURSOR) == '=') goto yy252;",
          "3673:   YYDEBUG(249, *YYCURSOR);",
          "3674:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3676:   {",
          "3677:  return T_SR;",
          "3678: }",
          "3680: yy250:",
          "3681:   YYDEBUG(250, *YYCURSOR);",
          "3682:   ++YYCURSOR;",
          "3683:   YYDEBUG(251, *YYCURSOR);",
          "3684:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3686:   {",
          "3687:  return T_IS_GREATER_OR_EQUAL;",
          "3688: }",
          "3690: yy252:",
          "3691:   YYDEBUG(252, *YYCURSOR);",
          "3692:   ++YYCURSOR;",
          "3693:   YYDEBUG(253, *YYCURSOR);",
          "3694:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3696:   {",
          "3697:  return T_SR_EQUAL;",
          "3698: }",
          "3700: yy254:",
          "3701:   YYDEBUG(254, *YYCURSOR);",
          "3702:   yyaccept = 5;",
          "",
          "[Removed Lines]",
          "3664: #line 1390 \"Zend/zend_language_scanner.l\"",
          "3668: #line 3669 \"Zend/zend_language_scanner.c\"",
          "3675: #line 1450 \"Zend/zend_language_scanner.l\"",
          "3679: #line 3680 \"Zend/zend_language_scanner.c\"",
          "3685: #line 1378 \"Zend/zend_language_scanner.l\"",
          "3689: #line 3690 \"Zend/zend_language_scanner.c\"",
          "3695: #line 1410 \"Zend/zend_language_scanner.l\"",
          "3699: #line 3700 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "3707: yy255:",
          "3708:   YYDEBUG(255, *YYCURSOR);",
          "3709:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3711:   {",
          "3712:  return T_SL;",
          "3713: }",
          "3715: yy256:",
          "3716:   YYDEBUG(256, *YYCURSOR);",
          "3717:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3710: #line 1446 \"Zend/zend_language_scanner.l\"",
          "3714: #line 3715 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "3723:   ++YYCURSOR;",
          "3724:   YYDEBUG(258, *YYCURSOR);",
          "3725:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3727:   {",
          "3728:  return T_IS_SMALLER_OR_EQUAL;",
          "3729: }",
          "3731: yy259:",
          "3732:   YYDEBUG(259, *YYCURSOR);",
          "3733:   ++YYCURSOR;",
          "3734: yy260:",
          "3735:   YYDEBUG(260, *YYCURSOR);",
          "3736:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3738:   {",
          "3739:  return T_IS_NOT_EQUAL;",
          "3740: }",
          "3742: yy261:",
          "3743:   YYDEBUG(261, *YYCURSOR);",
          "3744:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3726: #line 1374 \"Zend/zend_language_scanner.l\"",
          "3730: #line 3731 \"Zend/zend_language_scanner.c\"",
          "3737: #line 1370 \"Zend/zend_language_scanner.l\"",
          "3741: #line 3742 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "3789:   ++YYCURSOR;",
          "3790:   YYDEBUG(269, *YYCURSOR);",
          "3791:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3793:   {",
          "3794:  return T_SL_EQUAL;",
          "3795: }",
          "3797: yy270:",
          "3798:   YYDEBUG(270, *YYCURSOR);",
          "3799:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3792: #line 1406 \"Zend/zend_language_scanner.l\"",
          "3796: #line 3797 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "3898: yy280:",
          "3899:   YYDEBUG(280, *YYCURSOR);",
          "3900:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3902:   {",
          "3903:  char *s;",
          "3904:  int bprefix = (yytext[0] != '<') ? 1 : 0;",
          "",
          "[Removed Lines]",
          "3901: #line 2121 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "3946:  return T_START_HEREDOC;",
          "3947: }",
          "3949: yy281:",
          "3950:   YYDEBUG(281, *YYCURSOR);",
          "3951:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3948: #line 3949 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "3985:   ++YYCURSOR;",
          "3986:   YYDEBUG(286, *YYCURSOR);",
          "3987:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3989:   {",
          "3990:  return T_IS_NOT_IDENTICAL;",
          "3991: }",
          "3993: yy287:",
          "3994:   YYDEBUG(287, *YYCURSOR);",
          "3995:   ++YYCURSOR;",
          "3996:   YYDEBUG(288, *YYCURSOR);",
          "3997:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3999:   {",
          "4000:  return T_PLUS_EQUAL;",
          "4001: }",
          "4003: yy289:",
          "4004:   YYDEBUG(289, *YYCURSOR);",
          "4005:   ++YYCURSOR;",
          "4006:   YYDEBUG(290, *YYCURSOR);",
          "4007:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4009:   {",
          "4010:  return T_INC;",
          "4011: }",
          "4013: yy291:",
          "4014:   YYDEBUG(291, *YYCURSOR);",
          "4015:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "3988: #line 1362 \"Zend/zend_language_scanner.l\"",
          "3992: #line 3993 \"Zend/zend_language_scanner.c\"",
          "3998: #line 1382 \"Zend/zend_language_scanner.l\"",
          "4002: #line 4003 \"Zend/zend_language_scanner.c\"",
          "4008: #line 1350 \"Zend/zend_language_scanner.l\"",
          "4012: #line 4013 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "4028:   }",
          "4029:   YYDEBUG(294, *YYCURSOR);",
          "4030:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4032:   {",
          "4033:  return T_LIST;",
          "4034: }",
          "4036: yy295:",
          "4037:   YYDEBUG(295, *YYCURSOR);",
          "4038:   ++YYCURSOR;",
          "4039:   if ((yych = *YYCURSOR) == '=') goto yy299;",
          "4040:   YYDEBUG(296, *YYCURSOR);",
          "4041:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4043:   {",
          "4044:  return T_IS_EQUAL;",
          "4045: }",
          "4047: yy297:",
          "4048:   YYDEBUG(297, *YYCURSOR);",
          "4049:   ++YYCURSOR;",
          "4050:   YYDEBUG(298, *YYCURSOR);",
          "4051:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4053:   {",
          "4054:  return T_DOUBLE_ARROW;",
          "4055: }",
          "4057: yy299:",
          "4058:   YYDEBUG(299, *YYCURSOR);",
          "4059:   ++YYCURSOR;",
          "4060:   YYDEBUG(300, *YYCURSOR);",
          "4061:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4063:   {",
          "4064:  return T_IS_IDENTICAL;",
          "4065: }",
          "4067: yy301:",
          "4068:   YYDEBUG(301, *YYCURSOR);",
          "4069:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4031: #line 1338 \"Zend/zend_language_scanner.l\"",
          "4035: #line 4036 \"Zend/zend_language_scanner.c\"",
          "4042: #line 1366 \"Zend/zend_language_scanner.l\"",
          "4046: #line 4047 \"Zend/zend_language_scanner.c\"",
          "4052: #line 1334 \"Zend/zend_language_scanner.l\"",
          "4056: #line 4057 \"Zend/zend_language_scanner.c\"",
          "4062: #line 1358 \"Zend/zend_language_scanner.l\"",
          "4066: #line 4067 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "4193:   }",
          "4194:   YYDEBUG(320, *YYCURSOR);",
          "4195:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4197:   {",
          "4198:  if (CG(current_namespace)) {",
          "",
          "[Removed Lines]",
          "4196: #line 1722 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "4203:  }",
          "4204:  return T_NS_C;",
          "4205: }",
          "4207: yy321:",
          "4208:   YYDEBUG(321, *YYCURSOR);",
          "4209:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4206: #line 4207 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "4223:   }",
          "4224:   YYDEBUG(325, *YYCURSOR);",
          "4225:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4227:   {",
          "4228:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "4229:  const size_t filename_len = strlen(filename);",
          "",
          "[Removed Lines]",
          "4226: #line 1695 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "4250:  zendlval->type = IS_STRING;",
          "4251:  return T_DIR;",
          "4252: }",
          "4254: yy326:",
          "4255:   YYDEBUG(326, *YYCURSOR);",
          "4256:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4253: #line 4254 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "4275:   }",
          "4276:   YYDEBUG(331, *YYCURSOR);",
          "4277:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4279:   {",
          "4280:  zendlval->value.lval = CG(zend_lineno);",
          "4281:  zendlval->type = IS_LONG;",
          "4282:  return T_LINE;",
          "4283: }",
          "4285: yy332:",
          "4286:   YYDEBUG(332, *YYCURSOR);",
          "4287:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4278: #line 1677 \"Zend/zend_language_scanner.l\"",
          "4284: #line 4285 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "4316:   }",
          "4317:   YYDEBUG(339, *YYCURSOR);",
          "4318:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4320:   {",
          "4321:  const char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;",
          "4322:  const char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;",
          "",
          "[Removed Lines]",
          "4319: #line 1656 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "4337:  zendlval->type = IS_STRING;",
          "4338:  return T_METHOD_C;",
          "4339: }",
          "4341: yy340:",
          "4342:   YYDEBUG(340, *YYCURSOR);",
          "4343:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4340: #line 4341 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "4388:   }",
          "4389:   YYDEBUG(350, *YYCURSOR);",
          "4390:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4392:   {",
          "4393:  const char *func_name = NULL;",
          "",
          "[Removed Lines]",
          "4391: #line 1640 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "4404:  zendlval->type = IS_STRING;",
          "4405:  return T_FUNC_C;",
          "4406: }",
          "4408: yy351:",
          "4409:   YYDEBUG(351, *YYCURSOR);",
          "4410:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4407: #line 4408 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "4424:   }",
          "4425:   YYDEBUG(355, *YYCURSOR);",
          "4426:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4428:   {",
          "4429:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "",
          "[Removed Lines]",
          "4427: #line 1683 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "4436:  zendlval->type = IS_STRING;",
          "4437:  return T_FILE;",
          "4438: }",
          "4440: yy356:",
          "4441:   YYDEBUG(356, *YYCURSOR);",
          "4442:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4439: #line 4440 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "4466:   }",
          "4467:   YYDEBUG(362, *YYCURSOR);",
          "4468:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4470:   {",
          "4471:  const char *trait_name = NULL;",
          "",
          "[Removed Lines]",
          "4469: #line 1620 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "4487:  return T_TRAIT_C;",
          "4488: }",
          "4490: yy363:",
          "4491:   YYDEBUG(363, *YYCURSOR);",
          "4492:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4489: #line 4490 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "4516:   }",
          "4517:   YYDEBUG(369, *YYCURSOR);",
          "4518:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4520:   {",
          "4521:  const char *class_name = NULL;",
          "",
          "[Removed Lines]",
          "4519: #line 1593 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "4543:  }",
          "4544:  return T_CLASS_C;",
          "4545: }",
          "4547: yy370:",
          "4548:   YYDEBUG(370, *YYCURSOR);",
          "4549:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4546: #line 4547 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "4605:   }",
          "4606:   YYDEBUG(382, *YYCURSOR);",
          "4607:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4609:   {",
          "4610:  return T_HALT_COMPILER;",
          "4611: }",
          "4613: yy383:",
          "4614:   YYDEBUG(383, *YYCURSOR);",
          "4615:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4608: #line 1302 \"Zend/zend_language_scanner.l\"",
          "4612: #line 4613 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "4629:   }",
          "4630:   YYDEBUG(386, *YYCURSOR);",
          "4631:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4633:   {",
          "4634:  return T_USE;",
          "4635: }",
          "4637: yy387:",
          "4638:   YYDEBUG(387, *YYCURSOR);",
          "4639:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4632: #line 1282 \"Zend/zend_language_scanner.l\"",
          "4636: #line 4637 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "4652:   }",
          "4653:   YYDEBUG(390, *YYCURSOR);",
          "4654:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4656:   {",
          "4657:  return T_UNSET;",
          "4658: }",
          "4660: yy391:",
          "4661:   YYDEBUG(391, *YYCURSOR);",
          "4662:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4655: #line 1330 \"Zend/zend_language_scanner.l\"",
          "4659: #line 4660 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "4828:   ++YYCURSOR;",
          "4829:   YYDEBUG(408, *YYCURSOR);",
          "4830:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4832:   {",
          "4833:  return T_INT_CAST;",
          "4834: }",
          "4836: yy409:",
          "4837:   YYDEBUG(409, *YYCURSOR);",
          "4838:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4831: #line 1230 \"Zend/zend_language_scanner.l\"",
          "4835: #line 4836 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "4876:   ++YYCURSOR;",
          "4877:   YYDEBUG(417, *YYCURSOR);",
          "4878:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4880:   {",
          "4881:  return T_DOUBLE_CAST;",
          "4882: }",
          "4884: yy418:",
          "4885:   YYDEBUG(418, *YYCURSOR);",
          "4886:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4879: #line 1234 \"Zend/zend_language_scanner.l\"",
          "4883: #line 4884 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "4950:   ++YYCURSOR;",
          "4951:   YYDEBUG(431, *YYCURSOR);",
          "4952:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4954:   {",
          "4955:  return T_STRING_CAST;",
          "4956: }",
          "4958: yy432:",
          "4959:   YYDEBUG(432, *YYCURSOR);",
          "4960:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4953: #line 1238 \"Zend/zend_language_scanner.l\"",
          "4957: #line 4958 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "4987:   ++YYCURSOR;",
          "4988:   YYDEBUG(438, *YYCURSOR);",
          "4989:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4991:   {",
          "4992:  return T_ARRAY_CAST;",
          "4993: }",
          "4995: yy439:",
          "4996:   YYDEBUG(439, *YYCURSOR);",
          "4997:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "4990: #line 1242 \"Zend/zend_language_scanner.l\"",
          "4994: #line 4995 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "5029:   ++YYCURSOR;",
          "5030:   YYDEBUG(446, *YYCURSOR);",
          "5031:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5033:   {",
          "5034:  return T_OBJECT_CAST;",
          "5035: }",
          "5037: yy447:",
          "5038:   YYDEBUG(447, *YYCURSOR);",
          "5039:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5032: #line 1246 \"Zend/zend_language_scanner.l\"",
          "5036: #line 5037 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "5074:   ++YYCURSOR;",
          "5075:   YYDEBUG(454, *YYCURSOR);",
          "5076:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5078:   {",
          "5079:  return T_BOOL_CAST;",
          "5080: }",
          "5082: yy455:",
          "5083:   YYDEBUG(455, *YYCURSOR);",
          "5084:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5077: #line 1250 \"Zend/zend_language_scanner.l\"",
          "5081: #line 5082 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "5138:   ++YYCURSOR;",
          "5139:   YYDEBUG(466, *YYCURSOR);",
          "5140:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5142:   {",
          "5143:  return T_UNSET_CAST;",
          "5144: }",
          "5146: yy467:",
          "5147:   YYDEBUG(467, *YYCURSOR);",
          "5148:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5141: #line 1254 \"Zend/zend_language_scanner.l\"",
          "5145: #line 5146 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "5156:   }",
          "5157:   YYDEBUG(469, *YYCURSOR);",
          "5158:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5160:   {",
          "5161:  return T_VAR;",
          "5162: }",
          "5164: yy470:",
          "5165:   YYDEBUG(470, *YYCURSOR);",
          "5166:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5159: #line 1226 \"Zend/zend_language_scanner.l\"",
          "5163: #line 5164 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "5180:   }",
          "5181:   YYDEBUG(473, *YYCURSOR);",
          "5182:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5184:   {",
          "5185:  return T_NEW;",
          "5186: }",
          "5188: yy474:",
          "5189:   YYDEBUG(474, *YYCURSOR);",
          "5190:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5183: #line 1218 \"Zend/zend_language_scanner.l\"",
          "5187: #line 5188 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "5223:   }",
          "5224:   YYDEBUG(481, *YYCURSOR);",
          "5225:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5227:   {",
          "5228:  return T_NAMESPACE;",
          "5229: }",
          "5231: yy482:",
          "5232:   YYDEBUG(482, *YYCURSOR);",
          "5233:   ++YYCURSOR;",
          "5234:   YYDEBUG(483, *YYCURSOR);",
          "5235:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5237:   {",
          "5238:  return T_PAAMAYIM_NEKUDOTAYIM;",
          "5239: }",
          "5241: yy484:",
          "5242:   YYDEBUG(484, *YYCURSOR);",
          "5243:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5226: #line 1278 \"Zend/zend_language_scanner.l\"",
          "5230: #line 5231 \"Zend/zend_language_scanner.c\"",
          "5236: #line 1210 \"Zend/zend_language_scanner.l\"",
          "5240: #line 5241 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "5259:   ++YYCURSOR;",
          "5260:   YYDEBUG(487, *YYCURSOR);",
          "5261:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5263:   {",
          "5264:  return T_MINUS_EQUAL;",
          "5265: }",
          "5267: yy488:",
          "5268:   YYDEBUG(488, *YYCURSOR);",
          "5269:   ++YYCURSOR;",
          "5270:   YYDEBUG(489, *YYCURSOR);",
          "5271:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5273:   {",
          "5274:  return T_DEC;",
          "5275: }",
          "5277: yy490:",
          "5278:   YYDEBUG(490, *YYCURSOR);",
          "5279:   ++YYCURSOR;",
          "5280:   YYDEBUG(491, *YYCURSOR);",
          "5281:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5283:   {",
          "5284:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "5285:  return T_OBJECT_OPERATOR;",
          "5286: }",
          "5288: yy492:",
          "5289:   YYDEBUG(492, *YYCURSOR);",
          "5290:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5262: #line 1386 \"Zend/zend_language_scanner.l\"",
          "5266: #line 5267 \"Zend/zend_language_scanner.c\"",
          "5272: #line 1354 \"Zend/zend_language_scanner.l\"",
          "5276: #line 5277 \"Zend/zend_language_scanner.c\"",
          "5282: #line 1180 \"Zend/zend_language_scanner.l\"",
          "5287: #line 5288 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "5329:   }",
          "5330:   YYDEBUG(498, *YYCURSOR);",
          "5331:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5333:   {",
          "5334:  return T_PUBLIC;",
          "5335: }",
          "5337: yy499:",
          "5338:   YYDEBUG(499, *YYCURSOR);",
          "5339:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5332: #line 1326 \"Zend/zend_language_scanner.l\"",
          "5336: #line 5337 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "5388:   }",
          "5389:   YYDEBUG(507, *YYCURSOR);",
          "5390:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5392:   {",
          "5393:  return T_PROTECTED;",
          "5394: }",
          "5396: yy508:",
          "5397:   YYDEBUG(508, *YYCURSOR);",
          "5398:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5391: #line 1322 \"Zend/zend_language_scanner.l\"",
          "5395: #line 5396 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "5422:   }",
          "5423:   YYDEBUG(513, *YYCURSOR);",
          "5424:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5426:   {",
          "5427:  return T_PRIVATE;",
          "5428: }",
          "5430: yy514:",
          "5431:   YYDEBUG(514, *YYCURSOR);",
          "5432:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5425: #line 1318 \"Zend/zend_language_scanner.l\"",
          "5429: #line 5430 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "5435:   }",
          "5436:   YYDEBUG(515, *YYCURSOR);",
          "5437:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5439:   {",
          "5440:  return T_PRINT;",
          "5441: }",
          "5443: yy516:",
          "5444:   YYDEBUG(516, *YYCURSOR);",
          "5445:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5438: #line 1156 \"Zend/zend_language_scanner.l\"",
          "5442: #line 5443 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 116 ---",
          "[Context before]",
          "5464:   }",
          "5465:   YYDEBUG(520, *YYCURSOR);",
          "5466:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5468:   {",
          "5469:  return T_GOTO;",
          "5470: }",
          "5472: yy521:",
          "5473:   YYDEBUG(521, *YYCURSOR);",
          "5474:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5467: #line 1148 \"Zend/zend_language_scanner.l\"",
          "5471: #line 5472 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 117 ---",
          "[Context before]",
          "5492:   }",
          "5493:   YYDEBUG(525, *YYCURSOR);",
          "5494:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5496:   {",
          "5497:  return T_GLOBAL;",
          "5498: }",
          "5500: yy526:",
          "5501:   YYDEBUG(526, *YYCURSOR);",
          "5502:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5495: #line 1290 \"Zend/zend_language_scanner.l\"",
          "5499: #line 5500 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 118 ---",
          "[Context before]",
          "5533:   }",
          "5534:   YYDEBUG(533, *YYCURSOR);",
          "5535:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5537:   {",
          "5538:  return T_BREAK;",
          "5539: }",
          "5541: yy534:",
          "5542:   YYDEBUG(534, *YYCURSOR);",
          "5543:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5536: #line 1140 \"Zend/zend_language_scanner.l\"",
          "5540: #line 5541 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 119 ---",
          "[Context before]",
          "5577:   }",
          "5578:   YYDEBUG(541, *YYCURSOR);",
          "5579:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5581:   {",
          "5582:  return T_SWITCH;",
          "5583: }",
          "5585: yy542:",
          "5586:   YYDEBUG(542, *YYCURSOR);",
          "5587:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5580: #line 1124 \"Zend/zend_language_scanner.l\"",
          "5584: #line 5585 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 120 ---",
          "[Context before]",
          "5605:   }",
          "5606:   YYDEBUG(546, *YYCURSOR);",
          "5607:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5609:   {",
          "5610:  return T_STATIC;",
          "5611: }",
          "5613: yy547:",
          "5614:   YYDEBUG(547, *YYCURSOR);",
          "5615:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5608: #line 1306 \"Zend/zend_language_scanner.l\"",
          "5612: #line 5613 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 121 ---",
          "[Context before]",
          "5636:   }",
          "5637:   YYDEBUG(551, *YYCURSOR);",
          "5638:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5640:   {",
          "5641:  return T_AS;",
          "5642: }",
          "5644: yy552:",
          "5645:   YYDEBUG(552, *YYCURSOR);",
          "5646:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5639: #line 1120 \"Zend/zend_language_scanner.l\"",
          "5643: #line 5644 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 122 ---",
          "[Context before]",
          "5659:   }",
          "5660:   YYDEBUG(555, *YYCURSOR);",
          "5661:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5663:   {",
          "5664:  return T_ARRAY;",
          "5665: }",
          "5667: yy556:",
          "5668:   YYDEBUG(556, *YYCURSOR);",
          "5669:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5662: #line 1342 \"Zend/zend_language_scanner.l\"",
          "5666: #line 5667 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 123 ---",
          "[Context before]",
          "5672:   }",
          "5673:   YYDEBUG(557, *YYCURSOR);",
          "5674:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5676:   {",
          "5677:  return T_LOGICAL_AND;",
          "5678: }",
          "5680: yy558:",
          "5681:   YYDEBUG(558, *YYCURSOR);",
          "5682:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5675: #line 1438 \"Zend/zend_language_scanner.l\"",
          "5679: #line 5680 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 124 ---",
          "[Context before]",
          "5710:   }",
          "5711:   YYDEBUG(564, *YYCURSOR);",
          "5712:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5714:   {",
          "5715:  return T_ABSTRACT;",
          "5716: }",
          "5718: yy565:",
          "5719:   YYDEBUG(565, *YYCURSOR);",
          "5720:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5713: #line 1310 \"Zend/zend_language_scanner.l\"",
          "5717: #line 5718 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 125 ---",
          "[Context before]",
          "5738:   }",
          "5739:   YYDEBUG(569, *YYCURSOR);",
          "5740:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5742:   {",
          "5743:  return T_WHILE;",
          "5744: }",
          "5746: yy570:",
          "5747:   YYDEBUG(570, *YYCURSOR);",
          "5748:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5741: #line 1080 \"Zend/zend_language_scanner.l\"",
          "5745: #line 5746 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 126 ---",
          "[Context before]",
          "5751:   }",
          "5752:   YYDEBUG(571, *YYCURSOR);",
          "5753:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5755:   {",
          "5756:  return T_IF;",
          "5757: }",
          "5759: yy572:",
          "5760:   YYDEBUG(572, *YYCURSOR);",
          "5761:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5754: #line 1064 \"Zend/zend_language_scanner.l\"",
          "5758: #line 5759 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 127 ---",
          "[Context before]",
          "5807:   }",
          "5808:   YYDEBUG(578, *YYCURSOR);",
          "5809:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5811:   {",
          "5812:  return T_ISSET;",
          "5813: }",
          "5815: yy579:",
          "5816:   YYDEBUG(579, *YYCURSOR);",
          "5817:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5810: #line 1294 \"Zend/zend_language_scanner.l\"",
          "5814: #line 5815 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 128 ---",
          "[Context before]",
          "5865: yy586:",
          "5866:   YYDEBUG(586, *YYCURSOR);",
          "5867:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5869:   {",
          "5870:  return T_INCLUDE;",
          "5871: }",
          "5873: yy587:",
          "5874:   YYDEBUG(587, *YYCURSOR);",
          "5875:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5868: #line 1262 \"Zend/zend_language_scanner.l\"",
          "5872: #line 5873 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 129 ---",
          "[Context before]",
          "5898:   }",
          "5899:   YYDEBUG(592, *YYCURSOR);",
          "5900:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5902:   {",
          "5903:  return T_INCLUDE_ONCE;",
          "5904: }",
          "5906: yy593:",
          "5907:   YYDEBUG(593, *YYCURSOR);",
          "5908:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5901: #line 1266 \"Zend/zend_language_scanner.l\"",
          "5905: #line 5906 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 130 ---",
          "[Context before]",
          "5936:   }",
          "5937:   YYDEBUG(599, *YYCURSOR);",
          "5938:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5940:   {",
          "5941:  return T_INTERFACE;",
          "5942: }",
          "5944: yy600:",
          "5945:   YYDEBUG(600, *YYCURSOR);",
          "5946:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5939: #line 1164 \"Zend/zend_language_scanner.l\"",
          "5943: #line 5944 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 131 ---",
          "[Context before]",
          "5990:   }",
          "5991:   YYDEBUG(607, *YYCURSOR);",
          "5992:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5994:   {",
          "5995:         return T_INSTEADOF;",
          "5996: }",
          "5998: yy608:",
          "5999:   YYDEBUG(608, *YYCURSOR);",
          "6000:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "5993: #line 1286 \"Zend/zend_language_scanner.l\"",
          "5997: #line 5998 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 132 ---",
          "[Context before]",
          "6023:   }",
          "6024:   YYDEBUG(613, *YYCURSOR);",
          "6025:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6027:   {",
          "6028:  return T_INSTANCEOF;",
          "6029: }",
          "6031: yy614:",
          "6032:   YYDEBUG(614, *YYCURSOR);",
          "6033:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6026: #line 1116 \"Zend/zend_language_scanner.l\"",
          "6030: #line 6031 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 133 ---",
          "[Context before]",
          "6071:   }",
          "6072:   YYDEBUG(622, *YYCURSOR);",
          "6073:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6075:   {",
          "6076:  return T_IMPLEMENTS;",
          "6077: }",
          "6079: yy623:",
          "6080:   YYDEBUG(623, *YYCURSOR);",
          "6081:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6074: #line 1176 \"Zend/zend_language_scanner.l\"",
          "6078: #line 6079 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 134 ---",
          "[Context before]",
          "6103:   }",
          "6104:   YYDEBUG(626, *YYCURSOR);",
          "6105:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6107:   {",
          "6108:  return T_TRY;",
          "6109: }",
          "6111: yy627:",
          "6112:   YYDEBUG(627, *YYCURSOR);",
          "6113:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6106: #line 1048 \"Zend/zend_language_scanner.l\"",
          "6110: #line 6111 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 135 ---",
          "[Context before]",
          "6126:   }",
          "6127:   YYDEBUG(630, *YYCURSOR);",
          "6128:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6130:   {",
          "6131:  return T_TRAIT;",
          "6132: }",
          "6134: yy631:",
          "6135:   YYDEBUG(631, *YYCURSOR);",
          "6136:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6129: #line 1168 \"Zend/zend_language_scanner.l\"",
          "6133: #line 6134 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 136 ---",
          "[Context before]",
          "6149:   }",
          "6150:   YYDEBUG(634, *YYCURSOR);",
          "6151:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6153:   {",
          "6154:  return T_THROW;",
          "6155: }",
          "6157: yy635:",
          "6158:   YYDEBUG(635, *YYCURSOR);",
          "6159:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6152: #line 1060 \"Zend/zend_language_scanner.l\"",
          "6156: #line 6157 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 137 ---",
          "[Context before]",
          "6177:   }",
          "6178:   YYDEBUG(639, *YYCURSOR);",
          "6179:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6181:   {",
          "6182:  return T_YIELD;",
          "6183: }",
          "6185: yy640:",
          "6186:   YYDEBUG(640, *YYCURSOR);",
          "6187:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6180: #line 1044 \"Zend/zend_language_scanner.l\"",
          "6184: #line 6185 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 138 ---",
          "[Context before]",
          "6242: yy647:",
          "6243:   YYDEBUG(647, *YYCURSOR);",
          "6244:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6246:   {",
          "6247:  return T_REQUIRE;",
          "6248: }",
          "6250: yy648:",
          "6251:   YYDEBUG(648, *YYCURSOR);",
          "6252:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6245: #line 1270 \"Zend/zend_language_scanner.l\"",
          "6249: #line 6250 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 139 ---",
          "[Context before]",
          "6275:   }",
          "6276:   YYDEBUG(653, *YYCURSOR);",
          "6277:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6279:   {",
          "6280:  return T_REQUIRE_ONCE;",
          "6281: }",
          "6283: yy654:",
          "6284:   YYDEBUG(654, *YYCURSOR);",
          "6285:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6278: #line 1274 \"Zend/zend_language_scanner.l\"",
          "6282: #line 6283 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 140 ---",
          "[Context before]",
          "6298:   }",
          "6299:   YYDEBUG(657, *YYCURSOR);",
          "6300:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6302:   {",
          "6303:  return T_RETURN;",
          "6304: }",
          "6306: yy658:",
          "6307:   YYDEBUG(658, *YYCURSOR);",
          "6308:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6301: #line 1040 \"Zend/zend_language_scanner.l\"",
          "6305: #line 6306 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 141 ---",
          "[Context before]",
          "6392:   }",
          "6393:   YYDEBUG(668, *YYCURSOR);",
          "6394:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6396:   {",
          "6397:  return T_CONTINUE;",
          "6398: }",
          "6400: yy669:",
          "6401:   YYDEBUG(669, *YYCURSOR);",
          "6402:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6395: #line 1144 \"Zend/zend_language_scanner.l\"",
          "6399: #line 6400 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 142 ---",
          "[Context before]",
          "6405:   }",
          "6406:   YYDEBUG(670, *YYCURSOR);",
          "6407:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6409:   {",
          "6410:  return T_CONST;",
          "6411: }",
          "6413: yy671:",
          "6414:   YYDEBUG(671, *YYCURSOR);",
          "6415:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6408: #line 1036 \"Zend/zend_language_scanner.l\"",
          "6412: #line 6413 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 143 ---",
          "[Context before]",
          "6434:   }",
          "6435:   YYDEBUG(675, *YYCURSOR);",
          "6436:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6438:   {",
          "6439:  return T_CLONE;",
          "6440: }",
          "6442: yy676:",
          "6443:   YYDEBUG(676, *YYCURSOR);",
          "6444:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6437: #line 1222 \"Zend/zend_language_scanner.l\"",
          "6441: #line 6442 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 144 ---",
          "[Context before]",
          "6452:   }",
          "6453:   YYDEBUG(678, *YYCURSOR);",
          "6454:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6456:   {",
          "6457:  return T_CLASS;",
          "6458: }",
          "6460: yy679:",
          "6461:   YYDEBUG(679, *YYCURSOR);",
          "6462:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6455: #line 1160 \"Zend/zend_language_scanner.l\"",
          "6459: #line 6460 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 145 ---",
          "[Context before]",
          "6502:   }",
          "6503:   YYDEBUG(687, *YYCURSOR);",
          "6504:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6506:   {",
          "6507:  return T_CALLABLE;",
          "6508: }",
          "6510: yy688:",
          "6511:   YYDEBUG(688, *YYCURSOR);",
          "6512:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6505: #line 1346 \"Zend/zend_language_scanner.l\"",
          "6509: #line 6510 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 146 ---",
          "[Context before]",
          "6515:   }",
          "6516:   YYDEBUG(689, *YYCURSOR);",
          "6517:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6519:   {",
          "6520:  return T_CASE;",
          "6521: }",
          "6523: yy690:",
          "6524:   YYDEBUG(690, *YYCURSOR);",
          "6525:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6518: #line 1132 \"Zend/zend_language_scanner.l\"",
          "6522: #line 6523 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 147 ---",
          "[Context before]",
          "6533:   }",
          "6534:   YYDEBUG(692, *YYCURSOR);",
          "6535:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6537:   {",
          "6538:  return T_CATCH;",
          "6539: }",
          "6541: yy693:",
          "6542:   YYDEBUG(693, *YYCURSOR);",
          "6543:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6536: #line 1052 \"Zend/zend_language_scanner.l\"",
          "6540: #line 6541 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 148 ---",
          "[Context before]",
          "6588:   }",
          "6589:   YYDEBUG(702, *YYCURSOR);",
          "6590:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6592:   {",
          "6593:  return T_FUNCTION;",
          "6594: }",
          "6596: yy703:",
          "6597:   YYDEBUG(703, *YYCURSOR);",
          "6598:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6591: #line 1032 \"Zend/zend_language_scanner.l\"",
          "6595: #line 6596 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 149 ---",
          "[Context before]",
          "6616: yy704:",
          "6617:   YYDEBUG(704, *YYCURSOR);",
          "6618:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6620:   {",
          "6621:  return T_FOR;",
          "6622: }",
          "6624: yy705:",
          "6625:   YYDEBUG(705, *YYCURSOR);",
          "6626:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6619: #line 1092 \"Zend/zend_language_scanner.l\"",
          "6623: #line 6624 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 150 ---",
          "[Context before]",
          "6644:   }",
          "6645:   YYDEBUG(709, *YYCURSOR);",
          "6646:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6648:   {",
          "6649:  return T_FOREACH;",
          "6650: }",
          "6652: yy710:",
          "6653:   YYDEBUG(710, *YYCURSOR);",
          "6654:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6647: #line 1100 \"Zend/zend_language_scanner.l\"",
          "6651: #line 6652 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 151 ---",
          "[Context before]",
          "6682: yy713:",
          "6683:   YYDEBUG(713, *YYCURSOR);",
          "6684:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6686:   {",
          "6687:  return T_FINAL;",
          "6688: }",
          "6690: yy714:",
          "6691:   YYDEBUG(714, *YYCURSOR);",
          "6692:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6685: #line 1314 \"Zend/zend_language_scanner.l\"",
          "6689: #line 6690 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 152 ---",
          "[Context before]",
          "6700:   }",
          "6701:   YYDEBUG(716, *YYCURSOR);",
          "6702:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6704:   {",
          "6705:  return T_FINALLY;",
          "6706: }",
          "6708: yy717:",
          "6709:   YYDEBUG(717, *YYCURSOR);",
          "6710:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6703: #line 1056 \"Zend/zend_language_scanner.l\"",
          "6707: #line 6708 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 153 ---",
          "[Context before]",
          "6735:   }",
          "6736:   YYDEBUG(720, *YYCURSOR);",
          "6737:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6739:   {",
          "6740:  return T_DO;",
          "6741: }",
          "6743: yy721:",
          "6744:   YYDEBUG(721, *YYCURSOR);",
          "6745:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6738: #line 1088 \"Zend/zend_language_scanner.l\"",
          "6742: #line 6743 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 154 ---",
          "[Context before]",
          "6748:   }",
          "6749:   YYDEBUG(722, *YYCURSOR);",
          "6750:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6752:   {",
          "6753:  return T_EXIT;",
          "6754: }",
          "6756: yy723:",
          "6757:   YYDEBUG(723, *YYCURSOR);",
          "6758:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6751: #line 1028 \"Zend/zend_language_scanner.l\"",
          "6755: #line 6756 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 155 ---",
          "[Context before]",
          "6787:   }",
          "6788:   YYDEBUG(729, *YYCURSOR);",
          "6789:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6791:   {",
          "6792:  return T_DEFAULT;",
          "6793: }",
          "6795: yy730:",
          "6796:   YYDEBUG(730, *YYCURSOR);",
          "6797:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6790: #line 1136 \"Zend/zend_language_scanner.l\"",
          "6794: #line 6795 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 156 ---",
          "[Context before]",
          "6815:   }",
          "6816:   YYDEBUG(734, *YYCURSOR);",
          "6817:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6819:   {",
          "6820:  return T_DECLARE;",
          "6821: }",
          "6823: yy735:",
          "6824:   YYDEBUG(735, *YYCURSOR);",
          "6825:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6818: #line 1108 \"Zend/zend_language_scanner.l\"",
          "6822: #line 6823 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 157 ---",
          "[Context before]",
          "6899:   }",
          "6900:   YYDEBUG(747, *YYCURSOR);",
          "6901:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6903:   {",
          "6904:  return T_EXTENDS;",
          "6905: }",
          "6907: yy748:",
          "6908:   YYDEBUG(748, *YYCURSOR);",
          "6909:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6902: #line 1172 \"Zend/zend_language_scanner.l\"",
          "6906: #line 6907 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 158 ---",
          "[Context before]",
          "6912:   }",
          "6913:   YYDEBUG(749, *YYCURSOR);",
          "6914:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6916:   {",
          "6917:  return T_EXIT;",
          "6918: }",
          "6920: yy750:",
          "6921:   YYDEBUG(750, *YYCURSOR);",
          "6922:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6915: #line 1024 \"Zend/zend_language_scanner.l\"",
          "6919: #line 6920 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 159 ---",
          "[Context before]",
          "6930:   }",
          "6931:   YYDEBUG(752, *YYCURSOR);",
          "6932:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6934:   {",
          "6935:  return T_EVAL;",
          "6936: }",
          "6938: yy753:",
          "6939:   YYDEBUG(753, *YYCURSOR);",
          "6940:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "6933: #line 1258 \"Zend/zend_language_scanner.l\"",
          "6937: #line 6938 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 160 ---",
          "[Context before]",
          "7004:   }",
          "7005:   YYDEBUG(763, *YYCURSOR);",
          "7006:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7008:   {",
          "7009:  return T_ENDWHILE;",
          "7010: }",
          "7012: yy764:",
          "7013:   YYDEBUG(764, *YYCURSOR);",
          "7014:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7007: #line 1084 \"Zend/zend_language_scanner.l\"",
          "7011: #line 7012 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 161 ---",
          "[Context before]",
          "7037:   }",
          "7038:   YYDEBUG(769, *YYCURSOR);",
          "7039:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7041:   {",
          "7042:  return T_ENDSWITCH;",
          "7043: }",
          "7045: yy770:",
          "7046:   YYDEBUG(770, *YYCURSOR);",
          "7047:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7040: #line 1128 \"Zend/zend_language_scanner.l\"",
          "7044: #line 7045 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 162 ---",
          "[Context before]",
          "7050:   }",
          "7051:   YYDEBUG(771, *YYCURSOR);",
          "7052:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7054:   {",
          "7055:  return T_ENDIF;",
          "7056: }",
          "7058: yy772:",
          "7059:   YYDEBUG(772, *YYCURSOR);",
          "7060:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7053: #line 1072 \"Zend/zend_language_scanner.l\"",
          "7057: #line 7058 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 163 ---",
          "[Context before]",
          "7083: yy774:",
          "7084:   YYDEBUG(774, *YYCURSOR);",
          "7085:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7087:   {",
          "7088:  return T_ENDFOR;",
          "7089: }",
          "7091: yy775:",
          "7092:   YYDEBUG(775, *YYCURSOR);",
          "7093:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7086: #line 1096 \"Zend/zend_language_scanner.l\"",
          "7090: #line 7091 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 164 ---",
          "[Context before]",
          "7111:   }",
          "7112:   YYDEBUG(779, *YYCURSOR);",
          "7113:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7115:   {",
          "7116:  return T_ENDFOREACH;",
          "7117: }",
          "7119: yy780:",
          "7120:   YYDEBUG(780, *YYCURSOR);",
          "7121:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7114: #line 1104 \"Zend/zend_language_scanner.l\"",
          "7118: #line 7119 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 165 ---",
          "[Context before]",
          "7149:   }",
          "7150:   YYDEBUG(786, *YYCURSOR);",
          "7151:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7153:   {",
          "7154:  return T_ENDDECLARE;",
          "7155: }",
          "7157: yy787:",
          "7158:   YYDEBUG(787, *YYCURSOR);",
          "7159:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7152: #line 1112 \"Zend/zend_language_scanner.l\"",
          "7156: #line 7157 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 166 ---",
          "[Context before]",
          "7172:   }",
          "7173:   YYDEBUG(790, *YYCURSOR);",
          "7174:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7176:   {",
          "7177:  return T_EMPTY;",
          "7178: }",
          "7180: yy791:",
          "7181:   YYDEBUG(791, *YYCURSOR);",
          "7182:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7175: #line 1298 \"Zend/zend_language_scanner.l\"",
          "7179: #line 7180 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 167 ---",
          "[Context before]",
          "7205: yy793:",
          "7206:   YYDEBUG(793, *YYCURSOR);",
          "7207:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7209:   {",
          "7210:  return T_ELSE;",
          "7211: }",
          "7213: yy794:",
          "7214:   YYDEBUG(794, *YYCURSOR);",
          "7215:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7208: #line 1076 \"Zend/zend_language_scanner.l\"",
          "7212: #line 7213 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 168 ---",
          "[Context before]",
          "7223:   }",
          "7224:   YYDEBUG(796, *YYCURSOR);",
          "7225:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7227:   {",
          "7228:  return T_ELSEIF;",
          "7229: }",
          "7231: yy797:",
          "7232:   YYDEBUG(797, *YYCURSOR);",
          "7233:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7226: #line 1068 \"Zend/zend_language_scanner.l\"",
          "7230: #line 7231 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 169 ---",
          "[Context before]",
          "7241:   }",
          "7242:   YYDEBUG(799, *YYCURSOR);",
          "7243:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7245:   {",
          "7246:  return T_ECHO;",
          "7247: }",
          "7249:  }",
          "7251: yyc_ST_LOOKING_FOR_PROPERTY:",
          "",
          "[Removed Lines]",
          "7244: #line 1152 \"Zend/zend_language_scanner.l\"",
          "7248: #line 7249 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 170 ---",
          "[Context before]",
          "7318: yy803:",
          "7319:   YYDEBUG(803, *YYCURSOR);",
          "7320:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7322:   {",
          "7324:  zendlval->value.str.len = yyleng;",
          "",
          "[Removed Lines]",
          "7321: #line 1185 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 171 ---",
          "[Context before]",
          "7326:  HANDLE_NEWLINES(yytext, yyleng);",
          "7327:  return T_WHITESPACE;",
          "7328: }",
          "7330: yy804:",
          "7331:   YYDEBUG(804, *YYCURSOR);",
          "7332:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7329: #line 7330 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 172 ---",
          "[Context before]",
          "7334: yy805:",
          "7335:   YYDEBUG(805, *YYCURSOR);",
          "7336:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7338:   {",
          "7339:  yyless(0);",
          "7340:  yy_pop_state(TSRMLS_C);",
          "7341:  goto restart;",
          "7342: }",
          "7344: yy806:",
          "7345:   YYDEBUG(806, *YYCURSOR);",
          "7346:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7337: #line 1204 \"Zend/zend_language_scanner.l\"",
          "7343: #line 7344 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 173 ---",
          "[Context before]",
          "7349: yy807:",
          "7350:   YYDEBUG(807, *YYCURSOR);",
          "7351:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7353:   {",
          "7354:  yy_pop_state(TSRMLS_C);",
          "7355:  zend_copy_value(zendlval, yytext, yyleng);",
          "7356:  zendlval->type = IS_STRING;",
          "7357:  return T_STRING;",
          "7358: }",
          "7360: yy808:",
          "7361:   YYDEBUG(808, *YYCURSOR);",
          "7362:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7352: #line 1197 \"Zend/zend_language_scanner.l\"",
          "7359: #line 7360 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 174 ---",
          "[Context before]",
          "7377:   ++YYCURSOR;",
          "7378:   YYDEBUG(812, *YYCURSOR);",
          "7379:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7381:   {",
          "7382:  return T_OBJECT_OPERATOR;",
          "7383: }",
          "7385: yy813:",
          "7386:   YYDEBUG(813, *YYCURSOR);",
          "7387:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7380: #line 1193 \"Zend/zend_language_scanner.l\"",
          "7384: #line 7385 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 175 ---",
          "[Context before]",
          "7466: yy818:",
          "7467:   YYDEBUG(818, *YYCURSOR);",
          "7468:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7470:   {",
          "7471:  yyless(0);",
          "7472:  yy_pop_state(TSRMLS_C);",
          "7473:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7474:  goto restart;",
          "7475: }",
          "7477: yy819:",
          "7478:   YYDEBUG(819, *YYCURSOR);",
          "7479:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7469: #line 1490 \"Zend/zend_language_scanner.l\"",
          "7476: #line 7477 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 176 ---",
          "[Context before]",
          "7498:   ++YYCURSOR;",
          "7499:   YYDEBUG(824, *YYCURSOR);",
          "7500:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7502:   {",
          "7503:  yyless(yyleng - 1);",
          "7504:  zend_copy_value(zendlval, yytext, yyleng);",
          "",
          "[Removed Lines]",
          "7501: #line 1480 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 177 ---",
          "[Context before]",
          "7507:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7508:  return T_STRING_VARNAME;",
          "7509: }",
          "7511:  }",
          "7513: yyc_ST_NOWDOC:",
          "",
          "[Removed Lines]",
          "7510: #line 7511 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 178 ---",
          "[Context before]",
          "7518:  ++YYCURSOR;",
          "7519:  YYDEBUG(828, *YYCURSOR);",
          "7520:  yyleng = YYCURSOR - SCNG(yy_text);",
          "7522:  {",
          "7523:  int newline = 0;",
          "",
          "[Removed Lines]",
          "7521: #line 2374 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 179 ---",
          "[Context before]",
          "7575:  HANDLE_NEWLINES(yytext, yyleng - newline);",
          "7576:  return T_ENCAPSED_AND_WHITESPACE;",
          "7577: }",
          "7580: yyc_ST_VAR_OFFSET:",
          "7581:  {",
          "",
          "[Removed Lines]",
          "7578: #line 7579 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 180 ---",
          "[Context before]",
          "7682: yy832:",
          "7683:   YYDEBUG(832, *YYCURSOR);",
          "7684:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7687:  if (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {",
          "7689:   zendlval->type = IS_LONG;",
          "7690:  } else {",
          "7691:   zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "",
          "[Removed Lines]",
          "7685: #line 1568 \"Zend/zend_language_scanner.l\"",
          "7688:   zendlval->value.lval = strtol(yytext, NULL, 10);",
          "",
          "[Added Lines]",
          "7359:   zendlval->value.lval = ZEND_STRTOL(yytext, NULL, 10);",
          "",
          "---------------",
          "--- Hunk 181 ---",
          "[Context before]",
          "7694:  }",
          "7695:  return T_NUM_STRING;",
          "7696: }",
          "7698: yy833:",
          "7699:   YYDEBUG(833, *YYCURSOR);",
          "7700:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7697: #line 7698 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 182 ---",
          "[Context before]",
          "7714: yy835:",
          "7715:   YYDEBUG(835, *YYCURSOR);",
          "7716:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7718:   {",
          "7720:  return yytext[0];",
          "7721: }",
          "7723: yy836:",
          "7724:   YYDEBUG(836, *YYCURSOR);",
          "7725:   ++YYCURSOR;",
          "7726:   YYDEBUG(837, *YYCURSOR);",
          "7727:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7729:   {",
          "7730:  yy_pop_state(TSRMLS_C);",
          "7731:  return ']';",
          "7732: }",
          "7734: yy838:",
          "7735:   YYDEBUG(838, *YYCURSOR);",
          "7736:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7717: #line 1900 \"Zend/zend_language_scanner.l\"",
          "7722: #line 7723 \"Zend/zend_language_scanner.c\"",
          "7728: #line 1895 \"Zend/zend_language_scanner.l\"",
          "7733: #line 7734 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 183 ---",
          "[Context before]",
          "7740:   ++YYCURSOR;",
          "7741:   YYDEBUG(840, *YYCURSOR);",
          "7742:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7744:   {",
          "7746:  yyless(0);",
          "7747:  yy_pop_state(TSRMLS_C);",
          "7748:  return T_ENCAPSED_AND_WHITESPACE;",
          "7749: }",
          "7751: yy841:",
          "7752:   YYDEBUG(841, *YYCURSOR);",
          "7753:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7743: #line 1905 \"Zend/zend_language_scanner.l\"",
          "7750: #line 7751 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 184 ---",
          "[Context before]",
          "7756: yy842:",
          "7757:   YYDEBUG(842, *YYCURSOR);",
          "7758:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7760:   {",
          "7761:  zend_copy_value(zendlval, yytext, yyleng);",
          "7762:  zendlval->type = IS_STRING;",
          "7763:  return T_STRING;",
          "7764: }",
          "7766: yy843:",
          "7767:   YYDEBUG(843, *YYCURSOR);",
          "7768:   ++YYCURSOR;",
          "7769:   YYDEBUG(844, *YYCURSOR);",
          "7770:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7772:   {",
          "7773:  if (YYCURSOR > YYLIMIT) {",
          "7774:   return 0;",
          "",
          "[Removed Lines]",
          "7759: #line 1912 \"Zend/zend_language_scanner.l\"",
          "7765: #line 7766 \"Zend/zend_language_scanner.c\"",
          "7771: #line 2432 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 185 ---",
          "[Context before]",
          "7777:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "7778:  goto restart;",
          "7779: }",
          "7781: yy845:",
          "7782:   YYDEBUG(845, *YYCURSOR);",
          "7783:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7780: #line 7781 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 186 ---",
          "[Context before]",
          "7813: yy849:",
          "7814:   YYDEBUG(849, *YYCURSOR);",
          "7815:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7817:   {",
          "7818:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "7819:  zendlval->type = IS_STRING;",
          "7820:  return T_VARIABLE;",
          "7821: }",
          "7823: yy850:",
          "7824:   YYDEBUG(850, *YYCURSOR);",
          "7825:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7816: #line 1889 \"Zend/zend_language_scanner.l\"",
          "7822: #line 7823 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 187 ---",
          "[Context before]",
          "7859: yy857:",
          "7860:   YYDEBUG(857, *YYCURSOR);",
          "7861:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7864:  zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "7865:  zendlval->value.str.len = yyleng;",
          "7866:  zendlval->type = IS_STRING;",
          "7867:  return T_NUM_STRING;",
          "7868: }",
          "7870: yy858:",
          "7871:   YYDEBUG(858, *YYCURSOR);",
          "7872:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "7862: #line 1580 \"Zend/zend_language_scanner.l\"",
          "7869: #line 7870 \"Zend/zend_language_scanner.c\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 188 ---",
          "[Context before]",
          "7889:   goto yy857;",
          "7890:  }",
          "7891: }",
          "7894: }",
          "",
          "[Removed Lines]",
          "7892: #line 2441 \"Zend/zend_language_scanner.l\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l": [
          "File: Zend/zend_language_scanner.l -> Zend/zend_language_scanner.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2:    +----------------------------------------------------------------------+",
          "3:    | Zend Engine                                                          |",
          "4:    +----------------------------------------------------------------------+",
          "5:    | Copyright (c) 1998-2013 Zend Technologies Ltd. (http://www.zend.com) |",
          "6:    +----------------------------------------------------------------------+",
          "7:    | This source file is subject to version 2.00 of the Zend license,     |",
          "8:    | that is bundled with this package in the file LICENSE, and is        |",
          "9:    | available through the world-wide-web at the following url:           |",
          "10:    | http://www.zend.com/license/2_00.txt.                                |",
          "11:    | If you did not receive a copy of the Zend license and are unable to  |",
          "12:    | obtain it through the world-wide-web, please send a note to          |",
          "13:    | license@zend.com so we can mail you a copy immediately.              |",
          "14:    +----------------------------------------------------------------------+",
          "15:    | Authors: Marcus Boerger <helly@php.net>                              |",
          "16:    |          Nuno Lopes <nlopess@php.net>                                |",
          "17:    |          Scott MacVicar <scottmac@php.net>                           |",
          "18:    | Flex version authors:                                                |",
          "19:    |          Andi Gutmans <andi@zend.com>                                |",
          "20:    |          Zeev Suraski <zeev@zend.com>                                |",
          "21:    +----------------------------------------------------------------------+",
          "26: #if 0",
          "27: # define YYDEBUG(s, c) printf(\"state: %d char: %c\\n\", s, c)",
          "28: #else",
          "29: # define YYDEBUG(s, c)",
          "30: #endif",
          "32: #include \"zend_language_scanner_defs.h\"",
          "34: #include <errno.h>",
          "35: #include \"zend.h\"",
          "36: #ifdef PHP_WIN32",
          "37: # include <Winuser.h>",
          "38: #endif",
          "39: #include \"zend_alloc.h\"",
          "40: #include <zend_language_parser.h>",
          "41: #include \"zend_compile.h\"",
          "42: #include \"zend_language_scanner.h\"",
          "43: #include \"zend_highlight.h\"",
          "44: #include \"zend_constants.h\"",
          "45: #include \"zend_variables.h\"",
          "46: #include \"zend_operators.h\"",
          "47: #include \"zend_API.h\"",
          "48: #include \"zend_strtod.h\"",
          "49: #include \"zend_exceptions.h\"",
          "50: #include \"tsrm_virtual_cwd.h\"",
          "51: #include \"tsrm_config_common.h\"",
          "53: #define YYCTYPE   unsigned char",
          "54: #define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + ZEND_MMAP_AHEAD)) { return 0; } }",
          "55: #define YYCURSOR  SCNG(yy_cursor)",
          "56: #define YYLIMIT   SCNG(yy_limit)",
          "57: #define YYMARKER  SCNG(yy_marker)",
          "59: #define YYGETCONDITION()  SCNG(yy_state)",
          "60: #define YYSETCONDITION(s) SCNG(yy_state) = s",
          "62: #define STATE(name)  yyc##name",
          "65: #define BEGIN(state) YYSETCONDITION(STATE(state))",
          "66: #define YYSTATE      YYGETCONDITION()",
          "67: #define yytext       ((char*)SCNG(yy_text))",
          "68: #define yyleng       SCNG(yy_leng)",
          "69: #define yyless(x)    do { YYCURSOR = (unsigned char*)yytext + x; \\",
          "70:                           yyleng   = (unsigned int)x; } while(0)",
          "71: #define yymore()     goto yymore_restart",
          "76: #if ZEND_MMAP_AHEAD < YYMAXFILL",
          "77: # error ZEND_MMAP_AHEAD should be greater than or equal to YYMAXFILL",
          "78: #endif",
          "80: #ifdef HAVE_STDARG_H",
          "81: # include <stdarg.h>",
          "82: #endif",
          "84: #ifdef HAVE_UNISTD_H",
          "85: # include <unistd.h>",
          "86: #endif",
          "89: #define SCNG LANG_SCNG",
          "90: #ifdef ZTS",
          "91: ZEND_API ts_rsrc_id language_scanner_globals_id;",
          "92: #else",
          "93: ZEND_API zend_php_scanner_globals language_scanner_globals;",
          "94: #endif",
          "96: #define HANDLE_NEWLINES(s, l)             \\",
          "97: do {                   \\",
          "98:  char *p = (s), *boundary = p+(l);           \\",
          "99:                     \\",
          "100:  while (p<boundary) {              \\",
          "101:   if (*p == '\\n' || (*p == '\\r' && (*(p+1) != '\\n'))) {     \\",
          "102:    CG(zend_lineno)++;             \\",
          "103:   }                  \\",
          "104:   p++;                 \\",
          "105:  }                   \\",
          "106: } while (0)",
          "108: #define HANDLE_NEWLINE(c) \\",
          "109: { \\",
          "110:  if (c == '\\n' || c == '\\r') { \\",
          "111:   CG(zend_lineno)++; \\",
          "112:  } \\",
          "113: }",
          "116: #define SET_DOUBLE_QUOTES_SCANNED_LENGTH(len) CG(doc_comment_len) = (len)",
          "117: #define GET_DOUBLE_QUOTES_SCANNED_LENGTH()    CG(doc_comment_len)",
          "119: #define IS_LABEL_START(c) (((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z') || (c) == '_' || (c) >= 0x7F)",
          "121: #define ZEND_IS_OCT(c)  ((c)>='0' && (c)<='7')",
          "122: #define ZEND_IS_HEX(c)  (((c)>='0' && (c)<='9') || ((c)>='a' && (c)<='f') || ((c)>='A' && (c)<='F'))",
          "124: BEGIN_EXTERN_C()",
          "126: static size_t encoding_filter_script_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "127: {",
          "128:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "129:  assert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));",
          "130:  return zend_multibyte_encoding_converter(to, to_length, from, from_length, internal_encoding, LANG_SCNG(script_encoding) TSRMLS_CC);",
          "131: }",
          "133: static size_t encoding_filter_script_to_intermediate(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "134: {",
          "135:  return zend_multibyte_encoding_converter(to, to_length, from, from_length, zend_multibyte_encoding_utf8, LANG_SCNG(script_encoding) TSRMLS_CC);",
          "136: }",
          "138: static size_t encoding_filter_intermediate_to_script(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "139: {",
          "140:  return zend_multibyte_encoding_converter(to, to_length, from, from_length,",
          "141: LANG_SCNG(script_encoding), zend_multibyte_encoding_utf8 TSRMLS_CC);",
          "142: }",
          "144: static size_t encoding_filter_intermediate_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "145: {",
          "146:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "147:  assert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));",
          "148:  return zend_multibyte_encoding_converter(to, to_length, from, from_length,",
          "149: internal_encoding, zend_multibyte_encoding_utf8 TSRMLS_CC);",
          "150: }",
          "153: static void _yy_push_state(int new_state TSRMLS_DC)",
          "154: {",
          "155:  zend_stack_push(&SCNG(state_stack), (void *) &YYGETCONDITION(), sizeof(int));",
          "156:  YYSETCONDITION(new_state);",
          "157: }",
          "159: #define yy_push_state(state_and_tsrm) _yy_push_state(yyc##state_and_tsrm)",
          "161: static void yy_pop_state(TSRMLS_D)",
          "162: {",
          "163:  int *stack_state;",
          "164:  zend_stack_top(&SCNG(state_stack), (void **) &stack_state);",
          "165:  YYSETCONDITION(*stack_state);",
          "166:  zend_stack_del_top(&SCNG(state_stack));",
          "167: }",
          "169: static void yy_scan_buffer(char *str, unsigned int len TSRMLS_DC)",
          "170: {",
          "171:  YYCURSOR       = (YYCTYPE*)str;",
          "172:  YYLIMIT        = YYCURSOR + len;",
          "173:  if (!SCNG(yy_start)) {",
          "174:   SCNG(yy_start) = YYCURSOR;",
          "175:  }",
          "176: }",
          "178: void startup_scanner(TSRMLS_D)",
          "179: {",
          "180:  CG(parse_error) = 0;",
          "181:  CG(doc_comment) = NULL;",
          "182:  CG(doc_comment_len) = 0;",
          "183:  zend_stack_init(&SCNG(state_stack));",
          "184:  zend_ptr_stack_init(&SCNG(heredoc_label_stack));",
          "185: }",
          "187: static void heredoc_label_dtor(zend_heredoc_label *heredoc_label) {",
          "188:     efree(heredoc_label->label);",
          "189: }",
          "191: void shutdown_scanner(TSRMLS_D)",
          "192: {",
          "193:  CG(parse_error) = 0;",
          "194:  RESET_DOC_COMMENT();",
          "195:  zend_stack_destroy(&SCNG(state_stack));",
          "196:  zend_ptr_stack_clean(&SCNG(heredoc_label_stack), (void (*)(void *)) &heredoc_label_dtor, 1);",
          "197:  zend_ptr_stack_destroy(&SCNG(heredoc_label_stack));",
          "198: }",
          "200: ZEND_API void zend_save_lexical_state(zend_lex_state *lex_state TSRMLS_DC)",
          "201: {",
          "202:  lex_state->yy_leng   = SCNG(yy_leng);",
          "203:  lex_state->yy_start  = SCNG(yy_start);",
          "204:  lex_state->yy_text   = SCNG(yy_text);",
          "205:  lex_state->yy_cursor = SCNG(yy_cursor);",
          "206:  lex_state->yy_marker = SCNG(yy_marker);",
          "207:  lex_state->yy_limit  = SCNG(yy_limit);",
          "209:  lex_state->state_stack = SCNG(state_stack);",
          "210:  zend_stack_init(&SCNG(state_stack));",
          "212:  lex_state->heredoc_label_stack = SCNG(heredoc_label_stack);",
          "213:  zend_ptr_stack_init(&SCNG(heredoc_label_stack));",
          "215:  lex_state->in = SCNG(yy_in);",
          "216:  lex_state->yy_state = YYSTATE;",
          "217:  lex_state->filename = zend_get_compiled_filename(TSRMLS_C);",
          "218:  lex_state->lineno = CG(zend_lineno);",
          "220:  lex_state->script_org = SCNG(script_org);",
          "221:  lex_state->script_org_size = SCNG(script_org_size);",
          "222:  lex_state->script_filtered = SCNG(script_filtered);",
          "223:  lex_state->script_filtered_size = SCNG(script_filtered_size);",
          "224:  lex_state->input_filter = SCNG(input_filter);",
          "225:  lex_state->output_filter = SCNG(output_filter);",
          "226:  lex_state->script_encoding = SCNG(script_encoding);",
          "227: }",
          "229: ZEND_API void zend_restore_lexical_state(zend_lex_state *lex_state TSRMLS_DC)",
          "230: {",
          "231:  SCNG(yy_leng)   = lex_state->yy_leng;",
          "232:  SCNG(yy_start)  = lex_state->yy_start;",
          "233:  SCNG(yy_text)   = lex_state->yy_text;",
          "234:  SCNG(yy_cursor) = lex_state->yy_cursor;",
          "235:  SCNG(yy_marker) = lex_state->yy_marker;",
          "236:  SCNG(yy_limit)  = lex_state->yy_limit;",
          "238:  zend_stack_destroy(&SCNG(state_stack));",
          "239:  SCNG(state_stack) = lex_state->state_stack;",
          "241:  zend_ptr_stack_clean(&SCNG(heredoc_label_stack), (void (*)(void *)) &heredoc_label_dtor, 1);",
          "242:  zend_ptr_stack_destroy(&SCNG(heredoc_label_stack));",
          "243:  SCNG(heredoc_label_stack) = lex_state->heredoc_label_stack;",
          "245:  SCNG(yy_in) = lex_state->in;",
          "246:  YYSETCONDITION(lex_state->yy_state);",
          "247:  CG(zend_lineno) = lex_state->lineno;",
          "248:  zend_restore_compiled_filename(lex_state->filename TSRMLS_CC);",
          "250:  if (SCNG(script_filtered)) {",
          "251:   efree(SCNG(script_filtered));",
          "252:   SCNG(script_filtered) = NULL;",
          "253:  }",
          "254:  SCNG(script_org) = lex_state->script_org;",
          "255:  SCNG(script_org_size) = lex_state->script_org_size;",
          "256:  SCNG(script_filtered) = lex_state->script_filtered;",
          "257:  SCNG(script_filtered_size) = lex_state->script_filtered_size;",
          "258:  SCNG(input_filter) = lex_state->input_filter;",
          "259:  SCNG(output_filter) = lex_state->output_filter;",
          "260:  SCNG(script_encoding) = lex_state->script_encoding;",
          "262:  RESET_DOC_COMMENT();",
          "263: }",
          "265: ZEND_API void zend_destroy_file_handle(zend_file_handle *file_handle TSRMLS_DC)",
          "266: {",
          "267:  zend_llist_del_element(&CG(open_files), file_handle, (int (*)(void *, void *)) zend_compare_file_handles);",
          "269:  file_handle->opened_path = NULL;",
          "270:  if (file_handle->free_filename) {",
          "271:   file_handle->filename = NULL;",
          "272:  }",
          "273: }",
          "275: #define BOM_UTF32_BE \"\\x00\\x00\\xfe\\xff\"",
          "276: #define BOM_UTF32_LE \"\\xff\\xfe\\x00\\x00\"",
          "277: #define BOM_UTF16_BE \"\\xfe\\xff\"",
          "278: #define BOM_UTF16_LE \"\\xff\\xfe\"",
          "279: #define BOM_UTF8  \"\\xef\\xbb\\xbf\"",
          "281: static const zend_encoding *zend_multibyte_detect_utf_encoding(const unsigned char *script, size_t script_size TSRMLS_DC)",
          "282: {",
          "283:  const unsigned char *p;",
          "284:  int wchar_size = 2;",
          "285:  int le = 0;",
          "288:  p = script;",
          "289:  while ((p-script) < script_size) {",
          "290:   p = memchr(p, 0, script_size-(p-script)-2);",
          "291:   if (!p) {",
          "292:    break;",
          "293:   }",
          "294:   if (*(p+1) == '\\0' && *(p+2) == '\\0') {",
          "295:    wchar_size = 4;",
          "296:    break;",
          "297:   }",
          "300:   p += 4;",
          "301:  }",
          "304:  p = script;",
          "305:  while ((p-script) < script_size) {",
          "306:   if (*p == '\\0' && *(p+wchar_size-1) != '\\0') {",
          "308:    le = 0;",
          "309:    break;",
          "310:   } else if (*p != '\\0' && *(p+wchar_size-1) == '\\0') {",
          "312:    le = 1;",
          "313:    break;",
          "314:   }",
          "315:   p += wchar_size;",
          "316:  }",
          "318:  if (wchar_size == 2) {",
          "319:   return le ? zend_multibyte_encoding_utf16le : zend_multibyte_encoding_utf16be;",
          "320:  } else {",
          "321:   return le ? zend_multibyte_encoding_utf32le : zend_multibyte_encoding_utf32be;",
          "322:  }",
          "324:  return NULL;",
          "325: }",
          "327: static const zend_encoding* zend_multibyte_detect_unicode(TSRMLS_D)",
          "328: {",
          "329:  const zend_encoding *script_encoding = NULL;",
          "330:  int bom_size;",
          "331:  unsigned char *pos1, *pos2;",
          "333:  if (LANG_SCNG(script_org_size) < sizeof(BOM_UTF32_LE)-1) {",
          "334:   return NULL;",
          "335:  }",
          "338:  if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_BE, sizeof(BOM_UTF32_BE)-1)) {",
          "339:   script_encoding = zend_multibyte_encoding_utf32be;",
          "340:   bom_size = sizeof(BOM_UTF32_BE)-1;",
          "341:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_LE, sizeof(BOM_UTF32_LE)-1)) {",
          "342:   script_encoding = zend_multibyte_encoding_utf32le;",
          "343:   bom_size = sizeof(BOM_UTF32_LE)-1;",
          "344:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_BE, sizeof(BOM_UTF16_BE)-1)) {",
          "345:   script_encoding = zend_multibyte_encoding_utf16be;",
          "346:   bom_size = sizeof(BOM_UTF16_BE)-1;",
          "347:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_LE, sizeof(BOM_UTF16_LE)-1)) {",
          "348:   script_encoding = zend_multibyte_encoding_utf16le;",
          "349:   bom_size = sizeof(BOM_UTF16_LE)-1;",
          "350:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF8, sizeof(BOM_UTF8)-1)) {",
          "351:   script_encoding = zend_multibyte_encoding_utf8;",
          "352:   bom_size = sizeof(BOM_UTF8)-1;",
          "353:  }",
          "355:  if (script_encoding) {",
          "357:   LANG_SCNG(script_org) += bom_size;",
          "358:   LANG_SCNG(script_org_size) -= bom_size;",
          "360:   return script_encoding;",
          "361:  }",
          "364:  if ((pos1 = memchr(LANG_SCNG(script_org), 0, LANG_SCNG(script_org_size)))) {",
          "366:   pos2 = LANG_SCNG(script_org);",
          "368:   while (pos1 - pos2 >= sizeof(\"__HALT_COMPILER();\")-1) {",
          "369:    pos2 = memchr(pos2, '_', pos1 - pos2);",
          "370:    if (!pos2) break;",
          "371:    pos2++;",
          "372:    if (strncasecmp((char*)pos2, \"_HALT_COMPILER\", sizeof(\"_HALT_COMPILER\")-1) == 0) {",
          "373:     pos2 += sizeof(\"_HALT_COMPILER\")-1;",
          "374:     while (*pos2 == ' '  ||",
          "378:      pos2++;",
          "379:     }",
          "380:     if (*pos2 == '(') {",
          "381:      pos2++;",
          "382:      while (*pos2 == ' '  ||",
          "386:       pos2++;",
          "387:      }",
          "388:      if (*pos2 == ')') {",
          "389:       pos2++;",
          "390:       while (*pos2 == ' '  ||",
          "394:        pos2++;",
          "395:       }",
          "396:       if (*pos2 == ';') {",
          "397:        return NULL;",
          "398:       }",
          "399:      }",
          "400:     }",
          "401:    }",
          "402:   }",
          "404:   return zend_multibyte_detect_utf_encoding(LANG_SCNG(script_org), LANG_SCNG(script_org_size) TSRMLS_CC);",
          "405:  }",
          "407:  return NULL;",
          "408: }",
          "410: static const zend_encoding* zend_multibyte_find_script_encoding(TSRMLS_D)",
          "411: {",
          "412:  const zend_encoding *script_encoding;",
          "414:  if (CG(detect_unicode)) {",
          "416:   script_encoding = zend_multibyte_detect_unicode(TSRMLS_C);",
          "417:   if (script_encoding != NULL) {",
          "419:    return script_encoding;",
          "420:   }",
          "421:  }",
          "424:  if (!CG(script_encoding_list) || !CG(script_encoding_list_size)) {",
          "425:   return NULL;",
          "426:  }",
          "429:  if (CG(script_encoding_list_size) > 1) {",
          "430:   return zend_multibyte_encoding_detector(LANG_SCNG(script_org), LANG_SCNG(script_org_size), CG(script_encoding_list), CG(script_encoding_list_size) TSRMLS_CC);",
          "431:  }",
          "433:  return CG(script_encoding_list)[0];",
          "434: }",
          "436: ZEND_API int zend_multibyte_set_filter(const zend_encoding *onetime_encoding TSRMLS_DC)",
          "437: {",
          "438:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "439:  const zend_encoding *script_encoding = onetime_encoding ? onetime_encoding: zend_multibyte_find_script_encoding(TSRMLS_C);",
          "441:  if (!script_encoding) {",
          "442:   return FAILURE;",
          "443:  }",
          "446:  LANG_SCNG(script_encoding) = script_encoding;",
          "447:  LANG_SCNG(input_filter) = NULL;",
          "448:  LANG_SCNG(output_filter) = NULL;",
          "450:  if (!internal_encoding || LANG_SCNG(script_encoding) == internal_encoding) {",
          "451:   if (!zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {",
          "453:    LANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;",
          "454:    LANG_SCNG(output_filter) = encoding_filter_intermediate_to_script;",
          "455:   } else {",
          "456:    LANG_SCNG(input_filter) = NULL;",
          "457:    LANG_SCNG(output_filter) = NULL;",
          "458:   }",
          "459:   return SUCCESS;",
          "460:  }",
          "462:  if (zend_multibyte_check_lexer_compatibility(internal_encoding)) {",
          "463:   LANG_SCNG(input_filter) = encoding_filter_script_to_internal;",
          "464:   LANG_SCNG(output_filter) = NULL;",
          "465:  } else if (zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {",
          "466:   LANG_SCNG(input_filter) = NULL;",
          "467:   LANG_SCNG(output_filter) = encoding_filter_script_to_internal;",
          "468:  } else {",
          "470:   LANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;",
          "471:   LANG_SCNG(output_filter) = encoding_filter_intermediate_to_internal;",
          "472:  }",
          "474:  return 0;",
          "475: }",
          "477: ZEND_API int open_file_for_scanning(zend_file_handle *file_handle TSRMLS_DC)",
          "478: {",
          "479:  const char *file_path = NULL;",
          "480:  char *buf;",
          "481:  size_t size, offset = 0;",
          "484:  if (CG(start_lineno) == 2 && file_handle->type == ZEND_HANDLE_FP && file_handle->handle.fp) {",
          "485:   if ((offset = ftell(file_handle->handle.fp)) == -1) {",
          "486:    offset = 0;",
          "487:   }",
          "488:  }",
          "490:  if (zend_stream_fixup(file_handle, &buf, &size TSRMLS_CC) == FAILURE) {",
          "491:   return FAILURE;",
          "492:  }",
          "494:  zend_llist_add_element(&CG(open_files), file_handle);",
          "495:  if (file_handle->handle.stream.handle >= (void*)file_handle && file_handle->handle.stream.handle <= (void*)(file_handle+1)) {",
          "496:   zend_file_handle *fh = (zend_file_handle*)zend_llist_get_last(&CG(open_files));",
          "497:   size_t diff = (char*)file_handle->handle.stream.handle - (char*)file_handle;",
          "498:   fh->handle.stream.handle = (void*)(((char*)fh) + diff);",
          "499:   file_handle->handle.stream.handle = fh->handle.stream.handle;",
          "500:  }",
          "503:  SCNG(yy_in) = file_handle;",
          "504:  SCNG(yy_start) = NULL;",
          "506:  if (size != -1) {",
          "507:   if (CG(multibyte)) {",
          "508:    SCNG(script_org) = (unsigned char*)buf;",
          "509:    SCNG(script_org_size) = size;",
          "510:    SCNG(script_filtered) = NULL;",
          "512:    zend_multibyte_set_filter(NULL TSRMLS_CC);",
          "514:    if (SCNG(input_filter)) {",
          "515:     if ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "516:      zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "517:        \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "518:     }",
          "519:     buf = (char*)SCNG(script_filtered);",
          "520:     size = SCNG(script_filtered_size);",
          "521:    }",
          "522:   }",
          "523:   SCNG(yy_start) = (unsigned char *)buf - offset;",
          "524:   yy_scan_buffer(buf, size TSRMLS_CC);",
          "525:  } else {",
          "526:   zend_error_noreturn(E_COMPILE_ERROR, \"zend_stream_mmap() failed\");",
          "527:  }",
          "529:  BEGIN(INITIAL);",
          "531:  if (file_handle->opened_path) {",
          "532:   file_path = file_handle->opened_path;",
          "533:  } else {",
          "534:   file_path = file_handle->filename;",
          "535:  }",
          "537:  zend_set_compiled_filename(file_path TSRMLS_CC);",
          "539:  if (CG(start_lineno)) {",
          "540:   CG(zend_lineno) = CG(start_lineno);",
          "541:   CG(start_lineno) = 0;",
          "542:  } else {",
          "543:   CG(zend_lineno) = 1;",
          "544:  }",
          "546:  RESET_DOC_COMMENT();",
          "547:  CG(increment_lineno) = 0;",
          "548:  return SUCCESS;",
          "549: }",
          "550: END_EXTERN_C()",
          "553: ZEND_API zend_op_array *compile_file(zend_file_handle *file_handle, int type TSRMLS_DC)",
          "554: {",
          "555:  zend_lex_state original_lex_state;",
          "556:  zend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));",
          "557:  zend_op_array *original_active_op_array = CG(active_op_array);",
          "558:  zend_op_array *retval=NULL;",
          "559:  int compiler_result;",
          "560:  zend_bool compilation_successful=0;",
          "561:  znode retval_znode;",
          "562:  zend_bool original_in_compilation = CG(in_compilation);",
          "564:  retval_znode.op_type = IS_CONST;",
          "565:  retval_znode.u.constant.type = IS_LONG;",
          "566:  retval_znode.u.constant.value.lval = 1;",
          "567:  Z_UNSET_ISREF(retval_znode.u.constant);",
          "568:  Z_SET_REFCOUNT(retval_znode.u.constant, 1);",
          "570:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "574:  if (open_file_for_scanning(file_handle TSRMLS_CC)==FAILURE) {",
          "575:   if (type==ZEND_REQUIRE) {",
          "576:    zend_message_dispatcher(ZMSG_FAILED_REQUIRE_FOPEN, file_handle->filename TSRMLS_CC);",
          "577:    zend_bailout();",
          "578:   } else {",
          "579:    zend_message_dispatcher(ZMSG_FAILED_INCLUDE_FOPEN, file_handle->filename TSRMLS_CC);",
          "580:   }",
          "581:   compilation_successful=0;",
          "582:  } else {",
          "583:   init_op_array(op_array, ZEND_USER_FUNCTION, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "584:   CG(in_compilation) = 1;",
          "585:   CG(active_op_array) = op_array;",
          "586:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "587:   zend_init_compiler_context(TSRMLS_C);",
          "588:   compiler_result = zendparse(TSRMLS_C);",
          "589:   zend_do_return(&retval_znode, 0 TSRMLS_CC);",
          "590:   CG(in_compilation) = original_in_compilation;",
          "592:    zend_bailout();",
          "593:   }",
          "594:   compilation_successful=1;",
          "595:  }",
          "597:  if (retval) {",
          "598:   CG(active_op_array) = original_active_op_array;",
          "599:   if (compilation_successful) {",
          "600:    pass_two(op_array TSRMLS_CC);",
          "601:    zend_release_labels(0 TSRMLS_CC);",
          "602:   } else {",
          "603:    efree(op_array);",
          "604:    retval = NULL;",
          "605:   }",
          "606:  }",
          "607:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "608:  return retval;",
          "609: }",
          "612: zend_op_array *compile_filename(int type, zval *filename TSRMLS_DC)",
          "613: {",
          "614:  zend_file_handle file_handle;",
          "615:  zval tmp;",
          "616:  zend_op_array *retval;",
          "617:  char *opened_path = NULL;",
          "619:  if (filename->type != IS_STRING) {",
          "620:   tmp = *filename;",
          "621:   zval_copy_ctor(&tmp);",
          "622:   convert_to_string(&tmp);",
          "623:   filename = &tmp;",
          "624:  }",
          "625:  file_handle.filename = filename->value.str.val;",
          "626:  file_handle.free_filename = 0;",
          "627:  file_handle.type = ZEND_HANDLE_FILENAME;",
          "628:  file_handle.opened_path = NULL;",
          "629:  file_handle.handle.fp = NULL;",
          "631:  retval = zend_compile_file(&file_handle, type TSRMLS_CC);",
          "632:  if (retval && file_handle.handle.stream.handle) {",
          "633:   int dummy = 1;",
          "635:   if (!file_handle.opened_path) {",
          "636:    file_handle.opened_path = opened_path = estrndup(filename->value.str.val, filename->value.str.len);",
          "637:   }",
          "639:   zend_hash_add(&EG(included_files), file_handle.opened_path, strlen(file_handle.opened_path)+1, (void *)&dummy, sizeof(int), NULL);",
          "641:   if (opened_path) {",
          "642:    efree(opened_path);",
          "643:   }",
          "644:  }",
          "645:  zend_destroy_file_handle(&file_handle TSRMLS_CC);",
          "647:  if (filename==&tmp) {",
          "648:   zval_dtor(&tmp);",
          "649:  }",
          "650:  return retval;",
          "651: }",
          "653: ZEND_API int zend_prepare_string_for_scanning(zval *str, char *filename TSRMLS_DC)",
          "654: {",
          "655:  char *buf;",
          "656:  size_t size;",
          "659:  if (IS_INTERNED(str->value.str.val)) {",
          "660:   char *tmp = safe_emalloc(1, str->value.str.len, ZEND_MMAP_AHEAD);",
          "661:   memcpy(tmp, str->value.str.val, str->value.str.len + ZEND_MMAP_AHEAD);",
          "662:   str->value.str.val = tmp;",
          "663:  } else {",
          "664:   str->value.str.val = safe_erealloc(str->value.str.val, 1, str->value.str.len, ZEND_MMAP_AHEAD);",
          "665:  }",
          "667:  memset(str->value.str.val + str->value.str.len, 0, ZEND_MMAP_AHEAD);",
          "669:  SCNG(yy_in) = NULL;",
          "670:  SCNG(yy_start) = NULL;",
          "672:  buf = str->value.str.val;",
          "673:  size = str->value.str.len;",
          "675:  if (CG(multibyte)) {",
          "676:   SCNG(script_org) = (unsigned char*)buf;",
          "677:   SCNG(script_org_size) = size;",
          "678:   SCNG(script_filtered) = NULL;",
          "680:   zend_multibyte_set_filter(zend_multibyte_get_internal_encoding(TSRMLS_C) TSRMLS_CC);",
          "682:   if (SCNG(input_filter)) {",
          "683:    if ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "684:     zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "685:       \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "686:    }",
          "687:    buf = (char*)SCNG(script_filtered);",
          "688:    size = SCNG(script_filtered_size);",
          "689:   }",
          "690:  }",
          "692:  yy_scan_buffer(buf, size TSRMLS_CC);",
          "694:  zend_set_compiled_filename(filename TSRMLS_CC);",
          "695:  CG(zend_lineno) = 1;",
          "696:  CG(increment_lineno) = 0;",
          "697:  RESET_DOC_COMMENT();",
          "698:  return SUCCESS;",
          "699: }",
          "702: ZEND_API size_t zend_get_scanned_file_offset(TSRMLS_D)",
          "703: {",
          "704:  size_t offset = SCNG(yy_cursor) - SCNG(yy_start);",
          "705:  if (SCNG(input_filter)) {",
          "706:   size_t original_offset = offset, length = 0;",
          "707:   do {",
          "708:    unsigned char *p = NULL;",
          "709:    if ((size_t)-1 == SCNG(input_filter)(&p, &length, SCNG(script_org), offset TSRMLS_CC)) {",
          "710:     return (size_t)-1;",
          "711:    }",
          "712:    efree(p);",
          "713:    if (length > original_offset) {",
          "714:     offset--;",
          "715:    } else if (length < original_offset) {",
          "716:     offset++;",
          "717:    }",
          "718:   } while (original_offset != length);",
          "719:  }",
          "720:  return offset;",
          "721: }",
          "724: zend_op_array *compile_string(zval *source_string, char *filename TSRMLS_DC)",
          "725: {",
          "726:  zend_lex_state original_lex_state;",
          "727:  zend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));",
          "728:  zend_op_array *original_active_op_array = CG(active_op_array);",
          "729:  zend_op_array *retval;",
          "730:  zval tmp;",
          "731:  int compiler_result;",
          "732:  zend_bool original_in_compilation = CG(in_compilation);",
          "734:  if (source_string->value.str.len==0) {",
          "735:   efree(op_array);",
          "736:   return NULL;",
          "737:  }",
          "739:  CG(in_compilation) = 1;",
          "741:  tmp = *source_string;",
          "742:  zval_copy_ctor(&tmp);",
          "743:  convert_to_string(&tmp);",
          "744:  source_string = &tmp;",
          "746:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "747:  if (zend_prepare_string_for_scanning(source_string, filename TSRMLS_CC)==FAILURE) {",
          "748:   efree(op_array);",
          "749:   retval = NULL;",
          "750:  } else {",
          "751:   zend_bool orig_interactive = CG(interactive);",
          "753:   CG(interactive) = 0;",
          "754:   init_op_array(op_array, ZEND_EVAL_CODE, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "755:   CG(interactive) = orig_interactive;",
          "756:   CG(active_op_array) = op_array;",
          "757:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "758:   zend_init_compiler_context(TSRMLS_C);",
          "759:   BEGIN(ST_IN_SCRIPTING);",
          "760:   compiler_result = zendparse(TSRMLS_C);",
          "762:   if (SCNG(script_filtered)) {",
          "763:    efree(SCNG(script_filtered));",
          "764:    SCNG(script_filtered) = NULL;",
          "765:   }",
          "767:   if (compiler_result != 0) {",
          "768:    CG(active_op_array) = original_active_op_array;",
          "769:    CG(unclean_shutdown)=1;",
          "770:    destroy_op_array(op_array TSRMLS_CC);",
          "771:    efree(op_array);",
          "772:    retval = NULL;",
          "773:   } else {",
          "774:    zend_do_return(NULL, 0 TSRMLS_CC);",
          "775:    CG(active_op_array) = original_active_op_array;",
          "776:    pass_two(op_array TSRMLS_CC);",
          "777:    zend_release_labels(0 TSRMLS_CC);",
          "778:    retval = op_array;",
          "779:   }",
          "780:  }",
          "781:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "782:  zval_dtor(&tmp);",
          "783:  CG(in_compilation) = original_in_compilation;",
          "784:  return retval;",
          "785: }",
          "788: BEGIN_EXTERN_C()",
          "789: int highlight_file(char *filename, zend_syntax_highlighter_ini *syntax_highlighter_ini TSRMLS_DC)",
          "790: {",
          "791:  zend_lex_state original_lex_state;",
          "792:  zend_file_handle file_handle;",
          "794:  file_handle.type = ZEND_HANDLE_FILENAME;",
          "795:  file_handle.filename = filename;",
          "796:  file_handle.free_filename = 0;",
          "797:  file_handle.opened_path = NULL;",
          "798:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "799:  if (open_file_for_scanning(&file_handle TSRMLS_CC)==FAILURE) {",
          "800:   zend_message_dispatcher(ZMSG_FAILED_HIGHLIGHT_FOPEN, filename TSRMLS_CC);",
          "801:   zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "802:   return FAILURE;",
          "803:  }",
          "804:  zend_highlight(syntax_highlighter_ini TSRMLS_CC);",
          "805:  if (SCNG(script_filtered)) {",
          "806:   efree(SCNG(script_filtered));",
          "807:   SCNG(script_filtered) = NULL;",
          "808:  }",
          "809:  zend_destroy_file_handle(&file_handle TSRMLS_CC);",
          "810:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "811:  return SUCCESS;",
          "812: }",
          "814: int highlight_string(zval *str, zend_syntax_highlighter_ini *syntax_highlighter_ini, char *str_name TSRMLS_DC)",
          "815: {",
          "816:  zend_lex_state original_lex_state;",
          "817:  zval tmp = *str;",
          "819:  str = &tmp;",
          "820:  zval_copy_ctor(str);",
          "821:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "822:  if (zend_prepare_string_for_scanning(str, str_name TSRMLS_CC)==FAILURE) {",
          "823:   zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "824:   return FAILURE;",
          "825:  }",
          "826:  BEGIN(INITIAL);",
          "827:  zend_highlight(syntax_highlighter_ini TSRMLS_CC);",
          "828:  if (SCNG(script_filtered)) {",
          "829:   efree(SCNG(script_filtered));",
          "830:   SCNG(script_filtered) = NULL;",
          "831:  }",
          "832:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "833:  zval_dtor(str);",
          "834:  return SUCCESS;",
          "835: }",
          "837: ZEND_API void zend_multibyte_yyinput_again(zend_encoding_filter old_input_filter, const zend_encoding *old_encoding TSRMLS_DC)",
          "838: {",
          "839:  size_t length;",
          "840:  unsigned char *new_yy_start;",
          "843:  if (!SCNG(input_filter)) {",
          "844:   if (SCNG(script_filtered)) {",
          "845:    efree(SCNG(script_filtered));",
          "846:    SCNG(script_filtered) = NULL;",
          "847:   }",
          "848:   SCNG(script_filtered_size) = 0;",
          "849:   length = SCNG(script_org_size);",
          "850:   new_yy_start = SCNG(script_org);",
          "851:  } else {",
          "852:   if ((size_t)-1 == SCNG(input_filter)(&new_yy_start, &length, SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "853:    zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "854:      \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "855:   }",
          "856:   SCNG(script_filtered) = new_yy_start;",
          "857:   SCNG(script_filtered_size) = length;",
          "858:  }",
          "860:  SCNG(yy_cursor) = new_yy_start + (SCNG(yy_cursor) - SCNG(yy_start));",
          "861:  SCNG(yy_marker) = new_yy_start + (SCNG(yy_marker) - SCNG(yy_start));",
          "862:  SCNG(yy_text) = new_yy_start + (SCNG(yy_text) - SCNG(yy_start));",
          "863:  SCNG(yy_limit) = new_yy_start + (SCNG(yy_limit) - SCNG(yy_start));",
          "865:  SCNG(yy_start) = new_yy_start;",
          "866: }",
          "869: # define zend_copy_value(zendlval, yytext, yyleng) \\",
          "870:  if (SCNG(output_filter)) { \\",
          "871:   size_t sz = 0; \\",
          "872:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC); \\",
          "873:   zendlval->value.str.len = sz; \\",
          "874:  } else { \\",
          "875:   zendlval->value.str.val = (char *) estrndup(yytext, yyleng); \\",
          "876:   zendlval->value.str.len = yyleng; \\",
          "877:  }",
          "879: static void zend_scan_escape_string(zval *zendlval, char *str, int len, char quote_type TSRMLS_DC)",
          "880: {",
          "881:  register char *s, *t;",
          "882:  char *end;",
          "884:  ZVAL_STRINGL(zendlval, str, len, 1);",
          "887:  s = t = zendlval->value.str.val;",
          "888:  end = s+zendlval->value.str.len;",
          "889:  while (s<end) {",
          "890:   if (*s=='\\\\') {",
          "891:    s++;",
          "892:    if (s >= end) {",
          "894:     break;",
          "895:    }",
          "897:    switch(*s) {",
          "898:     case 'n':",
          "900:      zendlval->value.str.len--;",
          "901:      break;",
          "902:     case 'r':",
          "904:      zendlval->value.str.len--;",
          "905:      break;",
          "906:     case 't':",
          "908:      zendlval->value.str.len--;",
          "909:      break;",
          "910:     case 'f':",
          "912:      zendlval->value.str.len--;",
          "913:      break;",
          "914:     case 'v':",
          "916:      zendlval->value.str.len--;",
          "917:      break;",
          "918:     case 'e':",
          "919: #ifdef PHP_WIN32",
          "921: #else",
          "923: #endif",
          "924:      zendlval->value.str.len--;",
          "925:      break;",
          "926:     case '\"':",
          "927:     case '`':",
          "928:      if (*s != quote_type) {",
          "931:       break;",
          "932:      }",
          "933:     case '\\\\':",
          "934:     case '$':",
          "936:      zendlval->value.str.len--;",
          "937:      break;",
          "938:     case 'x':",
          "939:     case 'X':",
          "940:      if (ZEND_IS_HEX(*(s+1))) {",
          "941:       char hex_buf[3] = { 0, 0, 0 };",
          "945:       hex_buf[0] = *(++s);",
          "946:       zendlval->value.str.len--;",
          "947:       if (ZEND_IS_HEX(*(s+1))) {",
          "948:        hex_buf[1] = *(++s);",
          "949:        zendlval->value.str.len--;",
          "950:       }",
          "952:      } else {",
          "955:      }",
          "956:      break;",
          "957:     default:",
          "959:      if (ZEND_IS_OCT(*s)) {",
          "960:       char octal_buf[4] = { 0, 0, 0, 0 };",
          "962:       octal_buf[0] = *s;",
          "963:       zendlval->value.str.len--;",
          "964:       if (ZEND_IS_OCT(*(s+1))) {",
          "965:        octal_buf[1] = *(++s);",
          "966:        zendlval->value.str.len--;",
          "967:        if (ZEND_IS_OCT(*(s+1))) {",
          "968:         octal_buf[2] = *(++s);",
          "969:         zendlval->value.str.len--;",
          "970:        }",
          "971:       }",
          "973:      } else {",
          "976:      }",
          "977:      break;",
          "978:    }",
          "979:   } else {",
          "981:   }",
          "983:   if (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {",
          "984:    CG(zend_lineno)++;",
          "985:   }",
          "986:   s++;",
          "987:  }",
          "989:  if (SCNG(output_filter)) {",
          "990:   size_t sz = 0;",
          "991:   s = zendlval->value.str.val;",
          "992:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);",
          "993:   zendlval->value.str.len = sz;",
          "994:   efree(s);",
          "995:  }",
          "996: }",
          "999: int lex_scan(zval *zendlval TSRMLS_DC)",
          "1000: {",
          "1001: restart:",
          "1002:  SCNG(yy_text) = YYCURSOR;",
          "1004: yymore_restart:",
          "1007: re2c:yyfill:check = 0;",
          "1008: LNUM [0-9]+",
          "1009: DNUM ([0-9]*\".\"[0-9]+)|([0-9]+\".\"[0-9]*)",
          "1010: EXPONENT_DNUM (({LNUM}|{DNUM})[eE][+-]?{LNUM})",
          "1011: HNUM \"0x\"[0-9a-fA-F]+",
          "1012: BNUM \"0b\"[01]+",
          "1013: LABEL [a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*",
          "1014: WHITESPACE [ \\n\\r\\t]+",
          "1015: TABS_AND_SPACES [ \\t]*",
          "1016: TOKENS [;:,.\\[\\]()|^&+-/*=%!~$<>?@]",
          "1017: ANY_CHAR [^]",
          "1018: NEWLINE (\"\\r\"|\"\\n\"|\"\\r\\n\")",
          "1021: <!*> := yyleng = YYCURSOR - SCNG(yy_text);",
          "1024: <ST_IN_SCRIPTING>\"exit\" {",
          "1025:  return T_EXIT;",
          "1026: }",
          "1028: <ST_IN_SCRIPTING>\"die\" {",
          "1029:  return T_EXIT;",
          "1030: }",
          "1032: <ST_IN_SCRIPTING>\"function\" {",
          "1033:  return T_FUNCTION;",
          "1034: }",
          "1036: <ST_IN_SCRIPTING>\"const\" {",
          "1037:  return T_CONST;",
          "1038: }",
          "1040: <ST_IN_SCRIPTING>\"return\" {",
          "1041:  return T_RETURN;",
          "1042: }",
          "1044: <ST_IN_SCRIPTING>\"yield\" {",
          "1045:  return T_YIELD;",
          "1046: }",
          "1048: <ST_IN_SCRIPTING>\"try\" {",
          "1049:  return T_TRY;",
          "1050: }",
          "1052: <ST_IN_SCRIPTING>\"catch\" {",
          "1053:  return T_CATCH;",
          "1054: }",
          "1056: <ST_IN_SCRIPTING>\"finally\" {",
          "1057:  return T_FINALLY;",
          "1058: }",
          "1060: <ST_IN_SCRIPTING>\"throw\" {",
          "1061:  return T_THROW;",
          "1062: }",
          "1064: <ST_IN_SCRIPTING>\"if\" {",
          "1065:  return T_IF;",
          "1066: }",
          "1068: <ST_IN_SCRIPTING>\"elseif\" {",
          "1069:  return T_ELSEIF;",
          "1070: }",
          "1072: <ST_IN_SCRIPTING>\"endif\" {",
          "1073:  return T_ENDIF;",
          "1074: }",
          "1076: <ST_IN_SCRIPTING>\"else\" {",
          "1077:  return T_ELSE;",
          "1078: }",
          "1080: <ST_IN_SCRIPTING>\"while\" {",
          "1081:  return T_WHILE;",
          "1082: }",
          "1084: <ST_IN_SCRIPTING>\"endwhile\" {",
          "1085:  return T_ENDWHILE;",
          "1086: }",
          "1088: <ST_IN_SCRIPTING>\"do\" {",
          "1089:  return T_DO;",
          "1090: }",
          "1092: <ST_IN_SCRIPTING>\"for\" {",
          "1093:  return T_FOR;",
          "1094: }",
          "1096: <ST_IN_SCRIPTING>\"endfor\" {",
          "1097:  return T_ENDFOR;",
          "1098: }",
          "1100: <ST_IN_SCRIPTING>\"foreach\" {",
          "1101:  return T_FOREACH;",
          "1102: }",
          "1104: <ST_IN_SCRIPTING>\"endforeach\" {",
          "1105:  return T_ENDFOREACH;",
          "1106: }",
          "1108: <ST_IN_SCRIPTING>\"declare\" {",
          "1109:  return T_DECLARE;",
          "1110: }",
          "1112: <ST_IN_SCRIPTING>\"enddeclare\" {",
          "1113:  return T_ENDDECLARE;",
          "1114: }",
          "1116: <ST_IN_SCRIPTING>\"instanceof\" {",
          "1117:  return T_INSTANCEOF;",
          "1118: }",
          "1120: <ST_IN_SCRIPTING>\"as\" {",
          "1121:  return T_AS;",
          "1122: }",
          "1124: <ST_IN_SCRIPTING>\"switch\" {",
          "1125:  return T_SWITCH;",
          "1126: }",
          "1128: <ST_IN_SCRIPTING>\"endswitch\" {",
          "1129:  return T_ENDSWITCH;",
          "1130: }",
          "1132: <ST_IN_SCRIPTING>\"case\" {",
          "1133:  return T_CASE;",
          "1134: }",
          "1136: <ST_IN_SCRIPTING>\"default\" {",
          "1137:  return T_DEFAULT;",
          "1138: }",
          "1140: <ST_IN_SCRIPTING>\"break\" {",
          "1141:  return T_BREAK;",
          "1142: }",
          "1144: <ST_IN_SCRIPTING>\"continue\" {",
          "1145:  return T_CONTINUE;",
          "1146: }",
          "1148: <ST_IN_SCRIPTING>\"goto\" {",
          "1149:  return T_GOTO;",
          "1150: }",
          "1152: <ST_IN_SCRIPTING>\"echo\" {",
          "1153:  return T_ECHO;",
          "1154: }",
          "1156: <ST_IN_SCRIPTING>\"print\" {",
          "1157:  return T_PRINT;",
          "1158: }",
          "1160: <ST_IN_SCRIPTING>\"class\" {",
          "1161:  return T_CLASS;",
          "1162: }",
          "1164: <ST_IN_SCRIPTING>\"interface\" {",
          "1165:  return T_INTERFACE;",
          "1166: }",
          "1168: <ST_IN_SCRIPTING>\"trait\" {",
          "1169:  return T_TRAIT;",
          "1170: }",
          "1172: <ST_IN_SCRIPTING>\"extends\" {",
          "1173:  return T_EXTENDS;",
          "1174: }",
          "1176: <ST_IN_SCRIPTING>\"implements\" {",
          "1177:  return T_IMPLEMENTS;",
          "1178: }",
          "1180: <ST_IN_SCRIPTING>\"->\" {",
          "1181:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "1182:  return T_OBJECT_OPERATOR;",
          "1183: }",
          "1185: <ST_IN_SCRIPTING,ST_LOOKING_FOR_PROPERTY>{WHITESPACE}+ {",
          "1187:  zendlval->value.str.len = yyleng;",
          "1188:  zendlval->type = IS_STRING;",
          "1189:  HANDLE_NEWLINES(yytext, yyleng);",
          "1190:  return T_WHITESPACE;",
          "1191: }",
          "1193: <ST_LOOKING_FOR_PROPERTY>\"->\" {",
          "1194:  return T_OBJECT_OPERATOR;",
          "1195: }",
          "1197: <ST_LOOKING_FOR_PROPERTY>{LABEL} {",
          "1198:  yy_pop_state(TSRMLS_C);",
          "1199:  zend_copy_value(zendlval, yytext, yyleng);",
          "1200:  zendlval->type = IS_STRING;",
          "1201:  return T_STRING;",
          "1202: }",
          "1204: <ST_LOOKING_FOR_PROPERTY>{ANY_CHAR} {",
          "1205:  yyless(0);",
          "1206:  yy_pop_state(TSRMLS_C);",
          "1207:  goto restart;",
          "1208: }",
          "1210: <ST_IN_SCRIPTING>\"::\" {",
          "1211:  return T_PAAMAYIM_NEKUDOTAYIM;",
          "1212: }",
          "1214: <ST_IN_SCRIPTING>\"\\\\\" {",
          "1215:  return T_NS_SEPARATOR;",
          "1216: }",
          "1218: <ST_IN_SCRIPTING>\"new\" {",
          "1219:  return T_NEW;",
          "1220: }",
          "1222: <ST_IN_SCRIPTING>\"clone\" {",
          "1223:  return T_CLONE;",
          "1224: }",
          "1226: <ST_IN_SCRIPTING>\"var\" {",
          "1227:  return T_VAR;",
          "1228: }",
          "1230: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"int\"|\"integer\"){TABS_AND_SPACES}\")\" {",
          "1231:  return T_INT_CAST;",
          "1232: }",
          "1234: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"real\"|\"double\"|\"float\"){TABS_AND_SPACES}\")\" {",
          "1235:  return T_DOUBLE_CAST;",
          "1236: }",
          "1238: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"string\"|\"binary\"){TABS_AND_SPACES}\")\" {",
          "1239:  return T_STRING_CAST;",
          "1240: }",
          "1242: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}\"array\"{TABS_AND_SPACES}\")\" {",
          "1243:  return T_ARRAY_CAST;",
          "1244: }",
          "1246: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}\"object\"{TABS_AND_SPACES}\")\" {",
          "1247:  return T_OBJECT_CAST;",
          "1248: }",
          "1250: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"bool\"|\"boolean\"){TABS_AND_SPACES}\")\" {",
          "1251:  return T_BOOL_CAST;",
          "1252: }",
          "1254: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"unset\"){TABS_AND_SPACES}\")\" {",
          "1255:  return T_UNSET_CAST;",
          "1256: }",
          "1258: <ST_IN_SCRIPTING>\"eval\" {",
          "1259:  return T_EVAL;",
          "1260: }",
          "1262: <ST_IN_SCRIPTING>\"include\" {",
          "1263:  return T_INCLUDE;",
          "1264: }",
          "1266: <ST_IN_SCRIPTING>\"include_once\" {",
          "1267:  return T_INCLUDE_ONCE;",
          "1268: }",
          "1270: <ST_IN_SCRIPTING>\"require\" {",
          "1271:  return T_REQUIRE;",
          "1272: }",
          "1274: <ST_IN_SCRIPTING>\"require_once\" {",
          "1275:  return T_REQUIRE_ONCE;",
          "1276: }",
          "1278: <ST_IN_SCRIPTING>\"namespace\" {",
          "1279:  return T_NAMESPACE;",
          "1280: }",
          "1282: <ST_IN_SCRIPTING>\"use\" {",
          "1283:  return T_USE;",
          "1284: }",
          "1286: <ST_IN_SCRIPTING>\"insteadof\" {",
          "1287:         return T_INSTEADOF;",
          "1288: }",
          "1290: <ST_IN_SCRIPTING>\"global\" {",
          "1291:  return T_GLOBAL;",
          "1292: }",
          "1294: <ST_IN_SCRIPTING>\"isset\" {",
          "1295:  return T_ISSET;",
          "1296: }",
          "1298: <ST_IN_SCRIPTING>\"empty\" {",
          "1299:  return T_EMPTY;",
          "1300: }",
          "1302: <ST_IN_SCRIPTING>\"__halt_compiler\" {",
          "1303:  return T_HALT_COMPILER;",
          "1304: }",
          "1306: <ST_IN_SCRIPTING>\"static\" {",
          "1307:  return T_STATIC;",
          "1308: }",
          "1310: <ST_IN_SCRIPTING>\"abstract\" {",
          "1311:  return T_ABSTRACT;",
          "1312: }",
          "1314: <ST_IN_SCRIPTING>\"final\" {",
          "1315:  return T_FINAL;",
          "1316: }",
          "1318: <ST_IN_SCRIPTING>\"private\" {",
          "1319:  return T_PRIVATE;",
          "1320: }",
          "1322: <ST_IN_SCRIPTING>\"protected\" {",
          "1323:  return T_PROTECTED;",
          "1324: }",
          "1326: <ST_IN_SCRIPTING>\"public\" {",
          "1327:  return T_PUBLIC;",
          "1328: }",
          "1330: <ST_IN_SCRIPTING>\"unset\" {",
          "1331:  return T_UNSET;",
          "1332: }",
          "1334: <ST_IN_SCRIPTING>\"=>\" {",
          "1335:  return T_DOUBLE_ARROW;",
          "1336: }",
          "1338: <ST_IN_SCRIPTING>\"list\" {",
          "1339:  return T_LIST;",
          "1340: }",
          "1342: <ST_IN_SCRIPTING>\"array\" {",
          "1343:  return T_ARRAY;",
          "1344: }",
          "1346: <ST_IN_SCRIPTING>\"callable\" {",
          "1347:  return T_CALLABLE;",
          "1348: }",
          "1350: <ST_IN_SCRIPTING>\"++\" {",
          "1351:  return T_INC;",
          "1352: }",
          "1354: <ST_IN_SCRIPTING>\"--\" {",
          "1355:  return T_DEC;",
          "1356: }",
          "1358: <ST_IN_SCRIPTING>\"===\" {",
          "1359:  return T_IS_IDENTICAL;",
          "1360: }",
          "1362: <ST_IN_SCRIPTING>\"!==\" {",
          "1363:  return T_IS_NOT_IDENTICAL;",
          "1364: }",
          "1366: <ST_IN_SCRIPTING>\"==\" {",
          "1367:  return T_IS_EQUAL;",
          "1368: }",
          "1370: <ST_IN_SCRIPTING>\"!=\"|\"<>\" {",
          "1371:  return T_IS_NOT_EQUAL;",
          "1372: }",
          "1374: <ST_IN_SCRIPTING>\"<=\" {",
          "1375:  return T_IS_SMALLER_OR_EQUAL;",
          "1376: }",
          "1378: <ST_IN_SCRIPTING>\">=\" {",
          "1379:  return T_IS_GREATER_OR_EQUAL;",
          "1380: }",
          "1382: <ST_IN_SCRIPTING>\"+=\" {",
          "1383:  return T_PLUS_EQUAL;",
          "1384: }",
          "1386: <ST_IN_SCRIPTING>\"-=\" {",
          "1387:  return T_MINUS_EQUAL;",
          "1388: }",
          "1390: <ST_IN_SCRIPTING>\"*=\" {",
          "1391:  return T_MUL_EQUAL;",
          "1392: }",
          "1394: <ST_IN_SCRIPTING>\"/=\" {",
          "1395:  return T_DIV_EQUAL;",
          "1396: }",
          "1398: <ST_IN_SCRIPTING>\".=\" {",
          "1399:  return T_CONCAT_EQUAL;",
          "1400: }",
          "1402: <ST_IN_SCRIPTING>\"%=\" {",
          "1403:  return T_MOD_EQUAL;",
          "1404: }",
          "1406: <ST_IN_SCRIPTING>\"<<=\" {",
          "1407:  return T_SL_EQUAL;",
          "1408: }",
          "1410: <ST_IN_SCRIPTING>\">>=\" {",
          "1411:  return T_SR_EQUAL;",
          "1412: }",
          "1414: <ST_IN_SCRIPTING>\"&=\" {",
          "1415:  return T_AND_EQUAL;",
          "1416: }",
          "1418: <ST_IN_SCRIPTING>\"|=\" {",
          "1419:  return T_OR_EQUAL;",
          "1420: }",
          "1422: <ST_IN_SCRIPTING>\"^=\" {",
          "1423:  return T_XOR_EQUAL;",
          "1424: }",
          "1426: <ST_IN_SCRIPTING>\"||\" {",
          "1427:  return T_BOOLEAN_OR;",
          "1428: }",
          "1430: <ST_IN_SCRIPTING>\"&&\" {",
          "1431:  return T_BOOLEAN_AND;",
          "1432: }",
          "1434: <ST_IN_SCRIPTING>\"OR\" {",
          "1435:  return T_LOGICAL_OR;",
          "1436: }",
          "1438: <ST_IN_SCRIPTING>\"AND\" {",
          "1439:  return T_LOGICAL_AND;",
          "1440: }",
          "1442: <ST_IN_SCRIPTING>\"XOR\" {",
          "1443:  return T_LOGICAL_XOR;",
          "1444: }",
          "1446: <ST_IN_SCRIPTING>\"<<\" {",
          "1447:  return T_SL;",
          "1448: }",
          "1450: <ST_IN_SCRIPTING>\">>\" {",
          "1451:  return T_SR;",
          "1452: }",
          "1454: <ST_IN_SCRIPTING>{TOKENS} {",
          "1455:  return yytext[0];",
          "1456: }",
          "1459: <ST_IN_SCRIPTING>\"{\" {",
          "1460:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1461:  return '{';",
          "1462: }",
          "1465: <ST_DOUBLE_QUOTES,ST_BACKQUOTE,ST_HEREDOC>\"${\" {",
          "1466:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1467:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1468: }",
          "1471: <ST_IN_SCRIPTING>\"}\" {",
          "1472:  RESET_DOC_COMMENT();",
          "1473:  if (!zend_stack_is_empty(&SCNG(state_stack))) {",
          "1474:   yy_pop_state(TSRMLS_C);",
          "1475:  }",
          "1476:  return '}';",
          "1477: }",
          "1480: <ST_LOOKING_FOR_VARNAME>{LABEL}[[}] {",
          "1481:  yyless(yyleng - 1);",
          "1482:  zend_copy_value(zendlval, yytext, yyleng);",
          "1483:  zendlval->type = IS_STRING;",
          "1484:  yy_pop_state(TSRMLS_C);",
          "1485:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1486:  return T_STRING_VARNAME;",
          "1487: }",
          "1490: <ST_LOOKING_FOR_VARNAME>{ANY_CHAR} {",
          "1491:  yyless(0);",
          "1492:  yy_pop_state(TSRMLS_C);",
          "1493:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1494:  goto restart;",
          "1495: }",
          "1497: <ST_IN_SCRIPTING>{BNUM} {",
          "1499:  int len = yyleng - 2;",
          "1502:  while (*bin == '0') {",
          "1503:   ++bin;",
          "1504:   --len;",
          "1505:  }",
          "1507:  if (len < SIZEOF_LONG * 8) {",
          "1508:   if (len == 0) {",
          "1509:    zendlval->value.lval = 0;",
          "1510:   } else {",
          "1511:    zendlval->value.lval = strtol(bin, NULL, 2);",
          "1512:   }",
          "1513:   zendlval->type = IS_LONG;",
          "1514:   return T_LNUMBER;",
          "1515:  } else {",
          "1516:   zendlval->value.dval = zend_bin_strtod(bin, NULL);",
          "1517:   zendlval->type = IS_DOUBLE;",
          "1518:   return T_DNUMBER;",
          "1519:  }",
          "1520: }",
          "1522: <ST_IN_SCRIPTING>{LNUM} {",
          "1524:   zendlval->value.lval = strtol(yytext, NULL, 0);",
          "1525:  } else {",
          "1526:   errno = 0;",
          "1527:   zendlval->value.lval = strtol(yytext, NULL, 0);",
          "1530:     zendlval->value.dval = zend_oct_strtod(yytext, NULL);",
          "1531:    } else {",
          "1532:     zendlval->value.dval = zend_strtod(yytext, NULL);",
          "1533:    }",
          "1534:    zendlval->type = IS_DOUBLE;",
          "1535:    return T_DNUMBER;",
          "1536:   }",
          "1537:  }",
          "1539:  zendlval->type = IS_LONG;",
          "1540:  return T_LNUMBER;",
          "1541: }",
          "1543: <ST_IN_SCRIPTING>{HNUM} {",
          "1545:  int len = yyleng - 2;",
          "1548:  while (*hex == '0') {",
          "1549:   hex++;",
          "1550:   len--;",
          "1551:  }",
          "1553:  if (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {",
          "1554:   if (len == 0) {",
          "1555:    zendlval->value.lval = 0;",
          "1556:   } else {",
          "1557:    zendlval->value.lval = strtol(hex, NULL, 16);",
          "1558:   }",
          "1559:   zendlval->type = IS_LONG;",
          "1560:   return T_LNUMBER;",
          "1561:  } else {",
          "1562:   zendlval->value.dval = zend_hex_strtod(hex, NULL);",
          "1563:   zendlval->type = IS_DOUBLE;",
          "1564:   return T_DNUMBER;",
          "1565:  }",
          "1566: }",
          "1569:  if (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {",
          "1570:   zendlval->value.lval = strtol(yytext, NULL, 10);",
          "1571:   zendlval->type = IS_LONG;",
          "1572:  } else {",
          "1573:   zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "1574:   zendlval->value.str.len = yyleng;",
          "1575:   zendlval->type = IS_STRING;",
          "1576:  }",
          "1577:  return T_NUM_STRING;",
          "1578: }",
          "1581:  zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "1582:  zendlval->value.str.len = yyleng;",
          "1583:  zendlval->type = IS_STRING;",
          "1584:  return T_NUM_STRING;",
          "1585: }",
          "1587: <ST_IN_SCRIPTING>{DNUM}|{EXPONENT_DNUM} {",
          "1588:  zendlval->value.dval = zend_strtod(yytext, NULL);",
          "1589:  zendlval->type = IS_DOUBLE;",
          "1590:  return T_DNUMBER;",
          "1591: }",
          "1593: <ST_IN_SCRIPTING>\"__CLASS__\" {",
          "1594:  const char *class_name = NULL;",
          "1596:  if (CG(active_class_entry)",
          "1597:   && (ZEND_ACC_TRAIT ==",
          "1598:    (CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {",
          "1601:   zendlval->value.str.len = sizeof(\"__CLASS__\")-1;",
          "1602:   zendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);",
          "1603:   zendlval->type = IS_CONSTANT;",
          "1604:  } else {",
          "1605:   if (CG(active_class_entry)) {",
          "1606:    class_name = CG(active_class_entry)->name;",
          "1607:   }",
          "1609:   if (!class_name) {",
          "1610:    class_name = \"\";",
          "1611:   }",
          "1613:   zendlval->value.str.len = strlen(class_name);",
          "1614:   zendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);",
          "1615:   zendlval->type = IS_STRING;",
          "1616:  }",
          "1617:  return T_CLASS_C;",
          "1618: }",
          "1620: <ST_IN_SCRIPTING>\"__TRAIT__\" {",
          "1621:  const char *trait_name = NULL;",
          "1623:  if (CG(active_class_entry)",
          "1624:   && (ZEND_ACC_TRAIT ==",
          "1625:    (CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {",
          "1626:   trait_name = CG(active_class_entry)->name;",
          "1627:  }",
          "1629:  if (!trait_name) {",
          "1630:   trait_name = \"\";",
          "1631:  }",
          "1633:  zendlval->value.str.len = strlen(trait_name);",
          "1634:  zendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);",
          "1635:  zendlval->type = IS_STRING;",
          "1637:  return T_TRAIT_C;",
          "1638: }",
          "1640: <ST_IN_SCRIPTING>\"__FUNCTION__\" {",
          "1641:  const char *func_name = NULL;",
          "1643:  if (CG(active_op_array)) {",
          "1644:   func_name = CG(active_op_array)->function_name;",
          "1645:  }",
          "1647:  if (!func_name) {",
          "1648:   func_name = \"\";",
          "1649:  }",
          "1650:  zendlval->value.str.len = strlen(func_name);",
          "1651:  zendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);",
          "1652:  zendlval->type = IS_STRING;",
          "1653:  return T_FUNC_C;",
          "1654: }",
          "1656: <ST_IN_SCRIPTING>\"__METHOD__\" {",
          "1657:  const char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;",
          "1658:  const char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;",
          "1659:  size_t len = 0;",
          "1661:  if (class_name) {",
          "1662:   len += strlen(class_name) + 2;",
          "1663:  }",
          "1664:  if (func_name) {",
          "1665:   len += strlen(func_name);",
          "1666:  }",
          "1668:  zendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",",
          "1669:   class_name ? class_name : \"\",",
          "1670:   class_name && func_name ? \"::\" : \"\",",
          "1671:   func_name ? func_name : \"\"",
          "1672:   );",
          "1673:  zendlval->type = IS_STRING;",
          "1674:  return T_METHOD_C;",
          "1675: }",
          "1677: <ST_IN_SCRIPTING>\"__LINE__\" {",
          "1678:  zendlval->value.lval = CG(zend_lineno);",
          "1679:  zendlval->type = IS_LONG;",
          "1680:  return T_LINE;",
          "1681: }",
          "1683: <ST_IN_SCRIPTING>\"__FILE__\" {",
          "1684:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "1686:  if (!filename) {",
          "1687:   filename = \"\";",
          "1688:  }",
          "1689:  zendlval->value.str.len = strlen(filename);",
          "1690:  zendlval->value.str.val = estrndup(filename, zendlval->value.str.len);",
          "1691:  zendlval->type = IS_STRING;",
          "1692:  return T_FILE;",
          "1693: }",
          "1695: <ST_IN_SCRIPTING>\"__DIR__\" {",
          "1696:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "1697:  const size_t filename_len = strlen(filename);",
          "1698:  char *dirname;",
          "1700:  if (!filename) {",
          "1701:   filename = \"\";",
          "1702:  }",
          "1704:  dirname = estrndup(filename, filename_len);",
          "1705:  zend_dirname(dirname, filename_len);",
          "1707:  if (strcmp(dirname, \".\") == 0) {",
          "1708:   dirname = erealloc(dirname, MAXPATHLEN);",
          "1709: #if HAVE_GETCWD",
          "1710:   VCWD_GETCWD(dirname, MAXPATHLEN);",
          "1711: #elif HAVE_GETWD",
          "1712:   VCWD_GETWD(dirname);",
          "1713: #endif",
          "1714:  }",
          "1716:  zendlval->value.str.len = strlen(dirname);",
          "1717:  zendlval->value.str.val = dirname;",
          "1718:  zendlval->type = IS_STRING;",
          "1719:  return T_DIR;",
          "1720: }",
          "1722: <ST_IN_SCRIPTING>\"__NAMESPACE__\" {",
          "1723:  if (CG(current_namespace)) {",
          "1725:   zval_copy_ctor(zendlval);",
          "1726:  } else {",
          "1727:   ZVAL_EMPTY_STRING(zendlval);",
          "1728:  }",
          "1729:  return T_NS_C;",
          "1730: }",
          "1732: <INITIAL>\"<script\"{WHITESPACE}+\"language\"{WHITESPACE}*\"=\"{WHITESPACE}*(\"php\"|\"\\\"php\\\"\"|\"'php'\"){WHITESPACE}*\">\" {",
          "1733:  YYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));",
          "1735:  if (bracket != SCNG(yy_text)) {",
          "1737:   YYCURSOR = bracket;",
          "1738:   goto inline_html;",
          "1739:  }",
          "1741:  HANDLE_NEWLINES(yytext, yyleng);",
          "1743:  zendlval->value.str.len = yyleng;",
          "1744:  zendlval->type = IS_STRING;",
          "1745:  BEGIN(ST_IN_SCRIPTING);",
          "1746:  return T_OPEN_TAG;",
          "1747: }",
          "1750: <INITIAL>\"<%=\" {",
          "1751:  if (CG(asp_tags)) {",
          "1753:   zendlval->value.str.len = yyleng;",
          "1754:   zendlval->type = IS_STRING;",
          "1755:   BEGIN(ST_IN_SCRIPTING);",
          "1756:   return T_OPEN_TAG_WITH_ECHO;",
          "1757:  } else {",
          "1758:   goto inline_char_handler;",
          "1759:  }",
          "1760: }",
          "1763: <INITIAL>\"<?=\" {",
          "1765:  zendlval->value.str.len = yyleng;",
          "1766:  zendlval->type = IS_STRING;",
          "1767:  BEGIN(ST_IN_SCRIPTING);",
          "1768:  return T_OPEN_TAG_WITH_ECHO;",
          "1769: }",
          "1772: <INITIAL>\"<%\" {",
          "1773:  if (CG(asp_tags)) {",
          "1775:   zendlval->value.str.len = yyleng;",
          "1776:   zendlval->type = IS_STRING;",
          "1777:   BEGIN(ST_IN_SCRIPTING);",
          "1778:   return T_OPEN_TAG;",
          "1779:  } else {",
          "1780:   goto inline_char_handler;",
          "1781:  }",
          "1782: }",
          "1785: <INITIAL>\"<?php\"([ \\t]|{NEWLINE}) {",
          "1787:  zendlval->value.str.len = yyleng;",
          "1788:  zendlval->type = IS_STRING;",
          "1789:  HANDLE_NEWLINE(yytext[yyleng-1]);",
          "1790:  BEGIN(ST_IN_SCRIPTING);",
          "1791:  return T_OPEN_TAG;",
          "1792: }",
          "1795: <INITIAL>\"<?\" {",
          "1796:  if (CG(short_tags)) {",
          "1798:   zendlval->value.str.len = yyleng;",
          "1799:   zendlval->type = IS_STRING;",
          "1800:   BEGIN(ST_IN_SCRIPTING);",
          "1801:   return T_OPEN_TAG;",
          "1802:  } else {",
          "1803:   goto inline_char_handler;",
          "1804:  }",
          "1805: }",
          "1807: <INITIAL>{ANY_CHAR} {",
          "1808:  if (YYCURSOR > YYLIMIT) {",
          "1809:   return 0;",
          "1810:  }",
          "1812: inline_char_handler:",
          "1814:  while (1) {",
          "1815:   YYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);",
          "1817:   YYCURSOR = ptr ? ptr + 1 : YYLIMIT;",
          "1819:   if (YYCURSOR < YYLIMIT) {",
          "1820:    switch (*YYCURSOR) {",
          "1821:     case '?':",
          "1823:       break;",
          "1824:      }",
          "1825:      continue;",
          "1826:     case '%':",
          "1827:      if (CG(asp_tags)) {",
          "1828:       break;",
          "1829:      }",
          "1830:      continue;",
          "1831:     case 's':",
          "1832:     case 'S':",
          "1835:      YYCURSOR--;",
          "1836:      yymore();",
          "1837:     default:",
          "1838:      continue;",
          "1839:    }",
          "1841:    YYCURSOR--;",
          "1842:   }",
          "1844:   break;",
          "1845:  }",
          "1847: inline_html:",
          "1848:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1850:  if (SCNG(output_filter)) {",
          "1851:   int readsize;",
          "1852:   size_t sz = 0;",
          "1853:   readsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);",
          "1854:   zendlval->value.str.len = sz;",
          "1855:   if (readsize < yyleng) {",
          "1856:    yyless(readsize);",
          "1857:   }",
          "1858:  } else {",
          "1859:    zendlval->value.str.val = (char *) estrndup(yytext, yyleng);",
          "1860:    zendlval->value.str.len = yyleng;",
          "1861:  }",
          "1862:  zendlval->type = IS_STRING;",
          "1863:  HANDLE_NEWLINES(yytext, yyleng);",
          "1864:  return T_INLINE_HTML;",
          "1865: }",
          "1871: <ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE>\"$\"{LABEL}\"->\"[a-zA-Z_\\x7f-\\xff] {",
          "1872:  yyless(yyleng - 3);",
          "1873:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "1874:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1875:  zendlval->type = IS_STRING;",
          "1876:  return T_VARIABLE;",
          "1877: }",
          "1881: <ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE>\"$\"{LABEL}\"[\" {",
          "1882:  yyless(yyleng - 1);",
          "1883:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "1884:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1885:  zendlval->type = IS_STRING;",
          "1886:  return T_VARIABLE;",
          "1887: }",
          "1889: <ST_IN_SCRIPTING,ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE,ST_VAR_OFFSET>\"$\"{LABEL} {",
          "1890:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1891:  zendlval->type = IS_STRING;",
          "1892:  return T_VARIABLE;",
          "1893: }",
          "1895: <ST_VAR_OFFSET>\"]\" {",
          "1896:  yy_pop_state(TSRMLS_C);",
          "1897:  return ']';",
          "1898: }",
          "1900: <ST_VAR_OFFSET>{TOKENS}|[{}\"`] {",
          "1902:  return yytext[0];",
          "1903: }",
          "1905: <ST_VAR_OFFSET>[ \\n\\r\\t\\\\'#] {",
          "1907:  yyless(0);",
          "1908:  yy_pop_state(TSRMLS_C);",
          "1909:  return T_ENCAPSED_AND_WHITESPACE;",
          "1910: }",
          "1912: <ST_IN_SCRIPTING,ST_VAR_OFFSET>{LABEL} {",
          "1913:  zend_copy_value(zendlval, yytext, yyleng);",
          "1914:  zendlval->type = IS_STRING;",
          "1915:  return T_STRING;",
          "1916: }",
          "1919: <ST_IN_SCRIPTING>\"#\"|\"//\" {",
          "1920:  while (YYCURSOR < YYLIMIT) {",
          "1921:   switch (*YYCURSOR++) {",
          "1922:    case '\\r':",
          "1923:     if (*YYCURSOR == '\\n') {",
          "1924:      YYCURSOR++;",
          "1925:     }",
          "1927:    case '\\n':",
          "1928:     CG(zend_lineno)++;",
          "1929:     break;",
          "1930:    case '%':",
          "1931:     if (!CG(asp_tags)) {",
          "1932:      continue;",
          "1933:     }",
          "1935:    case '?':",
          "1936:     if (*YYCURSOR == '>') {",
          "1937:      YYCURSOR--;",
          "1938:      break;",
          "1939:     }",
          "1941:    default:",
          "1942:     continue;",
          "1943:   }",
          "1945:   break;",
          "1946:  }",
          "1948:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1950:  return T_COMMENT;",
          "1951: }",
          "1953: <ST_IN_SCRIPTING>\"/*\"|\"/**\"{WHITESPACE} {",
          "1954:  int doc_com;",
          "1956:  if (yyleng > 2) {",
          "1957:   doc_com = 1;",
          "1958:   RESET_DOC_COMMENT();",
          "1959:  } else {",
          "1960:   doc_com = 0;",
          "1961:  }",
          "1963:  while (YYCURSOR < YYLIMIT) {",
          "1964:   if (*YYCURSOR++ == '*' && *YYCURSOR == '/') {",
          "1965:    break;",
          "1966:   }",
          "1967:  }",
          "1969:  if (YYCURSOR < YYLIMIT) {",
          "1970:   YYCURSOR++;",
          "1971:  } else {",
          "1972:   zend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));",
          "1973:  }",
          "1975:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1976:  HANDLE_NEWLINES(yytext, yyleng);",
          "1978:  if (doc_com) {",
          "1979:   CG(doc_comment) = estrndup(yytext, yyleng);",
          "1980:   CG(doc_comment_len) = yyleng;",
          "1981:   return T_DOC_COMMENT;",
          "1982:  }",
          "1984:  return T_COMMENT;",
          "1985: }",
          "1987: <ST_IN_SCRIPTING>(\"?>\"|\"</script\"{WHITESPACE}*\">\"){NEWLINE}? {",
          "1989:  zendlval->value.str.len = yyleng;",
          "1990:  zendlval->type = IS_STRING;",
          "1991:  BEGIN(INITIAL);",
          "1993: }",
          "1996: <ST_IN_SCRIPTING>\"%>\"{NEWLINE}? {",
          "1997:  if (CG(asp_tags)) {",
          "1998:   BEGIN(INITIAL);",
          "1999:   zendlval->value.str.len = yyleng;",
          "2000:   zendlval->type = IS_STRING;",
          "2003:  } else {",
          "2004:   yyless(1);",
          "2005:   return yytext[0];",
          "2006:  }",
          "2007: }",
          "2010: <ST_IN_SCRIPTING>b?['] {",
          "2011:  register char *s, *t;",
          "2012:  char *end;",
          "2013:  int bprefix = (yytext[0] != '\\'') ? 1 : 0;",
          "2015:  while (1) {",
          "2016:   if (YYCURSOR < YYLIMIT) {",
          "2017:    if (*YYCURSOR == '\\'') {",
          "2018:     YYCURSOR++;",
          "2019:     yyleng = YYCURSOR - SCNG(yy_text);",
          "2021:     break;",
          "2022:    } else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {",
          "2023:     YYCURSOR++;",
          "2024:    }",
          "2025:   } else {",
          "2026:    yyleng = YYLIMIT - SCNG(yy_text);",
          "2031:    return T_ENCAPSED_AND_WHITESPACE;",
          "2032:   }",
          "2033:  }",
          "2035:  zendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);",
          "2036:  zendlval->value.str.len = yyleng-bprefix-2;",
          "2037:  zendlval->type = IS_STRING;",
          "2040:  s = t = zendlval->value.str.val;",
          "2041:  end = s+zendlval->value.str.len;",
          "2042:  while (s<end) {",
          "2043:   if (*s=='\\\\') {",
          "2044:    s++;",
          "2046:    switch(*s) {",
          "2047:     case '\\\\':",
          "2048:     case '\\'':",
          "2050:      zendlval->value.str.len--;",
          "2051:      break;",
          "2052:     default:",
          "2055:      break;",
          "2056:    }",
          "2057:   } else {",
          "2059:   }",
          "2061:   if (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {",
          "2062:    CG(zend_lineno)++;",
          "2063:   }",
          "2064:   s++;",
          "2065:  }",
          "2068:  if (SCNG(output_filter)) {",
          "2069:   size_t sz = 0;",
          "2070:   s = zendlval->value.str.val;",
          "2071:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);",
          "2072:   zendlval->value.str.len = sz;",
          "2073:   efree(s);",
          "2074:  }",
          "2075:  return T_CONSTANT_ENCAPSED_STRING;",
          "2076: }",
          "2079: <ST_IN_SCRIPTING>b?[\"] {",
          "2080:  int bprefix = (yytext[0] != '\"') ? 1 : 0;",
          "2082:  while (YYCURSOR < YYLIMIT) {",
          "2083:   switch (*YYCURSOR++) {",
          "2084:    case '\"':",
          "2085:     yyleng = YYCURSOR - SCNG(yy_text);",
          "2086:     zend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);",
          "2087:     return T_CONSTANT_ENCAPSED_STRING;",
          "2088:    case '$':",
          "2089:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "2090:      break;",
          "2091:     }",
          "2092:     continue;",
          "2093:    case '{':",
          "2094:     if (*YYCURSOR == '$') {",
          "2095:      break;",
          "2096:     }",
          "2097:     continue;",
          "2098:    case '\\\\':",
          "2099:     if (YYCURSOR < YYLIMIT) {",
          "2100:      YYCURSOR++;",
          "2101:     }",
          "2103:    default:",
          "2104:     continue;",
          "2105:   }",
          "2107:   YYCURSOR--;",
          "2108:   break;",
          "2109:  }",
          "2112:  SET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);",
          "2114:  YYCURSOR = SCNG(yy_text) + yyleng;",
          "2116:  BEGIN(ST_DOUBLE_QUOTES);",
          "2117:  return '\"';",
          "2118: }",
          "2121: <ST_IN_SCRIPTING>b?\"<<<\"{TABS_AND_SPACES}({LABEL}|([']{LABEL}['])|([\"]{LABEL}[\"])){NEWLINE} {",
          "2122:  char *s;",
          "2123:  int bprefix = (yytext[0] != '<') ? 1 : 0;",
          "2124:  zend_heredoc_label *heredoc_label = emalloc(sizeof(zend_heredoc_label));",
          "2126:  CG(zend_lineno)++;",
          "2127:  heredoc_label->length = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);",
          "2128:  s = yytext+bprefix+3;",
          "2129:  while ((*s == ' ') || (*s == '\\t')) {",
          "2130:   s++;",
          "2131:   heredoc_label->length--;",
          "2132:  }",
          "2134:  if (*s == '\\'') {",
          "2135:   s++;",
          "2136:   heredoc_label->length -= 2;",
          "2138:   BEGIN(ST_NOWDOC);",
          "2139:  } else {",
          "2140:   if (*s == '\"') {",
          "2141:    s++;",
          "2142:    heredoc_label->length -= 2;",
          "2143:   }",
          "2145:   BEGIN(ST_HEREDOC);",
          "2146:  }",
          "2148:  heredoc_label->label = estrndup(s, heredoc_label->length);",
          "2151:  if (heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, heredoc_label->length)) {",
          "2152:   YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "2154:   if (*end == ';') {",
          "2155:    end++;",
          "2156:   }",
          "2158:   if (*end == '\\n' || *end == '\\r') {",
          "2159:    BEGIN(ST_END_HEREDOC);",
          "2160:   }",
          "2161:  }",
          "2163:  zend_ptr_stack_push(&SCNG(heredoc_label_stack), (void *) heredoc_label);",
          "2165:  return T_START_HEREDOC;",
          "2166: }",
          "2169: <ST_IN_SCRIPTING>[`] {",
          "2170:  BEGIN(ST_BACKQUOTE);",
          "2171:  return '`';",
          "2172: }",
          "2175: <ST_END_HEREDOC>{ANY_CHAR} {",
          "2176:  zend_heredoc_label *heredoc_label = zend_ptr_stack_pop(&SCNG(heredoc_label_stack));",
          "2178:  YYCURSOR += heredoc_label->length - 1;",
          "2179:  yyleng = heredoc_label->length;",
          "2181:  heredoc_label_dtor(heredoc_label);",
          "2182:  efree(heredoc_label);",
          "2184:  BEGIN(ST_IN_SCRIPTING);",
          "2185:  return T_END_HEREDOC;",
          "2186: }",
          "2189: <ST_DOUBLE_QUOTES,ST_BACKQUOTE,ST_HEREDOC>\"{$\" {",
          "2190:  zendlval->value.lval = (long) '{';",
          "2191:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2192:  yyless(1);",
          "2193:  return T_CURLY_OPEN;",
          "2194: }",
          "2197: <ST_DOUBLE_QUOTES>[\"] {",
          "2198:  BEGIN(ST_IN_SCRIPTING);",
          "2199:  return '\"';",
          "2200: }",
          "2202: <ST_BACKQUOTE>[`] {",
          "2203:  BEGIN(ST_IN_SCRIPTING);",
          "2204:  return '`';",
          "2205: }",
          "2208: <ST_DOUBLE_QUOTES>{ANY_CHAR} {",
          "2209:  if (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {",
          "2210:   YYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;",
          "2211:   SET_DOUBLE_QUOTES_SCANNED_LENGTH(0);",
          "2213:   goto double_quotes_scan_done;",
          "2214:  }",
          "2216:  if (YYCURSOR > YYLIMIT) {",
          "2217:   return 0;",
          "2218:  }",
          "2219:  if (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {",
          "2220:   YYCURSOR++;",
          "2221:  }",
          "2223:  while (YYCURSOR < YYLIMIT) {",
          "2224:   switch (*YYCURSOR++) {",
          "2225:    case '\"':",
          "2226:     break;",
          "2227:    case '$':",
          "2228:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "2229:      break;",
          "2230:     }",
          "2231:     continue;",
          "2232:    case '{':",
          "2233:     if (*YYCURSOR == '$') {",
          "2234:      break;",
          "2235:     }",
          "2236:     continue;",
          "2237:    case '\\\\':",
          "2238:     if (YYCURSOR < YYLIMIT) {",
          "2239:      YYCURSOR++;",
          "2240:     }",
          "2242:    default:",
          "2243:     continue;",
          "2244:   }",
          "2246:   YYCURSOR--;",
          "2247:   break;",
          "2248:  }",
          "2250: double_quotes_scan_done:",
          "2251:  yyleng = YYCURSOR - SCNG(yy_text);",
          "2253:  zend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);",
          "2254:  return T_ENCAPSED_AND_WHITESPACE;",
          "2255: }",
          "2258: <ST_BACKQUOTE>{ANY_CHAR} {",
          "2259:  if (YYCURSOR > YYLIMIT) {",
          "2260:   return 0;",
          "2261:  }",
          "2262:  if (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {",
          "2263:   YYCURSOR++;",
          "2264:  }",
          "2266:  while (YYCURSOR < YYLIMIT) {",
          "2267:   switch (*YYCURSOR++) {",
          "2268:    case '`':",
          "2269:     break;",
          "2270:    case '$':",
          "2271:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "2272:      break;",
          "2273:     }",
          "2274:     continue;",
          "2275:    case '{':",
          "2276:     if (*YYCURSOR == '$') {",
          "2277:      break;",
          "2278:     }",
          "2279:     continue;",
          "2280:    case '\\\\':",
          "2281:     if (YYCURSOR < YYLIMIT) {",
          "2282:      YYCURSOR++;",
          "2283:     }",
          "2285:    default:",
          "2286:     continue;",
          "2287:   }",
          "2289:   YYCURSOR--;",
          "2290:   break;",
          "2291:  }",
          "2293:  yyleng = YYCURSOR - SCNG(yy_text);",
          "2295:  zend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);",
          "2296:  return T_ENCAPSED_AND_WHITESPACE;",
          "2297: }",
          "2300: <ST_HEREDOC>{ANY_CHAR} {",
          "2301:  int newline = 0;",
          "2303:  zend_heredoc_label *heredoc_label = zend_ptr_stack_top(&SCNG(heredoc_label_stack));",
          "2305:  if (YYCURSOR > YYLIMIT) {",
          "2306:   return 0;",
          "2307:  }",
          "2309:  YYCURSOR--;",
          "2311:  while (YYCURSOR < YYLIMIT) {",
          "2312:   switch (*YYCURSOR++) {",
          "2313:    case '\\r':",
          "2314:     if (*YYCURSOR == '\\n') {",
          "2315:      YYCURSOR++;",
          "2316:     }",
          "2318:    case '\\n':",
          "2320:     if (IS_LABEL_START(*YYCURSOR) && heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, heredoc_label->label, heredoc_label->length)) {",
          "2321:      YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "2323:      if (*end == ';') {",
          "2324:       end++;",
          "2325:      }",
          "2327:      if (*end == '\\n' || *end == '\\r') {",
          "2330:       if (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {",
          "2332:       } else {",
          "2333:        newline = 1;",
          "2334:       }",
          "2337:       BEGIN(ST_END_HEREDOC);",
          "2339:       goto heredoc_scan_done;",
          "2340:      }",
          "2341:     }",
          "2342:     continue;",
          "2343:    case '$':",
          "2344:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "2345:      break;",
          "2346:     }",
          "2347:     continue;",
          "2348:    case '{':",
          "2349:     if (*YYCURSOR == '$') {",
          "2350:      break;",
          "2351:     }",
          "2352:     continue;",
          "2353:    case '\\\\':",
          "2354:     if (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {",
          "2355:      YYCURSOR++;",
          "2356:     }",
          "2358:    default:",
          "2359:     continue;",
          "2360:   }",
          "2362:   YYCURSOR--;",
          "2363:   break;",
          "2364:  }",
          "2366: heredoc_scan_done:",
          "2367:  yyleng = YYCURSOR - SCNG(yy_text);",
          "2369:  zend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);",
          "2370:  return T_ENCAPSED_AND_WHITESPACE;",
          "2371: }",
          "2374: <ST_NOWDOC>{ANY_CHAR} {",
          "2375:  int newline = 0;",
          "2377:  zend_heredoc_label *heredoc_label = zend_ptr_stack_top(&SCNG(heredoc_label_stack));",
          "2379:  if (YYCURSOR > YYLIMIT) {",
          "2380:   return 0;",
          "2381:  }",
          "2383:  YYCURSOR--;",
          "2385:  while (YYCURSOR < YYLIMIT) {",
          "2386:   switch (*YYCURSOR++) {",
          "2387:    case '\\r':",
          "2388:     if (*YYCURSOR == '\\n') {",
          "2389:      YYCURSOR++;",
          "2390:     }",
          "2392:    case '\\n':",
          "2394:     if (IS_LABEL_START(*YYCURSOR) && heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, heredoc_label->label, heredoc_label->length)) {",
          "2395:      YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "2397:      if (*end == ';') {",
          "2398:       end++;",
          "2399:      }",
          "2401:      if (*end == '\\n' || *end == '\\r') {",
          "2404:       if (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {",
          "2406:       } else {",
          "2407:        newline = 1;",
          "2408:       }",
          "2411:       BEGIN(ST_END_HEREDOC);",
          "2413:       goto nowdoc_scan_done;",
          "2414:      }",
          "2415:     }",
          "2417:    default:",
          "2418:     continue;",
          "2419:   }",
          "2420:  }",
          "2422: nowdoc_scan_done:",
          "2423:  yyleng = YYCURSOR - SCNG(yy_text);",
          "2425:  zend_copy_value(zendlval, yytext, yyleng - newline);",
          "2426:  zendlval->type = IS_STRING;",
          "2427:  HANDLE_NEWLINES(yytext, yyleng - newline);",
          "2428:  return T_ENCAPSED_AND_WHITESPACE;",
          "2429: }",
          "2432: <ST_IN_SCRIPTING,ST_VAR_OFFSET>{ANY_CHAR} {",
          "2433:  if (YYCURSOR > YYLIMIT) {",
          "2434:   return 0;",
          "2435:  }",
          "2437:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "2438:  goto restart;",
          "2439: }",
          "2442: }",
          "",
          "[Added Lines]",
          "2:    +----------------------------------------------------------------------+",
          "3:    | Zend Engine                                                          |",
          "4:    +----------------------------------------------------------------------+",
          "5:    | Copyright (c) 1998-2013 Zend Technologies Ltd. (http://www.zend.com) |",
          "6:    +----------------------------------------------------------------------+",
          "7:    | This source file is subject to version 2.00 of the Zend license,     |",
          "8:    | that is bundled with this package in the file LICENSE, and is        |",
          "9:    | available through the world-wide-web at the following url:           |",
          "10:    | http://www.zend.com/license/2_00.txt.                                |",
          "11:    | If you did not receive a copy of the Zend license and are unable to  |",
          "12:    | obtain it through the world-wide-web, please send a note to          |",
          "13:    | license@zend.com so we can mail you a copy immediately.              |",
          "14:    +----------------------------------------------------------------------+",
          "15:    | Authors: Marcus Boerger <helly@php.net>                              |",
          "16:    |          Nuno Lopes <nlopess@php.net>                                |",
          "17:    |          Scott MacVicar <scottmac@php.net>                           |",
          "18:    | Flex version authors:                                                |",
          "19:    |          Andi Gutmans <andi@zend.com>                                |",
          "20:    |          Zeev Suraski <zeev@zend.com>                                |",
          "21:    +----------------------------------------------------------------------+",
          "26: #if 0",
          "27: # define YYDEBUG(s, c) printf(\"state: %d char: %c\\n\", s, c)",
          "28: #else",
          "29: # define YYDEBUG(s, c)",
          "30: #endif",
          "32: #include \"zend_language_scanner_defs.h\"",
          "34: #include <errno.h>",
          "35: #include \"zend.h\"",
          "36: #ifdef PHP_WIN32",
          "37: # include <Winuser.h>",
          "38: #endif",
          "39: #include \"zend_alloc.h\"",
          "40: #include <zend_language_parser.h>",
          "41: #include \"zend_compile.h\"",
          "42: #include \"zend_language_scanner.h\"",
          "43: #include \"zend_highlight.h\"",
          "44: #include \"zend_constants.h\"",
          "45: #include \"zend_variables.h\"",
          "46: #include \"zend_operators.h\"",
          "47: #include \"zend_API.h\"",
          "48: #include \"zend_strtod.h\"",
          "49: #include \"zend_exceptions.h\"",
          "50: #include \"tsrm_virtual_cwd.h\"",
          "51: #include \"tsrm_config_common.h\"",
          "53: #define YYCTYPE   unsigned char",
          "54: #define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + ZEND_MMAP_AHEAD)) { return 0; } }",
          "55: #define YYCURSOR  SCNG(yy_cursor)",
          "56: #define YYLIMIT   SCNG(yy_limit)",
          "57: #define YYMARKER  SCNG(yy_marker)",
          "59: #define YYGETCONDITION()  SCNG(yy_state)",
          "60: #define YYSETCONDITION(s) SCNG(yy_state) = s",
          "62: #define STATE(name)  yyc##name",
          "65: #define BEGIN(state) YYSETCONDITION(STATE(state))",
          "66: #define YYSTATE      YYGETCONDITION()",
          "67: #define yytext       ((char*)SCNG(yy_text))",
          "68: #define yyleng       SCNG(yy_leng)",
          "69: #define yyless(x)    do { YYCURSOR = (unsigned char*)yytext + x; \\",
          "70:                           yyleng   = (unsigned int)x; } while(0)",
          "71: #define yymore()     goto yymore_restart",
          "76: #if ZEND_MMAP_AHEAD < YYMAXFILL",
          "77: # error ZEND_MMAP_AHEAD should be greater than or equal to YYMAXFILL",
          "78: #endif",
          "80: #ifdef HAVE_STDARG_H",
          "81: # include <stdarg.h>",
          "82: #endif",
          "84: #ifdef HAVE_UNISTD_H",
          "85: # include <unistd.h>",
          "86: #endif",
          "89: #define SCNG LANG_SCNG",
          "90: #ifdef ZTS",
          "91: ZEND_API ts_rsrc_id language_scanner_globals_id;",
          "92: #else",
          "93: ZEND_API zend_php_scanner_globals language_scanner_globals;",
          "94: #endif",
          "96: #define HANDLE_NEWLINES(s, l)             \\",
          "97: do {                   \\",
          "98:  char *p = (s), *boundary = p+(l);           \\",
          "99:                     \\",
          "100:  while (p<boundary) {              \\",
          "101:   if (*p == '\\n' || (*p == '\\r' && (*(p+1) != '\\n'))) {     \\",
          "102:    CG(zend_lineno)++;             \\",
          "103:   }                  \\",
          "104:   p++;                 \\",
          "105:  }                   \\",
          "106: } while (0)",
          "108: #define HANDLE_NEWLINE(c) \\",
          "109: { \\",
          "110:  if (c == '\\n' || c == '\\r') { \\",
          "111:   CG(zend_lineno)++; \\",
          "112:  } \\",
          "113: }",
          "116: #define SET_DOUBLE_QUOTES_SCANNED_LENGTH(len) CG(doc_comment_len) = (len)",
          "117: #define GET_DOUBLE_QUOTES_SCANNED_LENGTH()    CG(doc_comment_len)",
          "119: #define IS_LABEL_START(c) (((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z') || (c) == '_' || (c) >= 0x7F)",
          "121: #define ZEND_IS_OCT(c)  ((c)>='0' && (c)<='7')",
          "122: #define ZEND_IS_HEX(c)  (((c)>='0' && (c)<='9') || ((c)>='a' && (c)<='f') || ((c)>='A' && (c)<='F'))",
          "124: BEGIN_EXTERN_C()",
          "126: static size_t encoding_filter_script_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "127: {",
          "128:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "129:  assert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));",
          "130:  return zend_multibyte_encoding_converter(to, to_length, from, from_length, internal_encoding, LANG_SCNG(script_encoding) TSRMLS_CC);",
          "131: }",
          "133: static size_t encoding_filter_script_to_intermediate(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "134: {",
          "135:  return zend_multibyte_encoding_converter(to, to_length, from, from_length, zend_multibyte_encoding_utf8, LANG_SCNG(script_encoding) TSRMLS_CC);",
          "136: }",
          "138: static size_t encoding_filter_intermediate_to_script(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "139: {",
          "140:  return zend_multibyte_encoding_converter(to, to_length, from, from_length,",
          "141: LANG_SCNG(script_encoding), zend_multibyte_encoding_utf8 TSRMLS_CC);",
          "142: }",
          "144: static size_t encoding_filter_intermediate_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "145: {",
          "146:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "147:  assert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));",
          "148:  return zend_multibyte_encoding_converter(to, to_length, from, from_length,",
          "149: internal_encoding, zend_multibyte_encoding_utf8 TSRMLS_CC);",
          "150: }",
          "153: static void _yy_push_state(int new_state TSRMLS_DC)",
          "154: {",
          "155:  zend_stack_push(&SCNG(state_stack), (void *) &YYGETCONDITION(), sizeof(int));",
          "156:  YYSETCONDITION(new_state);",
          "157: }",
          "159: #define yy_push_state(state_and_tsrm) _yy_push_state(yyc##state_and_tsrm)",
          "161: static void yy_pop_state(TSRMLS_D)",
          "162: {",
          "163:  int *stack_state;",
          "164:  zend_stack_top(&SCNG(state_stack), (void **) &stack_state);",
          "165:  YYSETCONDITION(*stack_state);",
          "166:  zend_stack_del_top(&SCNG(state_stack));",
          "167: }",
          "169: static void yy_scan_buffer(char *str, unsigned int len TSRMLS_DC)",
          "170: {",
          "171:  YYCURSOR       = (YYCTYPE*)str;",
          "172:  YYLIMIT        = YYCURSOR + len;",
          "173:  if (!SCNG(yy_start)) {",
          "174:   SCNG(yy_start) = YYCURSOR;",
          "175:  }",
          "176: }",
          "178: void startup_scanner(TSRMLS_D)",
          "179: {",
          "180:  CG(parse_error) = 0;",
          "181:  CG(doc_comment) = NULL;",
          "182:  CG(doc_comment_len) = 0;",
          "183:  zend_stack_init(&SCNG(state_stack));",
          "184:  zend_ptr_stack_init(&SCNG(heredoc_label_stack));",
          "185: }",
          "187: static void heredoc_label_dtor(zend_heredoc_label *heredoc_label) {",
          "188:     efree(heredoc_label->label);",
          "189: }",
          "191: void shutdown_scanner(TSRMLS_D)",
          "192: {",
          "193:  CG(parse_error) = 0;",
          "194:  RESET_DOC_COMMENT();",
          "195:  zend_stack_destroy(&SCNG(state_stack));",
          "196:  zend_ptr_stack_clean(&SCNG(heredoc_label_stack), (void (*)(void *)) &heredoc_label_dtor, 1);",
          "197:  zend_ptr_stack_destroy(&SCNG(heredoc_label_stack));",
          "198: }",
          "200: ZEND_API void zend_save_lexical_state(zend_lex_state *lex_state TSRMLS_DC)",
          "201: {",
          "202:  lex_state->yy_leng   = SCNG(yy_leng);",
          "203:  lex_state->yy_start  = SCNG(yy_start);",
          "204:  lex_state->yy_text   = SCNG(yy_text);",
          "205:  lex_state->yy_cursor = SCNG(yy_cursor);",
          "206:  lex_state->yy_marker = SCNG(yy_marker);",
          "207:  lex_state->yy_limit  = SCNG(yy_limit);",
          "209:  lex_state->state_stack = SCNG(state_stack);",
          "210:  zend_stack_init(&SCNG(state_stack));",
          "212:  lex_state->heredoc_label_stack = SCNG(heredoc_label_stack);",
          "213:  zend_ptr_stack_init(&SCNG(heredoc_label_stack));",
          "215:  lex_state->in = SCNG(yy_in);",
          "216:  lex_state->yy_state = YYSTATE;",
          "217:  lex_state->filename = zend_get_compiled_filename(TSRMLS_C);",
          "218:  lex_state->lineno = CG(zend_lineno);",
          "220:  lex_state->script_org = SCNG(script_org);",
          "221:  lex_state->script_org_size = SCNG(script_org_size);",
          "222:  lex_state->script_filtered = SCNG(script_filtered);",
          "223:  lex_state->script_filtered_size = SCNG(script_filtered_size);",
          "224:  lex_state->input_filter = SCNG(input_filter);",
          "225:  lex_state->output_filter = SCNG(output_filter);",
          "226:  lex_state->script_encoding = SCNG(script_encoding);",
          "227: }",
          "229: ZEND_API void zend_restore_lexical_state(zend_lex_state *lex_state TSRMLS_DC)",
          "230: {",
          "231:  SCNG(yy_leng)   = lex_state->yy_leng;",
          "232:  SCNG(yy_start)  = lex_state->yy_start;",
          "233:  SCNG(yy_text)   = lex_state->yy_text;",
          "234:  SCNG(yy_cursor) = lex_state->yy_cursor;",
          "235:  SCNG(yy_marker) = lex_state->yy_marker;",
          "236:  SCNG(yy_limit)  = lex_state->yy_limit;",
          "238:  zend_stack_destroy(&SCNG(state_stack));",
          "239:  SCNG(state_stack) = lex_state->state_stack;",
          "241:  zend_ptr_stack_clean(&SCNG(heredoc_label_stack), (void (*)(void *)) &heredoc_label_dtor, 1);",
          "242:  zend_ptr_stack_destroy(&SCNG(heredoc_label_stack));",
          "243:  SCNG(heredoc_label_stack) = lex_state->heredoc_label_stack;",
          "245:  SCNG(yy_in) = lex_state->in;",
          "246:  YYSETCONDITION(lex_state->yy_state);",
          "247:  CG(zend_lineno) = lex_state->lineno;",
          "248:  zend_restore_compiled_filename(lex_state->filename TSRMLS_CC);",
          "250:  if (SCNG(script_filtered)) {",
          "251:   efree(SCNG(script_filtered));",
          "252:   SCNG(script_filtered) = NULL;",
          "253:  }",
          "254:  SCNG(script_org) = lex_state->script_org;",
          "255:  SCNG(script_org_size) = lex_state->script_org_size;",
          "256:  SCNG(script_filtered) = lex_state->script_filtered;",
          "257:  SCNG(script_filtered_size) = lex_state->script_filtered_size;",
          "258:  SCNG(input_filter) = lex_state->input_filter;",
          "259:  SCNG(output_filter) = lex_state->output_filter;",
          "260:  SCNG(script_encoding) = lex_state->script_encoding;",
          "262:  RESET_DOC_COMMENT();",
          "263: }",
          "265: ZEND_API void zend_destroy_file_handle(zend_file_handle *file_handle TSRMLS_DC)",
          "266: {",
          "267:  zend_llist_del_element(&CG(open_files), file_handle, (int (*)(void *, void *)) zend_compare_file_handles);",
          "269:  file_handle->opened_path = NULL;",
          "270:  if (file_handle->free_filename) {",
          "271:   file_handle->filename = NULL;",
          "272:  }",
          "273: }",
          "275: #define BOM_UTF32_BE \"\\x00\\x00\\xfe\\xff\"",
          "276: #define BOM_UTF32_LE \"\\xff\\xfe\\x00\\x00\"",
          "277: #define BOM_UTF16_BE \"\\xfe\\xff\"",
          "278: #define BOM_UTF16_LE \"\\xff\\xfe\"",
          "279: #define BOM_UTF8  \"\\xef\\xbb\\xbf\"",
          "281: static const zend_encoding *zend_multibyte_detect_utf_encoding(const unsigned char *script, size_t script_size TSRMLS_DC)",
          "282: {",
          "283:  const unsigned char *p;",
          "284:  int wchar_size = 2;",
          "285:  int le = 0;",
          "288:  p = script;",
          "289:  while ((p-script) < script_size) {",
          "290:   p = memchr(p, 0, script_size-(p-script)-2);",
          "291:   if (!p) {",
          "292:    break;",
          "293:   }",
          "294:   if (*(p+1) == '\\0' && *(p+2) == '\\0') {",
          "295:    wchar_size = 4;",
          "296:    break;",
          "297:   }",
          "300:   p += 4;",
          "301:  }",
          "304:  p = script;",
          "305:  while ((p-script) < script_size) {",
          "306:   if (*p == '\\0' && *(p+wchar_size-1) != '\\0') {",
          "308:    le = 0;",
          "309:    break;",
          "310:   } else if (*p != '\\0' && *(p+wchar_size-1) == '\\0') {",
          "312:    le = 1;",
          "313:    break;",
          "314:   }",
          "315:   p += wchar_size;",
          "316:  }",
          "318:  if (wchar_size == 2) {",
          "319:   return le ? zend_multibyte_encoding_utf16le : zend_multibyte_encoding_utf16be;",
          "320:  } else {",
          "321:   return le ? zend_multibyte_encoding_utf32le : zend_multibyte_encoding_utf32be;",
          "322:  }",
          "324:  return NULL;",
          "325: }",
          "327: static const zend_encoding* zend_multibyte_detect_unicode(TSRMLS_D)",
          "328: {",
          "329:  const zend_encoding *script_encoding = NULL;",
          "330:  int bom_size;",
          "331:  unsigned char *pos1, *pos2;",
          "333:  if (LANG_SCNG(script_org_size) < sizeof(BOM_UTF32_LE)-1) {",
          "334:   return NULL;",
          "335:  }",
          "338:  if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_BE, sizeof(BOM_UTF32_BE)-1)) {",
          "339:   script_encoding = zend_multibyte_encoding_utf32be;",
          "340:   bom_size = sizeof(BOM_UTF32_BE)-1;",
          "341:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_LE, sizeof(BOM_UTF32_LE)-1)) {",
          "342:   script_encoding = zend_multibyte_encoding_utf32le;",
          "343:   bom_size = sizeof(BOM_UTF32_LE)-1;",
          "344:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_BE, sizeof(BOM_UTF16_BE)-1)) {",
          "345:   script_encoding = zend_multibyte_encoding_utf16be;",
          "346:   bom_size = sizeof(BOM_UTF16_BE)-1;",
          "347:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_LE, sizeof(BOM_UTF16_LE)-1)) {",
          "348:   script_encoding = zend_multibyte_encoding_utf16le;",
          "349:   bom_size = sizeof(BOM_UTF16_LE)-1;",
          "350:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF8, sizeof(BOM_UTF8)-1)) {",
          "351:   script_encoding = zend_multibyte_encoding_utf8;",
          "352:   bom_size = sizeof(BOM_UTF8)-1;",
          "353:  }",
          "355:  if (script_encoding) {",
          "357:   LANG_SCNG(script_org) += bom_size;",
          "358:   LANG_SCNG(script_org_size) -= bom_size;",
          "360:   return script_encoding;",
          "361:  }",
          "364:  if ((pos1 = memchr(LANG_SCNG(script_org), 0, LANG_SCNG(script_org_size)))) {",
          "366:   pos2 = LANG_SCNG(script_org);",
          "368:   while (pos1 - pos2 >= sizeof(\"__HALT_COMPILER();\")-1) {",
          "369:    pos2 = memchr(pos2, '_', pos1 - pos2);",
          "370:    if (!pos2) break;",
          "371:    pos2++;",
          "372:    if (strncasecmp((char*)pos2, \"_HALT_COMPILER\", sizeof(\"_HALT_COMPILER\")-1) == 0) {",
          "373:     pos2 += sizeof(\"_HALT_COMPILER\")-1;",
          "374:     while (*pos2 == ' '  ||",
          "378:      pos2++;",
          "379:     }",
          "380:     if (*pos2 == '(') {",
          "381:      pos2++;",
          "382:      while (*pos2 == ' '  ||",
          "386:       pos2++;",
          "387:      }",
          "388:      if (*pos2 == ')') {",
          "389:       pos2++;",
          "390:       while (*pos2 == ' '  ||",
          "394:        pos2++;",
          "395:       }",
          "396:       if (*pos2 == ';') {",
          "397:        return NULL;",
          "398:       }",
          "399:      }",
          "400:     }",
          "401:    }",
          "402:   }",
          "404:   return zend_multibyte_detect_utf_encoding(LANG_SCNG(script_org), LANG_SCNG(script_org_size) TSRMLS_CC);",
          "405:  }",
          "407:  return NULL;",
          "408: }",
          "410: static const zend_encoding* zend_multibyte_find_script_encoding(TSRMLS_D)",
          "411: {",
          "412:  const zend_encoding *script_encoding;",
          "414:  if (CG(detect_unicode)) {",
          "416:   script_encoding = zend_multibyte_detect_unicode(TSRMLS_C);",
          "417:   if (script_encoding != NULL) {",
          "419:    return script_encoding;",
          "420:   }",
          "421:  }",
          "424:  if (!CG(script_encoding_list) || !CG(script_encoding_list_size)) {",
          "425:   return NULL;",
          "426:  }",
          "429:  if (CG(script_encoding_list_size) > 1) {",
          "430:   return zend_multibyte_encoding_detector(LANG_SCNG(script_org), LANG_SCNG(script_org_size), CG(script_encoding_list), CG(script_encoding_list_size) TSRMLS_CC);",
          "431:  }",
          "433:  return CG(script_encoding_list)[0];",
          "434: }",
          "436: ZEND_API int zend_multibyte_set_filter(const zend_encoding *onetime_encoding TSRMLS_DC)",
          "437: {",
          "438:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "439:  const zend_encoding *script_encoding = onetime_encoding ? onetime_encoding: zend_multibyte_find_script_encoding(TSRMLS_C);",
          "441:  if (!script_encoding) {",
          "442:   return FAILURE;",
          "443:  }",
          "446:  LANG_SCNG(script_encoding) = script_encoding;",
          "447:  LANG_SCNG(input_filter) = NULL;",
          "448:  LANG_SCNG(output_filter) = NULL;",
          "450:  if (!internal_encoding || LANG_SCNG(script_encoding) == internal_encoding) {",
          "451:   if (!zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {",
          "453:    LANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;",
          "454:    LANG_SCNG(output_filter) = encoding_filter_intermediate_to_script;",
          "455:   } else {",
          "456:    LANG_SCNG(input_filter) = NULL;",
          "457:    LANG_SCNG(output_filter) = NULL;",
          "458:   }",
          "459:   return SUCCESS;",
          "460:  }",
          "462:  if (zend_multibyte_check_lexer_compatibility(internal_encoding)) {",
          "463:   LANG_SCNG(input_filter) = encoding_filter_script_to_internal;",
          "464:   LANG_SCNG(output_filter) = NULL;",
          "465:  } else if (zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {",
          "466:   LANG_SCNG(input_filter) = NULL;",
          "467:   LANG_SCNG(output_filter) = encoding_filter_script_to_internal;",
          "468:  } else {",
          "470:   LANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;",
          "471:   LANG_SCNG(output_filter) = encoding_filter_intermediate_to_internal;",
          "472:  }",
          "474:  return 0;",
          "475: }",
          "477: ZEND_API int open_file_for_scanning(zend_file_handle *file_handle TSRMLS_DC)",
          "478: {",
          "479:  const char *file_path = NULL;",
          "480:  char *buf;",
          "481:  size_t size, offset = 0;",
          "484:  if (CG(start_lineno) == 2 && file_handle->type == ZEND_HANDLE_FP && file_handle->handle.fp) {",
          "485:   if ((offset = ftell(file_handle->handle.fp)) == -1) {",
          "486:    offset = 0;",
          "487:   }",
          "488:  }",
          "490:  if (zend_stream_fixup(file_handle, &buf, &size TSRMLS_CC) == FAILURE) {",
          "491:   return FAILURE;",
          "492:  }",
          "494:  zend_llist_add_element(&CG(open_files), file_handle);",
          "495:  if (file_handle->handle.stream.handle >= (void*)file_handle && file_handle->handle.stream.handle <= (void*)(file_handle+1)) {",
          "496:   zend_file_handle *fh = (zend_file_handle*)zend_llist_get_last(&CG(open_files));",
          "497:   size_t diff = (char*)file_handle->handle.stream.handle - (char*)file_handle;",
          "498:   fh->handle.stream.handle = (void*)(((char*)fh) + diff);",
          "499:   file_handle->handle.stream.handle = fh->handle.stream.handle;",
          "500:  }",
          "503:  SCNG(yy_in) = file_handle;",
          "504:  SCNG(yy_start) = NULL;",
          "506:  if (size != -1) {",
          "507:   if (CG(multibyte)) {",
          "508:    SCNG(script_org) = (unsigned char*)buf;",
          "509:    SCNG(script_org_size) = size;",
          "510:    SCNG(script_filtered) = NULL;",
          "512:    zend_multibyte_set_filter(NULL TSRMLS_CC);",
          "514:    if (SCNG(input_filter)) {",
          "515:     if ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "516:      zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "517:        \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "518:     }",
          "519:     buf = (char*)SCNG(script_filtered);",
          "520:     size = SCNG(script_filtered_size);",
          "521:    }",
          "522:   }",
          "523:   SCNG(yy_start) = (unsigned char *)buf - offset;",
          "524:   yy_scan_buffer(buf, size TSRMLS_CC);",
          "525:  } else {",
          "526:   zend_error_noreturn(E_COMPILE_ERROR, \"zend_stream_mmap() failed\");",
          "527:  }",
          "529:  BEGIN(INITIAL);",
          "531:  if (file_handle->opened_path) {",
          "532:   file_path = file_handle->opened_path;",
          "533:  } else {",
          "534:   file_path = file_handle->filename;",
          "535:  }",
          "537:  zend_set_compiled_filename(file_path TSRMLS_CC);",
          "539:  if (CG(start_lineno)) {",
          "540:   CG(zend_lineno) = CG(start_lineno);",
          "541:   CG(start_lineno) = 0;",
          "542:  } else {",
          "543:   CG(zend_lineno) = 1;",
          "544:  }",
          "546:  RESET_DOC_COMMENT();",
          "547:  CG(increment_lineno) = 0;",
          "548:  return SUCCESS;",
          "549: }",
          "550: END_EXTERN_C()",
          "553: ZEND_API zend_op_array *compile_file(zend_file_handle *file_handle, int type TSRMLS_DC)",
          "554: {",
          "555:  zend_lex_state original_lex_state;",
          "556:  zend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));",
          "557:  zend_op_array *original_active_op_array = CG(active_op_array);",
          "558:  zend_op_array *retval=NULL;",
          "559:  int compiler_result;",
          "560:  zend_bool compilation_successful=0;",
          "561:  znode retval_znode;",
          "562:  zend_bool original_in_compilation = CG(in_compilation);",
          "564:  retval_znode.op_type = IS_CONST;",
          "565:  retval_znode.u.constant.type = IS_LONG;",
          "566:  retval_znode.u.constant.value.lval = 1;",
          "567:  Z_UNSET_ISREF(retval_znode.u.constant);",
          "568:  Z_SET_REFCOUNT(retval_znode.u.constant, 1);",
          "570:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "574:  if (open_file_for_scanning(file_handle TSRMLS_CC)==FAILURE) {",
          "575:   if (type==ZEND_REQUIRE) {",
          "576:    zend_message_dispatcher(ZMSG_FAILED_REQUIRE_FOPEN, file_handle->filename TSRMLS_CC);",
          "577:    zend_bailout();",
          "578:   } else {",
          "579:    zend_message_dispatcher(ZMSG_FAILED_INCLUDE_FOPEN, file_handle->filename TSRMLS_CC);",
          "580:   }",
          "581:   compilation_successful=0;",
          "582:  } else {",
          "583:   init_op_array(op_array, ZEND_USER_FUNCTION, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "584:   CG(in_compilation) = 1;",
          "585:   CG(active_op_array) = op_array;",
          "586:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "587:   zend_init_compiler_context(TSRMLS_C);",
          "588:   compiler_result = zendparse(TSRMLS_C);",
          "589:   zend_do_return(&retval_znode, 0 TSRMLS_CC);",
          "590:   CG(in_compilation) = original_in_compilation;",
          "592:    zend_bailout();",
          "593:   }",
          "594:   compilation_successful=1;",
          "595:  }",
          "597:  if (retval) {",
          "598:   CG(active_op_array) = original_active_op_array;",
          "599:   if (compilation_successful) {",
          "600:    pass_two(op_array TSRMLS_CC);",
          "601:    zend_release_labels(0 TSRMLS_CC);",
          "602:   } else {",
          "603:    efree(op_array);",
          "604:    retval = NULL;",
          "605:   }",
          "606:  }",
          "607:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "608:  return retval;",
          "609: }",
          "612: zend_op_array *compile_filename(int type, zval *filename TSRMLS_DC)",
          "613: {",
          "614:  zend_file_handle file_handle;",
          "615:  zval tmp;",
          "616:  zend_op_array *retval;",
          "617:  char *opened_path = NULL;",
          "619:  if (filename->type != IS_STRING) {",
          "620:   tmp = *filename;",
          "621:   zval_copy_ctor(&tmp);",
          "622:   convert_to_string(&tmp);",
          "623:   filename = &tmp;",
          "624:  }",
          "625:  file_handle.filename = filename->value.str.val;",
          "626:  file_handle.free_filename = 0;",
          "627:  file_handle.type = ZEND_HANDLE_FILENAME;",
          "628:  file_handle.opened_path = NULL;",
          "629:  file_handle.handle.fp = NULL;",
          "631:  retval = zend_compile_file(&file_handle, type TSRMLS_CC);",
          "632:  if (retval && file_handle.handle.stream.handle) {",
          "633:   int dummy = 1;",
          "635:   if (!file_handle.opened_path) {",
          "636:    file_handle.opened_path = opened_path = estrndup(filename->value.str.val, filename->value.str.len);",
          "637:   }",
          "639:   zend_hash_add(&EG(included_files), file_handle.opened_path, strlen(file_handle.opened_path)+1, (void *)&dummy, sizeof(int), NULL);",
          "641:   if (opened_path) {",
          "642:    efree(opened_path);",
          "643:   }",
          "644:  }",
          "645:  zend_destroy_file_handle(&file_handle TSRMLS_CC);",
          "647:  if (filename==&tmp) {",
          "648:   zval_dtor(&tmp);",
          "649:  }",
          "650:  return retval;",
          "651: }",
          "653: ZEND_API int zend_prepare_string_for_scanning(zval *str, char *filename TSRMLS_DC)",
          "654: {",
          "655:  char *buf;",
          "656:  size_t size;",
          "659:  if (IS_INTERNED(str->value.str.val)) {",
          "660:   char *tmp = safe_emalloc(1, str->value.str.len, ZEND_MMAP_AHEAD);",
          "661:   memcpy(tmp, str->value.str.val, str->value.str.len + ZEND_MMAP_AHEAD);",
          "662:   str->value.str.val = tmp;",
          "663:  } else {",
          "664:   str->value.str.val = safe_erealloc(str->value.str.val, 1, str->value.str.len, ZEND_MMAP_AHEAD);",
          "665:  }",
          "667:  memset(str->value.str.val + str->value.str.len, 0, ZEND_MMAP_AHEAD);",
          "669:  SCNG(yy_in) = NULL;",
          "670:  SCNG(yy_start) = NULL;",
          "672:  buf = str->value.str.val;",
          "673:  size = str->value.str.len;",
          "675:  if (CG(multibyte)) {",
          "676:   SCNG(script_org) = (unsigned char*)buf;",
          "677:   SCNG(script_org_size) = size;",
          "678:   SCNG(script_filtered) = NULL;",
          "680:   zend_multibyte_set_filter(zend_multibyte_get_internal_encoding(TSRMLS_C) TSRMLS_CC);",
          "682:   if (SCNG(input_filter)) {",
          "683:    if ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "684:     zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "685:       \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "686:    }",
          "687:    buf = (char*)SCNG(script_filtered);",
          "688:    size = SCNG(script_filtered_size);",
          "689:   }",
          "690:  }",
          "692:  yy_scan_buffer(buf, size TSRMLS_CC);",
          "694:  zend_set_compiled_filename(filename TSRMLS_CC);",
          "695:  CG(zend_lineno) = 1;",
          "696:  CG(increment_lineno) = 0;",
          "697:  RESET_DOC_COMMENT();",
          "698:  return SUCCESS;",
          "699: }",
          "702: ZEND_API size_t zend_get_scanned_file_offset(TSRMLS_D)",
          "703: {",
          "704:  size_t offset = SCNG(yy_cursor) - SCNG(yy_start);",
          "705:  if (SCNG(input_filter)) {",
          "706:   size_t original_offset = offset, length = 0;",
          "707:   do {",
          "708:    unsigned char *p = NULL;",
          "709:    if ((size_t)-1 == SCNG(input_filter)(&p, &length, SCNG(script_org), offset TSRMLS_CC)) {",
          "710:     return (size_t)-1;",
          "711:    }",
          "712:    efree(p);",
          "713:    if (length > original_offset) {",
          "714:     offset--;",
          "715:    } else if (length < original_offset) {",
          "716:     offset++;",
          "717:    }",
          "718:   } while (original_offset != length);",
          "719:  }",
          "720:  return offset;",
          "721: }",
          "724: zend_op_array *compile_string(zval *source_string, char *filename TSRMLS_DC)",
          "725: {",
          "726:  zend_lex_state original_lex_state;",
          "727:  zend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));",
          "728:  zend_op_array *original_active_op_array = CG(active_op_array);",
          "729:  zend_op_array *retval;",
          "730:  zval tmp;",
          "731:  int compiler_result;",
          "732:  zend_bool original_in_compilation = CG(in_compilation);",
          "734:  if (source_string->value.str.len==0) {",
          "735:   efree(op_array);",
          "736:   return NULL;",
          "737:  }",
          "739:  CG(in_compilation) = 1;",
          "741:  tmp = *source_string;",
          "742:  zval_copy_ctor(&tmp);",
          "743:  convert_to_string(&tmp);",
          "744:  source_string = &tmp;",
          "746:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "747:  if (zend_prepare_string_for_scanning(source_string, filename TSRMLS_CC)==FAILURE) {",
          "748:   efree(op_array);",
          "749:   retval = NULL;",
          "750:  } else {",
          "751:   zend_bool orig_interactive = CG(interactive);",
          "753:   CG(interactive) = 0;",
          "754:   init_op_array(op_array, ZEND_EVAL_CODE, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "755:   CG(interactive) = orig_interactive;",
          "756:   CG(active_op_array) = op_array;",
          "757:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "758:   zend_init_compiler_context(TSRMLS_C);",
          "759:   BEGIN(ST_IN_SCRIPTING);",
          "760:   compiler_result = zendparse(TSRMLS_C);",
          "762:   if (SCNG(script_filtered)) {",
          "763:    efree(SCNG(script_filtered));",
          "764:    SCNG(script_filtered) = NULL;",
          "765:   }",
          "767:   if (compiler_result != 0) {",
          "768:    CG(active_op_array) = original_active_op_array;",
          "769:    CG(unclean_shutdown)=1;",
          "770:    destroy_op_array(op_array TSRMLS_CC);",
          "771:    efree(op_array);",
          "772:    retval = NULL;",
          "773:   } else {",
          "774:    zend_do_return(NULL, 0 TSRMLS_CC);",
          "775:    CG(active_op_array) = original_active_op_array;",
          "776:    pass_two(op_array TSRMLS_CC);",
          "777:    zend_release_labels(0 TSRMLS_CC);",
          "778:    retval = op_array;",
          "779:   }",
          "780:  }",
          "781:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "782:  zval_dtor(&tmp);",
          "783:  CG(in_compilation) = original_in_compilation;",
          "784:  return retval;",
          "785: }",
          "788: BEGIN_EXTERN_C()",
          "789: int highlight_file(char *filename, zend_syntax_highlighter_ini *syntax_highlighter_ini TSRMLS_DC)",
          "790: {",
          "791:  zend_lex_state original_lex_state;",
          "792:  zend_file_handle file_handle;",
          "794:  file_handle.type = ZEND_HANDLE_FILENAME;",
          "795:  file_handle.filename = filename;",
          "796:  file_handle.free_filename = 0;",
          "797:  file_handle.opened_path = NULL;",
          "798:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "799:  if (open_file_for_scanning(&file_handle TSRMLS_CC)==FAILURE) {",
          "800:   zend_message_dispatcher(ZMSG_FAILED_HIGHLIGHT_FOPEN, filename TSRMLS_CC);",
          "801:   zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "802:   return FAILURE;",
          "803:  }",
          "804:  zend_highlight(syntax_highlighter_ini TSRMLS_CC);",
          "805:  if (SCNG(script_filtered)) {",
          "806:   efree(SCNG(script_filtered));",
          "807:   SCNG(script_filtered) = NULL;",
          "808:  }",
          "809:  zend_destroy_file_handle(&file_handle TSRMLS_CC);",
          "810:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "811:  return SUCCESS;",
          "812: }",
          "814: int highlight_string(zval *str, zend_syntax_highlighter_ini *syntax_highlighter_ini, char *str_name TSRMLS_DC)",
          "815: {",
          "816:  zend_lex_state original_lex_state;",
          "817:  zval tmp = *str;",
          "819:  str = &tmp;",
          "820:  zval_copy_ctor(str);",
          "821:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "822:  if (zend_prepare_string_for_scanning(str, str_name TSRMLS_CC)==FAILURE) {",
          "823:   zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "824:   return FAILURE;",
          "825:  }",
          "826:  BEGIN(INITIAL);",
          "827:  zend_highlight(syntax_highlighter_ini TSRMLS_CC);",
          "828:  if (SCNG(script_filtered)) {",
          "829:   efree(SCNG(script_filtered));",
          "830:   SCNG(script_filtered) = NULL;",
          "831:  }",
          "832:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "833:  zval_dtor(str);",
          "834:  return SUCCESS;",
          "835: }",
          "837: ZEND_API void zend_multibyte_yyinput_again(zend_encoding_filter old_input_filter, const zend_encoding *old_encoding TSRMLS_DC)",
          "838: {",
          "839:  size_t length;",
          "840:  unsigned char *new_yy_start;",
          "843:  if (!SCNG(input_filter)) {",
          "844:   if (SCNG(script_filtered)) {",
          "845:    efree(SCNG(script_filtered));",
          "846:    SCNG(script_filtered) = NULL;",
          "847:   }",
          "848:   SCNG(script_filtered_size) = 0;",
          "849:   length = SCNG(script_org_size);",
          "850:   new_yy_start = SCNG(script_org);",
          "851:  } else {",
          "852:   if ((size_t)-1 == SCNG(input_filter)(&new_yy_start, &length, SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "853:    zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "854:      \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "855:   }",
          "856:   SCNG(script_filtered) = new_yy_start;",
          "857:   SCNG(script_filtered_size) = length;",
          "858:  }",
          "860:  SCNG(yy_cursor) = new_yy_start + (SCNG(yy_cursor) - SCNG(yy_start));",
          "861:  SCNG(yy_marker) = new_yy_start + (SCNG(yy_marker) - SCNG(yy_start));",
          "862:  SCNG(yy_text) = new_yy_start + (SCNG(yy_text) - SCNG(yy_start));",
          "863:  SCNG(yy_limit) = new_yy_start + (SCNG(yy_limit) - SCNG(yy_start));",
          "865:  SCNG(yy_start) = new_yy_start;",
          "866: }",
          "869: # define zend_copy_value(zendlval, yytext, yyleng) \\",
          "870:  if (SCNG(output_filter)) { \\",
          "871:   size_t sz = 0; \\",
          "872:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC); \\",
          "873:   zendlval->value.str.len = sz; \\",
          "874:  } else { \\",
          "875:   zendlval->value.str.val = (char *) estrndup(yytext, yyleng); \\",
          "876:   zendlval->value.str.len = yyleng; \\",
          "877:  }",
          "879: static void zend_scan_escape_string(zval *zendlval, char *str, int len, char quote_type TSRMLS_DC)",
          "880: {",
          "881:  register char *s, *t;",
          "882:  char *end;",
          "884:  ZVAL_STRINGL(zendlval, str, len, 1);",
          "887:  s = t = zendlval->value.str.val;",
          "888:  end = s+zendlval->value.str.len;",
          "889:  while (s<end) {",
          "890:   if (*s=='\\\\') {",
          "891:    s++;",
          "892:    if (s >= end) {",
          "894:     break;",
          "895:    }",
          "897:    switch(*s) {",
          "898:     case 'n':",
          "900:      zendlval->value.str.len--;",
          "901:      break;",
          "902:     case 'r':",
          "904:      zendlval->value.str.len--;",
          "905:      break;",
          "906:     case 't':",
          "908:      zendlval->value.str.len--;",
          "909:      break;",
          "910:     case 'f':",
          "912:      zendlval->value.str.len--;",
          "913:      break;",
          "914:     case 'v':",
          "916:      zendlval->value.str.len--;",
          "917:      break;",
          "918:     case 'e':",
          "919: #ifdef PHP_WIN32",
          "921: #else",
          "923: #endif",
          "924:      zendlval->value.str.len--;",
          "925:      break;",
          "926:     case '\"':",
          "927:     case '`':",
          "928:      if (*s != quote_type) {",
          "931:       break;",
          "932:      }",
          "933:     case '\\\\':",
          "934:     case '$':",
          "936:      zendlval->value.str.len--;",
          "937:      break;",
          "938:     case 'x':",
          "939:     case 'X':",
          "940:      if (ZEND_IS_HEX(*(s+1))) {",
          "941:       char hex_buf[3] = { 0, 0, 0 };",
          "945:       hex_buf[0] = *(++s);",
          "946:       zendlval->value.str.len--;",
          "947:       if (ZEND_IS_HEX(*(s+1))) {",
          "948:        hex_buf[1] = *(++s);",
          "949:        zendlval->value.str.len--;",
          "950:       }",
          "952:      } else {",
          "955:      }",
          "956:      break;",
          "957:     default:",
          "959:      if (ZEND_IS_OCT(*s)) {",
          "960:       char octal_buf[4] = { 0, 0, 0, 0 };",
          "962:       octal_buf[0] = *s;",
          "963:       zendlval->value.str.len--;",
          "964:       if (ZEND_IS_OCT(*(s+1))) {",
          "965:        octal_buf[1] = *(++s);",
          "966:        zendlval->value.str.len--;",
          "967:        if (ZEND_IS_OCT(*(s+1))) {",
          "968:         octal_buf[2] = *(++s);",
          "969:         zendlval->value.str.len--;",
          "970:        }",
          "971:       }",
          "973:      } else {",
          "976:      }",
          "977:      break;",
          "978:    }",
          "979:   } else {",
          "981:   }",
          "983:   if (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {",
          "984:    CG(zend_lineno)++;",
          "985:   }",
          "986:   s++;",
          "987:  }",
          "989:  if (SCNG(output_filter)) {",
          "990:   size_t sz = 0;",
          "991:   s = zendlval->value.str.val;",
          "992:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);",
          "993:   zendlval->value.str.len = sz;",
          "994:   efree(s);",
          "995:  }",
          "996: }",
          "999: int lex_scan(zval *zendlval TSRMLS_DC)",
          "1000: {",
          "1001: restart:",
          "1002:  SCNG(yy_text) = YYCURSOR;",
          "1004: yymore_restart:",
          "1007: re2c:yyfill:check = 0;",
          "1008: LNUM [0-9]+",
          "1009: DNUM ([0-9]*\".\"[0-9]+)|([0-9]+\".\"[0-9]*)",
          "1010: EXPONENT_DNUM (({LNUM}|{DNUM})[eE][+-]?{LNUM})",
          "1011: HNUM \"0x\"[0-9a-fA-F]+",
          "1012: BNUM \"0b\"[01]+",
          "1013: LABEL [a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*",
          "1014: WHITESPACE [ \\n\\r\\t]+",
          "1015: TABS_AND_SPACES [ \\t]*",
          "1016: TOKENS [;:,.\\[\\]()|^&+-/*=%!~$<>?@]",
          "1017: ANY_CHAR [^]",
          "1018: NEWLINE (\"\\r\"|\"\\n\"|\"\\r\\n\")",
          "1021: <!*> := yyleng = YYCURSOR - SCNG(yy_text);",
          "1024: <ST_IN_SCRIPTING>\"exit\" {",
          "1025:  return T_EXIT;",
          "1026: }",
          "1028: <ST_IN_SCRIPTING>\"die\" {",
          "1029:  return T_EXIT;",
          "1030: }",
          "1032: <ST_IN_SCRIPTING>\"function\" {",
          "1033:  return T_FUNCTION;",
          "1034: }",
          "1036: <ST_IN_SCRIPTING>\"const\" {",
          "1037:  return T_CONST;",
          "1038: }",
          "1040: <ST_IN_SCRIPTING>\"return\" {",
          "1041:  return T_RETURN;",
          "1042: }",
          "1044: <ST_IN_SCRIPTING>\"yield\" {",
          "1045:  return T_YIELD;",
          "1046: }",
          "1048: <ST_IN_SCRIPTING>\"try\" {",
          "1049:  return T_TRY;",
          "1050: }",
          "1052: <ST_IN_SCRIPTING>\"catch\" {",
          "1053:  return T_CATCH;",
          "1054: }",
          "1056: <ST_IN_SCRIPTING>\"finally\" {",
          "1057:  return T_FINALLY;",
          "1058: }",
          "1060: <ST_IN_SCRIPTING>\"throw\" {",
          "1061:  return T_THROW;",
          "1062: }",
          "1064: <ST_IN_SCRIPTING>\"if\" {",
          "1065:  return T_IF;",
          "1066: }",
          "1068: <ST_IN_SCRIPTING>\"elseif\" {",
          "1069:  return T_ELSEIF;",
          "1070: }",
          "1072: <ST_IN_SCRIPTING>\"endif\" {",
          "1073:  return T_ENDIF;",
          "1074: }",
          "1076: <ST_IN_SCRIPTING>\"else\" {",
          "1077:  return T_ELSE;",
          "1078: }",
          "1080: <ST_IN_SCRIPTING>\"while\" {",
          "1081:  return T_WHILE;",
          "1082: }",
          "1084: <ST_IN_SCRIPTING>\"endwhile\" {",
          "1085:  return T_ENDWHILE;",
          "1086: }",
          "1088: <ST_IN_SCRIPTING>\"do\" {",
          "1089:  return T_DO;",
          "1090: }",
          "1092: <ST_IN_SCRIPTING>\"for\" {",
          "1093:  return T_FOR;",
          "1094: }",
          "1096: <ST_IN_SCRIPTING>\"endfor\" {",
          "1097:  return T_ENDFOR;",
          "1098: }",
          "1100: <ST_IN_SCRIPTING>\"foreach\" {",
          "1101:  return T_FOREACH;",
          "1102: }",
          "1104: <ST_IN_SCRIPTING>\"endforeach\" {",
          "1105:  return T_ENDFOREACH;",
          "1106: }",
          "1108: <ST_IN_SCRIPTING>\"declare\" {",
          "1109:  return T_DECLARE;",
          "1110: }",
          "1112: <ST_IN_SCRIPTING>\"enddeclare\" {",
          "1113:  return T_ENDDECLARE;",
          "1114: }",
          "1116: <ST_IN_SCRIPTING>\"instanceof\" {",
          "1117:  return T_INSTANCEOF;",
          "1118: }",
          "1120: <ST_IN_SCRIPTING>\"as\" {",
          "1121:  return T_AS;",
          "1122: }",
          "1124: <ST_IN_SCRIPTING>\"switch\" {",
          "1125:  return T_SWITCH;",
          "1126: }",
          "1128: <ST_IN_SCRIPTING>\"endswitch\" {",
          "1129:  return T_ENDSWITCH;",
          "1130: }",
          "1132: <ST_IN_SCRIPTING>\"case\" {",
          "1133:  return T_CASE;",
          "1134: }",
          "1136: <ST_IN_SCRIPTING>\"default\" {",
          "1137:  return T_DEFAULT;",
          "1138: }",
          "1140: <ST_IN_SCRIPTING>\"break\" {",
          "1141:  return T_BREAK;",
          "1142: }",
          "1144: <ST_IN_SCRIPTING>\"continue\" {",
          "1145:  return T_CONTINUE;",
          "1146: }",
          "1148: <ST_IN_SCRIPTING>\"goto\" {",
          "1149:  return T_GOTO;",
          "1150: }",
          "1152: <ST_IN_SCRIPTING>\"echo\" {",
          "1153:  return T_ECHO;",
          "1154: }",
          "1156: <ST_IN_SCRIPTING>\"print\" {",
          "1157:  return T_PRINT;",
          "1158: }",
          "1160: <ST_IN_SCRIPTING>\"class\" {",
          "1161:  return T_CLASS;",
          "1162: }",
          "1164: <ST_IN_SCRIPTING>\"interface\" {",
          "1165:  return T_INTERFACE;",
          "1166: }",
          "1168: <ST_IN_SCRIPTING>\"trait\" {",
          "1169:  return T_TRAIT;",
          "1170: }",
          "1172: <ST_IN_SCRIPTING>\"extends\" {",
          "1173:  return T_EXTENDS;",
          "1174: }",
          "1176: <ST_IN_SCRIPTING>\"implements\" {",
          "1177:  return T_IMPLEMENTS;",
          "1178: }",
          "1180: <ST_IN_SCRIPTING>\"->\" {",
          "1181:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "1182:  return T_OBJECT_OPERATOR;",
          "1183: }",
          "1185: <ST_IN_SCRIPTING,ST_LOOKING_FOR_PROPERTY>{WHITESPACE}+ {",
          "1187:  zendlval->value.str.len = yyleng;",
          "1188:  zendlval->type = IS_STRING;",
          "1189:  HANDLE_NEWLINES(yytext, yyleng);",
          "1190:  return T_WHITESPACE;",
          "1191: }",
          "1193: <ST_LOOKING_FOR_PROPERTY>\"->\" {",
          "1194:  return T_OBJECT_OPERATOR;",
          "1195: }",
          "1197: <ST_LOOKING_FOR_PROPERTY>{LABEL} {",
          "1198:  yy_pop_state(TSRMLS_C);",
          "1199:  zend_copy_value(zendlval, yytext, yyleng);",
          "1200:  zendlval->type = IS_STRING;",
          "1201:  return T_STRING;",
          "1202: }",
          "1204: <ST_LOOKING_FOR_PROPERTY>{ANY_CHAR} {",
          "1205:  yyless(0);",
          "1206:  yy_pop_state(TSRMLS_C);",
          "1207:  goto restart;",
          "1208: }",
          "1210: <ST_IN_SCRIPTING>\"::\" {",
          "1211:  return T_PAAMAYIM_NEKUDOTAYIM;",
          "1212: }",
          "1214: <ST_IN_SCRIPTING>\"\\\\\" {",
          "1215:  return T_NS_SEPARATOR;",
          "1216: }",
          "1218: <ST_IN_SCRIPTING>\"new\" {",
          "1219:  return T_NEW;",
          "1220: }",
          "1222: <ST_IN_SCRIPTING>\"clone\" {",
          "1223:  return T_CLONE;",
          "1224: }",
          "1226: <ST_IN_SCRIPTING>\"var\" {",
          "1227:  return T_VAR;",
          "1228: }",
          "1230: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"int\"|\"integer\"){TABS_AND_SPACES}\")\" {",
          "1231:  return T_INT_CAST;",
          "1232: }",
          "1234: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"real\"|\"double\"|\"float\"){TABS_AND_SPACES}\")\" {",
          "1235:  return T_DOUBLE_CAST;",
          "1236: }",
          "1238: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"string\"|\"binary\"){TABS_AND_SPACES}\")\" {",
          "1239:  return T_STRING_CAST;",
          "1240: }",
          "1242: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}\"array\"{TABS_AND_SPACES}\")\" {",
          "1243:  return T_ARRAY_CAST;",
          "1244: }",
          "1246: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}\"object\"{TABS_AND_SPACES}\")\" {",
          "1247:  return T_OBJECT_CAST;",
          "1248: }",
          "1250: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"bool\"|\"boolean\"){TABS_AND_SPACES}\")\" {",
          "1251:  return T_BOOL_CAST;",
          "1252: }",
          "1254: <ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"unset\"){TABS_AND_SPACES}\")\" {",
          "1255:  return T_UNSET_CAST;",
          "1256: }",
          "1258: <ST_IN_SCRIPTING>\"eval\" {",
          "1259:  return T_EVAL;",
          "1260: }",
          "1262: <ST_IN_SCRIPTING>\"include\" {",
          "1263:  return T_INCLUDE;",
          "1264: }",
          "1266: <ST_IN_SCRIPTING>\"include_once\" {",
          "1267:  return T_INCLUDE_ONCE;",
          "1268: }",
          "1270: <ST_IN_SCRIPTING>\"require\" {",
          "1271:  return T_REQUIRE;",
          "1272: }",
          "1274: <ST_IN_SCRIPTING>\"require_once\" {",
          "1275:  return T_REQUIRE_ONCE;",
          "1276: }",
          "1278: <ST_IN_SCRIPTING>\"namespace\" {",
          "1279:  return T_NAMESPACE;",
          "1280: }",
          "1282: <ST_IN_SCRIPTING>\"use\" {",
          "1283:  return T_USE;",
          "1284: }",
          "1286: <ST_IN_SCRIPTING>\"insteadof\" {",
          "1287:         return T_INSTEADOF;",
          "1288: }",
          "1290: <ST_IN_SCRIPTING>\"global\" {",
          "1291:  return T_GLOBAL;",
          "1292: }",
          "1294: <ST_IN_SCRIPTING>\"isset\" {",
          "1295:  return T_ISSET;",
          "1296: }",
          "1298: <ST_IN_SCRIPTING>\"empty\" {",
          "1299:  return T_EMPTY;",
          "1300: }",
          "1302: <ST_IN_SCRIPTING>\"__halt_compiler\" {",
          "1303:  return T_HALT_COMPILER;",
          "1304: }",
          "1306: <ST_IN_SCRIPTING>\"static\" {",
          "1307:  return T_STATIC;",
          "1308: }",
          "1310: <ST_IN_SCRIPTING>\"abstract\" {",
          "1311:  return T_ABSTRACT;",
          "1312: }",
          "1314: <ST_IN_SCRIPTING>\"final\" {",
          "1315:  return T_FINAL;",
          "1316: }",
          "1318: <ST_IN_SCRIPTING>\"private\" {",
          "1319:  return T_PRIVATE;",
          "1320: }",
          "1322: <ST_IN_SCRIPTING>\"protected\" {",
          "1323:  return T_PROTECTED;",
          "1324: }",
          "1326: <ST_IN_SCRIPTING>\"public\" {",
          "1327:  return T_PUBLIC;",
          "1328: }",
          "1330: <ST_IN_SCRIPTING>\"unset\" {",
          "1331:  return T_UNSET;",
          "1332: }",
          "1334: <ST_IN_SCRIPTING>\"=>\" {",
          "1335:  return T_DOUBLE_ARROW;",
          "1336: }",
          "1338: <ST_IN_SCRIPTING>\"list\" {",
          "1339:  return T_LIST;",
          "1340: }",
          "1342: <ST_IN_SCRIPTING>\"array\" {",
          "1343:  return T_ARRAY;",
          "1344: }",
          "1346: <ST_IN_SCRIPTING>\"callable\" {",
          "1347:  return T_CALLABLE;",
          "1348: }",
          "1350: <ST_IN_SCRIPTING>\"++\" {",
          "1351:  return T_INC;",
          "1352: }",
          "1354: <ST_IN_SCRIPTING>\"--\" {",
          "1355:  return T_DEC;",
          "1356: }",
          "1358: <ST_IN_SCRIPTING>\"===\" {",
          "1359:  return T_IS_IDENTICAL;",
          "1360: }",
          "1362: <ST_IN_SCRIPTING>\"!==\" {",
          "1363:  return T_IS_NOT_IDENTICAL;",
          "1364: }",
          "1366: <ST_IN_SCRIPTING>\"==\" {",
          "1367:  return T_IS_EQUAL;",
          "1368: }",
          "1370: <ST_IN_SCRIPTING>\"!=\"|\"<>\" {",
          "1371:  return T_IS_NOT_EQUAL;",
          "1372: }",
          "1374: <ST_IN_SCRIPTING>\"<=\" {",
          "1375:  return T_IS_SMALLER_OR_EQUAL;",
          "1376: }",
          "1378: <ST_IN_SCRIPTING>\">=\" {",
          "1379:  return T_IS_GREATER_OR_EQUAL;",
          "1380: }",
          "1382: <ST_IN_SCRIPTING>\"+=\" {",
          "1383:  return T_PLUS_EQUAL;",
          "1384: }",
          "1386: <ST_IN_SCRIPTING>\"-=\" {",
          "1387:  return T_MINUS_EQUAL;",
          "1388: }",
          "1390: <ST_IN_SCRIPTING>\"*=\" {",
          "1391:  return T_MUL_EQUAL;",
          "1392: }",
          "1394: <ST_IN_SCRIPTING>\"/=\" {",
          "1395:  return T_DIV_EQUAL;",
          "1396: }",
          "1398: <ST_IN_SCRIPTING>\".=\" {",
          "1399:  return T_CONCAT_EQUAL;",
          "1400: }",
          "1402: <ST_IN_SCRIPTING>\"%=\" {",
          "1403:  return T_MOD_EQUAL;",
          "1404: }",
          "1406: <ST_IN_SCRIPTING>\"<<=\" {",
          "1407:  return T_SL_EQUAL;",
          "1408: }",
          "1410: <ST_IN_SCRIPTING>\">>=\" {",
          "1411:  return T_SR_EQUAL;",
          "1412: }",
          "1414: <ST_IN_SCRIPTING>\"&=\" {",
          "1415:  return T_AND_EQUAL;",
          "1416: }",
          "1418: <ST_IN_SCRIPTING>\"|=\" {",
          "1419:  return T_OR_EQUAL;",
          "1420: }",
          "1422: <ST_IN_SCRIPTING>\"^=\" {",
          "1423:  return T_XOR_EQUAL;",
          "1424: }",
          "1426: <ST_IN_SCRIPTING>\"||\" {",
          "1427:  return T_BOOLEAN_OR;",
          "1428: }",
          "1430: <ST_IN_SCRIPTING>\"&&\" {",
          "1431:  return T_BOOLEAN_AND;",
          "1432: }",
          "1434: <ST_IN_SCRIPTING>\"OR\" {",
          "1435:  return T_LOGICAL_OR;",
          "1436: }",
          "1438: <ST_IN_SCRIPTING>\"AND\" {",
          "1439:  return T_LOGICAL_AND;",
          "1440: }",
          "1442: <ST_IN_SCRIPTING>\"XOR\" {",
          "1443:  return T_LOGICAL_XOR;",
          "1444: }",
          "1446: <ST_IN_SCRIPTING>\"<<\" {",
          "1447:  return T_SL;",
          "1448: }",
          "1450: <ST_IN_SCRIPTING>\">>\" {",
          "1451:  return T_SR;",
          "1452: }",
          "1454: <ST_IN_SCRIPTING>{TOKENS} {",
          "1455:  return yytext[0];",
          "1456: }",
          "1459: <ST_IN_SCRIPTING>\"{\" {",
          "1460:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1461:  return '{';",
          "1462: }",
          "1465: <ST_DOUBLE_QUOTES,ST_BACKQUOTE,ST_HEREDOC>\"${\" {",
          "1466:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1467:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1468: }",
          "1471: <ST_IN_SCRIPTING>\"}\" {",
          "1472:  RESET_DOC_COMMENT();",
          "1473:  if (!zend_stack_is_empty(&SCNG(state_stack))) {",
          "1474:   yy_pop_state(TSRMLS_C);",
          "1475:  }",
          "1476:  return '}';",
          "1477: }",
          "1480: <ST_LOOKING_FOR_VARNAME>{LABEL}[[}] {",
          "1481:  yyless(yyleng - 1);",
          "1482:  zend_copy_value(zendlval, yytext, yyleng);",
          "1483:  zendlval->type = IS_STRING;",
          "1484:  yy_pop_state(TSRMLS_C);",
          "1485:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1486:  return T_STRING_VARNAME;",
          "1487: }",
          "1490: <ST_LOOKING_FOR_VARNAME>{ANY_CHAR} {",
          "1491:  yyless(0);",
          "1492:  yy_pop_state(TSRMLS_C);",
          "1493:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1494:  goto restart;",
          "1495: }",
          "1497: <ST_IN_SCRIPTING>{BNUM} {",
          "1499:  int len = yyleng - 2;",
          "1502:  while (*bin == '0') {",
          "1503:   ++bin;",
          "1504:   --len;",
          "1505:  }",
          "1507:  if (len < SIZEOF_LONG * 8) {",
          "1508:   if (len == 0) {",
          "1509:    zendlval->value.lval = 0;",
          "1510:   } else {",
          "1511:    zendlval->value.lval = ZEND_STRTOL(bin, NULL, 2);",
          "1512:   }",
          "1513:   zendlval->type = IS_LONG;",
          "1514:   return T_LNUMBER;",
          "1515:  } else {",
          "1516:   zendlval->value.dval = zend_bin_strtod(bin, NULL);",
          "1517:   zendlval->type = IS_DOUBLE;",
          "1518:   return T_DNUMBER;",
          "1519:  }",
          "1520: }",
          "1522: <ST_IN_SCRIPTING>{LNUM} {",
          "1524:   zendlval->value.lval = ZEND_STRTOL(yytext, NULL, 0);",
          "1525:  } else {",
          "1526:   errno = 0;",
          "1527:   zendlval->value.lval = ZEND_STRTOL(yytext, NULL, 0);",
          "1530:     zendlval->value.dval = zend_oct_strtod(yytext, NULL);",
          "1531:    } else {",
          "1532:     zendlval->value.dval = zend_strtod(yytext, NULL);",
          "1533:    }",
          "1534:    zendlval->type = IS_DOUBLE;",
          "1535:    return T_DNUMBER;",
          "1536:   }",
          "1537:  }",
          "1539:  zendlval->type = IS_LONG;",
          "1540:  return T_LNUMBER;",
          "1541: }",
          "1543: <ST_IN_SCRIPTING>{HNUM} {",
          "1545:  int len = yyleng - 2;",
          "1548:  while (*hex == '0') {",
          "1549:   hex++;",
          "1550:   len--;",
          "1551:  }",
          "1553:  if (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {",
          "1554:   if (len == 0) {",
          "1555:    zendlval->value.lval = 0;",
          "1556:   } else {",
          "1557:    zendlval->value.lval = ZEND_STRTOL(hex, NULL, 16);",
          "1558:   }",
          "1559:   zendlval->type = IS_LONG;",
          "1560:   return T_LNUMBER;",
          "1561:  } else {",
          "1562:   zendlval->value.dval = zend_hex_strtod(hex, NULL);",
          "1563:   zendlval->type = IS_DOUBLE;",
          "1564:   return T_DNUMBER;",
          "1565:  }",
          "1566: }",
          "1569:  if (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {",
          "1570:   zendlval->value.lval = ZEND_STRTOL(yytext, NULL, 10);",
          "1571:   zendlval->type = IS_LONG;",
          "1572:  } else {",
          "1573:   zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "1574:   zendlval->value.str.len = yyleng;",
          "1575:   zendlval->type = IS_STRING;",
          "1576:  }",
          "1577:  return T_NUM_STRING;",
          "1578: }",
          "1581:  zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "1582:  zendlval->value.str.len = yyleng;",
          "1583:  zendlval->type = IS_STRING;",
          "1584:  return T_NUM_STRING;",
          "1585: }",
          "1587: <ST_IN_SCRIPTING>{DNUM}|{EXPONENT_DNUM} {",
          "1588:  zendlval->value.dval = zend_strtod(yytext, NULL);",
          "1589:  zendlval->type = IS_DOUBLE;",
          "1590:  return T_DNUMBER;",
          "1591: }",
          "1593: <ST_IN_SCRIPTING>\"__CLASS__\" {",
          "1594:  const char *class_name = NULL;",
          "1596:  if (CG(active_class_entry)",
          "1597:   && (ZEND_ACC_TRAIT ==",
          "1598:    (CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {",
          "1601:   zendlval->value.str.len = sizeof(\"__CLASS__\")-1;",
          "1602:   zendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);",
          "1603:   zendlval->type = IS_CONSTANT;",
          "1604:  } else {",
          "1605:   if (CG(active_class_entry)) {",
          "1606:    class_name = CG(active_class_entry)->name;",
          "1607:   }",
          "1609:   if (!class_name) {",
          "1610:    class_name = \"\";",
          "1611:   }",
          "1613:   zendlval->value.str.len = strlen(class_name);",
          "1614:   zendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);",
          "1615:   zendlval->type = IS_STRING;",
          "1616:  }",
          "1617:  return T_CLASS_C;",
          "1618: }",
          "1620: <ST_IN_SCRIPTING>\"__TRAIT__\" {",
          "1621:  const char *trait_name = NULL;",
          "1623:  if (CG(active_class_entry)",
          "1624:   && (ZEND_ACC_TRAIT ==",
          "1625:    (CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {",
          "1626:   trait_name = CG(active_class_entry)->name;",
          "1627:  }",
          "1629:  if (!trait_name) {",
          "1630:   trait_name = \"\";",
          "1631:  }",
          "1633:  zendlval->value.str.len = strlen(trait_name);",
          "1634:  zendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);",
          "1635:  zendlval->type = IS_STRING;",
          "1637:  return T_TRAIT_C;",
          "1638: }",
          "1640: <ST_IN_SCRIPTING>\"__FUNCTION__\" {",
          "1641:  const char *func_name = NULL;",
          "1643:  if (CG(active_op_array)) {",
          "1644:   func_name = CG(active_op_array)->function_name;",
          "1645:  }",
          "1647:  if (!func_name) {",
          "1648:   func_name = \"\";",
          "1649:  }",
          "1650:  zendlval->value.str.len = strlen(func_name);",
          "1651:  zendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);",
          "1652:  zendlval->type = IS_STRING;",
          "1653:  return T_FUNC_C;",
          "1654: }",
          "1656: <ST_IN_SCRIPTING>\"__METHOD__\" {",
          "1657:  const char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;",
          "1658:  const char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;",
          "1659:  size_t len = 0;",
          "1661:  if (class_name) {",
          "1662:   len += strlen(class_name) + 2;",
          "1663:  }",
          "1664:  if (func_name) {",
          "1665:   len += strlen(func_name);",
          "1666:  }",
          "1668:  zendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",",
          "1669:   class_name ? class_name : \"\",",
          "1670:   class_name && func_name ? \"::\" : \"\",",
          "1671:   func_name ? func_name : \"\"",
          "1672:   );",
          "1673:  zendlval->type = IS_STRING;",
          "1674:  return T_METHOD_C;",
          "1675: }",
          "1677: <ST_IN_SCRIPTING>\"__LINE__\" {",
          "1678:  zendlval->value.lval = CG(zend_lineno);",
          "1679:  zendlval->type = IS_LONG;",
          "1680:  return T_LINE;",
          "1681: }",
          "1683: <ST_IN_SCRIPTING>\"__FILE__\" {",
          "1684:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "1686:  if (!filename) {",
          "1687:   filename = \"\";",
          "1688:  }",
          "1689:  zendlval->value.str.len = strlen(filename);",
          "1690:  zendlval->value.str.val = estrndup(filename, zendlval->value.str.len);",
          "1691:  zendlval->type = IS_STRING;",
          "1692:  return T_FILE;",
          "1693: }",
          "1695: <ST_IN_SCRIPTING>\"__DIR__\" {",
          "1696:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "1697:  const size_t filename_len = strlen(filename);",
          "1698:  char *dirname;",
          "1700:  if (!filename) {",
          "1701:   filename = \"\";",
          "1702:  }",
          "1704:  dirname = estrndup(filename, filename_len);",
          "1705:  zend_dirname(dirname, filename_len);",
          "1707:  if (strcmp(dirname, \".\") == 0) {",
          "1708:   dirname = erealloc(dirname, MAXPATHLEN);",
          "1709: #if HAVE_GETCWD",
          "1710:   VCWD_GETCWD(dirname, MAXPATHLEN);",
          "1711: #elif HAVE_GETWD",
          "1712:   VCWD_GETWD(dirname);",
          "1713: #endif",
          "1714:  }",
          "1716:  zendlval->value.str.len = strlen(dirname);",
          "1717:  zendlval->value.str.val = dirname;",
          "1718:  zendlval->type = IS_STRING;",
          "1719:  return T_DIR;",
          "1720: }",
          "1722: <ST_IN_SCRIPTING>\"__NAMESPACE__\" {",
          "1723:  if (CG(current_namespace)) {",
          "1725:   zval_copy_ctor(zendlval);",
          "1726:  } else {",
          "1727:   ZVAL_EMPTY_STRING(zendlval);",
          "1728:  }",
          "1729:  return T_NS_C;",
          "1730: }",
          "1732: <INITIAL>\"<script\"{WHITESPACE}+\"language\"{WHITESPACE}*\"=\"{WHITESPACE}*(\"php\"|\"\\\"php\\\"\"|\"'php'\"){WHITESPACE}*\">\" {",
          "1733:  YYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));",
          "1735:  if (bracket != SCNG(yy_text)) {",
          "1737:   YYCURSOR = bracket;",
          "1738:   goto inline_html;",
          "1739:  }",
          "1741:  HANDLE_NEWLINES(yytext, yyleng);",
          "1743:  zendlval->value.str.len = yyleng;",
          "1744:  zendlval->type = IS_STRING;",
          "1745:  BEGIN(ST_IN_SCRIPTING);",
          "1746:  return T_OPEN_TAG;",
          "1747: }",
          "1750: <INITIAL>\"<%=\" {",
          "1751:  if (CG(asp_tags)) {",
          "1753:   zendlval->value.str.len = yyleng;",
          "1754:   zendlval->type = IS_STRING;",
          "1755:   BEGIN(ST_IN_SCRIPTING);",
          "1756:   return T_OPEN_TAG_WITH_ECHO;",
          "1757:  } else {",
          "1758:   goto inline_char_handler;",
          "1759:  }",
          "1760: }",
          "1763: <INITIAL>\"<?=\" {",
          "1765:  zendlval->value.str.len = yyleng;",
          "1766:  zendlval->type = IS_STRING;",
          "1767:  BEGIN(ST_IN_SCRIPTING);",
          "1768:  return T_OPEN_TAG_WITH_ECHO;",
          "1769: }",
          "1772: <INITIAL>\"<%\" {",
          "1773:  if (CG(asp_tags)) {",
          "1775:   zendlval->value.str.len = yyleng;",
          "1776:   zendlval->type = IS_STRING;",
          "1777:   BEGIN(ST_IN_SCRIPTING);",
          "1778:   return T_OPEN_TAG;",
          "1779:  } else {",
          "1780:   goto inline_char_handler;",
          "1781:  }",
          "1782: }",
          "1785: <INITIAL>\"<?php\"([ \\t]|{NEWLINE}) {",
          "1787:  zendlval->value.str.len = yyleng;",
          "1788:  zendlval->type = IS_STRING;",
          "1789:  HANDLE_NEWLINE(yytext[yyleng-1]);",
          "1790:  BEGIN(ST_IN_SCRIPTING);",
          "1791:  return T_OPEN_TAG;",
          "1792: }",
          "1795: <INITIAL>\"<?\" {",
          "1796:  if (CG(short_tags)) {",
          "1798:   zendlval->value.str.len = yyleng;",
          "1799:   zendlval->type = IS_STRING;",
          "1800:   BEGIN(ST_IN_SCRIPTING);",
          "1801:   return T_OPEN_TAG;",
          "1802:  } else {",
          "1803:   goto inline_char_handler;",
          "1804:  }",
          "1805: }",
          "1807: <INITIAL>{ANY_CHAR} {",
          "1808:  if (YYCURSOR > YYLIMIT) {",
          "1809:   return 0;",
          "1810:  }",
          "1812: inline_char_handler:",
          "1814:  while (1) {",
          "1815:   YYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);",
          "1817:   YYCURSOR = ptr ? ptr + 1 : YYLIMIT;",
          "1819:   if (YYCURSOR < YYLIMIT) {",
          "1820:    switch (*YYCURSOR) {",
          "1821:     case '?':",
          "1823:       break;",
          "1824:      }",
          "1825:      continue;",
          "1826:     case '%':",
          "1827:      if (CG(asp_tags)) {",
          "1828:       break;",
          "1829:      }",
          "1830:      continue;",
          "1831:     case 's':",
          "1832:     case 'S':",
          "1835:      YYCURSOR--;",
          "1836:      yymore();",
          "1837:     default:",
          "1838:      continue;",
          "1839:    }",
          "1841:    YYCURSOR--;",
          "1842:   }",
          "1844:   break;",
          "1845:  }",
          "1847: inline_html:",
          "1848:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1850:  if (SCNG(output_filter)) {",
          "1851:   int readsize;",
          "1852:   size_t sz = 0;",
          "1853:   readsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);",
          "1854:   zendlval->value.str.len = sz;",
          "1855:   if (readsize < yyleng) {",
          "1856:    yyless(readsize);",
          "1857:   }",
          "1858:  } else {",
          "1859:    zendlval->value.str.val = (char *) estrndup(yytext, yyleng);",
          "1860:    zendlval->value.str.len = yyleng;",
          "1861:  }",
          "1862:  zendlval->type = IS_STRING;",
          "1863:  HANDLE_NEWLINES(yytext, yyleng);",
          "1864:  return T_INLINE_HTML;",
          "1865: }",
          "1871: <ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE>\"$\"{LABEL}\"->\"[a-zA-Z_\\x7f-\\xff] {",
          "1872:  yyless(yyleng - 3);",
          "1873:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "1874:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1875:  zendlval->type = IS_STRING;",
          "1876:  return T_VARIABLE;",
          "1877: }",
          "1881: <ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE>\"$\"{LABEL}\"[\" {",
          "1882:  yyless(yyleng - 1);",
          "1883:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "1884:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1885:  zendlval->type = IS_STRING;",
          "1886:  return T_VARIABLE;",
          "1887: }",
          "1889: <ST_IN_SCRIPTING,ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE,ST_VAR_OFFSET>\"$\"{LABEL} {",
          "1890:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1891:  zendlval->type = IS_STRING;",
          "1892:  return T_VARIABLE;",
          "1893: }",
          "1895: <ST_VAR_OFFSET>\"]\" {",
          "1896:  yy_pop_state(TSRMLS_C);",
          "1897:  return ']';",
          "1898: }",
          "1900: <ST_VAR_OFFSET>{TOKENS}|[{}\"`] {",
          "1902:  return yytext[0];",
          "1903: }",
          "1905: <ST_VAR_OFFSET>[ \\n\\r\\t\\\\'#] {",
          "1907:  yyless(0);",
          "1908:  yy_pop_state(TSRMLS_C);",
          "1909:  return T_ENCAPSED_AND_WHITESPACE;",
          "1910: }",
          "1912: <ST_IN_SCRIPTING,ST_VAR_OFFSET>{LABEL} {",
          "1913:  zend_copy_value(zendlval, yytext, yyleng);",
          "1914:  zendlval->type = IS_STRING;",
          "1915:  return T_STRING;",
          "1916: }",
          "1919: <ST_IN_SCRIPTING>\"#\"|\"//\" {",
          "1920:  while (YYCURSOR < YYLIMIT) {",
          "1921:   switch (*YYCURSOR++) {",
          "1922:    case '\\r':",
          "1923:     if (*YYCURSOR == '\\n') {",
          "1924:      YYCURSOR++;",
          "1925:     }",
          "1927:    case '\\n':",
          "1928:     CG(zend_lineno)++;",
          "1929:     break;",
          "1930:    case '%':",
          "1931:     if (!CG(asp_tags)) {",
          "1932:      continue;",
          "1933:     }",
          "1935:    case '?':",
          "1936:     if (*YYCURSOR == '>') {",
          "1937:      YYCURSOR--;",
          "1938:      break;",
          "1939:     }",
          "1941:    default:",
          "1942:     continue;",
          "1943:   }",
          "1945:   break;",
          "1946:  }",
          "1948:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1950:  return T_COMMENT;",
          "1951: }",
          "1953: <ST_IN_SCRIPTING>\"/*\"|\"/**\"{WHITESPACE} {",
          "1954:  int doc_com;",
          "1956:  if (yyleng > 2) {",
          "1957:   doc_com = 1;",
          "1958:   RESET_DOC_COMMENT();",
          "1959:  } else {",
          "1960:   doc_com = 0;",
          "1961:  }",
          "1963:  while (YYCURSOR < YYLIMIT) {",
          "1964:   if (*YYCURSOR++ == '*' && *YYCURSOR == '/') {",
          "1965:    break;",
          "1966:   }",
          "1967:  }",
          "1969:  if (YYCURSOR < YYLIMIT) {",
          "1970:   YYCURSOR++;",
          "1971:  } else {",
          "1972:   zend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));",
          "1973:  }",
          "1975:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1976:  HANDLE_NEWLINES(yytext, yyleng);",
          "1978:  if (doc_com) {",
          "1979:   CG(doc_comment) = estrndup(yytext, yyleng);",
          "1980:   CG(doc_comment_len) = yyleng;",
          "1981:   return T_DOC_COMMENT;",
          "1982:  }",
          "1984:  return T_COMMENT;",
          "1985: }",
          "1987: <ST_IN_SCRIPTING>(\"?>\"|\"</script\"{WHITESPACE}*\">\"){NEWLINE}? {",
          "1989:  zendlval->value.str.len = yyleng;",
          "1990:  zendlval->type = IS_STRING;",
          "1991:  BEGIN(INITIAL);",
          "1993: }",
          "1996: <ST_IN_SCRIPTING>\"%>\"{NEWLINE}? {",
          "1997:  if (CG(asp_tags)) {",
          "1998:   BEGIN(INITIAL);",
          "1999:   zendlval->value.str.len = yyleng;",
          "2000:   zendlval->type = IS_STRING;",
          "2003:  } else {",
          "2004:   yyless(1);",
          "2005:   return yytext[0];",
          "2006:  }",
          "2007: }",
          "2010: <ST_IN_SCRIPTING>b?['] {",
          "2011:  register char *s, *t;",
          "2012:  char *end;",
          "2013:  int bprefix = (yytext[0] != '\\'') ? 1 : 0;",
          "2015:  while (1) {",
          "2016:   if (YYCURSOR < YYLIMIT) {",
          "2017:    if (*YYCURSOR == '\\'') {",
          "2018:     YYCURSOR++;",
          "2019:     yyleng = YYCURSOR - SCNG(yy_text);",
          "2021:     break;",
          "2022:    } else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {",
          "2023:     YYCURSOR++;",
          "2024:    }",
          "2025:   } else {",
          "2026:    yyleng = YYLIMIT - SCNG(yy_text);",
          "2031:    return T_ENCAPSED_AND_WHITESPACE;",
          "2032:   }",
          "2033:  }",
          "2035:  zendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);",
          "2036:  zendlval->value.str.len = yyleng-bprefix-2;",
          "2037:  zendlval->type = IS_STRING;",
          "2040:  s = t = zendlval->value.str.val;",
          "2041:  end = s+zendlval->value.str.len;",
          "2042:  while (s<end) {",
          "2043:   if (*s=='\\\\') {",
          "2044:    s++;",
          "2046:    switch(*s) {",
          "2047:     case '\\\\':",
          "2048:     case '\\'':",
          "2050:      zendlval->value.str.len--;",
          "2051:      break;",
          "2052:     default:",
          "2055:      break;",
          "2056:    }",
          "2057:   } else {",
          "2059:   }",
          "2061:   if (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {",
          "2062:    CG(zend_lineno)++;",
          "2063:   }",
          "2064:   s++;",
          "2065:  }",
          "2068:  if (SCNG(output_filter)) {",
          "2069:   size_t sz = 0;",
          "2070:   s = zendlval->value.str.val;",
          "2071:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);",
          "2072:   zendlval->value.str.len = sz;",
          "2073:   efree(s);",
          "2074:  }",
          "2075:  return T_CONSTANT_ENCAPSED_STRING;",
          "2076: }",
          "2079: <ST_IN_SCRIPTING>b?[\"] {",
          "2080:  int bprefix = (yytext[0] != '\"') ? 1 : 0;",
          "2082:  while (YYCURSOR < YYLIMIT) {",
          "2083:   switch (*YYCURSOR++) {",
          "2084:    case '\"':",
          "2085:     yyleng = YYCURSOR - SCNG(yy_text);",
          "2086:     zend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);",
          "2087:     return T_CONSTANT_ENCAPSED_STRING;",
          "2088:    case '$':",
          "2089:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "2090:      break;",
          "2091:     }",
          "2092:     continue;",
          "2093:    case '{':",
          "2094:     if (*YYCURSOR == '$') {",
          "2095:      break;",
          "2096:     }",
          "2097:     continue;",
          "2098:    case '\\\\':",
          "2099:     if (YYCURSOR < YYLIMIT) {",
          "2100:      YYCURSOR++;",
          "2101:     }",
          "2103:    default:",
          "2104:     continue;",
          "2105:   }",
          "2107:   YYCURSOR--;",
          "2108:   break;",
          "2109:  }",
          "2112:  SET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);",
          "2114:  YYCURSOR = SCNG(yy_text) + yyleng;",
          "2116:  BEGIN(ST_DOUBLE_QUOTES);",
          "2117:  return '\"';",
          "2118: }",
          "2121: <ST_IN_SCRIPTING>b?\"<<<\"{TABS_AND_SPACES}({LABEL}|([']{LABEL}['])|([\"]{LABEL}[\"])){NEWLINE} {",
          "2122:  char *s;",
          "2123:  int bprefix = (yytext[0] != '<') ? 1 : 0;",
          "2124:  zend_heredoc_label *heredoc_label = emalloc(sizeof(zend_heredoc_label));",
          "2126:  CG(zend_lineno)++;",
          "2127:  heredoc_label->length = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);",
          "2128:  s = yytext+bprefix+3;",
          "2129:  while ((*s == ' ') || (*s == '\\t')) {",
          "2130:   s++;",
          "2131:   heredoc_label->length--;",
          "2132:  }",
          "2134:  if (*s == '\\'') {",
          "2135:   s++;",
          "2136:   heredoc_label->length -= 2;",
          "2138:   BEGIN(ST_NOWDOC);",
          "2139:  } else {",
          "2140:   if (*s == '\"') {",
          "2141:    s++;",
          "2142:    heredoc_label->length -= 2;",
          "2143:   }",
          "2145:   BEGIN(ST_HEREDOC);",
          "2146:  }",
          "2148:  heredoc_label->label = estrndup(s, heredoc_label->length);",
          "2151:  if (heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, heredoc_label->length)) {",
          "2152:   YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "2154:   if (*end == ';') {",
          "2155:    end++;",
          "2156:   }",
          "2158:   if (*end == '\\n' || *end == '\\r') {",
          "2159:    BEGIN(ST_END_HEREDOC);",
          "2160:   }",
          "2161:  }",
          "2163:  zend_ptr_stack_push(&SCNG(heredoc_label_stack), (void *) heredoc_label);",
          "2165:  return T_START_HEREDOC;",
          "2166: }",
          "2169: <ST_IN_SCRIPTING>[`] {",
          "2170:  BEGIN(ST_BACKQUOTE);",
          "2171:  return '`';",
          "2172: }",
          "2175: <ST_END_HEREDOC>{ANY_CHAR} {",
          "2176:  zend_heredoc_label *heredoc_label = zend_ptr_stack_pop(&SCNG(heredoc_label_stack));",
          "2178:  YYCURSOR += heredoc_label->length - 1;",
          "2179:  yyleng = heredoc_label->length;",
          "2181:  heredoc_label_dtor(heredoc_label);",
          "2182:  efree(heredoc_label);",
          "2184:  BEGIN(ST_IN_SCRIPTING);",
          "2185:  return T_END_HEREDOC;",
          "2186: }",
          "2189: <ST_DOUBLE_QUOTES,ST_BACKQUOTE,ST_HEREDOC>\"{$\" {",
          "2190:  zendlval->value.lval = (long) '{';",
          "2191:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2192:  yyless(1);",
          "2193:  return T_CURLY_OPEN;",
          "2194: }",
          "2197: <ST_DOUBLE_QUOTES>[\"] {",
          "2198:  BEGIN(ST_IN_SCRIPTING);",
          "2199:  return '\"';",
          "2200: }",
          "2202: <ST_BACKQUOTE>[`] {",
          "2203:  BEGIN(ST_IN_SCRIPTING);",
          "2204:  return '`';",
          "2205: }",
          "2208: <ST_DOUBLE_QUOTES>{ANY_CHAR} {",
          "2209:  if (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {",
          "2210:   YYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;",
          "2211:   SET_DOUBLE_QUOTES_SCANNED_LENGTH(0);",
          "2213:   goto double_quotes_scan_done;",
          "2214:  }",
          "2216:  if (YYCURSOR > YYLIMIT) {",
          "2217:   return 0;",
          "2218:  }",
          "2219:  if (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {",
          "2220:   YYCURSOR++;",
          "2221:  }",
          "2223:  while (YYCURSOR < YYLIMIT) {",
          "2224:   switch (*YYCURSOR++) {",
          "2225:    case '\"':",
          "2226:     break;",
          "2227:    case '$':",
          "2228:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "2229:      break;",
          "2230:     }",
          "2231:     continue;",
          "2232:    case '{':",
          "2233:     if (*YYCURSOR == '$') {",
          "2234:      break;",
          "2235:     }",
          "2236:     continue;",
          "2237:    case '\\\\':",
          "2238:     if (YYCURSOR < YYLIMIT) {",
          "2239:      YYCURSOR++;",
          "2240:     }",
          "2242:    default:",
          "2243:     continue;",
          "2244:   }",
          "2246:   YYCURSOR--;",
          "2247:   break;",
          "2248:  }",
          "2250: double_quotes_scan_done:",
          "2251:  yyleng = YYCURSOR - SCNG(yy_text);",
          "2253:  zend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);",
          "2254:  return T_ENCAPSED_AND_WHITESPACE;",
          "2255: }",
          "2258: <ST_BACKQUOTE>{ANY_CHAR} {",
          "2259:  if (YYCURSOR > YYLIMIT) {",
          "2260:   return 0;",
          "2261:  }",
          "2262:  if (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {",
          "2263:   YYCURSOR++;",
          "2264:  }",
          "2266:  while (YYCURSOR < YYLIMIT) {",
          "2267:   switch (*YYCURSOR++) {",
          "2268:    case '`':",
          "2269:     break;",
          "2270:    case '$':",
          "2271:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "2272:      break;",
          "2273:     }",
          "2274:     continue;",
          "2275:    case '{':",
          "2276:     if (*YYCURSOR == '$') {",
          "2277:      break;",
          "2278:     }",
          "2279:     continue;",
          "2280:    case '\\\\':",
          "2281:     if (YYCURSOR < YYLIMIT) {",
          "2282:      YYCURSOR++;",
          "2283:     }",
          "2285:    default:",
          "2286:     continue;",
          "2287:   }",
          "2289:   YYCURSOR--;",
          "2290:   break;",
          "2291:  }",
          "2293:  yyleng = YYCURSOR - SCNG(yy_text);",
          "2295:  zend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);",
          "2296:  return T_ENCAPSED_AND_WHITESPACE;",
          "2297: }",
          "2300: <ST_HEREDOC>{ANY_CHAR} {",
          "2301:  int newline = 0;",
          "2303:  zend_heredoc_label *heredoc_label = zend_ptr_stack_top(&SCNG(heredoc_label_stack));",
          "2305:  if (YYCURSOR > YYLIMIT) {",
          "2306:   return 0;",
          "2307:  }",
          "2309:  YYCURSOR--;",
          "2311:  while (YYCURSOR < YYLIMIT) {",
          "2312:   switch (*YYCURSOR++) {",
          "2313:    case '\\r':",
          "2314:     if (*YYCURSOR == '\\n') {",
          "2315:      YYCURSOR++;",
          "2316:     }",
          "2318:    case '\\n':",
          "2320:     if (IS_LABEL_START(*YYCURSOR) && heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, heredoc_label->label, heredoc_label->length)) {",
          "2321:      YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "2323:      if (*end == ';') {",
          "2324:       end++;",
          "2325:      }",
          "2327:      if (*end == '\\n' || *end == '\\r') {",
          "2330:       if (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {",
          "2332:       } else {",
          "2333:        newline = 1;",
          "2334:       }",
          "2337:       BEGIN(ST_END_HEREDOC);",
          "2339:       goto heredoc_scan_done;",
          "2340:      }",
          "2341:     }",
          "2342:     continue;",
          "2343:    case '$':",
          "2344:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "2345:      break;",
          "2346:     }",
          "2347:     continue;",
          "2348:    case '{':",
          "2349:     if (*YYCURSOR == '$') {",
          "2350:      break;",
          "2351:     }",
          "2352:     continue;",
          "2353:    case '\\\\':",
          "2354:     if (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {",
          "2355:      YYCURSOR++;",
          "2356:     }",
          "2358:    default:",
          "2359:     continue;",
          "2360:   }",
          "2362:   YYCURSOR--;",
          "2363:   break;",
          "2364:  }",
          "2366: heredoc_scan_done:",
          "2367:  yyleng = YYCURSOR - SCNG(yy_text);",
          "2369:  zend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);",
          "2370:  return T_ENCAPSED_AND_WHITESPACE;",
          "2371: }",
          "2374: <ST_NOWDOC>{ANY_CHAR} {",
          "2375:  int newline = 0;",
          "2377:  zend_heredoc_label *heredoc_label = zend_ptr_stack_top(&SCNG(heredoc_label_stack));",
          "2379:  if (YYCURSOR > YYLIMIT) {",
          "2380:   return 0;",
          "2381:  }",
          "2383:  YYCURSOR--;",
          "2385:  while (YYCURSOR < YYLIMIT) {",
          "2386:   switch (*YYCURSOR++) {",
          "2387:    case '\\r':",
          "2388:     if (*YYCURSOR == '\\n') {",
          "2389:      YYCURSOR++;",
          "2390:     }",
          "2392:    case '\\n':",
          "2394:     if (IS_LABEL_START(*YYCURSOR) && heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, heredoc_label->label, heredoc_label->length)) {",
          "2395:      YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "2397:      if (*end == ';') {",
          "2398:       end++;",
          "2399:      }",
          "2401:      if (*end == '\\n' || *end == '\\r') {",
          "2404:       if (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {",
          "2406:       } else {",
          "2407:        newline = 1;",
          "2408:       }",
          "2411:       BEGIN(ST_END_HEREDOC);",
          "2413:       goto nowdoc_scan_done;",
          "2414:      }",
          "2415:     }",
          "2417:    default:",
          "2418:     continue;",
          "2419:   }",
          "2420:  }",
          "2422: nowdoc_scan_done:",
          "2423:  yyleng = YYCURSOR - SCNG(yy_text);",
          "2425:  zend_copy_value(zendlval, yytext, yyleng - newline);",
          "2426:  zendlval->type = IS_STRING;",
          "2427:  HANDLE_NEWLINES(yytext, yyleng - newline);",
          "2428:  return T_ENCAPSED_AND_WHITESPACE;",
          "2429: }",
          "2432: <ST_IN_SCRIPTING,ST_VAR_OFFSET>{ANY_CHAR} {",
          "2433:  if (YYCURSOR > YYLIMIT) {",
          "2434:   return 0;",
          "2435:  }",
          "2437:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "2438:  goto restart;",
          "2439: }",
          "2442: }",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner_defs.h||Zend/zend_language_scanner_defs.h": [
          "File: Zend/zend_language_scanner_defs.h -> Zend/zend_language_scanner_defs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2: #line 3 \"Zend/zend_language_scanner_defs.h\"",
          "4: enum YYCONDTYPE {",
          "5:  yycST_IN_SCRIPTING,",
          "6:  yycST_LOOKING_FOR_PROPERTY,",
          "7:  yycST_BACKQUOTE,",
          "8:  yycST_DOUBLE_QUOTES,",
          "9:  yycST_HEREDOC,",
          "10:  yycST_LOOKING_FOR_VARNAME,",
          "11:  yycST_VAR_OFFSET,",
          "12:  yycINITIAL,",
          "13:  yycST_END_HEREDOC,",
          "14:  yycST_NOWDOC,",
          "15: };",
          "",
          "[Added Lines]",
          "3: enum YYCONDTYPE {",
          "4:  yycST_IN_SCRIPTING,",
          "5:  yycST_LOOKING_FOR_PROPERTY,",
          "6:  yycST_BACKQUOTE,",
          "7:  yycST_DOUBLE_QUOTES,",
          "8:  yycST_HEREDOC,",
          "9:  yycST_LOOKING_FOR_VARNAME,",
          "10:  yycST_VAR_OFFSET,",
          "11:  yycINITIAL,",
          "12:  yycST_END_HEREDOC,",
          "13:  yycST_NOWDOC,",
          "14: };",
          "",
          "---------------"
        ]
      }
    }
  ]
}