{
  "cve_id": "CVE-2020-12284",
  "cve_desc": "cbs_jpeg_split_fragment in libavcodec/cbs_jpeg.c in FFmpeg 4.1 and 4.2.2 has a heap-based buffer overflow during JPEG_MARKER_SOS handling because of a missing length check.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "a3a3730b5456ca00587455004d40c047f7b20a99",
  "patch_info": {
    "commit_hash": "a3a3730b5456ca00587455004d40c047f7b20a99",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/a3a3730b5456ca00587455004d40c047f7b20a99",
    "files": [
      "libavcodec/cbs_jpeg.c"
    ],
    "message": "avcodec/cbs_jpeg: Check length for SOS\n\nFixes: out of array access\nFixes: 19734/clusterfuzz-testcase-minimized-ffmpeg_BSF_TRACE_HEADERS_fuzzer-5673507031875584\nFixes: 19353/clusterfuzz-testcase-minimized-ffmpeg_BSF_TRACE_HEADERS_fuzzer-5703944462663680\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 1812352d767ccf5431aa440123e2e260a4db2726)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavcodec/cbs_jpeg.c||libavcodec/cbs_jpeg.c"
    ]
  },
  "patch_diff": {
    "libavcodec/cbs_jpeg.c||libavcodec/cbs_jpeg.c": [
      "File: libavcodec/cbs_jpeg.c -> libavcodec/cbs_jpeg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "197:         if (marker == JPEG_MARKER_SOS) {",
      "198:             length = AV_RB16(frag->data + start);",
      "200:             data_ref = NULL;",
      "201:             data     = av_malloc(end - start +",
      "202:                                  AV_INPUT_BUFFER_PADDING_SIZE);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "200:             if (length > end - start)",
      "201:                 return AVERROR_INVALIDDATA;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1812352d767ccf5431aa440123e2e260a4db2726",
      "candidate_info": {
        "commit_hash": "1812352d767ccf5431aa440123e2e260a4db2726",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/1812352d767ccf5431aa440123e2e260a4db2726",
        "files": [
          "libavcodec/cbs_jpeg.c"
        ],
        "message": "avcodec/cbs_jpeg: Check length for SOS\n\nFixes: out of array access\nFixes: 19734/clusterfuzz-testcase-minimized-ffmpeg_BSF_TRACE_HEADERS_fuzzer-5673507031875584\nFixes: 19353/clusterfuzz-testcase-minimized-ffmpeg_BSF_TRACE_HEADERS_fuzzer-5703944462663680\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/cbs_jpeg.c||libavcodec/cbs_jpeg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/cbs_jpeg.c||libavcodec/cbs_jpeg.c"
          ],
          "candidate": [
            "libavcodec/cbs_jpeg.c||libavcodec/cbs_jpeg.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/cbs_jpeg.c||libavcodec/cbs_jpeg.c": [
          "File: libavcodec/cbs_jpeg.c -> libavcodec/cbs_jpeg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:         if (marker == JPEG_MARKER_SOS) {",
          "198:             length = AV_RB16(frag->data + start);",
          "200:             data_ref = NULL;",
          "201:             data     = av_malloc(end - start +",
          "202:                                  AV_INPUT_BUFFER_PADDING_SIZE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "200:             if (length > end - start)",
          "201:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "838105153a579ff0cea0794afc0275c19c51d3a7",
      "candidate_info": {
        "commit_hash": "838105153a579ff0cea0794afc0275c19c51d3a7",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/838105153a579ff0cea0794afc0275c19c51d3a7",
        "files": [
          "libavcodec/cbs_jpeg.c"
        ],
        "message": "avcodec/cbs_jpeg: Check length for SOS\n\nFixes: out of array access\nFixes: 19734/clusterfuzz-testcase-minimized-ffmpeg_BSF_TRACE_HEADERS_fuzzer-5673507031875584\nFixes: 19353/clusterfuzz-testcase-minimized-ffmpeg_BSF_TRACE_HEADERS_fuzzer-5703944462663680\n\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 1812352d767ccf5431aa440123e2e260a4db2726)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/cbs_jpeg.c||libavcodec/cbs_jpeg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/cbs_jpeg.c||libavcodec/cbs_jpeg.c"
          ],
          "candidate": [
            "libavcodec/cbs_jpeg.c||libavcodec/cbs_jpeg.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/cbs_jpeg.c||libavcodec/cbs_jpeg.c": [
          "File: libavcodec/cbs_jpeg.c -> libavcodec/cbs_jpeg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:         if (marker == JPEG_MARKER_SOS) {",
          "198:             length = AV_RB16(frag->data + start);",
          "200:             data_ref = NULL;",
          "201:             data     = av_malloc(end - start +",
          "202:                                  AV_INPUT_BUFFER_PADDING_SIZE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "200:             if (length > end - start)",
          "201:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    }
  ]
}