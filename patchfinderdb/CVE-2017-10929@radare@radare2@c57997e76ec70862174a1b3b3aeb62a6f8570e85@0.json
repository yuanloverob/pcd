{
  "cve_id": "CVE-2017-10929",
  "cve_desc": "The grub_memmove function in shlr/grub/kern/misc.c in radare2 1.5.0 allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted binary file, possibly related to a read overflow in the grub_disk_read_small_real function in kern/disk.c in GNU GRUB 2.02.",
  "repo": "radare/radare2",
  "patch_hash": "c57997e76ec70862174a1b3b3aeb62a6f8570e85",
  "patch_info": {
    "commit_hash": "c57997e76ec70862174a1b3b3aeb62a6f8570e85",
    "repo": "radare/radare2",
    "commit_url": "https://github.com/radare/radare2/commit/c57997e76ec70862174a1b3b3aeb62a6f8570e85",
    "files": [
      "shlr/grub/kern/disk.c"
    ],
    "message": "Fix r2_hbo_grub_memmove ext2 crash",
    "before_after_code_files": [
      "shlr/grub/kern/disk.c||shlr/grub/kern/disk.c"
    ]
  },
  "patch_diff": {
    "shlr/grub/kern/disk.c||shlr/grub/kern/disk.c": [
      "File: shlr/grub/kern/disk.c -> shlr/grub/kern/disk.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "449:       data = grub_disk_cache_fetch (disk->dev->id, disk->id, start_sector);",
      "450:       if (data)",
      "451:  {",
      "453:    if (buf)",
      "454:      grub_memcpy (buf, data + pos + real_offset, len);",
      "455:    grub_disk_cache_unlock (disk->dev->id, disk->id, start_sector);",
      "456:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "453:    if (buf) {",
      "454:      if (pos + real_offset + len >= size) {",
      "456:               grub_errno = GRUB_ERR_BAD_FS;",
      "457:               return grub_errno;",
      "459:      grub_memcpy (buf, data + pos + real_offset, len);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "39e63acfe08434411c5cb80914b399a65fb5775f",
      "candidate_info": {
        "commit_hash": "39e63acfe08434411c5cb80914b399a65fb5775f",
        "repo": "radare/radare2",
        "commit_url": "https://github.com/radare/radare2/commit/39e63acfe08434411c5cb80914b399a65fb5775f",
        "files": [
          "shlr/grub/fs/cpio.c",
          "shlr/grub/kern/disk.c"
        ],
        "message": "Fix last COVs (double free and memleak in grub code)",
        "before_after_code_files": [
          "shlr/grub/fs/cpio.c||shlr/grub/fs/cpio.c",
          "shlr/grub/kern/disk.c||shlr/grub/kern/disk.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "shlr/grub/kern/disk.c||shlr/grub/kern/disk.c"
          ],
          "candidate": [
            "shlr/grub/kern/disk.c||shlr/grub/kern/disk.c"
          ]
        }
      },
      "candidate_diff": {
        "shlr/grub/fs/cpio.c||shlr/grub/fs/cpio.c": [
          "File: shlr/grub/fs/cpio.c -> shlr/grub/fs/cpio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "212: {",
          "213:   struct grub_cpio_data *data;",
          "214:   grub_uint32_t ofs = 0;",
          "216:   const char *np;",
          "217:   int len;",
          "219:   grub_dl_ref (my_mod);",
          "223:   data = grub_cpio_mount (device->disk);",
          "224:   if (!data)",
          "225:     goto fail;",
          "",
          "[Removed Lines]",
          "215:   char *prev, *name = NULL;",
          "221:   prev = 0;",
          "",
          "[Added Lines]",
          "215:   char *prev = NULL, *name = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "259:        if (prev) {",
          "260:    grub_free (prev);",
          "261:    prev = NULL;",
          "263:        prev = name;",
          "264:      }",
          "265:    else {",
          "266:      grub_free (name);",
          "268:    }",
          "269:  }",
          "270:       data->hofs = ofs;",
          "",
          "[Removed Lines]",
          "262:     }",
          "267:   name = NULL;",
          "",
          "[Added Lines]",
          "260:        }",
          "264: if (prev == name) {",
          "265: prev = NULL;",
          "266: }",
          "268:      name = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "273: fail:",
          "281:   grub_dl_unref (my_mod);",
          "",
          "[Removed Lines]",
          "275:   if (prev)",
          "276:     grub_free (prev);",
          "278:   if (data)",
          "279:     grub_free (data);",
          "",
          "[Added Lines]",
          "276:   grub_free (prev);",
          "278:   grub_free (data);",
          "",
          "---------------"
        ],
        "shlr/grub/kern/disk.c||shlr/grub/kern/disk.c": [
          "File: shlr/grub/kern/disk.c -> shlr/grub/kern/disk.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "425:   real_offset = offset;",
          "429:   if (! tmp_buf)",
          "430:     return grub_errno;",
          "",
          "[Removed Lines]",
          "428:   tmp_buf = grub_malloc (GRUB_DISK_SECTOR_SIZE << GRUB_DISK_CACHE_BITS);",
          "",
          "[Added Lines]",
          "428:   tmp_buf = grub_malloc (GRUB_DISK_SECTOR_SIZE << GRUB_DISK_CACHE_BITS);",
          "430:     return grub_errno;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "453:    if (buf) {",
          "454:      if (pos + real_offset + len >= size) {",
          "457:               return grub_errno;",
          "458:      }",
          "459:      grub_memcpy (buf, data + pos + real_offset, len);",
          "",
          "[Removed Lines]",
          "456:               grub_errno = GRUB_ERR_BAD_FS;",
          "",
          "[Added Lines]",
          "457:               grub_errno = GRUB_ERR_BAD_FS;",
          "",
          "---------------"
        ]
      }
    }
  ]
}