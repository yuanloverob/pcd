{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1814c7ece4b7d47f1d5f37c8b786e5f8857673ee",
      "candidate_info": {
        "commit_hash": "1814c7ece4b7d47f1d5f37c8b786e5f8857673ee",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/1814c7ece4b7d47f1d5f37c8b786e5f8857673ee",
        "files": [
          "arch/ARM/ARMInstPrinter.c"
        ],
        "message": "arm: fix access info for RET. see issue #825",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "418:   case ARM_MOVPCLR:",
          "419:    insn->detail->arm.operands[0].type = ARM_OP_REG;",
          "420:    insn->detail->arm.operands[0].reg = ARM_REG_PC;",
          "422:    insn->detail->arm.operands[1].type = ARM_OP_REG;",
          "423:    insn->detail->arm.operands[1].reg = ARM_REG_LR;",
          "425:    insn->detail->arm.op_count = 2;",
          "426:    break;",
          "427:  }",
          "",
          "[Removed Lines]",
          "421:    insn->detail->arm.operands[0].access = CS_AC_READ;",
          "424:    insn->detail->arm.operands[1].access = CS_AC_WRITE;",
          "",
          "[Added Lines]",
          "421:    insn->detail->arm.operands[0].access = CS_AC_WRITE;",
          "424:    insn->detail->arm.operands[1].access = CS_AC_READ;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "840f1408838b22f5c67460f516c7564bcce31ec5",
      "candidate_info": {
        "commit_hash": "840f1408838b22f5c67460f516c7564bcce31ec5",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/840f1408838b22f5c67460f516c7564bcce31ec5",
        "files": [
          "arch/M68K/M68KInstPrinter.c"
        ],
        "message": "M68KInstPrinter.c: removed space between register name and size indicator",
        "before_after_code_files": [
          "arch/M68K/M68KInstPrinter.c||arch/M68K/M68KInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/M68K/M68KInstPrinter.c||arch/M68K/M68KInstPrinter.c": [
          "File: arch/M68K/M68KInstPrinter.c -> arch/M68K/M68KInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:    SStream_concat(O, \"(\");",
          "173:    if (op->address_mode == M68K_AM_PCI_INDEX_BASE_DISP) {",
          "175:    } else {",
          "176:     if (op->mem.base_reg != M68K_REG_INVALID)",
          "177:      SStream_concat(O, \"a%d,%s\", op->mem.base_reg - M68K_REG_A0, s_spacing);",
          "",
          "[Removed Lines]",
          "174:        SStream_concat(O, \"pc,%s%s.%c\", getRegName(op->mem.index_reg), s_spacing, op->mem.index_size ? 'l' : 'w');",
          "",
          "[Added Lines]",
          "174:        SStream_concat(O, \"pc,%s.%c\", getRegName(op->mem.index_reg), op->mem.index_size ? 'l' : 'w');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d41c06c628363e5c3477b60bceaabe3ee6f72541",
      "candidate_info": {
        "commit_hash": "d41c06c628363e5c3477b60bceaabe3ee6f72541",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d41c06c628363e5c3477b60bceaabe3ee6f72541",
        "files": [
          "bindings/python/capstone/__init__.py"
        ],
        "message": "python: fix CS_SKIPDATA_CALLBACK prototype",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "337:     )",
          "339: # callback for SKIPDATA option",
          "342: class _cs_opt_skipdata(ctypes.Structure):",
          "343:     _fields_ = (",
          "",
          "[Removed Lines]",
          "340: CS_SKIPDATA_CALLBACK = ctypes.CFUNCTYPE(ctypes.c_size_t, ctypes.POINTER(ctypes.c_char), ctypes.c_size_t, ctypes.c_void_p)",
          "",
          "[Added Lines]",
          "340: CS_SKIPDATA_CALLBACK = ctypes.CFUNCTYPE(ctypes.c_size_t, ctypes.POINTER(ctypes.c_char), ctypes.c_size_t, ctypes.c_size_t, ctypes.c_void_p)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae360eaac3a44d9610c199da39d96a89d505ab95",
      "candidate_info": {
        "commit_hash": "ae360eaac3a44d9610c199da39d96a89d505ab95",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ae360eaac3a44d9610c199da39d96a89d505ab95",
        "files": [
          "arch/X86/X86ATTInstPrinter.c"
        ],
        "message": "x86: fix sysexit in #806",
        "before_after_code_files": [
          "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c": [
          "File: arch/X86/X86ATTInstPrinter.c -> arch/X86/X86ATTInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "893:  else",
          "894:   printInstruction(MI, OS, info);",
          "896:  if (MI->has_imm) {",
          "898:   if (MI->flat_insn->detail->x86.op_count > 1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "897:  switch(MI->flat_insn->id) {",
          "898:   default: break;",
          "899:   case X86_INS_SYSEXIT:",
          "900:      SStream_Init(OS);",
          "901:      SStream_concat0(OS, \"sysexit\");",
          "902:      break;",
          "903:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "43b69a89599e895bf2fdb9879705e6d24f8b0c2b",
      "candidate_info": {
        "commit_hash": "43b69a89599e895bf2fdb9879705e6d24f8b0c2b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/43b69a89599e895bf2fdb9879705e6d24f8b0c2b",
        "files": [
          "arch/M68K/M68KDisassembler.c"
        ],
        "message": "m68k: indentation",
        "before_after_code_files": [
          "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c": [
          "File: arch/M68K/M68KDisassembler.c -> arch/M68K/M68KDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "906:  get_ea_mode_op(info, op1, info->ir, size);",
          "910: }",
          "912: static void build_movem_er(m68k_info *info, int opcode, int size)",
          "",
          "[Removed Lines]",
          "908:         if (op1->address_mode == M68K_AM_REGI_ADDR_PRE_DEC)",
          "909:                 op0->register_bits = reverse_bits(op0->register_bits);",
          "",
          "[Added Lines]",
          "908:  if (op1->address_mode == M68K_AM_REGI_ADDR_PRE_DEC)",
          "909:   op0->register_bits = reverse_bits(op0->register_bits);",
          "",
          "---------------"
        ]
      }
    }
  ]
}