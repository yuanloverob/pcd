{
  "cve_id": "CVE-2016-6871",
  "cve_desc": "Integer overflow in bcmath in Facebook HHVM before 3.15.0 allows attackers to have unspecified impact via unknown vectors, which triggers a buffer overflow.",
  "repo": "facebook/hhvm",
  "patch_hash": "c00fc9d3003eb06226b58b6a48555f1456ee2475",
  "patch_info": {
    "commit_hash": "c00fc9d3003eb06226b58b6a48555f1456ee2475",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/c00fc9d3003eb06226b58b6a48555f1456ee2475",
    "files": [
      "hphp/runtime/ext/bcmath/ext_bcmath.cpp",
      "hphp/test/slow/ext_bcmath/bccomp_overflow.php",
      "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
    ],
    "message": "Fix buffer overrun due to integer overflow in bcmath\n\nSummary: scale gets passed around as an int inside the library.\n\nReviewed By: mxw\n\nDifferential Revision: D3624520\n\nfbshipit-source-id: d39927413cec24fda2e475a296ad5d9019ccef0a",
    "before_after_code_files": [
      "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp",
      "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php",
      "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
    ]
  },
  "patch_diff": {
    "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp": [
      "File: hphp/runtime/ext/bcmath/ext_bcmath.cpp -> hphp/runtime/ext/bcmath/ext_bcmath.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "42: static void php_str2num(bc_num *num, const char *str) {",
      "43:   const char *p;",
      "44:   if (!(p = strchr(str, '.'))) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "42: static int64_t adjust_scale(int64_t scale) {",
      "43:   if (scale < 0) {",
      "44:     scale = BCG(bc_precision);",
      "45:     if (scale < 0) scale = 0;",
      "46:   }",
      "47:   if ((uint64_t)scale > StringData::MaxSize) return StringData::MaxSize;",
      "48:   return scale;",
      "49: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "56: static String HHVM_FUNCTION(bcadd, const String& left, const String& right,",
      "57:                             int64_t scale /* = -1 */) {",
      "59:   bc_num first, second, result;",
      "60:   bc_init_num(&first);",
      "61:   bc_init_num(&second);",
      "",
      "[Removed Lines]",
      "58:   if (scale < 0) scale = BCG(bc_precision);",
      "",
      "[Added Lines]",
      "67:   scale = adjust_scale(scale);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "76: static String HHVM_FUNCTION(bcsub, const String& left, const String& right,",
      "77:                             int64_t scale /* = -1 */) {",
      "79:   bc_num first, second, result;",
      "80:   bc_init_num(&first);",
      "81:   bc_init_num(&second);",
      "",
      "[Removed Lines]",
      "78:   if (scale < 0) scale = BCG(bc_precision);",
      "",
      "[Added Lines]",
      "87:   scale = adjust_scale(scale);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "96: static int64_t HHVM_FUNCTION(bccomp, const String& left, const String& right,",
      "97:                              int64_t scale /* = -1 */) {",
      "99:   bc_num first, second;",
      "100:   bc_init_num(&first);",
      "101:   bc_init_num(&second);",
      "",
      "[Removed Lines]",
      "98:   if (scale < 0) scale = BCG(bc_precision);",
      "",
      "[Added Lines]",
      "107:   scale = adjust_scale(scale);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "110: static String HHVM_FUNCTION(bcmul, const String& left, const String& right,",
      "111:                             int64_t scale /* = -1 */) {",
      "113:   bc_num first, second, result;",
      "114:   bc_init_num(&first);",
      "115:   bc_init_num(&second);",
      "",
      "[Removed Lines]",
      "112:   if (scale < 0) scale = BCG(bc_precision);",
      "",
      "[Added Lines]",
      "121:   scale = adjust_scale(scale);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "130: static Variant HHVM_FUNCTION(bcdiv, const String& left, const String& right,",
      "131:                int64_t scale /* = -1 */) {",
      "133:   bc_num first, second, result;",
      "134:   bc_init_num(&first);",
      "135:   bc_init_num(&second);",
      "",
      "[Removed Lines]",
      "132:   if (scale < 0) scale = BCG(bc_precision);",
      "",
      "[Added Lines]",
      "141:   scale = adjust_scale(scale);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "172: static String HHVM_FUNCTION(bcpow, const String& left, const String& right,",
      "173:                            int64_t scale /* = -1 */) {",
      "175:   bc_num first, second, result;",
      "176:   bc_init_num(&first);",
      "177:   bc_init_num(&second);",
      "",
      "[Removed Lines]",
      "174:   if (scale < 0) scale = BCG(bc_precision);",
      "",
      "[Added Lines]",
      "183:   scale = adjust_scale(scale);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "194: static Variant HHVM_FUNCTION(bcpowmod, const String& left, const String& right,",
      "195:                              const String& modulus, int64_t scale /* = -1 */) {",
      "197:   bc_num first, second, mod, result;",
      "198:   bc_init_num(&first);",
      "199:   bc_init_num(&second);",
      "",
      "[Removed Lines]",
      "196:   if (scale < 0) scale = BCG(bc_precision);",
      "",
      "[Added Lines]",
      "205:   scale = adjust_scale(scale);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "221: static Variant HHVM_FUNCTION(bcsqrt, const String& operand,",
      "222:                              int64_t scale /* = -1 */) {",
      "224:   bc_num result;",
      "225:   bc_init_num(&result);",
      "226:   SCOPE_EXIT {",
      "",
      "[Removed Lines]",
      "223:   if (scale < 0) scale = BCG(bc_precision);",
      "",
      "[Added Lines]",
      "232:   scale = adjust_scale(scale);",
      "",
      "---------------"
    ],
    "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php": [
      "File: hphp/test/slow/ext_bcmath/bccomp_overflow.php -> hphp/test/slow/ext_bcmath/bccomp_overflow.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: $intMaxPre = PHP_INT_MAX - 1;",
      "4: $stringNormal = 'abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ';",
      "6: $number_bccomp_10 = bccomp(\"2015.5\", $stringNormal, $intMaxPre);",
      "7: var_dump($number_bccomp_10);",
      "",
      "---------------"
    ],
    "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect": [
      "File: hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect -> hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: int(1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "01f234ad08ed17d8e4bc0b9b711db9a1911e7d43",
      "candidate_info": {
        "commit_hash": "01f234ad08ed17d8e4bc0b9b711db9a1911e7d43",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/01f234ad08ed17d8e4bc0b9b711db9a1911e7d43",
        "files": [
          "hphp/runtime/ext/bcmath/ext_bcmath.cpp",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
        ],
        "message": "Fix buffer overrun due to integer overflow in bcmath\n\nSummary: scale gets passed around as an int inside the library.\n\nReviewed By: mxw\n\nDifferential Revision: D3624520\n\nfbshipit-source-id: d39927413cec24fda2e475a296ad5d9019ccef0a",
        "before_after_code_files": [
          "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
          ],
          "candidate": [
            "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp": [
          "File: hphp/runtime/ext/bcmath/ext_bcmath.cpp -> hphp/runtime/ext/bcmath/ext_bcmath.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: static void php_str2num(bc_num *num, const char *str) {",
          "44:   const char *p;",
          "45:   if (!(p = strchr(str, '.'))) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: static int64_t adjust_scale(int64_t scale) {",
          "44:   if (scale < 0) {",
          "45:     scale = BCG(bc_precision);",
          "46:     if (scale < 0) scale = 0;",
          "47:   }",
          "48:   if ((uint64_t)scale > StringData::MaxSize) return StringData::MaxSize;",
          "49:   return scale;",
          "50: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57: static String HHVM_FUNCTION(bcadd, const String& left, const String& right,",
          "58:                             int64_t scale /* = -1 */) {",
          "60:   bc_num first, second, result;",
          "61:   bc_init_num(&first);",
          "62:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "59:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "68:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77: static String HHVM_FUNCTION(bcsub, const String& left, const String& right,",
          "78:                             int64_t scale /* = -1 */) {",
          "80:   bc_num first, second, result;",
          "81:   bc_init_num(&first);",
          "82:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "79:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "88:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97: static int64_t HHVM_FUNCTION(bccomp, const String& left, const String& right,",
          "98:                              int64_t scale /* = -1 */) {",
          "100:   bc_num first, second;",
          "101:   bc_init_num(&first);",
          "102:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "99:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "108:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "111: static String HHVM_FUNCTION(bcmul, const String& left, const String& right,",
          "112:                             int64_t scale /* = -1 */) {",
          "114:   bc_num first, second, result;",
          "115:   bc_init_num(&first);",
          "116:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "113:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "122:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "131: static Variant HHVM_FUNCTION(bcdiv, const String& left, const String& right,",
          "132:                int64_t scale /* = -1 */) {",
          "134:   bc_num first, second, result;",
          "135:   bc_init_num(&first);",
          "136:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "133:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "142:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "173: static String HHVM_FUNCTION(bcpow, const String& left, const String& right,",
          "174:                            int64_t scale /* = -1 */) {",
          "176:   bc_num first, second, result;",
          "177:   bc_init_num(&first);",
          "178:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "175:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "184:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "195: static Variant HHVM_FUNCTION(bcpowmod, const String& left, const String& right,",
          "196:                              const String& modulus, int64_t scale /* = -1 */) {",
          "198:   bc_num first, second, mod, result;",
          "199:   bc_init_num(&first);",
          "200:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "197:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "206:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "222: static Variant HHVM_FUNCTION(bcsqrt, const String& operand,",
          "223:                              int64_t scale /* = -1 */) {",
          "225:   bc_num result;",
          "226:   bc_init_num(&result);",
          "227:   SCOPE_EXIT {",
          "",
          "[Removed Lines]",
          "224:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "233:   scale = adjust_scale(scale);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php": [
          "File: hphp/test/slow/ext_bcmath/bccomp_overflow.php -> hphp/test/slow/ext_bcmath/bccomp_overflow.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: $intMaxPre = PHP_INT_MAX - 1;",
          "4: $stringNormal = 'abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ';",
          "6: $number_bccomp_10 = bccomp(\"2015.5\", $stringNormal, $intMaxPre);",
          "7: var_dump($number_bccomp_10);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect": [
          "File: hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect -> hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: int(1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7cc2482597e99f04d1940299742f894d49e84d0",
      "candidate_info": {
        "commit_hash": "a7cc2482597e99f04d1940299742f894d49e84d0",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/a7cc2482597e99f04d1940299742f894d49e84d0",
        "files": [
          "hphp/runtime/ext/bcmath/ext_bcmath.cpp",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
        ],
        "message": "Fix buffer overrun due to integer overflow in bcmath\n\nSummary: scale gets passed around as an int inside the library.\n\nReviewed By: mxw\n\nDifferential Revision: D3624520\n\nfbshipit-source-id: d39927413cec24fda2e475a296ad5d9019ccef0a",
        "before_after_code_files": [
          "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
          ],
          "candidate": [
            "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp": [
          "File: hphp/runtime/ext/bcmath/ext_bcmath.cpp -> hphp/runtime/ext/bcmath/ext_bcmath.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: static void php_str2num(bc_num *num, const char *str) {",
          "44:   const char *p;",
          "45:   if (!(p = strchr(str, '.'))) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: static int64_t adjust_scale(int64_t scale) {",
          "44:   if (scale < 0) {",
          "45:     scale = BCG(bc_precision);",
          "46:     if (scale < 0) scale = 0;",
          "47:   }",
          "48:   if ((uint64_t)scale > StringData::MaxSize) return StringData::MaxSize;",
          "49:   return scale;",
          "50: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57: static String HHVM_FUNCTION(bcadd, const String& left, const String& right,",
          "58:                             int64_t scale /* = -1 */) {",
          "60:   bc_num first, second, result;",
          "61:   bc_init_num(&first);",
          "62:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "59:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "68:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77: static String HHVM_FUNCTION(bcsub, const String& left, const String& right,",
          "78:                             int64_t scale /* = -1 */) {",
          "80:   bc_num first, second, result;",
          "81:   bc_init_num(&first);",
          "82:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "79:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "88:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97: static int64_t HHVM_FUNCTION(bccomp, const String& left, const String& right,",
          "98:                              int64_t scale /* = -1 */) {",
          "100:   bc_num first, second;",
          "101:   bc_init_num(&first);",
          "102:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "99:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "108:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "111: static String HHVM_FUNCTION(bcmul, const String& left, const String& right,",
          "112:                             int64_t scale /* = -1 */) {",
          "114:   bc_num first, second, result;",
          "115:   bc_init_num(&first);",
          "116:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "113:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "122:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "131: static Variant HHVM_FUNCTION(bcdiv, const String& left, const String& right,",
          "132:                int64_t scale /* = -1 */) {",
          "134:   bc_num first, second, result;",
          "135:   bc_init_num(&first);",
          "136:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "133:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "142:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "173: static String HHVM_FUNCTION(bcpow, const String& left, const String& right,",
          "174:                            int64_t scale /* = -1 */) {",
          "176:   bc_num first, second, result;",
          "177:   bc_init_num(&first);",
          "178:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "175:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "184:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "195: static Variant HHVM_FUNCTION(bcpowmod, const String& left, const String& right,",
          "196:                              const String& modulus, int64_t scale /* = -1 */) {",
          "198:   bc_num first, second, mod, result;",
          "199:   bc_init_num(&first);",
          "200:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "197:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "206:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "222: static Variant HHVM_FUNCTION(bcsqrt, const String& operand,",
          "223:                              int64_t scale /* = -1 */) {",
          "225:   bc_num result;",
          "226:   bc_init_num(&result);",
          "227:   SCOPE_EXIT {",
          "",
          "[Removed Lines]",
          "224:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "233:   scale = adjust_scale(scale);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php": [
          "File: hphp/test/slow/ext_bcmath/bccomp_overflow.php -> hphp/test/slow/ext_bcmath/bccomp_overflow.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: $intMaxPre = PHP_INT_MAX - 1;",
          "4: $stringNormal = 'abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ';",
          "6: $number_bccomp_10 = bccomp(\"2015.5\", $stringNormal, $intMaxPre);",
          "7: var_dump($number_bccomp_10);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect": [
          "File: hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect -> hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: int(1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c9f329aed82811c698d1aa602f9548df07739dd",
      "candidate_info": {
        "commit_hash": "1c9f329aed82811c698d1aa602f9548df07739dd",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/1c9f329aed82811c698d1aa602f9548df07739dd",
        "files": [
          "hphp/runtime/ext/bcmath/ext_bcmath.cpp",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
        ],
        "message": "Fix buffer overrun due to integer overflow in bcmath\n\nSummary: scale gets passed around as an int inside the library.\n\nReviewed By: mxw\n\nDifferential Revision: D3624520\n\nfbshipit-source-id: d39927413cec24fda2e475a296ad5d9019ccef0a",
        "before_after_code_files": [
          "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php",
          "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
          ],
          "candidate": [
            "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php",
            "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/ext/bcmath/ext_bcmath.cpp||hphp/runtime/ext/bcmath/ext_bcmath.cpp": [
          "File: hphp/runtime/ext/bcmath/ext_bcmath.cpp -> hphp/runtime/ext/bcmath/ext_bcmath.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: static void php_str2num(bc_num *num, const char *str) {",
          "43:   const char *p;",
          "44:   if (!(p = strchr(str, '.'))) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: static int64_t adjust_scale(int64_t scale) {",
          "43:   if (scale < 0) {",
          "44:     scale = BCG(bc_precision);",
          "45:     if (scale < 0) scale = 0;",
          "46:   }",
          "47:   if ((uint64_t)scale > StringData::MaxSize) return StringData::MaxSize;",
          "48:   return scale;",
          "49: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56: static String HHVM_FUNCTION(bcadd, const String& left, const String& right,",
          "57:                             int64_t scale /* = -1 */) {",
          "59:   bc_num first, second, result;",
          "60:   bc_init_num(&first);",
          "61:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "58:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "67:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76: static String HHVM_FUNCTION(bcsub, const String& left, const String& right,",
          "77:                             int64_t scale /* = -1 */) {",
          "79:   bc_num first, second, result;",
          "80:   bc_init_num(&first);",
          "81:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "78:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "87:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "96: static int64_t HHVM_FUNCTION(bccomp, const String& left, const String& right,",
          "97:                              int64_t scale /* = -1 */) {",
          "99:   bc_num first, second;",
          "100:   bc_init_num(&first);",
          "101:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "98:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "107:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "110: static String HHVM_FUNCTION(bcmul, const String& left, const String& right,",
          "111:                             int64_t scale /* = -1 */) {",
          "113:   bc_num first, second, result;",
          "114:   bc_init_num(&first);",
          "115:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "112:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "121:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "130: static Variant HHVM_FUNCTION(bcdiv, const String& left, const String& right,",
          "131:                int64_t scale /* = -1 */) {",
          "133:   bc_num first, second, result;",
          "134:   bc_init_num(&first);",
          "135:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "132:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "141:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "172: static String HHVM_FUNCTION(bcpow, const String& left, const String& right,",
          "173:                            int64_t scale /* = -1 */) {",
          "175:   bc_num first, second, result;",
          "176:   bc_init_num(&first);",
          "177:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "174:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "183:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "194: static Variant HHVM_FUNCTION(bcpowmod, const String& left, const String& right,",
          "195:                              const String& modulus, int64_t scale /* = -1 */) {",
          "197:   bc_num first, second, mod, result;",
          "198:   bc_init_num(&first);",
          "199:   bc_init_num(&second);",
          "",
          "[Removed Lines]",
          "196:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "205:   scale = adjust_scale(scale);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "221: static Variant HHVM_FUNCTION(bcsqrt, const String& operand,",
          "222:                              int64_t scale /* = -1 */) {",
          "224:   bc_num result;",
          "225:   bc_init_num(&result);",
          "226:   SCOPE_EXIT {",
          "",
          "[Removed Lines]",
          "223:   if (scale < 0) scale = BCG(bc_precision);",
          "",
          "[Added Lines]",
          "232:   scale = adjust_scale(scale);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_bcmath/bccomp_overflow.php||hphp/test/slow/ext_bcmath/bccomp_overflow.php": [
          "File: hphp/test/slow/ext_bcmath/bccomp_overflow.php -> hphp/test/slow/ext_bcmath/bccomp_overflow.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: $intMaxPre = PHP_INT_MAX - 1;",
          "4: $stringNormal = 'abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ';",
          "6: $number_bccomp_10 = bccomp(\"2015.5\", $stringNormal, $intMaxPre);",
          "7: var_dump($number_bccomp_10);",
          "",
          "---------------"
        ],
        "hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect||hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect": [
          "File: hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect -> hphp/test/slow/ext_bcmath/bccomp_overflow.php.expect",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: int(1)",
          "",
          "---------------"
        ]
      }
    }
  ]
}