{
  "cve_id": "CVE-2012-5375",
  "cve_desc": "The CRC32C feature in the Btrfs implementation in the Linux kernel before 3.8-rc1 allows local users to cause a denial of service (prevention of file creation) by leveraging the ability to write to a directory important to the victim, and creating a file with a crafted name that is associated with a specific CRC32C hash value.",
  "repo": "torvalds/linux",
  "patch_hash": "9c52057c698fb96f8f07e7a4bcf4801a092bda89",
  "patch_info": {
    "commit_hash": "9c52057c698fb96f8f07e7a4bcf4801a092bda89",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/9c52057c698fb96f8f07e7a4bcf4801a092bda89",
    "files": [
      "fs/btrfs/ctree.h",
      "fs/btrfs/dir-item.c",
      "fs/btrfs/inode.c",
      "fs/btrfs/ioctl.c",
      "fs/btrfs/transaction.c"
    ],
    "message": "Btrfs: fix hash overflow handling\n\nThe handling for directory crc hash overflows was fairly obscure,\nsplit_leaf returns EOVERFLOW when we try to extend the item and that is\nsupposed to bubble up to userland.  For a while it did so, but along the\nway we added better handling of errors and forced the FS readonly if we\nhit IO errors during the directory insertion.\n\nAlong the way, we started testing only for EEXIST and the EOVERFLOW case\nwas dropped.  The end result is that we may force the FS readonly if we\ncatch a directory hash bucket overflow.\n\nThis fixes a few problem spots.  First I add tests for EOVERFLOW in the\nplaces where we can safely just return the error up the chain.\n\nbtrfs_rename is harder though, because it tries to insert the new\ndirectory item only after it has already unlinked anything the rename\nwas going to overwrite.  Rather than adding very complex logic, I added\na helper to test for the hash overflow case early while it is still safe\nto bail out.\n\nSnapshot and subvolume creation had a similar problem, so they are using\nthe new helper now too.\n\nSigned-off-by: Chris Mason <chris.mason@fusionio.com>\nReported-by: Pascal Junod <pascal@junod.info>",
    "before_after_code_files": [
      "fs/btrfs/ctree.h||fs/btrfs/ctree.h",
      "fs/btrfs/dir-item.c||fs/btrfs/dir-item.c",
      "fs/btrfs/inode.c||fs/btrfs/inode.c",
      "fs/btrfs/ioctl.c||fs/btrfs/ioctl.c",
      "fs/btrfs/transaction.c||fs/btrfs/transaction.c"
    ]
  },
  "patch_diff": {
    "fs/btrfs/ctree.h||fs/btrfs/ctree.h": [
      "File: fs/btrfs/ctree.h -> fs/btrfs/ctree.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "3283:         struct btrfs_root *root);",
      "3286: int btrfs_insert_dir_item(struct btrfs_trans_handle *trans,",
      "3287:      struct btrfs_root *root, const char *name,",
      "3288:      int name_len, struct inode *dir,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3286: int btrfs_check_dir_item_collision(struct btrfs_root *root, u64 dir,",
      "3287:      const char *name, int name_len);",
      "",
      "---------------"
    ],
    "fs/btrfs/dir-item.c||fs/btrfs/dir-item.c": [
      "File: fs/btrfs/dir-item.c -> fs/btrfs/dir-item.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "213:  return btrfs_match_dir_item_name(root, path, name, name_len);",
      "214: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216: int btrfs_check_dir_item_collision(struct btrfs_root *root, u64 dir,",
      "217:        const char *name, int name_len)",
      "218: {",
      "219:  int ret;",
      "220:  struct btrfs_key key;",
      "221:  struct btrfs_dir_item *di;",
      "222:  int data_size;",
      "223:  struct extent_buffer *leaf;",
      "224:  int slot;",
      "225:  struct btrfs_path *path;",
      "228:  path = btrfs_alloc_path();",
      "229:  if (!path)",
      "230:   return -ENOMEM;",
      "232:  key.objectid = dir;",
      "233:  btrfs_set_key_type(&key, BTRFS_DIR_ITEM_KEY);",
      "234:  key.offset = btrfs_name_hash(name, name_len);",
      "236:  ret = btrfs_search_slot(NULL, root, &key, path, 0, 0);",
      "239:  if (ret < 0)",
      "240:   goto out;",
      "243:  if (ret > 0) {",
      "244:   ret = 0;",
      "245:   goto out;",
      "246:  }",
      "249:  di = btrfs_match_dir_item_name(root, path, name, name_len);",
      "250:  if (di) {",
      "252:   ret = -EEXIST;",
      "253:   goto out;",
      "254:  }",
      "260:  data_size = sizeof(*di) + name_len + sizeof(struct btrfs_item);",
      "261:  leaf = path->nodes[0];",
      "262:  slot = path->slots[0];",
      "263:  if (data_size + btrfs_item_size_nr(leaf, slot) +",
      "264:      sizeof(struct btrfs_item) > BTRFS_LEAF_DATA_SIZE(root)) {",
      "265:   ret = -EOVERFLOW;",
      "266:  } else {",
      "268:   ret = 0;",
      "269:  }",
      "270: out:",
      "271:  btrfs_free_path(path);",
      "272:  return ret;",
      "273: }",
      "",
      "---------------"
    ],
    "fs/btrfs/inode.c||fs/btrfs/inode.c": [
      "File: fs/btrfs/inode.c -> fs/btrfs/inode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4885:  ret = btrfs_insert_dir_item(trans, root, name, name_len,",
      "4886:         parent_inode, &key,",
      "4887:         btrfs_inode_type(inode), index);",
      "4889:   goto fail_dir_item;",
      "4890:  else if (ret) {",
      "4891:   btrfs_abort_transaction(trans, root, ret);",
      "",
      "[Removed Lines]",
      "4888:  if (ret == -EEXIST)",
      "",
      "[Added Lines]",
      "4888:  if (ret == -EEXIST || ret == -EOVERFLOW)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7336:  if (S_ISDIR(old_inode->i_mode) && new_inode &&",
      "7337:      new_inode->i_size > BTRFS_EMPTY_DIR_SIZE)",
      "7338:   return -ENOTEMPTY;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7342:  ret = btrfs_check_dir_item_collision(root, new_dir->i_ino,",
      "7343:         new_dentry->d_name.name,",
      "7344:         new_dentry->d_name.len);",
      "7346:  if (ret) {",
      "7347:   if (ret == -EEXIST) {",
      "7350:    if (!new_inode) {",
      "7351:     WARN_ON(1);",
      "7352:     return ret;",
      "7353:    }",
      "7354:   } else {",
      "7356:    return ret;",
      "7357:   }",
      "7358:  }",
      "7359:  ret = 0;",
      "",
      "---------------"
    ],
    "fs/btrfs/ioctl.c||fs/btrfs/ioctl.c": [
      "File: fs/btrfs/ioctl.c -> fs/btrfs/ioctl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "710:  if (error)",
      "711:   goto out_dput;",
      "713:  down_read(&BTRFS_I(dir)->root->fs_info->subvol_sem);",
      "715:  if (btrfs_root_refs(&BTRFS_I(dir)->root->root_item) == 0)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "717:  error = btrfs_check_dir_item_collision(BTRFS_I(dir)->root,",
      "718:             dir->i_ino, name,",
      "719:             namelen);",
      "720:  if (error)",
      "721:   goto out_dput;",
      "",
      "---------------"
    ],
    "fs/btrfs/transaction.c||fs/btrfs/transaction.c": [
      "File: fs/btrfs/transaction.c -> fs/btrfs/transaction.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1190:         parent_inode, &key,",
      "1191:         BTRFS_FT_DIR, index);",
      "1194:  if (ret) {",
      "1195:   btrfs_abort_transaction(trans, root, ret);",
      "1196:   goto fail;",
      "",
      "[Removed Lines]",
      "1193:  BUG_ON(ret == -EEXIST);",
      "",
      "[Added Lines]",
      "1193:  BUG_ON(ret == -EEXIST || ret == -EOVERFLOW);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "42874b3db7817f662b1d7c6e32f8b63638fa0321",
      "candidate_info": {
        "commit_hash": "42874b3db7817f662b1d7c6e32f8b63638fa0321",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/42874b3db7817f662b1d7c6e32f8b63638fa0321",
        "files": [
          "fs/btrfs/transaction.c"
        ],
        "message": "Btrfs: fix the snapshot that should not exist\n\nThe snapshot should be the image of the fs tree before it was created,\nso the metadata of the snapshot should not exist in the its tree. But now, we\nfound the directory item and directory name index is in both the snapshot tree\nand the fs tree. It introduces some problems and makes the users feel strange:\n\n # mkfs.btrfs /dev/sda1\n # mount /dev/sda1 /mnt\n # mkdir /mnt/1\n # cd /mnt/1\n # btrfs subvolume snapshot /mnt snap0\n # ls -a /mnt/1/snap0/1\n .\t..\t[no other file/dir]\n\n # ll /mnt/1/snap0/\n total 0\n drwxr-xr-x 1 root root 10 Ju1 24 12:11 1\n\t\t\t^^^\n\t\t\tThere is no file/dir in it, but it's size is 10\n\n # cd /mnt/1/snap0/1/snap0\n [Enter a unexisted directory successfully...]\n\nThere is nothing in the directory 1 in snap0, but btrfs told the length of\nthis directory is 10. Beside that, we can enter an unexisted directory, it is\nvery strange to the users.\n\n # btrfs subvolume snapshot /mnt/1/snap0 /mnt/snap1\n # ll /mnt/1/snap0/1/\n total 0\n [None]\n # ll /mnt/snap1/1/\n total 0\n drwxr-xr-x 1 root root 0 Ju1 24 12:14 snap0\n\nAnd the source of snap1 did have any directory in Directory 1, but snap1 have\na snap0, it is different between the source and the snapshot.\n\nSo I think we should insert directory item and directory name index and update\nthe parent inode as the last step of snapshot creation, and do not leave the\nuseless metadata in the file tree.\n\nSigned-off-by: Miao Xie <miaox@cn.fujitsu.com>",
        "before_after_code_files": [
          "fs/btrfs/transaction.c||fs/btrfs/transaction.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/btrfs/transaction.c||fs/btrfs/transaction.c"
          ],
          "candidate": [
            "fs/btrfs/transaction.c||fs/btrfs/transaction.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/btrfs/transaction.c||fs/btrfs/transaction.c": [
          "File: fs/btrfs/transaction.c -> fs/btrfs/transaction.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "955:  struct btrfs_root *parent_root;",
          "956:  struct btrfs_block_rsv *rsv;",
          "957:  struct inode *parent_inode;",
          "958:  struct dentry *parent;",
          "959:  struct dentry *dentry;",
          "960:  struct extent_buffer *tmp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "958:  struct btrfs_path *path;",
          "959:  struct btrfs_dir_item *dir_item;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "967:  u64 root_flags;",
          "968:  uuid_le new_uuid;",
          "970:  new_root_item = kmalloc(sizeof(*new_root_item), GFP_NOFS);",
          "971:  if (!new_root_item) {",
          "972:   ret = pending->error = -ENOMEM;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "972:  path = btrfs_alloc_path();",
          "973:  if (!path) {",
          "974:   ret = pending->error = -ENOMEM;",
          "975:   goto path_alloc_fail;",
          "976:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1016:  ret = btrfs_set_inode_index(parent_inode, &index);",
          "1023:   pending->error = -EEXIST;",
          "1024:   goto fail;",
          "1026:   goto abort_trans;",
          "1027:  }",
          "",
          "[Removed Lines]",
          "1018:  ret = btrfs_insert_dir_item(trans, parent_root,",
          "1019:     dentry->d_name.name, dentry->d_name.len,",
          "1020:     parent_inode, &key,",
          "1021:     BTRFS_FT_DIR, index);",
          "1022:  if (ret == -EEXIST) {",
          "1025:  } else if (ret) {",
          "1029:  btrfs_i_size_write(parent_inode, parent_inode->i_size +",
          "1030:       dentry->d_name.len * 2);",
          "1031:  parent_inode->i_mtime = parent_inode->i_ctime = CURRENT_TIME;",
          "1032:  ret = btrfs_update_inode(trans, parent_root, parent_inode);",
          "1033:  if (ret)",
          "1034:   goto abort_trans;",
          "",
          "[Added Lines]",
          "1028:  dir_item = btrfs_lookup_dir_item(NULL, parent_root, path,",
          "1029:       btrfs_ino(parent_inode),",
          "1030:       dentry->d_name.name,",
          "1031:       dentry->d_name.len, 0);",
          "1032:  if (dir_item != NULL && !IS_ERR(dir_item)) {",
          "1035:  } else if (IS_ERR(dir_item)) {",
          "1036:   ret = PTR_ERR(dir_item);",
          "1039:  btrfs_release_path(path);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1123:  ret = btrfs_run_delayed_refs(trans, root, (unsigned long)-1);",
          "1124:  if (ret)",
          "1125:   goto abort_trans;",
          "1126: fail:",
          "1127:  dput(parent);",
          "1128:  trans->block_rsv = rsv;",
          "1129: no_free_objectid:",
          "1130:  kfree(new_root_item);",
          "1131: root_item_alloc_fail:",
          "1132:  btrfs_block_rsv_release(root, &pending->block_rsv, (u64)-1);",
          "1133:  return ret;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1132:  ret = btrfs_insert_dir_item(trans, parent_root,",
          "1133:         dentry->d_name.name, dentry->d_name.len,",
          "1134:         parent_inode, &key,",
          "1135:         BTRFS_FT_DIR, index);",
          "1137:  BUG_ON(ret == -EEXIST);",
          "1138:  if (ret)",
          "1139:   goto abort_trans;",
          "1141:  btrfs_i_size_write(parent_inode, parent_inode->i_size +",
          "1142:       dentry->d_name.len * 2);",
          "1143:  parent_inode->i_mtime = parent_inode->i_ctime = CURRENT_TIME;",
          "1144:  ret = btrfs_update_inode(trans, parent_root, parent_inode);",
          "1145:  if (ret)",
          "1146:   goto abort_trans;",
          "1153:  btrfs_free_path(path);",
          "1154: path_alloc_fail:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1473:  mutex_lock(&root->fs_info->reloc_mutex);",
          "1476:  if (ret) {",
          "1477:   mutex_unlock(&root->fs_info->reloc_mutex);",
          "1478:   goto cleanup_transaction;",
          "1479:  }",
          "1482:  if (ret) {",
          "1483:   mutex_unlock(&root->fs_info->reloc_mutex);",
          "1484:   goto cleanup_transaction;",
          "",
          "[Removed Lines]",
          "1475:  ret = btrfs_run_delayed_items(trans, root);",
          "1481:  ret = create_pending_snapshots(trans, root->fs_info);",
          "",
          "[Added Lines]",
          "1503:  ret = create_pending_snapshots(trans, root->fs_info);",
          "1519:  ret = btrfs_run_delayed_items(trans, root);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "79787eaab46121d4713ed03c8fc63b9ec3eaec76",
      "candidate_info": {
        "commit_hash": "79787eaab46121d4713ed03c8fc63b9ec3eaec76",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/79787eaab46121d4713ed03c8fc63b9ec3eaec76",
        "files": [
          "fs/btrfs/compression.c",
          "fs/btrfs/ctree.c",
          "fs/btrfs/delayed-inode.c",
          "fs/btrfs/dir-item.c",
          "fs/btrfs/disk-io.c",
          "fs/btrfs/export.c",
          "fs/btrfs/extent-tree.c",
          "fs/btrfs/extent_io.c",
          "fs/btrfs/file-item.c",
          "fs/btrfs/file.c",
          "fs/btrfs/free-space-cache.c",
          "fs/btrfs/inode-item.c",
          "fs/btrfs/inode-map.c",
          "fs/btrfs/inode.c",
          "fs/btrfs/ioctl.c",
          "fs/btrfs/orphan.c",
          "fs/btrfs/relocation.c",
          "fs/btrfs/root-tree.c",
          "fs/btrfs/scrub.c",
          "fs/btrfs/super.c",
          "fs/btrfs/transaction.c",
          "fs/btrfs/tree-log.c",
          "fs/btrfs/volumes.c"
        ],
        "message": "btrfs: replace many BUG_ONs with proper error handling\n\n btrfs currently handles most errors with BUG_ON. This patch is a work-in-\n progress but aims to handle most errors other than internal logic\n errors and ENOMEM more gracefully.\n\n This iteration prevents most crashes but can run into lockups with\n the page lock on occasion when the timing \"works out.\"\n\nSigned-off-by: Jeff Mahoney <jeffm@suse.com>",
        "before_after_code_files": [
          "fs/btrfs/compression.c||fs/btrfs/compression.c",
          "fs/btrfs/ctree.c||fs/btrfs/ctree.c",
          "fs/btrfs/delayed-inode.c||fs/btrfs/delayed-inode.c",
          "fs/btrfs/dir-item.c||fs/btrfs/dir-item.c",
          "fs/btrfs/disk-io.c||fs/btrfs/disk-io.c",
          "fs/btrfs/export.c||fs/btrfs/export.c",
          "fs/btrfs/extent-tree.c||fs/btrfs/extent-tree.c",
          "fs/btrfs/extent_io.c||fs/btrfs/extent_io.c",
          "fs/btrfs/file-item.c||fs/btrfs/file-item.c",
          "fs/btrfs/file.c||fs/btrfs/file.c",
          "fs/btrfs/free-space-cache.c||fs/btrfs/free-space-cache.c",
          "fs/btrfs/inode-item.c||fs/btrfs/inode-item.c",
          "fs/btrfs/inode-map.c||fs/btrfs/inode-map.c",
          "fs/btrfs/inode.c||fs/btrfs/inode.c",
          "fs/btrfs/ioctl.c||fs/btrfs/ioctl.c",
          "fs/btrfs/orphan.c||fs/btrfs/orphan.c",
          "fs/btrfs/relocation.c||fs/btrfs/relocation.c",
          "fs/btrfs/root-tree.c||fs/btrfs/root-tree.c",
          "fs/btrfs/scrub.c||fs/btrfs/scrub.c",
          "fs/btrfs/super.c||fs/btrfs/super.c",
          "fs/btrfs/transaction.c||fs/btrfs/transaction.c",
          "fs/btrfs/tree-log.c||fs/btrfs/tree-log.c",
          "fs/btrfs/volumes.c||fs/btrfs/volumes.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/btrfs/dir-item.c||fs/btrfs/dir-item.c",
            "fs/btrfs/inode.c||fs/btrfs/inode.c",
            "fs/btrfs/ioctl.c||fs/btrfs/ioctl.c",
            "fs/btrfs/transaction.c||fs/btrfs/transaction.c"
          ],
          "candidate": [
            "fs/btrfs/dir-item.c||fs/btrfs/dir-item.c",
            "fs/btrfs/inode.c||fs/btrfs/inode.c",
            "fs/btrfs/ioctl.c||fs/btrfs/ioctl.c",
            "fs/btrfs/transaction.c||fs/btrfs/transaction.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/btrfs/compression.c||fs/btrfs/compression.c": [
          "File: fs/btrfs/compression.c -> fs/btrfs/compression.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "392:    atomic_inc(&cb->pending_bios);",
          "393:    ret = btrfs_bio_wq_end_io(root->fs_info, bio, 0);",
          "396:    if (!skip_sum) {",
          "397:     ret = btrfs_csum_one_bio(root, inode, bio,",
          "398:         start, 1);",
          "400:    }",
          "402:    ret = btrfs_map_bio(root, WRITE, bio, 0, 1);",
          "405:    bio_put(bio);",
          "",
          "[Removed Lines]",
          "394:    BUG_ON(ret);",
          "399:     BUG_ON(ret);",
          "403:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "420:  bio_get(bio);",
          "422:  ret = btrfs_bio_wq_end_io(root->fs_info, bio, 0);",
          "425:  if (!skip_sum) {",
          "426:   ret = btrfs_csum_one_bio(root, inode, bio, start, 1);",
          "428:  }",
          "430:  ret = btrfs_map_bio(root, WRITE, bio, 0, 1);",
          "433:  bio_put(bio);",
          "434:  return 0;",
          "",
          "[Removed Lines]",
          "423:  BUG_ON(ret);",
          "427:   BUG_ON(ret);",
          "431:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "661:    bio_get(comp_bio);",
          "663:    ret = btrfs_bio_wq_end_io(root->fs_info, comp_bio, 0);",
          "",
          "[Removed Lines]",
          "664:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "674:    if (!(BTRFS_I(inode)->flags & BTRFS_INODE_NODATASUM)) {",
          "675:     ret = btrfs_lookup_bio_sums(root, inode,",
          "676:        comp_bio, sums);",
          "678:    }",
          "679:    sums += (comp_bio->bi_size + root->sectorsize - 1) /",
          "680:     root->sectorsize;",
          "682:    ret = btrfs_map_bio(root, READ, comp_bio,",
          "683:          mirror_num, 0);",
          "686:    bio_put(comp_bio);",
          "",
          "[Removed Lines]",
          "677:     BUG_ON(ret);",
          "684:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "697:  bio_get(comp_bio);",
          "699:  ret = btrfs_bio_wq_end_io(root->fs_info, comp_bio, 0);",
          "702:  if (!(BTRFS_I(inode)->flags & BTRFS_INODE_NODATASUM)) {",
          "703:   ret = btrfs_lookup_bio_sums(root, inode, comp_bio, sums);",
          "705:  }",
          "707:  ret = btrfs_map_bio(root, READ, comp_bio, mirror_num, 0);",
          "710:  bio_put(comp_bio);",
          "711:  return 0;",
          "",
          "[Removed Lines]",
          "700:  BUG_ON(ret);",
          "704:   BUG_ON(ret);",
          "708:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/btrfs/ctree.c||fs/btrfs/ctree.c": [
          "File: fs/btrfs/ctree.c -> fs/btrfs/ctree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "356:        root->root_key.objectid == BTRFS_TREE_RELOC_OBJECTID) &&",
          "357:       !(flags & BTRFS_BLOCK_FLAG_FULL_BACKREF)) {",
          "358:    ret = btrfs_inc_ref(trans, root, buf, 1, 1);",
          "361:    if (root->root_key.objectid ==",
          "362:        BTRFS_TREE_RELOC_OBJECTID) {",
          "363:     ret = btrfs_dec_ref(trans, root, buf, 0, 1);",
          "365:     ret = btrfs_inc_ref(trans, root, cow, 1, 1);",
          "367:    }",
          "368:    new_flags |= BTRFS_BLOCK_FLAG_FULL_BACKREF;",
          "369:   } else {",
          "",
          "[Removed Lines]",
          "359:    BUG_ON(ret);",
          "364:     BUG_ON(ret);",
          "366:     BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "373:     ret = btrfs_inc_ref(trans, root, cow, 1, 1);",
          "374:    else",
          "375:     ret = btrfs_inc_ref(trans, root, cow, 0, 1);",
          "377:   }",
          "378:   if (new_flags != 0) {",
          "379:    ret = btrfs_set_disk_extent_flags(trans, root,",
          "",
          "[Removed Lines]",
          "376:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "390:     ret = btrfs_inc_ref(trans, root, cow, 1, 1);",
          "391:    else",
          "392:     ret = btrfs_inc_ref(trans, root, cow, 0, 1);",
          "394:    ret = btrfs_dec_ref(trans, root, buf, 1, 1);",
          "396:   }",
          "397:   clean_tree_block(trans, root, buf);",
          "",
          "[Removed Lines]",
          "393:    BUG_ON(ret);",
          "395:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "476:  ret = update_ref_for_cow(trans, root, buf, cow, &last_ref);",
          "477:  if (ret) {",
          "479:   return ret;",
          "480:  }",
          "",
          "[Removed Lines]",
          "478:   btrfs_std_error(root->fs_info, ret);",
          "",
          "[Added Lines]",
          "478:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2713:          path->nodes[1], slot - 1, &left);",
          "2714:  if (ret) {",
          "2717:   goto out;",
          "2718:  }",
          "",
          "[Removed Lines]",
          "2716:   ret = 1;",
          "",
          "[Added Lines]",
          "2716:   if (ret == -ENOSPC)",
          "2717:    ret = 1;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4017:   }",
          "4018:   btrfs_set_path_blocking(path);",
          "4019:   cur = read_node_slot(root, cur, slot);",
          "4022:   btrfs_tree_read_lock(cur);",
          "",
          "[Removed Lines]",
          "4020:   BUG_ON(!cur);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/btrfs/delayed-inode.c||fs/btrfs/delayed-inode.c": [
          "File: fs/btrfs/delayed-inode.c -> fs/btrfs/delayed-inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1106:  return 0;",
          "1107: }",
          "1110: int btrfs_run_delayed_items(struct btrfs_trans_handle *trans,",
          "1111:        struct btrfs_root *root)",
          "1112: {",
          "1113:  struct btrfs_delayed_root *delayed_root;",
          "1114:  struct btrfs_delayed_node *curr_node, *prev_node;",
          "1115:  struct btrfs_path *path;",
          "1116:  struct btrfs_block_rsv *block_rsv;",
          "1117:  int ret = 0;",
          "1119:  path = btrfs_alloc_path();",
          "1120:  if (!path)",
          "1121:   return -ENOMEM;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1119:  struct btrfs_root *curr_root = root;",
          "1126:  if (trans->aborted)",
          "1127:   return -EIO;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1129:  curr_node = btrfs_first_delayed_node(delayed_root);",
          "1130:  while (curr_node) {",
          "1133:        curr_node);",
          "1134:   if (!ret)",
          "1137:   if (!ret)",
          "1140:   if (ret) {",
          "1141:    btrfs_release_delayed_node(curr_node);",
          "1142:    break;",
          "1143:   }",
          "",
          "[Removed Lines]",
          "1131:   root = curr_node->root;",
          "1132:   ret = btrfs_insert_delayed_items(trans, path, root,",
          "1135:    ret = btrfs_delete_delayed_items(trans, path, root,",
          "1136:         curr_node);",
          "1138:    ret = btrfs_update_delayed_inode(trans, root, path,",
          "1139:         curr_node);",
          "",
          "[Added Lines]",
          "1141:   curr_root = curr_node->root;",
          "1142:   ret = btrfs_insert_delayed_items(trans, path, curr_root,",
          "1145:    ret = btrfs_delete_delayed_items(trans, path,",
          "1146:       curr_root, curr_node);",
          "1148:    ret = btrfs_update_delayed_inode(trans, curr_root,",
          "1149:       path, curr_node);",
          "1152:    btrfs_abort_transaction(trans, root, ret);",
          "",
          "---------------"
        ],
        "fs/btrfs/dir-item.c||fs/btrfs/dir-item.c": [
          "File: fs/btrfs/dir-item.c -> fs/btrfs/dir-item.c"
        ],
        "fs/btrfs/disk-io.c||fs/btrfs/disk-io.c": [
          "File: fs/btrfs/disk-io.c -> fs/btrfs/disk-io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:  u64 bio_offset;",
          "100:  struct btrfs_work work;",
          "101: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:  int error;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "405:  u64 found_start;",
          "406:  unsigned long len;",
          "407:  struct extent_buffer *eb;",
          "410:  tree = &BTRFS_I(page->mapping->host)->io_tree;",
          "",
          "[Removed Lines]",
          "408:  int ret;",
          "",
          "[Added Lines]",
          "409:  int ret = -EIO;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "423:  eb = alloc_extent_buffer(tree, start, len, page);",
          "424:  if (eb == NULL) {",
          "425:   WARN_ON(1);",
          "426:   goto out;",
          "427:  }",
          "428:  ret = btree_read_extent_buffer_pages(root, eb, start + PAGE_CACHE_SIZE,",
          "429:           btrfs_header_generation(eb));",
          "431:  WARN_ON(!btrfs_header_flag(eb, BTRFS_HEADER_FLAG_WRITTEN));",
          "433:  found_start = btrfs_header_bytenr(eb);",
          "434:  if (found_start != start) {",
          "435:   WARN_ON(1);",
          "",
          "[Removed Lines]",
          "430:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "427:   ret = -ENOMEM;",
          "432:  if (ret) {",
          "433:   btrfs_printk(root->fs_info, KERN_WARNING",
          "434:         \"Failed to checksum dirty buffer @ %llu[%lu]\\n\",",
          "435:          start, len);",
          "436:   goto err;",
          "437:  }",
          "440:  ret = -EIO;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "444:   goto err;",
          "445:  }",
          "446:  csum_tree_block(root, eb, 0);",
          "447: err:",
          "448:  free_extent_buffer(eb);",
          "449: out:",
          "451: }",
          "453: static int check_tree_block_fsid(struct btrfs_root *root,",
          "",
          "[Removed Lines]",
          "450:  return 0;",
          "",
          "[Added Lines]",
          "455:  ret = 0;",
          "459:  return ret;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "718: static void run_one_async_start(struct btrfs_work *work)",
          "719: {",
          "720:  struct async_submit_bio *async;",
          "722:  async = container_of(work, struct  async_submit_bio, work);",
          "726: }",
          "728: static void run_one_async_done(struct btrfs_work *work)",
          "",
          "[Removed Lines]",
          "723:  async->submit_bio_start(async->inode, async->rw, async->bio,",
          "724:           async->mirror_num, async->bio_flags,",
          "725:           async->bio_offset);",
          "",
          "[Added Lines]",
          "730:  int ret;",
          "733:  ret = async->submit_bio_start(async->inode, async->rw, async->bio,",
          "734:           async->mirror_num, async->bio_flags,",
          "735:           async->bio_offset);",
          "736:  if (ret)",
          "737:   async->error = ret;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "743:      waitqueue_active(&fs_info->async_submit_wait))",
          "744:   wake_up(&fs_info->async_submit_wait);",
          "746:  async->submit_bio_done(async->inode, async->rw, async->bio,",
          "747:           async->mirror_num, async->bio_flags,",
          "748:           async->bio_offset);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "759:  if (async->error) {",
          "760:   bio_endio(async->bio, async->error);",
          "761:   return;",
          "762:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "784:  async->bio_flags = bio_flags;",
          "785:  async->bio_offset = bio_offset;",
          "787:  atomic_inc(&fs_info->nr_async_submits);",
          "789:  if (rw & REQ_SYNC)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "805:  async->error = 0;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "805:  struct bio_vec *bvec = bio->bi_io_vec;",
          "806:  int bio_index = 0;",
          "807:  struct btrfs_root *root;",
          "809:  WARN_ON(bio->bi_vcnt <= 0);",
          "810:  while (bio_index < bio->bi_vcnt) {",
          "811:   root = BTRFS_I(bvec->bv_page->mapping->host)->root;",
          "813:   bio_index++;",
          "814:   bvec++;",
          "815:  }",
          "817: }",
          "819: static int __btree_submit_bio_start(struct inode *inode, int rw,",
          "",
          "[Removed Lines]",
          "812:   csum_dirty_buffer(root, bvec->bv_page);",
          "816:  return 0;",
          "",
          "[Added Lines]",
          "828:  int ret = 0;",
          "833:   ret = csum_dirty_buffer(root, bvec->bv_page);",
          "834:   if (ret)",
          "835:    break;",
          "839:  return ret;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "830: }",
          "832: static int __btree_submit_bio_done(struct inode *inode, int rw, struct bio *bio,",
          "",
          "[Removed Lines]",
          "828:  btree_csum_one_bio(bio);",
          "829:  return 0;",
          "",
          "[Added Lines]",
          "851:  return btree_csum_one_bio(bio);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1381:  root->node = read_tree_block(root, btrfs_root_bytenr(&root->root_item),",
          "1382:          blocksize, generation);",
          "1383:  root->commit_root = btrfs_root_node(root);",
          "1385: out:",
          "1386:  if (location->objectid != BTRFS_TREE_LOG_OBJECTID) {",
          "1387:   root->ref_cows = 1;",
          "",
          "[Removed Lines]",
          "1384:  BUG_ON(!root->node);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1618:  u64 transid;",
          "1619:  unsigned long now;",
          "1620:  unsigned long delay;",
          "1623:  do {",
          "1624:   delay = HZ * 30;",
          "",
          "[Removed Lines]",
          "1621:  int ret;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1642:   transid = cur->transid;",
          "1643:   spin_unlock(&root->fs_info->trans_lock);",
          "1645:   trans = btrfs_join_transaction(root);",
          "1647:   if (transid == trans->transid) {",
          "1650:   } else {",
          "1651:    btrfs_end_transaction(trans, root);",
          "1652:   }",
          "",
          "[Removed Lines]",
          "1646:   BUG_ON(IS_ERR(trans));",
          "1648:    ret = btrfs_commit_transaction(trans, root);",
          "1649:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1668:   if (IS_ERR(trans))",
          "1669:    goto sleep;",
          "1671:    btrfs_commit_transaction(trans, root);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2289:  chunk_root->node = read_tree_block(chunk_root,",
          "2290:         btrfs_super_chunk_root(disk_super),",
          "2291:         blocksize, generation);",
          "2293:  if (!test_bit(EXTENT_BUFFER_UPTODATE, &chunk_root->node->bflags)) {",
          "2294:   printk(KERN_WARNING \"btrfs: failed to read chunk root on %s\\n\",",
          "2295:          sb->s_id);",
          "",
          "[Removed Lines]",
          "2292:  BUG_ON(!chunk_root->node);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2429:   log_tree_root->node = read_tree_block(tree_root, bytenr,",
          "2430:             blocksize,",
          "2431:             generation + 1);",
          "2432:   ret = btrfs_recover_log_trees(log_tree_root);",
          "2435:   if (sb->s_flags & MS_RDONLY) {",
          "2438:   }",
          "2439:  }",
          "2441:  ret = btrfs_find_orphan_roots(tree_root);",
          "2444:  if (!(sb->s_flags & MS_RDONLY)) {",
          "2445:   ret = btrfs_cleanup_fs_roots(fs_info);",
          "2448:   ret = btrfs_recover_relocation(tree_root);",
          "2449:   if (ret < 0) {",
          "",
          "[Removed Lines]",
          "2433:   BUG_ON(ret);",
          "2436:    ret =  btrfs_commit_super(tree_root);",
          "2437:    BUG_ON(ret);",
          "2442:  BUG_ON(ret);",
          "2446:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2456:   if (ret) {",
          "2457:    btrfs_error(tree_root->fs_info, ret,",
          "2458:         \"Failed to recover log tree\");",
          "2459:    free_extent_buffer(log_tree_root->node);",
          "2460:    kfree(log_tree_root);",
          "2461:    goto fail_trans_kthread;",
          "2462:   }",
          "2465:    ret = btrfs_commit_super(tree_root);",
          "2466:    if (ret)",
          "2467:     goto fail_trans_kthread;",
          "2472:  if (ret)",
          "2473:   goto fail_trans_kthread;",
          "2477:   if (ret) {",
          "2478:    }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2879:  }",
          "2880:  mutex_unlock(&root->fs_info->fs_devices->device_list_mutex);",
          "2881:  if (total_errors > max_errors) {",
          "2885:  }",
          "2886:  return 0;",
          "2887: }",
          "",
          "[Removed Lines]",
          "2882:   printk(KERN_ERR \"btrfs: %d errors while writing supers\\n\",",
          "2883:          total_errors);",
          "2884:   BUG();",
          "",
          "[Added Lines]",
          "2916:   btrfs_error(root->fs_info, -EIO,",
          "2917:        \"%d errors while writing supers\", total_errors);",
          "2918:   return -EIO;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3014:  if (IS_ERR(trans))",
          "3015:   return PTR_ERR(trans);",
          "3016:  ret = btrfs_commit_transaction(trans, root);",
          "3019:  trans = btrfs_join_transaction(root);",
          "3020:  if (IS_ERR(trans))",
          "3021:   return PTR_ERR(trans);",
          "3023:  ret = btrfs_write_and_wait_transaction(NULL, root);",
          "3026:  ret = write_ctree_super(NULL, root, 0);",
          "3027:  return ret;",
          "",
          "[Removed Lines]",
          "3017:  BUG_ON(ret);",
          "3022:  btrfs_commit_transaction(trans, root);",
          "3024:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "3051:  if (ret)",
          "3052:   return ret;",
          "3057:  ret = btrfs_commit_transaction(trans, root);",
          "3058:  if (ret)",
          "3059:   return ret;",
          "3061:  if (ret) {",
          "3062:   btrfs_error(root->fs_info, ret,",
          "3063:        \"Failed to sync btree inode to disk.\");",
          "3064:   return ret;",
          "3065:  }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3366:  spin_unlock(&root->fs_info->ordered_extent_lock);",
          "3367: }",
          "3371: {",
          "3372:  struct rb_node *node;",
          "3373:  struct btrfs_delayed_ref_root *delayed_refs;",
          "",
          "[Removed Lines]",
          "3369: static int btrfs_destroy_delayed_refs(struct btrfs_transaction *trans,",
          "3370:           struct btrfs_root *root)",
          "",
          "[Added Lines]",
          "3410: int btrfs_destroy_delayed_refs(struct btrfs_transaction *trans,",
          "3411:           struct btrfs_root *root)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3377:  delayed_refs = &trans->delayed_refs;",
          "3379:  spin_lock(&delayed_refs->lock);",
          "3380:  if (delayed_refs->num_entries == 0) {",
          "3381:   spin_unlock(&delayed_refs->lock);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3420: again:",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "3397:    struct btrfs_delayed_ref_head *head;",
          "3399:    head = btrfs_delayed_node_to_head(ref);",
          "3400:    mutex_lock(&head->mutex);",
          "3401:    kfree(head->extent_op);",
          "3402:    delayed_refs->num_heads--;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3442:    spin_unlock(&delayed_refs->lock);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "3404:     delayed_refs->num_heads_ready--;",
          "3405:    list_del_init(&head->cluster);",
          "3406:    mutex_unlock(&head->mutex);",
          "3407:   }",
          "3409:   spin_unlock(&delayed_refs->lock);",
          "3410:   btrfs_put_delayed_ref(ref);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3450:    btrfs_put_delayed_ref(ref);",
          "3451:    goto again;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "3649:  return 0;",
          "3650: }",
          "3652: static struct extent_io_ops btree_extent_io_ops = {",
          "3653:  .write_cache_pages_lock_hook = btree_lock_page_hook,",
          "3654:  .readpage_end_io_hook = btree_readpage_end_io_hook,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3696: static int btree_writepage_io_failed_hook(struct bio *bio, struct page *page,",
          "3697:        u64 start, u64 end,",
          "3698:        struct extent_state *state)",
          "3699: {",
          "3700:  struct super_block *sb = page->mapping->host->i_sb;",
          "3701:  struct btrfs_fs_info *fs_info = btrfs_sb(sb);",
          "3702:  btrfs_error(fs_info, -EIO,",
          "3703:       \"Error occured while writing out btree at %llu\", start);",
          "3704:  return -EIO;",
          "3705: }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3656:  .submit_bio_hook = btree_submit_bio_hook,",
          "3658:  .merge_bio_hook = btrfs_merge_bio_hook,",
          "3659: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3714:  .writepage_io_failed_hook = btree_writepage_io_failed_hook,",
          "",
          "---------------"
        ],
        "fs/btrfs/export.c||fs/btrfs/export.c": [
          "File: fs/btrfs/export.c -> fs/btrfs/export.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:  if (ret < 0)",
          "194:   goto fail;",
          "197:  if (path->slots[0] == 0) {",
          "198:   ret = -ENOENT;",
          "199:   goto fail;",
          "",
          "[Removed Lines]",
          "196:  BUG_ON(ret == 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/btrfs/extent-tree.c||fs/btrfs/extent-tree.c": [
          "File: fs/btrfs/extent-tree.c -> fs/btrfs/extent-tree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "245:   cache->bytes_super += stripe_len;",
          "246:   ret = add_excluded_extent(root, cache->key.objectid,",
          "247:        stripe_len);",
          "249:  }",
          "251:  for (i = 0; i < BTRFS_SUPER_MIRROR_MAX; i++) {",
          "",
          "[Removed Lines]",
          "248:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "253:   ret = btrfs_rmap_block(&root->fs_info->mapping_tree,",
          "254:            cache->key.objectid, bytenr,",
          "255:            0, &logical, &nr, &stripe_len);",
          "258:   while (nr--) {",
          "259:    cache->bytes_super += stripe_len;",
          "260:    ret = add_excluded_extent(root, logical[nr],",
          "261:         stripe_len);",
          "263:   }",
          "265:   kfree(logical);",
          "",
          "[Removed Lines]",
          "256:   BUG_ON(ret);",
          "262:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "321:    total_added += size;",
          "322:    ret = btrfs_add_free_space(block_group, start,",
          "323:          size);",
          "325:    start = extent_end + 1;",
          "326:   } else {",
          "327:    break;",
          "",
          "[Removed Lines]",
          "324:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "332:   size = end - start;",
          "333:   total_added += size;",
          "334:   ret = btrfs_add_free_space(block_group, start, size);",
          "336:  }",
          "338:  return total_added;",
          "",
          "[Removed Lines]",
          "335:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "474:  int ret = 0;",
          "476:  caching_ctl = kzalloc(sizeof(*caching_ctl), GFP_NOFS);",
          "479:  INIT_LIST_HEAD(&caching_ctl->list);",
          "480:  mutex_init(&caching_ctl->mutex);",
          "",
          "[Removed Lines]",
          "477:  BUG_ON(!caching_ctl);",
          "",
          "[Added Lines]",
          "477:  if (!caching_ctl)",
          "478:   return -ENOMEM;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "982:     ret = btrfs_next_leaf(root, path);",
          "983:     if (ret < 0)",
          "984:      return ret;",
          "986:     leaf = path->nodes[0];",
          "987:    }",
          "988:    btrfs_item_key_to_cpu(leaf, &found_key,",
          "",
          "[Removed Lines]",
          "985:     BUG_ON(ret > 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1008:     new_size + extra_size, 1);",
          "1009:  if (ret < 0)",
          "1010:   return ret;",
          "1013:  btrfs_extend_item(trans, root, path, new_size);",
          "",
          "[Removed Lines]",
          "1011:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1478:   err = ret;",
          "1479:   goto out;",
          "1480:  }",
          "1483:  leaf = path->nodes[0];",
          "1484:  item_size = btrfs_item_size_nr(leaf, path->slots[0]);",
          "",
          "[Removed Lines]",
          "1481:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1482:  if (ret && !insert) {",
          "1483:   err = -ENOENT;",
          "1484:   goto out;",
          "1485:  }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1846:    if (!ret)",
          "1847:     discarded_bytes += stripe->length;",
          "1848:    else if (ret != -EOPNOTSUPP)",
          "",
          "[Removed Lines]",
          "1849:     break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1940:  ret = insert_extent_backref(trans, root->fs_info->extent_root,",
          "1941:         path, bytenr, parent, root_objectid,",
          "1942:         owner, offset, refs_to_add);",
          "1944: out:",
          "1945:  btrfs_free_path(path);",
          "1946:  return err;",
          "",
          "[Removed Lines]",
          "1943:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1950:  if (ret)",
          "1951:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2027:  int ret;",
          "2028:  int err = 0;",
          "2030:  path = btrfs_alloc_path();",
          "2031:  if (!path)",
          "2032:   return -ENOMEM;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2038:  if (trans->aborted)",
          "2039:   return 0;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2124:           struct btrfs_delayed_extent_op *extent_op,",
          "2125:           int insert_reserved)",
          "2126: {",
          "2128:  if (btrfs_delayed_ref_is_head(node)) {",
          "2129:   struct btrfs_delayed_ref_head *head;",
          "",
          "[Removed Lines]",
          "2127:  int ret;",
          "",
          "[Added Lines]",
          "2138:  int ret = 0;",
          "2140:  if (trans->aborted)",
          "2141:   return 0;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2142:     ret = btrfs_del_csums(trans, root,",
          "2143:             node->bytenr,",
          "2144:             node->num_bytes);",
          "2146:    }",
          "2147:   }",
          "2148:   mutex_unlock(&head->mutex);",
          "2150:  }",
          "2152:  if (node->type == BTRFS_TREE_BLOCK_REF_KEY ||",
          "",
          "[Removed Lines]",
          "2145:     BUG_ON(ret);",
          "2149:   return 0;",
          "",
          "[Added Lines]",
          "2163:   return ret;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2282:     ret = run_delayed_extent_op(trans, root,",
          "2283:            ref, extent_op);",
          "2285:     kfree(extent_op);",
          "2287:     goto next;",
          "2288:    }",
          "",
          "[Removed Lines]",
          "2284:     BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2304:     if (ret) {",
          "2305:      printk(KERN_DEBUG \"btrfs: run_delayed_extent_op returned %d\\n\", ret);",
          "2306:      return ret;",
          "2307:     }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2305:   ret = run_one_delayed_ref(trans, root, ref, extent_op,",
          "2306:        must_insert_reserved);",
          "2309:   btrfs_put_delayed_ref(ref);",
          "2310:   kfree(extent_op);",
          "2311:   count++;",
          "2312: next:",
          "2313:   do_chunk_alloc(trans, root->fs_info->extent_root,",
          "2314:           2 * 1024 * 1024,",
          "",
          "[Removed Lines]",
          "2307:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2334:   if (ret) {",
          "2335:    printk(KERN_DEBUG \"btrfs: run_one_delayed_ref returned %d\\n\", ret);",
          "2336:    return ret;",
          "2337:   }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2358:  unsigned long num_refs = 0;",
          "2359:  int consider_waiting;",
          "2361:  if (root == root->fs_info->extent_root)",
          "2362:   root = root->fs_info->tree_root;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2392:  if (trans->aborted)",
          "2393:   return 0;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2415:   }",
          "2417:   ret = run_clustered_refs(trans, root, &cluster);",
          "2420:   count -= min_t(unsigned long, ret, count);",
          "",
          "[Removed Lines]",
          "2418:   BUG_ON(ret < 0);",
          "",
          "[Added Lines]",
          "2452:   if (ret < 0) {",
          "2453:    spin_unlock(&delayed_refs->lock);",
          "2454:    btrfs_abort_transaction(trans, root, ret);",
          "2455:    return ret;",
          "2456:   }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2580:  ret = btrfs_search_slot(NULL, extent_root, &key, path, 0, 0);",
          "2581:  if (ret < 0)",
          "2582:   goto out;",
          "2585:  ret = -ENOENT;",
          "2586:  if (path->slots[0] == 0)",
          "",
          "[Removed Lines]",
          "2583:  BUG_ON(ret == 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2734:  }",
          "2735:  return 0;",
          "2736: fail:",
          "2738:  return ret;",
          "2739: }",
          "",
          "[Removed Lines]",
          "2737:  BUG();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2763:  ret = btrfs_search_slot(trans, extent_root, &cache->key, path, 0, 1);",
          "2764:  if (ret < 0)",
          "2765:   goto fail;",
          "2768:  leaf = path->nodes[0];",
          "2769:  bi = btrfs_item_ptr_offset(leaf, path->slots[0]);",
          "",
          "[Removed Lines]",
          "2766:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2771:  btrfs_mark_buffer_dirty(leaf);",
          "2772:  btrfs_release_path(path);",
          "2773: fail:",
          "2775:   return ret;",
          "2776:  return 0;",
          "2778: }",
          "",
          "[Removed Lines]",
          "2774:  if (ret)",
          "",
          "[Added Lines]",
          "2811:  if (ret) {",
          "2812:   btrfs_abort_transaction(trans, root, ret);",
          "2814:  }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2945:   if (last == 0) {",
          "2946:    err = btrfs_run_delayed_refs(trans, root,",
          "2947:            (unsigned long)-1);",
          "2949:   }",
          "2951:   cache = btrfs_lookup_first_block_group(root->fs_info, last);",
          "",
          "[Removed Lines]",
          "2948:    BUG_ON(err);",
          "",
          "[Added Lines]",
          "2988:     goto out;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2972:   last = cache->key.objectid + cache->key.offset;",
          "2974:   err = write_one_cache_group(trans, root, path, cache);",
          "2976:   btrfs_put_block_group(cache);",
          "2977:  }",
          "",
          "[Removed Lines]",
          "2975:   BUG_ON(err);",
          "",
          "[Added Lines]",
          "3016:    goto out;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2985:   if (last == 0) {",
          "2986:    err = btrfs_run_delayed_refs(trans, root,",
          "2987:            (unsigned long)-1);",
          "2989:   }",
          "2991:   cache = btrfs_lookup_first_block_group(root->fs_info, last);",
          "",
          "[Removed Lines]",
          "2988:    BUG_ON(err);",
          "",
          "[Added Lines]",
          "3031:     goto out;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3010:    continue;",
          "3011:   }",
          "3020:    cache->disk_cache_state = BTRFS_DC_WRITTEN;",
          "3021:   last = cache->key.objectid + cache->key.offset;",
          "3022:   btrfs_put_block_group(cache);",
          "3023:  }",
          "3025:  btrfs_free_path(path);",
          "3027: }",
          "3029: int btrfs_extent_readonly(struct btrfs_root *root, u64 bytenr)",
          "",
          "[Removed Lines]",
          "3013:   btrfs_write_out_cache(root, trans, cache, path);",
          "3019:   if (cache->disk_cache_state == BTRFS_DC_NEED_WRITE)",
          "3026:  return 0;",
          "",
          "[Added Lines]",
          "3056:   err = btrfs_write_out_cache(root, trans, cache, path);",
          "3062:   if (!err && cache->disk_cache_state == BTRFS_DC_NEED_WRITE)",
          "3067: out:",
          "3070:  return err;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3407:  if (!space_info) {",
          "3408:   ret = update_space_info(extent_root->fs_info, flags,",
          "3409:      0, 0, &space_info);",
          "3411:  }",
          "3414: again:",
          "3415:  spin_lock(&space_info->lock);",
          "",
          "[Removed Lines]",
          "3410:   BUG_ON(ret);",
          "3412:  BUG_ON(!space_info);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "3674:   ret = wait_event_interruptible(space_info->wait,",
          "3675:             !space_info->flush);",
          "3678:    return -EINTR;",
          "3680:   spin_lock(&space_info->lock);",
          "3681:  }",
          "",
          "[Removed Lines]",
          "3677:   if (ret)",
          "",
          "[Added Lines]",
          "3721:   if (ret) {",
          "3722:    printk(KERN_DEBUG \"btrfs: %s returning -EINTR\\n\", __func__);",
          "3724:   }",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "3832:  return ret;",
          "3833: }",
          "3837: {",
          "3838:  struct btrfs_block_rsv *block_rsv = NULL;",
          "",
          "[Removed Lines]",
          "3835: static struct btrfs_block_rsv *get_block_rsv(struct btrfs_trans_handle *trans,",
          "3836:           struct btrfs_root *root)",
          "",
          "[Added Lines]",
          "3881: static struct btrfs_block_rsv *get_block_rsv(",
          "3882:      const struct btrfs_trans_handle *trans,",
          "3883:      const struct btrfs_root *root)",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "4536:  while (total) {",
          "4537:   cache = btrfs_lookup_block_group(info, bytenr);",
          "4538:   if (!cache)",
          "4540:   if (cache->flags & (BTRFS_BLOCK_GROUP_DUP |",
          "4541:         BTRFS_BLOCK_GROUP_RAID1 |",
          "4542:         BTRFS_BLOCK_GROUP_RAID10))",
          "",
          "[Removed Lines]",
          "4539:    return -1;",
          "",
          "[Added Lines]",
          "4587:    return -ENOENT;",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4639:  struct btrfs_block_group_cache *cache;",
          "4641:  cache = btrfs_lookup_block_group(root->fs_info, bytenr);",
          "4644:  pin_down_extent(root, cache, bytenr, num_bytes, reserved);",
          "",
          "[Removed Lines]",
          "4642:  BUG_ON(!cache);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4657:  struct btrfs_block_group_cache *cache;",
          "4659:  cache = btrfs_lookup_block_group(root->fs_info, bytenr);",
          "",
          "[Removed Lines]",
          "4660:  BUG_ON(!cache);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "4774:    if (cache)",
          "4775:     btrfs_put_block_group(cache);",
          "4776:    cache = btrfs_lookup_block_group(fs_info, start);",
          "4778:   }",
          "4780:   len = cache->key.objectid + cache->key.offset - start;",
          "",
          "[Removed Lines]",
          "4777:    BUG_ON(!cache);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "4811:  u64 end;",
          "4812:  int ret;",
          "4814:  if (fs_info->pinned_extents == &fs_info->freed_extents[0])",
          "4815:   unpin = &fs_info->freed_extents[1];",
          "4816:  else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4863:  if (trans->aborted)",
          "4864:   return 0;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "4896:    ret = remove_extent_backref(trans, extent_root, path,",
          "4897:           NULL, refs_to_drop,",
          "4898:           is_data);",
          "4900:    btrfs_release_path(path);",
          "4901:    path->leave_spinning = 1;",
          "",
          "[Removed Lines]",
          "4899:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "4951:    if (ret)",
          "4952:     goto abort;",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "4914:      btrfs_print_leaf(extent_root,",
          "4915:         path->nodes[0]);",
          "4916:    }",
          "4918:    extent_slot = path->slots[0];",
          "4919:   }",
          "4921:   btrfs_print_leaf(extent_root, path->nodes[0]);",
          "4922:   WARN_ON(1);",
          "4923:   printk(KERN_ERR \"btrfs unable to find ref byte nr %llu \"",
          "",
          "[Removed Lines]",
          "4917:    BUG_ON(ret);",
          "4920:  } else {",
          "",
          "[Added Lines]",
          "4970:    if (ret < 0)",
          "4971:     goto abort;",
          "4974:  } else if (ret == -ENOENT) {",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "4927:          (unsigned long long)root_objectid,",
          "4928:          (unsigned long long)owner_objectid,",
          "4929:          (unsigned long long)owner_offset);",
          "4930:  }",
          "4932:  leaf = path->nodes[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4984:  } else {",
          "4985:   goto abort;",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "4936:   BUG_ON(found_extent || extent_slot != path->slots[0]);",
          "4937:   ret = convert_extent_item_v0(trans, extent_root, path,",
          "4938:           owner_objectid, 0);",
          "4941:   btrfs_release_path(path);",
          "4942:   path->leave_spinning = 1;",
          "",
          "[Removed Lines]",
          "4939:   BUG_ON(ret < 0);",
          "",
          "[Added Lines]",
          "4995:   if (ret < 0)",
          "4996:    goto abort;",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "4953:           (unsigned long long)bytenr);",
          "4954:    btrfs_print_leaf(extent_root, path->nodes[0]);",
          "4955:   }",
          "4957:   extent_slot = path->slots[0];",
          "4958:   leaf = path->nodes[0];",
          "4959:   item_size = btrfs_item_size_nr(leaf, extent_slot);",
          "",
          "[Removed Lines]",
          "4956:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "5013:   if (ret < 0)",
          "5014:    goto abort;",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "4990:    ret = remove_extent_backref(trans, extent_root, path,",
          "4991:           iref, refs_to_drop,",
          "4992:           is_data);",
          "4994:   }",
          "4995:  } else {",
          "4996:   if (found_extent) {",
          "",
          "[Removed Lines]",
          "4993:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "5051:    if (ret)",
          "5052:     goto abort;",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "5008:   ret = btrfs_del_items(trans, extent_root, path, path->slots[0],",
          "5009:           num_to_del);",
          "5011:   btrfs_release_path(path);",
          "5013:   if (is_data) {",
          "5014:    ret = btrfs_del_csums(trans, root, bytenr, num_bytes);",
          "5016:   } else {",
          "5017:    invalidate_mapping_pages(info->btree_inode->i_mapping,",
          "5018:         bytenr >> PAGE_CACHE_SHIFT,",
          "",
          "[Removed Lines]",
          "5010:   BUG_ON(ret);",
          "5015:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "5069:   if (ret)",
          "5070:    goto abort;",
          "5075:    if (ret)",
          "5076:     goto abort;",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "5020:   }",
          "5022:   ret = update_block_group(trans, root, bytenr, num_bytes, 0);",
          "5024:  }",
          "5025:  btrfs_free_path(path);",
          "5026:  return ret;",
          "5027: }",
          "",
          "[Removed Lines]",
          "5023:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "5084:   if (ret)",
          "5085:    goto abort;",
          "5087: out:",
          "5091: abort:",
          "5092:  btrfs_abort_transaction(trans, extent_root, ret);",
          "5093:  goto out;",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "5119:      parent, root->root_key.objectid,",
          "5120:      btrfs_header_level(buf),",
          "5121:      BTRFS_DROP_DELAYED_REF, NULL, for_cow);",
          "5123:  }",
          "5125:  if (!last_ref)",
          "",
          "[Removed Lines]",
          "5122:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "5174:      num_bytes,",
          "5175:      parent, root_objectid, (int)owner,",
          "5176:      BTRFS_DROP_DELAYED_REF, NULL, for_cow);",
          "5178:  } else {",
          "5179:   ret = btrfs_add_delayed_data_ref(fs_info, trans, bytenr,",
          "5180:       num_bytes,",
          "5181:       parent, root_objectid, owner,",
          "5182:       offset, BTRFS_DROP_DELAYED_REF,",
          "5183:       NULL, for_cow);",
          "5185:  }",
          "5186:  return ret;",
          "5187: }",
          "",
          "[Removed Lines]",
          "5177:   BUG_ON(ret);",
          "5184:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "5439:    if (loop > LOOP_FIND_IDEAL) {",
          "5440:     ret = cache_block_group(block_group, trans,",
          "5441:        orig_root, 0);",
          "5443:    }",
          "",
          "[Removed Lines]",
          "5442:     BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "5712:     ret = do_chunk_alloc(trans, root, num_bytes +",
          "5713:            2 * 1024 * 1024, data,",
          "5714:            CHUNK_ALLOC_LIMITED);",
          "5715:     allowed_chunk_alloc = 0;",
          "5716:     if (ret == 1)",
          "5717:      done_chunk_alloc = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5782:     if (ret < 0) {",
          "5783:      btrfs_abort_transaction(trans,",
          "5784:         root, ret);",
          "5785:      goto out;",
          "5786:     }",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "5740:  } else if (ins->objectid) {",
          "5741:   ret = 0;",
          "5742:  }",
          "5744:  return ret;",
          "5745: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5815: out:",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "5810:   ret = do_chunk_alloc(trans, root->fs_info->extent_root,",
          "5811:          num_bytes + 2 * 1024 * 1024, data,",
          "5812:          CHUNK_ALLOC_NO_FORCE);",
          "5814:  WARN_ON(num_bytes < root->sectorsize);",
          "5815:  ret = find_free_extent(trans, root, num_bytes, empty_size,",
          "",
          "[Removed Lines]",
          "5809:  if (empty_size || root->ref_cows)",
          "",
          "[Added Lines]",
          "5882:  if (empty_size || root->ref_cows) {",
          "5886:   if (ret < 0 && ret != -ENOSPC) {",
          "5887:    btrfs_abort_transaction(trans, root, ret);",
          "5888:    return ret;",
          "5889:   }",
          "5890:  }",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "5821:    num_bytes = num_bytes >> 1;",
          "5822:    num_bytes = num_bytes & ~(root->sectorsize - 1);",
          "5823:    num_bytes = max(num_bytes, min_alloc_size);",
          "5825:            num_bytes, data, CHUNK_ALLOC_FORCE);",
          "5826:    if (num_bytes == min_alloc_size)",
          "5827:     final_tried = true;",
          "5828:    goto again;",
          "",
          "[Removed Lines]",
          "5824:    do_chunk_alloc(trans, root->fs_info->extent_root,",
          "",
          "[Added Lines]",
          "5902:    ret = do_chunk_alloc(trans, root->fs_info->extent_root,",
          "5904:    if (ret < 0 && ret != -ENOSPC) {",
          "5905:     btrfs_abort_transaction(trans, root, ret);",
          "5906:     return ret;",
          "5907:    }",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "5913:  path->leave_spinning = 1;",
          "5914:  ret = btrfs_insert_empty_item(trans, fs_info->extent_root, path,",
          "5915:           ins, size);",
          "5918:  leaf = path->nodes[0];",
          "5919:  extent_item = btrfs_item_ptr(leaf, path->slots[0],",
          "",
          "[Removed Lines]",
          "5916:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "5998:  if (ret) {",
          "5999:   btrfs_free_path(path);",
          "6000:   return ret;",
          "6001:  }",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "5943:  btrfs_free_path(path);",
          "5945:  ret = update_block_group(trans, root, ins->objectid, ins->offset, 1);",
          "5947:   printk(KERN_ERR \"btrfs update block group failed for %llu \"",
          "5948:          \"%llu\\n\", (unsigned long long)ins->objectid,",
          "5949:          (unsigned long long)ins->offset);",
          "",
          "[Removed Lines]",
          "5946:  if (ret) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "5974:  path->leave_spinning = 1;",
          "5975:  ret = btrfs_insert_empty_item(trans, fs_info->extent_root, path,",
          "5976:           ins, size);",
          "5979:  leaf = path->nodes[0];",
          "5980:  extent_item = btrfs_item_ptr(leaf, path->slots[0],",
          "",
          "[Removed Lines]",
          "5977:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "6062:  if (ret) {",
          "6063:   btrfs_free_path(path);",
          "6064:   return ret;",
          "6065:  }",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "6004:  btrfs_free_path(path);",
          "6006:  ret = update_block_group(trans, root, ins->objectid, ins->offset, 1);",
          "6008:   printk(KERN_ERR \"btrfs update block group failed for %llu \"",
          "6009:          \"%llu\\n\", (unsigned long long)ins->objectid,",
          "6010:          (unsigned long long)ins->offset);",
          "",
          "[Removed Lines]",
          "6007:  if (ret) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "6052:  if (!caching_ctl) {",
          "6053:   BUG_ON(!block_group_cache_done(block_group));",
          "6054:   ret = btrfs_remove_free_space(block_group, start, num_bytes);",
          "6056:  } else {",
          "6057:   mutex_lock(&caching_ctl->mutex);",
          "6059:   if (start >= caching_ctl->progress) {",
          "6060:    ret = add_excluded_extent(root, start, num_bytes);",
          "6062:   } else if (start + num_bytes <= caching_ctl->progress) {",
          "6063:    ret = btrfs_remove_free_space(block_group,",
          "6064:             start, num_bytes);",
          "6066:   } else {",
          "6067:    num_bytes = caching_ctl->progress - start;",
          "6068:    ret = btrfs_remove_free_space(block_group,",
          "6069:             start, num_bytes);",
          "6072:    start = caching_ctl->progress;",
          "6073:    num_bytes = ins->objectid + ins->offset -",
          "6074:         caching_ctl->progress;",
          "6075:    ret = add_excluded_extent(root, start, num_bytes);",
          "6077:   }",
          "6079:   mutex_unlock(&caching_ctl->mutex);",
          "",
          "[Removed Lines]",
          "6055:   BUG_ON(ret);",
          "6061:    BUG_ON(ret);",
          "6065:    BUG_ON(ret);",
          "6070:    BUG_ON(ret);",
          "6076:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "6083:  ret = btrfs_update_reserved_bytes(block_group, ins->offset,",
          "6084:        RESERVE_ALLOC_NO_ACCOUNT);",
          "6086:  btrfs_put_block_group(block_group);",
          "6087:  ret = alloc_reserved_file_extent(trans, root, 0, root_objectid,",
          "6088:       0, owner, offset, ins, 1);",
          "",
          "[Removed Lines]",
          "6085:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "6219:  buf = btrfs_init_new_buffer(trans, root, ins.objectid,",
          "6220:         blocksize, level);",
          "6223:  if (root_objectid == BTRFS_TREE_RELOC_OBJECTID) {",
          "6224:   if (parent == 0)",
          "",
          "[Removed Lines]",
          "6221:  BUG_ON(IS_ERR(buf));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "6230:  if (root_objectid != BTRFS_TREE_LOG_OBJECTID) {",
          "6231:   struct btrfs_delayed_extent_op *extent_op;",
          "6232:   extent_op = kmalloc(sizeof(*extent_op), GFP_NOFS);",
          "6234:   if (key)",
          "6235:    memcpy(&extent_op->key, key, sizeof(extent_op->key));",
          "6236:   else",
          "",
          "[Removed Lines]",
          "6233:   BUG_ON(!extent_op);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "6245:      ins.offset, parent, root_objectid,",
          "6246:      level, BTRFS_ADD_DELAYED_EXTENT,",
          "6247:      extent_op, for_cow);",
          "6249:  }",
          "6250:  return buf;",
          "6251: }",
          "",
          "[Removed Lines]",
          "6248:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "6316:   ret = btrfs_lookup_extent_info(trans, root, bytenr, blocksize,",
          "6317:             &refs, &flags);",
          "6319:   BUG_ON(refs == 0);",
          "6321:   if (wc->stage == DROP_REFERENCE) {",
          "",
          "[Removed Lines]",
          "6318:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "6407:   if (ret < 0)",
          "6408:    continue;",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "6382:             eb->start, eb->len,",
          "6383:             &wc->refs[level],",
          "6384:             &wc->flags[level]);",
          "6386:   BUG_ON(wc->refs[level] == 0);",
          "6387:  }",
          "",
          "[Removed Lines]",
          "6385:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "6475:   BUG_ON(ret == -ENOMEM);",
          "6476:   if (ret)",
          "6477:    return ret;",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "6401:  if (!(wc->flags[level] & flag)) {",
          "6402:   BUG_ON(!path->locks[level]);",
          "6403:   ret = btrfs_inc_ref(trans, root, eb, 1, wc->for_reloc);",
          "6405:   ret = btrfs_dec_ref(trans, root, eb, 0, wc->for_reloc);",
          "6407:   ret = btrfs_set_disk_extent_flags(trans, root, eb->start,",
          "6408:         eb->len, flag, 0);",
          "6410:   wc->flags[level] |= flag;",
          "6411:  }",
          "",
          "[Removed Lines]",
          "6404:   BUG_ON(ret);",
          "6406:   BUG_ON(ret);",
          "6409:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "6478:  ret = btrfs_lookup_extent_info(trans, root, bytenr, blocksize,",
          "6479:            &wc->refs[level - 1],",
          "6480:            &wc->flags[level - 1]);",
          "6482:  BUG_ON(wc->refs[level - 1] == 0);",
          "",
          "[Removed Lines]",
          "6481:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "6573:  if (ret < 0) {",
          "6574:   btrfs_tree_unlock(next);",
          "6575:   return ret;",
          "6576:  }",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "6548:   ret = btrfs_free_extent(trans, root, bytenr, blocksize, parent,",
          "6549:     root->root_key.objectid, level - 1, 0, 0);",
          "6551:  }",
          "6552:  btrfs_tree_unlock(next);",
          "6553:  free_extent_buffer(next);",
          "",
          "[Removed Lines]",
          "6550:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "6605:              eb->start, eb->len,",
          "6606:              &wc->refs[level],",
          "6607:              &wc->flags[level]);",
          "6609:    BUG_ON(wc->refs[level] == 0);",
          "6610:    if (wc->refs[level] == 1) {",
          "6611:     btrfs_tree_unlock_rw(eb, path->locks[level]);",
          "",
          "[Removed Lines]",
          "6608:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "6704:    if (ret < 0) {",
          "6705:     btrfs_tree_unlock_rw(eb, path->locks[level]);",
          "6706:     return ret;",
          "6707:    }",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "6625:    else",
          "6626:     ret = btrfs_dec_ref(trans, root, eb, 0,",
          "6627:           wc->for_reloc);",
          "6629:   }",
          "6631:   if (!path->locks[level] &&",
          "",
          "[Removed Lines]",
          "6628:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "6762:  }",
          "6764:  trans = btrfs_start_transaction(tree_root, 0);",
          "6767:  if (block_rsv)",
          "6768:   trans->block_rsv = block_rsv;",
          "",
          "[Removed Lines]",
          "6765:  BUG_ON(IS_ERR(trans));",
          "",
          "[Added Lines]",
          "6864:  if (IS_ERR(trans)) {",
          "6865:   err = PTR_ERR(trans);",
          "6866:   goto out_free;",
          "6867:  }",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "6787:   path->lowest_level = 0;",
          "6788:   if (ret < 0) {",
          "6789:    err = ret;",
          "6791:   }",
          "6792:   WARN_ON(ret > 0);",
          "",
          "[Removed Lines]",
          "6790:    goto out_free;",
          "",
          "[Added Lines]",
          "6892:    goto out_end_trans;",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "6807:       path->nodes[level]->len,",
          "6808:       &wc->refs[level],",
          "6809:       &wc->flags[level]);",
          "6811:    BUG_ON(wc->refs[level] == 0);",
          "6813:    if (level == root_item->drop_level)",
          "",
          "[Removed Lines]",
          "6810:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "6912:    if (ret < 0) {",
          "6913:     err = ret;",
          "6914:     goto out_end_trans;",
          "6915:    }",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "6858:    ret = btrfs_update_root(trans, tree_root,",
          "6859:       &root->root_key,",
          "6860:       root_item);",
          "6863:    btrfs_end_transaction_throttle(trans, tree_root);",
          "6864:    trans = btrfs_start_transaction(tree_root, 0);",
          "6866:    if (block_rsv)",
          "6867:     trans->block_rsv = block_rsv;",
          "6868:   }",
          "6869:  }",
          "6870:  btrfs_release_path(path);",
          "6873:  ret = btrfs_del_root(trans, tree_root, &root->root_key);",
          "6876:  if (root->root_key.objectid != BTRFS_TREE_RELOC_OBJECTID) {",
          "6877:   ret = btrfs_find_last_root(tree_root, root->root_key.objectid,",
          "6878:         NULL, NULL);",
          "",
          "[Removed Lines]",
          "6861:    BUG_ON(ret);",
          "6865:    BUG_ON(IS_ERR(trans));",
          "6871:  BUG_ON(err);",
          "6874:  BUG_ON(ret);",
          "6879:   BUG_ON(ret < 0);",
          "6880:   if (ret > 0) {",
          "",
          "[Added Lines]",
          "6966:    if (ret) {",
          "6967:     btrfs_abort_transaction(trans, tree_root, ret);",
          "6968:     err = ret;",
          "6969:     goto out_end_trans;",
          "6970:    }",
          "6974:    if (IS_ERR(trans)) {",
          "6975:     err = PTR_ERR(trans);",
          "6976:     goto out_free;",
          "6977:    }",
          "6983:  if (err)",
          "6984:   goto out_end_trans;",
          "6987:  if (ret) {",
          "6988:   btrfs_abort_transaction(trans, tree_root, ret);",
          "6989:   goto out_end_trans;",
          "6990:  }",
          "6995:   if (ret < 0) {",
          "6996:    btrfs_abort_transaction(trans, tree_root, ret);",
          "6997:    err = ret;",
          "6998:    goto out_end_trans;",
          "6999:   } else if (ret > 0) {",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "6895:   free_extent_buffer(root->commit_root);",
          "6896:   kfree(root);",
          "6897:  }",
          "6899:  btrfs_end_transaction_throttle(trans, tree_root);",
          "6900:  kfree(wc);",
          "6901:  btrfs_free_path(path);",
          "6902: out:",
          "",
          "[Removed Lines]",
          "6898: out_free:",
          "",
          "[Added Lines]",
          "7017: out_end_trans:",
          "7019: out_free:",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "7099:  BUG_ON(cache->ro);",
          "7101:  trans = btrfs_join_transaction(root);",
          "7104:  alloc_flags = update_block_group_flags(root, cache->flags);",
          "7109:  ret = set_block_group_ro(cache, 0);",
          "7110:  if (!ret)",
          "",
          "[Removed Lines]",
          "7102:  BUG_ON(IS_ERR(trans));",
          "7105:  if (alloc_flags != cache->flags)",
          "7106:   do_chunk_alloc(trans, root, 2 * 1024 * 1024, alloc_flags,",
          "7107:           CHUNK_ALLOC_FORCE);",
          "",
          "[Added Lines]",
          "7222:  if (IS_ERR(trans))",
          "7223:   return PTR_ERR(trans);",
          "7226:  if (alloc_flags != cache->flags) {",
          "7227:   ret = do_chunk_alloc(trans, root, 2 * 1024 * 1024, alloc_flags,",
          "7228:          CHUNK_ALLOC_FORCE);",
          "7229:   if (ret < 0)",
          "7230:    goto out;",
          "7231:  }",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "7567:   ret = update_space_info(info, cache->flags, found_key.offset,",
          "7568:      btrfs_block_group_used(&cache->item),",
          "7569:      &space_info);",
          "7571:   cache->space_info = space_info;",
          "7572:   spin_lock(&cache->space_info->lock);",
          "7573:   cache->space_info->bytes_readonly += cache->bytes_super;",
          "",
          "[Removed Lines]",
          "7570:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "7576:   __link_block_group(space_info, cache);",
          "7578:   ret = btrfs_add_block_group_cache(root->fs_info, cache);",
          "7581:   set_avail_alloc_bits(root->fs_info, cache->flags);",
          "7582:   if (btrfs_chunk_readonly(root, cache->key.objectid))",
          "",
          "[Removed Lines]",
          "7579:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "7659:  ret = update_space_info(root->fs_info, cache->flags, size, bytes_used,",
          "7660:     &cache->space_info);",
          "7662:  update_global_block_rsv(root->fs_info);",
          "7664:  spin_lock(&cache->space_info->lock);",
          "",
          "[Removed Lines]",
          "7661:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "7668:  __link_block_group(cache->space_info, cache);",
          "7670:  ret = btrfs_add_block_group_cache(root->fs_info, cache);",
          "7673:  ret = btrfs_insert_item(trans, extent_root, &cache->key, &cache->item,",
          "7674:     sizeof(cache->item));",
          "7677:  set_avail_alloc_bits(extent_root->fs_info, type);",
          "",
          "[Removed Lines]",
          "7671:  BUG_ON(ret);",
          "7675:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "7799:  if (ret) {",
          "7800:   btrfs_abort_transaction(trans, extent_root, ret);",
          "7801:   return ret;",
          "7802:  }",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "7753:  inode = lookup_free_space_inode(tree_root, block_group, path);",
          "7754:  if (!IS_ERR(inode)) {",
          "7755:   ret = btrfs_orphan_add(trans, inode);",
          "7757:   clear_nlink(inode);",
          "7759:   spin_lock(&block_group->lock);",
          "",
          "[Removed Lines]",
          "7756:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "7883:   if (ret) {",
          "7884:    btrfs_add_delayed_iput(inode);",
          "7885:    goto out;",
          "7886:   }",
          "",
          "---------------"
        ],
        "fs/btrfs/extent_io.c||fs/btrfs/extent_io.c": [
          "File: fs/btrfs/extent_io.c -> fs/btrfs/extent_io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1245:  while (index <= end_index) {",
          "1246:   page = find_get_page(tree->mapping, index);",
          "1248:   set_page_writeback(page);",
          "1249:   page_cache_release(page);",
          "1250:   index++;",
          "",
          "[Removed Lines]",
          "1247:   BUG_ON(!page);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1523:    goto out_failed;",
          "1524:   }",
          "1525:  }",
          "1529:  lock_extent_bits(tree, delalloc_start, delalloc_end, 0, &cached_state);",
          "",
          "[Removed Lines]",
          "1526:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2201:   if (ret == 0)",
          "2202:    return 1;",
          "2204:  }",
          "2206:  if (!uptodate) {",
          "",
          "[Removed Lines]",
          "2203:   BUG_ON(ret < 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2353:     if (ret == 0)",
          "2354:      goto error_handled;",
          "2355:    }",
          "2357:   }",
          "2359:   if (uptodate) {",
          "",
          "[Removed Lines]",
          "2356:    BUG_ON(ret < 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2477:       bio_add_page(bio, page, page_size, offset) < page_size) {",
          "2478:    ret = submit_one_bio(rw, bio, mirror_num,",
          "2479:           prev_bio_flags);",
          "2481:    bio = NULL;",
          "2482:   } else {",
          "2483:    return 0;",
          "",
          "[Removed Lines]",
          "2480:    BUG_ON(ret < 0);",
          "",
          "[Added Lines]",
          "2482:    if (ret < 0)",
          "2483:     return ret;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2499:  if (bio_ret)",
          "2502:   ret = submit_one_bio(rw, bio, mirror_num, bio_flags);",
          "2506:  return ret;",
          "2507: }",
          "",
          "[Removed Lines]",
          "2501:  else {",
          "2503:   BUG_ON(ret < 0);",
          "2504:  }",
          "",
          "[Added Lines]",
          "2504:  else",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2687:       end_bio_extent_readpage, mirror_num,",
          "2689:       this_bio_flag);",
          "2690:    nr++;",
          "2692:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2692:    BUG_ON(ret == -ENOMEM);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2714:  ret = __extent_read_full_page(tree, page, get_extent, &bio, mirror_num,",
          "2715:           &bio_flags);",
          "2717:   ret = submit_one_bio(READ, bio, mirror_num, bio_flags);",
          "2720:  return ret;",
          "2721: }",
          "",
          "[Removed Lines]",
          "2716:  if (bio) {",
          "2718:   BUG_ON(ret < 0);",
          "2719:  }",
          "",
          "[Added Lines]",
          "2719:  if (bio)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2830:              delalloc_end,",
          "2831:              &page_started,",
          "2832:              &nr_written);",
          "",
          "[Removed Lines]",
          "2833:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2835:    if (ret) {",
          "2836:     SetPageError(page);",
          "2837:     goto done;",
          "2838:    }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3141:    rw = WRITE_SYNC;",
          "3143:   ret = submit_one_bio(rw, epd->bio, 0, 0);",
          "3145:   epd->bio = NULL;",
          "3146:  }",
          "3147: }",
          "",
          "[Removed Lines]",
          "3144:   BUG_ON(ret < 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3257:   page_cache_release(page);",
          "3258:  }",
          "3259:  BUG_ON(!list_empty(pages));",
          "3264:  return 0;",
          "3265: }",
          "",
          "[Removed Lines]",
          "3260:  if (bio) {",
          "3261:   int ret = submit_one_bio(READ, bio, 0, bio_flags);",
          "3262:   BUG_ON(ret < 0);",
          "3263:  }",
          "",
          "[Added Lines]",
          "3265:  if (bio)",
          "3266:   return submit_one_bio(READ, bio, 0, bio_flags);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4091:  if (bio) {",
          "4092:   err = submit_one_bio(READ, bio, mirror_num, bio_flags);",
          "4094:  }",
          "4096:  if (ret || wait != WAIT_COMPLETE)",
          "",
          "[Removed Lines]",
          "4093:   BUG_ON(err < 0);",
          "",
          "[Added Lines]",
          "4096:   if (err)",
          "4097:    return err;",
          "",
          "---------------"
        ],
        "fs/btrfs/file-item.c||fs/btrfs/file-item.c": [
          "File: fs/btrfs/file-item.c -> fs/btrfs/file-item.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:           sizeof(*item));",
          "60:  if (ret < 0)",
          "61:   goto out;",
          "63:  leaf = path->nodes[0];",
          "64:  item = btrfs_item_ptr(leaf, path->slots[0],",
          "65:          struct btrfs_file_extent_item);",
          "",
          "[Removed Lines]",
          "62:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "431:   offset = page_offset(bvec->bv_page) + bvec->bv_offset;",
          "433:  ordered = btrfs_lookup_ordered_extent(inode, offset);",
          "435:  sums->bytenr = ordered->start;",
          "437:  while (bio_index < bio->bi_vcnt) {",
          "",
          "[Removed Lines]",
          "434:  BUG_ON(!ordered);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "451:    sums = kzalloc(btrfs_ordered_sum_size(root, bytes_left),",
          "452:            GFP_NOFS);",
          "454:    sector_sum = sums->sums;",
          "455:    sums->len = bytes_left;",
          "456:    ordered = btrfs_lookup_ordered_extent(inode, offset);",
          "458:    sums->bytenr = ordered->start;",
          "459:   }",
          "",
          "[Removed Lines]",
          "453:    BUG_ON(!sums);",
          "457:    BUG_ON(!ordered);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "645:    ret = btrfs_split_item(trans, root, path, &key, offset);",
          "648:    key.offset = end_byte - 1;",
          "649:   } else {",
          "",
          "[Removed Lines]",
          "646:    BUG_ON(ret && ret != -EAGAIN);",
          "",
          "[Added Lines]",
          "646:    if (ret && ret != -EAGAIN) {",
          "647:     btrfs_abort_transaction(trans, root, ret);",
          "648:     goto out;",
          "649:    }",
          "",
          "---------------"
        ],
        "fs/btrfs/file.c||fs/btrfs/file.c": [
          "File: fs/btrfs/file.c -> fs/btrfs/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "452:    split = alloc_extent_map();",
          "453:   if (!split2)",
          "454:    split2 = alloc_extent_map();",
          "457:   write_lock(&em_tree->lock);",
          "458:   em = lookup_extent_mapping(em_tree, start, len);",
          "",
          "[Removed Lines]",
          "455:   BUG_ON(!split || !split2);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "494:    split->flags = flags;",
          "495:    split->compress_type = em->compress_type;",
          "496:    ret = add_extent_mapping(em_tree, split);",
          "498:    free_extent_map(split);",
          "499:    split = split2;",
          "500:    split2 = NULL;",
          "",
          "[Removed Lines]",
          "497:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "520:    }",
          "522:    ret = add_extent_mapping(em_tree, split);",
          "524:    free_extent_map(split);",
          "525:    split = NULL;",
          "526:   }",
          "",
          "[Removed Lines]",
          "523:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "679:       root->root_key.objectid,",
          "680:       new_key.objectid,",
          "681:       start - extent_offset, 0);",
          "684:    }",
          "685:    key.offset = start;",
          "",
          "[Removed Lines]",
          "682:     BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "754:       root->root_key.objectid,",
          "755:       key.objectid, key.offset -",
          "756:       extent_offset, 0);",
          "758:     inode_sub_bytes(inode,",
          "759:       extent_end - key.offset);",
          "",
          "[Removed Lines]",
          "757:     BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "771:    ret = btrfs_del_items(trans, root, path, del_slot,",
          "772:            del_nr);",
          "775:    del_nr = 0;",
          "776:    del_slot = 0;",
          "",
          "[Removed Lines]",
          "773:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "773:    if (ret) {",
          "774:     btrfs_abort_transaction(trans, root, ret);",
          "775:     goto out;",
          "776:    }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "782:   BUG_ON(1);",
          "783:  }",
          "786:   ret = btrfs_del_items(trans, root, path, del_slot, del_nr);",
          "788:  }",
          "790:  btrfs_free_path(path);",
          "791:  return ret;",
          "792: }",
          "",
          "[Removed Lines]",
          "785:  if (del_nr > 0) {",
          "787:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "788:  if (!ret && del_nr > 0) {",
          "790:   if (ret)",
          "791:    btrfs_abort_transaction(trans, root, ret);",
          "794: out:",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "944:    btrfs_release_path(path);",
          "945:    goto again;",
          "946:   }",
          "949:   leaf = path->nodes[0];",
          "950:   fi = btrfs_item_ptr(leaf, path->slots[0] - 1,",
          "",
          "[Removed Lines]",
          "947:   BUG_ON(ret < 0);",
          "",
          "[Added Lines]",
          "952:   if (ret < 0) {",
          "953:    btrfs_abort_transaction(trans, root, ret);",
          "954:    goto out;",
          "955:   }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "963:   ret = btrfs_inc_extent_ref(trans, root, bytenr, num_bytes, 0,",
          "964:         root->root_key.objectid,",
          "965:         ino, orig_offset, 0);",
          "968:   if (split == start) {",
          "969:    key.offset = start;",
          "",
          "[Removed Lines]",
          "966:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "990:   ret = btrfs_free_extent(trans, root, bytenr, num_bytes,",
          "991:      0, root->root_key.objectid,",
          "992:      ino, orig_offset, 0);",
          "994:  }",
          "995:  other_start = 0;",
          "996:  other_end = start;",
          "",
          "[Removed Lines]",
          "993:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1007:   ret = btrfs_free_extent(trans, root, bytenr, num_bytes,",
          "1008:      0, root->root_key.objectid,",
          "1009:      ino, orig_offset, 0);",
          "1011:  }",
          "1012:  if (del_nr == 0) {",
          "1013:   fi = btrfs_item_ptr(leaf, path->slots[0],",
          "",
          "[Removed Lines]",
          "1010:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1025:   btrfs_mark_buffer_dirty(leaf);",
          "1027:   ret = btrfs_del_items(trans, root, path, del_slot, del_nr);",
          "1029:  }",
          "1030: out:",
          "1031:  btrfs_free_path(path);",
          "",
          "[Removed Lines]",
          "1028:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1036:   if (ret < 0) {",
          "1037:    btrfs_abort_transaction(trans, root, ret);",
          "1038:    goto out;",
          "1039:   }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1667:   em = btrfs_get_extent(inode, NULL, 0, cur_offset,",
          "1668:           alloc_end - cur_offset, 0);",
          "1670:   last_byte = min(extent_map_end(em), alloc_end);",
          "1671:   actual_end = min_t(u64, extent_map_end(em), offset + len);",
          "1672:   last_byte = (last_byte + mask) & ~mask;",
          "",
          "[Removed Lines]",
          "1669:   BUG_ON(IS_ERR_OR_NULL(em));",
          "",
          "[Added Lines]",
          "1680:   if (IS_ERR_OR_NULL(em)) {",
          "1681:    if (!em)",
          "1682:     ret = -ENOMEM;",
          "1683:    else",
          "1684:     ret = PTR_ERR(em);",
          "1685:    break;",
          "1686:   }",
          "",
          "---------------"
        ],
        "fs/btrfs/free-space-cache.c||fs/btrfs/free-space-cache.c": [
          "File: fs/btrfs/free-space-cache.c -> fs/btrfs/free-space-cache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:  if (ret) {",
          "232:   trans->block_rsv = rsv;",
          "234:   return ret;",
          "235:  }",
          "237:  ret = btrfs_update_inode(trans, root, inode);",
          "238:  trans->block_rsv = rsv;",
          "240:  return ret;",
          "",
          "[Removed Lines]",
          "233:   WARN_ON(1);",
          "",
          "[Added Lines]",
          "233:   btrfs_abort_transaction(trans, root, ret);",
          "238:  if (ret)",
          "239:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1949:   ret = btrfs_add_free_space(block_group, old_start,",
          "1950:         offset - old_start);",
          "1952:   goto out;",
          "1953:  }",
          "1955:  ret = remove_from_bitmap(ctl, info, &offset, &bytes);",
          "1956:  if (ret == -EAGAIN)",
          "1957:   goto again;",
          "1959: out_lock:",
          "1960:  spin_unlock(&ctl->tree_lock);",
          "1961: out:",
          "",
          "[Removed Lines]",
          "1951:   WARN_ON(ret);",
          "1958:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2346:  rb_erase(&entry->offset_index, &ctl->free_space_offset);",
          "2347:  ret = tree_insert_offset(&cluster->root, entry->offset,",
          "2348:      &entry->offset_index, 1);",
          "2351:  trace_btrfs_setup_cluster(block_group, cluster,",
          "2352:       total_found * block_group->sectorsize, 1);",
          "",
          "[Removed Lines]",
          "2349:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2439:   ret = tree_insert_offset(&cluster->root, entry->offset,",
          "2440:       &entry->offset_index, 0);",
          "2441:   total_size += entry->bytes;",
          "2443:  } while (node && entry != last);",
          "2445:  cluster->max_size = max_extent;",
          "",
          "[Removed Lines]",
          "2442:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/btrfs/inode-item.c||fs/btrfs/inode-item.c": [
          "File: fs/btrfs/inode-item.c -> fs/btrfs/inode-item.c"
        ],
        "fs/btrfs/inode-map.c||fs/btrfs/inode-map.c": [
          "File: fs/btrfs/inode-map.c -> fs/btrfs/inode-map.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:  tsk = kthread_run(caching_kthread, root, \"btrfs-ino-cache-%llu\\n\",",
          "180:      root->root_key.objectid);",
          "182: }",
          "184: int btrfs_find_free_ino(struct btrfs_root *root, u64 *objectid)",
          "",
          "[Removed Lines]",
          "181:  BUG_ON(IS_ERR(tsk));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "271:    break;",
          "273:   info = rb_entry(n, struct btrfs_free_space, offset_index);",
          "276:   if (info->offset > root->cache_progress)",
          "277:    goto free;",
          "",
          "[Removed Lines]",
          "274:   BUG_ON(info->bitmap);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "443:           trans->bytes_reserved, 1);",
          "444: again:",
          "445:  inode = lookup_free_ino_inode(root, path);",
          "447:   ret = PTR_ERR(inode);",
          "448:   goto out_release;",
          "449:  }",
          "451:  if (IS_ERR(inode)) {",
          "453:   retry = true;",
          "455:   ret = create_free_ino_inode(root, trans, path);",
          "",
          "[Removed Lines]",
          "446:  if (IS_ERR(inode) && PTR_ERR(inode) != -ENOENT) {",
          "452:   BUG_ON(retry);",
          "",
          "[Added Lines]",
          "446:  if (IS_ERR(inode) && (PTR_ERR(inode) != -ENOENT || retry)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "461:  BTRFS_I(inode)->generation = 0;",
          "462:  ret = btrfs_update_inode(trans, root, inode);",
          "465:  if (i_size_read(inode) > 0) {",
          "466:   ret = btrfs_truncate_free_space_cache(root, trans, path, inode);",
          "468:    goto out_put;",
          "469:  }",
          "471:  spin_lock(&root->cache_lock);",
          "",
          "[Removed Lines]",
          "463:  WARN_ON(ret);",
          "467:   if (ret)",
          "",
          "[Added Lines]",
          "463:  if (ret) {",
          "464:   btrfs_abort_transaction(trans, root, ret);",
          "465:   goto out_put;",
          "466:  }",
          "470:   if (ret) {",
          "471:    btrfs_abort_transaction(trans, root, ret);",
          "473:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "532:  ret = btrfs_search_slot(NULL, root, &search_key, path, 0, 0);",
          "533:  if (ret < 0)",
          "534:   goto error;",
          "536:  if (path->slots[0] > 0) {",
          "537:   slot = path->slots[0] - 1;",
          "538:   l = path->nodes[0];",
          "",
          "[Removed Lines]",
          "535:  BUG_ON(ret == 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/btrfs/inode.c||fs/btrfs/inode.c": [
          "File: fs/btrfs/inode.c -> fs/btrfs/inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:  inode_add_bytes(inode, size);",
          "151:  ret = btrfs_insert_empty_item(trans, root, path, &key,",
          "152:           datasize);",
          "154:  if (ret) {",
          "155:   err = ret;",
          "156:   goto fail;",
          "",
          "[Removed Lines]",
          "153:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "208:  BTRFS_I(inode)->disk_i_size = inode->i_size;",
          "212: fail:",
          "213:  btrfs_free_path(path);",
          "214:  return err;",
          "",
          "[Removed Lines]",
          "209:  btrfs_update_inode(trans, root, inode);",
          "211:  return 0;",
          "",
          "[Added Lines]",
          "208:  ret = btrfs_update_inode(trans, root, inode);",
          "210:  return ret;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "251:  ret = btrfs_drop_extents(trans, inode, start, aligned_end,",
          "252:      &hint_byte, 1);",
          "255:  if (isize > actual_end)",
          "256:   inline_len = min_t(u64, isize, actual_end);",
          "257:  ret = insert_inline_extent(trans, root, inode, start,",
          "258:        inline_len, compressed_size,",
          "259:        compress_type, compressed_pages);",
          "261:  btrfs_delalloc_release_metadata(inode, end + 1 - start);",
          "262:  btrfs_drop_extent_cache(inode, start, aligned_end - 1, 0);",
          "263:  return 0;",
          "",
          "[Removed Lines]",
          "253:  BUG_ON(ret);",
          "260:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "252:  if (ret)",
          "253:   return ret;",
          "260:  if (ret) {",
          "261:   btrfs_abort_transaction(trans, root, ret);",
          "262:   return ret;",
          "263:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "293:  struct async_extent *async_extent;",
          "295:  async_extent = kmalloc(sizeof(*async_extent), GFP_NOFS);",
          "297:  async_extent->start = start;",
          "298:  async_extent->ram_size = ram_size;",
          "299:  async_extent->compressed_size = compressed_size;",
          "",
          "[Removed Lines]",
          "296:  BUG_ON(!async_extent);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "433: cont:",
          "434:  if (start == 0) {",
          "435:   trans = btrfs_join_transaction(root);",
          "437:   trans->block_rsv = &root->fs_info->delalloc_block_rsv;",
          "",
          "[Removed Lines]",
          "436:   BUG_ON(IS_ERR(trans));",
          "",
          "[Added Lines]",
          "439:   if (IS_ERR(trans)) {",
          "440:    ret = PTR_ERR(trans);",
          "441:    trans = NULL;",
          "442:    goto cleanup_and_out;",
          "443:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "450:           total_compressed,",
          "451:           compress_type, pages);",
          "452:   }",
          "459:    extent_clear_unlock_delalloc(inode,",
          "460:         &BTRFS_I(inode)->io_tree,",
          "",
          "[Removed Lines]",
          "453:   if (ret == 0) {",
          "",
          "[Added Lines]",
          "460:   if (ret <= 0) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "547:  }",
          "549: out:",
          "552: free_pages_out:",
          "553:  for (i = 0; i < nr_pages_ret; i++) {",
          "",
          "[Removed Lines]",
          "550:  return 0;",
          "",
          "[Added Lines]",
          "557:  return ret;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "557:  kfree(pages);",
          "559:  goto out;",
          "560: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "568: cleanup_and_out:",
          "569:  extent_clear_unlock_delalloc(inode, &BTRFS_I(inode)->io_tree,",
          "570:          start, end, NULL,",
          "571:          EXTENT_CLEAR_UNLOCK_PAGE |",
          "572:          EXTENT_CLEAR_DIRTY |",
          "573:          EXTENT_CLEAR_DELALLOC |",
          "574:          EXTENT_SET_WRITEBACK |",
          "575:          EXTENT_END_WRITEBACK);",
          "576:  if (!trans || IS_ERR(trans))",
          "577:   btrfs_error(root->fs_info, ret, \"Failed to join transaction\");",
          "578:  else",
          "579:   btrfs_abort_transaction(trans, root, ret);",
          "580:  goto free_pages_out;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "628:        async_extent->start + async_extent->ram_size - 1);",
          "630:   trans = btrfs_join_transaction(root);",
          "634:         async_extent->compressed_size,",
          "635:         async_extent->compressed_size,",
          "636:         0, alloc_hint,",
          "637:         (u64)-1, &ins, 1);",
          "640:   if (ret) {",
          "641:    int i;",
          "",
          "[Removed Lines]",
          "631:   BUG_ON(IS_ERR(trans));",
          "632:   trans->block_rsv = &root->fs_info->delalloc_block_rsv;",
          "633:   ret = btrfs_reserve_extent(trans, root,",
          "638:   btrfs_end_transaction(trans, root);",
          "",
          "[Added Lines]",
          "654:   if (IS_ERR(trans)) {",
          "655:    ret = PTR_ERR(trans);",
          "656:   } else {",
          "657:    trans->block_rsv = &root->fs_info->delalloc_block_rsv;",
          "658:    ret = btrfs_reserve_extent(trans, root,",
          "663:    if (ret)",
          "664:     btrfs_abort_transaction(trans, root, ret);",
          "665:    btrfs_end_transaction(trans, root);",
          "666:   }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "649:    unlock_extent(io_tree, async_extent->start,",
          "650:           async_extent->start +",
          "651:           async_extent->ram_size - 1);",
          "653:   }",
          "",
          "[Removed Lines]",
          "652:    goto retry;",
          "",
          "[Added Lines]",
          "680:    if (ret == -ENOSPC)",
          "681:     goto retry;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "661:      async_extent->ram_size - 1, 0);",
          "663:   em = alloc_extent_map();",
          "665:   em->start = async_extent->start;",
          "666:   em->len = async_extent->ram_size;",
          "667:   em->orig_start = em->start;",
          "",
          "[Removed Lines]",
          "664:   BUG_ON(!em);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "693:       ins.offset,",
          "694:       BTRFS_ORDERED_COMPRESSED,",
          "695:       async_extent->compress_type);",
          "",
          "[Removed Lines]",
          "696:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "715:         ins.offset, async_extent->pages,",
          "716:         async_extent->nr_pages);",
          "719:   alloc_hint = ins.objectid + ins.offset;",
          "720:   kfree(async_extent);",
          "721:   cond_resched();",
          "722:  }",
          "725: }",
          "727: static u64 get_extent_allocation_hint(struct inode *inode, u64 start,",
          "",
          "[Removed Lines]",
          "718:   BUG_ON(ret);",
          "724:  return 0;",
          "",
          "[Added Lines]",
          "753:  ret = 0;",
          "754: out:",
          "755:  return ret;",
          "756: out_free:",
          "757:  kfree(async_extent);",
          "758:  goto out;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "791:  BUG_ON(btrfs_is_free_space_inode(root, inode));",
          "792:  trans = btrfs_join_transaction(root);",
          "794:  trans->block_rsv = &root->fs_info->delalloc_block_rsv;",
          "796:  num_bytes = (end - start + blocksize) & ~(blocksize - 1);",
          "",
          "[Removed Lines]",
          "793:  BUG_ON(IS_ERR(trans));",
          "",
          "[Added Lines]",
          "827:  if (IS_ERR(trans)) {",
          "828:   extent_clear_unlock_delalloc(inode,",
          "829:         &BTRFS_I(inode)->io_tree,",
          "830:         start, end, NULL,",
          "831:         EXTENT_CLEAR_UNLOCK_PAGE |",
          "832:         EXTENT_CLEAR_UNLOCK |",
          "833:         EXTENT_CLEAR_DELALLOC |",
          "834:         EXTENT_CLEAR_DIRTY |",
          "835:         EXTENT_SET_WRITEBACK |",
          "836:         EXTENT_END_WRITEBACK);",
          "837:   return PTR_ERR(trans);",
          "838:  }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "821:         (end - start + PAGE_CACHE_SIZE) / PAGE_CACHE_SIZE;",
          "824:    goto out;",
          "825:   }",
          "826:  }",
          "",
          "[Removed Lines]",
          "823:    ret = 0;",
          "",
          "[Added Lines]",
          "869:   } else if (ret < 0) {",
          "870:    btrfs_abort_transaction(trans, root, ret);",
          "871:    goto out_unlock;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "838:   ret = btrfs_reserve_extent(trans, root, cur_alloc_size,",
          "839:         root->sectorsize, 0, alloc_hint,",
          "840:         (u64)-1, &ins, 1);",
          "843:   em = alloc_extent_map();",
          "845:   em->start = start;",
          "846:   em->orig_start = em->start;",
          "847:   ram_size = ins.offset;",
          "",
          "[Removed Lines]",
          "841:   BUG_ON(ret);",
          "844:   BUG_ON(!em);",
          "",
          "[Added Lines]",
          "888:   if (ret < 0) {",
          "889:    btrfs_abort_transaction(trans, root, ret);",
          "890:    goto out_unlock;",
          "891:   }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "867:   cur_alloc_size = ins.offset;",
          "868:   ret = btrfs_add_ordered_extent(inode, start, ins.objectid,",
          "869:             ram_size, cur_alloc_size, 0);",
          "872:   if (root->root_key.objectid ==",
          "873:       BTRFS_DATA_RELOC_TREE_OBJECTID) {",
          "874:    ret = btrfs_reloc_clone_csums(inode, start,",
          "875:             cur_alloc_size);",
          "877:   }",
          "879:   if (disk_num_bytes < cur_alloc_size)",
          "",
          "[Removed Lines]",
          "870:   BUG_ON(ret);",
          "876:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "926:    if (ret) {",
          "927:     btrfs_abort_transaction(trans, root, ret);",
          "928:     goto out_unlock;",
          "929:    }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "898:   alloc_hint = ins.objectid + ins.offset;",
          "899:   start += cur_alloc_size;",
          "900:  }",
          "902:  ret = 0;",
          "903:  btrfs_end_transaction(trans, root);",
          "905:  return ret;",
          "906: }",
          "",
          "[Removed Lines]",
          "901: out:",
          "",
          "[Added Lines]",
          "955: out:",
          "959: out_unlock:",
          "960:  extent_clear_unlock_delalloc(inode,",
          "961:        &BTRFS_I(inode)->io_tree,",
          "962:        start, end, NULL,",
          "963:        EXTENT_CLEAR_UNLOCK_PAGE |",
          "964:        EXTENT_CLEAR_UNLOCK |",
          "965:        EXTENT_CLEAR_DELALLOC |",
          "966:        EXTENT_CLEAR_DIRTY |",
          "967:        EXTENT_SET_WRITEBACK |",
          "968:        EXTENT_END_WRITEBACK);",
          "970:  goto out;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "968:     1, 0, NULL, GFP_NOFS);",
          "969:  while (start < end) {",
          "970:   async_cow = kmalloc(sizeof(*async_cow), GFP_NOFS);",
          "972:   async_cow->inode = inode;",
          "973:   async_cow->root = root;",
          "974:   async_cow->locked_page = locked_page;",
          "",
          "[Removed Lines]",
          "971:   BUG_ON(!async_cow);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1059:  u64 disk_bytenr;",
          "1060:  u64 num_bytes;",
          "1061:  int extent_type;",
          "1063:  int type;",
          "1064:  int nocow;",
          "1065:  int check_prev = 1;",
          "",
          "[Removed Lines]",
          "1062:  int ret;",
          "",
          "[Added Lines]",
          "1127:  int ret, err;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1077:  else",
          "1078:   trans = btrfs_join_transaction(root);",
          "1081:  trans->block_rsv = &root->fs_info->delalloc_block_rsv;",
          "1083:  cow_start = (u64)-1;",
          "",
          "[Removed Lines]",
          "1080:  BUG_ON(IS_ERR(trans));",
          "",
          "[Added Lines]",
          "1145:  if (IS_ERR(trans)) {",
          "1146:   btrfs_free_path(path);",
          "1147:   return PTR_ERR(trans);",
          "1148:  }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1085:  while (1) {",
          "1086:   ret = btrfs_lookup_file_extent(trans, root, path, ino,",
          "1087:             cur_offset, 0);",
          "1089:   if (ret > 0 && path->slots[0] > 0 && check_prev) {",
          "1090:    leaf = path->nodes[0];",
          "1091:    btrfs_item_key_to_cpu(leaf, &found_key,",
          "",
          "[Removed Lines]",
          "1088:   BUG_ON(ret < 0);",
          "",
          "[Added Lines]",
          "1157:   if (ret < 0) {",
          "1158:    btrfs_abort_transaction(trans, root, ret);",
          "1159:    goto error;",
          "1160:   }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1099:   leaf = path->nodes[0];",
          "1100:   if (path->slots[0] >= btrfs_header_nritems(leaf)) {",
          "1101:    ret = btrfs_next_leaf(root, path);",
          "1104:    if (ret > 0)",
          "1105:     break;",
          "1106:    leaf = path->nodes[0];",
          "",
          "[Removed Lines]",
          "1102:    if (ret < 0)",
          "1103:     BUG_ON(1);",
          "",
          "[Added Lines]",
          "1174:    if (ret < 0) {",
          "1175:     btrfs_abort_transaction(trans, root, ret);",
          "1176:     goto error;",
          "1177:    }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1188:    ret = cow_file_range(inode, locked_page, cow_start,",
          "1189:      found_key.offset - 1, page_started,",
          "1190:      nr_written, 1);",
          "1192:    cow_start = (u64)-1;",
          "1193:   }",
          "",
          "[Removed Lines]",
          "1191:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1265:    if (ret) {",
          "1266:     btrfs_abort_transaction(trans, root, ret);",
          "1267:     goto error;",
          "1268:    }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1197:    struct extent_map_tree *em_tree;",
          "1198:    em_tree = &BTRFS_I(inode)->extent_tree;",
          "1199:    em = alloc_extent_map();",
          "1201:    em->start = cur_offset;",
          "1202:    em->orig_start = em->start;",
          "1203:    em->len = num_bytes;",
          "",
          "[Removed Lines]",
          "1200:    BUG_ON(!em);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1224:   ret = btrfs_add_ordered_extent(inode, cur_offset, disk_bytenr,",
          "1225:             num_bytes, num_bytes, type);",
          "1228:   if (root->root_key.objectid ==",
          "1229:       BTRFS_DATA_RELOC_TREE_OBJECTID) {",
          "1230:    ret = btrfs_reloc_clone_csums(inode, cur_offset,",
          "1231:             num_bytes);",
          "1233:   }",
          "1235:   extent_clear_unlock_delalloc(inode, &BTRFS_I(inode)->io_tree,",
          "",
          "[Removed Lines]",
          "1226:   BUG_ON(ret);",
          "1232:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1309:    if (ret) {",
          "1310:     btrfs_abort_transaction(trans, root, ret);",
          "1311:     goto error;",
          "1312:    }",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1248:  if (cow_start != (u64)-1) {",
          "1249:   ret = cow_file_range(inode, locked_page, cow_start, end,",
          "1250:          page_started, nr_written, 1);",
          "1252:  }",
          "1254:  if (nolock) {",
          "1257:  } else {",
          "1260:  }",
          "1261:  btrfs_free_path(path);",
          "1263: }",
          "",
          "[Removed Lines]",
          "1251:   BUG_ON(ret);",
          "1255:   ret = btrfs_end_transaction_nolock(trans, root);",
          "1256:   BUG_ON(ret);",
          "1258:   ret = btrfs_end_transaction(trans, root);",
          "1259:   BUG_ON(ret);",
          "1262:  return 0;",
          "",
          "[Added Lines]",
          "1331:   if (ret) {",
          "1332:    btrfs_abort_transaction(trans, root, ret);",
          "1333:    goto error;",
          "1334:   }",
          "1337: error:",
          "1339:   err = btrfs_end_transaction_nolock(trans, root);",
          "1341:   err = btrfs_end_transaction(trans, root);",
          "1343:  if (!ret)",
          "1344:   ret = err;",
          "1347:  return ret;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1448:  int ret = 0;",
          "1450:  ret = btrfs_csum_one_bio(root, inode, bio, 0, 0);",
          "1452:  return 0;",
          "1453: }",
          "",
          "[Removed Lines]",
          "1451:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1678:  ret = btrfs_drop_extents(trans, inode, file_pos, file_pos + num_bytes,",
          "1679:      &hint, 0);",
          "1682:  ins.objectid = btrfs_ino(inode);",
          "1683:  ins.offset = file_pos;",
          "1684:  ins.type = BTRFS_EXTENT_DATA_KEY;",
          "1685:  ret = btrfs_insert_empty_item(trans, root, path, &ins, sizeof(*fi));",
          "1687:  leaf = path->nodes[0];",
          "1688:  fi = btrfs_item_ptr(leaf, path->slots[0],",
          "1689:        struct btrfs_file_extent_item);",
          "",
          "[Removed Lines]",
          "1680:  BUG_ON(ret);",
          "1686:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1765:  if (ret)",
          "1766:   goto out;",
          "1772:  if (ret)",
          "1773:   goto out;",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1711:  ret = btrfs_alloc_reserved_file_extent(trans, root,",
          "1712:      root->root_key.objectid,",
          "1713:      btrfs_ino(inode), file_pos, &ins);",
          "1715:  btrfs_free_path(path);",
          "1718: }",
          "",
          "[Removed Lines]",
          "1714:  BUG_ON(ret);",
          "1717:  return 0;",
          "",
          "[Added Lines]",
          "1801: out:",
          "1804:  return ret;",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1742:           end - start + 1);",
          "1743:  if (!ret)",
          "1744:   return 0;",
          "1747:  nolock = btrfs_is_free_space_inode(root, inode);",
          "1749:  if (test_bit(BTRFS_ORDERED_NOCOW, &ordered_extent->flags)) {",
          "1751:   ret = btrfs_ordered_update_i_size(inode, 0, ordered_extent);",
          "1752:   if (!ret) {",
          "1753:    if (nolock)",
          "1754:     trans = btrfs_join_transaction_nolock(root);",
          "1755:    else",
          "1756:     trans = btrfs_join_transaction(root);",
          "1758:    trans->block_rsv = &root->fs_info->delalloc_block_rsv;",
          "1759:    ret = btrfs_update_inode_fallback(trans, root, inode);",
          "1761:   }",
          "1762:   goto out;",
          "1763:  }",
          "",
          "[Removed Lines]",
          "1745:  BUG_ON(!ordered_extent);",
          "1750:   BUG_ON(!list_empty(&ordered_extent->list));",
          "1757:    BUG_ON(IS_ERR(trans));",
          "1760:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1844:    if (IS_ERR(trans))",
          "1845:     return PTR_ERR(trans);",
          "1849:     btrfs_abort_transaction(trans, root, ret);",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1770:   trans = btrfs_join_transaction_nolock(root);",
          "1771:  else",
          "1772:   trans = btrfs_join_transaction(root);",
          "1774:  trans->block_rsv = &root->fs_info->delalloc_block_rsv;",
          "1776:  if (test_bit(BTRFS_ORDERED_COMPRESSED, &ordered_extent->flags))",
          "",
          "[Removed Lines]",
          "1773:  BUG_ON(IS_ERR(trans));",
          "",
          "[Added Lines]",
          "1862:  if (IS_ERR(trans)) {",
          "1863:   ret = PTR_ERR(trans);",
          "1864:   trans = NULL;",
          "1865:   goto out_unlock;",
          "1866:  }",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1781:       ordered_extent->file_offset,",
          "1782:       ordered_extent->file_offset +",
          "1783:       ordered_extent->len);",
          "1785:  } else {",
          "1786:   BUG_ON(root == root->fs_info->tree_root);",
          "1787:   ret = insert_reserved_file_extent(trans, inode,",
          "",
          "[Removed Lines]",
          "1784:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1795:   unpin_extent_cache(&BTRFS_I(inode)->extent_tree,",
          "1796:        ordered_extent->file_offset,",
          "1797:        ordered_extent->len);",
          "1799:  }",
          "1800:  unlock_extent_cached(io_tree, ordered_extent->file_offset,",
          "1801:         ordered_extent->file_offset +",
          "1802:         ordered_extent->len - 1, &cached_state, GFP_NOFS);",
          "1804:  add_pending_csums(trans, inode, ordered_extent->file_offset,",
          "1805:      &ordered_extent->list);",
          "",
          "[Removed Lines]",
          "1798:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1894:  if (ret < 0) {",
          "1895:   btrfs_abort_transaction(trans, root, ret);",
          "1896:   goto out;",
          "1897:  }",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1807:  ret = btrfs_ordered_update_i_size(inode, 0, ordered_extent);",
          "1808:  if (!ret || !test_bit(BTRFS_ORDERED_PREALLOC, &ordered_extent->flags)) {",
          "1809:   ret = btrfs_update_inode_fallback(trans, root, inode);",
          "1811:  }",
          "1812:  ret = 0;",
          "1813: out:",
          "",
          "[Removed Lines]",
          "1810:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1906:    btrfs_abort_transaction(trans, root, ret);",
          "1907:    goto out;",
          "1908:   }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1826:  btrfs_put_ordered_extent(ordered_extent);",
          "1828:  return 0;",
          "1829: }",
          "1831: static int btrfs_writepage_end_io_hook(struct page *page, u64 start, u64 end,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1927: out_unlock:",
          "1928:  unlock_extent_cached(io_tree, ordered_extent->file_offset,",
          "1929:         ordered_extent->file_offset +",
          "1930:         ordered_extent->len - 1, &cached_state, GFP_NOFS);",
          "1931:  goto out;",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2054:  if (reserve) {",
          "2055:   ret = btrfs_orphan_reserve_metadata(trans, inode);",
          "2057:  }",
          "2060:  if (insert >= 1) {",
          "2061:   ret = btrfs_insert_orphan_item(trans, root, btrfs_ino(inode));",
          "2063:  }",
          "2066:  if (insert >= 2) {",
          "2067:   ret = btrfs_insert_orphan_item(trans, root->fs_info->tree_root,",
          "2068:             root->root_key.objectid);",
          "2070:  }",
          "2071:  return 0;",
          "2072: }",
          "",
          "[Removed Lines]",
          "2056:   BUG_ON(ret);",
          "2062:   BUG_ON(ret && ret != -EEXIST);",
          "2069:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2167:   if (ret && ret != -EEXIST) {",
          "2168:    btrfs_abort_transaction(trans, root, ret);",
          "2169:    return ret;",
          "2170:   }",
          "2171:   ret = 0;",
          "2178:   if (ret && ret != -EEXIST) {",
          "2179:    btrfs_abort_transaction(trans, root, ret);",
          "2180:    return ret;",
          "2181:   }",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2097:  if (trans && delete_item) {",
          "2098:   ret = btrfs_del_orphan_item(trans, root, btrfs_ino(inode));",
          "2100:  }",
          "2102:  if (release_rsv)",
          "",
          "[Removed Lines]",
          "2099:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2230:    }",
          "2231:    ret = btrfs_del_orphan_item(trans, root,",
          "2232:           found_key.objectid);",
          "2234:    btrfs_end_transaction(trans, root);",
          "2235:    continue;",
          "2236:   }",
          "",
          "[Removed Lines]",
          "2233:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2612:   printk(KERN_INFO \"btrfs failed to delete reference to %.*s, \"",
          "2613:          \"inode %llu parent %llu\\n\", name_len, name,",
          "2614:          (unsigned long long)ino, (unsigned long long)dir_ino);",
          "2615:   goto err;",
          "2616:  }",
          "2618:  ret = btrfs_delete_delayed_dir_index(trans, root, dir, index);",
          "2620:   goto err;",
          "2622:  ret = btrfs_del_inode_ref_in_log(trans, root, name, name_len,",
          "2623:       inode, dir_ino);",
          "2626:  ret = btrfs_del_dir_entries_in_log(trans, root, name, name_len,",
          "2627:         dir, index);",
          "",
          "[Removed Lines]",
          "2619:  if (ret)",
          "2624:  BUG_ON(ret != 0 && ret != -ENOENT);",
          "",
          "[Added Lines]",
          "2727:   btrfs_abort_transaction(trans, root, ret);",
          "2732:  if (ret) {",
          "2733:   btrfs_abort_transaction(trans, root, ret);",
          "2735:  }",
          "2739:  if (ret != 0 && ret != -ENOENT) {",
          "2740:   btrfs_abort_transaction(trans, root, ret);",
          "2741:   goto err;",
          "2742:  }",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2779:    err = ret;",
          "2780:    goto out;",
          "2781:   }",
          "2783:   if (check_path_shared(root, path))",
          "2784:    goto out;",
          "2785:   btrfs_release_path(path);",
          "",
          "[Removed Lines]",
          "2782:   BUG_ON(ret == 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2812:   err = PTR_ERR(ref);",
          "2813:   goto out;",
          "2814:  }",
          "2816:  if (check_path_shared(root, path))",
          "2817:   goto out;",
          "2818:  index = btrfs_inode_ref_index(path->nodes[0], ref);",
          "",
          "[Removed Lines]",
          "2815:  BUG_ON(!ref);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2920:  di = btrfs_lookup_dir_item(trans, root, path, dir_ino,",
          "2921:        name, name_len, -1);",
          "2924:  leaf = path->nodes[0];",
          "2925:  btrfs_dir_item_key_to_cpu(leaf, di, &key);",
          "2926:  WARN_ON(key.type != BTRFS_ROOT_ITEM_KEY || key.objectid != objectid);",
          "2927:  ret = btrfs_delete_one_dir_name(trans, root, path, di);",
          "2929:  btrfs_release_path(path);",
          "2931:  ret = btrfs_del_root_ref(trans, root->fs_info->tree_root,",
          "2932:      objectid, root->root_key.objectid,",
          "2933:      dir_ino, &index, name, name_len);",
          "2934:  if (ret < 0) {",
          "2936:   di = btrfs_search_dir_index_item(root, path, dir_ino,",
          "2937:        name, name_len);",
          "2940:   leaf = path->nodes[0];",
          "2941:   btrfs_item_key_to_cpu(leaf, &key, path->slots[0]);",
          "",
          "[Removed Lines]",
          "2922:  BUG_ON(IS_ERR_OR_NULL(di));",
          "2928:  BUG_ON(ret);",
          "2935:   BUG_ON(ret != -ENOENT);",
          "2938:   BUG_ON(IS_ERR_OR_NULL(di));",
          "",
          "[Added Lines]",
          "3040:  if (IS_ERR_OR_NULL(di)) {",
          "3041:   if (!di)",
          "3042:    ret = -ENOENT;",
          "3043:   else",
          "3044:    ret = PTR_ERR(di);",
          "3045:   goto out;",
          "3046:  }",
          "3052:  if (ret) {",
          "3053:   btrfs_abort_transaction(trans, root, ret);",
          "3054:   goto out;",
          "3055:  }",
          "3062:   if (ret != -ENOENT) {",
          "3063:    btrfs_abort_transaction(trans, root, ret);",
          "3064:    goto out;",
          "3065:   }",
          "3068:   if (IS_ERR_OR_NULL(di)) {",
          "3069:    if (!di)",
          "3070:     ret = -ENOENT;",
          "3071:    else",
          "3072:     ret = PTR_ERR(di);",
          "3073:    btrfs_abort_transaction(trans, root, ret);",
          "3074:    goto out;",
          "3075:   }",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2945:  btrfs_release_path(path);",
          "2947:  ret = btrfs_delete_delayed_dir_index(trans, root, dir, index);",
          "2950:  btrfs_i_size_write(dir, dir->i_size - name_len * 2);",
          "2951:  dir->i_mtime = dir->i_ctime = CURRENT_TIME;",
          "2952:  ret = btrfs_update_inode(trans, root, dir);",
          "2955:  btrfs_free_path(path);",
          "2957: }",
          "2959: static int btrfs_rmdir(struct inode *dir, struct dentry *dentry)",
          "",
          "[Removed Lines]",
          "2948:  BUG_ON(ret);",
          "2953:  BUG_ON(ret);",
          "2956:  return 0;",
          "",
          "[Added Lines]",
          "3085:  if (ret) {",
          "3086:   btrfs_abort_transaction(trans, root, ret);",
          "3087:   goto out;",
          "3088:  }",
          "3093:  if (ret)",
          "3094:   btrfs_abort_transaction(trans, root, ret);",
          "3095: out:",
          "3097:  return ret;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "3212:     ret = btrfs_del_items(trans, root, path,",
          "3213:       pending_del_slot,",
          "3214:       pending_del_nr);",
          "3216:     pending_del_nr = 0;",
          "3217:    }",
          "3218:    btrfs_release_path(path);",
          "",
          "[Removed Lines]",
          "3215:     BUG_ON(ret);",
          "",
          "[Added Lines]",
          "3356:     if (ret) {",
          "3357:      btrfs_abort_transaction(trans,",
          "3358:         root, ret);",
          "3359:      goto error;",
          "3360:     }",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "3225:  if (pending_del_nr) {",
          "3226:   ret = btrfs_del_items(trans, root, path, pending_del_slot,",
          "3227:           pending_del_nr);",
          "3229:  }",
          "3230:  btrfs_free_path(path);",
          "3231:  return err;",
          "3232: }",
          "",
          "[Removed Lines]",
          "3228:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "3373:   if (ret)",
          "3374:    btrfs_abort_transaction(trans, root, ret);",
          "3376: error:",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "3373:  while (1) {",
          "3374:   em = btrfs_get_extent(inode, NULL, 0, cur_offset,",
          "3375:     block_end - cur_offset, 0);",
          "3377:   last_byte = min(extent_map_end(em), block_end);",
          "3378:   last_byte = (last_byte + mask) & ~mask;",
          "3379:   if (!test_bit(EXTENT_FLAG_PREALLOC, &em->flags)) {",
          "",
          "[Removed Lines]",
          "3376:   BUG_ON(IS_ERR_OR_NULL(em));",
          "",
          "[Added Lines]",
          "3523:   if (IS_ERR(em)) {",
          "3524:    err = PTR_ERR(em);",
          "3525:    break;",
          "3526:   }",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3390:        cur_offset + hole_size,",
          "3391:        &hint_byte, 1);",
          "3392:    if (err) {",
          "3394:     btrfs_end_transaction(trans, root);",
          "3395:     break;",
          "3396:    }",
          "",
          "[Removed Lines]",
          "3393:     btrfs_update_inode(trans, root, inode);",
          "",
          "[Added Lines]",
          "3543:     btrfs_abort_transaction(trans, root, err);",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3400:      0, hole_size, 0, hole_size,",
          "3401:      0, 0, 0);",
          "3402:    if (err) {",
          "3404:     btrfs_end_transaction(trans, root);",
          "3405:     break;",
          "3406:    }",
          "",
          "[Removed Lines]",
          "3403:     btrfs_update_inode(trans, root, inode);",
          "",
          "[Added Lines]",
          "3553:     btrfs_abort_transaction(trans, root, err);",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "4581:           parent_ino, index);",
          "4582:  }",
          "4595:  }",
          "4596:  return ret;",
          "4598: fail_dir_item:",
          "",
          "[Removed Lines]",
          "4584:  if (ret == 0) {",
          "4585:   ret = btrfs_insert_dir_item(trans, root, name, name_len,",
          "4586:          parent_inode, &key,",
          "4587:          btrfs_inode_type(inode), index);",
          "4588:   if (ret)",
          "4589:    goto fail_dir_item;",
          "4591:   btrfs_i_size_write(parent_inode, parent_inode->i_size +",
          "4592:        name_len * 2);",
          "4593:   parent_inode->i_mtime = parent_inode->i_ctime = CURRENT_TIME;",
          "4594:   ret = btrfs_update_inode(trans, root, parent_inode);",
          "",
          "[Added Lines]",
          "4735:  if (ret)",
          "4736:   return ret;",
          "4738:  ret = btrfs_insert_dir_item(trans, root, name, name_len,",
          "4739:         parent_inode, &key,",
          "4740:         btrfs_inode_type(inode), index);",
          "4741:  if (ret == -EEXIST)",
          "4742:   goto fail_dir_item;",
          "4743:  else if (ret) {",
          "4744:   btrfs_abort_transaction(trans, root, ret);",
          "4745:   return ret;",
          "4748:  btrfs_i_size_write(parent_inode, parent_inode->i_size +",
          "4749:       name_len * 2);",
          "4750:  parent_inode->i_mtime = parent_inode->i_ctime = CURRENT_TIME;",
          "4751:  ret = btrfs_update_inode(trans, root, parent_inode);",
          "4752:  if (ret)",
          "4753:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "4806:  } else {",
          "4807:   struct dentry *parent = dentry->d_parent;",
          "4808:   err = btrfs_update_inode(trans, root, inode);",
          "4810:   d_instantiate(dentry, inode);",
          "4811:   btrfs_log_new_name(trans, inode, NULL, parent);",
          "4812:  }",
          "",
          "[Removed Lines]",
          "4809:   BUG_ON(err);",
          "",
          "[Added Lines]",
          "4967:   if (err)",
          "4968:    goto fail;",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "5137:     ret = uncompress_inline(path, inode, page,",
          "5138:        pg_offset,",
          "5139:        extent_offset, item);",
          "5141:    } else {",
          "5142:     map = kmap(page);",
          "5143:     read_extent_buffer(leaf, map + pg_offset, ptr,",
          "",
          "[Removed Lines]",
          "5140:     BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "5868:  int ret;",
          "5869:  struct btrfs_root *root = BTRFS_I(inode)->root;",
          "5870:  ret = btrfs_csum_one_bio(root, inode, bio, offset, 1);",
          "5872:  return 0;",
          "5873: }",
          "",
          "[Removed Lines]",
          "5871:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "7068:   if (!ret)",
          "7069:    ret = btrfs_update_inode(trans, root, old_inode);",
          "7070:  }",
          "7073:  if (new_inode) {",
          "7074:   new_inode->i_ctime = CURRENT_TIME;",
          "",
          "[Removed Lines]",
          "7071:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "7231:  if (ret) {",
          "7232:   btrfs_abort_transaction(trans, root, ret);",
          "7233:   goto out_fail;",
          "7234:  }",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "7086:        new_dentry->d_name.name,",
          "7087:        new_dentry->d_name.len);",
          "7088:   }",
          "7091:    ret = btrfs_orphan_add(trans, new_dentry->d_inode);",
          "7092:    BUG_ON(ret);",
          "7093:   }",
          "7094:  }",
          "7096:  fixup_inode_flags(new_dir, old_inode);",
          "",
          "[Removed Lines]",
          "7089:   BUG_ON(ret);",
          "7090:   if (new_inode->i_nlink == 0) {",
          "",
          "[Added Lines]",
          "7252:   if (!ret && new_inode->i_nlink == 0) {",
          "7256:   if (ret) {",
          "7257:    btrfs_abort_transaction(trans, root, ret);",
          "7258:    goto out_fail;",
          "7259:   }",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "7098:  ret = btrfs_add_link(trans, new_dir, old_inode,",
          "7099:         new_dentry->d_name.name,",
          "7100:         new_dentry->d_name.len, 0, index);",
          "7103:  if (old_ino != BTRFS_FIRST_FREE_OBJECTID) {",
          "7104:   struct dentry *parent = new_dentry->d_parent;",
          "",
          "[Removed Lines]",
          "7101:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "7267:  if (ret) {",
          "7268:   btrfs_abort_transaction(trans, root, ret);",
          "7269:   goto out_fail;",
          "7270:  }",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "7323:         ins.offset, ins.offset,",
          "7324:         ins.offset, 0, 0, 0,",
          "7325:         BTRFS_FILE_EXTENT_PREALLOC);",
          "7327:   btrfs_drop_extent_cache(inode, cur_offset,",
          "7328:      cur_offset + ins.offset -1, 0);",
          "",
          "[Removed Lines]",
          "7326:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "7495:   if (ret) {",
          "7496:    btrfs_abort_transaction(trans, root, ret);",
          "7497:    if (own_trans)",
          "7498:     btrfs_end_transaction(trans, root);",
          "7499:    break;",
          "7500:   }",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "7345:   }",
          "7347:   ret = btrfs_update_inode(trans, root, inode);",
          "7350:   if (own_trans)",
          "7351:    btrfs_end_transaction(trans, root);",
          "",
          "[Removed Lines]",
          "7348:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "7523:   if (ret) {",
          "7524:    btrfs_abort_transaction(trans, root, ret);",
          "7525:    if (own_trans)",
          "7526:     btrfs_end_transaction(trans, root);",
          "7527:    break;",
          "7528:   }",
          "",
          "---------------"
        ],
        "fs/btrfs/ioctl.c||fs/btrfs/ioctl.c": [
          "File: fs/btrfs/ioctl.c -> fs/btrfs/ioctl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "426:  key.offset = (u64)-1;",
          "427:  new_root = btrfs_read_fs_root_no_name(root->fs_info, &key);",
          "430:  btrfs_record_root_in_trans(trans, new_root);",
          "432:  ret = btrfs_create_subvol_root(trans, new_root, new_dirid);",
          "433:  if (ret) {",
          "435:   goto fail;",
          "436:  }",
          "",
          "[Removed Lines]",
          "428:  BUG_ON(IS_ERR(new_root));",
          "",
          "[Added Lines]",
          "428:  if (IS_ERR(new_root)) {",
          "429:   btrfs_abort_transaction(trans, root, PTR_ERR(new_root));",
          "430:   ret = PTR_ERR(new_root);",
          "431:   goto fail;",
          "432:  }",
          "439:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "441:  ret = btrfs_set_inode_index(dir, &index);",
          "444:  ret = btrfs_insert_dir_item(trans, root,",
          "445:         name, namelen, dir, &key,",
          "446:         BTRFS_FT_DIR, index);",
          "448:   goto fail;",
          "450:  btrfs_i_size_write(dir, dir->i_size + namelen * 2);",
          "451:  ret = btrfs_update_inode(trans, root, dir);",
          "",
          "[Removed Lines]",
          "442:  BUG_ON(ret);",
          "447:  if (ret)",
          "",
          "[Added Lines]",
          "447:  if (ret) {",
          "448:   btrfs_abort_transaction(trans, root, ret);",
          "449:   goto fail;",
          "450:  }",
          "455:  if (ret) {",
          "456:   btrfs_abort_transaction(trans, root, ret);",
          "458:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1970:     dest->root_key.objectid,",
          "1971:     dentry->d_name.name,",
          "1972:     dentry->d_name.len);",
          "1975:  btrfs_record_root_in_trans(trans, dest);",
          "",
          "[Removed Lines]",
          "1973:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1983:  if (ret) {",
          "1984:   err = ret;",
          "1985:   btrfs_abort_transaction(trans, root, ret);",
          "1986:   goto out_end_trans;",
          "1987:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1983:   ret = btrfs_insert_orphan_item(trans,",
          "1984:      root->fs_info->tree_root,",
          "1985:      dest->root_key.objectid);",
          "1987:  }",
          "1989:  ret = btrfs_end_transaction(trans, root);",
          "1991:  inode->i_flags |= S_DEAD;",
          "1992: out_up_write:",
          "1993:  up_write(&root->fs_info->subvol_sem);",
          "",
          "[Removed Lines]",
          "1986:   BUG_ON(ret);",
          "1990:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2000:   if (ret) {",
          "2001:    btrfs_abort_transaction(trans, root, ret);",
          "2002:    err = ret;",
          "2003:    goto out_end_trans;",
          "2004:   }",
          "2006: out_end_trans:",
          "2008:  if (ret && !err)",
          "2009:   err = ret;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2451:         new_key.offset,",
          "2452:         new_key.offset + datal,",
          "2453:         &hint_byte, 1);",
          "2456:     ret = btrfs_insert_empty_item(trans, root, path,",
          "2457:              &new_key, size);",
          "2460:     leaf = path->nodes[0];",
          "2461:     slot = path->slots[0];",
          "",
          "[Removed Lines]",
          "2454:     BUG_ON(ret);",
          "2458:     BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2473:     if (ret) {",
          "2474:      btrfs_abort_transaction(trans, root,",
          "2475:         ret);",
          "2476:      btrfs_end_transaction(trans, root);",
          "2477:      goto out;",
          "2478:     }",
          "2482:     if (ret) {",
          "2483:      btrfs_abort_transaction(trans, root,",
          "2484:         ret);",
          "2485:      btrfs_end_transaction(trans, root);",
          "2486:      goto out;",
          "2487:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2482:        btrfs_ino(inode),",
          "2483:        new_key.offset - datao,",
          "2484:        0);",
          "2486:     }",
          "2487:    } else if (type == BTRFS_FILE_EXTENT_INLINE) {",
          "2488:     u64 skip = 0;",
          "",
          "[Removed Lines]",
          "2485:      BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2514:      if (ret) {",
          "2515:       btrfs_abort_transaction(trans,",
          "2516:          root,",
          "2517:          ret);",
          "2518:       btrfs_end_transaction(trans,",
          "2519:               root);",
          "2520:       goto out;",
          "2522:      }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2507:         new_key.offset,",
          "2508:         new_key.offset + datal,",
          "2509:         &hint_byte, 1);",
          "2512:     ret = btrfs_insert_empty_item(trans, root, path,",
          "2513:              &new_key, size);",
          "2516:     if (skip) {",
          "2517:      u32 start =",
          "",
          "[Removed Lines]",
          "2510:     BUG_ON(ret);",
          "2514:     BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2547:     if (ret) {",
          "2548:      btrfs_abort_transaction(trans, root,",
          "2549:         ret);",
          "2550:      btrfs_end_transaction(trans, root);",
          "2551:      goto out;",
          "2552:     }",
          "2556:     if (ret) {",
          "2557:      btrfs_abort_transaction(trans, root,",
          "2558:         ret);",
          "2559:      btrfs_end_transaction(trans, root);",
          "2560:      goto out;",
          "2561:     }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2545:     btrfs_i_size_write(inode, endoff);",
          "2547:    ret = btrfs_update_inode(trans, root, inode);",
          "2550:   }",
          "2551: next:",
          "2552:   btrfs_release_path(path);",
          "",
          "[Removed Lines]",
          "2548:    BUG_ON(ret);",
          "2549:    btrfs_end_transaction(trans, root);",
          "",
          "[Added Lines]",
          "2595:    if (ret) {",
          "2596:     btrfs_abort_transaction(trans, root, ret);",
          "2597:     btrfs_end_transaction(trans, root);",
          "2598:     goto out;",
          "2599:    }",
          "2600:    ret = btrfs_end_transaction(trans, root);",
          "",
          "---------------"
        ],
        "fs/btrfs/orphan.c||fs/btrfs/orphan.c": [
          "File: fs/btrfs/orphan.c -> fs/btrfs/orphan.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:  ret = btrfs_search_slot(trans, root, &key, path, -1, 1);",
          "59:  if (ret < 0)",
          "60:   goto out;",
          "62:   ret = -ENOENT;",
          "63:   goto out;",
          "64:  }",
          "",
          "[Removed Lines]",
          "61:  if (ret) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/btrfs/relocation.c||fs/btrfs/relocation.c": [
          "File: fs/btrfs/relocation.c -> fs/btrfs/relocation.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4102: static noinline_for_stack int mark_garbage_root(struct btrfs_root *root)",
          "4103: {",
          "4104:  struct btrfs_trans_handle *trans;",
          "4107:  trans = btrfs_start_transaction(root->fs_info->tree_root, 0);",
          "4110:  memset(&root->root_item.drop_progress, 0,",
          "4111:   sizeof(root->root_item.drop_progress));",
          "",
          "[Removed Lines]",
          "4105:  int ret;",
          "4108:  BUG_ON(IS_ERR(trans));",
          "",
          "[Added Lines]",
          "4105:  int ret, err;",
          "4108:  if (IS_ERR(trans))",
          "4109:   return PTR_ERR(trans);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4113:  btrfs_set_root_refs(&root->root_item, 0);",
          "4114:  ret = btrfs_update_root(trans, root->fs_info->tree_root,",
          "4115:     &root->root_key, &root->root_item);",
          "4121: }",
          "",
          "[Removed Lines]",
          "4116:  BUG_ON(ret);",
          "4118:  ret = btrfs_end_transaction(trans, root->fs_info->tree_root);",
          "4119:  BUG_ON(ret);",
          "4120:  return 0;",
          "",
          "[Added Lines]",
          "4118:  err = btrfs_end_transaction(trans, root->fs_info->tree_root);",
          "4119:  if (err)",
          "4120:   return err;",
          "4121:  return ret;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4185:      err = ret;",
          "4186:      goto out;",
          "4187:     }",
          "4189:    }",
          "4190:   }",
          "",
          "[Removed Lines]",
          "4188:     mark_garbage_root(reloc_root);",
          "",
          "[Added Lines]",
          "4189:     ret = mark_garbage_root(reloc_root);",
          "4190:     if (ret < 0) {",
          "4191:      err = ret;",
          "4192:      goto out;",
          "4193:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4232:   fs_root = read_fs_root(root->fs_info,",
          "4233:            reloc_root->root_key.offset);",
          "4236:   err = __add_reloc_root(reloc_root);",
          "4238:   fs_root->reloc_root = reloc_root;",
          "4239:  }",
          "4243:  merge_reloc_roots(rc);",
          "",
          "[Removed Lines]",
          "4234:   BUG_ON(IS_ERR(fs_root));",
          "4237:   BUG_ON(err < 0);",
          "4241:  btrfs_commit_transaction(trans, rc->extent_root);",
          "",
          "[Added Lines]",
          "4239:   if (IS_ERR(fs_root)) {",
          "4240:    err = PTR_ERR(fs_root);",
          "4241:    goto out_free;",
          "4242:   }",
          "4249:  err = btrfs_commit_transaction(trans, rc->extent_root);",
          "4250:  if (err)",
          "4251:   goto out_free;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4248:  if (IS_ERR(trans))",
          "4249:   err = PTR_ERR(trans);",
          "4250:  else",
          "4252: out_free:",
          "4253:  kfree(rc);",
          "4254: out:",
          "",
          "[Removed Lines]",
          "4251:   btrfs_commit_transaction(trans, rc->extent_root);",
          "",
          "[Added Lines]",
          "4261:   err = btrfs_commit_transaction(trans, rc->extent_root);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4297:  disk_bytenr = file_pos + BTRFS_I(inode)->index_cnt;",
          "4298:  ret = btrfs_lookup_csums_range(root->fs_info->csum_root, disk_bytenr,",
          "4299:            disk_bytenr + len - 1, &list, 0);",
          "4301:  while (!list_empty(&list)) {",
          "4302:   sums = list_entry(list.next, struct btrfs_ordered_sum, list);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4310:  if (ret)",
          "4311:   goto out;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4315:   btrfs_add_ordered_sum(inode, ordered, sums);",
          "4316:  }",
          "4317:  btrfs_put_ordered_extent(ordered);",
          "4318:  return ret;",
          "4319: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4329: out:",
          "",
          "---------------"
        ],
        "fs/btrfs/root-tree.c||fs/btrfs/root-tree.c": [
          "File: fs/btrfs/root-tree.c -> fs/btrfs/root-tree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:   return -ENOMEM;",
          "99:  ret = btrfs_search_slot(trans, root, key, path, 0, 1);",
          "101:   goto out;",
          "103:  if (ret != 0) {",
          "104:   btrfs_print_leaf(root, path->nodes[0]);",
          "",
          "[Removed Lines]",
          "100:  if (ret < 0)",
          "",
          "[Added Lines]",
          "100:  if (ret < 0) {",
          "101:   btrfs_abort_transaction(trans, root, ret);",
          "103:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "406: again:",
          "407:  ret = btrfs_insert_empty_item(trans, tree_root, path, &key,",
          "408:           sizeof(*ref) + name_len);",
          "411:  leaf = path->nodes[0];",
          "412:  ref = btrfs_item_ptr(leaf, path->slots[0], struct btrfs_root_ref);",
          "",
          "[Removed Lines]",
          "409:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "413:  if (ret) {",
          "414:   btrfs_abort_transaction(trans, tree_root, ret);",
          "415:   btrfs_free_path(path);",
          "416:   return ret;",
          "417:  }",
          "",
          "---------------"
        ],
        "fs/btrfs/scrub.c||fs/btrfs/scrub.c": [
          "File: fs/btrfs/scrub.c -> fs/btrfs/scrub.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1505:  struct btrfs_device *device = sdev->dev;",
          "1506:  struct btrfs_root *root = device->dev_root;",
          "1508:  gen = root->fs_info->last_trans_committed;",
          "1510:  for (i = 0; i < BTRFS_SUPER_MIRROR_MAX; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1508:  if (root->fs_info->fs_state & BTRFS_SUPER_FLAG_ERROR)",
          "1509:   return -EIO;",
          "",
          "---------------"
        ],
        "fs/btrfs/super.c||fs/btrfs/super.c": [
          "File: fs/btrfs/super.c -> fs/btrfs/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "216:           struct btrfs_root *root, const char *function,",
          "217:           unsigned int line, int errno)",
          "218: {",
          "220:  trans->aborted = errno;",
          "",
          "[Removed Lines]",
          "219:  WARN_ON_ONCE(1);",
          "",
          "[Added Lines]",
          "219:  WARN_ONCE(1, KERN_DEBUG \"btrfs: Transaction aborted\");",
          "",
          "---------------"
        ],
        "fs/btrfs/transaction.c||fs/btrfs/transaction.c": [
          "File: fs/btrfs/transaction.c -> fs/btrfs/transaction.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "949:     dentry->d_name.name, dentry->d_name.len,",
          "950:     parent_inode, &key,",
          "951:     BTRFS_FT_DIR, index);",
          "953:   pending->error = -EEXIST;",
          "954:   dput(parent);",
          "955:   goto fail;",
          "959:  btrfs_i_size_write(parent_inode, parent_inode->i_size +",
          "960:       dentry->d_name.len * 2);",
          "961:  ret = btrfs_update_inode(trans, parent_root, parent_inode);",
          "962:  if (ret)",
          "",
          "[Removed Lines]",
          "952:  if (ret) {",
          "956:  } else if (ret)",
          "957:   goto abort_trans;",
          "963:   goto abort_trans;",
          "",
          "[Added Lines]",
          "952:  if (ret == -EEXIST) {",
          "956:  } else if (ret) {",
          "957:   goto abort_trans_dput;",
          "958:  }",
          "964:   goto abort_trans_dput;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "971:  ret = btrfs_run_delayed_items(trans, root);",
          "973:   goto fail;",
          "975:  record_root_in_trans(trans, root);",
          "976:  btrfs_set_root_last_snapshot(&root->root_item, trans->transid);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "974:   dput(parent);",
          "976:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "987:  old = btrfs_lock_root_node(root);",
          "988:  ret = btrfs_cow_block(trans, root, old, NULL, 0, &old);",
          "992:  btrfs_set_lock_blocking(old);",
          "994:  ret = btrfs_copy_root(trans, root, old, &tmp, objectid);",
          "998:  btrfs_tree_unlock(old);",
          "999:  free_extent_buffer(old);",
          "1002:  root->force_cow = 1;",
          "",
          "[Removed Lines]",
          "989:  if (ret)",
          "990:   goto abort_trans;",
          "995:  if (ret)",
          "996:   goto abort_trans;",
          "",
          "[Added Lines]",
          "992:  if (ret) {",
          "993:   btrfs_tree_unlock(old);",
          "994:   free_extent_buffer(old);",
          "995:   goto abort_trans_dput;",
          "996:  }",
          "1004:  if (ret)",
          "1005:   goto abort_trans_dput;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1009:  btrfs_tree_unlock(tmp);",
          "1010:  free_extent_buffer(tmp);",
          "1011:  if (ret)",
          "",
          "[Removed Lines]",
          "1012:   goto abort_trans;",
          "",
          "[Added Lines]",
          "1018:   goto abort_trans_dput;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1018:      parent_root->root_key.objectid,",
          "1019:      btrfs_ino(parent_inode), index,",
          "1020:      dentry->d_name.name, dentry->d_name.len);",
          "1021:  if (ret)",
          "1022:   goto fail;",
          "1025:  key.offset = (u64)-1;",
          "1026:  pending->snap = btrfs_read_fs_root_no_name(root->fs_info, &key);",
          "1028:   goto abort_trans;",
          "1030:  ret = btrfs_reloc_post_snapshot(trans, pending);",
          "1031:  if (ret)",
          "",
          "[Removed Lines]",
          "1023:  dput(parent);",
          "1027:  if (IS_ERR(pending->snap))",
          "",
          "[Added Lines]",
          "1027:  dput(parent);",
          "1033:  if (IS_ERR(pending->snap)) {",
          "1034:   ret = PTR_ERR(pending->snap);",
          "1036:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1037:  btrfs_block_rsv_release(root, &pending->block_rsv, (u64)-1);",
          "1038:  return ret;",
          "1040: abort_trans:",
          "1041:  btrfs_abort_transaction(trans, root, ret);",
          "1042:  goto fail;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1048: abort_trans_dput:",
          "1049:  dput(parent);",
          "",
          "---------------"
        ],
        "fs/btrfs/tree-log.c||fs/btrfs/tree-log.c": [
          "File: fs/btrfs/tree-log.c -> fs/btrfs/tree-log.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1761:      BTRFS_TREE_LOG_OBJECTID);",
          "1762:     ret = btrfs_free_and_pin_reserved_extent(root,",
          "1763:         bytenr, blocksize);",
          "1765:    }",
          "1766:    free_extent_buffer(next);",
          "1767:    continue;",
          "",
          "[Removed Lines]",
          "1764:     BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1869:   wret = walk_down_log_tree(trans, log, path, &level, wc);",
          "1870:   if (wret > 0)",
          "1871:    break;",
          "1873:    ret = wret;",
          "1875:   wret = walk_up_log_tree(trans, log, path, &level, wc);",
          "1876:   if (wret > 0)",
          "1877:    break;",
          "1879:    ret = wret;",
          "1880:  }",
          "1883:  if (path->nodes[orig_level]) {",
          "1885:     btrfs_header_generation(path->nodes[orig_level]));",
          "1886:   if (wc->free) {",
          "1887:    struct extent_buffer *next;",
          "",
          "[Removed Lines]",
          "1872:   if (wret < 0)",
          "1878:   if (wret < 0)",
          "1884:   wc->process_func(log, path->nodes[orig_level], wc,",
          "",
          "[Added Lines]",
          "1872:   if (wret < 0) {",
          "1874:    goto out;",
          "1875:   }",
          "1880:   if (wret < 0) {",
          "1882:    goto out;",
          "1883:   }",
          "1888:   ret = wc->process_func(log, path->nodes[orig_level], wc,",
          "1890:   if (ret)",
          "1891:    goto out;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1898:     BTRFS_TREE_LOG_OBJECTID);",
          "1899:    ret = btrfs_free_and_pin_reserved_extent(log, next->start,",
          "1900:         next->len);",
          "1902:   }",
          "1903:  }",
          "1905:  for (i = 0; i <= orig_level; i++) {",
          "1906:   if (path->nodes[i]) {",
          "1907:    free_extent_buffer(path->nodes[i]);",
          "",
          "[Removed Lines]",
          "1901:    BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1911: out:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2045:  ret = btrfs_write_marked_extents(log, &log->dirty_log_pages, mark);",
          "2048:  btrfs_set_root_node(&log->root_item, log->node);",
          "",
          "[Removed Lines]",
          "2046:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2053:  if (ret) {",
          "2054:   btrfs_abort_transaction(trans, root, ret);",
          "2055:   mutex_unlock(&root->log_mutex);",
          "2056:   goto out;",
          "2057:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2074:  }",
          "2076:  if (ret) {",
          "2078:   root->fs_info->last_trans_log_full_commit = trans->transid;",
          "2079:   btrfs_wait_marked_extents(log, &log->dirty_log_pages, mark);",
          "2080:   mutex_unlock(&log_root_tree->log_mutex);",
          "",
          "[Removed Lines]",
          "2077:   BUG_ON(ret != -ENOSPC);",
          "",
          "[Added Lines]",
          "2088:   if (ret != -ENOSPC) {",
          "2089:    btrfs_abort_transaction(trans, root, ret);",
          "2090:    mutex_unlock(&log_root_tree->log_mutex);",
          "2091:    goto out;",
          "2092:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2114:  ret = btrfs_write_and_wait_marked_extents(log_root_tree,",
          "2115:     &log_root_tree->dirty_log_pages,",
          "2116:     EXTENT_DIRTY | EXTENT_NEW);",
          "2118:  btrfs_wait_marked_extents(log, &log->dirty_log_pages, mark);",
          "2120:  btrfs_set_super_log_root(root->fs_info->super_for_commit,",
          "",
          "[Removed Lines]",
          "2117:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "2132:  if (ret) {",
          "2133:   btrfs_abort_transaction(trans, root, ret);",
          "2134:   mutex_unlock(&log_root_tree->log_mutex);",
          "2135:   goto out_wake_log_root;",
          "2136:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2323:  if (ret == -ENOSPC) {",
          "2324:   root->fs_info->last_trans_log_full_commit = trans->transid;",
          "2325:   ret = 0;",
          "2327:  btrfs_end_log_trans(root);",
          "2329:  return err;",
          "",
          "[Removed Lines]",
          "2326:  }",
          "",
          "[Added Lines]",
          "2345:  } else if (ret < 0)",
          "2346:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2354:  if (ret == -ENOSPC) {",
          "2355:   root->fs_info->last_trans_log_full_commit = trans->transid;",
          "2356:   ret = 0;",
          "2358:  btrfs_end_log_trans(root);",
          "2360:  return ret;",
          "",
          "[Removed Lines]",
          "2357:  }",
          "",
          "[Added Lines]",
          "2378:  } else if (ret < 0 && ret != -ENOENT)",
          "2379:   btrfs_abort_transaction(trans, root, ret);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3166:  fs_info->log_root_recovering = 1;",
          "3168:  trans = btrfs_start_transaction(fs_info->tree_root, 0);",
          "3171:  wc.trans = trans;",
          "3172:  wc.pin = 1;",
          "3174:  ret = walk_log_tree(trans, log_root_tree, &wc);",
          "3177: again:",
          "3178:  key.objectid = BTRFS_TREE_LOG_OBJECTID;",
          "",
          "[Removed Lines]",
          "3169:  BUG_ON(IS_ERR(trans));",
          "3175:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "3191:  if (IS_ERR(trans)) {",
          "3192:   ret = PTR_ERR(trans);",
          "3193:   goto error;",
          "3194:  }",
          "3200:  if (ret) {",
          "3201:   btrfs_error(fs_info, ret, \"Failed to pin buffers while \"",
          "3202:        \"recovering log root tree.\");",
          "3203:   goto error;",
          "3204:  }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3182:  while (1) {",
          "3183:   ret = btrfs_search_slot(NULL, log_root_tree, &key, path, 0, 0);",
          "3186:   if (ret > 0) {",
          "3187:    if (path->slots[0] == 0)",
          "3188:     break;",
          "",
          "[Removed Lines]",
          "3184:   if (ret < 0)",
          "3185:    break;",
          "",
          "[Added Lines]",
          "3214:   if (ret < 0) {",
          "3215:    btrfs_error(fs_info, ret,",
          "3216:         \"Couldn't find tree log root.\");",
          "3217:    goto error;",
          "3218:   }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3197:   log = btrfs_read_fs_root_no_radix(log_root_tree,",
          "3198:         &found_key);",
          "3201:   tmp_key.objectid = found_key.offset;",
          "3202:   tmp_key.type = BTRFS_ROOT_ITEM_KEY;",
          "3203:   tmp_key.offset = (u64)-1;",
          "3205:   wc.replay_dest = btrfs_read_fs_root_no_name(fs_info, &tmp_key);",
          "3208:   wc.replay_dest->log_root = log;",
          "3209:   btrfs_record_root_in_trans(trans, wc.replay_dest);",
          "",
          "[Removed Lines]",
          "3199:   BUG_ON(IS_ERR(log));",
          "3206:   BUG_ON(IS_ERR_OR_NULL(wc.replay_dest));",
          "",
          "[Added Lines]",
          "3232:   if (IS_ERR(log)) {",
          "3233:    ret = PTR_ERR(log);",
          "3234:    btrfs_error(fs_info, ret,",
          "3235:         \"Couldn't read tree log root.\");",
          "3236:    goto error;",
          "3237:   }",
          "3244:   if (IS_ERR(wc.replay_dest)) {",
          "3245:    ret = PTR_ERR(wc.replay_dest);",
          "3246:    btrfs_error(fs_info, ret, \"Couldn't read target root \"",
          "3247:         \"for tree log recovery.\");",
          "3248:    goto error;",
          "3249:   }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3252:  kfree(log_root_tree);",
          "3253:  return 0;",
          "3254: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3298: error:",
          "3299:  btrfs_free_path(path);",
          "3300:  return ret;",
          "",
          "---------------"
        ],
        "fs/btrfs/volumes.c||fs/btrfs/volumes.c": [
          "File: fs/btrfs/volumes.c -> fs/btrfs/volumes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "549:    fs_devices->num_can_discard--;",
          "551:   new_device = kmalloc(sizeof(*new_device), GFP_NOFS);",
          "553:   memcpy(new_device, device, sizeof(*new_device));",
          "554:   new_device->name = kstrdup(device->name, GFP_NOFS);",
          "556:   new_device->bdev = NULL;",
          "557:   new_device->writeable = 0;",
          "558:   new_device->in_fs_metadata = 0;",
          "",
          "[Removed Lines]",
          "552:   BUG_ON(!new_device);",
          "555:   BUG_ON(device->name && !new_device->name);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1036:   leaf = path->nodes[0];",
          "1037:   extent = btrfs_item_ptr(leaf, path->slots[0],",
          "1038:      struct btrfs_dev_extent);",
          "1039:  }",
          "1042:  if (device->bytes_used > 0) {",
          "1043:   u64 len = btrfs_dev_extent_length(leaf, extent);",
          "",
          "[Removed Lines]",
          "1040:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1039:  } else {",
          "1040:   btrfs_error(root->fs_info, ret, \"Slot search failed\");",
          "1041:   goto out;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1047:   spin_unlock(&root->fs_info->free_chunk_lock);",
          "1048:  }",
          "1049:  ret = btrfs_del_item(trans, root, path);",
          "1051: out:",
          "1052:  btrfs_free_path(path);",
          "1053:  return ret;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1052:  if (ret) {",
          "1053:   btrfs_error(root->fs_info, ret,",
          "1054:        \"Failed to remove dev extent item\");",
          "1055:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1117:  if (ret < 0)",
          "1118:   goto error;",
          "1122:  ret = btrfs_previous_item(root, path, 0, BTRFS_CHUNK_ITEM_KEY);",
          "1123:  if (ret) {",
          "",
          "[Removed Lines]",
          "1120:  BUG_ON(ret == 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1161:  if (ret < 0)",
          "1162:   goto error;",
          "1166:  ret = btrfs_previous_item(root, path, BTRFS_DEV_ITEMS_OBJECTID,",
          "1167:       BTRFS_DEV_ITEM_KEY);",
          "",
          "[Removed Lines]",
          "1164:  BUG_ON(ret == 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1595:        (unsigned long)btrfs_device_fsid(dev_item),",
          "1596:        BTRFS_UUID_SIZE);",
          "1597:   device = btrfs_find_device(root, devid, dev_uuid, fs_uuid);",
          "1600:   if (device->fs_devices->seeding) {",
          "1601:    btrfs_set_device_generation(leaf, dev_item,",
          "",
          "[Removed Lines]",
          "1598:   BUG_ON(!device);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1705:  if (seeding_dev) {",
          "1706:   sb->s_flags &= ~MS_RDONLY;",
          "1707:   ret = btrfs_prepare_sprout(root);",
          "1709:  }",
          "1711:  device->fs_devices = root->fs_info->fs_devices;",
          "",
          "[Removed Lines]",
          "1708:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1744:  if (seeding_dev) {",
          "1745:   ret = init_first_rw_device(trans, root, device);",
          "1747:   ret = btrfs_finish_sprout(trans, root);",
          "1749:  } else {",
          "1750:   ret = btrfs_add_device(trans, root, device);",
          "1751:  }",
          "",
          "[Removed Lines]",
          "1746:   BUG_ON(ret);",
          "1748:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1751:   if (ret)",
          "1752:    goto error_trans;",
          "1754:   if (ret)",
          "1755:    goto error_trans;",
          "1758:   if (ret)",
          "1759:    goto error_trans;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1757:  btrfs_clear_space_info_full(root->fs_info);",
          "1759:  unlock_chunks(root);",
          "1762:  if (seeding_dev) {",
          "1763:   mutex_unlock(&uuid_mutex);",
          "1764:   up_write(&sb->s_umount);",
          "1766:   ret = btrfs_relocate_sys_chunks(root);",
          "1768:  }",
          "1770:  return ret;",
          "1771: error:",
          "1772:  blkdev_put(bdev, FMODE_EXCL);",
          "1773:  if (seeding_dev) {",
          "",
          "[Removed Lines]",
          "1760:  btrfs_commit_transaction(trans, root);",
          "1767:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1769:  ret = btrfs_commit_transaction(trans, root);",
          "1776:    return ret;",
          "1779:   if (ret < 0)",
          "1780:    btrfs_error(root->fs_info, ret,",
          "1781:         \"Failed to relocate sys chunks after \"",
          "1782:         \"device initialization. This can be fixed \"",
          "1783:         \"using the \\\"btrfs balance\\\" command.\");",
          "1788: error_trans:",
          "1789:  unlock_chunks(root);",
          "1790:  btrfs_abort_transaction(trans, root, ret);",
          "1791:  btrfs_end_transaction(trans, root);",
          "1792:  kfree(device->name);",
          "1793:  kfree(device);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1875:  key.type = BTRFS_CHUNK_ITEM_KEY;",
          "1877:  ret = btrfs_search_slot(trans, root, &key, path, -1, 1);",
          "1880:  ret = btrfs_del_item(trans, root, path);",
          "1882:  btrfs_free_path(path);",
          "1883:  return ret;",
          "1884: }",
          "",
          "[Removed Lines]",
          "1878:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "1901:  if (ret < 0)",
          "1902:   goto out;",
          "1904:   btrfs_error(root->fs_info, -ENOENT,",
          "1905:        \"Failed lookup while freeing chunk.\");",
          "1906:   ret = -ENOENT;",
          "1907:   goto out;",
          "1908:  }",
          "1911:  if (ret < 0)",
          "1912:   btrfs_error(root->fs_info, ret,",
          "1913:        \"Failed to delete chunk item.\");",
          "1914: out:",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2040:   ret = btrfs_search_slot(NULL, chunk_root, &key, path, 0, 0);",
          "2041:   if (ret < 0)",
          "2042:    goto error;",
          "2045:   ret = btrfs_previous_item(chunk_root, path, key.objectid,",
          "2046:        key.type);",
          "",
          "[Removed Lines]",
          "2043:   BUG_ON(ret == 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3334:  ret = btrfs_make_block_group(trans, extent_root, 0, type,",
          "3335:          BTRFS_FIRST_CHUNK_TREE_OBJECTID,",
          "3336:          start, num_bytes);",
          "3339:  for (i = 0; i < map->num_stripes; ++i) {",
          "3340:   struct btrfs_device *device;",
          "",
          "[Removed Lines]",
          "3337:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "3370:  if (ret)",
          "3371:   goto error;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3347:     info->chunk_root->root_key.objectid,",
          "3348:     BTRFS_FIRST_CHUNK_TREE_OBJECTID,",
          "3349:     start, dev_offset, stripe_size);",
          "3351:  }",
          "3353:  kfree(devices_info);",
          "",
          "[Removed Lines]",
          "3350:   BUG_ON(ret);",
          "",
          "[Added Lines]",
          "3384:   if (ret) {",
          "3385:    btrfs_abort_transaction(trans, extent_root, ret);",
          "3386:    goto error;",
          "3387:   }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3466:  ret = __finish_chunk_alloc(trans, extent_root, map, chunk_offset,",
          "3467:        chunk_size, stripe_size);",
          "3469:  return 0;",
          "3470: }",
          "",
          "[Removed Lines]",
          "3468:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "3505:  if (ret)",
          "3506:   return ret;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3498:  ret = __btrfs_alloc_chunk(trans, extent_root, &map, &chunk_size,",
          "3499:       &stripe_size, chunk_offset, alloc_profile);",
          "3502:  sys_chunk_offset = chunk_offset + chunk_size;",
          "",
          "[Removed Lines]",
          "3500:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "3538:  if (ret)",
          "3539:   return ret;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3508:  ret = __btrfs_alloc_chunk(trans, extent_root, &sys_map,",
          "3509:       &sys_chunk_size, &sys_stripe_size,",
          "3510:       sys_chunk_offset, alloc_profile);",
          "3513:  ret = btrfs_add_device(trans, fs_info->chunk_root, device);",
          "",
          "[Removed Lines]",
          "3511:  BUG_ON(ret);",
          "3514:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "3550:  if (ret)",
          "3551:   goto abort;",
          "3554:  if (ret)",
          "3555:   goto abort;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3522:  ret = __finish_chunk_alloc(trans, extent_root, map, chunk_offset,",
          "3523:        chunk_size, stripe_size);",
          "3526:  ret = __finish_chunk_alloc(trans, extent_root, sys_map,",
          "3527:        sys_chunk_offset, sys_chunk_size,",
          "3528:        sys_stripe_size);",
          "3530:  return 0;",
          "3531: }",
          "3533: int btrfs_chunk_readonly(struct btrfs_root *root, u64 chunk_offset)",
          "",
          "[Removed Lines]",
          "3524:  BUG_ON(ret);",
          "3529:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "3565:  if (ret)",
          "3566:   goto abort;",
          "3571:  if (ret)",
          "3572:   goto abort;",
          "3576: abort:",
          "3577:  btrfs_abort_transaction(trans, root, ret);",
          "3578:  return ret;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3878:   do_div(length, map->num_stripes);",
          "3880:  buf = kzalloc(sizeof(u64) * map->num_stripes, GFP_NOFS);",
          "3883:  for (i = 0; i < map->num_stripes; i++) {",
          "3884:   if (devid && map->stripes[i].dev->devid != devid)",
          "",
          "[Removed Lines]",
          "3881:  BUG_ON(!buf);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4040:  ret = btrfs_map_block(map_tree, rw, logical, &map_length, &bbio,",
          "4041:          mirror_num);",
          "4044:  total_devs = bbio->num_stripes;",
          "4045:  if (map_length < length) {",
          "",
          "[Removed Lines]",
          "4042:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "4091:   return ret;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "4058:  while (dev_nr < total_devs) {",
          "4059:   if (dev_nr < total_devs - 1) {",
          "4060:    bio = bio_clone(first_bio, GFP_NOFS);",
          "4062:   } else {",
          "4063:    bio = first_bio;",
          "4064:   }",
          "",
          "[Removed Lines]",
          "4061:    BUG_ON(!bio);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "4212:  write_lock(&map_tree->map_tree.lock);",
          "4213:  ret = add_extent_mapping(&map_tree->map_tree, em);",
          "4214:  write_unlock(&map_tree->map_tree.lock);",
          "4216:  free_extent_map(em);",
          "4218:  return 0;",
          "",
          "[Removed Lines]",
          "4215:  BUG_ON(ret);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fae7f21cece9a4c181a8d8131870c7247e153f65",
      "candidate_info": {
        "commit_hash": "fae7f21cece9a4c181a8d8131870c7247e153f65",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/fae7f21cece9a4c181a8d8131870c7247e153f65",
        "files": [
          "fs/btrfs/backref.c",
          "fs/btrfs/check-integrity.c",
          "fs/btrfs/ctree.c",
          "fs/btrfs/delayed-inode.c",
          "fs/btrfs/disk-io.c",
          "fs/btrfs/extent-tree.c",
          "fs/btrfs/extent_io.c",
          "fs/btrfs/file-item.c",
          "fs/btrfs/inode-map.c",
          "fs/btrfs/inode.c",
          "fs/btrfs/relocation.c",
          "fs/btrfs/send.c",
          "fs/btrfs/tree-log.c",
          "fs/btrfs/volumes.c"
        ],
        "message": "btrfs: Use WARN_ON()'s return value in place of WARN_ON(1)\n\nUse WARN_ON()'s return value in place of WARN_ON(1) for cleaner source\ncode that outputs a more descriptive warnings. Also fix the styling\nwarning of redundant braces that came up as a result of this fix.\n\nSigned-off-by: Dulshani Gunawardhana <dulshani.gunawardhana89@gmail.com>\nReviewed-by: Zach Brown <zab@redhat.com>\nSigned-off-by: Josef Bacik <jbacik@fusionio.com>\nSigned-off-by: Chris Mason <chris.mason@fusionio.com>",
        "before_after_code_files": [
          "fs/btrfs/backref.c||fs/btrfs/backref.c",
          "fs/btrfs/check-integrity.c||fs/btrfs/check-integrity.c",
          "fs/btrfs/ctree.c||fs/btrfs/ctree.c",
          "fs/btrfs/delayed-inode.c||fs/btrfs/delayed-inode.c",
          "fs/btrfs/disk-io.c||fs/btrfs/disk-io.c",
          "fs/btrfs/extent-tree.c||fs/btrfs/extent-tree.c",
          "fs/btrfs/extent_io.c||fs/btrfs/extent_io.c",
          "fs/btrfs/file-item.c||fs/btrfs/file-item.c",
          "fs/btrfs/inode-map.c||fs/btrfs/inode-map.c",
          "fs/btrfs/inode.c||fs/btrfs/inode.c",
          "fs/btrfs/relocation.c||fs/btrfs/relocation.c",
          "fs/btrfs/send.c||fs/btrfs/send.c",
          "fs/btrfs/tree-log.c||fs/btrfs/tree-log.c",
          "fs/btrfs/volumes.c||fs/btrfs/volumes.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/btrfs/inode.c||fs/btrfs/inode.c"
          ],
          "candidate": [
            "fs/btrfs/inode.c||fs/btrfs/inode.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/btrfs/backref.c||fs/btrfs/backref.c": [
          "File: fs/btrfs/backref.c -> fs/btrfs/backref.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "327:  eb = path->nodes[level];",
          "328:  while (!eb) {",
          "331:    ret = 1;",
          "332:    goto out;",
          "333:   }",
          "",
          "[Removed Lines]",
          "329:   if (!level) {",
          "330:    WARN_ON(1);",
          "",
          "[Added Lines]",
          "329:   if (WARN_ON(!level)) {",
          "",
          "---------------"
        ],
        "fs/btrfs/check-integrity.c||fs/btrfs/check-integrity.c": [
          "File: fs/btrfs/check-integrity.c -> fs/btrfs/check-integrity.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2464:   }",
          "2465:  }",
          "2469:   btrfsic_dump_tree(state);",
          "2472:  return 0;",
          "2473: }",
          "",
          "[Removed Lines]",
          "2467:  if (-1 == btrfsic_check_all_ref_blocks(state, superblock, 0)) {",
          "2468:   WARN_ON(1);",
          "2470:  }",
          "",
          "[Added Lines]",
          "2467:  if (WARN_ON(-1 == btrfsic_check_all_ref_blocks(state, superblock, 0)))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2907:   btrfsic_release_block_ctx(&block_ctx);",
          "2908:  }",
          "2911:   printk(KERN_INFO \"btrfs: attempt to write M-block which contains logical bytenr that doesn't map to dev+physical bytenr of submit_bio,\"",
          "2912:          \" buffer->log_bytenr=%llu, submit_bio(bdev=%s,\"",
          "2913:          \" phys_bytenr=%llu)!\\n\",",
          "",
          "[Removed Lines]",
          "2910:  if (!match) {",
          "",
          "[Added Lines]",
          "2908:  if (WARN_ON(!match)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2924:           bytenr, block_ctx.dev->name,",
          "2925:           block_ctx.dev_bytenr, mirror_num);",
          "2926:   }",
          "2928:  }",
          "2929: }",
          "",
          "[Removed Lines]",
          "2927:   WARN_ON(1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/btrfs/ctree.c||fs/btrfs/ctree.c": [
          "File: fs/btrfs/ctree.c -> fs/btrfs/ctree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1285:   free_extent_buffer(eb_root);",
          "1286:   blocksize = btrfs_level_size(root, old_root->level);",
          "1287:   old = read_tree_block(root, logical, blocksize, 0);",
          "1289:    free_extent_buffer(old);",
          "1290:    pr_warn(\"btrfs: failed to read tree block %llu from get_old_root\\n\",",
          "1291:     logical);",
          "1293:   } else {",
          "1294:    eb = btrfs_clone_extent_buffer(old);",
          "1295:    free_extent_buffer(old);",
          "",
          "[Removed Lines]",
          "1288:   if (!old || !extent_buffer_uptodate(old)) {",
          "1292:    WARN_ON(1);",
          "",
          "[Added Lines]",
          "1288:   if (WARN_ON(!old || !extent_buffer_uptodate(old))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3643:   ret = 1;",
          "3644:   goto out;",
          "3645:  }",
          "3650:  copy_extent_buffer(left, right,",
          "",
          "[Removed Lines]",
          "3646:  if (!empty && push_items == btrfs_header_nritems(right))",
          "3647:   WARN_ON(1);",
          "",
          "[Added Lines]",
          "3645:  WARN_ON(!empty && push_items == btrfs_header_nritems(right));",
          "",
          "---------------"
        ],
        "fs/btrfs/delayed-inode.c||fs/btrfs/delayed-inode.c": [
          "File: fs/btrfs/delayed-inode.c -> fs/btrfs/delayed-inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "649:    goto out;",
          "651:   ret = btrfs_block_rsv_migrate(src_rsv, dst_rsv, num_bytes);",
          "653:    goto out;",
          "660:   ret = btrfs_block_rsv_migrate(&root->fs_info->global_block_rsv,",
          "661:            dst_rsv, num_bytes);",
          "662:   goto out;",
          "",
          "[Removed Lines]",
          "652:   if (!ret)",
          "659:   WARN_ON(1);",
          "",
          "[Added Lines]",
          "652:   if (!WARN_ON(ret))",
          "",
          "---------------"
        ],
        "fs/btrfs/disk-io.c||fs/btrfs/disk-io.c": [
          "File: fs/btrfs/disk-io.c -> fs/btrfs/disk-io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "475:  if (page != eb->pages[0])",
          "476:   return 0;",
          "477:  found_start = btrfs_header_bytenr(eb);",
          "480:   return 0;",
          "486:  csum_tree_block(root, eb, 0);",
          "487:  return 0;",
          "488: }",
          "",
          "[Removed Lines]",
          "478:  if (found_start != start) {",
          "479:   WARN_ON(1);",
          "481:  }",
          "482:  if (!PageUptodate(page)) {",
          "483:   WARN_ON(1);",
          "484:   return 0;",
          "485:  }",
          "",
          "[Added Lines]",
          "478:  if (WARN_ON(found_start != start || !PageUptodate(page)))",
          "",
          "---------------"
        ],
        "fs/btrfs/extent-tree.c||fs/btrfs/extent-tree.c": [
          "File: fs/btrfs/extent-tree.c -> fs/btrfs/extent-tree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1550:  if (ret && !insert) {",
          "1551:   err = -ENOENT;",
          "1552:   goto out;",
          "1554:   err = -EIO;",
          "1556:   goto out;",
          "1557:  }",
          "",
          "[Removed Lines]",
          "1553:  } else if (ret) {",
          "1555:   WARN_ON(1);",
          "",
          "[Added Lines]",
          "1553:  } else if (WARN_ON(ret)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5752:    }",
          "5753:    extent_slot = path->slots[0];",
          "5754:   }",
          "5756:   btrfs_print_leaf(extent_root, path->nodes[0]);",
          "5758:   btrfs_err(info,",
          "5759:    \"unable to find ref byte nr %llu parent %llu root %llu  owner %llu offset %llu\",",
          "5760:    bytenr, parent, root_objectid, owner_objectid,",
          "",
          "[Removed Lines]",
          "5755:  } else if (ret == -ENOENT) {",
          "5757:   WARN_ON(1);",
          "",
          "[Added Lines]",
          "5754:  } else if (WARN_ON(ret == -ENOENT)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8317:      struct btrfs_space_info,",
          "8318:      list);",
          "8319:   if (btrfs_test_opt(info->tree_root, ENOSPC_DEBUG)) {",
          "8321:        space_info->bytes_reserved > 0 ||",
          "8324:     dump_space_info(space_info, 0, 0);",
          "8325:    }",
          "8326:   }",
          "",
          "[Removed Lines]",
          "8320:    if (space_info->bytes_pinned > 0 ||",
          "8322:        space_info->bytes_may_use > 0) {",
          "8323:     WARN_ON(1);",
          "",
          "[Added Lines]",
          "8318:    if (WARN_ON(space_info->bytes_pinned > 0 ||",
          "8320:        space_info->bytes_may_use > 0)) {",
          "",
          "---------------"
        ],
        "fs/btrfs/extent_io.c||fs/btrfs/extent_io.c": [
          "File: fs/btrfs/extent_io.c -> fs/btrfs/extent_io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1739:  u64 last = 0;",
          "1740:  int found = 0;",
          "1744:   return 0;",
          "1747:  spin_lock(&tree->lock);",
          "1748:  if (cur_start == 0 && bits == EXTENT_DIRTY) {",
          "",
          "[Removed Lines]",
          "1742:  if (search_end <= cur_start) {",
          "1743:   WARN_ON(1);",
          "1745:  }",
          "",
          "[Added Lines]",
          "1742:  if (WARN_ON(search_end <= cur_start))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3572:     spin_unlock(&mapping->private_lock);",
          "3574:     continue;",
          "3575:    }",
          "",
          "[Removed Lines]",
          "3571:    if (!eb) {",
          "3573:     WARN_ON(1);",
          "",
          "[Added Lines]",
          "3569:    if (WARN_ON(!eb)) {",
          "",
          "---------------"
        ],
        "fs/btrfs/file-item.c||fs/btrfs/file-item.c": [
          "File: fs/btrfs/file-item.c -> fs/btrfs/file-item.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "849:  path->leave_spinning = 0;",
          "850:  if (ret < 0)",
          "851:   goto fail_unlock;",
          "854:   goto fail_unlock;",
          "856:  leaf = path->nodes[0];",
          "857: csum:",
          "858:  item = btrfs_item_ptr(leaf, path->slots[0], struct btrfs_csum_item);",
          "",
          "[Removed Lines]",
          "852:  if (ret != 0) {",
          "853:   WARN_ON(1);",
          "855:  }",
          "",
          "[Added Lines]",
          "852:  if (WARN_ON(ret != 0))",
          "",
          "---------------"
        ],
        "fs/btrfs/inode-map.c||fs/btrfs/inode-map.c": [
          "File: fs/btrfs/inode-map.c -> fs/btrfs/inode-map.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:        btrfs_transaction_in_commit(fs_info)) {",
          "79:     leaf = path->nodes[0];",
          "83:      break;",
          "",
          "[Removed Lines]",
          "81:     if (btrfs_header_nritems(leaf) == 0) {",
          "82:      WARN_ON(1);",
          "84:     }",
          "",
          "[Added Lines]",
          "81:     if (WARN_ON(btrfs_header_nritems(leaf) == 0))",
          "",
          "---------------"
        ],
        "fs/btrfs/inode.c||fs/btrfs/inode.c": [
          "File: fs/btrfs/inode.c -> fs/btrfs/inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2039:   key.offset = offset;",
          "2041:  ret = btrfs_search_slot(NULL, root, &key, path, 0, 0);",
          "2044:   return ret;",
          "2046:  ret = 0;",
          "2048:  while (1) {",
          "",
          "[Removed Lines]",
          "2042:  if (ret < 0) {",
          "2043:   WARN_ON(1);",
          "2045:  }",
          "",
          "[Added Lines]",
          "2042:  if (WARN_ON(ret < 0))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3184:   if (inode->i_nlink) {",
          "3187:     iput(inode);",
          "3188:     continue;",
          "3189:    }",
          "",
          "[Removed Lines]",
          "3185:    if (!S_ISREG(inode->i_mode)) {",
          "3186:     WARN_ON(1);",
          "",
          "[Added Lines]",
          "3183:    if (WARN_ON(!S_ISREG(inode->i_mode))) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8023:   if (ret == -EEXIST) {",
          "8028:     return ret;",
          "8029:    }",
          "8030:   } else {",
          "",
          "[Removed Lines]",
          "8026:    if (!new_inode) {",
          "8027:     WARN_ON(1);",
          "",
          "[Added Lines]",
          "8023:    if (WARN_ON(!new_inode)) {",
          "",
          "---------------"
        ],
        "fs/btrfs/relocation.c||fs/btrfs/relocation.c": [
          "File: fs/btrfs/relocation.c -> fs/btrfs/relocation.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1777:    new_ptr_gen = 0;",
          "1778:   }",
          "1782:    ret = level;",
          "1783:    break;",
          "1784:   }",
          "",
          "[Removed Lines]",
          "1780:   if (new_bytenr > 0 && new_bytenr == old_bytenr) {",
          "1781:    WARN_ON(1);",
          "",
          "[Added Lines]",
          "1780:   if (WARN_ON(new_bytenr > 0 && new_bytenr == old_bytenr)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3545:     err = ret;",
          "3546:     goto out;",
          "3547:    }",
          "3550:     goto out;",
          "3553:    leaf = path->nodes[0];",
          "3554:    nritems = btrfs_header_nritems(leaf);",
          "",
          "[Removed Lines]",
          "3548:    if (ret > 0) {",
          "3549:     WARN_ON(1);",
          "3551:    }",
          "",
          "[Added Lines]",
          "3547:    if (WARN_ON(ret > 0))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3568:   }",
          "3570:   btrfs_item_key_to_cpu(leaf, &key, path->slots[0]);",
          "3574:    break;",
          "3577:   fi = btrfs_item_ptr(leaf, path->slots[0],",
          "3578:         struct btrfs_file_extent_item);",
          "",
          "[Removed Lines]",
          "3571:   if (key.objectid != ref_objectid ||",
          "3572:       key.type != BTRFS_EXTENT_DATA_KEY) {",
          "3573:    WARN_ON(1);",
          "3575:   }",
          "",
          "[Added Lines]",
          "3568:   if (WARN_ON(key.objectid != ref_objectid ||",
          "3569:       key.type != BTRFS_EXTENT_DATA_KEY))",
          "",
          "---------------"
        ],
        "fs/btrfs/send.c||fs/btrfs/send.c": [
          "File: fs/btrfs/send.c -> fs/btrfs/send.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "564: {",
          "565:  struct btrfs_cmd_header *hdr;",
          "569:   return -EINVAL;",
          "572:  BUG_ON(sctx->send_size);",
          "",
          "[Removed Lines]",
          "567:  if (!sctx->send_buf) {",
          "568:   WARN_ON(1);",
          "570:  }",
          "",
          "[Added Lines]",
          "567:  if (WARN_ON(!sctx->send_buf))",
          "",
          "---------------"
        ],
        "fs/btrfs/tree-log.c||fs/btrfs/tree-log.c": [
          "File: fs/btrfs/tree-log.c -> fs/btrfs/tree-log.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2130:   WARN_ON(*level >= BTRFS_MAX_LEVEL);",
          "2131:   cur = path->nodes[*level];",
          "2136:   if (path->slots[*level] >=",
          "2137:       btrfs_header_nritems(cur))",
          "",
          "[Removed Lines]",
          "2133:   if (btrfs_header_level(cur) != *level)",
          "2134:    WARN_ON(1);",
          "",
          "[Added Lines]",
          "2133:   WARN_ON(btrfs_header_level(cur) != *level);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2953:  ret = btrfs_search_slot(NULL, root, &min_key, path, 0, 0);",
          "2956:   goto done;",
          "",
          "[Removed Lines]",
          "2954:  if (ret != 0) {",
          "2955:   WARN_ON(1);",
          "2957:  }",
          "",
          "[Added Lines]",
          "2953:  if (WARN_ON(ret != 0))",
          "",
          "---------------"
        ],
        "fs/btrfs/volumes.c||fs/btrfs/volumes.c": [
          "File: fs/btrfs/volumes.c -> fs/btrfs/volumes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2552:   failed = 0;",
          "2553:   retried = true;",
          "2554:   goto again;",
          "2557:   ret = -ENOSPC;",
          "2558:  }",
          "2559: error:",
          "",
          "[Removed Lines]",
          "2555:  } else if (failed && retried) {",
          "2556:   WARN_ON(1);",
          "",
          "[Added Lines]",
          "2555:  } else if (WARN_ON(failed && retried)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5402:   .bi_rw = bio->bi_rw,",
          "5403:  };",
          "5407:   return 1;",
          "5410:  prev = &bio->bi_io_vec[bio->bi_vcnt - 1];",
          "5411:  if (bio_sectors(bio) > max_sectors)",
          "",
          "[Removed Lines]",
          "5405:  if (bio->bi_vcnt == 0) {",
          "5406:   WARN_ON(1);",
          "5408:  }",
          "",
          "[Added Lines]",
          "5404:  if (WARN_ON(bio->bi_vcnt == 0))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5638:  struct btrfs_device *dev;",
          "5639:  u64 tmp;",
          "5643:   return ERR_PTR(-EINVAL);",
          "5646:  dev = __alloc_device();",
          "5647:  if (IS_ERR(dev))",
          "",
          "[Removed Lines]",
          "5641:  if (!devid && !fs_info) {",
          "5642:   WARN_ON(1);",
          "5644:  }",
          "",
          "[Added Lines]",
          "5638:  if (WARN_ON(!devid && !fs_info))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4871c1588f92c6c13f4713a7009f25f217055807",
      "candidate_info": {
        "commit_hash": "4871c1588f92c6c13f4713a7009f25f217055807",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/4871c1588f92c6c13f4713a7009f25f217055807",
        "files": [
          "fs/btrfs/inode.c"
        ],
        "message": "Btrfs: use right root when checking for hash collision\n\nbtrfs_rename was using the root of the old dir instead of the root of the new\ndir when checking for a hash collision, so if you tried to move a file into a\nsubvol it would freak out because it would see the file you are trying to move\nin its current root.  This fixes the bug where this would fail\n\nbtrfs subvol create test1\nbtrfs subvol create test2\nmv test1 test2.\n\nThanks to Chris Murphy for catching this,\n\nCc: stable@vger.kernel.org\nReported-by: Chris Murphy <lists@colorremedies.com>\nSigned-off-by: Josef Bacik <jbacik@fusionio.com>\nSigned-off-by: Chris Mason <chris.mason@fusionio.com>",
        "before_after_code_files": [
          "fs/btrfs/inode.c||fs/btrfs/inode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/btrfs/inode.c||fs/btrfs/inode.c"
          ],
          "candidate": [
            "fs/btrfs/inode.c||fs/btrfs/inode.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/btrfs/inode.c||fs/btrfs/inode.c": [
          "File: fs/btrfs/inode.c -> fs/btrfs/inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7990:         new_dentry->d_name.name,",
          "7991:         new_dentry->d_name.len);",
          "",
          "[Removed Lines]",
          "7989:  ret = btrfs_check_dir_item_collision(root, new_dir->i_ino,",
          "",
          "[Added Lines]",
          "7989:  ret = btrfs_check_dir_item_collision(dest, new_dir->i_ino,",
          "",
          "---------------"
        ]
      }
    }
  ]
}