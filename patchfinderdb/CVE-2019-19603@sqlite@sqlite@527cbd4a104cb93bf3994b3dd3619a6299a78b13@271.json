{
  "cve_id": "CVE-2019-19603",
  "cve_desc": "SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.",
  "repo": "sqlite/sqlite",
  "patch_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
  "patch_info": {
    "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab.test"
    ],
    "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab.test||test/altertab.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:       }",
      "857:     }",
      "858:   }else{",
      "861:     ){",
      "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
      "863:                       zName);",
      "864:       return SQLITE_ERROR;",
      "865:     }",
      "866:   }",
      "867:   return SQLITE_OK;",
      "868: }",
      "",
      "[Removed Lines]",
      "859:     if( pParse->nested==0",
      "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
      "",
      "[Added Lines]",
      "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
      "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
      "",
      "[Added Lines]",
      "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
      "2148:   return pMod->pModule->xShadowName(zTail+1);",
      "2149: }",
      "",
      "[Removed Lines]",
      "2150: #else",
      "2151: # define isShadowTableName(x,y) 0",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2190:   p = pParse->pNewTable;",
      "2191:   if( p==0 ) return;",
      "2194:     p->tabFlags |= TF_Shadow;",
      "2195:   }",
      "",
      "[Removed Lines]",
      "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
      "",
      "[Added Lines]",
      "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
      "4549: #endif",
      "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
      "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
      "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
      "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
      "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
      "4553: #else",
      "4554: # define sqlite3ShadowTableName(A,B) 0",
      "4555: #endif",
      "",
      "---------------"
    ],
    "test/altertab.test||test/altertab.test": [
      "File: test/altertab.test -> test/altertab.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "547:   } {1 {table y1_segments may not be modified}}",
      "549:   do_catchsql_test 16.20 {",
      "554:     DROP TABLE y1_segments;",
      "555:   } {1 {table y1_segments may not be dropped}}",
      "557:   do_execsql_test 16.30 {",
      "558:     ALTER TABLE y1 RENAME TO z1;",
      "559:   }",
      "",
      "[Removed Lines]",
      "550:     ALTER TABLE y1_segments RENAME TO abc;",
      "551:   } {1 {table y1_segments may not be altered}}",
      "553:   do_catchsql_test 16.21 {",
      "",
      "[Added Lines]",
      "553:   do_catchsql_test 16.20 {",
      "554:     ALTER TABLE y1_segments RENAME TO abc;",
      "555:   } {1 {table y1_segments may not be altered}}",
      "556:   sqlite3_db_config db DEFENSIVE 0",
      "557:   do_catchsql_test 16.22 {",
      "558:     ALTER TABLE y1_segments RENAME TO abc;",
      "559:   } {0 {}}",
      "560:   sqlite3_db_config db DEFENSIVE 1",
      "561:   do_catchsql_test 16.23 {",
      "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
      "563:   } {1 {object name reserved for internal use: y1_segments}}",
      "564:   do_catchsql_test 16.24 {",
      "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
      "566:   } {1 {object name reserved for internal use: y1_segments}}",
      "567:   sqlite3_db_config db DEFENSIVE 0",
      "568:   do_catchsql_test 16.25 {",
      "569:     ALTER TABLE abc RENAME TO y1_segments;",
      "570:   } {0 {}}",
      "571:   sqlite3_db_config db DEFENSIVE 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6bab6f2b4d4acc11ed8b4f420b84bcdc7d95799c",
      "candidate_info": {
        "commit_hash": "6bab6f2b4d4acc11ed8b4f420b84bcdc7d95799c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6bab6f2b4d4acc11ed8b4f420b84bcdc7d95799c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c",
          "test/select3.test"
        ],
        "message": "Disable the optimization where a REAL value with no fractional part is stored as an INTEGER when the integer uses as much space as the real value it proposes to stand in for (8 bytes).  This avoids corner cases of comparing integers against real values that are beyond the resolution of an IEEE 754 double.  Fix for ticket [6c1d3febc00b22d457c78c2]\n\nFossilOrigin-Name: 9b0915272f4d4052aa31e9297424a7db9a0234b676e8e2a44c3f2dc54236705a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/select3.test||test/select3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 20f06bf2e659212a68dcf138e444da7bd4220548ec15a97cfd7eb82e028b3630",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3458:     if( u<=2147483647 ){ *pLen = 4; return 4; }",
          "3459:     if( u<=MAX_6BYTE ){ *pLen = 6; return 5; }",
          "3461:     return 6;",
          "3462:   }",
          "3463:   if( flags&MEM_Real ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3463:     if( flags&MEM_IntReal ){",
          "3467:       pMem->u.r = (double)pMem->u.i;",
          "3468:       pMem->flags &= ~MEM_IntReal;",
          "3469:       pMem->flags |= MEM_Real;",
          "3470:       return 7;",
          "3471:     }",
          "",
          "---------------"
        ],
        "test/select3.test||test/select3.test": [
          "File: test/select3.test -> test/select3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "261:   }",
          "262: } {real}",
          "264: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "264: # 2019-05-09 ticket https://www.sqlite.org/src/tktview/6c1d3febc00b22d457c7",
          "265: #",
          "266: unset -nocomplain x",
          "267: foreach {id x} {",
          "268:   100 127",
          "269:   101 128",
          "270:   102 -127",
          "271:   103 -128",
          "272:   104 -129",
          "273:   110 32767",
          "274:   111 32768",
          "275:   112 -32767",
          "276:   113 -32768",
          "277:   114 -32769",
          "278:   120 2147483647",
          "279:   121 2147483648",
          "280:   122 -2147483647",
          "281:   123 -2147483648",
          "282:   124 -2147483649",
          "283:   130 140737488355327",
          "284:   131 140737488355328",
          "285:   132 -140737488355327",
          "286:   133 -140737488355328",
          "287:   134 -140737488355329",
          "288:   140 9223372036854775807",
          "289:   141 -9223372036854775807",
          "290:   142 -9223372036854775808",
          "291:   143 9223372036854775806",
          "292:   144 9223372036854775805",
          "293:   145 -9223372036854775806",
          "294:   146 -9223372036854775805",
          "296: } {",
          "297:   set x [expr {$x+0}]",
          "298:   do_execsql_test select3-8.$id {",
          "299:      DROP TABLE IF EXISTS t1;",
          "300:      CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);",
          "301:      INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);",
          "302:      UPDATE t1 SET c0 = NULL;",
          "303:      UPDATE OR REPLACE t1 SET c1 = 1;",
          "304:      SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);",
          "305:      PRAGMA integrity_check;",
          "306:   } {{} 1.0 ok}",
          "307: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "82642f815bc9f31af3403fbbdf94d6f8d9ab3615",
      "candidate_info": {
        "commit_hash": "82642f815bc9f31af3403fbbdf94d6f8d9ab3615",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/82642f815bc9f31af3403fbbdf94d6f8d9ab3615",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Ensure that the nProgressLimit variable is always initialized in sqlite3VdbeExec(), even if the routine jumps to its exit processing early.\n\nFossilOrigin-Name: 167b91df77fff1a84791f6ab5f72239b90475475be690a838248119b6dd312f0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 68cce272e7f7cbc0c319ee8b7ff674d652cb1e95e903d99d848c41dff2b5d304",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "624:   sqlite3VdbeEnter(p);",
          "625:   if( p->rc==SQLITE_NOMEM ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "625: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "626:   if( db->xProgress ){",
          "627:     u32 iPrior = p->aCounter[SQLITE_STMTSTATUS_VM_STEP];",
          "628:     assert( 0 < db->nProgressOps );",
          "629:     nProgressLimit = db->nProgressOps - (iPrior % db->nProgressOps);",
          "630:   }else{",
          "631:     nProgressLimit = 0xffffffff;",
          "632:   }",
          "633: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "635:   db->busyHandler.nBusy = 0;",
          "636:   if( db->u1.isInterrupted ) goto abort_due_to_interrupt;",
          "637:   sqlite3VdbeIOTraceSql(p);",
          "647: #ifdef SQLITE_DEBUG",
          "648:   sqlite3BeginBenignMalloc();",
          "649:   if( p->pc==0",
          "",
          "[Removed Lines]",
          "638: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "639:   if( db->xProgress ){",
          "640:     u32 iPrior = p->aCounter[SQLITE_STMTSTATUS_VM_STEP];",
          "641:     assert( 0 < db->nProgressOps );",
          "642:     nProgressLimit = db->nProgressOps - (iPrior % db->nProgressOps);",
          "643:   }else{",
          "644:     nProgressLimit = 0xffffffff;",
          "645:   }",
          "646: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38cefc83c81842f4d4c1c92958e688c3bac14b79",
      "candidate_info": {
        "commit_hash": "38cefc83c81842f4d4c1c92958e688c3bac14b79",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/38cefc83c81842f4d4c1c92958e688c3bac14b79",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/index6.test"
        ],
        "message": "The expression \"(x IS FALSE) IS FALSE\" does not imply that X is not NULL. Ticket [a6408d42b9f44462]\n\nFossilOrigin-Name: 45ff2b1f2693bb0231a864a511bb82cf2a5945ab3d806a5bbaf1517ecb287883",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/index6.test||test/index6.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 80124ae55246b79023d23d3f55487ac3c0b40e8ff301c5daf4dd0631de8ddb29",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5036:     case TK_TRUTH: {",
          "5037:       if( seenNot ) return 0;",
          "5038:       if( p->op2!=TK_IS ) return 0;",
          "5040:     }",
          "5041:     case TK_BITNOT:",
          "5042:     case TK_NOT: {",
          "",
          "[Removed Lines]",
          "5039:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, seenNot);",
          "",
          "[Added Lines]",
          "5039:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, 1);",
          "",
          "---------------"
        ],
        "test/index6.test||test/index6.test": [
          "File: test/index6.test -> test/index6.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "437:   SELECT * FROM t0 WHERE CASE c0 WHEN 0 THEN 0 ELSE 1 END;",
          "438: } {{} row}",
          "440: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "440: # 2019-08-30",
          "441: # Ticket https://www.sqlite.org/src/info/a6408d42b9f44462",
          "442: #",
          "443: do_execsql_test index6-15.1 {",
          "444:   DROP TABLE t0;",
          "445:   CREATE TABLE t0(c0);",
          "446:   INSERT INTO t0(c0) VALUES (NULL);",
          "447:   CREATE INDEX i0 ON t0(1) WHERE c0 NOT NULL;",
          "448:   SELECT 1 FROM t0 WHERE (t0.c0 IS FALSE) IS FALSE;",
          "449: } {1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "01d1801cab06d9ea35f07a530868cb79391a49a8",
      "candidate_info": {
        "commit_hash": "01d1801cab06d9ea35f07a530868cb79391a49a8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/01d1801cab06d9ea35f07a530868cb79391a49a8",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases added to fuzzdata8.db.\n\nFossilOrigin-Name: 5baffcda7d5a42a99fa905faa834f14b94b1e2a26b5221f15d8ae8f1f5e3236a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d0bc7db6b0a53edc04815622c46250d26f526f56e59f14875f4e18c75b49000d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a6bd1871d1c0c63df9a0482b07477380eb55200d",
      "candidate_info": {
        "commit_hash": "a6bd1871d1c0c63df9a0482b07477380eb55200d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a6bd1871d1c0c63df9a0482b07477380eb55200d",
        "files": [
          "ext/fts5/fts5_config.c",
          "ext/fts5/test/fts5misc.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Disallow fts5 page sizes greater than 65536 bytes - as there are 16-bit offsets used in the page header.\n\nFossilOrigin-Name: 75775c5ab44e497cb19be10397229637f1374f05c3244e8f92d6c54fcea94f5f",
        "before_after_code_files": [
          "ext/fts5/fts5_config.c||ext/fts5/fts5_config.c",
          "ext/fts5/test/fts5misc.test||ext/fts5/test/fts5misc.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_config.c||ext/fts5/fts5_config.c": [
          "File: ext/fts5/fts5_config.c -> ext/fts5/fts5_config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #define FTS5_DEFAULT_HASHSIZE    (1024*1024)",
          "28: static int fts5_iswhitespace(char x){",
          "29:   return (x==' ');",
          "",
          "[Removed Lines]",
          "26: #define FTS5_MAX_PAGE_SIZE (128*1024)",
          "",
          "[Added Lines]",
          "26: #define FTS5_MAX_PAGE_SIZE (64*1024)",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5misc.test||ext/fts5/test/fts5misc.test": [
          "File: ext/fts5/test/fts5misc.test -> ext/fts5/test/fts5misc.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "151: }",
          "154: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153: #-------------------------------------------------------------------------",
          "154: # Ticket [81a7f7b9].",
          "155: #",
          "156: reset_db",
          "157: do_execsql_test 5.0 {",
          "158:   CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1);",
          "159:   INSERT INTO vt0(vt0, rank) VALUES('pgsz', '65536');",
          "160:   WITH s(i) AS (",
          "161:     SELECT 1 UNION ALL SELECT i+1 FROM s WHERE i<1236",
          "162:   )",
          "163:   INSERT INTO vt0(c0) SELECT '0' FROM s;",
          "164: } {}",
          "166: do_execsql_test 5.1 {",
          "167:   UPDATE vt0 SET c1 = 'T,D&p^y/7#3*v<b<4j7|f';",
          "168: }",
          "170: do_execsql_test 5.2 {",
          "171:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "172: }",
          "174: do_catchsql_test 5.3 {",
          "175:   INSERT INTO vt0(vt0, rank) VALUES('pgsz', '65537');",
          "176: } {1 {SQL logic error}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e17571c789db31123642d0ed1f3d8764e070019e0deb8b88cce58d2183551cdf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}