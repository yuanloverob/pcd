{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3bab12197fe6d25f1bd0f40d5e5e83ad0d9276c8",
      "candidate_info": {
        "commit_hash": "3bab12197fe6d25f1bd0f40d5e5e83ad0d9276c8",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3bab12197fe6d25f1bd0f40d5e5e83ad0d9276c8",
        "files": [
          "tools/msvs/nodejsvars.bat"
        ],
        "message": "windows: fix/improve nodejsvars.bat\n\n- Fix: it didn't work for the x86 version of node\n- Also add NPM to path\n- Also print node version\n- Don't change dir to home dir if not started from the start menu",
        "before_after_code_files": [
          "tools/msvs/nodejsvars.bat||tools/msvs/nodejsvars.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/msvs/nodejsvars.bat||tools/msvs/nodejsvars.bat": [
          "File: tools/msvs/nodejsvars.bat -> tools/msvs/nodejsvars.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: @echo off",
          "7: setlocal",
          "10: endlocal",
          "",
          "[Removed Lines]",
          "3: @rem Ensure this Node.js is first in the PATH",
          "4: set PATH=%~dp0;%PATH%",
          "6: @rem Figure out architecture and print it.",
          "8: for /F \"usebackq delims=\" %%v in (`\"%~dp0\"node.exe -p -e process.arch`) do set arch=%%v",
          "9: echo Your environment has been set up for using Node.js (%arch%) and NPM",
          "12: @rem Go to the user's home directory",
          "13: cd /d %HOMEDRIVE%\"%HOMEPATH%\"",
          "",
          "[Added Lines]",
          "3: rem Ensure this Node.js and NPM are first in the PATH",
          "4: set PATH=%APPDATA%\\npm;%~dp0;%PATH%",
          "6: rem Figure out node version and architecture and print it.",
          "8: pushd \"%~dp0\"",
          "9: set print_version=.\\node.exe -p -e \"process.versions.node + ' (' + process.arch + ')'\"",
          "10: for /F \"usebackq delims=\" %%v in (`%print_version%`) do set version=%%v",
          "11: echo Your environment has been set up for using Node.js %version% and NPM",
          "12: popd",
          "15: rem If we're in the node.js directory, change to the user's home dir.",
          "16: if \"%CD%\\\"==\"%~dp0\" cd /d \"%HOMEDRIVE%%HOMEPATH%\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c171a504d2357185efab21e81b33e2dee1ab1da",
      "candidate_info": {
        "commit_hash": "4c171a504d2357185efab21e81b33e2dee1ab1da",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4c171a504d2357185efab21e81b33e2dee1ab1da",
        "files": [
          "deps/uv/src/unix/internal.h"
        ],
        "message": "uv: upgrade to 3d9de13",
        "before_after_code_files": [
          "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h": [
          "File: deps/uv/src/unix/internal.h -> deps/uv/src/unix/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: # define HAVE_KQUEUE 1",
          "64: #endif",
          "66: #define UNREACHABLE()                                                         \\",
          "67:   do {                                                                        \\",
          "68:     assert(0 && \"unreachable code\");                                          \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: #if defined(__APPLE__) && !defined(TARGET_OS_IPHONE)",
          "67: # include <CoreServices/CoreServices.h>",
          "68: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198: int uv__fsevents_close(uv_fs_event_t* handle);",
          "203: static const int kFSEventStreamCreateFlagFileEvents = 0x00000010;",
          "204: static const int kFSEventStreamEventFlagItemCreated = 0x00000100;",
          "",
          "[Removed Lines]",
          "201: #if __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ < 1070",
          "",
          "[Added Lines]",
          "205: #ifndef MAC_OS_X_VERSION_10_7",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4bc1d395de6abed2cf1e4d0b7b3a1480a21c368f",
      "candidate_info": {
        "commit_hash": "4bc1d395de6abed2cf1e4d0b7b3a1480a21c368f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4bc1d395de6abed2cf1e4d0b7b3a1480a21c368f",
        "files": [
          "ChangeLog",
          "src/node_version.h"
        ],
        "message": "2012.05.15 Version 0.6.18 (stable)\n\n* windows: skip GetFileAttributes call when opening a file (Bert Belder)\n\n* crypto: add PKCS12/PFX support (Sambasiva Suda)\n\n* #3240: child_process: delete NODE_CHANNEL_FD from env in spawn (Ben Noordhuis)\n\n* windows: add test for path.normalize with UNC paths (Bert Belder)\n\n* windows: make path.normalize convert all slashes to backslashes (Bert Belder)\n\n* fs: Automatically close FSWatcher on error (Bert Belder)\n\n* #3258: fs.ReadStream.pause() emits duplicate data event (koichik)\n\n* pipe_wrap: don't assert() on pipe accept errors (Ben Noordhuis)\n\n* Better exception output for module load and process.nextTick (Felix Geisendo\u0308rfer)\n\n* zlib: fix error reporting (Ben Noordhuis)\n\n* http: Don't destroy on timeout (isaacs)\n\n* #3231: http: Don't try to emit error on a null'ed req object (isaacs)\n\n* #3236: http: Refactor ClientRequest.onSocket (isaacs)",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 6",
          "31: #define NODE_PATCH_VERSION 18",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a64acd8baadaa78910bb3cb429602f7f7619a486",
      "candidate_info": {
        "commit_hash": "a64acd8baadaa78910bb3cb429602f7f7619a486",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a64acd8baadaa78910bb3cb429602f7f7619a486",
        "files": [
          "test/simple/test-cluster-worker-death.js"
        ],
        "message": "test: cluster: add worker death event test",
        "before_after_code_files": [
          "test/simple/test-cluster-worker-death.js||test/simple/test-cluster-worker-death.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-cluster-worker-death.js||test/simple/test-cluster-worker-death.js": [
          "File: test/simple/test-cluster-worker-death.js -> test/simple/test-cluster-worker-death.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var cluster = require('cluster');",
          "26: if (!cluster.isMaster) {",
          "27:   process.exit(42);",
          "28: }",
          "29: else {",
          "30:   var seenExit = 0;",
          "31:   var seenDeath = 0;",
          "32:   var worker = cluster.fork();",
          "33:   worker.on('exit', function(statusCode) {",
          "34:     assert.equal(statusCode, 42);",
          "35:     seenExit++;",
          "36:   });",
          "37:   cluster.on('death', function(worker_) {",
          "38:     assert.equal(worker_, worker);",
          "39:     seenDeath++;",
          "40:   });",
          "41:   process.on('exit', function() {",
          "42:     assert.equal(seenExit, 1);",
          "43:     assert.equal(seenDeath, 1);",
          "44:   });",
          "45: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3fd13c6426b338196d138b0dc564020daed78bcd",
      "candidate_info": {
        "commit_hash": "3fd13c6426b338196d138b0dc564020daed78bcd",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3fd13c6426b338196d138b0dc564020daed78bcd",
        "files": [
          "lib/http.js",
          "test/simple/test-http-expect-continue.js"
        ],
        "message": "http: fix free http-parser too early\n\nwhen the status code is 100 (Continue).\n\nFixes #2636.",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "test/simple/test-http-expect-continue.js||test/simple/test-http-expect-continue.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1169:           socket.destroy();",
          "1170:         }",
          "1171:         freeParser();",
          "1173:         freeParser();",
          "1174:       }",
          "1175:     };",
          "",
          "[Removed Lines]",
          "1172:       } else if (parser.incoming && parser.incoming.complete) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-http-expect-continue.js||test/simple/test-http-expect-continue.js": [
          "File: test/simple/test-http-expect-continue.js -> test/simple/test-http-expect-continue.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:   common.debug('Server got Expect: 100-continue...');",
          "45:   res.writeContinue();",
          "46:   sent_continue = true;",
          "48: });",
          "49: server.listen(common.PORT);",
          "",
          "[Removed Lines]",
          "47:   handler(req, res);",
          "",
          "[Added Lines]",
          "47:   setTimeout(function() {",
          "48:     handler(req, res);",
          "49:   }, 100);",
          "",
          "---------------"
        ]
      }
    }
  ]
}