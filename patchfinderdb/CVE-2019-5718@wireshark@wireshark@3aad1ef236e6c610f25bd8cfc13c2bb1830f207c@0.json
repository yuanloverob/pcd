{
  "cve_id": "CVE-2019-5718",
  "cve_desc": "In Wireshark 2.6.0 to 2.6.5 and 2.4.0 to 2.4.11, the RTSE dissector and other ASN.1 dissectors could crash. This was addressed in epan/charsets.c by adding a get_t61_string length check.",
  "repo": "wireshark/wireshark",
  "patch_hash": "3aad1ef236e6c610f25bd8cfc13c2bb1830f207c",
  "patch_info": {
    "commit_hash": "3aad1ef236e6c610f25bd8cfc13c2bb1830f207c",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/3aad1ef236e6c610f25bd8cfc13c2bb1830f207c",
    "files": [
      "epan/charsets.c"
    ],
    "message": "epan: Add a boundary check to get_t61_string.\n\nAdd a boundary check to make sure we don't go past the end of \"ptr\".\n\nBug: 15373\nChange-Id: I85394e8e6e477b47919362af146051cc8911254b\nReviewed-on: https://code.wireshark.org/review/31437\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
    "before_after_code_files": [
      "epan/charsets.c||epan/charsets.c"
    ]
  },
  "patch_diff": {
    "epan/charsets.c||epan/charsets.c": [
      "File: epan/charsets.c -> epan/charsets.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1430:     for (i = 0, c = ptr; i < length; c++, i++) {",
      "1431:         if (!t61_tab[*c]) {",
      "1432:             wmem_strbuf_append_unichar(strbuf, UNREPL);",
      "1434:             gint j = *c & 0x0f;",
      "",
      "[Removed Lines]",
      "1433:         } else if ((*c & 0xf0) == 0xc0) {",
      "",
      "[Added Lines]",
      "1433:         } else if (i < length - 1 && (*c & 0xf0) == 0xc0) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9b4a937c88adc60c6b68653e224a8680ac4dfb40",
      "candidate_info": {
        "commit_hash": "9b4a937c88adc60c6b68653e224a8680ac4dfb40",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/9b4a937c88adc60c6b68653e224a8680ac4dfb40",
        "files": [
          "epan/charsets.c"
        ],
        "message": "epan: Add a boundary check to get_t61_string.\n\nAdd a boundary check to make sure we don't go past the end of \"ptr\".\n\nBug: 15373\nChange-Id: I85394e8e6e477b47919362af146051cc8911254b\nReviewed-on: https://code.wireshark.org/review/31439\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
        "before_after_code_files": [
          "epan/charsets.c||epan/charsets.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/charsets.c||epan/charsets.c"
          ],
          "candidate": [
            "epan/charsets.c||epan/charsets.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/charsets.c||epan/charsets.c": [
          "File: epan/charsets.c -> epan/charsets.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1370:     for (i = 0, c = ptr; i < length; c++, i++) {",
          "1371:         if (!t61_tab[*c]) {",
          "1372:             wmem_strbuf_append_unichar(strbuf, UNREPL);",
          "1374:             gint j = *c & 0x0f;",
          "",
          "[Removed Lines]",
          "1373:         } else if ((*c & 0xf0) == 0xc0) {",
          "",
          "[Added Lines]",
          "1373:         } else if (i < length - 1 && (*c & 0xf0) == 0xc0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd09cb5cfb673beca3cce20b1d6a9bc67a134ae1",
      "candidate_info": {
        "commit_hash": "cd09cb5cfb673beca3cce20b1d6a9bc67a134ae1",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/cd09cb5cfb673beca3cce20b1d6a9bc67a134ae1",
        "files": [
          "epan/charsets.c"
        ],
        "message": "epan: Add a boundary check to get_t61_string.\n\nAdd a boundary check to make sure we don't go past the end of \"ptr\".\n\nBug: 15373\nChange-Id: I85394e8e6e477b47919362af146051cc8911254b\nReviewed-on: https://code.wireshark.org/review/31440\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
        "before_after_code_files": [
          "epan/charsets.c||epan/charsets.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/charsets.c||epan/charsets.c"
          ],
          "candidate": [
            "epan/charsets.c||epan/charsets.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/charsets.c||epan/charsets.c": [
          "File: epan/charsets.c -> epan/charsets.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1382:     for (i = 0, c = (guint8 *)ptr; i < length; c++, i++) {",
          "1383:         if (!t61_tab[*c]) {",
          "1384:             wmem_strbuf_append_unichar(strbuf, UNREPL);",
          "1386:             gint j = *c & 0x0f;",
          "",
          "[Removed Lines]",
          "1385:         } else if ((*c & 0xf0) == 0xc0) {",
          "",
          "[Added Lines]",
          "1385:         } else if (i < length - 1 && (*c & 0xf0) == 0xc0) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}