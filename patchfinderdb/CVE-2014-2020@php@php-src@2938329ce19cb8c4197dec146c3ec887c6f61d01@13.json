{
  "cve_id": "CVE-2014-2020",
  "cve_desc": "ext/gd/gd.c in PHP 5.5.x before 5.5.9 does not check data types, which might allow remote attackers to obtain sensitive information by using a (1) string or (2) array data type in place of a numeric data type, as demonstrated by an imagecrop function call with a string for the x dimension value, a different vulnerability than CVE-2013-7226.",
  "repo": "php/php-src",
  "patch_hash": "2938329ce19cb8c4197dec146c3ec887c6f61d01",
  "patch_info": {
    "commit_hash": "2938329ce19cb8c4197dec146c3ec887c6f61d01",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/2938329ce19cb8c4197dec146c3ec887c6f61d01",
    "files": [
      "NEWS",
      "ext/gd/gd.c",
      "ext/gd/tests/bug66356.phpt",
      "main/php_version.h"
    ],
    "message": "Fixed bug #66356 (Heap Overflow Vulnerability in imagecrop())\n\nAnd also fixed the bug: arguments are altered after some calls",
    "before_after_code_files": [
      "ext/gd/gd.c||ext/gd/gd.c",
      "ext/gd/tests/bug66356.phpt||ext/gd/tests/bug66356.phpt",
      "main/php_version.h||main/php_version.h"
    ]
  },
  "patch_diff": {
    "ext/gd/gd.c||ext/gd/gd.c": [
      "File: ext/gd/gd.c -> ext/gd/gd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1538:    break;",
      "1539:   }",
      "1544:  }",
      "1546:  gdImageSetStyle(im, stylearr, index);",
      "",
      "[Removed Lines]",
      "1541:   convert_to_long_ex(item);",
      "1543:   stylearr[index++] = Z_LVAL_PP(item);",
      "",
      "[Added Lines]",
      "1541:   if (Z_TYPE_PP(item) != IS_LONG) {",
      "1542:    zval lval;",
      "1543:    lval = **item;",
      "1544:    zval_copy_ctor(&lval);",
      "1545:    convert_to_long(&lval);",
      "1546:    stylearr[index++] = Z_LVAL(lval);",
      "1547:   } else {",
      "1548:    stylearr[index++] = Z_LVAL_PP(item);",
      "1549:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3347:  for (i = 0; i < npoints; i++) {",
      "3348:   if (zend_hash_index_find(Z_ARRVAL_P(POINTS), (i * 2), (void **) &var) == SUCCESS) {",
      "3352:   }",
      "3353:   if (zend_hash_index_find(Z_ARRVAL_P(POINTS), (i * 2) + 1, (void **) &var) == SUCCESS) {",
      "3357:   }",
      "3358:  }",
      "",
      "[Removed Lines]",
      "3349:    SEPARATE_ZVAL((var));",
      "3350:    convert_to_long(*var);",
      "3351:    points[i].x = Z_LVAL_PP(var);",
      "3354:    SEPARATE_ZVAL(var);",
      "3355:    convert_to_long(*var);",
      "3356:    points[i].y = Z_LVAL_PP(var);",
      "",
      "[Added Lines]",
      "3355:    if (Z_TYPE_PP(var) != IS_LONG) {",
      "3356:     zval lval;",
      "3357:     lval = **var;",
      "3358:     zval_copy_ctor(&lval);",
      "3359:     convert_to_long(&lval);",
      "3360:     points[i].x = Z_LVAL(lval);",
      "3361:    } else {",
      "3362:     points[i].x = Z_LVAL_PP(var);",
      "3363:    }",
      "3366:    if (Z_TYPE_PP(var) != IS_LONG) {",
      "3367:     zval lval;",
      "3368:     lval = **var;",
      "3369:     zval_copy_ctor(&lval);",
      "3370:     convert_to_long(&lval);",
      "3371:     points[i].y = Z_LVAL(lval);",
      "3372:    } else {",
      "3373:     points[i].y = Z_LVAL_PP(var);",
      "3374:    }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "4860:    for (j=0; j<3; j++) {",
      "4861:     if (zend_hash_index_find(Z_ARRVAL_PP(var), (j), (void **) &var2) == SUCCESS) {",
      "4865:     } else {",
      "4866:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"You must have a 3x3 matrix\");",
      "4867:      RETURN_FALSE;",
      "",
      "[Removed Lines]",
      "4862:      SEPARATE_ZVAL(var2);",
      "4863:      convert_to_double(*var2);",
      "4864:      matrix[i][j] = (float)Z_DVAL_PP(var2);",
      "",
      "[Added Lines]",
      "4880:      if (Z_TYPE_PP(var2) != IS_DOUBLE) {",
      "4881:       zval dval;",
      "4882:       dval = **var;",
      "4883:       zval_copy_ctor(&dval);",
      "4884:       convert_to_double(&dval);",
      "4885:       matrix[i][j] = (float)Z_DVAL(dval);",
      "4886:      } else {",
      "4887:       matrix[i][j] = (float)Z_DVAL_PP(var2);",
      "4888:      }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4954:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
      "4956:  if (zend_hash_find(HASH_OF(z_rect), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
      "4958:  } else {",
      "4959:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
      "4960:   RETURN_FALSE;",
      "4961:  }",
      "4963:  if (zend_hash_find(HASH_OF(z_rect), \"y\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
      "4965:  } else {",
      "4966:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
      "4967:   RETURN_FALSE;",
      "4968:  }",
      "4970:  if (zend_hash_find(HASH_OF(z_rect), \"width\", sizeof(\"width\"), (void **)&tmp) != FAILURE) {",
      "4972:  } else {",
      "4973:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing width\");",
      "4974:   RETURN_FALSE;",
      "4975:  }",
      "4977:  if (zend_hash_find(HASH_OF(z_rect), \"height\", sizeof(\"height\"), (void **)&tmp) != FAILURE) {",
      "4979:  } else {",
      "4980:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing height\");",
      "4981:   RETURN_FALSE;",
      "",
      "[Removed Lines]",
      "4957:   rect.x = Z_LVAL_PP(tmp);",
      "4964:   rect.y = Z_LVAL_PP(tmp);",
      "4971:   rect.width = Z_LVAL_PP(tmp);",
      "4978:   rect.height = Z_LVAL_PP(tmp);",
      "",
      "[Added Lines]",
      "4981:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "4982:    zval lval;",
      "4983:    lval = **tmp;",
      "4984:    zval_copy_ctor(&lval);",
      "4985:    convert_to_long(&lval);",
      "4986:    rect.x = Z_LVAL(lval);",
      "4987:   } else {",
      "4988:    rect.x = Z_LVAL_PP(tmp);",
      "4989:   }",
      "4996:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "4997:    zval lval;",
      "4998:    lval = **tmp;",
      "4999:    zval_copy_ctor(&lval);",
      "5000:    convert_to_long(&lval);",
      "5001:    rect.y = Z_LVAL(lval);",
      "5002:   } else {",
      "5003:    rect.y = Z_LVAL_PP(tmp);",
      "5004:   }",
      "5011:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5012:    zval lval;",
      "5013:    lval = **tmp;",
      "5014:    zval_copy_ctor(&lval);",
      "5015:    convert_to_long(&lval);",
      "5016:    rect.width = Z_LVAL(lval);",
      "5017:   } else {",
      "5018:    rect.width = Z_LVAL_PP(tmp);",
      "5019:   }",
      "5026:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5027:    zval lval;",
      "5028:    lval = **tmp;",
      "5029:    zval_copy_ctor(&lval);",
      "5030:    convert_to_long(&lval);",
      "5031:    rect.height = Z_LVAL(lval);",
      "5032:   } else {",
      "5033:    rect.height = Z_LVAL_PP(tmp);",
      "5034:   }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "5124:      affine[i] = Z_DVAL_PP(zval_affine_elem);",
      "5125:      break;",
      "5126:     case IS_STRING:",
      "5129:      break;",
      "5130:     default:",
      "5131:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid type for element %i\", i);",
      "",
      "[Removed Lines]",
      "5127:      convert_to_double_ex(zval_affine_elem);",
      "5128:      affine[i] = Z_DVAL_PP(zval_affine_elem);",
      "",
      "[Added Lines]",
      "5183:      {",
      "5184:       zval dval;",
      "5185:       dval = **zval_affine_elem;",
      "5186:       zval_copy_ctor(&dval);",
      "5187:       convert_to_double(&dval);",
      "5188:       affine[i] = Z_DVAL(dval);",
      "5189:      }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "5137:  if (z_rect != NULL) {",
      "5138:   if (zend_hash_find(HASH_OF(z_rect), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
      "5141:   } else {",
      "5142:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
      "5143:    RETURN_FALSE;",
      "5144:   }",
      "5146:   if (zend_hash_find(HASH_OF(z_rect), \"y\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
      "5149:   } else {",
      "5150:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
      "5151:    RETURN_FALSE;",
      "5152:   }",
      "5154:   if (zend_hash_find(HASH_OF(z_rect), \"width\", sizeof(\"width\"), (void **)&tmp) != FAILURE) {",
      "5157:   } else {",
      "5158:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing width\");",
      "5159:    RETURN_FALSE;",
      "5160:   }",
      "5162:   if (zend_hash_find(HASH_OF(z_rect), \"height\", sizeof(\"height\"), (void **)&tmp) != FAILURE) {",
      "5165:   } else {",
      "5166:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing height\");",
      "5167:    RETURN_FALSE;",
      "",
      "[Removed Lines]",
      "5139:    convert_to_long_ex(tmp);",
      "5140:    rect.x = Z_LVAL_PP(tmp);",
      "5147:    convert_to_long_ex(tmp);",
      "5148:    rect.y = Z_LVAL_PP(tmp);",
      "5155:    convert_to_long_ex(tmp);",
      "5156:    rect.width = Z_LVAL_PP(tmp);",
      "5163:    convert_to_long_ex(tmp);",
      "5164:    rect.height = Z_LVAL_PP(tmp);",
      "",
      "[Added Lines]",
      "5200:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5201:     zval lval;",
      "5202:     lval = **tmp;",
      "5203:     zval_copy_ctor(&lval);",
      "5204:     convert_to_long(&lval);",
      "5205:     rect.x = Z_LVAL(lval);",
      "5206:    } else {",
      "5207:     rect.x = Z_LVAL_PP(tmp);",
      "5208:    }",
      "5215:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5216:     zval lval;",
      "5217:     lval = **tmp;",
      "5218:     zval_copy_ctor(&lval);",
      "5219:     convert_to_long(&lval);",
      "5220:     rect.y = Z_LVAL(lval);",
      "5221:    } else {",
      "5222:     rect.y = Z_LVAL_PP(tmp);",
      "5223:    }",
      "5230:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5231:     zval lval;",
      "5232:     lval = **tmp;",
      "5233:     zval_copy_ctor(&lval);",
      "5234:     convert_to_long(&lval);",
      "5235:     rect.width = Z_LVAL(lval);",
      "5236:    } else {",
      "5237:     rect.width = Z_LVAL_PP(tmp);",
      "5238:    }",
      "5245:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
      "5246:     zval lval;",
      "5247:     lval = **tmp;",
      "5248:     zval_copy_ctor(&lval);",
      "5249:     convert_to_long(&lval);",
      "5250:     rect.height = Z_LVAL(lval);",
      "5251:    } else {",
      "5252:     rect.height = Z_LVAL_PP(tmp);",
      "5253:    }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "5211:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Array expected as options\");",
      "5212:    }",
      "5213:    if (zend_hash_find(HASH_OF(options), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
      "5216:    } else {",
      "5217:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
      "5218:     RETURN_FALSE;",
      "5219:    }",
      "5221:    if (zend_hash_find(HASH_OF(options), \"y\", sizeof(\"y\"), (void **)&tmp) != FAILURE) {",
      "5224:    } else {",
      "5225:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
      "5226:     RETURN_FALSE;",
      "",
      "[Removed Lines]",
      "5214:     convert_to_double_ex(tmp);",
      "5215:     x = Z_DVAL_PP(tmp);",
      "5222:     convert_to_double_ex(tmp);",
      "5223:     y = Z_DVAL_PP(tmp);",
      "",
      "[Added Lines]",
      "5303:     if (Z_TYPE_PP(tmp) != IS_DOUBLE) {",
      "5304:      zval dval;",
      "5305:      dval = **tmp;",
      "5306:      zval_copy_ctor(&dval);",
      "5307:      convert_to_double(&dval);",
      "5308:      x = Z_DVAL(dval);",
      "5309:     } else {",
      "5310:      x = Z_DVAL_PP(tmp);",
      "5311:     }",
      "5318:     if (Z_TYPE_PP(tmp) != IS_DOUBLE) {",
      "5319:      zval dval;",
      "5320:      dval = **tmp;",
      "5321:      zval_copy_ctor(&dval);",
      "5322:      convert_to_double(&dval);",
      "5323:      y = Z_DVAL(dval);",
      "5324:     } else {",
      "5325:      y = Z_DVAL_PP(tmp);",
      "5326:     }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "5300:      m1[i] = Z_DVAL_PP(tmp);",
      "5301:      break;",
      "5302:     case IS_STRING:",
      "5305:      break;",
      "5306:     default:",
      "5307:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid type for element %i\", i);",
      "",
      "[Removed Lines]",
      "5303:      convert_to_double_ex(tmp);",
      "5304:      m1[i] = Z_DVAL_PP(tmp);",
      "",
      "[Added Lines]",
      "5406:      {",
      "5407:       zval dval;",
      "5408:       dval = **tmp;",
      "5409:       zval_copy_ctor(&dval);",
      "5410:       convert_to_double(&dval);",
      "5411:       m1[i] = Z_DVAL(dval);",
      "5412:      }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "5317:      m2[i] = Z_DVAL_PP(tmp);",
      "5318:      break;",
      "5319:     case IS_STRING:",
      "5322:      break;",
      "5323:     default:",
      "5324:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid type for element %i\", i);",
      "",
      "[Removed Lines]",
      "5320:      convert_to_double_ex(tmp);",
      "5321:      m2[i] = Z_DVAL_PP(tmp);",
      "",
      "[Added Lines]",
      "5428:      {",
      "5429:       zval dval;",
      "5430:       dval = **tmp;",
      "5431:       zval_copy_ctor(&dval);",
      "5432:       convert_to_double(&dval);",
      "5433:       m2[i] = Z_DVAL(dval);",
      "5434:      }",
      "",
      "---------------"
    ],
    "ext/gd/tests/bug66356.phpt||ext/gd/tests/bug66356.phpt": [
      "File: ext/gd/tests/bug66356.phpt -> ext/gd/tests/bug66356.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #66356 (Heap Overflow Vulnerability in imagecrop())",
      "3: --SKIPIF--",
      "4: <?php",
      "5:  if(!extension_loaded('gd')){ die('skip gd extension not available'); }",
      "6: ?>",
      "7: --FILE--",
      "8: <?php",
      "9: $img = imagecreatetruecolor(10, 10);",
      "10: $img = imagecrop($img, array(\"x\" => \"a\", \"y\" => 0, \"width\" => 10, \"height\" => 10));",
      "11: $arr = array(\"x\" => \"a\", \"y\" => \"12b\", \"width\" => 10, \"height\" => 10);",
      "12: $img = imagecrop($img, $arr);",
      "13: print_r($arr);",
      "14: ?>",
      "15: --EXPECTF--",
      "16: Array",
      "17: (",
      "18:     [x] => a",
      "19:     [y] => 12b",
      "20:     [width] => 10",
      "21:     [height] => 10",
      "22: )",
      "",
      "---------------"
    ],
    "main/php_version.h||main/php_version.h": [
      "File: main/php_version.h -> main/php_version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: #define PHP_MAJOR_VERSION 5",
      "4: #define PHP_MINOR_VERSION 5",
      "6: #define PHP_EXTRA_VERSION \"-dev\"",
      "",
      "[Removed Lines]",
      "5: #define PHP_RELEASE_VERSION 8",
      "7: #define PHP_VERSION \"5.5.8-dev\"",
      "8: #define PHP_VERSION_ID 50508",
      "",
      "[Added Lines]",
      "5: #define PHP_RELEASE_VERSION 5",
      "7: #define PHP_VERSION \"5.5.5-dev\"",
      "8: #define PHP_VERSION_ID 50505",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3e7ce20a5b17cf4be6fe3ed5efd8efcf95b1979d",
      "candidate_info": {
        "commit_hash": "3e7ce20a5b17cf4be6fe3ed5efd8efcf95b1979d",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/3e7ce20a5b17cf4be6fe3ed5efd8efcf95b1979d",
        "files": [
          "NEWS",
          "configure.in",
          "main/php_version.h"
        ],
        "message": "back to dev",
        "before_after_code_files": [
          "configure.in||configure.in",
          "main/php_version.h||main/php_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "main/php_version.h||main/php_version.h"
          ],
          "candidate": [
            "main/php_version.h||main/php_version.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.in||configure.in": [
          "File: configure.in -> configure.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "120: PHP_MAJOR_VERSION=5",
          "121: PHP_MINOR_VERSION=4",
          "122: PHP_RELEASE_VERSION=0",
          "124: PHP_VERSION=\"$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_RELEASE_VERSION$PHP_EXTRA_VERSION\"",
          "125: PHP_VERSION_ID=`expr [$]PHP_MAJOR_VERSION \\* 10000 + [$]PHP_MINOR_VERSION \\* 100 + [$]PHP_RELEASE_VERSION`",
          "",
          "[Removed Lines]",
          "123: PHP_EXTRA_VERSION=\"alpha3\"",
          "",
          "[Added Lines]",
          "123: PHP_EXTRA_VERSION=\"beta1-dev\"",
          "",
          "---------------"
        ],
        "main/php_version.h||main/php_version.h": [
          "File: main/php_version.h -> main/php_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #define PHP_MAJOR_VERSION 5",
          "4: #define PHP_MINOR_VERSION 4",
          "5: #define PHP_RELEASE_VERSION 0",
          "8: #define PHP_VERSION_ID 50400",
          "",
          "[Removed Lines]",
          "6: #define PHP_EXTRA_VERSION \"alpha3\"",
          "7: #define PHP_VERSION \"5.4.0alpha3\"",
          "",
          "[Added Lines]",
          "6: #define PHP_EXTRA_VERSION \"beta1-dev\"",
          "7: #define PHP_VERSION \"5.4.0beta1-dev\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "603252546b818615c0708e8b2eba86e24239cfbb",
      "candidate_info": {
        "commit_hash": "603252546b818615c0708e8b2eba86e24239cfbb",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/603252546b818615c0708e8b2eba86e24239cfbb",
        "files": [
          "NEWS",
          "configure.in",
          "main/php_version.h"
        ],
        "message": "Back to -dev",
        "before_after_code_files": [
          "configure.in||configure.in",
          "main/php_version.h||main/php_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "main/php_version.h||main/php_version.h"
          ],
          "candidate": [
            "main/php_version.h||main/php_version.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.in||configure.in": [
          "File: configure.in -> configure.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "120: PHP_MAJOR_VERSION=5",
          "121: PHP_MINOR_VERSION=4",
          "122: PHP_RELEASE_VERSION=0",
          "124: PHP_VERSION=\"$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_RELEASE_VERSION$PHP_EXTRA_VERSION\"",
          "125: PHP_VERSION_ID=`expr [$]PHP_MAJOR_VERSION \\* 10000 + [$]PHP_MINOR_VERSION \\* 100 + [$]PHP_RELEASE_VERSION`",
          "",
          "[Removed Lines]",
          "123: PHP_EXTRA_VERSION=\"alpha1\"",
          "",
          "[Added Lines]",
          "123: PHP_EXTRA_VERSION=\"alpha2-dev\"",
          "",
          "---------------"
        ],
        "main/php_version.h||main/php_version.h": [
          "File: main/php_version.h -> main/php_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #define PHP_MAJOR_VERSION 5",
          "4: #define PHP_MINOR_VERSION 4",
          "5: #define PHP_RELEASE_VERSION 0",
          "8: #define PHP_VERSION_ID 50400",
          "",
          "[Removed Lines]",
          "6: #define PHP_EXTRA_VERSION \"alpha1\"",
          "7: #define PHP_VERSION \"5.4.0alpha1\"",
          "",
          "[Added Lines]",
          "6: #define PHP_EXTRA_VERSION \"alpha2-dev\"",
          "7: #define PHP_VERSION \"5.4.0alpha2-dev\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9081a1bdfbb414f4d4ad93dcbb3b664cf7c462d1",
      "candidate_info": {
        "commit_hash": "9081a1bdfbb414f4d4ad93dcbb3b664cf7c462d1",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/9081a1bdfbb414f4d4ad93dcbb3b664cf7c462d1",
        "files": [
          "ext/gd/gd.c",
          "ext/gd/gd_ctx.c"
        ],
        "message": "Refactor ext/gd (all tests passes)",
        "before_after_code_files": [
          "ext/gd/gd.c||ext/gd/gd.c",
          "ext/gd/gd_ctx.c||ext/gd/gd_ctx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/gd/gd.c||ext/gd/gd.c"
          ],
          "candidate": [
            "ext/gd/gd.c||ext/gd/gd.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/gd/gd.c||ext/gd/gd.c": [
          "File: ext/gd/gd.c -> ext/gd/gd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #if HAVE_LIBT1",
          "65: #include <t1lib.h>",
          "66: static int le_ps_font, le_ps_enc;",
          "69: #endif",
          "71: #include <gd.h>",
          "",
          "[Removed Lines]",
          "67: static void php_free_ps_font(zend_rsrc_list_entry *rsrc TSRMLS_DC);",
          "68: static void php_free_ps_enc(zend_rsrc_list_entry *rsrc TSRMLS_DC);",
          "",
          "[Added Lines]",
          "67: static void php_free_ps_font(zend_resource *rsrc TSRMLS_DC);",
          "68: static void php_free_ps_enc(zend_resource *rsrc TSRMLS_DC);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "135: static void php_image_filter_pixelate(INTERNAL_FUNCTION_PARAMETERS);",
          "139: static void _php_image_create_from(INTERNAL_FUNCTION_PARAMETERS, int image_type, char *tn, gdImagePtr (*func_p)(), gdImagePtr (*ioctx_func_p)());",
          "140: static void _php_image_output(INTERNAL_FUNCTION_PARAMETERS, int image_type, char *tn, void (*func_p)());",
          "141: static int _php_image_type(char data[8]);",
          "",
          "[Removed Lines]",
          "138: static gdImagePtr _php_image_create_from_string (zval **Data, char *tn, gdImagePtr (*ioctx_func_p)() TSRMLS_DC);",
          "",
          "[Added Lines]",
          "138: static gdImagePtr _php_image_create_from_string (zval *Data, char *tn, gdImagePtr (*ioctx_func_p)() TSRMLS_DC);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1076: {",
          "1077:  gdImageDestroy((gdImagePtr) rsrc->ptr);",
          "1078: }",
          "",
          "[Removed Lines]",
          "1075: static void php_free_gd_image(zend_rsrc_list_entry *rsrc TSRMLS_DC)",
          "",
          "[Added Lines]",
          "1075: static void php_free_gd_image(zend_resource *rsrc TSRMLS_DC)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1084: {",
          "1085:  gdFontPtr fp = (gdFontPtr) rsrc->ptr;",
          "",
          "[Removed Lines]",
          "1083: static void php_free_gd_font(zend_rsrc_list_entry *rsrc TSRMLS_DC)",
          "",
          "[Added Lines]",
          "1083: static void php_free_gd_font(zend_resource *rsrc TSRMLS_DC)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1420: PHP_FUNCTION(imageloadfont)",
          "1421: {",
          "1422:  char *file;",
          "1423:  int file_name, hdr_size = sizeof(gdFont) - sizeof(char *);",
          "1425:  gdFontPtr font;",
          "1426:  php_stream *stream;",
          "",
          "[Removed Lines]",
          "1424:  int ind, body_size, n = 0, b, i, body_size_check;",
          "",
          "[Added Lines]",
          "1422:  zval *ind;",
          "1425:  int body_size, n = 0, b, i, body_size_check;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1508:  }",
          "1509:  php_stream_close(stream);",
          "1518: }",
          "",
          "[Removed Lines]",
          "1515:  ind = 5 + zend_list_insert(font, le_gd_font TSRMLS_CC);",
          "1517:  RETURN_LONG(ind);",
          "",
          "[Added Lines]",
          "1512:  ind = zend_list_insert(font, le_gd_font TSRMLS_CC);",
          "1518:  RETURN_LONG(Z_RES_HANDLE_P(ind) + 5);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1523: PHP_FUNCTION(imagesetstyle)",
          "1524: {",
          "1526:  gdImagePtr im;",
          "1531:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ra\", &IM, &styles) == FAILURE)  {",
          "1532:   return;",
          "1533:  }",
          "1538:  stylearr = safe_emalloc(sizeof(int), zend_hash_num_elements(HASH_OF(styles)), 0);",
          "1550:    zval lval;",
          "1553:    convert_to_long(&lval);",
          "1554:    stylearr[index++] = Z_LVAL(lval);",
          "1555:   } else {",
          "1557:   }",
          "1560:  gdImageSetStyle(im, stylearr, index);",
          "",
          "[Removed Lines]",
          "1525:  zval *IM, *styles;",
          "1527:  int * stylearr;",
          "1528:  int index;",
          "1529:  HashPosition pos;",
          "1535:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "1540:  zend_hash_internal_pointer_reset_ex(HASH_OF(styles), &pos);",
          "1542:  for (index = 0;; zend_hash_move_forward_ex(HASH_OF(styles), &pos)) {",
          "1543:   zval ** item;",
          "1545:   if (zend_hash_get_current_data_ex(HASH_OF(styles), (void **) &item, &pos) == FAILURE) {",
          "1546:    break;",
          "1547:   }",
          "1549:   if (Z_TYPE_PP(item) != IS_LONG) {",
          "1551:    lval = **item;",
          "1552:    zval_copy_ctor(&lval);",
          "1556:    stylearr[index++] = Z_LVAL_PP(item);",
          "1558:  }",
          "",
          "[Added Lines]",
          "1526:  zval *IM, *styles, *item;",
          "1528:  int *stylearr;",
          "1529:  int index = 0;",
          "1535:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "1540:  ZEND_HASH_FOREACH_VAL(HASH_OF(styles), item) {",
          "1541:   if (Z_TYPE_P(item) != IS_LONG) {",
          "1543:    ZVAL_COPY(&lval, item);",
          "1547:    stylearr[index++] = Z_LVAL_P(item);",
          "1549:  } ZEND_HASH_FOREACH_END();",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1602:   return;",
          "1603:  }",
          "1607:  RETURN_BOOL(im->trueColor);",
          "1608: }",
          "",
          "[Removed Lines]",
          "1605:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1596:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1621:   return;",
          "1622:  }",
          "1626:  if (ncolors <= 0) {",
          "1627:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Number of colors has to be greater than zero\");",
          "",
          "[Removed Lines]",
          "1624:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1615:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1646:   return;",
          "1647:  }",
          "1651:  if (gdImagePaletteToTrueColor(im) == 0) {",
          "1652:   RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "1649:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1638:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1668:   return;",
          "1669:  }",
          "1674:  result = gdImageColorMatch(im1, im2);",
          "1675:  switch (result) {",
          "",
          "[Removed Lines]",
          "1671:  ZEND_FETCH_RESOURCE(im1, gdImagePtr, &IM1, -1, \"Image\", le_gd);",
          "1672:  ZEND_FETCH_RESOURCE(im2, gdImagePtr, &IM2, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1660:  ZEND_FETCH_RESOURCE(im1, gdImagePtr, IM1, -1, \"Image\", le_gd);",
          "1661:  ZEND_FETCH_RESOURCE(im2, gdImagePtr, IM2, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1707:   return;",
          "1708:  }",
          "1712:  gdImageSetThickness(im, thick);",
          "",
          "[Removed Lines]",
          "1710:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1699:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1727:   return;",
          "1728:  }",
          "1732:  gdImageFilledEllipse(im, cx, cy, w, h, color);",
          "",
          "[Removed Lines]",
          "1730:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1719:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1748:   return;",
          "1749:  }",
          "1753:  e = E;",
          "1754:  if (e < 0) {",
          "",
          "[Removed Lines]",
          "1751:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1740:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1778:   return;",
          "1779:  }",
          "1782:  gdImageAlphaBlending(im, blend);",
          "1784:  RETURN_TRUE;",
          "",
          "[Removed Lines]",
          "1781:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1770:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1797:   return;",
          "1798:  }",
          "1801:  gdImageSaveAlpha(im, save);",
          "1803:  RETURN_TRUE;",
          "",
          "[Removed Lines]",
          "1800:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1789:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1816:   return;",
          "1817:  }",
          "1820:  gdImageAlphaBlending(im, effect);",
          "1822:  RETURN_TRUE;",
          "",
          "[Removed Lines]",
          "1819:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1808:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1836:   RETURN_FALSE;",
          "1837:  }",
          "1840:  ct = gdImageColorAllocateAlpha(im, red, green, blue, alpha);",
          "1841:  if (ct < 0) {",
          "1842:   RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "1839:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1828:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1857:   return;",
          "1858:  }",
          "1862:  RETURN_LONG(gdImageColorResolveAlpha(im, red, green, blue, alpha));",
          "1863: }",
          "",
          "[Removed Lines]",
          "1860:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1849:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1875:   return;",
          "1876:  }",
          "1880:  RETURN_LONG(gdImageColorClosestAlpha(im, red, green, blue, alpha));",
          "1881: }",
          "",
          "[Removed Lines]",
          "1878:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1867:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1893:   return;",
          "1894:  }",
          "1898:  RETURN_LONG(gdImageColorExactAlpha(im, red, green, blue, alpha));",
          "1899: }",
          "",
          "[Removed Lines]",
          "1896:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1885:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1912:   return;",
          "1913:  }",
          "1918:  srcX = SX;",
          "1919:  srcY = SY;",
          "",
          "[Removed Lines]",
          "1915:  ZEND_FETCH_RESOURCE(im_dst, gdImagePtr, &DIM, -1, \"Image\", le_gd);",
          "1916:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "1904:  ZEND_FETCH_RESOURCE(im_dst, gdImagePtr, DIM, -1, \"Image\", le_gd);",
          "1905:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2094:   RETURN_FALSE;",
          "2095:  }",
          "2099:  im_dst = gdImageRotateInterpolated(im_src, (const float)degrees, color);",
          "",
          "[Removed Lines]",
          "2097:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2086:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2117:   return;",
          "2118:  }",
          "2123:  gdImageSetTile(im, tile);",
          "",
          "[Removed Lines]",
          "2120:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "2121:  ZEND_FETCH_RESOURCE(tile, gdImagePtr, &TILE, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2109:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "2110:  ZEND_FETCH_RESOURCE(tile, gdImagePtr, TILE, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2137:   return;",
          "2138:  }",
          "2143:  gdImageSetBrush(im, tile);",
          "",
          "[Removed Lines]",
          "2140:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "2141:  ZEND_FETCH_RESOURCE(tile, gdImagePtr, &TILE, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2129:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "2130:  ZEND_FETCH_RESOURCE(tile, gdImagePtr, TILE, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2261: {",
          "2262:  gdImagePtr im;",
          "2263:  gdIOCtx *io_ctx;",
          "2267:  if (!io_ctx) {",
          "2268:   return NULL;",
          "",
          "[Removed Lines]",
          "2260: gdImagePtr _php_image_create_from_string(zval **data, char *tn, gdImagePtr (*ioctx_func_p)() TSRMLS_DC)",
          "2265:  io_ctx = gdNewDynamicCtxEx(Z_STRLEN_PP(data), Z_STRVAL_PP(data), 0);",
          "",
          "[Added Lines]",
          "2249: gdImagePtr _php_image_create_from_string(zval *data, char *tn, gdImagePtr (*ioctx_func_p)() TSRMLS_DC)",
          "2254:  io_ctx = gdNewDynamicCtxEx(Z_STRLEN_P(data), Z_STRVAL_P(data), 0);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2286: PHP_FUNCTION(imagecreatefromstring)",
          "2287: {",
          "2289:  gdImagePtr im;",
          "2290:  int imtype;",
          "2291:  char sig[8];",
          "2294:   return;",
          "2295:  }",
          "2297:  convert_to_string_ex(data);",
          "2299:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Empty string or invalid image\");",
          "2300:   RETURN_FALSE;",
          "2301:  }",
          "2305:  imtype = _php_image_type(sig);",
          "",
          "[Removed Lines]",
          "2288:  zval **data;",
          "2293:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"Z\", &data) == FAILURE) {",
          "2298:  if (Z_STRLEN_PP(data) < 8) {",
          "2303:  memcpy(sig, Z_STRVAL_PP(data), 8);",
          "",
          "[Added Lines]",
          "2277:  zval *data;",
          "2282:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"z\", &data) == FAILURE) {",
          "2287:  if (Z_STRLEN_P(data) < 8) {",
          "2292:  memcpy(sig, Z_STRVAL_P(data), 8);",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2359:  gdImagePtr im = NULL;",
          "2360:  php_stream *stream;",
          "2361:  FILE * fp = NULL;",
          "2362:  long ignore_warning;",
          "2364:  if (image_type == PHP_GDIMG_TYPE_GD2PART) {",
          "2365:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"sllll\", &file, &file_len, &srcx, &srcy, &width, &height) == FAILURE) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2351: #ifdef HAVE_GD_JPG",
          "2353: #endif",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2389:  } else if (ioctx_func_p) {",
          "2391:   gdIOCtx* io_ctx;",
          "2399:    php_error_docref(NULL TSRMLS_CC, E_WARNING,\"Cannot read image data\");",
          "2400:    goto out_err;",
          "2401:   }",
          "2404:   if (!io_ctx) {",
          "2406:    php_error_docref(NULL TSRMLS_CC, E_WARNING,\"Cannot allocate GD IO context\");",
          "2407:    goto out_err;",
          "2408:   }",
          "",
          "[Removed Lines]",
          "2392:   size_t buff_size;",
          "2393:   char *buff;",
          "2396:   buff_size = php_stream_copy_to_mem(stream, &buff, PHP_STREAM_COPY_ALL, 1);",
          "2398:   if (!buff_size) {",
          "2403:   io_ctx = gdNewDynamicCtxEx(buff_size, buff, 0);",
          "2405:    pefree(buff, 1);",
          "",
          "[Added Lines]",
          "2383:   zend_string *buff;",
          "2384:   char *pstr;",
          "2386:   buff = php_stream_copy_to_mem(stream, PHP_STREAM_COPY_ALL, 0);",
          "2388:   if (!buff) {",
          "2394:   pstr = pestrndup(buff->val, buff->len, 1);",
          "2395:   io_ctx = gdNewDynamicCtxEx(buff->len, pstr, 0);",
          "2397:    pefree(pstr, 1);",
          "2398:    STR_RELEASE(buff);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2413:    im = (*ioctx_func_p)(io_ctx);",
          "2414:   }",
          "2415:   io_ctx->gd_free(io_ctx);",
          "2417:  }",
          "2418:  else if (php_stream_can_cast(stream, PHP_STREAM_AS_STDIO)) {",
          "",
          "[Removed Lines]",
          "2416:   pefree(buff, 1);",
          "",
          "[Added Lines]",
          "2409:   pefree(pstr, 1);",
          "2410:   STR_RELEASE(buff);",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2572:   return;",
          "2573:  }",
          "2577:  if (argc > 1) {",
          "2578:   fn = file;",
          "",
          "[Removed Lines]",
          "2575:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &imgind, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2569:  ZEND_FETCH_RESOURCE(im, gdImagePtr, imgind, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2786:   return;",
          "2787:  }",
          "2793:  RETURN_TRUE;",
          "2794: }",
          "",
          "[Removed Lines]",
          "2789:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "2791:  zend_list_delete(Z_LVAL_P(IM));",
          "",
          "[Added Lines]",
          "2783:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "2785:  zend_list_close(Z_RES_P(IM));",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2808:   return;",
          "2809:  }",
          "2813:  ct = gdImageColorAllocate(im, red, green, blue);",
          "2814:  if (ct < 0) {",
          "",
          "[Removed Lines]",
          "2811:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2805:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2829:   return;",
          "2830:  }",
          "2835:  gdImagePaletteCopy(dst, src);",
          "2836: }",
          "",
          "[Removed Lines]",
          "2832:  ZEND_FETCH_RESOURCE(dst, gdImagePtr, &dstim, -1, \"Image\", le_gd);",
          "2833:  ZEND_FETCH_RESOURCE(src, gdImagePtr, &srcim, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2826:  ZEND_FETCH_RESOURCE(dst, gdImagePtr, dstim, -1, \"Image\", le_gd);",
          "2827:  ZEND_FETCH_RESOURCE(src, gdImagePtr, srcim, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2848:   return;",
          "2849:  }",
          "2853:  if (gdImageTrueColor(im)) {",
          "2854:   if (im->tpixels && gdImageBoundsSafe(im, x, y)) {",
          "",
          "[Removed Lines]",
          "2851:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2845:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2880:   return;",
          "2881:  }",
          "2885:  RETURN_LONG(gdImageColorClosest(im, red, green, blue));",
          "2886: }",
          "",
          "[Removed Lines]",
          "2883:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2877:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2898:   return;",
          "2899:  }",
          "2903:  RETURN_LONG(gdImageColorClosestHWB(im, red, green, blue));",
          "2904: }",
          "",
          "[Removed Lines]",
          "2901:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2895:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2917:   return;",
          "2918:  }",
          "2923:  if (gdImageTrueColor(im)) {",
          "",
          "[Removed Lines]",
          "2920:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2914:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2948:   return;",
          "2949:  }",
          "2953:  RETURN_LONG(gdImageColorResolve(im, red, green, blue));",
          "2954: }",
          "",
          "[Removed Lines]",
          "2951:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2945:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2966:   return;",
          "2967:  }",
          "2971:  RETURN_LONG(gdImageColorExact(im, red, green, blue));",
          "2972: }",
          "",
          "[Removed Lines]",
          "2969:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2963:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2985:   return;",
          "2986:  }",
          "2990:  col = color;",
          "",
          "[Removed Lines]",
          "2988:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "2982:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "3013:   return;",
          "3014:  }",
          "3018:  col = index;",
          "",
          "[Removed Lines]",
          "3016:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3010:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "3044:   return;",
          "3045:  }",
          "3049:  if (gdImageTrueColor(im)) {",
          "3050:   int x, y, c;",
          "",
          "[Removed Lines]",
          "3047:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3041:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "3086:   return;",
          "3087:  }",
          "3090:  gdImageSetPixel(im, x, y, col);",
          "3091:  RETURN_TRUE;",
          "3092: }",
          "",
          "[Removed Lines]",
          "3089:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3083:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "3104:   return;",
          "3105:  }",
          "3109: #ifdef HAVE_GD_BUNDLED",
          "3110:  if (im->antialias) {",
          "",
          "[Removed Lines]",
          "3107:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3101:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "3130:   return;",
          "3131:  }",
          "3134:  gdImageDashedLine(im, x1, y1, x2, y2, col);",
          "3135:  RETURN_TRUE;",
          "3136: }",
          "",
          "[Removed Lines]",
          "3133:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3127:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "3148:   return;",
          "3149:  }",
          "3152:  gdImageRectangle(im, x1, y1, x2, y2, col);",
          "3153:  RETURN_TRUE;",
          "3154: }",
          "",
          "[Removed Lines]",
          "3151:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3145:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3166:   return;",
          "3167:  }",
          "3170:  gdImageFilledRectangle(im, x1, y1, x2, y2, col);",
          "3171:  RETURN_TRUE;",
          "3172: }",
          "",
          "[Removed Lines]",
          "3169:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3163:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3185:   return;",
          "3186:  }",
          "3190:  e = E;",
          "3191:  if (e < 0) {",
          "",
          "[Removed Lines]",
          "3188:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3182:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3214:   return;",
          "3215:  }",
          "3219:  gdImageEllipse(im, cx, cy, w, h, color);",
          "3220:  RETURN_TRUE;",
          "",
          "[Removed Lines]",
          "3217:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3211:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3233:   return;",
          "3234:  }",
          "3237:  gdImageFillToBorder(im, x, y, border, col);",
          "3238:  RETURN_TRUE;",
          "3239: }",
          "",
          "[Removed Lines]",
          "3236:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3230:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3251:   return;",
          "3252:  }",
          "3255:  gdImageFill(im, x, y, col);",
          "3256:  RETURN_TRUE;",
          "3257: }",
          "",
          "[Removed Lines]",
          "3254:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3248:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3268:   return;",
          "3269:  }",
          "3273:  RETURN_LONG(gdImageColorsTotal(im));",
          "3274: }",
          "",
          "[Removed Lines]",
          "3271:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3265:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3287:   return;",
          "3288:  }",
          "3292:  if (argc > 1) {",
          "3293:   gdImageColorTransparent(im, COL);",
          "",
          "[Removed Lines]",
          "3290:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3284:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3310:   return;",
          "3311:  }",
          "3315:  if (argc > 1) {",
          "3316:   gdImageInterlace(im, INT);",
          "",
          "[Removed Lines]",
          "3313:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3307:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3328: {",
          "3329:  zval *IM, *POINTS;",
          "3330:  long NPOINTS, COL;",
          "3332:  gdImagePtr im;",
          "3333:  gdPointPtr points;",
          "3334:  int npoints, col, nelem, i;",
          "",
          "[Removed Lines]",
          "3331:  zval **var = NULL;",
          "",
          "[Added Lines]",
          "3325:  zval *var = NULL;",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3337:   return;",
          "3338:  }",
          "3342:  npoints = NPOINTS;",
          "3343:  col = COL;",
          "",
          "[Removed Lines]",
          "3340:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3334:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3359:  points = (gdPointPtr) safe_emalloc(npoints, sizeof(gdPoint), 0);",
          "3361:  for (i = 0; i < npoints; i++) {",
          "3364:     zval lval;",
          "3367:     convert_to_long(&lval);",
          "3368:     points[i].x = Z_LVAL(lval);",
          "3369:    } else {",
          "3371:    }",
          "3372:   }",
          "3375:     zval lval;",
          "3378:     convert_to_long(&lval);",
          "3379:     points[i].y = Z_LVAL(lval);",
          "3380:    } else {",
          "3382:    }",
          "3383:   }",
          "3384:  }",
          "",
          "[Removed Lines]",
          "3362:   if (zend_hash_index_find(Z_ARRVAL_P(POINTS), (i * 2), (void **) &var) == SUCCESS) {",
          "3363:    if (Z_TYPE_PP(var) != IS_LONG) {",
          "3365:     lval = **var;",
          "3366:     zval_copy_ctor(&lval);",
          "3370:     points[i].x = Z_LVAL_PP(var);",
          "3373:   if (zend_hash_index_find(Z_ARRVAL_P(POINTS), (i * 2) + 1, (void **) &var) == SUCCESS) {",
          "3374:    if (Z_TYPE_PP(var) != IS_LONG) {",
          "3376:     lval = **var;",
          "3377:     zval_copy_ctor(&lval);",
          "3381:     points[i].y = Z_LVAL_PP(var);",
          "",
          "[Added Lines]",
          "3356:   if ((var = zend_hash_index_find(Z_ARRVAL_P(POINTS), (i * 2))) != NULL) {",
          "3357:    if (Z_TYPE_P(var) != IS_LONG) {",
          "3359:     ZVAL_COPY(&lval, var);",
          "3363:     points[i].x = Z_LVAL_P(var);",
          "3366:   if ((var = zend_hash_index_find(Z_ARRVAL_P(POINTS), (i * 2) + 1)) != NULL) {",
          "3367:    if (Z_TYPE_P(var) != IS_LONG) {",
          "3369:     ZVAL_COPY(&lval, var);",
          "3373:     points[i].y = Z_LVAL_P(var);",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3415: static gdFontPtr php_find_gd_font(int size TSRMLS_DC)",
          "3416: {",
          "3417:  gdFontPtr font;",
          "3420:  switch (size) {",
          "3421:   case 1:",
          "3424:   case 2:",
          "3427:   case 3:",
          "3430:   case 4:",
          "3433:   case 5:",
          "3444:     }",
          "3446:  }",
          "3448:  return font;",
          "",
          "[Removed Lines]",
          "3418:  int ind_type;",
          "3422:     font = gdFontTiny;",
          "3423:     break;",
          "3425:     font = gdFontSmall;",
          "3426:     break;",
          "3428:     font = gdFontMediumBold;",
          "3429:     break;",
          "3431:     font = gdFontLarge;",
          "3432:     break;",
          "3434:     font = gdFontGiant;",
          "3435:     break;",
          "3436:   default:",
          "3437:    font = zend_list_find(size - 5, &ind_type);",
          "3438:     if (!font || ind_type != le_gd_font) {",
          "3439:       if (size < 1) {",
          "3440:         font = gdFontTiny;",
          "3441:       } else {",
          "3442:         font = gdFontGiant;",
          "3443:       }",
          "3445:     break;",
          "",
          "[Added Lines]",
          "3413:    font = gdFontTiny;",
          "3414:    break;",
          "3416:    font = gdFontSmall;",
          "3417:    break;",
          "3419:    font = gdFontMediumBold;",
          "3420:    break;",
          "3422:    font = gdFontLarge;",
          "3423:    break;",
          "3425:    font = gdFontGiant;",
          "3426:    break;",
          "3427:   default: {",
          "3428:     zval *zv = zend_hash_index_find(&EG(regular_list), size - 5);",
          "3429:     if (!zv || (Z_RES_P(zv))->type != le_gd_font) {",
          "3430:      if (size < 1) {",
          "3431:       font = gdFontTiny;",
          "3432:      } else {",
          "3433:       font = gdFontGiant;",
          "3434:      }",
          "3435:     } else {",
          "3436:      font = (gdFontPtr)Z_RES_P(zv)->ptr;",
          "3438:    }",
          "3439:    break;",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3530:   return;",
          "3531:  }",
          "3535:  col = COL;",
          "",
          "[Removed Lines]",
          "3533:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3527:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3621:   return;",
          "3622:  }",
          "3627:  srcX = SX;",
          "3628:  srcY = SY;",
          "",
          "[Removed Lines]",
          "3624:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "3625:  ZEND_FETCH_RESOURCE(im_dst, gdImagePtr, &DIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3618:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "3619:  ZEND_FETCH_RESOURCE(im_dst, gdImagePtr, DIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3649:   return;",
          "3650:  }",
          "3655:  srcX = SX;",
          "3656:  srcY = SY;",
          "",
          "[Removed Lines]",
          "3652:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "3653:  ZEND_FETCH_RESOURCE(im_dst, gdImagePtr, &DIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3646:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "3647:  ZEND_FETCH_RESOURCE(im_dst, gdImagePtr, DIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3678:   return;",
          "3679:  }",
          "3684:  srcX = SX;",
          "3685:  srcY = SY;",
          "",
          "[Removed Lines]",
          "3681:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "3682:  ZEND_FETCH_RESOURCE(im_dst, gdImagePtr, &DIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3675:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "3676:  ZEND_FETCH_RESOURCE(im_dst, gdImagePtr, DIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3707:   return;",
          "3708:  }",
          "3713:  srcX = SX;",
          "3714:  srcY = SY;",
          "",
          "[Removed Lines]",
          "3710:  ZEND_FETCH_RESOURCE(im_dst, gdImagePtr, &DIM, -1, \"Image\", le_gd);",
          "3711:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3704:  ZEND_FETCH_RESOURCE(im_dst, gdImagePtr, DIM, -1, \"Image\", le_gd);",
          "3705:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3740:   return;",
          "3741:  }",
          "3745:  RETURN_LONG(gdImageSX(im));",
          "3746: }",
          "",
          "[Removed Lines]",
          "3743:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3737:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3757:   return;",
          "3758:  }",
          "3762:  RETURN_LONG(gdImageSY(im));",
          "3763: }",
          "",
          "[Removed Lines]",
          "3760:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "3754:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3830:   } else if (zend_parse_parameters(argc TSRMLS_CC, \"rddlllss|a\", &IM, &ptsize, &angle, &x, &y, &col, &fontname, &fontname_len, &str, &str_len, &EXT) == FAILURE) {",
          "3831:    RETURN_FALSE;",
          "3832:   }",
          "3834:  }",
          "3837:  angle = angle * (M_PI/180);",
          "3850:     continue;",
          "3851:    }",
          "3858:     convert_to_double_ex(item);",
          "3859:     strex.flags |= gdFTEX_LINESPACE;",
          "3861:    }",
          "3864:  }",
          "3866: #ifdef VIRTUAL_DIR",
          "",
          "[Removed Lines]",
          "3833:   ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "3840:   HashPosition pos;",
          "3843:   zend_hash_internal_pointer_reset_ex(HASH_OF(EXT), &pos);",
          "3844:   do {",
          "3845:    zval ** item;",
          "3846:    char * key;",
          "3847:    ulong num_key;",
          "3849:    if (zend_hash_get_current_key_ex(HASH_OF(EXT), &key, NULL, &num_key, 0, &pos) != HASH_KEY_IS_STRING) {",
          "3853:    if (zend_hash_get_current_data_ex(HASH_OF(EXT), (void **) &item, &pos) == FAILURE) {",
          "3854:     continue;",
          "3855:    }",
          "3857:    if (strcmp(\"linespacing\", key) == 0) {",
          "3860:     strex.linespacing = Z_DVAL_PP(item);",
          "3863:   } while (zend_hash_move_forward_ex(HASH_OF(EXT), &pos) == SUCCESS);",
          "",
          "[Added Lines]",
          "3827:   ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "3834:   zval *item;",
          "3835:   zend_string *key;",
          "3836:   ulong num_key;",
          "3839:   ZEND_HASH_FOREACH_KEY_VAL(HASH_OF(EXT), num_key, key, item) {",
          "3840:    if (key == NULL) {",
          "3843:    if (strcmp(\"linespacing\", key->val) == 0) {",
          "3846:     strex.linespacing = Z_DVAL_P(item);",
          "3848:   } ZEND_HASH_FOREACH_END();",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "3907: {",
          "3910:  T1_DeleteFont(*font);",
          "3911:  efree(font);",
          "",
          "[Removed Lines]",
          "3906: static void php_free_ps_font(zend_rsrc_list_entry *rsrc TSRMLS_DC)",
          "3908:  int *font = (int *) rsrc->ptr;",
          "",
          "[Added Lines]",
          "3891: static void php_free_ps_font(zend_resource *rsrc TSRMLS_DC)",
          "3893:  int *font = (int *)rsrc->ptr;",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "3918: {",
          "3921:  T1_DeleteEncoding(enc);",
          "3922: }",
          "",
          "[Removed Lines]",
          "3917: static void php_free_ps_enc(zend_rsrc_list_entry *rsrc TSRMLS_DC)",
          "3919:  char **enc = (char **) rsrc->ptr;",
          "",
          "[Added Lines]",
          "3902: static void php_free_ps_enc(zend_resource *rsrc TSRMLS_DC)",
          "3904:  char **enc = (char **)rsrc->ptr;",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "4025:   return;",
          "4026:  }",
          "4029:  zend_list_delete(Z_LVAL_P(fnt));",
          "4030:  RETURN_TRUE;",
          "4031: }",
          "",
          "[Removed Lines]",
          "4028:  ZEND_FETCH_RESOURCE(f_ind, int *, &fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "[Added Lines]",
          "4013:  ZEND_FETCH_RESOURCE(f_ind, int *, fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "4043:   return;",
          "4044:  }",
          "4048:  if ((enc_vector = T1_LoadEncoding(enc)) == NULL) {",
          "4049:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Couldn't load encoding vector from %s\", enc);",
          "",
          "[Removed Lines]",
          "4046:  ZEND_FETCH_RESOURCE(f_ind, int *, &fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "[Added Lines]",
          "4031:  ZEND_FETCH_RESOURCE(f_ind, int *, fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "4075:   return;",
          "4076:  }",
          "4080:  T1_DeleteAllSizes(*f_ind);",
          "",
          "[Removed Lines]",
          "4078:  ZEND_FETCH_RESOURCE(f_ind, int *, &fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "[Added Lines]",
          "4063:  ZEND_FETCH_RESOURCE(f_ind, int *, fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "4104:   return;",
          "4105:  }",
          "4109:  if (T1_SlantFont(*f_ind, slt) != 0) {",
          "4110:   RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "4107:  ZEND_FETCH_RESOURCE(f_ind, int *, &fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "[Added Lines]",
          "4092:  ZEND_FETCH_RESOURCE(f_ind, int *, fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "4145:   RETURN_FALSE;",
          "4146:  }",
          "4152:  if (_fg < 0 || (!gdImageTrueColor(bg_img) && _fg > gdImageColorsTotal(bg_img))) {",
          "",
          "[Removed Lines]",
          "4148:  ZEND_FETCH_RESOURCE(bg_img, gdImagePtr, &img, -1, \"Image\", le_gd);",
          "4149:  ZEND_FETCH_RESOURCE(f_ind, int *, &fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "[Added Lines]",
          "4133:  ZEND_FETCH_RESOURCE(bg_img, gdImagePtr, img, -1, \"Image\", le_gd);",
          "4134:  ZEND_FETCH_RESOURCE(f_ind, int *, fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "4286:   per_char =  add_width || angle ? 1 : 0;",
          "4287:  }",
          "4291: #define max(a, b) (a > b ? a : b)",
          "4292: #define min(a, b) (a < b ? a : b)",
          "",
          "[Removed Lines]",
          "4289:  ZEND_FETCH_RESOURCE(f_ind, int *, &fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "[Added Lines]",
          "4274:  ZEND_FETCH_RESOURCE(f_ind, int *, fnt, -1, \"Type 1 font\", le_ps_font);",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "4451:  int int_threshold;",
          "4452:  int x, y;",
          "4453:  float x_ratio, y_ratio;",
          "4454:     long ignore_warning;",
          "4456:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"pplll\", &f_org, &f_org_len, &f_dest, &f_dest_len, &height, &width, &threshold) == FAILURE) {",
          "4457:   return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4439: #ifdef HAVE_GD_JPG",
          "4441: #endif",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "4617:  if (zend_parse_parameters(1 TSRMLS_CC, \"r\", &SIM) == FAILURE) { \\",
          "4618:   RETURN_FALSE; \\",
          "4619:  } \\",
          "4621:  if (im_src == NULL) { \\",
          "4622:   RETURN_FALSE; \\",
          "4623:  }",
          "",
          "[Removed Lines]",
          "4620:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd); \\",
          "",
          "[Added Lines]",
          "4607:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd); \\",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "4654:   RETURN_FALSE;",
          "4655:  }",
          "4659:  if (im_src == NULL) {",
          "4660:   RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "4657:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "4644:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "4677:   RETURN_FALSE;",
          "4678:  }",
          "4682:  if (im_src == NULL) {",
          "4683:   RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "4680:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "4667:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "4701:   RETURN_FALSE;",
          "4702:  }",
          "4706:  if (im_src == NULL) {",
          "4707:   RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "4704:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "4691:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "4780:   RETURN_FALSE;",
          "4781:  }",
          "4785:  if (im_src == NULL) {",
          "4786:   RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "4783:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "4770:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "4804:   RETURN_FALSE;",
          "4805:  }",
          "4809:  if (im == NULL) {",
          "4810:   RETURN_FALSE;",
          "",
          "[Removed Lines]",
          "4807:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "4794:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "4858: PHP_FUNCTION(imageconvolution)",
          "4859: {",
          "4860:  zval *SIM, *hash_matrix;",
          "4862:  gdImagePtr im_src = NULL;",
          "4863:  double div, offset;",
          "4864:  int nelem, i, j, res;",
          "",
          "[Removed Lines]",
          "4861:  zval **var = NULL, **var2 = NULL;",
          "",
          "[Added Lines]",
          "4848:  zval *var = NULL, *var2 = NULL;",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "4868:   RETURN_FALSE;",
          "4869:  }",
          "4873:  nelem = zend_hash_num_elements(Z_ARRVAL_P(hash_matrix));",
          "4874:  if (nelem != 3) {",
          "",
          "[Removed Lines]",
          "4871:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "4858:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, SIM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "4877:  }",
          "4879:  for (i=0; i<3; i++) {",
          "4882:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"You must have 3x3 array\");",
          "4883:     RETURN_FALSE;",
          "4884:    }",
          "4886:    for (j=0; j<3; j++) {",
          "4889:       zval dval;",
          "4892:       convert_to_double(&dval);",
          "4893:       matrix[i][j] = (float)Z_DVAL(dval);",
          "4894:      } else {",
          "4896:      }",
          "4897:     } else {",
          "4898:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"You must have a 3x3 matrix\");",
          "",
          "[Removed Lines]",
          "4880:   if (zend_hash_index_find(Z_ARRVAL_P(hash_matrix), (i), (void **) &var) == SUCCESS && Z_TYPE_PP(var) == IS_ARRAY) {",
          "4881:    if (Z_TYPE_PP(var) != IS_ARRAY || zend_hash_num_elements(Z_ARRVAL_PP(var)) != 3 ) {",
          "4887:     if (zend_hash_index_find(Z_ARRVAL_PP(var), (j), (void **) &var2) == SUCCESS) {",
          "4888:      if (Z_TYPE_PP(var2) != IS_DOUBLE) {",
          "4890:       dval = **var2;",
          "4891:       zval_copy_ctor(&dval);",
          "4895:       matrix[i][j] = (float)Z_DVAL_PP(var2);",
          "",
          "[Added Lines]",
          "4867:   if ((var = zend_hash_index_find(Z_ARRVAL_P(hash_matrix), (i))) != NULL && Z_TYPE_P(var) == IS_ARRAY) {",
          "4868:    if (zend_hash_num_elements(Z_ARRVAL_P(var)) != 3 ) {",
          "4874:     if ((var2 = zend_hash_index_find(Z_ARRVAL_P(var), (j))) != NULL) {",
          "4875:      if (Z_TYPE_P(var2) != IS_DOUBLE) {",
          "4877:       ZVAL_COPY(&dval, var2);",
          "4881:       matrix[i][j] = (float)Z_DVAL_P(var2);",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "4924:   return;",
          "4925:  }",
          "4929:  switch (mode) {",
          "4930:   case GD_FLIP_VERTICAL:",
          "",
          "[Removed Lines]",
          "4927:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "4913:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "4961:   return;",
          "4962:  }",
          "4965:  gdImageAntialias(im, alias);",
          "4966:  RETURN_TRUE;",
          "4967: }",
          "",
          "[Removed Lines]",
          "4964:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "4950:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "4977:  gdImagePtr im_crop;",
          "4978:  gdRect rect;",
          "4979:  zval *z_rect;",
          "4982:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ra\", &IM, &z_rect) == FAILURE)  {",
          "4983:   return;",
          "4984:  }",
          "4990:    zval lval;",
          "4993:    convert_to_long(&lval);",
          "4994:    rect.x = Z_LVAL(lval);",
          "4995:   } else {",
          "4997:   }",
          "4998:  } else {",
          "4999:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
          "5000:   RETURN_FALSE;",
          "5001:  }",
          "5005:    zval lval;",
          "5008:    convert_to_long(&lval);",
          "5009:    rect.y = Z_LVAL(lval);",
          "5010:   } else {",
          "5012:   }",
          "5013:  } else {",
          "5014:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
          "5015:   RETURN_FALSE;",
          "5016:  }",
          "5020:    zval lval;",
          "5023:    convert_to_long(&lval);",
          "5024:    rect.width = Z_LVAL(lval);",
          "5025:   } else {",
          "5027:   }",
          "5028:  } else {",
          "5029:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing width\");",
          "5030:   RETURN_FALSE;",
          "5031:  }",
          "5035:    zval lval;",
          "5038:    convert_to_long(&lval);",
          "5039:    rect.height = Z_LVAL(lval);",
          "5040:   } else {",
          "5042:   }",
          "5043:  } else {",
          "5044:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing height\");",
          "",
          "[Removed Lines]",
          "4980:  zval **tmp;",
          "4986:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "4988:  if (zend_hash_find(HASH_OF(z_rect), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
          "4989:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
          "4991:    lval = **tmp;",
          "4992:    zval_copy_ctor(&lval);",
          "4996:    rect.x = Z_LVAL_PP(tmp);",
          "5003:  if (zend_hash_find(HASH_OF(z_rect), \"y\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
          "5004:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
          "5006:    lval = **tmp;",
          "5007:    zval_copy_ctor(&lval);",
          "5011:    rect.y = Z_LVAL_PP(tmp);",
          "5018:  if (zend_hash_find(HASH_OF(z_rect), \"width\", sizeof(\"width\"), (void **)&tmp) != FAILURE) {",
          "5019:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
          "5021:    lval = **tmp;",
          "5022:    zval_copy_ctor(&lval);",
          "5026:    rect.width = Z_LVAL_PP(tmp);",
          "5033:  if (zend_hash_find(HASH_OF(z_rect), \"height\", sizeof(\"height\"), (void **)&tmp) != FAILURE) {",
          "5034:   if (Z_TYPE_PP(tmp) != IS_LONG) {",
          "5036:    lval = **tmp;",
          "5037:    zval_copy_ctor(&lval);",
          "5041:    rect.height = Z_LVAL_PP(tmp);",
          "",
          "[Added Lines]",
          "4966:  zval *tmp;",
          "4972:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "4974:  if ((tmp = zend_hash_str_find(HASH_OF(z_rect), \"x\", sizeof(\"x\") -1)) != NULL) {",
          "4975:   if (Z_TYPE_P(tmp) != IS_LONG) {",
          "4977:    ZVAL_COPY(&lval, tmp);",
          "4981:    rect.x = Z_LVAL_P(tmp);",
          "4988:  if ((tmp = zend_hash_str_find(HASH_OF(z_rect), \"y\", sizeof(\"y\") - 1)) != NULL) {",
          "4989:   if (Z_TYPE_P(tmp) != IS_LONG) {",
          "4991:    ZVAL_COPY(&lval, tmp);",
          "4995:    rect.y = Z_LVAL_P(tmp);",
          "5002:  if ((tmp = zend_hash_str_find(HASH_OF(z_rect), \"width\", sizeof(\"width\") - 1)) != NULL) {",
          "5003:   if (Z_TYPE_P(tmp) != IS_LONG) {",
          "5005:    ZVAL_COPY(&lval, tmp);",
          "5009:    rect.width = Z_LVAL_P(tmp);",
          "5016:  if ((tmp = zend_hash_str_find(HASH_OF(z_rect), \"height\", sizeof(\"height\") - 1)) != NULL) {",
          "5017:   if (Z_TYPE_P(tmp) != IS_LONG) {",
          "5019:    ZVAL_COPY(&lval, tmp);",
          "5023:    rect.height = Z_LVAL_P(tmp);",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "5070:   return;",
          "5071:  }",
          "5075:  switch (mode) {",
          "5076:   case -1:",
          "",
          "[Removed Lines]",
          "5073:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "5055:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "5121:  new_width = tmp_w;",
          "5122:  new_height = tmp_h;",
          "5126:  if (gdImageSetInterpolationMethod(im, method)) {",
          "5127:   im_scaled = gdImageScale(im, new_width, new_height);",
          "",
          "[Removed Lines]",
          "5124:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "5106:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "5146:  gdRectPtr pRect = NULL;",
          "5147:  zval *z_rect = NULL;",
          "5148:  zval *z_affine;",
          "5150:  double affine[6];",
          "5151:  int i, nelems;",
          "5154:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ra|a\", &IM, &z_affine, &z_rect) == FAILURE)  {",
          "5155:   return;",
          "5156:  }",
          "5160:  if ((nelems = zend_hash_num_elements(Z_ARRVAL_P(z_affine))) != 6) {",
          "5161:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Affine array must have six elements\");",
          "",
          "[Removed Lines]",
          "5149:  zval **tmp;",
          "5152:  zval **zval_affine_elem = NULL;",
          "5158:  ZEND_FETCH_RESOURCE(src, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "5131:  zval *tmp;",
          "5134:  zval *zval_affine_elem = NULL;",
          "5140:  ZEND_FETCH_RESOURCE(src, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "5163:  }",
          "5165:  for (i = 0; i < nelems; i++) {",
          "5168:     case IS_LONG:",
          "5170:      break;",
          "5171:     case IS_DOUBLE:",
          "5173:      break;",
          "5174:     case IS_STRING:",
          "5175:      {",
          "5176:       zval dval;",
          "5179:       convert_to_double(&dval);",
          "5180:       affine[i] = Z_DVAL(dval);",
          "5181:      }",
          "",
          "[Removed Lines]",
          "5166:   if (zend_hash_index_find(Z_ARRVAL_P(z_affine), i, (void **) &zval_affine_elem) == SUCCESS) {",
          "5167:    switch (Z_TYPE_PP(zval_affine_elem)) {",
          "5169:      affine[i]  = Z_LVAL_PP(zval_affine_elem);",
          "5172:      affine[i] = Z_DVAL_PP(zval_affine_elem);",
          "5177:       dval = **zval_affine_elem;",
          "5178:       zval_copy_ctor(&dval);",
          "",
          "[Added Lines]",
          "5148:   if ((zval_affine_elem = zend_hash_index_find(Z_ARRVAL_P(z_affine), i)) != NULL) {",
          "5149:    switch (Z_TYPE_P(zval_affine_elem)) {",
          "5151:      affine[i]  = Z_LVAL_P(zval_affine_elem);",
          "5154:      affine[i] = Z_DVAL_P(zval_affine_elem);",
          "5159:       ZVAL_COPY(&dval, zval_affine_elem);",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "5188:  }",
          "5190:  if (z_rect != NULL) {",
          "5193:     zval lval;",
          "5196:     convert_to_long(&lval);",
          "5197:     rect.x = Z_LVAL(lval);",
          "5198:    } else {",
          "5200:    }",
          "5201:   } else {",
          "5202:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
          "5203:    RETURN_FALSE;",
          "5204:   }",
          "5208:     zval lval;",
          "5211:     convert_to_long(&lval);",
          "5212:     rect.y = Z_LVAL(lval);",
          "5213:    } else {",
          "5215:    }",
          "5216:   } else {",
          "5217:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
          "5218:    RETURN_FALSE;",
          "5219:   }",
          "5223:     zval lval;",
          "5226:     convert_to_long(&lval);",
          "5227:     rect.width = Z_LVAL(lval);",
          "5228:    } else {",
          "5230:    }",
          "5231:   } else {",
          "5232:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing width\");",
          "5233:    RETURN_FALSE;",
          "5234:   }",
          "5238:     zval lval;",
          "5241:     convert_to_long(&lval);",
          "5242:     rect.height = Z_LVAL(lval);",
          "5243:    } else {",
          "5245:    }",
          "5246:   } else {",
          "5247:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing height\");",
          "",
          "[Removed Lines]",
          "5191:   if (zend_hash_find(HASH_OF(z_rect), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
          "5192:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
          "5194:     lval = **tmp;",
          "5195:     zval_copy_ctor(&lval);",
          "5199:     rect.x = Z_LVAL_PP(tmp);",
          "5206:   if (zend_hash_find(HASH_OF(z_rect), \"y\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
          "5207:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
          "5209:     lval = **tmp;",
          "5210:     zval_copy_ctor(&lval);",
          "5214:     rect.y = Z_LVAL_PP(tmp);",
          "5221:   if (zend_hash_find(HASH_OF(z_rect), \"width\", sizeof(\"width\"), (void **)&tmp) != FAILURE) {",
          "5222:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
          "5224:     lval = **tmp;",
          "5225:     zval_copy_ctor(&lval);",
          "5229:     rect.width = Z_LVAL_PP(tmp);",
          "5236:   if (zend_hash_find(HASH_OF(z_rect), \"height\", sizeof(\"height\"), (void **)&tmp) != FAILURE) {",
          "5237:    if (Z_TYPE_PP(tmp) != IS_LONG) {",
          "5239:     lval = **tmp;",
          "5240:     zval_copy_ctor(&lval);",
          "5244:     rect.height = Z_LVAL_PP(tmp);",
          "",
          "[Added Lines]",
          "5172:   if ((tmp = zend_hash_str_find(HASH_OF(z_rect), \"x\", sizeof(\"x\") - 1)) != NULL) {",
          "5173:    if (Z_TYPE_P(tmp) != IS_LONG) {",
          "5175:     ZVAL_COPY(&lval, tmp);",
          "5179:     rect.x = Z_LVAL_P(tmp);",
          "5186:   if ((tmp = zend_hash_str_find(HASH_OF(z_rect), \"y\", sizeof(\"y\") - 1)) != NULL) {",
          "5187:    if (Z_TYPE_P(tmp) != IS_LONG) {",
          "5189:     ZVAL_COPY(&lval, tmp);",
          "5193:     rect.y = Z_LVAL_P(tmp);",
          "5200:   if ((tmp = zend_hash_str_find(HASH_OF(z_rect), \"width\", sizeof(\"width\") - 1)) != NULL) {",
          "5201:    if (Z_TYPE_P(tmp) != IS_LONG) {",
          "5203:     ZVAL_COPY(&lval, tmp);",
          "5207:     rect.width = Z_LVAL_P(tmp);",
          "5214:   if ((tmp = zend_hash_str_find(HASH_OF(z_rect), \"height\", sizeof(\"height\") - 1)) != NULL) {",
          "5215:    if (Z_TYPE_P(tmp) != IS_LONG) {",
          "5217:     ZVAL_COPY(&lval, tmp);",
          "5221:     rect.height = Z_LVAL_P(tmp);",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "5275:  double affine[6];",
          "5276:  long type;",
          "5277:  zval *options;",
          "5279:  int res = GD_FALSE, i;",
          "5281:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"l|z\", &type, &options) == FAILURE)  {",
          "",
          "[Removed Lines]",
          "5278:  zval **tmp;",
          "",
          "[Added Lines]",
          "5255:  zval *tmp;",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "5290:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Array expected as options\");",
          "5291:     RETURN_FALSE;",
          "5292:    }",
          "5295:      zval dval;",
          "5298:      convert_to_double(&dval);",
          "5299:      x = Z_DVAL(dval);",
          "5300:     } else {",
          "5302:     }",
          "5303:    } else {",
          "5304:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
          "5305:     RETURN_FALSE;",
          "5306:    }",
          "5310:      zval dval;",
          "5313:      convert_to_double(&dval);",
          "5314:      y = Z_DVAL(dval);",
          "5315:     } else {",
          "5317:     }",
          "5318:    } else {",
          "5319:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
          "",
          "[Removed Lines]",
          "5293:    if (zend_hash_find(HASH_OF(options), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
          "5294:     if (Z_TYPE_PP(tmp) != IS_DOUBLE) {",
          "5296:      dval = **tmp;",
          "5297:      zval_copy_ctor(&dval);",
          "5301:      x = Z_DVAL_PP(tmp);",
          "5308:    if (zend_hash_find(HASH_OF(options), \"y\", sizeof(\"y\"), (void **)&tmp) != FAILURE) {",
          "5309:     if (Z_TYPE_PP(tmp) != IS_DOUBLE) {",
          "5311:      dval = **tmp;",
          "5312:      zval_copy_ctor(&dval);",
          "5316:      y = Z_DVAL_PP(tmp);",
          "",
          "[Added Lines]",
          "5270:    if ((tmp = zend_hash_str_find(HASH_OF(options), \"x\", sizeof(\"x\") - 1)) != NULL) {",
          "5271:     if (Z_TYPE_P(tmp) != IS_DOUBLE) {",
          "5273:      ZVAL_COPY(&dval, tmp);",
          "5277:      x = Z_DVAL_P(tmp);",
          "5284:    if ((tmp = zend_hash_str_find(HASH_OF(options), \"y\", sizeof(\"y\") - 1)) != NULL) {",
          "5285:     if (Z_TYPE_P(tmp) != IS_DOUBLE) {",
          "5287:      ZVAL_COPY(&dval, tmp);",
          "5291:      y = Z_DVAL_P(tmp);",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "5333:   case GD_AFFINE_SHEAR_VERTICAL: {",
          "5334:    double angle;",
          "5337:    angle = Z_DVAL_P(options);",
          "5339:    if (type == GD_AFFINE_SHEAR_HORIZONTAL) {",
          "",
          "[Removed Lines]",
          "5336:    convert_to_double_ex(&options);",
          "",
          "[Added Lines]",
          "5311:    convert_to_double_ex(options);",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "5359:    add_index_double(return_value, i, affine[i]);",
          "5360:   }",
          "5361:  }",
          "",
          "[Removed Lines]",
          "5362: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "5370:  double m2[6];",
          "5371:  double mr[6];",
          "5374:  zval *z_m1;",
          "5375:  zval *z_m2;",
          "5376:  int i, nelems;",
          "",
          "[Removed Lines]",
          "5373:  zval **tmp;",
          "",
          "[Added Lines]",
          "5347:  zval *tmp;",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "5385:  }",
          "5387:  for (i = 0; i < 6; i++) {",
          "5390:     case IS_LONG:",
          "5392:      break;",
          "5393:     case IS_DOUBLE:",
          "5395:      break;",
          "5396:     case IS_STRING:",
          "5397:      {",
          "5398:       zval dval;",
          "5401:       convert_to_double(&dval);",
          "5402:       m1[i] = Z_DVAL(dval);",
          "5403:      }",
          "",
          "[Removed Lines]",
          "5388:   if (zend_hash_index_find(Z_ARRVAL_P(z_m1), i, (void **) &tmp) == SUCCESS) {",
          "5389:    switch (Z_TYPE_PP(tmp)) {",
          "5391:      m1[i]  = Z_LVAL_PP(tmp);",
          "5394:      m1[i] = Z_DVAL_PP(tmp);",
          "5399:       dval = **tmp;",
          "5400:       zval_copy_ctor(&dval);",
          "",
          "[Added Lines]",
          "5362:   if ((tmp = zend_hash_index_find(Z_ARRVAL_P(z_m1), i)) != NULL) {",
          "5363:    switch (Z_TYPE_P(tmp)) {",
          "5365:      m1[i]  = Z_LVAL_P(tmp);",
          "5368:      m1[i] = Z_DVAL_P(tmp);",
          "5373:       ZVAL_COPY(&dval, tmp);",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "5407:      RETURN_FALSE;",
          "5408:    }",
          "5409:   }",
          "5412:     case IS_LONG:",
          "5414:      break;",
          "5415:     case IS_DOUBLE:",
          "5417:      break;",
          "5418:     case IS_STRING:",
          "5419:      {",
          "5420:       zval dval;",
          "5423:       convert_to_double(&dval);",
          "5424:       m2[i] = Z_DVAL(dval);",
          "5425:      }",
          "",
          "[Removed Lines]",
          "5410:   if (zend_hash_index_find(Z_ARRVAL_P(z_m2), i, (void **) &tmp) == SUCCESS) {",
          "5411:    switch (Z_TYPE_PP(tmp)) {",
          "5413:      m2[i]  = Z_LVAL_PP(tmp);",
          "5416:      m2[i] = Z_DVAL_PP(tmp);",
          "5421:       dval = **tmp;",
          "5422:       zval_copy_ctor(&dval);",
          "",
          "[Added Lines]",
          "5383:   if ((tmp = zend_hash_index_find(Z_ARRVAL_P(z_m2), i)) != NULL) {",
          "5384:    switch (Z_TYPE_P(tmp)) {",
          "5386:      m2[i]  = Z_LVAL_P(tmp);",
          "5389:      m2[i] = Z_DVAL_P(tmp);",
          "5394:       ZVAL_COPY(&dval, tmp);",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "5439:  for (i = 0; i < 6; i++) {",
          "5440:   add_index_double(return_value, i, mr[i]);",
          "5441:  }",
          "",
          "[Removed Lines]",
          "5442: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "5453:   return;",
          "5454:  }",
          "5458:  if (method == -1) {",
          "5459:    method = GD_BILINEAR_FIXED;",
          "",
          "[Removed Lines]",
          "5456:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "",
          "[Added Lines]",
          "5428:  ZEND_FETCH_RESOURCE(im, gdImagePtr, IM, -1, \"Image\", le_gd);",
          "",
          "---------------"
        ],
        "ext/gd/gd_ctx.c||ext/gd/gd_ctx.c": [
          "File: ext/gd/gd_ctx.c -> ext/gd/gd_ctx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #define CTX_PUTC(c,ctx) ctx->putC(ctx, c)",
          "26: {",
          "",
          "[Removed Lines]",
          "25: static void _php_image_output_putc(struct gdIOCtx *ctx, int c)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:  unsigned char ch = (unsigned char) c;",
          "32:  TSRMLS_FETCH();",
          "33:  php_write(&ch, 1 TSRMLS_CC);",
          "37: {",
          "38:  TSRMLS_FETCH();",
          "39:  return php_write((void *)buf, l TSRMLS_CC);",
          "43: {",
          "44:  if(ctx) {",
          "45:   efree(ctx);",
          "46:  }",
          "50:  char ch = (char) c;",
          "51:  php_stream * stream = (php_stream *)ctx->data;",
          "52:  TSRMLS_FETCH();",
          "53:  php_stream_write(stream, &ch, 1);",
          "57: {",
          "58:  php_stream * stream = (php_stream *)ctx->data;",
          "59:  TSRMLS_FETCH();",
          "60:  return php_stream_write(stream, (void *)buf, l);",
          "64: {",
          "65:  TSRMLS_FETCH();",
          "",
          "[Removed Lines]",
          "34: }",
          "36: static int _php_image_output_putbuf(struct gdIOCtx *ctx, const void* buf, int l)",
          "40: }",
          "42: static void _php_image_output_ctxfree(struct gdIOCtx *ctx)",
          "47: }",
          "49: static void _php_image_stream_putc(struct gdIOCtx *ctx, int c)  {",
          "54: }",
          "56: static int _php_image_stream_putbuf(struct gdIOCtx *ctx, const void* buf, int l)",
          "61: }",
          "63: static void _php_image_stream_ctxfree(struct gdIOCtx *ctx)",
          "",
          "[Added Lines]",
          "49: static void _php_image_stream_putc(struct gdIOCtx *ctx, int c) /* {{{ */ {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:  if(ctx) {",
          "72:   efree(ctx);",
          "73:  }",
          "77: static void _php_image_output_ctx(INTERNAL_FUNCTION_PARAMETERS, int image_type, char *tn, void (*func_p)())",
          "",
          "[Removed Lines]",
          "74: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:   }",
          "109:  }",
          "113:  if (argc >= 3) {",
          "",
          "[Removed Lines]",
          "111:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &imgind, -1, \"Image\", phpi_get_le_gd());",
          "",
          "[Added Lines]",
          "111:  ZEND_FETCH_RESOURCE(im, gdImagePtr, imgind, -1, \"Image\", phpi_get_le_gd());",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "120:  if (argc > 1 && to_zval != NULL) {",
          "121:   if (Z_TYPE_P(to_zval) == IS_RESOURCE) {",
          "123:    if (stream == NULL) {",
          "124:     RETURN_FALSE;",
          "125:    }",
          "",
          "[Removed Lines]",
          "122:    php_stream_from_zval_no_verify(stream, &to_zval);",
          "",
          "[Added Lines]",
          "122:    php_stream_from_zval_no_verify(stream, to_zval);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "22159fb7b7324c3d4bb9fe00d3d2ce575a15743d",
      "candidate_info": {
        "commit_hash": "22159fb7b7324c3d4bb9fe00d3d2ce575a15743d",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/22159fb7b7324c3d4bb9fe00d3d2ce575a15743d",
        "files": [
          "Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner_defs.h",
          "ext/gd/config.w32",
          "ext/gd/gd.c",
          "ext/gd/libgd/gd.c",
          "ext/gd/libgd/gd.h",
          "ext/gd/php_gd.h"
        ],
        "message": "- add new interpolation method   . imagescale   . imageaffine   . replace imagerotate with new generic and optimized new implementations   . imagesetinterpolationmethod, to set the default interpolation to be     used with the new functions   . add imagepalettetotruecolor",
        "before_after_code_files": [
          "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner_defs.h||Zend/zend_language_scanner_defs.h",
          "ext/gd/config.w32||ext/gd/config.w32",
          "ext/gd/gd.c||ext/gd/gd.c",
          "ext/gd/libgd/gd.c||ext/gd/libgd/gd.c",
          "ext/gd/libgd/gd.h||ext/gd/libgd/gd.h",
          "ext/gd/php_gd.h||ext/gd/php_gd.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/gd/gd.c||ext/gd/gd.c"
          ],
          "candidate": [
            "ext/gd/gd.c||ext/gd/gd.c"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c": [
          "File: Zend/zend_language_scanner.c -> Zend/zend_language_scanner.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2: #line 1 \"Zend/zend_language_scanner.l\"",
          "4:    +----------------------------------------------------------------------+",
          "5:    | Zend Engine                                                          |",
          "6:    +----------------------------------------------------------------------+",
          "7:    | Copyright (c) 1998-2013 Zend Technologies Ltd. (http://www.zend.com) |",
          "8:    +----------------------------------------------------------------------+",
          "9:    | This source file is subject to version 2.00 of the Zend license,     |",
          "10:    | that is bundled with this package in the file LICENSE, and is        |",
          "11:    | available through the world-wide-web at the following url:           |",
          "12:    | http://www.zend.com/license/2_00.txt.                                |",
          "13:    | If you did not receive a copy of the Zend license and are unable to  |",
          "14:    | obtain it through the world-wide-web, please send a note to          |",
          "15:    | license@zend.com so we can mail you a copy immediately.              |",
          "16:    +----------------------------------------------------------------------+",
          "17:    | Authors: Marcus Boerger <helly@php.net>                              |",
          "18:    |          Nuno Lopes <nlopess@php.net>                                |",
          "19:    |          Scott MacVicar <scottmac@php.net>                           |",
          "20:    | Flex version authors:                                                |",
          "21:    |          Andi Gutmans <andi@zend.com>                                |",
          "22:    |          Zeev Suraski <zeev@zend.com>                                |",
          "23:    +----------------------------------------------------------------------+",
          "28: #if 0",
          "29: # define YYDEBUG(s, c) printf(\"state: %d char: %c\\n\", s, c)",
          "30: #else",
          "31: # define YYDEBUG(s, c)",
          "32: #endif",
          "34: #include \"zend_language_scanner_defs.h\"",
          "36: #include <errno.h>",
          "37: #include \"zend.h\"",
          "38: #ifdef PHP_WIN32",
          "39: # include <Winuser.h>",
          "40: #endif",
          "41: #include \"zend_alloc.h\"",
          "42: #include <zend_language_parser.h>",
          "43: #include \"zend_compile.h\"",
          "44: #include \"zend_language_scanner.h\"",
          "45: #include \"zend_highlight.h\"",
          "46: #include \"zend_constants.h\"",
          "47: #include \"zend_variables.h\"",
          "48: #include \"zend_operators.h\"",
          "49: #include \"zend_API.h\"",
          "50: #include \"zend_strtod.h\"",
          "51: #include \"zend_exceptions.h\"",
          "52: #include \"tsrm_virtual_cwd.h\"",
          "53: #include \"tsrm_config_common.h\"",
          "55: #define YYCTYPE   unsigned char",
          "56: #define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + ZEND_MMAP_AHEAD)) { return 0; } }",
          "57: #define YYCURSOR  SCNG(yy_cursor)",
          "58: #define YYLIMIT   SCNG(yy_limit)",
          "59: #define YYMARKER  SCNG(yy_marker)",
          "61: #define YYGETCONDITION()  SCNG(yy_state)",
          "62: #define YYSETCONDITION(s) SCNG(yy_state) = s",
          "64: #define STATE(name)  yyc##name",
          "67: #define BEGIN(state) YYSETCONDITION(STATE(state))",
          "68: #define YYSTATE      YYGETCONDITION()",
          "69: #define yytext       ((char*)SCNG(yy_text))",
          "70: #define yyleng       SCNG(yy_leng)",
          "71: #define yyless(x)    do { YYCURSOR = (unsigned char*)yytext + x; \\",
          "72:                           yyleng   = (unsigned int)x; } while(0)",
          "73: #define yymore()     goto yymore_restart",
          "77: #define YYMAXFILL 16",
          "78: #if ZEND_MMAP_AHEAD < YYMAXFILL",
          "79: # error ZEND_MMAP_AHEAD should be greater than or equal to YYMAXFILL",
          "80: #endif",
          "82: #ifdef HAVE_STDARG_H",
          "83: # include <stdarg.h>",
          "84: #endif",
          "86: #ifdef HAVE_UNISTD_H",
          "87: # include <unistd.h>",
          "88: #endif",
          "91: #define SCNG LANG_SCNG",
          "92: #ifdef ZTS",
          "93: ZEND_API ts_rsrc_id language_scanner_globals_id;",
          "94: #else",
          "95: ZEND_API zend_php_scanner_globals language_scanner_globals;",
          "96: #endif",
          "98: #define HANDLE_NEWLINES(s, l)             \\",
          "99: do {                   \\",
          "100:  char *p = (s), *boundary = p+(l);           \\",
          "101:                     \\",
          "102:  while (p<boundary) {              \\",
          "103:   if (*p == '\\n' || (*p == '\\r' && (*(p+1) != '\\n'))) {     \\",
          "104:    CG(zend_lineno)++;             \\",
          "105:   }                  \\",
          "106:   p++;                 \\",
          "107:  }                   \\",
          "108: } while (0)",
          "110: #define HANDLE_NEWLINE(c) \\",
          "111: { \\",
          "112:  if (c == '\\n' || c == '\\r') { \\",
          "113:   CG(zend_lineno)++; \\",
          "114:  } \\",
          "115: }",
          "118: #define SET_DOUBLE_QUOTES_SCANNED_LENGTH(len) CG(doc_comment_len) = (len)",
          "119: #define GET_DOUBLE_QUOTES_SCANNED_LENGTH()    CG(doc_comment_len)",
          "121: #define IS_LABEL_START(c) (((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z') || (c) == '_' || (c) >= 0x7F)",
          "123: #define ZEND_IS_OCT(c)  ((c)>='0' && (c)<='7')",
          "124: #define ZEND_IS_HEX(c)  (((c)>='0' && (c)<='9') || ((c)>='a' && (c)<='f') || ((c)>='A' && (c)<='F'))",
          "126: BEGIN_EXTERN_C()",
          "128: static size_t encoding_filter_script_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "129: {",
          "130:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "131:  assert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));",
          "132:  return zend_multibyte_encoding_converter(to, to_length, from, from_length, internal_encoding, LANG_SCNG(script_encoding) TSRMLS_CC);",
          "133: }",
          "135: static size_t encoding_filter_script_to_intermediate(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "136: {",
          "137:  return zend_multibyte_encoding_converter(to, to_length, from, from_length, zend_multibyte_encoding_utf8, LANG_SCNG(script_encoding) TSRMLS_CC);",
          "138: }",
          "140: static size_t encoding_filter_intermediate_to_script(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "141: {",
          "142:  return zend_multibyte_encoding_converter(to, to_length, from, from_length,",
          "143: LANG_SCNG(script_encoding), zend_multibyte_encoding_utf8 TSRMLS_CC);",
          "144: }",
          "146: static size_t encoding_filter_intermediate_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "147: {",
          "148:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "149:  assert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));",
          "150:  return zend_multibyte_encoding_converter(to, to_length, from, from_length,",
          "151: internal_encoding, zend_multibyte_encoding_utf8 TSRMLS_CC);",
          "152: }",
          "155: static void _yy_push_state(int new_state TSRMLS_DC)",
          "156: {",
          "157:  zend_stack_push(&SCNG(state_stack), (void *) &YYGETCONDITION(), sizeof(int));",
          "158:  YYSETCONDITION(new_state);",
          "159: }",
          "161: #define yy_push_state(state_and_tsrm) _yy_push_state(yyc##state_and_tsrm)",
          "163: static void yy_pop_state(TSRMLS_D)",
          "164: {",
          "165:  int *stack_state;",
          "166:  zend_stack_top(&SCNG(state_stack), (void **) &stack_state);",
          "167:  YYSETCONDITION(*stack_state);",
          "168:  zend_stack_del_top(&SCNG(state_stack));",
          "169: }",
          "171: static void yy_scan_buffer(char *str, unsigned int len TSRMLS_DC)",
          "172: {",
          "173:  YYCURSOR       = (YYCTYPE*)str;",
          "174:  YYLIMIT        = YYCURSOR + len;",
          "175:  if (!SCNG(yy_start)) {",
          "176:   SCNG(yy_start) = YYCURSOR;",
          "177:  }",
          "178: }",
          "180: void startup_scanner(TSRMLS_D)",
          "181: {",
          "182:  CG(parse_error) = 0;",
          "183:  CG(doc_comment) = NULL;",
          "184:  CG(doc_comment_len) = 0;",
          "185:  zend_stack_init(&SCNG(state_stack));",
          "186:  zend_ptr_stack_init(&SCNG(heredoc_label_stack));",
          "187: }",
          "189: static void heredoc_label_dtor(zend_heredoc_label *heredoc_label) {",
          "190:     efree(heredoc_label->label);",
          "191: }",
          "193: void shutdown_scanner(TSRMLS_D)",
          "194: {",
          "195:  CG(parse_error) = 0;",
          "196:  RESET_DOC_COMMENT();",
          "197:  zend_stack_destroy(&SCNG(state_stack));",
          "198:  zend_ptr_stack_clean(&SCNG(heredoc_label_stack), (void (*)(void *)) &heredoc_label_dtor, 1);",
          "199:  zend_ptr_stack_destroy(&SCNG(heredoc_label_stack));",
          "200: }",
          "202: ZEND_API void zend_save_lexical_state(zend_lex_state *lex_state TSRMLS_DC)",
          "203: {",
          "204:  lex_state->yy_leng   = SCNG(yy_leng);",
          "205:  lex_state->yy_start  = SCNG(yy_start);",
          "206:  lex_state->yy_text   = SCNG(yy_text);",
          "207:  lex_state->yy_cursor = SCNG(yy_cursor);",
          "208:  lex_state->yy_marker = SCNG(yy_marker);",
          "209:  lex_state->yy_limit  = SCNG(yy_limit);",
          "211:  lex_state->state_stack = SCNG(state_stack);",
          "212:  zend_stack_init(&SCNG(state_stack));",
          "214:  lex_state->heredoc_label_stack = SCNG(heredoc_label_stack);",
          "215:  zend_ptr_stack_init(&SCNG(heredoc_label_stack));",
          "217:  lex_state->in = SCNG(yy_in);",
          "218:  lex_state->yy_state = YYSTATE;",
          "219:  lex_state->filename = zend_get_compiled_filename(TSRMLS_C);",
          "220:  lex_state->lineno = CG(zend_lineno);",
          "222:  lex_state->script_org = SCNG(script_org);",
          "223:  lex_state->script_org_size = SCNG(script_org_size);",
          "224:  lex_state->script_filtered = SCNG(script_filtered);",
          "225:  lex_state->script_filtered_size = SCNG(script_filtered_size);",
          "226:  lex_state->input_filter = SCNG(input_filter);",
          "227:  lex_state->output_filter = SCNG(output_filter);",
          "228:  lex_state->script_encoding = SCNG(script_encoding);",
          "229: }",
          "231: ZEND_API void zend_restore_lexical_state(zend_lex_state *lex_state TSRMLS_DC)",
          "232: {",
          "233:  SCNG(yy_leng)   = lex_state->yy_leng;",
          "234:  SCNG(yy_start)  = lex_state->yy_start;",
          "235:  SCNG(yy_text)   = lex_state->yy_text;",
          "236:  SCNG(yy_cursor) = lex_state->yy_cursor;",
          "237:  SCNG(yy_marker) = lex_state->yy_marker;",
          "238:  SCNG(yy_limit)  = lex_state->yy_limit;",
          "240:  zend_stack_destroy(&SCNG(state_stack));",
          "241:  SCNG(state_stack) = lex_state->state_stack;",
          "243:  zend_ptr_stack_clean(&SCNG(heredoc_label_stack), (void (*)(void *)) &heredoc_label_dtor, 1);",
          "244:  zend_ptr_stack_destroy(&SCNG(heredoc_label_stack));",
          "245:  SCNG(heredoc_label_stack) = lex_state->heredoc_label_stack;",
          "247:  SCNG(yy_in) = lex_state->in;",
          "248:  YYSETCONDITION(lex_state->yy_state);",
          "249:  CG(zend_lineno) = lex_state->lineno;",
          "250:  zend_restore_compiled_filename(lex_state->filename TSRMLS_CC);",
          "252:  if (SCNG(script_filtered)) {",
          "253:   efree(SCNG(script_filtered));",
          "254:   SCNG(script_filtered) = NULL;",
          "255:  }",
          "256:  SCNG(script_org) = lex_state->script_org;",
          "257:  SCNG(script_org_size) = lex_state->script_org_size;",
          "258:  SCNG(script_filtered) = lex_state->script_filtered;",
          "259:  SCNG(script_filtered_size) = lex_state->script_filtered_size;",
          "260:  SCNG(input_filter) = lex_state->input_filter;",
          "261:  SCNG(output_filter) = lex_state->output_filter;",
          "262:  SCNG(script_encoding) = lex_state->script_encoding;",
          "263: }",
          "265: ZEND_API void zend_destroy_file_handle(zend_file_handle *file_handle TSRMLS_DC)",
          "266: {",
          "267:  zend_llist_del_element(&CG(open_files), file_handle, (int (*)(void *, void *)) zend_compare_file_handles);",
          "269:  file_handle->opened_path = NULL;",
          "270:  if (file_handle->free_filename) {",
          "271:   file_handle->filename = NULL;",
          "272:  }",
          "273: }",
          "275: #define BOM_UTF32_BE \"\\x00\\x00\\xfe\\xff\"",
          "276: #define BOM_UTF32_LE \"\\xff\\xfe\\x00\\x00\"",
          "277: #define BOM_UTF16_BE \"\\xfe\\xff\"",
          "278: #define BOM_UTF16_LE \"\\xff\\xfe\"",
          "279: #define BOM_UTF8  \"\\xef\\xbb\\xbf\"",
          "281: static const zend_encoding *zend_multibyte_detect_utf_encoding(const unsigned char *script, size_t script_size TSRMLS_DC)",
          "282: {",
          "283:  const unsigned char *p;",
          "284:  int wchar_size = 2;",
          "285:  int le = 0;",
          "288:  p = script;",
          "289:  while ((p-script) < script_size) {",
          "290:   p = memchr(p, 0, script_size-(p-script)-2);",
          "291:   if (!p) {",
          "292:    break;",
          "293:   }",
          "294:   if (*(p+1) == '\\0' && *(p+2) == '\\0') {",
          "295:    wchar_size = 4;",
          "296:    break;",
          "297:   }",
          "300:   p += 4;",
          "301:  }",
          "304:  p = script;",
          "305:  while ((p-script) < script_size) {",
          "306:   if (*p == '\\0' && *(p+wchar_size-1) != '\\0') {",
          "308:    le = 0;",
          "309:    break;",
          "310:   } else if (*p != '\\0' && *(p+wchar_size-1) == '\\0') {",
          "312:    le = 1;",
          "313:    break;",
          "314:   }",
          "315:   p += wchar_size;",
          "316:  }",
          "318:  if (wchar_size == 2) {",
          "319:   return le ? zend_multibyte_encoding_utf16le : zend_multibyte_encoding_utf16be;",
          "320:  } else {",
          "321:   return le ? zend_multibyte_encoding_utf32le : zend_multibyte_encoding_utf32be;",
          "322:  }",
          "324:  return NULL;",
          "325: }",
          "327: static const zend_encoding* zend_multibyte_detect_unicode(TSRMLS_D)",
          "328: {",
          "329:  const zend_encoding *script_encoding = NULL;",
          "330:  int bom_size;",
          "331:  unsigned char *pos1, *pos2;",
          "333:  if (LANG_SCNG(script_org_size) < sizeof(BOM_UTF32_LE)-1) {",
          "334:   return NULL;",
          "335:  }",
          "338:  if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_BE, sizeof(BOM_UTF32_BE)-1)) {",
          "339:   script_encoding = zend_multibyte_encoding_utf32be;",
          "340:   bom_size = sizeof(BOM_UTF32_BE)-1;",
          "341:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_LE, sizeof(BOM_UTF32_LE)-1)) {",
          "342:   script_encoding = zend_multibyte_encoding_utf32le;",
          "343:   bom_size = sizeof(BOM_UTF32_LE)-1;",
          "344:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_BE, sizeof(BOM_UTF16_BE)-1)) {",
          "345:   script_encoding = zend_multibyte_encoding_utf16be;",
          "346:   bom_size = sizeof(BOM_UTF16_BE)-1;",
          "347:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_LE, sizeof(BOM_UTF16_LE)-1)) {",
          "348:   script_encoding = zend_multibyte_encoding_utf16le;",
          "349:   bom_size = sizeof(BOM_UTF16_LE)-1;",
          "350:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF8, sizeof(BOM_UTF8)-1)) {",
          "351:   script_encoding = zend_multibyte_encoding_utf8;",
          "352:   bom_size = sizeof(BOM_UTF8)-1;",
          "353:  }",
          "355:  if (script_encoding) {",
          "357:   LANG_SCNG(script_org) += bom_size;",
          "358:   LANG_SCNG(script_org_size) -= bom_size;",
          "360:   return script_encoding;",
          "361:  }",
          "364:  if ((pos1 = memchr(LANG_SCNG(script_org), 0, LANG_SCNG(script_org_size)))) {",
          "366:   pos2 = LANG_SCNG(script_org);",
          "368:   while (pos1 - pos2 >= sizeof(\"__HALT_COMPILER();\")-1) {",
          "369:    pos2 = memchr(pos2, '_', pos1 - pos2);",
          "370:    if (!pos2) break;",
          "371:    pos2++;",
          "372:    if (strncasecmp((char*)pos2, \"_HALT_COMPILER\", sizeof(\"_HALT_COMPILER\")-1) == 0) {",
          "373:     pos2 += sizeof(\"_HALT_COMPILER\")-1;",
          "374:     while (*pos2 == ' '  ||",
          "378:      pos2++;",
          "379:     }",
          "380:     if (*pos2 == '(') {",
          "381:      pos2++;",
          "382:      while (*pos2 == ' '  ||",
          "386:       pos2++;",
          "387:      }",
          "388:      if (*pos2 == ')') {",
          "389:       pos2++;",
          "390:       while (*pos2 == ' '  ||",
          "394:        pos2++;",
          "395:       }",
          "396:       if (*pos2 == ';') {",
          "397:        return NULL;",
          "398:       }",
          "399:      }",
          "400:     }",
          "401:    }",
          "402:   }",
          "404:   return zend_multibyte_detect_utf_encoding(LANG_SCNG(script_org), LANG_SCNG(script_org_size) TSRMLS_CC);",
          "405:  }",
          "407:  return NULL;",
          "408: }",
          "410: static const zend_encoding* zend_multibyte_find_script_encoding(TSRMLS_D)",
          "411: {",
          "412:  const zend_encoding *script_encoding;",
          "414:  if (CG(detect_unicode)) {",
          "416:   script_encoding = zend_multibyte_detect_unicode(TSRMLS_C);",
          "417:   if (script_encoding != NULL) {",
          "419:    return script_encoding;",
          "420:   }",
          "421:  }",
          "424:  if (!CG(script_encoding_list) || !CG(script_encoding_list_size)) {",
          "425:   return NULL;",
          "426:  }",
          "429:  if (CG(script_encoding_list_size) > 1) {",
          "430:   return zend_multibyte_encoding_detector(LANG_SCNG(script_org), LANG_SCNG(script_org_size), CG(script_encoding_list), CG(script_encoding_list_size) TSRMLS_CC);",
          "431:  }",
          "433:  return CG(script_encoding_list)[0];",
          "434: }",
          "436: ZEND_API int zend_multibyte_set_filter(const zend_encoding *onetime_encoding TSRMLS_DC)",
          "437: {",
          "438:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "439:  const zend_encoding *script_encoding = onetime_encoding ? onetime_encoding: zend_multibyte_find_script_encoding(TSRMLS_C);",
          "441:  if (!script_encoding) {",
          "442:   return FAILURE;",
          "443:  }",
          "446:  LANG_SCNG(script_encoding) = script_encoding;",
          "447:  LANG_SCNG(input_filter) = NULL;",
          "448:  LANG_SCNG(output_filter) = NULL;",
          "450:  if (!internal_encoding || LANG_SCNG(script_encoding) == internal_encoding) {",
          "451:   if (!zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {",
          "453:    LANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;",
          "454:    LANG_SCNG(output_filter) = encoding_filter_intermediate_to_script;",
          "455:   } else {",
          "456:    LANG_SCNG(input_filter) = NULL;",
          "457:    LANG_SCNG(output_filter) = NULL;",
          "458:   }",
          "459:   return SUCCESS;",
          "460:  }",
          "462:  if (zend_multibyte_check_lexer_compatibility(internal_encoding)) {",
          "463:   LANG_SCNG(input_filter) = encoding_filter_script_to_internal;",
          "464:   LANG_SCNG(output_filter) = NULL;",
          "465:  } else if (zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {",
          "466:   LANG_SCNG(input_filter) = NULL;",
          "467:   LANG_SCNG(output_filter) = encoding_filter_script_to_internal;",
          "468:  } else {",
          "470:   LANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;",
          "471:   LANG_SCNG(output_filter) = encoding_filter_intermediate_to_internal;",
          "472:  }",
          "474:  return 0;",
          "475: }",
          "477: ZEND_API int open_file_for_scanning(zend_file_handle *file_handle TSRMLS_DC)",
          "478: {",
          "479:  const char *file_path = NULL;",
          "480:  char *buf;",
          "481:  size_t size, offset = 0;",
          "484:  if (CG(start_lineno) == 2 && file_handle->type == ZEND_HANDLE_FP && file_handle->handle.fp) {",
          "485:   if ((offset = ftell(file_handle->handle.fp)) == -1) {",
          "486:    offset = 0;",
          "487:   }",
          "488:  }",
          "490:  if (zend_stream_fixup(file_handle, &buf, &size TSRMLS_CC) == FAILURE) {",
          "491:   return FAILURE;",
          "492:  }",
          "494:  zend_llist_add_element(&CG(open_files), file_handle);",
          "495:  if (file_handle->handle.stream.handle >= (void*)file_handle && file_handle->handle.stream.handle <= (void*)(file_handle+1)) {",
          "496:   zend_file_handle *fh = (zend_file_handle*)zend_llist_get_last(&CG(open_files));",
          "497:   size_t diff = (char*)file_handle->handle.stream.handle - (char*)file_handle;",
          "498:   fh->handle.stream.handle = (void*)(((char*)fh) + diff);",
          "499:   file_handle->handle.stream.handle = fh->handle.stream.handle;",
          "500:  }",
          "503:  SCNG(yy_in) = file_handle;",
          "504:  SCNG(yy_start) = NULL;",
          "506:  if (size != -1) {",
          "507:   if (CG(multibyte)) {",
          "508:    SCNG(script_org) = (unsigned char*)buf;",
          "509:    SCNG(script_org_size) = size;",
          "510:    SCNG(script_filtered) = NULL;",
          "512:    zend_multibyte_set_filter(NULL TSRMLS_CC);",
          "514:    if (SCNG(input_filter)) {",
          "515:     if ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "516:      zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "517:        \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "518:     }",
          "519:     buf = (char*)SCNG(script_filtered);",
          "520:     size = SCNG(script_filtered_size);",
          "521:    }",
          "522:   }",
          "523:   SCNG(yy_start) = (unsigned char *)buf - offset;",
          "524:   yy_scan_buffer(buf, size TSRMLS_CC);",
          "525:  } else {",
          "526:   zend_error_noreturn(E_COMPILE_ERROR, \"zend_stream_mmap() failed\");",
          "527:  }",
          "529:  BEGIN(INITIAL);",
          "531:  if (file_handle->opened_path) {",
          "532:   file_path = file_handle->opened_path;",
          "533:  } else {",
          "534:   file_path = file_handle->filename;",
          "535:  }",
          "537:  zend_set_compiled_filename(file_path TSRMLS_CC);",
          "539:  if (CG(start_lineno)) {",
          "540:   CG(zend_lineno) = CG(start_lineno);",
          "541:   CG(start_lineno) = 0;",
          "542:  } else {",
          "543:   CG(zend_lineno) = 1;",
          "544:  }",
          "546:  CG(increment_lineno) = 0;",
          "547:  return SUCCESS;",
          "548: }",
          "549: END_EXTERN_C()",
          "552: ZEND_API zend_op_array *compile_file(zend_file_handle *file_handle, int type TSRMLS_DC)",
          "553: {",
          "554:  zend_lex_state original_lex_state;",
          "555:  zend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));",
          "556:  zend_op_array *original_active_op_array = CG(active_op_array);",
          "557:  zend_op_array *retval=NULL;",
          "558:  int compiler_result;",
          "559:  zend_bool compilation_successful=0;",
          "560:  znode retval_znode;",
          "561:  zend_bool original_in_compilation = CG(in_compilation);",
          "563:  retval_znode.op_type = IS_CONST;",
          "564:  retval_znode.u.constant.type = IS_LONG;",
          "565:  retval_znode.u.constant.value.lval = 1;",
          "566:  Z_UNSET_ISREF(retval_znode.u.constant);",
          "567:  Z_SET_REFCOUNT(retval_znode.u.constant, 1);",
          "569:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "573:  if (open_file_for_scanning(file_handle TSRMLS_CC)==FAILURE) {",
          "574:   if (type==ZEND_REQUIRE) {",
          "575:    zend_message_dispatcher(ZMSG_FAILED_REQUIRE_FOPEN, file_handle->filename TSRMLS_CC);",
          "576:    zend_bailout();",
          "577:   } else {",
          "578:    zend_message_dispatcher(ZMSG_FAILED_INCLUDE_FOPEN, file_handle->filename TSRMLS_CC);",
          "579:   }",
          "580:   compilation_successful=0;",
          "581:  } else {",
          "582:   init_op_array(op_array, ZEND_USER_FUNCTION, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "583:   CG(in_compilation) = 1;",
          "584:   CG(active_op_array) = op_array;",
          "585:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "586:   zend_init_compiler_context(TSRMLS_C);",
          "587:   compiler_result = zendparse(TSRMLS_C);",
          "588:   zend_do_return(&retval_znode, 0 TSRMLS_CC);",
          "589:   CG(in_compilation) = original_in_compilation;",
          "591:    zend_bailout();",
          "592:   }",
          "593:   compilation_successful=1;",
          "594:  }",
          "596:  if (retval) {",
          "597:   CG(active_op_array) = original_active_op_array;",
          "598:   if (compilation_successful) {",
          "599:    pass_two(op_array TSRMLS_CC);",
          "600:    zend_release_labels(TSRMLS_C);",
          "601:   } else {",
          "602:    efree(op_array);",
          "603:    retval = NULL;",
          "604:   }",
          "605:  }",
          "606:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "607:  return retval;",
          "608: }",
          "611: zend_op_array *compile_filename(int type, zval *filename TSRMLS_DC)",
          "612: {",
          "613:  zend_file_handle file_handle;",
          "614:  zval tmp;",
          "615:  zend_op_array *retval;",
          "616:  char *opened_path = NULL;",
          "618:  if (filename->type != IS_STRING) {",
          "619:   tmp = *filename;",
          "620:   zval_copy_ctor(&tmp);",
          "621:   convert_to_string(&tmp);",
          "622:   filename = &tmp;",
          "623:  }",
          "624:  file_handle.filename = filename->value.str.val;",
          "625:  file_handle.free_filename = 0;",
          "626:  file_handle.type = ZEND_HANDLE_FILENAME;",
          "627:  file_handle.opened_path = NULL;",
          "628:  file_handle.handle.fp = NULL;",
          "630:  retval = zend_compile_file(&file_handle, type TSRMLS_CC);",
          "631:  if (retval && file_handle.handle.stream.handle) {",
          "632:   int dummy = 1;",
          "634:   if (!file_handle.opened_path) {",
          "635:    file_handle.opened_path = opened_path = estrndup(filename->value.str.val, filename->value.str.len);",
          "636:   }",
          "638:   zend_hash_add(&EG(included_files), file_handle.opened_path, strlen(file_handle.opened_path)+1, (void *)&dummy, sizeof(int), NULL);",
          "640:   if (opened_path) {",
          "641:    efree(opened_path);",
          "642:   }",
          "643:  }",
          "644:  zend_destroy_file_handle(&file_handle TSRMLS_CC);",
          "646:  if (filename==&tmp) {",
          "647:   zval_dtor(&tmp);",
          "648:  }",
          "649:  return retval;",
          "650: }",
          "652: ZEND_API int zend_prepare_string_for_scanning(zval *str, char *filename TSRMLS_DC)",
          "653: {",
          "654:  char *buf;",
          "655:  size_t size;",
          "658:  if (IS_INTERNED(str->value.str.val)) {",
          "659:   char *tmp = safe_emalloc(1, str->value.str.len, ZEND_MMAP_AHEAD);",
          "660:   memcpy(tmp, str->value.str.val, str->value.str.len + ZEND_MMAP_AHEAD);",
          "661:   str->value.str.val = tmp;",
          "662:  } else {",
          "663:   str->value.str.val = safe_erealloc(str->value.str.val, 1, str->value.str.len, ZEND_MMAP_AHEAD);",
          "664:  }",
          "666:  memset(str->value.str.val + str->value.str.len, 0, ZEND_MMAP_AHEAD);",
          "668:  SCNG(yy_in) = NULL;",
          "669:  SCNG(yy_start) = NULL;",
          "671:  buf = str->value.str.val;",
          "672:  size = str->value.str.len;",
          "674:  if (CG(multibyte)) {",
          "675:   SCNG(script_org) = (unsigned char*)buf;",
          "676:   SCNG(script_org_size) = size;",
          "677:   SCNG(script_filtered) = NULL;",
          "679:   zend_multibyte_set_filter(zend_multibyte_get_internal_encoding(TSRMLS_C) TSRMLS_CC);",
          "681:   if (SCNG(input_filter)) {",
          "682:    if ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "683:     zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "684:       \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "685:    }",
          "686:    buf = (char*)SCNG(script_filtered);",
          "687:    size = SCNG(script_filtered_size);",
          "688:   }",
          "689:  }",
          "691:  yy_scan_buffer(buf, size TSRMLS_CC);",
          "693:  zend_set_compiled_filename(filename TSRMLS_CC);",
          "694:  CG(zend_lineno) = 1;",
          "695:  CG(increment_lineno) = 0;",
          "696:  return SUCCESS;",
          "697: }",
          "700: ZEND_API size_t zend_get_scanned_file_offset(TSRMLS_D)",
          "701: {",
          "702:  size_t offset = SCNG(yy_cursor) - SCNG(yy_start);",
          "703:  if (SCNG(input_filter)) {",
          "704:   size_t original_offset = offset, length = 0;",
          "705:   do {",
          "706:    unsigned char *p = NULL;",
          "707:    if ((size_t)-1 == SCNG(input_filter)(&p, &length, SCNG(script_org), offset TSRMLS_CC)) {",
          "708:     return (size_t)-1;",
          "709:    }",
          "710:    efree(p);",
          "711:    if (length > original_offset) {",
          "712:     offset--;",
          "713:    } else if (length < original_offset) {",
          "714:     offset++;",
          "715:    }",
          "716:   } while (original_offset != length);",
          "717:  }",
          "718:  return offset;",
          "719: }",
          "722: zend_op_array *compile_string(zval *source_string, char *filename TSRMLS_DC)",
          "723: {",
          "724:  zend_lex_state original_lex_state;",
          "725:  zend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));",
          "726:  zend_op_array *original_active_op_array = CG(active_op_array);",
          "727:  zend_op_array *retval;",
          "728:  zval tmp;",
          "729:  int compiler_result;",
          "730:  zend_bool original_in_compilation = CG(in_compilation);",
          "732:  if (source_string->value.str.len==0) {",
          "733:   efree(op_array);",
          "734:   return NULL;",
          "735:  }",
          "737:  CG(in_compilation) = 1;",
          "739:  tmp = *source_string;",
          "740:  zval_copy_ctor(&tmp);",
          "741:  convert_to_string(&tmp);",
          "742:  source_string = &tmp;",
          "744:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "745:  if (zend_prepare_string_for_scanning(source_string, filename TSRMLS_CC)==FAILURE) {",
          "746:   efree(op_array);",
          "747:   retval = NULL;",
          "748:  } else {",
          "749:   zend_bool orig_interactive = CG(interactive);",
          "751:   CG(interactive) = 0;",
          "752:   init_op_array(op_array, ZEND_EVAL_CODE, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "753:   CG(interactive) = orig_interactive;",
          "754:   CG(active_op_array) = op_array;",
          "755:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "756:   zend_init_compiler_context(TSRMLS_C);",
          "757:   BEGIN(ST_IN_SCRIPTING);",
          "758:   compiler_result = zendparse(TSRMLS_C);",
          "760:   if (SCNG(script_filtered)) {",
          "761:    efree(SCNG(script_filtered));",
          "762:    SCNG(script_filtered) = NULL;",
          "763:   }",
          "765:   if (compiler_result==1) {",
          "766:    CG(active_op_array) = original_active_op_array;",
          "767:    CG(unclean_shutdown)=1;",
          "768:    destroy_op_array(op_array TSRMLS_CC);",
          "769:    efree(op_array);",
          "770:    retval = NULL;",
          "771:   } else {",
          "772:    zend_do_return(NULL, 0 TSRMLS_CC);",
          "773:    CG(active_op_array) = original_active_op_array;",
          "774:    pass_two(op_array TSRMLS_CC);",
          "775:    zend_release_labels(TSRMLS_C);",
          "776:    retval = op_array;",
          "777:   }",
          "778:  }",
          "779:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "780:  zval_dtor(&tmp);",
          "781:  CG(in_compilation) = original_in_compilation;",
          "782:  return retval;",
          "783: }",
          "786: BEGIN_EXTERN_C()",
          "787: int highlight_file(char *filename, zend_syntax_highlighter_ini *syntax_highlighter_ini TSRMLS_DC)",
          "788: {",
          "789:  zend_lex_state original_lex_state;",
          "790:  zend_file_handle file_handle;",
          "792:  file_handle.type = ZEND_HANDLE_FILENAME;",
          "793:  file_handle.filename = filename;",
          "794:  file_handle.free_filename = 0;",
          "795:  file_handle.opened_path = NULL;",
          "796:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "797:  if (open_file_for_scanning(&file_handle TSRMLS_CC)==FAILURE) {",
          "798:   zend_message_dispatcher(ZMSG_FAILED_HIGHLIGHT_FOPEN, filename TSRMLS_CC);",
          "799:   zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "800:   return FAILURE;",
          "801:  }",
          "802:  zend_highlight(syntax_highlighter_ini TSRMLS_CC);",
          "803:  if (SCNG(script_filtered)) {",
          "804:   efree(SCNG(script_filtered));",
          "805:   SCNG(script_filtered) = NULL;",
          "806:  }",
          "807:  zend_destroy_file_handle(&file_handle TSRMLS_CC);",
          "808:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "809:  return SUCCESS;",
          "810: }",
          "812: int highlight_string(zval *str, zend_syntax_highlighter_ini *syntax_highlighter_ini, char *str_name TSRMLS_DC)",
          "813: {",
          "814:  zend_lex_state original_lex_state;",
          "815:  zval tmp = *str;",
          "817:  str = &tmp;",
          "818:  zval_copy_ctor(str);",
          "819:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "820:  if (zend_prepare_string_for_scanning(str, str_name TSRMLS_CC)==FAILURE) {",
          "821:   zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "822:   return FAILURE;",
          "823:  }",
          "824:  BEGIN(INITIAL);",
          "825:  zend_highlight(syntax_highlighter_ini TSRMLS_CC);",
          "826:  if (SCNG(script_filtered)) {",
          "827:   efree(SCNG(script_filtered));",
          "828:   SCNG(script_filtered) = NULL;",
          "829:  }",
          "830:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "831:  zval_dtor(str);",
          "832:  return SUCCESS;",
          "833: }",
          "835: ZEND_API void zend_multibyte_yyinput_again(zend_encoding_filter old_input_filter, const zend_encoding *old_encoding TSRMLS_DC)",
          "836: {",
          "837:  size_t length;",
          "838:  unsigned char *new_yy_start;",
          "841:  if (!SCNG(input_filter)) {",
          "842:   if (SCNG(script_filtered)) {",
          "843:    efree(SCNG(script_filtered));",
          "844:    SCNG(script_filtered) = NULL;",
          "845:   }",
          "846:   SCNG(script_filtered_size) = 0;",
          "847:   length = SCNG(script_org_size);",
          "848:   new_yy_start = SCNG(script_org);",
          "849:  } else {",
          "850:   if ((size_t)-1 == SCNG(input_filter)(&new_yy_start, &length, SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "851:    zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "852:      \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "853:   }",
          "854:   SCNG(script_filtered) = new_yy_start;",
          "855:   SCNG(script_filtered_size) = length;",
          "856:  }",
          "858:  SCNG(yy_cursor) = new_yy_start + (SCNG(yy_cursor) - SCNG(yy_start));",
          "859:  SCNG(yy_marker) = new_yy_start + (SCNG(yy_marker) - SCNG(yy_start));",
          "860:  SCNG(yy_text) = new_yy_start + (SCNG(yy_text) - SCNG(yy_start));",
          "861:  SCNG(yy_limit) = new_yy_start + (SCNG(yy_limit) - SCNG(yy_start));",
          "863:  SCNG(yy_start) = new_yy_start;",
          "864: }",
          "867: # define zend_copy_value(zendlval, yytext, yyleng) \\",
          "868:  if (SCNG(output_filter)) { \\",
          "869:   size_t sz = 0; \\",
          "870:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC); \\",
          "871:   zendlval->value.str.len = sz; \\",
          "872:  } else { \\",
          "873:   zendlval->value.str.val = (char *) estrndup(yytext, yyleng); \\",
          "874:   zendlval->value.str.len = yyleng; \\",
          "875:  }",
          "877: static void zend_scan_escape_string(zval *zendlval, char *str, int len, char quote_type TSRMLS_DC)",
          "878: {",
          "879:  register char *s, *t;",
          "880:  char *end;",
          "882:  ZVAL_STRINGL(zendlval, str, len, 1);",
          "885:  s = t = zendlval->value.str.val;",
          "886:  end = s+zendlval->value.str.len;",
          "887:  while (s<end) {",
          "888:   if (*s=='\\\\') {",
          "889:    s++;",
          "890:    if (s >= end) {",
          "892:     break;",
          "893:    }",
          "895:    switch(*s) {",
          "896:     case 'n':",
          "898:      zendlval->value.str.len--;",
          "899:      break;",
          "900:     case 'r':",
          "902:      zendlval->value.str.len--;",
          "903:      break;",
          "904:     case 't':",
          "906:      zendlval->value.str.len--;",
          "907:      break;",
          "908:     case 'f':",
          "910:      zendlval->value.str.len--;",
          "911:      break;",
          "912:     case 'v':",
          "914:      zendlval->value.str.len--;",
          "915:      break;",
          "916:     case 'e':",
          "917: #ifdef PHP_WIN32",
          "919: #else",
          "921: #endif",
          "922:      zendlval->value.str.len--;",
          "923:      break;",
          "924:     case '\"':",
          "925:     case '`':",
          "926:      if (*s != quote_type) {",
          "929:       break;",
          "930:      }",
          "931:     case '\\\\':",
          "932:     case '$':",
          "934:      zendlval->value.str.len--;",
          "935:      break;",
          "936:     case 'x':",
          "937:     case 'X':",
          "938:      if (ZEND_IS_HEX(*(s+1))) {",
          "939:       char hex_buf[3] = { 0, 0, 0 };",
          "943:       hex_buf[0] = *(++s);",
          "944:       zendlval->value.str.len--;",
          "945:       if (ZEND_IS_HEX(*(s+1))) {",
          "946:        hex_buf[1] = *(++s);",
          "947:        zendlval->value.str.len--;",
          "948:       }",
          "950:      } else {",
          "953:      }",
          "954:      break;",
          "955:     default:",
          "957:      if (ZEND_IS_OCT(*s)) {",
          "958:       char octal_buf[4] = { 0, 0, 0, 0 };",
          "960:       octal_buf[0] = *s;",
          "961:       zendlval->value.str.len--;",
          "962:       if (ZEND_IS_OCT(*(s+1))) {",
          "963:        octal_buf[1] = *(++s);",
          "964:        zendlval->value.str.len--;",
          "965:        if (ZEND_IS_OCT(*(s+1))) {",
          "966:         octal_buf[2] = *(++s);",
          "967:         zendlval->value.str.len--;",
          "968:        }",
          "969:       }",
          "971:      } else {",
          "974:      }",
          "975:      break;",
          "976:    }",
          "977:   } else {",
          "979:   }",
          "981:   if (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {",
          "982:    CG(zend_lineno)++;",
          "983:   }",
          "984:   s++;",
          "985:  }",
          "987:  if (SCNG(output_filter)) {",
          "988:   size_t sz = 0;",
          "989:   s = zendlval->value.str.val;",
          "990:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);",
          "991:   zendlval->value.str.len = sz;",
          "992:   efree(s);",
          "993:  }",
          "994: }",
          "997: int lex_scan(zval *zendlval TSRMLS_DC)",
          "998: {",
          "999: restart:",
          "1000:  SCNG(yy_text) = YYCURSOR;",
          "1002: yymore_restart:",
          "1005: #line 1006 \"Zend/zend_language_scanner.c\"",
          "1006: {",
          "1007:  YYCTYPE yych;",
          "1008:  unsigned int yyaccept = 0;",
          "1009:  if (YYGETCONDITION() < 5) {",
          "1010:   if (YYGETCONDITION() < 2) {",
          "1011:    if (YYGETCONDITION() < 1) {",
          "1012:     goto yyc_ST_IN_SCRIPTING;",
          "1013:    } else {",
          "1014:     goto yyc_ST_LOOKING_FOR_PROPERTY;",
          "1015:    }",
          "1016:   } else {",
          "1017:    if (YYGETCONDITION() < 3) {",
          "1018:     goto yyc_ST_BACKQUOTE;",
          "1019:    } else {",
          "1020:     if (YYGETCONDITION() < 4) {",
          "1021:      goto yyc_ST_DOUBLE_QUOTES;",
          "1022:     } else {",
          "1023:      goto yyc_ST_HEREDOC;",
          "1024:     }",
          "1025:    }",
          "1026:   }",
          "1027:  } else {",
          "1028:   if (YYGETCONDITION() < 7) {",
          "1029:    if (YYGETCONDITION() < 6) {",
          "1030:     goto yyc_ST_LOOKING_FOR_VARNAME;",
          "1031:    } else {",
          "1032:     goto yyc_ST_VAR_OFFSET;",
          "1033:    }",
          "1034:   } else {",
          "1035:    if (YYGETCONDITION() < 8) {",
          "1036:     goto yyc_INITIAL;",
          "1037:    } else {",
          "1038:     if (YYGETCONDITION() < 9) {",
          "1039:      goto yyc_ST_END_HEREDOC;",
          "1040:     } else {",
          "1041:      goto yyc_ST_NOWDOC;",
          "1042:     }",
          "1043:    }",
          "1044:   }",
          "1045:  }",
          "1047: yyc_INITIAL:",
          "1048:  {",
          "1049:   static const unsigned char yybm[] = {",
          "1050:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1051:      0, 128, 128,   0,   0, 128,   0,   0,",
          "1052:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1053:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1054:    128,   0,   0,   0,   0,   0,   0,   0,",
          "1055:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1056:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1057:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1058:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1059:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1060:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1061:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1062:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1063:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1064:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1065:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1066:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1067:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1068:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1069:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1070:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1071:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1072:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1073:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1074:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1075:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1076:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1077:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1078:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1079:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1080:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1081:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1082:   };",
          "1084:   YYDEBUG(0, *YYCURSOR);",
          "1085:   YYFILL(8);",
          "1086:   yych = *YYCURSOR;",
          "1087:   if (yych != '<') goto yy4;",
          "1088:   YYDEBUG(2, *YYCURSOR);",
          "1089:   yyaccept = 0;",
          "1090:   yych = *(YYMARKER = ++YYCURSOR);",
          "1091:   if (yych <= '?') {",
          "1092:    if (yych == '%') goto yy7;",
          "1093:    if (yych >= '?') goto yy5;",
          "1094:   } else {",
          "1095:    if (yych <= 'S') {",
          "1096:     if (yych >= 'S') goto yy9;",
          "1097:    } else {",
          "1098:     if (yych == 's') goto yy9;",
          "1099:    }",
          "1100:   }",
          "1101: yy3:",
          "1102:   YYDEBUG(3, *YYCURSOR);",
          "1103:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1104: #line 1803 \"Zend/zend_language_scanner.l\"",
          "1105:   {",
          "1106:  if (YYCURSOR > YYLIMIT) {",
          "1107:   return 0;",
          "1108:  }",
          "1110: inline_char_handler:",
          "1112:  while (1) {",
          "1113:   YYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);",
          "1115:   YYCURSOR = ptr ? ptr + 1 : YYLIMIT;",
          "1117:   if (YYCURSOR < YYLIMIT) {",
          "1118:    switch (*YYCURSOR) {",
          "1119:     case '?':",
          "1121:       break;",
          "1122:      }",
          "1123:      continue;",
          "1124:     case '%':",
          "1125:      if (CG(asp_tags)) {",
          "1126:       break;",
          "1127:      }",
          "1128:      continue;",
          "1129:     case 's':",
          "1130:     case 'S':",
          "1133:      YYCURSOR--;",
          "1134:      yymore();",
          "1135:     default:",
          "1136:      continue;",
          "1137:    }",
          "1139:    YYCURSOR--;",
          "1140:   }",
          "1142:   break;",
          "1143:  }",
          "1145: inline_html:",
          "1146:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1148:  if (SCNG(output_filter)) {",
          "1149:   int readsize;",
          "1150:   size_t sz = 0;",
          "1151:   readsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);",
          "1152:   zendlval->value.str.len = sz;",
          "1153:   if (readsize < yyleng) {",
          "1154:    yyless(readsize);",
          "1155:   }",
          "1156:  } else {",
          "1157:    zendlval->value.str.val = (char *) estrndup(yytext, yyleng);",
          "1158:    zendlval->value.str.len = yyleng;",
          "1159:  }",
          "1160:  zendlval->type = IS_STRING;",
          "1161:  HANDLE_NEWLINES(yytext, yyleng);",
          "1162:  return T_INLINE_HTML;",
          "1163: }",
          "1164: #line 1165 \"Zend/zend_language_scanner.c\"",
          "1165: yy4:",
          "1166:   YYDEBUG(4, *YYCURSOR);",
          "1167:   yych = *++YYCURSOR;",
          "1168:   goto yy3;",
          "1169: yy5:",
          "1170:   YYDEBUG(5, *YYCURSOR);",
          "1171:   yyaccept = 1;",
          "1172:   yych = *(YYMARKER = ++YYCURSOR);",
          "1173:   if (yych <= 'O') {",
          "1174:    if (yych == '=') goto yy45;",
          "1175:   } else {",
          "1176:    if (yych <= 'P') goto yy47;",
          "1177:    if (yych == 'p') goto yy47;",
          "1178:   }",
          "1179: yy6:",
          "1180:   YYDEBUG(6, *YYCURSOR);",
          "1181:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1182: #line 1791 \"Zend/zend_language_scanner.l\"",
          "1183:   {",
          "1184:  if (CG(short_tags)) {",
          "1186:   zendlval->value.str.len = yyleng;",
          "1187:   zendlval->type = IS_STRING;",
          "1188:   BEGIN(ST_IN_SCRIPTING);",
          "1189:   return T_OPEN_TAG;",
          "1190:  } else {",
          "1191:   goto inline_char_handler;",
          "1192:  }",
          "1193: }",
          "1194: #line 1195 \"Zend/zend_language_scanner.c\"",
          "1195: yy7:",
          "1196:   YYDEBUG(7, *YYCURSOR);",
          "1197:   ++YYCURSOR;",
          "1198:   if ((yych = *YYCURSOR) == '=') goto yy43;",
          "1199:   YYDEBUG(8, *YYCURSOR);",
          "1200:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1201: #line 1768 \"Zend/zend_language_scanner.l\"",
          "1202:   {",
          "1203:  if (CG(asp_tags)) {",
          "1205:   zendlval->value.str.len = yyleng;",
          "1206:   zendlval->type = IS_STRING;",
          "1207:   BEGIN(ST_IN_SCRIPTING);",
          "1208:   return T_OPEN_TAG;",
          "1209:  } else {",
          "1210:   goto inline_char_handler;",
          "1211:  }",
          "1212: }",
          "1213: #line 1214 \"Zend/zend_language_scanner.c\"",
          "1214: yy9:",
          "1215:   YYDEBUG(9, *YYCURSOR);",
          "1216:   yych = *++YYCURSOR;",
          "1217:   if (yych == 'C') goto yy11;",
          "1218:   if (yych == 'c') goto yy11;",
          "1219: yy10:",
          "1220:   YYDEBUG(10, *YYCURSOR);",
          "1221:   YYCURSOR = YYMARKER;",
          "1222:   if (yyaccept <= 0) {",
          "1223:    goto yy3;",
          "1224:   } else {",
          "1225:    goto yy6;",
          "1226:   }",
          "1227: yy11:",
          "1228:   YYDEBUG(11, *YYCURSOR);",
          "1229:   yych = *++YYCURSOR;",
          "1230:   if (yych == 'R') goto yy12;",
          "1231:   if (yych != 'r') goto yy10;",
          "1232: yy12:",
          "1233:   YYDEBUG(12, *YYCURSOR);",
          "1234:   yych = *++YYCURSOR;",
          "1235:   if (yych == 'I') goto yy13;",
          "1236:   if (yych != 'i') goto yy10;",
          "1237: yy13:",
          "1238:   YYDEBUG(13, *YYCURSOR);",
          "1239:   yych = *++YYCURSOR;",
          "1240:   if (yych == 'P') goto yy14;",
          "1241:   if (yych != 'p') goto yy10;",
          "1242: yy14:",
          "1243:   YYDEBUG(14, *YYCURSOR);",
          "1244:   yych = *++YYCURSOR;",
          "1245:   if (yych == 'T') goto yy15;",
          "1246:   if (yych != 't') goto yy10;",
          "1247: yy15:",
          "1248:   YYDEBUG(15, *YYCURSOR);",
          "1249:   yych = *++YYCURSOR;",
          "1250:   if (yych == 'L') goto yy10;",
          "1251:   if (yych == 'l') goto yy10;",
          "1252:   goto yy17;",
          "1253: yy16:",
          "1254:   YYDEBUG(16, *YYCURSOR);",
          "1255:   ++YYCURSOR;",
          "1256:   YYFILL(8);",
          "1257:   yych = *YYCURSOR;",
          "1258: yy17:",
          "1259:   YYDEBUG(17, *YYCURSOR);",
          "1260:   if (yybm[0+yych] & 128) {",
          "1261:    goto yy16;",
          "1262:   }",
          "1263:   if (yych == 'L') goto yy18;",
          "1264:   if (yych != 'l') goto yy10;",
          "1265: yy18:",
          "1266:   YYDEBUG(18, *YYCURSOR);",
          "1267:   yych = *++YYCURSOR;",
          "1268:   if (yych == 'A') goto yy19;",
          "1269:   if (yych != 'a') goto yy10;",
          "1270: yy19:",
          "1271:   YYDEBUG(19, *YYCURSOR);",
          "1272:   yych = *++YYCURSOR;",
          "1273:   if (yych == 'N') goto yy20;",
          "1274:   if (yych != 'n') goto yy10;",
          "1275: yy20:",
          "1276:   YYDEBUG(20, *YYCURSOR);",
          "1277:   yych = *++YYCURSOR;",
          "1278:   if (yych == 'G') goto yy21;",
          "1279:   if (yych != 'g') goto yy10;",
          "1280: yy21:",
          "1281:   YYDEBUG(21, *YYCURSOR);",
          "1282:   yych = *++YYCURSOR;",
          "1283:   if (yych == 'U') goto yy22;",
          "1284:   if (yych != 'u') goto yy10;",
          "1285: yy22:",
          "1286:   YYDEBUG(22, *YYCURSOR);",
          "1287:   yych = *++YYCURSOR;",
          "1288:   if (yych == 'A') goto yy23;",
          "1289:   if (yych != 'a') goto yy10;",
          "1290: yy23:",
          "1291:   YYDEBUG(23, *YYCURSOR);",
          "1292:   yych = *++YYCURSOR;",
          "1293:   if (yych == 'G') goto yy24;",
          "1294:   if (yych != 'g') goto yy10;",
          "1295: yy24:",
          "1296:   YYDEBUG(24, *YYCURSOR);",
          "1297:   yych = *++YYCURSOR;",
          "1298:   if (yych == 'E') goto yy25;",
          "1299:   if (yych != 'e') goto yy10;",
          "1300: yy25:",
          "1301:   YYDEBUG(25, *YYCURSOR);",
          "1302:   ++YYCURSOR;",
          "1303:   YYFILL(1);",
          "1304:   yych = *YYCURSOR;",
          "1305:   YYDEBUG(26, *YYCURSOR);",
          "1306:   if (yych <= '\\r') {",
          "1307:    if (yych <= 0x08) goto yy10;",
          "1308:    if (yych <= '\\n') goto yy25;",
          "1309:    if (yych <= '\\f') goto yy10;",
          "1310:    goto yy25;",
          "1311:   } else {",
          "1312:    if (yych <= ' ') {",
          "1313:     if (yych <= 0x1F) goto yy10;",
          "1314:     goto yy25;",
          "1315:    } else {",
          "1316:     if (yych != '=') goto yy10;",
          "1317:    }",
          "1318:   }",
          "1319: yy27:",
          "1320:   YYDEBUG(27, *YYCURSOR);",
          "1321:   ++YYCURSOR;",
          "1322:   YYFILL(5);",
          "1323:   yych = *YYCURSOR;",
          "1324:   YYDEBUG(28, *YYCURSOR);",
          "1325:   if (yych <= '!') {",
          "1326:    if (yych <= '\\f') {",
          "1327:     if (yych <= 0x08) goto yy10;",
          "1328:     if (yych <= '\\n') goto yy27;",
          "1329:     goto yy10;",
          "1330:    } else {",
          "1331:     if (yych <= '\\r') goto yy27;",
          "1332:     if (yych == ' ') goto yy27;",
          "1333:     goto yy10;",
          "1334:    }",
          "1335:   } else {",
          "1336:    if (yych <= 'O') {",
          "1337:     if (yych <= '\"') goto yy30;",
          "1338:     if (yych == '\\'') goto yy31;",
          "1339:     goto yy10;",
          "1340:    } else {",
          "1341:     if (yych <= 'P') goto yy29;",
          "1342:     if (yych != 'p') goto yy10;",
          "1343:    }",
          "1344:   }",
          "1345: yy29:",
          "1346:   YYDEBUG(29, *YYCURSOR);",
          "1347:   yych = *++YYCURSOR;",
          "1348:   if (yych == 'H') goto yy42;",
          "1349:   if (yych == 'h') goto yy42;",
          "1350:   goto yy10;",
          "1351: yy30:",
          "1352:   YYDEBUG(30, *YYCURSOR);",
          "1353:   yych = *++YYCURSOR;",
          "1354:   if (yych == 'P') goto yy39;",
          "1355:   if (yych == 'p') goto yy39;",
          "1356:   goto yy10;",
          "1357: yy31:",
          "1358:   YYDEBUG(31, *YYCURSOR);",
          "1359:   yych = *++YYCURSOR;",
          "1360:   if (yych == 'P') goto yy32;",
          "1361:   if (yych != 'p') goto yy10;",
          "1362: yy32:",
          "1363:   YYDEBUG(32, *YYCURSOR);",
          "1364:   yych = *++YYCURSOR;",
          "1365:   if (yych == 'H') goto yy33;",
          "1366:   if (yych != 'h') goto yy10;",
          "1367: yy33:",
          "1368:   YYDEBUG(33, *YYCURSOR);",
          "1369:   yych = *++YYCURSOR;",
          "1370:   if (yych == 'P') goto yy34;",
          "1371:   if (yych != 'p') goto yy10;",
          "1372: yy34:",
          "1373:   YYDEBUG(34, *YYCURSOR);",
          "1374:   yych = *++YYCURSOR;",
          "1375:   if (yych != '\\'') goto yy10;",
          "1376: yy35:",
          "1377:   YYDEBUG(35, *YYCURSOR);",
          "1378:   ++YYCURSOR;",
          "1379:   YYFILL(1);",
          "1380:   yych = *YYCURSOR;",
          "1381:   YYDEBUG(36, *YYCURSOR);",
          "1382:   if (yych <= '\\r') {",
          "1383:    if (yych <= 0x08) goto yy10;",
          "1384:    if (yych <= '\\n') goto yy35;",
          "1385:    if (yych <= '\\f') goto yy10;",
          "1386:    goto yy35;",
          "1387:   } else {",
          "1388:    if (yych <= ' ') {",
          "1389:     if (yych <= 0x1F) goto yy10;",
          "1390:     goto yy35;",
          "1391:    } else {",
          "1392:     if (yych != '>') goto yy10;",
          "1393:    }",
          "1394:   }",
          "1395:   YYDEBUG(37, *YYCURSOR);",
          "1396:   ++YYCURSOR;",
          "1397:   YYDEBUG(38, *YYCURSOR);",
          "1398:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1399: #line 1728 \"Zend/zend_language_scanner.l\"",
          "1400:   {",
          "1401:  YYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));",
          "1403:  if (bracket != SCNG(yy_text)) {",
          "1405:   YYCURSOR = bracket;",
          "1406:   goto inline_html;",
          "1407:  }",
          "1409:  HANDLE_NEWLINES(yytext, yyleng);",
          "1411:  zendlval->value.str.len = yyleng;",
          "1412:  zendlval->type = IS_STRING;",
          "1413:  BEGIN(ST_IN_SCRIPTING);",
          "1414:  return T_OPEN_TAG;",
          "1415: }",
          "1416: #line 1417 \"Zend/zend_language_scanner.c\"",
          "1417: yy39:",
          "1418:   YYDEBUG(39, *YYCURSOR);",
          "1419:   yych = *++YYCURSOR;",
          "1420:   if (yych == 'H') goto yy40;",
          "1421:   if (yych != 'h') goto yy10;",
          "1422: yy40:",
          "1423:   YYDEBUG(40, *YYCURSOR);",
          "1424:   yych = *++YYCURSOR;",
          "1425:   if (yych == 'P') goto yy41;",
          "1426:   if (yych != 'p') goto yy10;",
          "1427: yy41:",
          "1428:   YYDEBUG(41, *YYCURSOR);",
          "1429:   yych = *++YYCURSOR;",
          "1430:   if (yych == '\"') goto yy35;",
          "1431:   goto yy10;",
          "1432: yy42:",
          "1433:   YYDEBUG(42, *YYCURSOR);",
          "1434:   yych = *++YYCURSOR;",
          "1435:   if (yych == 'P') goto yy35;",
          "1436:   if (yych == 'p') goto yy35;",
          "1437:   goto yy10;",
          "1438: yy43:",
          "1439:   YYDEBUG(43, *YYCURSOR);",
          "1440:   ++YYCURSOR;",
          "1441:   YYDEBUG(44, *YYCURSOR);",
          "1442:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1443: #line 1746 \"Zend/zend_language_scanner.l\"",
          "1444:   {",
          "1445:  if (CG(asp_tags)) {",
          "1447:   zendlval->value.str.len = yyleng;",
          "1448:   zendlval->type = IS_STRING;",
          "1449:   BEGIN(ST_IN_SCRIPTING);",
          "1450:   return T_OPEN_TAG_WITH_ECHO;",
          "1451:  } else {",
          "1452:   goto inline_char_handler;",
          "1453:  }",
          "1454: }",
          "1455: #line 1456 \"Zend/zend_language_scanner.c\"",
          "1456: yy45:",
          "1457:   YYDEBUG(45, *YYCURSOR);",
          "1458:   ++YYCURSOR;",
          "1459:   YYDEBUG(46, *YYCURSOR);",
          "1460:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1461: #line 1759 \"Zend/zend_language_scanner.l\"",
          "1462:   {",
          "1464:  zendlval->value.str.len = yyleng;",
          "1465:  zendlval->type = IS_STRING;",
          "1466:  BEGIN(ST_IN_SCRIPTING);",
          "1467:  return T_OPEN_TAG_WITH_ECHO;",
          "1468: }",
          "1469: #line 1470 \"Zend/zend_language_scanner.c\"",
          "1470: yy47:",
          "1471:   YYDEBUG(47, *YYCURSOR);",
          "1472:   yych = *++YYCURSOR;",
          "1473:   if (yych == 'H') goto yy48;",
          "1474:   if (yych != 'h') goto yy10;",
          "1475: yy48:",
          "1476:   YYDEBUG(48, *YYCURSOR);",
          "1477:   yych = *++YYCURSOR;",
          "1478:   if (yych == 'P') goto yy49;",
          "1479:   if (yych != 'p') goto yy10;",
          "1480: yy49:",
          "1481:   YYDEBUG(49, *YYCURSOR);",
          "1482:   yych = *++YYCURSOR;",
          "1483:   if (yych <= '\\f') {",
          "1484:    if (yych <= 0x08) goto yy10;",
          "1485:    if (yych >= '\\v') goto yy10;",
          "1486:   } else {",
          "1487:    if (yych <= '\\r') goto yy52;",
          "1488:    if (yych != ' ') goto yy10;",
          "1489:   }",
          "1490: yy50:",
          "1491:   YYDEBUG(50, *YYCURSOR);",
          "1492:   ++YYCURSOR;",
          "1493: yy51:",
          "1494:   YYDEBUG(51, *YYCURSOR);",
          "1495:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1496: #line 1781 \"Zend/zend_language_scanner.l\"",
          "1497:   {",
          "1499:  zendlval->value.str.len = yyleng;",
          "1500:  zendlval->type = IS_STRING;",
          "1501:  HANDLE_NEWLINE(yytext[yyleng-1]);",
          "1502:  BEGIN(ST_IN_SCRIPTING);",
          "1503:  return T_OPEN_TAG;",
          "1504: }",
          "1505: #line 1506 \"Zend/zend_language_scanner.c\"",
          "1506: yy52:",
          "1507:   YYDEBUG(52, *YYCURSOR);",
          "1508:   ++YYCURSOR;",
          "1509:   if ((yych = *YYCURSOR) == '\\n') goto yy50;",
          "1510:   goto yy51;",
          "1511:  }",
          "1513: yyc_ST_BACKQUOTE:",
          "1514:  {",
          "1515:   static const unsigned char yybm[] = {",
          "1516:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1517:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1518:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1519:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1520:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1521:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1522:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1523:    128, 128,   0,   0,   0,   0,   0,   0,",
          "1524:      0, 128, 128, 128, 128, 128, 128, 128,",
          "1525:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1526:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1527:    128, 128, 128,   0,   0,   0,   0, 128,",
          "1528:      0, 128, 128, 128, 128, 128, 128, 128,",
          "1529:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1530:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1531:    128, 128, 128,   0,   0,   0,   0, 128,",
          "1532:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1533:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1534:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1535:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1536:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1537:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1538:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1539:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1540:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1541:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1542:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1543:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1544:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1545:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1546:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1547:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1548:   };",
          "1549:   YYDEBUG(53, *YYCURSOR);",
          "1550:   YYFILL(2);",
          "1551:   yych = *YYCURSOR;",
          "1552:   if (yych <= '_') {",
          "1553:    if (yych != '$') goto yy60;",
          "1554:   } else {",
          "1555:    if (yych <= '`') goto yy58;",
          "1556:    if (yych == '{') goto yy57;",
          "1557:    goto yy60;",
          "1558:   }",
          "1559:   YYDEBUG(55, *YYCURSOR);",
          "1560:   ++YYCURSOR;",
          "1561:   if ((yych = *YYCURSOR) <= '_') {",
          "1562:    if (yych <= '@') goto yy56;",
          "1563:    if (yych <= 'Z') goto yy63;",
          "1564:    if (yych >= '_') goto yy63;",
          "1565:   } else {",
          "1566:    if (yych <= 'z') {",
          "1567:     if (yych >= 'a') goto yy63;",
          "1568:    } else {",
          "1569:     if (yych <= '{') goto yy66;",
          "1570:     if (yych >= 0x7F) goto yy63;",
          "1571:    }",
          "1572:   }",
          "1573: yy56:",
          "1574:   YYDEBUG(56, *YYCURSOR);",
          "1575:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1576: #line 2254 \"Zend/zend_language_scanner.l\"",
          "1577:   {",
          "1578:  if (YYCURSOR > YYLIMIT) {",
          "1579:   return 0;",
          "1580:  }",
          "1581:  if (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {",
          "1582:   YYCURSOR++;",
          "1583:  }",
          "1585:  while (YYCURSOR < YYLIMIT) {",
          "1586:   switch (*YYCURSOR++) {",
          "1587:    case '`':",
          "1588:     break;",
          "1589:    case '$':",
          "1590:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "1591:      break;",
          "1592:     }",
          "1593:     continue;",
          "1594:    case '{':",
          "1595:     if (*YYCURSOR == '$') {",
          "1596:      break;",
          "1597:     }",
          "1598:     continue;",
          "1599:    case '\\\\':",
          "1600:     if (YYCURSOR < YYLIMIT) {",
          "1601:      YYCURSOR++;",
          "1602:     }",
          "1604:    default:",
          "1605:     continue;",
          "1606:   }",
          "1608:   YYCURSOR--;",
          "1609:   break;",
          "1610:  }",
          "1612:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1614:  zend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);",
          "1615:  return T_ENCAPSED_AND_WHITESPACE;",
          "1616: }",
          "1617: #line 1618 \"Zend/zend_language_scanner.c\"",
          "1618: yy57:",
          "1619:   YYDEBUG(57, *YYCURSOR);",
          "1620:   yych = *++YYCURSOR;",
          "1621:   if (yych == '$') goto yy61;",
          "1622:   goto yy56;",
          "1623: yy58:",
          "1624:   YYDEBUG(58, *YYCURSOR);",
          "1625:   ++YYCURSOR;",
          "1626:   YYDEBUG(59, *YYCURSOR);",
          "1627:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1628: #line 2198 \"Zend/zend_language_scanner.l\"",
          "1629:   {",
          "1630:  BEGIN(ST_IN_SCRIPTING);",
          "1631:  return '`';",
          "1632: }",
          "1633: #line 1634 \"Zend/zend_language_scanner.c\"",
          "1634: yy60:",
          "1635:   YYDEBUG(60, *YYCURSOR);",
          "1636:   yych = *++YYCURSOR;",
          "1637:   goto yy56;",
          "1638: yy61:",
          "1639:   YYDEBUG(61, *YYCURSOR);",
          "1640:   ++YYCURSOR;",
          "1641:   YYDEBUG(62, *YYCURSOR);",
          "1642:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1643: #line 2185 \"Zend/zend_language_scanner.l\"",
          "1644:   {",
          "1645:  zendlval->value.lval = (long) '{';",
          "1646:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1647:  yyless(1);",
          "1648:  return T_CURLY_OPEN;",
          "1649: }",
          "1650: #line 1651 \"Zend/zend_language_scanner.c\"",
          "1651: yy63:",
          "1652:   YYDEBUG(63, *YYCURSOR);",
          "1653:   yyaccept = 0;",
          "1654:   YYMARKER = ++YYCURSOR;",
          "1655:   YYFILL(3);",
          "1656:   yych = *YYCURSOR;",
          "1657:   YYDEBUG(64, *YYCURSOR);",
          "1658:   if (yybm[0+yych] & 128) {",
          "1659:    goto yy63;",
          "1660:   }",
          "1661:   if (yych == '-') goto yy68;",
          "1662:   if (yych == '[') goto yy70;",
          "1663: yy65:",
          "1664:   YYDEBUG(65, *YYCURSOR);",
          "1665:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1666: #line 1885 \"Zend/zend_language_scanner.l\"",
          "1667:   {",
          "1668:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1669:  zendlval->type = IS_STRING;",
          "1670:  return T_VARIABLE;",
          "1671: }",
          "1672: #line 1673 \"Zend/zend_language_scanner.c\"",
          "1673: yy66:",
          "1674:   YYDEBUG(66, *YYCURSOR);",
          "1675:   ++YYCURSOR;",
          "1676:   YYDEBUG(67, *YYCURSOR);",
          "1677:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1678: #line 1461 \"Zend/zend_language_scanner.l\"",
          "1679:   {",
          "1680:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1681:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1682: }",
          "1683: #line 1684 \"Zend/zend_language_scanner.c\"",
          "1684: yy68:",
          "1685:   YYDEBUG(68, *YYCURSOR);",
          "1686:   yych = *++YYCURSOR;",
          "1687:   if (yych == '>') goto yy72;",
          "1688: yy69:",
          "1689:   YYDEBUG(69, *YYCURSOR);",
          "1690:   YYCURSOR = YYMARKER;",
          "1691:   goto yy65;",
          "1692: yy70:",
          "1693:   YYDEBUG(70, *YYCURSOR);",
          "1694:   ++YYCURSOR;",
          "1695:   YYDEBUG(71, *YYCURSOR);",
          "1696:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1697: #line 1877 \"Zend/zend_language_scanner.l\"",
          "1698:   {",
          "1699:  yyless(yyleng - 1);",
          "1700:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "1701:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1702:  zendlval->type = IS_STRING;",
          "1703:  return T_VARIABLE;",
          "1704: }",
          "1705: #line 1706 \"Zend/zend_language_scanner.c\"",
          "1706: yy72:",
          "1707:   YYDEBUG(72, *YYCURSOR);",
          "1708:   yych = *++YYCURSOR;",
          "1709:   if (yych <= '_') {",
          "1710:    if (yych <= '@') goto yy69;",
          "1711:    if (yych <= 'Z') goto yy73;",
          "1712:    if (yych <= '^') goto yy69;",
          "1713:   } else {",
          "1714:    if (yych <= '`') goto yy69;",
          "1715:    if (yych <= 'z') goto yy73;",
          "1716:    if (yych <= '~') goto yy69;",
          "1717:   }",
          "1718: yy73:",
          "1719:   YYDEBUG(73, *YYCURSOR);",
          "1720:   ++YYCURSOR;",
          "1721:   YYDEBUG(74, *YYCURSOR);",
          "1722:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1723: #line 1867 \"Zend/zend_language_scanner.l\"",
          "1724:   {",
          "1725:  yyless(yyleng - 3);",
          "1726:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "1727:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1728:  zendlval->type = IS_STRING;",
          "1729:  return T_VARIABLE;",
          "1730: }",
          "1731: #line 1732 \"Zend/zend_language_scanner.c\"",
          "1732:  }",
          "1734: yyc_ST_DOUBLE_QUOTES:",
          "1735:  {",
          "1736:   static const unsigned char yybm[] = {",
          "1737:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1738:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1739:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1740:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1741:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1742:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1743:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1744:    128, 128,   0,   0,   0,   0,   0,   0,",
          "1745:      0, 128, 128, 128, 128, 128, 128, 128,",
          "1746:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1747:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1748:    128, 128, 128,   0,   0,   0,   0, 128,",
          "1749:      0, 128, 128, 128, 128, 128, 128, 128,",
          "1750:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1751:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1752:    128, 128, 128,   0,   0,   0,   0, 128,",
          "1753:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1754:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1755:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1756:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1757:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1758:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1759:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1760:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1761:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1762:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1763:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1764:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1765:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1766:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1767:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1768:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1769:   };",
          "1770:   YYDEBUG(75, *YYCURSOR);",
          "1771:   YYFILL(2);",
          "1772:   yych = *YYCURSOR;",
          "1773:   if (yych <= '#') {",
          "1774:    if (yych == '\"') goto yy80;",
          "1775:    goto yy82;",
          "1776:   } else {",
          "1777:    if (yych <= '$') goto yy77;",
          "1778:    if (yych == '{') goto yy79;",
          "1779:    goto yy82;",
          "1780:   }",
          "1781: yy77:",
          "1782:   YYDEBUG(77, *YYCURSOR);",
          "1783:   ++YYCURSOR;",
          "1784:   if ((yych = *YYCURSOR) <= '_') {",
          "1785:    if (yych <= '@') goto yy78;",
          "1786:    if (yych <= 'Z') goto yy85;",
          "1787:    if (yych >= '_') goto yy85;",
          "1788:   } else {",
          "1789:    if (yych <= 'z') {",
          "1790:     if (yych >= 'a') goto yy85;",
          "1791:    } else {",
          "1792:     if (yych <= '{') goto yy88;",
          "1793:     if (yych >= 0x7F) goto yy85;",
          "1794:    }",
          "1795:   }",
          "1796: yy78:",
          "1797:   YYDEBUG(78, *YYCURSOR);",
          "1798:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1799: #line 2204 \"Zend/zend_language_scanner.l\"",
          "1800:   {",
          "1801:  if (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {",
          "1802:   YYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;",
          "1803:   SET_DOUBLE_QUOTES_SCANNED_LENGTH(0);",
          "1805:   goto double_quotes_scan_done;",
          "1806:  }",
          "1808:  if (YYCURSOR > YYLIMIT) {",
          "1809:   return 0;",
          "1810:  }",
          "1811:  if (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {",
          "1812:   YYCURSOR++;",
          "1813:  }",
          "1815:  while (YYCURSOR < YYLIMIT) {",
          "1816:   switch (*YYCURSOR++) {",
          "1817:    case '\"':",
          "1818:     break;",
          "1819:    case '$':",
          "1820:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "1821:      break;",
          "1822:     }",
          "1823:     continue;",
          "1824:    case '{':",
          "1825:     if (*YYCURSOR == '$') {",
          "1826:      break;",
          "1827:     }",
          "1828:     continue;",
          "1829:    case '\\\\':",
          "1830:     if (YYCURSOR < YYLIMIT) {",
          "1831:      YYCURSOR++;",
          "1832:     }",
          "1834:    default:",
          "1835:     continue;",
          "1836:   }",
          "1838:   YYCURSOR--;",
          "1839:   break;",
          "1840:  }",
          "1842: double_quotes_scan_done:",
          "1843:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1845:  zend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);",
          "1846:  return T_ENCAPSED_AND_WHITESPACE;",
          "1847: }",
          "1848: #line 1849 \"Zend/zend_language_scanner.c\"",
          "1849: yy79:",
          "1850:   YYDEBUG(79, *YYCURSOR);",
          "1851:   yych = *++YYCURSOR;",
          "1852:   if (yych == '$') goto yy83;",
          "1853:   goto yy78;",
          "1854: yy80:",
          "1855:   YYDEBUG(80, *YYCURSOR);",
          "1856:   ++YYCURSOR;",
          "1857:   YYDEBUG(81, *YYCURSOR);",
          "1858:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1859: #line 2193 \"Zend/zend_language_scanner.l\"",
          "1860:   {",
          "1861:  BEGIN(ST_IN_SCRIPTING);",
          "1862:  return '\"';",
          "1863: }",
          "1864: #line 1865 \"Zend/zend_language_scanner.c\"",
          "1865: yy82:",
          "1866:   YYDEBUG(82, *YYCURSOR);",
          "1867:   yych = *++YYCURSOR;",
          "1868:   goto yy78;",
          "1869: yy83:",
          "1870:   YYDEBUG(83, *YYCURSOR);",
          "1871:   ++YYCURSOR;",
          "1872:   YYDEBUG(84, *YYCURSOR);",
          "1873:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1874: #line 2185 \"Zend/zend_language_scanner.l\"",
          "1875:   {",
          "1876:  zendlval->value.lval = (long) '{';",
          "1877:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1878:  yyless(1);",
          "1879:  return T_CURLY_OPEN;",
          "1880: }",
          "1881: #line 1882 \"Zend/zend_language_scanner.c\"",
          "1882: yy85:",
          "1883:   YYDEBUG(85, *YYCURSOR);",
          "1884:   yyaccept = 0;",
          "1885:   YYMARKER = ++YYCURSOR;",
          "1886:   YYFILL(3);",
          "1887:   yych = *YYCURSOR;",
          "1888:   YYDEBUG(86, *YYCURSOR);",
          "1889:   if (yybm[0+yych] & 128) {",
          "1890:    goto yy85;",
          "1891:   }",
          "1892:   if (yych == '-') goto yy90;",
          "1893:   if (yych == '[') goto yy92;",
          "1894: yy87:",
          "1895:   YYDEBUG(87, *YYCURSOR);",
          "1896:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1897: #line 1885 \"Zend/zend_language_scanner.l\"",
          "1898:   {",
          "1899:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1900:  zendlval->type = IS_STRING;",
          "1901:  return T_VARIABLE;",
          "1902: }",
          "1903: #line 1904 \"Zend/zend_language_scanner.c\"",
          "1904: yy88:",
          "1905:   YYDEBUG(88, *YYCURSOR);",
          "1906:   ++YYCURSOR;",
          "1907:   YYDEBUG(89, *YYCURSOR);",
          "1908:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1909: #line 1461 \"Zend/zend_language_scanner.l\"",
          "1910:   {",
          "1911:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1912:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1913: }",
          "1914: #line 1915 \"Zend/zend_language_scanner.c\"",
          "1915: yy90:",
          "1916:   YYDEBUG(90, *YYCURSOR);",
          "1917:   yych = *++YYCURSOR;",
          "1918:   if (yych == '>') goto yy94;",
          "1919: yy91:",
          "1920:   YYDEBUG(91, *YYCURSOR);",
          "1921:   YYCURSOR = YYMARKER;",
          "1922:   goto yy87;",
          "1923: yy92:",
          "1924:   YYDEBUG(92, *YYCURSOR);",
          "1925:   ++YYCURSOR;",
          "1926:   YYDEBUG(93, *YYCURSOR);",
          "1927:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1928: #line 1877 \"Zend/zend_language_scanner.l\"",
          "1929:   {",
          "1930:  yyless(yyleng - 1);",
          "1931:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "1932:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1933:  zendlval->type = IS_STRING;",
          "1934:  return T_VARIABLE;",
          "1935: }",
          "1936: #line 1937 \"Zend/zend_language_scanner.c\"",
          "1937: yy94:",
          "1938:   YYDEBUG(94, *YYCURSOR);",
          "1939:   yych = *++YYCURSOR;",
          "1940:   if (yych <= '_') {",
          "1941:    if (yych <= '@') goto yy91;",
          "1942:    if (yych <= 'Z') goto yy95;",
          "1943:    if (yych <= '^') goto yy91;",
          "1944:   } else {",
          "1945:    if (yych <= '`') goto yy91;",
          "1946:    if (yych <= 'z') goto yy95;",
          "1947:    if (yych <= '~') goto yy91;",
          "1948:   }",
          "1949: yy95:",
          "1950:   YYDEBUG(95, *YYCURSOR);",
          "1951:   ++YYCURSOR;",
          "1952:   YYDEBUG(96, *YYCURSOR);",
          "1953:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1954: #line 1867 \"Zend/zend_language_scanner.l\"",
          "1955:   {",
          "1956:  yyless(yyleng - 3);",
          "1957:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "1958:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1959:  zendlval->type = IS_STRING;",
          "1960:  return T_VARIABLE;",
          "1961: }",
          "1962: #line 1963 \"Zend/zend_language_scanner.c\"",
          "1963:  }",
          "1965: yyc_ST_END_HEREDOC:",
          "1966:  YYDEBUG(97, *YYCURSOR);",
          "1967:  YYFILL(1);",
          "1968:  yych = *YYCURSOR;",
          "1969:  YYDEBUG(99, *YYCURSOR);",
          "1970:  ++YYCURSOR;",
          "1971:  YYDEBUG(100, *YYCURSOR);",
          "1972:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1973: #line 2171 \"Zend/zend_language_scanner.l\"",
          "1974:  {",
          "1975:  zend_heredoc_label *heredoc_label = zend_ptr_stack_pop(&SCNG(heredoc_label_stack));",
          "1977:  YYCURSOR += heredoc_label->length - 1;",
          "1978:  yyleng = heredoc_label->length;",
          "1980:  heredoc_label_dtor(heredoc_label);",
          "1981:  efree(heredoc_label);",
          "1983:  BEGIN(ST_IN_SCRIPTING);",
          "1984:  return T_END_HEREDOC;",
          "1985: }",
          "1986: #line 1987 \"Zend/zend_language_scanner.c\"",
          "1988: yyc_ST_HEREDOC:",
          "1989:  {",
          "1990:   static const unsigned char yybm[] = {",
          "1991:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1992:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1993:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1994:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1995:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1996:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1997:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1998:    128, 128,   0,   0,   0,   0,   0,   0,",
          "1999:      0, 128, 128, 128, 128, 128, 128, 128,",
          "2000:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2001:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2002:    128, 128, 128,   0,   0,   0,   0, 128,",
          "2003:      0, 128, 128, 128, 128, 128, 128, 128,",
          "2004:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2005:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2006:    128, 128, 128,   0,   0,   0,   0, 128,",
          "2007:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2008:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2009:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2010:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2011:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2012:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2013:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2014:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2015:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2016:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2017:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2018:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2019:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2020:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2021:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2022:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2023:   };",
          "2024:   YYDEBUG(101, *YYCURSOR);",
          "2025:   YYFILL(2);",
          "2026:   yych = *YYCURSOR;",
          "2027:   if (yych == '$') goto yy103;",
          "2028:   if (yych == '{') goto yy105;",
          "2029:   goto yy106;",
          "2030: yy103:",
          "2031:   YYDEBUG(103, *YYCURSOR);",
          "2032:   ++YYCURSOR;",
          "2033:   if ((yych = *YYCURSOR) <= '_') {",
          "2034:    if (yych <= '@') goto yy104;",
          "2035:    if (yych <= 'Z') goto yy109;",
          "2036:    if (yych >= '_') goto yy109;",
          "2037:   } else {",
          "2038:    if (yych <= 'z') {",
          "2039:     if (yych >= 'a') goto yy109;",
          "2040:    } else {",
          "2041:     if (yych <= '{') goto yy112;",
          "2042:     if (yych >= 0x7F) goto yy109;",
          "2043:    }",
          "2044:   }",
          "2045: yy104:",
          "2046:   YYDEBUG(104, *YYCURSOR);",
          "2047:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2048: #line 2296 \"Zend/zend_language_scanner.l\"",
          "2049:   {",
          "2050:  int newline = 0;",
          "2052:  zend_heredoc_label *heredoc_label = zend_ptr_stack_top(&SCNG(heredoc_label_stack));",
          "2054:  if (YYCURSOR > YYLIMIT) {",
          "2055:   return 0;",
          "2056:  }",
          "2058:  YYCURSOR--;",
          "2060:  while (YYCURSOR < YYLIMIT) {",
          "2061:   switch (*YYCURSOR++) {",
          "2062:    case '\\r':",
          "2063:     if (*YYCURSOR == '\\n') {",
          "2064:      YYCURSOR++;",
          "2065:     }",
          "2067:    case '\\n':",
          "2069:     if (IS_LABEL_START(*YYCURSOR) && heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, heredoc_label->label, heredoc_label->length)) {",
          "2070:      YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "2072:      if (*end == ';') {",
          "2073:       end++;",
          "2074:      }",
          "2076:      if (*end == '\\n' || *end == '\\r') {",
          "2079:       if (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {",
          "2081:       } else {",
          "2082:        newline = 1;",
          "2083:       }",
          "2086:       BEGIN(ST_END_HEREDOC);",
          "2088:       goto heredoc_scan_done;",
          "2089:      }",
          "2090:     }",
          "2091:     continue;",
          "2092:    case '$':",
          "2093:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "2094:      break;",
          "2095:     }",
          "2096:     continue;",
          "2097:    case '{':",
          "2098:     if (*YYCURSOR == '$') {",
          "2099:      break;",
          "2100:     }",
          "2101:     continue;",
          "2102:    case '\\\\':",
          "2103:     if (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {",
          "2104:      YYCURSOR++;",
          "2105:     }",
          "2107:    default:",
          "2108:     continue;",
          "2109:   }",
          "2111:   YYCURSOR--;",
          "2112:   break;",
          "2113:  }",
          "2115: heredoc_scan_done:",
          "2116:  yyleng = YYCURSOR - SCNG(yy_text);",
          "2118:  zend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);",
          "2119:  return T_ENCAPSED_AND_WHITESPACE;",
          "2120: }",
          "2121: #line 2122 \"Zend/zend_language_scanner.c\"",
          "2122: yy105:",
          "2123:   YYDEBUG(105, *YYCURSOR);",
          "2124:   yych = *++YYCURSOR;",
          "2125:   if (yych == '$') goto yy107;",
          "2126:   goto yy104;",
          "2127: yy106:",
          "2128:   YYDEBUG(106, *YYCURSOR);",
          "2129:   yych = *++YYCURSOR;",
          "2130:   goto yy104;",
          "2131: yy107:",
          "2132:   YYDEBUG(107, *YYCURSOR);",
          "2133:   ++YYCURSOR;",
          "2134:   YYDEBUG(108, *YYCURSOR);",
          "2135:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2136: #line 2185 \"Zend/zend_language_scanner.l\"",
          "2137:   {",
          "2138:  zendlval->value.lval = (long) '{';",
          "2139:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2140:  yyless(1);",
          "2141:  return T_CURLY_OPEN;",
          "2142: }",
          "2143: #line 2144 \"Zend/zend_language_scanner.c\"",
          "2144: yy109:",
          "2145:   YYDEBUG(109, *YYCURSOR);",
          "2146:   yyaccept = 0;",
          "2147:   YYMARKER = ++YYCURSOR;",
          "2148:   YYFILL(3);",
          "2149:   yych = *YYCURSOR;",
          "2150:   YYDEBUG(110, *YYCURSOR);",
          "2151:   if (yybm[0+yych] & 128) {",
          "2152:    goto yy109;",
          "2153:   }",
          "2154:   if (yych == '-') goto yy114;",
          "2155:   if (yych == '[') goto yy116;",
          "2156: yy111:",
          "2157:   YYDEBUG(111, *YYCURSOR);",
          "2158:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2159: #line 1885 \"Zend/zend_language_scanner.l\"",
          "2160:   {",
          "2161:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2162:  zendlval->type = IS_STRING;",
          "2163:  return T_VARIABLE;",
          "2164: }",
          "2165: #line 2166 \"Zend/zend_language_scanner.c\"",
          "2166: yy112:",
          "2167:   YYDEBUG(112, *YYCURSOR);",
          "2168:   ++YYCURSOR;",
          "2169:   YYDEBUG(113, *YYCURSOR);",
          "2170:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2171: #line 1461 \"Zend/zend_language_scanner.l\"",
          "2172:   {",
          "2173:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "2174:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "2175: }",
          "2176: #line 2177 \"Zend/zend_language_scanner.c\"",
          "2177: yy114:",
          "2178:   YYDEBUG(114, *YYCURSOR);",
          "2179:   yych = *++YYCURSOR;",
          "2180:   if (yych == '>') goto yy118;",
          "2181: yy115:",
          "2182:   YYDEBUG(115, *YYCURSOR);",
          "2183:   YYCURSOR = YYMARKER;",
          "2184:   goto yy111;",
          "2185: yy116:",
          "2186:   YYDEBUG(116, *YYCURSOR);",
          "2187:   ++YYCURSOR;",
          "2188:   YYDEBUG(117, *YYCURSOR);",
          "2189:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2190: #line 1877 \"Zend/zend_language_scanner.l\"",
          "2191:   {",
          "2192:  yyless(yyleng - 1);",
          "2193:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "2194:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2195:  zendlval->type = IS_STRING;",
          "2196:  return T_VARIABLE;",
          "2197: }",
          "2198: #line 2199 \"Zend/zend_language_scanner.c\"",
          "2199: yy118:",
          "2200:   YYDEBUG(118, *YYCURSOR);",
          "2201:   yych = *++YYCURSOR;",
          "2202:   if (yych <= '_') {",
          "2203:    if (yych <= '@') goto yy115;",
          "2204:    if (yych <= 'Z') goto yy119;",
          "2205:    if (yych <= '^') goto yy115;",
          "2206:   } else {",
          "2207:    if (yych <= '`') goto yy115;",
          "2208:    if (yych <= 'z') goto yy119;",
          "2209:    if (yych <= '~') goto yy115;",
          "2210:   }",
          "2211: yy119:",
          "2212:   YYDEBUG(119, *YYCURSOR);",
          "2213:   ++YYCURSOR;",
          "2214:   YYDEBUG(120, *YYCURSOR);",
          "2215:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2216: #line 1867 \"Zend/zend_language_scanner.l\"",
          "2217:   {",
          "2218:  yyless(yyleng - 3);",
          "2219:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "2220:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2221:  zendlval->type = IS_STRING;",
          "2222:  return T_VARIABLE;",
          "2223: }",
          "2224: #line 2225 \"Zend/zend_language_scanner.c\"",
          "2225:  }",
          "2227: yyc_ST_IN_SCRIPTING:",
          "2228:  {",
          "2229:   static const unsigned char yybm[] = {",
          "2230:      0,   0,   0,   0,   0,   0,   0,   0,",
          "2231:      0, 192,  64,   0,   0,  64,   0,   0,",
          "2232:      0,   0,   0,   0,   0,   0,   0,   0,",
          "2233:      0,   0,   0,   0,   0,   0,   0,   0,",
          "2234:    192,   0,   0,   0,   0,   0,   0,   0,",
          "2235:      0,   0,   0,   0,   0,   0,   0,   0,",
          "2236:     60,  60,  44,  44,  44,  44,  44,  44,",
          "2237:     44,  44,   0,   0,   0,   0,   0,   0,",
          "2238:      0,  36,  36,  36,  36,  36,  36,   4,",
          "2239:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2240:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2241:      4,   4,   4,   0,   0,   0,   0,   4,",
          "2242:      0,  36,  36,  36,  36,  36,  36,   4,",
          "2243:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2244:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2245:      4,   4,   4,   0,   0,   0,   0,   4,",
          "2246:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2247:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2248:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2249:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2250:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2251:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2252:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2253:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2254:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2255:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2256:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2257:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2258:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2259:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2260:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2261:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2262:   };",
          "2263:   YYDEBUG(121, *YYCURSOR);",
          "2264:   YYFILL(16);",
          "2265:   yych = *YYCURSOR;",
          "2266:   YYDEBUG(-1, yych);",
          "2267:   switch (yych) {",
          "2268:   case 0x00:",
          "2269:   case 0x01:",
          "2270:   case 0x02:",
          "2271:   case 0x03:",
          "2272:   case 0x04:",
          "2273:   case 0x05:",
          "2274:   case 0x06:",
          "2275:   case 0x07:",
          "2276:   case 0x08:",
          "2277:   case '\\v':",
          "2278:   case '\\f':",
          "2279:   case 0x0E:",
          "2280:   case 0x0F:",
          "2281:   case 0x10:",
          "2282:   case 0x11:",
          "2283:   case 0x12:",
          "2284:   case 0x13:",
          "2285:   case 0x14:",
          "2286:   case 0x15:",
          "2287:   case 0x16:",
          "2288:   case 0x17:",
          "2289:   case 0x18:",
          "2290:   case 0x19:",
          "2291:   case 0x1A:",
          "2292:   case 0x1B:",
          "2293:   case 0x1C:",
          "2294:   case 0x1D:",
          "2295:   case 0x1E:",
          "2296:   case 0x1F: goto yy184;",
          "2297:   case '\\t':",
          "2298:   case '\\n':",
          "2299:   case '\\r':",
          "2300:   case ' ': goto yy140;",
          "2301:   case '!': goto yy153;",
          "2302:   case '\"': goto yy180;",
          "2303:   case '#': goto yy176;",
          "2304:   case '$': goto yy165;",
          "2305:   case '%': goto yy159;",
          "2306:   case '&': goto yy160;",
          "2307:   case '\\'': goto yy178;",
          "2308:   case '(': goto yy147;",
          "2309:   case ')':",
          "2310:   case ',':",
          "2311:   case ';':",
          "2312:   case '@':",
          "2313:   case '[':",
          "2314:   case ']':",
          "2315:   case '~': goto yy166;",
          "2316:   case '*': goto yy156;",
          "2317:   case '+': goto yy152;",
          "2318:   case '-': goto yy138;",
          "2319:   case '.': goto yy158;",
          "2320:   case '/': goto yy157;",
          "2321:   case '0': goto yy172;",
          "2322:   case '1':",
          "2323:   case '2':",
          "2324:   case '3':",
          "2325:   case '4':",
          "2326:   case '5':",
          "2327:   case '6':",
          "2328:   case '7':",
          "2329:   case '8':",
          "2330:   case '9': goto yy174;",
          "2331:   case ':': goto yy142;",
          "2332:   case '<': goto yy154;",
          "2333:   case '=': goto yy150;",
          "2334:   case '>': goto yy155;",
          "2335:   case '?': goto yy167;",
          "2336:   case 'A':",
          "2337:   case 'a': goto yy133;",
          "2338:   case 'B':",
          "2339:   case 'b': goto yy135;",
          "2340:   case 'C':",
          "2341:   case 'c': goto yy127;",
          "2342:   case 'D':",
          "2343:   case 'd': goto yy125;",
          "2344:   case 'E':",
          "2345:   case 'e': goto yy123;",
          "2346:   case 'F':",
          "2347:   case 'f': goto yy126;",
          "2348:   case 'G':",
          "2349:   case 'g': goto yy136;",
          "2350:   case 'I':",
          "2351:   case 'i': goto yy131;",
          "2352:   case 'L':",
          "2353:   case 'l': goto yy151;",
          "2354:   case 'N':",
          "2355:   case 'n': goto yy145;",
          "2356:   case 'O':",
          "2357:   case 'o': goto yy163;",
          "2358:   case 'P':",
          "2359:   case 'p': goto yy137;",
          "2360:   case 'R':",
          "2361:   case 'r': goto yy128;",
          "2362:   case 'S':",
          "2363:   case 's': goto yy134;",
          "2364:   case 'T':",
          "2365:   case 't': goto yy130;",
          "2366:   case 'U':",
          "2367:   case 'u': goto yy148;",
          "2368:   case 'V':",
          "2369:   case 'v': goto yy146;",
          "2370:   case 'W':",
          "2371:   case 'w': goto yy132;",
          "2372:   case 'X':",
          "2373:   case 'x': goto yy164;",
          "2374:   case 'Y':",
          "2375:   case 'y': goto yy129;",
          "2376:   case '\\\\': goto yy143;",
          "2377:   case '^': goto yy162;",
          "2378:   case '_': goto yy149;",
          "2379:   case '`': goto yy182;",
          "2380:   case '{': goto yy168;",
          "2381:   case '|': goto yy161;",
          "2382:   case '}': goto yy170;",
          "2383:   default: goto yy175;",
          "2384:   }",
          "2385: yy123:",
          "2386:   YYDEBUG(123, *YYCURSOR);",
          "2387:   ++YYCURSOR;",
          "2388:   YYDEBUG(-1, yych);",
          "2389:   switch ((yych = *YYCURSOR)) {",
          "2390:   case 'C':",
          "2391:   case 'c': goto yy735;",
          "2392:   case 'L':",
          "2393:   case 'l': goto yy736;",
          "2394:   case 'M':",
          "2395:   case 'm': goto yy737;",
          "2396:   case 'N':",
          "2397:   case 'n': goto yy738;",
          "2398:   case 'V':",
          "2399:   case 'v': goto yy739;",
          "2400:   case 'X':",
          "2401:   case 'x': goto yy740;",
          "2402:   default: goto yy187;",
          "2403:   }",
          "2404: yy124:",
          "2405:   YYDEBUG(124, *YYCURSOR);",
          "2406:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2407: #line 1908 \"Zend/zend_language_scanner.l\"",
          "2408:   {",
          "2409:  zend_copy_value(zendlval, yytext, yyleng);",
          "2410:  zendlval->type = IS_STRING;",
          "2411:  return T_STRING;",
          "2412: }",
          "2413: #line 2414 \"Zend/zend_language_scanner.c\"",
          "2414: yy125:",
          "2415:   YYDEBUG(125, *YYCURSOR);",
          "2416:   yych = *++YYCURSOR;",
          "2417:   if (yych <= 'O') {",
          "2418:    if (yych <= 'H') {",
          "2419:     if (yych == 'E') goto yy717;",
          "2420:     goto yy187;",
          "2421:    } else {",
          "2422:     if (yych <= 'I') goto yy718;",
          "2423:     if (yych <= 'N') goto yy187;",
          "2424:     goto yy719;",
          "2425:    }",
          "2426:   } else {",
          "2427:    if (yych <= 'h') {",
          "2428:     if (yych == 'e') goto yy717;",
          "2429:     goto yy187;",
          "2430:    } else {",
          "2431:     if (yych <= 'i') goto yy718;",
          "2432:     if (yych == 'o') goto yy719;",
          "2433:     goto yy187;",
          "2434:    }",
          "2435:   }",
          "2436: yy126:",
          "2437:   YYDEBUG(126, *YYCURSOR);",
          "2438:   yych = *++YYCURSOR;",
          "2439:   if (yych <= 'U') {",
          "2440:    if (yych <= 'N') {",
          "2441:     if (yych == 'I') goto yy693;",
          "2442:     goto yy187;",
          "2443:    } else {",
          "2444:     if (yych <= 'O') goto yy694;",
          "2445:     if (yych <= 'T') goto yy187;",
          "2446:     goto yy695;",
          "2447:    }",
          "2448:   } else {",
          "2449:    if (yych <= 'n') {",
          "2450:     if (yych == 'i') goto yy693;",
          "2451:     goto yy187;",
          "2452:    } else {",
          "2453:     if (yych <= 'o') goto yy694;",
          "2454:     if (yych == 'u') goto yy695;",
          "2455:     goto yy187;",
          "2456:    }",
          "2457:   }",
          "2458: yy127:",
          "2459:   YYDEBUG(127, *YYCURSOR);",
          "2460:   yych = *++YYCURSOR;",
          "2461:   if (yych <= 'O') {",
          "2462:    if (yych <= 'K') {",
          "2463:     if (yych == 'A') goto yy658;",
          "2464:     goto yy187;",
          "2465:    } else {",
          "2466:     if (yych <= 'L') goto yy659;",
          "2467:     if (yych <= 'N') goto yy187;",
          "2468:     goto yy660;",
          "2469:    }",
          "2470:   } else {",
          "2471:    if (yych <= 'k') {",
          "2472:     if (yych == 'a') goto yy658;",
          "2473:     goto yy187;",
          "2474:    } else {",
          "2475:     if (yych <= 'l') goto yy659;",
          "2476:     if (yych == 'o') goto yy660;",
          "2477:     goto yy187;",
          "2478:    }",
          "2479:   }",
          "2480: yy128:",
          "2481:   YYDEBUG(128, *YYCURSOR);",
          "2482:   yych = *++YYCURSOR;",
          "2483:   if (yych == 'E') goto yy640;",
          "2484:   if (yych == 'e') goto yy640;",
          "2485:   goto yy187;",
          "2486: yy129:",
          "2487:   YYDEBUG(129, *YYCURSOR);",
          "2488:   yych = *++YYCURSOR;",
          "2489:   if (yych == 'I') goto yy635;",
          "2490:   if (yych == 'i') goto yy635;",
          "2491:   goto yy187;",
          "2492: yy130:",
          "2493:   YYDEBUG(130, *YYCURSOR);",
          "2494:   yych = *++YYCURSOR;",
          "2495:   if (yych <= 'R') {",
          "2496:    if (yych == 'H') goto yy623;",
          "2497:    if (yych <= 'Q') goto yy187;",
          "2498:    goto yy624;",
          "2499:   } else {",
          "2500:    if (yych <= 'h') {",
          "2501:     if (yych <= 'g') goto yy187;",
          "2502:     goto yy623;",
          "2503:    } else {",
          "2504:     if (yych == 'r') goto yy624;",
          "2505:     goto yy187;",
          "2506:    }",
          "2507:   }",
          "2508: yy131:",
          "2509:   YYDEBUG(131, *YYCURSOR);",
          "2510:   yych = *++YYCURSOR;",
          "2511:   if (yych <= 'S') {",
          "2512:    if (yych <= 'L') {",
          "2513:     if (yych == 'F') goto yy570;",
          "2514:     goto yy187;",
          "2515:    } else {",
          "2516:     if (yych <= 'M') goto yy572;",
          "2517:     if (yych <= 'N') goto yy573;",
          "2518:     if (yych <= 'R') goto yy187;",
          "2519:     goto yy574;",
          "2520:    }",
          "2521:   } else {",
          "2522:    if (yych <= 'm') {",
          "2523:     if (yych == 'f') goto yy570;",
          "2524:     if (yych <= 'l') goto yy187;",
          "2525:     goto yy572;",
          "2526:    } else {",
          "2527:     if (yych <= 'n') goto yy573;",
          "2528:     if (yych == 's') goto yy574;",
          "2529:     goto yy187;",
          "2530:    }",
          "2531:   }",
          "2532: yy132:",
          "2533:   YYDEBUG(132, *YYCURSOR);",
          "2534:   yych = *++YYCURSOR;",
          "2535:   if (yych == 'H') goto yy565;",
          "2536:   if (yych == 'h') goto yy565;",
          "2537:   goto yy187;",
          "2538: yy133:",
          "2539:   YYDEBUG(133, *YYCURSOR);",
          "2540:   yych = *++YYCURSOR;",
          "2541:   if (yych <= 'S') {",
          "2542:    if (yych <= 'M') {",
          "2543:     if (yych == 'B') goto yy547;",
          "2544:     goto yy187;",
          "2545:    } else {",
          "2546:     if (yych <= 'N') goto yy548;",
          "2547:     if (yych <= 'Q') goto yy187;",
          "2548:     if (yych <= 'R') goto yy549;",
          "2549:     goto yy550;",
          "2550:    }",
          "2551:   } else {",
          "2552:    if (yych <= 'n') {",
          "2553:     if (yych == 'b') goto yy547;",
          "2554:     if (yych <= 'm') goto yy187;",
          "2555:     goto yy548;",
          "2556:    } else {",
          "2557:     if (yych <= 'q') goto yy187;",
          "2558:     if (yych <= 'r') goto yy549;",
          "2559:     if (yych <= 's') goto yy550;",
          "2560:     goto yy187;",
          "2561:    }",
          "2562:   }",
          "2563: yy134:",
          "2564:   YYDEBUG(134, *YYCURSOR);",
          "2565:   yych = *++YYCURSOR;",
          "2566:   if (yych <= 'W') {",
          "2567:    if (yych == 'T') goto yy535;",
          "2568:    if (yych <= 'V') goto yy187;",
          "2569:    goto yy536;",
          "2570:   } else {",
          "2571:    if (yych <= 't') {",
          "2572:     if (yych <= 's') goto yy187;",
          "2573:     goto yy535;",
          "2574:    } else {",
          "2575:     if (yych == 'w') goto yy536;",
          "2576:     goto yy187;",
          "2577:    }",
          "2578:   }",
          "2579: yy135:",
          "2580:   YYDEBUG(135, *YYCURSOR);",
          "2581:   yyaccept = 0;",
          "2582:   yych = *(YYMARKER = ++YYCURSOR);",
          "2583:   if (yych <= ';') {",
          "2584:    if (yych <= '\"') {",
          "2585:     if (yych <= '!') goto yy187;",
          "2586:     goto yy527;",
          "2587:    } else {",
          "2588:     if (yych == '\\'') goto yy528;",
          "2589:     goto yy187;",
          "2590:    }",
          "2591:   } else {",
          "2592:    if (yych <= 'R') {",
          "2593:     if (yych <= '<') goto yy526;",
          "2594:     if (yych <= 'Q') goto yy187;",
          "2595:     goto yy529;",
          "2596:    } else {",
          "2597:     if (yych == 'r') goto yy529;",
          "2598:     goto yy187;",
          "2599:    }",
          "2600:   }",
          "2601: yy136:",
          "2602:   YYDEBUG(136, *YYCURSOR);",
          "2603:   yych = *++YYCURSOR;",
          "2604:   if (yych <= 'O') {",
          "2605:    if (yych == 'L') goto yy516;",
          "2606:    if (yych <= 'N') goto yy187;",
          "2607:    goto yy517;",
          "2608:   } else {",
          "2609:    if (yych <= 'l') {",
          "2610:     if (yych <= 'k') goto yy187;",
          "2611:     goto yy516;",
          "2612:    } else {",
          "2613:     if (yych == 'o') goto yy517;",
          "2614:     goto yy187;",
          "2615:    }",
          "2616:   }",
          "2617: yy137:",
          "2618:   YYDEBUG(137, *YYCURSOR);",
          "2619:   yych = *++YYCURSOR;",
          "2620:   if (yych <= 'U') {",
          "2621:    if (yych == 'R') goto yy492;",
          "2622:    if (yych <= 'T') goto yy187;",
          "2623:    goto yy493;",
          "2624:   } else {",
          "2625:    if (yych <= 'r') {",
          "2626:     if (yych <= 'q') goto yy187;",
          "2627:     goto yy492;",
          "2628:    } else {",
          "2629:     if (yych == 'u') goto yy493;",
          "2630:     goto yy187;",
          "2631:    }",
          "2632:   }",
          "2633: yy138:",
          "2634:   YYDEBUG(138, *YYCURSOR);",
          "2635:   ++YYCURSOR;",
          "2636:   if ((yych = *YYCURSOR) <= '<') {",
          "2637:    if (yych == '-') goto yy488;",
          "2638:   } else {",
          "2639:    if (yych <= '=') goto yy486;",
          "2640:    if (yych <= '>') goto yy490;",
          "2641:   }",
          "2642: yy139:",
          "2643:   YYDEBUG(139, *YYCURSOR);",
          "2644:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2645: #line 1450 \"Zend/zend_language_scanner.l\"",
          "2646:   {",
          "2647:  return yytext[0];",
          "2648: }",
          "2649: #line 2650 \"Zend/zend_language_scanner.c\"",
          "2650: yy140:",
          "2651:   YYDEBUG(140, *YYCURSOR);",
          "2652:   ++YYCURSOR;",
          "2653:   yych = *YYCURSOR;",
          "2654:   goto yy485;",
          "2655: yy141:",
          "2656:   YYDEBUG(141, *YYCURSOR);",
          "2657:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2658: #line 1181 \"Zend/zend_language_scanner.l\"",
          "2659:   {",
          "2661:  zendlval->value.str.len = yyleng;",
          "2662:  zendlval->type = IS_STRING;",
          "2663:  HANDLE_NEWLINES(yytext, yyleng);",
          "2664:  return T_WHITESPACE;",
          "2665: }",
          "2666: #line 2667 \"Zend/zend_language_scanner.c\"",
          "2667: yy142:",
          "2668:   YYDEBUG(142, *YYCURSOR);",
          "2669:   yych = *++YYCURSOR;",
          "2670:   if (yych == ':') goto yy482;",
          "2671:   goto yy139;",
          "2672: yy143:",
          "2673:   YYDEBUG(143, *YYCURSOR);",
          "2674:   ++YYCURSOR;",
          "2675:   YYDEBUG(144, *YYCURSOR);",
          "2676:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2677: #line 1210 \"Zend/zend_language_scanner.l\"",
          "2678:   {",
          "2679:  return T_NS_SEPARATOR;",
          "2680: }",
          "2681: #line 2682 \"Zend/zend_language_scanner.c\"",
          "2682: yy145:",
          "2683:   YYDEBUG(145, *YYCURSOR);",
          "2684:   yych = *++YYCURSOR;",
          "2685:   if (yych <= 'E') {",
          "2686:    if (yych == 'A') goto yy470;",
          "2687:    if (yych <= 'D') goto yy187;",
          "2688:    goto yy471;",
          "2689:   } else {",
          "2690:    if (yych <= 'a') {",
          "2691:     if (yych <= '`') goto yy187;",
          "2692:     goto yy470;",
          "2693:    } else {",
          "2694:     if (yych == 'e') goto yy471;",
          "2695:     goto yy187;",
          "2696:    }",
          "2697:   }",
          "2698: yy146:",
          "2699:   YYDEBUG(146, *YYCURSOR);",
          "2700:   yych = *++YYCURSOR;",
          "2701:   if (yych == 'A') goto yy467;",
          "2702:   if (yych == 'a') goto yy467;",
          "2703:   goto yy187;",
          "2704: yy147:",
          "2705:   YYDEBUG(147, *YYCURSOR);",
          "2706:   yyaccept = 1;",
          "2707:   yych = *(YYMARKER = ++YYCURSOR);",
          "2708:   if (yych <= 'S') {",
          "2709:    if (yych <= 'D') {",
          "2710:     if (yych <= ' ') {",
          "2711:      if (yych == '\\t') goto yy392;",
          "2712:      if (yych <= 0x1F) goto yy139;",
          "2713:      goto yy392;",
          "2714:     } else {",
          "2715:      if (yych <= '@') goto yy139;",
          "2716:      if (yych == 'C') goto yy139;",
          "2717:      goto yy392;",
          "2718:     }",
          "2719:    } else {",
          "2720:     if (yych <= 'I') {",
          "2721:      if (yych == 'F') goto yy392;",
          "2722:      if (yych <= 'H') goto yy139;",
          "2723:      goto yy392;",
          "2724:     } else {",
          "2725:      if (yych == 'O') goto yy392;",
          "2726:      if (yych <= 'Q') goto yy139;",
          "2727:      goto yy392;",
          "2728:     }",
          "2729:    }",
          "2730:   } else {",
          "2731:    if (yych <= 'f') {",
          "2732:     if (yych <= 'b') {",
          "2733:      if (yych == 'U') goto yy392;",
          "2734:      if (yych <= '`') goto yy139;",
          "2735:      goto yy392;",
          "2736:     } else {",
          "2737:      if (yych == 'd') goto yy392;",
          "2738:      if (yych <= 'e') goto yy139;",
          "2739:      goto yy392;",
          "2740:     }",
          "2741:    } else {",
          "2742:     if (yych <= 'o') {",
          "2743:      if (yych == 'i') goto yy392;",
          "2744:      if (yych <= 'n') goto yy139;",
          "2745:      goto yy392;",
          "2746:     } else {",
          "2747:      if (yych <= 's') {",
          "2748:       if (yych <= 'q') goto yy139;",
          "2749:       goto yy392;",
          "2750:      } else {",
          "2751:       if (yych == 'u') goto yy392;",
          "2752:       goto yy139;",
          "2753:      }",
          "2754:     }",
          "2755:    }",
          "2756:   }",
          "2757: yy148:",
          "2758:   YYDEBUG(148, *YYCURSOR);",
          "2759:   yych = *++YYCURSOR;",
          "2760:   if (yych <= 'S') {",
          "2761:    if (yych == 'N') goto yy383;",
          "2762:    if (yych <= 'R') goto yy187;",
          "2763:    goto yy384;",
          "2764:   } else {",
          "2765:    if (yych <= 'n') {",
          "2766:     if (yych <= 'm') goto yy187;",
          "2767:     goto yy383;",
          "2768:    } else {",
          "2769:     if (yych == 's') goto yy384;",
          "2770:     goto yy187;",
          "2771:    }",
          "2772:   }",
          "2773: yy149:",
          "2774:   YYDEBUG(149, *YYCURSOR);",
          "2775:   yych = *++YYCURSOR;",
          "2776:   if (yych == '_') goto yy301;",
          "2777:   goto yy187;",
          "2778: yy150:",
          "2779:   YYDEBUG(150, *YYCURSOR);",
          "2780:   yych = *++YYCURSOR;",
          "2781:   if (yych <= '<') goto yy139;",
          "2782:   if (yych <= '=') goto yy295;",
          "2783:   if (yych <= '>') goto yy297;",
          "2784:   goto yy139;",
          "2785: yy151:",
          "2786:   YYDEBUG(151, *YYCURSOR);",
          "2787:   yych = *++YYCURSOR;",
          "2788:   if (yych == 'I') goto yy291;",
          "2789:   if (yych == 'i') goto yy291;",
          "2790:   goto yy187;",
          "2791: yy152:",
          "2792:   YYDEBUG(152, *YYCURSOR);",
          "2793:   yych = *++YYCURSOR;",
          "2794:   if (yych == '+') goto yy289;",
          "2795:   if (yych == '=') goto yy287;",
          "2796:   goto yy139;",
          "2797: yy153:",
          "2798:   YYDEBUG(153, *YYCURSOR);",
          "2799:   yych = *++YYCURSOR;",
          "2800:   if (yych == '=') goto yy284;",
          "2801:   goto yy139;",
          "2802: yy154:",
          "2803:   YYDEBUG(154, *YYCURSOR);",
          "2804:   yyaccept = 1;",
          "2805:   yych = *(YYMARKER = ++YYCURSOR);",
          "2806:   if (yych <= ';') {",
          "2807:    if (yych == '/') goto yy256;",
          "2808:    goto yy139;",
          "2809:   } else {",
          "2810:    if (yych <= '<') goto yy254;",
          "2811:    if (yych <= '=') goto yy257;",
          "2812:    if (yych <= '>') goto yy259;",
          "2813:    goto yy139;",
          "2814:   }",
          "2815: yy155:",
          "2816:   YYDEBUG(155, *YYCURSOR);",
          "2817:   yych = *++YYCURSOR;",
          "2818:   if (yych <= '<') goto yy139;",
          "2819:   if (yych <= '=') goto yy250;",
          "2820:   if (yych <= '>') goto yy248;",
          "2821:   goto yy139;",
          "2822: yy156:",
          "2823:   YYDEBUG(156, *YYCURSOR);",
          "2824:   yych = *++YYCURSOR;",
          "2825:   if (yych == '=') goto yy246;",
          "2826:   goto yy139;",
          "2827: yy157:",
          "2828:   YYDEBUG(157, *YYCURSOR);",
          "2829:   yych = *++YYCURSOR;",
          "2830:   if (yych <= '.') {",
          "2831:    if (yych == '*') goto yy238;",
          "2832:    goto yy139;",
          "2833:   } else {",
          "2834:    if (yych <= '/') goto yy240;",
          "2835:    if (yych == '=') goto yy241;",
          "2836:    goto yy139;",
          "2837:   }",
          "2838: yy158:",
          "2839:   YYDEBUG(158, *YYCURSOR);",
          "2840:   yych = *++YYCURSOR;",
          "2841:   if (yych <= '/') goto yy139;",
          "2842:   if (yych <= '9') goto yy234;",
          "2843:   if (yych == '=') goto yy236;",
          "2844:   goto yy139;",
          "2845: yy159:",
          "2846:   YYDEBUG(159, *YYCURSOR);",
          "2847:   yych = *++YYCURSOR;",
          "2848:   if (yych <= '<') goto yy139;",
          "2849:   if (yych <= '=') goto yy230;",
          "2850:   if (yych <= '>') goto yy228;",
          "2851:   goto yy139;",
          "2852: yy160:",
          "2853:   YYDEBUG(160, *YYCURSOR);",
          "2854:   yych = *++YYCURSOR;",
          "2855:   if (yych == '&') goto yy224;",
          "2856:   if (yych == '=') goto yy226;",
          "2857:   goto yy139;",
          "2858: yy161:",
          "2859:   YYDEBUG(161, *YYCURSOR);",
          "2860:   yych = *++YYCURSOR;",
          "2861:   if (yych == '=') goto yy222;",
          "2862:   if (yych == '|') goto yy220;",
          "2863:   goto yy139;",
          "2864: yy162:",
          "2865:   YYDEBUG(162, *YYCURSOR);",
          "2866:   yych = *++YYCURSOR;",
          "2867:   if (yych == '=') goto yy218;",
          "2868:   goto yy139;",
          "2869: yy163:",
          "2870:   YYDEBUG(163, *YYCURSOR);",
          "2871:   yych = *++YYCURSOR;",
          "2872:   if (yych == 'R') goto yy216;",
          "2873:   if (yych == 'r') goto yy216;",
          "2874:   goto yy187;",
          "2875: yy164:",
          "2876:   YYDEBUG(164, *YYCURSOR);",
          "2877:   yych = *++YYCURSOR;",
          "2878:   if (yych == 'O') goto yy213;",
          "2879:   if (yych == 'o') goto yy213;",
          "2880:   goto yy187;",
          "2881: yy165:",
          "2882:   YYDEBUG(165, *YYCURSOR);",
          "2883:   yych = *++YYCURSOR;",
          "2884:   if (yych <= '_') {",
          "2885:    if (yych <= '@') goto yy139;",
          "2886:    if (yych <= 'Z') goto yy210;",
          "2887:    if (yych <= '^') goto yy139;",
          "2888:    goto yy210;",
          "2889:   } else {",
          "2890:    if (yych <= '`') goto yy139;",
          "2891:    if (yych <= 'z') goto yy210;",
          "2892:    if (yych <= '~') goto yy139;",
          "2893:    goto yy210;",
          "2894:   }",
          "2895: yy166:",
          "2896:   YYDEBUG(166, *YYCURSOR);",
          "2897:   yych = *++YYCURSOR;",
          "2898:   goto yy139;",
          "2899: yy167:",
          "2900:   YYDEBUG(167, *YYCURSOR);",
          "2901:   yych = *++YYCURSOR;",
          "2902:   if (yych == '>') goto yy206;",
          "2903:   goto yy139;",
          "2904: yy168:",
          "2905:   YYDEBUG(168, *YYCURSOR);",
          "2906:   ++YYCURSOR;",
          "2907:   YYDEBUG(169, *YYCURSOR);",
          "2908:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2909: #line 1455 \"Zend/zend_language_scanner.l\"",
          "2910:   {",
          "2911:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2912:  return '{';",
          "2913: }",
          "2914: #line 2915 \"Zend/zend_language_scanner.c\"",
          "2915: yy170:",
          "2916:   YYDEBUG(170, *YYCURSOR);",
          "2917:   ++YYCURSOR;",
          "2918:   YYDEBUG(171, *YYCURSOR);",
          "2919:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2920: #line 1467 \"Zend/zend_language_scanner.l\"",
          "2921:   {",
          "2922:  RESET_DOC_COMMENT();",
          "2923:  if (!zend_stack_is_empty(&SCNG(state_stack))) {",
          "2924:   yy_pop_state(TSRMLS_C);",
          "2925:  }",
          "2926:  return '}';",
          "2927: }",
          "2928: #line 2929 \"Zend/zend_language_scanner.c\"",
          "2929: yy172:",
          "2930:   YYDEBUG(172, *YYCURSOR);",
          "2931:   yyaccept = 2;",
          "2932:   yych = *(YYMARKER = ++YYCURSOR);",
          "2933:   if (yych <= 'E') {",
          "2934:    if (yych <= '9') {",
          "2935:     if (yych == '.') goto yy188;",
          "2936:     if (yych >= '0') goto yy191;",
          "2937:    } else {",
          "2938:     if (yych == 'B') goto yy199;",
          "2939:     if (yych >= 'E') goto yy193;",
          "2940:    }",
          "2941:   } else {",
          "2942:    if (yych <= 'b') {",
          "2943:     if (yych == 'X') goto yy198;",
          "2944:     if (yych >= 'b') goto yy199;",
          "2945:    } else {",
          "2946:     if (yych <= 'e') {",
          "2947:      if (yych >= 'e') goto yy193;",
          "2948:     } else {",
          "2949:      if (yych == 'x') goto yy198;",
          "2950:     }",
          "2951:    }",
          "2952:   }",
          "2953: yy173:",
          "2954:   YYDEBUG(173, *YYCURSOR);",
          "2955:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2956: #line 1518 \"Zend/zend_language_scanner.l\"",
          "2957:   {",
          "2959:   zendlval->value.lval = strtol(yytext, NULL, 0);",
          "2960:  } else {",
          "2961:   errno = 0;",
          "2962:   zendlval->value.lval = strtol(yytext, NULL, 0);",
          "2965:     zendlval->value.dval = zend_oct_strtod(yytext, NULL);",
          "2966:    } else {",
          "2967:     zendlval->value.dval = zend_strtod(yytext, NULL);",
          "2968:    }",
          "2969:    zendlval->type = IS_DOUBLE;",
          "2970:    return T_DNUMBER;",
          "2971:   }",
          "2972:  }",
          "2974:  zendlval->type = IS_LONG;",
          "2975:  return T_LNUMBER;",
          "2976: }",
          "2977: #line 2978 \"Zend/zend_language_scanner.c\"",
          "2978: yy174:",
          "2979:   YYDEBUG(174, *YYCURSOR);",
          "2980:   yyaccept = 2;",
          "2981:   yych = *(YYMARKER = ++YYCURSOR);",
          "2982:   if (yych <= '9') {",
          "2983:    if (yych == '.') goto yy188;",
          "2984:    if (yych <= '/') goto yy173;",
          "2985:    goto yy191;",
          "2986:   } else {",
          "2987:    if (yych <= 'E') {",
          "2988:     if (yych <= 'D') goto yy173;",
          "2989:     goto yy193;",
          "2990:    } else {",
          "2991:     if (yych == 'e') goto yy193;",
          "2992:     goto yy173;",
          "2993:    }",
          "2994:   }",
          "2995: yy175:",
          "2996:   YYDEBUG(175, *YYCURSOR);",
          "2997:   yych = *++YYCURSOR;",
          "2998:   goto yy187;",
          "2999: yy176:",
          "3000:   YYDEBUG(176, *YYCURSOR);",
          "3001:   ++YYCURSOR;",
          "3002: yy177:",
          "3003:   YYDEBUG(177, *YYCURSOR);",
          "3004:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3005: #line 1915 \"Zend/zend_language_scanner.l\"",
          "3006:   {",
          "3007:  while (YYCURSOR < YYLIMIT) {",
          "3008:   switch (*YYCURSOR++) {",
          "3009:    case '\\r':",
          "3010:     if (*YYCURSOR == '\\n') {",
          "3011:      YYCURSOR++;",
          "3012:     }",
          "3014:    case '\\n':",
          "3015:     CG(zend_lineno)++;",
          "3016:     break;",
          "3017:    case '%':",
          "3018:     if (!CG(asp_tags)) {",
          "3019:      continue;",
          "3020:     }",
          "3022:    case '?':",
          "3023:     if (*YYCURSOR == '>') {",
          "3024:      YYCURSOR--;",
          "3025:      break;",
          "3026:     }",
          "3028:    default:",
          "3029:     continue;",
          "3030:   }",
          "3032:   break;",
          "3033:  }",
          "3035:  yyleng = YYCURSOR - SCNG(yy_text);",
          "3037:  return T_COMMENT;",
          "3038: }",
          "3039: #line 3040 \"Zend/zend_language_scanner.c\"",
          "3040: yy178:",
          "3041:   YYDEBUG(178, *YYCURSOR);",
          "3042:   ++YYCURSOR;",
          "3043: yy179:",
          "3044:   YYDEBUG(179, *YYCURSOR);",
          "3045:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3046: #line 2006 \"Zend/zend_language_scanner.l\"",
          "3047:   {",
          "3048:  register char *s, *t;",
          "3049:  char *end;",
          "3050:  int bprefix = (yytext[0] != '\\'') ? 1 : 0;",
          "3052:  while (1) {",
          "3053:   if (YYCURSOR < YYLIMIT) {",
          "3054:    if (*YYCURSOR == '\\'') {",
          "3055:     YYCURSOR++;",
          "3056:     yyleng = YYCURSOR - SCNG(yy_text);",
          "3058:     break;",
          "3059:    } else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {",
          "3060:     YYCURSOR++;",
          "3061:    }",
          "3062:   } else {",
          "3063:    yyleng = YYLIMIT - SCNG(yy_text);",
          "3068:    return T_ENCAPSED_AND_WHITESPACE;",
          "3069:   }",
          "3070:  }",
          "3072:  zendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);",
          "3073:  zendlval->value.str.len = yyleng-bprefix-2;",
          "3074:  zendlval->type = IS_STRING;",
          "3077:  s = t = zendlval->value.str.val;",
          "3078:  end = s+zendlval->value.str.len;",
          "3079:  while (s<end) {",
          "3080:   if (*s=='\\\\') {",
          "3081:    s++;",
          "3083:    switch(*s) {",
          "3084:     case '\\\\':",
          "3085:     case '\\'':",
          "3087:      zendlval->value.str.len--;",
          "3088:      break;",
          "3089:     default:",
          "3092:      break;",
          "3093:    }",
          "3094:   } else {",
          "3096:   }",
          "3098:   if (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {",
          "3099:    CG(zend_lineno)++;",
          "3100:   }",
          "3101:   s++;",
          "3102:  }",
          "3105:  if (SCNG(output_filter)) {",
          "3106:   size_t sz = 0;",
          "3107:   s = zendlval->value.str.val;",
          "3108:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);",
          "3109:   zendlval->value.str.len = sz;",
          "3110:   efree(s);",
          "3111:  }",
          "3112:  return T_CONSTANT_ENCAPSED_STRING;",
          "3113: }",
          "3114: #line 3115 \"Zend/zend_language_scanner.c\"",
          "3115: yy180:",
          "3116:   YYDEBUG(180, *YYCURSOR);",
          "3117:   ++YYCURSOR;",
          "3118: yy181:",
          "3119:   YYDEBUG(181, *YYCURSOR);",
          "3120:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3121: #line 2075 \"Zend/zend_language_scanner.l\"",
          "3122:   {",
          "3123:  int bprefix = (yytext[0] != '\"') ? 1 : 0;",
          "3125:  while (YYCURSOR < YYLIMIT) {",
          "3126:   switch (*YYCURSOR++) {",
          "3127:    case '\"':",
          "3128:     yyleng = YYCURSOR - SCNG(yy_text);",
          "3129:     zend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);",
          "3130:     return T_CONSTANT_ENCAPSED_STRING;",
          "3131:    case '$':",
          "3132:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "3133:      break;",
          "3134:     }",
          "3135:     continue;",
          "3136:    case '{':",
          "3137:     if (*YYCURSOR == '$') {",
          "3138:      break;",
          "3139:     }",
          "3140:     continue;",
          "3141:    case '\\\\':",
          "3142:     if (YYCURSOR < YYLIMIT) {",
          "3143:      YYCURSOR++;",
          "3144:     }",
          "3146:    default:",
          "3147:     continue;",
          "3148:   }",
          "3150:   YYCURSOR--;",
          "3151:   break;",
          "3152:  }",
          "3155:  SET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);",
          "3157:  YYCURSOR = SCNG(yy_text) + yyleng;",
          "3159:  BEGIN(ST_DOUBLE_QUOTES);",
          "3160:  return '\"';",
          "3161: }",
          "3162: #line 3163 \"Zend/zend_language_scanner.c\"",
          "3163: yy182:",
          "3164:   YYDEBUG(182, *YYCURSOR);",
          "3165:   ++YYCURSOR;",
          "3166:   YYDEBUG(183, *YYCURSOR);",
          "3167:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3168: #line 2165 \"Zend/zend_language_scanner.l\"",
          "3169:   {",
          "3170:  BEGIN(ST_BACKQUOTE);",
          "3171:  return '`';",
          "3172: }",
          "3173: #line 3174 \"Zend/zend_language_scanner.c\"",
          "3174: yy184:",
          "3175:   YYDEBUG(184, *YYCURSOR);",
          "3176:   ++YYCURSOR;",
          "3177:   YYDEBUG(185, *YYCURSOR);",
          "3178:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3179: #line 2428 \"Zend/zend_language_scanner.l\"",
          "3180:   {",
          "3181:  if (YYCURSOR > YYLIMIT) {",
          "3182:   return 0;",
          "3183:  }",
          "3185:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "3186:  goto restart;",
          "3187: }",
          "3188: #line 3189 \"Zend/zend_language_scanner.c\"",
          "3189: yy186:",
          "3190:   YYDEBUG(186, *YYCURSOR);",
          "3191:   ++YYCURSOR;",
          "3192:   YYFILL(1);",
          "3193:   yych = *YYCURSOR;",
          "3194: yy187:",
          "3195:   YYDEBUG(187, *YYCURSOR);",
          "3196:   if (yybm[0+yych] & 4) {",
          "3197:    goto yy186;",
          "3198:   }",
          "3199:   goto yy124;",
          "3200: yy188:",
          "3201:   YYDEBUG(188, *YYCURSOR);",
          "3202:   yyaccept = 3;",
          "3203:   YYMARKER = ++YYCURSOR;",
          "3204:   YYFILL(3);",
          "3205:   yych = *YYCURSOR;",
          "3206:   YYDEBUG(189, *YYCURSOR);",
          "3207:   if (yybm[0+yych] & 8) {",
          "3208:    goto yy188;",
          "3209:   }",
          "3210:   if (yych == 'E') goto yy193;",
          "3211:   if (yych == 'e') goto yy193;",
          "3212: yy190:",
          "3213:   YYDEBUG(190, *YYCURSOR);",
          "3214:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3215: #line 1583 \"Zend/zend_language_scanner.l\"",
          "3216:   {",
          "3217:  zendlval->value.dval = zend_strtod(yytext, NULL);",
          "3218:  zendlval->type = IS_DOUBLE;",
          "3219:  return T_DNUMBER;",
          "3220: }",
          "3221: #line 3222 \"Zend/zend_language_scanner.c\"",
          "3222: yy191:",
          "3223:   YYDEBUG(191, *YYCURSOR);",
          "3224:   yyaccept = 2;",
          "3225:   YYMARKER = ++YYCURSOR;",
          "3226:   YYFILL(3);",
          "3227:   yych = *YYCURSOR;",
          "3228:   YYDEBUG(192, *YYCURSOR);",
          "3229:   if (yych <= '9') {",
          "3230:    if (yych == '.') goto yy188;",
          "3231:    if (yych <= '/') goto yy173;",
          "3232:    goto yy191;",
          "3233:   } else {",
          "3234:    if (yych <= 'E') {",
          "3235:     if (yych <= 'D') goto yy173;",
          "3236:    } else {",
          "3237:     if (yych != 'e') goto yy173;",
          "3238:    }",
          "3239:   }",
          "3240: yy193:",
          "3241:   YYDEBUG(193, *YYCURSOR);",
          "3242:   yych = *++YYCURSOR;",
          "3243:   if (yych <= ',') {",
          "3244:    if (yych == '+') goto yy195;",
          "3245:   } else {",
          "3246:    if (yych <= '-') goto yy195;",
          "3247:    if (yych <= '/') goto yy194;",
          "3248:    if (yych <= '9') goto yy196;",
          "3249:   }",
          "3250: yy194:",
          "3251:   YYDEBUG(194, *YYCURSOR);",
          "3252:   YYCURSOR = YYMARKER;",
          "3253:   if (yyaccept <= 2) {",
          "3254:    if (yyaccept <= 1) {",
          "3255:     if (yyaccept <= 0) {",
          "3256:      goto yy124;",
          "3257:     } else {",
          "3258:      goto yy139;",
          "3259:     }",
          "3260:    } else {",
          "3261:     goto yy173;",
          "3262:    }",
          "3263:   } else {",
          "3264:    if (yyaccept <= 4) {",
          "3265:     if (yyaccept <= 3) {",
          "3266:      goto yy190;",
          "3267:     } else {",
          "3268:      goto yy239;",
          "3269:     }",
          "3270:    } else {",
          "3271:     goto yy255;",
          "3272:    }",
          "3273:   }",
          "3274: yy195:",
          "3275:   YYDEBUG(195, *YYCURSOR);",
          "3276:   yych = *++YYCURSOR;",
          "3277:   if (yych <= '/') goto yy194;",
          "3278:   if (yych >= ':') goto yy194;",
          "3279: yy196:",
          "3280:   YYDEBUG(196, *YYCURSOR);",
          "3281:   ++YYCURSOR;",
          "3282:   YYFILL(1);",
          "3283:   yych = *YYCURSOR;",
          "3284:   YYDEBUG(197, *YYCURSOR);",
          "3285:   if (yych <= '/') goto yy190;",
          "3286:   if (yych <= '9') goto yy196;",
          "3287:   goto yy190;",
          "3288: yy198:",
          "3289:   YYDEBUG(198, *YYCURSOR);",
          "3290:   yych = *++YYCURSOR;",
          "3291:   if (yybm[0+yych] & 32) {",
          "3292:    goto yy203;",
          "3293:   }",
          "3294:   goto yy194;",
          "3295: yy199:",
          "3296:   YYDEBUG(199, *YYCURSOR);",
          "3297:   yych = *++YYCURSOR;",
          "3298:   if (yybm[0+yych] & 16) {",
          "3299:    goto yy200;",
          "3300:   }",
          "3301:   goto yy194;",
          "3302: yy200:",
          "3303:   YYDEBUG(200, *YYCURSOR);",
          "3304:   ++YYCURSOR;",
          "3305:   YYFILL(1);",
          "3306:   yych = *YYCURSOR;",
          "3307:   YYDEBUG(201, *YYCURSOR);",
          "3308:   if (yybm[0+yych] & 16) {",
          "3309:    goto yy200;",
          "3310:   }",
          "3311:   YYDEBUG(202, *YYCURSOR);",
          "3312:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3313: #line 1493 \"Zend/zend_language_scanner.l\"",
          "3314:   {",
          "3316:  int len = yyleng - 2;",
          "3319:  while (*bin == '0') {",
          "3320:   ++bin;",
          "3321:   --len;",
          "3322:  }",
          "3324:  if (len < SIZEOF_LONG * 8) {",
          "3325:   if (len == 0) {",
          "3326:    zendlval->value.lval = 0;",
          "3327:   } else {",
          "3328:    zendlval->value.lval = strtol(bin, NULL, 2);",
          "3329:   }",
          "3330:   zendlval->type = IS_LONG;",
          "3331:   return T_LNUMBER;",
          "3332:  } else {",
          "3333:   zendlval->value.dval = zend_bin_strtod(bin, NULL);",
          "3334:   zendlval->type = IS_DOUBLE;",
          "3335:   return T_DNUMBER;",
          "3336:  }",
          "3337: }",
          "3338: #line 3339 \"Zend/zend_language_scanner.c\"",
          "3339: yy203:",
          "3340:   YYDEBUG(203, *YYCURSOR);",
          "3341:   ++YYCURSOR;",
          "3342:   YYFILL(1);",
          "3343:   yych = *YYCURSOR;",
          "3344:   YYDEBUG(204, *YYCURSOR);",
          "3345:   if (yybm[0+yych] & 32) {",
          "3346:    goto yy203;",
          "3347:   }",
          "3348:   YYDEBUG(205, *YYCURSOR);",
          "3349:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3350: #line 1539 \"Zend/zend_language_scanner.l\"",
          "3351:   {",
          "3353:  int len = yyleng - 2;",
          "3356:  while (*hex == '0') {",
          "3357:   hex++;",
          "3358:   len--;",
          "3359:  }",
          "3361:  if (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {",
          "3362:   if (len == 0) {",
          "3363:    zendlval->value.lval = 0;",
          "3364:   } else {",
          "3365:    zendlval->value.lval = strtol(hex, NULL, 16);",
          "3366:   }",
          "3367:   zendlval->type = IS_LONG;",
          "3368:   return T_LNUMBER;",
          "3369:  } else {",
          "3370:   zendlval->value.dval = zend_hex_strtod(hex, NULL);",
          "3371:   zendlval->type = IS_DOUBLE;",
          "3372:   return T_DNUMBER;",
          "3373:  }",
          "3374: }",
          "3375: #line 3376 \"Zend/zend_language_scanner.c\"",
          "3376: yy206:",
          "3377:   YYDEBUG(206, *YYCURSOR);",
          "3378:   ++YYCURSOR;",
          "3379:   if ((yych = *YYCURSOR) == '\\n') goto yy208;",
          "3380:   if (yych == '\\r') goto yy209;",
          "3381: yy207:",
          "3382:   YYDEBUG(207, *YYCURSOR);",
          "3383:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3384: #line 1983 \"Zend/zend_language_scanner.l\"",
          "3385:   {",
          "3387:  zendlval->value.str.len = yyleng;",
          "3388:  zendlval->type = IS_STRING;",
          "3389:  BEGIN(INITIAL);",
          "3391: }",
          "3392: #line 3393 \"Zend/zend_language_scanner.c\"",
          "3393: yy208:",
          "3394:   YYDEBUG(208, *YYCURSOR);",
          "3395:   yych = *++YYCURSOR;",
          "3396:   goto yy207;",
          "3397: yy209:",
          "3398:   YYDEBUG(209, *YYCURSOR);",
          "3399:   yych = *++YYCURSOR;",
          "3400:   if (yych == '\\n') goto yy208;",
          "3401:   goto yy207;",
          "3402: yy210:",
          "3403:   YYDEBUG(210, *YYCURSOR);",
          "3404:   ++YYCURSOR;",
          "3405:   YYFILL(1);",
          "3406:   yych = *YYCURSOR;",
          "3407:   YYDEBUG(211, *YYCURSOR);",
          "3408:   if (yych <= '^') {",
          "3409:    if (yych <= '9') {",
          "3410:     if (yych >= '0') goto yy210;",
          "3411:    } else {",
          "3412:     if (yych <= '@') goto yy212;",
          "3413:     if (yych <= 'Z') goto yy210;",
          "3414:    }",
          "3415:   } else {",
          "3416:    if (yych <= '`') {",
          "3417:     if (yych <= '_') goto yy210;",
          "3418:    } else {",
          "3419:     if (yych <= 'z') goto yy210;",
          "3420:     if (yych >= 0x7F) goto yy210;",
          "3421:    }",
          "3422:   }",
          "3423: yy212:",
          "3424:   YYDEBUG(212, *YYCURSOR);",
          "3425:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3426: #line 1885 \"Zend/zend_language_scanner.l\"",
          "3427:   {",
          "3428:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "3429:  zendlval->type = IS_STRING;",
          "3430:  return T_VARIABLE;",
          "3431: }",
          "3432: #line 3433 \"Zend/zend_language_scanner.c\"",
          "3433: yy213:",
          "3434:   YYDEBUG(213, *YYCURSOR);",
          "3435:   yych = *++YYCURSOR;",
          "3436:   if (yych == 'R') goto yy214;",
          "3437:   if (yych != 'r') goto yy187;",
          "3438: yy214:",
          "3439:   YYDEBUG(214, *YYCURSOR);",
          "3440:   ++YYCURSOR;",
          "3441:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "3442:    goto yy186;",
          "3443:   }",
          "3444:   YYDEBUG(215, *YYCURSOR);",
          "3445:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3446: #line 1438 \"Zend/zend_language_scanner.l\"",
          "3447:   {",
          "3448:  return T_LOGICAL_XOR;",
          "3449: }",
          "3450: #line 3451 \"Zend/zend_language_scanner.c\"",
          "3451: yy216:",
          "3452:   YYDEBUG(216, *YYCURSOR);",
          "3453:   ++YYCURSOR;",
          "3454:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "3455:    goto yy186;",
          "3456:   }",
          "3457:   YYDEBUG(217, *YYCURSOR);",
          "3458:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3459: #line 1430 \"Zend/zend_language_scanner.l\"",
          "3460:   {",
          "3461:  return T_LOGICAL_OR;",
          "3462: }",
          "3463: #line 3464 \"Zend/zend_language_scanner.c\"",
          "3464: yy218:",
          "3465:   YYDEBUG(218, *YYCURSOR);",
          "3466:   ++YYCURSOR;",
          "3467:   YYDEBUG(219, *YYCURSOR);",
          "3468:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3469: #line 1418 \"Zend/zend_language_scanner.l\"",
          "3470:   {",
          "3471:  return T_XOR_EQUAL;",
          "3472: }",
          "3473: #line 3474 \"Zend/zend_language_scanner.c\"",
          "3474: yy220:",
          "3475:   YYDEBUG(220, *YYCURSOR);",
          "3476:   ++YYCURSOR;",
          "3477:   YYDEBUG(221, *YYCURSOR);",
          "3478:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3479: #line 1422 \"Zend/zend_language_scanner.l\"",
          "3480:   {",
          "3481:  return T_BOOLEAN_OR;",
          "3482: }",
          "3483: #line 3484 \"Zend/zend_language_scanner.c\"",
          "3484: yy222:",
          "3485:   YYDEBUG(222, *YYCURSOR);",
          "3486:   ++YYCURSOR;",
          "3487:   YYDEBUG(223, *YYCURSOR);",
          "3488:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3489: #line 1414 \"Zend/zend_language_scanner.l\"",
          "3490:   {",
          "3491:  return T_OR_EQUAL;",
          "3492: }",
          "3493: #line 3494 \"Zend/zend_language_scanner.c\"",
          "3494: yy224:",
          "3495:   YYDEBUG(224, *YYCURSOR);",
          "3496:   ++YYCURSOR;",
          "3497:   YYDEBUG(225, *YYCURSOR);",
          "3498:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3499: #line 1426 \"Zend/zend_language_scanner.l\"",
          "3500:   {",
          "3501:  return T_BOOLEAN_AND;",
          "3502: }",
          "3503: #line 3504 \"Zend/zend_language_scanner.c\"",
          "3504: yy226:",
          "3505:   YYDEBUG(226, *YYCURSOR);",
          "3506:   ++YYCURSOR;",
          "3507:   YYDEBUG(227, *YYCURSOR);",
          "3508:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3509: #line 1410 \"Zend/zend_language_scanner.l\"",
          "3510:   {",
          "3511:  return T_AND_EQUAL;",
          "3512: }",
          "3513: #line 3514 \"Zend/zend_language_scanner.c\"",
          "3514: yy228:",
          "3515:   YYDEBUG(228, *YYCURSOR);",
          "3516:   ++YYCURSOR;",
          "3517:   if ((yych = *YYCURSOR) == '\\n') goto yy232;",
          "3518:   if (yych == '\\r') goto yy233;",
          "3519: yy229:",
          "3520:   YYDEBUG(229, *YYCURSOR);",
          "3521:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3522: #line 1992 \"Zend/zend_language_scanner.l\"",
          "3523:   {",
          "3524:  if (CG(asp_tags)) {",
          "3525:   BEGIN(INITIAL);",
          "3526:   zendlval->value.str.len = yyleng;",
          "3527:   zendlval->type = IS_STRING;",
          "3530:  } else {",
          "3531:   yyless(1);",
          "3532:   return yytext[0];",
          "3533:  }",
          "3534: }",
          "3535: #line 3536 \"Zend/zend_language_scanner.c\"",
          "3536: yy230:",
          "3537:   YYDEBUG(230, *YYCURSOR);",
          "3538:   ++YYCURSOR;",
          "3539:   YYDEBUG(231, *YYCURSOR);",
          "3540:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3541: #line 1398 \"Zend/zend_language_scanner.l\"",
          "3542:   {",
          "3543:  return T_MOD_EQUAL;",
          "3544: }",
          "3545: #line 3546 \"Zend/zend_language_scanner.c\"",
          "3546: yy232:",
          "3547:   YYDEBUG(232, *YYCURSOR);",
          "3548:   yych = *++YYCURSOR;",
          "3549:   goto yy229;",
          "3550: yy233:",
          "3551:   YYDEBUG(233, *YYCURSOR);",
          "3552:   yych = *++YYCURSOR;",
          "3553:   if (yych == '\\n') goto yy232;",
          "3554:   goto yy229;",
          "3555: yy234:",
          "3556:   YYDEBUG(234, *YYCURSOR);",
          "3557:   yyaccept = 3;",
          "3558:   YYMARKER = ++YYCURSOR;",
          "3559:   YYFILL(3);",
          "3560:   yych = *YYCURSOR;",
          "3561:   YYDEBUG(235, *YYCURSOR);",
          "3562:   if (yych <= 'D') {",
          "3563:    if (yych <= '/') goto yy190;",
          "3564:    if (yych <= '9') goto yy234;",
          "3565:    goto yy190;",
          "3566:   } else {",
          "3567:    if (yych <= 'E') goto yy193;",
          "3568:    if (yych == 'e') goto yy193;",
          "3569:    goto yy190;",
          "3570:   }",
          "3571: yy236:",
          "3572:   YYDEBUG(236, *YYCURSOR);",
          "3573:   ++YYCURSOR;",
          "3574:   YYDEBUG(237, *YYCURSOR);",
          "3575:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3576: #line 1394 \"Zend/zend_language_scanner.l\"",
          "3577:   {",
          "3578:  return T_CONCAT_EQUAL;",
          "3579: }",
          "3580: #line 3581 \"Zend/zend_language_scanner.c\"",
          "3581: yy238:",
          "3582:   YYDEBUG(238, *YYCURSOR);",
          "3583:   yyaccept = 4;",
          "3584:   yych = *(YYMARKER = ++YYCURSOR);",
          "3585:   if (yych == '*') goto yy243;",
          "3586: yy239:",
          "3587:   YYDEBUG(239, *YYCURSOR);",
          "3588:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3589: #line 1949 \"Zend/zend_language_scanner.l\"",
          "3590:   {",
          "3591:  int doc_com;",
          "3593:  if (yyleng > 2) {",
          "3594:   doc_com = 1;",
          "3595:   RESET_DOC_COMMENT();",
          "3596:  } else {",
          "3597:   doc_com = 0;",
          "3598:  }",
          "3600:  while (YYCURSOR < YYLIMIT) {",
          "3601:   if (*YYCURSOR++ == '*' && *YYCURSOR == '/') {",
          "3602:    break;",
          "3603:   }",
          "3604:  }",
          "3606:  if (YYCURSOR < YYLIMIT) {",
          "3607:   YYCURSOR++;",
          "3608:  } else {",
          "3609:   zend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));",
          "3610:  }",
          "3612:  yyleng = YYCURSOR - SCNG(yy_text);",
          "3613:  HANDLE_NEWLINES(yytext, yyleng);",
          "3615:  if (doc_com) {",
          "3616:   CG(doc_comment) = estrndup(yytext, yyleng);",
          "3617:   CG(doc_comment_len) = yyleng;",
          "3618:   return T_DOC_COMMENT;",
          "3619:  }",
          "3621:  return T_COMMENT;",
          "3622: }",
          "3623: #line 3624 \"Zend/zend_language_scanner.c\"",
          "3624: yy240:",
          "3625:   YYDEBUG(240, *YYCURSOR);",
          "3626:   yych = *++YYCURSOR;",
          "3627:   goto yy177;",
          "3628: yy241:",
          "3629:   YYDEBUG(241, *YYCURSOR);",
          "3630:   ++YYCURSOR;",
          "3631:   YYDEBUG(242, *YYCURSOR);",
          "3632:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3633: #line 1390 \"Zend/zend_language_scanner.l\"",
          "3634:   {",
          "3635:  return T_DIV_EQUAL;",
          "3636: }",
          "3637: #line 3638 \"Zend/zend_language_scanner.c\"",
          "3638: yy243:",
          "3639:   YYDEBUG(243, *YYCURSOR);",
          "3640:   yych = *++YYCURSOR;",
          "3641:   if (yybm[0+yych] & 64) {",
          "3642:    goto yy244;",
          "3643:   }",
          "3644:   goto yy194;",
          "3645: yy244:",
          "3646:   YYDEBUG(244, *YYCURSOR);",
          "3647:   ++YYCURSOR;",
          "3648:   YYFILL(1);",
          "3649:   yych = *YYCURSOR;",
          "3650:   YYDEBUG(245, *YYCURSOR);",
          "3651:   if (yybm[0+yych] & 64) {",
          "3652:    goto yy244;",
          "3653:   }",
          "3654:   goto yy239;",
          "3655: yy246:",
          "3656:   YYDEBUG(246, *YYCURSOR);",
          "3657:   ++YYCURSOR;",
          "3658:   YYDEBUG(247, *YYCURSOR);",
          "3659:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3660: #line 1386 \"Zend/zend_language_scanner.l\"",
          "3661:   {",
          "3662:  return T_MUL_EQUAL;",
          "3663: }",
          "3664: #line 3665 \"Zend/zend_language_scanner.c\"",
          "3665: yy248:",
          "3666:   YYDEBUG(248, *YYCURSOR);",
          "3667:   ++YYCURSOR;",
          "3668:   if ((yych = *YYCURSOR) == '=') goto yy252;",
          "3669:   YYDEBUG(249, *YYCURSOR);",
          "3670:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3671: #line 1446 \"Zend/zend_language_scanner.l\"",
          "3672:   {",
          "3673:  return T_SR;",
          "3674: }",
          "3675: #line 3676 \"Zend/zend_language_scanner.c\"",
          "3676: yy250:",
          "3677:   YYDEBUG(250, *YYCURSOR);",
          "3678:   ++YYCURSOR;",
          "3679:   YYDEBUG(251, *YYCURSOR);",
          "3680:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3681: #line 1374 \"Zend/zend_language_scanner.l\"",
          "3682:   {",
          "3683:  return T_IS_GREATER_OR_EQUAL;",
          "3684: }",
          "3685: #line 3686 \"Zend/zend_language_scanner.c\"",
          "3686: yy252:",
          "3687:   YYDEBUG(252, *YYCURSOR);",
          "3688:   ++YYCURSOR;",
          "3689:   YYDEBUG(253, *YYCURSOR);",
          "3690:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3691: #line 1406 \"Zend/zend_language_scanner.l\"",
          "3692:   {",
          "3693:  return T_SR_EQUAL;",
          "3694: }",
          "3695: #line 3696 \"Zend/zend_language_scanner.c\"",
          "3696: yy254:",
          "3697:   YYDEBUG(254, *YYCURSOR);",
          "3698:   yyaccept = 5;",
          "3699:   yych = *(YYMARKER = ++YYCURSOR);",
          "3700:   if (yych <= ';') goto yy255;",
          "3701:   if (yych <= '<') goto yy270;",
          "3702:   if (yych <= '=') goto yy268;",
          "3703: yy255:",
          "3704:   YYDEBUG(255, *YYCURSOR);",
          "3705:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3706: #line 1442 \"Zend/zend_language_scanner.l\"",
          "3707:   {",
          "3708:  return T_SL;",
          "3709: }",
          "3710: #line 3711 \"Zend/zend_language_scanner.c\"",
          "3711: yy256:",
          "3712:   YYDEBUG(256, *YYCURSOR);",
          "3713:   yych = *++YYCURSOR;",
          "3714:   if (yych == 'S') goto yy261;",
          "3715:   if (yych == 's') goto yy261;",
          "3716:   goto yy194;",
          "3717: yy257:",
          "3718:   YYDEBUG(257, *YYCURSOR);",
          "3719:   ++YYCURSOR;",
          "3720:   YYDEBUG(258, *YYCURSOR);",
          "3721:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3722: #line 1370 \"Zend/zend_language_scanner.l\"",
          "3723:   {",
          "3724:  return T_IS_SMALLER_OR_EQUAL;",
          "3725: }",
          "3726: #line 3727 \"Zend/zend_language_scanner.c\"",
          "3727: yy259:",
          "3728:   YYDEBUG(259, *YYCURSOR);",
          "3729:   ++YYCURSOR;",
          "3730: yy260:",
          "3731:   YYDEBUG(260, *YYCURSOR);",
          "3732:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3733: #line 1366 \"Zend/zend_language_scanner.l\"",
          "3734:   {",
          "3735:  return T_IS_NOT_EQUAL;",
          "3736: }",
          "3737: #line 3738 \"Zend/zend_language_scanner.c\"",
          "3738: yy261:",
          "3739:   YYDEBUG(261, *YYCURSOR);",
          "3740:   yych = *++YYCURSOR;",
          "3741:   if (yych == 'C') goto yy262;",
          "3742:   if (yych != 'c') goto yy194;",
          "3743: yy262:",
          "3744:   YYDEBUG(262, *YYCURSOR);",
          "3745:   yych = *++YYCURSOR;",
          "3746:   if (yych == 'R') goto yy263;",
          "3747:   if (yych != 'r') goto yy194;",
          "3748: yy263:",
          "3749:   YYDEBUG(263, *YYCURSOR);",
          "3750:   yych = *++YYCURSOR;",
          "3751:   if (yych == 'I') goto yy264;",
          "3752:   if (yych != 'i') goto yy194;",
          "3753: yy264:",
          "3754:   YYDEBUG(264, *YYCURSOR);",
          "3755:   yych = *++YYCURSOR;",
          "3756:   if (yych == 'P') goto yy265;",
          "3757:   if (yych != 'p') goto yy194;",
          "3758: yy265:",
          "3759:   YYDEBUG(265, *YYCURSOR);",
          "3760:   yych = *++YYCURSOR;",
          "3761:   if (yych == 'T') goto yy266;",
          "3762:   if (yych != 't') goto yy194;",
          "3763: yy266:",
          "3764:   YYDEBUG(266, *YYCURSOR);",
          "3765:   ++YYCURSOR;",
          "3766:   YYFILL(3);",
          "3767:   yych = *YYCURSOR;",
          "3768:   YYDEBUG(267, *YYCURSOR);",
          "3769:   if (yych <= '\\r') {",
          "3770:    if (yych <= 0x08) goto yy194;",
          "3771:    if (yych <= '\\n') goto yy266;",
          "3772:    if (yych <= '\\f') goto yy194;",
          "3773:    goto yy266;",
          "3774:   } else {",
          "3775:    if (yych <= ' ') {",
          "3776:     if (yych <= 0x1F) goto yy194;",
          "3777:     goto yy266;",
          "3778:    } else {",
          "3779:     if (yych == '>') goto yy206;",
          "3780:     goto yy194;",
          "3781:    }",
          "3782:   }",
          "3783: yy268:",
          "3784:   YYDEBUG(268, *YYCURSOR);",
          "3785:   ++YYCURSOR;",
          "3786:   YYDEBUG(269, *YYCURSOR);",
          "3787:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3788: #line 1402 \"Zend/zend_language_scanner.l\"",
          "3789:   {",
          "3790:  return T_SL_EQUAL;",
          "3791: }",
          "3792: #line 3793 \"Zend/zend_language_scanner.c\"",
          "3793: yy270:",
          "3794:   YYDEBUG(270, *YYCURSOR);",
          "3795:   ++YYCURSOR;",
          "3796:   YYFILL(2);",
          "3797:   yych = *YYCURSOR;",
          "3798:   YYDEBUG(271, *YYCURSOR);",
          "3799:   if (yybm[0+yych] & 128) {",
          "3800:    goto yy270;",
          "3801:   }",
          "3802:   if (yych <= 'Z') {",
          "3803:    if (yych <= '&') {",
          "3804:     if (yych == '\"') goto yy275;",
          "3805:     goto yy194;",
          "3806:    } else {",
          "3807:     if (yych <= '\\'') goto yy274;",
          "3808:     if (yych <= '@') goto yy194;",
          "3809:    }",
          "3810:   } else {",
          "3811:    if (yych <= '`') {",
          "3812:     if (yych != '_') goto yy194;",
          "3813:    } else {",
          "3814:     if (yych <= 'z') goto yy272;",
          "3815:     if (yych <= '~') goto yy194;",
          "3816:    }",
          "3817:   }",
          "3818: yy272:",
          "3819:   YYDEBUG(272, *YYCURSOR);",
          "3820:   ++YYCURSOR;",
          "3821:   YYFILL(2);",
          "3822:   yych = *YYCURSOR;",
          "3823:   YYDEBUG(273, *YYCURSOR);",
          "3824:   if (yych <= '@') {",
          "3825:    if (yych <= '\\f') {",
          "3826:     if (yych == '\\n') goto yy279;",
          "3827:     goto yy194;",
          "3828:    } else {",
          "3829:     if (yych <= '\\r') goto yy281;",
          "3830:     if (yych <= '/') goto yy194;",
          "3831:     if (yych <= '9') goto yy272;",
          "3832:     goto yy194;",
          "3833:    }",
          "3834:   } else {",
          "3835:    if (yych <= '_') {",
          "3836:     if (yych <= 'Z') goto yy272;",
          "3837:     if (yych <= '^') goto yy194;",
          "3838:     goto yy272;",
          "3839:    } else {",
          "3840:     if (yych <= '`') goto yy194;",
          "3841:     if (yych <= 'z') goto yy272;",
          "3842:     if (yych <= '~') goto yy194;",
          "3843:     goto yy272;",
          "3844:    }",
          "3845:   }",
          "3846: yy274:",
          "3847:   YYDEBUG(274, *YYCURSOR);",
          "3848:   yych = *++YYCURSOR;",
          "3849:   if (yych == '\\'') goto yy194;",
          "3850:   if (yych <= '/') goto yy283;",
          "3851:   if (yych <= '9') goto yy194;",
          "3852:   goto yy283;",
          "3853: yy275:",
          "3854:   YYDEBUG(275, *YYCURSOR);",
          "3855:   yych = *++YYCURSOR;",
          "3856:   if (yych == '\"') goto yy194;",
          "3857:   if (yych <= '/') goto yy277;",
          "3858:   if (yych <= '9') goto yy194;",
          "3859:   goto yy277;",
          "3860: yy276:",
          "3861:   YYDEBUG(276, *YYCURSOR);",
          "3862:   ++YYCURSOR;",
          "3863:   YYFILL(3);",
          "3864:   yych = *YYCURSOR;",
          "3865: yy277:",
          "3866:   YYDEBUG(277, *YYCURSOR);",
          "3867:   if (yych <= 'Z') {",
          "3868:    if (yych <= '/') {",
          "3869:     if (yych != '\"') goto yy194;",
          "3870:    } else {",
          "3871:     if (yych <= '9') goto yy276;",
          "3872:     if (yych <= '@') goto yy194;",
          "3873:     goto yy276;",
          "3874:    }",
          "3875:   } else {",
          "3876:    if (yych <= '`') {",
          "3877:     if (yych == '_') goto yy276;",
          "3878:     goto yy194;",
          "3879:    } else {",
          "3880:     if (yych <= 'z') goto yy276;",
          "3881:     if (yych <= '~') goto yy194;",
          "3882:     goto yy276;",
          "3883:    }",
          "3884:   }",
          "3885: yy278:",
          "3886:   YYDEBUG(278, *YYCURSOR);",
          "3887:   yych = *++YYCURSOR;",
          "3888:   if (yych == '\\n') goto yy279;",
          "3889:   if (yych == '\\r') goto yy281;",
          "3890:   goto yy194;",
          "3891: yy279:",
          "3892:   YYDEBUG(279, *YYCURSOR);",
          "3893:   ++YYCURSOR;",
          "3894: yy280:",
          "3895:   YYDEBUG(280, *YYCURSOR);",
          "3896:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3897: #line 2117 \"Zend/zend_language_scanner.l\"",
          "3898:   {",
          "3899:  char *s;",
          "3900:  int bprefix = (yytext[0] != '<') ? 1 : 0;",
          "3901:  zend_heredoc_label *heredoc_label = emalloc(sizeof(zend_heredoc_label));",
          "3903:  CG(zend_lineno)++;",
          "3904:  heredoc_label->length = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);",
          "3905:  s = yytext+bprefix+3;",
          "3906:  while ((*s == ' ') || (*s == '\\t')) {",
          "3907:   s++;",
          "3908:   heredoc_label->length--;",
          "3909:  }",
          "3911:  if (*s == '\\'') {",
          "3912:   s++;",
          "3913:   heredoc_label->length -= 2;",
          "3915:   BEGIN(ST_NOWDOC);",
          "3916:  } else {",
          "3917:   if (*s == '\"') {",
          "3918:    s++;",
          "3919:    heredoc_label->length -= 2;",
          "3920:   }",
          "3922:   BEGIN(ST_HEREDOC);",
          "3923:  }",
          "3925:  heredoc_label->label = estrndup(s, heredoc_label->length);",
          "3928:  if (heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, heredoc_label->length)) {",
          "3929:   YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "3931:   if (*end == ';') {",
          "3932:    end++;",
          "3933:   }",
          "3935:   if (*end == '\\n' || *end == '\\r') {",
          "3936:    BEGIN(ST_END_HEREDOC);",
          "3937:   }",
          "3938:  }",
          "3940:  zend_ptr_stack_push(&SCNG(heredoc_label_stack), (void *) heredoc_label);",
          "3942:  return T_START_HEREDOC;",
          "3943: }",
          "3944: #line 3945 \"Zend/zend_language_scanner.c\"",
          "3945: yy281:",
          "3946:   YYDEBUG(281, *YYCURSOR);",
          "3947:   yych = *++YYCURSOR;",
          "3948:   if (yych == '\\n') goto yy279;",
          "3949:   goto yy280;",
          "3950: yy282:",
          "3951:   YYDEBUG(282, *YYCURSOR);",
          "3952:   ++YYCURSOR;",
          "3953:   YYFILL(3);",
          "3954:   yych = *YYCURSOR;",
          "3955: yy283:",
          "3956:   YYDEBUG(283, *YYCURSOR);",
          "3957:   if (yych <= 'Z') {",
          "3958:    if (yych <= '/') {",
          "3959:     if (yych == '\\'') goto yy278;",
          "3960:     goto yy194;",
          "3961:    } else {",
          "3962:     if (yych <= '9') goto yy282;",
          "3963:     if (yych <= '@') goto yy194;",
          "3964:     goto yy282;",
          "3965:    }",
          "3966:   } else {",
          "3967:    if (yych <= '`') {",
          "3968:     if (yych == '_') goto yy282;",
          "3969:     goto yy194;",
          "3970:    } else {",
          "3971:     if (yych <= 'z') goto yy282;",
          "3972:     if (yych <= '~') goto yy194;",
          "3973:     goto yy282;",
          "3974:    }",
          "3975:   }",
          "3976: yy284:",
          "3977:   YYDEBUG(284, *YYCURSOR);",
          "3978:   yych = *++YYCURSOR;",
          "3979:   if (yych != '=') goto yy260;",
          "3980:   YYDEBUG(285, *YYCURSOR);",
          "3981:   ++YYCURSOR;",
          "3982:   YYDEBUG(286, *YYCURSOR);",
          "3983:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3984: #line 1358 \"Zend/zend_language_scanner.l\"",
          "3985:   {",
          "3986:  return T_IS_NOT_IDENTICAL;",
          "3987: }",
          "3988: #line 3989 \"Zend/zend_language_scanner.c\"",
          "3989: yy287:",
          "3990:   YYDEBUG(287, *YYCURSOR);",
          "3991:   ++YYCURSOR;",
          "3992:   YYDEBUG(288, *YYCURSOR);",
          "3993:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3994: #line 1378 \"Zend/zend_language_scanner.l\"",
          "3995:   {",
          "3996:  return T_PLUS_EQUAL;",
          "3997: }",
          "3998: #line 3999 \"Zend/zend_language_scanner.c\"",
          "3999: yy289:",
          "4000:   YYDEBUG(289, *YYCURSOR);",
          "4001:   ++YYCURSOR;",
          "4002:   YYDEBUG(290, *YYCURSOR);",
          "4003:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4004: #line 1346 \"Zend/zend_language_scanner.l\"",
          "4005:   {",
          "4006:  return T_INC;",
          "4007: }",
          "4008: #line 4009 \"Zend/zend_language_scanner.c\"",
          "4009: yy291:",
          "4010:   YYDEBUG(291, *YYCURSOR);",
          "4011:   yych = *++YYCURSOR;",
          "4012:   if (yych == 'S') goto yy292;",
          "4013:   if (yych != 's') goto yy187;",
          "4014: yy292:",
          "4015:   YYDEBUG(292, *YYCURSOR);",
          "4016:   yych = *++YYCURSOR;",
          "4017:   if (yych == 'T') goto yy293;",
          "4018:   if (yych != 't') goto yy187;",
          "4019: yy293:",
          "4020:   YYDEBUG(293, *YYCURSOR);",
          "4021:   ++YYCURSOR;",
          "4022:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4023:    goto yy186;",
          "4024:   }",
          "4025:   YYDEBUG(294, *YYCURSOR);",
          "4026:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4027: #line 1334 \"Zend/zend_language_scanner.l\"",
          "4028:   {",
          "4029:  return T_LIST;",
          "4030: }",
          "4031: #line 4032 \"Zend/zend_language_scanner.c\"",
          "4032: yy295:",
          "4033:   YYDEBUG(295, *YYCURSOR);",
          "4034:   ++YYCURSOR;",
          "4035:   if ((yych = *YYCURSOR) == '=') goto yy299;",
          "4036:   YYDEBUG(296, *YYCURSOR);",
          "4037:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4038: #line 1362 \"Zend/zend_language_scanner.l\"",
          "4039:   {",
          "4040:  return T_IS_EQUAL;",
          "4041: }",
          "4042: #line 4043 \"Zend/zend_language_scanner.c\"",
          "4043: yy297:",
          "4044:   YYDEBUG(297, *YYCURSOR);",
          "4045:   ++YYCURSOR;",
          "4046:   YYDEBUG(298, *YYCURSOR);",
          "4047:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4048: #line 1330 \"Zend/zend_language_scanner.l\"",
          "4049:   {",
          "4050:  return T_DOUBLE_ARROW;",
          "4051: }",
          "4052: #line 4053 \"Zend/zend_language_scanner.c\"",
          "4053: yy299:",
          "4054:   YYDEBUG(299, *YYCURSOR);",
          "4055:   ++YYCURSOR;",
          "4056:   YYDEBUG(300, *YYCURSOR);",
          "4057:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4058: #line 1354 \"Zend/zend_language_scanner.l\"",
          "4059:   {",
          "4060:  return T_IS_IDENTICAL;",
          "4061: }",
          "4062: #line 4063 \"Zend/zend_language_scanner.c\"",
          "4063: yy301:",
          "4064:   YYDEBUG(301, *YYCURSOR);",
          "4065:   yych = *++YYCURSOR;",
          "4066:   YYDEBUG(-1, yych);",
          "4067:   switch (yych) {",
          "4068:   case 'C':",
          "4069:   case 'c': goto yy303;",
          "4070:   case 'D':",
          "4071:   case 'd': goto yy308;",
          "4072:   case 'F':",
          "4073:   case 'f': goto yy305;",
          "4074:   case 'H':",
          "4075:   case 'h': goto yy302;",
          "4076:   case 'L':",
          "4077:   case 'l': goto yy307;",
          "4078:   case 'M':",
          "4079:   case 'm': goto yy306;",
          "4080:   case 'N':",
          "4081:   case 'n': goto yy309;",
          "4082:   case 'T':",
          "4083:   case 't': goto yy304;",
          "4084:   default: goto yy187;",
          "4085:   }",
          "4086: yy302:",
          "4087:   YYDEBUG(302, *YYCURSOR);",
          "4088:   yych = *++YYCURSOR;",
          "4089:   if (yych == 'A') goto yy370;",
          "4090:   if (yych == 'a') goto yy370;",
          "4091:   goto yy187;",
          "4092: yy303:",
          "4093:   YYDEBUG(303, *YYCURSOR);",
          "4094:   yych = *++YYCURSOR;",
          "4095:   if (yych == 'L') goto yy363;",
          "4096:   if (yych == 'l') goto yy363;",
          "4097:   goto yy187;",
          "4098: yy304:",
          "4099:   YYDEBUG(304, *YYCURSOR);",
          "4100:   yych = *++YYCURSOR;",
          "4101:   if (yych == 'R') goto yy356;",
          "4102:   if (yych == 'r') goto yy356;",
          "4103:   goto yy187;",
          "4104: yy305:",
          "4105:   YYDEBUG(305, *YYCURSOR);",
          "4106:   yych = *++YYCURSOR;",
          "4107:   if (yych <= 'U') {",
          "4108:    if (yych == 'I') goto yy340;",
          "4109:    if (yych <= 'T') goto yy187;",
          "4110:    goto yy341;",
          "4111:   } else {",
          "4112:    if (yych <= 'i') {",
          "4113:     if (yych <= 'h') goto yy187;",
          "4114:     goto yy340;",
          "4115:    } else {",
          "4116:     if (yych == 'u') goto yy341;",
          "4117:     goto yy187;",
          "4118:    }",
          "4119:   }",
          "4120: yy306:",
          "4121:   YYDEBUG(306, *YYCURSOR);",
          "4122:   yych = *++YYCURSOR;",
          "4123:   if (yych == 'E') goto yy332;",
          "4124:   if (yych == 'e') goto yy332;",
          "4125:   goto yy187;",
          "4126: yy307:",
          "4127:   YYDEBUG(307, *YYCURSOR);",
          "4128:   yych = *++YYCURSOR;",
          "4129:   if (yych == 'I') goto yy326;",
          "4130:   if (yych == 'i') goto yy326;",
          "4131:   goto yy187;",
          "4132: yy308:",
          "4133:   YYDEBUG(308, *YYCURSOR);",
          "4134:   yych = *++YYCURSOR;",
          "4135:   if (yych == 'I') goto yy321;",
          "4136:   if (yych == 'i') goto yy321;",
          "4137:   goto yy187;",
          "4138: yy309:",
          "4139:   YYDEBUG(309, *YYCURSOR);",
          "4140:   yych = *++YYCURSOR;",
          "4141:   if (yych == 'A') goto yy310;",
          "4142:   if (yych != 'a') goto yy187;",
          "4143: yy310:",
          "4144:   YYDEBUG(310, *YYCURSOR);",
          "4145:   yych = *++YYCURSOR;",
          "4146:   if (yych == 'M') goto yy311;",
          "4147:   if (yych != 'm') goto yy187;",
          "4148: yy311:",
          "4149:   YYDEBUG(311, *YYCURSOR);",
          "4150:   yych = *++YYCURSOR;",
          "4151:   if (yych == 'E') goto yy312;",
          "4152:   if (yych != 'e') goto yy187;",
          "4153: yy312:",
          "4154:   YYDEBUG(312, *YYCURSOR);",
          "4155:   yych = *++YYCURSOR;",
          "4156:   if (yych == 'S') goto yy313;",
          "4157:   if (yych != 's') goto yy187;",
          "4158: yy313:",
          "4159:   YYDEBUG(313, *YYCURSOR);",
          "4160:   yych = *++YYCURSOR;",
          "4161:   if (yych == 'P') goto yy314;",
          "4162:   if (yych != 'p') goto yy187;",
          "4163: yy314:",
          "4164:   YYDEBUG(314, *YYCURSOR);",
          "4165:   yych = *++YYCURSOR;",
          "4166:   if (yych == 'A') goto yy315;",
          "4167:   if (yych != 'a') goto yy187;",
          "4168: yy315:",
          "4169:   YYDEBUG(315, *YYCURSOR);",
          "4170:   yych = *++YYCURSOR;",
          "4171:   if (yych == 'C') goto yy316;",
          "4172:   if (yych != 'c') goto yy187;",
          "4173: yy316:",
          "4174:   YYDEBUG(316, *YYCURSOR);",
          "4175:   yych = *++YYCURSOR;",
          "4176:   if (yych == 'E') goto yy317;",
          "4177:   if (yych != 'e') goto yy187;",
          "4178: yy317:",
          "4179:   YYDEBUG(317, *YYCURSOR);",
          "4180:   yych = *++YYCURSOR;",
          "4181:   if (yych != '_') goto yy187;",
          "4182:   YYDEBUG(318, *YYCURSOR);",
          "4183:   yych = *++YYCURSOR;",
          "4184:   if (yych != '_') goto yy187;",
          "4185:   YYDEBUG(319, *YYCURSOR);",
          "4186:   ++YYCURSOR;",
          "4187:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4188:    goto yy186;",
          "4189:   }",
          "4190:   YYDEBUG(320, *YYCURSOR);",
          "4191:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4192: #line 1718 \"Zend/zend_language_scanner.l\"",
          "4193:   {",
          "4194:  if (CG(current_namespace)) {",
          "4196:   zval_copy_ctor(zendlval);",
          "4197:  } else {",
          "4198:   ZVAL_EMPTY_STRING(zendlval);",
          "4199:  }",
          "4200:  return T_NS_C;",
          "4201: }",
          "4202: #line 4203 \"Zend/zend_language_scanner.c\"",
          "4203: yy321:",
          "4204:   YYDEBUG(321, *YYCURSOR);",
          "4205:   yych = *++YYCURSOR;",
          "4206:   if (yych == 'R') goto yy322;",
          "4207:   if (yych != 'r') goto yy187;",
          "4208: yy322:",
          "4209:   YYDEBUG(322, *YYCURSOR);",
          "4210:   yych = *++YYCURSOR;",
          "4211:   if (yych != '_') goto yy187;",
          "4212:   YYDEBUG(323, *YYCURSOR);",
          "4213:   yych = *++YYCURSOR;",
          "4214:   if (yych != '_') goto yy187;",
          "4215:   YYDEBUG(324, *YYCURSOR);",
          "4216:   ++YYCURSOR;",
          "4217:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4218:    goto yy186;",
          "4219:   }",
          "4220:   YYDEBUG(325, *YYCURSOR);",
          "4221:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4222: #line 1691 \"Zend/zend_language_scanner.l\"",
          "4223:   {",
          "4224:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "4225:  const size_t filename_len = strlen(filename);",
          "4226:  char *dirname;",
          "4228:  if (!filename) {",
          "4229:   filename = \"\";",
          "4230:  }",
          "4232:  dirname = estrndup(filename, filename_len);",
          "4233:  zend_dirname(dirname, filename_len);",
          "4235:  if (strcmp(dirname, \".\") == 0) {",
          "4236:   dirname = erealloc(dirname, MAXPATHLEN);",
          "4237: #if HAVE_GETCWD",
          "4238:   VCWD_GETCWD(dirname, MAXPATHLEN);",
          "4239: #elif HAVE_GETWD",
          "4240:   VCWD_GETWD(dirname);",
          "4241: #endif",
          "4242:  }",
          "4244:  zendlval->value.str.len = strlen(dirname);",
          "4245:  zendlval->value.str.val = dirname;",
          "4246:  zendlval->type = IS_STRING;",
          "4247:  return T_DIR;",
          "4248: }",
          "4249: #line 4250 \"Zend/zend_language_scanner.c\"",
          "4250: yy326:",
          "4251:   YYDEBUG(326, *YYCURSOR);",
          "4252:   yych = *++YYCURSOR;",
          "4253:   if (yych == 'N') goto yy327;",
          "4254:   if (yych != 'n') goto yy187;",
          "4255: yy327:",
          "4256:   YYDEBUG(327, *YYCURSOR);",
          "4257:   yych = *++YYCURSOR;",
          "4258:   if (yych == 'E') goto yy328;",
          "4259:   if (yych != 'e') goto yy187;",
          "4260: yy328:",
          "4261:   YYDEBUG(328, *YYCURSOR);",
          "4262:   yych = *++YYCURSOR;",
          "4263:   if (yych != '_') goto yy187;",
          "4264:   YYDEBUG(329, *YYCURSOR);",
          "4265:   yych = *++YYCURSOR;",
          "4266:   if (yych != '_') goto yy187;",
          "4267:   YYDEBUG(330, *YYCURSOR);",
          "4268:   ++YYCURSOR;",
          "4269:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4270:    goto yy186;",
          "4271:   }",
          "4272:   YYDEBUG(331, *YYCURSOR);",
          "4273:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4274: #line 1673 \"Zend/zend_language_scanner.l\"",
          "4275:   {",
          "4276:  zendlval->value.lval = CG(zend_lineno);",
          "4277:  zendlval->type = IS_LONG;",
          "4278:  return T_LINE;",
          "4279: }",
          "4280: #line 4281 \"Zend/zend_language_scanner.c\"",
          "4281: yy332:",
          "4282:   YYDEBUG(332, *YYCURSOR);",
          "4283:   yych = *++YYCURSOR;",
          "4284:   if (yych == 'T') goto yy333;",
          "4285:   if (yych != 't') goto yy187;",
          "4286: yy333:",
          "4287:   YYDEBUG(333, *YYCURSOR);",
          "4288:   yych = *++YYCURSOR;",
          "4289:   if (yych == 'H') goto yy334;",
          "4290:   if (yych != 'h') goto yy187;",
          "4291: yy334:",
          "4292:   YYDEBUG(334, *YYCURSOR);",
          "4293:   yych = *++YYCURSOR;",
          "4294:   if (yych == 'O') goto yy335;",
          "4295:   if (yych != 'o') goto yy187;",
          "4296: yy335:",
          "4297:   YYDEBUG(335, *YYCURSOR);",
          "4298:   yych = *++YYCURSOR;",
          "4299:   if (yych == 'D') goto yy336;",
          "4300:   if (yych != 'd') goto yy187;",
          "4301: yy336:",
          "4302:   YYDEBUG(336, *YYCURSOR);",
          "4303:   yych = *++YYCURSOR;",
          "4304:   if (yych != '_') goto yy187;",
          "4305:   YYDEBUG(337, *YYCURSOR);",
          "4306:   yych = *++YYCURSOR;",
          "4307:   if (yych != '_') goto yy187;",
          "4308:   YYDEBUG(338, *YYCURSOR);",
          "4309:   ++YYCURSOR;",
          "4310:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4311:    goto yy186;",
          "4312:   }",
          "4313:   YYDEBUG(339, *YYCURSOR);",
          "4314:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4315: #line 1652 \"Zend/zend_language_scanner.l\"",
          "4316:   {",
          "4317:  const char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;",
          "4318:  const char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;",
          "4319:  size_t len = 0;",
          "4321:  if (class_name) {",
          "4322:   len += strlen(class_name) + 2;",
          "4323:  }",
          "4324:  if (func_name) {",
          "4325:   len += strlen(func_name);",
          "4326:  }",
          "4328:  zendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",",
          "4329:   class_name ? class_name : \"\",",
          "4330:   class_name && func_name ? \"::\" : \"\",",
          "4331:   func_name ? func_name : \"\"",
          "4332:   );",
          "4333:  zendlval->type = IS_STRING;",
          "4334:  return T_METHOD_C;",
          "4335: }",
          "4336: #line 4337 \"Zend/zend_language_scanner.c\"",
          "4337: yy340:",
          "4338:   YYDEBUG(340, *YYCURSOR);",
          "4339:   yych = *++YYCURSOR;",
          "4340:   if (yych == 'L') goto yy351;",
          "4341:   if (yych == 'l') goto yy351;",
          "4342:   goto yy187;",
          "4343: yy341:",
          "4344:   YYDEBUG(341, *YYCURSOR);",
          "4345:   yych = *++YYCURSOR;",
          "4346:   if (yych == 'N') goto yy342;",
          "4347:   if (yych != 'n') goto yy187;",
          "4348: yy342:",
          "4349:   YYDEBUG(342, *YYCURSOR);",
          "4350:   yych = *++YYCURSOR;",
          "4351:   if (yych == 'C') goto yy343;",
          "4352:   if (yych != 'c') goto yy187;",
          "4353: yy343:",
          "4354:   YYDEBUG(343, *YYCURSOR);",
          "4355:   yych = *++YYCURSOR;",
          "4356:   if (yych == 'T') goto yy344;",
          "4357:   if (yych != 't') goto yy187;",
          "4358: yy344:",
          "4359:   YYDEBUG(344, *YYCURSOR);",
          "4360:   yych = *++YYCURSOR;",
          "4361:   if (yych == 'I') goto yy345;",
          "4362:   if (yych != 'i') goto yy187;",
          "4363: yy345:",
          "4364:   YYDEBUG(345, *YYCURSOR);",
          "4365:   yych = *++YYCURSOR;",
          "4366:   if (yych == 'O') goto yy346;",
          "4367:   if (yych != 'o') goto yy187;",
          "4368: yy346:",
          "4369:   YYDEBUG(346, *YYCURSOR);",
          "4370:   yych = *++YYCURSOR;",
          "4371:   if (yych == 'N') goto yy347;",
          "4372:   if (yych != 'n') goto yy187;",
          "4373: yy347:",
          "4374:   YYDEBUG(347, *YYCURSOR);",
          "4375:   yych = *++YYCURSOR;",
          "4376:   if (yych != '_') goto yy187;",
          "4377:   YYDEBUG(348, *YYCURSOR);",
          "4378:   yych = *++YYCURSOR;",
          "4379:   if (yych != '_') goto yy187;",
          "4380:   YYDEBUG(349, *YYCURSOR);",
          "4381:   ++YYCURSOR;",
          "4382:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4383:    goto yy186;",
          "4384:   }",
          "4385:   YYDEBUG(350, *YYCURSOR);",
          "4386:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4387: #line 1636 \"Zend/zend_language_scanner.l\"",
          "4388:   {",
          "4389:  const char *func_name = NULL;",
          "4391:  if (CG(active_op_array)) {",
          "4392:   func_name = CG(active_op_array)->function_name;",
          "4393:  }",
          "4395:  if (!func_name) {",
          "4396:   func_name = \"\";",
          "4397:  }",
          "4398:  zendlval->value.str.len = strlen(func_name);",
          "4399:  zendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);",
          "4400:  zendlval->type = IS_STRING;",
          "4401:  return T_FUNC_C;",
          "4402: }",
          "4403: #line 4404 \"Zend/zend_language_scanner.c\"",
          "4404: yy351:",
          "4405:   YYDEBUG(351, *YYCURSOR);",
          "4406:   yych = *++YYCURSOR;",
          "4407:   if (yych == 'E') goto yy352;",
          "4408:   if (yych != 'e') goto yy187;",
          "4409: yy352:",
          "4410:   YYDEBUG(352, *YYCURSOR);",
          "4411:   yych = *++YYCURSOR;",
          "4412:   if (yych != '_') goto yy187;",
          "4413:   YYDEBUG(353, *YYCURSOR);",
          "4414:   yych = *++YYCURSOR;",
          "4415:   if (yych != '_') goto yy187;",
          "4416:   YYDEBUG(354, *YYCURSOR);",
          "4417:   ++YYCURSOR;",
          "4418:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4419:    goto yy186;",
          "4420:   }",
          "4421:   YYDEBUG(355, *YYCURSOR);",
          "4422:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4423: #line 1679 \"Zend/zend_language_scanner.l\"",
          "4424:   {",
          "4425:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "4427:  if (!filename) {",
          "4428:   filename = \"\";",
          "4429:  }",
          "4430:  zendlval->value.str.len = strlen(filename);",
          "4431:  zendlval->value.str.val = estrndup(filename, zendlval->value.str.len);",
          "4432:  zendlval->type = IS_STRING;",
          "4433:  return T_FILE;",
          "4434: }",
          "4435: #line 4436 \"Zend/zend_language_scanner.c\"",
          "4436: yy356:",
          "4437:   YYDEBUG(356, *YYCURSOR);",
          "4438:   yych = *++YYCURSOR;",
          "4439:   if (yych == 'A') goto yy357;",
          "4440:   if (yych != 'a') goto yy187;",
          "4441: yy357:",
          "4442:   YYDEBUG(357, *YYCURSOR);",
          "4443:   yych = *++YYCURSOR;",
          "4444:   if (yych == 'I') goto yy358;",
          "4445:   if (yych != 'i') goto yy187;",
          "4446: yy358:",
          "4447:   YYDEBUG(358, *YYCURSOR);",
          "4448:   yych = *++YYCURSOR;",
          "4449:   if (yych == 'T') goto yy359;",
          "4450:   if (yych != 't') goto yy187;",
          "4451: yy359:",
          "4452:   YYDEBUG(359, *YYCURSOR);",
          "4453:   yych = *++YYCURSOR;",
          "4454:   if (yych != '_') goto yy187;",
          "4455:   YYDEBUG(360, *YYCURSOR);",
          "4456:   yych = *++YYCURSOR;",
          "4457:   if (yych != '_') goto yy187;",
          "4458:   YYDEBUG(361, *YYCURSOR);",
          "4459:   ++YYCURSOR;",
          "4460:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4461:    goto yy186;",
          "4462:   }",
          "4463:   YYDEBUG(362, *YYCURSOR);",
          "4464:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4465: #line 1616 \"Zend/zend_language_scanner.l\"",
          "4466:   {",
          "4467:  const char *trait_name = NULL;",
          "4469:  if (CG(active_class_entry)",
          "4470:   && (ZEND_ACC_TRAIT ==",
          "4471:    (CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {",
          "4472:   trait_name = CG(active_class_entry)->name;",
          "4473:  }",
          "4475:  if (!trait_name) {",
          "4476:   trait_name = \"\";",
          "4477:  }",
          "4479:  zendlval->value.str.len = strlen(trait_name);",
          "4480:  zendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);",
          "4481:  zendlval->type = IS_STRING;",
          "4483:  return T_TRAIT_C;",
          "4484: }",
          "4485: #line 4486 \"Zend/zend_language_scanner.c\"",
          "4486: yy363:",
          "4487:   YYDEBUG(363, *YYCURSOR);",
          "4488:   yych = *++YYCURSOR;",
          "4489:   if (yych == 'A') goto yy364;",
          "4490:   if (yych != 'a') goto yy187;",
          "4491: yy364:",
          "4492:   YYDEBUG(364, *YYCURSOR);",
          "4493:   yych = *++YYCURSOR;",
          "4494:   if (yych == 'S') goto yy365;",
          "4495:   if (yych != 's') goto yy187;",
          "4496: yy365:",
          "4497:   YYDEBUG(365, *YYCURSOR);",
          "4498:   yych = *++YYCURSOR;",
          "4499:   if (yych == 'S') goto yy366;",
          "4500:   if (yych != 's') goto yy187;",
          "4501: yy366:",
          "4502:   YYDEBUG(366, *YYCURSOR);",
          "4503:   yych = *++YYCURSOR;",
          "4504:   if (yych != '_') goto yy187;",
          "4505:   YYDEBUG(367, *YYCURSOR);",
          "4506:   yych = *++YYCURSOR;",
          "4507:   if (yych != '_') goto yy187;",
          "4508:   YYDEBUG(368, *YYCURSOR);",
          "4509:   ++YYCURSOR;",
          "4510:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4511:    goto yy186;",
          "4512:   }",
          "4513:   YYDEBUG(369, *YYCURSOR);",
          "4514:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4515: #line 1589 \"Zend/zend_language_scanner.l\"",
          "4516:   {",
          "4517:  const char *class_name = NULL;",
          "4519:  if (CG(active_class_entry)",
          "4520:   && (ZEND_ACC_TRAIT ==",
          "4521:    (CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {",
          "4524:   zendlval->value.str.len = sizeof(\"__CLASS__\")-1;",
          "4525:   zendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);",
          "4526:   zendlval->type = IS_CONSTANT;",
          "4527:  } else {",
          "4528:   if (CG(active_class_entry)) {",
          "4529:    class_name = CG(active_class_entry)->name;",
          "4530:   }",
          "4532:   if (!class_name) {",
          "4533:    class_name = \"\";",
          "4534:   }",
          "4536:   zendlval->value.str.len = strlen(class_name);",
          "4537:   zendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);",
          "4538:   zendlval->type = IS_STRING;",
          "4539:  }",
          "4540:  return T_CLASS_C;",
          "4541: }",
          "4542: #line 4543 \"Zend/zend_language_scanner.c\"",
          "4543: yy370:",
          "4544:   YYDEBUG(370, *YYCURSOR);",
          "4545:   yych = *++YYCURSOR;",
          "4546:   if (yych == 'L') goto yy371;",
          "4547:   if (yych != 'l') goto yy187;",
          "4548: yy371:",
          "4549:   YYDEBUG(371, *YYCURSOR);",
          "4550:   yych = *++YYCURSOR;",
          "4551:   if (yych == 'T') goto yy372;",
          "4552:   if (yych != 't') goto yy187;",
          "4553: yy372:",
          "4554:   YYDEBUG(372, *YYCURSOR);",
          "4555:   yych = *++YYCURSOR;",
          "4556:   if (yych != '_') goto yy187;",
          "4557:   YYDEBUG(373, *YYCURSOR);",
          "4558:   yych = *++YYCURSOR;",
          "4559:   if (yych == 'C') goto yy374;",
          "4560:   if (yych != 'c') goto yy187;",
          "4561: yy374:",
          "4562:   YYDEBUG(374, *YYCURSOR);",
          "4563:   yych = *++YYCURSOR;",
          "4564:   if (yych == 'O') goto yy375;",
          "4565:   if (yych != 'o') goto yy187;",
          "4566: yy375:",
          "4567:   YYDEBUG(375, *YYCURSOR);",
          "4568:   yych = *++YYCURSOR;",
          "4569:   if (yych == 'M') goto yy376;",
          "4570:   if (yych != 'm') goto yy187;",
          "4571: yy376:",
          "4572:   YYDEBUG(376, *YYCURSOR);",
          "4573:   yych = *++YYCURSOR;",
          "4574:   if (yych == 'P') goto yy377;",
          "4575:   if (yych != 'p') goto yy187;",
          "4576: yy377:",
          "4577:   YYDEBUG(377, *YYCURSOR);",
          "4578:   yych = *++YYCURSOR;",
          "4579:   if (yych == 'I') goto yy378;",
          "4580:   if (yych != 'i') goto yy187;",
          "4581: yy378:",
          "4582:   YYDEBUG(378, *YYCURSOR);",
          "4583:   yych = *++YYCURSOR;",
          "4584:   if (yych == 'L') goto yy379;",
          "4585:   if (yych != 'l') goto yy187;",
          "4586: yy379:",
          "4587:   YYDEBUG(379, *YYCURSOR);",
          "4588:   yych = *++YYCURSOR;",
          "4589:   if (yych == 'E') goto yy380;",
          "4590:   if (yych != 'e') goto yy187;",
          "4591: yy380:",
          "4592:   YYDEBUG(380, *YYCURSOR);",
          "4593:   yych = *++YYCURSOR;",
          "4594:   if (yych == 'R') goto yy381;",
          "4595:   if (yych != 'r') goto yy187;",
          "4596: yy381:",
          "4597:   YYDEBUG(381, *YYCURSOR);",
          "4598:   ++YYCURSOR;",
          "4599:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4600:    goto yy186;",
          "4601:   }",
          "4602:   YYDEBUG(382, *YYCURSOR);",
          "4603:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4604: #line 1298 \"Zend/zend_language_scanner.l\"",
          "4605:   {",
          "4606:  return T_HALT_COMPILER;",
          "4607: }",
          "4608: #line 4609 \"Zend/zend_language_scanner.c\"",
          "4609: yy383:",
          "4610:   YYDEBUG(383, *YYCURSOR);",
          "4611:   yych = *++YYCURSOR;",
          "4612:   if (yych == 'S') goto yy387;",
          "4613:   if (yych == 's') goto yy387;",
          "4614:   goto yy187;",
          "4615: yy384:",
          "4616:   YYDEBUG(384, *YYCURSOR);",
          "4617:   yych = *++YYCURSOR;",
          "4618:   if (yych == 'E') goto yy385;",
          "4619:   if (yych != 'e') goto yy187;",
          "4620: yy385:",
          "4621:   YYDEBUG(385, *YYCURSOR);",
          "4622:   ++YYCURSOR;",
          "4623:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4624:    goto yy186;",
          "4625:   }",
          "4626:   YYDEBUG(386, *YYCURSOR);",
          "4627:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4628: #line 1278 \"Zend/zend_language_scanner.l\"",
          "4629:   {",
          "4630:  return T_USE;",
          "4631: }",
          "4632: #line 4633 \"Zend/zend_language_scanner.c\"",
          "4633: yy387:",
          "4634:   YYDEBUG(387, *YYCURSOR);",
          "4635:   yych = *++YYCURSOR;",
          "4636:   if (yych == 'E') goto yy388;",
          "4637:   if (yych != 'e') goto yy187;",
          "4638: yy388:",
          "4639:   YYDEBUG(388, *YYCURSOR);",
          "4640:   yych = *++YYCURSOR;",
          "4641:   if (yych == 'T') goto yy389;",
          "4642:   if (yych != 't') goto yy187;",
          "4643: yy389:",
          "4644:   YYDEBUG(389, *YYCURSOR);",
          "4645:   ++YYCURSOR;",
          "4646:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4647:    goto yy186;",
          "4648:   }",
          "4649:   YYDEBUG(390, *YYCURSOR);",
          "4650:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4651: #line 1326 \"Zend/zend_language_scanner.l\"",
          "4652:   {",
          "4653:  return T_UNSET;",
          "4654: }",
          "4655: #line 4656 \"Zend/zend_language_scanner.c\"",
          "4656: yy391:",
          "4657:   YYDEBUG(391, *YYCURSOR);",
          "4658:   ++YYCURSOR;",
          "4659:   YYFILL(7);",
          "4660:   yych = *YYCURSOR;",
          "4661: yy392:",
          "4662:   YYDEBUG(392, *YYCURSOR);",
          "4663:   if (yych <= 'S') {",
          "4664:    if (yych <= 'D') {",
          "4665:     if (yych <= ' ') {",
          "4666:      if (yych == '\\t') goto yy391;",
          "4667:      if (yych <= 0x1F) goto yy194;",
          "4668:      goto yy391;",
          "4669:     } else {",
          "4670:      if (yych <= 'A') {",
          "4671:       if (yych <= '@') goto yy194;",
          "4672:       goto yy396;",
          "4673:      } else {",
          "4674:       if (yych <= 'B') goto yy394;",
          "4675:       if (yych <= 'C') goto yy194;",
          "4676:       goto yy399;",
          "4677:      }",
          "4678:     }",
          "4679:    } else {",
          "4680:     if (yych <= 'I') {",
          "4681:      if (yych == 'F') goto yy400;",
          "4682:      if (yych <= 'H') goto yy194;",
          "4683:      goto yy401;",
          "4684:     } else {",
          "4685:      if (yych <= 'O') {",
          "4686:       if (yych <= 'N') goto yy194;",
          "4687:       goto yy395;",
          "4688:      } else {",
          "4689:       if (yych <= 'Q') goto yy194;",
          "4690:       if (yych <= 'R') goto yy398;",
          "4691:       goto yy397;",
          "4692:      }",
          "4693:     }",
          "4694:    }",
          "4695:   } else {",
          "4696:    if (yych <= 'f') {",
          "4697:     if (yych <= 'a') {",
          "4698:      if (yych == 'U') goto yy393;",
          "4699:      if (yych <= '`') goto yy194;",
          "4700:      goto yy396;",
          "4701:     } else {",
          "4702:      if (yych <= 'c') {",
          "4703:       if (yych <= 'b') goto yy394;",
          "4704:       goto yy194;",
          "4705:      } else {",
          "4706:       if (yych <= 'd') goto yy399;",
          "4707:       if (yych <= 'e') goto yy194;",
          "4708:       goto yy400;",
          "4709:      }",
          "4710:     }",
          "4711:    } else {",
          "4712:     if (yych <= 'q') {",
          "4713:      if (yych <= 'i') {",
          "4714:       if (yych <= 'h') goto yy194;",
          "4715:       goto yy401;",
          "4716:      } else {",
          "4717:       if (yych == 'o') goto yy395;",
          "4718:       goto yy194;",
          "4719:      }",
          "4720:     } else {",
          "4721:      if (yych <= 's') {",
          "4722:       if (yych <= 'r') goto yy398;",
          "4723:       goto yy397;",
          "4724:      } else {",
          "4725:       if (yych != 'u') goto yy194;",
          "4726:      }",
          "4727:     }",
          "4728:    }",
          "4729:   }",
          "4730: yy393:",
          "4731:   YYDEBUG(393, *YYCURSOR);",
          "4732:   yych = *++YYCURSOR;",
          "4733:   if (yych == 'N') goto yy460;",
          "4734:   if (yych == 'n') goto yy460;",
          "4735:   goto yy194;",
          "4736: yy394:",
          "4737:   YYDEBUG(394, *YYCURSOR);",
          "4738:   yych = *++YYCURSOR;",
          "4739:   if (yych <= 'O') {",
          "4740:    if (yych == 'I') goto yy447;",
          "4741:    if (yych <= 'N') goto yy194;",
          "4742:    goto yy448;",
          "4743:   } else {",
          "4744:    if (yych <= 'i') {",
          "4745:     if (yych <= 'h') goto yy194;",
          "4746:     goto yy447;",
          "4747:    } else {",
          "4748:     if (yych == 'o') goto yy448;",
          "4749:     goto yy194;",
          "4750:    }",
          "4751:   }",
          "4752: yy395:",
          "4753:   YYDEBUG(395, *YYCURSOR);",
          "4754:   yych = *++YYCURSOR;",
          "4755:   if (yych == 'B') goto yy439;",
          "4756:   if (yych == 'b') goto yy439;",
          "4757:   goto yy194;",
          "4758: yy396:",
          "4759:   YYDEBUG(396, *YYCURSOR);",
          "4760:   yych = *++YYCURSOR;",
          "4761:   if (yych == 'R') goto yy432;",
          "4762:   if (yych == 'r') goto yy432;",
          "4763:   goto yy194;",
          "4764: yy397:",
          "4765:   YYDEBUG(397, *YYCURSOR);",
          "4766:   yych = *++YYCURSOR;",
          "4767:   if (yych == 'T') goto yy424;",
          "4768:   if (yych == 't') goto yy424;",
          "4769:   goto yy194;",
          "4770: yy398:",
          "4771:   YYDEBUG(398, *YYCURSOR);",
          "4772:   yych = *++YYCURSOR;",
          "4773:   if (yych == 'E') goto yy422;",
          "4774:   if (yych == 'e') goto yy422;",
          "4775:   goto yy194;",
          "4776: yy399:",
          "4777:   YYDEBUG(399, *YYCURSOR);",
          "4778:   yych = *++YYCURSOR;",
          "4779:   if (yych == 'O') goto yy418;",
          "4780:   if (yych == 'o') goto yy418;",
          "4781:   goto yy194;",
          "4782: yy400:",
          "4783:   YYDEBUG(400, *YYCURSOR);",
          "4784:   yych = *++YYCURSOR;",
          "4785:   if (yych == 'L') goto yy411;",
          "4786:   if (yych == 'l') goto yy411;",
          "4787:   goto yy194;",
          "4788: yy401:",
          "4789:   YYDEBUG(401, *YYCURSOR);",
          "4790:   yych = *++YYCURSOR;",
          "4791:   if (yych == 'N') goto yy402;",
          "4792:   if (yych != 'n') goto yy194;",
          "4793: yy402:",
          "4794:   YYDEBUG(402, *YYCURSOR);",
          "4795:   yych = *++YYCURSOR;",
          "4796:   if (yych == 'T') goto yy403;",
          "4797:   if (yych != 't') goto yy194;",
          "4798: yy403:",
          "4799:   YYDEBUG(403, *YYCURSOR);",
          "4800:   yych = *++YYCURSOR;",
          "4801:   if (yych == 'E') goto yy404;",
          "4802:   if (yych != 'e') goto yy406;",
          "4803: yy404:",
          "4804:   YYDEBUG(404, *YYCURSOR);",
          "4805:   yych = *++YYCURSOR;",
          "4806:   if (yych == 'G') goto yy409;",
          "4807:   if (yych == 'g') goto yy409;",
          "4808:   goto yy194;",
          "4809: yy405:",
          "4810:   YYDEBUG(405, *YYCURSOR);",
          "4811:   ++YYCURSOR;",
          "4812:   YYFILL(1);",
          "4813:   yych = *YYCURSOR;",
          "4814: yy406:",
          "4815:   YYDEBUG(406, *YYCURSOR);",
          "4816:   if (yych <= 0x1F) {",
          "4817:    if (yych == '\\t') goto yy405;",
          "4818:    goto yy194;",
          "4819:   } else {",
          "4820:    if (yych <= ' ') goto yy405;",
          "4821:    if (yych != ')') goto yy194;",
          "4822:   }",
          "4823:   YYDEBUG(407, *YYCURSOR);",
          "4824:   ++YYCURSOR;",
          "4825:   YYDEBUG(408, *YYCURSOR);",
          "4826:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4827: #line 1226 \"Zend/zend_language_scanner.l\"",
          "4828:   {",
          "4829:  return T_INT_CAST;",
          "4830: }",
          "4831: #line 4832 \"Zend/zend_language_scanner.c\"",
          "4832: yy409:",
          "4833:   YYDEBUG(409, *YYCURSOR);",
          "4834:   yych = *++YYCURSOR;",
          "4835:   if (yych == 'E') goto yy410;",
          "4836:   if (yych != 'e') goto yy194;",
          "4837: yy410:",
          "4838:   YYDEBUG(410, *YYCURSOR);",
          "4839:   yych = *++YYCURSOR;",
          "4840:   if (yych == 'R') goto yy405;",
          "4841:   if (yych == 'r') goto yy405;",
          "4842:   goto yy194;",
          "4843: yy411:",
          "4844:   YYDEBUG(411, *YYCURSOR);",
          "4845:   yych = *++YYCURSOR;",
          "4846:   if (yych == 'O') goto yy412;",
          "4847:   if (yych != 'o') goto yy194;",
          "4848: yy412:",
          "4849:   YYDEBUG(412, *YYCURSOR);",
          "4850:   yych = *++YYCURSOR;",
          "4851:   if (yych == 'A') goto yy413;",
          "4852:   if (yych != 'a') goto yy194;",
          "4853: yy413:",
          "4854:   YYDEBUG(413, *YYCURSOR);",
          "4855:   yych = *++YYCURSOR;",
          "4856:   if (yych == 'T') goto yy414;",
          "4857:   if (yych != 't') goto yy194;",
          "4858: yy414:",
          "4859:   YYDEBUG(414, *YYCURSOR);",
          "4860:   ++YYCURSOR;",
          "4861:   YYFILL(1);",
          "4862:   yych = *YYCURSOR;",
          "4863:   YYDEBUG(415, *YYCURSOR);",
          "4864:   if (yych <= 0x1F) {",
          "4865:    if (yych == '\\t') goto yy414;",
          "4866:    goto yy194;",
          "4867:   } else {",
          "4868:    if (yych <= ' ') goto yy414;",
          "4869:    if (yych != ')') goto yy194;",
          "4870:   }",
          "4871:   YYDEBUG(416, *YYCURSOR);",
          "4872:   ++YYCURSOR;",
          "4873:   YYDEBUG(417, *YYCURSOR);",
          "4874:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4875: #line 1230 \"Zend/zend_language_scanner.l\"",
          "4876:   {",
          "4877:  return T_DOUBLE_CAST;",
          "4878: }",
          "4879: #line 4880 \"Zend/zend_language_scanner.c\"",
          "4880: yy418:",
          "4881:   YYDEBUG(418, *YYCURSOR);",
          "4882:   yych = *++YYCURSOR;",
          "4883:   if (yych == 'U') goto yy419;",
          "4884:   if (yych != 'u') goto yy194;",
          "4885: yy419:",
          "4886:   YYDEBUG(419, *YYCURSOR);",
          "4887:   yych = *++YYCURSOR;",
          "4888:   if (yych == 'B') goto yy420;",
          "4889:   if (yych != 'b') goto yy194;",
          "4890: yy420:",
          "4891:   YYDEBUG(420, *YYCURSOR);",
          "4892:   yych = *++YYCURSOR;",
          "4893:   if (yych == 'L') goto yy421;",
          "4894:   if (yych != 'l') goto yy194;",
          "4895: yy421:",
          "4896:   YYDEBUG(421, *YYCURSOR);",
          "4897:   yych = *++YYCURSOR;",
          "4898:   if (yych == 'E') goto yy414;",
          "4899:   if (yych == 'e') goto yy414;",
          "4900:   goto yy194;",
          "4901: yy422:",
          "4902:   YYDEBUG(422, *YYCURSOR);",
          "4903:   yych = *++YYCURSOR;",
          "4904:   if (yych == 'A') goto yy423;",
          "4905:   if (yych != 'a') goto yy194;",
          "4906: yy423:",
          "4907:   YYDEBUG(423, *YYCURSOR);",
          "4908:   yych = *++YYCURSOR;",
          "4909:   if (yych == 'L') goto yy414;",
          "4910:   if (yych == 'l') goto yy414;",
          "4911:   goto yy194;",
          "4912: yy424:",
          "4913:   YYDEBUG(424, *YYCURSOR);",
          "4914:   yych = *++YYCURSOR;",
          "4915:   if (yych == 'R') goto yy425;",
          "4916:   if (yych != 'r') goto yy194;",
          "4917: yy425:",
          "4918:   YYDEBUG(425, *YYCURSOR);",
          "4919:   yych = *++YYCURSOR;",
          "4920:   if (yych == 'I') goto yy426;",
          "4921:   if (yych != 'i') goto yy194;",
          "4922: yy426:",
          "4923:   YYDEBUG(426, *YYCURSOR);",
          "4924:   yych = *++YYCURSOR;",
          "4925:   if (yych == 'N') goto yy427;",
          "4926:   if (yych != 'n') goto yy194;",
          "4927: yy427:",
          "4928:   YYDEBUG(427, *YYCURSOR);",
          "4929:   yych = *++YYCURSOR;",
          "4930:   if (yych == 'G') goto yy428;",
          "4931:   if (yych != 'g') goto yy194;",
          "4932: yy428:",
          "4933:   YYDEBUG(428, *YYCURSOR);",
          "4934:   ++YYCURSOR;",
          "4935:   YYFILL(1);",
          "4936:   yych = *YYCURSOR;",
          "4937:   YYDEBUG(429, *YYCURSOR);",
          "4938:   if (yych <= 0x1F) {",
          "4939:    if (yych == '\\t') goto yy428;",
          "4940:    goto yy194;",
          "4941:   } else {",
          "4942:    if (yych <= ' ') goto yy428;",
          "4943:    if (yych != ')') goto yy194;",
          "4944:   }",
          "4945:   YYDEBUG(430, *YYCURSOR);",
          "4946:   ++YYCURSOR;",
          "4947:   YYDEBUG(431, *YYCURSOR);",
          "4948:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4949: #line 1234 \"Zend/zend_language_scanner.l\"",
          "4950:   {",
          "4951:  return T_STRING_CAST;",
          "4952: }",
          "4953: #line 4954 \"Zend/zend_language_scanner.c\"",
          "4954: yy432:",
          "4955:   YYDEBUG(432, *YYCURSOR);",
          "4956:   yych = *++YYCURSOR;",
          "4957:   if (yych == 'R') goto yy433;",
          "4958:   if (yych != 'r') goto yy194;",
          "4959: yy433:",
          "4960:   YYDEBUG(433, *YYCURSOR);",
          "4961:   yych = *++YYCURSOR;",
          "4962:   if (yych == 'A') goto yy434;",
          "4963:   if (yych != 'a') goto yy194;",
          "4964: yy434:",
          "4965:   YYDEBUG(434, *YYCURSOR);",
          "4966:   yych = *++YYCURSOR;",
          "4967:   if (yych == 'Y') goto yy435;",
          "4968:   if (yych != 'y') goto yy194;",
          "4969: yy435:",
          "4970:   YYDEBUG(435, *YYCURSOR);",
          "4971:   ++YYCURSOR;",
          "4972:   YYFILL(1);",
          "4973:   yych = *YYCURSOR;",
          "4974:   YYDEBUG(436, *YYCURSOR);",
          "4975:   if (yych <= 0x1F) {",
          "4976:    if (yych == '\\t') goto yy435;",
          "4977:    goto yy194;",
          "4978:   } else {",
          "4979:    if (yych <= ' ') goto yy435;",
          "4980:    if (yych != ')') goto yy194;",
          "4981:   }",
          "4982:   YYDEBUG(437, *YYCURSOR);",
          "4983:   ++YYCURSOR;",
          "4984:   YYDEBUG(438, *YYCURSOR);",
          "4985:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4986: #line 1238 \"Zend/zend_language_scanner.l\"",
          "4987:   {",
          "4988:  return T_ARRAY_CAST;",
          "4989: }",
          "4990: #line 4991 \"Zend/zend_language_scanner.c\"",
          "4991: yy439:",
          "4992:   YYDEBUG(439, *YYCURSOR);",
          "4993:   yych = *++YYCURSOR;",
          "4994:   if (yych == 'J') goto yy440;",
          "4995:   if (yych != 'j') goto yy194;",
          "4996: yy440:",
          "4997:   YYDEBUG(440, *YYCURSOR);",
          "4998:   yych = *++YYCURSOR;",
          "4999:   if (yych == 'E') goto yy441;",
          "5000:   if (yych != 'e') goto yy194;",
          "5001: yy441:",
          "5002:   YYDEBUG(441, *YYCURSOR);",
          "5003:   yych = *++YYCURSOR;",
          "5004:   if (yych == 'C') goto yy442;",
          "5005:   if (yych != 'c') goto yy194;",
          "5006: yy442:",
          "5007:   YYDEBUG(442, *YYCURSOR);",
          "5008:   yych = *++YYCURSOR;",
          "5009:   if (yych == 'T') goto yy443;",
          "5010:   if (yych != 't') goto yy194;",
          "5011: yy443:",
          "5012:   YYDEBUG(443, *YYCURSOR);",
          "5013:   ++YYCURSOR;",
          "5014:   YYFILL(1);",
          "5015:   yych = *YYCURSOR;",
          "5016:   YYDEBUG(444, *YYCURSOR);",
          "5017:   if (yych <= 0x1F) {",
          "5018:    if (yych == '\\t') goto yy443;",
          "5019:    goto yy194;",
          "5020:   } else {",
          "5021:    if (yych <= ' ') goto yy443;",
          "5022:    if (yych != ')') goto yy194;",
          "5023:   }",
          "5024:   YYDEBUG(445, *YYCURSOR);",
          "5025:   ++YYCURSOR;",
          "5026:   YYDEBUG(446, *YYCURSOR);",
          "5027:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5028: #line 1242 \"Zend/zend_language_scanner.l\"",
          "5029:   {",
          "5030:  return T_OBJECT_CAST;",
          "5031: }",
          "5032: #line 5033 \"Zend/zend_language_scanner.c\"",
          "5033: yy447:",
          "5034:   YYDEBUG(447, *YYCURSOR);",
          "5035:   yych = *++YYCURSOR;",
          "5036:   if (yych == 'N') goto yy457;",
          "5037:   if (yych == 'n') goto yy457;",
          "5038:   goto yy194;",
          "5039: yy448:",
          "5040:   YYDEBUG(448, *YYCURSOR);",
          "5041:   yych = *++YYCURSOR;",
          "5042:   if (yych == 'O') goto yy449;",
          "5043:   if (yych != 'o') goto yy194;",
          "5044: yy449:",
          "5045:   YYDEBUG(449, *YYCURSOR);",
          "5046:   yych = *++YYCURSOR;",
          "5047:   if (yych == 'L') goto yy450;",
          "5048:   if (yych != 'l') goto yy194;",
          "5049: yy450:",
          "5050:   YYDEBUG(450, *YYCURSOR);",
          "5051:   yych = *++YYCURSOR;",
          "5052:   if (yych == 'E') goto yy455;",
          "5053:   if (yych == 'e') goto yy455;",
          "5054:   goto yy452;",
          "5055: yy451:",
          "5056:   YYDEBUG(451, *YYCURSOR);",
          "5057:   ++YYCURSOR;",
          "5058:   YYFILL(1);",
          "5059:   yych = *YYCURSOR;",
          "5060: yy452:",
          "5061:   YYDEBUG(452, *YYCURSOR);",
          "5062:   if (yych <= 0x1F) {",
          "5063:    if (yych == '\\t') goto yy451;",
          "5064:    goto yy194;",
          "5065:   } else {",
          "5066:    if (yych <= ' ') goto yy451;",
          "5067:    if (yych != ')') goto yy194;",
          "5068:   }",
          "5069:   YYDEBUG(453, *YYCURSOR);",
          "5070:   ++YYCURSOR;",
          "5071:   YYDEBUG(454, *YYCURSOR);",
          "5072:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5073: #line 1246 \"Zend/zend_language_scanner.l\"",
          "5074:   {",
          "5075:  return T_BOOL_CAST;",
          "5076: }",
          "5077: #line 5078 \"Zend/zend_language_scanner.c\"",
          "5078: yy455:",
          "5079:   YYDEBUG(455, *YYCURSOR);",
          "5080:   yych = *++YYCURSOR;",
          "5081:   if (yych == 'A') goto yy456;",
          "5082:   if (yych != 'a') goto yy194;",
          "5083: yy456:",
          "5084:   YYDEBUG(456, *YYCURSOR);",
          "5085:   yych = *++YYCURSOR;",
          "5086:   if (yych == 'N') goto yy451;",
          "5087:   if (yych == 'n') goto yy451;",
          "5088:   goto yy194;",
          "5089: yy457:",
          "5090:   YYDEBUG(457, *YYCURSOR);",
          "5091:   yych = *++YYCURSOR;",
          "5092:   if (yych == 'A') goto yy458;",
          "5093:   if (yych != 'a') goto yy194;",
          "5094: yy458:",
          "5095:   YYDEBUG(458, *YYCURSOR);",
          "5096:   yych = *++YYCURSOR;",
          "5097:   if (yych == 'R') goto yy459;",
          "5098:   if (yych != 'r') goto yy194;",
          "5099: yy459:",
          "5100:   YYDEBUG(459, *YYCURSOR);",
          "5101:   yych = *++YYCURSOR;",
          "5102:   if (yych == 'Y') goto yy428;",
          "5103:   if (yych == 'y') goto yy428;",
          "5104:   goto yy194;",
          "5105: yy460:",
          "5106:   YYDEBUG(460, *YYCURSOR);",
          "5107:   yych = *++YYCURSOR;",
          "5108:   if (yych == 'S') goto yy461;",
          "5109:   if (yych != 's') goto yy194;",
          "5110: yy461:",
          "5111:   YYDEBUG(461, *YYCURSOR);",
          "5112:   yych = *++YYCURSOR;",
          "5113:   if (yych == 'E') goto yy462;",
          "5114:   if (yych != 'e') goto yy194;",
          "5115: yy462:",
          "5116:   YYDEBUG(462, *YYCURSOR);",
          "5117:   yych = *++YYCURSOR;",
          "5118:   if (yych == 'T') goto yy463;",
          "5119:   if (yych != 't') goto yy194;",
          "5120: yy463:",
          "5121:   YYDEBUG(463, *YYCURSOR);",
          "5122:   ++YYCURSOR;",
          "5123:   YYFILL(1);",
          "5124:   yych = *YYCURSOR;",
          "5125:   YYDEBUG(464, *YYCURSOR);",
          "5126:   if (yych <= 0x1F) {",
          "5127:    if (yych == '\\t') goto yy463;",
          "5128:    goto yy194;",
          "5129:   } else {",
          "5130:    if (yych <= ' ') goto yy463;",
          "5131:    if (yych != ')') goto yy194;",
          "5132:   }",
          "5133:   YYDEBUG(465, *YYCURSOR);",
          "5134:   ++YYCURSOR;",
          "5135:   YYDEBUG(466, *YYCURSOR);",
          "5136:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5137: #line 1250 \"Zend/zend_language_scanner.l\"",
          "5138:   {",
          "5139:  return T_UNSET_CAST;",
          "5140: }",
          "5141: #line 5142 \"Zend/zend_language_scanner.c\"",
          "5142: yy467:",
          "5143:   YYDEBUG(467, *YYCURSOR);",
          "5144:   yych = *++YYCURSOR;",
          "5145:   if (yych == 'R') goto yy468;",
          "5146:   if (yych != 'r') goto yy187;",
          "5147: yy468:",
          "5148:   YYDEBUG(468, *YYCURSOR);",
          "5149:   ++YYCURSOR;",
          "5150:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5151:    goto yy186;",
          "5152:   }",
          "5153:   YYDEBUG(469, *YYCURSOR);",
          "5154:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5155: #line 1222 \"Zend/zend_language_scanner.l\"",
          "5156:   {",
          "5157:  return T_VAR;",
          "5158: }",
          "5159: #line 5160 \"Zend/zend_language_scanner.c\"",
          "5160: yy470:",
          "5161:   YYDEBUG(470, *YYCURSOR);",
          "5162:   yych = *++YYCURSOR;",
          "5163:   if (yych == 'M') goto yy474;",
          "5164:   if (yych == 'm') goto yy474;",
          "5165:   goto yy187;",
          "5166: yy471:",
          "5167:   YYDEBUG(471, *YYCURSOR);",
          "5168:   yych = *++YYCURSOR;",
          "5169:   if (yych == 'W') goto yy472;",
          "5170:   if (yych != 'w') goto yy187;",
          "5171: yy472:",
          "5172:   YYDEBUG(472, *YYCURSOR);",
          "5173:   ++YYCURSOR;",
          "5174:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5175:    goto yy186;",
          "5176:   }",
          "5177:   YYDEBUG(473, *YYCURSOR);",
          "5178:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5179: #line 1214 \"Zend/zend_language_scanner.l\"",
          "5180:   {",
          "5181:  return T_NEW;",
          "5182: }",
          "5183: #line 5184 \"Zend/zend_language_scanner.c\"",
          "5184: yy474:",
          "5185:   YYDEBUG(474, *YYCURSOR);",
          "5186:   yych = *++YYCURSOR;",
          "5187:   if (yych == 'E') goto yy475;",
          "5188:   if (yych != 'e') goto yy187;",
          "5189: yy475:",
          "5190:   YYDEBUG(475, *YYCURSOR);",
          "5191:   yych = *++YYCURSOR;",
          "5192:   if (yych == 'S') goto yy476;",
          "5193:   if (yych != 's') goto yy187;",
          "5194: yy476:",
          "5195:   YYDEBUG(476, *YYCURSOR);",
          "5196:   yych = *++YYCURSOR;",
          "5197:   if (yych == 'P') goto yy477;",
          "5198:   if (yych != 'p') goto yy187;",
          "5199: yy477:",
          "5200:   YYDEBUG(477, *YYCURSOR);",
          "5201:   yych = *++YYCURSOR;",
          "5202:   if (yych == 'A') goto yy478;",
          "5203:   if (yych != 'a') goto yy187;",
          "5204: yy478:",
          "5205:   YYDEBUG(478, *YYCURSOR);",
          "5206:   yych = *++YYCURSOR;",
          "5207:   if (yych == 'C') goto yy479;",
          "5208:   if (yych != 'c') goto yy187;",
          "5209: yy479:",
          "5210:   YYDEBUG(479, *YYCURSOR);",
          "5211:   yych = *++YYCURSOR;",
          "5212:   if (yych == 'E') goto yy480;",
          "5213:   if (yych != 'e') goto yy187;",
          "5214: yy480:",
          "5215:   YYDEBUG(480, *YYCURSOR);",
          "5216:   ++YYCURSOR;",
          "5217:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5218:    goto yy186;",
          "5219:   }",
          "5220:   YYDEBUG(481, *YYCURSOR);",
          "5221:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5222: #line 1274 \"Zend/zend_language_scanner.l\"",
          "5223:   {",
          "5224:  return T_NAMESPACE;",
          "5225: }",
          "5226: #line 5227 \"Zend/zend_language_scanner.c\"",
          "5227: yy482:",
          "5228:   YYDEBUG(482, *YYCURSOR);",
          "5229:   ++YYCURSOR;",
          "5230:   YYDEBUG(483, *YYCURSOR);",
          "5231:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5232: #line 1206 \"Zend/zend_language_scanner.l\"",
          "5233:   {",
          "5234:  return T_PAAMAYIM_NEKUDOTAYIM;",
          "5235: }",
          "5236: #line 5237 \"Zend/zend_language_scanner.c\"",
          "5237: yy484:",
          "5238:   YYDEBUG(484, *YYCURSOR);",
          "5239:   ++YYCURSOR;",
          "5240:   YYFILL(1);",
          "5241:   yych = *YYCURSOR;",
          "5242: yy485:",
          "5243:   YYDEBUG(485, *YYCURSOR);",
          "5244:   if (yych <= '\\f') {",
          "5245:    if (yych <= 0x08) goto yy141;",
          "5246:    if (yych <= '\\n') goto yy484;",
          "5247:    goto yy141;",
          "5248:   } else {",
          "5249:    if (yych <= '\\r') goto yy484;",
          "5250:    if (yych == ' ') goto yy484;",
          "5251:    goto yy141;",
          "5252:   }",
          "5253: yy486:",
          "5254:   YYDEBUG(486, *YYCURSOR);",
          "5255:   ++YYCURSOR;",
          "5256:   YYDEBUG(487, *YYCURSOR);",
          "5257:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5258: #line 1382 \"Zend/zend_language_scanner.l\"",
          "5259:   {",
          "5260:  return T_MINUS_EQUAL;",
          "5261: }",
          "5262: #line 5263 \"Zend/zend_language_scanner.c\"",
          "5263: yy488:",
          "5264:   YYDEBUG(488, *YYCURSOR);",
          "5265:   ++YYCURSOR;",
          "5266:   YYDEBUG(489, *YYCURSOR);",
          "5267:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5268: #line 1350 \"Zend/zend_language_scanner.l\"",
          "5269:   {",
          "5270:  return T_DEC;",
          "5271: }",
          "5272: #line 5273 \"Zend/zend_language_scanner.c\"",
          "5273: yy490:",
          "5274:   YYDEBUG(490, *YYCURSOR);",
          "5275:   ++YYCURSOR;",
          "5276:   YYDEBUG(491, *YYCURSOR);",
          "5277:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5278: #line 1176 \"Zend/zend_language_scanner.l\"",
          "5279:   {",
          "5280:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "5281:  return T_OBJECT_OPERATOR;",
          "5282: }",
          "5283: #line 5284 \"Zend/zend_language_scanner.c\"",
          "5284: yy492:",
          "5285:   YYDEBUG(492, *YYCURSOR);",
          "5286:   yych = *++YYCURSOR;",
          "5287:   if (yych <= 'O') {",
          "5288:    if (yych == 'I') goto yy499;",
          "5289:    if (yych <= 'N') goto yy187;",
          "5290:    goto yy500;",
          "5291:   } else {",
          "5292:    if (yych <= 'i') {",
          "5293:     if (yych <= 'h') goto yy187;",
          "5294:     goto yy499;",
          "5295:    } else {",
          "5296:     if (yych == 'o') goto yy500;",
          "5297:     goto yy187;",
          "5298:    }",
          "5299:   }",
          "5300: yy493:",
          "5301:   YYDEBUG(493, *YYCURSOR);",
          "5302:   yych = *++YYCURSOR;",
          "5303:   if (yych == 'B') goto yy494;",
          "5304:   if (yych != 'b') goto yy187;",
          "5305: yy494:",
          "5306:   YYDEBUG(494, *YYCURSOR);",
          "5307:   yych = *++YYCURSOR;",
          "5308:   if (yych == 'L') goto yy495;",
          "5309:   if (yych != 'l') goto yy187;",
          "5310: yy495:",
          "5311:   YYDEBUG(495, *YYCURSOR);",
          "5312:   yych = *++YYCURSOR;",
          "5313:   if (yych == 'I') goto yy496;",
          "5314:   if (yych != 'i') goto yy187;",
          "5315: yy496:",
          "5316:   YYDEBUG(496, *YYCURSOR);",
          "5317:   yych = *++YYCURSOR;",
          "5318:   if (yych == 'C') goto yy497;",
          "5319:   if (yych != 'c') goto yy187;",
          "5320: yy497:",
          "5321:   YYDEBUG(497, *YYCURSOR);",
          "5322:   ++YYCURSOR;",
          "5323:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5324:    goto yy186;",
          "5325:   }",
          "5326:   YYDEBUG(498, *YYCURSOR);",
          "5327:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5328: #line 1322 \"Zend/zend_language_scanner.l\"",
          "5329:   {",
          "5330:  return T_PUBLIC;",
          "5331: }",
          "5332: #line 5333 \"Zend/zend_language_scanner.c\"",
          "5333: yy499:",
          "5334:   YYDEBUG(499, *YYCURSOR);",
          "5335:   yych = *++YYCURSOR;",
          "5336:   if (yych <= 'V') {",
          "5337:    if (yych == 'N') goto yy508;",
          "5338:    if (yych <= 'U') goto yy187;",
          "5339:    goto yy509;",
          "5340:   } else {",
          "5341:    if (yych <= 'n') {",
          "5342:     if (yych <= 'm') goto yy187;",
          "5343:     goto yy508;",
          "5344:    } else {",
          "5345:     if (yych == 'v') goto yy509;",
          "5346:     goto yy187;",
          "5347:    }",
          "5348:   }",
          "5349: yy500:",
          "5350:   YYDEBUG(500, *YYCURSOR);",
          "5351:   yych = *++YYCURSOR;",
          "5352:   if (yych == 'T') goto yy501;",
          "5353:   if (yych != 't') goto yy187;",
          "5354: yy501:",
          "5355:   YYDEBUG(501, *YYCURSOR);",
          "5356:   yych = *++YYCURSOR;",
          "5357:   if (yych == 'E') goto yy502;",
          "5358:   if (yych != 'e') goto yy187;",
          "5359: yy502:",
          "5360:   YYDEBUG(502, *YYCURSOR);",
          "5361:   yych = *++YYCURSOR;",
          "5362:   if (yych == 'C') goto yy503;",
          "5363:   if (yych != 'c') goto yy187;",
          "5364: yy503:",
          "5365:   YYDEBUG(503, *YYCURSOR);",
          "5366:   yych = *++YYCURSOR;",
          "5367:   if (yych == 'T') goto yy504;",
          "5368:   if (yych != 't') goto yy187;",
          "5369: yy504:",
          "5370:   YYDEBUG(504, *YYCURSOR);",
          "5371:   yych = *++YYCURSOR;",
          "5372:   if (yych == 'E') goto yy505;",
          "5373:   if (yych != 'e') goto yy187;",
          "5374: yy505:",
          "5375:   YYDEBUG(505, *YYCURSOR);",
          "5376:   yych = *++YYCURSOR;",
          "5377:   if (yych == 'D') goto yy506;",
          "5378:   if (yych != 'd') goto yy187;",
          "5379: yy506:",
          "5380:   YYDEBUG(506, *YYCURSOR);",
          "5381:   ++YYCURSOR;",
          "5382:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5383:    goto yy186;",
          "5384:   }",
          "5385:   YYDEBUG(507, *YYCURSOR);",
          "5386:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5387: #line 1318 \"Zend/zend_language_scanner.l\"",
          "5388:   {",
          "5389:  return T_PROTECTED;",
          "5390: }",
          "5391: #line 5392 \"Zend/zend_language_scanner.c\"",
          "5392: yy508:",
          "5393:   YYDEBUG(508, *YYCURSOR);",
          "5394:   yych = *++YYCURSOR;",
          "5395:   if (yych == 'T') goto yy514;",
          "5396:   if (yych == 't') goto yy514;",
          "5397:   goto yy187;",
          "5398: yy509:",
          "5399:   YYDEBUG(509, *YYCURSOR);",
          "5400:   yych = *++YYCURSOR;",
          "5401:   if (yych == 'A') goto yy510;",
          "5402:   if (yych != 'a') goto yy187;",
          "5403: yy510:",
          "5404:   YYDEBUG(510, *YYCURSOR);",
          "5405:   yych = *++YYCURSOR;",
          "5406:   if (yych == 'T') goto yy511;",
          "5407:   if (yych != 't') goto yy187;",
          "5408: yy511:",
          "5409:   YYDEBUG(511, *YYCURSOR);",
          "5410:   yych = *++YYCURSOR;",
          "5411:   if (yych == 'E') goto yy512;",
          "5412:   if (yych != 'e') goto yy187;",
          "5413: yy512:",
          "5414:   YYDEBUG(512, *YYCURSOR);",
          "5415:   ++YYCURSOR;",
          "5416:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5417:    goto yy186;",
          "5418:   }",
          "5419:   YYDEBUG(513, *YYCURSOR);",
          "5420:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5421: #line 1314 \"Zend/zend_language_scanner.l\"",
          "5422:   {",
          "5423:  return T_PRIVATE;",
          "5424: }",
          "5425: #line 5426 \"Zend/zend_language_scanner.c\"",
          "5426: yy514:",
          "5427:   YYDEBUG(514, *YYCURSOR);",
          "5428:   ++YYCURSOR;",
          "5429:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5430:    goto yy186;",
          "5431:   }",
          "5432:   YYDEBUG(515, *YYCURSOR);",
          "5433:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5434: #line 1152 \"Zend/zend_language_scanner.l\"",
          "5435:   {",
          "5436:  return T_PRINT;",
          "5437: }",
          "5438: #line 5439 \"Zend/zend_language_scanner.c\"",
          "5439: yy516:",
          "5440:   YYDEBUG(516, *YYCURSOR);",
          "5441:   yych = *++YYCURSOR;",
          "5442:   if (yych == 'O') goto yy521;",
          "5443:   if (yych == 'o') goto yy521;",
          "5444:   goto yy187;",
          "5445: yy517:",
          "5446:   YYDEBUG(517, *YYCURSOR);",
          "5447:   yych = *++YYCURSOR;",
          "5448:   if (yych == 'T') goto yy518;",
          "5449:   if (yych != 't') goto yy187;",
          "5450: yy518:",
          "5451:   YYDEBUG(518, *YYCURSOR);",
          "5452:   yych = *++YYCURSOR;",
          "5453:   if (yych == 'O') goto yy519;",
          "5454:   if (yych != 'o') goto yy187;",
          "5455: yy519:",
          "5456:   YYDEBUG(519, *YYCURSOR);",
          "5457:   ++YYCURSOR;",
          "5458:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5459:    goto yy186;",
          "5460:   }",
          "5461:   YYDEBUG(520, *YYCURSOR);",
          "5462:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5463: #line 1144 \"Zend/zend_language_scanner.l\"",
          "5464:   {",
          "5465:  return T_GOTO;",
          "5466: }",
          "5467: #line 5468 \"Zend/zend_language_scanner.c\"",
          "5468: yy521:",
          "5469:   YYDEBUG(521, *YYCURSOR);",
          "5470:   yych = *++YYCURSOR;",
          "5471:   if (yych == 'B') goto yy522;",
          "5472:   if (yych != 'b') goto yy187;",
          "5473: yy522:",
          "5474:   YYDEBUG(522, *YYCURSOR);",
          "5475:   yych = *++YYCURSOR;",
          "5476:   if (yych == 'A') goto yy523;",
          "5477:   if (yych != 'a') goto yy187;",
          "5478: yy523:",
          "5479:   YYDEBUG(523, *YYCURSOR);",
          "5480:   yych = *++YYCURSOR;",
          "5481:   if (yych == 'L') goto yy524;",
          "5482:   if (yych != 'l') goto yy187;",
          "5483: yy524:",
          "5484:   YYDEBUG(524, *YYCURSOR);",
          "5485:   ++YYCURSOR;",
          "5486:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5487:    goto yy186;",
          "5488:   }",
          "5489:   YYDEBUG(525, *YYCURSOR);",
          "5490:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5491: #line 1286 \"Zend/zend_language_scanner.l\"",
          "5492:   {",
          "5493:  return T_GLOBAL;",
          "5494: }",
          "5495: #line 5496 \"Zend/zend_language_scanner.c\"",
          "5496: yy526:",
          "5497:   YYDEBUG(526, *YYCURSOR);",
          "5498:   yych = *++YYCURSOR;",
          "5499:   if (yych == '<') goto yy534;",
          "5500:   goto yy194;",
          "5501: yy527:",
          "5502:   YYDEBUG(527, *YYCURSOR);",
          "5503:   yych = *++YYCURSOR;",
          "5504:   goto yy181;",
          "5505: yy528:",
          "5506:   YYDEBUG(528, *YYCURSOR);",
          "5507:   yych = *++YYCURSOR;",
          "5508:   goto yy179;",
          "5509: yy529:",
          "5510:   YYDEBUG(529, *YYCURSOR);",
          "5511:   yych = *++YYCURSOR;",
          "5512:   if (yych == 'E') goto yy530;",
          "5513:   if (yych != 'e') goto yy187;",
          "5514: yy530:",
          "5515:   YYDEBUG(530, *YYCURSOR);",
          "5516:   yych = *++YYCURSOR;",
          "5517:   if (yych == 'A') goto yy531;",
          "5518:   if (yych != 'a') goto yy187;",
          "5519: yy531:",
          "5520:   YYDEBUG(531, *YYCURSOR);",
          "5521:   yych = *++YYCURSOR;",
          "5522:   if (yych == 'K') goto yy532;",
          "5523:   if (yych != 'k') goto yy187;",
          "5524: yy532:",
          "5525:   YYDEBUG(532, *YYCURSOR);",
          "5526:   ++YYCURSOR;",
          "5527:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5528:    goto yy186;",
          "5529:   }",
          "5530:   YYDEBUG(533, *YYCURSOR);",
          "5531:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5532: #line 1136 \"Zend/zend_language_scanner.l\"",
          "5533:   {",
          "5534:  return T_BREAK;",
          "5535: }",
          "5536: #line 5537 \"Zend/zend_language_scanner.c\"",
          "5537: yy534:",
          "5538:   YYDEBUG(534, *YYCURSOR);",
          "5539:   yych = *++YYCURSOR;",
          "5540:   if (yych == '<') goto yy270;",
          "5541:   goto yy194;",
          "5542: yy535:",
          "5543:   YYDEBUG(535, *YYCURSOR);",
          "5544:   yych = *++YYCURSOR;",
          "5545:   if (yych == 'A') goto yy542;",
          "5546:   if (yych == 'a') goto yy542;",
          "5547:   goto yy187;",
          "5548: yy536:",
          "5549:   YYDEBUG(536, *YYCURSOR);",
          "5550:   yych = *++YYCURSOR;",
          "5551:   if (yych == 'I') goto yy537;",
          "5552:   if (yych != 'i') goto yy187;",
          "5553: yy537:",
          "5554:   YYDEBUG(537, *YYCURSOR);",
          "5555:   yych = *++YYCURSOR;",
          "5556:   if (yych == 'T') goto yy538;",
          "5557:   if (yych != 't') goto yy187;",
          "5558: yy538:",
          "5559:   YYDEBUG(538, *YYCURSOR);",
          "5560:   yych = *++YYCURSOR;",
          "5561:   if (yych == 'C') goto yy539;",
          "5562:   if (yych != 'c') goto yy187;",
          "5563: yy539:",
          "5564:   YYDEBUG(539, *YYCURSOR);",
          "5565:   yych = *++YYCURSOR;",
          "5566:   if (yych == 'H') goto yy540;",
          "5567:   if (yych != 'h') goto yy187;",
          "5568: yy540:",
          "5569:   YYDEBUG(540, *YYCURSOR);",
          "5570:   ++YYCURSOR;",
          "5571:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5572:    goto yy186;",
          "5573:   }",
          "5574:   YYDEBUG(541, *YYCURSOR);",
          "5575:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5576: #line 1120 \"Zend/zend_language_scanner.l\"",
          "5577:   {",
          "5578:  return T_SWITCH;",
          "5579: }",
          "5580: #line 5581 \"Zend/zend_language_scanner.c\"",
          "5581: yy542:",
          "5582:   YYDEBUG(542, *YYCURSOR);",
          "5583:   yych = *++YYCURSOR;",
          "5584:   if (yych == 'T') goto yy543;",
          "5585:   if (yych != 't') goto yy187;",
          "5586: yy543:",
          "5587:   YYDEBUG(543, *YYCURSOR);",
          "5588:   yych = *++YYCURSOR;",
          "5589:   if (yych == 'I') goto yy544;",
          "5590:   if (yych != 'i') goto yy187;",
          "5591: yy544:",
          "5592:   YYDEBUG(544, *YYCURSOR);",
          "5593:   yych = *++YYCURSOR;",
          "5594:   if (yych == 'C') goto yy545;",
          "5595:   if (yych != 'c') goto yy187;",
          "5596: yy545:",
          "5597:   YYDEBUG(545, *YYCURSOR);",
          "5598:   ++YYCURSOR;",
          "5599:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5600:    goto yy186;",
          "5601:   }",
          "5602:   YYDEBUG(546, *YYCURSOR);",
          "5603:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5604: #line 1302 \"Zend/zend_language_scanner.l\"",
          "5605:   {",
          "5606:  return T_STATIC;",
          "5607: }",
          "5608: #line 5609 \"Zend/zend_language_scanner.c\"",
          "5609: yy547:",
          "5610:   YYDEBUG(547, *YYCURSOR);",
          "5611:   yych = *++YYCURSOR;",
          "5612:   if (yych == 'S') goto yy558;",
          "5613:   if (yych == 's') goto yy558;",
          "5614:   goto yy187;",
          "5615: yy548:",
          "5616:   YYDEBUG(548, *YYCURSOR);",
          "5617:   yych = *++YYCURSOR;",
          "5618:   if (yych == 'D') goto yy556;",
          "5619:   if (yych == 'd') goto yy556;",
          "5620:   goto yy187;",
          "5621: yy549:",
          "5622:   YYDEBUG(549, *YYCURSOR);",
          "5623:   yych = *++YYCURSOR;",
          "5624:   if (yych == 'R') goto yy552;",
          "5625:   if (yych == 'r') goto yy552;",
          "5626:   goto yy187;",
          "5627: yy550:",
          "5628:   YYDEBUG(550, *YYCURSOR);",
          "5629:   ++YYCURSOR;",
          "5630:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5631:    goto yy186;",
          "5632:   }",
          "5633:   YYDEBUG(551, *YYCURSOR);",
          "5634:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5635: #line 1116 \"Zend/zend_language_scanner.l\"",
          "5636:   {",
          "5637:  return T_AS;",
          "5638: }",
          "5639: #line 5640 \"Zend/zend_language_scanner.c\"",
          "5640: yy552:",
          "5641:   YYDEBUG(552, *YYCURSOR);",
          "5642:   yych = *++YYCURSOR;",
          "5643:   if (yych == 'A') goto yy553;",
          "5644:   if (yych != 'a') goto yy187;",
          "5645: yy553:",
          "5646:   YYDEBUG(553, *YYCURSOR);",
          "5647:   yych = *++YYCURSOR;",
          "5648:   if (yych == 'Y') goto yy554;",
          "5649:   if (yych != 'y') goto yy187;",
          "5650: yy554:",
          "5651:   YYDEBUG(554, *YYCURSOR);",
          "5652:   ++YYCURSOR;",
          "5653:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5654:    goto yy186;",
          "5655:   }",
          "5656:   YYDEBUG(555, *YYCURSOR);",
          "5657:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5658: #line 1338 \"Zend/zend_language_scanner.l\"",
          "5659:   {",
          "5660:  return T_ARRAY;",
          "5661: }",
          "5662: #line 5663 \"Zend/zend_language_scanner.c\"",
          "5663: yy556:",
          "5664:   YYDEBUG(556, *YYCURSOR);",
          "5665:   ++YYCURSOR;",
          "5666:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5667:    goto yy186;",
          "5668:   }",
          "5669:   YYDEBUG(557, *YYCURSOR);",
          "5670:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5671: #line 1434 \"Zend/zend_language_scanner.l\"",
          "5672:   {",
          "5673:  return T_LOGICAL_AND;",
          "5674: }",
          "5675: #line 5676 \"Zend/zend_language_scanner.c\"",
          "5676: yy558:",
          "5677:   YYDEBUG(558, *YYCURSOR);",
          "5678:   yych = *++YYCURSOR;",
          "5679:   if (yych == 'T') goto yy559;",
          "5680:   if (yych != 't') goto yy187;",
          "5681: yy559:",
          "5682:   YYDEBUG(559, *YYCURSOR);",
          "5683:   yych = *++YYCURSOR;",
          "5684:   if (yych == 'R') goto yy560;",
          "5685:   if (yych != 'r') goto yy187;",
          "5686: yy560:",
          "5687:   YYDEBUG(560, *YYCURSOR);",
          "5688:   yych = *++YYCURSOR;",
          "5689:   if (yych == 'A') goto yy561;",
          "5690:   if (yych != 'a') goto yy187;",
          "5691: yy561:",
          "5692:   YYDEBUG(561, *YYCURSOR);",
          "5693:   yych = *++YYCURSOR;",
          "5694:   if (yych == 'C') goto yy562;",
          "5695:   if (yych != 'c') goto yy187;",
          "5696: yy562:",
          "5697:   YYDEBUG(562, *YYCURSOR);",
          "5698:   yych = *++YYCURSOR;",
          "5699:   if (yych == 'T') goto yy563;",
          "5700:   if (yych != 't') goto yy187;",
          "5701: yy563:",
          "5702:   YYDEBUG(563, *YYCURSOR);",
          "5703:   ++YYCURSOR;",
          "5704:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5705:    goto yy186;",
          "5706:   }",
          "5707:   YYDEBUG(564, *YYCURSOR);",
          "5708:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5709: #line 1306 \"Zend/zend_language_scanner.l\"",
          "5710:   {",
          "5711:  return T_ABSTRACT;",
          "5712: }",
          "5713: #line 5714 \"Zend/zend_language_scanner.c\"",
          "5714: yy565:",
          "5715:   YYDEBUG(565, *YYCURSOR);",
          "5716:   yych = *++YYCURSOR;",
          "5717:   if (yych == 'I') goto yy566;",
          "5718:   if (yych != 'i') goto yy187;",
          "5719: yy566:",
          "5720:   YYDEBUG(566, *YYCURSOR);",
          "5721:   yych = *++YYCURSOR;",
          "5722:   if (yych == 'L') goto yy567;",
          "5723:   if (yych != 'l') goto yy187;",
          "5724: yy567:",
          "5725:   YYDEBUG(567, *YYCURSOR);",
          "5726:   yych = *++YYCURSOR;",
          "5727:   if (yych == 'E') goto yy568;",
          "5728:   if (yych != 'e') goto yy187;",
          "5729: yy568:",
          "5730:   YYDEBUG(568, *YYCURSOR);",
          "5731:   ++YYCURSOR;",
          "5732:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5733:    goto yy186;",
          "5734:   }",
          "5735:   YYDEBUG(569, *YYCURSOR);",
          "5736:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5737: #line 1076 \"Zend/zend_language_scanner.l\"",
          "5738:   {",
          "5739:  return T_WHILE;",
          "5740: }",
          "5741: #line 5742 \"Zend/zend_language_scanner.c\"",
          "5742: yy570:",
          "5743:   YYDEBUG(570, *YYCURSOR);",
          "5744:   ++YYCURSOR;",
          "5745:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5746:    goto yy186;",
          "5747:   }",
          "5748:   YYDEBUG(571, *YYCURSOR);",
          "5749:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5750: #line 1060 \"Zend/zend_language_scanner.l\"",
          "5751:   {",
          "5752:  return T_IF;",
          "5753: }",
          "5754: #line 5755 \"Zend/zend_language_scanner.c\"",
          "5755: yy572:",
          "5756:   YYDEBUG(572, *YYCURSOR);",
          "5757:   yych = *++YYCURSOR;",
          "5758:   if (yych == 'P') goto yy614;",
          "5759:   if (yych == 'p') goto yy614;",
          "5760:   goto yy187;",
          "5761: yy573:",
          "5762:   YYDEBUG(573, *YYCURSOR);",
          "5763:   yych = *++YYCURSOR;",
          "5764:   if (yych <= 'T') {",
          "5765:    if (yych <= 'C') {",
          "5766:     if (yych <= 'B') goto yy187;",
          "5767:     goto yy581;",
          "5768:    } else {",
          "5769:     if (yych <= 'R') goto yy187;",
          "5770:     if (yych <= 'S') goto yy579;",
          "5771:     goto yy580;",
          "5772:    }",
          "5773:   } else {",
          "5774:    if (yych <= 'r') {",
          "5775:     if (yych == 'c') goto yy581;",
          "5776:     goto yy187;",
          "5777:    } else {",
          "5778:     if (yych <= 's') goto yy579;",
          "5779:     if (yych <= 't') goto yy580;",
          "5780:     goto yy187;",
          "5781:    }",
          "5782:   }",
          "5783: yy574:",
          "5784:   YYDEBUG(574, *YYCURSOR);",
          "5785:   yych = *++YYCURSOR;",
          "5786:   if (yych == 'S') goto yy575;",
          "5787:   if (yych != 's') goto yy187;",
          "5788: yy575:",
          "5789:   YYDEBUG(575, *YYCURSOR);",
          "5790:   yych = *++YYCURSOR;",
          "5791:   if (yych == 'E') goto yy576;",
          "5792:   if (yych != 'e') goto yy187;",
          "5793: yy576:",
          "5794:   YYDEBUG(576, *YYCURSOR);",
          "5795:   yych = *++YYCURSOR;",
          "5796:   if (yych == 'T') goto yy577;",
          "5797:   if (yych != 't') goto yy187;",
          "5798: yy577:",
          "5799:   YYDEBUG(577, *YYCURSOR);",
          "5800:   ++YYCURSOR;",
          "5801:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5802:    goto yy186;",
          "5803:   }",
          "5804:   YYDEBUG(578, *YYCURSOR);",
          "5805:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5806: #line 1290 \"Zend/zend_language_scanner.l\"",
          "5807:   {",
          "5808:  return T_ISSET;",
          "5809: }",
          "5810: #line 5811 \"Zend/zend_language_scanner.c\"",
          "5811: yy579:",
          "5812:   YYDEBUG(579, *YYCURSOR);",
          "5813:   yych = *++YYCURSOR;",
          "5814:   if (yych == 'T') goto yy600;",
          "5815:   if (yych == 't') goto yy600;",
          "5816:   goto yy187;",
          "5817: yy580:",
          "5818:   YYDEBUG(580, *YYCURSOR);",
          "5819:   yych = *++YYCURSOR;",
          "5820:   if (yych == 'E') goto yy593;",
          "5821:   if (yych == 'e') goto yy593;",
          "5822:   goto yy187;",
          "5823: yy581:",
          "5824:   YYDEBUG(581, *YYCURSOR);",
          "5825:   yych = *++YYCURSOR;",
          "5826:   if (yych == 'L') goto yy582;",
          "5827:   if (yych != 'l') goto yy187;",
          "5828: yy582:",
          "5829:   YYDEBUG(582, *YYCURSOR);",
          "5830:   yych = *++YYCURSOR;",
          "5831:   if (yych == 'U') goto yy583;",
          "5832:   if (yych != 'u') goto yy187;",
          "5833: yy583:",
          "5834:   YYDEBUG(583, *YYCURSOR);",
          "5835:   yych = *++YYCURSOR;",
          "5836:   if (yych == 'D') goto yy584;",
          "5837:   if (yych != 'd') goto yy187;",
          "5838: yy584:",
          "5839:   YYDEBUG(584, *YYCURSOR);",
          "5840:   yych = *++YYCURSOR;",
          "5841:   if (yych == 'E') goto yy585;",
          "5842:   if (yych != 'e') goto yy187;",
          "5843: yy585:",
          "5844:   YYDEBUG(585, *YYCURSOR);",
          "5845:   ++YYCURSOR;",
          "5846:   if ((yych = *YYCURSOR) <= '^') {",
          "5847:    if (yych <= '9') {",
          "5848:     if (yych >= '0') goto yy186;",
          "5849:    } else {",
          "5850:     if (yych <= '@') goto yy586;",
          "5851:     if (yych <= 'Z') goto yy186;",
          "5852:    }",
          "5853:   } else {",
          "5854:    if (yych <= '`') {",
          "5855:     if (yych <= '_') goto yy587;",
          "5856:    } else {",
          "5857:     if (yych <= 'z') goto yy186;",
          "5858:     if (yych >= 0x7F) goto yy186;",
          "5859:    }",
          "5860:   }",
          "5861: yy586:",
          "5862:   YYDEBUG(586, *YYCURSOR);",
          "5863:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5864: #line 1258 \"Zend/zend_language_scanner.l\"",
          "5865:   {",
          "5866:  return T_INCLUDE;",
          "5867: }",
          "5868: #line 5869 \"Zend/zend_language_scanner.c\"",
          "5869: yy587:",
          "5870:   YYDEBUG(587, *YYCURSOR);",
          "5871:   yych = *++YYCURSOR;",
          "5872:   if (yych == 'O') goto yy588;",
          "5873:   if (yych != 'o') goto yy187;",
          "5874: yy588:",
          "5875:   YYDEBUG(588, *YYCURSOR);",
          "5876:   yych = *++YYCURSOR;",
          "5877:   if (yych == 'N') goto yy589;",
          "5878:   if (yych != 'n') goto yy187;",
          "5879: yy589:",
          "5880:   YYDEBUG(589, *YYCURSOR);",
          "5881:   yych = *++YYCURSOR;",
          "5882:   if (yych == 'C') goto yy590;",
          "5883:   if (yych != 'c') goto yy187;",
          "5884: yy590:",
          "5885:   YYDEBUG(590, *YYCURSOR);",
          "5886:   yych = *++YYCURSOR;",
          "5887:   if (yych == 'E') goto yy591;",
          "5888:   if (yych != 'e') goto yy187;",
          "5889: yy591:",
          "5890:   YYDEBUG(591, *YYCURSOR);",
          "5891:   ++YYCURSOR;",
          "5892:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5893:    goto yy186;",
          "5894:   }",
          "5895:   YYDEBUG(592, *YYCURSOR);",
          "5896:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5897: #line 1262 \"Zend/zend_language_scanner.l\"",
          "5898:   {",
          "5899:  return T_INCLUDE_ONCE;",
          "5900: }",
          "5901: #line 5902 \"Zend/zend_language_scanner.c\"",
          "5902: yy593:",
          "5903:   YYDEBUG(593, *YYCURSOR);",
          "5904:   yych = *++YYCURSOR;",
          "5905:   if (yych == 'R') goto yy594;",
          "5906:   if (yych != 'r') goto yy187;",
          "5907: yy594:",
          "5908:   YYDEBUG(594, *YYCURSOR);",
          "5909:   yych = *++YYCURSOR;",
          "5910:   if (yych == 'F') goto yy595;",
          "5911:   if (yych != 'f') goto yy187;",
          "5912: yy595:",
          "5913:   YYDEBUG(595, *YYCURSOR);",
          "5914:   yych = *++YYCURSOR;",
          "5915:   if (yych == 'A') goto yy596;",
          "5916:   if (yych != 'a') goto yy187;",
          "5917: yy596:",
          "5918:   YYDEBUG(596, *YYCURSOR);",
          "5919:   yych = *++YYCURSOR;",
          "5920:   if (yych == 'C') goto yy597;",
          "5921:   if (yych != 'c') goto yy187;",
          "5922: yy597:",
          "5923:   YYDEBUG(597, *YYCURSOR);",
          "5924:   yych = *++YYCURSOR;",
          "5925:   if (yych == 'E') goto yy598;",
          "5926:   if (yych != 'e') goto yy187;",
          "5927: yy598:",
          "5928:   YYDEBUG(598, *YYCURSOR);",
          "5929:   ++YYCURSOR;",
          "5930:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5931:    goto yy186;",
          "5932:   }",
          "5933:   YYDEBUG(599, *YYCURSOR);",
          "5934:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5935: #line 1160 \"Zend/zend_language_scanner.l\"",
          "5936:   {",
          "5937:  return T_INTERFACE;",
          "5938: }",
          "5939: #line 5940 \"Zend/zend_language_scanner.c\"",
          "5940: yy600:",
          "5941:   YYDEBUG(600, *YYCURSOR);",
          "5942:   yych = *++YYCURSOR;",
          "5943:   if (yych <= 'E') {",
          "5944:    if (yych == 'A') goto yy601;",
          "5945:    if (yych <= 'D') goto yy187;",
          "5946:    goto yy602;",
          "5947:   } else {",
          "5948:    if (yych <= 'a') {",
          "5949:     if (yych <= '`') goto yy187;",
          "5950:    } else {",
          "5951:     if (yych == 'e') goto yy602;",
          "5952:     goto yy187;",
          "5953:    }",
          "5954:   }",
          "5955: yy601:",
          "5956:   YYDEBUG(601, *YYCURSOR);",
          "5957:   yych = *++YYCURSOR;",
          "5958:   if (yych == 'N') goto yy608;",
          "5959:   if (yych == 'n') goto yy608;",
          "5960:   goto yy187;",
          "5961: yy602:",
          "5962:   YYDEBUG(602, *YYCURSOR);",
          "5963:   yych = *++YYCURSOR;",
          "5964:   if (yych == 'A') goto yy603;",
          "5965:   if (yych != 'a') goto yy187;",
          "5966: yy603:",
          "5967:   YYDEBUG(603, *YYCURSOR);",
          "5968:   yych = *++YYCURSOR;",
          "5969:   if (yych == 'D') goto yy604;",
          "5970:   if (yych != 'd') goto yy187;",
          "5971: yy604:",
          "5972:   YYDEBUG(604, *YYCURSOR);",
          "5973:   yych = *++YYCURSOR;",
          "5974:   if (yych == 'O') goto yy605;",
          "5975:   if (yych != 'o') goto yy187;",
          "5976: yy605:",
          "5977:   YYDEBUG(605, *YYCURSOR);",
          "5978:   yych = *++YYCURSOR;",
          "5979:   if (yych == 'F') goto yy606;",
          "5980:   if (yych != 'f') goto yy187;",
          "5981: yy606:",
          "5982:   YYDEBUG(606, *YYCURSOR);",
          "5983:   ++YYCURSOR;",
          "5984:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5985:    goto yy186;",
          "5986:   }",
          "5987:   YYDEBUG(607, *YYCURSOR);",
          "5988:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5989: #line 1282 \"Zend/zend_language_scanner.l\"",
          "5990:   {",
          "5991:         return T_INSTEADOF;",
          "5992: }",
          "5993: #line 5994 \"Zend/zend_language_scanner.c\"",
          "5994: yy608:",
          "5995:   YYDEBUG(608, *YYCURSOR);",
          "5996:   yych = *++YYCURSOR;",
          "5997:   if (yych == 'C') goto yy609;",
          "5998:   if (yych != 'c') goto yy187;",
          "5999: yy609:",
          "6000:   YYDEBUG(609, *YYCURSOR);",
          "6001:   yych = *++YYCURSOR;",
          "6002:   if (yych == 'E') goto yy610;",
          "6003:   if (yych != 'e') goto yy187;",
          "6004: yy610:",
          "6005:   YYDEBUG(610, *YYCURSOR);",
          "6006:   yych = *++YYCURSOR;",
          "6007:   if (yych == 'O') goto yy611;",
          "6008:   if (yych != 'o') goto yy187;",
          "6009: yy611:",
          "6010:   YYDEBUG(611, *YYCURSOR);",
          "6011:   yych = *++YYCURSOR;",
          "6012:   if (yych == 'F') goto yy612;",
          "6013:   if (yych != 'f') goto yy187;",
          "6014: yy612:",
          "6015:   YYDEBUG(612, *YYCURSOR);",
          "6016:   ++YYCURSOR;",
          "6017:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6018:    goto yy186;",
          "6019:   }",
          "6020:   YYDEBUG(613, *YYCURSOR);",
          "6021:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6022: #line 1112 \"Zend/zend_language_scanner.l\"",
          "6023:   {",
          "6024:  return T_INSTANCEOF;",
          "6025: }",
          "6026: #line 6027 \"Zend/zend_language_scanner.c\"",
          "6027: yy614:",
          "6028:   YYDEBUG(614, *YYCURSOR);",
          "6029:   yych = *++YYCURSOR;",
          "6030:   if (yych == 'L') goto yy615;",
          "6031:   if (yych != 'l') goto yy187;",
          "6032: yy615:",
          "6033:   YYDEBUG(615, *YYCURSOR);",
          "6034:   yych = *++YYCURSOR;",
          "6035:   if (yych == 'E') goto yy616;",
          "6036:   if (yych != 'e') goto yy187;",
          "6037: yy616:",
          "6038:   YYDEBUG(616, *YYCURSOR);",
          "6039:   yych = *++YYCURSOR;",
          "6040:   if (yych == 'M') goto yy617;",
          "6041:   if (yych != 'm') goto yy187;",
          "6042: yy617:",
          "6043:   YYDEBUG(617, *YYCURSOR);",
          "6044:   yych = *++YYCURSOR;",
          "6045:   if (yych == 'E') goto yy618;",
          "6046:   if (yych != 'e') goto yy187;",
          "6047: yy618:",
          "6048:   YYDEBUG(618, *YYCURSOR);",
          "6049:   yych = *++YYCURSOR;",
          "6050:   if (yych == 'N') goto yy619;",
          "6051:   if (yych != 'n') goto yy187;",
          "6052: yy619:",
          "6053:   YYDEBUG(619, *YYCURSOR);",
          "6054:   yych = *++YYCURSOR;",
          "6055:   if (yych == 'T') goto yy620;",
          "6056:   if (yych != 't') goto yy187;",
          "6057: yy620:",
          "6058:   YYDEBUG(620, *YYCURSOR);",
          "6059:   yych = *++YYCURSOR;",
          "6060:   if (yych == 'S') goto yy621;",
          "6061:   if (yych != 's') goto yy187;",
          "6062: yy621:",
          "6063:   YYDEBUG(621, *YYCURSOR);",
          "6064:   ++YYCURSOR;",
          "6065:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6066:    goto yy186;",
          "6067:   }",
          "6068:   YYDEBUG(622, *YYCURSOR);",
          "6069:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6070: #line 1172 \"Zend/zend_language_scanner.l\"",
          "6071:   {",
          "6072:  return T_IMPLEMENTS;",
          "6073: }",
          "6074: #line 6075 \"Zend/zend_language_scanner.c\"",
          "6075: yy623:",
          "6076:   YYDEBUG(623, *YYCURSOR);",
          "6077:   yych = *++YYCURSOR;",
          "6078:   if (yych == 'R') goto yy631;",
          "6079:   if (yych == 'r') goto yy631;",
          "6080:   goto yy187;",
          "6081: yy624:",
          "6082:   YYDEBUG(624, *YYCURSOR);",
          "6083:   yych = *++YYCURSOR;",
          "6084:   if (yych <= 'Y') {",
          "6085:    if (yych == 'A') goto yy627;",
          "6086:    if (yych <= 'X') goto yy187;",
          "6087:   } else {",
          "6088:    if (yych <= 'a') {",
          "6089:     if (yych <= '`') goto yy187;",
          "6090:     goto yy627;",
          "6091:    } else {",
          "6092:     if (yych != 'y') goto yy187;",
          "6093:    }",
          "6094:   }",
          "6095:   YYDEBUG(625, *YYCURSOR);",
          "6096:   ++YYCURSOR;",
          "6097:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6098:    goto yy186;",
          "6099:   }",
          "6100:   YYDEBUG(626, *YYCURSOR);",
          "6101:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6102: #line 1044 \"Zend/zend_language_scanner.l\"",
          "6103:   {",
          "6104:  return T_TRY;",
          "6105: }",
          "6106: #line 6107 \"Zend/zend_language_scanner.c\"",
          "6107: yy627:",
          "6108:   YYDEBUG(627, *YYCURSOR);",
          "6109:   yych = *++YYCURSOR;",
          "6110:   if (yych == 'I') goto yy628;",
          "6111:   if (yych != 'i') goto yy187;",
          "6112: yy628:",
          "6113:   YYDEBUG(628, *YYCURSOR);",
          "6114:   yych = *++YYCURSOR;",
          "6115:   if (yych == 'T') goto yy629;",
          "6116:   if (yych != 't') goto yy187;",
          "6117: yy629:",
          "6118:   YYDEBUG(629, *YYCURSOR);",
          "6119:   ++YYCURSOR;",
          "6120:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6121:    goto yy186;",
          "6122:   }",
          "6123:   YYDEBUG(630, *YYCURSOR);",
          "6124:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6125: #line 1164 \"Zend/zend_language_scanner.l\"",
          "6126:   {",
          "6127:  return T_TRAIT;",
          "6128: }",
          "6129: #line 6130 \"Zend/zend_language_scanner.c\"",
          "6130: yy631:",
          "6131:   YYDEBUG(631, *YYCURSOR);",
          "6132:   yych = *++YYCURSOR;",
          "6133:   if (yych == 'O') goto yy632;",
          "6134:   if (yych != 'o') goto yy187;",
          "6135: yy632:",
          "6136:   YYDEBUG(632, *YYCURSOR);",
          "6137:   yych = *++YYCURSOR;",
          "6138:   if (yych == 'W') goto yy633;",
          "6139:   if (yych != 'w') goto yy187;",
          "6140: yy633:",
          "6141:   YYDEBUG(633, *YYCURSOR);",
          "6142:   ++YYCURSOR;",
          "6143:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6144:    goto yy186;",
          "6145:   }",
          "6146:   YYDEBUG(634, *YYCURSOR);",
          "6147:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6148: #line 1056 \"Zend/zend_language_scanner.l\"",
          "6149:   {",
          "6150:  return T_THROW;",
          "6151: }",
          "6152: #line 6153 \"Zend/zend_language_scanner.c\"",
          "6153: yy635:",
          "6154:   YYDEBUG(635, *YYCURSOR);",
          "6155:   yych = *++YYCURSOR;",
          "6156:   if (yych == 'E') goto yy636;",
          "6157:   if (yych != 'e') goto yy187;",
          "6158: yy636:",
          "6159:   YYDEBUG(636, *YYCURSOR);",
          "6160:   yych = *++YYCURSOR;",
          "6161:   if (yych == 'L') goto yy637;",
          "6162:   if (yych != 'l') goto yy187;",
          "6163: yy637:",
          "6164:   YYDEBUG(637, *YYCURSOR);",
          "6165:   yych = *++YYCURSOR;",
          "6166:   if (yych == 'D') goto yy638;",
          "6167:   if (yych != 'd') goto yy187;",
          "6168: yy638:",
          "6169:   YYDEBUG(638, *YYCURSOR);",
          "6170:   ++YYCURSOR;",
          "6171:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6172:    goto yy186;",
          "6173:   }",
          "6174:   YYDEBUG(639, *YYCURSOR);",
          "6175:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6176: #line 1040 \"Zend/zend_language_scanner.l\"",
          "6177:   {",
          "6178:  return T_YIELD;",
          "6179: }",
          "6180: #line 6181 \"Zend/zend_language_scanner.c\"",
          "6181: yy640:",
          "6182:   YYDEBUG(640, *YYCURSOR);",
          "6183:   yych = *++YYCURSOR;",
          "6184:   if (yych <= 'T') {",
          "6185:    if (yych == 'Q') goto yy642;",
          "6186:    if (yych <= 'S') goto yy187;",
          "6187:   } else {",
          "6188:    if (yych <= 'q') {",
          "6189:     if (yych <= 'p') goto yy187;",
          "6190:     goto yy642;",
          "6191:    } else {",
          "6192:     if (yych != 't') goto yy187;",
          "6193:    }",
          "6194:   }",
          "6195:   YYDEBUG(641, *YYCURSOR);",
          "6196:   yych = *++YYCURSOR;",
          "6197:   if (yych == 'U') goto yy654;",
          "6198:   if (yych == 'u') goto yy654;",
          "6199:   goto yy187;",
          "6200: yy642:",
          "6201:   YYDEBUG(642, *YYCURSOR);",
          "6202:   yych = *++YYCURSOR;",
          "6203:   if (yych == 'U') goto yy643;",
          "6204:   if (yych != 'u') goto yy187;",
          "6205: yy643:",
          "6206:   YYDEBUG(643, *YYCURSOR);",
          "6207:   yych = *++YYCURSOR;",
          "6208:   if (yych == 'I') goto yy644;",
          "6209:   if (yych != 'i') goto yy187;",
          "6210: yy644:",
          "6211:   YYDEBUG(644, *YYCURSOR);",
          "6212:   yych = *++YYCURSOR;",
          "6213:   if (yych == 'R') goto yy645;",
          "6214:   if (yych != 'r') goto yy187;",
          "6215: yy645:",
          "6216:   YYDEBUG(645, *YYCURSOR);",
          "6217:   yych = *++YYCURSOR;",
          "6218:   if (yych == 'E') goto yy646;",
          "6219:   if (yych != 'e') goto yy187;",
          "6220: yy646:",
          "6221:   YYDEBUG(646, *YYCURSOR);",
          "6222:   ++YYCURSOR;",
          "6223:   if ((yych = *YYCURSOR) <= '^') {",
          "6224:    if (yych <= '9') {",
          "6225:     if (yych >= '0') goto yy186;",
          "6226:    } else {",
          "6227:     if (yych <= '@') goto yy647;",
          "6228:     if (yych <= 'Z') goto yy186;",
          "6229:    }",
          "6230:   } else {",
          "6231:    if (yych <= '`') {",
          "6232:     if (yych <= '_') goto yy648;",
          "6233:    } else {",
          "6234:     if (yych <= 'z') goto yy186;",
          "6235:     if (yych >= 0x7F) goto yy186;",
          "6236:    }",
          "6237:   }",
          "6238: yy647:",
          "6239:   YYDEBUG(647, *YYCURSOR);",
          "6240:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6241: #line 1266 \"Zend/zend_language_scanner.l\"",
          "6242:   {",
          "6243:  return T_REQUIRE;",
          "6244: }",
          "6245: #line 6246 \"Zend/zend_language_scanner.c\"",
          "6246: yy648:",
          "6247:   YYDEBUG(648, *YYCURSOR);",
          "6248:   yych = *++YYCURSOR;",
          "6249:   if (yych == 'O') goto yy649;",
          "6250:   if (yych != 'o') goto yy187;",
          "6251: yy649:",
          "6252:   YYDEBUG(649, *YYCURSOR);",
          "6253:   yych = *++YYCURSOR;",
          "6254:   if (yych == 'N') goto yy650;",
          "6255:   if (yych != 'n') goto yy187;",
          "6256: yy650:",
          "6257:   YYDEBUG(650, *YYCURSOR);",
          "6258:   yych = *++YYCURSOR;",
          "6259:   if (yych == 'C') goto yy651;",
          "6260:   if (yych != 'c') goto yy187;",
          "6261: yy651:",
          "6262:   YYDEBUG(651, *YYCURSOR);",
          "6263:   yych = *++YYCURSOR;",
          "6264:   if (yych == 'E') goto yy652;",
          "6265:   if (yych != 'e') goto yy187;",
          "6266: yy652:",
          "6267:   YYDEBUG(652, *YYCURSOR);",
          "6268:   ++YYCURSOR;",
          "6269:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6270:    goto yy186;",
          "6271:   }",
          "6272:   YYDEBUG(653, *YYCURSOR);",
          "6273:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6274: #line 1270 \"Zend/zend_language_scanner.l\"",
          "6275:   {",
          "6276:  return T_REQUIRE_ONCE;",
          "6277: }",
          "6278: #line 6279 \"Zend/zend_language_scanner.c\"",
          "6279: yy654:",
          "6280:   YYDEBUG(654, *YYCURSOR);",
          "6281:   yych = *++YYCURSOR;",
          "6282:   if (yych == 'R') goto yy655;",
          "6283:   if (yych != 'r') goto yy187;",
          "6284: yy655:",
          "6285:   YYDEBUG(655, *YYCURSOR);",
          "6286:   yych = *++YYCURSOR;",
          "6287:   if (yych == 'N') goto yy656;",
          "6288:   if (yych != 'n') goto yy187;",
          "6289: yy656:",
          "6290:   YYDEBUG(656, *YYCURSOR);",
          "6291:   ++YYCURSOR;",
          "6292:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6293:    goto yy186;",
          "6294:   }",
          "6295:   YYDEBUG(657, *YYCURSOR);",
          "6296:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6297: #line 1036 \"Zend/zend_language_scanner.l\"",
          "6298:   {",
          "6299:  return T_RETURN;",
          "6300: }",
          "6301: #line 6302 \"Zend/zend_language_scanner.c\"",
          "6302: yy658:",
          "6303:   YYDEBUG(658, *YYCURSOR);",
          "6304:   yych = *++YYCURSOR;",
          "6305:   if (yych <= 'T') {",
          "6306:    if (yych <= 'L') {",
          "6307:     if (yych <= 'K') goto yy187;",
          "6308:     goto yy681;",
          "6309:    } else {",
          "6310:     if (yych <= 'R') goto yy187;",
          "6311:     if (yych <= 'S') goto yy680;",
          "6312:     goto yy679;",
          "6313:    }",
          "6314:   } else {",
          "6315:    if (yych <= 'r') {",
          "6316:     if (yych == 'l') goto yy681;",
          "6317:     goto yy187;",
          "6318:    } else {",
          "6319:     if (yych <= 's') goto yy680;",
          "6320:     if (yych <= 't') goto yy679;",
          "6321:     goto yy187;",
          "6322:    }",
          "6323:   }",
          "6324: yy659:",
          "6325:   YYDEBUG(659, *YYCURSOR);",
          "6326:   yych = *++YYCURSOR;",
          "6327:   if (yych <= 'O') {",
          "6328:    if (yych == 'A') goto yy671;",
          "6329:    if (yych <= 'N') goto yy187;",
          "6330:    goto yy672;",
          "6331:   } else {",
          "6332:    if (yych <= 'a') {",
          "6333:     if (yych <= '`') goto yy187;",
          "6334:     goto yy671;",
          "6335:    } else {",
          "6336:     if (yych == 'o') goto yy672;",
          "6337:     goto yy187;",
          "6338:    }",
          "6339:   }",
          "6340: yy660:",
          "6341:   YYDEBUG(660, *YYCURSOR);",
          "6342:   yych = *++YYCURSOR;",
          "6343:   if (yych == 'N') goto yy661;",
          "6344:   if (yych != 'n') goto yy187;",
          "6345: yy661:",
          "6346:   YYDEBUG(661, *YYCURSOR);",
          "6347:   yych = *++YYCURSOR;",
          "6348:   if (yych <= 'T') {",
          "6349:    if (yych <= 'R') goto yy187;",
          "6350:    if (yych >= 'T') goto yy663;",
          "6351:   } else {",
          "6352:    if (yych <= 'r') goto yy187;",
          "6353:    if (yych <= 's') goto yy662;",
          "6354:    if (yych <= 't') goto yy663;",
          "6355:    goto yy187;",
          "6356:   }",
          "6357: yy662:",
          "6358:   YYDEBUG(662, *YYCURSOR);",
          "6359:   yych = *++YYCURSOR;",
          "6360:   if (yych == 'T') goto yy669;",
          "6361:   if (yych == 't') goto yy669;",
          "6362:   goto yy187;",
          "6363: yy663:",
          "6364:   YYDEBUG(663, *YYCURSOR);",
          "6365:   yych = *++YYCURSOR;",
          "6366:   if (yych == 'I') goto yy664;",
          "6367:   if (yych != 'i') goto yy187;",
          "6368: yy664:",
          "6369:   YYDEBUG(664, *YYCURSOR);",
          "6370:   yych = *++YYCURSOR;",
          "6371:   if (yych == 'N') goto yy665;",
          "6372:   if (yych != 'n') goto yy187;",
          "6373: yy665:",
          "6374:   YYDEBUG(665, *YYCURSOR);",
          "6375:   yych = *++YYCURSOR;",
          "6376:   if (yych == 'U') goto yy666;",
          "6377:   if (yych != 'u') goto yy187;",
          "6378: yy666:",
          "6379:   YYDEBUG(666, *YYCURSOR);",
          "6380:   yych = *++YYCURSOR;",
          "6381:   if (yych == 'E') goto yy667;",
          "6382:   if (yych != 'e') goto yy187;",
          "6383: yy667:",
          "6384:   YYDEBUG(667, *YYCURSOR);",
          "6385:   ++YYCURSOR;",
          "6386:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6387:    goto yy186;",
          "6388:   }",
          "6389:   YYDEBUG(668, *YYCURSOR);",
          "6390:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6391: #line 1140 \"Zend/zend_language_scanner.l\"",
          "6392:   {",
          "6393:  return T_CONTINUE;",
          "6394: }",
          "6395: #line 6396 \"Zend/zend_language_scanner.c\"",
          "6396: yy669:",
          "6397:   YYDEBUG(669, *YYCURSOR);",
          "6398:   ++YYCURSOR;",
          "6399:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6400:    goto yy186;",
          "6401:   }",
          "6402:   YYDEBUG(670, *YYCURSOR);",
          "6403:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6404: #line 1032 \"Zend/zend_language_scanner.l\"",
          "6405:   {",
          "6406:  return T_CONST;",
          "6407: }",
          "6408: #line 6409 \"Zend/zend_language_scanner.c\"",
          "6409: yy671:",
          "6410:   YYDEBUG(671, *YYCURSOR);",
          "6411:   yych = *++YYCURSOR;",
          "6412:   if (yych == 'S') goto yy676;",
          "6413:   if (yych == 's') goto yy676;",
          "6414:   goto yy187;",
          "6415: yy672:",
          "6416:   YYDEBUG(672, *YYCURSOR);",
          "6417:   yych = *++YYCURSOR;",
          "6418:   if (yych == 'N') goto yy673;",
          "6419:   if (yych != 'n') goto yy187;",
          "6420: yy673:",
          "6421:   YYDEBUG(673, *YYCURSOR);",
          "6422:   yych = *++YYCURSOR;",
          "6423:   if (yych == 'E') goto yy674;",
          "6424:   if (yych != 'e') goto yy187;",
          "6425: yy674:",
          "6426:   YYDEBUG(674, *YYCURSOR);",
          "6427:   ++YYCURSOR;",
          "6428:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6429:    goto yy186;",
          "6430:   }",
          "6431:   YYDEBUG(675, *YYCURSOR);",
          "6432:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6433: #line 1218 \"Zend/zend_language_scanner.l\"",
          "6434:   {",
          "6435:  return T_CLONE;",
          "6436: }",
          "6437: #line 6438 \"Zend/zend_language_scanner.c\"",
          "6438: yy676:",
          "6439:   YYDEBUG(676, *YYCURSOR);",
          "6440:   yych = *++YYCURSOR;",
          "6441:   if (yych == 'S') goto yy677;",
          "6442:   if (yych != 's') goto yy187;",
          "6443: yy677:",
          "6444:   YYDEBUG(677, *YYCURSOR);",
          "6445:   ++YYCURSOR;",
          "6446:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6447:    goto yy186;",
          "6448:   }",
          "6449:   YYDEBUG(678, *YYCURSOR);",
          "6450:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6451: #line 1156 \"Zend/zend_language_scanner.l\"",
          "6452:   {",
          "6453:  return T_CLASS;",
          "6454: }",
          "6455: #line 6456 \"Zend/zend_language_scanner.c\"",
          "6456: yy679:",
          "6457:   YYDEBUG(679, *YYCURSOR);",
          "6458:   yych = *++YYCURSOR;",
          "6459:   if (yych == 'C') goto yy690;",
          "6460:   if (yych == 'c') goto yy690;",
          "6461:   goto yy187;",
          "6462: yy680:",
          "6463:   YYDEBUG(680, *YYCURSOR);",
          "6464:   yych = *++YYCURSOR;",
          "6465:   if (yych == 'E') goto yy688;",
          "6466:   if (yych == 'e') goto yy688;",
          "6467:   goto yy187;",
          "6468: yy681:",
          "6469:   YYDEBUG(681, *YYCURSOR);",
          "6470:   yych = *++YYCURSOR;",
          "6471:   if (yych == 'L') goto yy682;",
          "6472:   if (yych != 'l') goto yy187;",
          "6473: yy682:",
          "6474:   YYDEBUG(682, *YYCURSOR);",
          "6475:   yych = *++YYCURSOR;",
          "6476:   if (yych == 'A') goto yy683;",
          "6477:   if (yych != 'a') goto yy187;",
          "6478: yy683:",
          "6479:   YYDEBUG(683, *YYCURSOR);",
          "6480:   yych = *++YYCURSOR;",
          "6481:   if (yych == 'B') goto yy684;",
          "6482:   if (yych != 'b') goto yy187;",
          "6483: yy684:",
          "6484:   YYDEBUG(684, *YYCURSOR);",
          "6485:   yych = *++YYCURSOR;",
          "6486:   if (yych == 'L') goto yy685;",
          "6487:   if (yych != 'l') goto yy187;",
          "6488: yy685:",
          "6489:   YYDEBUG(685, *YYCURSOR);",
          "6490:   yych = *++YYCURSOR;",
          "6491:   if (yych == 'E') goto yy686;",
          "6492:   if (yych != 'e') goto yy187;",
          "6493: yy686:",
          "6494:   YYDEBUG(686, *YYCURSOR);",
          "6495:   ++YYCURSOR;",
          "6496:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6497:    goto yy186;",
          "6498:   }",
          "6499:   YYDEBUG(687, *YYCURSOR);",
          "6500:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6501: #line 1342 \"Zend/zend_language_scanner.l\"",
          "6502:   {",
          "6503:  return T_CALLABLE;",
          "6504: }",
          "6505: #line 6506 \"Zend/zend_language_scanner.c\"",
          "6506: yy688:",
          "6507:   YYDEBUG(688, *YYCURSOR);",
          "6508:   ++YYCURSOR;",
          "6509:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6510:    goto yy186;",
          "6511:   }",
          "6512:   YYDEBUG(689, *YYCURSOR);",
          "6513:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6514: #line 1128 \"Zend/zend_language_scanner.l\"",
          "6515:   {",
          "6516:  return T_CASE;",
          "6517: }",
          "6518: #line 6519 \"Zend/zend_language_scanner.c\"",
          "6519: yy690:",
          "6520:   YYDEBUG(690, *YYCURSOR);",
          "6521:   yych = *++YYCURSOR;",
          "6522:   if (yych == 'H') goto yy691;",
          "6523:   if (yych != 'h') goto yy187;",
          "6524: yy691:",
          "6525:   YYDEBUG(691, *YYCURSOR);",
          "6526:   ++YYCURSOR;",
          "6527:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6528:    goto yy186;",
          "6529:   }",
          "6530:   YYDEBUG(692, *YYCURSOR);",
          "6531:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6532: #line 1048 \"Zend/zend_language_scanner.l\"",
          "6533:   {",
          "6534:  return T_CATCH;",
          "6535: }",
          "6536: #line 6537 \"Zend/zend_language_scanner.c\"",
          "6537: yy693:",
          "6538:   YYDEBUG(693, *YYCURSOR);",
          "6539:   yych = *++YYCURSOR;",
          "6540:   if (yych == 'N') goto yy710;",
          "6541:   if (yych == 'n') goto yy710;",
          "6542:   goto yy187;",
          "6543: yy694:",
          "6544:   YYDEBUG(694, *YYCURSOR);",
          "6545:   yych = *++YYCURSOR;",
          "6546:   if (yych == 'R') goto yy703;",
          "6547:   if (yych == 'r') goto yy703;",
          "6548:   goto yy187;",
          "6549: yy695:",
          "6550:   YYDEBUG(695, *YYCURSOR);",
          "6551:   yych = *++YYCURSOR;",
          "6552:   if (yych == 'N') goto yy696;",
          "6553:   if (yych != 'n') goto yy187;",
          "6554: yy696:",
          "6555:   YYDEBUG(696, *YYCURSOR);",
          "6556:   yych = *++YYCURSOR;",
          "6557:   if (yych == 'C') goto yy697;",
          "6558:   if (yych != 'c') goto yy187;",
          "6559: yy697:",
          "6560:   YYDEBUG(697, *YYCURSOR);",
          "6561:   yych = *++YYCURSOR;",
          "6562:   if (yych == 'T') goto yy698;",
          "6563:   if (yych != 't') goto yy187;",
          "6564: yy698:",
          "6565:   YYDEBUG(698, *YYCURSOR);",
          "6566:   yych = *++YYCURSOR;",
          "6567:   if (yych == 'I') goto yy699;",
          "6568:   if (yych != 'i') goto yy187;",
          "6569: yy699:",
          "6570:   YYDEBUG(699, *YYCURSOR);",
          "6571:   yych = *++YYCURSOR;",
          "6572:   if (yych == 'O') goto yy700;",
          "6573:   if (yych != 'o') goto yy187;",
          "6574: yy700:",
          "6575:   YYDEBUG(700, *YYCURSOR);",
          "6576:   yych = *++YYCURSOR;",
          "6577:   if (yych == 'N') goto yy701;",
          "6578:   if (yych != 'n') goto yy187;",
          "6579: yy701:",
          "6580:   YYDEBUG(701, *YYCURSOR);",
          "6581:   ++YYCURSOR;",
          "6582:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6583:    goto yy186;",
          "6584:   }",
          "6585:   YYDEBUG(702, *YYCURSOR);",
          "6586:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6587: #line 1028 \"Zend/zend_language_scanner.l\"",
          "6588:   {",
          "6589:  return T_FUNCTION;",
          "6590: }",
          "6591: #line 6592 \"Zend/zend_language_scanner.c\"",
          "6592: yy703:",
          "6593:   YYDEBUG(703, *YYCURSOR);",
          "6594:   ++YYCURSOR;",
          "6595:   if ((yych = *YYCURSOR) <= '^') {",
          "6596:    if (yych <= '@') {",
          "6597:     if (yych <= '/') goto yy704;",
          "6598:     if (yych <= '9') goto yy186;",
          "6599:    } else {",
          "6600:     if (yych == 'E') goto yy705;",
          "6601:     if (yych <= 'Z') goto yy186;",
          "6602:    }",
          "6603:   } else {",
          "6604:    if (yych <= 'd') {",
          "6605:     if (yych != '`') goto yy186;",
          "6606:    } else {",
          "6607:     if (yych <= 'e') goto yy705;",
          "6608:     if (yych <= 'z') goto yy186;",
          "6609:     if (yych >= 0x7F) goto yy186;",
          "6610:    }",
          "6611:   }",
          "6612: yy704:",
          "6613:   YYDEBUG(704, *YYCURSOR);",
          "6614:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6615: #line 1088 \"Zend/zend_language_scanner.l\"",
          "6616:   {",
          "6617:  return T_FOR;",
          "6618: }",
          "6619: #line 6620 \"Zend/zend_language_scanner.c\"",
          "6620: yy705:",
          "6621:   YYDEBUG(705, *YYCURSOR);",
          "6622:   yych = *++YYCURSOR;",
          "6623:   if (yych == 'A') goto yy706;",
          "6624:   if (yych != 'a') goto yy187;",
          "6625: yy706:",
          "6626:   YYDEBUG(706, *YYCURSOR);",
          "6627:   yych = *++YYCURSOR;",
          "6628:   if (yych == 'C') goto yy707;",
          "6629:   if (yych != 'c') goto yy187;",
          "6630: yy707:",
          "6631:   YYDEBUG(707, *YYCURSOR);",
          "6632:   yych = *++YYCURSOR;",
          "6633:   if (yych == 'H') goto yy708;",
          "6634:   if (yych != 'h') goto yy187;",
          "6635: yy708:",
          "6636:   YYDEBUG(708, *YYCURSOR);",
          "6637:   ++YYCURSOR;",
          "6638:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6639:    goto yy186;",
          "6640:   }",
          "6641:   YYDEBUG(709, *YYCURSOR);",
          "6642:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6643: #line 1096 \"Zend/zend_language_scanner.l\"",
          "6644:   {",
          "6645:  return T_FOREACH;",
          "6646: }",
          "6647: #line 6648 \"Zend/zend_language_scanner.c\"",
          "6648: yy710:",
          "6649:   YYDEBUG(710, *YYCURSOR);",
          "6650:   yych = *++YYCURSOR;",
          "6651:   if (yych == 'A') goto yy711;",
          "6652:   if (yych != 'a') goto yy187;",
          "6653: yy711:",
          "6654:   YYDEBUG(711, *YYCURSOR);",
          "6655:   yych = *++YYCURSOR;",
          "6656:   if (yych == 'L') goto yy712;",
          "6657:   if (yych != 'l') goto yy187;",
          "6658: yy712:",
          "6659:   YYDEBUG(712, *YYCURSOR);",
          "6660:   ++YYCURSOR;",
          "6661:   if ((yych = *YYCURSOR) <= '^') {",
          "6662:    if (yych <= '@') {",
          "6663:     if (yych <= '/') goto yy713;",
          "6664:     if (yych <= '9') goto yy186;",
          "6665:    } else {",
          "6666:     if (yych == 'L') goto yy714;",
          "6667:     if (yych <= 'Z') goto yy186;",
          "6668:    }",
          "6669:   } else {",
          "6670:    if (yych <= 'k') {",
          "6671:     if (yych != '`') goto yy186;",
          "6672:    } else {",
          "6673:     if (yych <= 'l') goto yy714;",
          "6674:     if (yych <= 'z') goto yy186;",
          "6675:     if (yych >= 0x7F) goto yy186;",
          "6676:    }",
          "6677:   }",
          "6678: yy713:",
          "6679:   YYDEBUG(713, *YYCURSOR);",
          "6680:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6681: #line 1310 \"Zend/zend_language_scanner.l\"",
          "6682:   {",
          "6683:  return T_FINAL;",
          "6684: }",
          "6685: #line 6686 \"Zend/zend_language_scanner.c\"",
          "6686: yy714:",
          "6687:   YYDEBUG(714, *YYCURSOR);",
          "6688:   yych = *++YYCURSOR;",
          "6689:   if (yych == 'Y') goto yy715;",
          "6690:   if (yych != 'y') goto yy187;",
          "6691: yy715:",
          "6692:   YYDEBUG(715, *YYCURSOR);",
          "6693:   ++YYCURSOR;",
          "6694:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6695:    goto yy186;",
          "6696:   }",
          "6697:   YYDEBUG(716, *YYCURSOR);",
          "6698:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6699: #line 1052 \"Zend/zend_language_scanner.l\"",
          "6700:   {",
          "6701:  return T_FINALLY;",
          "6702: }",
          "6703: #line 6704 \"Zend/zend_language_scanner.c\"",
          "6704: yy717:",
          "6705:   YYDEBUG(717, *YYCURSOR);",
          "6706:   yych = *++YYCURSOR;",
          "6707:   if (yych <= 'F') {",
          "6708:    if (yych == 'C') goto yy723;",
          "6709:    if (yych <= 'E') goto yy187;",
          "6710:    goto yy724;",
          "6711:   } else {",
          "6712:    if (yych <= 'c') {",
          "6713:     if (yych <= 'b') goto yy187;",
          "6714:     goto yy723;",
          "6715:    } else {",
          "6716:     if (yych == 'f') goto yy724;",
          "6717:     goto yy187;",
          "6718:    }",
          "6719:   }",
          "6720: yy718:",
          "6721:   YYDEBUG(718, *YYCURSOR);",
          "6722:   yych = *++YYCURSOR;",
          "6723:   if (yych == 'E') goto yy721;",
          "6724:   if (yych == 'e') goto yy721;",
          "6725:   goto yy187;",
          "6726: yy719:",
          "6727:   YYDEBUG(719, *YYCURSOR);",
          "6728:   ++YYCURSOR;",
          "6729:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6730:    goto yy186;",
          "6731:   }",
          "6732:   YYDEBUG(720, *YYCURSOR);",
          "6733:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6734: #line 1084 \"Zend/zend_language_scanner.l\"",
          "6735:   {",
          "6736:  return T_DO;",
          "6737: }",
          "6738: #line 6739 \"Zend/zend_language_scanner.c\"",
          "6739: yy721:",
          "6740:   YYDEBUG(721, *YYCURSOR);",
          "6741:   ++YYCURSOR;",
          "6742:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6743:    goto yy186;",
          "6744:   }",
          "6745:   YYDEBUG(722, *YYCURSOR);",
          "6746:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6747: #line 1024 \"Zend/zend_language_scanner.l\"",
          "6748:   {",
          "6749:  return T_EXIT;",
          "6750: }",
          "6751: #line 6752 \"Zend/zend_language_scanner.c\"",
          "6752: yy723:",
          "6753:   YYDEBUG(723, *YYCURSOR);",
          "6754:   yych = *++YYCURSOR;",
          "6755:   if (yych == 'L') goto yy730;",
          "6756:   if (yych == 'l') goto yy730;",
          "6757:   goto yy187;",
          "6758: yy724:",
          "6759:   YYDEBUG(724, *YYCURSOR);",
          "6760:   yych = *++YYCURSOR;",
          "6761:   if (yych == 'A') goto yy725;",
          "6762:   if (yych != 'a') goto yy187;",
          "6763: yy725:",
          "6764:   YYDEBUG(725, *YYCURSOR);",
          "6765:   yych = *++YYCURSOR;",
          "6766:   if (yych == 'U') goto yy726;",
          "6767:   if (yych != 'u') goto yy187;",
          "6768: yy726:",
          "6769:   YYDEBUG(726, *YYCURSOR);",
          "6770:   yych = *++YYCURSOR;",
          "6771:   if (yych == 'L') goto yy727;",
          "6772:   if (yych != 'l') goto yy187;",
          "6773: yy727:",
          "6774:   YYDEBUG(727, *YYCURSOR);",
          "6775:   yych = *++YYCURSOR;",
          "6776:   if (yych == 'T') goto yy728;",
          "6777:   if (yych != 't') goto yy187;",
          "6778: yy728:",
          "6779:   YYDEBUG(728, *YYCURSOR);",
          "6780:   ++YYCURSOR;",
          "6781:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6782:    goto yy186;",
          "6783:   }",
          "6784:   YYDEBUG(729, *YYCURSOR);",
          "6785:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6786: #line 1132 \"Zend/zend_language_scanner.l\"",
          "6787:   {",
          "6788:  return T_DEFAULT;",
          "6789: }",
          "6790: #line 6791 \"Zend/zend_language_scanner.c\"",
          "6791: yy730:",
          "6792:   YYDEBUG(730, *YYCURSOR);",
          "6793:   yych = *++YYCURSOR;",
          "6794:   if (yych == 'A') goto yy731;",
          "6795:   if (yych != 'a') goto yy187;",
          "6796: yy731:",
          "6797:   YYDEBUG(731, *YYCURSOR);",
          "6798:   yych = *++YYCURSOR;",
          "6799:   if (yych == 'R') goto yy732;",
          "6800:   if (yych != 'r') goto yy187;",
          "6801: yy732:",
          "6802:   YYDEBUG(732, *YYCURSOR);",
          "6803:   yych = *++YYCURSOR;",
          "6804:   if (yych == 'E') goto yy733;",
          "6805:   if (yych != 'e') goto yy187;",
          "6806: yy733:",
          "6807:   YYDEBUG(733, *YYCURSOR);",
          "6808:   ++YYCURSOR;",
          "6809:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6810:    goto yy186;",
          "6811:   }",
          "6812:   YYDEBUG(734, *YYCURSOR);",
          "6813:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6814: #line 1104 \"Zend/zend_language_scanner.l\"",
          "6815:   {",
          "6816:  return T_DECLARE;",
          "6817: }",
          "6818: #line 6819 \"Zend/zend_language_scanner.c\"",
          "6819: yy735:",
          "6820:   YYDEBUG(735, *YYCURSOR);",
          "6821:   yych = *++YYCURSOR;",
          "6822:   if (yych == 'H') goto yy797;",
          "6823:   if (yych == 'h') goto yy797;",
          "6824:   goto yy187;",
          "6825: yy736:",
          "6826:   YYDEBUG(736, *YYCURSOR);",
          "6827:   yych = *++YYCURSOR;",
          "6828:   if (yych == 'S') goto yy791;",
          "6829:   if (yych == 's') goto yy791;",
          "6830:   goto yy187;",
          "6831: yy737:",
          "6832:   YYDEBUG(737, *YYCURSOR);",
          "6833:   yych = *++YYCURSOR;",
          "6834:   if (yych == 'P') goto yy787;",
          "6835:   if (yych == 'p') goto yy787;",
          "6836:   goto yy187;",
          "6837: yy738:",
          "6838:   YYDEBUG(738, *YYCURSOR);",
          "6839:   yych = *++YYCURSOR;",
          "6840:   if (yych == 'D') goto yy753;",
          "6841:   if (yych == 'd') goto yy753;",
          "6842:   goto yy187;",
          "6843: yy739:",
          "6844:   YYDEBUG(739, *YYCURSOR);",
          "6845:   yych = *++YYCURSOR;",
          "6846:   if (yych == 'A') goto yy750;",
          "6847:   if (yych == 'a') goto yy750;",
          "6848:   goto yy187;",
          "6849: yy740:",
          "6850:   YYDEBUG(740, *YYCURSOR);",
          "6851:   yych = *++YYCURSOR;",
          "6852:   if (yych <= 'T') {",
          "6853:    if (yych == 'I') goto yy741;",
          "6854:    if (yych <= 'S') goto yy187;",
          "6855:    goto yy742;",
          "6856:   } else {",
          "6857:    if (yych <= 'i') {",
          "6858:     if (yych <= 'h') goto yy187;",
          "6859:    } else {",
          "6860:     if (yych == 't') goto yy742;",
          "6861:     goto yy187;",
          "6862:    }",
          "6863:   }",
          "6864: yy741:",
          "6865:   YYDEBUG(741, *YYCURSOR);",
          "6866:   yych = *++YYCURSOR;",
          "6867:   if (yych == 'T') goto yy748;",
          "6868:   if (yych == 't') goto yy748;",
          "6869:   goto yy187;",
          "6870: yy742:",
          "6871:   YYDEBUG(742, *YYCURSOR);",
          "6872:   yych = *++YYCURSOR;",
          "6873:   if (yych == 'E') goto yy743;",
          "6874:   if (yych != 'e') goto yy187;",
          "6875: yy743:",
          "6876:   YYDEBUG(743, *YYCURSOR);",
          "6877:   yych = *++YYCURSOR;",
          "6878:   if (yych == 'N') goto yy744;",
          "6879:   if (yych != 'n') goto yy187;",
          "6880: yy744:",
          "6881:   YYDEBUG(744, *YYCURSOR);",
          "6882:   yych = *++YYCURSOR;",
          "6883:   if (yych == 'D') goto yy745;",
          "6884:   if (yych != 'd') goto yy187;",
          "6885: yy745:",
          "6886:   YYDEBUG(745, *YYCURSOR);",
          "6887:   yych = *++YYCURSOR;",
          "6888:   if (yych == 'S') goto yy746;",
          "6889:   if (yych != 's') goto yy187;",
          "6890: yy746:",
          "6891:   YYDEBUG(746, *YYCURSOR);",
          "6892:   ++YYCURSOR;",
          "6893:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6894:    goto yy186;",
          "6895:   }",
          "6896:   YYDEBUG(747, *YYCURSOR);",
          "6897:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6898: #line 1168 \"Zend/zend_language_scanner.l\"",
          "6899:   {",
          "6900:  return T_EXTENDS;",
          "6901: }",
          "6902: #line 6903 \"Zend/zend_language_scanner.c\"",
          "6903: yy748:",
          "6904:   YYDEBUG(748, *YYCURSOR);",
          "6905:   ++YYCURSOR;",
          "6906:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6907:    goto yy186;",
          "6908:   }",
          "6909:   YYDEBUG(749, *YYCURSOR);",
          "6910:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6911: #line 1020 \"Zend/zend_language_scanner.l\"",
          "6912:   {",
          "6913:  return T_EXIT;",
          "6914: }",
          "6915: #line 6916 \"Zend/zend_language_scanner.c\"",
          "6916: yy750:",
          "6917:   YYDEBUG(750, *YYCURSOR);",
          "6918:   yych = *++YYCURSOR;",
          "6919:   if (yych == 'L') goto yy751;",
          "6920:   if (yych != 'l') goto yy187;",
          "6921: yy751:",
          "6922:   YYDEBUG(751, *YYCURSOR);",
          "6923:   ++YYCURSOR;",
          "6924:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6925:    goto yy186;",
          "6926:   }",
          "6927:   YYDEBUG(752, *YYCURSOR);",
          "6928:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6929: #line 1254 \"Zend/zend_language_scanner.l\"",
          "6930:   {",
          "6931:  return T_EVAL;",
          "6932: }",
          "6933: #line 6934 \"Zend/zend_language_scanner.c\"",
          "6934: yy753:",
          "6935:   YYDEBUG(753, *YYCURSOR);",
          "6936:   yych = *++YYCURSOR;",
          "6937:   YYDEBUG(-1, yych);",
          "6938:   switch (yych) {",
          "6939:   case 'D':",
          "6940:   case 'd': goto yy754;",
          "6941:   case 'F':",
          "6942:   case 'f': goto yy755;",
          "6943:   case 'I':",
          "6944:   case 'i': goto yy756;",
          "6945:   case 'S':",
          "6946:   case 's': goto yy757;",
          "6947:   case 'W':",
          "6948:   case 'w': goto yy758;",
          "6949:   default: goto yy187;",
          "6950:   }",
          "6951: yy754:",
          "6952:   YYDEBUG(754, *YYCURSOR);",
          "6953:   yych = *++YYCURSOR;",
          "6954:   if (yych == 'E') goto yy780;",
          "6955:   if (yych == 'e') goto yy780;",
          "6956:   goto yy187;",
          "6957: yy755:",
          "6958:   YYDEBUG(755, *YYCURSOR);",
          "6959:   yych = *++YYCURSOR;",
          "6960:   if (yych == 'O') goto yy772;",
          "6961:   if (yych == 'o') goto yy772;",
          "6962:   goto yy187;",
          "6963: yy756:",
          "6964:   YYDEBUG(756, *YYCURSOR);",
          "6965:   yych = *++YYCURSOR;",
          "6966:   if (yych == 'F') goto yy770;",
          "6967:   if (yych == 'f') goto yy770;",
          "6968:   goto yy187;",
          "6969: yy757:",
          "6970:   YYDEBUG(757, *YYCURSOR);",
          "6971:   yych = *++YYCURSOR;",
          "6972:   if (yych == 'W') goto yy764;",
          "6973:   if (yych == 'w') goto yy764;",
          "6974:   goto yy187;",
          "6975: yy758:",
          "6976:   YYDEBUG(758, *YYCURSOR);",
          "6977:   yych = *++YYCURSOR;",
          "6978:   if (yych == 'H') goto yy759;",
          "6979:   if (yych != 'h') goto yy187;",
          "6980: yy759:",
          "6981:   YYDEBUG(759, *YYCURSOR);",
          "6982:   yych = *++YYCURSOR;",
          "6983:   if (yych == 'I') goto yy760;",
          "6984:   if (yych != 'i') goto yy187;",
          "6985: yy760:",
          "6986:   YYDEBUG(760, *YYCURSOR);",
          "6987:   yych = *++YYCURSOR;",
          "6988:   if (yych == 'L') goto yy761;",
          "6989:   if (yych != 'l') goto yy187;",
          "6990: yy761:",
          "6991:   YYDEBUG(761, *YYCURSOR);",
          "6992:   yych = *++YYCURSOR;",
          "6993:   if (yych == 'E') goto yy762;",
          "6994:   if (yych != 'e') goto yy187;",
          "6995: yy762:",
          "6996:   YYDEBUG(762, *YYCURSOR);",
          "6997:   ++YYCURSOR;",
          "6998:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6999:    goto yy186;",
          "7000:   }",
          "7001:   YYDEBUG(763, *YYCURSOR);",
          "7002:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7003: #line 1080 \"Zend/zend_language_scanner.l\"",
          "7004:   {",
          "7005:  return T_ENDWHILE;",
          "7006: }",
          "7007: #line 7008 \"Zend/zend_language_scanner.c\"",
          "7008: yy764:",
          "7009:   YYDEBUG(764, *YYCURSOR);",
          "7010:   yych = *++YYCURSOR;",
          "7011:   if (yych == 'I') goto yy765;",
          "7012:   if (yych != 'i') goto yy187;",
          "7013: yy765:",
          "7014:   YYDEBUG(765, *YYCURSOR);",
          "7015:   yych = *++YYCURSOR;",
          "7016:   if (yych == 'T') goto yy766;",
          "7017:   if (yych != 't') goto yy187;",
          "7018: yy766:",
          "7019:   YYDEBUG(766, *YYCURSOR);",
          "7020:   yych = *++YYCURSOR;",
          "7021:   if (yych == 'C') goto yy767;",
          "7022:   if (yych != 'c') goto yy187;",
          "7023: yy767:",
          "7024:   YYDEBUG(767, *YYCURSOR);",
          "7025:   yych = *++YYCURSOR;",
          "7026:   if (yych == 'H') goto yy768;",
          "7027:   if (yych != 'h') goto yy187;",
          "7028: yy768:",
          "7029:   YYDEBUG(768, *YYCURSOR);",
          "7030:   ++YYCURSOR;",
          "7031:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7032:    goto yy186;",
          "7033:   }",
          "7034:   YYDEBUG(769, *YYCURSOR);",
          "7035:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7036: #line 1124 \"Zend/zend_language_scanner.l\"",
          "7037:   {",
          "7038:  return T_ENDSWITCH;",
          "7039: }",
          "7040: #line 7041 \"Zend/zend_language_scanner.c\"",
          "7041: yy770:",
          "7042:   YYDEBUG(770, *YYCURSOR);",
          "7043:   ++YYCURSOR;",
          "7044:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7045:    goto yy186;",
          "7046:   }",
          "7047:   YYDEBUG(771, *YYCURSOR);",
          "7048:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7049: #line 1068 \"Zend/zend_language_scanner.l\"",
          "7050:   {",
          "7051:  return T_ENDIF;",
          "7052: }",
          "7053: #line 7054 \"Zend/zend_language_scanner.c\"",
          "7054: yy772:",
          "7055:   YYDEBUG(772, *YYCURSOR);",
          "7056:   yych = *++YYCURSOR;",
          "7057:   if (yych == 'R') goto yy773;",
          "7058:   if (yych != 'r') goto yy187;",
          "7059: yy773:",
          "7060:   YYDEBUG(773, *YYCURSOR);",
          "7061:   ++YYCURSOR;",
          "7062:   if ((yych = *YYCURSOR) <= '^') {",
          "7063:    if (yych <= '@') {",
          "7064:     if (yych <= '/') goto yy774;",
          "7065:     if (yych <= '9') goto yy186;",
          "7066:    } else {",
          "7067:     if (yych == 'E') goto yy775;",
          "7068:     if (yych <= 'Z') goto yy186;",
          "7069:    }",
          "7070:   } else {",
          "7071:    if (yych <= 'd') {",
          "7072:     if (yych != '`') goto yy186;",
          "7073:    } else {",
          "7074:     if (yych <= 'e') goto yy775;",
          "7075:     if (yych <= 'z') goto yy186;",
          "7076:     if (yych >= 0x7F) goto yy186;",
          "7077:    }",
          "7078:   }",
          "7079: yy774:",
          "7080:   YYDEBUG(774, *YYCURSOR);",
          "7081:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7082: #line 1092 \"Zend/zend_language_scanner.l\"",
          "7083:   {",
          "7084:  return T_ENDFOR;",
          "7085: }",
          "7086: #line 7087 \"Zend/zend_language_scanner.c\"",
          "7087: yy775:",
          "7088:   YYDEBUG(775, *YYCURSOR);",
          "7089:   yych = *++YYCURSOR;",
          "7090:   if (yych == 'A') goto yy776;",
          "7091:   if (yych != 'a') goto yy187;",
          "7092: yy776:",
          "7093:   YYDEBUG(776, *YYCURSOR);",
          "7094:   yych = *++YYCURSOR;",
          "7095:   if (yych == 'C') goto yy777;",
          "7096:   if (yych != 'c') goto yy187;",
          "7097: yy777:",
          "7098:   YYDEBUG(777, *YYCURSOR);",
          "7099:   yych = *++YYCURSOR;",
          "7100:   if (yych == 'H') goto yy778;",
          "7101:   if (yych != 'h') goto yy187;",
          "7102: yy778:",
          "7103:   YYDEBUG(778, *YYCURSOR);",
          "7104:   ++YYCURSOR;",
          "7105:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7106:    goto yy186;",
          "7107:   }",
          "7108:   YYDEBUG(779, *YYCURSOR);",
          "7109:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7110: #line 1100 \"Zend/zend_language_scanner.l\"",
          "7111:   {",
          "7112:  return T_ENDFOREACH;",
          "7113: }",
          "7114: #line 7115 \"Zend/zend_language_scanner.c\"",
          "7115: yy780:",
          "7116:   YYDEBUG(780, *YYCURSOR);",
          "7117:   yych = *++YYCURSOR;",
          "7118:   if (yych == 'C') goto yy781;",
          "7119:   if (yych != 'c') goto yy187;",
          "7120: yy781:",
          "7121:   YYDEBUG(781, *YYCURSOR);",
          "7122:   yych = *++YYCURSOR;",
          "7123:   if (yych == 'L') goto yy782;",
          "7124:   if (yych != 'l') goto yy187;",
          "7125: yy782:",
          "7126:   YYDEBUG(782, *YYCURSOR);",
          "7127:   yych = *++YYCURSOR;",
          "7128:   if (yych == 'A') goto yy783;",
          "7129:   if (yych != 'a') goto yy187;",
          "7130: yy783:",
          "7131:   YYDEBUG(783, *YYCURSOR);",
          "7132:   yych = *++YYCURSOR;",
          "7133:   if (yych == 'R') goto yy784;",
          "7134:   if (yych != 'r') goto yy187;",
          "7135: yy784:",
          "7136:   YYDEBUG(784, *YYCURSOR);",
          "7137:   yych = *++YYCURSOR;",
          "7138:   if (yych == 'E') goto yy785;",
          "7139:   if (yych != 'e') goto yy187;",
          "7140: yy785:",
          "7141:   YYDEBUG(785, *YYCURSOR);",
          "7142:   ++YYCURSOR;",
          "7143:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7144:    goto yy186;",
          "7145:   }",
          "7146:   YYDEBUG(786, *YYCURSOR);",
          "7147:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7148: #line 1108 \"Zend/zend_language_scanner.l\"",
          "7149:   {",
          "7150:  return T_ENDDECLARE;",
          "7151: }",
          "7152: #line 7153 \"Zend/zend_language_scanner.c\"",
          "7153: yy787:",
          "7154:   YYDEBUG(787, *YYCURSOR);",
          "7155:   yych = *++YYCURSOR;",
          "7156:   if (yych == 'T') goto yy788;",
          "7157:   if (yych != 't') goto yy187;",
          "7158: yy788:",
          "7159:   YYDEBUG(788, *YYCURSOR);",
          "7160:   yych = *++YYCURSOR;",
          "7161:   if (yych == 'Y') goto yy789;",
          "7162:   if (yych != 'y') goto yy187;",
          "7163: yy789:",
          "7164:   YYDEBUG(789, *YYCURSOR);",
          "7165:   ++YYCURSOR;",
          "7166:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7167:    goto yy186;",
          "7168:   }",
          "7169:   YYDEBUG(790, *YYCURSOR);",
          "7170:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7171: #line 1294 \"Zend/zend_language_scanner.l\"",
          "7172:   {",
          "7173:  return T_EMPTY;",
          "7174: }",
          "7175: #line 7176 \"Zend/zend_language_scanner.c\"",
          "7176: yy791:",
          "7177:   YYDEBUG(791, *YYCURSOR);",
          "7178:   yych = *++YYCURSOR;",
          "7179:   if (yych == 'E') goto yy792;",
          "7180:   if (yych != 'e') goto yy187;",
          "7181: yy792:",
          "7182:   YYDEBUG(792, *YYCURSOR);",
          "7183:   ++YYCURSOR;",
          "7184:   if ((yych = *YYCURSOR) <= '^') {",
          "7185:    if (yych <= '@') {",
          "7186:     if (yych <= '/') goto yy793;",
          "7187:     if (yych <= '9') goto yy186;",
          "7188:    } else {",
          "7189:     if (yych == 'I') goto yy794;",
          "7190:     if (yych <= 'Z') goto yy186;",
          "7191:    }",
          "7192:   } else {",
          "7193:    if (yych <= 'h') {",
          "7194:     if (yych != '`') goto yy186;",
          "7195:    } else {",
          "7196:     if (yych <= 'i') goto yy794;",
          "7197:     if (yych <= 'z') goto yy186;",
          "7198:     if (yych >= 0x7F) goto yy186;",
          "7199:    }",
          "7200:   }",
          "7201: yy793:",
          "7202:   YYDEBUG(793, *YYCURSOR);",
          "7203:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7204: #line 1072 \"Zend/zend_language_scanner.l\"",
          "7205:   {",
          "7206:  return T_ELSE;",
          "7207: }",
          "7208: #line 7209 \"Zend/zend_language_scanner.c\"",
          "7209: yy794:",
          "7210:   YYDEBUG(794, *YYCURSOR);",
          "7211:   yych = *++YYCURSOR;",
          "7212:   if (yych == 'F') goto yy795;",
          "7213:   if (yych != 'f') goto yy187;",
          "7214: yy795:",
          "7215:   YYDEBUG(795, *YYCURSOR);",
          "7216:   ++YYCURSOR;",
          "7217:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7218:    goto yy186;",
          "7219:   }",
          "7220:   YYDEBUG(796, *YYCURSOR);",
          "7221:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7222: #line 1064 \"Zend/zend_language_scanner.l\"",
          "7223:   {",
          "7224:  return T_ELSEIF;",
          "7225: }",
          "7226: #line 7227 \"Zend/zend_language_scanner.c\"",
          "7227: yy797:",
          "7228:   YYDEBUG(797, *YYCURSOR);",
          "7229:   yych = *++YYCURSOR;",
          "7230:   if (yych == 'O') goto yy798;",
          "7231:   if (yych != 'o') goto yy187;",
          "7232: yy798:",
          "7233:   YYDEBUG(798, *YYCURSOR);",
          "7234:   ++YYCURSOR;",
          "7235:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7236:    goto yy186;",
          "7237:   }",
          "7238:   YYDEBUG(799, *YYCURSOR);",
          "7239:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7240: #line 1148 \"Zend/zend_language_scanner.l\"",
          "7241:   {",
          "7242:  return T_ECHO;",
          "7243: }",
          "7244: #line 7245 \"Zend/zend_language_scanner.c\"",
          "7245:  }",
          "7247: yyc_ST_LOOKING_FOR_PROPERTY:",
          "7248:  {",
          "7249:   static const unsigned char yybm[] = {",
          "7250:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7251:      0, 128, 128,   0,   0, 128,   0,   0,",
          "7252:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7253:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7254:    128,   0,   0,   0,   0,   0,   0,   0,",
          "7255:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7256:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7257:     64,  64,   0,   0,   0,   0,   0,   0,",
          "7258:      0,  64,  64,  64,  64,  64,  64,  64,",
          "7259:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7260:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7261:     64,  64,  64,   0,   0,   0,   0,  64,",
          "7262:      0,  64,  64,  64,  64,  64,  64,  64,",
          "7263:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7264:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7265:     64,  64,  64,   0,   0,   0,   0,  64,",
          "7266:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7267:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7268:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7269:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7270:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7271:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7272:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7273:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7274:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7275:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7276:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7277:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7278:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7279:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7280:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7281:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7282:   };",
          "7283:   YYDEBUG(800, *YYCURSOR);",
          "7284:   YYFILL(2);",
          "7285:   yych = *YYCURSOR;",
          "7286:   if (yych <= '-') {",
          "7287:    if (yych <= '\\r') {",
          "7288:     if (yych <= 0x08) goto yy808;",
          "7289:     if (yych <= '\\n') goto yy802;",
          "7290:     if (yych <= '\\f') goto yy808;",
          "7291:    } else {",
          "7292:     if (yych == ' ') goto yy802;",
          "7293:     if (yych <= ',') goto yy808;",
          "7294:     goto yy804;",
          "7295:    }",
          "7296:   } else {",
          "7297:    if (yych <= '_') {",
          "7298:     if (yych <= '@') goto yy808;",
          "7299:     if (yych <= 'Z') goto yy806;",
          "7300:     if (yych <= '^') goto yy808;",
          "7301:     goto yy806;",
          "7302:    } else {",
          "7303:     if (yych <= '`') goto yy808;",
          "7304:     if (yych <= 'z') goto yy806;",
          "7305:     if (yych <= '~') goto yy808;",
          "7306:     goto yy806;",
          "7307:    }",
          "7308:   }",
          "7309: yy802:",
          "7310:   YYDEBUG(802, *YYCURSOR);",
          "7311:   ++YYCURSOR;",
          "7312:   yych = *YYCURSOR;",
          "7313:   goto yy814;",
          "7314: yy803:",
          "7315:   YYDEBUG(803, *YYCURSOR);",
          "7316:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7317: #line 1181 \"Zend/zend_language_scanner.l\"",
          "7318:   {",
          "7320:  zendlval->value.str.len = yyleng;",
          "7321:  zendlval->type = IS_STRING;",
          "7322:  HANDLE_NEWLINES(yytext, yyleng);",
          "7323:  return T_WHITESPACE;",
          "7324: }",
          "7325: #line 7326 \"Zend/zend_language_scanner.c\"",
          "7326: yy804:",
          "7327:   YYDEBUG(804, *YYCURSOR);",
          "7328:   ++YYCURSOR;",
          "7329:   if ((yych = *YYCURSOR) == '>') goto yy811;",
          "7330: yy805:",
          "7331:   YYDEBUG(805, *YYCURSOR);",
          "7332:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7333: #line 1200 \"Zend/zend_language_scanner.l\"",
          "7334:   {",
          "7335:  yyless(0);",
          "7336:  yy_pop_state(TSRMLS_C);",
          "7337:  goto restart;",
          "7338: }",
          "7339: #line 7340 \"Zend/zend_language_scanner.c\"",
          "7340: yy806:",
          "7341:   YYDEBUG(806, *YYCURSOR);",
          "7342:   ++YYCURSOR;",
          "7343:   yych = *YYCURSOR;",
          "7344:   goto yy810;",
          "7345: yy807:",
          "7346:   YYDEBUG(807, *YYCURSOR);",
          "7347:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7348: #line 1193 \"Zend/zend_language_scanner.l\"",
          "7349:   {",
          "7350:  yy_pop_state(TSRMLS_C);",
          "7351:  zend_copy_value(zendlval, yytext, yyleng);",
          "7352:  zendlval->type = IS_STRING;",
          "7353:  return T_STRING;",
          "7354: }",
          "7355: #line 7356 \"Zend/zend_language_scanner.c\"",
          "7356: yy808:",
          "7357:   YYDEBUG(808, *YYCURSOR);",
          "7358:   yych = *++YYCURSOR;",
          "7359:   goto yy805;",
          "7360: yy809:",
          "7361:   YYDEBUG(809, *YYCURSOR);",
          "7362:   ++YYCURSOR;",
          "7363:   YYFILL(1);",
          "7364:   yych = *YYCURSOR;",
          "7365: yy810:",
          "7366:   YYDEBUG(810, *YYCURSOR);",
          "7367:   if (yybm[0+yych] & 64) {",
          "7368:    goto yy809;",
          "7369:   }",
          "7370:   goto yy807;",
          "7371: yy811:",
          "7372:   YYDEBUG(811, *YYCURSOR);",
          "7373:   ++YYCURSOR;",
          "7374:   YYDEBUG(812, *YYCURSOR);",
          "7375:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7376: #line 1189 \"Zend/zend_language_scanner.l\"",
          "7377:   {",
          "7378:  return T_OBJECT_OPERATOR;",
          "7379: }",
          "7380: #line 7381 \"Zend/zend_language_scanner.c\"",
          "7381: yy813:",
          "7382:   YYDEBUG(813, *YYCURSOR);",
          "7383:   ++YYCURSOR;",
          "7384:   YYFILL(1);",
          "7385:   yych = *YYCURSOR;",
          "7386: yy814:",
          "7387:   YYDEBUG(814, *YYCURSOR);",
          "7388:   if (yybm[0+yych] & 128) {",
          "7389:    goto yy813;",
          "7390:   }",
          "7391:   goto yy803;",
          "7392:  }",
          "7394: yyc_ST_LOOKING_FOR_VARNAME:",
          "7395:  {",
          "7396:   static const unsigned char yybm[] = {",
          "7397:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7398:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7399:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7400:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7401:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7402:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7403:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7404:    128, 128,   0,   0,   0,   0,   0,   0,",
          "7405:      0, 128, 128, 128, 128, 128, 128, 128,",
          "7406:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7407:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7408:    128, 128, 128,   0,   0,   0,   0, 128,",
          "7409:      0, 128, 128, 128, 128, 128, 128, 128,",
          "7410:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7411:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7412:    128, 128, 128,   0,   0,   0,   0, 128,",
          "7413:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7414:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7415:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7416:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7417:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7418:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7419:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7420:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7421:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7422:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7423:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7424:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7425:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7426:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7427:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7428:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7429:   };",
          "7430:   YYDEBUG(815, *YYCURSOR);",
          "7431:   YYFILL(2);",
          "7432:   yych = *YYCURSOR;",
          "7433:   if (yych <= '_') {",
          "7434:    if (yych <= '@') goto yy819;",
          "7435:    if (yych <= 'Z') goto yy817;",
          "7436:    if (yych <= '^') goto yy819;",
          "7437:   } else {",
          "7438:    if (yych <= '`') goto yy819;",
          "7439:    if (yych <= 'z') goto yy817;",
          "7440:    if (yych <= '~') goto yy819;",
          "7441:   }",
          "7442: yy817:",
          "7443:   YYDEBUG(817, *YYCURSOR);",
          "7444:   yyaccept = 0;",
          "7445:   yych = *(YYMARKER = ++YYCURSOR);",
          "7446:   if (yych <= '_') {",
          "7447:    if (yych <= '@') {",
          "7448:     if (yych <= '/') goto yy818;",
          "7449:     if (yych <= '9') goto yy821;",
          "7450:    } else {",
          "7451:     if (yych <= '[') goto yy821;",
          "7452:     if (yych >= '_') goto yy821;",
          "7453:    }",
          "7454:   } else {",
          "7455:    if (yych <= '|') {",
          "7456:     if (yych <= '`') goto yy818;",
          "7457:     if (yych <= 'z') goto yy821;",
          "7458:    } else {",
          "7459:     if (yych != '~') goto yy821;",
          "7460:    }",
          "7461:   }",
          "7462: yy818:",
          "7463:   YYDEBUG(818, *YYCURSOR);",
          "7464:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7465: #line 1486 \"Zend/zend_language_scanner.l\"",
          "7466:   {",
          "7467:  yyless(0);",
          "7468:  yy_pop_state(TSRMLS_C);",
          "7469:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7470:  goto restart;",
          "7471: }",
          "7472: #line 7473 \"Zend/zend_language_scanner.c\"",
          "7473: yy819:",
          "7474:   YYDEBUG(819, *YYCURSOR);",
          "7475:   yych = *++YYCURSOR;",
          "7476:   goto yy818;",
          "7477: yy820:",
          "7478:   YYDEBUG(820, *YYCURSOR);",
          "7479:   ++YYCURSOR;",
          "7480:   YYFILL(1);",
          "7481:   yych = *YYCURSOR;",
          "7482: yy821:",
          "7483:   YYDEBUG(821, *YYCURSOR);",
          "7484:   if (yybm[0+yych] & 128) {",
          "7485:    goto yy820;",
          "7486:   }",
          "7487:   if (yych == '[') goto yy823;",
          "7488:   if (yych == '}') goto yy823;",
          "7489:   YYDEBUG(822, *YYCURSOR);",
          "7490:   YYCURSOR = YYMARKER;",
          "7491:   goto yy818;",
          "7492: yy823:",
          "7493:   YYDEBUG(823, *YYCURSOR);",
          "7494:   ++YYCURSOR;",
          "7495:   YYDEBUG(824, *YYCURSOR);",
          "7496:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7497: #line 1476 \"Zend/zend_language_scanner.l\"",
          "7498:   {",
          "7499:  yyless(yyleng - 1);",
          "7500:  zend_copy_value(zendlval, yytext, yyleng);",
          "7501:  zendlval->type = IS_STRING;",
          "7502:  yy_pop_state(TSRMLS_C);",
          "7503:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7504:  return T_STRING_VARNAME;",
          "7505: }",
          "7506: #line 7507 \"Zend/zend_language_scanner.c\"",
          "7507:  }",
          "7509: yyc_ST_NOWDOC:",
          "7510:  YYDEBUG(825, *YYCURSOR);",
          "7511:  YYFILL(1);",
          "7512:  yych = *YYCURSOR;",
          "7513:  YYDEBUG(827, *YYCURSOR);",
          "7514:  ++YYCURSOR;",
          "7515:  YYDEBUG(828, *YYCURSOR);",
          "7516:  yyleng = YYCURSOR - SCNG(yy_text);",
          "7517: #line 2370 \"Zend/zend_language_scanner.l\"",
          "7518:  {",
          "7519:  int newline = 0;",
          "7521:  zend_heredoc_label *heredoc_label = zend_ptr_stack_top(&SCNG(heredoc_label_stack));",
          "7523:  if (YYCURSOR > YYLIMIT) {",
          "7524:   return 0;",
          "7525:  }",
          "7527:  YYCURSOR--;",
          "7529:  while (YYCURSOR < YYLIMIT) {",
          "7530:   switch (*YYCURSOR++) {",
          "7531:    case '\\r':",
          "7532:     if (*YYCURSOR == '\\n') {",
          "7533:      YYCURSOR++;",
          "7534:     }",
          "7536:    case '\\n':",
          "7538:     if (IS_LABEL_START(*YYCURSOR) && heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, heredoc_label->label, heredoc_label->length)) {",
          "7539:      YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "7541:      if (*end == ';') {",
          "7542:       end++;",
          "7543:      }",
          "7545:      if (*end == '\\n' || *end == '\\r') {",
          "7548:       if (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {",
          "7550:       } else {",
          "7551:        newline = 1;",
          "7552:       }",
          "7555:       BEGIN(ST_END_HEREDOC);",
          "7557:       goto nowdoc_scan_done;",
          "7558:      }",
          "7559:     }",
          "7561:    default:",
          "7562:     continue;",
          "7563:   }",
          "7564:  }",
          "7566: nowdoc_scan_done:",
          "7567:  yyleng = YYCURSOR - SCNG(yy_text);",
          "7569:  zend_copy_value(zendlval, yytext, yyleng - newline);",
          "7570:  zendlval->type = IS_STRING;",
          "7571:  HANDLE_NEWLINES(yytext, yyleng - newline);",
          "7572:  return T_ENCAPSED_AND_WHITESPACE;",
          "7573: }",
          "7574: #line 7575 \"Zend/zend_language_scanner.c\"",
          "7576: yyc_ST_VAR_OFFSET:",
          "7577:  {",
          "7578:   static const unsigned char yybm[] = {",
          "7579:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7580:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7581:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7582:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7583:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7584:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7585:    240, 240, 112, 112, 112, 112, 112, 112,",
          "7586:    112, 112,   0,   0,   0,   0,   0,   0,",
          "7587:      0,  80,  80,  80,  80,  80,  80,  16,",
          "7588:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7589:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7590:     16,  16,  16,   0,   0,   0,   0,  16,",
          "7591:      0,  80,  80,  80,  80,  80,  80,  16,",
          "7592:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7593:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7594:     16,  16,  16,   0,   0,   0,   0,  16,",
          "7595:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7596:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7597:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7598:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7599:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7600:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7601:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7602:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7603:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7604:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7605:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7606:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7607:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7608:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7609:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7610:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7611:   };",
          "7612:   YYDEBUG(829, *YYCURSOR);",
          "7613:   YYFILL(3);",
          "7614:   yych = *YYCURSOR;",
          "7615:   if (yych <= '/') {",
          "7616:    if (yych <= ' ') {",
          "7617:     if (yych <= '\\f') {",
          "7618:      if (yych <= 0x08) goto yy843;",
          "7619:      if (yych <= '\\n') goto yy839;",
          "7620:      goto yy843;",
          "7621:     } else {",
          "7622:      if (yych <= '\\r') goto yy839;",
          "7623:      if (yych <= 0x1F) goto yy843;",
          "7624:      goto yy839;",
          "7625:     }",
          "7626:    } else {",
          "7627:     if (yych <= '$') {",
          "7628:      if (yych <= '\"') goto yy838;",
          "7629:      if (yych <= '#') goto yy839;",
          "7630:      goto yy834;",
          "7631:     } else {",
          "7632:      if (yych == '\\'') goto yy839;",
          "7633:      goto yy838;",
          "7634:     }",
          "7635:    }",
          "7636:   } else {",
          "7637:    if (yych <= '\\\\') {",
          "7638:     if (yych <= '@') {",
          "7639:      if (yych <= '0') goto yy831;",
          "7640:      if (yych <= '9') goto yy833;",
          "7641:      goto yy838;",
          "7642:     } else {",
          "7643:      if (yych <= 'Z') goto yy841;",
          "7644:      if (yych <= '[') goto yy838;",
          "7645:      goto yy839;",
          "7646:     }",
          "7647:    } else {",
          "7648:     if (yych <= '_') {",
          "7649:      if (yych <= ']') goto yy836;",
          "7650:      if (yych <= '^') goto yy838;",
          "7651:      goto yy841;",
          "7652:     } else {",
          "7653:      if (yych <= '`') goto yy838;",
          "7654:      if (yych <= 'z') goto yy841;",
          "7655:      if (yych <= '~') goto yy838;",
          "7656:      goto yy841;",
          "7657:     }",
          "7658:    }",
          "7659:   }",
          "7660: yy831:",
          "7661:   YYDEBUG(831, *YYCURSOR);",
          "7662:   yyaccept = 0;",
          "7663:   yych = *(YYMARKER = ++YYCURSOR);",
          "7664:   if (yych <= 'W') {",
          "7665:    if (yych <= '9') {",
          "7666:     if (yych >= '0') goto yy855;",
          "7667:    } else {",
          "7668:     if (yych == 'B') goto yy852;",
          "7669:    }",
          "7670:   } else {",
          "7671:    if (yych <= 'b') {",
          "7672:     if (yych <= 'X') goto yy854;",
          "7673:     if (yych >= 'b') goto yy852;",
          "7674:    } else {",
          "7675:     if (yych == 'x') goto yy854;",
          "7676:    }",
          "7677:   }",
          "7678: yy832:",
          "7679:   YYDEBUG(832, *YYCURSOR);",
          "7680:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7681: #line 1564 \"Zend/zend_language_scanner.l\"",
          "7683:  if (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {",
          "7684:   zendlval->value.lval = strtol(yytext, NULL, 10);",
          "7685:   zendlval->type = IS_LONG;",
          "7686:  } else {",
          "7687:   zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "7688:   zendlval->value.str.len = yyleng;",
          "7689:   zendlval->type = IS_STRING;",
          "7690:  }",
          "7691:  return T_NUM_STRING;",
          "7692: }",
          "7693: #line 7694 \"Zend/zend_language_scanner.c\"",
          "7694: yy833:",
          "7695:   YYDEBUG(833, *YYCURSOR);",
          "7696:   yych = *++YYCURSOR;",
          "7697:   goto yy851;",
          "7698: yy834:",
          "7699:   YYDEBUG(834, *YYCURSOR);",
          "7700:   ++YYCURSOR;",
          "7701:   if ((yych = *YYCURSOR) <= '_') {",
          "7702:    if (yych <= '@') goto yy835;",
          "7703:    if (yych <= 'Z') goto yy847;",
          "7704:    if (yych >= '_') goto yy847;",
          "7705:   } else {",
          "7706:    if (yych <= '`') goto yy835;",
          "7707:    if (yych <= 'z') goto yy847;",
          "7708:    if (yych >= 0x7F) goto yy847;",
          "7709:   }",
          "7710: yy835:",
          "7711:   YYDEBUG(835, *YYCURSOR);",
          "7712:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7713: #line 1896 \"Zend/zend_language_scanner.l\"",
          "7714:   {",
          "7716:  return yytext[0];",
          "7717: }",
          "7718: #line 7719 \"Zend/zend_language_scanner.c\"",
          "7719: yy836:",
          "7720:   YYDEBUG(836, *YYCURSOR);",
          "7721:   ++YYCURSOR;",
          "7722:   YYDEBUG(837, *YYCURSOR);",
          "7723:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7724: #line 1891 \"Zend/zend_language_scanner.l\"",
          "7725:   {",
          "7726:  yy_pop_state(TSRMLS_C);",
          "7727:  return ']';",
          "7728: }",
          "7729: #line 7730 \"Zend/zend_language_scanner.c\"",
          "7730: yy838:",
          "7731:   YYDEBUG(838, *YYCURSOR);",
          "7732:   yych = *++YYCURSOR;",
          "7733:   goto yy835;",
          "7734: yy839:",
          "7735:   YYDEBUG(839, *YYCURSOR);",
          "7736:   ++YYCURSOR;",
          "7737:   YYDEBUG(840, *YYCURSOR);",
          "7738:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7739: #line 1901 \"Zend/zend_language_scanner.l\"",
          "7740:   {",
          "7742:  yyless(0);",
          "7743:  yy_pop_state(TSRMLS_C);",
          "7744:  return T_ENCAPSED_AND_WHITESPACE;",
          "7745: }",
          "7746: #line 7747 \"Zend/zend_language_scanner.c\"",
          "7747: yy841:",
          "7748:   YYDEBUG(841, *YYCURSOR);",
          "7749:   ++YYCURSOR;",
          "7750:   yych = *YYCURSOR;",
          "7751:   goto yy846;",
          "7752: yy842:",
          "7753:   YYDEBUG(842, *YYCURSOR);",
          "7754:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7755: #line 1908 \"Zend/zend_language_scanner.l\"",
          "7756:   {",
          "7757:  zend_copy_value(zendlval, yytext, yyleng);",
          "7758:  zendlval->type = IS_STRING;",
          "7759:  return T_STRING;",
          "7760: }",
          "7761: #line 7762 \"Zend/zend_language_scanner.c\"",
          "7762: yy843:",
          "7763:   YYDEBUG(843, *YYCURSOR);",
          "7764:   ++YYCURSOR;",
          "7765:   YYDEBUG(844, *YYCURSOR);",
          "7766:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7767: #line 2428 \"Zend/zend_language_scanner.l\"",
          "7768:   {",
          "7769:  if (YYCURSOR > YYLIMIT) {",
          "7770:   return 0;",
          "7771:  }",
          "7773:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "7774:  goto restart;",
          "7775: }",
          "7776: #line 7777 \"Zend/zend_language_scanner.c\"",
          "7777: yy845:",
          "7778:   YYDEBUG(845, *YYCURSOR);",
          "7779:   ++YYCURSOR;",
          "7780:   YYFILL(1);",
          "7781:   yych = *YYCURSOR;",
          "7782: yy846:",
          "7783:   YYDEBUG(846, *YYCURSOR);",
          "7784:   if (yybm[0+yych] & 16) {",
          "7785:    goto yy845;",
          "7786:   }",
          "7787:   goto yy842;",
          "7788: yy847:",
          "7789:   YYDEBUG(847, *YYCURSOR);",
          "7790:   ++YYCURSOR;",
          "7791:   YYFILL(1);",
          "7792:   yych = *YYCURSOR;",
          "7793:   YYDEBUG(848, *YYCURSOR);",
          "7794:   if (yych <= '^') {",
          "7795:    if (yych <= '9') {",
          "7796:     if (yych >= '0') goto yy847;",
          "7797:    } else {",
          "7798:     if (yych <= '@') goto yy849;",
          "7799:     if (yych <= 'Z') goto yy847;",
          "7800:    }",
          "7801:   } else {",
          "7802:    if (yych <= '`') {",
          "7803:     if (yych <= '_') goto yy847;",
          "7804:    } else {",
          "7805:     if (yych <= 'z') goto yy847;",
          "7806:     if (yych >= 0x7F) goto yy847;",
          "7807:    }",
          "7808:   }",
          "7809: yy849:",
          "7810:   YYDEBUG(849, *YYCURSOR);",
          "7811:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7812: #line 1885 \"Zend/zend_language_scanner.l\"",
          "7813:   {",
          "7814:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "7815:  zendlval->type = IS_STRING;",
          "7816:  return T_VARIABLE;",
          "7817: }",
          "7818: #line 7819 \"Zend/zend_language_scanner.c\"",
          "7819: yy850:",
          "7820:   YYDEBUG(850, *YYCURSOR);",
          "7821:   ++YYCURSOR;",
          "7822:   YYFILL(1);",
          "7823:   yych = *YYCURSOR;",
          "7824: yy851:",
          "7825:   YYDEBUG(851, *YYCURSOR);",
          "7826:   if (yybm[0+yych] & 32) {",
          "7827:    goto yy850;",
          "7828:   }",
          "7829:   goto yy832;",
          "7830: yy852:",
          "7831:   YYDEBUG(852, *YYCURSOR);",
          "7832:   yych = *++YYCURSOR;",
          "7833:   if (yybm[0+yych] & 128) {",
          "7834:    goto yy860;",
          "7835:   }",
          "7836: yy853:",
          "7837:   YYDEBUG(853, *YYCURSOR);",
          "7838:   YYCURSOR = YYMARKER;",
          "7839:   goto yy832;",
          "7840: yy854:",
          "7841:   YYDEBUG(854, *YYCURSOR);",
          "7842:   yych = *++YYCURSOR;",
          "7843:   if (yybm[0+yych] & 64) {",
          "7844:    goto yy858;",
          "7845:   }",
          "7846:   goto yy853;",
          "7847: yy855:",
          "7848:   YYDEBUG(855, *YYCURSOR);",
          "7849:   ++YYCURSOR;",
          "7850:   YYFILL(1);",
          "7851:   yych = *YYCURSOR;",
          "7852:   YYDEBUG(856, *YYCURSOR);",
          "7853:   if (yych <= '/') goto yy857;",
          "7854:   if (yych <= '9') goto yy855;",
          "7855: yy857:",
          "7856:   YYDEBUG(857, *YYCURSOR);",
          "7857:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7858: #line 1576 \"Zend/zend_language_scanner.l\"",
          "7860:  zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "7861:  zendlval->value.str.len = yyleng;",
          "7862:  zendlval->type = IS_STRING;",
          "7863:  return T_NUM_STRING;",
          "7864: }",
          "7865: #line 7866 \"Zend/zend_language_scanner.c\"",
          "7866: yy858:",
          "7867:   YYDEBUG(858, *YYCURSOR);",
          "7868:   ++YYCURSOR;",
          "7869:   YYFILL(1);",
          "7870:   yych = *YYCURSOR;",
          "7871:   YYDEBUG(859, *YYCURSOR);",
          "7872:   if (yybm[0+yych] & 64) {",
          "7873:    goto yy858;",
          "7874:   }",
          "7875:   goto yy857;",
          "7876: yy860:",
          "7877:   YYDEBUG(860, *YYCURSOR);",
          "7878:   ++YYCURSOR;",
          "7879:   YYFILL(1);",
          "7880:   yych = *YYCURSOR;",
          "7881:   YYDEBUG(861, *YYCURSOR);",
          "7882:   if (yybm[0+yych] & 128) {",
          "7883:    goto yy860;",
          "7884:   }",
          "7885:   goto yy857;",
          "7886:  }",
          "7887: }",
          "7888: #line 2437 \"Zend/zend_language_scanner.l\"",
          "7890: }",
          "",
          "[Added Lines]",
          "2: #line 1 \"Zend/zend_language_scanner.l\"",
          "4:    +----------------------------------------------------------------------+",
          "5:    | Zend Engine                                                          |",
          "6:    +----------------------------------------------------------------------+",
          "7:    | Copyright (c) 1998-2013 Zend Technologies Ltd. (http://www.zend.com) |",
          "8:    +----------------------------------------------------------------------+",
          "9:    | This source file is subject to version 2.00 of the Zend license,     |",
          "10:    | that is bundled with this package in the file LICENSE, and is        |",
          "11:    | available through the world-wide-web at the following url:           |",
          "12:    | http://www.zend.com/license/2_00.txt.                                |",
          "13:    | If you did not receive a copy of the Zend license and are unable to  |",
          "14:    | obtain it through the world-wide-web, please send a note to          |",
          "15:    | license@zend.com so we can mail you a copy immediately.              |",
          "16:    +----------------------------------------------------------------------+",
          "17:    | Authors: Marcus Boerger <helly@php.net>                              |",
          "18:    |          Nuno Lopes <nlopess@php.net>                                |",
          "19:    |          Scott MacVicar <scottmac@php.net>                           |",
          "20:    | Flex version authors:                                                |",
          "21:    |          Andi Gutmans <andi@zend.com>                                |",
          "22:    |          Zeev Suraski <zeev@zend.com>                                |",
          "23:    +----------------------------------------------------------------------+",
          "28: #if 0",
          "29: # define YYDEBUG(s, c) printf(\"state: %d char: %c\\n\", s, c)",
          "30: #else",
          "31: # define YYDEBUG(s, c)",
          "32: #endif",
          "34: #include \"zend_language_scanner_defs.h\"",
          "36: #include <errno.h>",
          "37: #include \"zend.h\"",
          "38: #ifdef PHP_WIN32",
          "39: # include <Winuser.h>",
          "40: #endif",
          "41: #include \"zend_alloc.h\"",
          "42: #include <zend_language_parser.h>",
          "43: #include \"zend_compile.h\"",
          "44: #include \"zend_language_scanner.h\"",
          "45: #include \"zend_highlight.h\"",
          "46: #include \"zend_constants.h\"",
          "47: #include \"zend_variables.h\"",
          "48: #include \"zend_operators.h\"",
          "49: #include \"zend_API.h\"",
          "50: #include \"zend_strtod.h\"",
          "51: #include \"zend_exceptions.h\"",
          "52: #include \"tsrm_virtual_cwd.h\"",
          "53: #include \"tsrm_config_common.h\"",
          "55: #define YYCTYPE   unsigned char",
          "56: #define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + ZEND_MMAP_AHEAD)) { return 0; } }",
          "57: #define YYCURSOR  SCNG(yy_cursor)",
          "58: #define YYLIMIT   SCNG(yy_limit)",
          "59: #define YYMARKER  SCNG(yy_marker)",
          "61: #define YYGETCONDITION()  SCNG(yy_state)",
          "62: #define YYSETCONDITION(s) SCNG(yy_state) = s",
          "64: #define STATE(name)  yyc##name",
          "67: #define BEGIN(state) YYSETCONDITION(STATE(state))",
          "68: #define YYSTATE      YYGETCONDITION()",
          "69: #define yytext       ((char*)SCNG(yy_text))",
          "70: #define yyleng       SCNG(yy_leng)",
          "71: #define yyless(x)    do { YYCURSOR = (unsigned char*)yytext + x; \\",
          "72:                           yyleng   = (unsigned int)x; } while(0)",
          "73: #define yymore()     goto yymore_restart",
          "77: #define YYMAXFILL 16",
          "78: #if ZEND_MMAP_AHEAD < YYMAXFILL",
          "79: # error ZEND_MMAP_AHEAD should be greater than or equal to YYMAXFILL",
          "80: #endif",
          "82: #ifdef HAVE_STDARG_H",
          "83: # include <stdarg.h>",
          "84: #endif",
          "86: #ifdef HAVE_UNISTD_H",
          "87: # include <unistd.h>",
          "88: #endif",
          "91: #define SCNG LANG_SCNG",
          "92: #ifdef ZTS",
          "93: ZEND_API ts_rsrc_id language_scanner_globals_id;",
          "94: #else",
          "95: ZEND_API zend_php_scanner_globals language_scanner_globals;",
          "96: #endif",
          "98: #define HANDLE_NEWLINES(s, l)             \\",
          "99: do {                   \\",
          "100:  char *p = (s), *boundary = p+(l);           \\",
          "101:                     \\",
          "102:  while (p<boundary) {              \\",
          "103:   if (*p == '\\n' || (*p == '\\r' && (*(p+1) != '\\n'))) {     \\",
          "104:    CG(zend_lineno)++;             \\",
          "105:   }                  \\",
          "106:   p++;                 \\",
          "107:  }                   \\",
          "108: } while (0)",
          "110: #define HANDLE_NEWLINE(c) \\",
          "111: { \\",
          "112:  if (c == '\\n' || c == '\\r') { \\",
          "113:   CG(zend_lineno)++; \\",
          "114:  } \\",
          "115: }",
          "118: #define SET_DOUBLE_QUOTES_SCANNED_LENGTH(len) CG(doc_comment_len) = (len)",
          "119: #define GET_DOUBLE_QUOTES_SCANNED_LENGTH()    CG(doc_comment_len)",
          "121: #define IS_LABEL_START(c) (((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z') || (c) == '_' || (c) >= 0x7F)",
          "123: #define ZEND_IS_OCT(c)  ((c)>='0' && (c)<='7')",
          "124: #define ZEND_IS_HEX(c)  (((c)>='0' && (c)<='9') || ((c)>='a' && (c)<='f') || ((c)>='A' && (c)<='F'))",
          "126: BEGIN_EXTERN_C()",
          "128: static size_t encoding_filter_script_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "129: {",
          "130:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "131:  assert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));",
          "132:  return zend_multibyte_encoding_converter(to, to_length, from, from_length, internal_encoding, LANG_SCNG(script_encoding) TSRMLS_CC);",
          "133: }",
          "135: static size_t encoding_filter_script_to_intermediate(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "136: {",
          "137:  return zend_multibyte_encoding_converter(to, to_length, from, from_length, zend_multibyte_encoding_utf8, LANG_SCNG(script_encoding) TSRMLS_CC);",
          "138: }",
          "140: static size_t encoding_filter_intermediate_to_script(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "141: {",
          "142:  return zend_multibyte_encoding_converter(to, to_length, from, from_length,",
          "143: LANG_SCNG(script_encoding), zend_multibyte_encoding_utf8 TSRMLS_CC);",
          "144: }",
          "146: static size_t encoding_filter_intermediate_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)",
          "147: {",
          "148:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "149:  assert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));",
          "150:  return zend_multibyte_encoding_converter(to, to_length, from, from_length,",
          "151: internal_encoding, zend_multibyte_encoding_utf8 TSRMLS_CC);",
          "152: }",
          "155: static void _yy_push_state(int new_state TSRMLS_DC)",
          "156: {",
          "157:  zend_stack_push(&SCNG(state_stack), (void *) &YYGETCONDITION(), sizeof(int));",
          "158:  YYSETCONDITION(new_state);",
          "159: }",
          "161: #define yy_push_state(state_and_tsrm) _yy_push_state(yyc##state_and_tsrm)",
          "163: static void yy_pop_state(TSRMLS_D)",
          "164: {",
          "165:  int *stack_state;",
          "166:  zend_stack_top(&SCNG(state_stack), (void **) &stack_state);",
          "167:  YYSETCONDITION(*stack_state);",
          "168:  zend_stack_del_top(&SCNG(state_stack));",
          "169: }",
          "171: static void yy_scan_buffer(char *str, unsigned int len TSRMLS_DC)",
          "172: {",
          "173:  YYCURSOR       = (YYCTYPE*)str;",
          "174:  YYLIMIT        = YYCURSOR + len;",
          "175:  if (!SCNG(yy_start)) {",
          "176:   SCNG(yy_start) = YYCURSOR;",
          "177:  }",
          "178: }",
          "180: void startup_scanner(TSRMLS_D)",
          "181: {",
          "182:  CG(parse_error) = 0;",
          "183:  CG(doc_comment) = NULL;",
          "184:  CG(doc_comment_len) = 0;",
          "185:  zend_stack_init(&SCNG(state_stack));",
          "186:  zend_ptr_stack_init(&SCNG(heredoc_label_stack));",
          "187: }",
          "189: static void heredoc_label_dtor(zend_heredoc_label *heredoc_label) {",
          "190:     efree(heredoc_label->label);",
          "191: }",
          "193: void shutdown_scanner(TSRMLS_D)",
          "194: {",
          "195:  CG(parse_error) = 0;",
          "196:  RESET_DOC_COMMENT();",
          "197:  zend_stack_destroy(&SCNG(state_stack));",
          "198:  zend_ptr_stack_clean(&SCNG(heredoc_label_stack), (void (*)(void *)) &heredoc_label_dtor, 1);",
          "199:  zend_ptr_stack_destroy(&SCNG(heredoc_label_stack));",
          "200: }",
          "202: ZEND_API void zend_save_lexical_state(zend_lex_state *lex_state TSRMLS_DC)",
          "203: {",
          "204:  lex_state->yy_leng   = SCNG(yy_leng);",
          "205:  lex_state->yy_start  = SCNG(yy_start);",
          "206:  lex_state->yy_text   = SCNG(yy_text);",
          "207:  lex_state->yy_cursor = SCNG(yy_cursor);",
          "208:  lex_state->yy_marker = SCNG(yy_marker);",
          "209:  lex_state->yy_limit  = SCNG(yy_limit);",
          "211:  lex_state->state_stack = SCNG(state_stack);",
          "212:  zend_stack_init(&SCNG(state_stack));",
          "214:  lex_state->heredoc_label_stack = SCNG(heredoc_label_stack);",
          "215:  zend_ptr_stack_init(&SCNG(heredoc_label_stack));",
          "217:  lex_state->in = SCNG(yy_in);",
          "218:  lex_state->yy_state = YYSTATE;",
          "219:  lex_state->filename = zend_get_compiled_filename(TSRMLS_C);",
          "220:  lex_state->lineno = CG(zend_lineno);",
          "222:  lex_state->script_org = SCNG(script_org);",
          "223:  lex_state->script_org_size = SCNG(script_org_size);",
          "224:  lex_state->script_filtered = SCNG(script_filtered);",
          "225:  lex_state->script_filtered_size = SCNG(script_filtered_size);",
          "226:  lex_state->input_filter = SCNG(input_filter);",
          "227:  lex_state->output_filter = SCNG(output_filter);",
          "228:  lex_state->script_encoding = SCNG(script_encoding);",
          "229: }",
          "231: ZEND_API void zend_restore_lexical_state(zend_lex_state *lex_state TSRMLS_DC)",
          "232: {",
          "233:  SCNG(yy_leng)   = lex_state->yy_leng;",
          "234:  SCNG(yy_start)  = lex_state->yy_start;",
          "235:  SCNG(yy_text)   = lex_state->yy_text;",
          "236:  SCNG(yy_cursor) = lex_state->yy_cursor;",
          "237:  SCNG(yy_marker) = lex_state->yy_marker;",
          "238:  SCNG(yy_limit)  = lex_state->yy_limit;",
          "240:  zend_stack_destroy(&SCNG(state_stack));",
          "241:  SCNG(state_stack) = lex_state->state_stack;",
          "243:  zend_ptr_stack_clean(&SCNG(heredoc_label_stack), (void (*)(void *)) &heredoc_label_dtor, 1);",
          "244:  zend_ptr_stack_destroy(&SCNG(heredoc_label_stack));",
          "245:  SCNG(heredoc_label_stack) = lex_state->heredoc_label_stack;",
          "247:  SCNG(yy_in) = lex_state->in;",
          "248:  YYSETCONDITION(lex_state->yy_state);",
          "249:  CG(zend_lineno) = lex_state->lineno;",
          "250:  zend_restore_compiled_filename(lex_state->filename TSRMLS_CC);",
          "252:  if (SCNG(script_filtered)) {",
          "253:   efree(SCNG(script_filtered));",
          "254:   SCNG(script_filtered) = NULL;",
          "255:  }",
          "256:  SCNG(script_org) = lex_state->script_org;",
          "257:  SCNG(script_org_size) = lex_state->script_org_size;",
          "258:  SCNG(script_filtered) = lex_state->script_filtered;",
          "259:  SCNG(script_filtered_size) = lex_state->script_filtered_size;",
          "260:  SCNG(input_filter) = lex_state->input_filter;",
          "261:  SCNG(output_filter) = lex_state->output_filter;",
          "262:  SCNG(script_encoding) = lex_state->script_encoding;",
          "263: }",
          "265: ZEND_API void zend_destroy_file_handle(zend_file_handle *file_handle TSRMLS_DC)",
          "266: {",
          "267:  zend_llist_del_element(&CG(open_files), file_handle, (int (*)(void *, void *)) zend_compare_file_handles);",
          "269:  file_handle->opened_path = NULL;",
          "270:  if (file_handle->free_filename) {",
          "271:   file_handle->filename = NULL;",
          "272:  }",
          "273: }",
          "275: #define BOM_UTF32_BE \"\\x00\\x00\\xfe\\xff\"",
          "276: #define BOM_UTF32_LE \"\\xff\\xfe\\x00\\x00\"",
          "277: #define BOM_UTF16_BE \"\\xfe\\xff\"",
          "278: #define BOM_UTF16_LE \"\\xff\\xfe\"",
          "279: #define BOM_UTF8  \"\\xef\\xbb\\xbf\"",
          "281: static const zend_encoding *zend_multibyte_detect_utf_encoding(const unsigned char *script, size_t script_size TSRMLS_DC)",
          "282: {",
          "283:  const unsigned char *p;",
          "284:  int wchar_size = 2;",
          "285:  int le = 0;",
          "288:  p = script;",
          "289:  while ((p-script) < script_size) {",
          "290:   p = memchr(p, 0, script_size-(p-script)-2);",
          "291:   if (!p) {",
          "292:    break;",
          "293:   }",
          "294:   if (*(p+1) == '\\0' && *(p+2) == '\\0') {",
          "295:    wchar_size = 4;",
          "296:    break;",
          "297:   }",
          "300:   p += 4;",
          "301:  }",
          "304:  p = script;",
          "305:  while ((p-script) < script_size) {",
          "306:   if (*p == '\\0' && *(p+wchar_size-1) != '\\0') {",
          "308:    le = 0;",
          "309:    break;",
          "310:   } else if (*p != '\\0' && *(p+wchar_size-1) == '\\0') {",
          "312:    le = 1;",
          "313:    break;",
          "314:   }",
          "315:   p += wchar_size;",
          "316:  }",
          "318:  if (wchar_size == 2) {",
          "319:   return le ? zend_multibyte_encoding_utf16le : zend_multibyte_encoding_utf16be;",
          "320:  } else {",
          "321:   return le ? zend_multibyte_encoding_utf32le : zend_multibyte_encoding_utf32be;",
          "322:  }",
          "324:  return NULL;",
          "325: }",
          "327: static const zend_encoding* zend_multibyte_detect_unicode(TSRMLS_D)",
          "328: {",
          "329:  const zend_encoding *script_encoding = NULL;",
          "330:  int bom_size;",
          "331:  unsigned char *pos1, *pos2;",
          "333:  if (LANG_SCNG(script_org_size) < sizeof(BOM_UTF32_LE)-1) {",
          "334:   return NULL;",
          "335:  }",
          "338:  if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_BE, sizeof(BOM_UTF32_BE)-1)) {",
          "339:   script_encoding = zend_multibyte_encoding_utf32be;",
          "340:   bom_size = sizeof(BOM_UTF32_BE)-1;",
          "341:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_LE, sizeof(BOM_UTF32_LE)-1)) {",
          "342:   script_encoding = zend_multibyte_encoding_utf32le;",
          "343:   bom_size = sizeof(BOM_UTF32_LE)-1;",
          "344:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_BE, sizeof(BOM_UTF16_BE)-1)) {",
          "345:   script_encoding = zend_multibyte_encoding_utf16be;",
          "346:   bom_size = sizeof(BOM_UTF16_BE)-1;",
          "347:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_LE, sizeof(BOM_UTF16_LE)-1)) {",
          "348:   script_encoding = zend_multibyte_encoding_utf16le;",
          "349:   bom_size = sizeof(BOM_UTF16_LE)-1;",
          "350:  } else if (!memcmp(LANG_SCNG(script_org), BOM_UTF8, sizeof(BOM_UTF8)-1)) {",
          "351:   script_encoding = zend_multibyte_encoding_utf8;",
          "352:   bom_size = sizeof(BOM_UTF8)-1;",
          "353:  }",
          "355:  if (script_encoding) {",
          "357:   LANG_SCNG(script_org) += bom_size;",
          "358:   LANG_SCNG(script_org_size) -= bom_size;",
          "360:   return script_encoding;",
          "361:  }",
          "364:  if ((pos1 = memchr(LANG_SCNG(script_org), 0, LANG_SCNG(script_org_size)))) {",
          "366:   pos2 = LANG_SCNG(script_org);",
          "368:   while (pos1 - pos2 >= sizeof(\"__HALT_COMPILER();\")-1) {",
          "369:    pos2 = memchr(pos2, '_', pos1 - pos2);",
          "370:    if (!pos2) break;",
          "371:    pos2++;",
          "372:    if (strncasecmp((char*)pos2, \"_HALT_COMPILER\", sizeof(\"_HALT_COMPILER\")-1) == 0) {",
          "373:     pos2 += sizeof(\"_HALT_COMPILER\")-1;",
          "374:     while (*pos2 == ' '  ||",
          "378:      pos2++;",
          "379:     }",
          "380:     if (*pos2 == '(') {",
          "381:      pos2++;",
          "382:      while (*pos2 == ' '  ||",
          "386:       pos2++;",
          "387:      }",
          "388:      if (*pos2 == ')') {",
          "389:       pos2++;",
          "390:       while (*pos2 == ' '  ||",
          "394:        pos2++;",
          "395:       }",
          "396:       if (*pos2 == ';') {",
          "397:        return NULL;",
          "398:       }",
          "399:      }",
          "400:     }",
          "401:    }",
          "402:   }",
          "404:   return zend_multibyte_detect_utf_encoding(LANG_SCNG(script_org), LANG_SCNG(script_org_size) TSRMLS_CC);",
          "405:  }",
          "407:  return NULL;",
          "408: }",
          "410: static const zend_encoding* zend_multibyte_find_script_encoding(TSRMLS_D)",
          "411: {",
          "412:  const zend_encoding *script_encoding;",
          "414:  if (CG(detect_unicode)) {",
          "416:   script_encoding = zend_multibyte_detect_unicode(TSRMLS_C);",
          "417:   if (script_encoding != NULL) {",
          "419:    return script_encoding;",
          "420:   }",
          "421:  }",
          "424:  if (!CG(script_encoding_list) || !CG(script_encoding_list_size)) {",
          "425:   return NULL;",
          "426:  }",
          "429:  if (CG(script_encoding_list_size) > 1) {",
          "430:   return zend_multibyte_encoding_detector(LANG_SCNG(script_org), LANG_SCNG(script_org_size), CG(script_encoding_list), CG(script_encoding_list_size) TSRMLS_CC);",
          "431:  }",
          "433:  return CG(script_encoding_list)[0];",
          "434: }",
          "436: ZEND_API int zend_multibyte_set_filter(const zend_encoding *onetime_encoding TSRMLS_DC)",
          "437: {",
          "438:  const zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);",
          "439:  const zend_encoding *script_encoding = onetime_encoding ? onetime_encoding: zend_multibyte_find_script_encoding(TSRMLS_C);",
          "441:  if (!script_encoding) {",
          "442:   return FAILURE;",
          "443:  }",
          "446:  LANG_SCNG(script_encoding) = script_encoding;",
          "447:  LANG_SCNG(input_filter) = NULL;",
          "448:  LANG_SCNG(output_filter) = NULL;",
          "450:  if (!internal_encoding || LANG_SCNG(script_encoding) == internal_encoding) {",
          "451:   if (!zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {",
          "453:    LANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;",
          "454:    LANG_SCNG(output_filter) = encoding_filter_intermediate_to_script;",
          "455:   } else {",
          "456:    LANG_SCNG(input_filter) = NULL;",
          "457:    LANG_SCNG(output_filter) = NULL;",
          "458:   }",
          "459:   return SUCCESS;",
          "460:  }",
          "462:  if (zend_multibyte_check_lexer_compatibility(internal_encoding)) {",
          "463:   LANG_SCNG(input_filter) = encoding_filter_script_to_internal;",
          "464:   LANG_SCNG(output_filter) = NULL;",
          "465:  } else if (zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {",
          "466:   LANG_SCNG(input_filter) = NULL;",
          "467:   LANG_SCNG(output_filter) = encoding_filter_script_to_internal;",
          "468:  } else {",
          "470:   LANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;",
          "471:   LANG_SCNG(output_filter) = encoding_filter_intermediate_to_internal;",
          "472:  }",
          "474:  return 0;",
          "475: }",
          "477: ZEND_API int open_file_for_scanning(zend_file_handle *file_handle TSRMLS_DC)",
          "478: {",
          "479:  const char *file_path = NULL;",
          "480:  char *buf;",
          "481:  size_t size, offset = 0;",
          "484:  if (CG(start_lineno) == 2 && file_handle->type == ZEND_HANDLE_FP && file_handle->handle.fp) {",
          "485:   if ((offset = ftell(file_handle->handle.fp)) == -1) {",
          "486:    offset = 0;",
          "487:   }",
          "488:  }",
          "490:  if (zend_stream_fixup(file_handle, &buf, &size TSRMLS_CC) == FAILURE) {",
          "491:   return FAILURE;",
          "492:  }",
          "494:  zend_llist_add_element(&CG(open_files), file_handle);",
          "495:  if (file_handle->handle.stream.handle >= (void*)file_handle && file_handle->handle.stream.handle <= (void*)(file_handle+1)) {",
          "496:   zend_file_handle *fh = (zend_file_handle*)zend_llist_get_last(&CG(open_files));",
          "497:   size_t diff = (char*)file_handle->handle.stream.handle - (char*)file_handle;",
          "498:   fh->handle.stream.handle = (void*)(((char*)fh) + diff);",
          "499:   file_handle->handle.stream.handle = fh->handle.stream.handle;",
          "500:  }",
          "503:  SCNG(yy_in) = file_handle;",
          "504:  SCNG(yy_start) = NULL;",
          "506:  if (size != -1) {",
          "507:   if (CG(multibyte)) {",
          "508:    SCNG(script_org) = (unsigned char*)buf;",
          "509:    SCNG(script_org_size) = size;",
          "510:    SCNG(script_filtered) = NULL;",
          "512:    zend_multibyte_set_filter(NULL TSRMLS_CC);",
          "514:    if (SCNG(input_filter)) {",
          "515:     if ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "516:      zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "517:        \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "518:     }",
          "519:     buf = (char*)SCNG(script_filtered);",
          "520:     size = SCNG(script_filtered_size);",
          "521:    }",
          "522:   }",
          "523:   SCNG(yy_start) = (unsigned char *)buf - offset;",
          "524:   yy_scan_buffer(buf, size TSRMLS_CC);",
          "525:  } else {",
          "526:   zend_error_noreturn(E_COMPILE_ERROR, \"zend_stream_mmap() failed\");",
          "527:  }",
          "529:  BEGIN(INITIAL);",
          "531:  if (file_handle->opened_path) {",
          "532:   file_path = file_handle->opened_path;",
          "533:  } else {",
          "534:   file_path = file_handle->filename;",
          "535:  }",
          "537:  zend_set_compiled_filename(file_path TSRMLS_CC);",
          "539:  if (CG(start_lineno)) {",
          "540:   CG(zend_lineno) = CG(start_lineno);",
          "541:   CG(start_lineno) = 0;",
          "542:  } else {",
          "543:   CG(zend_lineno) = 1;",
          "544:  }",
          "546:  CG(increment_lineno) = 0;",
          "547:  return SUCCESS;",
          "548: }",
          "549: END_EXTERN_C()",
          "552: ZEND_API zend_op_array *compile_file(zend_file_handle *file_handle, int type TSRMLS_DC)",
          "553: {",
          "554:  zend_lex_state original_lex_state;",
          "555:  zend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));",
          "556:  zend_op_array *original_active_op_array = CG(active_op_array);",
          "557:  zend_op_array *retval=NULL;",
          "558:  int compiler_result;",
          "559:  zend_bool compilation_successful=0;",
          "560:  znode retval_znode;",
          "561:  zend_bool original_in_compilation = CG(in_compilation);",
          "563:  retval_znode.op_type = IS_CONST;",
          "564:  retval_znode.u.constant.type = IS_LONG;",
          "565:  retval_znode.u.constant.value.lval = 1;",
          "566:  Z_UNSET_ISREF(retval_znode.u.constant);",
          "567:  Z_SET_REFCOUNT(retval_znode.u.constant, 1);",
          "569:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "573:  if (open_file_for_scanning(file_handle TSRMLS_CC)==FAILURE) {",
          "574:   if (type==ZEND_REQUIRE) {",
          "575:    zend_message_dispatcher(ZMSG_FAILED_REQUIRE_FOPEN, file_handle->filename TSRMLS_CC);",
          "576:    zend_bailout();",
          "577:   } else {",
          "578:    zend_message_dispatcher(ZMSG_FAILED_INCLUDE_FOPEN, file_handle->filename TSRMLS_CC);",
          "579:   }",
          "580:   compilation_successful=0;",
          "581:  } else {",
          "582:   init_op_array(op_array, ZEND_USER_FUNCTION, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "583:   CG(in_compilation) = 1;",
          "584:   CG(active_op_array) = op_array;",
          "585:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "586:   zend_init_compiler_context(TSRMLS_C);",
          "587:   compiler_result = zendparse(TSRMLS_C);",
          "588:   zend_do_return(&retval_znode, 0 TSRMLS_CC);",
          "589:   CG(in_compilation) = original_in_compilation;",
          "591:    zend_bailout();",
          "592:   }",
          "593:   compilation_successful=1;",
          "594:  }",
          "596:  if (retval) {",
          "597:   CG(active_op_array) = original_active_op_array;",
          "598:   if (compilation_successful) {",
          "599:    pass_two(op_array TSRMLS_CC);",
          "600:    zend_release_labels(TSRMLS_C);",
          "601:   } else {",
          "602:    efree(op_array);",
          "603:    retval = NULL;",
          "604:   }",
          "605:  }",
          "606:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "607:  return retval;",
          "608: }",
          "611: zend_op_array *compile_filename(int type, zval *filename TSRMLS_DC)",
          "612: {",
          "613:  zend_file_handle file_handle;",
          "614:  zval tmp;",
          "615:  zend_op_array *retval;",
          "616:  char *opened_path = NULL;",
          "618:  if (filename->type != IS_STRING) {",
          "619:   tmp = *filename;",
          "620:   zval_copy_ctor(&tmp);",
          "621:   convert_to_string(&tmp);",
          "622:   filename = &tmp;",
          "623:  }",
          "624:  file_handle.filename = filename->value.str.val;",
          "625:  file_handle.free_filename = 0;",
          "626:  file_handle.type = ZEND_HANDLE_FILENAME;",
          "627:  file_handle.opened_path = NULL;",
          "628:  file_handle.handle.fp = NULL;",
          "630:  retval = zend_compile_file(&file_handle, type TSRMLS_CC);",
          "631:  if (retval && file_handle.handle.stream.handle) {",
          "632:   int dummy = 1;",
          "634:   if (!file_handle.opened_path) {",
          "635:    file_handle.opened_path = opened_path = estrndup(filename->value.str.val, filename->value.str.len);",
          "636:   }",
          "638:   zend_hash_add(&EG(included_files), file_handle.opened_path, strlen(file_handle.opened_path)+1, (void *)&dummy, sizeof(int), NULL);",
          "640:   if (opened_path) {",
          "641:    efree(opened_path);",
          "642:   }",
          "643:  }",
          "644:  zend_destroy_file_handle(&file_handle TSRMLS_CC);",
          "646:  if (filename==&tmp) {",
          "647:   zval_dtor(&tmp);",
          "648:  }",
          "649:  return retval;",
          "650: }",
          "652: ZEND_API int zend_prepare_string_for_scanning(zval *str, char *filename TSRMLS_DC)",
          "653: {",
          "654:  char *buf;",
          "655:  size_t size;",
          "658:  if (IS_INTERNED(str->value.str.val)) {",
          "659:   char *tmp = safe_emalloc(1, str->value.str.len, ZEND_MMAP_AHEAD);",
          "660:   memcpy(tmp, str->value.str.val, str->value.str.len + ZEND_MMAP_AHEAD);",
          "661:   str->value.str.val = tmp;",
          "662:  } else {",
          "663:   str->value.str.val = safe_erealloc(str->value.str.val, 1, str->value.str.len, ZEND_MMAP_AHEAD);",
          "664:  }",
          "666:  memset(str->value.str.val + str->value.str.len, 0, ZEND_MMAP_AHEAD);",
          "668:  SCNG(yy_in) = NULL;",
          "669:  SCNG(yy_start) = NULL;",
          "671:  buf = str->value.str.val;",
          "672:  size = str->value.str.len;",
          "674:  if (CG(multibyte)) {",
          "675:   SCNG(script_org) = (unsigned char*)buf;",
          "676:   SCNG(script_org_size) = size;",
          "677:   SCNG(script_filtered) = NULL;",
          "679:   zend_multibyte_set_filter(zend_multibyte_get_internal_encoding(TSRMLS_C) TSRMLS_CC);",
          "681:   if (SCNG(input_filter)) {",
          "682:    if ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "683:     zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "684:       \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "685:    }",
          "686:    buf = (char*)SCNG(script_filtered);",
          "687:    size = SCNG(script_filtered_size);",
          "688:   }",
          "689:  }",
          "691:  yy_scan_buffer(buf, size TSRMLS_CC);",
          "693:  zend_set_compiled_filename(filename TSRMLS_CC);",
          "694:  CG(zend_lineno) = 1;",
          "695:  CG(increment_lineno) = 0;",
          "696:  return SUCCESS;",
          "697: }",
          "700: ZEND_API size_t zend_get_scanned_file_offset(TSRMLS_D)",
          "701: {",
          "702:  size_t offset = SCNG(yy_cursor) - SCNG(yy_start);",
          "703:  if (SCNG(input_filter)) {",
          "704:   size_t original_offset = offset, length = 0;",
          "705:   do {",
          "706:    unsigned char *p = NULL;",
          "707:    if ((size_t)-1 == SCNG(input_filter)(&p, &length, SCNG(script_org), offset TSRMLS_CC)) {",
          "708:     return (size_t)-1;",
          "709:    }",
          "710:    efree(p);",
          "711:    if (length > original_offset) {",
          "712:     offset--;",
          "713:    } else if (length < original_offset) {",
          "714:     offset++;",
          "715:    }",
          "716:   } while (original_offset != length);",
          "717:  }",
          "718:  return offset;",
          "719: }",
          "722: zend_op_array *compile_string(zval *source_string, char *filename TSRMLS_DC)",
          "723: {",
          "724:  zend_lex_state original_lex_state;",
          "725:  zend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));",
          "726:  zend_op_array *original_active_op_array = CG(active_op_array);",
          "727:  zend_op_array *retval;",
          "728:  zval tmp;",
          "729:  int compiler_result;",
          "730:  zend_bool original_in_compilation = CG(in_compilation);",
          "732:  if (source_string->value.str.len==0) {",
          "733:   efree(op_array);",
          "734:   return NULL;",
          "735:  }",
          "737:  CG(in_compilation) = 1;",
          "739:  tmp = *source_string;",
          "740:  zval_copy_ctor(&tmp);",
          "741:  convert_to_string(&tmp);",
          "742:  source_string = &tmp;",
          "744:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "745:  if (zend_prepare_string_for_scanning(source_string, filename TSRMLS_CC)==FAILURE) {",
          "746:   efree(op_array);",
          "747:   retval = NULL;",
          "748:  } else {",
          "749:   zend_bool orig_interactive = CG(interactive);",
          "751:   CG(interactive) = 0;",
          "752:   init_op_array(op_array, ZEND_EVAL_CODE, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);",
          "753:   CG(interactive) = orig_interactive;",
          "754:   CG(active_op_array) = op_array;",
          "755:   zend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));",
          "756:   zend_init_compiler_context(TSRMLS_C);",
          "757:   BEGIN(ST_IN_SCRIPTING);",
          "758:   compiler_result = zendparse(TSRMLS_C);",
          "760:   if (SCNG(script_filtered)) {",
          "761:    efree(SCNG(script_filtered));",
          "762:    SCNG(script_filtered) = NULL;",
          "763:   }",
          "765:   if (compiler_result==1) {",
          "766:    CG(active_op_array) = original_active_op_array;",
          "767:    CG(unclean_shutdown)=1;",
          "768:    destroy_op_array(op_array TSRMLS_CC);",
          "769:    efree(op_array);",
          "770:    retval = NULL;",
          "771:   } else {",
          "772:    zend_do_return(NULL, 0 TSRMLS_CC);",
          "773:    CG(active_op_array) = original_active_op_array;",
          "774:    pass_two(op_array TSRMLS_CC);",
          "775:    zend_release_labels(TSRMLS_C);",
          "776:    retval = op_array;",
          "777:   }",
          "778:  }",
          "779:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "780:  zval_dtor(&tmp);",
          "781:  CG(in_compilation) = original_in_compilation;",
          "782:  return retval;",
          "783: }",
          "786: BEGIN_EXTERN_C()",
          "787: int highlight_file(char *filename, zend_syntax_highlighter_ini *syntax_highlighter_ini TSRMLS_DC)",
          "788: {",
          "789:  zend_lex_state original_lex_state;",
          "790:  zend_file_handle file_handle;",
          "792:  file_handle.type = ZEND_HANDLE_FILENAME;",
          "793:  file_handle.filename = filename;",
          "794:  file_handle.free_filename = 0;",
          "795:  file_handle.opened_path = NULL;",
          "796:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "797:  if (open_file_for_scanning(&file_handle TSRMLS_CC)==FAILURE) {",
          "798:   zend_message_dispatcher(ZMSG_FAILED_HIGHLIGHT_FOPEN, filename TSRMLS_CC);",
          "799:   zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "800:   return FAILURE;",
          "801:  }",
          "802:  zend_highlight(syntax_highlighter_ini TSRMLS_CC);",
          "803:  if (SCNG(script_filtered)) {",
          "804:   efree(SCNG(script_filtered));",
          "805:   SCNG(script_filtered) = NULL;",
          "806:  }",
          "807:  zend_destroy_file_handle(&file_handle TSRMLS_CC);",
          "808:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "809:  return SUCCESS;",
          "810: }",
          "812: int highlight_string(zval *str, zend_syntax_highlighter_ini *syntax_highlighter_ini, char *str_name TSRMLS_DC)",
          "813: {",
          "814:  zend_lex_state original_lex_state;",
          "815:  zval tmp = *str;",
          "817:  str = &tmp;",
          "818:  zval_copy_ctor(str);",
          "819:  zend_save_lexical_state(&original_lex_state TSRMLS_CC);",
          "820:  if (zend_prepare_string_for_scanning(str, str_name TSRMLS_CC)==FAILURE) {",
          "821:   zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "822:   return FAILURE;",
          "823:  }",
          "824:  BEGIN(INITIAL);",
          "825:  zend_highlight(syntax_highlighter_ini TSRMLS_CC);",
          "826:  if (SCNG(script_filtered)) {",
          "827:   efree(SCNG(script_filtered));",
          "828:   SCNG(script_filtered) = NULL;",
          "829:  }",
          "830:  zend_restore_lexical_state(&original_lex_state TSRMLS_CC);",
          "831:  zval_dtor(str);",
          "832:  return SUCCESS;",
          "833: }",
          "835: ZEND_API void zend_multibyte_yyinput_again(zend_encoding_filter old_input_filter, const zend_encoding *old_encoding TSRMLS_DC)",
          "836: {",
          "837:  size_t length;",
          "838:  unsigned char *new_yy_start;",
          "841:  if (!SCNG(input_filter)) {",
          "842:   if (SCNG(script_filtered)) {",
          "843:    efree(SCNG(script_filtered));",
          "844:    SCNG(script_filtered) = NULL;",
          "845:   }",
          "846:   SCNG(script_filtered_size) = 0;",
          "847:   length = SCNG(script_org_size);",
          "848:   new_yy_start = SCNG(script_org);",
          "849:  } else {",
          "850:   if ((size_t)-1 == SCNG(input_filter)(&new_yy_start, &length, SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {",
          "851:    zend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"",
          "852:      \"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));",
          "853:   }",
          "854:   SCNG(script_filtered) = new_yy_start;",
          "855:   SCNG(script_filtered_size) = length;",
          "856:  }",
          "858:  SCNG(yy_cursor) = new_yy_start + (SCNG(yy_cursor) - SCNG(yy_start));",
          "859:  SCNG(yy_marker) = new_yy_start + (SCNG(yy_marker) - SCNG(yy_start));",
          "860:  SCNG(yy_text) = new_yy_start + (SCNG(yy_text) - SCNG(yy_start));",
          "861:  SCNG(yy_limit) = new_yy_start + (SCNG(yy_limit) - SCNG(yy_start));",
          "863:  SCNG(yy_start) = new_yy_start;",
          "864: }",
          "867: # define zend_copy_value(zendlval, yytext, yyleng) \\",
          "868:  if (SCNG(output_filter)) { \\",
          "869:   size_t sz = 0; \\",
          "870:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC); \\",
          "871:   zendlval->value.str.len = sz; \\",
          "872:  } else { \\",
          "873:   zendlval->value.str.val = (char *) estrndup(yytext, yyleng); \\",
          "874:   zendlval->value.str.len = yyleng; \\",
          "875:  }",
          "877: static void zend_scan_escape_string(zval *zendlval, char *str, int len, char quote_type TSRMLS_DC)",
          "878: {",
          "879:  register char *s, *t;",
          "880:  char *end;",
          "882:  ZVAL_STRINGL(zendlval, str, len, 1);",
          "885:  s = t = zendlval->value.str.val;",
          "886:  end = s+zendlval->value.str.len;",
          "887:  while (s<end) {",
          "888:   if (*s=='\\\\') {",
          "889:    s++;",
          "890:    if (s >= end) {",
          "892:     break;",
          "893:    }",
          "895:    switch(*s) {",
          "896:     case 'n':",
          "898:      zendlval->value.str.len--;",
          "899:      break;",
          "900:     case 'r':",
          "902:      zendlval->value.str.len--;",
          "903:      break;",
          "904:     case 't':",
          "906:      zendlval->value.str.len--;",
          "907:      break;",
          "908:     case 'f':",
          "910:      zendlval->value.str.len--;",
          "911:      break;",
          "912:     case 'v':",
          "914:      zendlval->value.str.len--;",
          "915:      break;",
          "916:     case 'e':",
          "917: #ifdef PHP_WIN32",
          "919: #else",
          "921: #endif",
          "922:      zendlval->value.str.len--;",
          "923:      break;",
          "924:     case '\"':",
          "925:     case '`':",
          "926:      if (*s != quote_type) {",
          "929:       break;",
          "930:      }",
          "931:     case '\\\\':",
          "932:     case '$':",
          "934:      zendlval->value.str.len--;",
          "935:      break;",
          "936:     case 'x':",
          "937:     case 'X':",
          "938:      if (ZEND_IS_HEX(*(s+1))) {",
          "939:       char hex_buf[3] = { 0, 0, 0 };",
          "943:       hex_buf[0] = *(++s);",
          "944:       zendlval->value.str.len--;",
          "945:       if (ZEND_IS_HEX(*(s+1))) {",
          "946:        hex_buf[1] = *(++s);",
          "947:        zendlval->value.str.len--;",
          "948:       }",
          "950:      } else {",
          "953:      }",
          "954:      break;",
          "955:     default:",
          "957:      if (ZEND_IS_OCT(*s)) {",
          "958:       char octal_buf[4] = { 0, 0, 0, 0 };",
          "960:       octal_buf[0] = *s;",
          "961:       zendlval->value.str.len--;",
          "962:       if (ZEND_IS_OCT(*(s+1))) {",
          "963:        octal_buf[1] = *(++s);",
          "964:        zendlval->value.str.len--;",
          "965:        if (ZEND_IS_OCT(*(s+1))) {",
          "966:         octal_buf[2] = *(++s);",
          "967:         zendlval->value.str.len--;",
          "968:        }",
          "969:       }",
          "971:      } else {",
          "974:      }",
          "975:      break;",
          "976:    }",
          "977:   } else {",
          "979:   }",
          "981:   if (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {",
          "982:    CG(zend_lineno)++;",
          "983:   }",
          "984:   s++;",
          "985:  }",
          "987:  if (SCNG(output_filter)) {",
          "988:   size_t sz = 0;",
          "989:   s = zendlval->value.str.val;",
          "990:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);",
          "991:   zendlval->value.str.len = sz;",
          "992:   efree(s);",
          "993:  }",
          "994: }",
          "997: int lex_scan(zval *zendlval TSRMLS_DC)",
          "998: {",
          "999: restart:",
          "1000:  SCNG(yy_text) = YYCURSOR;",
          "1002: yymore_restart:",
          "1005: #line 1006 \"Zend/zend_language_scanner.c\"",
          "1006: {",
          "1007:  YYCTYPE yych;",
          "1008:  unsigned int yyaccept = 0;",
          "1009:  if (YYGETCONDITION() < 5) {",
          "1010:   if (YYGETCONDITION() < 2) {",
          "1011:    if (YYGETCONDITION() < 1) {",
          "1012:     goto yyc_ST_IN_SCRIPTING;",
          "1013:    } else {",
          "1014:     goto yyc_ST_LOOKING_FOR_PROPERTY;",
          "1015:    }",
          "1016:   } else {",
          "1017:    if (YYGETCONDITION() < 3) {",
          "1018:     goto yyc_ST_BACKQUOTE;",
          "1019:    } else {",
          "1020:     if (YYGETCONDITION() < 4) {",
          "1021:      goto yyc_ST_DOUBLE_QUOTES;",
          "1022:     } else {",
          "1023:      goto yyc_ST_HEREDOC;",
          "1024:     }",
          "1025:    }",
          "1026:   }",
          "1027:  } else {",
          "1028:   if (YYGETCONDITION() < 7) {",
          "1029:    if (YYGETCONDITION() < 6) {",
          "1030:     goto yyc_ST_LOOKING_FOR_VARNAME;",
          "1031:    } else {",
          "1032:     goto yyc_ST_VAR_OFFSET;",
          "1033:    }",
          "1034:   } else {",
          "1035:    if (YYGETCONDITION() < 8) {",
          "1036:     goto yyc_INITIAL;",
          "1037:    } else {",
          "1038:     if (YYGETCONDITION() < 9) {",
          "1039:      goto yyc_ST_END_HEREDOC;",
          "1040:     } else {",
          "1041:      goto yyc_ST_NOWDOC;",
          "1042:     }",
          "1043:    }",
          "1044:   }",
          "1045:  }",
          "1047: yyc_INITIAL:",
          "1048:  {",
          "1049:   static const unsigned char yybm[] = {",
          "1050:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1051:      0, 128, 128,   0,   0, 128,   0,   0,",
          "1052:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1053:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1054:    128,   0,   0,   0,   0,   0,   0,   0,",
          "1055:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1056:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1057:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1058:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1059:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1060:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1061:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1062:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1063:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1064:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1065:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1066:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1067:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1068:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1069:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1070:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1071:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1072:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1073:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1074:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1075:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1076:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1077:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1078:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1079:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1080:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1081:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1082:   };",
          "1084:   YYDEBUG(0, *YYCURSOR);",
          "1085:   YYFILL(8);",
          "1086:   yych = *YYCURSOR;",
          "1087:   if (yych != '<') goto yy4;",
          "1088:   YYDEBUG(2, *YYCURSOR);",
          "1089:   yyaccept = 0;",
          "1090:   yych = *(YYMARKER = ++YYCURSOR);",
          "1091:   if (yych <= '?') {",
          "1092:    if (yych == '%') goto yy7;",
          "1093:    if (yych >= '?') goto yy5;",
          "1094:   } else {",
          "1095:    if (yych <= 'S') {",
          "1096:     if (yych >= 'S') goto yy9;",
          "1097:    } else {",
          "1098:     if (yych == 's') goto yy9;",
          "1099:    }",
          "1100:   }",
          "1101: yy3:",
          "1102:   YYDEBUG(3, *YYCURSOR);",
          "1103:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1104: #line 1803 \"Zend/zend_language_scanner.l\"",
          "1105:   {",
          "1106:  if (YYCURSOR > YYLIMIT) {",
          "1107:   return 0;",
          "1108:  }",
          "1110: inline_char_handler:",
          "1112:  while (1) {",
          "1113:   YYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);",
          "1115:   YYCURSOR = ptr ? ptr + 1 : YYLIMIT;",
          "1117:   if (YYCURSOR < YYLIMIT) {",
          "1118:    switch (*YYCURSOR) {",
          "1119:     case '?':",
          "1121:       break;",
          "1122:      }",
          "1123:      continue;",
          "1124:     case '%':",
          "1125:      if (CG(asp_tags)) {",
          "1126:       break;",
          "1127:      }",
          "1128:      continue;",
          "1129:     case 's':",
          "1130:     case 'S':",
          "1133:      YYCURSOR--;",
          "1134:      yymore();",
          "1135:     default:",
          "1136:      continue;",
          "1137:    }",
          "1139:    YYCURSOR--;",
          "1140:   }",
          "1142:   break;",
          "1143:  }",
          "1145: inline_html:",
          "1146:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1148:  if (SCNG(output_filter)) {",
          "1149:   int readsize;",
          "1150:   size_t sz = 0;",
          "1151:   readsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);",
          "1152:   zendlval->value.str.len = sz;",
          "1153:   if (readsize < yyleng) {",
          "1154:    yyless(readsize);",
          "1155:   }",
          "1156:  } else {",
          "1157:    zendlval->value.str.val = (char *) estrndup(yytext, yyleng);",
          "1158:    zendlval->value.str.len = yyleng;",
          "1159:  }",
          "1160:  zendlval->type = IS_STRING;",
          "1161:  HANDLE_NEWLINES(yytext, yyleng);",
          "1162:  return T_INLINE_HTML;",
          "1163: }",
          "1164: #line 1165 \"Zend/zend_language_scanner.c\"",
          "1165: yy4:",
          "1166:   YYDEBUG(4, *YYCURSOR);",
          "1167:   yych = *++YYCURSOR;",
          "1168:   goto yy3;",
          "1169: yy5:",
          "1170:   YYDEBUG(5, *YYCURSOR);",
          "1171:   yyaccept = 1;",
          "1172:   yych = *(YYMARKER = ++YYCURSOR);",
          "1173:   if (yych <= 'O') {",
          "1174:    if (yych == '=') goto yy45;",
          "1175:   } else {",
          "1176:    if (yych <= 'P') goto yy47;",
          "1177:    if (yych == 'p') goto yy47;",
          "1178:   }",
          "1179: yy6:",
          "1180:   YYDEBUG(6, *YYCURSOR);",
          "1181:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1182: #line 1791 \"Zend/zend_language_scanner.l\"",
          "1183:   {",
          "1184:  if (CG(short_tags)) {",
          "1186:   zendlval->value.str.len = yyleng;",
          "1187:   zendlval->type = IS_STRING;",
          "1188:   BEGIN(ST_IN_SCRIPTING);",
          "1189:   return T_OPEN_TAG;",
          "1190:  } else {",
          "1191:   goto inline_char_handler;",
          "1192:  }",
          "1193: }",
          "1194: #line 1195 \"Zend/zend_language_scanner.c\"",
          "1195: yy7:",
          "1196:   YYDEBUG(7, *YYCURSOR);",
          "1197:   ++YYCURSOR;",
          "1198:   if ((yych = *YYCURSOR) == '=') goto yy43;",
          "1199:   YYDEBUG(8, *YYCURSOR);",
          "1200:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1201: #line 1768 \"Zend/zend_language_scanner.l\"",
          "1202:   {",
          "1203:  if (CG(asp_tags)) {",
          "1205:   zendlval->value.str.len = yyleng;",
          "1206:   zendlval->type = IS_STRING;",
          "1207:   BEGIN(ST_IN_SCRIPTING);",
          "1208:   return T_OPEN_TAG;",
          "1209:  } else {",
          "1210:   goto inline_char_handler;",
          "1211:  }",
          "1212: }",
          "1213: #line 1214 \"Zend/zend_language_scanner.c\"",
          "1214: yy9:",
          "1215:   YYDEBUG(9, *YYCURSOR);",
          "1216:   yych = *++YYCURSOR;",
          "1217:   if (yych == 'C') goto yy11;",
          "1218:   if (yych == 'c') goto yy11;",
          "1219: yy10:",
          "1220:   YYDEBUG(10, *YYCURSOR);",
          "1221:   YYCURSOR = YYMARKER;",
          "1222:   if (yyaccept <= 0) {",
          "1223:    goto yy3;",
          "1224:   } else {",
          "1225:    goto yy6;",
          "1226:   }",
          "1227: yy11:",
          "1228:   YYDEBUG(11, *YYCURSOR);",
          "1229:   yych = *++YYCURSOR;",
          "1230:   if (yych == 'R') goto yy12;",
          "1231:   if (yych != 'r') goto yy10;",
          "1232: yy12:",
          "1233:   YYDEBUG(12, *YYCURSOR);",
          "1234:   yych = *++YYCURSOR;",
          "1235:   if (yych == 'I') goto yy13;",
          "1236:   if (yych != 'i') goto yy10;",
          "1237: yy13:",
          "1238:   YYDEBUG(13, *YYCURSOR);",
          "1239:   yych = *++YYCURSOR;",
          "1240:   if (yych == 'P') goto yy14;",
          "1241:   if (yych != 'p') goto yy10;",
          "1242: yy14:",
          "1243:   YYDEBUG(14, *YYCURSOR);",
          "1244:   yych = *++YYCURSOR;",
          "1245:   if (yych == 'T') goto yy15;",
          "1246:   if (yych != 't') goto yy10;",
          "1247: yy15:",
          "1248:   YYDEBUG(15, *YYCURSOR);",
          "1249:   yych = *++YYCURSOR;",
          "1250:   if (yych == 'L') goto yy10;",
          "1251:   if (yych == 'l') goto yy10;",
          "1252:   goto yy17;",
          "1253: yy16:",
          "1254:   YYDEBUG(16, *YYCURSOR);",
          "1255:   ++YYCURSOR;",
          "1256:   YYFILL(8);",
          "1257:   yych = *YYCURSOR;",
          "1258: yy17:",
          "1259:   YYDEBUG(17, *YYCURSOR);",
          "1260:   if (yybm[0+yych] & 128) {",
          "1261:    goto yy16;",
          "1262:   }",
          "1263:   if (yych == 'L') goto yy18;",
          "1264:   if (yych != 'l') goto yy10;",
          "1265: yy18:",
          "1266:   YYDEBUG(18, *YYCURSOR);",
          "1267:   yych = *++YYCURSOR;",
          "1268:   if (yych == 'A') goto yy19;",
          "1269:   if (yych != 'a') goto yy10;",
          "1270: yy19:",
          "1271:   YYDEBUG(19, *YYCURSOR);",
          "1272:   yych = *++YYCURSOR;",
          "1273:   if (yych == 'N') goto yy20;",
          "1274:   if (yych != 'n') goto yy10;",
          "1275: yy20:",
          "1276:   YYDEBUG(20, *YYCURSOR);",
          "1277:   yych = *++YYCURSOR;",
          "1278:   if (yych == 'G') goto yy21;",
          "1279:   if (yych != 'g') goto yy10;",
          "1280: yy21:",
          "1281:   YYDEBUG(21, *YYCURSOR);",
          "1282:   yych = *++YYCURSOR;",
          "1283:   if (yych == 'U') goto yy22;",
          "1284:   if (yych != 'u') goto yy10;",
          "1285: yy22:",
          "1286:   YYDEBUG(22, *YYCURSOR);",
          "1287:   yych = *++YYCURSOR;",
          "1288:   if (yych == 'A') goto yy23;",
          "1289:   if (yych != 'a') goto yy10;",
          "1290: yy23:",
          "1291:   YYDEBUG(23, *YYCURSOR);",
          "1292:   yych = *++YYCURSOR;",
          "1293:   if (yych == 'G') goto yy24;",
          "1294:   if (yych != 'g') goto yy10;",
          "1295: yy24:",
          "1296:   YYDEBUG(24, *YYCURSOR);",
          "1297:   yych = *++YYCURSOR;",
          "1298:   if (yych == 'E') goto yy25;",
          "1299:   if (yych != 'e') goto yy10;",
          "1300: yy25:",
          "1301:   YYDEBUG(25, *YYCURSOR);",
          "1302:   ++YYCURSOR;",
          "1303:   YYFILL(1);",
          "1304:   yych = *YYCURSOR;",
          "1305:   YYDEBUG(26, *YYCURSOR);",
          "1306:   if (yych <= '\\r') {",
          "1307:    if (yych <= 0x08) goto yy10;",
          "1308:    if (yych <= '\\n') goto yy25;",
          "1309:    if (yych <= '\\f') goto yy10;",
          "1310:    goto yy25;",
          "1311:   } else {",
          "1312:    if (yych <= ' ') {",
          "1313:     if (yych <= 0x1F) goto yy10;",
          "1314:     goto yy25;",
          "1315:    } else {",
          "1316:     if (yych != '=') goto yy10;",
          "1317:    }",
          "1318:   }",
          "1319: yy27:",
          "1320:   YYDEBUG(27, *YYCURSOR);",
          "1321:   ++YYCURSOR;",
          "1322:   YYFILL(5);",
          "1323:   yych = *YYCURSOR;",
          "1324:   YYDEBUG(28, *YYCURSOR);",
          "1325:   if (yych <= '!') {",
          "1326:    if (yych <= '\\f') {",
          "1327:     if (yych <= 0x08) goto yy10;",
          "1328:     if (yych <= '\\n') goto yy27;",
          "1329:     goto yy10;",
          "1330:    } else {",
          "1331:     if (yych <= '\\r') goto yy27;",
          "1332:     if (yych == ' ') goto yy27;",
          "1333:     goto yy10;",
          "1334:    }",
          "1335:   } else {",
          "1336:    if (yych <= 'O') {",
          "1337:     if (yych <= '\"') goto yy30;",
          "1338:     if (yych == '\\'') goto yy31;",
          "1339:     goto yy10;",
          "1340:    } else {",
          "1341:     if (yych <= 'P') goto yy29;",
          "1342:     if (yych != 'p') goto yy10;",
          "1343:    }",
          "1344:   }",
          "1345: yy29:",
          "1346:   YYDEBUG(29, *YYCURSOR);",
          "1347:   yych = *++YYCURSOR;",
          "1348:   if (yych == 'H') goto yy42;",
          "1349:   if (yych == 'h') goto yy42;",
          "1350:   goto yy10;",
          "1351: yy30:",
          "1352:   YYDEBUG(30, *YYCURSOR);",
          "1353:   yych = *++YYCURSOR;",
          "1354:   if (yych == 'P') goto yy39;",
          "1355:   if (yych == 'p') goto yy39;",
          "1356:   goto yy10;",
          "1357: yy31:",
          "1358:   YYDEBUG(31, *YYCURSOR);",
          "1359:   yych = *++YYCURSOR;",
          "1360:   if (yych == 'P') goto yy32;",
          "1361:   if (yych != 'p') goto yy10;",
          "1362: yy32:",
          "1363:   YYDEBUG(32, *YYCURSOR);",
          "1364:   yych = *++YYCURSOR;",
          "1365:   if (yych == 'H') goto yy33;",
          "1366:   if (yych != 'h') goto yy10;",
          "1367: yy33:",
          "1368:   YYDEBUG(33, *YYCURSOR);",
          "1369:   yych = *++YYCURSOR;",
          "1370:   if (yych == 'P') goto yy34;",
          "1371:   if (yych != 'p') goto yy10;",
          "1372: yy34:",
          "1373:   YYDEBUG(34, *YYCURSOR);",
          "1374:   yych = *++YYCURSOR;",
          "1375:   if (yych != '\\'') goto yy10;",
          "1376: yy35:",
          "1377:   YYDEBUG(35, *YYCURSOR);",
          "1378:   ++YYCURSOR;",
          "1379:   YYFILL(1);",
          "1380:   yych = *YYCURSOR;",
          "1381:   YYDEBUG(36, *YYCURSOR);",
          "1382:   if (yych <= '\\r') {",
          "1383:    if (yych <= 0x08) goto yy10;",
          "1384:    if (yych <= '\\n') goto yy35;",
          "1385:    if (yych <= '\\f') goto yy10;",
          "1386:    goto yy35;",
          "1387:   } else {",
          "1388:    if (yych <= ' ') {",
          "1389:     if (yych <= 0x1F) goto yy10;",
          "1390:     goto yy35;",
          "1391:    } else {",
          "1392:     if (yych != '>') goto yy10;",
          "1393:    }",
          "1394:   }",
          "1395:   YYDEBUG(37, *YYCURSOR);",
          "1396:   ++YYCURSOR;",
          "1397:   YYDEBUG(38, *YYCURSOR);",
          "1398:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1399: #line 1728 \"Zend/zend_language_scanner.l\"",
          "1400:   {",
          "1401:  YYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));",
          "1403:  if (bracket != SCNG(yy_text)) {",
          "1405:   YYCURSOR = bracket;",
          "1406:   goto inline_html;",
          "1407:  }",
          "1409:  HANDLE_NEWLINES(yytext, yyleng);",
          "1411:  zendlval->value.str.len = yyleng;",
          "1412:  zendlval->type = IS_STRING;",
          "1413:  BEGIN(ST_IN_SCRIPTING);",
          "1414:  return T_OPEN_TAG;",
          "1415: }",
          "1416: #line 1417 \"Zend/zend_language_scanner.c\"",
          "1417: yy39:",
          "1418:   YYDEBUG(39, *YYCURSOR);",
          "1419:   yych = *++YYCURSOR;",
          "1420:   if (yych == 'H') goto yy40;",
          "1421:   if (yych != 'h') goto yy10;",
          "1422: yy40:",
          "1423:   YYDEBUG(40, *YYCURSOR);",
          "1424:   yych = *++YYCURSOR;",
          "1425:   if (yych == 'P') goto yy41;",
          "1426:   if (yych != 'p') goto yy10;",
          "1427: yy41:",
          "1428:   YYDEBUG(41, *YYCURSOR);",
          "1429:   yych = *++YYCURSOR;",
          "1430:   if (yych == '\"') goto yy35;",
          "1431:   goto yy10;",
          "1432: yy42:",
          "1433:   YYDEBUG(42, *YYCURSOR);",
          "1434:   yych = *++YYCURSOR;",
          "1435:   if (yych == 'P') goto yy35;",
          "1436:   if (yych == 'p') goto yy35;",
          "1437:   goto yy10;",
          "1438: yy43:",
          "1439:   YYDEBUG(43, *YYCURSOR);",
          "1440:   ++YYCURSOR;",
          "1441:   YYDEBUG(44, *YYCURSOR);",
          "1442:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1443: #line 1746 \"Zend/zend_language_scanner.l\"",
          "1444:   {",
          "1445:  if (CG(asp_tags)) {",
          "1447:   zendlval->value.str.len = yyleng;",
          "1448:   zendlval->type = IS_STRING;",
          "1449:   BEGIN(ST_IN_SCRIPTING);",
          "1450:   return T_OPEN_TAG_WITH_ECHO;",
          "1451:  } else {",
          "1452:   goto inline_char_handler;",
          "1453:  }",
          "1454: }",
          "1455: #line 1456 \"Zend/zend_language_scanner.c\"",
          "1456: yy45:",
          "1457:   YYDEBUG(45, *YYCURSOR);",
          "1458:   ++YYCURSOR;",
          "1459:   YYDEBUG(46, *YYCURSOR);",
          "1460:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1461: #line 1759 \"Zend/zend_language_scanner.l\"",
          "1462:   {",
          "1464:  zendlval->value.str.len = yyleng;",
          "1465:  zendlval->type = IS_STRING;",
          "1466:  BEGIN(ST_IN_SCRIPTING);",
          "1467:  return T_OPEN_TAG_WITH_ECHO;",
          "1468: }",
          "1469: #line 1470 \"Zend/zend_language_scanner.c\"",
          "1470: yy47:",
          "1471:   YYDEBUG(47, *YYCURSOR);",
          "1472:   yych = *++YYCURSOR;",
          "1473:   if (yych == 'H') goto yy48;",
          "1474:   if (yych != 'h') goto yy10;",
          "1475: yy48:",
          "1476:   YYDEBUG(48, *YYCURSOR);",
          "1477:   yych = *++YYCURSOR;",
          "1478:   if (yych == 'P') goto yy49;",
          "1479:   if (yych != 'p') goto yy10;",
          "1480: yy49:",
          "1481:   YYDEBUG(49, *YYCURSOR);",
          "1482:   yych = *++YYCURSOR;",
          "1483:   if (yych <= '\\f') {",
          "1484:    if (yych <= 0x08) goto yy10;",
          "1485:    if (yych >= '\\v') goto yy10;",
          "1486:   } else {",
          "1487:    if (yych <= '\\r') goto yy52;",
          "1488:    if (yych != ' ') goto yy10;",
          "1489:   }",
          "1490: yy50:",
          "1491:   YYDEBUG(50, *YYCURSOR);",
          "1492:   ++YYCURSOR;",
          "1493: yy51:",
          "1494:   YYDEBUG(51, *YYCURSOR);",
          "1495:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1496: #line 1781 \"Zend/zend_language_scanner.l\"",
          "1497:   {",
          "1499:  zendlval->value.str.len = yyleng;",
          "1500:  zendlval->type = IS_STRING;",
          "1501:  HANDLE_NEWLINE(yytext[yyleng-1]);",
          "1502:  BEGIN(ST_IN_SCRIPTING);",
          "1503:  return T_OPEN_TAG;",
          "1504: }",
          "1505: #line 1506 \"Zend/zend_language_scanner.c\"",
          "1506: yy52:",
          "1507:   YYDEBUG(52, *YYCURSOR);",
          "1508:   ++YYCURSOR;",
          "1509:   if ((yych = *YYCURSOR) == '\\n') goto yy50;",
          "1510:   goto yy51;",
          "1511:  }",
          "1513: yyc_ST_BACKQUOTE:",
          "1514:  {",
          "1515:   static const unsigned char yybm[] = {",
          "1516:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1517:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1518:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1519:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1520:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1521:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1522:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1523:    128, 128,   0,   0,   0,   0,   0,   0,",
          "1524:      0, 128, 128, 128, 128, 128, 128, 128,",
          "1525:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1526:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1527:    128, 128, 128,   0,   0,   0,   0, 128,",
          "1528:      0, 128, 128, 128, 128, 128, 128, 128,",
          "1529:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1530:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1531:    128, 128, 128,   0,   0,   0,   0, 128,",
          "1532:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1533:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1534:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1535:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1536:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1537:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1538:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1539:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1540:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1541:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1542:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1543:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1544:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1545:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1546:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1547:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1548:   };",
          "1549:   YYDEBUG(53, *YYCURSOR);",
          "1550:   YYFILL(2);",
          "1551:   yych = *YYCURSOR;",
          "1552:   if (yych <= '_') {",
          "1553:    if (yych != '$') goto yy60;",
          "1554:   } else {",
          "1555:    if (yych <= '`') goto yy58;",
          "1556:    if (yych == '{') goto yy57;",
          "1557:    goto yy60;",
          "1558:   }",
          "1559:   YYDEBUG(55, *YYCURSOR);",
          "1560:   ++YYCURSOR;",
          "1561:   if ((yych = *YYCURSOR) <= '_') {",
          "1562:    if (yych <= '@') goto yy56;",
          "1563:    if (yych <= 'Z') goto yy63;",
          "1564:    if (yych >= '_') goto yy63;",
          "1565:   } else {",
          "1566:    if (yych <= 'z') {",
          "1567:     if (yych >= 'a') goto yy63;",
          "1568:    } else {",
          "1569:     if (yych <= '{') goto yy66;",
          "1570:     if (yych >= 0x7F) goto yy63;",
          "1571:    }",
          "1572:   }",
          "1573: yy56:",
          "1574:   YYDEBUG(56, *YYCURSOR);",
          "1575:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1576: #line 2254 \"Zend/zend_language_scanner.l\"",
          "1577:   {",
          "1578:  if (YYCURSOR > YYLIMIT) {",
          "1579:   return 0;",
          "1580:  }",
          "1581:  if (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {",
          "1582:   YYCURSOR++;",
          "1583:  }",
          "1585:  while (YYCURSOR < YYLIMIT) {",
          "1586:   switch (*YYCURSOR++) {",
          "1587:    case '`':",
          "1588:     break;",
          "1589:    case '$':",
          "1590:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "1591:      break;",
          "1592:     }",
          "1593:     continue;",
          "1594:    case '{':",
          "1595:     if (*YYCURSOR == '$') {",
          "1596:      break;",
          "1597:     }",
          "1598:     continue;",
          "1599:    case '\\\\':",
          "1600:     if (YYCURSOR < YYLIMIT) {",
          "1601:      YYCURSOR++;",
          "1602:     }",
          "1604:    default:",
          "1605:     continue;",
          "1606:   }",
          "1608:   YYCURSOR--;",
          "1609:   break;",
          "1610:  }",
          "1612:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1614:  zend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);",
          "1615:  return T_ENCAPSED_AND_WHITESPACE;",
          "1616: }",
          "1617: #line 1618 \"Zend/zend_language_scanner.c\"",
          "1618: yy57:",
          "1619:   YYDEBUG(57, *YYCURSOR);",
          "1620:   yych = *++YYCURSOR;",
          "1621:   if (yych == '$') goto yy61;",
          "1622:   goto yy56;",
          "1623: yy58:",
          "1624:   YYDEBUG(58, *YYCURSOR);",
          "1625:   ++YYCURSOR;",
          "1626:   YYDEBUG(59, *YYCURSOR);",
          "1627:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1628: #line 2198 \"Zend/zend_language_scanner.l\"",
          "1629:   {",
          "1630:  BEGIN(ST_IN_SCRIPTING);",
          "1631:  return '`';",
          "1632: }",
          "1633: #line 1634 \"Zend/zend_language_scanner.c\"",
          "1634: yy60:",
          "1635:   YYDEBUG(60, *YYCURSOR);",
          "1636:   yych = *++YYCURSOR;",
          "1637:   goto yy56;",
          "1638: yy61:",
          "1639:   YYDEBUG(61, *YYCURSOR);",
          "1640:   ++YYCURSOR;",
          "1641:   YYDEBUG(62, *YYCURSOR);",
          "1642:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1643: #line 2185 \"Zend/zend_language_scanner.l\"",
          "1644:   {",
          "1645:  zendlval->value.lval = (long) '{';",
          "1646:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1647:  yyless(1);",
          "1648:  return T_CURLY_OPEN;",
          "1649: }",
          "1650: #line 1651 \"Zend/zend_language_scanner.c\"",
          "1651: yy63:",
          "1652:   YYDEBUG(63, *YYCURSOR);",
          "1653:   yyaccept = 0;",
          "1654:   YYMARKER = ++YYCURSOR;",
          "1655:   YYFILL(3);",
          "1656:   yych = *YYCURSOR;",
          "1657:   YYDEBUG(64, *YYCURSOR);",
          "1658:   if (yybm[0+yych] & 128) {",
          "1659:    goto yy63;",
          "1660:   }",
          "1661:   if (yych == '-') goto yy68;",
          "1662:   if (yych == '[') goto yy70;",
          "1663: yy65:",
          "1664:   YYDEBUG(65, *YYCURSOR);",
          "1665:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1666: #line 1885 \"Zend/zend_language_scanner.l\"",
          "1667:   {",
          "1668:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1669:  zendlval->type = IS_STRING;",
          "1670:  return T_VARIABLE;",
          "1671: }",
          "1672: #line 1673 \"Zend/zend_language_scanner.c\"",
          "1673: yy66:",
          "1674:   YYDEBUG(66, *YYCURSOR);",
          "1675:   ++YYCURSOR;",
          "1676:   YYDEBUG(67, *YYCURSOR);",
          "1677:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1678: #line 1461 \"Zend/zend_language_scanner.l\"",
          "1679:   {",
          "1680:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1681:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1682: }",
          "1683: #line 1684 \"Zend/zend_language_scanner.c\"",
          "1684: yy68:",
          "1685:   YYDEBUG(68, *YYCURSOR);",
          "1686:   yych = *++YYCURSOR;",
          "1687:   if (yych == '>') goto yy72;",
          "1688: yy69:",
          "1689:   YYDEBUG(69, *YYCURSOR);",
          "1690:   YYCURSOR = YYMARKER;",
          "1691:   goto yy65;",
          "1692: yy70:",
          "1693:   YYDEBUG(70, *YYCURSOR);",
          "1694:   ++YYCURSOR;",
          "1695:   YYDEBUG(71, *YYCURSOR);",
          "1696:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1697: #line 1877 \"Zend/zend_language_scanner.l\"",
          "1698:   {",
          "1699:  yyless(yyleng - 1);",
          "1700:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "1701:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1702:  zendlval->type = IS_STRING;",
          "1703:  return T_VARIABLE;",
          "1704: }",
          "1705: #line 1706 \"Zend/zend_language_scanner.c\"",
          "1706: yy72:",
          "1707:   YYDEBUG(72, *YYCURSOR);",
          "1708:   yych = *++YYCURSOR;",
          "1709:   if (yych <= '_') {",
          "1710:    if (yych <= '@') goto yy69;",
          "1711:    if (yych <= 'Z') goto yy73;",
          "1712:    if (yych <= '^') goto yy69;",
          "1713:   } else {",
          "1714:    if (yych <= '`') goto yy69;",
          "1715:    if (yych <= 'z') goto yy73;",
          "1716:    if (yych <= '~') goto yy69;",
          "1717:   }",
          "1718: yy73:",
          "1719:   YYDEBUG(73, *YYCURSOR);",
          "1720:   ++YYCURSOR;",
          "1721:   YYDEBUG(74, *YYCURSOR);",
          "1722:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1723: #line 1867 \"Zend/zend_language_scanner.l\"",
          "1724:   {",
          "1725:  yyless(yyleng - 3);",
          "1726:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "1727:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1728:  zendlval->type = IS_STRING;",
          "1729:  return T_VARIABLE;",
          "1730: }",
          "1731: #line 1732 \"Zend/zend_language_scanner.c\"",
          "1732:  }",
          "1734: yyc_ST_DOUBLE_QUOTES:",
          "1735:  {",
          "1736:   static const unsigned char yybm[] = {",
          "1737:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1738:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1739:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1740:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1741:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1742:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1743:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1744:    128, 128,   0,   0,   0,   0,   0,   0,",
          "1745:      0, 128, 128, 128, 128, 128, 128, 128,",
          "1746:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1747:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1748:    128, 128, 128,   0,   0,   0,   0, 128,",
          "1749:      0, 128, 128, 128, 128, 128, 128, 128,",
          "1750:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1751:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1752:    128, 128, 128,   0,   0,   0,   0, 128,",
          "1753:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1754:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1755:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1756:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1757:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1758:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1759:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1760:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1761:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1762:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1763:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1764:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1765:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1766:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1767:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1768:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1769:   };",
          "1770:   YYDEBUG(75, *YYCURSOR);",
          "1771:   YYFILL(2);",
          "1772:   yych = *YYCURSOR;",
          "1773:   if (yych <= '#') {",
          "1774:    if (yych == '\"') goto yy80;",
          "1775:    goto yy82;",
          "1776:   } else {",
          "1777:    if (yych <= '$') goto yy77;",
          "1778:    if (yych == '{') goto yy79;",
          "1779:    goto yy82;",
          "1780:   }",
          "1781: yy77:",
          "1782:   YYDEBUG(77, *YYCURSOR);",
          "1783:   ++YYCURSOR;",
          "1784:   if ((yych = *YYCURSOR) <= '_') {",
          "1785:    if (yych <= '@') goto yy78;",
          "1786:    if (yych <= 'Z') goto yy85;",
          "1787:    if (yych >= '_') goto yy85;",
          "1788:   } else {",
          "1789:    if (yych <= 'z') {",
          "1790:     if (yych >= 'a') goto yy85;",
          "1791:    } else {",
          "1792:     if (yych <= '{') goto yy88;",
          "1793:     if (yych >= 0x7F) goto yy85;",
          "1794:    }",
          "1795:   }",
          "1796: yy78:",
          "1797:   YYDEBUG(78, *YYCURSOR);",
          "1798:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1799: #line 2204 \"Zend/zend_language_scanner.l\"",
          "1800:   {",
          "1801:  if (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {",
          "1802:   YYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;",
          "1803:   SET_DOUBLE_QUOTES_SCANNED_LENGTH(0);",
          "1805:   goto double_quotes_scan_done;",
          "1806:  }",
          "1808:  if (YYCURSOR > YYLIMIT) {",
          "1809:   return 0;",
          "1810:  }",
          "1811:  if (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {",
          "1812:   YYCURSOR++;",
          "1813:  }",
          "1815:  while (YYCURSOR < YYLIMIT) {",
          "1816:   switch (*YYCURSOR++) {",
          "1817:    case '\"':",
          "1818:     break;",
          "1819:    case '$':",
          "1820:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "1821:      break;",
          "1822:     }",
          "1823:     continue;",
          "1824:    case '{':",
          "1825:     if (*YYCURSOR == '$') {",
          "1826:      break;",
          "1827:     }",
          "1828:     continue;",
          "1829:    case '\\\\':",
          "1830:     if (YYCURSOR < YYLIMIT) {",
          "1831:      YYCURSOR++;",
          "1832:     }",
          "1834:    default:",
          "1835:     continue;",
          "1836:   }",
          "1838:   YYCURSOR--;",
          "1839:   break;",
          "1840:  }",
          "1842: double_quotes_scan_done:",
          "1843:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1845:  zend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);",
          "1846:  return T_ENCAPSED_AND_WHITESPACE;",
          "1847: }",
          "1848: #line 1849 \"Zend/zend_language_scanner.c\"",
          "1849: yy79:",
          "1850:   YYDEBUG(79, *YYCURSOR);",
          "1851:   yych = *++YYCURSOR;",
          "1852:   if (yych == '$') goto yy83;",
          "1853:   goto yy78;",
          "1854: yy80:",
          "1855:   YYDEBUG(80, *YYCURSOR);",
          "1856:   ++YYCURSOR;",
          "1857:   YYDEBUG(81, *YYCURSOR);",
          "1858:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1859: #line 2193 \"Zend/zend_language_scanner.l\"",
          "1860:   {",
          "1861:  BEGIN(ST_IN_SCRIPTING);",
          "1862:  return '\"';",
          "1863: }",
          "1864: #line 1865 \"Zend/zend_language_scanner.c\"",
          "1865: yy82:",
          "1866:   YYDEBUG(82, *YYCURSOR);",
          "1867:   yych = *++YYCURSOR;",
          "1868:   goto yy78;",
          "1869: yy83:",
          "1870:   YYDEBUG(83, *YYCURSOR);",
          "1871:   ++YYCURSOR;",
          "1872:   YYDEBUG(84, *YYCURSOR);",
          "1873:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1874: #line 2185 \"Zend/zend_language_scanner.l\"",
          "1875:   {",
          "1876:  zendlval->value.lval = (long) '{';",
          "1877:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1878:  yyless(1);",
          "1879:  return T_CURLY_OPEN;",
          "1880: }",
          "1881: #line 1882 \"Zend/zend_language_scanner.c\"",
          "1882: yy85:",
          "1883:   YYDEBUG(85, *YYCURSOR);",
          "1884:   yyaccept = 0;",
          "1885:   YYMARKER = ++YYCURSOR;",
          "1886:   YYFILL(3);",
          "1887:   yych = *YYCURSOR;",
          "1888:   YYDEBUG(86, *YYCURSOR);",
          "1889:   if (yybm[0+yych] & 128) {",
          "1890:    goto yy85;",
          "1891:   }",
          "1892:   if (yych == '-') goto yy90;",
          "1893:   if (yych == '[') goto yy92;",
          "1894: yy87:",
          "1895:   YYDEBUG(87, *YYCURSOR);",
          "1896:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1897: #line 1885 \"Zend/zend_language_scanner.l\"",
          "1898:   {",
          "1899:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1900:  zendlval->type = IS_STRING;",
          "1901:  return T_VARIABLE;",
          "1902: }",
          "1903: #line 1904 \"Zend/zend_language_scanner.c\"",
          "1904: yy88:",
          "1905:   YYDEBUG(88, *YYCURSOR);",
          "1906:   ++YYCURSOR;",
          "1907:   YYDEBUG(89, *YYCURSOR);",
          "1908:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1909: #line 1461 \"Zend/zend_language_scanner.l\"",
          "1910:   {",
          "1911:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "1912:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "1913: }",
          "1914: #line 1915 \"Zend/zend_language_scanner.c\"",
          "1915: yy90:",
          "1916:   YYDEBUG(90, *YYCURSOR);",
          "1917:   yych = *++YYCURSOR;",
          "1918:   if (yych == '>') goto yy94;",
          "1919: yy91:",
          "1920:   YYDEBUG(91, *YYCURSOR);",
          "1921:   YYCURSOR = YYMARKER;",
          "1922:   goto yy87;",
          "1923: yy92:",
          "1924:   YYDEBUG(92, *YYCURSOR);",
          "1925:   ++YYCURSOR;",
          "1926:   YYDEBUG(93, *YYCURSOR);",
          "1927:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1928: #line 1877 \"Zend/zend_language_scanner.l\"",
          "1929:   {",
          "1930:  yyless(yyleng - 1);",
          "1931:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "1932:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1933:  zendlval->type = IS_STRING;",
          "1934:  return T_VARIABLE;",
          "1935: }",
          "1936: #line 1937 \"Zend/zend_language_scanner.c\"",
          "1937: yy94:",
          "1938:   YYDEBUG(94, *YYCURSOR);",
          "1939:   yych = *++YYCURSOR;",
          "1940:   if (yych <= '_') {",
          "1941:    if (yych <= '@') goto yy91;",
          "1942:    if (yych <= 'Z') goto yy95;",
          "1943:    if (yych <= '^') goto yy91;",
          "1944:   } else {",
          "1945:    if (yych <= '`') goto yy91;",
          "1946:    if (yych <= 'z') goto yy95;",
          "1947:    if (yych <= '~') goto yy91;",
          "1948:   }",
          "1949: yy95:",
          "1950:   YYDEBUG(95, *YYCURSOR);",
          "1951:   ++YYCURSOR;",
          "1952:   YYDEBUG(96, *YYCURSOR);",
          "1953:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1954: #line 1867 \"Zend/zend_language_scanner.l\"",
          "1955:   {",
          "1956:  yyless(yyleng - 3);",
          "1957:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "1958:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "1959:  zendlval->type = IS_STRING;",
          "1960:  return T_VARIABLE;",
          "1961: }",
          "1962: #line 1963 \"Zend/zend_language_scanner.c\"",
          "1963:  }",
          "1965: yyc_ST_END_HEREDOC:",
          "1966:  YYDEBUG(97, *YYCURSOR);",
          "1967:  YYFILL(1);",
          "1968:  yych = *YYCURSOR;",
          "1969:  YYDEBUG(99, *YYCURSOR);",
          "1970:  ++YYCURSOR;",
          "1971:  YYDEBUG(100, *YYCURSOR);",
          "1972:  yyleng = YYCURSOR - SCNG(yy_text);",
          "1973: #line 2171 \"Zend/zend_language_scanner.l\"",
          "1974:  {",
          "1975:  zend_heredoc_label *heredoc_label = zend_ptr_stack_pop(&SCNG(heredoc_label_stack));",
          "1977:  YYCURSOR += heredoc_label->length - 1;",
          "1978:  yyleng = heredoc_label->length;",
          "1980:  heredoc_label_dtor(heredoc_label);",
          "1981:  efree(heredoc_label);",
          "1983:  BEGIN(ST_IN_SCRIPTING);",
          "1984:  return T_END_HEREDOC;",
          "1985: }",
          "1986: #line 1987 \"Zend/zend_language_scanner.c\"",
          "1988: yyc_ST_HEREDOC:",
          "1989:  {",
          "1990:   static const unsigned char yybm[] = {",
          "1991:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1992:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1993:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1994:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1995:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1996:      0,   0,   0,   0,   0,   0,   0,   0,",
          "1997:    128, 128, 128, 128, 128, 128, 128, 128,",
          "1998:    128, 128,   0,   0,   0,   0,   0,   0,",
          "1999:      0, 128, 128, 128, 128, 128, 128, 128,",
          "2000:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2001:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2002:    128, 128, 128,   0,   0,   0,   0, 128,",
          "2003:      0, 128, 128, 128, 128, 128, 128, 128,",
          "2004:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2005:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2006:    128, 128, 128,   0,   0,   0,   0, 128,",
          "2007:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2008:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2009:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2010:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2011:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2012:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2013:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2014:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2015:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2016:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2017:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2018:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2019:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2020:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2021:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2022:    128, 128, 128, 128, 128, 128, 128, 128,",
          "2023:   };",
          "2024:   YYDEBUG(101, *YYCURSOR);",
          "2025:   YYFILL(2);",
          "2026:   yych = *YYCURSOR;",
          "2027:   if (yych == '$') goto yy103;",
          "2028:   if (yych == '{') goto yy105;",
          "2029:   goto yy106;",
          "2030: yy103:",
          "2031:   YYDEBUG(103, *YYCURSOR);",
          "2032:   ++YYCURSOR;",
          "2033:   if ((yych = *YYCURSOR) <= '_') {",
          "2034:    if (yych <= '@') goto yy104;",
          "2035:    if (yych <= 'Z') goto yy109;",
          "2036:    if (yych >= '_') goto yy109;",
          "2037:   } else {",
          "2038:    if (yych <= 'z') {",
          "2039:     if (yych >= 'a') goto yy109;",
          "2040:    } else {",
          "2041:     if (yych <= '{') goto yy112;",
          "2042:     if (yych >= 0x7F) goto yy109;",
          "2043:    }",
          "2044:   }",
          "2045: yy104:",
          "2046:   YYDEBUG(104, *YYCURSOR);",
          "2047:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2048: #line 2296 \"Zend/zend_language_scanner.l\"",
          "2049:   {",
          "2050:  int newline = 0;",
          "2052:  zend_heredoc_label *heredoc_label = zend_ptr_stack_top(&SCNG(heredoc_label_stack));",
          "2054:  if (YYCURSOR > YYLIMIT) {",
          "2055:   return 0;",
          "2056:  }",
          "2058:  YYCURSOR--;",
          "2060:  while (YYCURSOR < YYLIMIT) {",
          "2061:   switch (*YYCURSOR++) {",
          "2062:    case '\\r':",
          "2063:     if (*YYCURSOR == '\\n') {",
          "2064:      YYCURSOR++;",
          "2065:     }",
          "2067:    case '\\n':",
          "2069:     if (IS_LABEL_START(*YYCURSOR) && heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, heredoc_label->label, heredoc_label->length)) {",
          "2070:      YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "2072:      if (*end == ';') {",
          "2073:       end++;",
          "2074:      }",
          "2076:      if (*end == '\\n' || *end == '\\r') {",
          "2079:       if (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {",
          "2081:       } else {",
          "2082:        newline = 1;",
          "2083:       }",
          "2086:       BEGIN(ST_END_HEREDOC);",
          "2088:       goto heredoc_scan_done;",
          "2089:      }",
          "2090:     }",
          "2091:     continue;",
          "2092:    case '$':",
          "2093:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "2094:      break;",
          "2095:     }",
          "2096:     continue;",
          "2097:    case '{':",
          "2098:     if (*YYCURSOR == '$') {",
          "2099:      break;",
          "2100:     }",
          "2101:     continue;",
          "2102:    case '\\\\':",
          "2103:     if (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {",
          "2104:      YYCURSOR++;",
          "2105:     }",
          "2107:    default:",
          "2108:     continue;",
          "2109:   }",
          "2111:   YYCURSOR--;",
          "2112:   break;",
          "2113:  }",
          "2115: heredoc_scan_done:",
          "2116:  yyleng = YYCURSOR - SCNG(yy_text);",
          "2118:  zend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);",
          "2119:  return T_ENCAPSED_AND_WHITESPACE;",
          "2120: }",
          "2121: #line 2122 \"Zend/zend_language_scanner.c\"",
          "2122: yy105:",
          "2123:   YYDEBUG(105, *YYCURSOR);",
          "2124:   yych = *++YYCURSOR;",
          "2125:   if (yych == '$') goto yy107;",
          "2126:   goto yy104;",
          "2127: yy106:",
          "2128:   YYDEBUG(106, *YYCURSOR);",
          "2129:   yych = *++YYCURSOR;",
          "2130:   goto yy104;",
          "2131: yy107:",
          "2132:   YYDEBUG(107, *YYCURSOR);",
          "2133:   ++YYCURSOR;",
          "2134:   YYDEBUG(108, *YYCURSOR);",
          "2135:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2136: #line 2185 \"Zend/zend_language_scanner.l\"",
          "2137:   {",
          "2138:  zendlval->value.lval = (long) '{';",
          "2139:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2140:  yyless(1);",
          "2141:  return T_CURLY_OPEN;",
          "2142: }",
          "2143: #line 2144 \"Zend/zend_language_scanner.c\"",
          "2144: yy109:",
          "2145:   YYDEBUG(109, *YYCURSOR);",
          "2146:   yyaccept = 0;",
          "2147:   YYMARKER = ++YYCURSOR;",
          "2148:   YYFILL(3);",
          "2149:   yych = *YYCURSOR;",
          "2150:   YYDEBUG(110, *YYCURSOR);",
          "2151:   if (yybm[0+yych] & 128) {",
          "2152:    goto yy109;",
          "2153:   }",
          "2154:   if (yych == '-') goto yy114;",
          "2155:   if (yych == '[') goto yy116;",
          "2156: yy111:",
          "2157:   YYDEBUG(111, *YYCURSOR);",
          "2158:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2159: #line 1885 \"Zend/zend_language_scanner.l\"",
          "2160:   {",
          "2161:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2162:  zendlval->type = IS_STRING;",
          "2163:  return T_VARIABLE;",
          "2164: }",
          "2165: #line 2166 \"Zend/zend_language_scanner.c\"",
          "2166: yy112:",
          "2167:   YYDEBUG(112, *YYCURSOR);",
          "2168:   ++YYCURSOR;",
          "2169:   YYDEBUG(113, *YYCURSOR);",
          "2170:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2171: #line 1461 \"Zend/zend_language_scanner.l\"",
          "2172:   {",
          "2173:  yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);",
          "2174:  return T_DOLLAR_OPEN_CURLY_BRACES;",
          "2175: }",
          "2176: #line 2177 \"Zend/zend_language_scanner.c\"",
          "2177: yy114:",
          "2178:   YYDEBUG(114, *YYCURSOR);",
          "2179:   yych = *++YYCURSOR;",
          "2180:   if (yych == '>') goto yy118;",
          "2181: yy115:",
          "2182:   YYDEBUG(115, *YYCURSOR);",
          "2183:   YYCURSOR = YYMARKER;",
          "2184:   goto yy111;",
          "2185: yy116:",
          "2186:   YYDEBUG(116, *YYCURSOR);",
          "2187:   ++YYCURSOR;",
          "2188:   YYDEBUG(117, *YYCURSOR);",
          "2189:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2190: #line 1877 \"Zend/zend_language_scanner.l\"",
          "2191:   {",
          "2192:  yyless(yyleng - 1);",
          "2193:  yy_push_state(ST_VAR_OFFSET TSRMLS_CC);",
          "2194:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2195:  zendlval->type = IS_STRING;",
          "2196:  return T_VARIABLE;",
          "2197: }",
          "2198: #line 2199 \"Zend/zend_language_scanner.c\"",
          "2199: yy118:",
          "2200:   YYDEBUG(118, *YYCURSOR);",
          "2201:   yych = *++YYCURSOR;",
          "2202:   if (yych <= '_') {",
          "2203:    if (yych <= '@') goto yy115;",
          "2204:    if (yych <= 'Z') goto yy119;",
          "2205:    if (yych <= '^') goto yy115;",
          "2206:   } else {",
          "2207:    if (yych <= '`') goto yy115;",
          "2208:    if (yych <= 'z') goto yy119;",
          "2209:    if (yych <= '~') goto yy115;",
          "2210:   }",
          "2211: yy119:",
          "2212:   YYDEBUG(119, *YYCURSOR);",
          "2213:   ++YYCURSOR;",
          "2214:   YYDEBUG(120, *YYCURSOR);",
          "2215:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2216: #line 1867 \"Zend/zend_language_scanner.l\"",
          "2217:   {",
          "2218:  yyless(yyleng - 3);",
          "2219:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "2220:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "2221:  zendlval->type = IS_STRING;",
          "2222:  return T_VARIABLE;",
          "2223: }",
          "2224: #line 2225 \"Zend/zend_language_scanner.c\"",
          "2225:  }",
          "2227: yyc_ST_IN_SCRIPTING:",
          "2228:  {",
          "2229:   static const unsigned char yybm[] = {",
          "2230:      0,   0,   0,   0,   0,   0,   0,   0,",
          "2231:      0, 192,  64,   0,   0,  64,   0,   0,",
          "2232:      0,   0,   0,   0,   0,   0,   0,   0,",
          "2233:      0,   0,   0,   0,   0,   0,   0,   0,",
          "2234:    192,   0,   0,   0,   0,   0,   0,   0,",
          "2235:      0,   0,   0,   0,   0,   0,   0,   0,",
          "2236:     60,  60,  44,  44,  44,  44,  44,  44,",
          "2237:     44,  44,   0,   0,   0,   0,   0,   0,",
          "2238:      0,  36,  36,  36,  36,  36,  36,   4,",
          "2239:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2240:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2241:      4,   4,   4,   0,   0,   0,   0,   4,",
          "2242:      0,  36,  36,  36,  36,  36,  36,   4,",
          "2243:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2244:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2245:      4,   4,   4,   0,   0,   0,   0,   4,",
          "2246:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2247:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2248:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2249:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2250:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2251:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2252:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2253:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2254:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2255:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2256:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2257:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2258:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2259:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2260:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2261:      4,   4,   4,   4,   4,   4,   4,   4,",
          "2262:   };",
          "2263:   YYDEBUG(121, *YYCURSOR);",
          "2264:   YYFILL(16);",
          "2265:   yych = *YYCURSOR;",
          "2266:   YYDEBUG(-1, yych);",
          "2267:   switch (yych) {",
          "2268:   case 0x00:",
          "2269:   case 0x01:",
          "2270:   case 0x02:",
          "2271:   case 0x03:",
          "2272:   case 0x04:",
          "2273:   case 0x05:",
          "2274:   case 0x06:",
          "2275:   case 0x07:",
          "2276:   case 0x08:",
          "2277:   case '\\v':",
          "2278:   case '\\f':",
          "2279:   case 0x0E:",
          "2280:   case 0x0F:",
          "2281:   case 0x10:",
          "2282:   case 0x11:",
          "2283:   case 0x12:",
          "2284:   case 0x13:",
          "2285:   case 0x14:",
          "2286:   case 0x15:",
          "2287:   case 0x16:",
          "2288:   case 0x17:",
          "2289:   case 0x18:",
          "2290:   case 0x19:",
          "2291:   case 0x1A:",
          "2292:   case 0x1B:",
          "2293:   case 0x1C:",
          "2294:   case 0x1D:",
          "2295:   case 0x1E:",
          "2296:   case 0x1F: goto yy184;",
          "2297:   case '\\t':",
          "2298:   case '\\n':",
          "2299:   case '\\r':",
          "2300:   case ' ': goto yy140;",
          "2301:   case '!': goto yy153;",
          "2302:   case '\"': goto yy180;",
          "2303:   case '#': goto yy176;",
          "2304:   case '$': goto yy165;",
          "2305:   case '%': goto yy159;",
          "2306:   case '&': goto yy160;",
          "2307:   case '\\'': goto yy178;",
          "2308:   case '(': goto yy147;",
          "2309:   case ')':",
          "2310:   case ',':",
          "2311:   case ';':",
          "2312:   case '@':",
          "2313:   case '[':",
          "2314:   case ']':",
          "2315:   case '~': goto yy166;",
          "2316:   case '*': goto yy156;",
          "2317:   case '+': goto yy152;",
          "2318:   case '-': goto yy138;",
          "2319:   case '.': goto yy158;",
          "2320:   case '/': goto yy157;",
          "2321:   case '0': goto yy172;",
          "2322:   case '1':",
          "2323:   case '2':",
          "2324:   case '3':",
          "2325:   case '4':",
          "2326:   case '5':",
          "2327:   case '6':",
          "2328:   case '7':",
          "2329:   case '8':",
          "2330:   case '9': goto yy174;",
          "2331:   case ':': goto yy142;",
          "2332:   case '<': goto yy154;",
          "2333:   case '=': goto yy150;",
          "2334:   case '>': goto yy155;",
          "2335:   case '?': goto yy167;",
          "2336:   case 'A':",
          "2337:   case 'a': goto yy133;",
          "2338:   case 'B':",
          "2339:   case 'b': goto yy135;",
          "2340:   case 'C':",
          "2341:   case 'c': goto yy127;",
          "2342:   case 'D':",
          "2343:   case 'd': goto yy125;",
          "2344:   case 'E':",
          "2345:   case 'e': goto yy123;",
          "2346:   case 'F':",
          "2347:   case 'f': goto yy126;",
          "2348:   case 'G':",
          "2349:   case 'g': goto yy136;",
          "2350:   case 'I':",
          "2351:   case 'i': goto yy131;",
          "2352:   case 'L':",
          "2353:   case 'l': goto yy151;",
          "2354:   case 'N':",
          "2355:   case 'n': goto yy145;",
          "2356:   case 'O':",
          "2357:   case 'o': goto yy163;",
          "2358:   case 'P':",
          "2359:   case 'p': goto yy137;",
          "2360:   case 'R':",
          "2361:   case 'r': goto yy128;",
          "2362:   case 'S':",
          "2363:   case 's': goto yy134;",
          "2364:   case 'T':",
          "2365:   case 't': goto yy130;",
          "2366:   case 'U':",
          "2367:   case 'u': goto yy148;",
          "2368:   case 'V':",
          "2369:   case 'v': goto yy146;",
          "2370:   case 'W':",
          "2371:   case 'w': goto yy132;",
          "2372:   case 'X':",
          "2373:   case 'x': goto yy164;",
          "2374:   case 'Y':",
          "2375:   case 'y': goto yy129;",
          "2376:   case '\\\\': goto yy143;",
          "2377:   case '^': goto yy162;",
          "2378:   case '_': goto yy149;",
          "2379:   case '`': goto yy182;",
          "2380:   case '{': goto yy168;",
          "2381:   case '|': goto yy161;",
          "2382:   case '}': goto yy170;",
          "2383:   default: goto yy175;",
          "2384:   }",
          "2385: yy123:",
          "2386:   YYDEBUG(123, *YYCURSOR);",
          "2387:   ++YYCURSOR;",
          "2388:   YYDEBUG(-1, yych);",
          "2389:   switch ((yych = *YYCURSOR)) {",
          "2390:   case 'C':",
          "2391:   case 'c': goto yy735;",
          "2392:   case 'L':",
          "2393:   case 'l': goto yy736;",
          "2394:   case 'M':",
          "2395:   case 'm': goto yy737;",
          "2396:   case 'N':",
          "2397:   case 'n': goto yy738;",
          "2398:   case 'V':",
          "2399:   case 'v': goto yy739;",
          "2400:   case 'X':",
          "2401:   case 'x': goto yy740;",
          "2402:   default: goto yy187;",
          "2403:   }",
          "2404: yy124:",
          "2405:   YYDEBUG(124, *YYCURSOR);",
          "2406:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2407: #line 1908 \"Zend/zend_language_scanner.l\"",
          "2408:   {",
          "2409:  zend_copy_value(zendlval, yytext, yyleng);",
          "2410:  zendlval->type = IS_STRING;",
          "2411:  return T_STRING;",
          "2412: }",
          "2413: #line 2414 \"Zend/zend_language_scanner.c\"",
          "2414: yy125:",
          "2415:   YYDEBUG(125, *YYCURSOR);",
          "2416:   yych = *++YYCURSOR;",
          "2417:   if (yych <= 'O') {",
          "2418:    if (yych <= 'H') {",
          "2419:     if (yych == 'E') goto yy717;",
          "2420:     goto yy187;",
          "2421:    } else {",
          "2422:     if (yych <= 'I') goto yy718;",
          "2423:     if (yych <= 'N') goto yy187;",
          "2424:     goto yy719;",
          "2425:    }",
          "2426:   } else {",
          "2427:    if (yych <= 'h') {",
          "2428:     if (yych == 'e') goto yy717;",
          "2429:     goto yy187;",
          "2430:    } else {",
          "2431:     if (yych <= 'i') goto yy718;",
          "2432:     if (yych == 'o') goto yy719;",
          "2433:     goto yy187;",
          "2434:    }",
          "2435:   }",
          "2436: yy126:",
          "2437:   YYDEBUG(126, *YYCURSOR);",
          "2438:   yych = *++YYCURSOR;",
          "2439:   if (yych <= 'U') {",
          "2440:    if (yych <= 'N') {",
          "2441:     if (yych == 'I') goto yy693;",
          "2442:     goto yy187;",
          "2443:    } else {",
          "2444:     if (yych <= 'O') goto yy694;",
          "2445:     if (yych <= 'T') goto yy187;",
          "2446:     goto yy695;",
          "2447:    }",
          "2448:   } else {",
          "2449:    if (yych <= 'n') {",
          "2450:     if (yych == 'i') goto yy693;",
          "2451:     goto yy187;",
          "2452:    } else {",
          "2453:     if (yych <= 'o') goto yy694;",
          "2454:     if (yych == 'u') goto yy695;",
          "2455:     goto yy187;",
          "2456:    }",
          "2457:   }",
          "2458: yy127:",
          "2459:   YYDEBUG(127, *YYCURSOR);",
          "2460:   yych = *++YYCURSOR;",
          "2461:   if (yych <= 'O') {",
          "2462:    if (yych <= 'K') {",
          "2463:     if (yych == 'A') goto yy658;",
          "2464:     goto yy187;",
          "2465:    } else {",
          "2466:     if (yych <= 'L') goto yy659;",
          "2467:     if (yych <= 'N') goto yy187;",
          "2468:     goto yy660;",
          "2469:    }",
          "2470:   } else {",
          "2471:    if (yych <= 'k') {",
          "2472:     if (yych == 'a') goto yy658;",
          "2473:     goto yy187;",
          "2474:    } else {",
          "2475:     if (yych <= 'l') goto yy659;",
          "2476:     if (yych == 'o') goto yy660;",
          "2477:     goto yy187;",
          "2478:    }",
          "2479:   }",
          "2480: yy128:",
          "2481:   YYDEBUG(128, *YYCURSOR);",
          "2482:   yych = *++YYCURSOR;",
          "2483:   if (yych == 'E') goto yy640;",
          "2484:   if (yych == 'e') goto yy640;",
          "2485:   goto yy187;",
          "2486: yy129:",
          "2487:   YYDEBUG(129, *YYCURSOR);",
          "2488:   yych = *++YYCURSOR;",
          "2489:   if (yych == 'I') goto yy635;",
          "2490:   if (yych == 'i') goto yy635;",
          "2491:   goto yy187;",
          "2492: yy130:",
          "2493:   YYDEBUG(130, *YYCURSOR);",
          "2494:   yych = *++YYCURSOR;",
          "2495:   if (yych <= 'R') {",
          "2496:    if (yych == 'H') goto yy623;",
          "2497:    if (yych <= 'Q') goto yy187;",
          "2498:    goto yy624;",
          "2499:   } else {",
          "2500:    if (yych <= 'h') {",
          "2501:     if (yych <= 'g') goto yy187;",
          "2502:     goto yy623;",
          "2503:    } else {",
          "2504:     if (yych == 'r') goto yy624;",
          "2505:     goto yy187;",
          "2506:    }",
          "2507:   }",
          "2508: yy131:",
          "2509:   YYDEBUG(131, *YYCURSOR);",
          "2510:   yych = *++YYCURSOR;",
          "2511:   if (yych <= 'S') {",
          "2512:    if (yych <= 'L') {",
          "2513:     if (yych == 'F') goto yy570;",
          "2514:     goto yy187;",
          "2515:    } else {",
          "2516:     if (yych <= 'M') goto yy572;",
          "2517:     if (yych <= 'N') goto yy573;",
          "2518:     if (yych <= 'R') goto yy187;",
          "2519:     goto yy574;",
          "2520:    }",
          "2521:   } else {",
          "2522:    if (yych <= 'm') {",
          "2523:     if (yych == 'f') goto yy570;",
          "2524:     if (yych <= 'l') goto yy187;",
          "2525:     goto yy572;",
          "2526:    } else {",
          "2527:     if (yych <= 'n') goto yy573;",
          "2528:     if (yych == 's') goto yy574;",
          "2529:     goto yy187;",
          "2530:    }",
          "2531:   }",
          "2532: yy132:",
          "2533:   YYDEBUG(132, *YYCURSOR);",
          "2534:   yych = *++YYCURSOR;",
          "2535:   if (yych == 'H') goto yy565;",
          "2536:   if (yych == 'h') goto yy565;",
          "2537:   goto yy187;",
          "2538: yy133:",
          "2539:   YYDEBUG(133, *YYCURSOR);",
          "2540:   yych = *++YYCURSOR;",
          "2541:   if (yych <= 'S') {",
          "2542:    if (yych <= 'M') {",
          "2543:     if (yych == 'B') goto yy547;",
          "2544:     goto yy187;",
          "2545:    } else {",
          "2546:     if (yych <= 'N') goto yy548;",
          "2547:     if (yych <= 'Q') goto yy187;",
          "2548:     if (yych <= 'R') goto yy549;",
          "2549:     goto yy550;",
          "2550:    }",
          "2551:   } else {",
          "2552:    if (yych <= 'n') {",
          "2553:     if (yych == 'b') goto yy547;",
          "2554:     if (yych <= 'm') goto yy187;",
          "2555:     goto yy548;",
          "2556:    } else {",
          "2557:     if (yych <= 'q') goto yy187;",
          "2558:     if (yych <= 'r') goto yy549;",
          "2559:     if (yych <= 's') goto yy550;",
          "2560:     goto yy187;",
          "2561:    }",
          "2562:   }",
          "2563: yy134:",
          "2564:   YYDEBUG(134, *YYCURSOR);",
          "2565:   yych = *++YYCURSOR;",
          "2566:   if (yych <= 'W') {",
          "2567:    if (yych == 'T') goto yy535;",
          "2568:    if (yych <= 'V') goto yy187;",
          "2569:    goto yy536;",
          "2570:   } else {",
          "2571:    if (yych <= 't') {",
          "2572:     if (yych <= 's') goto yy187;",
          "2573:     goto yy535;",
          "2574:    } else {",
          "2575:     if (yych == 'w') goto yy536;",
          "2576:     goto yy187;",
          "2577:    }",
          "2578:   }",
          "2579: yy135:",
          "2580:   YYDEBUG(135, *YYCURSOR);",
          "2581:   yyaccept = 0;",
          "2582:   yych = *(YYMARKER = ++YYCURSOR);",
          "2583:   if (yych <= ';') {",
          "2584:    if (yych <= '\"') {",
          "2585:     if (yych <= '!') goto yy187;",
          "2586:     goto yy527;",
          "2587:    } else {",
          "2588:     if (yych == '\\'') goto yy528;",
          "2589:     goto yy187;",
          "2590:    }",
          "2591:   } else {",
          "2592:    if (yych <= 'R') {",
          "2593:     if (yych <= '<') goto yy526;",
          "2594:     if (yych <= 'Q') goto yy187;",
          "2595:     goto yy529;",
          "2596:    } else {",
          "2597:     if (yych == 'r') goto yy529;",
          "2598:     goto yy187;",
          "2599:    }",
          "2600:   }",
          "2601: yy136:",
          "2602:   YYDEBUG(136, *YYCURSOR);",
          "2603:   yych = *++YYCURSOR;",
          "2604:   if (yych <= 'O') {",
          "2605:    if (yych == 'L') goto yy516;",
          "2606:    if (yych <= 'N') goto yy187;",
          "2607:    goto yy517;",
          "2608:   } else {",
          "2609:    if (yych <= 'l') {",
          "2610:     if (yych <= 'k') goto yy187;",
          "2611:     goto yy516;",
          "2612:    } else {",
          "2613:     if (yych == 'o') goto yy517;",
          "2614:     goto yy187;",
          "2615:    }",
          "2616:   }",
          "2617: yy137:",
          "2618:   YYDEBUG(137, *YYCURSOR);",
          "2619:   yych = *++YYCURSOR;",
          "2620:   if (yych <= 'U') {",
          "2621:    if (yych == 'R') goto yy492;",
          "2622:    if (yych <= 'T') goto yy187;",
          "2623:    goto yy493;",
          "2624:   } else {",
          "2625:    if (yych <= 'r') {",
          "2626:     if (yych <= 'q') goto yy187;",
          "2627:     goto yy492;",
          "2628:    } else {",
          "2629:     if (yych == 'u') goto yy493;",
          "2630:     goto yy187;",
          "2631:    }",
          "2632:   }",
          "2633: yy138:",
          "2634:   YYDEBUG(138, *YYCURSOR);",
          "2635:   ++YYCURSOR;",
          "2636:   if ((yych = *YYCURSOR) <= '<') {",
          "2637:    if (yych == '-') goto yy488;",
          "2638:   } else {",
          "2639:    if (yych <= '=') goto yy486;",
          "2640:    if (yych <= '>') goto yy490;",
          "2641:   }",
          "2642: yy139:",
          "2643:   YYDEBUG(139, *YYCURSOR);",
          "2644:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2645: #line 1450 \"Zend/zend_language_scanner.l\"",
          "2646:   {",
          "2647:  return yytext[0];",
          "2648: }",
          "2649: #line 2650 \"Zend/zend_language_scanner.c\"",
          "2650: yy140:",
          "2651:   YYDEBUG(140, *YYCURSOR);",
          "2652:   ++YYCURSOR;",
          "2653:   yych = *YYCURSOR;",
          "2654:   goto yy485;",
          "2655: yy141:",
          "2656:   YYDEBUG(141, *YYCURSOR);",
          "2657:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2658: #line 1181 \"Zend/zend_language_scanner.l\"",
          "2659:   {",
          "2661:  zendlval->value.str.len = yyleng;",
          "2662:  zendlval->type = IS_STRING;",
          "2663:  HANDLE_NEWLINES(yytext, yyleng);",
          "2664:  return T_WHITESPACE;",
          "2665: }",
          "2666: #line 2667 \"Zend/zend_language_scanner.c\"",
          "2667: yy142:",
          "2668:   YYDEBUG(142, *YYCURSOR);",
          "2669:   yych = *++YYCURSOR;",
          "2670:   if (yych == ':') goto yy482;",
          "2671:   goto yy139;",
          "2672: yy143:",
          "2673:   YYDEBUG(143, *YYCURSOR);",
          "2674:   ++YYCURSOR;",
          "2675:   YYDEBUG(144, *YYCURSOR);",
          "2676:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2677: #line 1210 \"Zend/zend_language_scanner.l\"",
          "2678:   {",
          "2679:  return T_NS_SEPARATOR;",
          "2680: }",
          "2681: #line 2682 \"Zend/zend_language_scanner.c\"",
          "2682: yy145:",
          "2683:   YYDEBUG(145, *YYCURSOR);",
          "2684:   yych = *++YYCURSOR;",
          "2685:   if (yych <= 'E') {",
          "2686:    if (yych == 'A') goto yy470;",
          "2687:    if (yych <= 'D') goto yy187;",
          "2688:    goto yy471;",
          "2689:   } else {",
          "2690:    if (yych <= 'a') {",
          "2691:     if (yych <= '`') goto yy187;",
          "2692:     goto yy470;",
          "2693:    } else {",
          "2694:     if (yych == 'e') goto yy471;",
          "2695:     goto yy187;",
          "2696:    }",
          "2697:   }",
          "2698: yy146:",
          "2699:   YYDEBUG(146, *YYCURSOR);",
          "2700:   yych = *++YYCURSOR;",
          "2701:   if (yych == 'A') goto yy467;",
          "2702:   if (yych == 'a') goto yy467;",
          "2703:   goto yy187;",
          "2704: yy147:",
          "2705:   YYDEBUG(147, *YYCURSOR);",
          "2706:   yyaccept = 1;",
          "2707:   yych = *(YYMARKER = ++YYCURSOR);",
          "2708:   if (yych <= 'S') {",
          "2709:    if (yych <= 'D') {",
          "2710:     if (yych <= ' ') {",
          "2711:      if (yych == '\\t') goto yy392;",
          "2712:      if (yych <= 0x1F) goto yy139;",
          "2713:      goto yy392;",
          "2714:     } else {",
          "2715:      if (yych <= '@') goto yy139;",
          "2716:      if (yych == 'C') goto yy139;",
          "2717:      goto yy392;",
          "2718:     }",
          "2719:    } else {",
          "2720:     if (yych <= 'I') {",
          "2721:      if (yych == 'F') goto yy392;",
          "2722:      if (yych <= 'H') goto yy139;",
          "2723:      goto yy392;",
          "2724:     } else {",
          "2725:      if (yych == 'O') goto yy392;",
          "2726:      if (yych <= 'Q') goto yy139;",
          "2727:      goto yy392;",
          "2728:     }",
          "2729:    }",
          "2730:   } else {",
          "2731:    if (yych <= 'f') {",
          "2732:     if (yych <= 'b') {",
          "2733:      if (yych == 'U') goto yy392;",
          "2734:      if (yych <= '`') goto yy139;",
          "2735:      goto yy392;",
          "2736:     } else {",
          "2737:      if (yych == 'd') goto yy392;",
          "2738:      if (yych <= 'e') goto yy139;",
          "2739:      goto yy392;",
          "2740:     }",
          "2741:    } else {",
          "2742:     if (yych <= 'o') {",
          "2743:      if (yych == 'i') goto yy392;",
          "2744:      if (yych <= 'n') goto yy139;",
          "2745:      goto yy392;",
          "2746:     } else {",
          "2747:      if (yych <= 's') {",
          "2748:       if (yych <= 'q') goto yy139;",
          "2749:       goto yy392;",
          "2750:      } else {",
          "2751:       if (yych == 'u') goto yy392;",
          "2752:       goto yy139;",
          "2753:      }",
          "2754:     }",
          "2755:    }",
          "2756:   }",
          "2757: yy148:",
          "2758:   YYDEBUG(148, *YYCURSOR);",
          "2759:   yych = *++YYCURSOR;",
          "2760:   if (yych <= 'S') {",
          "2761:    if (yych == 'N') goto yy383;",
          "2762:    if (yych <= 'R') goto yy187;",
          "2763:    goto yy384;",
          "2764:   } else {",
          "2765:    if (yych <= 'n') {",
          "2766:     if (yych <= 'm') goto yy187;",
          "2767:     goto yy383;",
          "2768:    } else {",
          "2769:     if (yych == 's') goto yy384;",
          "2770:     goto yy187;",
          "2771:    }",
          "2772:   }",
          "2773: yy149:",
          "2774:   YYDEBUG(149, *YYCURSOR);",
          "2775:   yych = *++YYCURSOR;",
          "2776:   if (yych == '_') goto yy301;",
          "2777:   goto yy187;",
          "2778: yy150:",
          "2779:   YYDEBUG(150, *YYCURSOR);",
          "2780:   yych = *++YYCURSOR;",
          "2781:   if (yych <= '<') goto yy139;",
          "2782:   if (yych <= '=') goto yy295;",
          "2783:   if (yych <= '>') goto yy297;",
          "2784:   goto yy139;",
          "2785: yy151:",
          "2786:   YYDEBUG(151, *YYCURSOR);",
          "2787:   yych = *++YYCURSOR;",
          "2788:   if (yych == 'I') goto yy291;",
          "2789:   if (yych == 'i') goto yy291;",
          "2790:   goto yy187;",
          "2791: yy152:",
          "2792:   YYDEBUG(152, *YYCURSOR);",
          "2793:   yych = *++YYCURSOR;",
          "2794:   if (yych == '+') goto yy289;",
          "2795:   if (yych == '=') goto yy287;",
          "2796:   goto yy139;",
          "2797: yy153:",
          "2798:   YYDEBUG(153, *YYCURSOR);",
          "2799:   yych = *++YYCURSOR;",
          "2800:   if (yych == '=') goto yy284;",
          "2801:   goto yy139;",
          "2802: yy154:",
          "2803:   YYDEBUG(154, *YYCURSOR);",
          "2804:   yyaccept = 1;",
          "2805:   yych = *(YYMARKER = ++YYCURSOR);",
          "2806:   if (yych <= ';') {",
          "2807:    if (yych == '/') goto yy256;",
          "2808:    goto yy139;",
          "2809:   } else {",
          "2810:    if (yych <= '<') goto yy254;",
          "2811:    if (yych <= '=') goto yy257;",
          "2812:    if (yych <= '>') goto yy259;",
          "2813:    goto yy139;",
          "2814:   }",
          "2815: yy155:",
          "2816:   YYDEBUG(155, *YYCURSOR);",
          "2817:   yych = *++YYCURSOR;",
          "2818:   if (yych <= '<') goto yy139;",
          "2819:   if (yych <= '=') goto yy250;",
          "2820:   if (yych <= '>') goto yy248;",
          "2821:   goto yy139;",
          "2822: yy156:",
          "2823:   YYDEBUG(156, *YYCURSOR);",
          "2824:   yych = *++YYCURSOR;",
          "2825:   if (yych == '=') goto yy246;",
          "2826:   goto yy139;",
          "2827: yy157:",
          "2828:   YYDEBUG(157, *YYCURSOR);",
          "2829:   yych = *++YYCURSOR;",
          "2830:   if (yych <= '.') {",
          "2831:    if (yych == '*') goto yy238;",
          "2832:    goto yy139;",
          "2833:   } else {",
          "2834:    if (yych <= '/') goto yy240;",
          "2835:    if (yych == '=') goto yy241;",
          "2836:    goto yy139;",
          "2837:   }",
          "2838: yy158:",
          "2839:   YYDEBUG(158, *YYCURSOR);",
          "2840:   yych = *++YYCURSOR;",
          "2841:   if (yych <= '/') goto yy139;",
          "2842:   if (yych <= '9') goto yy234;",
          "2843:   if (yych == '=') goto yy236;",
          "2844:   goto yy139;",
          "2845: yy159:",
          "2846:   YYDEBUG(159, *YYCURSOR);",
          "2847:   yych = *++YYCURSOR;",
          "2848:   if (yych <= '<') goto yy139;",
          "2849:   if (yych <= '=') goto yy230;",
          "2850:   if (yych <= '>') goto yy228;",
          "2851:   goto yy139;",
          "2852: yy160:",
          "2853:   YYDEBUG(160, *YYCURSOR);",
          "2854:   yych = *++YYCURSOR;",
          "2855:   if (yych == '&') goto yy224;",
          "2856:   if (yych == '=') goto yy226;",
          "2857:   goto yy139;",
          "2858: yy161:",
          "2859:   YYDEBUG(161, *YYCURSOR);",
          "2860:   yych = *++YYCURSOR;",
          "2861:   if (yych == '=') goto yy222;",
          "2862:   if (yych == '|') goto yy220;",
          "2863:   goto yy139;",
          "2864: yy162:",
          "2865:   YYDEBUG(162, *YYCURSOR);",
          "2866:   yych = *++YYCURSOR;",
          "2867:   if (yych == '=') goto yy218;",
          "2868:   goto yy139;",
          "2869: yy163:",
          "2870:   YYDEBUG(163, *YYCURSOR);",
          "2871:   yych = *++YYCURSOR;",
          "2872:   if (yych == 'R') goto yy216;",
          "2873:   if (yych == 'r') goto yy216;",
          "2874:   goto yy187;",
          "2875: yy164:",
          "2876:   YYDEBUG(164, *YYCURSOR);",
          "2877:   yych = *++YYCURSOR;",
          "2878:   if (yych == 'O') goto yy213;",
          "2879:   if (yych == 'o') goto yy213;",
          "2880:   goto yy187;",
          "2881: yy165:",
          "2882:   YYDEBUG(165, *YYCURSOR);",
          "2883:   yych = *++YYCURSOR;",
          "2884:   if (yych <= '_') {",
          "2885:    if (yych <= '@') goto yy139;",
          "2886:    if (yych <= 'Z') goto yy210;",
          "2887:    if (yych <= '^') goto yy139;",
          "2888:    goto yy210;",
          "2889:   } else {",
          "2890:    if (yych <= '`') goto yy139;",
          "2891:    if (yych <= 'z') goto yy210;",
          "2892:    if (yych <= '~') goto yy139;",
          "2893:    goto yy210;",
          "2894:   }",
          "2895: yy166:",
          "2896:   YYDEBUG(166, *YYCURSOR);",
          "2897:   yych = *++YYCURSOR;",
          "2898:   goto yy139;",
          "2899: yy167:",
          "2900:   YYDEBUG(167, *YYCURSOR);",
          "2901:   yych = *++YYCURSOR;",
          "2902:   if (yych == '>') goto yy206;",
          "2903:   goto yy139;",
          "2904: yy168:",
          "2905:   YYDEBUG(168, *YYCURSOR);",
          "2906:   ++YYCURSOR;",
          "2907:   YYDEBUG(169, *YYCURSOR);",
          "2908:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2909: #line 1455 \"Zend/zend_language_scanner.l\"",
          "2910:   {",
          "2911:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2912:  return '{';",
          "2913: }",
          "2914: #line 2915 \"Zend/zend_language_scanner.c\"",
          "2915: yy170:",
          "2916:   YYDEBUG(170, *YYCURSOR);",
          "2917:   ++YYCURSOR;",
          "2918:   YYDEBUG(171, *YYCURSOR);",
          "2919:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2920: #line 1467 \"Zend/zend_language_scanner.l\"",
          "2921:   {",
          "2922:  RESET_DOC_COMMENT();",
          "2923:  if (!zend_stack_is_empty(&SCNG(state_stack))) {",
          "2924:   yy_pop_state(TSRMLS_C);",
          "2925:  }",
          "2926:  return '}';",
          "2927: }",
          "2928: #line 2929 \"Zend/zend_language_scanner.c\"",
          "2929: yy172:",
          "2930:   YYDEBUG(172, *YYCURSOR);",
          "2931:   yyaccept = 2;",
          "2932:   yych = *(YYMARKER = ++YYCURSOR);",
          "2933:   if (yych <= 'E') {",
          "2934:    if (yych <= '9') {",
          "2935:     if (yych == '.') goto yy188;",
          "2936:     if (yych >= '0') goto yy191;",
          "2937:    } else {",
          "2938:     if (yych == 'B') goto yy199;",
          "2939:     if (yych >= 'E') goto yy193;",
          "2940:    }",
          "2941:   } else {",
          "2942:    if (yych <= 'b') {",
          "2943:     if (yych == 'X') goto yy198;",
          "2944:     if (yych >= 'b') goto yy199;",
          "2945:    } else {",
          "2946:     if (yych <= 'e') {",
          "2947:      if (yych >= 'e') goto yy193;",
          "2948:     } else {",
          "2949:      if (yych == 'x') goto yy198;",
          "2950:     }",
          "2951:    }",
          "2952:   }",
          "2953: yy173:",
          "2954:   YYDEBUG(173, *YYCURSOR);",
          "2955:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2956: #line 1518 \"Zend/zend_language_scanner.l\"",
          "2957:   {",
          "2959:   zendlval->value.lval = strtol(yytext, NULL, 0);",
          "2960:  } else {",
          "2961:   errno = 0;",
          "2962:   zendlval->value.lval = strtol(yytext, NULL, 0);",
          "2965:     zendlval->value.dval = zend_oct_strtod(yytext, NULL);",
          "2966:    } else {",
          "2967:     zendlval->value.dval = zend_strtod(yytext, NULL);",
          "2968:    }",
          "2969:    zendlval->type = IS_DOUBLE;",
          "2970:    return T_DNUMBER;",
          "2971:   }",
          "2972:  }",
          "2974:  zendlval->type = IS_LONG;",
          "2975:  return T_LNUMBER;",
          "2976: }",
          "2977: #line 2978 \"Zend/zend_language_scanner.c\"",
          "2978: yy174:",
          "2979:   YYDEBUG(174, *YYCURSOR);",
          "2980:   yyaccept = 2;",
          "2981:   yych = *(YYMARKER = ++YYCURSOR);",
          "2982:   if (yych <= '9') {",
          "2983:    if (yych == '.') goto yy188;",
          "2984:    if (yych <= '/') goto yy173;",
          "2985:    goto yy191;",
          "2986:   } else {",
          "2987:    if (yych <= 'E') {",
          "2988:     if (yych <= 'D') goto yy173;",
          "2989:     goto yy193;",
          "2990:    } else {",
          "2991:     if (yych == 'e') goto yy193;",
          "2992:     goto yy173;",
          "2993:    }",
          "2994:   }",
          "2995: yy175:",
          "2996:   YYDEBUG(175, *YYCURSOR);",
          "2997:   yych = *++YYCURSOR;",
          "2998:   goto yy187;",
          "2999: yy176:",
          "3000:   YYDEBUG(176, *YYCURSOR);",
          "3001:   ++YYCURSOR;",
          "3002: yy177:",
          "3003:   YYDEBUG(177, *YYCURSOR);",
          "3004:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3005: #line 1915 \"Zend/zend_language_scanner.l\"",
          "3006:   {",
          "3007:  while (YYCURSOR < YYLIMIT) {",
          "3008:   switch (*YYCURSOR++) {",
          "3009:    case '\\r':",
          "3010:     if (*YYCURSOR == '\\n') {",
          "3011:      YYCURSOR++;",
          "3012:     }",
          "3014:    case '\\n':",
          "3015:     CG(zend_lineno)++;",
          "3016:     break;",
          "3017:    case '%':",
          "3018:     if (!CG(asp_tags)) {",
          "3019:      continue;",
          "3020:     }",
          "3022:    case '?':",
          "3023:     if (*YYCURSOR == '>') {",
          "3024:      YYCURSOR--;",
          "3025:      break;",
          "3026:     }",
          "3028:    default:",
          "3029:     continue;",
          "3030:   }",
          "3032:   break;",
          "3033:  }",
          "3035:  yyleng = YYCURSOR - SCNG(yy_text);",
          "3037:  return T_COMMENT;",
          "3038: }",
          "3039: #line 3040 \"Zend/zend_language_scanner.c\"",
          "3040: yy178:",
          "3041:   YYDEBUG(178, *YYCURSOR);",
          "3042:   ++YYCURSOR;",
          "3043: yy179:",
          "3044:   YYDEBUG(179, *YYCURSOR);",
          "3045:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3046: #line 2006 \"Zend/zend_language_scanner.l\"",
          "3047:   {",
          "3048:  register char *s, *t;",
          "3049:  char *end;",
          "3050:  int bprefix = (yytext[0] != '\\'') ? 1 : 0;",
          "3052:  while (1) {",
          "3053:   if (YYCURSOR < YYLIMIT) {",
          "3054:    if (*YYCURSOR == '\\'') {",
          "3055:     YYCURSOR++;",
          "3056:     yyleng = YYCURSOR - SCNG(yy_text);",
          "3058:     break;",
          "3059:    } else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {",
          "3060:     YYCURSOR++;",
          "3061:    }",
          "3062:   } else {",
          "3063:    yyleng = YYLIMIT - SCNG(yy_text);",
          "3068:    return T_ENCAPSED_AND_WHITESPACE;",
          "3069:   }",
          "3070:  }",
          "3072:  zendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);",
          "3073:  zendlval->value.str.len = yyleng-bprefix-2;",
          "3074:  zendlval->type = IS_STRING;",
          "3077:  s = t = zendlval->value.str.val;",
          "3078:  end = s+zendlval->value.str.len;",
          "3079:  while (s<end) {",
          "3080:   if (*s=='\\\\') {",
          "3081:    s++;",
          "3083:    switch(*s) {",
          "3084:     case '\\\\':",
          "3085:     case '\\'':",
          "3087:      zendlval->value.str.len--;",
          "3088:      break;",
          "3089:     default:",
          "3092:      break;",
          "3093:    }",
          "3094:   } else {",
          "3096:   }",
          "3098:   if (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {",
          "3099:    CG(zend_lineno)++;",
          "3100:   }",
          "3101:   s++;",
          "3102:  }",
          "3105:  if (SCNG(output_filter)) {",
          "3106:   size_t sz = 0;",
          "3107:   s = zendlval->value.str.val;",
          "3108:   SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);",
          "3109:   zendlval->value.str.len = sz;",
          "3110:   efree(s);",
          "3111:  }",
          "3112:  return T_CONSTANT_ENCAPSED_STRING;",
          "3113: }",
          "3114: #line 3115 \"Zend/zend_language_scanner.c\"",
          "3115: yy180:",
          "3116:   YYDEBUG(180, *YYCURSOR);",
          "3117:   ++YYCURSOR;",
          "3118: yy181:",
          "3119:   YYDEBUG(181, *YYCURSOR);",
          "3120:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3121: #line 2075 \"Zend/zend_language_scanner.l\"",
          "3122:   {",
          "3123:  int bprefix = (yytext[0] != '\"') ? 1 : 0;",
          "3125:  while (YYCURSOR < YYLIMIT) {",
          "3126:   switch (*YYCURSOR++) {",
          "3127:    case '\"':",
          "3128:     yyleng = YYCURSOR - SCNG(yy_text);",
          "3129:     zend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);",
          "3130:     return T_CONSTANT_ENCAPSED_STRING;",
          "3131:    case '$':",
          "3132:     if (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {",
          "3133:      break;",
          "3134:     }",
          "3135:     continue;",
          "3136:    case '{':",
          "3137:     if (*YYCURSOR == '$') {",
          "3138:      break;",
          "3139:     }",
          "3140:     continue;",
          "3141:    case '\\\\':",
          "3142:     if (YYCURSOR < YYLIMIT) {",
          "3143:      YYCURSOR++;",
          "3144:     }",
          "3146:    default:",
          "3147:     continue;",
          "3148:   }",
          "3150:   YYCURSOR--;",
          "3151:   break;",
          "3152:  }",
          "3155:  SET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);",
          "3157:  YYCURSOR = SCNG(yy_text) + yyleng;",
          "3159:  BEGIN(ST_DOUBLE_QUOTES);",
          "3160:  return '\"';",
          "3161: }",
          "3162: #line 3163 \"Zend/zend_language_scanner.c\"",
          "3163: yy182:",
          "3164:   YYDEBUG(182, *YYCURSOR);",
          "3165:   ++YYCURSOR;",
          "3166:   YYDEBUG(183, *YYCURSOR);",
          "3167:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3168: #line 2165 \"Zend/zend_language_scanner.l\"",
          "3169:   {",
          "3170:  BEGIN(ST_BACKQUOTE);",
          "3171:  return '`';",
          "3172: }",
          "3173: #line 3174 \"Zend/zend_language_scanner.c\"",
          "3174: yy184:",
          "3175:   YYDEBUG(184, *YYCURSOR);",
          "3176:   ++YYCURSOR;",
          "3177:   YYDEBUG(185, *YYCURSOR);",
          "3178:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3179: #line 2428 \"Zend/zend_language_scanner.l\"",
          "3180:   {",
          "3181:  if (YYCURSOR > YYLIMIT) {",
          "3182:   return 0;",
          "3183:  }",
          "3185:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "3186:  goto restart;",
          "3187: }",
          "3188: #line 3189 \"Zend/zend_language_scanner.c\"",
          "3189: yy186:",
          "3190:   YYDEBUG(186, *YYCURSOR);",
          "3191:   ++YYCURSOR;",
          "3192:   YYFILL(1);",
          "3193:   yych = *YYCURSOR;",
          "3194: yy187:",
          "3195:   YYDEBUG(187, *YYCURSOR);",
          "3196:   if (yybm[0+yych] & 4) {",
          "3197:    goto yy186;",
          "3198:   }",
          "3199:   goto yy124;",
          "3200: yy188:",
          "3201:   YYDEBUG(188, *YYCURSOR);",
          "3202:   yyaccept = 3;",
          "3203:   YYMARKER = ++YYCURSOR;",
          "3204:   YYFILL(3);",
          "3205:   yych = *YYCURSOR;",
          "3206:   YYDEBUG(189, *YYCURSOR);",
          "3207:   if (yybm[0+yych] & 8) {",
          "3208:    goto yy188;",
          "3209:   }",
          "3210:   if (yych == 'E') goto yy193;",
          "3211:   if (yych == 'e') goto yy193;",
          "3212: yy190:",
          "3213:   YYDEBUG(190, *YYCURSOR);",
          "3214:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3215: #line 1583 \"Zend/zend_language_scanner.l\"",
          "3216:   {",
          "3217:  zendlval->value.dval = zend_strtod(yytext, NULL);",
          "3218:  zendlval->type = IS_DOUBLE;",
          "3219:  return T_DNUMBER;",
          "3220: }",
          "3221: #line 3222 \"Zend/zend_language_scanner.c\"",
          "3222: yy191:",
          "3223:   YYDEBUG(191, *YYCURSOR);",
          "3224:   yyaccept = 2;",
          "3225:   YYMARKER = ++YYCURSOR;",
          "3226:   YYFILL(3);",
          "3227:   yych = *YYCURSOR;",
          "3228:   YYDEBUG(192, *YYCURSOR);",
          "3229:   if (yych <= '9') {",
          "3230:    if (yych == '.') goto yy188;",
          "3231:    if (yych <= '/') goto yy173;",
          "3232:    goto yy191;",
          "3233:   } else {",
          "3234:    if (yych <= 'E') {",
          "3235:     if (yych <= 'D') goto yy173;",
          "3236:    } else {",
          "3237:     if (yych != 'e') goto yy173;",
          "3238:    }",
          "3239:   }",
          "3240: yy193:",
          "3241:   YYDEBUG(193, *YYCURSOR);",
          "3242:   yych = *++YYCURSOR;",
          "3243:   if (yych <= ',') {",
          "3244:    if (yych == '+') goto yy195;",
          "3245:   } else {",
          "3246:    if (yych <= '-') goto yy195;",
          "3247:    if (yych <= '/') goto yy194;",
          "3248:    if (yych <= '9') goto yy196;",
          "3249:   }",
          "3250: yy194:",
          "3251:   YYDEBUG(194, *YYCURSOR);",
          "3252:   YYCURSOR = YYMARKER;",
          "3253:   if (yyaccept <= 2) {",
          "3254:    if (yyaccept <= 1) {",
          "3255:     if (yyaccept <= 0) {",
          "3256:      goto yy124;",
          "3257:     } else {",
          "3258:      goto yy139;",
          "3259:     }",
          "3260:    } else {",
          "3261:     goto yy173;",
          "3262:    }",
          "3263:   } else {",
          "3264:    if (yyaccept <= 4) {",
          "3265:     if (yyaccept <= 3) {",
          "3266:      goto yy190;",
          "3267:     } else {",
          "3268:      goto yy239;",
          "3269:     }",
          "3270:    } else {",
          "3271:     goto yy255;",
          "3272:    }",
          "3273:   }",
          "3274: yy195:",
          "3275:   YYDEBUG(195, *YYCURSOR);",
          "3276:   yych = *++YYCURSOR;",
          "3277:   if (yych <= '/') goto yy194;",
          "3278:   if (yych >= ':') goto yy194;",
          "3279: yy196:",
          "3280:   YYDEBUG(196, *YYCURSOR);",
          "3281:   ++YYCURSOR;",
          "3282:   YYFILL(1);",
          "3283:   yych = *YYCURSOR;",
          "3284:   YYDEBUG(197, *YYCURSOR);",
          "3285:   if (yych <= '/') goto yy190;",
          "3286:   if (yych <= '9') goto yy196;",
          "3287:   goto yy190;",
          "3288: yy198:",
          "3289:   YYDEBUG(198, *YYCURSOR);",
          "3290:   yych = *++YYCURSOR;",
          "3291:   if (yybm[0+yych] & 32) {",
          "3292:    goto yy203;",
          "3293:   }",
          "3294:   goto yy194;",
          "3295: yy199:",
          "3296:   YYDEBUG(199, *YYCURSOR);",
          "3297:   yych = *++YYCURSOR;",
          "3298:   if (yybm[0+yych] & 16) {",
          "3299:    goto yy200;",
          "3300:   }",
          "3301:   goto yy194;",
          "3302: yy200:",
          "3303:   YYDEBUG(200, *YYCURSOR);",
          "3304:   ++YYCURSOR;",
          "3305:   YYFILL(1);",
          "3306:   yych = *YYCURSOR;",
          "3307:   YYDEBUG(201, *YYCURSOR);",
          "3308:   if (yybm[0+yych] & 16) {",
          "3309:    goto yy200;",
          "3310:   }",
          "3311:   YYDEBUG(202, *YYCURSOR);",
          "3312:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3313: #line 1493 \"Zend/zend_language_scanner.l\"",
          "3314:   {",
          "3316:  int len = yyleng - 2;",
          "3319:  while (*bin == '0') {",
          "3320:   ++bin;",
          "3321:   --len;",
          "3322:  }",
          "3324:  if (len < SIZEOF_LONG * 8) {",
          "3325:   if (len == 0) {",
          "3326:    zendlval->value.lval = 0;",
          "3327:   } else {",
          "3328:    zendlval->value.lval = strtol(bin, NULL, 2);",
          "3329:   }",
          "3330:   zendlval->type = IS_LONG;",
          "3331:   return T_LNUMBER;",
          "3332:  } else {",
          "3333:   zendlval->value.dval = zend_bin_strtod(bin, NULL);",
          "3334:   zendlval->type = IS_DOUBLE;",
          "3335:   return T_DNUMBER;",
          "3336:  }",
          "3337: }",
          "3338: #line 3339 \"Zend/zend_language_scanner.c\"",
          "3339: yy203:",
          "3340:   YYDEBUG(203, *YYCURSOR);",
          "3341:   ++YYCURSOR;",
          "3342:   YYFILL(1);",
          "3343:   yych = *YYCURSOR;",
          "3344:   YYDEBUG(204, *YYCURSOR);",
          "3345:   if (yybm[0+yych] & 32) {",
          "3346:    goto yy203;",
          "3347:   }",
          "3348:   YYDEBUG(205, *YYCURSOR);",
          "3349:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3350: #line 1539 \"Zend/zend_language_scanner.l\"",
          "3351:   {",
          "3353:  int len = yyleng - 2;",
          "3356:  while (*hex == '0') {",
          "3357:   hex++;",
          "3358:   len--;",
          "3359:  }",
          "3361:  if (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {",
          "3362:   if (len == 0) {",
          "3363:    zendlval->value.lval = 0;",
          "3364:   } else {",
          "3365:    zendlval->value.lval = strtol(hex, NULL, 16);",
          "3366:   }",
          "3367:   zendlval->type = IS_LONG;",
          "3368:   return T_LNUMBER;",
          "3369:  } else {",
          "3370:   zendlval->value.dval = zend_hex_strtod(hex, NULL);",
          "3371:   zendlval->type = IS_DOUBLE;",
          "3372:   return T_DNUMBER;",
          "3373:  }",
          "3374: }",
          "3375: #line 3376 \"Zend/zend_language_scanner.c\"",
          "3376: yy206:",
          "3377:   YYDEBUG(206, *YYCURSOR);",
          "3378:   ++YYCURSOR;",
          "3379:   if ((yych = *YYCURSOR) == '\\n') goto yy208;",
          "3380:   if (yych == '\\r') goto yy209;",
          "3381: yy207:",
          "3382:   YYDEBUG(207, *YYCURSOR);",
          "3383:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3384: #line 1983 \"Zend/zend_language_scanner.l\"",
          "3385:   {",
          "3387:  zendlval->value.str.len = yyleng;",
          "3388:  zendlval->type = IS_STRING;",
          "3389:  BEGIN(INITIAL);",
          "3391: }",
          "3392: #line 3393 \"Zend/zend_language_scanner.c\"",
          "3393: yy208:",
          "3394:   YYDEBUG(208, *YYCURSOR);",
          "3395:   yych = *++YYCURSOR;",
          "3396:   goto yy207;",
          "3397: yy209:",
          "3398:   YYDEBUG(209, *YYCURSOR);",
          "3399:   yych = *++YYCURSOR;",
          "3400:   if (yych == '\\n') goto yy208;",
          "3401:   goto yy207;",
          "3402: yy210:",
          "3403:   YYDEBUG(210, *YYCURSOR);",
          "3404:   ++YYCURSOR;",
          "3405:   YYFILL(1);",
          "3406:   yych = *YYCURSOR;",
          "3407:   YYDEBUG(211, *YYCURSOR);",
          "3408:   if (yych <= '^') {",
          "3409:    if (yych <= '9') {",
          "3410:     if (yych >= '0') goto yy210;",
          "3411:    } else {",
          "3412:     if (yych <= '@') goto yy212;",
          "3413:     if (yych <= 'Z') goto yy210;",
          "3414:    }",
          "3415:   } else {",
          "3416:    if (yych <= '`') {",
          "3417:     if (yych <= '_') goto yy210;",
          "3418:    } else {",
          "3419:     if (yych <= 'z') goto yy210;",
          "3420:     if (yych >= 0x7F) goto yy210;",
          "3421:    }",
          "3422:   }",
          "3423: yy212:",
          "3424:   YYDEBUG(212, *YYCURSOR);",
          "3425:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3426: #line 1885 \"Zend/zend_language_scanner.l\"",
          "3427:   {",
          "3428:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "3429:  zendlval->type = IS_STRING;",
          "3430:  return T_VARIABLE;",
          "3431: }",
          "3432: #line 3433 \"Zend/zend_language_scanner.c\"",
          "3433: yy213:",
          "3434:   YYDEBUG(213, *YYCURSOR);",
          "3435:   yych = *++YYCURSOR;",
          "3436:   if (yych == 'R') goto yy214;",
          "3437:   if (yych != 'r') goto yy187;",
          "3438: yy214:",
          "3439:   YYDEBUG(214, *YYCURSOR);",
          "3440:   ++YYCURSOR;",
          "3441:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "3442:    goto yy186;",
          "3443:   }",
          "3444:   YYDEBUG(215, *YYCURSOR);",
          "3445:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3446: #line 1438 \"Zend/zend_language_scanner.l\"",
          "3447:   {",
          "3448:  return T_LOGICAL_XOR;",
          "3449: }",
          "3450: #line 3451 \"Zend/zend_language_scanner.c\"",
          "3451: yy216:",
          "3452:   YYDEBUG(216, *YYCURSOR);",
          "3453:   ++YYCURSOR;",
          "3454:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "3455:    goto yy186;",
          "3456:   }",
          "3457:   YYDEBUG(217, *YYCURSOR);",
          "3458:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3459: #line 1430 \"Zend/zend_language_scanner.l\"",
          "3460:   {",
          "3461:  return T_LOGICAL_OR;",
          "3462: }",
          "3463: #line 3464 \"Zend/zend_language_scanner.c\"",
          "3464: yy218:",
          "3465:   YYDEBUG(218, *YYCURSOR);",
          "3466:   ++YYCURSOR;",
          "3467:   YYDEBUG(219, *YYCURSOR);",
          "3468:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3469: #line 1418 \"Zend/zend_language_scanner.l\"",
          "3470:   {",
          "3471:  return T_XOR_EQUAL;",
          "3472: }",
          "3473: #line 3474 \"Zend/zend_language_scanner.c\"",
          "3474: yy220:",
          "3475:   YYDEBUG(220, *YYCURSOR);",
          "3476:   ++YYCURSOR;",
          "3477:   YYDEBUG(221, *YYCURSOR);",
          "3478:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3479: #line 1422 \"Zend/zend_language_scanner.l\"",
          "3480:   {",
          "3481:  return T_BOOLEAN_OR;",
          "3482: }",
          "3483: #line 3484 \"Zend/zend_language_scanner.c\"",
          "3484: yy222:",
          "3485:   YYDEBUG(222, *YYCURSOR);",
          "3486:   ++YYCURSOR;",
          "3487:   YYDEBUG(223, *YYCURSOR);",
          "3488:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3489: #line 1414 \"Zend/zend_language_scanner.l\"",
          "3490:   {",
          "3491:  return T_OR_EQUAL;",
          "3492: }",
          "3493: #line 3494 \"Zend/zend_language_scanner.c\"",
          "3494: yy224:",
          "3495:   YYDEBUG(224, *YYCURSOR);",
          "3496:   ++YYCURSOR;",
          "3497:   YYDEBUG(225, *YYCURSOR);",
          "3498:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3499: #line 1426 \"Zend/zend_language_scanner.l\"",
          "3500:   {",
          "3501:  return T_BOOLEAN_AND;",
          "3502: }",
          "3503: #line 3504 \"Zend/zend_language_scanner.c\"",
          "3504: yy226:",
          "3505:   YYDEBUG(226, *YYCURSOR);",
          "3506:   ++YYCURSOR;",
          "3507:   YYDEBUG(227, *YYCURSOR);",
          "3508:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3509: #line 1410 \"Zend/zend_language_scanner.l\"",
          "3510:   {",
          "3511:  return T_AND_EQUAL;",
          "3512: }",
          "3513: #line 3514 \"Zend/zend_language_scanner.c\"",
          "3514: yy228:",
          "3515:   YYDEBUG(228, *YYCURSOR);",
          "3516:   ++YYCURSOR;",
          "3517:   if ((yych = *YYCURSOR) == '\\n') goto yy232;",
          "3518:   if (yych == '\\r') goto yy233;",
          "3519: yy229:",
          "3520:   YYDEBUG(229, *YYCURSOR);",
          "3521:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3522: #line 1992 \"Zend/zend_language_scanner.l\"",
          "3523:   {",
          "3524:  if (CG(asp_tags)) {",
          "3525:   BEGIN(INITIAL);",
          "3526:   zendlval->value.str.len = yyleng;",
          "3527:   zendlval->type = IS_STRING;",
          "3530:  } else {",
          "3531:   yyless(1);",
          "3532:   return yytext[0];",
          "3533:  }",
          "3534: }",
          "3535: #line 3536 \"Zend/zend_language_scanner.c\"",
          "3536: yy230:",
          "3537:   YYDEBUG(230, *YYCURSOR);",
          "3538:   ++YYCURSOR;",
          "3539:   YYDEBUG(231, *YYCURSOR);",
          "3540:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3541: #line 1398 \"Zend/zend_language_scanner.l\"",
          "3542:   {",
          "3543:  return T_MOD_EQUAL;",
          "3544: }",
          "3545: #line 3546 \"Zend/zend_language_scanner.c\"",
          "3546: yy232:",
          "3547:   YYDEBUG(232, *YYCURSOR);",
          "3548:   yych = *++YYCURSOR;",
          "3549:   goto yy229;",
          "3550: yy233:",
          "3551:   YYDEBUG(233, *YYCURSOR);",
          "3552:   yych = *++YYCURSOR;",
          "3553:   if (yych == '\\n') goto yy232;",
          "3554:   goto yy229;",
          "3555: yy234:",
          "3556:   YYDEBUG(234, *YYCURSOR);",
          "3557:   yyaccept = 3;",
          "3558:   YYMARKER = ++YYCURSOR;",
          "3559:   YYFILL(3);",
          "3560:   yych = *YYCURSOR;",
          "3561:   YYDEBUG(235, *YYCURSOR);",
          "3562:   if (yych <= 'D') {",
          "3563:    if (yych <= '/') goto yy190;",
          "3564:    if (yych <= '9') goto yy234;",
          "3565:    goto yy190;",
          "3566:   } else {",
          "3567:    if (yych <= 'E') goto yy193;",
          "3568:    if (yych == 'e') goto yy193;",
          "3569:    goto yy190;",
          "3570:   }",
          "3571: yy236:",
          "3572:   YYDEBUG(236, *YYCURSOR);",
          "3573:   ++YYCURSOR;",
          "3574:   YYDEBUG(237, *YYCURSOR);",
          "3575:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3576: #line 1394 \"Zend/zend_language_scanner.l\"",
          "3577:   {",
          "3578:  return T_CONCAT_EQUAL;",
          "3579: }",
          "3580: #line 3581 \"Zend/zend_language_scanner.c\"",
          "3581: yy238:",
          "3582:   YYDEBUG(238, *YYCURSOR);",
          "3583:   yyaccept = 4;",
          "3584:   yych = *(YYMARKER = ++YYCURSOR);",
          "3585:   if (yych == '*') goto yy243;",
          "3586: yy239:",
          "3587:   YYDEBUG(239, *YYCURSOR);",
          "3588:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3589: #line 1949 \"Zend/zend_language_scanner.l\"",
          "3590:   {",
          "3591:  int doc_com;",
          "3593:  if (yyleng > 2) {",
          "3594:   doc_com = 1;",
          "3595:   RESET_DOC_COMMENT();",
          "3596:  } else {",
          "3597:   doc_com = 0;",
          "3598:  }",
          "3600:  while (YYCURSOR < YYLIMIT) {",
          "3601:   if (*YYCURSOR++ == '*' && *YYCURSOR == '/') {",
          "3602:    break;",
          "3603:   }",
          "3604:  }",
          "3606:  if (YYCURSOR < YYLIMIT) {",
          "3607:   YYCURSOR++;",
          "3608:  } else {",
          "3609:   zend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));",
          "3610:  }",
          "3612:  yyleng = YYCURSOR - SCNG(yy_text);",
          "3613:  HANDLE_NEWLINES(yytext, yyleng);",
          "3615:  if (doc_com) {",
          "3616:   CG(doc_comment) = estrndup(yytext, yyleng);",
          "3617:   CG(doc_comment_len) = yyleng;",
          "3618:   return T_DOC_COMMENT;",
          "3619:  }",
          "3621:  return T_COMMENT;",
          "3622: }",
          "3623: #line 3624 \"Zend/zend_language_scanner.c\"",
          "3624: yy240:",
          "3625:   YYDEBUG(240, *YYCURSOR);",
          "3626:   yych = *++YYCURSOR;",
          "3627:   goto yy177;",
          "3628: yy241:",
          "3629:   YYDEBUG(241, *YYCURSOR);",
          "3630:   ++YYCURSOR;",
          "3631:   YYDEBUG(242, *YYCURSOR);",
          "3632:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3633: #line 1390 \"Zend/zend_language_scanner.l\"",
          "3634:   {",
          "3635:  return T_DIV_EQUAL;",
          "3636: }",
          "3637: #line 3638 \"Zend/zend_language_scanner.c\"",
          "3638: yy243:",
          "3639:   YYDEBUG(243, *YYCURSOR);",
          "3640:   yych = *++YYCURSOR;",
          "3641:   if (yybm[0+yych] & 64) {",
          "3642:    goto yy244;",
          "3643:   }",
          "3644:   goto yy194;",
          "3645: yy244:",
          "3646:   YYDEBUG(244, *YYCURSOR);",
          "3647:   ++YYCURSOR;",
          "3648:   YYFILL(1);",
          "3649:   yych = *YYCURSOR;",
          "3650:   YYDEBUG(245, *YYCURSOR);",
          "3651:   if (yybm[0+yych] & 64) {",
          "3652:    goto yy244;",
          "3653:   }",
          "3654:   goto yy239;",
          "3655: yy246:",
          "3656:   YYDEBUG(246, *YYCURSOR);",
          "3657:   ++YYCURSOR;",
          "3658:   YYDEBUG(247, *YYCURSOR);",
          "3659:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3660: #line 1386 \"Zend/zend_language_scanner.l\"",
          "3661:   {",
          "3662:  return T_MUL_EQUAL;",
          "3663: }",
          "3664: #line 3665 \"Zend/zend_language_scanner.c\"",
          "3665: yy248:",
          "3666:   YYDEBUG(248, *YYCURSOR);",
          "3667:   ++YYCURSOR;",
          "3668:   if ((yych = *YYCURSOR) == '=') goto yy252;",
          "3669:   YYDEBUG(249, *YYCURSOR);",
          "3670:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3671: #line 1446 \"Zend/zend_language_scanner.l\"",
          "3672:   {",
          "3673:  return T_SR;",
          "3674: }",
          "3675: #line 3676 \"Zend/zend_language_scanner.c\"",
          "3676: yy250:",
          "3677:   YYDEBUG(250, *YYCURSOR);",
          "3678:   ++YYCURSOR;",
          "3679:   YYDEBUG(251, *YYCURSOR);",
          "3680:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3681: #line 1374 \"Zend/zend_language_scanner.l\"",
          "3682:   {",
          "3683:  return T_IS_GREATER_OR_EQUAL;",
          "3684: }",
          "3685: #line 3686 \"Zend/zend_language_scanner.c\"",
          "3686: yy252:",
          "3687:   YYDEBUG(252, *YYCURSOR);",
          "3688:   ++YYCURSOR;",
          "3689:   YYDEBUG(253, *YYCURSOR);",
          "3690:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3691: #line 1406 \"Zend/zend_language_scanner.l\"",
          "3692:   {",
          "3693:  return T_SR_EQUAL;",
          "3694: }",
          "3695: #line 3696 \"Zend/zend_language_scanner.c\"",
          "3696: yy254:",
          "3697:   YYDEBUG(254, *YYCURSOR);",
          "3698:   yyaccept = 5;",
          "3699:   yych = *(YYMARKER = ++YYCURSOR);",
          "3700:   if (yych <= ';') goto yy255;",
          "3701:   if (yych <= '<') goto yy270;",
          "3702:   if (yych <= '=') goto yy268;",
          "3703: yy255:",
          "3704:   YYDEBUG(255, *YYCURSOR);",
          "3705:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3706: #line 1442 \"Zend/zend_language_scanner.l\"",
          "3707:   {",
          "3708:  return T_SL;",
          "3709: }",
          "3710: #line 3711 \"Zend/zend_language_scanner.c\"",
          "3711: yy256:",
          "3712:   YYDEBUG(256, *YYCURSOR);",
          "3713:   yych = *++YYCURSOR;",
          "3714:   if (yych == 'S') goto yy261;",
          "3715:   if (yych == 's') goto yy261;",
          "3716:   goto yy194;",
          "3717: yy257:",
          "3718:   YYDEBUG(257, *YYCURSOR);",
          "3719:   ++YYCURSOR;",
          "3720:   YYDEBUG(258, *YYCURSOR);",
          "3721:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3722: #line 1370 \"Zend/zend_language_scanner.l\"",
          "3723:   {",
          "3724:  return T_IS_SMALLER_OR_EQUAL;",
          "3725: }",
          "3726: #line 3727 \"Zend/zend_language_scanner.c\"",
          "3727: yy259:",
          "3728:   YYDEBUG(259, *YYCURSOR);",
          "3729:   ++YYCURSOR;",
          "3730: yy260:",
          "3731:   YYDEBUG(260, *YYCURSOR);",
          "3732:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3733: #line 1366 \"Zend/zend_language_scanner.l\"",
          "3734:   {",
          "3735:  return T_IS_NOT_EQUAL;",
          "3736: }",
          "3737: #line 3738 \"Zend/zend_language_scanner.c\"",
          "3738: yy261:",
          "3739:   YYDEBUG(261, *YYCURSOR);",
          "3740:   yych = *++YYCURSOR;",
          "3741:   if (yych == 'C') goto yy262;",
          "3742:   if (yych != 'c') goto yy194;",
          "3743: yy262:",
          "3744:   YYDEBUG(262, *YYCURSOR);",
          "3745:   yych = *++YYCURSOR;",
          "3746:   if (yych == 'R') goto yy263;",
          "3747:   if (yych != 'r') goto yy194;",
          "3748: yy263:",
          "3749:   YYDEBUG(263, *YYCURSOR);",
          "3750:   yych = *++YYCURSOR;",
          "3751:   if (yych == 'I') goto yy264;",
          "3752:   if (yych != 'i') goto yy194;",
          "3753: yy264:",
          "3754:   YYDEBUG(264, *YYCURSOR);",
          "3755:   yych = *++YYCURSOR;",
          "3756:   if (yych == 'P') goto yy265;",
          "3757:   if (yych != 'p') goto yy194;",
          "3758: yy265:",
          "3759:   YYDEBUG(265, *YYCURSOR);",
          "3760:   yych = *++YYCURSOR;",
          "3761:   if (yych == 'T') goto yy266;",
          "3762:   if (yych != 't') goto yy194;",
          "3763: yy266:",
          "3764:   YYDEBUG(266, *YYCURSOR);",
          "3765:   ++YYCURSOR;",
          "3766:   YYFILL(3);",
          "3767:   yych = *YYCURSOR;",
          "3768:   YYDEBUG(267, *YYCURSOR);",
          "3769:   if (yych <= '\\r') {",
          "3770:    if (yych <= 0x08) goto yy194;",
          "3771:    if (yych <= '\\n') goto yy266;",
          "3772:    if (yych <= '\\f') goto yy194;",
          "3773:    goto yy266;",
          "3774:   } else {",
          "3775:    if (yych <= ' ') {",
          "3776:     if (yych <= 0x1F) goto yy194;",
          "3777:     goto yy266;",
          "3778:    } else {",
          "3779:     if (yych == '>') goto yy206;",
          "3780:     goto yy194;",
          "3781:    }",
          "3782:   }",
          "3783: yy268:",
          "3784:   YYDEBUG(268, *YYCURSOR);",
          "3785:   ++YYCURSOR;",
          "3786:   YYDEBUG(269, *YYCURSOR);",
          "3787:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3788: #line 1402 \"Zend/zend_language_scanner.l\"",
          "3789:   {",
          "3790:  return T_SL_EQUAL;",
          "3791: }",
          "3792: #line 3793 \"Zend/zend_language_scanner.c\"",
          "3793: yy270:",
          "3794:   YYDEBUG(270, *YYCURSOR);",
          "3795:   ++YYCURSOR;",
          "3796:   YYFILL(2);",
          "3797:   yych = *YYCURSOR;",
          "3798:   YYDEBUG(271, *YYCURSOR);",
          "3799:   if (yybm[0+yych] & 128) {",
          "3800:    goto yy270;",
          "3801:   }",
          "3802:   if (yych <= 'Z') {",
          "3803:    if (yych <= '&') {",
          "3804:     if (yych == '\"') goto yy275;",
          "3805:     goto yy194;",
          "3806:    } else {",
          "3807:     if (yych <= '\\'') goto yy274;",
          "3808:     if (yych <= '@') goto yy194;",
          "3809:    }",
          "3810:   } else {",
          "3811:    if (yych <= '`') {",
          "3812:     if (yych != '_') goto yy194;",
          "3813:    } else {",
          "3814:     if (yych <= 'z') goto yy272;",
          "3815:     if (yych <= '~') goto yy194;",
          "3816:    }",
          "3817:   }",
          "3818: yy272:",
          "3819:   YYDEBUG(272, *YYCURSOR);",
          "3820:   ++YYCURSOR;",
          "3821:   YYFILL(2);",
          "3822:   yych = *YYCURSOR;",
          "3823:   YYDEBUG(273, *YYCURSOR);",
          "3824:   if (yych <= '@') {",
          "3825:    if (yych <= '\\f') {",
          "3826:     if (yych == '\\n') goto yy279;",
          "3827:     goto yy194;",
          "3828:    } else {",
          "3829:     if (yych <= '\\r') goto yy281;",
          "3830:     if (yych <= '/') goto yy194;",
          "3831:     if (yych <= '9') goto yy272;",
          "3832:     goto yy194;",
          "3833:    }",
          "3834:   } else {",
          "3835:    if (yych <= '_') {",
          "3836:     if (yych <= 'Z') goto yy272;",
          "3837:     if (yych <= '^') goto yy194;",
          "3838:     goto yy272;",
          "3839:    } else {",
          "3840:     if (yych <= '`') goto yy194;",
          "3841:     if (yych <= 'z') goto yy272;",
          "3842:     if (yych <= '~') goto yy194;",
          "3843:     goto yy272;",
          "3844:    }",
          "3845:   }",
          "3846: yy274:",
          "3847:   YYDEBUG(274, *YYCURSOR);",
          "3848:   yych = *++YYCURSOR;",
          "3849:   if (yych == '\\'') goto yy194;",
          "3850:   if (yych <= '/') goto yy283;",
          "3851:   if (yych <= '9') goto yy194;",
          "3852:   goto yy283;",
          "3853: yy275:",
          "3854:   YYDEBUG(275, *YYCURSOR);",
          "3855:   yych = *++YYCURSOR;",
          "3856:   if (yych == '\"') goto yy194;",
          "3857:   if (yych <= '/') goto yy277;",
          "3858:   if (yych <= '9') goto yy194;",
          "3859:   goto yy277;",
          "3860: yy276:",
          "3861:   YYDEBUG(276, *YYCURSOR);",
          "3862:   ++YYCURSOR;",
          "3863:   YYFILL(3);",
          "3864:   yych = *YYCURSOR;",
          "3865: yy277:",
          "3866:   YYDEBUG(277, *YYCURSOR);",
          "3867:   if (yych <= 'Z') {",
          "3868:    if (yych <= '/') {",
          "3869:     if (yych != '\"') goto yy194;",
          "3870:    } else {",
          "3871:     if (yych <= '9') goto yy276;",
          "3872:     if (yych <= '@') goto yy194;",
          "3873:     goto yy276;",
          "3874:    }",
          "3875:   } else {",
          "3876:    if (yych <= '`') {",
          "3877:     if (yych == '_') goto yy276;",
          "3878:     goto yy194;",
          "3879:    } else {",
          "3880:     if (yych <= 'z') goto yy276;",
          "3881:     if (yych <= '~') goto yy194;",
          "3882:     goto yy276;",
          "3883:    }",
          "3884:   }",
          "3885: yy278:",
          "3886:   YYDEBUG(278, *YYCURSOR);",
          "3887:   yych = *++YYCURSOR;",
          "3888:   if (yych == '\\n') goto yy279;",
          "3889:   if (yych == '\\r') goto yy281;",
          "3890:   goto yy194;",
          "3891: yy279:",
          "3892:   YYDEBUG(279, *YYCURSOR);",
          "3893:   ++YYCURSOR;",
          "3894: yy280:",
          "3895:   YYDEBUG(280, *YYCURSOR);",
          "3896:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3897: #line 2117 \"Zend/zend_language_scanner.l\"",
          "3898:   {",
          "3899:  char *s;",
          "3900:  int bprefix = (yytext[0] != '<') ? 1 : 0;",
          "3901:  zend_heredoc_label *heredoc_label = emalloc(sizeof(zend_heredoc_label));",
          "3903:  CG(zend_lineno)++;",
          "3904:  heredoc_label->length = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);",
          "3905:  s = yytext+bprefix+3;",
          "3906:  while ((*s == ' ') || (*s == '\\t')) {",
          "3907:   s++;",
          "3908:   heredoc_label->length--;",
          "3909:  }",
          "3911:  if (*s == '\\'') {",
          "3912:   s++;",
          "3913:   heredoc_label->length -= 2;",
          "3915:   BEGIN(ST_NOWDOC);",
          "3916:  } else {",
          "3917:   if (*s == '\"') {",
          "3918:    s++;",
          "3919:    heredoc_label->length -= 2;",
          "3920:   }",
          "3922:   BEGIN(ST_HEREDOC);",
          "3923:  }",
          "3925:  heredoc_label->label = estrndup(s, heredoc_label->length);",
          "3928:  if (heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, heredoc_label->length)) {",
          "3929:   YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "3931:   if (*end == ';') {",
          "3932:    end++;",
          "3933:   }",
          "3935:   if (*end == '\\n' || *end == '\\r') {",
          "3936:    BEGIN(ST_END_HEREDOC);",
          "3937:   }",
          "3938:  }",
          "3940:  zend_ptr_stack_push(&SCNG(heredoc_label_stack), (void *) heredoc_label);",
          "3942:  return T_START_HEREDOC;",
          "3943: }",
          "3944: #line 3945 \"Zend/zend_language_scanner.c\"",
          "3945: yy281:",
          "3946:   YYDEBUG(281, *YYCURSOR);",
          "3947:   yych = *++YYCURSOR;",
          "3948:   if (yych == '\\n') goto yy279;",
          "3949:   goto yy280;",
          "3950: yy282:",
          "3951:   YYDEBUG(282, *YYCURSOR);",
          "3952:   ++YYCURSOR;",
          "3953:   YYFILL(3);",
          "3954:   yych = *YYCURSOR;",
          "3955: yy283:",
          "3956:   YYDEBUG(283, *YYCURSOR);",
          "3957:   if (yych <= 'Z') {",
          "3958:    if (yych <= '/') {",
          "3959:     if (yych == '\\'') goto yy278;",
          "3960:     goto yy194;",
          "3961:    } else {",
          "3962:     if (yych <= '9') goto yy282;",
          "3963:     if (yych <= '@') goto yy194;",
          "3964:     goto yy282;",
          "3965:    }",
          "3966:   } else {",
          "3967:    if (yych <= '`') {",
          "3968:     if (yych == '_') goto yy282;",
          "3969:     goto yy194;",
          "3970:    } else {",
          "3971:     if (yych <= 'z') goto yy282;",
          "3972:     if (yych <= '~') goto yy194;",
          "3973:     goto yy282;",
          "3974:    }",
          "3975:   }",
          "3976: yy284:",
          "3977:   YYDEBUG(284, *YYCURSOR);",
          "3978:   yych = *++YYCURSOR;",
          "3979:   if (yych != '=') goto yy260;",
          "3980:   YYDEBUG(285, *YYCURSOR);",
          "3981:   ++YYCURSOR;",
          "3982:   YYDEBUG(286, *YYCURSOR);",
          "3983:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3984: #line 1358 \"Zend/zend_language_scanner.l\"",
          "3985:   {",
          "3986:  return T_IS_NOT_IDENTICAL;",
          "3987: }",
          "3988: #line 3989 \"Zend/zend_language_scanner.c\"",
          "3989: yy287:",
          "3990:   YYDEBUG(287, *YYCURSOR);",
          "3991:   ++YYCURSOR;",
          "3992:   YYDEBUG(288, *YYCURSOR);",
          "3993:   yyleng = YYCURSOR - SCNG(yy_text);",
          "3994: #line 1378 \"Zend/zend_language_scanner.l\"",
          "3995:   {",
          "3996:  return T_PLUS_EQUAL;",
          "3997: }",
          "3998: #line 3999 \"Zend/zend_language_scanner.c\"",
          "3999: yy289:",
          "4000:   YYDEBUG(289, *YYCURSOR);",
          "4001:   ++YYCURSOR;",
          "4002:   YYDEBUG(290, *YYCURSOR);",
          "4003:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4004: #line 1346 \"Zend/zend_language_scanner.l\"",
          "4005:   {",
          "4006:  return T_INC;",
          "4007: }",
          "4008: #line 4009 \"Zend/zend_language_scanner.c\"",
          "4009: yy291:",
          "4010:   YYDEBUG(291, *YYCURSOR);",
          "4011:   yych = *++YYCURSOR;",
          "4012:   if (yych == 'S') goto yy292;",
          "4013:   if (yych != 's') goto yy187;",
          "4014: yy292:",
          "4015:   YYDEBUG(292, *YYCURSOR);",
          "4016:   yych = *++YYCURSOR;",
          "4017:   if (yych == 'T') goto yy293;",
          "4018:   if (yych != 't') goto yy187;",
          "4019: yy293:",
          "4020:   YYDEBUG(293, *YYCURSOR);",
          "4021:   ++YYCURSOR;",
          "4022:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4023:    goto yy186;",
          "4024:   }",
          "4025:   YYDEBUG(294, *YYCURSOR);",
          "4026:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4027: #line 1334 \"Zend/zend_language_scanner.l\"",
          "4028:   {",
          "4029:  return T_LIST;",
          "4030: }",
          "4031: #line 4032 \"Zend/zend_language_scanner.c\"",
          "4032: yy295:",
          "4033:   YYDEBUG(295, *YYCURSOR);",
          "4034:   ++YYCURSOR;",
          "4035:   if ((yych = *YYCURSOR) == '=') goto yy299;",
          "4036:   YYDEBUG(296, *YYCURSOR);",
          "4037:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4038: #line 1362 \"Zend/zend_language_scanner.l\"",
          "4039:   {",
          "4040:  return T_IS_EQUAL;",
          "4041: }",
          "4042: #line 4043 \"Zend/zend_language_scanner.c\"",
          "4043: yy297:",
          "4044:   YYDEBUG(297, *YYCURSOR);",
          "4045:   ++YYCURSOR;",
          "4046:   YYDEBUG(298, *YYCURSOR);",
          "4047:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4048: #line 1330 \"Zend/zend_language_scanner.l\"",
          "4049:   {",
          "4050:  return T_DOUBLE_ARROW;",
          "4051: }",
          "4052: #line 4053 \"Zend/zend_language_scanner.c\"",
          "4053: yy299:",
          "4054:   YYDEBUG(299, *YYCURSOR);",
          "4055:   ++YYCURSOR;",
          "4056:   YYDEBUG(300, *YYCURSOR);",
          "4057:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4058: #line 1354 \"Zend/zend_language_scanner.l\"",
          "4059:   {",
          "4060:  return T_IS_IDENTICAL;",
          "4061: }",
          "4062: #line 4063 \"Zend/zend_language_scanner.c\"",
          "4063: yy301:",
          "4064:   YYDEBUG(301, *YYCURSOR);",
          "4065:   yych = *++YYCURSOR;",
          "4066:   YYDEBUG(-1, yych);",
          "4067:   switch (yych) {",
          "4068:   case 'C':",
          "4069:   case 'c': goto yy303;",
          "4070:   case 'D':",
          "4071:   case 'd': goto yy308;",
          "4072:   case 'F':",
          "4073:   case 'f': goto yy305;",
          "4074:   case 'H':",
          "4075:   case 'h': goto yy302;",
          "4076:   case 'L':",
          "4077:   case 'l': goto yy307;",
          "4078:   case 'M':",
          "4079:   case 'm': goto yy306;",
          "4080:   case 'N':",
          "4081:   case 'n': goto yy309;",
          "4082:   case 'T':",
          "4083:   case 't': goto yy304;",
          "4084:   default: goto yy187;",
          "4085:   }",
          "4086: yy302:",
          "4087:   YYDEBUG(302, *YYCURSOR);",
          "4088:   yych = *++YYCURSOR;",
          "4089:   if (yych == 'A') goto yy370;",
          "4090:   if (yych == 'a') goto yy370;",
          "4091:   goto yy187;",
          "4092: yy303:",
          "4093:   YYDEBUG(303, *YYCURSOR);",
          "4094:   yych = *++YYCURSOR;",
          "4095:   if (yych == 'L') goto yy363;",
          "4096:   if (yych == 'l') goto yy363;",
          "4097:   goto yy187;",
          "4098: yy304:",
          "4099:   YYDEBUG(304, *YYCURSOR);",
          "4100:   yych = *++YYCURSOR;",
          "4101:   if (yych == 'R') goto yy356;",
          "4102:   if (yych == 'r') goto yy356;",
          "4103:   goto yy187;",
          "4104: yy305:",
          "4105:   YYDEBUG(305, *YYCURSOR);",
          "4106:   yych = *++YYCURSOR;",
          "4107:   if (yych <= 'U') {",
          "4108:    if (yych == 'I') goto yy340;",
          "4109:    if (yych <= 'T') goto yy187;",
          "4110:    goto yy341;",
          "4111:   } else {",
          "4112:    if (yych <= 'i') {",
          "4113:     if (yych <= 'h') goto yy187;",
          "4114:     goto yy340;",
          "4115:    } else {",
          "4116:     if (yych == 'u') goto yy341;",
          "4117:     goto yy187;",
          "4118:    }",
          "4119:   }",
          "4120: yy306:",
          "4121:   YYDEBUG(306, *YYCURSOR);",
          "4122:   yych = *++YYCURSOR;",
          "4123:   if (yych == 'E') goto yy332;",
          "4124:   if (yych == 'e') goto yy332;",
          "4125:   goto yy187;",
          "4126: yy307:",
          "4127:   YYDEBUG(307, *YYCURSOR);",
          "4128:   yych = *++YYCURSOR;",
          "4129:   if (yych == 'I') goto yy326;",
          "4130:   if (yych == 'i') goto yy326;",
          "4131:   goto yy187;",
          "4132: yy308:",
          "4133:   YYDEBUG(308, *YYCURSOR);",
          "4134:   yych = *++YYCURSOR;",
          "4135:   if (yych == 'I') goto yy321;",
          "4136:   if (yych == 'i') goto yy321;",
          "4137:   goto yy187;",
          "4138: yy309:",
          "4139:   YYDEBUG(309, *YYCURSOR);",
          "4140:   yych = *++YYCURSOR;",
          "4141:   if (yych == 'A') goto yy310;",
          "4142:   if (yych != 'a') goto yy187;",
          "4143: yy310:",
          "4144:   YYDEBUG(310, *YYCURSOR);",
          "4145:   yych = *++YYCURSOR;",
          "4146:   if (yych == 'M') goto yy311;",
          "4147:   if (yych != 'm') goto yy187;",
          "4148: yy311:",
          "4149:   YYDEBUG(311, *YYCURSOR);",
          "4150:   yych = *++YYCURSOR;",
          "4151:   if (yych == 'E') goto yy312;",
          "4152:   if (yych != 'e') goto yy187;",
          "4153: yy312:",
          "4154:   YYDEBUG(312, *YYCURSOR);",
          "4155:   yych = *++YYCURSOR;",
          "4156:   if (yych == 'S') goto yy313;",
          "4157:   if (yych != 's') goto yy187;",
          "4158: yy313:",
          "4159:   YYDEBUG(313, *YYCURSOR);",
          "4160:   yych = *++YYCURSOR;",
          "4161:   if (yych == 'P') goto yy314;",
          "4162:   if (yych != 'p') goto yy187;",
          "4163: yy314:",
          "4164:   YYDEBUG(314, *YYCURSOR);",
          "4165:   yych = *++YYCURSOR;",
          "4166:   if (yych == 'A') goto yy315;",
          "4167:   if (yych != 'a') goto yy187;",
          "4168: yy315:",
          "4169:   YYDEBUG(315, *YYCURSOR);",
          "4170:   yych = *++YYCURSOR;",
          "4171:   if (yych == 'C') goto yy316;",
          "4172:   if (yych != 'c') goto yy187;",
          "4173: yy316:",
          "4174:   YYDEBUG(316, *YYCURSOR);",
          "4175:   yych = *++YYCURSOR;",
          "4176:   if (yych == 'E') goto yy317;",
          "4177:   if (yych != 'e') goto yy187;",
          "4178: yy317:",
          "4179:   YYDEBUG(317, *YYCURSOR);",
          "4180:   yych = *++YYCURSOR;",
          "4181:   if (yych != '_') goto yy187;",
          "4182:   YYDEBUG(318, *YYCURSOR);",
          "4183:   yych = *++YYCURSOR;",
          "4184:   if (yych != '_') goto yy187;",
          "4185:   YYDEBUG(319, *YYCURSOR);",
          "4186:   ++YYCURSOR;",
          "4187:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4188:    goto yy186;",
          "4189:   }",
          "4190:   YYDEBUG(320, *YYCURSOR);",
          "4191:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4192: #line 1718 \"Zend/zend_language_scanner.l\"",
          "4193:   {",
          "4194:  if (CG(current_namespace)) {",
          "4196:   zval_copy_ctor(zendlval);",
          "4197:  } else {",
          "4198:   ZVAL_EMPTY_STRING(zendlval);",
          "4199:  }",
          "4200:  return T_NS_C;",
          "4201: }",
          "4202: #line 4203 \"Zend/zend_language_scanner.c\"",
          "4203: yy321:",
          "4204:   YYDEBUG(321, *YYCURSOR);",
          "4205:   yych = *++YYCURSOR;",
          "4206:   if (yych == 'R') goto yy322;",
          "4207:   if (yych != 'r') goto yy187;",
          "4208: yy322:",
          "4209:   YYDEBUG(322, *YYCURSOR);",
          "4210:   yych = *++YYCURSOR;",
          "4211:   if (yych != '_') goto yy187;",
          "4212:   YYDEBUG(323, *YYCURSOR);",
          "4213:   yych = *++YYCURSOR;",
          "4214:   if (yych != '_') goto yy187;",
          "4215:   YYDEBUG(324, *YYCURSOR);",
          "4216:   ++YYCURSOR;",
          "4217:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4218:    goto yy186;",
          "4219:   }",
          "4220:   YYDEBUG(325, *YYCURSOR);",
          "4221:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4222: #line 1691 \"Zend/zend_language_scanner.l\"",
          "4223:   {",
          "4224:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "4225:  const size_t filename_len = strlen(filename);",
          "4226:  char *dirname;",
          "4228:  if (!filename) {",
          "4229:   filename = \"\";",
          "4230:  }",
          "4232:  dirname = estrndup(filename, filename_len);",
          "4233:  zend_dirname(dirname, filename_len);",
          "4235:  if (strcmp(dirname, \".\") == 0) {",
          "4236:   dirname = erealloc(dirname, MAXPATHLEN);",
          "4237: #if HAVE_GETCWD",
          "4238:   VCWD_GETCWD(dirname, MAXPATHLEN);",
          "4239: #elif HAVE_GETWD",
          "4240:   VCWD_GETWD(dirname);",
          "4241: #endif",
          "4242:  }",
          "4244:  zendlval->value.str.len = strlen(dirname);",
          "4245:  zendlval->value.str.val = dirname;",
          "4246:  zendlval->type = IS_STRING;",
          "4247:  return T_DIR;",
          "4248: }",
          "4249: #line 4250 \"Zend/zend_language_scanner.c\"",
          "4250: yy326:",
          "4251:   YYDEBUG(326, *YYCURSOR);",
          "4252:   yych = *++YYCURSOR;",
          "4253:   if (yych == 'N') goto yy327;",
          "4254:   if (yych != 'n') goto yy187;",
          "4255: yy327:",
          "4256:   YYDEBUG(327, *YYCURSOR);",
          "4257:   yych = *++YYCURSOR;",
          "4258:   if (yych == 'E') goto yy328;",
          "4259:   if (yych != 'e') goto yy187;",
          "4260: yy328:",
          "4261:   YYDEBUG(328, *YYCURSOR);",
          "4262:   yych = *++YYCURSOR;",
          "4263:   if (yych != '_') goto yy187;",
          "4264:   YYDEBUG(329, *YYCURSOR);",
          "4265:   yych = *++YYCURSOR;",
          "4266:   if (yych != '_') goto yy187;",
          "4267:   YYDEBUG(330, *YYCURSOR);",
          "4268:   ++YYCURSOR;",
          "4269:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4270:    goto yy186;",
          "4271:   }",
          "4272:   YYDEBUG(331, *YYCURSOR);",
          "4273:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4274: #line 1673 \"Zend/zend_language_scanner.l\"",
          "4275:   {",
          "4276:  zendlval->value.lval = CG(zend_lineno);",
          "4277:  zendlval->type = IS_LONG;",
          "4278:  return T_LINE;",
          "4279: }",
          "4280: #line 4281 \"Zend/zend_language_scanner.c\"",
          "4281: yy332:",
          "4282:   YYDEBUG(332, *YYCURSOR);",
          "4283:   yych = *++YYCURSOR;",
          "4284:   if (yych == 'T') goto yy333;",
          "4285:   if (yych != 't') goto yy187;",
          "4286: yy333:",
          "4287:   YYDEBUG(333, *YYCURSOR);",
          "4288:   yych = *++YYCURSOR;",
          "4289:   if (yych == 'H') goto yy334;",
          "4290:   if (yych != 'h') goto yy187;",
          "4291: yy334:",
          "4292:   YYDEBUG(334, *YYCURSOR);",
          "4293:   yych = *++YYCURSOR;",
          "4294:   if (yych == 'O') goto yy335;",
          "4295:   if (yych != 'o') goto yy187;",
          "4296: yy335:",
          "4297:   YYDEBUG(335, *YYCURSOR);",
          "4298:   yych = *++YYCURSOR;",
          "4299:   if (yych == 'D') goto yy336;",
          "4300:   if (yych != 'd') goto yy187;",
          "4301: yy336:",
          "4302:   YYDEBUG(336, *YYCURSOR);",
          "4303:   yych = *++YYCURSOR;",
          "4304:   if (yych != '_') goto yy187;",
          "4305:   YYDEBUG(337, *YYCURSOR);",
          "4306:   yych = *++YYCURSOR;",
          "4307:   if (yych != '_') goto yy187;",
          "4308:   YYDEBUG(338, *YYCURSOR);",
          "4309:   ++YYCURSOR;",
          "4310:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4311:    goto yy186;",
          "4312:   }",
          "4313:   YYDEBUG(339, *YYCURSOR);",
          "4314:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4315: #line 1652 \"Zend/zend_language_scanner.l\"",
          "4316:   {",
          "4317:  const char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;",
          "4318:  const char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;",
          "4319:  size_t len = 0;",
          "4321:  if (class_name) {",
          "4322:   len += strlen(class_name) + 2;",
          "4323:  }",
          "4324:  if (func_name) {",
          "4325:   len += strlen(func_name);",
          "4326:  }",
          "4328:  zendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",",
          "4329:   class_name ? class_name : \"\",",
          "4330:   class_name && func_name ? \"::\" : \"\",",
          "4331:   func_name ? func_name : \"\"",
          "4332:   );",
          "4333:  zendlval->type = IS_STRING;",
          "4334:  return T_METHOD_C;",
          "4335: }",
          "4336: #line 4337 \"Zend/zend_language_scanner.c\"",
          "4337: yy340:",
          "4338:   YYDEBUG(340, *YYCURSOR);",
          "4339:   yych = *++YYCURSOR;",
          "4340:   if (yych == 'L') goto yy351;",
          "4341:   if (yych == 'l') goto yy351;",
          "4342:   goto yy187;",
          "4343: yy341:",
          "4344:   YYDEBUG(341, *YYCURSOR);",
          "4345:   yych = *++YYCURSOR;",
          "4346:   if (yych == 'N') goto yy342;",
          "4347:   if (yych != 'n') goto yy187;",
          "4348: yy342:",
          "4349:   YYDEBUG(342, *YYCURSOR);",
          "4350:   yych = *++YYCURSOR;",
          "4351:   if (yych == 'C') goto yy343;",
          "4352:   if (yych != 'c') goto yy187;",
          "4353: yy343:",
          "4354:   YYDEBUG(343, *YYCURSOR);",
          "4355:   yych = *++YYCURSOR;",
          "4356:   if (yych == 'T') goto yy344;",
          "4357:   if (yych != 't') goto yy187;",
          "4358: yy344:",
          "4359:   YYDEBUG(344, *YYCURSOR);",
          "4360:   yych = *++YYCURSOR;",
          "4361:   if (yych == 'I') goto yy345;",
          "4362:   if (yych != 'i') goto yy187;",
          "4363: yy345:",
          "4364:   YYDEBUG(345, *YYCURSOR);",
          "4365:   yych = *++YYCURSOR;",
          "4366:   if (yych == 'O') goto yy346;",
          "4367:   if (yych != 'o') goto yy187;",
          "4368: yy346:",
          "4369:   YYDEBUG(346, *YYCURSOR);",
          "4370:   yych = *++YYCURSOR;",
          "4371:   if (yych == 'N') goto yy347;",
          "4372:   if (yych != 'n') goto yy187;",
          "4373: yy347:",
          "4374:   YYDEBUG(347, *YYCURSOR);",
          "4375:   yych = *++YYCURSOR;",
          "4376:   if (yych != '_') goto yy187;",
          "4377:   YYDEBUG(348, *YYCURSOR);",
          "4378:   yych = *++YYCURSOR;",
          "4379:   if (yych != '_') goto yy187;",
          "4380:   YYDEBUG(349, *YYCURSOR);",
          "4381:   ++YYCURSOR;",
          "4382:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4383:    goto yy186;",
          "4384:   }",
          "4385:   YYDEBUG(350, *YYCURSOR);",
          "4386:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4387: #line 1636 \"Zend/zend_language_scanner.l\"",
          "4388:   {",
          "4389:  const char *func_name = NULL;",
          "4391:  if (CG(active_op_array)) {",
          "4392:   func_name = CG(active_op_array)->function_name;",
          "4393:  }",
          "4395:  if (!func_name) {",
          "4396:   func_name = \"\";",
          "4397:  }",
          "4398:  zendlval->value.str.len = strlen(func_name);",
          "4399:  zendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);",
          "4400:  zendlval->type = IS_STRING;",
          "4401:  return T_FUNC_C;",
          "4402: }",
          "4403: #line 4404 \"Zend/zend_language_scanner.c\"",
          "4404: yy351:",
          "4405:   YYDEBUG(351, *YYCURSOR);",
          "4406:   yych = *++YYCURSOR;",
          "4407:   if (yych == 'E') goto yy352;",
          "4408:   if (yych != 'e') goto yy187;",
          "4409: yy352:",
          "4410:   YYDEBUG(352, *YYCURSOR);",
          "4411:   yych = *++YYCURSOR;",
          "4412:   if (yych != '_') goto yy187;",
          "4413:   YYDEBUG(353, *YYCURSOR);",
          "4414:   yych = *++YYCURSOR;",
          "4415:   if (yych != '_') goto yy187;",
          "4416:   YYDEBUG(354, *YYCURSOR);",
          "4417:   ++YYCURSOR;",
          "4418:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4419:    goto yy186;",
          "4420:   }",
          "4421:   YYDEBUG(355, *YYCURSOR);",
          "4422:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4423: #line 1679 \"Zend/zend_language_scanner.l\"",
          "4424:   {",
          "4425:  char *filename = zend_get_compiled_filename(TSRMLS_C);",
          "4427:  if (!filename) {",
          "4428:   filename = \"\";",
          "4429:  }",
          "4430:  zendlval->value.str.len = strlen(filename);",
          "4431:  zendlval->value.str.val = estrndup(filename, zendlval->value.str.len);",
          "4432:  zendlval->type = IS_STRING;",
          "4433:  return T_FILE;",
          "4434: }",
          "4435: #line 4436 \"Zend/zend_language_scanner.c\"",
          "4436: yy356:",
          "4437:   YYDEBUG(356, *YYCURSOR);",
          "4438:   yych = *++YYCURSOR;",
          "4439:   if (yych == 'A') goto yy357;",
          "4440:   if (yych != 'a') goto yy187;",
          "4441: yy357:",
          "4442:   YYDEBUG(357, *YYCURSOR);",
          "4443:   yych = *++YYCURSOR;",
          "4444:   if (yych == 'I') goto yy358;",
          "4445:   if (yych != 'i') goto yy187;",
          "4446: yy358:",
          "4447:   YYDEBUG(358, *YYCURSOR);",
          "4448:   yych = *++YYCURSOR;",
          "4449:   if (yych == 'T') goto yy359;",
          "4450:   if (yych != 't') goto yy187;",
          "4451: yy359:",
          "4452:   YYDEBUG(359, *YYCURSOR);",
          "4453:   yych = *++YYCURSOR;",
          "4454:   if (yych != '_') goto yy187;",
          "4455:   YYDEBUG(360, *YYCURSOR);",
          "4456:   yych = *++YYCURSOR;",
          "4457:   if (yych != '_') goto yy187;",
          "4458:   YYDEBUG(361, *YYCURSOR);",
          "4459:   ++YYCURSOR;",
          "4460:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4461:    goto yy186;",
          "4462:   }",
          "4463:   YYDEBUG(362, *YYCURSOR);",
          "4464:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4465: #line 1616 \"Zend/zend_language_scanner.l\"",
          "4466:   {",
          "4467:  const char *trait_name = NULL;",
          "4469:  if (CG(active_class_entry)",
          "4470:   && (ZEND_ACC_TRAIT ==",
          "4471:    (CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {",
          "4472:   trait_name = CG(active_class_entry)->name;",
          "4473:  }",
          "4475:  if (!trait_name) {",
          "4476:   trait_name = \"\";",
          "4477:  }",
          "4479:  zendlval->value.str.len = strlen(trait_name);",
          "4480:  zendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);",
          "4481:  zendlval->type = IS_STRING;",
          "4483:  return T_TRAIT_C;",
          "4484: }",
          "4485: #line 4486 \"Zend/zend_language_scanner.c\"",
          "4486: yy363:",
          "4487:   YYDEBUG(363, *YYCURSOR);",
          "4488:   yych = *++YYCURSOR;",
          "4489:   if (yych == 'A') goto yy364;",
          "4490:   if (yych != 'a') goto yy187;",
          "4491: yy364:",
          "4492:   YYDEBUG(364, *YYCURSOR);",
          "4493:   yych = *++YYCURSOR;",
          "4494:   if (yych == 'S') goto yy365;",
          "4495:   if (yych != 's') goto yy187;",
          "4496: yy365:",
          "4497:   YYDEBUG(365, *YYCURSOR);",
          "4498:   yych = *++YYCURSOR;",
          "4499:   if (yych == 'S') goto yy366;",
          "4500:   if (yych != 's') goto yy187;",
          "4501: yy366:",
          "4502:   YYDEBUG(366, *YYCURSOR);",
          "4503:   yych = *++YYCURSOR;",
          "4504:   if (yych != '_') goto yy187;",
          "4505:   YYDEBUG(367, *YYCURSOR);",
          "4506:   yych = *++YYCURSOR;",
          "4507:   if (yych != '_') goto yy187;",
          "4508:   YYDEBUG(368, *YYCURSOR);",
          "4509:   ++YYCURSOR;",
          "4510:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4511:    goto yy186;",
          "4512:   }",
          "4513:   YYDEBUG(369, *YYCURSOR);",
          "4514:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4515: #line 1589 \"Zend/zend_language_scanner.l\"",
          "4516:   {",
          "4517:  const char *class_name = NULL;",
          "4519:  if (CG(active_class_entry)",
          "4520:   && (ZEND_ACC_TRAIT ==",
          "4521:    (CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {",
          "4524:   zendlval->value.str.len = sizeof(\"__CLASS__\")-1;",
          "4525:   zendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);",
          "4526:   zendlval->type = IS_CONSTANT;",
          "4527:  } else {",
          "4528:   if (CG(active_class_entry)) {",
          "4529:    class_name = CG(active_class_entry)->name;",
          "4530:   }",
          "4532:   if (!class_name) {",
          "4533:    class_name = \"\";",
          "4534:   }",
          "4536:   zendlval->value.str.len = strlen(class_name);",
          "4537:   zendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);",
          "4538:   zendlval->type = IS_STRING;",
          "4539:  }",
          "4540:  return T_CLASS_C;",
          "4541: }",
          "4542: #line 4543 \"Zend/zend_language_scanner.c\"",
          "4543: yy370:",
          "4544:   YYDEBUG(370, *YYCURSOR);",
          "4545:   yych = *++YYCURSOR;",
          "4546:   if (yych == 'L') goto yy371;",
          "4547:   if (yych != 'l') goto yy187;",
          "4548: yy371:",
          "4549:   YYDEBUG(371, *YYCURSOR);",
          "4550:   yych = *++YYCURSOR;",
          "4551:   if (yych == 'T') goto yy372;",
          "4552:   if (yych != 't') goto yy187;",
          "4553: yy372:",
          "4554:   YYDEBUG(372, *YYCURSOR);",
          "4555:   yych = *++YYCURSOR;",
          "4556:   if (yych != '_') goto yy187;",
          "4557:   YYDEBUG(373, *YYCURSOR);",
          "4558:   yych = *++YYCURSOR;",
          "4559:   if (yych == 'C') goto yy374;",
          "4560:   if (yych != 'c') goto yy187;",
          "4561: yy374:",
          "4562:   YYDEBUG(374, *YYCURSOR);",
          "4563:   yych = *++YYCURSOR;",
          "4564:   if (yych == 'O') goto yy375;",
          "4565:   if (yych != 'o') goto yy187;",
          "4566: yy375:",
          "4567:   YYDEBUG(375, *YYCURSOR);",
          "4568:   yych = *++YYCURSOR;",
          "4569:   if (yych == 'M') goto yy376;",
          "4570:   if (yych != 'm') goto yy187;",
          "4571: yy376:",
          "4572:   YYDEBUG(376, *YYCURSOR);",
          "4573:   yych = *++YYCURSOR;",
          "4574:   if (yych == 'P') goto yy377;",
          "4575:   if (yych != 'p') goto yy187;",
          "4576: yy377:",
          "4577:   YYDEBUG(377, *YYCURSOR);",
          "4578:   yych = *++YYCURSOR;",
          "4579:   if (yych == 'I') goto yy378;",
          "4580:   if (yych != 'i') goto yy187;",
          "4581: yy378:",
          "4582:   YYDEBUG(378, *YYCURSOR);",
          "4583:   yych = *++YYCURSOR;",
          "4584:   if (yych == 'L') goto yy379;",
          "4585:   if (yych != 'l') goto yy187;",
          "4586: yy379:",
          "4587:   YYDEBUG(379, *YYCURSOR);",
          "4588:   yych = *++YYCURSOR;",
          "4589:   if (yych == 'E') goto yy380;",
          "4590:   if (yych != 'e') goto yy187;",
          "4591: yy380:",
          "4592:   YYDEBUG(380, *YYCURSOR);",
          "4593:   yych = *++YYCURSOR;",
          "4594:   if (yych == 'R') goto yy381;",
          "4595:   if (yych != 'r') goto yy187;",
          "4596: yy381:",
          "4597:   YYDEBUG(381, *YYCURSOR);",
          "4598:   ++YYCURSOR;",
          "4599:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4600:    goto yy186;",
          "4601:   }",
          "4602:   YYDEBUG(382, *YYCURSOR);",
          "4603:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4604: #line 1298 \"Zend/zend_language_scanner.l\"",
          "4605:   {",
          "4606:  return T_HALT_COMPILER;",
          "4607: }",
          "4608: #line 4609 \"Zend/zend_language_scanner.c\"",
          "4609: yy383:",
          "4610:   YYDEBUG(383, *YYCURSOR);",
          "4611:   yych = *++YYCURSOR;",
          "4612:   if (yych == 'S') goto yy387;",
          "4613:   if (yych == 's') goto yy387;",
          "4614:   goto yy187;",
          "4615: yy384:",
          "4616:   YYDEBUG(384, *YYCURSOR);",
          "4617:   yych = *++YYCURSOR;",
          "4618:   if (yych == 'E') goto yy385;",
          "4619:   if (yych != 'e') goto yy187;",
          "4620: yy385:",
          "4621:   YYDEBUG(385, *YYCURSOR);",
          "4622:   ++YYCURSOR;",
          "4623:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4624:    goto yy186;",
          "4625:   }",
          "4626:   YYDEBUG(386, *YYCURSOR);",
          "4627:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4628: #line 1278 \"Zend/zend_language_scanner.l\"",
          "4629:   {",
          "4630:  return T_USE;",
          "4631: }",
          "4632: #line 4633 \"Zend/zend_language_scanner.c\"",
          "4633: yy387:",
          "4634:   YYDEBUG(387, *YYCURSOR);",
          "4635:   yych = *++YYCURSOR;",
          "4636:   if (yych == 'E') goto yy388;",
          "4637:   if (yych != 'e') goto yy187;",
          "4638: yy388:",
          "4639:   YYDEBUG(388, *YYCURSOR);",
          "4640:   yych = *++YYCURSOR;",
          "4641:   if (yych == 'T') goto yy389;",
          "4642:   if (yych != 't') goto yy187;",
          "4643: yy389:",
          "4644:   YYDEBUG(389, *YYCURSOR);",
          "4645:   ++YYCURSOR;",
          "4646:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "4647:    goto yy186;",
          "4648:   }",
          "4649:   YYDEBUG(390, *YYCURSOR);",
          "4650:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4651: #line 1326 \"Zend/zend_language_scanner.l\"",
          "4652:   {",
          "4653:  return T_UNSET;",
          "4654: }",
          "4655: #line 4656 \"Zend/zend_language_scanner.c\"",
          "4656: yy391:",
          "4657:   YYDEBUG(391, *YYCURSOR);",
          "4658:   ++YYCURSOR;",
          "4659:   YYFILL(7);",
          "4660:   yych = *YYCURSOR;",
          "4661: yy392:",
          "4662:   YYDEBUG(392, *YYCURSOR);",
          "4663:   if (yych <= 'S') {",
          "4664:    if (yych <= 'D') {",
          "4665:     if (yych <= ' ') {",
          "4666:      if (yych == '\\t') goto yy391;",
          "4667:      if (yych <= 0x1F) goto yy194;",
          "4668:      goto yy391;",
          "4669:     } else {",
          "4670:      if (yych <= 'A') {",
          "4671:       if (yych <= '@') goto yy194;",
          "4672:       goto yy396;",
          "4673:      } else {",
          "4674:       if (yych <= 'B') goto yy394;",
          "4675:       if (yych <= 'C') goto yy194;",
          "4676:       goto yy399;",
          "4677:      }",
          "4678:     }",
          "4679:    } else {",
          "4680:     if (yych <= 'I') {",
          "4681:      if (yych == 'F') goto yy400;",
          "4682:      if (yych <= 'H') goto yy194;",
          "4683:      goto yy401;",
          "4684:     } else {",
          "4685:      if (yych <= 'O') {",
          "4686:       if (yych <= 'N') goto yy194;",
          "4687:       goto yy395;",
          "4688:      } else {",
          "4689:       if (yych <= 'Q') goto yy194;",
          "4690:       if (yych <= 'R') goto yy398;",
          "4691:       goto yy397;",
          "4692:      }",
          "4693:     }",
          "4694:    }",
          "4695:   } else {",
          "4696:    if (yych <= 'f') {",
          "4697:     if (yych <= 'a') {",
          "4698:      if (yych == 'U') goto yy393;",
          "4699:      if (yych <= '`') goto yy194;",
          "4700:      goto yy396;",
          "4701:     } else {",
          "4702:      if (yych <= 'c') {",
          "4703:       if (yych <= 'b') goto yy394;",
          "4704:       goto yy194;",
          "4705:      } else {",
          "4706:       if (yych <= 'd') goto yy399;",
          "4707:       if (yych <= 'e') goto yy194;",
          "4708:       goto yy400;",
          "4709:      }",
          "4710:     }",
          "4711:    } else {",
          "4712:     if (yych <= 'q') {",
          "4713:      if (yych <= 'i') {",
          "4714:       if (yych <= 'h') goto yy194;",
          "4715:       goto yy401;",
          "4716:      } else {",
          "4717:       if (yych == 'o') goto yy395;",
          "4718:       goto yy194;",
          "4719:      }",
          "4720:     } else {",
          "4721:      if (yych <= 's') {",
          "4722:       if (yych <= 'r') goto yy398;",
          "4723:       goto yy397;",
          "4724:      } else {",
          "4725:       if (yych != 'u') goto yy194;",
          "4726:      }",
          "4727:     }",
          "4728:    }",
          "4729:   }",
          "4730: yy393:",
          "4731:   YYDEBUG(393, *YYCURSOR);",
          "4732:   yych = *++YYCURSOR;",
          "4733:   if (yych == 'N') goto yy460;",
          "4734:   if (yych == 'n') goto yy460;",
          "4735:   goto yy194;",
          "4736: yy394:",
          "4737:   YYDEBUG(394, *YYCURSOR);",
          "4738:   yych = *++YYCURSOR;",
          "4739:   if (yych <= 'O') {",
          "4740:    if (yych == 'I') goto yy447;",
          "4741:    if (yych <= 'N') goto yy194;",
          "4742:    goto yy448;",
          "4743:   } else {",
          "4744:    if (yych <= 'i') {",
          "4745:     if (yych <= 'h') goto yy194;",
          "4746:     goto yy447;",
          "4747:    } else {",
          "4748:     if (yych == 'o') goto yy448;",
          "4749:     goto yy194;",
          "4750:    }",
          "4751:   }",
          "4752: yy395:",
          "4753:   YYDEBUG(395, *YYCURSOR);",
          "4754:   yych = *++YYCURSOR;",
          "4755:   if (yych == 'B') goto yy439;",
          "4756:   if (yych == 'b') goto yy439;",
          "4757:   goto yy194;",
          "4758: yy396:",
          "4759:   YYDEBUG(396, *YYCURSOR);",
          "4760:   yych = *++YYCURSOR;",
          "4761:   if (yych == 'R') goto yy432;",
          "4762:   if (yych == 'r') goto yy432;",
          "4763:   goto yy194;",
          "4764: yy397:",
          "4765:   YYDEBUG(397, *YYCURSOR);",
          "4766:   yych = *++YYCURSOR;",
          "4767:   if (yych == 'T') goto yy424;",
          "4768:   if (yych == 't') goto yy424;",
          "4769:   goto yy194;",
          "4770: yy398:",
          "4771:   YYDEBUG(398, *YYCURSOR);",
          "4772:   yych = *++YYCURSOR;",
          "4773:   if (yych == 'E') goto yy422;",
          "4774:   if (yych == 'e') goto yy422;",
          "4775:   goto yy194;",
          "4776: yy399:",
          "4777:   YYDEBUG(399, *YYCURSOR);",
          "4778:   yych = *++YYCURSOR;",
          "4779:   if (yych == 'O') goto yy418;",
          "4780:   if (yych == 'o') goto yy418;",
          "4781:   goto yy194;",
          "4782: yy400:",
          "4783:   YYDEBUG(400, *YYCURSOR);",
          "4784:   yych = *++YYCURSOR;",
          "4785:   if (yych == 'L') goto yy411;",
          "4786:   if (yych == 'l') goto yy411;",
          "4787:   goto yy194;",
          "4788: yy401:",
          "4789:   YYDEBUG(401, *YYCURSOR);",
          "4790:   yych = *++YYCURSOR;",
          "4791:   if (yych == 'N') goto yy402;",
          "4792:   if (yych != 'n') goto yy194;",
          "4793: yy402:",
          "4794:   YYDEBUG(402, *YYCURSOR);",
          "4795:   yych = *++YYCURSOR;",
          "4796:   if (yych == 'T') goto yy403;",
          "4797:   if (yych != 't') goto yy194;",
          "4798: yy403:",
          "4799:   YYDEBUG(403, *YYCURSOR);",
          "4800:   yych = *++YYCURSOR;",
          "4801:   if (yych == 'E') goto yy404;",
          "4802:   if (yych != 'e') goto yy406;",
          "4803: yy404:",
          "4804:   YYDEBUG(404, *YYCURSOR);",
          "4805:   yych = *++YYCURSOR;",
          "4806:   if (yych == 'G') goto yy409;",
          "4807:   if (yych == 'g') goto yy409;",
          "4808:   goto yy194;",
          "4809: yy405:",
          "4810:   YYDEBUG(405, *YYCURSOR);",
          "4811:   ++YYCURSOR;",
          "4812:   YYFILL(1);",
          "4813:   yych = *YYCURSOR;",
          "4814: yy406:",
          "4815:   YYDEBUG(406, *YYCURSOR);",
          "4816:   if (yych <= 0x1F) {",
          "4817:    if (yych == '\\t') goto yy405;",
          "4818:    goto yy194;",
          "4819:   } else {",
          "4820:    if (yych <= ' ') goto yy405;",
          "4821:    if (yych != ')') goto yy194;",
          "4822:   }",
          "4823:   YYDEBUG(407, *YYCURSOR);",
          "4824:   ++YYCURSOR;",
          "4825:   YYDEBUG(408, *YYCURSOR);",
          "4826:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4827: #line 1226 \"Zend/zend_language_scanner.l\"",
          "4828:   {",
          "4829:  return T_INT_CAST;",
          "4830: }",
          "4831: #line 4832 \"Zend/zend_language_scanner.c\"",
          "4832: yy409:",
          "4833:   YYDEBUG(409, *YYCURSOR);",
          "4834:   yych = *++YYCURSOR;",
          "4835:   if (yych == 'E') goto yy410;",
          "4836:   if (yych != 'e') goto yy194;",
          "4837: yy410:",
          "4838:   YYDEBUG(410, *YYCURSOR);",
          "4839:   yych = *++YYCURSOR;",
          "4840:   if (yych == 'R') goto yy405;",
          "4841:   if (yych == 'r') goto yy405;",
          "4842:   goto yy194;",
          "4843: yy411:",
          "4844:   YYDEBUG(411, *YYCURSOR);",
          "4845:   yych = *++YYCURSOR;",
          "4846:   if (yych == 'O') goto yy412;",
          "4847:   if (yych != 'o') goto yy194;",
          "4848: yy412:",
          "4849:   YYDEBUG(412, *YYCURSOR);",
          "4850:   yych = *++YYCURSOR;",
          "4851:   if (yych == 'A') goto yy413;",
          "4852:   if (yych != 'a') goto yy194;",
          "4853: yy413:",
          "4854:   YYDEBUG(413, *YYCURSOR);",
          "4855:   yych = *++YYCURSOR;",
          "4856:   if (yych == 'T') goto yy414;",
          "4857:   if (yych != 't') goto yy194;",
          "4858: yy414:",
          "4859:   YYDEBUG(414, *YYCURSOR);",
          "4860:   ++YYCURSOR;",
          "4861:   YYFILL(1);",
          "4862:   yych = *YYCURSOR;",
          "4863:   YYDEBUG(415, *YYCURSOR);",
          "4864:   if (yych <= 0x1F) {",
          "4865:    if (yych == '\\t') goto yy414;",
          "4866:    goto yy194;",
          "4867:   } else {",
          "4868:    if (yych <= ' ') goto yy414;",
          "4869:    if (yych != ')') goto yy194;",
          "4870:   }",
          "4871:   YYDEBUG(416, *YYCURSOR);",
          "4872:   ++YYCURSOR;",
          "4873:   YYDEBUG(417, *YYCURSOR);",
          "4874:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4875: #line 1230 \"Zend/zend_language_scanner.l\"",
          "4876:   {",
          "4877:  return T_DOUBLE_CAST;",
          "4878: }",
          "4879: #line 4880 \"Zend/zend_language_scanner.c\"",
          "4880: yy418:",
          "4881:   YYDEBUG(418, *YYCURSOR);",
          "4882:   yych = *++YYCURSOR;",
          "4883:   if (yych == 'U') goto yy419;",
          "4884:   if (yych != 'u') goto yy194;",
          "4885: yy419:",
          "4886:   YYDEBUG(419, *YYCURSOR);",
          "4887:   yych = *++YYCURSOR;",
          "4888:   if (yych == 'B') goto yy420;",
          "4889:   if (yych != 'b') goto yy194;",
          "4890: yy420:",
          "4891:   YYDEBUG(420, *YYCURSOR);",
          "4892:   yych = *++YYCURSOR;",
          "4893:   if (yych == 'L') goto yy421;",
          "4894:   if (yych != 'l') goto yy194;",
          "4895: yy421:",
          "4896:   YYDEBUG(421, *YYCURSOR);",
          "4897:   yych = *++YYCURSOR;",
          "4898:   if (yych == 'E') goto yy414;",
          "4899:   if (yych == 'e') goto yy414;",
          "4900:   goto yy194;",
          "4901: yy422:",
          "4902:   YYDEBUG(422, *YYCURSOR);",
          "4903:   yych = *++YYCURSOR;",
          "4904:   if (yych == 'A') goto yy423;",
          "4905:   if (yych != 'a') goto yy194;",
          "4906: yy423:",
          "4907:   YYDEBUG(423, *YYCURSOR);",
          "4908:   yych = *++YYCURSOR;",
          "4909:   if (yych == 'L') goto yy414;",
          "4910:   if (yych == 'l') goto yy414;",
          "4911:   goto yy194;",
          "4912: yy424:",
          "4913:   YYDEBUG(424, *YYCURSOR);",
          "4914:   yych = *++YYCURSOR;",
          "4915:   if (yych == 'R') goto yy425;",
          "4916:   if (yych != 'r') goto yy194;",
          "4917: yy425:",
          "4918:   YYDEBUG(425, *YYCURSOR);",
          "4919:   yych = *++YYCURSOR;",
          "4920:   if (yych == 'I') goto yy426;",
          "4921:   if (yych != 'i') goto yy194;",
          "4922: yy426:",
          "4923:   YYDEBUG(426, *YYCURSOR);",
          "4924:   yych = *++YYCURSOR;",
          "4925:   if (yych == 'N') goto yy427;",
          "4926:   if (yych != 'n') goto yy194;",
          "4927: yy427:",
          "4928:   YYDEBUG(427, *YYCURSOR);",
          "4929:   yych = *++YYCURSOR;",
          "4930:   if (yych == 'G') goto yy428;",
          "4931:   if (yych != 'g') goto yy194;",
          "4932: yy428:",
          "4933:   YYDEBUG(428, *YYCURSOR);",
          "4934:   ++YYCURSOR;",
          "4935:   YYFILL(1);",
          "4936:   yych = *YYCURSOR;",
          "4937:   YYDEBUG(429, *YYCURSOR);",
          "4938:   if (yych <= 0x1F) {",
          "4939:    if (yych == '\\t') goto yy428;",
          "4940:    goto yy194;",
          "4941:   } else {",
          "4942:    if (yych <= ' ') goto yy428;",
          "4943:    if (yych != ')') goto yy194;",
          "4944:   }",
          "4945:   YYDEBUG(430, *YYCURSOR);",
          "4946:   ++YYCURSOR;",
          "4947:   YYDEBUG(431, *YYCURSOR);",
          "4948:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4949: #line 1234 \"Zend/zend_language_scanner.l\"",
          "4950:   {",
          "4951:  return T_STRING_CAST;",
          "4952: }",
          "4953: #line 4954 \"Zend/zend_language_scanner.c\"",
          "4954: yy432:",
          "4955:   YYDEBUG(432, *YYCURSOR);",
          "4956:   yych = *++YYCURSOR;",
          "4957:   if (yych == 'R') goto yy433;",
          "4958:   if (yych != 'r') goto yy194;",
          "4959: yy433:",
          "4960:   YYDEBUG(433, *YYCURSOR);",
          "4961:   yych = *++YYCURSOR;",
          "4962:   if (yych == 'A') goto yy434;",
          "4963:   if (yych != 'a') goto yy194;",
          "4964: yy434:",
          "4965:   YYDEBUG(434, *YYCURSOR);",
          "4966:   yych = *++YYCURSOR;",
          "4967:   if (yych == 'Y') goto yy435;",
          "4968:   if (yych != 'y') goto yy194;",
          "4969: yy435:",
          "4970:   YYDEBUG(435, *YYCURSOR);",
          "4971:   ++YYCURSOR;",
          "4972:   YYFILL(1);",
          "4973:   yych = *YYCURSOR;",
          "4974:   YYDEBUG(436, *YYCURSOR);",
          "4975:   if (yych <= 0x1F) {",
          "4976:    if (yych == '\\t') goto yy435;",
          "4977:    goto yy194;",
          "4978:   } else {",
          "4979:    if (yych <= ' ') goto yy435;",
          "4980:    if (yych != ')') goto yy194;",
          "4981:   }",
          "4982:   YYDEBUG(437, *YYCURSOR);",
          "4983:   ++YYCURSOR;",
          "4984:   YYDEBUG(438, *YYCURSOR);",
          "4985:   yyleng = YYCURSOR - SCNG(yy_text);",
          "4986: #line 1238 \"Zend/zend_language_scanner.l\"",
          "4987:   {",
          "4988:  return T_ARRAY_CAST;",
          "4989: }",
          "4990: #line 4991 \"Zend/zend_language_scanner.c\"",
          "4991: yy439:",
          "4992:   YYDEBUG(439, *YYCURSOR);",
          "4993:   yych = *++YYCURSOR;",
          "4994:   if (yych == 'J') goto yy440;",
          "4995:   if (yych != 'j') goto yy194;",
          "4996: yy440:",
          "4997:   YYDEBUG(440, *YYCURSOR);",
          "4998:   yych = *++YYCURSOR;",
          "4999:   if (yych == 'E') goto yy441;",
          "5000:   if (yych != 'e') goto yy194;",
          "5001: yy441:",
          "5002:   YYDEBUG(441, *YYCURSOR);",
          "5003:   yych = *++YYCURSOR;",
          "5004:   if (yych == 'C') goto yy442;",
          "5005:   if (yych != 'c') goto yy194;",
          "5006: yy442:",
          "5007:   YYDEBUG(442, *YYCURSOR);",
          "5008:   yych = *++YYCURSOR;",
          "5009:   if (yych == 'T') goto yy443;",
          "5010:   if (yych != 't') goto yy194;",
          "5011: yy443:",
          "5012:   YYDEBUG(443, *YYCURSOR);",
          "5013:   ++YYCURSOR;",
          "5014:   YYFILL(1);",
          "5015:   yych = *YYCURSOR;",
          "5016:   YYDEBUG(444, *YYCURSOR);",
          "5017:   if (yych <= 0x1F) {",
          "5018:    if (yych == '\\t') goto yy443;",
          "5019:    goto yy194;",
          "5020:   } else {",
          "5021:    if (yych <= ' ') goto yy443;",
          "5022:    if (yych != ')') goto yy194;",
          "5023:   }",
          "5024:   YYDEBUG(445, *YYCURSOR);",
          "5025:   ++YYCURSOR;",
          "5026:   YYDEBUG(446, *YYCURSOR);",
          "5027:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5028: #line 1242 \"Zend/zend_language_scanner.l\"",
          "5029:   {",
          "5030:  return T_OBJECT_CAST;",
          "5031: }",
          "5032: #line 5033 \"Zend/zend_language_scanner.c\"",
          "5033: yy447:",
          "5034:   YYDEBUG(447, *YYCURSOR);",
          "5035:   yych = *++YYCURSOR;",
          "5036:   if (yych == 'N') goto yy457;",
          "5037:   if (yych == 'n') goto yy457;",
          "5038:   goto yy194;",
          "5039: yy448:",
          "5040:   YYDEBUG(448, *YYCURSOR);",
          "5041:   yych = *++YYCURSOR;",
          "5042:   if (yych == 'O') goto yy449;",
          "5043:   if (yych != 'o') goto yy194;",
          "5044: yy449:",
          "5045:   YYDEBUG(449, *YYCURSOR);",
          "5046:   yych = *++YYCURSOR;",
          "5047:   if (yych == 'L') goto yy450;",
          "5048:   if (yych != 'l') goto yy194;",
          "5049: yy450:",
          "5050:   YYDEBUG(450, *YYCURSOR);",
          "5051:   yych = *++YYCURSOR;",
          "5052:   if (yych == 'E') goto yy455;",
          "5053:   if (yych == 'e') goto yy455;",
          "5054:   goto yy452;",
          "5055: yy451:",
          "5056:   YYDEBUG(451, *YYCURSOR);",
          "5057:   ++YYCURSOR;",
          "5058:   YYFILL(1);",
          "5059:   yych = *YYCURSOR;",
          "5060: yy452:",
          "5061:   YYDEBUG(452, *YYCURSOR);",
          "5062:   if (yych <= 0x1F) {",
          "5063:    if (yych == '\\t') goto yy451;",
          "5064:    goto yy194;",
          "5065:   } else {",
          "5066:    if (yych <= ' ') goto yy451;",
          "5067:    if (yych != ')') goto yy194;",
          "5068:   }",
          "5069:   YYDEBUG(453, *YYCURSOR);",
          "5070:   ++YYCURSOR;",
          "5071:   YYDEBUG(454, *YYCURSOR);",
          "5072:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5073: #line 1246 \"Zend/zend_language_scanner.l\"",
          "5074:   {",
          "5075:  return T_BOOL_CAST;",
          "5076: }",
          "5077: #line 5078 \"Zend/zend_language_scanner.c\"",
          "5078: yy455:",
          "5079:   YYDEBUG(455, *YYCURSOR);",
          "5080:   yych = *++YYCURSOR;",
          "5081:   if (yych == 'A') goto yy456;",
          "5082:   if (yych != 'a') goto yy194;",
          "5083: yy456:",
          "5084:   YYDEBUG(456, *YYCURSOR);",
          "5085:   yych = *++YYCURSOR;",
          "5086:   if (yych == 'N') goto yy451;",
          "5087:   if (yych == 'n') goto yy451;",
          "5088:   goto yy194;",
          "5089: yy457:",
          "5090:   YYDEBUG(457, *YYCURSOR);",
          "5091:   yych = *++YYCURSOR;",
          "5092:   if (yych == 'A') goto yy458;",
          "5093:   if (yych != 'a') goto yy194;",
          "5094: yy458:",
          "5095:   YYDEBUG(458, *YYCURSOR);",
          "5096:   yych = *++YYCURSOR;",
          "5097:   if (yych == 'R') goto yy459;",
          "5098:   if (yych != 'r') goto yy194;",
          "5099: yy459:",
          "5100:   YYDEBUG(459, *YYCURSOR);",
          "5101:   yych = *++YYCURSOR;",
          "5102:   if (yych == 'Y') goto yy428;",
          "5103:   if (yych == 'y') goto yy428;",
          "5104:   goto yy194;",
          "5105: yy460:",
          "5106:   YYDEBUG(460, *YYCURSOR);",
          "5107:   yych = *++YYCURSOR;",
          "5108:   if (yych == 'S') goto yy461;",
          "5109:   if (yych != 's') goto yy194;",
          "5110: yy461:",
          "5111:   YYDEBUG(461, *YYCURSOR);",
          "5112:   yych = *++YYCURSOR;",
          "5113:   if (yych == 'E') goto yy462;",
          "5114:   if (yych != 'e') goto yy194;",
          "5115: yy462:",
          "5116:   YYDEBUG(462, *YYCURSOR);",
          "5117:   yych = *++YYCURSOR;",
          "5118:   if (yych == 'T') goto yy463;",
          "5119:   if (yych != 't') goto yy194;",
          "5120: yy463:",
          "5121:   YYDEBUG(463, *YYCURSOR);",
          "5122:   ++YYCURSOR;",
          "5123:   YYFILL(1);",
          "5124:   yych = *YYCURSOR;",
          "5125:   YYDEBUG(464, *YYCURSOR);",
          "5126:   if (yych <= 0x1F) {",
          "5127:    if (yych == '\\t') goto yy463;",
          "5128:    goto yy194;",
          "5129:   } else {",
          "5130:    if (yych <= ' ') goto yy463;",
          "5131:    if (yych != ')') goto yy194;",
          "5132:   }",
          "5133:   YYDEBUG(465, *YYCURSOR);",
          "5134:   ++YYCURSOR;",
          "5135:   YYDEBUG(466, *YYCURSOR);",
          "5136:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5137: #line 1250 \"Zend/zend_language_scanner.l\"",
          "5138:   {",
          "5139:  return T_UNSET_CAST;",
          "5140: }",
          "5141: #line 5142 \"Zend/zend_language_scanner.c\"",
          "5142: yy467:",
          "5143:   YYDEBUG(467, *YYCURSOR);",
          "5144:   yych = *++YYCURSOR;",
          "5145:   if (yych == 'R') goto yy468;",
          "5146:   if (yych != 'r') goto yy187;",
          "5147: yy468:",
          "5148:   YYDEBUG(468, *YYCURSOR);",
          "5149:   ++YYCURSOR;",
          "5150:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5151:    goto yy186;",
          "5152:   }",
          "5153:   YYDEBUG(469, *YYCURSOR);",
          "5154:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5155: #line 1222 \"Zend/zend_language_scanner.l\"",
          "5156:   {",
          "5157:  return T_VAR;",
          "5158: }",
          "5159: #line 5160 \"Zend/zend_language_scanner.c\"",
          "5160: yy470:",
          "5161:   YYDEBUG(470, *YYCURSOR);",
          "5162:   yych = *++YYCURSOR;",
          "5163:   if (yych == 'M') goto yy474;",
          "5164:   if (yych == 'm') goto yy474;",
          "5165:   goto yy187;",
          "5166: yy471:",
          "5167:   YYDEBUG(471, *YYCURSOR);",
          "5168:   yych = *++YYCURSOR;",
          "5169:   if (yych == 'W') goto yy472;",
          "5170:   if (yych != 'w') goto yy187;",
          "5171: yy472:",
          "5172:   YYDEBUG(472, *YYCURSOR);",
          "5173:   ++YYCURSOR;",
          "5174:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5175:    goto yy186;",
          "5176:   }",
          "5177:   YYDEBUG(473, *YYCURSOR);",
          "5178:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5179: #line 1214 \"Zend/zend_language_scanner.l\"",
          "5180:   {",
          "5181:  return T_NEW;",
          "5182: }",
          "5183: #line 5184 \"Zend/zend_language_scanner.c\"",
          "5184: yy474:",
          "5185:   YYDEBUG(474, *YYCURSOR);",
          "5186:   yych = *++YYCURSOR;",
          "5187:   if (yych == 'E') goto yy475;",
          "5188:   if (yych != 'e') goto yy187;",
          "5189: yy475:",
          "5190:   YYDEBUG(475, *YYCURSOR);",
          "5191:   yych = *++YYCURSOR;",
          "5192:   if (yych == 'S') goto yy476;",
          "5193:   if (yych != 's') goto yy187;",
          "5194: yy476:",
          "5195:   YYDEBUG(476, *YYCURSOR);",
          "5196:   yych = *++YYCURSOR;",
          "5197:   if (yych == 'P') goto yy477;",
          "5198:   if (yych != 'p') goto yy187;",
          "5199: yy477:",
          "5200:   YYDEBUG(477, *YYCURSOR);",
          "5201:   yych = *++YYCURSOR;",
          "5202:   if (yych == 'A') goto yy478;",
          "5203:   if (yych != 'a') goto yy187;",
          "5204: yy478:",
          "5205:   YYDEBUG(478, *YYCURSOR);",
          "5206:   yych = *++YYCURSOR;",
          "5207:   if (yych == 'C') goto yy479;",
          "5208:   if (yych != 'c') goto yy187;",
          "5209: yy479:",
          "5210:   YYDEBUG(479, *YYCURSOR);",
          "5211:   yych = *++YYCURSOR;",
          "5212:   if (yych == 'E') goto yy480;",
          "5213:   if (yych != 'e') goto yy187;",
          "5214: yy480:",
          "5215:   YYDEBUG(480, *YYCURSOR);",
          "5216:   ++YYCURSOR;",
          "5217:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5218:    goto yy186;",
          "5219:   }",
          "5220:   YYDEBUG(481, *YYCURSOR);",
          "5221:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5222: #line 1274 \"Zend/zend_language_scanner.l\"",
          "5223:   {",
          "5224:  return T_NAMESPACE;",
          "5225: }",
          "5226: #line 5227 \"Zend/zend_language_scanner.c\"",
          "5227: yy482:",
          "5228:   YYDEBUG(482, *YYCURSOR);",
          "5229:   ++YYCURSOR;",
          "5230:   YYDEBUG(483, *YYCURSOR);",
          "5231:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5232: #line 1206 \"Zend/zend_language_scanner.l\"",
          "5233:   {",
          "5234:  return T_PAAMAYIM_NEKUDOTAYIM;",
          "5235: }",
          "5236: #line 5237 \"Zend/zend_language_scanner.c\"",
          "5237: yy484:",
          "5238:   YYDEBUG(484, *YYCURSOR);",
          "5239:   ++YYCURSOR;",
          "5240:   YYFILL(1);",
          "5241:   yych = *YYCURSOR;",
          "5242: yy485:",
          "5243:   YYDEBUG(485, *YYCURSOR);",
          "5244:   if (yych <= '\\f') {",
          "5245:    if (yych <= 0x08) goto yy141;",
          "5246:    if (yych <= '\\n') goto yy484;",
          "5247:    goto yy141;",
          "5248:   } else {",
          "5249:    if (yych <= '\\r') goto yy484;",
          "5250:    if (yych == ' ') goto yy484;",
          "5251:    goto yy141;",
          "5252:   }",
          "5253: yy486:",
          "5254:   YYDEBUG(486, *YYCURSOR);",
          "5255:   ++YYCURSOR;",
          "5256:   YYDEBUG(487, *YYCURSOR);",
          "5257:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5258: #line 1382 \"Zend/zend_language_scanner.l\"",
          "5259:   {",
          "5260:  return T_MINUS_EQUAL;",
          "5261: }",
          "5262: #line 5263 \"Zend/zend_language_scanner.c\"",
          "5263: yy488:",
          "5264:   YYDEBUG(488, *YYCURSOR);",
          "5265:   ++YYCURSOR;",
          "5266:   YYDEBUG(489, *YYCURSOR);",
          "5267:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5268: #line 1350 \"Zend/zend_language_scanner.l\"",
          "5269:   {",
          "5270:  return T_DEC;",
          "5271: }",
          "5272: #line 5273 \"Zend/zend_language_scanner.c\"",
          "5273: yy490:",
          "5274:   YYDEBUG(490, *YYCURSOR);",
          "5275:   ++YYCURSOR;",
          "5276:   YYDEBUG(491, *YYCURSOR);",
          "5277:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5278: #line 1176 \"Zend/zend_language_scanner.l\"",
          "5279:   {",
          "5280:  yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);",
          "5281:  return T_OBJECT_OPERATOR;",
          "5282: }",
          "5283: #line 5284 \"Zend/zend_language_scanner.c\"",
          "5284: yy492:",
          "5285:   YYDEBUG(492, *YYCURSOR);",
          "5286:   yych = *++YYCURSOR;",
          "5287:   if (yych <= 'O') {",
          "5288:    if (yych == 'I') goto yy499;",
          "5289:    if (yych <= 'N') goto yy187;",
          "5290:    goto yy500;",
          "5291:   } else {",
          "5292:    if (yych <= 'i') {",
          "5293:     if (yych <= 'h') goto yy187;",
          "5294:     goto yy499;",
          "5295:    } else {",
          "5296:     if (yych == 'o') goto yy500;",
          "5297:     goto yy187;",
          "5298:    }",
          "5299:   }",
          "5300: yy493:",
          "5301:   YYDEBUG(493, *YYCURSOR);",
          "5302:   yych = *++YYCURSOR;",
          "5303:   if (yych == 'B') goto yy494;",
          "5304:   if (yych != 'b') goto yy187;",
          "5305: yy494:",
          "5306:   YYDEBUG(494, *YYCURSOR);",
          "5307:   yych = *++YYCURSOR;",
          "5308:   if (yych == 'L') goto yy495;",
          "5309:   if (yych != 'l') goto yy187;",
          "5310: yy495:",
          "5311:   YYDEBUG(495, *YYCURSOR);",
          "5312:   yych = *++YYCURSOR;",
          "5313:   if (yych == 'I') goto yy496;",
          "5314:   if (yych != 'i') goto yy187;",
          "5315: yy496:",
          "5316:   YYDEBUG(496, *YYCURSOR);",
          "5317:   yych = *++YYCURSOR;",
          "5318:   if (yych == 'C') goto yy497;",
          "5319:   if (yych != 'c') goto yy187;",
          "5320: yy497:",
          "5321:   YYDEBUG(497, *YYCURSOR);",
          "5322:   ++YYCURSOR;",
          "5323:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5324:    goto yy186;",
          "5325:   }",
          "5326:   YYDEBUG(498, *YYCURSOR);",
          "5327:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5328: #line 1322 \"Zend/zend_language_scanner.l\"",
          "5329:   {",
          "5330:  return T_PUBLIC;",
          "5331: }",
          "5332: #line 5333 \"Zend/zend_language_scanner.c\"",
          "5333: yy499:",
          "5334:   YYDEBUG(499, *YYCURSOR);",
          "5335:   yych = *++YYCURSOR;",
          "5336:   if (yych <= 'V') {",
          "5337:    if (yych == 'N') goto yy508;",
          "5338:    if (yych <= 'U') goto yy187;",
          "5339:    goto yy509;",
          "5340:   } else {",
          "5341:    if (yych <= 'n') {",
          "5342:     if (yych <= 'm') goto yy187;",
          "5343:     goto yy508;",
          "5344:    } else {",
          "5345:     if (yych == 'v') goto yy509;",
          "5346:     goto yy187;",
          "5347:    }",
          "5348:   }",
          "5349: yy500:",
          "5350:   YYDEBUG(500, *YYCURSOR);",
          "5351:   yych = *++YYCURSOR;",
          "5352:   if (yych == 'T') goto yy501;",
          "5353:   if (yych != 't') goto yy187;",
          "5354: yy501:",
          "5355:   YYDEBUG(501, *YYCURSOR);",
          "5356:   yych = *++YYCURSOR;",
          "5357:   if (yych == 'E') goto yy502;",
          "5358:   if (yych != 'e') goto yy187;",
          "5359: yy502:",
          "5360:   YYDEBUG(502, *YYCURSOR);",
          "5361:   yych = *++YYCURSOR;",
          "5362:   if (yych == 'C') goto yy503;",
          "5363:   if (yych != 'c') goto yy187;",
          "5364: yy503:",
          "5365:   YYDEBUG(503, *YYCURSOR);",
          "5366:   yych = *++YYCURSOR;",
          "5367:   if (yych == 'T') goto yy504;",
          "5368:   if (yych != 't') goto yy187;",
          "5369: yy504:",
          "5370:   YYDEBUG(504, *YYCURSOR);",
          "5371:   yych = *++YYCURSOR;",
          "5372:   if (yych == 'E') goto yy505;",
          "5373:   if (yych != 'e') goto yy187;",
          "5374: yy505:",
          "5375:   YYDEBUG(505, *YYCURSOR);",
          "5376:   yych = *++YYCURSOR;",
          "5377:   if (yych == 'D') goto yy506;",
          "5378:   if (yych != 'd') goto yy187;",
          "5379: yy506:",
          "5380:   YYDEBUG(506, *YYCURSOR);",
          "5381:   ++YYCURSOR;",
          "5382:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5383:    goto yy186;",
          "5384:   }",
          "5385:   YYDEBUG(507, *YYCURSOR);",
          "5386:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5387: #line 1318 \"Zend/zend_language_scanner.l\"",
          "5388:   {",
          "5389:  return T_PROTECTED;",
          "5390: }",
          "5391: #line 5392 \"Zend/zend_language_scanner.c\"",
          "5392: yy508:",
          "5393:   YYDEBUG(508, *YYCURSOR);",
          "5394:   yych = *++YYCURSOR;",
          "5395:   if (yych == 'T') goto yy514;",
          "5396:   if (yych == 't') goto yy514;",
          "5397:   goto yy187;",
          "5398: yy509:",
          "5399:   YYDEBUG(509, *YYCURSOR);",
          "5400:   yych = *++YYCURSOR;",
          "5401:   if (yych == 'A') goto yy510;",
          "5402:   if (yych != 'a') goto yy187;",
          "5403: yy510:",
          "5404:   YYDEBUG(510, *YYCURSOR);",
          "5405:   yych = *++YYCURSOR;",
          "5406:   if (yych == 'T') goto yy511;",
          "5407:   if (yych != 't') goto yy187;",
          "5408: yy511:",
          "5409:   YYDEBUG(511, *YYCURSOR);",
          "5410:   yych = *++YYCURSOR;",
          "5411:   if (yych == 'E') goto yy512;",
          "5412:   if (yych != 'e') goto yy187;",
          "5413: yy512:",
          "5414:   YYDEBUG(512, *YYCURSOR);",
          "5415:   ++YYCURSOR;",
          "5416:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5417:    goto yy186;",
          "5418:   }",
          "5419:   YYDEBUG(513, *YYCURSOR);",
          "5420:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5421: #line 1314 \"Zend/zend_language_scanner.l\"",
          "5422:   {",
          "5423:  return T_PRIVATE;",
          "5424: }",
          "5425: #line 5426 \"Zend/zend_language_scanner.c\"",
          "5426: yy514:",
          "5427:   YYDEBUG(514, *YYCURSOR);",
          "5428:   ++YYCURSOR;",
          "5429:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5430:    goto yy186;",
          "5431:   }",
          "5432:   YYDEBUG(515, *YYCURSOR);",
          "5433:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5434: #line 1152 \"Zend/zend_language_scanner.l\"",
          "5435:   {",
          "5436:  return T_PRINT;",
          "5437: }",
          "5438: #line 5439 \"Zend/zend_language_scanner.c\"",
          "5439: yy516:",
          "5440:   YYDEBUG(516, *YYCURSOR);",
          "5441:   yych = *++YYCURSOR;",
          "5442:   if (yych == 'O') goto yy521;",
          "5443:   if (yych == 'o') goto yy521;",
          "5444:   goto yy187;",
          "5445: yy517:",
          "5446:   YYDEBUG(517, *YYCURSOR);",
          "5447:   yych = *++YYCURSOR;",
          "5448:   if (yych == 'T') goto yy518;",
          "5449:   if (yych != 't') goto yy187;",
          "5450: yy518:",
          "5451:   YYDEBUG(518, *YYCURSOR);",
          "5452:   yych = *++YYCURSOR;",
          "5453:   if (yych == 'O') goto yy519;",
          "5454:   if (yych != 'o') goto yy187;",
          "5455: yy519:",
          "5456:   YYDEBUG(519, *YYCURSOR);",
          "5457:   ++YYCURSOR;",
          "5458:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5459:    goto yy186;",
          "5460:   }",
          "5461:   YYDEBUG(520, *YYCURSOR);",
          "5462:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5463: #line 1144 \"Zend/zend_language_scanner.l\"",
          "5464:   {",
          "5465:  return T_GOTO;",
          "5466: }",
          "5467: #line 5468 \"Zend/zend_language_scanner.c\"",
          "5468: yy521:",
          "5469:   YYDEBUG(521, *YYCURSOR);",
          "5470:   yych = *++YYCURSOR;",
          "5471:   if (yych == 'B') goto yy522;",
          "5472:   if (yych != 'b') goto yy187;",
          "5473: yy522:",
          "5474:   YYDEBUG(522, *YYCURSOR);",
          "5475:   yych = *++YYCURSOR;",
          "5476:   if (yych == 'A') goto yy523;",
          "5477:   if (yych != 'a') goto yy187;",
          "5478: yy523:",
          "5479:   YYDEBUG(523, *YYCURSOR);",
          "5480:   yych = *++YYCURSOR;",
          "5481:   if (yych == 'L') goto yy524;",
          "5482:   if (yych != 'l') goto yy187;",
          "5483: yy524:",
          "5484:   YYDEBUG(524, *YYCURSOR);",
          "5485:   ++YYCURSOR;",
          "5486:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5487:    goto yy186;",
          "5488:   }",
          "5489:   YYDEBUG(525, *YYCURSOR);",
          "5490:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5491: #line 1286 \"Zend/zend_language_scanner.l\"",
          "5492:   {",
          "5493:  return T_GLOBAL;",
          "5494: }",
          "5495: #line 5496 \"Zend/zend_language_scanner.c\"",
          "5496: yy526:",
          "5497:   YYDEBUG(526, *YYCURSOR);",
          "5498:   yych = *++YYCURSOR;",
          "5499:   if (yych == '<') goto yy534;",
          "5500:   goto yy194;",
          "5501: yy527:",
          "5502:   YYDEBUG(527, *YYCURSOR);",
          "5503:   yych = *++YYCURSOR;",
          "5504:   goto yy181;",
          "5505: yy528:",
          "5506:   YYDEBUG(528, *YYCURSOR);",
          "5507:   yych = *++YYCURSOR;",
          "5508:   goto yy179;",
          "5509: yy529:",
          "5510:   YYDEBUG(529, *YYCURSOR);",
          "5511:   yych = *++YYCURSOR;",
          "5512:   if (yych == 'E') goto yy530;",
          "5513:   if (yych != 'e') goto yy187;",
          "5514: yy530:",
          "5515:   YYDEBUG(530, *YYCURSOR);",
          "5516:   yych = *++YYCURSOR;",
          "5517:   if (yych == 'A') goto yy531;",
          "5518:   if (yych != 'a') goto yy187;",
          "5519: yy531:",
          "5520:   YYDEBUG(531, *YYCURSOR);",
          "5521:   yych = *++YYCURSOR;",
          "5522:   if (yych == 'K') goto yy532;",
          "5523:   if (yych != 'k') goto yy187;",
          "5524: yy532:",
          "5525:   YYDEBUG(532, *YYCURSOR);",
          "5526:   ++YYCURSOR;",
          "5527:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5528:    goto yy186;",
          "5529:   }",
          "5530:   YYDEBUG(533, *YYCURSOR);",
          "5531:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5532: #line 1136 \"Zend/zend_language_scanner.l\"",
          "5533:   {",
          "5534:  return T_BREAK;",
          "5535: }",
          "5536: #line 5537 \"Zend/zend_language_scanner.c\"",
          "5537: yy534:",
          "5538:   YYDEBUG(534, *YYCURSOR);",
          "5539:   yych = *++YYCURSOR;",
          "5540:   if (yych == '<') goto yy270;",
          "5541:   goto yy194;",
          "5542: yy535:",
          "5543:   YYDEBUG(535, *YYCURSOR);",
          "5544:   yych = *++YYCURSOR;",
          "5545:   if (yych == 'A') goto yy542;",
          "5546:   if (yych == 'a') goto yy542;",
          "5547:   goto yy187;",
          "5548: yy536:",
          "5549:   YYDEBUG(536, *YYCURSOR);",
          "5550:   yych = *++YYCURSOR;",
          "5551:   if (yych == 'I') goto yy537;",
          "5552:   if (yych != 'i') goto yy187;",
          "5553: yy537:",
          "5554:   YYDEBUG(537, *YYCURSOR);",
          "5555:   yych = *++YYCURSOR;",
          "5556:   if (yych == 'T') goto yy538;",
          "5557:   if (yych != 't') goto yy187;",
          "5558: yy538:",
          "5559:   YYDEBUG(538, *YYCURSOR);",
          "5560:   yych = *++YYCURSOR;",
          "5561:   if (yych == 'C') goto yy539;",
          "5562:   if (yych != 'c') goto yy187;",
          "5563: yy539:",
          "5564:   YYDEBUG(539, *YYCURSOR);",
          "5565:   yych = *++YYCURSOR;",
          "5566:   if (yych == 'H') goto yy540;",
          "5567:   if (yych != 'h') goto yy187;",
          "5568: yy540:",
          "5569:   YYDEBUG(540, *YYCURSOR);",
          "5570:   ++YYCURSOR;",
          "5571:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5572:    goto yy186;",
          "5573:   }",
          "5574:   YYDEBUG(541, *YYCURSOR);",
          "5575:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5576: #line 1120 \"Zend/zend_language_scanner.l\"",
          "5577:   {",
          "5578:  return T_SWITCH;",
          "5579: }",
          "5580: #line 5581 \"Zend/zend_language_scanner.c\"",
          "5581: yy542:",
          "5582:   YYDEBUG(542, *YYCURSOR);",
          "5583:   yych = *++YYCURSOR;",
          "5584:   if (yych == 'T') goto yy543;",
          "5585:   if (yych != 't') goto yy187;",
          "5586: yy543:",
          "5587:   YYDEBUG(543, *YYCURSOR);",
          "5588:   yych = *++YYCURSOR;",
          "5589:   if (yych == 'I') goto yy544;",
          "5590:   if (yych != 'i') goto yy187;",
          "5591: yy544:",
          "5592:   YYDEBUG(544, *YYCURSOR);",
          "5593:   yych = *++YYCURSOR;",
          "5594:   if (yych == 'C') goto yy545;",
          "5595:   if (yych != 'c') goto yy187;",
          "5596: yy545:",
          "5597:   YYDEBUG(545, *YYCURSOR);",
          "5598:   ++YYCURSOR;",
          "5599:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5600:    goto yy186;",
          "5601:   }",
          "5602:   YYDEBUG(546, *YYCURSOR);",
          "5603:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5604: #line 1302 \"Zend/zend_language_scanner.l\"",
          "5605:   {",
          "5606:  return T_STATIC;",
          "5607: }",
          "5608: #line 5609 \"Zend/zend_language_scanner.c\"",
          "5609: yy547:",
          "5610:   YYDEBUG(547, *YYCURSOR);",
          "5611:   yych = *++YYCURSOR;",
          "5612:   if (yych == 'S') goto yy558;",
          "5613:   if (yych == 's') goto yy558;",
          "5614:   goto yy187;",
          "5615: yy548:",
          "5616:   YYDEBUG(548, *YYCURSOR);",
          "5617:   yych = *++YYCURSOR;",
          "5618:   if (yych == 'D') goto yy556;",
          "5619:   if (yych == 'd') goto yy556;",
          "5620:   goto yy187;",
          "5621: yy549:",
          "5622:   YYDEBUG(549, *YYCURSOR);",
          "5623:   yych = *++YYCURSOR;",
          "5624:   if (yych == 'R') goto yy552;",
          "5625:   if (yych == 'r') goto yy552;",
          "5626:   goto yy187;",
          "5627: yy550:",
          "5628:   YYDEBUG(550, *YYCURSOR);",
          "5629:   ++YYCURSOR;",
          "5630:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5631:    goto yy186;",
          "5632:   }",
          "5633:   YYDEBUG(551, *YYCURSOR);",
          "5634:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5635: #line 1116 \"Zend/zend_language_scanner.l\"",
          "5636:   {",
          "5637:  return T_AS;",
          "5638: }",
          "5639: #line 5640 \"Zend/zend_language_scanner.c\"",
          "5640: yy552:",
          "5641:   YYDEBUG(552, *YYCURSOR);",
          "5642:   yych = *++YYCURSOR;",
          "5643:   if (yych == 'A') goto yy553;",
          "5644:   if (yych != 'a') goto yy187;",
          "5645: yy553:",
          "5646:   YYDEBUG(553, *YYCURSOR);",
          "5647:   yych = *++YYCURSOR;",
          "5648:   if (yych == 'Y') goto yy554;",
          "5649:   if (yych != 'y') goto yy187;",
          "5650: yy554:",
          "5651:   YYDEBUG(554, *YYCURSOR);",
          "5652:   ++YYCURSOR;",
          "5653:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5654:    goto yy186;",
          "5655:   }",
          "5656:   YYDEBUG(555, *YYCURSOR);",
          "5657:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5658: #line 1338 \"Zend/zend_language_scanner.l\"",
          "5659:   {",
          "5660:  return T_ARRAY;",
          "5661: }",
          "5662: #line 5663 \"Zend/zend_language_scanner.c\"",
          "5663: yy556:",
          "5664:   YYDEBUG(556, *YYCURSOR);",
          "5665:   ++YYCURSOR;",
          "5666:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5667:    goto yy186;",
          "5668:   }",
          "5669:   YYDEBUG(557, *YYCURSOR);",
          "5670:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5671: #line 1434 \"Zend/zend_language_scanner.l\"",
          "5672:   {",
          "5673:  return T_LOGICAL_AND;",
          "5674: }",
          "5675: #line 5676 \"Zend/zend_language_scanner.c\"",
          "5676: yy558:",
          "5677:   YYDEBUG(558, *YYCURSOR);",
          "5678:   yych = *++YYCURSOR;",
          "5679:   if (yych == 'T') goto yy559;",
          "5680:   if (yych != 't') goto yy187;",
          "5681: yy559:",
          "5682:   YYDEBUG(559, *YYCURSOR);",
          "5683:   yych = *++YYCURSOR;",
          "5684:   if (yych == 'R') goto yy560;",
          "5685:   if (yych != 'r') goto yy187;",
          "5686: yy560:",
          "5687:   YYDEBUG(560, *YYCURSOR);",
          "5688:   yych = *++YYCURSOR;",
          "5689:   if (yych == 'A') goto yy561;",
          "5690:   if (yych != 'a') goto yy187;",
          "5691: yy561:",
          "5692:   YYDEBUG(561, *YYCURSOR);",
          "5693:   yych = *++YYCURSOR;",
          "5694:   if (yych == 'C') goto yy562;",
          "5695:   if (yych != 'c') goto yy187;",
          "5696: yy562:",
          "5697:   YYDEBUG(562, *YYCURSOR);",
          "5698:   yych = *++YYCURSOR;",
          "5699:   if (yych == 'T') goto yy563;",
          "5700:   if (yych != 't') goto yy187;",
          "5701: yy563:",
          "5702:   YYDEBUG(563, *YYCURSOR);",
          "5703:   ++YYCURSOR;",
          "5704:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5705:    goto yy186;",
          "5706:   }",
          "5707:   YYDEBUG(564, *YYCURSOR);",
          "5708:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5709: #line 1306 \"Zend/zend_language_scanner.l\"",
          "5710:   {",
          "5711:  return T_ABSTRACT;",
          "5712: }",
          "5713: #line 5714 \"Zend/zend_language_scanner.c\"",
          "5714: yy565:",
          "5715:   YYDEBUG(565, *YYCURSOR);",
          "5716:   yych = *++YYCURSOR;",
          "5717:   if (yych == 'I') goto yy566;",
          "5718:   if (yych != 'i') goto yy187;",
          "5719: yy566:",
          "5720:   YYDEBUG(566, *YYCURSOR);",
          "5721:   yych = *++YYCURSOR;",
          "5722:   if (yych == 'L') goto yy567;",
          "5723:   if (yych != 'l') goto yy187;",
          "5724: yy567:",
          "5725:   YYDEBUG(567, *YYCURSOR);",
          "5726:   yych = *++YYCURSOR;",
          "5727:   if (yych == 'E') goto yy568;",
          "5728:   if (yych != 'e') goto yy187;",
          "5729: yy568:",
          "5730:   YYDEBUG(568, *YYCURSOR);",
          "5731:   ++YYCURSOR;",
          "5732:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5733:    goto yy186;",
          "5734:   }",
          "5735:   YYDEBUG(569, *YYCURSOR);",
          "5736:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5737: #line 1076 \"Zend/zend_language_scanner.l\"",
          "5738:   {",
          "5739:  return T_WHILE;",
          "5740: }",
          "5741: #line 5742 \"Zend/zend_language_scanner.c\"",
          "5742: yy570:",
          "5743:   YYDEBUG(570, *YYCURSOR);",
          "5744:   ++YYCURSOR;",
          "5745:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5746:    goto yy186;",
          "5747:   }",
          "5748:   YYDEBUG(571, *YYCURSOR);",
          "5749:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5750: #line 1060 \"Zend/zend_language_scanner.l\"",
          "5751:   {",
          "5752:  return T_IF;",
          "5753: }",
          "5754: #line 5755 \"Zend/zend_language_scanner.c\"",
          "5755: yy572:",
          "5756:   YYDEBUG(572, *YYCURSOR);",
          "5757:   yych = *++YYCURSOR;",
          "5758:   if (yych == 'P') goto yy614;",
          "5759:   if (yych == 'p') goto yy614;",
          "5760:   goto yy187;",
          "5761: yy573:",
          "5762:   YYDEBUG(573, *YYCURSOR);",
          "5763:   yych = *++YYCURSOR;",
          "5764:   if (yych <= 'T') {",
          "5765:    if (yych <= 'C') {",
          "5766:     if (yych <= 'B') goto yy187;",
          "5767:     goto yy581;",
          "5768:    } else {",
          "5769:     if (yych <= 'R') goto yy187;",
          "5770:     if (yych <= 'S') goto yy579;",
          "5771:     goto yy580;",
          "5772:    }",
          "5773:   } else {",
          "5774:    if (yych <= 'r') {",
          "5775:     if (yych == 'c') goto yy581;",
          "5776:     goto yy187;",
          "5777:    } else {",
          "5778:     if (yych <= 's') goto yy579;",
          "5779:     if (yych <= 't') goto yy580;",
          "5780:     goto yy187;",
          "5781:    }",
          "5782:   }",
          "5783: yy574:",
          "5784:   YYDEBUG(574, *YYCURSOR);",
          "5785:   yych = *++YYCURSOR;",
          "5786:   if (yych == 'S') goto yy575;",
          "5787:   if (yych != 's') goto yy187;",
          "5788: yy575:",
          "5789:   YYDEBUG(575, *YYCURSOR);",
          "5790:   yych = *++YYCURSOR;",
          "5791:   if (yych == 'E') goto yy576;",
          "5792:   if (yych != 'e') goto yy187;",
          "5793: yy576:",
          "5794:   YYDEBUG(576, *YYCURSOR);",
          "5795:   yych = *++YYCURSOR;",
          "5796:   if (yych == 'T') goto yy577;",
          "5797:   if (yych != 't') goto yy187;",
          "5798: yy577:",
          "5799:   YYDEBUG(577, *YYCURSOR);",
          "5800:   ++YYCURSOR;",
          "5801:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5802:    goto yy186;",
          "5803:   }",
          "5804:   YYDEBUG(578, *YYCURSOR);",
          "5805:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5806: #line 1290 \"Zend/zend_language_scanner.l\"",
          "5807:   {",
          "5808:  return T_ISSET;",
          "5809: }",
          "5810: #line 5811 \"Zend/zend_language_scanner.c\"",
          "5811: yy579:",
          "5812:   YYDEBUG(579, *YYCURSOR);",
          "5813:   yych = *++YYCURSOR;",
          "5814:   if (yych == 'T') goto yy600;",
          "5815:   if (yych == 't') goto yy600;",
          "5816:   goto yy187;",
          "5817: yy580:",
          "5818:   YYDEBUG(580, *YYCURSOR);",
          "5819:   yych = *++YYCURSOR;",
          "5820:   if (yych == 'E') goto yy593;",
          "5821:   if (yych == 'e') goto yy593;",
          "5822:   goto yy187;",
          "5823: yy581:",
          "5824:   YYDEBUG(581, *YYCURSOR);",
          "5825:   yych = *++YYCURSOR;",
          "5826:   if (yych == 'L') goto yy582;",
          "5827:   if (yych != 'l') goto yy187;",
          "5828: yy582:",
          "5829:   YYDEBUG(582, *YYCURSOR);",
          "5830:   yych = *++YYCURSOR;",
          "5831:   if (yych == 'U') goto yy583;",
          "5832:   if (yych != 'u') goto yy187;",
          "5833: yy583:",
          "5834:   YYDEBUG(583, *YYCURSOR);",
          "5835:   yych = *++YYCURSOR;",
          "5836:   if (yych == 'D') goto yy584;",
          "5837:   if (yych != 'd') goto yy187;",
          "5838: yy584:",
          "5839:   YYDEBUG(584, *YYCURSOR);",
          "5840:   yych = *++YYCURSOR;",
          "5841:   if (yych == 'E') goto yy585;",
          "5842:   if (yych != 'e') goto yy187;",
          "5843: yy585:",
          "5844:   YYDEBUG(585, *YYCURSOR);",
          "5845:   ++YYCURSOR;",
          "5846:   if ((yych = *YYCURSOR) <= '^') {",
          "5847:    if (yych <= '9') {",
          "5848:     if (yych >= '0') goto yy186;",
          "5849:    } else {",
          "5850:     if (yych <= '@') goto yy586;",
          "5851:     if (yych <= 'Z') goto yy186;",
          "5852:    }",
          "5853:   } else {",
          "5854:    if (yych <= '`') {",
          "5855:     if (yych <= '_') goto yy587;",
          "5856:    } else {",
          "5857:     if (yych <= 'z') goto yy186;",
          "5858:     if (yych >= 0x7F) goto yy186;",
          "5859:    }",
          "5860:   }",
          "5861: yy586:",
          "5862:   YYDEBUG(586, *YYCURSOR);",
          "5863:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5864: #line 1258 \"Zend/zend_language_scanner.l\"",
          "5865:   {",
          "5866:  return T_INCLUDE;",
          "5867: }",
          "5868: #line 5869 \"Zend/zend_language_scanner.c\"",
          "5869: yy587:",
          "5870:   YYDEBUG(587, *YYCURSOR);",
          "5871:   yych = *++YYCURSOR;",
          "5872:   if (yych == 'O') goto yy588;",
          "5873:   if (yych != 'o') goto yy187;",
          "5874: yy588:",
          "5875:   YYDEBUG(588, *YYCURSOR);",
          "5876:   yych = *++YYCURSOR;",
          "5877:   if (yych == 'N') goto yy589;",
          "5878:   if (yych != 'n') goto yy187;",
          "5879: yy589:",
          "5880:   YYDEBUG(589, *YYCURSOR);",
          "5881:   yych = *++YYCURSOR;",
          "5882:   if (yych == 'C') goto yy590;",
          "5883:   if (yych != 'c') goto yy187;",
          "5884: yy590:",
          "5885:   YYDEBUG(590, *YYCURSOR);",
          "5886:   yych = *++YYCURSOR;",
          "5887:   if (yych == 'E') goto yy591;",
          "5888:   if (yych != 'e') goto yy187;",
          "5889: yy591:",
          "5890:   YYDEBUG(591, *YYCURSOR);",
          "5891:   ++YYCURSOR;",
          "5892:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5893:    goto yy186;",
          "5894:   }",
          "5895:   YYDEBUG(592, *YYCURSOR);",
          "5896:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5897: #line 1262 \"Zend/zend_language_scanner.l\"",
          "5898:   {",
          "5899:  return T_INCLUDE_ONCE;",
          "5900: }",
          "5901: #line 5902 \"Zend/zend_language_scanner.c\"",
          "5902: yy593:",
          "5903:   YYDEBUG(593, *YYCURSOR);",
          "5904:   yych = *++YYCURSOR;",
          "5905:   if (yych == 'R') goto yy594;",
          "5906:   if (yych != 'r') goto yy187;",
          "5907: yy594:",
          "5908:   YYDEBUG(594, *YYCURSOR);",
          "5909:   yych = *++YYCURSOR;",
          "5910:   if (yych == 'F') goto yy595;",
          "5911:   if (yych != 'f') goto yy187;",
          "5912: yy595:",
          "5913:   YYDEBUG(595, *YYCURSOR);",
          "5914:   yych = *++YYCURSOR;",
          "5915:   if (yych == 'A') goto yy596;",
          "5916:   if (yych != 'a') goto yy187;",
          "5917: yy596:",
          "5918:   YYDEBUG(596, *YYCURSOR);",
          "5919:   yych = *++YYCURSOR;",
          "5920:   if (yych == 'C') goto yy597;",
          "5921:   if (yych != 'c') goto yy187;",
          "5922: yy597:",
          "5923:   YYDEBUG(597, *YYCURSOR);",
          "5924:   yych = *++YYCURSOR;",
          "5925:   if (yych == 'E') goto yy598;",
          "5926:   if (yych != 'e') goto yy187;",
          "5927: yy598:",
          "5928:   YYDEBUG(598, *YYCURSOR);",
          "5929:   ++YYCURSOR;",
          "5930:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5931:    goto yy186;",
          "5932:   }",
          "5933:   YYDEBUG(599, *YYCURSOR);",
          "5934:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5935: #line 1160 \"Zend/zend_language_scanner.l\"",
          "5936:   {",
          "5937:  return T_INTERFACE;",
          "5938: }",
          "5939: #line 5940 \"Zend/zend_language_scanner.c\"",
          "5940: yy600:",
          "5941:   YYDEBUG(600, *YYCURSOR);",
          "5942:   yych = *++YYCURSOR;",
          "5943:   if (yych <= 'E') {",
          "5944:    if (yych == 'A') goto yy601;",
          "5945:    if (yych <= 'D') goto yy187;",
          "5946:    goto yy602;",
          "5947:   } else {",
          "5948:    if (yych <= 'a') {",
          "5949:     if (yych <= '`') goto yy187;",
          "5950:    } else {",
          "5951:     if (yych == 'e') goto yy602;",
          "5952:     goto yy187;",
          "5953:    }",
          "5954:   }",
          "5955: yy601:",
          "5956:   YYDEBUG(601, *YYCURSOR);",
          "5957:   yych = *++YYCURSOR;",
          "5958:   if (yych == 'N') goto yy608;",
          "5959:   if (yych == 'n') goto yy608;",
          "5960:   goto yy187;",
          "5961: yy602:",
          "5962:   YYDEBUG(602, *YYCURSOR);",
          "5963:   yych = *++YYCURSOR;",
          "5964:   if (yych == 'A') goto yy603;",
          "5965:   if (yych != 'a') goto yy187;",
          "5966: yy603:",
          "5967:   YYDEBUG(603, *YYCURSOR);",
          "5968:   yych = *++YYCURSOR;",
          "5969:   if (yych == 'D') goto yy604;",
          "5970:   if (yych != 'd') goto yy187;",
          "5971: yy604:",
          "5972:   YYDEBUG(604, *YYCURSOR);",
          "5973:   yych = *++YYCURSOR;",
          "5974:   if (yych == 'O') goto yy605;",
          "5975:   if (yych != 'o') goto yy187;",
          "5976: yy605:",
          "5977:   YYDEBUG(605, *YYCURSOR);",
          "5978:   yych = *++YYCURSOR;",
          "5979:   if (yych == 'F') goto yy606;",
          "5980:   if (yych != 'f') goto yy187;",
          "5981: yy606:",
          "5982:   YYDEBUG(606, *YYCURSOR);",
          "5983:   ++YYCURSOR;",
          "5984:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "5985:    goto yy186;",
          "5986:   }",
          "5987:   YYDEBUG(607, *YYCURSOR);",
          "5988:   yyleng = YYCURSOR - SCNG(yy_text);",
          "5989: #line 1282 \"Zend/zend_language_scanner.l\"",
          "5990:   {",
          "5991:         return T_INSTEADOF;",
          "5992: }",
          "5993: #line 5994 \"Zend/zend_language_scanner.c\"",
          "5994: yy608:",
          "5995:   YYDEBUG(608, *YYCURSOR);",
          "5996:   yych = *++YYCURSOR;",
          "5997:   if (yych == 'C') goto yy609;",
          "5998:   if (yych != 'c') goto yy187;",
          "5999: yy609:",
          "6000:   YYDEBUG(609, *YYCURSOR);",
          "6001:   yych = *++YYCURSOR;",
          "6002:   if (yych == 'E') goto yy610;",
          "6003:   if (yych != 'e') goto yy187;",
          "6004: yy610:",
          "6005:   YYDEBUG(610, *YYCURSOR);",
          "6006:   yych = *++YYCURSOR;",
          "6007:   if (yych == 'O') goto yy611;",
          "6008:   if (yych != 'o') goto yy187;",
          "6009: yy611:",
          "6010:   YYDEBUG(611, *YYCURSOR);",
          "6011:   yych = *++YYCURSOR;",
          "6012:   if (yych == 'F') goto yy612;",
          "6013:   if (yych != 'f') goto yy187;",
          "6014: yy612:",
          "6015:   YYDEBUG(612, *YYCURSOR);",
          "6016:   ++YYCURSOR;",
          "6017:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6018:    goto yy186;",
          "6019:   }",
          "6020:   YYDEBUG(613, *YYCURSOR);",
          "6021:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6022: #line 1112 \"Zend/zend_language_scanner.l\"",
          "6023:   {",
          "6024:  return T_INSTANCEOF;",
          "6025: }",
          "6026: #line 6027 \"Zend/zend_language_scanner.c\"",
          "6027: yy614:",
          "6028:   YYDEBUG(614, *YYCURSOR);",
          "6029:   yych = *++YYCURSOR;",
          "6030:   if (yych == 'L') goto yy615;",
          "6031:   if (yych != 'l') goto yy187;",
          "6032: yy615:",
          "6033:   YYDEBUG(615, *YYCURSOR);",
          "6034:   yych = *++YYCURSOR;",
          "6035:   if (yych == 'E') goto yy616;",
          "6036:   if (yych != 'e') goto yy187;",
          "6037: yy616:",
          "6038:   YYDEBUG(616, *YYCURSOR);",
          "6039:   yych = *++YYCURSOR;",
          "6040:   if (yych == 'M') goto yy617;",
          "6041:   if (yych != 'm') goto yy187;",
          "6042: yy617:",
          "6043:   YYDEBUG(617, *YYCURSOR);",
          "6044:   yych = *++YYCURSOR;",
          "6045:   if (yych == 'E') goto yy618;",
          "6046:   if (yych != 'e') goto yy187;",
          "6047: yy618:",
          "6048:   YYDEBUG(618, *YYCURSOR);",
          "6049:   yych = *++YYCURSOR;",
          "6050:   if (yych == 'N') goto yy619;",
          "6051:   if (yych != 'n') goto yy187;",
          "6052: yy619:",
          "6053:   YYDEBUG(619, *YYCURSOR);",
          "6054:   yych = *++YYCURSOR;",
          "6055:   if (yych == 'T') goto yy620;",
          "6056:   if (yych != 't') goto yy187;",
          "6057: yy620:",
          "6058:   YYDEBUG(620, *YYCURSOR);",
          "6059:   yych = *++YYCURSOR;",
          "6060:   if (yych == 'S') goto yy621;",
          "6061:   if (yych != 's') goto yy187;",
          "6062: yy621:",
          "6063:   YYDEBUG(621, *YYCURSOR);",
          "6064:   ++YYCURSOR;",
          "6065:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6066:    goto yy186;",
          "6067:   }",
          "6068:   YYDEBUG(622, *YYCURSOR);",
          "6069:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6070: #line 1172 \"Zend/zend_language_scanner.l\"",
          "6071:   {",
          "6072:  return T_IMPLEMENTS;",
          "6073: }",
          "6074: #line 6075 \"Zend/zend_language_scanner.c\"",
          "6075: yy623:",
          "6076:   YYDEBUG(623, *YYCURSOR);",
          "6077:   yych = *++YYCURSOR;",
          "6078:   if (yych == 'R') goto yy631;",
          "6079:   if (yych == 'r') goto yy631;",
          "6080:   goto yy187;",
          "6081: yy624:",
          "6082:   YYDEBUG(624, *YYCURSOR);",
          "6083:   yych = *++YYCURSOR;",
          "6084:   if (yych <= 'Y') {",
          "6085:    if (yych == 'A') goto yy627;",
          "6086:    if (yych <= 'X') goto yy187;",
          "6087:   } else {",
          "6088:    if (yych <= 'a') {",
          "6089:     if (yych <= '`') goto yy187;",
          "6090:     goto yy627;",
          "6091:    } else {",
          "6092:     if (yych != 'y') goto yy187;",
          "6093:    }",
          "6094:   }",
          "6095:   YYDEBUG(625, *YYCURSOR);",
          "6096:   ++YYCURSOR;",
          "6097:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6098:    goto yy186;",
          "6099:   }",
          "6100:   YYDEBUG(626, *YYCURSOR);",
          "6101:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6102: #line 1044 \"Zend/zend_language_scanner.l\"",
          "6103:   {",
          "6104:  return T_TRY;",
          "6105: }",
          "6106: #line 6107 \"Zend/zend_language_scanner.c\"",
          "6107: yy627:",
          "6108:   YYDEBUG(627, *YYCURSOR);",
          "6109:   yych = *++YYCURSOR;",
          "6110:   if (yych == 'I') goto yy628;",
          "6111:   if (yych != 'i') goto yy187;",
          "6112: yy628:",
          "6113:   YYDEBUG(628, *YYCURSOR);",
          "6114:   yych = *++YYCURSOR;",
          "6115:   if (yych == 'T') goto yy629;",
          "6116:   if (yych != 't') goto yy187;",
          "6117: yy629:",
          "6118:   YYDEBUG(629, *YYCURSOR);",
          "6119:   ++YYCURSOR;",
          "6120:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6121:    goto yy186;",
          "6122:   }",
          "6123:   YYDEBUG(630, *YYCURSOR);",
          "6124:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6125: #line 1164 \"Zend/zend_language_scanner.l\"",
          "6126:   {",
          "6127:  return T_TRAIT;",
          "6128: }",
          "6129: #line 6130 \"Zend/zend_language_scanner.c\"",
          "6130: yy631:",
          "6131:   YYDEBUG(631, *YYCURSOR);",
          "6132:   yych = *++YYCURSOR;",
          "6133:   if (yych == 'O') goto yy632;",
          "6134:   if (yych != 'o') goto yy187;",
          "6135: yy632:",
          "6136:   YYDEBUG(632, *YYCURSOR);",
          "6137:   yych = *++YYCURSOR;",
          "6138:   if (yych == 'W') goto yy633;",
          "6139:   if (yych != 'w') goto yy187;",
          "6140: yy633:",
          "6141:   YYDEBUG(633, *YYCURSOR);",
          "6142:   ++YYCURSOR;",
          "6143:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6144:    goto yy186;",
          "6145:   }",
          "6146:   YYDEBUG(634, *YYCURSOR);",
          "6147:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6148: #line 1056 \"Zend/zend_language_scanner.l\"",
          "6149:   {",
          "6150:  return T_THROW;",
          "6151: }",
          "6152: #line 6153 \"Zend/zend_language_scanner.c\"",
          "6153: yy635:",
          "6154:   YYDEBUG(635, *YYCURSOR);",
          "6155:   yych = *++YYCURSOR;",
          "6156:   if (yych == 'E') goto yy636;",
          "6157:   if (yych != 'e') goto yy187;",
          "6158: yy636:",
          "6159:   YYDEBUG(636, *YYCURSOR);",
          "6160:   yych = *++YYCURSOR;",
          "6161:   if (yych == 'L') goto yy637;",
          "6162:   if (yych != 'l') goto yy187;",
          "6163: yy637:",
          "6164:   YYDEBUG(637, *YYCURSOR);",
          "6165:   yych = *++YYCURSOR;",
          "6166:   if (yych == 'D') goto yy638;",
          "6167:   if (yych != 'd') goto yy187;",
          "6168: yy638:",
          "6169:   YYDEBUG(638, *YYCURSOR);",
          "6170:   ++YYCURSOR;",
          "6171:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6172:    goto yy186;",
          "6173:   }",
          "6174:   YYDEBUG(639, *YYCURSOR);",
          "6175:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6176: #line 1040 \"Zend/zend_language_scanner.l\"",
          "6177:   {",
          "6178:  return T_YIELD;",
          "6179: }",
          "6180: #line 6181 \"Zend/zend_language_scanner.c\"",
          "6181: yy640:",
          "6182:   YYDEBUG(640, *YYCURSOR);",
          "6183:   yych = *++YYCURSOR;",
          "6184:   if (yych <= 'T') {",
          "6185:    if (yych == 'Q') goto yy642;",
          "6186:    if (yych <= 'S') goto yy187;",
          "6187:   } else {",
          "6188:    if (yych <= 'q') {",
          "6189:     if (yych <= 'p') goto yy187;",
          "6190:     goto yy642;",
          "6191:    } else {",
          "6192:     if (yych != 't') goto yy187;",
          "6193:    }",
          "6194:   }",
          "6195:   YYDEBUG(641, *YYCURSOR);",
          "6196:   yych = *++YYCURSOR;",
          "6197:   if (yych == 'U') goto yy654;",
          "6198:   if (yych == 'u') goto yy654;",
          "6199:   goto yy187;",
          "6200: yy642:",
          "6201:   YYDEBUG(642, *YYCURSOR);",
          "6202:   yych = *++YYCURSOR;",
          "6203:   if (yych == 'U') goto yy643;",
          "6204:   if (yych != 'u') goto yy187;",
          "6205: yy643:",
          "6206:   YYDEBUG(643, *YYCURSOR);",
          "6207:   yych = *++YYCURSOR;",
          "6208:   if (yych == 'I') goto yy644;",
          "6209:   if (yych != 'i') goto yy187;",
          "6210: yy644:",
          "6211:   YYDEBUG(644, *YYCURSOR);",
          "6212:   yych = *++YYCURSOR;",
          "6213:   if (yych == 'R') goto yy645;",
          "6214:   if (yych != 'r') goto yy187;",
          "6215: yy645:",
          "6216:   YYDEBUG(645, *YYCURSOR);",
          "6217:   yych = *++YYCURSOR;",
          "6218:   if (yych == 'E') goto yy646;",
          "6219:   if (yych != 'e') goto yy187;",
          "6220: yy646:",
          "6221:   YYDEBUG(646, *YYCURSOR);",
          "6222:   ++YYCURSOR;",
          "6223:   if ((yych = *YYCURSOR) <= '^') {",
          "6224:    if (yych <= '9') {",
          "6225:     if (yych >= '0') goto yy186;",
          "6226:    } else {",
          "6227:     if (yych <= '@') goto yy647;",
          "6228:     if (yych <= 'Z') goto yy186;",
          "6229:    }",
          "6230:   } else {",
          "6231:    if (yych <= '`') {",
          "6232:     if (yych <= '_') goto yy648;",
          "6233:    } else {",
          "6234:     if (yych <= 'z') goto yy186;",
          "6235:     if (yych >= 0x7F) goto yy186;",
          "6236:    }",
          "6237:   }",
          "6238: yy647:",
          "6239:   YYDEBUG(647, *YYCURSOR);",
          "6240:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6241: #line 1266 \"Zend/zend_language_scanner.l\"",
          "6242:   {",
          "6243:  return T_REQUIRE;",
          "6244: }",
          "6245: #line 6246 \"Zend/zend_language_scanner.c\"",
          "6246: yy648:",
          "6247:   YYDEBUG(648, *YYCURSOR);",
          "6248:   yych = *++YYCURSOR;",
          "6249:   if (yych == 'O') goto yy649;",
          "6250:   if (yych != 'o') goto yy187;",
          "6251: yy649:",
          "6252:   YYDEBUG(649, *YYCURSOR);",
          "6253:   yych = *++YYCURSOR;",
          "6254:   if (yych == 'N') goto yy650;",
          "6255:   if (yych != 'n') goto yy187;",
          "6256: yy650:",
          "6257:   YYDEBUG(650, *YYCURSOR);",
          "6258:   yych = *++YYCURSOR;",
          "6259:   if (yych == 'C') goto yy651;",
          "6260:   if (yych != 'c') goto yy187;",
          "6261: yy651:",
          "6262:   YYDEBUG(651, *YYCURSOR);",
          "6263:   yych = *++YYCURSOR;",
          "6264:   if (yych == 'E') goto yy652;",
          "6265:   if (yych != 'e') goto yy187;",
          "6266: yy652:",
          "6267:   YYDEBUG(652, *YYCURSOR);",
          "6268:   ++YYCURSOR;",
          "6269:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6270:    goto yy186;",
          "6271:   }",
          "6272:   YYDEBUG(653, *YYCURSOR);",
          "6273:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6274: #line 1270 \"Zend/zend_language_scanner.l\"",
          "6275:   {",
          "6276:  return T_REQUIRE_ONCE;",
          "6277: }",
          "6278: #line 6279 \"Zend/zend_language_scanner.c\"",
          "6279: yy654:",
          "6280:   YYDEBUG(654, *YYCURSOR);",
          "6281:   yych = *++YYCURSOR;",
          "6282:   if (yych == 'R') goto yy655;",
          "6283:   if (yych != 'r') goto yy187;",
          "6284: yy655:",
          "6285:   YYDEBUG(655, *YYCURSOR);",
          "6286:   yych = *++YYCURSOR;",
          "6287:   if (yych == 'N') goto yy656;",
          "6288:   if (yych != 'n') goto yy187;",
          "6289: yy656:",
          "6290:   YYDEBUG(656, *YYCURSOR);",
          "6291:   ++YYCURSOR;",
          "6292:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6293:    goto yy186;",
          "6294:   }",
          "6295:   YYDEBUG(657, *YYCURSOR);",
          "6296:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6297: #line 1036 \"Zend/zend_language_scanner.l\"",
          "6298:   {",
          "6299:  return T_RETURN;",
          "6300: }",
          "6301: #line 6302 \"Zend/zend_language_scanner.c\"",
          "6302: yy658:",
          "6303:   YYDEBUG(658, *YYCURSOR);",
          "6304:   yych = *++YYCURSOR;",
          "6305:   if (yych <= 'T') {",
          "6306:    if (yych <= 'L') {",
          "6307:     if (yych <= 'K') goto yy187;",
          "6308:     goto yy681;",
          "6309:    } else {",
          "6310:     if (yych <= 'R') goto yy187;",
          "6311:     if (yych <= 'S') goto yy680;",
          "6312:     goto yy679;",
          "6313:    }",
          "6314:   } else {",
          "6315:    if (yych <= 'r') {",
          "6316:     if (yych == 'l') goto yy681;",
          "6317:     goto yy187;",
          "6318:    } else {",
          "6319:     if (yych <= 's') goto yy680;",
          "6320:     if (yych <= 't') goto yy679;",
          "6321:     goto yy187;",
          "6322:    }",
          "6323:   }",
          "6324: yy659:",
          "6325:   YYDEBUG(659, *YYCURSOR);",
          "6326:   yych = *++YYCURSOR;",
          "6327:   if (yych <= 'O') {",
          "6328:    if (yych == 'A') goto yy671;",
          "6329:    if (yych <= 'N') goto yy187;",
          "6330:    goto yy672;",
          "6331:   } else {",
          "6332:    if (yych <= 'a') {",
          "6333:     if (yych <= '`') goto yy187;",
          "6334:     goto yy671;",
          "6335:    } else {",
          "6336:     if (yych == 'o') goto yy672;",
          "6337:     goto yy187;",
          "6338:    }",
          "6339:   }",
          "6340: yy660:",
          "6341:   YYDEBUG(660, *YYCURSOR);",
          "6342:   yych = *++YYCURSOR;",
          "6343:   if (yych == 'N') goto yy661;",
          "6344:   if (yych != 'n') goto yy187;",
          "6345: yy661:",
          "6346:   YYDEBUG(661, *YYCURSOR);",
          "6347:   yych = *++YYCURSOR;",
          "6348:   if (yych <= 'T') {",
          "6349:    if (yych <= 'R') goto yy187;",
          "6350:    if (yych >= 'T') goto yy663;",
          "6351:   } else {",
          "6352:    if (yych <= 'r') goto yy187;",
          "6353:    if (yych <= 's') goto yy662;",
          "6354:    if (yych <= 't') goto yy663;",
          "6355:    goto yy187;",
          "6356:   }",
          "6357: yy662:",
          "6358:   YYDEBUG(662, *YYCURSOR);",
          "6359:   yych = *++YYCURSOR;",
          "6360:   if (yych == 'T') goto yy669;",
          "6361:   if (yych == 't') goto yy669;",
          "6362:   goto yy187;",
          "6363: yy663:",
          "6364:   YYDEBUG(663, *YYCURSOR);",
          "6365:   yych = *++YYCURSOR;",
          "6366:   if (yych == 'I') goto yy664;",
          "6367:   if (yych != 'i') goto yy187;",
          "6368: yy664:",
          "6369:   YYDEBUG(664, *YYCURSOR);",
          "6370:   yych = *++YYCURSOR;",
          "6371:   if (yych == 'N') goto yy665;",
          "6372:   if (yych != 'n') goto yy187;",
          "6373: yy665:",
          "6374:   YYDEBUG(665, *YYCURSOR);",
          "6375:   yych = *++YYCURSOR;",
          "6376:   if (yych == 'U') goto yy666;",
          "6377:   if (yych != 'u') goto yy187;",
          "6378: yy666:",
          "6379:   YYDEBUG(666, *YYCURSOR);",
          "6380:   yych = *++YYCURSOR;",
          "6381:   if (yych == 'E') goto yy667;",
          "6382:   if (yych != 'e') goto yy187;",
          "6383: yy667:",
          "6384:   YYDEBUG(667, *YYCURSOR);",
          "6385:   ++YYCURSOR;",
          "6386:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6387:    goto yy186;",
          "6388:   }",
          "6389:   YYDEBUG(668, *YYCURSOR);",
          "6390:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6391: #line 1140 \"Zend/zend_language_scanner.l\"",
          "6392:   {",
          "6393:  return T_CONTINUE;",
          "6394: }",
          "6395: #line 6396 \"Zend/zend_language_scanner.c\"",
          "6396: yy669:",
          "6397:   YYDEBUG(669, *YYCURSOR);",
          "6398:   ++YYCURSOR;",
          "6399:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6400:    goto yy186;",
          "6401:   }",
          "6402:   YYDEBUG(670, *YYCURSOR);",
          "6403:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6404: #line 1032 \"Zend/zend_language_scanner.l\"",
          "6405:   {",
          "6406:  return T_CONST;",
          "6407: }",
          "6408: #line 6409 \"Zend/zend_language_scanner.c\"",
          "6409: yy671:",
          "6410:   YYDEBUG(671, *YYCURSOR);",
          "6411:   yych = *++YYCURSOR;",
          "6412:   if (yych == 'S') goto yy676;",
          "6413:   if (yych == 's') goto yy676;",
          "6414:   goto yy187;",
          "6415: yy672:",
          "6416:   YYDEBUG(672, *YYCURSOR);",
          "6417:   yych = *++YYCURSOR;",
          "6418:   if (yych == 'N') goto yy673;",
          "6419:   if (yych != 'n') goto yy187;",
          "6420: yy673:",
          "6421:   YYDEBUG(673, *YYCURSOR);",
          "6422:   yych = *++YYCURSOR;",
          "6423:   if (yych == 'E') goto yy674;",
          "6424:   if (yych != 'e') goto yy187;",
          "6425: yy674:",
          "6426:   YYDEBUG(674, *YYCURSOR);",
          "6427:   ++YYCURSOR;",
          "6428:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6429:    goto yy186;",
          "6430:   }",
          "6431:   YYDEBUG(675, *YYCURSOR);",
          "6432:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6433: #line 1218 \"Zend/zend_language_scanner.l\"",
          "6434:   {",
          "6435:  return T_CLONE;",
          "6436: }",
          "6437: #line 6438 \"Zend/zend_language_scanner.c\"",
          "6438: yy676:",
          "6439:   YYDEBUG(676, *YYCURSOR);",
          "6440:   yych = *++YYCURSOR;",
          "6441:   if (yych == 'S') goto yy677;",
          "6442:   if (yych != 's') goto yy187;",
          "6443: yy677:",
          "6444:   YYDEBUG(677, *YYCURSOR);",
          "6445:   ++YYCURSOR;",
          "6446:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6447:    goto yy186;",
          "6448:   }",
          "6449:   YYDEBUG(678, *YYCURSOR);",
          "6450:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6451: #line 1156 \"Zend/zend_language_scanner.l\"",
          "6452:   {",
          "6453:  return T_CLASS;",
          "6454: }",
          "6455: #line 6456 \"Zend/zend_language_scanner.c\"",
          "6456: yy679:",
          "6457:   YYDEBUG(679, *YYCURSOR);",
          "6458:   yych = *++YYCURSOR;",
          "6459:   if (yych == 'C') goto yy690;",
          "6460:   if (yych == 'c') goto yy690;",
          "6461:   goto yy187;",
          "6462: yy680:",
          "6463:   YYDEBUG(680, *YYCURSOR);",
          "6464:   yych = *++YYCURSOR;",
          "6465:   if (yych == 'E') goto yy688;",
          "6466:   if (yych == 'e') goto yy688;",
          "6467:   goto yy187;",
          "6468: yy681:",
          "6469:   YYDEBUG(681, *YYCURSOR);",
          "6470:   yych = *++YYCURSOR;",
          "6471:   if (yych == 'L') goto yy682;",
          "6472:   if (yych != 'l') goto yy187;",
          "6473: yy682:",
          "6474:   YYDEBUG(682, *YYCURSOR);",
          "6475:   yych = *++YYCURSOR;",
          "6476:   if (yych == 'A') goto yy683;",
          "6477:   if (yych != 'a') goto yy187;",
          "6478: yy683:",
          "6479:   YYDEBUG(683, *YYCURSOR);",
          "6480:   yych = *++YYCURSOR;",
          "6481:   if (yych == 'B') goto yy684;",
          "6482:   if (yych != 'b') goto yy187;",
          "6483: yy684:",
          "6484:   YYDEBUG(684, *YYCURSOR);",
          "6485:   yych = *++YYCURSOR;",
          "6486:   if (yych == 'L') goto yy685;",
          "6487:   if (yych != 'l') goto yy187;",
          "6488: yy685:",
          "6489:   YYDEBUG(685, *YYCURSOR);",
          "6490:   yych = *++YYCURSOR;",
          "6491:   if (yych == 'E') goto yy686;",
          "6492:   if (yych != 'e') goto yy187;",
          "6493: yy686:",
          "6494:   YYDEBUG(686, *YYCURSOR);",
          "6495:   ++YYCURSOR;",
          "6496:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6497:    goto yy186;",
          "6498:   }",
          "6499:   YYDEBUG(687, *YYCURSOR);",
          "6500:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6501: #line 1342 \"Zend/zend_language_scanner.l\"",
          "6502:   {",
          "6503:  return T_CALLABLE;",
          "6504: }",
          "6505: #line 6506 \"Zend/zend_language_scanner.c\"",
          "6506: yy688:",
          "6507:   YYDEBUG(688, *YYCURSOR);",
          "6508:   ++YYCURSOR;",
          "6509:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6510:    goto yy186;",
          "6511:   }",
          "6512:   YYDEBUG(689, *YYCURSOR);",
          "6513:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6514: #line 1128 \"Zend/zend_language_scanner.l\"",
          "6515:   {",
          "6516:  return T_CASE;",
          "6517: }",
          "6518: #line 6519 \"Zend/zend_language_scanner.c\"",
          "6519: yy690:",
          "6520:   YYDEBUG(690, *YYCURSOR);",
          "6521:   yych = *++YYCURSOR;",
          "6522:   if (yych == 'H') goto yy691;",
          "6523:   if (yych != 'h') goto yy187;",
          "6524: yy691:",
          "6525:   YYDEBUG(691, *YYCURSOR);",
          "6526:   ++YYCURSOR;",
          "6527:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6528:    goto yy186;",
          "6529:   }",
          "6530:   YYDEBUG(692, *YYCURSOR);",
          "6531:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6532: #line 1048 \"Zend/zend_language_scanner.l\"",
          "6533:   {",
          "6534:  return T_CATCH;",
          "6535: }",
          "6536: #line 6537 \"Zend/zend_language_scanner.c\"",
          "6537: yy693:",
          "6538:   YYDEBUG(693, *YYCURSOR);",
          "6539:   yych = *++YYCURSOR;",
          "6540:   if (yych == 'N') goto yy710;",
          "6541:   if (yych == 'n') goto yy710;",
          "6542:   goto yy187;",
          "6543: yy694:",
          "6544:   YYDEBUG(694, *YYCURSOR);",
          "6545:   yych = *++YYCURSOR;",
          "6546:   if (yych == 'R') goto yy703;",
          "6547:   if (yych == 'r') goto yy703;",
          "6548:   goto yy187;",
          "6549: yy695:",
          "6550:   YYDEBUG(695, *YYCURSOR);",
          "6551:   yych = *++YYCURSOR;",
          "6552:   if (yych == 'N') goto yy696;",
          "6553:   if (yych != 'n') goto yy187;",
          "6554: yy696:",
          "6555:   YYDEBUG(696, *YYCURSOR);",
          "6556:   yych = *++YYCURSOR;",
          "6557:   if (yych == 'C') goto yy697;",
          "6558:   if (yych != 'c') goto yy187;",
          "6559: yy697:",
          "6560:   YYDEBUG(697, *YYCURSOR);",
          "6561:   yych = *++YYCURSOR;",
          "6562:   if (yych == 'T') goto yy698;",
          "6563:   if (yych != 't') goto yy187;",
          "6564: yy698:",
          "6565:   YYDEBUG(698, *YYCURSOR);",
          "6566:   yych = *++YYCURSOR;",
          "6567:   if (yych == 'I') goto yy699;",
          "6568:   if (yych != 'i') goto yy187;",
          "6569: yy699:",
          "6570:   YYDEBUG(699, *YYCURSOR);",
          "6571:   yych = *++YYCURSOR;",
          "6572:   if (yych == 'O') goto yy700;",
          "6573:   if (yych != 'o') goto yy187;",
          "6574: yy700:",
          "6575:   YYDEBUG(700, *YYCURSOR);",
          "6576:   yych = *++YYCURSOR;",
          "6577:   if (yych == 'N') goto yy701;",
          "6578:   if (yych != 'n') goto yy187;",
          "6579: yy701:",
          "6580:   YYDEBUG(701, *YYCURSOR);",
          "6581:   ++YYCURSOR;",
          "6582:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6583:    goto yy186;",
          "6584:   }",
          "6585:   YYDEBUG(702, *YYCURSOR);",
          "6586:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6587: #line 1028 \"Zend/zend_language_scanner.l\"",
          "6588:   {",
          "6589:  return T_FUNCTION;",
          "6590: }",
          "6591: #line 6592 \"Zend/zend_language_scanner.c\"",
          "6592: yy703:",
          "6593:   YYDEBUG(703, *YYCURSOR);",
          "6594:   ++YYCURSOR;",
          "6595:   if ((yych = *YYCURSOR) <= '^') {",
          "6596:    if (yych <= '@') {",
          "6597:     if (yych <= '/') goto yy704;",
          "6598:     if (yych <= '9') goto yy186;",
          "6599:    } else {",
          "6600:     if (yych == 'E') goto yy705;",
          "6601:     if (yych <= 'Z') goto yy186;",
          "6602:    }",
          "6603:   } else {",
          "6604:    if (yych <= 'd') {",
          "6605:     if (yych != '`') goto yy186;",
          "6606:    } else {",
          "6607:     if (yych <= 'e') goto yy705;",
          "6608:     if (yych <= 'z') goto yy186;",
          "6609:     if (yych >= 0x7F) goto yy186;",
          "6610:    }",
          "6611:   }",
          "6612: yy704:",
          "6613:   YYDEBUG(704, *YYCURSOR);",
          "6614:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6615: #line 1088 \"Zend/zend_language_scanner.l\"",
          "6616:   {",
          "6617:  return T_FOR;",
          "6618: }",
          "6619: #line 6620 \"Zend/zend_language_scanner.c\"",
          "6620: yy705:",
          "6621:   YYDEBUG(705, *YYCURSOR);",
          "6622:   yych = *++YYCURSOR;",
          "6623:   if (yych == 'A') goto yy706;",
          "6624:   if (yych != 'a') goto yy187;",
          "6625: yy706:",
          "6626:   YYDEBUG(706, *YYCURSOR);",
          "6627:   yych = *++YYCURSOR;",
          "6628:   if (yych == 'C') goto yy707;",
          "6629:   if (yych != 'c') goto yy187;",
          "6630: yy707:",
          "6631:   YYDEBUG(707, *YYCURSOR);",
          "6632:   yych = *++YYCURSOR;",
          "6633:   if (yych == 'H') goto yy708;",
          "6634:   if (yych != 'h') goto yy187;",
          "6635: yy708:",
          "6636:   YYDEBUG(708, *YYCURSOR);",
          "6637:   ++YYCURSOR;",
          "6638:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6639:    goto yy186;",
          "6640:   }",
          "6641:   YYDEBUG(709, *YYCURSOR);",
          "6642:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6643: #line 1096 \"Zend/zend_language_scanner.l\"",
          "6644:   {",
          "6645:  return T_FOREACH;",
          "6646: }",
          "6647: #line 6648 \"Zend/zend_language_scanner.c\"",
          "6648: yy710:",
          "6649:   YYDEBUG(710, *YYCURSOR);",
          "6650:   yych = *++YYCURSOR;",
          "6651:   if (yych == 'A') goto yy711;",
          "6652:   if (yych != 'a') goto yy187;",
          "6653: yy711:",
          "6654:   YYDEBUG(711, *YYCURSOR);",
          "6655:   yych = *++YYCURSOR;",
          "6656:   if (yych == 'L') goto yy712;",
          "6657:   if (yych != 'l') goto yy187;",
          "6658: yy712:",
          "6659:   YYDEBUG(712, *YYCURSOR);",
          "6660:   ++YYCURSOR;",
          "6661:   if ((yych = *YYCURSOR) <= '^') {",
          "6662:    if (yych <= '@') {",
          "6663:     if (yych <= '/') goto yy713;",
          "6664:     if (yych <= '9') goto yy186;",
          "6665:    } else {",
          "6666:     if (yych == 'L') goto yy714;",
          "6667:     if (yych <= 'Z') goto yy186;",
          "6668:    }",
          "6669:   } else {",
          "6670:    if (yych <= 'k') {",
          "6671:     if (yych != '`') goto yy186;",
          "6672:    } else {",
          "6673:     if (yych <= 'l') goto yy714;",
          "6674:     if (yych <= 'z') goto yy186;",
          "6675:     if (yych >= 0x7F) goto yy186;",
          "6676:    }",
          "6677:   }",
          "6678: yy713:",
          "6679:   YYDEBUG(713, *YYCURSOR);",
          "6680:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6681: #line 1310 \"Zend/zend_language_scanner.l\"",
          "6682:   {",
          "6683:  return T_FINAL;",
          "6684: }",
          "6685: #line 6686 \"Zend/zend_language_scanner.c\"",
          "6686: yy714:",
          "6687:   YYDEBUG(714, *YYCURSOR);",
          "6688:   yych = *++YYCURSOR;",
          "6689:   if (yych == 'Y') goto yy715;",
          "6690:   if (yych != 'y') goto yy187;",
          "6691: yy715:",
          "6692:   YYDEBUG(715, *YYCURSOR);",
          "6693:   ++YYCURSOR;",
          "6694:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6695:    goto yy186;",
          "6696:   }",
          "6697:   YYDEBUG(716, *YYCURSOR);",
          "6698:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6699: #line 1052 \"Zend/zend_language_scanner.l\"",
          "6700:   {",
          "6701:  return T_FINALLY;",
          "6702: }",
          "6703: #line 6704 \"Zend/zend_language_scanner.c\"",
          "6704: yy717:",
          "6705:   YYDEBUG(717, *YYCURSOR);",
          "6706:   yych = *++YYCURSOR;",
          "6707:   if (yych <= 'F') {",
          "6708:    if (yych == 'C') goto yy723;",
          "6709:    if (yych <= 'E') goto yy187;",
          "6710:    goto yy724;",
          "6711:   } else {",
          "6712:    if (yych <= 'c') {",
          "6713:     if (yych <= 'b') goto yy187;",
          "6714:     goto yy723;",
          "6715:    } else {",
          "6716:     if (yych == 'f') goto yy724;",
          "6717:     goto yy187;",
          "6718:    }",
          "6719:   }",
          "6720: yy718:",
          "6721:   YYDEBUG(718, *YYCURSOR);",
          "6722:   yych = *++YYCURSOR;",
          "6723:   if (yych == 'E') goto yy721;",
          "6724:   if (yych == 'e') goto yy721;",
          "6725:   goto yy187;",
          "6726: yy719:",
          "6727:   YYDEBUG(719, *YYCURSOR);",
          "6728:   ++YYCURSOR;",
          "6729:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6730:    goto yy186;",
          "6731:   }",
          "6732:   YYDEBUG(720, *YYCURSOR);",
          "6733:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6734: #line 1084 \"Zend/zend_language_scanner.l\"",
          "6735:   {",
          "6736:  return T_DO;",
          "6737: }",
          "6738: #line 6739 \"Zend/zend_language_scanner.c\"",
          "6739: yy721:",
          "6740:   YYDEBUG(721, *YYCURSOR);",
          "6741:   ++YYCURSOR;",
          "6742:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6743:    goto yy186;",
          "6744:   }",
          "6745:   YYDEBUG(722, *YYCURSOR);",
          "6746:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6747: #line 1024 \"Zend/zend_language_scanner.l\"",
          "6748:   {",
          "6749:  return T_EXIT;",
          "6750: }",
          "6751: #line 6752 \"Zend/zend_language_scanner.c\"",
          "6752: yy723:",
          "6753:   YYDEBUG(723, *YYCURSOR);",
          "6754:   yych = *++YYCURSOR;",
          "6755:   if (yych == 'L') goto yy730;",
          "6756:   if (yych == 'l') goto yy730;",
          "6757:   goto yy187;",
          "6758: yy724:",
          "6759:   YYDEBUG(724, *YYCURSOR);",
          "6760:   yych = *++YYCURSOR;",
          "6761:   if (yych == 'A') goto yy725;",
          "6762:   if (yych != 'a') goto yy187;",
          "6763: yy725:",
          "6764:   YYDEBUG(725, *YYCURSOR);",
          "6765:   yych = *++YYCURSOR;",
          "6766:   if (yych == 'U') goto yy726;",
          "6767:   if (yych != 'u') goto yy187;",
          "6768: yy726:",
          "6769:   YYDEBUG(726, *YYCURSOR);",
          "6770:   yych = *++YYCURSOR;",
          "6771:   if (yych == 'L') goto yy727;",
          "6772:   if (yych != 'l') goto yy187;",
          "6773: yy727:",
          "6774:   YYDEBUG(727, *YYCURSOR);",
          "6775:   yych = *++YYCURSOR;",
          "6776:   if (yych == 'T') goto yy728;",
          "6777:   if (yych != 't') goto yy187;",
          "6778: yy728:",
          "6779:   YYDEBUG(728, *YYCURSOR);",
          "6780:   ++YYCURSOR;",
          "6781:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6782:    goto yy186;",
          "6783:   }",
          "6784:   YYDEBUG(729, *YYCURSOR);",
          "6785:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6786: #line 1132 \"Zend/zend_language_scanner.l\"",
          "6787:   {",
          "6788:  return T_DEFAULT;",
          "6789: }",
          "6790: #line 6791 \"Zend/zend_language_scanner.c\"",
          "6791: yy730:",
          "6792:   YYDEBUG(730, *YYCURSOR);",
          "6793:   yych = *++YYCURSOR;",
          "6794:   if (yych == 'A') goto yy731;",
          "6795:   if (yych != 'a') goto yy187;",
          "6796: yy731:",
          "6797:   YYDEBUG(731, *YYCURSOR);",
          "6798:   yych = *++YYCURSOR;",
          "6799:   if (yych == 'R') goto yy732;",
          "6800:   if (yych != 'r') goto yy187;",
          "6801: yy732:",
          "6802:   YYDEBUG(732, *YYCURSOR);",
          "6803:   yych = *++YYCURSOR;",
          "6804:   if (yych == 'E') goto yy733;",
          "6805:   if (yych != 'e') goto yy187;",
          "6806: yy733:",
          "6807:   YYDEBUG(733, *YYCURSOR);",
          "6808:   ++YYCURSOR;",
          "6809:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6810:    goto yy186;",
          "6811:   }",
          "6812:   YYDEBUG(734, *YYCURSOR);",
          "6813:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6814: #line 1104 \"Zend/zend_language_scanner.l\"",
          "6815:   {",
          "6816:  return T_DECLARE;",
          "6817: }",
          "6818: #line 6819 \"Zend/zend_language_scanner.c\"",
          "6819: yy735:",
          "6820:   YYDEBUG(735, *YYCURSOR);",
          "6821:   yych = *++YYCURSOR;",
          "6822:   if (yych == 'H') goto yy797;",
          "6823:   if (yych == 'h') goto yy797;",
          "6824:   goto yy187;",
          "6825: yy736:",
          "6826:   YYDEBUG(736, *YYCURSOR);",
          "6827:   yych = *++YYCURSOR;",
          "6828:   if (yych == 'S') goto yy791;",
          "6829:   if (yych == 's') goto yy791;",
          "6830:   goto yy187;",
          "6831: yy737:",
          "6832:   YYDEBUG(737, *YYCURSOR);",
          "6833:   yych = *++YYCURSOR;",
          "6834:   if (yych == 'P') goto yy787;",
          "6835:   if (yych == 'p') goto yy787;",
          "6836:   goto yy187;",
          "6837: yy738:",
          "6838:   YYDEBUG(738, *YYCURSOR);",
          "6839:   yych = *++YYCURSOR;",
          "6840:   if (yych == 'D') goto yy753;",
          "6841:   if (yych == 'd') goto yy753;",
          "6842:   goto yy187;",
          "6843: yy739:",
          "6844:   YYDEBUG(739, *YYCURSOR);",
          "6845:   yych = *++YYCURSOR;",
          "6846:   if (yych == 'A') goto yy750;",
          "6847:   if (yych == 'a') goto yy750;",
          "6848:   goto yy187;",
          "6849: yy740:",
          "6850:   YYDEBUG(740, *YYCURSOR);",
          "6851:   yych = *++YYCURSOR;",
          "6852:   if (yych <= 'T') {",
          "6853:    if (yych == 'I') goto yy741;",
          "6854:    if (yych <= 'S') goto yy187;",
          "6855:    goto yy742;",
          "6856:   } else {",
          "6857:    if (yych <= 'i') {",
          "6858:     if (yych <= 'h') goto yy187;",
          "6859:    } else {",
          "6860:     if (yych == 't') goto yy742;",
          "6861:     goto yy187;",
          "6862:    }",
          "6863:   }",
          "6864: yy741:",
          "6865:   YYDEBUG(741, *YYCURSOR);",
          "6866:   yych = *++YYCURSOR;",
          "6867:   if (yych == 'T') goto yy748;",
          "6868:   if (yych == 't') goto yy748;",
          "6869:   goto yy187;",
          "6870: yy742:",
          "6871:   YYDEBUG(742, *YYCURSOR);",
          "6872:   yych = *++YYCURSOR;",
          "6873:   if (yych == 'E') goto yy743;",
          "6874:   if (yych != 'e') goto yy187;",
          "6875: yy743:",
          "6876:   YYDEBUG(743, *YYCURSOR);",
          "6877:   yych = *++YYCURSOR;",
          "6878:   if (yych == 'N') goto yy744;",
          "6879:   if (yych != 'n') goto yy187;",
          "6880: yy744:",
          "6881:   YYDEBUG(744, *YYCURSOR);",
          "6882:   yych = *++YYCURSOR;",
          "6883:   if (yych == 'D') goto yy745;",
          "6884:   if (yych != 'd') goto yy187;",
          "6885: yy745:",
          "6886:   YYDEBUG(745, *YYCURSOR);",
          "6887:   yych = *++YYCURSOR;",
          "6888:   if (yych == 'S') goto yy746;",
          "6889:   if (yych != 's') goto yy187;",
          "6890: yy746:",
          "6891:   YYDEBUG(746, *YYCURSOR);",
          "6892:   ++YYCURSOR;",
          "6893:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6894:    goto yy186;",
          "6895:   }",
          "6896:   YYDEBUG(747, *YYCURSOR);",
          "6897:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6898: #line 1168 \"Zend/zend_language_scanner.l\"",
          "6899:   {",
          "6900:  return T_EXTENDS;",
          "6901: }",
          "6902: #line 6903 \"Zend/zend_language_scanner.c\"",
          "6903: yy748:",
          "6904:   YYDEBUG(748, *YYCURSOR);",
          "6905:   ++YYCURSOR;",
          "6906:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6907:    goto yy186;",
          "6908:   }",
          "6909:   YYDEBUG(749, *YYCURSOR);",
          "6910:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6911: #line 1020 \"Zend/zend_language_scanner.l\"",
          "6912:   {",
          "6913:  return T_EXIT;",
          "6914: }",
          "6915: #line 6916 \"Zend/zend_language_scanner.c\"",
          "6916: yy750:",
          "6917:   YYDEBUG(750, *YYCURSOR);",
          "6918:   yych = *++YYCURSOR;",
          "6919:   if (yych == 'L') goto yy751;",
          "6920:   if (yych != 'l') goto yy187;",
          "6921: yy751:",
          "6922:   YYDEBUG(751, *YYCURSOR);",
          "6923:   ++YYCURSOR;",
          "6924:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6925:    goto yy186;",
          "6926:   }",
          "6927:   YYDEBUG(752, *YYCURSOR);",
          "6928:   yyleng = YYCURSOR - SCNG(yy_text);",
          "6929: #line 1254 \"Zend/zend_language_scanner.l\"",
          "6930:   {",
          "6931:  return T_EVAL;",
          "6932: }",
          "6933: #line 6934 \"Zend/zend_language_scanner.c\"",
          "6934: yy753:",
          "6935:   YYDEBUG(753, *YYCURSOR);",
          "6936:   yych = *++YYCURSOR;",
          "6937:   YYDEBUG(-1, yych);",
          "6938:   switch (yych) {",
          "6939:   case 'D':",
          "6940:   case 'd': goto yy754;",
          "6941:   case 'F':",
          "6942:   case 'f': goto yy755;",
          "6943:   case 'I':",
          "6944:   case 'i': goto yy756;",
          "6945:   case 'S':",
          "6946:   case 's': goto yy757;",
          "6947:   case 'W':",
          "6948:   case 'w': goto yy758;",
          "6949:   default: goto yy187;",
          "6950:   }",
          "6951: yy754:",
          "6952:   YYDEBUG(754, *YYCURSOR);",
          "6953:   yych = *++YYCURSOR;",
          "6954:   if (yych == 'E') goto yy780;",
          "6955:   if (yych == 'e') goto yy780;",
          "6956:   goto yy187;",
          "6957: yy755:",
          "6958:   YYDEBUG(755, *YYCURSOR);",
          "6959:   yych = *++YYCURSOR;",
          "6960:   if (yych == 'O') goto yy772;",
          "6961:   if (yych == 'o') goto yy772;",
          "6962:   goto yy187;",
          "6963: yy756:",
          "6964:   YYDEBUG(756, *YYCURSOR);",
          "6965:   yych = *++YYCURSOR;",
          "6966:   if (yych == 'F') goto yy770;",
          "6967:   if (yych == 'f') goto yy770;",
          "6968:   goto yy187;",
          "6969: yy757:",
          "6970:   YYDEBUG(757, *YYCURSOR);",
          "6971:   yych = *++YYCURSOR;",
          "6972:   if (yych == 'W') goto yy764;",
          "6973:   if (yych == 'w') goto yy764;",
          "6974:   goto yy187;",
          "6975: yy758:",
          "6976:   YYDEBUG(758, *YYCURSOR);",
          "6977:   yych = *++YYCURSOR;",
          "6978:   if (yych == 'H') goto yy759;",
          "6979:   if (yych != 'h') goto yy187;",
          "6980: yy759:",
          "6981:   YYDEBUG(759, *YYCURSOR);",
          "6982:   yych = *++YYCURSOR;",
          "6983:   if (yych == 'I') goto yy760;",
          "6984:   if (yych != 'i') goto yy187;",
          "6985: yy760:",
          "6986:   YYDEBUG(760, *YYCURSOR);",
          "6987:   yych = *++YYCURSOR;",
          "6988:   if (yych == 'L') goto yy761;",
          "6989:   if (yych != 'l') goto yy187;",
          "6990: yy761:",
          "6991:   YYDEBUG(761, *YYCURSOR);",
          "6992:   yych = *++YYCURSOR;",
          "6993:   if (yych == 'E') goto yy762;",
          "6994:   if (yych != 'e') goto yy187;",
          "6995: yy762:",
          "6996:   YYDEBUG(762, *YYCURSOR);",
          "6997:   ++YYCURSOR;",
          "6998:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "6999:    goto yy186;",
          "7000:   }",
          "7001:   YYDEBUG(763, *YYCURSOR);",
          "7002:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7003: #line 1080 \"Zend/zend_language_scanner.l\"",
          "7004:   {",
          "7005:  return T_ENDWHILE;",
          "7006: }",
          "7007: #line 7008 \"Zend/zend_language_scanner.c\"",
          "7008: yy764:",
          "7009:   YYDEBUG(764, *YYCURSOR);",
          "7010:   yych = *++YYCURSOR;",
          "7011:   if (yych == 'I') goto yy765;",
          "7012:   if (yych != 'i') goto yy187;",
          "7013: yy765:",
          "7014:   YYDEBUG(765, *YYCURSOR);",
          "7015:   yych = *++YYCURSOR;",
          "7016:   if (yych == 'T') goto yy766;",
          "7017:   if (yych != 't') goto yy187;",
          "7018: yy766:",
          "7019:   YYDEBUG(766, *YYCURSOR);",
          "7020:   yych = *++YYCURSOR;",
          "7021:   if (yych == 'C') goto yy767;",
          "7022:   if (yych != 'c') goto yy187;",
          "7023: yy767:",
          "7024:   YYDEBUG(767, *YYCURSOR);",
          "7025:   yych = *++YYCURSOR;",
          "7026:   if (yych == 'H') goto yy768;",
          "7027:   if (yych != 'h') goto yy187;",
          "7028: yy768:",
          "7029:   YYDEBUG(768, *YYCURSOR);",
          "7030:   ++YYCURSOR;",
          "7031:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7032:    goto yy186;",
          "7033:   }",
          "7034:   YYDEBUG(769, *YYCURSOR);",
          "7035:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7036: #line 1124 \"Zend/zend_language_scanner.l\"",
          "7037:   {",
          "7038:  return T_ENDSWITCH;",
          "7039: }",
          "7040: #line 7041 \"Zend/zend_language_scanner.c\"",
          "7041: yy770:",
          "7042:   YYDEBUG(770, *YYCURSOR);",
          "7043:   ++YYCURSOR;",
          "7044:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7045:    goto yy186;",
          "7046:   }",
          "7047:   YYDEBUG(771, *YYCURSOR);",
          "7048:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7049: #line 1068 \"Zend/zend_language_scanner.l\"",
          "7050:   {",
          "7051:  return T_ENDIF;",
          "7052: }",
          "7053: #line 7054 \"Zend/zend_language_scanner.c\"",
          "7054: yy772:",
          "7055:   YYDEBUG(772, *YYCURSOR);",
          "7056:   yych = *++YYCURSOR;",
          "7057:   if (yych == 'R') goto yy773;",
          "7058:   if (yych != 'r') goto yy187;",
          "7059: yy773:",
          "7060:   YYDEBUG(773, *YYCURSOR);",
          "7061:   ++YYCURSOR;",
          "7062:   if ((yych = *YYCURSOR) <= '^') {",
          "7063:    if (yych <= '@') {",
          "7064:     if (yych <= '/') goto yy774;",
          "7065:     if (yych <= '9') goto yy186;",
          "7066:    } else {",
          "7067:     if (yych == 'E') goto yy775;",
          "7068:     if (yych <= 'Z') goto yy186;",
          "7069:    }",
          "7070:   } else {",
          "7071:    if (yych <= 'd') {",
          "7072:     if (yych != '`') goto yy186;",
          "7073:    } else {",
          "7074:     if (yych <= 'e') goto yy775;",
          "7075:     if (yych <= 'z') goto yy186;",
          "7076:     if (yych >= 0x7F) goto yy186;",
          "7077:    }",
          "7078:   }",
          "7079: yy774:",
          "7080:   YYDEBUG(774, *YYCURSOR);",
          "7081:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7082: #line 1092 \"Zend/zend_language_scanner.l\"",
          "7083:   {",
          "7084:  return T_ENDFOR;",
          "7085: }",
          "7086: #line 7087 \"Zend/zend_language_scanner.c\"",
          "7087: yy775:",
          "7088:   YYDEBUG(775, *YYCURSOR);",
          "7089:   yych = *++YYCURSOR;",
          "7090:   if (yych == 'A') goto yy776;",
          "7091:   if (yych != 'a') goto yy187;",
          "7092: yy776:",
          "7093:   YYDEBUG(776, *YYCURSOR);",
          "7094:   yych = *++YYCURSOR;",
          "7095:   if (yych == 'C') goto yy777;",
          "7096:   if (yych != 'c') goto yy187;",
          "7097: yy777:",
          "7098:   YYDEBUG(777, *YYCURSOR);",
          "7099:   yych = *++YYCURSOR;",
          "7100:   if (yych == 'H') goto yy778;",
          "7101:   if (yych != 'h') goto yy187;",
          "7102: yy778:",
          "7103:   YYDEBUG(778, *YYCURSOR);",
          "7104:   ++YYCURSOR;",
          "7105:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7106:    goto yy186;",
          "7107:   }",
          "7108:   YYDEBUG(779, *YYCURSOR);",
          "7109:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7110: #line 1100 \"Zend/zend_language_scanner.l\"",
          "7111:   {",
          "7112:  return T_ENDFOREACH;",
          "7113: }",
          "7114: #line 7115 \"Zend/zend_language_scanner.c\"",
          "7115: yy780:",
          "7116:   YYDEBUG(780, *YYCURSOR);",
          "7117:   yych = *++YYCURSOR;",
          "7118:   if (yych == 'C') goto yy781;",
          "7119:   if (yych != 'c') goto yy187;",
          "7120: yy781:",
          "7121:   YYDEBUG(781, *YYCURSOR);",
          "7122:   yych = *++YYCURSOR;",
          "7123:   if (yych == 'L') goto yy782;",
          "7124:   if (yych != 'l') goto yy187;",
          "7125: yy782:",
          "7126:   YYDEBUG(782, *YYCURSOR);",
          "7127:   yych = *++YYCURSOR;",
          "7128:   if (yych == 'A') goto yy783;",
          "7129:   if (yych != 'a') goto yy187;",
          "7130: yy783:",
          "7131:   YYDEBUG(783, *YYCURSOR);",
          "7132:   yych = *++YYCURSOR;",
          "7133:   if (yych == 'R') goto yy784;",
          "7134:   if (yych != 'r') goto yy187;",
          "7135: yy784:",
          "7136:   YYDEBUG(784, *YYCURSOR);",
          "7137:   yych = *++YYCURSOR;",
          "7138:   if (yych == 'E') goto yy785;",
          "7139:   if (yych != 'e') goto yy187;",
          "7140: yy785:",
          "7141:   YYDEBUG(785, *YYCURSOR);",
          "7142:   ++YYCURSOR;",
          "7143:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7144:    goto yy186;",
          "7145:   }",
          "7146:   YYDEBUG(786, *YYCURSOR);",
          "7147:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7148: #line 1108 \"Zend/zend_language_scanner.l\"",
          "7149:   {",
          "7150:  return T_ENDDECLARE;",
          "7151: }",
          "7152: #line 7153 \"Zend/zend_language_scanner.c\"",
          "7153: yy787:",
          "7154:   YYDEBUG(787, *YYCURSOR);",
          "7155:   yych = *++YYCURSOR;",
          "7156:   if (yych == 'T') goto yy788;",
          "7157:   if (yych != 't') goto yy187;",
          "7158: yy788:",
          "7159:   YYDEBUG(788, *YYCURSOR);",
          "7160:   yych = *++YYCURSOR;",
          "7161:   if (yych == 'Y') goto yy789;",
          "7162:   if (yych != 'y') goto yy187;",
          "7163: yy789:",
          "7164:   YYDEBUG(789, *YYCURSOR);",
          "7165:   ++YYCURSOR;",
          "7166:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7167:    goto yy186;",
          "7168:   }",
          "7169:   YYDEBUG(790, *YYCURSOR);",
          "7170:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7171: #line 1294 \"Zend/zend_language_scanner.l\"",
          "7172:   {",
          "7173:  return T_EMPTY;",
          "7174: }",
          "7175: #line 7176 \"Zend/zend_language_scanner.c\"",
          "7176: yy791:",
          "7177:   YYDEBUG(791, *YYCURSOR);",
          "7178:   yych = *++YYCURSOR;",
          "7179:   if (yych == 'E') goto yy792;",
          "7180:   if (yych != 'e') goto yy187;",
          "7181: yy792:",
          "7182:   YYDEBUG(792, *YYCURSOR);",
          "7183:   ++YYCURSOR;",
          "7184:   if ((yych = *YYCURSOR) <= '^') {",
          "7185:    if (yych <= '@') {",
          "7186:     if (yych <= '/') goto yy793;",
          "7187:     if (yych <= '9') goto yy186;",
          "7188:    } else {",
          "7189:     if (yych == 'I') goto yy794;",
          "7190:     if (yych <= 'Z') goto yy186;",
          "7191:    }",
          "7192:   } else {",
          "7193:    if (yych <= 'h') {",
          "7194:     if (yych != '`') goto yy186;",
          "7195:    } else {",
          "7196:     if (yych <= 'i') goto yy794;",
          "7197:     if (yych <= 'z') goto yy186;",
          "7198:     if (yych >= 0x7F) goto yy186;",
          "7199:    }",
          "7200:   }",
          "7201: yy793:",
          "7202:   YYDEBUG(793, *YYCURSOR);",
          "7203:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7204: #line 1072 \"Zend/zend_language_scanner.l\"",
          "7205:   {",
          "7206:  return T_ELSE;",
          "7207: }",
          "7208: #line 7209 \"Zend/zend_language_scanner.c\"",
          "7209: yy794:",
          "7210:   YYDEBUG(794, *YYCURSOR);",
          "7211:   yych = *++YYCURSOR;",
          "7212:   if (yych == 'F') goto yy795;",
          "7213:   if (yych != 'f') goto yy187;",
          "7214: yy795:",
          "7215:   YYDEBUG(795, *YYCURSOR);",
          "7216:   ++YYCURSOR;",
          "7217:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7218:    goto yy186;",
          "7219:   }",
          "7220:   YYDEBUG(796, *YYCURSOR);",
          "7221:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7222: #line 1064 \"Zend/zend_language_scanner.l\"",
          "7223:   {",
          "7224:  return T_ELSEIF;",
          "7225: }",
          "7226: #line 7227 \"Zend/zend_language_scanner.c\"",
          "7227: yy797:",
          "7228:   YYDEBUG(797, *YYCURSOR);",
          "7229:   yych = *++YYCURSOR;",
          "7230:   if (yych == 'O') goto yy798;",
          "7231:   if (yych != 'o') goto yy187;",
          "7232: yy798:",
          "7233:   YYDEBUG(798, *YYCURSOR);",
          "7234:   ++YYCURSOR;",
          "7235:   if (yybm[0+(yych = *YYCURSOR)] & 4) {",
          "7236:    goto yy186;",
          "7237:   }",
          "7238:   YYDEBUG(799, *YYCURSOR);",
          "7239:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7240: #line 1148 \"Zend/zend_language_scanner.l\"",
          "7241:   {",
          "7242:  return T_ECHO;",
          "7243: }",
          "7244: #line 7245 \"Zend/zend_language_scanner.c\"",
          "7245:  }",
          "7247: yyc_ST_LOOKING_FOR_PROPERTY:",
          "7248:  {",
          "7249:   static const unsigned char yybm[] = {",
          "7250:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7251:      0, 128, 128,   0,   0, 128,   0,   0,",
          "7252:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7253:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7254:    128,   0,   0,   0,   0,   0,   0,   0,",
          "7255:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7256:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7257:     64,  64,   0,   0,   0,   0,   0,   0,",
          "7258:      0,  64,  64,  64,  64,  64,  64,  64,",
          "7259:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7260:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7261:     64,  64,  64,   0,   0,   0,   0,  64,",
          "7262:      0,  64,  64,  64,  64,  64,  64,  64,",
          "7263:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7264:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7265:     64,  64,  64,   0,   0,   0,   0,  64,",
          "7266:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7267:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7268:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7269:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7270:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7271:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7272:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7273:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7274:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7275:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7276:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7277:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7278:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7279:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7280:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7281:     64,  64,  64,  64,  64,  64,  64,  64,",
          "7282:   };",
          "7283:   YYDEBUG(800, *YYCURSOR);",
          "7284:   YYFILL(2);",
          "7285:   yych = *YYCURSOR;",
          "7286:   if (yych <= '-') {",
          "7287:    if (yych <= '\\r') {",
          "7288:     if (yych <= 0x08) goto yy808;",
          "7289:     if (yych <= '\\n') goto yy802;",
          "7290:     if (yych <= '\\f') goto yy808;",
          "7291:    } else {",
          "7292:     if (yych == ' ') goto yy802;",
          "7293:     if (yych <= ',') goto yy808;",
          "7294:     goto yy804;",
          "7295:    }",
          "7296:   } else {",
          "7297:    if (yych <= '_') {",
          "7298:     if (yych <= '@') goto yy808;",
          "7299:     if (yych <= 'Z') goto yy806;",
          "7300:     if (yych <= '^') goto yy808;",
          "7301:     goto yy806;",
          "7302:    } else {",
          "7303:     if (yych <= '`') goto yy808;",
          "7304:     if (yych <= 'z') goto yy806;",
          "7305:     if (yych <= '~') goto yy808;",
          "7306:     goto yy806;",
          "7307:    }",
          "7308:   }",
          "7309: yy802:",
          "7310:   YYDEBUG(802, *YYCURSOR);",
          "7311:   ++YYCURSOR;",
          "7312:   yych = *YYCURSOR;",
          "7313:   goto yy814;",
          "7314: yy803:",
          "7315:   YYDEBUG(803, *YYCURSOR);",
          "7316:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7317: #line 1181 \"Zend/zend_language_scanner.l\"",
          "7318:   {",
          "7320:  zendlval->value.str.len = yyleng;",
          "7321:  zendlval->type = IS_STRING;",
          "7322:  HANDLE_NEWLINES(yytext, yyleng);",
          "7323:  return T_WHITESPACE;",
          "7324: }",
          "7325: #line 7326 \"Zend/zend_language_scanner.c\"",
          "7326: yy804:",
          "7327:   YYDEBUG(804, *YYCURSOR);",
          "7328:   ++YYCURSOR;",
          "7329:   if ((yych = *YYCURSOR) == '>') goto yy811;",
          "7330: yy805:",
          "7331:   YYDEBUG(805, *YYCURSOR);",
          "7332:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7333: #line 1200 \"Zend/zend_language_scanner.l\"",
          "7334:   {",
          "7335:  yyless(0);",
          "7336:  yy_pop_state(TSRMLS_C);",
          "7337:  goto restart;",
          "7338: }",
          "7339: #line 7340 \"Zend/zend_language_scanner.c\"",
          "7340: yy806:",
          "7341:   YYDEBUG(806, *YYCURSOR);",
          "7342:   ++YYCURSOR;",
          "7343:   yych = *YYCURSOR;",
          "7344:   goto yy810;",
          "7345: yy807:",
          "7346:   YYDEBUG(807, *YYCURSOR);",
          "7347:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7348: #line 1193 \"Zend/zend_language_scanner.l\"",
          "7349:   {",
          "7350:  yy_pop_state(TSRMLS_C);",
          "7351:  zend_copy_value(zendlval, yytext, yyleng);",
          "7352:  zendlval->type = IS_STRING;",
          "7353:  return T_STRING;",
          "7354: }",
          "7355: #line 7356 \"Zend/zend_language_scanner.c\"",
          "7356: yy808:",
          "7357:   YYDEBUG(808, *YYCURSOR);",
          "7358:   yych = *++YYCURSOR;",
          "7359:   goto yy805;",
          "7360: yy809:",
          "7361:   YYDEBUG(809, *YYCURSOR);",
          "7362:   ++YYCURSOR;",
          "7363:   YYFILL(1);",
          "7364:   yych = *YYCURSOR;",
          "7365: yy810:",
          "7366:   YYDEBUG(810, *YYCURSOR);",
          "7367:   if (yybm[0+yych] & 64) {",
          "7368:    goto yy809;",
          "7369:   }",
          "7370:   goto yy807;",
          "7371: yy811:",
          "7372:   YYDEBUG(811, *YYCURSOR);",
          "7373:   ++YYCURSOR;",
          "7374:   YYDEBUG(812, *YYCURSOR);",
          "7375:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7376: #line 1189 \"Zend/zend_language_scanner.l\"",
          "7377:   {",
          "7378:  return T_OBJECT_OPERATOR;",
          "7379: }",
          "7380: #line 7381 \"Zend/zend_language_scanner.c\"",
          "7381: yy813:",
          "7382:   YYDEBUG(813, *YYCURSOR);",
          "7383:   ++YYCURSOR;",
          "7384:   YYFILL(1);",
          "7385:   yych = *YYCURSOR;",
          "7386: yy814:",
          "7387:   YYDEBUG(814, *YYCURSOR);",
          "7388:   if (yybm[0+yych] & 128) {",
          "7389:    goto yy813;",
          "7390:   }",
          "7391:   goto yy803;",
          "7392:  }",
          "7394: yyc_ST_LOOKING_FOR_VARNAME:",
          "7395:  {",
          "7396:   static const unsigned char yybm[] = {",
          "7397:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7398:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7399:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7400:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7401:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7402:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7403:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7404:    128, 128,   0,   0,   0,   0,   0,   0,",
          "7405:      0, 128, 128, 128, 128, 128, 128, 128,",
          "7406:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7407:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7408:    128, 128, 128,   0,   0,   0,   0, 128,",
          "7409:      0, 128, 128, 128, 128, 128, 128, 128,",
          "7410:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7411:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7412:    128, 128, 128,   0,   0,   0,   0, 128,",
          "7413:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7414:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7415:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7416:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7417:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7418:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7419:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7420:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7421:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7422:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7423:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7424:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7425:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7426:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7427:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7428:    128, 128, 128, 128, 128, 128, 128, 128,",
          "7429:   };",
          "7430:   YYDEBUG(815, *YYCURSOR);",
          "7431:   YYFILL(2);",
          "7432:   yych = *YYCURSOR;",
          "7433:   if (yych <= '_') {",
          "7434:    if (yych <= '@') goto yy819;",
          "7435:    if (yych <= 'Z') goto yy817;",
          "7436:    if (yych <= '^') goto yy819;",
          "7437:   } else {",
          "7438:    if (yych <= '`') goto yy819;",
          "7439:    if (yych <= 'z') goto yy817;",
          "7440:    if (yych <= '~') goto yy819;",
          "7441:   }",
          "7442: yy817:",
          "7443:   YYDEBUG(817, *YYCURSOR);",
          "7444:   yyaccept = 0;",
          "7445:   yych = *(YYMARKER = ++YYCURSOR);",
          "7446:   if (yych <= '_') {",
          "7447:    if (yych <= '@') {",
          "7448:     if (yych <= '/') goto yy818;",
          "7449:     if (yych <= '9') goto yy821;",
          "7450:    } else {",
          "7451:     if (yych <= '[') goto yy821;",
          "7452:     if (yych >= '_') goto yy821;",
          "7453:    }",
          "7454:   } else {",
          "7455:    if (yych <= '|') {",
          "7456:     if (yych <= '`') goto yy818;",
          "7457:     if (yych <= 'z') goto yy821;",
          "7458:    } else {",
          "7459:     if (yych != '~') goto yy821;",
          "7460:    }",
          "7461:   }",
          "7462: yy818:",
          "7463:   YYDEBUG(818, *YYCURSOR);",
          "7464:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7465: #line 1486 \"Zend/zend_language_scanner.l\"",
          "7466:   {",
          "7467:  yyless(0);",
          "7468:  yy_pop_state(TSRMLS_C);",
          "7469:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7470:  goto restart;",
          "7471: }",
          "7472: #line 7473 \"Zend/zend_language_scanner.c\"",
          "7473: yy819:",
          "7474:   YYDEBUG(819, *YYCURSOR);",
          "7475:   yych = *++YYCURSOR;",
          "7476:   goto yy818;",
          "7477: yy820:",
          "7478:   YYDEBUG(820, *YYCURSOR);",
          "7479:   ++YYCURSOR;",
          "7480:   YYFILL(1);",
          "7481:   yych = *YYCURSOR;",
          "7482: yy821:",
          "7483:   YYDEBUG(821, *YYCURSOR);",
          "7484:   if (yybm[0+yych] & 128) {",
          "7485:    goto yy820;",
          "7486:   }",
          "7487:   if (yych == '[') goto yy823;",
          "7488:   if (yych == '}') goto yy823;",
          "7489:   YYDEBUG(822, *YYCURSOR);",
          "7490:   YYCURSOR = YYMARKER;",
          "7491:   goto yy818;",
          "7492: yy823:",
          "7493:   YYDEBUG(823, *YYCURSOR);",
          "7494:   ++YYCURSOR;",
          "7495:   YYDEBUG(824, *YYCURSOR);",
          "7496:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7497: #line 1476 \"Zend/zend_language_scanner.l\"",
          "7498:   {",
          "7499:  yyless(yyleng - 1);",
          "7500:  zend_copy_value(zendlval, yytext, yyleng);",
          "7501:  zendlval->type = IS_STRING;",
          "7502:  yy_pop_state(TSRMLS_C);",
          "7503:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "7504:  return T_STRING_VARNAME;",
          "7505: }",
          "7506: #line 7507 \"Zend/zend_language_scanner.c\"",
          "7507:  }",
          "7509: yyc_ST_NOWDOC:",
          "7510:  YYDEBUG(825, *YYCURSOR);",
          "7511:  YYFILL(1);",
          "7512:  yych = *YYCURSOR;",
          "7513:  YYDEBUG(827, *YYCURSOR);",
          "7514:  ++YYCURSOR;",
          "7515:  YYDEBUG(828, *YYCURSOR);",
          "7516:  yyleng = YYCURSOR - SCNG(yy_text);",
          "7517: #line 2370 \"Zend/zend_language_scanner.l\"",
          "7518:  {",
          "7519:  int newline = 0;",
          "7521:  zend_heredoc_label *heredoc_label = zend_ptr_stack_top(&SCNG(heredoc_label_stack));",
          "7523:  if (YYCURSOR > YYLIMIT) {",
          "7524:   return 0;",
          "7525:  }",
          "7527:  YYCURSOR--;",
          "7529:  while (YYCURSOR < YYLIMIT) {",
          "7530:   switch (*YYCURSOR++) {",
          "7531:    case '\\r':",
          "7532:     if (*YYCURSOR == '\\n') {",
          "7533:      YYCURSOR++;",
          "7534:     }",
          "7536:    case '\\n':",
          "7538:     if (IS_LABEL_START(*YYCURSOR) && heredoc_label->length < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, heredoc_label->label, heredoc_label->length)) {",
          "7539:      YYCTYPE *end = YYCURSOR + heredoc_label->length;",
          "7541:      if (*end == ';') {",
          "7542:       end++;",
          "7543:      }",
          "7545:      if (*end == '\\n' || *end == '\\r') {",
          "7548:       if (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {",
          "7550:       } else {",
          "7551:        newline = 1;",
          "7552:       }",
          "7555:       BEGIN(ST_END_HEREDOC);",
          "7557:       goto nowdoc_scan_done;",
          "7558:      }",
          "7559:     }",
          "7561:    default:",
          "7562:     continue;",
          "7563:   }",
          "7564:  }",
          "7566: nowdoc_scan_done:",
          "7567:  yyleng = YYCURSOR - SCNG(yy_text);",
          "7569:  zend_copy_value(zendlval, yytext, yyleng - newline);",
          "7570:  zendlval->type = IS_STRING;",
          "7571:  HANDLE_NEWLINES(yytext, yyleng - newline);",
          "7572:  return T_ENCAPSED_AND_WHITESPACE;",
          "7573: }",
          "7574: #line 7575 \"Zend/zend_language_scanner.c\"",
          "7576: yyc_ST_VAR_OFFSET:",
          "7577:  {",
          "7578:   static const unsigned char yybm[] = {",
          "7579:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7580:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7581:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7582:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7583:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7584:      0,   0,   0,   0,   0,   0,   0,   0,",
          "7585:    240, 240, 112, 112, 112, 112, 112, 112,",
          "7586:    112, 112,   0,   0,   0,   0,   0,   0,",
          "7587:      0,  80,  80,  80,  80,  80,  80,  16,",
          "7588:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7589:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7590:     16,  16,  16,   0,   0,   0,   0,  16,",
          "7591:      0,  80,  80,  80,  80,  80,  80,  16,",
          "7592:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7593:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7594:     16,  16,  16,   0,   0,   0,   0,  16,",
          "7595:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7596:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7597:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7598:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7599:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7600:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7601:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7602:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7603:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7604:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7605:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7606:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7607:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7608:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7609:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7610:     16,  16,  16,  16,  16,  16,  16,  16,",
          "7611:   };",
          "7612:   YYDEBUG(829, *YYCURSOR);",
          "7613:   YYFILL(3);",
          "7614:   yych = *YYCURSOR;",
          "7615:   if (yych <= '/') {",
          "7616:    if (yych <= ' ') {",
          "7617:     if (yych <= '\\f') {",
          "7618:      if (yych <= 0x08) goto yy843;",
          "7619:      if (yych <= '\\n') goto yy839;",
          "7620:      goto yy843;",
          "7621:     } else {",
          "7622:      if (yych <= '\\r') goto yy839;",
          "7623:      if (yych <= 0x1F) goto yy843;",
          "7624:      goto yy839;",
          "7625:     }",
          "7626:    } else {",
          "7627:     if (yych <= '$') {",
          "7628:      if (yych <= '\"') goto yy838;",
          "7629:      if (yych <= '#') goto yy839;",
          "7630:      goto yy834;",
          "7631:     } else {",
          "7632:      if (yych == '\\'') goto yy839;",
          "7633:      goto yy838;",
          "7634:     }",
          "7635:    }",
          "7636:   } else {",
          "7637:    if (yych <= '\\\\') {",
          "7638:     if (yych <= '@') {",
          "7639:      if (yych <= '0') goto yy831;",
          "7640:      if (yych <= '9') goto yy833;",
          "7641:      goto yy838;",
          "7642:     } else {",
          "7643:      if (yych <= 'Z') goto yy841;",
          "7644:      if (yych <= '[') goto yy838;",
          "7645:      goto yy839;",
          "7646:     }",
          "7647:    } else {",
          "7648:     if (yych <= '_') {",
          "7649:      if (yych <= ']') goto yy836;",
          "7650:      if (yych <= '^') goto yy838;",
          "7651:      goto yy841;",
          "7652:     } else {",
          "7653:      if (yych <= '`') goto yy838;",
          "7654:      if (yych <= 'z') goto yy841;",
          "7655:      if (yych <= '~') goto yy838;",
          "7656:      goto yy841;",
          "7657:     }",
          "7658:    }",
          "7659:   }",
          "7660: yy831:",
          "7661:   YYDEBUG(831, *YYCURSOR);",
          "7662:   yyaccept = 0;",
          "7663:   yych = *(YYMARKER = ++YYCURSOR);",
          "7664:   if (yych <= 'W') {",
          "7665:    if (yych <= '9') {",
          "7666:     if (yych >= '0') goto yy855;",
          "7667:    } else {",
          "7668:     if (yych == 'B') goto yy852;",
          "7669:    }",
          "7670:   } else {",
          "7671:    if (yych <= 'b') {",
          "7672:     if (yych <= 'X') goto yy854;",
          "7673:     if (yych >= 'b') goto yy852;",
          "7674:    } else {",
          "7675:     if (yych == 'x') goto yy854;",
          "7676:    }",
          "7677:   }",
          "7678: yy832:",
          "7679:   YYDEBUG(832, *YYCURSOR);",
          "7680:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7681: #line 1564 \"Zend/zend_language_scanner.l\"",
          "7683:  if (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {",
          "7684:   zendlval->value.lval = strtol(yytext, NULL, 10);",
          "7685:   zendlval->type = IS_LONG;",
          "7686:  } else {",
          "7687:   zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "7688:   zendlval->value.str.len = yyleng;",
          "7689:   zendlval->type = IS_STRING;",
          "7690:  }",
          "7691:  return T_NUM_STRING;",
          "7692: }",
          "7693: #line 7694 \"Zend/zend_language_scanner.c\"",
          "7694: yy833:",
          "7695:   YYDEBUG(833, *YYCURSOR);",
          "7696:   yych = *++YYCURSOR;",
          "7697:   goto yy851;",
          "7698: yy834:",
          "7699:   YYDEBUG(834, *YYCURSOR);",
          "7700:   ++YYCURSOR;",
          "7701:   if ((yych = *YYCURSOR) <= '_') {",
          "7702:    if (yych <= '@') goto yy835;",
          "7703:    if (yych <= 'Z') goto yy847;",
          "7704:    if (yych >= '_') goto yy847;",
          "7705:   } else {",
          "7706:    if (yych <= '`') goto yy835;",
          "7707:    if (yych <= 'z') goto yy847;",
          "7708:    if (yych >= 0x7F) goto yy847;",
          "7709:   }",
          "7710: yy835:",
          "7711:   YYDEBUG(835, *YYCURSOR);",
          "7712:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7713: #line 1896 \"Zend/zend_language_scanner.l\"",
          "7714:   {",
          "7716:  return yytext[0];",
          "7717: }",
          "7718: #line 7719 \"Zend/zend_language_scanner.c\"",
          "7719: yy836:",
          "7720:   YYDEBUG(836, *YYCURSOR);",
          "7721:   ++YYCURSOR;",
          "7722:   YYDEBUG(837, *YYCURSOR);",
          "7723:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7724: #line 1891 \"Zend/zend_language_scanner.l\"",
          "7725:   {",
          "7726:  yy_pop_state(TSRMLS_C);",
          "7727:  return ']';",
          "7728: }",
          "7729: #line 7730 \"Zend/zend_language_scanner.c\"",
          "7730: yy838:",
          "7731:   YYDEBUG(838, *YYCURSOR);",
          "7732:   yych = *++YYCURSOR;",
          "7733:   goto yy835;",
          "7734: yy839:",
          "7735:   YYDEBUG(839, *YYCURSOR);",
          "7736:   ++YYCURSOR;",
          "7737:   YYDEBUG(840, *YYCURSOR);",
          "7738:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7739: #line 1901 \"Zend/zend_language_scanner.l\"",
          "7740:   {",
          "7742:  yyless(0);",
          "7743:  yy_pop_state(TSRMLS_C);",
          "7744:  return T_ENCAPSED_AND_WHITESPACE;",
          "7745: }",
          "7746: #line 7747 \"Zend/zend_language_scanner.c\"",
          "7747: yy841:",
          "7748:   YYDEBUG(841, *YYCURSOR);",
          "7749:   ++YYCURSOR;",
          "7750:   yych = *YYCURSOR;",
          "7751:   goto yy846;",
          "7752: yy842:",
          "7753:   YYDEBUG(842, *YYCURSOR);",
          "7754:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7755: #line 1908 \"Zend/zend_language_scanner.l\"",
          "7756:   {",
          "7757:  zend_copy_value(zendlval, yytext, yyleng);",
          "7758:  zendlval->type = IS_STRING;",
          "7759:  return T_STRING;",
          "7760: }",
          "7761: #line 7762 \"Zend/zend_language_scanner.c\"",
          "7762: yy843:",
          "7763:   YYDEBUG(843, *YYCURSOR);",
          "7764:   ++YYCURSOR;",
          "7765:   YYDEBUG(844, *YYCURSOR);",
          "7766:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7767: #line 2428 \"Zend/zend_language_scanner.l\"",
          "7768:   {",
          "7769:  if (YYCURSOR > YYLIMIT) {",
          "7770:   return 0;",
          "7771:  }",
          "7773:  zend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);",
          "7774:  goto restart;",
          "7775: }",
          "7776: #line 7777 \"Zend/zend_language_scanner.c\"",
          "7777: yy845:",
          "7778:   YYDEBUG(845, *YYCURSOR);",
          "7779:   ++YYCURSOR;",
          "7780:   YYFILL(1);",
          "7781:   yych = *YYCURSOR;",
          "7782: yy846:",
          "7783:   YYDEBUG(846, *YYCURSOR);",
          "7784:   if (yybm[0+yych] & 16) {",
          "7785:    goto yy845;",
          "7786:   }",
          "7787:   goto yy842;",
          "7788: yy847:",
          "7789:   YYDEBUG(847, *YYCURSOR);",
          "7790:   ++YYCURSOR;",
          "7791:   YYFILL(1);",
          "7792:   yych = *YYCURSOR;",
          "7793:   YYDEBUG(848, *YYCURSOR);",
          "7794:   if (yych <= '^') {",
          "7795:    if (yych <= '9') {",
          "7796:     if (yych >= '0') goto yy847;",
          "7797:    } else {",
          "7798:     if (yych <= '@') goto yy849;",
          "7799:     if (yych <= 'Z') goto yy847;",
          "7800:    }",
          "7801:   } else {",
          "7802:    if (yych <= '`') {",
          "7803:     if (yych <= '_') goto yy847;",
          "7804:    } else {",
          "7805:     if (yych <= 'z') goto yy847;",
          "7806:     if (yych >= 0x7F) goto yy847;",
          "7807:    }",
          "7808:   }",
          "7809: yy849:",
          "7810:   YYDEBUG(849, *YYCURSOR);",
          "7811:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7812: #line 1885 \"Zend/zend_language_scanner.l\"",
          "7813:   {",
          "7814:  zend_copy_value(zendlval, (yytext+1), (yyleng-1));",
          "7815:  zendlval->type = IS_STRING;",
          "7816:  return T_VARIABLE;",
          "7817: }",
          "7818: #line 7819 \"Zend/zend_language_scanner.c\"",
          "7819: yy850:",
          "7820:   YYDEBUG(850, *YYCURSOR);",
          "7821:   ++YYCURSOR;",
          "7822:   YYFILL(1);",
          "7823:   yych = *YYCURSOR;",
          "7824: yy851:",
          "7825:   YYDEBUG(851, *YYCURSOR);",
          "7826:   if (yybm[0+yych] & 32) {",
          "7827:    goto yy850;",
          "7828:   }",
          "7829:   goto yy832;",
          "7830: yy852:",
          "7831:   YYDEBUG(852, *YYCURSOR);",
          "7832:   yych = *++YYCURSOR;",
          "7833:   if (yybm[0+yych] & 128) {",
          "7834:    goto yy860;",
          "7835:   }",
          "7836: yy853:",
          "7837:   YYDEBUG(853, *YYCURSOR);",
          "7838:   YYCURSOR = YYMARKER;",
          "7839:   goto yy832;",
          "7840: yy854:",
          "7841:   YYDEBUG(854, *YYCURSOR);",
          "7842:   yych = *++YYCURSOR;",
          "7843:   if (yybm[0+yych] & 64) {",
          "7844:    goto yy858;",
          "7845:   }",
          "7846:   goto yy853;",
          "7847: yy855:",
          "7848:   YYDEBUG(855, *YYCURSOR);",
          "7849:   ++YYCURSOR;",
          "7850:   YYFILL(1);",
          "7851:   yych = *YYCURSOR;",
          "7852:   YYDEBUG(856, *YYCURSOR);",
          "7853:   if (yych <= '/') goto yy857;",
          "7854:   if (yych <= '9') goto yy855;",
          "7855: yy857:",
          "7856:   YYDEBUG(857, *YYCURSOR);",
          "7857:   yyleng = YYCURSOR - SCNG(yy_text);",
          "7858: #line 1576 \"Zend/zend_language_scanner.l\"",
          "7860:  zendlval->value.str.val = (char *)estrndup(yytext, yyleng);",
          "7861:  zendlval->value.str.len = yyleng;",
          "7862:  zendlval->type = IS_STRING;",
          "7863:  return T_NUM_STRING;",
          "7864: }",
          "7865: #line 7866 \"Zend/zend_language_scanner.c\"",
          "7866: yy858:",
          "7867:   YYDEBUG(858, *YYCURSOR);",
          "7868:   ++YYCURSOR;",
          "7869:   YYFILL(1);",
          "7870:   yych = *YYCURSOR;",
          "7871:   YYDEBUG(859, *YYCURSOR);",
          "7872:   if (yybm[0+yych] & 64) {",
          "7873:    goto yy858;",
          "7874:   }",
          "7875:   goto yy857;",
          "7876: yy860:",
          "7877:   YYDEBUG(860, *YYCURSOR);",
          "7878:   ++YYCURSOR;",
          "7879:   YYFILL(1);",
          "7880:   yych = *YYCURSOR;",
          "7881:   YYDEBUG(861, *YYCURSOR);",
          "7882:   if (yybm[0+yych] & 128) {",
          "7883:    goto yy860;",
          "7884:   }",
          "7885:   goto yy857;",
          "7886:  }",
          "7887: }",
          "7888: #line 2437 \"Zend/zend_language_scanner.l\"",
          "7890: }",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner_defs.h||Zend/zend_language_scanner_defs.h": [
          "File: Zend/zend_language_scanner_defs.h -> Zend/zend_language_scanner_defs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2: #line 3 \"Zend/zend_language_scanner_defs.h\"",
          "4: enum YYCONDTYPE {",
          "5:  yycST_IN_SCRIPTING,",
          "6:  yycST_LOOKING_FOR_PROPERTY,",
          "7:  yycST_BACKQUOTE,",
          "8:  yycST_DOUBLE_QUOTES,",
          "9:  yycST_HEREDOC,",
          "10:  yycST_LOOKING_FOR_VARNAME,",
          "11:  yycST_VAR_OFFSET,",
          "12:  yycINITIAL,",
          "13:  yycST_END_HEREDOC,",
          "14:  yycST_NOWDOC,",
          "15: };",
          "",
          "[Added Lines]",
          "2: #line 3 \"Zend/zend_language_scanner_defs.h\"",
          "4: enum YYCONDTYPE {",
          "5:  yycST_IN_SCRIPTING,",
          "6:  yycST_LOOKING_FOR_PROPERTY,",
          "7:  yycST_BACKQUOTE,",
          "8:  yycST_DOUBLE_QUOTES,",
          "9:  yycST_HEREDOC,",
          "10:  yycST_LOOKING_FOR_VARNAME,",
          "11:  yycST_VAR_OFFSET,",
          "12:  yycINITIAL,",
          "13:  yycST_END_HEREDOC,",
          "14:  yycST_NOWDOC,",
          "15: };",
          "",
          "---------------"
        ],
        "ext/gd/config.w32||ext/gd/config.w32": [
          "File: ext/gd/config.w32 -> ext/gd/config.w32",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:    gd_io_file.c gd_io_ss.c gd_jpeg.c gdkanji.c gd_png.c gd_ss.c \\",
          "49:    gdtables.c gd_topal.c gd_wbmp.c gdxpm.c wbmp.c xbm.c gd_security.c gd_transform.c \\",
          "50:    gd_filter.c gd_pixelate.c gd_arc.c gd_rotate.c gd_color.c webpimg.c gd_webp.c \\",
          "52:   AC_DEFINE('HAVE_LIBGD', 1, 'GD support');",
          "53:   ADD_FLAG(\"CFLAGS_GD\", \" \\",
          "54: /D HAVE_GD_DYNAMIC_CTX_EX=1 \\",
          "",
          "[Removed Lines]",
          "51:    gd_crop.c\", \"gd\");",
          "",
          "[Added Lines]",
          "51:    gd_crop.c gd_interpolation.c gd_matrix.c\", \"gd\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:   \");",
          "86:   PHP_INSTALL_HEADERS(\"\", \"ext/gd ext/gd/libgd\" );",
          "88:   WARNING(\"gd not enabled; libraries and headers not found\");",
          "89:  }",
          "90: }",
          "",
          "[Removed Lines]",
          "87:   } else {",
          "",
          "[Added Lines]",
          "87:  } else {",
          "",
          "---------------"
        ],
        "ext/gd/gd.c||ext/gd/gd.c": [
          "File: ext/gd/gd.c -> ext/gd/gd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "195:  ZEND_ARG_INFO(0, colorsWanted)",
          "196: ZEND_END_ARG_INFO()",
          "198: ZEND_BEGIN_ARG_INFO(arginfo_imagecolormatch, 0)",
          "199:  ZEND_ARG_INFO(0, im1)",
          "200:  ZEND_ARG_INFO(0, im2)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "197: ZEND_BEGIN_ARG_INFO(arginfo_imagepalettetotruecolor, 0)",
          "198:  ZEND_ARG_INFO(0, im)",
          "199: ZEND_END_ARG_INFO()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "902:  ZEND_ARG_INFO(0, threshold)",
          "903:  ZEND_ARG_INFO(0, color)",
          "904: ZEND_END_ARG_INFO()",
          "905: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "909: ZEND_BEGIN_ARG_INFO(arginfo_imagescale, 0)",
          "910:  ZEND_ARG_INFO(0, im)",
          "911:  ZEND_ARG_INFO(0, new_width)",
          "912:  ZEND_ARG_INFO(0, new_height)",
          "913:  ZEND_ARG_INFO(0, mode)",
          "914: ZEND_END_ARG_INFO()",
          "916: ZEND_BEGIN_ARG_INFO(arginfo_imageaffine, 0)",
          "917:  ZEND_ARG_INFO(0, im)",
          "918:  ZEND_ARG_INFO(0, affine)",
          "919: ZEND_END_ARG_INFO()",
          "921: ZEND_BEGIN_ARG_INFO(arginfo_imagesetinterpolation, 0)",
          "922:  ZEND_ARG_INFO(0, im)",
          "923:  ZEND_ARG_INFO(0, method)",
          "924: ZEND_END_ARG_INFO()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "941:  PHP_FE(imagecreatetruecolor,     arginfo_imagecreatetruecolor)",
          "942:  PHP_FE(imageistruecolor,      arginfo_imageistruecolor)",
          "943:  PHP_FE(imagetruecolortopalette,     arginfo_imagetruecolortopalette)",
          "944:  PHP_FE(imagesetthickness,      arginfo_imagesetthickness)",
          "945:  PHP_FE(imagefilledarc,       arginfo_imagefilledarc)",
          "946:  PHP_FE(imagefilledellipse,      arginfo_imagefilledellipse)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "965:  PHP_FE(imagepalettetotruecolor,     arginfo_imagepalettetotruecolor)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "964:  PHP_FE(imageflip,        arginfo_imageflip)",
          "965:  PHP_FE(imagecrop,        arginfo_imagecrop)",
          "966:  PHP_FE(imagecropauto,       arginfo_imagecropauto)",
          "967: #endif",
          "969: #if HAVE_GD_IMAGESETTILE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "989:  PHP_FE(imagescale,        arginfo_imagescale)",
          "990:  PHP_FE(imageaffine,        arginfo_imageaffine)",
          "991:  PHP_FE(imagesetinterpolation,                   arginfo_imagesetinterpolation)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1218:  REGISTER_LONG_CONSTANT(\"IMG_FLIP_HORIZONTAL\", GD_FLIP_HORINZONTAL, CONST_CS | CONST_PERSISTENT);",
          "1219:  REGISTER_LONG_CONSTANT(\"IMG_FLIP_VERTICAL\", GD_FLIP_VERTICAL, CONST_CS | CONST_PERSISTENT);",
          "1220:  REGISTER_LONG_CONSTANT(\"IMG_FLIP_BOTH\", GD_FLIP_BOTH, CONST_CS | CONST_PERSISTENT);",
          "1222:  REGISTER_LONG_CONSTANT(\"IMG_CROP_DEFAULT\", GD_CROP_DEFAULT, CONST_CS | CONST_PERSISTENT);",
          "1223:  REGISTER_LONG_CONSTANT(\"IMG_CROP_TRANSPARENT\", GD_CROP_TRANSPARENT, CONST_CS | CONST_PERSISTENT);",
          "1224:  REGISTER_LONG_CONSTANT(\"IMG_CROP_BLACK\", GD_CROP_BLACK, CONST_CS | CONST_PERSISTENT);",
          "1225:  REGISTER_LONG_CONSTANT(\"IMG_CROP_WHITE\", GD_CROP_WHITE, CONST_CS | CONST_PERSISTENT);",
          "1226:  REGISTER_LONG_CONSTANT(\"IMG_CROP_SIDES\", GD_CROP_SIDES, CONST_CS | CONST_PERSISTENT);",
          "1227:  REGISTER_LONG_CONSTANT(\"IMG_CROP_THRESHOLD\", GD_CROP_THRESHOLD, CONST_CS | CONST_PERSISTENT);",
          "1228: #else",
          "1229:  REGISTER_LONG_CONSTANT(\"GD_BUNDLED\", 0, CONST_CS | CONST_PERSISTENT);",
          "1230: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1255:  REGISTER_LONG_CONSTANT(\"IMG_BELL\", GD_BILINEAR_FIXED, CONST_CS | CONST_PERSISTENT);",
          "1256:  REGISTER_LONG_CONSTANT(\"IMG_BESSEL\", GD_BESSEL, CONST_CS | CONST_PERSISTENT);",
          "1257:  REGISTER_LONG_CONSTANT(\"IMG_BILINEAR_FIXED\", GD_BILINEAR_FIXED, CONST_CS | CONST_PERSISTENT);",
          "1258:  REGISTER_LONG_CONSTANT(\"IMG_BICUBIC\", GD_BICUBIC, CONST_CS | CONST_PERSISTENT);",
          "1259:  REGISTER_LONG_CONSTANT(\"IMG_BICUBIC_FIXED\", GD_BICUBIC_FIXED, CONST_CS | CONST_PERSISTENT);",
          "1260:  REGISTER_LONG_CONSTANT(\"IMG_BLACKMAN\", GD_BLACKMAN, CONST_CS | CONST_PERSISTENT);",
          "1261:  REGISTER_LONG_CONSTANT(\"IMG_BOX\", GD_BOX, CONST_CS | CONST_PERSISTENT);",
          "1262:  REGISTER_LONG_CONSTANT(\"IMG_BSPLINE\", GD_BSPLINE, CONST_CS | CONST_PERSISTENT);",
          "1263:  REGISTER_LONG_CONSTANT(\"IMG_CATMULLROM\", GD_CATMULLROM, CONST_CS | CONST_PERSISTENT);",
          "1264:  REGISTER_LONG_CONSTANT(\"IMG_GAUSSIAN\", GD_GAUSSIAN, CONST_CS | CONST_PERSISTENT);",
          "1265:  REGISTER_LONG_CONSTANT(\"IMG_GENERALIZED_CUBIC\", GD_GENERALIZED_CUBIC, CONST_CS | CONST_PERSISTENT);",
          "1266:  REGISTER_LONG_CONSTANT(\"IMG_HERMITE\", GD_HERMITE, CONST_CS | CONST_PERSISTENT);",
          "1267:  REGISTER_LONG_CONSTANT(\"IMG_HAMMING\", GD_HAMMING, CONST_CS | CONST_PERSISTENT);",
          "1268:  REGISTER_LONG_CONSTANT(\"IMG_HANNING\", GD_HANNING, CONST_CS | CONST_PERSISTENT);",
          "1269:  REGISTER_LONG_CONSTANT(\"IMG_MITCHELL\", GD_MITCHELL, CONST_CS | CONST_PERSISTENT);",
          "1270:  REGISTER_LONG_CONSTANT(\"IMG_POWER\", GD_POWER, CONST_CS | CONST_PERSISTENT);",
          "1271:  REGISTER_LONG_CONSTANT(\"IMG_QUADRATIC\", GD_QUADRATIC, CONST_CS | CONST_PERSISTENT);",
          "1272:  REGISTER_LONG_CONSTANT(\"IMG_SINC\", GD_SINC, CONST_CS | CONST_PERSISTENT);",
          "1273:  REGISTER_LONG_CONSTANT(\"IMG_NEAREST_NEIGHBOUR\", GD_NEAREST_NEIGHBOUR, CONST_CS | CONST_PERSISTENT);",
          "1274:  REGISTER_LONG_CONSTANT(\"IMG_WEIGHTED4\", GD_WEIGHTED4, CONST_CS | CONST_PERSISTENT);",
          "1275:  REGISTER_LONG_CONSTANT(\"IMG_TRIANGLE\", GD_TRIANGLE, CONST_CS | CONST_PERSISTENT);",
          "1276:  REGISTER_LONG_CONSTANT(\"IMG_DEFAULT\",  GD_BICUBIC_FIXED, CONST_CS | CONST_PERSISTENT);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1730: }",
          "1735: PHP_FUNCTION(imagecolormatch)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1786: PHP_FUNCTION(imagepalettetotruecolor)",
          "1787: {",
          "1788:  zval *IM;",
          "1789:  gdImagePtr im;",
          "1791:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"r\", &IM) == FAILURE)  {",
          "1792:   return;",
          "1793:  }",
          "1795:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "1797:  if (gdImagePaletteToTrueColor(im) == 0) {",
          "1798:   RETURN_TRUE;",
          "1799:  }",
          "1801:  RETURN_TRUE;",
          "1802: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2173:  ZEND_FETCH_RESOURCE(im_src, gdImagePtr, &SIM, -1, \"Image\", le_gd);",
          "2177:  if (im_dst != NULL) {",
          "2178:   ZEND_REGISTER_RESOURCE(return_value, im_dst, le_gd);",
          "",
          "[Removed Lines]",
          "2175:  im_dst = gdImageRotate(im_src, degrees, color, ignoretransparent);",
          "",
          "[Added Lines]",
          "2247:  im_dst = gdImageRotateGeneric(im_src, (float)degrees, color);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "5128:  switch (mode) {",
          "5129:   case GD_FLIP_VERTICAL:",
          "5131:    break;",
          "5133:   case GD_FLIP_HORINZONTAL:",
          "5135:    break;",
          "5137:   case GD_FLIP_BOTH:",
          "",
          "[Removed Lines]",
          "5130:    gdImageFlipHorizontal(im);",
          "5134:    gdImageFlipVertical(im);",
          "",
          "[Added Lines]",
          "5202:    gdImageFlipVertical(im);",
          "5206:    gdImageFlipHorizontal(im);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5252:  }",
          "5253: }",
          "5255: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5330: PHP_FUNCTION(imagescale)",
          "5331: {",
          "5332:  zval *IM;",
          "5333:  long mode = -1;",
          "5334:  long color = -1;",
          "5335:  double threshold = 0.5f;",
          "5336:  gdImagePtr im;",
          "5337:  gdImagePtr im_scaled;",
          "5338:  int new_width, new_height = -1;",
          "5339:  gdInterpolationMethod method = GD_BILINEAR_FIXED;",
          "5341:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rl|ll\", &IM, &new_width, &new_height, &method) == FAILURE)  {",
          "5342:   return;",
          "5343:  }",
          "5345:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "5346:  im_scaled = gdImageScale(im, new_width, new_height);",
          "5347:  goto finish;",
          "5348:  switch (method) {",
          "5349:   case GD_NEAREST_NEIGHBOUR:",
          "5350:    im_scaled = gdImageScaleNearestNeighbour(im, new_width, new_height);",
          "5351:    break;",
          "5353:   case GD_BILINEAR_FIXED:",
          "5354:    im_scaled = gdImageScaleBilinear(im, new_width, new_height);",
          "5355:    break;",
          "5357:   case GD_BICUBIC:",
          "5358:    im_scaled = gdImageScaleBicubicFixed(im, new_width, new_height);",
          "5359:    break;",
          "5361:   case GD_BICUBIC_FIXED:",
          "5362:    im_scaled = gdImageScaleBicubicFixed(im, new_width, new_height);",
          "5363:    break;",
          "5365:   default:",
          "5366:    im_scaled = gdImageScaleTwoPass(im, im->sx, im->sy, new_width, new_height);",
          "5367:    break;",
          "5369:  }",
          "5370: finish:",
          "5371:  if (im_scaled == NULL) {",
          "5372:   RETURN_FALSE;",
          "5373:  } else {",
          "5374:   ZEND_REGISTER_RESOURCE(return_value, im_scaled, le_gd);",
          "5375:  }",
          "5376: }",
          "5381: PHP_FUNCTION(imageaffine)",
          "5382: {",
          "5383:  zval *IM;",
          "5384:  long mode = -1;",
          "5385:  long color = -1;",
          "5386:  double threshold = 0.5f;",
          "5387:  gdImagePtr src;",
          "5388:  gdImagePtr dst;",
          "5389:  gdRect rect;",
          "5390:  gdRectPtr pRect = NULL;",
          "5391:  zval *z_rect = NULL;",
          "5392:  zval *z_affine;",
          "5393:  zval **tmp;",
          "5394:  double affine[6];",
          "5395:  int i, nelems;",
          "5396:  zval **zval_affine_elem = NULL;",
          "5397:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ra|a\", &IM, &z_affine, &z_rect) == FAILURE)  {",
          "5398:   return;",
          "5399:  }",
          "5401:  ZEND_FETCH_RESOURCE(src, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "5403:  if ((nelems = zend_hash_num_elements(Z_ARRVAL_P(z_affine))) != 6) {",
          "5404:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Affine array must have six elements\");",
          "5405:   RETURN_FALSE;",
          "5406:  }",
          "5408:  for (i = 0; i < nelems; i++) {",
          "5409:   if (zend_hash_index_find(Z_ARRVAL_P(z_affine), i, (void **) &zval_affine_elem) == SUCCESS) {",
          "5410:    switch (Z_TYPE_PP(zval_affine_elem)) {",
          "5411:     case IS_LONG:",
          "5412:      affine[i]  = Z_LVAL_PP(zval_affine_elem);",
          "5413:      break;",
          "5414:     case IS_DOUBLE:",
          "5415:      affine[i] = Z_DVAL_PP(zval_affine_elem);",
          "5416:      break;",
          "5417:     case IS_STRING:",
          "5418:      convert_to_double_ex(zval_affine_elem);",
          "5419:      affine[i] = Z_DVAL_PP(zval_affine_elem);",
          "5420:      break;",
          "5421:     default:",
          "5422:      php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid type for element %i\", i);",
          "5423:      RETURN_FALSE;",
          "5424:    }",
          "5425:   }",
          "5426:  }",
          "5428:  if (z_rect != NULL) {",
          "5429:   if (zend_hash_find(HASH_OF(z_rect), \"x\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
          "5430:    rect.x = Z_LVAL_PP(tmp);",
          "5431:   } else {",
          "5432:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing x position\");",
          "5433:    RETURN_FALSE;",
          "5434:   }",
          "5436:   if (zend_hash_find(HASH_OF(z_rect), \"y\", sizeof(\"x\"), (void **)&tmp) != FAILURE) {",
          "5437:    rect.y = Z_LVAL_PP(tmp);",
          "5438:   } else {",
          "5439:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing y position\");",
          "5440:    RETURN_FALSE;",
          "5441:   }",
          "5443:   if (zend_hash_find(HASH_OF(z_rect), \"width\", sizeof(\"width\"), (void **)&tmp) != FAILURE) {",
          "5444:    rect.width = Z_LVAL_PP(tmp);",
          "5445:   } else {",
          "5446:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing width\");",
          "5447:    RETURN_FALSE;",
          "5448:   }",
          "5450:   if (zend_hash_find(HASH_OF(z_rect), \"height\", sizeof(\"height\"), (void **)&tmp) != FAILURE) {",
          "5451:    rect.height = Z_LVAL_PP(tmp);",
          "5452:   } else {",
          "5453:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Missing height\");",
          "5454:    RETURN_FALSE;",
          "5455:   }",
          "5456:   pRect = &rect;",
          "5457:  } else {",
          "5458:   rect.x = -1;",
          "5459:   rect.y = -1;",
          "5460:   rect.width = gdImageSX(src);",
          "5461:   rect.height = gdImageSY(src);",
          "5462:   pRect = NULL;",
          "5463:  }",
          "5467:  if (gdTransformAffineGetImage(&dst, src, pRect, affine) != GD_TRUE) {",
          "5468:   RETURN_FALSE;",
          "5469:  }",
          "5471:  if (dst == NULL) {",
          "5472:   RETURN_FALSE;",
          "5473:  } else {",
          "5474:   ZEND_REGISTER_RESOURCE(return_value, dst, le_gd);",
          "5475:  }",
          "5476: }",
          "5481: PHP_FUNCTION(imagesetinterpolation)",
          "5482: {",
          "5483:  zval *IM;",
          "5484:  gdImagePtr im;",
          "5485:  gdInterpolationMethod method = GD_BILINEAR_FIXED;",
          "5487:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"r|l\", &IM, &method) == FAILURE)  {",
          "5488:   return;",
          "5489:  }",
          "5491:  ZEND_FETCH_RESOURCE(im, gdImagePtr, &IM, -1, \"Image\", le_gd);",
          "5493:  if (method == -1) {",
          "5494:    method = GD_BILINEAR_FIXED;",
          "5495:  }",
          "5496:  RETURN_BOOL(gdImageSetInterpolationMethod(im, (gdInterpolationMethod) method));",
          "5497: }",
          "",
          "---------------"
        ],
        "ext/gd/libgd/gd.c||ext/gd/libgd/gd.c": [
          "File: ext/gd/libgd/gd.c -> ext/gd/libgd/gd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "168:  im->cy1 = 0;",
          "169:  im->cx2 = im->sx - 1;",
          "170:  im->cy2 = im->sy - 1;",
          "171:  return im;",
          "172: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "171:  im->interpolation = NULL;",
          "172:  im->interpolation_id = GD_BILINEAR_FIXED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "221:  im->cy1 = 0;",
          "222:  im->cx2 = im->sx - 1;",
          "223:  im->cy2 = im->sy - 1;",
          "224:  return im;",
          "225: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:  im->interpolation = NULL;",
          "227:  im->interpolation_id = GD_BILINEAR_FIXED;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3010: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3017: int gdImagePaletteToTrueColor(gdImagePtr src)",
          "3018: {",
          "3019:  unsigned int y;",
          "3020:  unsigned char alloc_y = 0, alloc_aa = 0;",
          "3021:  unsigned int yy;",
          "3023:  if (src == NULL) {",
          "3024:   return 0;",
          "3025:  }",
          "3027:  if (src->trueColor == 1) {",
          "3028:   return 1;",
          "3029:  } else {",
          "3030:   unsigned int x;",
          "3031:   const unsigned int sy = gdImageSY(src);",
          "3032:   const unsigned int sx = gdImageSX(src);",
          "3034:   src->tpixels = (int **) gdMalloc(sizeof(int *) * sy);",
          "3035:   if (src->tpixels == NULL) {",
          "3036:    return 0;",
          "3037:   }",
          "3039:   for (y = 0; y < sy; y++) {",
          "3040:    const unsigned char *src_row = src->pixels[y];",
          "3041:    int * dst_row;",
          "3044:    src->tpixels[y] = (int *) gdMalloc(sx * sizeof(int));",
          "3045:    if (src->tpixels[y] == NULL) {",
          "3046:     goto clean_on_error;",
          "3047:    }",
          "3049:    dst_row = src->tpixels[y];",
          "3050:    for (x = 0; x < sx; x++) {",
          "3051:     const unsigned char c = *(src_row + x);",
          "3052:     if (c == src->transparent) {",
          "3054:     } else {",
          "3056:     }",
          "3057:    }",
          "3058:   }",
          "3059:  }",
          "3062:  for (yy = y - 1; yy >= yy - 1; yy--) {",
          "3063:   gdFree(src->pixels[yy]);",
          "3064:  }",
          "3065:  gdFree(src->pixels);",
          "3066:  src->trueColor = 1;",
          "3067:  src->pixels = NULL;",
          "3068:  src->alphaBlendingFlag = 0;",
          "3069:  src->saveAlphaFlag = 1;",
          "3070:  return 1;",
          "3072: clean_on_error:",
          "3073:  if (y > 0) {",
          "3075:   for (yy = y; yy >= yy - 1; y--) {",
          "3076:    gdFree(src->tpixels[y]);",
          "3077:   }",
          "3078:   gdFree(src->tpixels);",
          "3079:  }",
          "3080:  return 0;",
          "3081: }",
          "",
          "---------------"
        ],
        "ext/gd/libgd/gd.h||ext/gd/libgd/gd.h": [
          "File: ext/gd/libgd/gd.h -> ext/gd/libgd/gd.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "93: #define gdEffectNormal 2",
          "94: #define gdEffectOverlay 3",
          "98:  source color is composited with the destination color",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96: #define GD_TRUE 1",
          "97: #define GD_FALSE 0",
          "99: #define GD_EPSILON 1e-6",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102: int gdAlphaBlend(int dest, int src);",
          "104: typedef struct gdImageStruct {",
          "106:  unsigned char ** pixels;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138: typedef enum {",
          "139:  GD_DEFAULT          = 0,",
          "140:  GD_BELL,",
          "141:  GD_BESSEL,",
          "142:  GD_BILINEAR_FIXED,",
          "143:  GD_BICUBIC,",
          "144:  GD_BICUBIC_FIXED,",
          "145:  GD_BLACKMAN,",
          "146:  GD_BOX,",
          "147:  GD_BSPLINE,",
          "148:  GD_CATMULLROM,",
          "149:  GD_GAUSSIAN,",
          "150:  GD_GENERALIZED_CUBIC,",
          "151:  GD_HERMITE,",
          "152:  GD_HAMMING,",
          "153:  GD_HANNING,",
          "154:  GD_MITCHELL,",
          "155:  GD_NEAREST_NEIGHBOUR,",
          "156:  GD_POWER,",
          "157:  GD_QUADRATIC,",
          "158:  GD_SINC,",
          "159:  GD_TRIANGLE,",
          "160:  GD_WEIGHTED4,",
          "161:  GD_METHOD_COUNT = 21",
          "162: } gdInterpolationMethod;",
          "167: typedef double (* interpolation_method )(double);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "188:  int cy1;",
          "189:  int cx2;",
          "190:  int cy2;",
          "191: } gdImage;",
          "193: typedef gdImage * gdImagePtr;",
          "195: typedef struct {",
          "197:  int nchars;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256:  gdInterpolationMethod interpolation_id;",
          "257:  interpolation_method interpolation;",
          "279: typedef struct",
          "280: {",
          "281:  double x, y;",
          "282: }",
          "283: gdPointF, *gdPointFPtr;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "469: gdImagePtr gdImageCreatePaletteFromTrueColor (gdImagePtr im, int ditherFlag, int colorsWanted);",
          "471: void gdImageTrueColorToPalette(gdImagePtr im, int ditherFlag, int colorsWanted);",
          "475:  to look a bit more like the original (im1 is the original",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "562: int gdImagePaletteToTrueColor(gdImagePtr src);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "741: gdImagePtr gdImageCropAuto(gdImagePtr im, const unsigned int mode);",
          "742: gdImagePtr gdImageCropThreshold(gdImagePtr im, const unsigned int color, const float threshold);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "834: int gdImageSetInterpolationMethod(gdImagePtr im, gdInterpolationMethod id);",
          "836: gdImagePtr gdImageScaleBilinear(gdImagePtr im, const unsigned int new_width, const unsigned int new_height);",
          "837: gdImagePtr gdImageScaleBicubic(gdImagePtr src_img, const unsigned int new_width, const unsigned int new_height);",
          "838: gdImagePtr gdImageScaleBicubicFixed(gdImagePtr src, const unsigned int width, const unsigned int height);",
          "839: gdImagePtr gdImageScaleNearestNeighbour(gdImagePtr im, const unsigned int width, const unsigned int height);",
          "840: gdImagePtr gdImageScaleTwoPass(const gdImagePtr pOrigImage, const unsigned int uOrigWidth, const unsigned int uOrigHeight, const unsigned int uNewWidth, const unsigned int uNewHeight);",
          "841: gdImagePtr gdImageScale(const gdImagePtr src, const unsigned int new_width, const unsigned int new_height);",
          "843: gdImagePtr gdImageRotateNearestNeighbour(gdImagePtr src, const float degrees, const int bgColor);",
          "844: gdImagePtr gdImageRotateBilinear(gdImagePtr src, const float degrees, const int bgColor);",
          "845: gdImagePtr gdImageRotateBicubicFixed(gdImagePtr src, const float degrees, const int bgColor);",
          "846: gdImagePtr gdImageRotateGeneric(gdImagePtr src, const float degrees, const int bgColor);",
          "848: int gdAffineApplyToPointF (gdPointFPtr dst, const gdPointFPtr src, const double affine[6]);",
          "849: int gdAffineInvert (double dst[6], const double src[6]);",
          "850: int gdAffineFlip (double dst_affine[6], const double src_affine[6], const int flip_h, const int flip_v);",
          "851: int gdAffineConcat (double dst[6], const double m1[6], const double m2[6]);",
          "853: int gdAffineIdentity (double dst[6]);",
          "854: int gdAffineScale (double dst[6], const double scale_x, const double scale_y);",
          "855: int gdAffineRotate (double dst[6], const double angle);",
          "856: int gdAffineShearHorizontal (double dst[6], const double angle);",
          "857: int gdAffineShearVertical(double dst[6], const double angle);",
          "858: int gdAffineTranslate (double dst[6], const double offset_x, const double offset_y);",
          "859: double gdAffineExpansion (const double src[6]);",
          "860: int gdAffineRectilinear (const double src[6]);",
          "861: int gdAffineEqual (const double matrix1[6], const double matrix2[6]);",
          "862: int gdTransformAffineGetImage(gdImagePtr *dst, const gdImagePtr src, gdRectPtr src_area, const double affine[6]);",
          "863: int gdTransformAffineCopy(gdImagePtr dst, int dst_x, int dst_y, const gdImagePtr src, gdRectPtr src_region, const double affine[6]);",
          "865: gdTransformAffineCopy(gdImagePtr dst, int x0, int y0, int x1, int y1,",
          "866:    const gdImagePtr src, int src_width, int src_height,",
          "867:    const double affine[6]);",
          "869: int gdTransformAffineBoundingBox(gdRectPtr src, const double affine[6], gdRectPtr bbox);",
          "",
          "---------------"
        ],
        "ext/gd/php_gd.h||ext/gd/php_gd.h": [
          "File: ext/gd/php_gd.h -> ext/gd/php_gd.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "105: PHP_FUNCTION(imagecreatetruecolor);",
          "106: PHP_FUNCTION(imagetruecolortopalette);",
          "107: PHP_FUNCTION(imagesetthickness);",
          "108: PHP_FUNCTION(imagefilledellipse);",
          "109: PHP_FUNCTION(imagefilledarc);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107: PHP_FUNCTION(imagepalettetotruecolor);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127: PHP_FUNCTION(imageflip);",
          "128: PHP_FUNCTION(imagecrop);",
          "129: PHP_FUNCTION(imagecropauto);",
          "130: #endif",
          "132: PHP_FUNCTION(imagesetthickness);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131: PHP_FUNCTION(imagescale);",
          "132: PHP_FUNCTION(imageaffine);",
          "133: PHP_FUNCTION(imagesetinterpolation);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bfd72d03869da7983064576470a858cdbde733bf",
      "candidate_info": {
        "commit_hash": "bfd72d03869da7983064576470a858cdbde733bf",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/bfd72d03869da7983064576470a858cdbde733bf",
        "files": [
          "configure.in",
          "main/php_version.h"
        ],
        "message": "5.4.0",
        "before_after_code_files": [
          "configure.in||configure.in",
          "main/php_version.h||main/php_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "main/php_version.h||main/php_version.h"
          ],
          "candidate": [
            "main/php_version.h||main/php_version.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.in||configure.in": [
          "File: configure.in -> configure.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "120: PHP_MAJOR_VERSION=5",
          "121: PHP_MINOR_VERSION=4",
          "122: PHP_RELEASE_VERSION=0",
          "124: PHP_VERSION=\"$PHP_MAJOR_VERSION.$PHP_MINOR_VERSION.$PHP_RELEASE_VERSION$PHP_EXTRA_VERSION\"",
          "125: PHP_VERSION_ID=`expr [$]PHP_MAJOR_VERSION \\* 10000 + [$]PHP_MINOR_VERSION \\* 100 + [$]PHP_RELEASE_VERSION`",
          "",
          "[Removed Lines]",
          "123: PHP_EXTRA_VERSION=\"RC9-dev\"",
          "",
          "[Added Lines]",
          "123: PHP_EXTRA_VERSION=\"\"",
          "",
          "---------------"
        ],
        "main/php_version.h||main/php_version.h": [
          "File: main/php_version.h -> main/php_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #define PHP_MAJOR_VERSION 5",
          "4: #define PHP_MINOR_VERSION 4",
          "5: #define PHP_RELEASE_VERSION 0",
          "8: #define PHP_VERSION_ID 50400",
          "",
          "[Removed Lines]",
          "6: #define PHP_EXTRA_VERSION \"RC9-dev\"",
          "7: #define PHP_VERSION \"5.4.0RC9-dev\"",
          "",
          "[Added Lines]",
          "6: #define PHP_EXTRA_VERSION \"\"",
          "7: #define PHP_VERSION \"5.4.0\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}