{
  "cve_id": "CVE-2021-3671",
  "cve_desc": "A null pointer de-reference was found in the way samba kerberos server handled missing sname in TGS-REQ (Ticket Granting Server - Request). An authenticated user could use this flaw to crash the samba server.",
  "repo": "heimdal/heimdal",
  "patch_hash": "04171147948d0a3636bc6374181926f0fb2ec83a",
  "patch_info": {
    "commit_hash": "04171147948d0a3636bc6374181926f0fb2ec83a",
    "repo": "heimdal/heimdal",
    "commit_url": "https://github.com/heimdal/heimdal/commit/04171147948d0a3636bc6374181926f0fb2ec83a",
    "files": [
      "kdc/krb5tgs.c"
    ],
    "message": "kdc: validate sname in TGS-REQ\n\nIn tgs_build_reply(), validate the server name in the TGS-REQ is present before\ndereferencing.",
    "before_after_code_files": [
      "kdc/krb5tgs.c||kdc/krb5tgs.c"
    ]
  },
  "patch_diff": {
    "kdc/krb5tgs.c||kdc/krb5tgs.c": [
      "File: kdc/krb5tgs.c -> kdc/krb5tgs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1700:  s = &adtkt.cname;",
      "1701:  r = adtkt.crealm;",
      "1702:     }",
      "1704:     _krb5_principalname2krb5_principal(context, &sp, *s, r);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1702:     } else if (s == NULL) {",
      "1703:  ret = KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN;",
      "1704:  _kdc_set_e_text(r, \"No server in request\");",
      "1705:  goto out;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "caf7e173a4cfe6b6707e79edac352935694b8c79",
      "candidate_info": {
        "commit_hash": "caf7e173a4cfe6b6707e79edac352935694b8c79",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/caf7e173a4cfe6b6707e79edac352935694b8c79",
        "files": [
          "kdc/krb5tgs.c"
        ],
        "message": "kdc: Make check_PAC() and verify_flags() accessible to KDC code\n\nThis allows them to be used for checking FAST armor TGTs.\n\nSigned-off-by: Joseph Sutton <josephsutton@catalyst.net.nz>",
        "before_after_code_files": [
          "kdc/krb5tgs.c||kdc/krb5tgs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kdc/krb5tgs.c||kdc/krb5tgs.c"
          ],
          "candidate": [
            "kdc/krb5tgs.c||kdc/krb5tgs.c"
          ]
        }
      },
      "candidate_diff": {
        "kdc/krb5tgs.c||kdc/krb5tgs.c": [
          "File: kdc/krb5tgs.c -> kdc/krb5tgs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: {",
          "69:     krb5_pac pac = NULL;",
          "70:     krb5_error_code ret;",
          "",
          "[Removed Lines]",
          "54: static krb5_error_code",
          "55: check_PAC(krb5_context context,",
          "56:    krb5_kdc_configuration *config,",
          "57:    const krb5_principal client_principal,",
          "58:    const krb5_principal delegated_proxy_principal,",
          "59:    hdb_entry_ex *client,",
          "60:    hdb_entry_ex *server,",
          "61:    hdb_entry_ex *krbtgt,",
          "62:    hdb_entry_ex *ticket_server,",
          "63:    const EncryptionKey *server_check_key,",
          "64:    const EncryptionKey *krbtgt_check_key,",
          "65:    EncTicketPart *tkt,",
          "66:    krb5_boolean *kdc_issued,",
          "67:    krb5_pac *ppac)",
          "",
          "[Added Lines]",
          "54: krb5_error_code",
          "55: _kdc_check_pac(krb5_context context,",
          "56:         krb5_kdc_configuration *config,",
          "57:         const krb5_principal client_principal,",
          "58:         const krb5_principal delegated_proxy_principal,",
          "59:         hdb_entry_ex *client,",
          "60:         hdb_entry_ex *server,",
          "61:         hdb_entry_ex *krbtgt,",
          "62:         hdb_entry_ex *ticket_server,",
          "63:         const EncryptionKey *server_check_key,",
          "64:         const EncryptionKey *krbtgt_check_key,",
          "65:         EncTicketPart *tkt,",
          "66:         krb5_boolean *kdc_issued,",
          "67:         krb5_pac *ppac)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "382: {",
          "383:     if(et->endtime < kdc_time){",
          "384:  kdc_log(context, config, 4, \"Ticket expired (%s)\", pstr);",
          "",
          "[Removed Lines]",
          "377: static krb5_error_code",
          "378: verify_flags (krb5_context context,",
          "379:        krb5_kdc_configuration *config,",
          "380:        const EncTicketPart *et,",
          "381:        const char *pstr)",
          "",
          "[Added Lines]",
          "377: krb5_error_code",
          "378: _kdc_verify_flags(krb5_context context,",
          "379:     krb5_kdc_configuration *config,",
          "380:     const EncTicketPart *et,",
          "381:     const char *pstr)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1475:      goto out;",
          "1476:         }",
          "1479:  if (ret) {",
          "1480:             _kdc_audit_addreason((kdc_request_t)priv,",
          "1481:                                  \"User-to-user TGT expired or invalid\");",
          "",
          "[Removed Lines]",
          "1478:  ret = verify_flags(context, config, &adtkt, tpn);",
          "",
          "[Added Lines]",
          "1478:  ret = _kdc_verify_flags(context, config, &adtkt, tpn);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1814:     flags &= ~HDB_F_SYNTHETIC_OK;",
          "1815:     priv->client = client;",
          "1819:     if (ret) {",
          "1820:  const char *msg = krb5_get_error_message(context, ret);",
          "1821:         _kdc_audit_addreason((kdc_request_t)priv, \"PAC check failed\");",
          "",
          "[Removed Lines]",
          "1817:     ret = check_PAC(context, config, cp, NULL, client, server, krbtgt, krbtgt,",
          "1818:       &priv->ticket_key->key, &priv->ticket_key->key, tgt, &kdc_issued, &mspac);",
          "",
          "[Added Lines]",
          "1817:     ret = _kdc_check_pac(context, config, cp, NULL, client, server, krbtgt, krbtgt,",
          "1818:     &priv->ticket_key->key, &priv->ticket_key->key, tgt, &kdc_issued, &mspac);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2112:      goto out;",
          "2113:  }",
          "2116:  if (ret) {",
          "2117:             _kdc_audit_addreason((kdc_request_t)priv,",
          "2118:                                  \"Constrained delegation ticket expired or invalid\");",
          "",
          "[Removed Lines]",
          "2115:  ret = verify_flags(context, config, &adtkt, tpn);",
          "",
          "[Added Lines]",
          "2115:  ret = _kdc_verify_flags(context, config, &adtkt, tpn);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2142:  if (adclient)",
          "2143:      _kdc_free_ent(context, adclient);",
          "2144:  if (ret) {",
          "",
          "[Removed Lines]",
          "2140:  ret = check_PAC(context, config, tp, dp, adclient, server, krbtgt, client,",
          "2141:    &clientkey->key, &priv->ticket_key->key, &adtkt, &ad_kdc_issued, &mspac);",
          "",
          "[Added Lines]",
          "2140:  ret = _kdc_check_pac(context, config, tp, dp, adclient, server, krbtgt, client,",
          "2141:         &clientkey->key, &priv->ticket_key->key, &adtkt, &ad_kdc_issued, &mspac);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5cb5b6d748fd903a4a6a2b68f5c8f65a3ad8c168",
      "candidate_info": {
        "commit_hash": "5cb5b6d748fd903a4a6a2b68f5c8f65a3ad8c168",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/5cb5b6d748fd903a4a6a2b68f5c8f65a3ad8c168",
        "files": [
          "kdc/krb5tgs.c"
        ],
        "message": "kdc: Check return code\n\nAssists Samba to address CVE-2020-25719\n\nSamba BUG: https://bugzilla.samba.org/show_bug.cgi?id=14873\n\nSigned-off-by: Joseph Sutton <josephsutton@catalyst.net.nz>\nReviewed-by: Andrew Bartlett <abartlet@samba.org>\n\n(cherry-picked from Samba commit a5db5c7fa2bdf5c651f77749b4e79c515d164e4f)",
        "before_after_code_files": [
          "kdc/krb5tgs.c||kdc/krb5tgs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kdc/krb5tgs.c||kdc/krb5tgs.c"
          ],
          "candidate": [
            "kdc/krb5tgs.c||kdc/krb5tgs.c"
          ]
        }
      },
      "candidate_diff": {
        "kdc/krb5tgs.c||kdc/krb5tgs.c": [
          "File: kdc/krb5tgs.c -> kdc/krb5tgs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1455:      ret = KRB5KDC_ERR_POLICY;",
          "1456:      goto out;",
          "1457:  }",
          "1459:  ret = krb5_unparse_name(context, p, &tpn);",
          "1460:  if (ret)",
          "1461:   goto out;",
          "",
          "[Removed Lines]",
          "1458:  _krb5_principalname2krb5_principal(context, &p, t->sname, t->realm);",
          "",
          "[Added Lines]",
          "1458:  ret = _krb5_principalname2krb5_principal(context, &p, t->sname, t->realm);",
          "1459:  if (ret)",
          "1460:      goto out;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4112f6fc79c65e68cd8b03ab56567aa9804069df",
      "candidate_info": {
        "commit_hash": "4112f6fc79c65e68cd8b03ab56567aa9804069df",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/4112f6fc79c65e68cd8b03ab56567aa9804069df",
        "files": [
          "kdc/krb5tgs.c"
        ],
        "message": "kdc: Use sname from request rather than user-to-user TGT client name\n\nAssists Samba to address CVE-2020-25719\n\nThis may be contary to RFC4120 3.3.3 at\nhttps://datatracker.ietf.org/doc/html/rfc4120/#section-3.3.3\n(clearer in the GSS mechanism here:\nhttps://datatracker.ietf.org/doc/html/draft-swift-win2k-krb-user2user-03 )\nas server-name is decribed as optional, however Windows AD and Samba\nboth require that the server-name exist and be a valid SPN matching\nthe provided TGT.\n\nThe lookup of SPN -> entry ensures that the SPN the client thought it\nwas connecting to was held by the target server. it could be the\ntypical user principal, or a service principal, but needs to be checked\nfor the client not to be fooled into connecting to the wrong service.\n\nSamba BUG: https://bugzilla.samba.org/show_bug.cgi?id=14873\n\nSigned-off-by: Joseph Sutton <josephsutton@catalyst.net.nz>\nReviewed-by: Andrew Bartlett <abartlet@samba.org>\n\n(Similar to Samba commit fd50fecbe99ae4fc63843c796d0a516731a1fe6a)",
        "before_after_code_files": [
          "kdc/krb5tgs.c||kdc/krb5tgs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kdc/krb5tgs.c||kdc/krb5tgs.c"
          ],
          "candidate": [
            "kdc/krb5tgs.c||kdc/krb5tgs.c"
          ]
        }
      },
      "candidate_diff": {
        "kdc/krb5tgs.c||kdc/krb5tgs.c": [
          "File: kdc/krb5tgs.c -> kdc/krb5tgs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1429:     if (b->kdc_options.canonicalize)",
          "1430:  flags |= HDB_F_CANON;",
          "1507:  ret = KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN;",
          "1508:  _kdc_set_e_text(priv, \"No server in request\");",
          "1509:  goto out;",
          "",
          "[Removed Lines]",
          "1432:     if(b->kdc_options.enc_tkt_in_skey){",
          "1433:  Ticket *t;",
          "1434:  hdb_entry_ex *uu;",
          "1435:  krb5_principal p;",
          "1436:  Key *uukey;",
          "1437:  krb5uint32 second_kvno = 0;",
          "1438:  krb5uint32 *kvno_ptr = NULL;",
          "1440:  if(b->additional_tickets == NULL ||",
          "1441:     b->additional_tickets->len == 0){",
          "1443:      kdc_log(context, config, 4,",
          "1444:       \"No second ticket present in user-to-user request\");",
          "1445:             _kdc_audit_addreason((kdc_request_t)priv,",
          "1446:                                  \"No second ticket present in user-to-user request\");",
          "1447:      goto out;",
          "1448:  }",
          "1449:  t = &b->additional_tickets->val[0];",
          "1450:  if(!get_krbtgt_realm(&t->sname)){",
          "1451:      kdc_log(context, config, 4,",
          "1452:       \"Additional ticket is not a ticket-granting ticket\");",
          "1453:             _kdc_audit_addreason((kdc_request_t)priv,",
          "1454:                                  \"Additional ticket is not a ticket-granting ticket\");",
          "1455:      ret = KRB5KDC_ERR_POLICY;",
          "1456:      goto out;",
          "1457:  }",
          "1458:  ret = _krb5_principalname2krb5_principal(context, &p, t->sname, t->realm);",
          "1459:  if (ret)",
          "1460:      goto out;",
          "1462:  ret = krb5_unparse_name(context, p, &tpn);",
          "1463:  if (ret)",
          "1464:   goto out;",
          "1465:  if(t->enc_part.kvno){",
          "1466:      second_kvno = *t->enc_part.kvno;",
          "1467:      kvno_ptr = &second_kvno;",
          "1468:  }",
          "1469:  ret = _kdc_db_fetch(context, config, p,",
          "1470:        HDB_F_GET_KRBTGT, kvno_ptr,",
          "1471:        NULL, &uu);",
          "1472:  krb5_free_principal(context, p);",
          "1473:  if(ret){",
          "1474:      if (ret == HDB_ERR_NOENTRY)",
          "1475:   ret = KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN;",
          "1476:             _kdc_audit_addreason((kdc_request_t)priv,",
          "1477:                                  \"User-to-user service principal (TGS) unknown\");",
          "1478:      goto out;",
          "1479:  }",
          "1480:  ret = hdb_enctype2key(context, &uu->entry, NULL,",
          "1481:          t->enc_part.etype, &uukey);",
          "1482:  if(ret){",
          "1483:      _kdc_free_ent(context, uu);",
          "1485:             _kdc_audit_addreason((kdc_request_t)priv,",
          "1486:                                  \"User-to-user enctype not supported\");",
          "1487:      goto out;",
          "1488:  }",
          "1489:  ret = krb5_decrypt_ticket(context, t, &uukey->key, &adtkt, 0);",
          "1490:  _kdc_free_ent(context, uu);",
          "1491:  if(ret) {",
          "1492:             _kdc_audit_addreason((kdc_request_t)priv,",
          "1493:                                  \"User-to-user TGT decrypt failure\");",
          "1494:      goto out;",
          "1495:         }",
          "1497:  ret = _kdc_verify_flags(context, config, &adtkt, tpn);",
          "1498:  if (ret) {",
          "1499:             _kdc_audit_addreason((kdc_request_t)priv,",
          "1500:                                  \"User-to-user TGT expired or invalid\");",
          "1501:      goto out;",
          "1502:         }",
          "1504:  s = &adtkt.cname;",
          "1505:  r = adtkt.crealm;",
          "1506:     } else if (s == NULL) {",
          "",
          "[Added Lines]",
          "1432:     if (s == NULL) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1713:  krb5_enctype etype;",
          "1715:  if(b->kdc_options.enc_tkt_in_skey) {",
          "1716:      size_t i;",
          "1717:      ekey = &adtkt.key;",
          "1718:      for(i = 0; i < b->etype.len; i++)",
          "1719:   if (b->etype.val[i] == adtkt.key.keytype)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1642:      Ticket *t;",
          "1643:      hdb_entry_ex *uu;",
          "1644:      krb5_principal p;",
          "1645:      Key *uukey;",
          "1646:      krb5uint32 second_kvno = 0;",
          "1647:      krb5uint32 *kvno_ptr = NULL;",
          "1650:      if(b->additional_tickets == NULL ||",
          "1651:         b->additional_tickets->len == 0){",
          "1653:   kdc_log(context, config, 4,",
          "1654:    \"No second ticket present in user-to-user request\");",
          "1655:   _kdc_audit_addreason((kdc_request_t)priv,",
          "1656:          \"No second ticket present in user-to-user request\");",
          "1657:   goto out;",
          "1658:      }",
          "1659:      t = &b->additional_tickets->val[0];",
          "1660:      if(!get_krbtgt_realm(&t->sname)){",
          "1661:   kdc_log(context, config, 4,",
          "1662:    \"Additional ticket is not a ticket-granting ticket\");",
          "1663:   _kdc_audit_addreason((kdc_request_t)priv,",
          "1664:          \"Additional ticket is not a ticket-granting ticket\");",
          "1665:   ret = KRB5KDC_ERR_POLICY;",
          "1666:   goto out;",
          "1667:      }",
          "1668:      ret = _krb5_principalname2krb5_principal(context, &p, t->sname, t->realm);",
          "1669:      if (ret)",
          "1670:   goto out;",
          "1672:      ret = krb5_unparse_name(context, p, &tpn);",
          "1673:      if (ret)",
          "1674:   goto out;",
          "1675:      if(t->enc_part.kvno){",
          "1676:   second_kvno = *t->enc_part.kvno;",
          "1677:   kvno_ptr = &second_kvno;",
          "1678:      }",
          "1679:      ret = _kdc_db_fetch(context, config, p,",
          "1680:     HDB_F_GET_KRBTGT, kvno_ptr,",
          "1681:     NULL, &uu);",
          "1682:      krb5_free_principal(context, p);",
          "1683:      if(ret){",
          "1684:   if (ret == HDB_ERR_NOENTRY)",
          "1685:       ret = KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN;",
          "1686:   _kdc_audit_addreason((kdc_request_t)priv,",
          "1687:          \"User-to-user service principal (TGS) unknown\");",
          "1688:   goto out;",
          "1689:      }",
          "1690:      ret = hdb_enctype2key(context, &uu->entry, NULL,",
          "1691:       t->enc_part.etype, &uukey);",
          "1692:      if(ret){",
          "1693:   _kdc_free_ent(context, uu);",
          "1695:   _kdc_audit_addreason((kdc_request_t)priv,",
          "1696:          \"User-to-user enctype not supported\");",
          "1697:   goto out;",
          "1698:      }",
          "1699:      ret = krb5_decrypt_ticket(context, t, &uukey->key, &adtkt, 0);",
          "1700:      _kdc_free_ent(context, uu);",
          "1701:      if(ret) {",
          "1702:   _kdc_audit_addreason((kdc_request_t)priv,",
          "1703:          \"User-to-user TGT decrypt failure\");",
          "1704:   goto out;",
          "1705:      }",
          "1707:      ret = _kdc_verify_flags(context, config, &adtkt, tpn);",
          "1708:      if (ret) {",
          "1709:   _kdc_audit_addreason((kdc_request_t)priv,",
          "1710:          \"User-to-user TGT expired or invalid\");",
          "1711:   goto out;",
          "1712:      }",
          "",
          "---------------"
        ]
      }
    }
  ]
}