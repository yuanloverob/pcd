{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8d3c46daa8a4a9a06a7753f594690edc4a8fe401",
      "candidate_info": {
        "commit_hash": "8d3c46daa8a4a9a06a7753f594690edc4a8fe401",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/8d3c46daa8a4a9a06a7753f594690edc4a8fe401",
        "files": [
          "lib/util.js"
        ],
        "message": "util: fix typo in lib/util.js",
        "before_after_code_files": [
          "lib/util.js||lib/util.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/util.js||lib/util.js": [
          "File: lib/util.js -> lib/util.js"
        ]
      }
    },
    {
      "candidate_hash": "57276ae70ade5faeb0be0d26a6d6ff08d8d579ac",
      "candidate_info": {
        "commit_hash": "57276ae70ade5faeb0be0d26a6d6ff08d8d579ac",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/57276ae70ade5faeb0be0d26a6d6ff08d8d579ac",
        "files": [
          "common.gypi",
          "configure"
        ],
        "message": "build: enable strict aliasing if gcc < 4.5.0\n\nWe already enable -fstrict-aliasing when gcc >= 4.6.0 but let's enable it for\ngcc < 4.5.0 as well. The aliasing bugs that we ran into in the past are all\nparticular to the 4.5.x releases.",
        "before_after_code_files": [
          "common.gypi||common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: {",
          "2:   'variables': {",
          "4:     'visibility%': 'hidden',         # V8's visibility setting",
          "5:     'target_arch%': 'ia32',          # set v8's target architecture",
          "6:     'host_arch%': 'ia32',            # set v8's host architecture",
          "",
          "[Removed Lines]",
          "3:     'strict_aliasing%': 'false',     # turn on/off -fstrict-aliasing",
          "",
          "[Added Lines]",
          "3:     'node_no_strict_aliasing%': 0,   # turn off -fstrict-aliasing",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:             # pull in V8's postmortem metadata",
          "53:             'ldflags': [ '-Wl,-z,allextract' ]",
          "54:           }],",
          "56:             'cflags': [ '-fno-strict-aliasing' ],",
          "57:           }],",
          "58:         ],",
          "",
          "[Removed Lines]",
          "55:           ['strict_aliasing!=\"true\"', {",
          "",
          "[Added Lines]",
          "55:           ['node_no_strict_aliasing==1', {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "143e9bef477ab847aa1045a1a88f66a53e34d736",
      "candidate_info": {
        "commit_hash": "143e9bef477ab847aa1045a1a88f66a53e34d736",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/143e9bef477ab847aa1045a1a88f66a53e34d736",
        "files": [
          "test/simple/test-fs-truncate.js"
        ],
        "message": "test: make test-fs-truncate pass on windows",
        "before_after_code_files": [
          "test/simple/test-fs-truncate.js||test/simple/test-fs-truncate.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-fs-truncate.js||test/simple/test-fs-truncate.js": [
          "File: test/simple/test-fs-truncate.js -> test/simple/test-fs-truncate.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: fs.writeFileSync(filename, data);",
          "50: stat = fs.statSync(filename);",
          "51: assert.equal(stat.size, 1024 * 16);",
          "",
          "[Removed Lines]",
          "48: var fd = fs.openSync(filename, 'a');",
          "",
          "[Added Lines]",
          "48: var fd = fs.openSync(filename, 'r+');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93be4ffd4b224ec10476340dcc7747ac20d4ac13",
      "candidate_info": {
        "commit_hash": "93be4ffd4b224ec10476340dcc7747ac20d4ac13",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/93be4ffd4b224ec10476340dcc7747ac20d4ac13",
        "files": [
          "test/message/eval_messages.out",
          "test/message/stdin_messages.out",
          "test/message/testcfg.py"
        ],
        "message": "test-message: fix message output\n\n1. The net changes add a stack frame to stdin errors.\n2. The error line numbers were overly strict in many places.",
        "before_after_code_files": [
          "test/message/testcfg.py||test/message/testcfg.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/message/testcfg.py||test/message/testcfg.py": [
          "File: test/message/testcfg.py -> test/message/testcfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:   def IgnoreLine(self, str):",
          "45:     \"\"\"Ignore empty lines and valgrind output.\"\"\"",
          "47:     else: return str.startswith('==') or str.startswith('**')",
          "49:   def IsFailureOutput(self, output):",
          "",
          "[Removed Lines]",
          "46:     if not str: return True",
          "",
          "[Added Lines]",
          "46:     if not str.strip(): return True",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:     raw_lines = (output.stdout + output.stderr).split('\\n')",
          "67:     outlines = [ s for s in raw_lines if not self.IgnoreLine(s) ]",
          "68:     if len(outlines) != len(patterns):",
          "69:       return True",
          "70:     for i in xrange(len(patterns)):",
          "71:       if not re.match(patterns[i], outlines[i]):",
          "72:         return True",
          "73:     return False",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:       print \"length differs.\"",
          "70:       print \"expect=%d\" % len(patterns)",
          "71:       print \"actual=%d\" % len(outlines)",
          "72:       print \"patterns:\"",
          "73:       for i in xrange(len(patterns)):",
          "74:         print \"pattern = %s\" % patterns[i]",
          "75:       print \"outlines:\"",
          "76:       for i in xrange(len(outlines)):",
          "77:         print \"outline = %s\" % outlines[i]",
          "81:         print \"match failed\"",
          "82:         print \"line=%d\" % i",
          "83:         print \"expect=%s\" % patterns[i]",
          "84:         print \"actual=%s\" % outlines[i]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ffee8739417a5db1d4e32f98fd28fea4c9bc8f42",
      "candidate_info": {
        "commit_hash": "ffee8739417a5db1d4e32f98fd28fea4c9bc8f42",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ffee8739417a5db1d4e32f98fd28fea4c9bc8f42",
        "files": [
          "deps/uv/config-unix.mk",
          "wscript"
        ],
        "message": "build: define _DARWIN_USE_64_BIT_INODE=1 on OS X\n\nFixes a segmentation fault on some OS X systems due to sizeof(struct stat)\nmismatches.\n\nFixes #2061.",
        "before_after_code_files": [
          "deps/uv/config-unix.mk||deps/uv/config-unix.mk"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/config-unix.mk||deps/uv/config-unix.mk": [
          "File: deps/uv/config-unix.mk -> deps/uv/config-unix.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: ifeq (Darwin,$(uname_S))",
          "51: EV_CONFIG=config_darwin.h",
          "52: EIO_CONFIG=config_darwin.h",
          "54: LINKFLAGS+=-framework CoreServices",
          "55: OBJS += src/unix/darwin.o",
          "56: OBJS += src/unix/kqueue.o",
          "",
          "[Removed Lines]",
          "53: CPPFLAGS += -Isrc/ares/config_darwin",
          "",
          "[Added Lines]",
          "53: CPPFLAGS += -D_DARWIN_USE_64_BIT_INODE=1 -Isrc/ares/config_darwin",
          "",
          "---------------"
        ]
      }
    }
  ]
}