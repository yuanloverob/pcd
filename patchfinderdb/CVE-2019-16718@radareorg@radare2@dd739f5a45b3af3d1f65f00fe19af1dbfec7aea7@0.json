{
  "cve_id": "CVE-2019-16718",
  "cve_desc": "In radare2 before 3.9.0, a command injection vulnerability exists in bin_symbols() in libr/core/cbin.c. By using a crafted executable file, it's possible to execute arbitrary shell commands with the permissions of the victim. This vulnerability is due to an insufficient fix for CVE-2019-14745 and improper handling of symbol names embedded in executables.",
  "repo": "radareorg/radare2",
  "patch_hash": "dd739f5a45b3af3d1f65f00fe19af1dbfec7aea7",
  "patch_info": {
    "commit_hash": "dd739f5a45b3af3d1f65f00fe19af1dbfec7aea7",
    "repo": "radareorg/radare2",
    "commit_url": "https://github.com/radareorg/radare2/commit/dd739f5a45b3af3d1f65f00fe19af1dbfec7aea7",
    "files": [
      "libr/core/cmd.c"
    ],
    "message": "Fix #14990 - multiple quoted command parsing issue ##core\n\n\t> \"?e hello\"\"?e world\"\n\thello\n\tworld\"\n\t> \"?e hello\";\"?e world\"\n\thello\n\tworld",
    "before_after_code_files": [
      "libr/core/cmd.c||libr/core/cmd.c"
    ]
  },
  "patch_diff": {
    "libr/core/cmd.c||libr/core/cmd.c": [
      "File: libr/core/cmd.c -> libr/core/cmd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2580:     cmd = sc + 1;",
      "2581:     continue;",
      "2582:    }",
      "2583:    if (*p) {",
      "2585:     if (p[0] == '@') {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2583:    char op0 = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2591:     if (p[1] == '@' || (p[1] && p[2] == '@')) {",
      "2592:      char *q = strchr (p + 1, '\"');",
      "2593:      if (q) {",
      "2595:      }",
      "2596:      haveQuote = q != NULL;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2595:       op0 = *q;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2644:      cmd = p + 1;",
      "2645:     } else {",
      "2646:      if (*p == '\"') {",
      "2648:      } else {",
      "2650:       cmd = p;",
      "2651:      }",
      "2652:     }",
      "",
      "[Removed Lines]",
      "2647:       cmd = p + 1;",
      "",
      "[Added Lines]",
      "2649:       cmd = p;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5411543a310a470b1257fb93273cdd6e8dfcb3af",
      "candidate_info": {
        "commit_hash": "5411543a310a470b1257fb93273cdd6e8dfcb3af",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/5411543a310a470b1257fb93273cdd6e8dfcb3af",
        "files": [
          "libr/core/cbin.c"
        ],
        "message": "More fixes for the CVE-2019-14745",
        "before_after_code_files": [
          "libr/core/cbin.c||libr/core/cbin.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/14989"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libr/core/cbin.c||libr/core/cbin.c": [
          "File: libr/core/cbin.c -> libr/core/cbin.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   switch (*arg) {",
          "68:   case ' ':",
          "69:   case '=':",
          "70:   case '\\r':",
          "71:   case '\\n':",
          "72:    break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:   case '\"':",
          "71:   case '\\\\':",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:  }",
          "89:  char *b = a;",
          "90:  while (*arg) {",
          "92:   case '@':",
          "93:   case '`':",
          "94:   case '|':",
          "95:   case ';':",
          "96:   case '\\n':",
          "97:    break;",
          "98:   default:",
          "100:    break;",
          "101:   }",
          "102:   arg++;",
          "",
          "[Removed Lines]",
          "91:   switch (*arg) {",
          "",
          "[Added Lines]",
          "93:   char ch = *arg;",
          "94:   switch (ch) {",
          "99:   case '=':",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2225:       char *m = __filterShell (module);",
          "2227:       if (r->bin->prefix) {",
          "2229:         module, symbol->ordinal, r->bin->prefix, symname);",
          "2230:       } else {",
          "2232:         module, symbol->ordinal, symname);",
          "2233:       }",
          "2234:       free (symname);",
          "",
          "[Removed Lines]",
          "2228:        r_cons_printf (\"k bin/pe/%s/%d=%s.%s\\n\",",
          "2231:        r_cons_printf (\"k bin/pe/%s/%d=%s\\n\",",
          "",
          "[Added Lines]",
          "2232:        r_cons_printf (\"\\\"k bin/pe/%s/%d=%s.%s\\\"\\n\",",
          "2235:        r_cons_printf (\"\\\"k bin/pe/%s/%d=%s\\\"\\n\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd25c68bb4cbb9bdf35d8b3836ca5c105cd836df",
      "candidate_info": {
        "commit_hash": "cd25c68bb4cbb9bdf35d8b3836ca5c105cd836df",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/cd25c68bb4cbb9bdf35d8b3836ca5c105cd836df",
        "files": [
          "libr/core/canal.c",
          "libr/core/cmd.c"
        ],
        "message": "Fix multiple quote cmd issue ##core",
        "before_after_code_files": [
          "libr/core/canal.c||libr/core/canal.c",
          "libr/core/cmd.c||libr/core/cmd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/14989"
        ],
        "olp_code_files": {
          "patch": [
            "libr/core/cmd.c||libr/core/cmd.c"
          ],
          "candidate": [
            "libr/core/cmd.c||libr/core/cmd.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/core/canal.c||libr/core/canal.c": [
          "File: libr/core/canal.c -> libr/core/canal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "893:      if (i == nexti) {",
          "894:       ut64 at = fcn->addr + r_anal_fcn_size (fcn);",
          "895:       while (true) {",
          "897:        if (!mi) {",
          "898:         break;",
          "899:        }",
          "",
          "[Removed Lines]",
          "896:        const RAnalMetaItem *mi = r_meta_find (core->anal, at, R_META_TYPE_ANY, 0);",
          "",
          "[Added Lines]",
          "896:        RAnalMetaItem *mi = r_meta_find (core->anal, at, R_META_TYPE_ANY, 0);",
          "",
          "---------------"
        ],
        "libr/core/cmd.c||libr/core/cmd.c": [
          "File: libr/core/cmd.c -> libr/core/cmd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2557:    char *line, *p;",
          "2558:    haveQuote = *cmd == '\"';",
          "2559:    if (haveQuote) {",
          "2561:     cmd++;",
          "2563:     if (!p || !*p) {",
          "2564:      eprintf (\"Missing \\\" in (%s).\", cmd);",
          "2565:      r_list_free (tmpenvs);",
          "",
          "[Removed Lines]",
          "2562:     p = cmd[0] ? find_eoq (cmd + 1) : NULL;",
          "",
          "[Added Lines]",
          "2561:     p = *cmd ? find_eoq (cmd) : NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2581:     cmd = sc + 1;",
          "2582:     continue;",
          "2583:    }",
          "2586:     if (p[0] == '@') {",
          "2587:      p--;",
          "",
          "[Removed Lines]",
          "2584:    if (p[0]) {",
          "",
          "[Added Lines]",
          "2583:    if (*p) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4753:   {\"=\",        \"io pipe\", cmd_rap},",
          "4754:   {\"?\",        \"help message\", cmd_help, cmd_help_init},",
          "4755:   {\"\\\\\",       \"alias for =!\", cmd_rap_run},",
          "4757:   {\"0x\",       \"alias for s 0x\", cmd_ox},",
          "4758:   {\"analysis\", \"analysis\", cmd_anal, cmd_anal_init},",
          "4759:   {\"bsize\",    \"change block size\", cmd_bsize},",
          "",
          "[Removed Lines]",
          "4756:   {\"'\",       \"alias for =!\", cmd_rap_run},",
          "",
          "[Added Lines]",
          "4755:   {\"'\",        \"alias for =!\", cmd_rap_run},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b8df7f5a20afcda6ed5c0ee917aaae277437871",
      "candidate_info": {
        "commit_hash": "7b8df7f5a20afcda6ed5c0ee917aaae277437871",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/7b8df7f5a20afcda6ed5c0ee917aaae277437871",
        "files": [
          "libr/bin/bobj.c"
        ],
        "message": "Fix double-free in bin-relocs",
        "before_after_code_files": [
          "libr/bin/bobj.c||libr/bin/bobj.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/14989"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libr/bin/bobj.c||libr/bin/bobj.c": [
          "File: libr/bin/bobj.c -> libr/bin/bobj.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "335:     REBASE_PADDR (o, l, RBinReloc);",
          "336:     o->relocs = list2rbtree (l);",
          "337:     l->free = NULL;",
          "339:    }",
          "340:   }",
          "341:  }",
          "",
          "[Removed Lines]",
          "338:     r_list_free (l);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}