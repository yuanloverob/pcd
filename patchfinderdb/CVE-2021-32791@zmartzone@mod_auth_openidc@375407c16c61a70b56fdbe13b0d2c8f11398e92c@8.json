{
  "cve_id": "CVE-2021-32791",
  "cve_desc": "mod_auth_openidc is an authentication/authorization module for the Apache 2.x HTTP server that functions as an OpenID Connect Relying Party, authenticating users against an OpenID Connect Provider. In mod_auth_openidc before version 2.4.9, the AES GCM encryption in mod_auth_openidc uses a static IV and AAD. It is important to fix because this creates a static nonce and since aes-gcm is a stream cipher, this can lead to known cryptographic issues, since the same key is being reused. From 2.4.9 onwards this has been patched to use dynamic values through usage of cjose AES encryption routines.",
  "repo": "zmartzone/mod_auth_openidc",
  "patch_hash": "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
  "patch_info": {
    "commit_hash": "375407c16c61a70b56fdbe13b0d2c8f11398e92c",
    "repo": "zmartzone/mod_auth_openidc",
    "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/375407c16c61a70b56fdbe13b0d2c8f11398e92c",
    "files": [
      ".gitignore",
      "ChangeLog",
      "Dockerfile",
      "configure.ac",
      "openidc.conf",
      "src/cache/common.c",
      "test/mod_auth_openidc.jmx"
    ],
    "message": "use encrypted JWTs for storing encrypted cache contents\n\n- avoid using static AAD/IV; thanks @niebardzo\n- bump to 2.4.9-dev\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "openidc.conf||openidc.conf",
      "src/cache/common.c||src/cache/common.c",
      "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
      "",
      "[Removed Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.4.8.4],[hans.zandbelt@zmartzone.eu])",
      "",
      "[Added Lines]",
      "1: AC_INIT([mod_auth_openidc],[2.4.9-dev],[hans.zandbelt@zmartzone.eu])",
      "",
      "---------------"
    ],
    "openidc.conf||openidc.conf": [
      "File: openidc.conf -> openidc.conf",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: OIDCInfoHook iat access_token access_token_expires id_token userinfo refresh_token session",
      "27: <Location /protected>",
      "28:   AuthType openid-connect",
      "29:   Require valid-user",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "27: OIDCScope \"openid email profile\"",
      "",
      "---------------"
    ],
    "src/cache/common.c||src/cache/common.c": [
      "File: src/cache/common.c -> src/cache/common.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "244:  return rv;",
      "245: }",
      "477: }",
      "553: }",
      "560:  char *input = apr_psprintf(r->pool, \"%s:%s\", passphrase, key);",
      "561:  char *output = NULL;",
      "566:   return NULL;",
      "567:  }",
      "568:  return output;",
      "",
      "[Removed Lines]",
      "247: #define oidc_cache_crypto_openssl_error(r, fmt, ...) \\",
      "248:   oidc_error(r, \"%s: %s\", apr_psprintf(r->pool, fmt, ##__VA_ARGS__), ERR_error_string(ERR_get_error(), NULL))",
      "250: #define OIDC_CACHE_CIPHER       EVP_aes_256_gcm()",
      "251: #define OIDC_CACHE_TAG_LEN       16",
      "253: #if (OPENSSL_VERSION_NUMBER >= 0x10100005L && !defined(LIBRESSL_VERSION_NUMBER))",
      "254: #define OIDC_CACHE_CRYPTO_GET_TAG     EVP_CTRL_AEAD_GET_TAG",
      "255: #define OIDC_CACHE_CRYPTO_SET_TAG     EVP_CTRL_AEAD_SET_TAG",
      "256: #define OIDC_CACHE_CRYPTO_SET_IVLEN     EVP_CTRL_AEAD_SET_IVLEN",
      "257: #else",
      "258: #define OIDC_CACHE_CRYPTO_GET_TAG     EVP_CTRL_GCM_GET_TAG",
      "259: #define OIDC_CACHE_CRYPTO_SET_TAG     EVP_CTRL_GCM_SET_TAG",
      "260: #define OIDC_CACHE_CRYPTO_SET_IVLEN     EVP_CTRL_GCM_SET_IVLEN",
      "261: #endif",
      "266: static int oidc_cache_crypto_encrypt_impl(request_rec *r,",
      "267:   unsigned char *plaintext, int plaintext_len, const unsigned char *aad,",
      "268:   int aad_len, unsigned char *key, const unsigned char *iv, int iv_len,",
      "269:   unsigned char *ciphertext, const unsigned char *tag, int tag_len) {",
      "270:  EVP_CIPHER_CTX *ctx;",
      "272:  int len;",
      "274:  int ciphertext_len;",
      "277:  if (!(ctx = EVP_CIPHER_CTX_new())) {",
      "278:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_new\");",
      "279:   return -1;",
      "280:  }",
      "283:  if (!EVP_EncryptInit_ex(ctx, OIDC_CACHE_CIPHER, NULL, NULL, NULL)) {",
      "284:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptInit_ex\");",
      "285:   return -1;",
      "286:  }",
      "289:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_IVLEN, iv_len, NULL)) {",
      "290:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "291:   return -1;",
      "292:  }",
      "295:  if (!EVP_EncryptInit_ex(ctx, NULL, NULL, key, iv)) {",
      "296:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptInit_ex\");",
      "297:   return -1;",
      "298:  }",
      "301:  if (!EVP_EncryptUpdate(ctx, NULL, &len, aad, aad_len)) {",
      "302:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate aad: aad_len=%d\",",
      "303:     aad_len);",
      "304:   return -1;",
      "305:  }",
      "308:  if (!EVP_EncryptUpdate(ctx, ciphertext, &len, plaintext, plaintext_len)) {",
      "309:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptUpdate ciphertext\");",
      "310:   return -1;",
      "311:  }",
      "312:  ciphertext_len = len;",
      "318:  if (!EVP_EncryptFinal_ex(ctx, ciphertext + len, &len)) {",
      "319:   oidc_cache_crypto_openssl_error(r, \"EVP_EncryptFinal_ex\");",
      "320:   return -1;",
      "321:  }",
      "322:  ciphertext_len += len;",
      "325:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_GET_TAG, tag_len,",
      "326:    (void *) tag)) {",
      "327:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "328:   return -1;",
      "329:  }",
      "332:  EVP_CIPHER_CTX_free(ctx);",
      "334:  return ciphertext_len;",
      "335: }",
      "340: static int oidc_cache_crypto_decrypt_impl(request_rec *r,",
      "341:   unsigned char *ciphertext, int ciphertext_len, const unsigned char *aad,",
      "342:   int aad_len, const unsigned char *tag, int tag_len, unsigned char *key,",
      "343:   const unsigned char *iv, int iv_len, unsigned char *plaintext) {",
      "344:  EVP_CIPHER_CTX *ctx;",
      "345:  int len;",
      "346:  int plaintext_len;",
      "347:  int ret;",
      "350:  if (!(ctx = EVP_CIPHER_CTX_new())) {",
      "351:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_new\");",
      "352:   return -1;",
      "353:  }",
      "356:  if (!EVP_DecryptInit_ex(ctx, OIDC_CACHE_CIPHER, NULL, NULL, NULL)) {",
      "357:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptInit_ex\");",
      "358:   return -1;",
      "359:  }",
      "362:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_IVLEN, iv_len, NULL)) {",
      "363:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "364:   return -1;",
      "365:  }",
      "368:  if (!EVP_DecryptInit_ex(ctx, NULL, NULL, key, iv)) {",
      "369:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptInit_ex\");",
      "370:   return -1;",
      "371:  }",
      "374:  if (!EVP_DecryptUpdate(ctx, NULL, &len, aad, aad_len)) {",
      "375:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate aad: aad_len=%d\",",
      "376:     aad_len);",
      "377:   return -1;",
      "378:  }",
      "381:  if (!EVP_DecryptUpdate(ctx, plaintext, &len, ciphertext, ciphertext_len)) {",
      "382:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptUpdate ciphertext\");",
      "383:   return -1;",
      "384:  }",
      "385:  plaintext_len = len;",
      "388:  if (!EVP_CIPHER_CTX_ctrl(ctx, OIDC_CACHE_CRYPTO_SET_TAG, tag_len,",
      "389:    (void *) tag)) {",
      "390:   oidc_cache_crypto_openssl_error(r, \"EVP_CIPHER_CTX_ctrl\");",
      "391:   return -1;",
      "392:  }",
      "398:  ret = EVP_DecryptFinal_ex(ctx, plaintext + len, &len);",
      "401:  EVP_CIPHER_CTX_free(ctx);",
      "403:  if (ret > 0) {",
      "405:   plaintext_len += len;",
      "406:   return plaintext_len;",
      "407:  } else {",
      "409:   oidc_cache_crypto_openssl_error(r, \"EVP_DecryptFinal_ex\");",
      "410:   return -1;",
      "411:  }",
      "412: }",
      "417: static const unsigned char OIDC_CACHE_CRYPTO_GCM_AAD[] = { 0x4d, 0x23, 0xc3,",
      "418:   0xce, 0xc3, 0x34, 0xb4, 0x9b, 0xdb, 0x37, 0x0c, 0x43, 0x7f, 0xec, 0x78,",
      "419:   0xde };",
      "424: static const unsigned char OIDC_CACHE_CRYPTO_GCM_IV[] = { 0x00, 0x01, 0x02,",
      "425:   0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e,",
      "426:   0x0f };",
      "431: static int oidc_cache_crypto_encrypt(request_rec *r, const char *plaintext,",
      "432:   unsigned char *key, char **result) {",
      "433:  char *encoded = NULL, *p = NULL, *e_tag = NULL;",
      "434:  unsigned char *ciphertext = NULL;",
      "435:  int plaintext_len, ciphertext_len, encoded_len, e_tag_len;",
      "436:  unsigned char tag[OIDC_CACHE_TAG_LEN];",
      "439:  plaintext_len = strlen(plaintext) + 1;",
      "440:  ciphertext = apr_pcalloc(r->pool,",
      "441:    (plaintext_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER)));",
      "443:  ciphertext_len = oidc_cache_crypto_encrypt_impl(r,",
      "444:    (unsigned char *) plaintext, plaintext_len,",
      "445:    OIDC_CACHE_CRYPTO_GCM_AAD, sizeof(OIDC_CACHE_CRYPTO_GCM_AAD), key,",
      "446:    OIDC_CACHE_CRYPTO_GCM_IV, sizeof(OIDC_CACHE_CRYPTO_GCM_IV),",
      "447:    ciphertext, tag, sizeof(tag));",
      "450:  encoded_len = oidc_base64url_encode(r, &encoded, (const char *) ciphertext,",
      "451:    ciphertext_len, 1);",
      "452:  if (encoded_len > 0) {",
      "453:   p = encoded;",
      "456:   e_tag_len = oidc_base64url_encode(r, &e_tag, (const char *) tag,",
      "457:     OIDC_CACHE_TAG_LEN, 1);",
      "460:   encoded = apr_pcalloc(r->pool, encoded_len + 1 + e_tag_len + 1);",
      "461:   memcpy(encoded, p, encoded_len);",
      "462:   p = encoded + encoded_len;",
      "464:   p++;",
      "467:   memcpy(p, e_tag, e_tag_len);",
      "468:   encoded_len += e_tag_len + 1;",
      "471:   encoded[encoded_len] = '\\0';",
      "474:  }",
      "476:  return encoded_len;",
      "482: static int oidc_cache_crypto_decrypt(request_rec *r, const char *cache_value,",
      "483:   unsigned char *key, unsigned char **plaintext) {",
      "485:  int len = -1;",
      "488:  char *encoded_tag = strstr(cache_value, \".\");",
      "489:  if (encoded_tag == NULL) {",
      "490:   oidc_error(r,",
      "491:     \"corrupted cache value: no tag separator found in encrypted value\");",
      "492:   return FALSE;",
      "493:  }",
      "496:  cache_value = apr_pstrmemdup(r->pool, cache_value,",
      "497:    strlen(cache_value) - strlen(encoded_tag));",
      "498:  encoded_tag++;",
      "501:  char *d_bytes = NULL;",
      "502:  int d_len = oidc_base64url_decode(r->pool, &d_bytes, cache_value);",
      "505:  char *t_bytes = NULL;",
      "506:  int t_len = oidc_base64url_decode(r->pool, &t_bytes, encoded_tag);",
      "509:  if ((d_len > 0) && (t_len > 0)) {",
      "513:     (d_len + EVP_CIPHER_block_size(OIDC_CACHE_CIPHER) - 1));",
      "517:   len = oidc_cache_crypto_decrypt_impl(r, (unsigned char *) d_bytes,",
      "518:     d_len, OIDC_CACHE_CRYPTO_GCM_AAD,",
      "519:     sizeof(OIDC_CACHE_CRYPTO_GCM_AAD), (unsigned char *) t_bytes,",
      "520:     t_len, key, OIDC_CACHE_CRYPTO_GCM_IV,",
      "521:     sizeof(OIDC_CACHE_CRYPTO_GCM_IV), *plaintext);",
      "524:   if (len > -1) {",
      "525:    (*plaintext)[len] = '\\0';",
      "526:   } else {",
      "528:   }",
      "530:  }",
      "532:  return len;",
      "533: }",
      "538: static unsigned char *oidc_cache_hash_passphrase(request_rec *r,",
      "539:   const char *passphrase) {",
      "541:  unsigned char *key = NULL;",
      "542:  unsigned int key_len = 0;",
      "543:  oidc_jose_error_t err;",
      "545:  if (oidc_jose_hash_bytes(r->pool, OIDC_JOSE_ALG_SHA256,",
      "546:    (const unsigned char *) passphrase, strlen(passphrase), &key,",
      "547:    &key_len, &err) == FALSE) {",
      "548:   oidc_error(r, \"oidc_jose_hash_bytes returned an error: %s\", err.text);",
      "549:   return NULL;",
      "550:  }",
      "552:  return key;",
      "558: static char *oidc_cache_get_hashed_key(request_rec *r, const char *passphrase,",
      "559:   const char *key) {",
      "562:  if (oidc_util_hash_string_and_base64url_encode(r, OIDC_JOSE_ALG_SHA256,",
      "563:    input, &output) == FALSE) {",
      "564:   oidc_error(r,",
      "565:     \"oidc_util_hash_string_and_base64url_encode returned an error\");",
      "",
      "[Added Lines]",
      "247: #define OIDC_CACHE_CRYPTO_JSON_KEY \"c\"",
      "252: static apr_byte_t oidc_cache_crypto_encrypt(request_rec *r, const char *plaintext, const char *key,",
      "253:   char **result) {",
      "254:  apr_byte_t rv = FALSE;",
      "255:  json_t *json = NULL;",
      "257:  json = json_object();",
      "258:  json_object_set_new(json, OIDC_CACHE_CRYPTO_JSON_KEY, json_string(plaintext));",
      "260:  rv = oidc_util_jwt_create(r, (const char*) key, json, result);",
      "262:  if (json)",
      "263:   json_decref(json);",
      "265:  return rv;",
      "271: static apr_byte_t oidc_cache_crypto_decrypt(request_rec *r, const char *cache_value,",
      "272:   const char *key, char **plaintext) {",
      "274:  apr_byte_t rv = FALSE;",
      "275:  json_t *json = NULL;",
      "277:  rv = oidc_util_jwt_verify(r, (const char*) key, cache_value, &json);",
      "278:  if (rv == FALSE)",
      "279:   goto end;",
      "281:  rv = oidc_json_object_get_string(r->pool, json, OIDC_CACHE_CRYPTO_JSON_KEY, plaintext, NULL);",
      "283:  end:",
      "285:  if (json)",
      "286:   json_decref(json);",
      "288:  return rv;",
      "294: static char* oidc_cache_get_hashed_key(request_rec *r, const char *passphrase, const char *key) {",
      "297:  if (oidc_util_hash_string_and_base64url_encode(r, OIDC_JOSE_ALG_SHA256, input, &output)",
      "298:    == FALSE) {",
      "299:   oidc_error(r, \"oidc_util_hash_string_and_base64url_encode returned an error\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "604:   goto out;",
      "605:  }",
      "611: out:",
      "",
      "[Removed Lines]",
      "607:  rc = (oidc_cache_crypto_decrypt(r, cache_value,",
      "608:    oidc_cache_hash_passphrase(r, cfg->crypto_passphrase),",
      "609:    (unsigned char **) value) > 0);",
      "",
      "[Added Lines]",
      "341:  rc = oidc_cache_crypto_decrypt(r, cache_value, cfg->crypto_passphrase, value);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "650:    goto out;",
      "652:   if (value != NULL) {",
      "656:     goto out;",
      "657:    value = encoded;",
      "658:   }",
      "",
      "[Removed Lines]",
      "653:    if (oidc_cache_crypto_encrypt(r, value,",
      "654:      oidc_cache_hash_passphrase(r, cfg->crypto_passphrase),",
      "655:      &encoded) <= 0)",
      "",
      "[Added Lines]",
      "385:    if (oidc_cache_crypto_encrypt(r, value, cfg->crypto_passphrase, &encoded) == FALSE)",
      "",
      "---------------"
    ],
    "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx": [
      "File: test/mod_auth_openidc.jmx -> test/mod_auth_openidc.jmx",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
      "3:   <hashTree>",
      "4:     <TestPlan guiclass=\"TestPlanGui\" testclass=\"TestPlan\" testname=\"OpenID Connect Apache Module Test Plan\" enabled=\"true\">",
      "5:       <stringProp name=\"TestPlan.comments\"></stringProp>",
      "",
      "[Removed Lines]",
      "2: <jmeterTestPlan version=\"1.2\" properties=\"3.1\" jmeter=\"3.1.20170220\">",
      "",
      "[Added Lines]",
      "2: <jmeterTestPlan version=\"1.2\" properties=\"5.0\" jmeter=\"5.1.1.20190725\">",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7:       <boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>",
      "8:       <elementProp name=\"TestPlan.user_defined_variables\" elementType=\"Arguments\" guiclass=\"ArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
      "9:         <collectionProp name=\"Arguments.arguments\">",
      "12:             <stringProp name=\"Argument.value\">localhost.zmartzone.eu</stringProp>",
      "13:             <stringProp name=\"Argument.metadata\">=</stringProp>",
      "14:           </elementProp>",
      "",
      "[Removed Lines]",
      "10:           <elementProp name=\"X_APP_SERVER\" elementType=\"Argument\">",
      "11:             <stringProp name=\"Argument.name\">X_APP_SERVER</stringProp>",
      "",
      "[Added Lines]",
      "10:           <elementProp name=\"APP_SERVER\" elementType=\"Argument\">",
      "11:             <stringProp name=\"Argument.name\">APP_SERVER</stringProp>",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "57:           </elementProp>",
      "58:           <elementProp name=\"APP_PATH_ACCESS\" elementType=\"Argument\">",
      "59:             <stringProp name=\"Argument.name\">APP_PATH_ACCESS</stringProp>",
      "61:             <stringProp name=\"Argument.metadata\">=</stringProp>",
      "62:           </elementProp>",
      "63:         </collectionProp>",
      "",
      "[Removed Lines]",
      "60:             <stringProp name=\"Argument.value\">/protected/api/index.php</stringProp>",
      "",
      "[Added Lines]",
      "60:             <stringProp name=\"Argument.value\">/api/index.php</stringProp>",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "94:           </elementProp>",
      "95:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "96:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "99:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "100:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "101:           <stringProp name=\"HTTPSampler.path\">${APP_PATH_USER}</stringProp>",
      "",
      "[Removed Lines]",
      "97:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "98:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "104:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "105:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "106:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "109:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "110:         </HTTPSamplerProxy>",
      "111:         <hashTree>",
      "112:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthorizationRequestPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "107:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "108:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "106:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "107:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "108:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "125:           </elementProp>",
      "126:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "127:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "130:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "131:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "132:           <stringProp name=\"HTTPSampler.path\">/${AuthorizationRequestPath}</stringProp>",
      "",
      "[Removed Lines]",
      "128:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "129:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "135:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "136:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "137:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "140:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "141:         </HTTPSamplerProxy>",
      "142:         <hashTree>",
      "143:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AuthzResumePath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "138:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "139:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "136:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "137:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "138:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "164:           </elementProp>",
      "165:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "166:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "169:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "170:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "171:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "167:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "168:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "174:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "175:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "176:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "179:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "180:         </HTTPSamplerProxy>",
      "181:         <hashTree>",
      "182:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumeParam\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "177:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "178:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "174:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "175:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "176:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "226:           </elementProp>",
      "227:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "228:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "231:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "232:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "233:           <stringProp name=\"HTTPSampler.path\">/IdpSample/MainPage?cmd=login</stringProp>",
      "",
      "[Removed Lines]",
      "229:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "230:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "236:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "237:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "238:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "241:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "242:         </HTTPSamplerProxy>",
      "243:         <hashTree>",
      "244:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ResumePath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "239:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "240:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "235:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "236:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "237:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "257:           </elementProp>",
      "258:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "259:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "262:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "263:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "264:           <stringProp name=\"HTTPSampler.path\">${ResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "260:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "261:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "267:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "268:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "269:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "272:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "273:         </HTTPSamplerProxy>",
      "274:         <hashTree>",
      "275:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab RedirectURIPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "270:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "271:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "265:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "266:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "267:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "321:           </elementProp>",
      "322:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "323:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "326:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "327:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "328:           <stringProp name=\"HTTPSampler.path\">/${RedirectURIPath}</stringProp>",
      "",
      "[Removed Lines]",
      "324:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "325:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "331:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "332:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "333:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "336:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "337:         </HTTPSamplerProxy>",
      "338:         <hashTree>",
      "339:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "334:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "335:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "328:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "329:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "330:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "367:           </elementProp>",
      "368:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "369:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "372:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "373:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "374:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "370:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "371:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "377:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "378:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "379:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "382:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "383:         </HTTPSamplerProxy>",
      "384:         <hashTree>",
      "385:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab cSRFToken Parameter\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "380:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "381:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "373:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "374:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "375:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "441:           </elementProp>",
      "442:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "443:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "446:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "447:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "448:           <stringProp name=\"HTTPSampler.path\">${AuthzResumePath}</stringProp>",
      "",
      "[Removed Lines]",
      "444:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "445:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "451:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "452:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "453:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "456:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "457:         </HTTPSamplerProxy>",
      "458:         <hashTree>",
      "459:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab LocationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "454:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "455:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "446:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "447:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "448:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "472:           </elementProp>",
      "473:           <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "474:           <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "477:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "478:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "479:           <stringProp name=\"HTTPSampler.path\">/${LocationPath}</stringProp>",
      "",
      "[Removed Lines]",
      "475:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "476:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "482:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "483:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "484:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "487:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "488:         </HTTPSamplerProxy>",
      "489:         <hashTree>",
      "490:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab ApplicationPath\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "485:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "486:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "476:           <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "477:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "478:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "517:             </elementProp>",
      "518:             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "519:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "522:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "523:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "524:             <stringProp name=\"HTTPSampler.path\">/${ApplicationPath}</stringProp>",
      "",
      "[Removed Lines]",
      "520:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "521:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "527:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "528:             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "529:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "532:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "533:           </HTTPSamplerProxy>",
      "534:           <hashTree>",
      "535:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert User Logged In\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "530:             <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "531:             <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "520:             <stringProp name=\"HTTPSampler.implementation\">HttpClient4</stringProp>",
      "521:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "522:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "539:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "540:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "541:               <intProp name=\"Assertion.test_type\">2</intProp>",
      "542:             </ResponseAssertion>",
      "543:             <hashTree/>",
      "544:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert Fake Header Removal\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "532:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "548:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "549:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "550:               <intProp name=\"Assertion.test_type\">6</intProp>",
      "551:             </ResponseAssertion>",
      "552:             <hashTree/>",
      "553:           </hashTree>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "542:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "567:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "568:           <boolProp name=\"stopThread\">false</boolProp>",
      "569:           <stringProp name=\"variableNames\">USERNAME,PASSWORD</stringProp>",
      "570:         </CSVDataSet>",
      "571:         <hashTree/>",
      "582:         <hashTree/>",
      "583:       </hashTree>",
      "584:       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OAuth Resource Access\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "572:         <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Hosts Data Set\" enabled=\"true\">",
      "573:           <stringProp name=\"filename\">hosts.txt</stringProp>",
      "574:           <stringProp name=\"fileEncoding\"></stringProp>",
      "575:           <stringProp name=\"variableNames\">APP_SERVER</stringProp>",
      "576:           <stringProp name=\"delimiter\">,</stringProp>",
      "577:           <boolProp name=\"quotedData\">false</boolProp>",
      "578:           <boolProp name=\"recycle\">true</boolProp>",
      "579:           <boolProp name=\"stopThread\">false</boolProp>",
      "580:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "581:         </CSVDataSet>",
      "",
      "[Added Lines]",
      "562:           <boolProp name=\"ignoreFirstLine\">false</boolProp>",
      "565:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">",
      "566:           <collectionProp name=\"HeaderManager.headers\">",
      "567:             <elementProp name=\"\" elementType=\"Header\">",
      "568:               <stringProp name=\"Header.name\">Accept</stringProp>",
      "569:               <stringProp name=\"Header.value\">*/*</stringProp>",
      "570:             </elementProp>",
      "571:           </collectionProp>",
      "572:         </HeaderManager>",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "631:           </elementProp>",
      "632:           <stringProp name=\"HTTPSampler.domain\">${AS_HOST}</stringProp>",
      "633:           <stringProp name=\"HTTPSampler.port\">${AS_PORT}</stringProp>",
      "636:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "637:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "638:           <stringProp name=\"HTTPSampler.path\">${AS_PATH_TOKEN}</stringProp>",
      "",
      "[Removed Lines]",
      "634:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "635:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "641:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "642:           <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "643:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "645:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "646:         </HTTPSamplerProxy>",
      "647:         <hashTree>",
      "648:           <RegexExtractor guiclass=\"RegexExtractorGui\" testclass=\"RegexExtractor\" testname=\"Grab AccessToken\" enabled=\"true\">",
      "",
      "[Removed Lines]",
      "644:           <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "",
      "[Added Lines]",
      "634:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "635:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "661:               <stringProp name=\"Header.name\">Authorization</stringProp>",
      "662:               <stringProp name=\"Header.value\">bearer ${AccessToken}</stringProp>",
      "663:             </elementProp>",
      "664:           </collectionProp>",
      "665:         </HeaderManager>",
      "666:         <hashTree/>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "654:             <elementProp name=\"\" elementType=\"Header\">",
      "655:               <stringProp name=\"Header.name\">Accept</stringProp>",
      "656:               <stringProp name=\"Header.value\">application/json</stringProp>",
      "657:             </elementProp>",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "675:             </elementProp>",
      "676:             <stringProp name=\"HTTPSampler.domain\">${APP_SERVER}</stringProp>",
      "677:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
      "680:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
      "681:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
      "682:             <stringProp name=\"HTTPSampler.path\">${APP_PATH_ACCESS}</stringProp>",
      "",
      "[Removed Lines]",
      "678:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "679:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "685:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
      "686:             <boolProp name=\"HTTPSampler.use_keepalive\">false</boolProp>",
      "687:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
      "689:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
      "690:           </HTTPSamplerProxy>",
      "691:           <hashTree>",
      "692:             <ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Assert AS_USERNAME\" enabled=\"true\">",
      "693:               <collectionProp name=\"Asserion.test_strings\">",
      "694:                 <stringProp name=\"240033137\">\\[OIDC_CLAIM_Username\\] =&gt; ${AS_USERNAME}</stringProp>",
      "695:               </collectionProp>",
      "697:               <boolProp name=\"Assertion.assume_success\">false</boolProp>",
      "698:               <intProp name=\"Assertion.test_type\">2</intProp>",
      "699:             </ResponseAssertion>",
      "700:             <hashTree/>",
      "701:           </hashTree>",
      "702:         </hashTree>",
      "714:       </hashTree>",
      "715:       <ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\" testname=\"View Results Tree\" enabled=\"true\">",
      "716:         <boolProp name=\"ResultCollector.error_logging\">true</boolProp>",
      "",
      "[Removed Lines]",
      "688:             <boolProp name=\"HTTPSampler.monitor\">false</boolProp>",
      "696:               <stringProp name=\"Assertion.test_field\">Assertion.response_data_as_document</stringProp>",
      "703:         <CSVDataSet guiclass=\"TestBeanGUI\" testclass=\"CSVDataSet\" testname=\"Hosts Data Set\" enabled=\"true\">",
      "704:           <stringProp name=\"filename\">hosts.txt</stringProp>",
      "705:           <stringProp name=\"fileEncoding\"></stringProp>",
      "706:           <stringProp name=\"variableNames\">APP_SERVER</stringProp>",
      "707:           <stringProp name=\"delimiter\">,</stringProp>",
      "708:           <boolProp name=\"quotedData\">false</boolProp>",
      "709:           <boolProp name=\"recycle\">true</boolProp>",
      "710:           <boolProp name=\"stopThread\">false</boolProp>",
      "711:           <stringProp name=\"shareMode\">shareMode.all</stringProp>",
      "712:         </CSVDataSet>",
      "713:         <hashTree/>",
      "",
      "[Added Lines]",
      "681:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
      "682:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
      "689:               <stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>",
      "692:               <stringProp name=\"Assertion.custom_message\"></stringProp>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "eb00eabec17c263247e397bc4f80eeb7010e166a",
      "candidate_info": {
        "commit_hash": "eb00eabec17c263247e397bc4f80eeb7010e166a",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/eb00eabec17c263247e397bc4f80eeb7010e166a",
        "files": [
          ".dockerignore",
          "docker-compose.yml",
          "test/keycloak.sh",
          "test/mod_auth_openidc.jmx",
          "test/openidc.conf"
        ],
        "message": "docker-compose: add OAuth 2.0 access token validation\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "test/keycloak.sh||test/keycloak.sh",
          "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx",
          "test/openidc.conf||test/openidc.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx"
          ],
          "candidate": [
            "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx"
          ]
        }
      },
      "candidate_diff": {
        "test/keycloak.sh||test/keycloak.sh": [
          "File: test/keycloak.sh -> test/keycloak.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: kcadm.sh config truststore --trustpass password /opt/jboss/keycloak/standalone/configuration/application.keystore",
          "13: kcadm.sh config credentials --server https://localhost:8443/auth --realm master --user \"${KEYCLOAK_USER}\" --password \"${KEYCLOAK_PASSWORD}\"",
          "15: CID=$(kcadm.sh create clients \\",
          "16:  -r master \\",
          "17:  -s 'redirectUris=[\"https://localhost/protected/\", \"https://apache/protected/\"]' \\",
          "18:  -s publicClient=false \\",
          "19:  -s clientAuthenticatorType=client-secret \\",
          "21:  -s secret=mysecret \\",
          "22:  -s enabled=true \\",
          "23:  -i)",
          "",
          "[Removed Lines]",
          "20:  -s clientId=myclient \\",
          "",
          "[Added Lines]",
          "15: # web client",
          "21:  -s clientId=web_client \\",
          "22:  -s secret=mysecret \\",
          "23:  -s enabled=true \\",
          "24:  -i)",
          "25: kcadm.sh get clients/$CID/installation/providers/keycloak-oidc-keycloak-json",
          "27: # client credentials",
          "28: CID=$(kcadm.sh create clients \\",
          "29:  -r master \\",
          "30:  -s serviceAccountsEnabled=true \\",
          "31:  -s publicClient=false \\",
          "32:  -s directAccessGrantsEnabled=true \\",
          "33:  -s clientAuthenticatorType=client-secret \\",
          "34:  -s clientId=cc_client \\",
          "35:  -s secret=mysecret \\",
          "36:  -s enabled=true \\",
          "37:  -i)",
          "38: kcadm.sh get clients/$CID/installation/providers/keycloak-oidc-keycloak-json",
          "40: # introspection",
          "41: CID=$(kcadm.sh create clients \\",
          "42:  -r master \\",
          "43:  -s serviceAccountsEnabled=true \\",
          "44:  -s publicClient=false \\",
          "45:  -s clientAuthenticatorType=client-secret \\",
          "46:  -s clientId=introspect_client \\",
          "",
          "---------------"
        ],
        "test/mod_auth_openidc.jmx||test/mod_auth_openidc.jmx": [
          "File: test/mod_auth_openidc.jmx -> test/mod_auth_openidc.jmx",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:           </elementProp>",
          "31:           <elementProp name=\"THREADS\" elementType=\"Argument\">",
          "32:             <stringProp name=\"Argument.name\">THREADS</stringProp>",
          "34:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "35:           </elementProp>",
          "36:           <elementProp name=\"LOOP\" elementType=\"Argument\">",
          "37:             <stringProp name=\"Argument.name\">LOOP</stringProp>",
          "39:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "40:           </elementProp>",
          "41:         </collectionProp>",
          "",
          "[Removed Lines]",
          "33:             <stringProp name=\"Argument.value\">${__P(THREADS,1)}</stringProp>",
          "38:             <stringProp name=\"Argument.value\">${__P(LOOP,1)}</stringProp>",
          "",
          "[Added Lines]",
          "33:             <stringProp name=\"Argument.value\">${__P(THREADS,2)}</stringProp>",
          "38:             <stringProp name=\"Argument.value\">${__P(LOOP,2)}</stringProp>",
          "39:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "40:           </elementProp>",
          "41:           <elementProp name=\"PROVIDER_HOST\" elementType=\"Argument\">",
          "42:             <stringProp name=\"Argument.name\">PROVIDER_HOST</stringProp>",
          "43:             <stringProp name=\"Argument.value\">keycloak</stringProp>",
          "44:             <stringProp name=\"Argument.metadata\">=</stringProp>",
          "45:           </elementProp>",
          "46:           <elementProp name=\"PROVIDER_PORT\" elementType=\"Argument\">",
          "47:             <stringProp name=\"Argument.name\">PROVIDER_PORT</stringProp>",
          "48:             <stringProp name=\"Argument.value\">8443</stringProp>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:           <boolProp name=\"CookieManager.clearEachIteration\">true</boolProp>",
          "76:         </CookieManager>",
          "77:         <hashTree/>",
          "79:           <collectionProp name=\"HeaderManager.headers\">",
          "80:             <elementProp name=\"\" elementType=\"Header\">",
          "81:               <stringProp name=\"Header.name\">Accept</stringProp>",
          "",
          "[Removed Lines]",
          "78:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">",
          "",
          "[Added Lines]",
          "88:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"Set Accept Header\" enabled=\"true\">",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "84:           </collectionProp>",
          "85:         </HeaderManager>",
          "86:         <hashTree/>",
          "88:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "89:             <collectionProp name=\"Arguments.arguments\"/>",
          "90:           </elementProp>",
          "",
          "[Removed Lines]",
          "87:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Unauthenticated Request\" enabled=\"true\">",
          "",
          "[Added Lines]",
          "97:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Send Unauthenticated Request\" enabled=\"true\">",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "131:           <boolProp name=\"displaySystemProperties\">false</boolProp>",
          "132:         </DebugSampler>",
          "133:         <hashTree/>",
          "135:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "136:             <collectionProp name=\"Arguments.arguments\">",
          "137:               <elementProp name=\"username\" elementType=\"HTTPArgument\">",
          "",
          "[Removed Lines]",
          "134:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Login Request\" enabled=\"true\">",
          "",
          "[Added Lines]",
          "144:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Provider Login\" enabled=\"true\">",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "165:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "166:         </HTTPSamplerProxy>",
          "167:         <hashTree>",
          "169:             <stringProp name=\"JSON_PATH\">$.headers.oidc_claim_preferred_username</stringProp>",
          "170:             <stringProp name=\"EXPECTED_VALUE\">admin</stringProp>",
          "171:             <boolProp name=\"JSONVALIDATION\">true</boolProp>",
          "",
          "[Removed Lines]",
          "168:           <JSONPathAssertion guiclass=\"JSONPathAssertionGui\" testclass=\"JSONPathAssertion\" testname=\"JSON Assertion\" enabled=\"true\">",
          "",
          "[Added Lines]",
          "178:           <JSONPathAssertion guiclass=\"JSONPathAssertionGui\" testclass=\"JSONPathAssertion\" testname=\"Assert Preferred Username Header\" enabled=\"true\">",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "175:           </JSONPathAssertion>",
          "176:           <hashTree/>",
          "177:         </hashTree>",
          "178:       </hashTree>",
          "180:         <stringProp name=\"ThreadGroup.on_sample_error\">stopthread</stringProp>",
          "181:         <elementProp name=\"ThreadGroup.main_controller\" elementType=\"LoopController\" guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Controller\" enabled=\"true\">",
          "182:           <boolProp name=\"LoopController.continue_forever\">false</boolProp>",
          "184:         </elementProp>",
          "186:         <stringProp name=\"ThreadGroup.ramp_time\">1</stringProp>",
          "187:         <boolProp name=\"ThreadGroup.scheduler\">false</boolProp>",
          "188:         <stringProp name=\"ThreadGroup.duration\"></stringProp>",
          "189:         <stringProp name=\"ThreadGroup.delay\"></stringProp>",
          "190:       </ThreadGroup>",
          "192:       <ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\" testname=\"View Results Tree\" enabled=\"true\">",
          "193:         <boolProp name=\"ResultCollector.error_logging\">true</boolProp>",
          "194:         <objProp>",
          "",
          "[Removed Lines]",
          "179:       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OAuth 2.0\" enabled=\"false\">",
          "183:           <stringProp name=\"LoopController.loops\">1</stringProp>",
          "185:         <stringProp name=\"ThreadGroup.num_threads\">1</stringProp>",
          "191:       <hashTree/>",
          "",
          "[Added Lines]",
          "188:         <LoopController guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Authenticated Requests\" enabled=\"true\">",
          "189:           <boolProp name=\"LoopController.continue_forever\">true</boolProp>",
          "190:           <stringProp name=\"LoopController.loops\">${LOOP}</stringProp>",
          "191:         </LoopController>",
          "192:         <hashTree>",
          "193:           <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Send Authenticated Request\" enabled=\"true\">",
          "194:             <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "195:               <collectionProp name=\"Arguments.arguments\"/>",
          "196:             </elementProp>",
          "197:             <stringProp name=\"HTTPSampler.domain\">${APP_HOST}</stringProp>",
          "198:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
          "199:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "200:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "201:             <stringProp name=\"HTTPSampler.path\">/</stringProp>",
          "202:             <stringProp name=\"HTTPSampler.method\">GET</stringProp>",
          "203:             <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>",
          "204:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "205:             <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>",
          "206:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "207:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "208:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "209:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "210:           </HTTPSamplerProxy>",
          "211:           <hashTree>",
          "212:             <XPathExtractor guiclass=\"XPathExtractorGui\" testclass=\"XPathExtractor\" testname=\"Extract Login URL\" enabled=\"true\">",
          "213:               <stringProp name=\"XPathExtractor.default\"></stringProp>",
          "214:               <stringProp name=\"XPathExtractor.refname\">LOGIN_URL</stringProp>",
          "215:               <stringProp name=\"XPathExtractor.matchNumber\">-1</stringProp>",
          "216:               <stringProp name=\"XPathExtractor.xpathQuery\">//form[@id=&quot;kc-form-login&quot;]/@action </stringProp>",
          "217:               <boolProp name=\"XPathExtractor.validate\">false</boolProp>",
          "218:               <boolProp name=\"XPathExtractor.tolerant\">true</boolProp>",
          "219:               <boolProp name=\"XPathExtractor.namespace\">false</boolProp>",
          "220:             </XPathExtractor>",
          "221:             <hashTree/>",
          "222:             <BeanShellPostProcessor guiclass=\"TestBeanGUI\" testclass=\"BeanShellPostProcessor\" testname=\"Extract Login Components\" enabled=\"true\">",
          "223:               <stringProp name=\"filename\"></stringProp>",
          "224:               <stringProp name=\"parameters\"></stringProp>",
          "225:               <boolProp name=\"resetInterpreter\">false</boolProp>",
          "226:               <stringProp name=\"script\">URL url = new URL(vars.get(&quot;LOGIN_URL&quot;));",
          "227: vars.put(&quot;LOGIN_PROTO&quot;, url.getProtocol());",
          "228: vars.put(&quot;LOGIN_HOST&quot;, url.getHost());",
          "229: vars.put(&quot;LOGIN_PORT&quot;, Integer.toString(url.getPort()));",
          "230: vars.put(&quot;LOGIN_PATH&quot;, url.getPath() + &quot;?&quot; + url.getQuery());</stringProp>",
          "231:             </BeanShellPostProcessor>",
          "232:             <hashTree/>",
          "233:           </hashTree>",
          "234:         </hashTree>",
          "236:       <ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"OAuth 2.0\" enabled=\"true\">",
          "240:           <stringProp name=\"LoopController.loops\">${LOOP}</stringProp>",
          "242:         <stringProp name=\"ThreadGroup.num_threads\">${THREADS}</stringProp>",
          "248:       <hashTree>",
          "249:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"Set Accept Header\" enabled=\"true\">",
          "250:           <collectionProp name=\"HeaderManager.headers\">",
          "251:             <elementProp name=\"\" elementType=\"Header\">",
          "252:               <stringProp name=\"Header.name\">Accept</stringProp>",
          "253:               <stringProp name=\"Header.value\">application/json</stringProp>",
          "254:             </elementProp>",
          "255:           </collectionProp>",
          "256:         </HeaderManager>",
          "257:         <hashTree/>",
          "258:         <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Execute Client Credentials\" enabled=\"true\">",
          "259:           <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "260:             <collectionProp name=\"Arguments.arguments\">",
          "261:               <elementProp name=\"grant_type\" elementType=\"HTTPArgument\">",
          "262:                 <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>",
          "263:                 <stringProp name=\"Argument.value\">client_credentials</stringProp>",
          "264:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "265:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "266:                 <stringProp name=\"Argument.name\">grant_type</stringProp>",
          "267:               </elementProp>",
          "268:               <elementProp name=\"client_id\" elementType=\"HTTPArgument\">",
          "269:                 <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>",
          "270:                 <stringProp name=\"Argument.value\">cc_client</stringProp>",
          "271:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "272:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "273:                 <stringProp name=\"Argument.name\">client_id</stringProp>",
          "274:               </elementProp>",
          "275:               <elementProp name=\"client_secret\" elementType=\"HTTPArgument\">",
          "276:                 <boolProp name=\"HTTPArgument.always_encode\">false</boolProp>",
          "277:                 <stringProp name=\"Argument.value\">mysecret</stringProp>",
          "278:                 <stringProp name=\"Argument.metadata\">=</stringProp>",
          "279:                 <boolProp name=\"HTTPArgument.use_equals\">true</boolProp>",
          "280:                 <stringProp name=\"Argument.name\">client_secret</stringProp>",
          "281:               </elementProp>",
          "282:             </collectionProp>",
          "283:           </elementProp>",
          "284:           <stringProp name=\"HTTPSampler.domain\">${PROVIDER_HOST}</stringProp>",
          "285:           <stringProp name=\"HTTPSampler.port\">${PROVIDER_PORT}</stringProp>",
          "286:           <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "287:           <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "288:           <stringProp name=\"HTTPSampler.path\">/auth/realms/master/protocol/openid-connect/token</stringProp>",
          "289:           <stringProp name=\"HTTPSampler.method\">POST</stringProp>",
          "290:           <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>",
          "291:           <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "292:           <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>",
          "293:           <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "294:           <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "295:           <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "296:           <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "297:         </HTTPSamplerProxy>",
          "298:         <hashTree>",
          "299:           <JSONPostProcessor guiclass=\"JSONPostProcessorGui\" testclass=\"JSONPostProcessor\" testname=\"Extract Access Token\" enabled=\"true\">",
          "300:             <stringProp name=\"JSONPostProcessor.referenceNames\">ACCESS_TOKEN</stringProp>",
          "301:             <stringProp name=\"JSONPostProcessor.jsonPathExprs\">$.access_token</stringProp>",
          "302:             <stringProp name=\"JSONPostProcessor.match_numbers\"></stringProp>",
          "303:           </JSONPostProcessor>",
          "304:           <hashTree/>",
          "305:         </hashTree>",
          "306:         <DebugSampler guiclass=\"TestBeanGUI\" testclass=\"DebugSampler\" testname=\"Debug Sampler\" enabled=\"false\">",
          "307:           <boolProp name=\"displayJMeterProperties\">false</boolProp>",
          "308:           <boolProp name=\"displayJMeterVariables\">true</boolProp>",
          "309:           <boolProp name=\"displaySystemProperties\">false</boolProp>",
          "310:         </DebugSampler>",
          "311:         <hashTree/>",
          "312:         <HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"Set Authorization Header\" enabled=\"true\">",
          "313:           <collectionProp name=\"HeaderManager.headers\">",
          "314:             <elementProp name=\"\" elementType=\"Header\">",
          "315:               <stringProp name=\"Header.name\">Accept</stringProp>",
          "316:               <stringProp name=\"Header.value\">application/json</stringProp>",
          "317:             </elementProp>",
          "318:             <elementProp name=\"\" elementType=\"Header\">",
          "319:               <stringProp name=\"Header.name\">Authorization</stringProp>",
          "320:               <stringProp name=\"Header.value\">bearer ${ACCESS_TOKEN}</stringProp>",
          "321:             </elementProp>",
          "322:           </collectionProp>",
          "323:         </HeaderManager>",
          "324:         <hashTree/>",
          "325:         <LoopController guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Authenticated Requests\" enabled=\"true\">",
          "326:           <boolProp name=\"LoopController.continue_forever\">true</boolProp>",
          "327:           <stringProp name=\"LoopController.loops\">${LOOP}</stringProp>",
          "328:         </LoopController>",
          "329:         <hashTree>",
          "330:           <HTTPSamplerProxy guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSamplerProxy\" testname=\"Send Authenticated Request\" enabled=\"true\">",
          "331:             <elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">",
          "332:               <collectionProp name=\"Arguments.arguments\"/>",
          "333:             </elementProp>",
          "334:             <stringProp name=\"HTTPSampler.domain\">${APP_HOST}</stringProp>",
          "335:             <stringProp name=\"HTTPSampler.port\">${APP_PORT}</stringProp>",
          "336:             <stringProp name=\"HTTPSampler.protocol\">https</stringProp>",
          "337:             <stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>",
          "338:             <stringProp name=\"HTTPSampler.path\">/api</stringProp>",
          "339:             <stringProp name=\"HTTPSampler.method\">GET</stringProp>",
          "340:             <boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>",
          "341:             <boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>",
          "342:             <boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>",
          "343:             <boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>",
          "344:             <stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>",
          "345:             <stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>",
          "346:             <stringProp name=\"HTTPSampler.response_timeout\"></stringProp>",
          "347:           </HTTPSamplerProxy>",
          "348:           <hashTree>",
          "349:             <JSONPathAssertion guiclass=\"JSONPathAssertionGui\" testclass=\"JSONPathAssertion\" testname=\"Assert Client ID Header\" enabled=\"true\">",
          "350:               <stringProp name=\"JSON_PATH\">$.headers.oidc_claim_clientid</stringProp>",
          "351:               <stringProp name=\"EXPECTED_VALUE\">cc_client</stringProp>",
          "352:               <boolProp name=\"JSONVALIDATION\">true</boolProp>",
          "353:               <boolProp name=\"EXPECT_NULL\">false</boolProp>",
          "354:               <boolProp name=\"INVERT\">false</boolProp>",
          "355:               <boolProp name=\"ISREGEX\">false</boolProp>",
          "356:             </JSONPathAssertion>",
          "357:             <hashTree/>",
          "358:           </hashTree>",
          "359:         </hashTree>",
          "360:       </hashTree>",
          "",
          "---------------"
        ],
        "test/openidc.conf||test/openidc.conf": [
          "File: test/openidc.conf -> test/openidc.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: OIDCRedirectURI /protected/",
          "8: OIDCSSLValidateServer Off",
          "10: OIDCClientSecret mysecret",
          "11: OIDCCryptoPassphrase 91827364",
          "",
          "[Removed Lines]",
          "9: OIDCClientID myclient",
          "",
          "[Added Lines]",
          "9: OIDCClientID web_client",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: </Location>",
          "24: OIDCOAuthSSLValidateServer Off",
          "28: <Location /api>",
          "29:   AuthType oauth20",
          "",
          "[Removed Lines]",
          "25: #OIDCOAuthIntrospectionEndpoint https://keycloak:8443/auth/realms/master/protocol/openid-connect/token/introspect",
          "26: OIDCOAuthVerifyJwksUri https://keycloak:8443/auth/realms/master/protocol/openid-connect/certs",
          "",
          "[Added Lines]",
          "25: OIDCOAuthIntrospectionEndpoint https://keycloak:8443/auth/realms/master/protocol/openid-connect/token/introspect",
          "26: OIDCOAuthClientID introspect_client",
          "27: OIDCOAuthClientSecret mysecret",
          "28: #OIDCOAuthVerifyJwksUri https://keycloak:8443/auth/realms/master/protocol/openid-connect/certs",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f0d4c9ac1bae622bd4c1db486ca9a8fb692524d",
      "candidate_info": {
        "commit_hash": "3f0d4c9ac1bae622bd4c1db486ca9a8fb692524d",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/3f0d4c9ac1bae622bd4c1db486ca9a8fb692524d",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/util.c"
        ],
        "message": "allow Content-Type check on backchannel logout to have postfixes\n\nutf-8 etc. ; bump to 2.4.4rc8\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/util.c||src/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.4rc7],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.4rc8],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1562:  const char *content_type = NULL;",
          "1564:  content_type = oidc_util_hdr_in_content_type_get(r);",
          "1567:   goto end;",
          "1569:  if (oidc_util_read(r, &data) != TRUE)",
          "1570:   goto end;",
          "",
          "[Removed Lines]",
          "1565:  if ((r->method_number != M_POST) || (apr_strnatcmp(content_type,",
          "1566:    OIDC_CONTENT_TYPE_FORM_ENCODED) != 0))",
          "",
          "[Added Lines]",
          "1565:  if ((r->method_number != M_POST) || (strstr(content_type,",
          "1566:    OIDC_CONTENT_TYPE_FORM_ENCODED) != content_type)) {",
          "1567:   oidc_debug(r, \"required content-type %s not found\",",
          "1568:     OIDC_CONTENT_TYPE_FORM_ENCODED);",
          "1570:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae44c41497458b3044325307edf29d29db075963",
      "candidate_info": {
        "commit_hash": "ae44c41497458b3044325307edf29d29db075963",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/ae44c41497458b3044325307edf29d29db075963",
        "files": [
          "ChangeLog",
          "configure.ac",
          "src/cache/common.c"
        ],
        "message": "fix graceful restart (regression); see #458; thanks @Foxite\n\nsee https://github.com/zmartzone/mod_auth_openidc/issues/458#issuecomment-902819263\nbump to 2.4.9.2\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/cache/common.c||src/cache/common.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "src/cache/common.c||src/cache/common.c"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "src/cache/common.c||src/cache/common.c"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.1],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.2],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/cache/common.c||src/cache/common.c": [
          "File: src/cache/common.c -> src/cache/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "225:    rv = apr_shm_destroy(m->shm);",
          "226:    oidc_sdebug(s, \"apr_shm_destroy for semaphore returned: %d\", rv);",
          "",
          "[Removed Lines]",
          "223:   if ((m->shm != NULL) && (*m->sema == 0)) {",
          "",
          "[Added Lines]",
          "223:   if ((m->shm != NULL) && (*m->sema == 0) && (m->is_parent == TRUE)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03e6bfb446f4e3f27c003d30d6a433e5dd8e2b3d",
      "candidate_info": {
        "commit_hash": "03e6bfb446f4e3f27c003d30d6a433e5dd8e2b3d",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/03e6bfb446f4e3f27c003d30d6a433e5dd8e2b3d",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "auth_openidc.conf",
          "configure.ac",
          "src/mod_auth_openidc.c"
        ],
        "message": "apply OIDCRedirectURLsAllowed setting to target_link_uri\n\ncloses #672; thanks @Meheni\nrelease 2.4.9.4\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "auth_openidc.conf||auth_openidc.conf",
          "configure.ac||configure.ac",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "auth_openidc.conf||auth_openidc.conf": [
          "File: auth_openidc.conf -> auth_openidc.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "918: #OIDCStateInputHeaders [none|user-agent|x-forwarded-for|both]",
          "920: # Define one or more regular expressions that specify URLs (or domains) allowed for post logout and",
          "923: #   OIDCRedirectURLsAllowed ^https://www.example.com ^https://(\\w+).example.org ^https://example.net/app",
          "924: # or:",
          "925: #   OIDCRedirectURLsAllowed ^https://www.example.com/logout$ ^https://www.example.com/app/return_to$",
          "",
          "[Removed Lines]",
          "921: # other redirects such as the \"return_to\" value on refresh token requests, and the \"login_uri\" value",
          "922: # on session management based logins through the OP iframe, e.g.:",
          "",
          "[Added Lines]",
          "921: # other redirects such as the \"return_to\" value on refresh token requests, the \"login_uri\" value",
          "922: # on session management based logins through the OP iframe, and the \"target_link_uri\" parameter in",
          "923: # 3rd-party initiated logins, e.g.:",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.3],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.9.4],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2457:  return TRUE;",
          "2458: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2460: #define OIDC_MAX_URL_LENGTH 8192 * 2",
          "2462: static apr_byte_t oidc_validate_redirect_url(request_rec *r, oidc_cfg *c,",
          "2463:   const char *redirect_to_url, apr_byte_t restrict_to_host, char **err_str,",
          "2464:   char **err_desc) {",
          "2465:  apr_uri_t uri;",
          "2466:  const char *c_host = NULL;",
          "2467:  apr_hash_index_t *hi = NULL;",
          "2468:  size_t i = 0;",
          "2469:  char *url = apr_pstrndup(r->pool, redirect_to_url, OIDC_MAX_URL_LENGTH);",
          "2472:  for (i = 0; i < strlen(url); i++)",
          "2473:   if (url[i] == '\\\\')",
          "2474:    url[i] = '/';",
          "2476:  if (apr_uri_parse(r->pool, url, &uri) != APR_SUCCESS) {",
          "2479:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "2480:   return FALSE;",
          "2481:  }",
          "2483:  if (c->redirect_urls_allowed != NULL) {",
          "2484:   for (hi = apr_hash_first(NULL, c->redirect_urls_allowed); hi; hi =",
          "2485:     apr_hash_next(hi)) {",
          "2486:    apr_hash_this(hi, (const void**) &c_host, NULL, NULL);",
          "2487:    if (oidc_util_regexp_first_match(r->pool, url, c_host,",
          "2488:      NULL, err_str) == TRUE)",
          "2489:     break;",
          "2490:   }",
          "2491:   if (hi == NULL) {",
          "2494:      apr_psprintf(r->pool,",
          "2495:        \"value does not match the list of allowed redirect URLs: %s\",",
          "2496:        url);",
          "2497:    oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "2498:    return FALSE;",
          "2499:   }",
          "2500:  } else if ((uri.hostname != NULL) && (restrict_to_host == TRUE)) {",
          "2501:   c_host = oidc_get_current_url_host(r);",
          "2502:   if ((strstr(c_host, uri.hostname) == NULL)",
          "2503:     || (strstr(uri.hostname, c_host) == NULL)) {",
          "2506:      apr_psprintf(r->pool,",
          "2507:        \"URL value \\\"%s\\\" does not match the hostname of the current request \\\"%s\\\"\",",
          "2508:        apr_uri_unparse(r->pool, &uri, 0), c_host);",
          "2509:    oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "2510:    return FALSE;",
          "2511:   }",
          "2512:  }",
          "2514:  if ((uri.hostname == NULL) && (strstr(url, \"/\") != url)) {",
          "2517:     apr_psprintf(r->pool,",
          "2518:       \"No hostname was parsed and it does not seem to be relative, i.e starting with '/': %s\",",
          "2519:       url);",
          "2520:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "2521:   return FALSE;",
          "2522:  } else if ((uri.hostname == NULL) && (strstr(url, \"//\") == url)) {",
          "2525:     \"No hostname was parsed and starting with '//': %s\", url);",
          "2526:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "2527:   return FALSE;",
          "2528:  } else if ((uri.hostname == NULL) && (strstr(url, \"/\\\\\") == url)) {",
          "2531:     \"No hostname was parsed and starting with '/\\\\': %s\", url);",
          "2532:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "2533:   return FALSE;",
          "2534:  }",
          "2537:  if (((strstr(url, \"\\n\") != NULL) || strstr(url, \"\\r\") != NULL)) {",
          "2540:     apr_psprintf(r->pool,",
          "2541:       \"URL value \\\"%s\\\" contains illegal \\\"\\n\\\" or \\\"\\r\\\" character(s)\",",
          "2542:       url);",
          "2543:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "2544:   return FALSE;",
          "2545:  }",
          "2547:  return TRUE;",
          "2548: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2469:  oidc_provider_t *provider = NULL;",
          "2471:  oidc_util_get_request_parameter(r, OIDC_DISC_OP_PARAM, &issuer);",
          "2472:  oidc_util_get_request_parameter(r, OIDC_DISC_USER_PARAM, &user);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2560:  char *error_str = NULL;",
          "2561:  char *error_description = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2519:     HTTP_UNAUTHORIZED);",
          "2520:  }",
          "2523:  if (c->metadata_dir == NULL) {",
          "2524:   if ((oidc_provider_static_config(r, c, &provider) == TRUE)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2615:  if (oidc_validate_redirect_url(r, c, target_link_uri, TRUE, &error_str,",
          "2616:    &error_description) == FALSE) {",
          "2617:   return oidc_util_html_send_error(r, c->error_template, error_str,",
          "2618:     error_description,",
          "2619:     HTTP_UNAUTHORIZED);",
          "2620:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2947:  return rc;",
          "2948: }",
          "",
          "[Removed Lines]",
          "2950: #define OIDC_MAX_URL_LENGTH 8192 * 2",
          "2952: static apr_byte_t oidc_validate_redirect_url(request_rec *r, oidc_cfg *c,",
          "2953:   const char *redirect_to_url, apr_byte_t restrict_to_host, char **err_str,",
          "2954:   char **err_desc) {",
          "2955:  apr_uri_t uri;",
          "2956:  const char *c_host = NULL;",
          "2957:  apr_hash_index_t *hi = NULL;",
          "2958:  size_t i = 0;",
          "2959:  char *url = apr_pstrndup(r->pool, redirect_to_url, OIDC_MAX_URL_LENGTH);",
          "2962:  for (i = 0; i < strlen(url); i++)",
          "2963:   if (url[i] == '\\\\')",
          "2964:    url[i] = '/';",
          "2966:  if (apr_uri_parse(r->pool, url, &uri) != APR_SUCCESS) {",
          "2969:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "2970:   return FALSE;",
          "2971:  }",
          "2973:  if (c->redirect_urls_allowed != NULL) {",
          "2974:   for (hi = apr_hash_first(NULL, c->redirect_urls_allowed); hi; hi =",
          "2975:     apr_hash_next(hi)) {",
          "2976:    apr_hash_this(hi, (const void**) &c_host, NULL, NULL);",
          "2977:    if (oidc_util_regexp_first_match(r->pool, url, c_host,",
          "2978:      NULL, err_str) == TRUE)",
          "2979:     break;",
          "2980:   }",
          "2981:   if (hi == NULL) {",
          "2984:      apr_psprintf(r->pool,",
          "2985:        \"value does not match the list of allowed redirect URLs: %s\",",
          "2986:        url);",
          "2987:    oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "2988:    return FALSE;",
          "2989:   }",
          "2990:  } else if ((uri.hostname != NULL) && (restrict_to_host == TRUE)) {",
          "2991:   c_host = oidc_get_current_url_host(r);",
          "2992:   if ((strstr(c_host, uri.hostname) == NULL)",
          "2993:     || (strstr(uri.hostname, c_host) == NULL)) {",
          "2996:      apr_psprintf(r->pool,",
          "2997:        \"URL value \\\"%s\\\" does not match the hostname of the current request \\\"%s\\\"\",",
          "2998:        apr_uri_unparse(r->pool, &uri, 0), c_host);",
          "2999:    oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "3000:    return FALSE;",
          "3001:   }",
          "3002:  }",
          "3004:  if ((uri.hostname == NULL) && (strstr(url, \"/\") != url)) {",
          "3007:     apr_psprintf(r->pool,",
          "3008:       \"No hostname was parsed and it does not seem to be relative, i.e starting with '/': %s\",",
          "3009:       url);",
          "3010:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "3011:   return FALSE;",
          "3012:  } else if ((uri.hostname == NULL) && (strstr(url, \"//\") == url)) {",
          "3015:     \"No hostname was parsed and starting with '//': %s\", url);",
          "3016:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "3017:   return FALSE;",
          "3018:  } else if ((uri.hostname == NULL) && (strstr(url, \"/\\\\\") == url)) {",
          "3021:     \"No hostname was parsed and starting with '/\\\\': %s\", url);",
          "3022:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "3023:   return FALSE;",
          "3024:  }",
          "3027:  if (((strstr(url, \"\\n\") != NULL) || strstr(url, \"\\r\") != NULL)) {",
          "3030:     apr_psprintf(r->pool,",
          "3031:       \"URL value \\\"%s\\\" contains illegal \\\"\\n\\\" or \\\"\\r\\\" character(s)\",",
          "3032:       url);",
          "3033:   oidc_error(r, \"%s: %s\", *err_str, *err_desc);",
          "3034:   return FALSE;",
          "3035:  }",
          "3037:  return TRUE;",
          "3038: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9d30ff7996b2042d70827fbf5b3f46f60149a7a0",
      "candidate_info": {
        "commit_hash": "9d30ff7996b2042d70827fbf5b3f46f60149a7a0",
        "repo": "zmartzone/mod_auth_openidc",
        "commit_url": "https://github.com/zmartzone/mod_auth_openidc/commit/9d30ff7996b2042d70827fbf5b3f46f60149a7a0",
        "files": [
          "ChangeLog",
          "auth_openidc.conf",
          "configure.ac",
          "src/mod_auth_openidc.c",
          "src/parse.c"
        ],
        "message": "add expiry timestamps to OIDCInfoHook; bump to 2.4.7-dev; closes #541\n\nmaximum session lifetime (exp), inactivity timeout (timeout) and\nremote_user\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>",
        "before_after_code_files": [
          "auth_openidc.conf||auth_openidc.conf",
          "configure.ac||configure.ac",
          "src/mod_auth_openidc.c||src/mod_auth_openidc.c",
          "src/parse.c||src/parse.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "auth_openidc.conf||auth_openidc.conf": [
          "File: auth_openidc.conf -> auth_openidc.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "859: #   id_token (object)          : the claims presented in the ID token",
          "860: #   userinfo (object)          : the claims resolved from the UserInfo endpoint",
          "861: #   refresh_token (string)     : the refresh token (if returned by the OP)",
          "862: #   session (object)           : (for debugging) mod_auth_openidc specific session data such as \"remote user\", \"session expiry\", \"session id\" and a \"state\" object",
          "863: # When not defined the session hook will not return any data but a HTTP 404",
          "864: #OIDCInfoHook [iat|access_token|access_token_expires|id_token|userinfo|refresh_token|session]+",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "862: #   exp (int)                  : the maximum session lifetime (Unix timestamp in seconds)",
          "863: #   timeout (int)              : the session inactivity timeout (Unix timestamp in seconds)",
          "864: #   remote_user (string)       : the remote user name",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_SUBST(NAMEVER, AC_PACKAGE_TARNAME()-AC_PACKAGE_VERSION())",
          "",
          "[Removed Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.6],[hans.zandbelt@zmartzone.eu])",
          "",
          "[Added Lines]",
          "1: AC_INIT([mod_auth_openidc],[2.4.7-dev],[hans.zandbelt@zmartzone.eu])",
          "",
          "---------------"
        ],
        "src/mod_auth_openidc.c||src/mod_auth_openidc.c": [
          "File: src/mod_auth_openidc.c -> src/mod_auth_openidc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3524:    json_object_set_new(json, OIDC_HOOK_INFO_USER_INFO, claims);",
          "3525:  }",
          "3527:  if (apr_hash_get(c->info_hook_data, OIDC_HOOK_INFO_SESSION,",
          "3528:    APR_HASH_KEY_STRING)) {",
          "3529:   json_t *j_session = json_object();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3528:  if (apr_hash_get(c->info_hook_data, OIDC_HOOK_INFO_SESSION_EXP,",
          "3529:    APR_HASH_KEY_STRING)) {",
          "3530:   apr_time_t session_expires = oidc_session_get_session_expires(r,",
          "3531:     session);",
          "3532:   json_object_set_new(json, OIDC_HOOK_INFO_SESSION_EXP,",
          "3533:     json_integer(apr_time_sec(session_expires)));",
          "3534:  }",
          "3537:  if (apr_hash_get(c->info_hook_data, OIDC_HOOK_INFO_SESSION_TIMEOUT,",
          "3538:    APR_HASH_KEY_STRING)) {",
          "3539:   json_object_set_new(json, OIDC_HOOK_INFO_SESSION_TIMEOUT,",
          "3540:     json_integer(apr_time_sec(session->expiry)));",
          "3541:  }",
          "3544:  if (apr_hash_get(c->info_hook_data, OIDC_HOOK_INFO_SESSION_REMOTE_USER,",
          "3545:    APR_HASH_KEY_STRING)) {",
          "3546:   json_object_set_new(json, OIDC_HOOK_INFO_SESSION_REMOTE_USER,",
          "3547:     json_string(session->remote_user));",
          "3548:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3531:     session->state);",
          "3532:   json_object_set_new(j_session, OIDC_HOOK_INFO_SESSION_UUID,",
          "3533:     json_string(session->uuid));",
          "3542:   json_object_set_new(json, OIDC_HOOK_INFO_SESSION, j_session);",
          "3544:  }",
          "",
          "[Removed Lines]",
          "3534:   json_object_set_new(j_session, OIDC_HOOK_INFO_SESSION_TIMEOUT,",
          "3535:     json_integer(apr_time_sec(session->expiry)));",
          "3536:   apr_time_t session_expires = oidc_session_get_session_expires(r,",
          "3537:     session);",
          "3538:   json_object_set_new(j_session, OIDC_HOOK_INFO_SESSION_EXP,",
          "3539:     json_integer(apr_time_sec(session_expires)));",
          "3540:   json_object_set_new(j_session, OIDC_HOOK_INFO_SESSION_REMOTE_USER,",
          "3541:     json_string(session->remote_user));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.c||src/parse.c": [
          "File: src/parse.c -> src/parse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1187:    OIDC_HOOK_INFO_ID_TOKEN,",
          "1188:    OIDC_HOOK_INFO_USER_INFO,",
          "1189:    OIDC_HOOK_INFO_REFRESH_TOKEN,",
          "1190:    OIDC_HOOK_INFO_SESSION,",
          "1191:    NULL };",
          "1192:  const char *rv = oidc_valid_string_option(pool, arg, options);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1190:    OIDC_HOOK_INFO_SESSION_EXP,",
          "1191:    OIDC_HOOK_INFO_SESSION_TIMEOUT,",
          "1192:    OIDC_HOOK_INFO_SESSION_REMOTE_USER,",
          "",
          "---------------"
        ]
      }
    }
  ]
}