{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "676fa25a0f7737d7e233a840a5c2d7dffdccb75a",
      "candidate_info": {
        "commit_hash": "676fa25a0f7737d7e233a840a5c2d7dffdccb75a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/676fa25a0f7737d7e233a840a5c2d7dffdccb75a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c",
          "src/pragma.c"
        ],
        "message": "Bug fixes so that \"make test\" once against runs with no errors.\n\nFossilOrigin-Name: 7bfe0f679d8951b3e925bdf549efa0f8d6b514eddeaca69cbfddbd9476cfff5f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c",
          "src/pragma.c||src/pragma.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 069351b85f9a706f60d3e98fbc8aaf40c374356b967c0464aede30ead3d9d18b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1009:     iRegStore = regRowid+1;",
          "1010:     for(i=0; i<pTab->nCol; i++, iRegStore++){",
          "1011:       int k;",
          "1012:       assert( i>=nHidden );",
          "1013:       assert( iRegStore==sqlite3ColumnOfTable(pTab,i)+regRowid+1 );",
          "1014:       if( i==pTab->iPKey ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1012:       u32 colFlags;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1020:         sqlite3VdbeAddOp1(v, OP_SoftNull, iRegStore);",
          "1021:         continue;",
          "1022:       }",
          "1024:         nHidden++;",
          "1027:           iRegStore--;",
          "1030:           sqlite3ExprCodeFactorable(pParse, pTab->aCol[i].pDflt, iRegStore);",
          "1031:         }",
          "1033:       }",
          "1034:       if( pColumn ){",
          "1035:         for(j=0; j<pColumn->nId && pColumn->a[j].idx!=i; j++){}",
          "",
          "[Removed Lines]",
          "1023:       if( pTab->aCol[i].colFlags & COLFLAG_NOINSERT ){",
          "1025:         if( pTab->aCol[i].colFlags & COLFLAG_VIRTUAL ){",
          "1028:         }else{",
          "1032:         continue;",
          "",
          "[Added Lines]",
          "1024:       if( ((colFlags = pTab->aCol[i].colFlags) & COLFLAG_NOINSERT)!=0 ){",
          "1026:         if( (colFlags & COLFLAG_VIRTUAL)!=0 ){",
          "1029:           continue;",
          "1030:         }else if( (colFlags & COLFLAG_STORED)!=0 || pColumn==0 ){",
          "1034:           continue;",
          "",
          "---------------"
        ],
        "src/pragma.c||src/pragma.c": [
          "File: src/pragma.c -> src/pragma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1102:       for(i=0, pCol=pTab->aCol; i<pTab->nCol; i++, pCol++){",
          "1103:         int isHidden = 0;",
          "1104:         if( pCol->colFlags & COLFLAG_NOINSERT ){",
          "1107:           if( pCol->colFlags & COLFLAG_VIRTUAL ){",
          "1109:           }else if( pCol->colFlags & COLFLAG_VIRTUAL ){",
          "",
          "[Removed Lines]",
          "1105:           nHidden++;",
          "1106:           if( pPragma->iArg==0 ) continue;",
          "",
          "[Added Lines]",
          "1105:           if( pPragma->iArg==0 ){",
          "1106:             nHidden++;",
          "1107:             continue;",
          "1108:           }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "86223e8d65a6dc10ad19b5c8aa535baba86a7e5c",
      "candidate_info": {
        "commit_hash": "86223e8d65a6dc10ad19b5c8aa535baba86a7e5c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/86223e8d65a6dc10ad19b5c8aa535baba86a7e5c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c"
        ],
        "message": "In the xfer-optimization, do early detection of when the source and destination index share the same btree, to avoid a long delay prior to reporting the database corruption.\n\nFossilOrigin-Name: af1e5873d44d31466023ae145bdfc6b4191eb48b62e5752c6e683bcf571980e7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 51a95e52fc58d8be2c9c51576dff7258c705735b66d203948f80db017b4c10d2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2275:     if( pSrcIdx==0 ){",
          "2277:     }",
          "2278:   }",
          "2279: #ifndef SQLITE_OMIT_CHECK",
          "2280:   if( pDest->pCheck && sqlite3ExprListCompare(pSrc->pCheck,pDest->pCheck,-1) ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2278:     if( pSrcIdx->tnum==pDestIdx->tnum && pSrc->pSchema==pDest->pSchema ){",
          "2280:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e2c8819f1a9008348b9d04b58ecbe5ebf1ead52",
      "candidate_info": {
        "commit_hash": "2e2c8819f1a9008348b9d04b58ecbe5ebf1ead52",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2e2c8819f1a9008348b9d04b58ecbe5ebf1ead52",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c"
        ],
        "message": "Ensure that there is a containing SELECT statement when processing a normal aggregate function as if it were a window function.\n\nFossilOrigin-Name: c1014e80b26131200a115beb86929a8f0ded2dd65b075e47373346c0f170576a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e5dc2939d3e8694d648fc9b73b1174da5b1349e20fbb9cf1c91268939f308f89",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "967:           Select *pSel = pNC->pWinSelect;",
          "968:           assert( pWin==pExpr->y.pWin );",
          "969:           if( IN_RENAME_OBJECT==0 ){",
          "971:           }",
          "972:           sqlite3WalkExprList(pWalker, pWin->pPartition);",
          "973:           sqlite3WalkExprList(pWalker, pWin->pOrderBy);",
          "",
          "[Removed Lines]",
          "970:             sqlite3WindowUpdate(pParse, pSel->pWinDefn, pWin, pDef);",
          "",
          "[Added Lines]",
          "970:             sqlite3WindowUpdate(pParse, pSel ? pSel->pWinDefn : 0, pWin, pDef);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eaac9996edf679fd9b081508e23f98e70f5cdcd9",
      "candidate_info": {
        "commit_hash": "eaac9996edf679fd9b081508e23f98e70f5cdcd9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/eaac9996edf679fd9b081508e23f98e70f5cdcd9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Use unsigned integers to count the number of pages in a freelist during an integrity_check, to avoid any possibility of a signed integer overflow.\n\nFossilOrigin-Name: 05b87e0755638d31f6d8918f8758362f8c3981661449b5171180a8498f66bd9d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 848869ced988ca4d0ac76d43f984360fd11997a580719cccf8d55becea4e8fb1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9620: ){",
          "9621:   int i;",
          "9623:   int nErrAtStart = pCheck->nErr;",
          "9624:   while( iPage!=0 && pCheck->mxErr ){",
          "9625:     DbPage *pOvflPage;",
          "",
          "[Removed Lines]",
          "9622:   int expected = N;",
          "",
          "[Added Lines]",
          "9622:   u32 expected = N;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "348d7f64f2f24191570a9e47cb937d76ee3b5ca2",
      "candidate_info": {
        "commit_hash": "348d7f64f2f24191570a9e47cb937d76ee3b5ca2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/348d7f64f2f24191570a9e47cb937d76ee3b5ca2",
        "files": [
          "ext/rtree/rtree.c",
          "ext/rtree/rtree1.test",
          "ext/rtree/rtreeH.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Be strict about type enforcement on rowid look-ups in the RTREE extension. Ticket [30e2c183b6b356e4]\n\nFossilOrigin-Name: d43e0efb9642037dd751cfed13438e71cfceb50e14a0ec603880c6c3be2e93b1",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "ext/rtree/rtree1.test||ext/rtree/rtree1.test",
          "ext/rtree/rtreeH.test||ext/rtree/rtreeH.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1818:     i64 iRowid = sqlite3_value_int64(argv[0]);",
          "1819:     i64 iNode = 0;",
          "1821:     if( rc==SQLITE_OK && pLeaf!=0 ){",
          "1822:       p = rtreeSearchPointNew(pCsr, RTREE_ZERO, 0);",
          "",
          "[Removed Lines]",
          "1820:     rc = findLeafNode(pRtree, iRowid, &pLeaf, &iNode);",
          "",
          "[Added Lines]",
          "1820:     int eType = sqlite3_value_numeric_type(argv[0]);",
          "1821:     if( eType==SQLITE_INTEGER",
          "1822:      || (eType==SQLITE_FLOAT && sqlite3_value_double(argv[0])==iRowid)",
          "1823:     ){",
          "1824:       rc = findLeafNode(pRtree, iRowid, &pLeaf, &iNode);",
          "1825:     }else{",
          "1826:       rc = SQLITE_OK;",
          "1827:       pLeaf = 0;",
          "1828:     }",
          "",
          "---------------"
        ],
        "ext/rtree/rtree1.test||ext/rtree/rtree1.test": [
          "File: ext/rtree/rtree1.test -> ext/rtree/rtree1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "601:   1 0.0 0.0",
          "602:   2 52.0 81.0",
          "603: }",
          "606:   DROP TABLE t10;",
          "607:   CREATE VIRTUAL TABLE t10 USING rtree_i32(ii, x1, x2);",
          "608:   INSERT INTO t10 VALUES(1, 'one', 'two');",
          "609:   INSERT INTO t10 VALUES(2, '52xyz', '81...');",
          "610:   INSERT INTO t10 VALUES(3, 42.3, 49.9);",
          "611: }",
          "613:   SELECT * FROM t10;",
          "614: } {",
          "615:   1 0 0",
          "",
          "[Removed Lines]",
          "605: do_execsql_test 14.4 {",
          "612: do_execsql_test 14.5 {",
          "",
          "[Added Lines]",
          "604: do_execsql_test 14.6 {",
          "605:   INSERT INTO t10 VALUES(0,10,20);",
          "606:   SELECT * FROM t10 WHERE ii=NULL;",
          "607: } {}",
          "608: do_execsql_test 14.7 {",
          "609:   SELECT * FROM t10 WHERE ii='xyz';",
          "610: } {}",
          "611: do_execsql_test 14.8 {",
          "612:   SELECT * FROM t10 WHERE ii='0.0';",
          "613: } {0 10.0 20.0}",
          "614: do_execsql_test 14.9 {",
          "615:   SELECT * FROM t10 WHERE ii=0.0;",
          "616: } {0 10.0 20.0}",
          "619: do_execsql_test 14.104 {",
          "626: do_execsql_test 14.105 {",
          "",
          "---------------"
        ],
        "ext/rtree/rtreeH.test||ext/rtree/rtreeH.test": [
          "File: ext/rtree/rtreeH.test -> ext/rtree/rtreeH.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: do_execsql_test rtreeH-102 {",
          "44:   SELECT * FROM t1 WHERE rowid=5;",
          "45: } {5 40.0 60.0 40.0 60.0 center {}}",
          "46: do_execsql_test rtreeH-103 {",
          "47:   SELECT * FROM t1 WHERE label='center';",
          "48: } {5 40.0 60.0 40.0 60.0 center {}}",
          "50: do_rtree_integrity_test rtreeH-110 t1",
          "52: do_execsql_test rtreeH-120 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: do_execsql_test rtreeH-102b {",
          "47:   SELECT * FROM t1 WHERE rowid=5.0;",
          "48: } {5 40.0 60.0 40.0 60.0 center {}}",
          "49: do_execsql_test rtreeH-102c {",
          "50:   SELECT * FROM t1 WHERE rowid='5';",
          "51: } {5 40.0 60.0 40.0 60.0 center {}}",
          "52: do_execsql_test rtreeH-102d {",
          "53:   SELECT * FROM t1 WHERE rowid='0005';",
          "54: } {5 40.0 60.0 40.0 60.0 center {}}",
          "55: do_execsql_test rtreeH-102e {",
          "56:   SELECT * FROM t1 WHERE rowid='+5.0e+0';",
          "57: } {5 40.0 60.0 40.0 60.0 center {}}",
          "62: do_execsql_test rtreeH-104 {",
          "63:   SELECT * FROM t1 WHERE rowid='+5.0e+0x';",
          "64: } {}",
          "65: do_execsql_test rtreeH-105 {",
          "66:   SELECT * FROM t1 WHERE rowid=x'35';",
          "67: } {}",
          "68: do_execsql_test rtreeH-106 {",
          "69:   SELECT * FROM t1 WHERE rowid=null;",
          "70: } {}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f898d04cf272ef0130dcae146cb86d8630b10a6f19aecfc2fa70e97e082bd51c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}