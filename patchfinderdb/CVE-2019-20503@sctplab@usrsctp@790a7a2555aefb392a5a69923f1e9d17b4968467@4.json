{
  "cve_id": "CVE-2019-20503",
  "cve_desc": "usrsctp before 2019-12-20 has out-of-bounds reads in sctp_load_addresses_from_init.",
  "repo": "sctplab/usrsctp",
  "patch_hash": "790a7a2555aefb392a5a69923f1e9d17b4968467",
  "patch_info": {
    "commit_hash": "790a7a2555aefb392a5a69923f1e9d17b4968467",
    "repo": "sctplab/usrsctp",
    "commit_url": "https://github.com/sctplab/usrsctp/commit/790a7a2555aefb392a5a69923f1e9d17b4968467",
    "files": [
      "usrsctplib/netinet/sctp_auth.c",
      "usrsctplib/netinet/sctp_pcb.c"
    ],
    "message": "Improve input validation for some parameters having a too small reported length.\n\nThanks to Natalie Silvanovich from Google for finding one of these\nissues in the SCTP userland stack and reporting it.",
    "before_after_code_files": [
      "usrsctplib/netinet/sctp_auth.c||usrsctplib/netinet/sctp_auth.c",
      "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c"
    ]
  },
  "patch_diff": {
    "usrsctplib/netinet/sctp_auth.c||usrsctplib/netinet/sctp_auth.c": [
      "File: usrsctplib/netinet/sctp_auth.c -> usrsctplib/netinet/sctp_auth.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #ifdef __FreeBSD__",
      "36: #include <sys/cdefs.h>",
      "38: #endif",
      "40: #include <netinet/sctp_os.h>",
      "",
      "[Removed Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_auth.c 352438 2019-09-17 09:46:42Z tuexen $\");",
      "",
      "[Added Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_auth.c 355931 2019-12-20 15:25:08Z tuexen $\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1421:   ptype = ntohs(phdr->param_type);",
      "1422:   plen = ntohs(phdr->param_length);",
      "1425:    break;",
      "1427:   if (ptype == SCTP_RANDOM) {",
      "",
      "[Removed Lines]",
      "1424:   if ((plen == 0) || (offset + plen > length))",
      "",
      "[Added Lines]",
      "1424:   if ((plen < sizeof(struct sctp_paramhdr)) ||",
      "1425:       (offset + plen > length))",
      "",
      "---------------"
    ],
    "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c": [
      "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplib/netinet/sctp_pcb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #ifdef __FreeBSD__",
      "36: #include <sys/cdefs.h>",
      "38: #endif",
      "40: #include <netinet/sctp_os.h>",
      "",
      "[Removed Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 353477 2019-10-13 16:14:04Z markj $\");",
      "",
      "[Added Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 355931 2019-12-20 15:25:08Z tuexen $\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7247:   if (offset + plen > limit) {",
      "7248:    break;",
      "7249:   }",
      "7251:    break;",
      "7252:   }",
      "7253: #ifdef INET",
      "",
      "[Removed Lines]",
      "7250:   if (plen == 0) {",
      "",
      "[Added Lines]",
      "7250:   if (plen < sizeof(struct sctp_paramhdr)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "7463:    if (plen > sizeof(lstore)) {",
      "7464:     return (-23);",
      "7465:    }",
      "7466:    phdr = sctp_get_next_param(m, offset,",
      "7467:          (struct sctp_paramhdr *)&lstore,",
      "7468:          plen);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7466:    if (plen < sizeof(struct sctp_asconf_addrv4_param)) {",
      "7467:     return (-101);",
      "7468:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "733d535a079cb36f41ca599a49b17491034c4dbe",
      "candidate_info": {
        "commit_hash": "733d535a079cb36f41ca599a49b17491034c4dbe",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/733d535a079cb36f41ca599a49b17491034c4dbe",
        "files": [
          "usrsctplib/netinet/sctp_os_userspace.h",
          "usrsctplib/netinet/sctp_pcb.c"
        ],
        "message": "Remove usage of empty macro",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_os_userspace.h||usrsctplinetinet/sctp_os_userspace.h",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_os_userspace.h||usrsctplinetinet/sctp_os_userspace.h": [
          "File: usrsctplib/netinet/sctp_os_userspace.h -> usrsctplinetinet/sctp_os_userspace.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "891:                                                  rt->rt_rmx.rmx_mtu = mtu; \\",
          "892:                                            } while(0)",
          "",
          "[Removed Lines]",
          "895: #define SCTP_REGISTER_INTERFACE(ifhandle, af)",
          "896: #define SCTP_DEREGISTER_INTERFACE(ifhandle, af)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 362106 2020-06-12 16:31:13Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:   SCTP_IPI_ADDR_WLOCK();",
          "362:  LIST_REMOVE(sctp_ifnp, next_bucket);",
          "363:  LIST_REMOVE(sctp_ifnp, next_ifn);",
          "366:  if (hold_addr_lock == 0)",
          "367:   SCTP_IPI_ADDR_WUNLOCK();",
          "",
          "[Removed Lines]",
          "364:  SCTP_DEREGISTER_INTERFACE(sctp_ifnp->ifn_index,",
          "365:       sctp_ifnp->registered_af);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "490:  }",
          "491:  if (sctp_ifnp->ifa_count == 1) {",
          "494:   sctp_ifnp->registered_af = ifa_af;",
          "495:  }",
          "496: }",
          "",
          "[Removed Lines]",
          "493:   SCTP_REGISTER_INTERFACE(sctp_ifnp->ifn_index, ifa_af);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "532:    if ((sctp_ifap->ifn_p->num_v6 == 0) &&",
          "533:        (sctp_ifap->ifn_p->registered_af == AF_INET6)) {",
          "536:     sctp_ifap->ifn_p->registered_af = AF_INET;",
          "537:    } else if ((sctp_ifap->ifn_p->num_v4 == 0) &&",
          "538:        (sctp_ifap->ifn_p->registered_af == AF_INET)) {",
          "541:     sctp_ifap->ifn_p->registered_af = AF_INET6;",
          "542:    }",
          "",
          "[Removed Lines]",
          "534:     SCTP_DEREGISTER_INTERFACE(sctp_ifap->ifn_p->ifn_index, AF_INET6);",
          "535:     SCTP_REGISTER_INTERFACE(sctp_ifap->ifn_p->ifn_index, AF_INET);",
          "539:     SCTP_DEREGISTER_INTERFACE(sctp_ifap->ifn_p->ifn_index, AF_INET);",
          "540:     SCTP_REGISTER_INTERFACE(sctp_ifap->ifn_p->ifn_index, AF_INET6);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "766:  vrf->total_ifa_count++;",
          "767:  atomic_add_int(&SCTP_BASE_INFO(ipi_count_ifas), 1);",
          "768:  if (new_ifn_af) {",
          "770:   sctp_ifnp->registered_af = new_ifn_af;",
          "771:  }",
          "772:  SCTP_IPI_ADDR_WUNLOCK();",
          "",
          "[Removed Lines]",
          "769:   SCTP_REGISTER_INTERFACE(ifn_index, new_ifn_af);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "47987ce5e9e9044d795d3695ebae5f02b4a9f8a2",
      "candidate_info": {
        "commit_hash": "47987ce5e9e9044d795d3695ebae5f02b4a9f8a2",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/47987ce5e9e9044d795d3695ebae5f02b4a9f8a2",
        "files": [
          "usrsctplib/netinet/sctp_crc32.c",
          "usrsctplib/netinet/sctp_pcb.c"
        ],
        "message": "Sync with FreeBSD",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_crc32.c||usrsctplinetinet/sctp_crc32.c",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_crc32.c||usrsctplinetinet/sctp_crc32.c": [
          "File: usrsctplib/netinet/sctp_crc32.c -> usrsctplinetinet/sctp_crc32.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "39: #include \"opt_sctp.h\"",
          "41: #include <sys/param.h>",
          "42: #include <sys/systm.h>",
          "44: #include <sys/gsb_crc32.h>",
          "46: #include <sys/mbuf.h>",
          "48: #include <netinet/sctp.h>",
          "49: #include <netinet/sctp_crc32.h>",
          "51: #include <netinet/sctp_os.h>",
          "53: #include <netinet/sctp_pcb.h>",
          "54: #endif",
          "55: #else",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_crc32.c 362338 2020-06-18 19:32:34Z markj $\");",
          "43: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "45: #endif",
          "50: #ifdef SCTP",
          "52: #include <netinet/sctp_crc32.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "801: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "802: #if defined(SCTP) || defined(SCTP_SUPPORT)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "810:  uint32_t checksum;",
          "812:  checksum = sctp_calculate_cksum(m, offset);",
          "814:  SCTP_STAT_DECR(sctps_sendhwcrc);",
          "815:  SCTP_STAT_INCR(sctps_sendswcrc);",
          "817:  offset += offsetof(struct sctphdr, checksum);",
          "819:  if (offset + sizeof(uint32_t) > (uint32_t)(m->m_pkthdr.len)) {",
          "",
          "[Removed Lines]",
          "813: #ifdef SCTP",
          "816: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 362155 2020-06-13 21:23:26Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76: #endif",
          "77: #endif",
          "82: struct sctp_base_info system_base_info;",
          "87: #ifdef INET6",
          "",
          "[Removed Lines]",
          "79: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "80: VNET_DEFINE(struct sctp_base_info, system_base_info);",
          "81: #else",
          "83: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a05154264872ec8e5d4143ac841a306f54ace231",
      "candidate_info": {
        "commit_hash": "a05154264872ec8e5d4143ac841a306f54ace231",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/a05154264872ec8e5d4143ac841a306f54ace231",
        "files": [
          "usrsctplib/netinet/sctp_asconf.c",
          "usrsctplib/netinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_structs.h",
          "usrsctplib/netinet/sctp_timer.c",
          "usrsctplib/netinet/sctp_var.h"
        ],
        "message": "Sync with FreeBSD.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_asconf.c||usrsctplinetinet/sctp_asconf.c",
          "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_structs.h||usrsctplinetinet/sctp_structs.h",
          "usrsctplib/netinet/sctp_timer.c||usrsctplinetinet/sctp_timer.c",
          "usrsctplib/netinet/sctp_var.h||usrsctplinetinet/sctp_var.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_asconf.c||usrsctplinetinet/sctp_asconf.c": [
          "File: usrsctplib/netinet/sctp_asconf.c -> usrsctplinetinet/sctp_asconf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_asconf.c 360878 2020-05-10 17:19:19Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "996:       ((ifn == NULL) ||",
          "997:        (SCTP_GET_IF_INDEX_FROM_ROUTE(&net->ro) != ifn->ifn_index))) {",
          "999:    RTFREE(net->ro.ro_rt);",
          "1000:    net->ro.ro_rt = NULL;",
          "1001:   }",
          "1003:   if (net->src_addr_selected) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1111:  if (addrnum == 1) {",
          "1112:   TAILQ_FOREACH(net, &stcb->asoc.nets, sctp_next) {",
          "1114:    if (net->ro.ro_rt) {",
          "1115:     RTFREE(net->ro.ro_rt);",
          "1116:     net->ro.ro_rt = NULL;",
          "1117:    }",
          "1118:    if (net->src_addr_selected) {",
          "1119:     sctp_free_ifa(net->ro._s_addr);",
          "1120:     net->ro._s_addr = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1134:  TAILQ_FOREACH(net, &stcb->asoc.nets, sctp_next) {",
          "1136:   if (net->ro.ro_rt) {",
          "1137:    RTFREE(net->ro.ro_rt);",
          "1138:    net->ro.ro_rt = NULL;",
          "1139:   }",
          "1140:   if (net->src_addr_selected) {",
          "1141:    sctp_free_ifa(net->ro._s_addr);",
          "1142:    net->ro._s_addr = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1151:   SCTP_RTALLOC((sctp_route_t *)&net->ro,",
          "1152:         stcb->sctp_ep->def_vrf_id,",
          "1153:         stcb->sctp_ep->fibnum);",
          "1154:   if (net->ro.ro_rt == NULL)",
          "1155:    continue;",
          "1157:   changed = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2240:   } else if (type == SCTP_DEL_IP_ADDRESS) {",
          "2241:    struct sctp_nets *net;",
          "2242:    TAILQ_FOREACH(net, &stcb->asoc.nets, sctp_next) {",
          "2246:     if (net->ro._s_addr == ifa) {",
          "2247:      sctp_free_ifa(net->ro._s_addr);",
          "2248:      net->ro._s_addr = NULL;",
          "2249:      net->src_addr_selected = 0;",
          "2253:       net->ro.ro_rt = NULL;",
          "2254:      }",
          "",
          "[Removed Lines]",
          "2243:     sctp_rtentry_t *rt;",
          "2250:      rt = net->ro.ro_rt;",
          "2251:      if (rt) {",
          "2252:       RTFREE(rt);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c": [
          "File: usrsctplib/netinet/sctp_output.c -> usrsctplinetinet/sctp_output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_output.c 360869 2020-05-10 10:03:10Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3477:  if (ro->ro_rt == NULL) {",
          "3481:   SCTP_RTALLOC(ro, vrf_id, inp->fibnum);",
          "3482:  }",
          "3483:  if (ro->ro_rt == NULL) {",
          "3484:   return (NULL);",
          "3485:  }",
          "3486: #if defined(__Userspace_os_Windows)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4305:     sctp_free_ifa(net->ro._s_addr);",
          "4306:     net->ro._s_addr = NULL;",
          "4307:     net->src_addr_selected = 0;",
          "4308:     if (ro->ro_rt) {",
          "4309:      RTFREE(ro->ro_rt);",
          "4310:      ro->ro_rt = NULL;",
          "4311:     }",
          "4312:    }",
          "4313:    if (net->src_addr_selected == 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4391:   if (ro->ro_rt == NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4406:    (uint32_t) (ntohl(ip->ip_src.s_addr)));",
          "4407:   SCTPDBG(SCTP_DEBUG_OUTPUT3, \"Destination is %x\\n\",",
          "4408:    (uint32_t)(ntohl(ip->ip_dst.s_addr)));",
          "4409:   SCTPDBG(SCTP_DEBUG_OUTPUT3, \"RTP route is %p through\\n\",",
          "4410:    (void *)ro->ro_rt);",
          "4412:   if (SCTP_GET_HEADER_FOR_OUTPUT(o_pak)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4480:   SCTPDBG(SCTP_DEBUG_OUTPUT3, \"IP output returns %d\\n\", ret);",
          "4481:   if (net == NULL) {",
          "4485: #else",
          "4486:    if (ro->ro_rt) {",
          "4487:     RTFREE(ro->ro_rt);",
          "",
          "[Removed Lines]",
          "4483: #if defined(__FreeBSD__) && __FreeBSD_version > 901000",
          "4484:    RO_RTFREE(ro);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4489:    }",
          "4490: #endif",
          "4491:   } else {",
          "4492:    if ((ro->ro_rt != NULL) && (net->ro._s_addr) &&",
          "4493:        ((net->dest_state & SCTP_ADDR_NO_PMTUD) == 0)) {",
          "4494:     uint32_t mtu;",
          "4496:     mtu = SCTP_GATHER_MTU_FROM_ROUTE(net->ro._s_addr, &net->ro._l_addr.sa, ro->ro_rt);",
          "4497:     if (mtu > 0) {",
          "4498:      if (net->port) {",
          "4499:       mtu -= sizeof(struct udphdr);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4505:       net->mtu = mtu;",
          "4506:      }",
          "4507:     }",
          "4508:    } else if (ro->ro_rt == NULL) {",
          "4510:     if (net->ro._s_addr &&",
          "4511:         net->src_addr_selected) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4667:     sctp_free_ifa(net->ro._s_addr);",
          "4668:     net->ro._s_addr = NULL;",
          "4669:     net->src_addr_selected = 0;",
          "4670:     if (ro->ro_rt) {",
          "4671:      RTFREE(ro->ro_rt);",
          "4672:      ro->ro_rt = NULL;",
          "4673:     }",
          "4674:    }",
          "4675:    if (net->src_addr_selected == 0) {",
          "4676: #ifdef SCTP_EMBEDDED_V6_SCOPE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4768:   }",
          "4769:   lsa6->sin6_port = inp->sctp_lport;",
          "4771:   if (ro->ro_rt == NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4945:   }",
          "4946:   if (net == NULL) {",
          "4950: #else",
          "4951:    if (ro->ro_rt) {",
          "4952:     RTFREE(ro->ro_rt);",
          "",
          "[Removed Lines]",
          "4948: #if defined(__FreeBSD__) && __FreeBSD_version > 901000",
          "4949:    RO_RTFREE(ro);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4955: #endif",
          "4956:   } else {",
          "4958:    if (ro->ro_rt == NULL) {",
          "4960:     if (net->ro._s_addr &&",
          "4961:         net->src_addr_selected) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4964:     }",
          "4965:     net->src_addr_selected = 0;",
          "4966:    }",
          "4967:    if ((ro->ro_rt != NULL) && (net->ro._s_addr) &&",
          "4968:        ((net->dest_state & SCTP_ADDR_NO_PMTUD) == 0)) {",
          "4969:     uint32_t mtu;",
          "4971:     mtu = SCTP_GATHER_MTU_FROM_ROUTE(net->ro._s_addr, &net->ro._l_addr.sa, ro->ro_rt);",
          "4972:     if (mtu > 0) {",
          "4973:      if (net->port) {",
          "4974:       mtu -= sizeof(struct udphdr);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "15021:  struct nd_pfxrouter *pfxrtr = NULL;",
          "15022:  struct sockaddr_in6 gw6;",
          "15024:  if (ro == NULL || ro->ro_rt == NULL || src6->sin6_family != AF_INET6)",
          "15025:   return (0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "15060:   SCTPDBG(SCTP_DEBUG_OUTPUT2, \"prefix router is \");",
          "15061:   SCTPDBG_ADDR(SCTP_DEBUG_OUTPUT2, (struct sockaddr *)&gw6);",
          "15062:   SCTPDBG(SCTP_DEBUG_OUTPUT2, \"installed router is \");",
          "15063:   SCTPDBG_ADDR(SCTP_DEBUG_OUTPUT2, ro->ro_rt->rt_gateway);",
          "15065: #if defined(__FreeBSD__)",
          "15066:    ND6_RUNLOCK();",
          "15067: #endif",
          "15068:    SCTPDBG(SCTP_DEBUG_OUTPUT2, \"pfxrouter is installed\\n\");",
          "15069:    return (1);",
          "",
          "[Removed Lines]",
          "15064:   if (sctp_cmpaddr((struct sockaddr *)&gw6, ro->ro_rt->rt_gateway)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "15085:  struct ifaddr *ifa;",
          "15086:  struct in_addr srcnetaddr, gwnetaddr;",
          "15088:  if (ro == NULL || ro->ro_rt == NULL ||",
          "15089:      sifa->address.sa.sa_family != AF_INET) {",
          "15090:   return (0);",
          "15091:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "15097:  SCTPDBG_ADDR(SCTP_DEBUG_OUTPUT2, &sifa->address.sa);",
          "15098:  SCTPDBG(SCTP_DEBUG_OUTPUT1, \"network address is %x\\n\", srcnetaddr.s_addr);",
          "15100:  sin = (struct sockaddr_in *)ro->ro_rt->rt_gateway;",
          "15101:  gwnetaddr.s_addr = (sin->sin_addr.s_addr & mask->sin_addr.s_addr);",
          "15102:  SCTPDBG(SCTP_DEBUG_OUTPUT1, \"match_nexthop4: nexthop is \");",
          "15103:  SCTPDBG_ADDR(SCTP_DEBUG_OUTPUT2, ro->ro_rt->rt_gateway);",
          "15104:  SCTPDBG(SCTP_DEBUG_OUTPUT1, \"network address is %x\\n\", gwnetaddr.s_addr);",
          "15105:  if (srcnetaddr.s_addr == gwnetaddr.s_addr) {",
          "15106:   return (1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 359405 2020-03-28 20:25:45Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4670:    } else {",
          "4671:     imtu = 0;",
          "4672:    }",
          "4674: #if defined(__FreeBSD__)",
          "4675:    hcmtu = sctp_hc_get_mtu(&net->ro._l_addr, stcb->sctp_ep->fibnum);",
          "4676: #else",
          "4677:    hcmtu = 0;",
          "4678: #endif",
          "4679:    net->mtu = sctp_min_mtu(hcmtu, rmtu, imtu);",
          "4680:    if (rmtu == 0) {",
          "4682:     SCTP_SET_MTU_OF_ROUTE(&net->ro._l_addr.sa,",
          "4683:                           net->ro.ro_rt, net->mtu);",
          "4684:    }",
          "4685:   }",
          "4686:  }",
          "4687: #endif",
          "",
          "[Removed Lines]",
          "4673:    rmtu = SCTP_GATHER_MTU_FROM_ROUTE(net->ro._s_addr, &net->ro._l_addr.sa, net->ro.ro_rt);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4782:  }",
          "4783:  netfirst = TAILQ_FIRST(&stcb->asoc.nets);",
          "4784:  if (net->ro.ro_rt == NULL) {",
          "4786:   TAILQ_INSERT_TAIL(&stcb->asoc.nets, net, sctp_next);",
          "4787:  } else if (netfirst == NULL) {",
          "4789:   TAILQ_INSERT_HEAD(&stcb->asoc.nets, net, sctp_next);",
          "4790:  } else if (netfirst->ro.ro_rt == NULL) {",
          "4795:   TAILQ_INSERT_HEAD(&stcb->asoc.nets, net, sctp_next);",
          "4797:  } else if (net->ro.ro_rt->rt_ifp != netfirst->ro.ro_rt->rt_ifp) {",
          "4802:   TAILQ_INSERT_HEAD(&stcb->asoc.nets, net, sctp_next);",
          "4804:  } else {",
          "",
          "[Removed Lines]",
          "4796: #ifndef __Panda__",
          "4803: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4817:     TAILQ_INSERT_TAIL(&stcb->asoc.nets, net, sctp_next);",
          "4818:     break;",
          "4819:    } else if (netlook->ro.ro_rt == NULL) {",
          "4821:     TAILQ_INSERT_BEFORE(netfirst, net, sctp_next);",
          "4822:     break;",
          "4826: #else",
          "4828: #endif",
          "4830:     TAILQ_INSERT_AFTER(&stcb->asoc.nets, netlook,",
          "4832:     break;",
          "4833:    }",
          "4836:    netfirst = netlook;",
          "4838:   } while (netlook != NULL);",
          "4839:  }",
          "4842:  if (stcb->asoc.primary_destination == 0) {",
          "4843:   stcb->asoc.primary_destination = net;",
          "4844:  } else if ((stcb->asoc.primary_destination->ro.ro_rt == NULL) &&",
          "4848:   stcb->asoc.primary_destination = net;",
          "4849:  }",
          "",
          "[Removed Lines]",
          "4823:    }",
          "4824: #ifndef __Panda__",
          "4825:    else if (netlook->ro.ro_rt->rt_ifp != net->ro.ro_rt->rt_ifp)",
          "4827:    else",
          "4829:    {",
          "4831:          net, sctp_next);",
          "4834: #ifndef __Panda__",
          "4837: #endif",
          "4845:       (net->ro.ro_rt) &&",
          "4846:      ((net->dest_state & SCTP_ADDR_UNCONFIRMED) == 0)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6273:    TAILQ_FOREACH(net, &stcb->asoc.nets, sctp_next) {",
          "6274:     if (net->ro._s_addr == laddr->ifa) {",
          "6276:      sctp_rtentry_t *rt;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6281:       RTFREE(rt);",
          "6282:       net->ro.ro_rt = NULL;",
          "6283:      }",
          "6284:      sctp_free_ifa(net->ro._s_addr);",
          "6285:      net->ro._s_addr = NULL;",
          "6286:      net->src_addr_selected = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_structs.h||usrsctplinetinet/sctp_structs.h": [
          "File: usrsctplib/netinet/sctp_structs.h -> usrsctplinetinet/sctp_structs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_STRUCTS_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_structs.h 359379 2020-03-27 21:48:52Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "228: #define SCTP_ITERATOR_STOP_CUR_INP 0x00000008",
          "230: struct sctp_net_route {",
          "232: #if defined(__FreeBSD__)",
          "243:  struct llentry *ro_lle;",
          "245:  char  *ro_prepend;",
          "246:  uint16_t ro_plen;",
          "247:  uint16_t ro_flags;",
          "248:  uint16_t ro_mtu;",
          "249:  uint16_t spare;",
          "251: #endif",
          "252: #if defined(__APPLE__)",
          "253: #if !defined(APPLE_LEOPARD) && !defined(APPLE_SNOWLEOPARD) && !defined(APPLE_LION) && !defined(APPLE_MOUNTAINLION) && !defined(APPLE_ELCAPITAN)",
          "",
          "[Removed Lines]",
          "231:  sctp_rtentry_t *ro_rt;",
          "233: #if __FreeBSD_version < 1100093",
          "234: #if __FreeBSD_version >= 800000",
          "235:  void *ro_lle;",
          "236: #endif",
          "237: #if __FreeBSD_version >= 900000",
          "238:  void *ro_ia;",
          "239:  int ro_flags;",
          "240: #endif",
          "241: #else",
          "242: #if __FreeBSD_version >= 1100116",
          "244: #endif",
          "250: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_timer.c||usrsctplinetinet/sctp_timer.c": [
          "File: usrsctplib/netinet/sctp_timer.c -> usrsctplinetinet/sctp_timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "348:     return (NULL);",
          "349:    }",
          "350:   }",
          "351:   if (alt->ro.ro_rt == NULL) {",
          "352:    if (alt->ro._s_addr) {",
          "353:     sctp_free_ifa(alt->ro._s_addr);",
          "354:     alt->ro._s_addr = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "356:    alt->src_addr_selected = 0;",
          "357:   }",
          "358:   if (((alt->dest_state & SCTP_ADDR_REACHABLE) == SCTP_ADDR_REACHABLE) &&",
          "359:       (alt->ro.ro_rt != NULL) &&",
          "360:       (!(alt->dest_state & SCTP_ADDR_UNCONFIRMED))) {",
          "362:    break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "942:   net->src_addr_selected = 0;",
          "945:   if (net->ro.ro_rt) {",
          "946:    RTFREE(net->ro.ro_rt);",
          "947:    net->ro.ro_rt = NULL;",
          "948:   }",
          "951:   if ((stcb->asoc.primary_destination == net) && (alt != net)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1526:     net->src_addr_selected = 1;",
          "1527:   }",
          "1528:   if (net->ro._s_addr) {",
          "1529:    mtu = SCTP_GATHER_MTU_FROM_ROUTE(net->ro._s_addr, &net->ro._s_addr.sa, net->ro.ro_rt);",
          "1530: #if defined(INET) || defined(INET6)",
          "1531:    if (net->port) {",
          "1532:     mtu -= sizeof(struct udphdr);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_var.h||usrsctplinetinet/sctp_var.h": [
          "File: usrsctplib/netinet/sctp_var.h -> usrsctplinetinet/sctp_var.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_VAR_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_var.h 357708 2020-02-09 22:40:05Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186:  } \\",
          "187: }",
          "191: #define sctp_free_remote_addr(__net) { \\",
          "192:  if ((__net)) {  \\",
          "193:   if (SCTP_DECREMENT_AND_CHECK_REFCOUNT(&(__net)->ref_count)) { \\",
          "194:    (void)SCTP_OS_TIMER_STOP(&(__net)->rxt_timer.timer); \\",
          "199:    if ((__net)->src_addr_selected) { \\",
          "200:     sctp_free_ifa((__net)->ro._s_addr); \\",
          "201:     (__net)->ro._s_addr = NULL; \\",
          "",
          "[Removed Lines]",
          "189: #if defined(__FreeBSD__) && __FreeBSD_version > 500000",
          "195:    if ((__net)->ro.ro_rt) { \\",
          "196:     RTFREE((__net)->ro.ro_rt); \\",
          "197:     (__net)->ro.ro_rt = NULL; \\",
          "198:    } \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f9763977feda9013bac0428f20c4a07f7963247",
      "candidate_info": {
        "commit_hash": "5f9763977feda9013bac0428f20c4a07f7963247",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/5f9763977feda9013bac0428f20c4a07f7963247",
        "files": [
          "usrsctplib/netinet/sctp_os_userspace.h",
          "usrsctplib/netinet/sctp_pcb.c",
          "usrsctplib/netinet/sctputil.c",
          "usrsctplib/netinet/sctputil.h"
        ],
        "message": "Use bool for boolean variables.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_os_userspace.h||usrsctplinetinet/sctp_os_userspace.h",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c",
          "usrsctplib/netinet/sctputil.c||usrsctplinetinet/sctputil.c",
          "usrsctplib/netinet/sctputil.h||usrsctplinetinet/sctputil.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_os_userspace.h||usrsctplinetinet/sctp_os_userspace.h": [
          "File: usrsctplib/netinet/sctp_os_userspace.h -> usrsctplinetinet/sctp_os_userspace.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "437: #include <stdio.h>",
          "438: #include <string.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 357768 2020-02-11 18:15:57Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5537:   }",
          "5538:  }",
          "5542:  if ((stcb->asoc.state & SCTP_STATE_ABOUT_TO_BE_FREED) == 0) {",
          "5543:   SCTP_ADD_SUBSTATE(stcb, SCTP_STATE_ABOUT_TO_BE_FREED);",
          "",
          "[Removed Lines]",
          "5540:  sctp_stop_association_timers(stcb, 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "5709:  sctp_stop_association_timers(stcb, 1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctputil.c||usrsctplinetinet/sctputil.c": [
          "File: usrsctplib/netinet/sctputil.c -> usrsctplinetinet/sctputil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctputil.c 357768 2020-02-11 18:15:57Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "833: }",
          "835: void",
          "837: {",
          "838:  struct sctp_inpcb *inp;",
          "839:  struct sctp_nets *net;",
          "",
          "[Removed Lines]",
          "836: sctp_stop_association_timers(struct sctp_tcb *stcb, int stop_assoc_kill_timer)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "843:                  SCTP_FROM_SCTPUTIL + SCTP_LOC_18);",
          "844:  sctp_timer_stop(SCTP_TIMER_TYPE_STRRESET, inp, stcb, NULL,",
          "845:                  SCTP_FROM_SCTPUTIL + SCTP_LOC_19);",
          "847:   sctp_timer_stop(SCTP_TIMER_TYPE_ASOCKILL, inp, stcb, NULL,",
          "848:                   SCTP_FROM_SCTPUTIL + SCTP_LOC_20);",
          "849:  }",
          "",
          "[Removed Lines]",
          "846:  if (stop_assoc_kill_timer != 0) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctputil.h||usrsctplinetinet/sctputil.h": [
          "File: usrsctplib/netinet/sctputil.h -> usrsctplinetinet/sctputil.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_UTIL_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctputil.h 357761 2020-02-11 14:00:27Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "177: void sctp_stop_timers_for_shutdown(struct sctp_tcb *);",
          "182: void sctp_report_all_outbound(struct sctp_tcb *, uint16_t, int, int",
          "183: #if !defined(__APPLE__) && !defined(SCTP_SO_LOCK_TESTING)",
          "",
          "[Removed Lines]",
          "180: void sctp_stop_association_timers(struct sctp_tcb *, int);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4544fa2640278f664beb49191629071049dc0358",
      "candidate_info": {
        "commit_hash": "4544fa2640278f664beb49191629071049dc0358",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/4544fa2640278f664beb49191629071049dc0358",
        "files": [
          "usrsctplib/netinet/sctp_input.c",
          "usrsctplib/netinet/sctp_pcb.c"
        ],
        "message": "Initialize variables before using",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_input.c||usrsctplib/netinet/sctp_input.c",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c"
          ],
          "candidate": [
            "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c"
          ]
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_input.c||usrsctplib/netinet/sctp_input.c": [
          "File: usrsctplib/netinet/sctp_input.c -> usrsctplib/netinet/sctp_input.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_input.c 366482 2020-10-06 11:08:52Z tuexen $\");",
          "",
          "[Added Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_input.c 366483 2020-10-06 11:29:08Z tuexen $\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6087:    stcb = NULL;",
          "6088:    goto out;",
          "6089:   }",
          "",
          "[Removed Lines]",
          "6090:   data_processed = 1;",
          "",
          "[Added Lines]",
          "6090:   if (retval == 0) {",
          "6091:    data_processed = 1;",
          "6092:   }",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplib/netinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #if defined(__FreeBSD__) && !defined(__Userspace__)",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 366482 2020-10-06 11:08:52Z tuexen $\");",
          "",
          "[Added Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 366483 2020-10-06 11:29:08Z tuexen $\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7029:  peer_supports_prsctp = 0;",
          "7030:  peer_supports_auth = 0;",
          "7031:  peer_supports_asconf = 0;",
          "7032:  peer_supports_reconfig = 0;",
          "7033:  peer_supports_nrsack = 0;",
          "7034:  peer_supports_pktdrop = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7032:  peer_supports_asconf_ack = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}