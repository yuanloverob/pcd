{
  "cve_id": "CVE-2019-19242",
  "cve_desc": "SQLite 3.30.1 mishandles pExpr->y.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
  "repo": "sqlite/sqlite",
  "patch_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
  "patch_info": {
    "commit_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/wherecode.c",
      "test/gencol1.test"
    ],
    "message": "Fix a problem that comes up when using generated columns that evaluate to a constant in an index and then making use of that index in a join.\n\nFossilOrigin-Name: 8b12e95fec7ce6e0de82a04ca3dfcf1a8e62e233b7382aa28a8a9be6e862b1af",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/wherecode.c||src/wherecode.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 2d53a30cc23e53033af8e8666457654db5dcc453ed6cd176ce1d0bff4f528159",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3607:         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);",
      "3609:         if( aff>SQLITE_AFF_BLOB ){",
      "3610:           static const char zAff[] = \"B\\000C\\000D\\000E\";",
      "3611:           assert( SQLITE_AFF_BLOB=='A' );",
      "",
      "[Removed Lines]",
      "3608:         int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "",
      "[Added Lines]",
      "3608:         int aff;",
      "3609:         if( pExpr->y.pTab ){",
      "3610:           aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "3611:         }else{",
      "3612:           aff = pExpr->affExpr;",
      "3613:         }",
      "",
      "---------------"
    ],
    "src/wherecode.c||src/wherecode.c": [
      "File: src/wherecode.c -> src/wherecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:   if( pExpr->op==TK_COLUMN ){",
      "1142:     IdxExprTrans *pX = p->u.pIdxTrans;",
      "1143:     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){",
      "1144:       pExpr->iTable = pX->iIdxCur;",
      "1145:       pExpr->iColumn = pX->iIdxCol;",
      "1146:       pExpr->y.pTab = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1144:       assert( pExpr->y.pTab!=0 );",
      "1145:       pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:   UPDATE t0 SET c0 = NULL;",
      "244: } {1 {generated column loop on \"c2\"}}",
      "247: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246: # 2019-11-21 Problems in the new generated column logic",
      "247: # reported by Yongheng Chen and Rui Zhong",
      "248: do_execsql_test gencol1-9.10 {",
      "249:   DROP TABLE IF EXISTS t1;",
      "250:   DROP TABLE IF EXISTS t2;",
      "251:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
      "252:   INSERT INTO t1 VALUES(17);",
      "253:   CREATE TABLE t2(cc);",
      "254:   INSERT INTO t2 VALUES(41);",
      "255:   SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;",
      "256: } {41 17 17}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "af4d50c4a1be9a4caa06270d17ef9ea8bb7c5519",
      "candidate_info": {
        "commit_hash": "af4d50c4a1be9a4caa06270d17ef9ea8bb7c5519",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/af4d50c4a1be9a4caa06270d17ef9ea8bb7c5519",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/test_fs.c"
        ],
        "message": "Fix a bug in test module test_fs.c causing a segfault on OpenBSD.\n\nFossilOrigin-Name: ee886600297c2a03d9d1d10db88d3d107b48e5d4de5e5d91b0ab16cc7c447ede",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/test_fs.c||src/test_fs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 09fa0b3c4adf7f81a777975762029ad43dbdc76b02dc32d2307e1c42465213c9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/test_fs.c||src/test_fs.c": [
          "File: src/test_fs.c -> src/test_fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:   sqlite3_int64 iRowid;",
          "133: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132:   struct DIRENT *pEntry;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "236:   FsdirCsr *pCsr = (FsdirCsr*)cur;",
          "238:   if( pCsr->pDir ){",
          "245:       closedir(pCsr->pDir);",
          "246:       pCsr->pDir = 0;",
          "247:     }",
          "",
          "[Removed Lines]",
          "239:     struct DIRENT *pRes = 0;",
          "240:     pRes = readdir(pCsr->pDir);",
          "241:     if( pRes!=0 ){",
          "242:       memcpy(&pCsr->entry, pRes, sizeof(struct DIRENT));",
          "243:     }",
          "244:     if( pRes==0 ){",
          "",
          "[Added Lines]",
          "239:     pCsr->pEntry = readdir(pCsr->pDir);",
          "240:     if( pCsr->pEntry==0 ){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "304:       break;",
          "308:       break;",
          "310:     default:",
          "",
          "[Removed Lines]",
          "307:       sqlite3_result_text(ctx, pCsr->entry.d_name, -1, SQLITE_TRANSIENT);",
          "",
          "[Added Lines]",
          "303:       sqlite3_result_text(ctx, pCsr->pEntry->d_name, -1, SQLITE_TRANSIENT);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f0c48b1cd8060b21fcef7c0029703284551d9306",
      "candidate_info": {
        "commit_hash": "f0c48b1cd8060b21fcef7c0029703284551d9306",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f0c48b1cd8060b21fcef7c0029703284551d9306",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c"
        ],
        "message": "Add an assert() in an attempt to repro an ASAN warning from OSSFuzz.\n\nFossilOrigin-Name: 7b41222428dcebaae2e9a0e8192e091b6fdee5b1163a5fa14ca1cd4f06354983",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: db74a56af73d92b7a9d43ceda7e4540915c580c68a0266b4ddefb9e0d5cbcbeb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1821:     pTab->iPKey = -1;",
          "1822:   }else{",
          "1823:     pPk = sqlite3PrimaryKeyIndex(pTab);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1824:     assert( pPk!=0 );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "42be2ad30bad38f15a4c33956d6fe2b9c4b00989",
      "candidate_info": {
        "commit_hash": "42be2ad30bad38f15a4c33956d6fe2b9c4b00989",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/42be2ad30bad38f15a4c33956d6fe2b9c4b00989",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/in.test"
        ],
        "message": "Make sure the affinity of the RHS of an IN operator does not affect the outcome even if the RHS expression contains a COLLATE clause. Ticket [57353f8243c637c0]\n\nFossilOrigin-Name: 0f748fe58bbbb7ce3f30303da25ec811b2bbce249549aa9c7927979ac5b38013",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/in.test||test/in.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d4755aca4b435eed62b54af84013f7f176d3fa5b7b1c243555d59de5749fcde5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: char sqlite3ExprAffinity(Expr *pExpr){",
          "46:   int op;",
          "48:   if( pExpr->flags & EP_Generic ) return 0;",
          "49:   op = pExpr->op;",
          "50:   if( op==TK_SELECT ){",
          "51:     assert( pExpr->flags&EP_xIsSelect );",
          "",
          "[Removed Lines]",
          "47:   pExpr = sqlite3ExprSkipCollate(pExpr);",
          "",
          "[Added Lines]",
          "48:   pExpr = sqlite3ExprSkipCollate(pExpr);",
          "",
          "---------------"
        ],
        "test/in.test||test/in.test": [
          "File: test/in.test -> test/in.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "734:   ORDER BY a DESC, b;",
          "735: } {}",
          "739: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "737: # 2019-06-11",
          "738: # https://www.sqlite.org/src/info/57353f8243c637c0",
          "739: #",
          "740: do_execsql_test in-17.1 {",
          "741:   SELECT 1 IN ('1');",
          "742: } 0",
          "743: do_execsql_test in-17.2 {",
          "744:   SELECT 1 IN ('1' COLLATE nocase);",
          "745: } 0",
          "746: do_execsql_test in-17.3 {",
          "747:   SELECT 1 IN (CAST('1' AS text));",
          "748: } 0",
          "749: do_execsql_test in-17.4 {",
          "750:   SELECT 1 IN (CAST('1' AS text) COLLATE nocase);",
          "751: } 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a753d400393d34ec988b50f7a2cf77773332b33d",
      "candidate_info": {
        "commit_hash": "a753d400393d34ec988b50f7a2cf77773332b33d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a753d400393d34ec988b50f7a2cf77773332b33d",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/altertab2.test"
        ],
        "message": "Fix repeated test numbers in the altertab2.test file.\n\nFossilOrigin-Name: e82f235e7201a420149847cda630ac6f2fce5e3a4577b0ea4793f430d3dc1611",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/altertab2.test||test/altertab2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 211c8002d5ea4b224125d4ed395fe15767d1dc32a77b40b89fdfc80bdd1c5a48",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/altertab2.test||test/altertab2.test": [
          "File: test/altertab2.test -> test/altertab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "338:   INSERT INTO t3 VALUES(4, 5, 6);",
          "339: }",
          "342:   CREATE TABLE t4(a, b);",
          "343:   CREATE VIEW v4 AS SELECT * FROM t4 WHERE (a=1 AND 0) OR b=2;",
          "344: }",
          "346:   ALTER TABLE t4 RENAME a TO c;",
          "347:   SELECT sql FROM sqlite_master WHERE name = 'v4'",
          "348: } {{CREATE VIEW v4 AS SELECT * FROM t4 WHERE (c=1 AND 0) OR b=2}}",
          "350: finish_test",
          "",
          "[Removed Lines]",
          "341: do_execsql_test 8.1 {",
          "345: do_execsql_test 8.2 {",
          "",
          "[Added Lines]",
          "341: do_execsql_test 8.4 {",
          "345: do_execsql_test 8.5 {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f69af053dcaee472a9d2391db22cd682ed491d39",
      "candidate_info": {
        "commit_hash": "f69af053dcaee472a9d2391db22cd682ed491d39",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f69af053dcaee472a9d2391db22cd682ed491d39",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c"
        ],
        "message": "Fix harmless compiler warnings.\n\nFossilOrigin-Name: 3ff220ad378d547538b4501e6b2201e835a2c66891e5e40856db377c101a50e5",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b10df2b569e356551cf51ca179f307e4f8827413ee9feb886db1f1e0650e6c5f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3805:   idx = getVarint32(aKey, szHdr);",
          "3806:   d = szHdr;",
          "3807:   u = 0;",
          "3809:     u32 serial_type;",
          "3811:     idx += getVarint32(&aKey[idx], serial_type);",
          "",
          "[Removed Lines]",
          "3808:   while( idx<szHdr && d<=nKey ){",
          "",
          "[Added Lines]",
          "3808:   while( idx<szHdr && d<=(u32)nKey ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3818:     pMem++;",
          "3819:     if( (++u)>=p->nField ) break;",
          "3820:   }",
          "3822:     assert( CORRUPT_DB );",
          "",
          "[Removed Lines]",
          "3821:   if( d>nKey && u ){",
          "",
          "[Added Lines]",
          "3821:   if( d>(u32)nKey && u ){",
          "",
          "---------------"
        ]
      }
    }
  ]
}