{
  "cve_id": "CVE-2014-3538",
  "cve_desc": "file before 5.19 does not properly restrict the amount of data read during a regex search, which allows remote attackers to cause a denial of service (CPU consumption) via a crafted file that triggers backtracking during processing of an awk rule.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7345.",
  "repo": "file/file",
  "patch_hash": "74cafd7de9ec99a14f4480927580e501c8f852c3",
  "patch_info": {
    "commit_hash": "74cafd7de9ec99a14f4480927580e501c8f852c3",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/74cafd7de9ec99a14f4480927580e501c8f852c3",
    "files": [
      "src/softmagic.c"
    ],
    "message": "If requested, limit search length.",
    "before_after_code_files": [
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.187 2014/05/13 16:42:17 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.188 2014/05/14 23:15:42 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1929:    file_regerror(&rx, rc, ms);",
      "1930:    v = (uint64_t)-1;",
      "1931:   } else {",
      "1932:    regmatch_t pmatch[1];",
      "1933: #ifndef REG_STARTEND",
      "1934: #define REG_STARTEND 0",
      "1938: #else",
      "1939:    pmatch[0].rm_so = 0;",
      "1941: #endif",
      "1942:    rc = file_regexec(&rx, (const char *)ms->search.s,",
      "1943:        1, pmatch, REG_STARTEND);",
      "",
      "[Removed Lines]",
      "1935:    size_t l = ms->search.s_len - 1;",
      "1936:    char c = ms->search.s[l];",
      "1937:    ((char *)(intptr_t)ms->search.s)[l] = '\\0';",
      "1940:    pmatch[0].rm_eo = ms->search.s_len;",
      "",
      "[Added Lines]",
      "1932: #ifndef REG_STARTEND",
      "1933:    char c;",
      "1934: #endif",
      "1936:    size_t slen = ms->search.s_len;",
      "1938:    if (m->str_range > 0)",
      "1939:     slen = MIN(slen, m->str_range);",
      "1942:    if (slen != 0)",
      "1943:     slen--;",
      "1944:    c = ms->search.s[slen];",
      "1945:    ((char *)(intptr_t)ms->search.s)[slen] = '\\0';",
      "1948:    pmatch[0].rm_eo = slen;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "af7c95ec08af7bf7e5f03fb38af8e14b64116123",
      "candidate_info": {
        "commit_hash": "af7c95ec08af7bf7e5f03fb38af8e14b64116123",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/af7c95ec08af7bf7e5f03fb38af8e14b64116123",
        "files": [
          "src/softmagic.c"
        ],
        "message": "- Add some debugging code to print incorrect formats. - Fix \"long\" formats which in magic \"long\" == 32 bit, which is not   what \"long\" means in \"C\".",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "40: #include <assert.h>",
          "41: #include <string.h>",
          "42: #include <ctype.h>",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.179 2014/03/06 15:23:16 christos Exp $\")",
          "39: #define F(a, b) fmtcheck((a), (b))",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.180 2014/03/15 21:47:40 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:  return 0;",
          "89: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90: #define FILE_FMTDEBUG",
          "91: #ifdef FILE_FMTDEBUG",
          "92: #define F(a, b, c) file_fmtcheck((a), (b), (c), __FILE__, __LINE__)",
          "93: #else",
          "94: #define F(a, b) fmtcheck((b)->desc, (c))",
          "95: #endif",
          "97: private const char * __attribute__((__format_arg__(3)))",
          "98: file_fmtcheck(struct magic_set *ms, const struct magic *m, const char *def,",
          "99:  const char *file, size_t line)",
          "100: {",
          "101:  const char *ptr = fmtcheck(m->desc, def);",
          "102:  if (ptr == def)",
          "103:   file_magerror(ms,",
          "104:       \"%s, %zu: format `%s' does not match with `%s'\",",
          "105:       file, line, m->desc, def);",
          "106:  return ptr;",
          "107: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "411:   case 1:",
          "412:    (void)snprintf(buf, sizeof(buf), \"%c\",",
          "413:        (unsigned char)v);",
          "415:     return -1;",
          "416:    break;",
          "417:   default:",
          "419:        (unsigned char) v) == -1)",
          "420:     return -1;",
          "421:    break;",
          "",
          "[Removed Lines]",
          "414:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "418:    if (file_printf(ms, F(m->desc, \"%c\"),",
          "",
          "[Added Lines]",
          "432:    if (file_printf(ms, F(ms, m, \"%s\"), buf) == -1)",
          "436:    if (file_printf(ms, F(ms, m, \"%c\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "433:   case 1:",
          "434:    (void)snprintf(buf, sizeof(buf), \"%hu\",",
          "435:        (unsigned short)v);",
          "437:     return -1;",
          "438:    break;",
          "439:   default:",
          "441:        (unsigned short) v) == -1)",
          "442:     return -1;",
          "443:    break;",
          "",
          "[Removed Lines]",
          "436:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "440:    if (file_printf(ms, F(m->desc, \"%hu\"),",
          "",
          "[Added Lines]",
          "454:    if (file_printf(ms, F(ms, m, \"%s\"), buf) == -1)",
          "458:    if (file_printf(ms, F(ms, m, \"%hu\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "454:   case -1:",
          "455:    return -1;",
          "456:   case 1:",
          "459:     return -1;",
          "460:    break;",
          "461:   default:",
          "464:     return -1;",
          "465:    break;",
          "466:   }",
          "",
          "[Removed Lines]",
          "457:    (void)snprintf(buf, sizeof(buf), \"%u\", (uint32_t)v);",
          "458:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "462:    if (file_printf(ms, F(m->desc, \"%u\"),",
          "463:        (uint32_t) v) == -1)",
          "",
          "[Added Lines]",
          "475:    (void)snprintf(buf, sizeof(buf), \"%lu\",",
          "476:        (unsigned long)(uint32_t) v);",
          "477:    if (file_printf(ms, F(ms, m, \"%s\"), buf) == -1)",
          "481:    if (file_printf(ms, F(ms, m, \"%lu\"),",
          "482:        (unsigned long)(uint32_t) v) == -1)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "477:   case 1:",
          "478:    (void)snprintf(buf, sizeof(buf), \"%llu\",",
          "479:        (unsigned long long)v);",
          "481:     return -1;",
          "482:    break;",
          "483:   default:",
          "485:        (unsigned long long) v) == -1)",
          "486:     return -1;",
          "487:    break;",
          "",
          "[Removed Lines]",
          "480:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "484:    if (file_printf(ms, F(m->desc, \"%llu\"),",
          "",
          "[Added Lines]",
          "499:    if (file_printf(ms, F(ms, m, \"%s\"), buf) == -1)",
          "503:    if (file_printf(ms, F(ms, m, \"%llu\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "494:    case FILE_BESTRING16:",
          "495:    case FILE_LESTRING16:",
          "496:   if (m->reln == '=' || m->reln == '!') {",
          "498:     return -1;",
          "499:    t = ms->offset + m->vallen;",
          "500:   }",
          "",
          "[Removed Lines]",
          "497:    if (file_printf(ms, F(m->desc, \"%s\"), m->value.s) == -1)",
          "",
          "[Added Lines]",
          "516:    if (file_printf(ms, F(ms, m, \"%s\"), m->value.s) == -1)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "521:    }",
          "524:     return -1;",
          "526:    if (m->type == FILE_PSTRING)",
          "",
          "[Removed Lines]",
          "523:    if (file_printf(ms, F(m->desc, \"%s\"), str) == -1)",
          "",
          "[Added Lines]",
          "542:    if (file_printf(ms, F(ms, m, \"%s\"), str) == -1)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "532:  case FILE_BEDATE:",
          "533:  case FILE_LEDATE:",
          "534:  case FILE_MEDATE:",
          "536:       file_fmttime(p->l, FILE_T_LOCAL, tbuf)) == -1)",
          "537:    return -1;",
          "538:   t = ms->offset + sizeof(uint32_t);",
          "",
          "[Removed Lines]",
          "535:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "",
          "[Added Lines]",
          "554:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "542:  case FILE_BELDATE:",
          "543:  case FILE_LELDATE:",
          "544:  case FILE_MELDATE:",
          "546:       file_fmttime(p->l, 0, tbuf)) == -1)",
          "547:    return -1;",
          "548:   t = ms->offset + sizeof(uint32_t);",
          "",
          "[Removed Lines]",
          "545:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "",
          "[Added Lines]",
          "564:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "551:  case FILE_QDATE:",
          "552:  case FILE_BEQDATE:",
          "553:  case FILE_LEQDATE:",
          "555:       file_fmttime(p->q, FILE_T_LOCAL, tbuf)) == -1)",
          "556:    return -1;",
          "557:   t = ms->offset + sizeof(uint64_t);",
          "",
          "[Removed Lines]",
          "554:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "",
          "[Added Lines]",
          "573:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "560:  case FILE_QLDATE:",
          "561:  case FILE_BEQLDATE:",
          "562:  case FILE_LEQLDATE:",
          "564:       file_fmttime(p->q, 0, tbuf)) == -1)",
          "565:    return -1;",
          "566:   t = ms->offset + sizeof(uint64_t);",
          "",
          "[Removed Lines]",
          "563:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "",
          "[Added Lines]",
          "582:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "569:  case FILE_QWDATE:",
          "570:  case FILE_BEQWDATE:",
          "571:  case FILE_LEQWDATE:",
          "573:       file_fmttime(p->q, FILE_T_WINDOWS, tbuf)) == -1)",
          "574:    return -1;",
          "575:   t = ms->offset + sizeof(uint64_t);",
          "",
          "[Removed Lines]",
          "572:   if (file_printf(ms, F(m->desc, \"%s\"),",
          "",
          "[Added Lines]",
          "591:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "584:    return -1;",
          "585:   case 1:",
          "586:    (void)snprintf(buf, sizeof(buf), \"%g\", vf);",
          "588:     return -1;",
          "589:    break;",
          "590:   default:",
          "592:     return -1;",
          "593:    break;",
          "594:   }",
          "",
          "[Removed Lines]",
          "587:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "591:    if (file_printf(ms, F(m->desc, \"%g\"), vf) == -1)",
          "",
          "[Added Lines]",
          "606:    if (file_printf(ms, F(ms, m, \"%s\"), buf) == -1)",
          "610:    if (file_printf(ms, F(ms, m, \"%g\"), vf) == -1)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "604:    return -1;",
          "605:   case 1:",
          "606:    (void)snprintf(buf, sizeof(buf), \"%g\", vd);",
          "608:     return -1;",
          "609:    break;",
          "610:   default:",
          "612:     return -1;",
          "613:    break;",
          "614:   }",
          "",
          "[Removed Lines]",
          "607:    if (file_printf(ms, F(m->desc, \"%s\"), buf) == -1)",
          "611:    if (file_printf(ms, F(m->desc, \"%g\"), vd) == -1)",
          "",
          "[Added Lines]",
          "626:    if (file_printf(ms, F(ms, m, \"%s\"), buf) == -1)",
          "630:    if (file_printf(ms, F(ms, m, \"%g\"), vd) == -1)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "624:    file_oomem(ms, ms->search.rm_len);",
          "625:    return -1;",
          "626:   }",
          "628:   free(cp);",
          "630:   if (rval == -1)",
          "",
          "[Removed Lines]",
          "627:   rval = file_printf(ms, F(m->desc, \"%s\"), cp);",
          "",
          "[Added Lines]",
          "646:   rval = file_printf(ms, F(ms, m, \"%s\"), cp);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "638:  }",
          "640:  case FILE_SEARCH:",
          "642:    return -1;",
          "643:   if ((m->str_flags & REGEX_OFFSET_START))",
          "644:    t = ms->search.offset;",
          "",
          "[Removed Lines]",
          "641:     if (file_printf(ms, F(m->desc, \"%s\"), m->value.s) == -1)",
          "",
          "[Added Lines]",
          "660:     if (file_printf(ms, F(ms, m, \"%s\"), m->value.s) == -1)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1756:   ms->offset = soffset;",
          "1757:   if (rv == 1) {",
          "1758:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&",
          "1760:     free(rbuf);",
          "1761:     return -1;",
          "1762:    }",
          "",
          "[Removed Lines]",
          "1759:        file_printf(ms, F(m->desc, \"%u\"), offset) == -1) {",
          "",
          "[Added Lines]",
          "1778:        file_printf(ms, F(ms, m, \"%u\"), offset) == -1) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c081560c23f20b2985c285338b52c7aae9fdb0f",
      "candidate_info": {
        "commit_hash": "3c081560c23f20b2985c285338b52c7aae9fdb0f",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/3c081560c23f20b2985c285338b52c7aae9fdb0f",
        "files": [
          "src/softmagic.c"
        ],
        "message": "prevent infinite recursion.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.171 2014/01/08 22:02:06 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.172 2014/01/08 22:22:54 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1738:   break;",
          "1740:  case FILE_INDIRECT:",
          "1741:   if (OFFSET_OOB(nbytes, offset, 0))",
          "1742:    return 0;",
          "1743:   sbuf = ms->o.buf;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1741:   if (offset == 0)",
          "1742:    return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c397fb230f70cfa1dc8f3d387f4df8ebec6c1a63",
      "candidate_info": {
        "commit_hash": "c397fb230f70cfa1dc8f3d387f4df8ebec6c1a63",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/c397fb230f70cfa1dc8f3d387f4df8ebec6c1a63",
        "files": [
          "ChangeLog",
          "src/funcs.c",
          "src/readcdf.c",
          "src/softmagic.c"
        ],
        "message": "Cache old LC_CTYPE locale for restoring it later.\n\nCache old LC_CTYPE locale before setting it to \"C\", so\nwe can use it to restore LC_CTYPE instead of asking\nsetlocale() to scan the environment variables.",
        "before_after_code_files": [
          "src/funcs.c||src/funcs.c",
          "src/readcdf.c||src/readcdf.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "34: #include <stdarg.h>",
          "35: #include <stdlib.h>",
          "36: #include <string.h>",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.66 2014/01/07 03:15:09 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.67 2014/02/12 23:20:53 christos Exp $\")",
          "34: #include <assert.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "442: {",
          "443:  regex_t rx;",
          "444:  int rc, rv = -1;",
          "446:  (void)setlocale(LC_CTYPE, \"C\");",
          "447:  rc = regcomp(&rx, pat, REG_EXTENDED);",
          "448:  if (rc) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "446:  char *old_lc_ctype;",
          "448:  old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "449:  assert(old_lc_ctype != NULL);",
          "450:  old_lc_ctype = strdup(old_lc_ctype);",
          "451:  assert(old_lc_ctype != NULL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "463:   rv = nm;",
          "464:  }",
          "465: out:",
          "467:  return rv;",
          "468: }",
          "",
          "[Removed Lines]",
          "466:  (void)setlocale(LC_CTYPE, \"\");",
          "",
          "[Added Lines]",
          "472:  (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "473:  free(old_lc_ctype);",
          "",
          "---------------"
        ],
        "src/readcdf.c||src/readcdf.c": [
          "File: src/readcdf.c -> src/readcdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"file.h\"",
          "28: #ifndef lint",
          "30: #endif",
          "32: #include <stdlib.h>",
          "33: #include <unistd.h>",
          "34: #include <string.h>",
          "",
          "[Removed Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.36 2013/12/05 17:02:34 christos Exp $\")",
          "",
          "[Added Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
          "32: #include <assert.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74: {",
          "75:  size_t i;",
          "76:  const char *rv = NULL;",
          "78:  (void)setlocale(LC_CTYPE, \"C\");",
          "79:  for (i = 0; nv[i].pattern != NULL; i++)",
          "80:   if (strcasestr(vbuf, nv[i].pattern) != NULL) {",
          "81:    rv = nv[i].mime;",
          "82:    break;",
          "83:   }",
          "85:  return rv;",
          "86: }",
          "",
          "[Removed Lines]",
          "84:  (void)setlocale(LC_CTYPE, \"\");",
          "",
          "[Added Lines]",
          "78:  char *old_lc_ctype;",
          "80:  old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "81:  assert(old_lc_ctype != NULL);",
          "82:  old_lc_ctype = strdup(old_lc_ctype);",
          "83:  assert(old_lc_ctype != NULL);",
          "90:  (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "91:  free(old_lc_ctype);",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.173 2014/02/11 15:41:25 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.174 2014/02/12 23:20:53 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42: #else",
          "43: #define F(a, b) (a)",
          "44: #endif",
          "45: #include <string.h>",
          "46: #include <ctype.h>",
          "47: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: #include <assert.h>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352: {",
          "353:  regex_t rx;",
          "354:  int rc, rv = -1;",
          "356:  if (strchr(m->desc, '%') == NULL)",
          "357:   return 0;",
          "359:  (void)setlocale(LC_CTYPE, \"C\");",
          "360:  rc = regcomp(&rx, \"%[-0-9\\\\.]*s\", REG_EXTENDED|REG_NOSUB);",
          "361:  if (rc) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "356:  char *old_lc_ctype;",
          "361:  old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "362:  assert(old_lc_ctype != NULL);",
          "363:  old_lc_ctype = strdup(old_lc_ctype);",
          "364:  assert(old_lc_ctype != NULL);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "367:   regfree(&rx);",
          "368:   rv = !rc;",
          "369:  }",
          "371:  return rv;",
          "372: }",
          "",
          "[Removed Lines]",
          "370:  (void)setlocale(LC_CTYPE, \"\");",
          "",
          "[Added Lines]",
          "376:  (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "377:  free(old_lc_ctype);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "447558595a3650db2886cd2f416ad0beba965801",
      "candidate_info": {
        "commit_hash": "447558595a3650db2886cd2f416ad0beba965801",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/447558595a3650db2886cd2f416ad0beba965801",
        "files": [
          "src/softmagic.c"
        ],
        "message": "PR/313: Aaron Reffett: Check properly for exceeding the offset.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.170 2014/01/06 02:25:32 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.171 2014/01/08 22:02:06 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71: private void cvt_32(union VALUETYPE *, const struct magic *);",
          "72: private void cvt_64(union VALUETYPE *, const struct magic *);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) >= ((n) - (o)))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1223:   }",
          "1224:   switch (in_type = cvt_flip(m->in_type, flip)) {",
          "1225:   case FILE_BYTE:",
          "1227:     return 0;",
          "1228:    if (off) {",
          "1229:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1226:    if (nbytes < offset || nbytes < (offset + 1))",
          "",
          "[Added Lines]",
          "1227:    if (OFFSET_OOB(nbytes, offset, 1))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1258:     offset = ~offset;",
          "1259:    break;",
          "1260:   case FILE_BESHORT:",
          "1262:     return 0;",
          "1263:    if (off) {",
          "1264:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1261:    if (nbytes < offset || nbytes < (offset + 2))",
          "",
          "[Added Lines]",
          "1262:    if (OFFSET_OOB(nbytes, offset, 2))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1310:     offset = ~offset;",
          "1311:    break;",
          "1312:   case FILE_LESHORT:",
          "1314:     return 0;",
          "1315:    if (off) {",
          "1316:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1313:    if (nbytes < offset || nbytes < (offset + 2))",
          "",
          "[Added Lines]",
          "1314:    if (OFFSET_OOB(nbytes, offset, 2))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1362:     offset = ~offset;",
          "1363:    break;",
          "1364:   case FILE_SHORT:",
          "1366:     return 0;",
          "1367:    if (off) {",
          "1368:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1365:    if (nbytes < offset || nbytes < (offset + 2))",
          "",
          "[Added Lines]",
          "1366:    if (OFFSET_OOB(nbytes, offset, 2))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1399:    break;",
          "1400:   case FILE_BELONG:",
          "1401:   case FILE_BEID3:",
          "1403:     return 0;",
          "1404:    if (off) {",
          "1405:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1402:    if (nbytes < offset || nbytes < (offset + 4))",
          "",
          "[Added Lines]",
          "1403:    if (OFFSET_OOB(nbytes, offset, 4))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1470:    break;",
          "1471:   case FILE_LELONG:",
          "1472:   case FILE_LEID3:",
          "1474:     return 0;",
          "1475:    if (off) {",
          "1476:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1473:    if (nbytes < offset || nbytes < (offset + 4))",
          "",
          "[Added Lines]",
          "1474:    if (OFFSET_OOB(nbytes, offset, 4))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1540:     offset = ~offset;",
          "1541:    break;",
          "1542:   case FILE_MELONG:",
          "1544:     return 0;",
          "1545:    if (off) {",
          "1546:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1543:    if (nbytes < offset || nbytes < (offset + 4))",
          "",
          "[Added Lines]",
          "1544:    if (OFFSET_OOB(nbytes, offset, 4))",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1610:     offset = ~offset;",
          "1611:    break;",
          "1612:   case FILE_LONG:",
          "1614:     return 0;",
          "1615:    if (off) {",
          "1616:     switch (m->in_op & FILE_OPS_MASK) {",
          "",
          "[Removed Lines]",
          "1613:    if (nbytes < offset || nbytes < (offset + 4))",
          "",
          "[Added Lines]",
          "1614:    if (OFFSET_OOB(nbytes, offset, 4))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1688:  switch (m->type) {",
          "1689:  case FILE_BYTE:",
          "1691:    return 0;",
          "1692:   break;",
          "1694:  case FILE_SHORT:",
          "1695:  case FILE_BESHORT:",
          "1696:  case FILE_LESHORT:",
          "1698:    return 0;",
          "1699:   break;",
          "",
          "[Removed Lines]",
          "1697:   if (nbytes < (offset + 2))",
          "",
          "[Added Lines]",
          "1691:   if (OFFSET_OOB(nbytes, offset, 1))",
          "1698:   if (OFFSET_OOB(nbytes, offset, 2))",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1713:  case FILE_FLOAT:",
          "1714:  case FILE_BEFLOAT:",
          "1715:  case FILE_LEFLOAT:",
          "1717:    return 0;",
          "1718:   break;",
          "1720:  case FILE_DOUBLE:",
          "1721:  case FILE_BEDOUBLE:",
          "1722:  case FILE_LEDOUBLE:",
          "1724:    return 0;",
          "1725:   break;",
          "1727:  case FILE_STRING:",
          "1728:  case FILE_PSTRING:",
          "1729:  case FILE_SEARCH:",
          "1731:    return 0;",
          "1732:   break;",
          "1734:  case FILE_REGEX:",
          "1736:    return 0;",
          "1737:   break;",
          "1739:  case FILE_INDIRECT:",
          "1741:    return 0;",
          "1742:   sbuf = ms->o.buf;",
          "1743:   soffset = ms->offset;",
          "",
          "[Removed Lines]",
          "1716:   if (nbytes < (offset + 4))",
          "1723:   if (nbytes < (offset + 8))",
          "1730:   if (nbytes < (offset + m->vallen))",
          "1735:   if (nbytes < offset)",
          "1740:   if (nbytes < offset)",
          "",
          "[Added Lines]",
          "1717:   if (OFFSET_OOB(nbytes, offset, 4))",
          "1724:   if (OFFSET_OOB(nbytes, offset, 8))",
          "1731:   if (OFFSET_OOB(nbytes, offset, m->vallen))",
          "1736:   if (OFFSET_OOB(nbytes, offset, 0))",
          "1741:   if (OFFSET_OOB(nbytes, offset, 0))",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1761:   return rv;",
          "1763:  case FILE_USE:",
          "1765:    return 0;",
          "1766:   sbuf = m->value.s;",
          "1767:   if (*sbuf == '^') {",
          "",
          "[Removed Lines]",
          "1764:   if (nbytes < offset)",
          "",
          "[Added Lines]",
          "1765:   if (OFFSET_OOB(nbytes, offset, 0))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "83ee9673286e441ceae61a2ae055899902efae1e",
      "candidate_info": {
        "commit_hash": "83ee9673286e441ceae61a2ae055899902efae1e",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/83ee9673286e441ceae61a2ae055899902efae1e",
        "files": [
          "src/apprentice.c",
          "src/softmagic.c"
        ],
        "message": "Roman I Khimov: Remove useless assignments found by clang static analysis.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.207 2014/05/04 18:57:35 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.208 2014/05/06 16:07:23 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "783:   break;",
          "785:  default:",
          "787:   (void)fprintf(stderr, \"Bad type %d\\n\", m->type);",
          "788:   abort();",
          "789:  }",
          "",
          "[Removed Lines]",
          "786:   val = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.185 2014/04/30 21:41:02 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.186 2014/05/05 20:53:10 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1835:    break;",
          "1837:   default:",
          "1839:    file_magerror(ms, \"cannot happen with float: invalid relation `%c'\",",
          "1840:        m->reln);",
          "1841:    return -1;",
          "",
          "[Removed Lines]",
          "1838:    matched = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1869:    break;",
          "1871:   default:",
          "1873:    file_magerror(ms, \"cannot happen with double: invalid relation `%c'\", m->reln);",
          "1874:    return -1;",
          "1875:   }",
          "",
          "[Removed Lines]",
          "1872:    matched = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2062:   break;",
          "2064:  default:",
          "2066:   file_magerror(ms, \"cannot happen: invalid relation `%c'\",",
          "2067:       m->reln);",
          "2068:   return -1;",
          "",
          "[Removed Lines]",
          "2065:   matched = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}