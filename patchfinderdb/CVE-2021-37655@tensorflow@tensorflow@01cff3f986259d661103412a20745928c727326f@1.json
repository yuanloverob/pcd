{
  "cve_id": "CVE-2021-37655",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a read from outside of bounds of heap allocated data by sending invalid arguments to `tf.raw_ops.ResourceScatterUpdate`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L919-L923) has an incomplete validation of the relationship between the shapes of `indices` and `updates`: instead of checking that the shape of `indices` is a prefix of the shape of `updates` (so that broadcasting can happen), code only checks that the number of elements in these two tensors are in a divisibility relationship. We have patched the issue in GitHub commit 01cff3f986259d661103412a20745928c727326f. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "01cff3f986259d661103412a20745928c727326f",
  "patch_info": {
    "commit_hash": "01cff3f986259d661103412a20745928c727326f",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/01cff3f986259d661103412a20745928c727326f",
    "files": [
      "tensorflow/core/kernels/resource_variable_ops.cc"
    ],
    "message": "Fix heap OOB due to dimension mismatch in `ResourceScatterUpdate`\n\nPiperOrigin-RevId: 388292801\nChange-Id: Id9bd7244d98d41b1517d4771850b32782c0cc949",
    "before_after_code_files": [
      "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc": [
      "File: tensorflow/core/kernels/resource_variable_ops.cc -> tensorflow/core/kernels/resource_variable_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "955:                         params->dim_size(0), \")\"));",
      "956:       } else {",
      "957:         int64_t num_updates = updates.NumElements();",
      "963:         auto updates_flat = updates.shaped<T, 2>({N, num_updates / N});",
      "965:         functor::ScatterFunctor<Device, T, Index, op> functor;",
      "",
      "[Removed Lines]",
      "958:         OP_REQUIRES(c, num_updates % N == 0,",
      "959:                     errors::InvalidArgument(",
      "960:                         \"shape of indices (\", indices.shape().DebugString(),",
      "961:                         \") is not compatible with the shape of updates (\",",
      "962:                         updates.shape().DebugString(), \")\"));",
      "",
      "[Added Lines]",
      "958:         OP_REQUIRES(",
      "959:             c, TensorShapeUtils::StartsWith(updates.shape(), indices.shape()),",
      "960:             errors::InvalidArgument(",
      "961:                 \"The shape of indices (\", indices.shape().DebugString(),",
      "962:                 \") must be a prefix of the shape of updates (\",",
      "963:                 updates.shape().DebugString(), \")\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5b23ba9e05478646316ef6f6b22ee5135e4da043",
      "candidate_info": {
        "commit_hash": "5b23ba9e05478646316ef6f6b22ee5135e4da043",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5b23ba9e05478646316ef6f6b22ee5135e4da043",
        "files": [
          "tensorflow/core/kernels/resource_variable_ops.cc"
        ],
        "message": "Fix heap OOB due to dimension mismatch in `ResourceScatterUpdate`\n\nPiperOrigin-RevId: 388292801\nChange-Id: Id9bd7244d98d41b1517d4771850b32782c0cc949",
        "before_after_code_files": [
          "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc": [
          "File: tensorflow/core/kernels/resource_variable_ops.cc -> tensorflow/core/kernels/resource_variable_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "990:                         params->dim_size(0), \")\"));",
          "991:       } else {",
          "992:         int64 num_updates = updates.NumElements();",
          "998:         auto updates_flat = updates.shaped<T, 2>({N, num_updates / N});",
          "1000:         functor::ScatterFunctor<Device, T, Index, op> functor;",
          "",
          "[Removed Lines]",
          "993:         OP_REQUIRES(c, num_updates % N == 0,",
          "994:                     errors::InvalidArgument(",
          "995:                         \"shape of indices (\", indices.shape().DebugString(),",
          "996:                         \") is not compatible with the shape of updates (\",",
          "997:                         updates.shape().DebugString(), \")\"));",
          "",
          "[Added Lines]",
          "993:         OP_REQUIRES(",
          "994:             c, TensorShapeUtils::StartsWith(updates.shape(), indices.shape()),",
          "995:             errors::InvalidArgument(",
          "996:                 \"The shape of indices (\", indices.shape().DebugString(),",
          "997:                 \") must be a prefix of the shape of updates (\",",
          "998:                 updates.shape().DebugString(), \")\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ceaa513cd6b10ac4e50d32cc2c96877563683817",
      "candidate_info": {
        "commit_hash": "ceaa513cd6b10ac4e50d32cc2c96877563683817",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ceaa513cd6b10ac4e50d32cc2c96877563683817",
        "files": [
          "tensorflow/core/kernels/resource_variable_ops.cc"
        ],
        "message": "Fix heap OOB due to dimension mismatch in `ResourceScatterUpdate`\n\nPiperOrigin-RevId: 388292801\nChange-Id: Id9bd7244d98d41b1517d4771850b32782c0cc949",
        "before_after_code_files": [
          "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc": [
          "File: tensorflow/core/kernels/resource_variable_ops.cc -> tensorflow/core/kernels/resource_variable_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "973:                         params->dim_size(0), \")\"));",
          "974:       } else {",
          "975:         int64 num_updates = updates.NumElements();",
          "981:         auto updates_flat = updates.shaped<T, 2>({N, num_updates / N});",
          "983:         functor::ScatterFunctor<Device, T, Index, op> functor;",
          "",
          "[Removed Lines]",
          "976:         OP_REQUIRES(c, num_updates % N == 0,",
          "977:                     errors::InvalidArgument(",
          "978:                         \"shape of indices (\", indices.shape().DebugString(),",
          "979:                         \") is not compatible with the shape of updates (\",",
          "980:                         updates.shape().DebugString(), \")\"));",
          "",
          "[Added Lines]",
          "976:         OP_REQUIRES(",
          "977:             c, TensorShapeUtils::StartsWith(updates.shape(), indices.shape()),",
          "978:             errors::InvalidArgument(",
          "979:                 \"The shape of indices (\", indices.shape().DebugString(),",
          "980:                 \") must be a prefix of the shape of updates (\",",
          "981:                 updates.shape().DebugString(), \")\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "beb3ae50e557a999521d2b701a393eafdfb6ca89",
      "candidate_info": {
        "commit_hash": "beb3ae50e557a999521d2b701a393eafdfb6ca89",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/beb3ae50e557a999521d2b701a393eafdfb6ca89",
        "files": [
          "tensorflow/core/kernels/resource_variable_ops.cc"
        ],
        "message": "Fix heap OOB due to dimension mismatch in `ResourceScatterUpdate`\n\nPiperOrigin-RevId: 388292801\nChange-Id: Id9bd7244d98d41b1517d4771850b32782c0cc949",
        "before_after_code_files": [
          "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/resource_variable_ops.cc||tensorflow/core/kernels/resource_variable_ops.cc": [
          "File: tensorflow/core/kernels/resource_variable_ops.cc -> tensorflow/core/kernels/resource_variable_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "972:                         params->dim_size(0), \")\"));",
          "973:       } else {",
          "974:         int64 num_updates = updates.NumElements();",
          "980:         auto updates_flat = updates.shaped<T, 2>({N, num_updates / N});",
          "982:         functor::ScatterFunctor<Device, T, Index, op> functor;",
          "",
          "[Removed Lines]",
          "975:         OP_REQUIRES(c, num_updates % N == 0,",
          "976:                     errors::InvalidArgument(",
          "977:                         \"shape of indices (\", indices.shape().DebugString(),",
          "978:                         \") is not compatible with the shape of updates (\",",
          "979:                         updates.shape().DebugString(), \")\"));",
          "",
          "[Added Lines]",
          "975:         OP_REQUIRES(",
          "976:             c, TensorShapeUtils::StartsWith(updates.shape(), indices.shape()),",
          "977:             errors::InvalidArgument(",
          "978:                 \"The shape of indices (\", indices.shape().DebugString(),",
          "979:                 \") must be a prefix of the shape of updates (\",",
          "980:                 updates.shape().DebugString(), \")\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}