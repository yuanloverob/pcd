{
  "cve_id": "CVE-2021-29569",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. The implementation of `tf.raw_ops.MaxPoolGradWithArgmax` can cause reads outside of bounds of heap allocated data if attacker supplies specially crafted inputs. The implementation(https://github.com/tensorflow/tensorflow/blob/ac328eaa3870491ababc147822cd04e91a790643/tensorflow/core/kernels/requantization_range_op.cc#L49-L50) assumes that the `input_min` and `input_max` tensors have at least one element, as it accesses the first element in two arrays. If the tensors are empty, `.flat<T>()` is an empty object, backed by an empty array. Hence, accesing even the 0th element is a read outside the bounds. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "ef0c008ee84bad91ec6725ddc42091e19a30cf0e",
  "patch_info": {
    "commit_hash": "ef0c008ee84bad91ec6725ddc42091e19a30cf0e",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/ef0c008ee84bad91ec6725ddc42091e19a30cf0e",
    "files": [
      "tensorflow/core/kernels/requantization_range_op.cc"
    ],
    "message": "Fix out of bound read in requantization_range_op.cc\n\nPiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d",
    "before_after_code_files": [
      "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc": [
      "File: tensorflow/core/kernels/requantization_range_op.cc -> tensorflow/core/kernels/requantization_range_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "47:   void Compute(OpKernelContext* ctx) override {",
      "48:     const Tensor& input = ctx->input(0);",
      "49:     const float input_min_float = ctx->input(1).flat<float>()(0);",
      "50:     const float input_max_float = ctx->input(2).flat<float>()(0);",
      "51:     Tensor* output_min = nullptr;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49:     OP_REQUIRES(ctx, ctx->input(1).NumElements() > 0,",
      "50:                 errors::InvalidArgument(\"Input min must not be empty.\"));",
      "51:     OP_REQUIRES(ctx, ctx->input(2).NumElements() > 0,",
      "52:                 errors::InvalidArgument(\"Input max must not be empty.\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ff43d9d25b0264c78eb6c1c67a2ccaee4a715965",
      "candidate_info": {
        "commit_hash": "ff43d9d25b0264c78eb6c1c67a2ccaee4a715965",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ff43d9d25b0264c78eb6c1c67a2ccaee4a715965",
        "files": [
          "tensorflow/core/kernels/requantization_range_op.cc"
        ],
        "message": "Fix out of bound read in requantization_range_op.cc\n\nPiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d",
        "before_after_code_files": [
          "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc": [
          "File: tensorflow/core/kernels/requantization_range_op.cc -> tensorflow/core/kernels/requantization_range_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   void Compute(OpKernelContext* ctx) override {",
          "48:     const Tensor& input = ctx->input(0);",
          "49:     const float input_min_float = ctx->input(1).flat<float>()(0);",
          "50:     const float input_max_float = ctx->input(2).flat<float>()(0);",
          "51:     Tensor* output_min = nullptr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     OP_REQUIRES(ctx, ctx->input(1).NumElements() > 0,",
          "50:                 errors::InvalidArgument(\"Input min must not be empty.\"));",
          "51:     OP_REQUIRES(ctx, ctx->input(2).NumElements() > 0,",
          "52:                 errors::InvalidArgument(\"Input max must not be empty.\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "051b4c73e5c5e568a7632d765a7bdb3c071bef7e",
      "candidate_info": {
        "commit_hash": "051b4c73e5c5e568a7632d765a7bdb3c071bef7e",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/051b4c73e5c5e568a7632d765a7bdb3c071bef7e",
        "files": [
          "tensorflow/core/kernels/requantization_range_op.cc"
        ],
        "message": "Fix out of bound read in requantization_range_op.cc\n\nPiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d",
        "before_after_code_files": [
          "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc": [
          "File: tensorflow/core/kernels/requantization_range_op.cc -> tensorflow/core/kernels/requantization_range_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   void Compute(OpKernelContext* ctx) override {",
          "48:     const Tensor& input = ctx->input(0);",
          "49:     const float input_min_float = ctx->input(1).flat<float>()(0);",
          "50:     const float input_max_float = ctx->input(2).flat<float>()(0);",
          "51:     Tensor* output_min = nullptr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     OP_REQUIRES(ctx, ctx->input(1).NumElements() > 0,",
          "50:                 errors::InvalidArgument(\"Input min must not be empty.\"));",
          "51:     OP_REQUIRES(ctx, ctx->input(2).NumElements() > 0,",
          "52:                 errors::InvalidArgument(\"Input max must not be empty.\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c04d833ff0c34671a1adc04983846c2b4158420",
      "candidate_info": {
        "commit_hash": "3c04d833ff0c34671a1adc04983846c2b4158420",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/3c04d833ff0c34671a1adc04983846c2b4158420",
        "files": [
          "tensorflow/core/kernels/requantization_range_op.cc"
        ],
        "message": "Fix out of bound read in requantization_range_op.cc\n\nPiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d",
        "before_after_code_files": [
          "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc": [
          "File: tensorflow/core/kernels/requantization_range_op.cc -> tensorflow/core/kernels/requantization_range_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   void Compute(OpKernelContext* ctx) override {",
          "48:     const Tensor& input = ctx->input(0);",
          "49:     const float input_min_float = ctx->input(1).flat<float>()(0);",
          "50:     const float input_max_float = ctx->input(2).flat<float>()(0);",
          "51:     Tensor* output_min = nullptr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     OP_REQUIRES(ctx, ctx->input(1).NumElements() > 0,",
          "50:                 errors::InvalidArgument(\"Input min must not be empty.\"));",
          "51:     OP_REQUIRES(ctx, ctx->input(2).NumElements() > 0,",
          "52:                 errors::InvalidArgument(\"Input max must not be empty.\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5c60afa8fad3d0903c4938b4a194974120a20a43",
      "candidate_info": {
        "commit_hash": "5c60afa8fad3d0903c4938b4a194974120a20a43",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5c60afa8fad3d0903c4938b4a194974120a20a43",
        "files": [
          "tensorflow/core/kernels/requantization_range_op.cc"
        ],
        "message": "Fix out of bound read in requantization_range_op.cc\n\nPiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d",
        "before_after_code_files": [
          "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc": [
          "File: tensorflow/core/kernels/requantization_range_op.cc -> tensorflow/core/kernels/requantization_range_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   void Compute(OpKernelContext* ctx) override {",
          "48:     const Tensor& input = ctx->input(0);",
          "49:     const float input_min_float = ctx->input(1).flat<float>()(0);",
          "50:     const float input_max_float = ctx->input(2).flat<float>()(0);",
          "51:     Tensor* output_min = nullptr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     OP_REQUIRES(ctx, ctx->input(1).NumElements() > 0,",
          "50:                 errors::InvalidArgument(\"Input min must not be empty.\"));",
          "51:     OP_REQUIRES(ctx, ctx->input(2).NumElements() > 0,",
          "52:                 errors::InvalidArgument(\"Input max must not be empty.\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2b028d63551b82839d9ebf6f74a1bff957bc14b0",
      "candidate_info": {
        "commit_hash": "2b028d63551b82839d9ebf6f74a1bff957bc14b0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/2b028d63551b82839d9ebf6f74a1bff957bc14b0",
        "files": [
          "tensorflow/core/kernels/requantization_range_op.cc"
        ],
        "message": "Fix out of bound read in requantization_range_op.cc\n\nPiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d",
        "before_after_code_files": [
          "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/requantization_range_op.cc||tensorflow/core/kernels/requantization_range_op.cc": [
          "File: tensorflow/core/kernels/requantization_range_op.cc -> tensorflow/core/kernels/requantization_range_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   void Compute(OpKernelContext* ctx) override {",
          "48:     const Tensor& input = ctx->input(0);",
          "49:     const float input_min_float = ctx->input(1).flat<float>()(0);",
          "50:     const float input_max_float = ctx->input(2).flat<float>()(0);",
          "51:     Tensor* output_min = nullptr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     OP_REQUIRES(ctx, ctx->input(1).NumElements() > 0,",
          "50:                 errors::InvalidArgument(\"Input min must not be empty.\"));",
          "51:     OP_REQUIRES(ctx, ctx->input(2).NumElements() > 0,",
          "52:                 errors::InvalidArgument(\"Input max must not be empty.\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}