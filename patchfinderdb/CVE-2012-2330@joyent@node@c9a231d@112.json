{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fc6a9673c8ec6e22565bb5a837f33b845e5127ce",
      "candidate_info": {
        "commit_hash": "fc6a9673c8ec6e22565bb5a837f33b845e5127ce",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/fc6a9673c8ec6e22565bb5a837f33b845e5127ce",
        "files": [
          "lib/dgram.js"
        ],
        "message": "dgram: make setBroadcast() conform to v0.4 API\n\n- don't return a value",
        "before_after_code_files": [
          "lib/dgram.js||lidgram.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/dgram.js||lidgram.js": [
          "File: lib/dgram.js -> lidgram.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "225: Socket.prototype.setBroadcast = function(arg) {",
          "228:   }",
          "231: };",
          "",
          "[Removed Lines]",
          "226:   if (this._handle.setBroadcast((arg) ? 1 : 0) == -1) {",
          "227:       throw errnoException(errno, 'setBroadcast');",
          "230:   return true;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5e803219d84f75b5c24359360e84894d8763522c",
      "candidate_info": {
        "commit_hash": "5e803219d84f75b5c24359360e84894d8763522c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5e803219d84f75b5c24359360e84894d8763522c",
        "files": [
          "deps/uv/test/test-pipe-connect-error.c"
        ],
        "message": "update libuv to 702f905f73",
        "before_after_code_files": [
          "deps/uv/test/test-pipe-connect-error.c||deps/uv/test/test-pipe-connect-error.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/test/test-pipe-connect-error.c||deps/uv/test/test-pipe-connect-error.c": [
          "File: deps/uv/test/test-pipe-connect-error.c -> deps/uv/test/test-pipe-connect-error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: static void connect_cb_file(uv_connect_t* connect_req, int status) {",
          "54:   ASSERT(status == -1);",
          "56:   uv_close((uv_handle_t*)connect_req->handle, close_cb);",
          "57:   connect_cb_called++;",
          "58: }",
          "",
          "[Removed Lines]",
          "55:   ASSERT(uv_last_error(uv_default_loop()).code == UV_ENOTSOCK);",
          "",
          "[Added Lines]",
          "55:   ASSERT(uv_last_error(uv_default_loop()).code == UV_ENOTSOCK ||",
          "56:          uv_last_error(uv_default_loop()).code == UV_ECONNREFUSED);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51e66ec4102c64704553c9b646f11454496593ee",
      "candidate_info": {
        "commit_hash": "51e66ec4102c64704553c9b646f11454496593ee",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/51e66ec4102c64704553c9b646f11454496593ee",
        "files": [
          "common.gypi"
        ],
        "message": "Windows: turn off /Gm\n\nOtherwise multicode compile doesn't work.",
        "before_after_code_files": [
          "common.gypi||common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:               }],",
          "28:             ],",
          "29:             'Optimization': 0, # /Od, no optimization",
          "31:             'OmitFramePointers': 'false',",
          "32:             'BasicRuntimeChecks': 3, # /RTC1",
          "33:           },",
          "",
          "[Removed Lines]",
          "30:             'MinimalRebuild': 'true',",
          "",
          "[Added Lines]",
          "30:             'MinimalRebuild': 'false',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d0543c128839523e088f3ef3aeec88ee884b4e4",
      "candidate_info": {
        "commit_hash": "7d0543c128839523e088f3ef3aeec88ee884b4e4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7d0543c128839523e088f3ef3aeec88ee884b4e4",
        "files": [
          "src/node_crypto.cc",
          "test/simple/test-domain-crypto.js"
        ],
        "message": "crypto: make pbkdf2() compatible with domains",
        "before_after_code_files": [
          "src/node_crypto.cc||src/node_crypto.cc",
          "test/simple/test-domain-crypto.js||test/simple/test-domain-crypto.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4201:   size_t iter;",
          "4202:   char* key;",
          "4203:   size_t keylen;",
          "4205: };",
          "4207: void",
          "",
          "[Removed Lines]",
          "4204:   Persistent<Function> callback;",
          "",
          "[Added Lines]",
          "4204:   Persistent<Object> obj;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4236:     argv[1] = Local<Value>::New(Undefined());",
          "4237:   }",
          "4245:   delete[] request->pass;",
          "4246:   delete[] request->salt;",
          "4247:   delete[] request->key;",
          "4250:   delete request;",
          "4251: }",
          "",
          "[Removed Lines]",
          "4241:   MakeCallback(Context::GetCurrent()->Global(),",
          "4242:                request->callback,",
          "4243:                ARRAY_SIZE(argv), argv);",
          "4248:   request->callback.Dispose();",
          "",
          "[Added Lines]",
          "4239:   MakeCallback(request->obj, \"ondone\", ARRAY_SIZE(argv), argv);",
          "4244:   request->obj.Dispose();",
          "4245:   request->obj.Clear();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4267:   Local<Function> callback;",
          "4268:   pbkdf2_req* request = NULL;",
          "4269:   uv_work_t* req = NULL;",
          "4271:   if (args.Length() != 5) {",
          "4272:     type_error = \"Bad parameter\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4267:   Persistent<Object> obj;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4324:     goto err;",
          "4325:   }",
          "4329:   request = new pbkdf2_req;",
          "4330:   request->err = 0;",
          "",
          "[Removed Lines]",
          "4327:   callback = Local<Function>::Cast(args[4]);",
          "",
          "[Added Lines]",
          "4325:   obj = Persistent<Object>::New(Object::New());",
          "4326:   obj->Set(String::New(\"ondone\"), args[4]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4335:   request->iter = iter;",
          "4336:   request->key = key;",
          "4337:   request->keylen = keylen;",
          "4340:   req = new uv_work_t();",
          "4341:   req->data = request;",
          "",
          "[Removed Lines]",
          "4338:   request->callback = Persistent<Function>::New(callback);",
          "",
          "[Added Lines]",
          "4337:   request->obj = obj;",
          "",
          "---------------"
        ],
        "test/simple/test-domain-crypto.js||test/simple/test-domain-crypto.js": [
          "File: test/simple/test-domain-crypto.js -> test/simple/test-domain-crypto.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: crypto.randomBytes(8, function() {});",
          "35: crypto.pseudoRandomBytes(8);",
          "36: crypto.pseudoRandomBytes(8, function() {});",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: crypto.pbkdf2('password', 'salt', 8, 8, function() {});",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b17f3b80a4b96713b4a98fc85c32df44b7ba6ab",
      "candidate_info": {
        "commit_hash": "3b17f3b80a4b96713b4a98fc85c32df44b7ba6ab",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3b17f3b80a4b96713b4a98fc85c32df44b7ba6ab",
        "files": [
          "src/node_constants.cc"
        ],
        "message": "constants: add O_DIRECT\n\nThis will allow to speed up file i/o in some cases by usage of right offsets\nand buffer sizes.",
        "before_after_code_files": [
          "src/node_constants.cc||src/node_constants.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_constants.cc||src/node_constants.cc": [
          "File: src/node_constants.cc -> src/node_constants.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:   NODE_DEFINE_CONSTANT(target, O_SYMLINK);",
          "107: #endif",
          "110: #ifdef S_IRWXU",
          "111:   NODE_DEFINE_CONSTANT(target, S_IRWXU);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: #ifdef O_DIRECT",
          "110:   NODE_DEFINE_CONSTANT(target, O_DIRECT);",
          "111: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}